// Cell: dNAC222_L4_NBC_695ce74c39_0_0
/*
{
  "id" : "dNAC222_L4_NBC_695ce74c39_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-13.949, -8.42419, 0.100519, 3.62861", "-12.6535, -7.67858, 0.0948633, 5.83631", "-11.3579, -6.93297, 0.0892077, 8.55542", "-10.0624, -6.18737, 0.0835521, 10.7156", "-8.76689, -5.44176, 0.0778965, 12.4768", "-7.47135, -4.69615, 0.0722409, 13.7805", "-6.17582, -3.95054, 0.0665852, 14.7297", "-4.88029, -3.20494, 0.0609296, 15.4698", "-3.58476, -2.45933, 0.055274, 15.4283", "-2.28923, -1.71372, 0.0496184, 15.2597", "-0.993699, -0.968118, 0.0439628, 15.3383", "0.301832, -0.222511, 0.0383072, 15.1765", "1.59736, 0.523096, 0.0326516, 15.0411", "2.89289, 1.2687, 0.026996, 14.4622", "4.18843, 2.01431, 0.0213403, 13.8347", "5.48396, 2.75992, 0.0156847, 13.0717", "6.77949, 3.50552, 0.0100291, 12.0118", "8.07502, 4.25113, 0.0043735, 10.1352", "9.37055, 4.99674, -0.00128211, 7.91031", "10.6661, 5.74234, -0.00693772, 5.16328", "11.9616, 6.48795, -0.0125933, 3.54095" ]
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-10.841, -6.32175, -12.7414, 1.77", "-10.6457, -6.78138, -12.9126, 1.77", "-10.3605, -7.66301, -13.2738, 1.77", "-10.1364, -8.77234, -13.7381, 1.33", "-10.134, -8.83226, -13.7607, 1.33", "-10.2409, -10.5405, -14.3442, 0.66", "-10.3474, -11.4362, -14.6263, 0.66", "-10.5387, -12.3271, -14.893, 0.81", "-10.8169, -13.2148, -15.1424, 0.81", "-11.3658, -14.6294, -15.4712, 0.59", "-11.7291, -15.5178, -15.656, 1.33", "-11.9223, -15.9404, -15.7915, 1.69", "-12.1578, -16.447, -16.0822, 1.99", "-12.179, -16.4968, -16.1148, 1.99", "-12.4777, -17.27, -16.7191, 1.69", "-12.8072, -18.0891, -17.5417, 0.88", "-13.5827, -19.8733, -19.65, 1.84", "-13.9867, -20.7572, -20.8276, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001168102554
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-5.76104, -0.252754, 16.0186, 1.33", "-5.74412, 0.424633, 16.007, 1.33", "-5.63967, 1.75701, 15.9851, 0.88", "-5.62988, 1.82768, 15.984, 0.88", "-5.44811, 2.94355, 15.9596, 0.88", "-5.27407, 3.9957, 15.933, 0.59", "-5.14977, 4.85505, 15.9509, 0.59", "-5.11704, 5.06808, 15.9655, 0.59", "-5.04671, 5.74008, 16.0819, 0.52", "-5.02183, 6.45982, 16.2719, 1.18", "-5.08764, 7.15216, 16.5266, 1.4", "-5.32228, 8.16911, 16.9173, 1.4", "-5.35647, 8.28908, 16.9597, 1.4", "-5.73222, 9.54716, 17.3804, 1.03", "-5.75293, 9.62249, 17.4027, 1.03", "-5.9771, 10.8439, 17.7255, 1.03", "-6.12113, 12.2224, 18.032, 1.33", "-6.15574, 12.9695, 18.1657, 1.33", "-6.15762, 13.0394, 18.1797, 1.33", "-6.15313, 14.1887, 18.4192, 0.88", "-6.15374, 15.3694, 18.8802, 0.74", "-6.14495, 16.7142, 19.6568, 1.33", "-6.14267, 16.7621, 19.693, 1.33", "-6.061, 17.6914, 20.5453, 2.28", "-6.01739, 18.0316, 20.9173, 2.28", "-5.54693, 19.5992, 23.391, 0.74", "-5.50671, 19.6532, 23.5103, 0.74", "-5.04292, 19.9302, 24.3836, 0.74", "-4.6031, 20.0755, 24.9566, 0.74", "-4.56124, 20.0813, 24.9969, 0.74", "-3.4945, 20.1133, 25.7823, 0.22", "-2.58059, 20.0636, 26.0906, 0.22", "-2.49041, 20.063, 26.1245, 0.22", "-1.91448, 20.1402, 26.3921, 0.29", "-0.783154, 29.0248, 31.015, 0.29", "-1.22567, 37.1621, 36.8612, 0.29", "-2.63697, 45.7331, 41.9562, 0.29", "-2.39, 54.9221, 46.1667, 0.29", "-1.06862, 64.522, 49.1547, 0.29", "0.757736, 74.3421, 51.0069, 0.29", "2.80309, 83.7668, 54.075, 0.29", "3.9785, 92.9135, 58.1965, 0.29", "6.86186, 100.92, 63.4494, 0.29", "9.81447, 107.477, 70.2619, 0.29", "12.1044, 112.485, 78.4036, 0.29", "12.6035, 116.67, 87.2532, 0.29", "12.063, 120.235, 96.3479, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001168102554,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.18896, 8.05274, 6.69868, 0.59", "6.21155, 8.73455, 6.56495, 0.59", "6.23034, 9.59334, 6.38637, 1.25", "6.23446, 10.0502, 6.27858, 1.77", "6.22645, 10.4604, 6.18667, 2.06", "6.1857, 11.388, 6.04969, 1.69", "6.13354, 12.2729, 5.96269, 0.74", "6.12746, 12.3221, 5.96405, 0.74", "6.04287, 12.8414, 6.12701, 0.66", "5.99389, 13.2175, 6.36369, 0.66", "5.98507, 13.9034, 7.01474, 1.4", "5.98752, 13.931, 7.04536, 1.4", "6.08943, 14.566, 7.82783, 2.06", "6.19683, 15.1022, 8.50432, 2.36", "6.31936, 15.6101, 9.14412, 1.62", "6.53365, 16.3537, 10.0368, 0.88", "6.63367, 16.6863, 10.3917, 0.74", "6.85038, 17.4445, 11.0928, 0.59", "6.86215, 17.4892, 11.1238, 0.59", "6.93979, 17.9054, 11.3149, 0.59", "6.94453, 17.9672, 11.3342, 0.59", "6.92181, 18.6297, 11.4521, 1.47", "6.88123, 19.1418, 11.5272, 1.92", "6.79509, 19.7971, 11.6149, 2.36", "6.70209, 20.3145, 11.7082, 1.84", "6.43503, 21.3308, 11.9745, 0.66", "6.25291, 21.8552, 12.1585, 0.59", "6.19904, 21.9636, 12.212, 0.59", "5.90838, 22.4398, 12.5064, 0.37", "5.88586, 22.4735, 12.5327, 0.37", "5.6355, 22.8378, 12.8371, 0.37", "5.61671, 22.8674, 12.8592, 0.37", "5.36288, 23.3529, 13.1791, 1.18", "5.17375, 23.7675, 13.4205, 1.84", "4.84621, 24.5983, 13.8584, 1.03", "4.83092, 24.6399, 13.8789, 1.03", "4.71532, 25.0068, 14.0369, 1.62", "4.61971, 25.3449, 14.1544, 1.77", "4.57764, 25.5097, 14.1991, 1.77", "4.40673, 26.2054, 14.3272, 1.47", "4.30242, 26.6631, 14.3651, 0.81", "4.16562, 27.2844, 14.3971, 0.52", "4.00992, 27.9621, 14.3986, 0.52", "3.93106, 28.2737, 14.4009, 0.74", "3.91264, 28.3268, 14.4043, 0.74", "3.76968, 28.6376, 14.4487, 0.88", "3.7122, 28.7249, 14.479, 0.88", "3.46179, 29.0102, 14.6476, 0.88", "3.00635, 29.4855, 15.005, 0.44", "2.54444, 29.9847, 15.3759, 0.44", "2.5212, 30.0128, 15.3954, 0.44", "2.38042, 30.2006, 15.5224, 0.74", "2.35303, 30.2515, 15.5499, 0.74", "2.22255, 30.618, 15.6992, 0.74", "2.13436, 30.9851, 15.8006, 0.74", "2.05884, 31.4589, 15.8536, 1.03", "2.05048, 31.5145, 15.8591, 1.03", "1.93154, 32.3918, 15.9332, 1.25", "1.85155, 33.0039, 15.9771, 1.62", "1.84484, 33.06, 15.9802, 1.62", "1.71543, 34.351, 16.0014, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001168102554
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-13.571, -2.24776, -0.0513216, 0.37", "-13.8657, -1.83925, -0.0884216, 0.37", "-14.1434, -1.31921, -0.178054, 0.29", "-14.3861, -0.778331, -0.282249, 0.74", "-14.6318, -0.115045, -0.422341, 1.03", "-14.8332, 0.492662, -0.562436, 0.29", "-15.0291, 1.21274, -0.77204, 0.22", "-15.1768, 2.18744, -1.20775, 1.11", "-15.2024, 2.48529, -1.37328, 1.33", "-15.241, 2.96137, -1.67753, 1.33", "-15.2544, 3.08184, -1.76138, 1.33", "-15.4069, 3.93396, -2.36831, 1.03", "-15.7256, 5.15306, -3.24868, 0.37", "-15.9031, 5.69174, -3.61308, 0.37", "-16.1722, 6.53676, -4.14276, 0.96", "-16.2755, 6.88958, -4.34409, 1.18", "-16.414, 7.41688, -4.6099, 0.96", "-16.5702, 8.18897, -4.97087, 0.52", "-16.624, 9.09551, -5.41189, 0.37", "-16.5448, 10.047, -6.00638, 1.03", "-16.4851, 10.412, -6.25999, 1.18", "-16.4756, 10.475, -6.30708, 1.18", "-16.3497, 11.4705, -7.07201, 0.81", "-16.29, 12.3113, -7.77415, 0.29", "-16.316, 13.2085, -8.70139, 0.22", "-16.3548, 13.6138, -9.13886, 0.22", "-16.4504, 14.4549, -10.0403, 0.96", "-16.4948, 14.8089, -10.421, 1.55", "-16.676, 15.8247, -11.5385, 1.55", "-17.138, 17.929, -13.803, 0.37", "-17.276, 18.4984, -14.3821, 0.22", "-17.681, 20.095, -15.93, 2.14", "-17.8634, 20.772, -16.5481, 2.87", "-18.7576, 23.8235, -19.0885, 0.29", "-19.0781, 24.8158, -19.8041, 0.29", "-19.4614, 25.8824, -20.4382, 0.22", "-19.6665, 26.4188, -20.7236, 0.81", "-19.804, 26.7774, -20.8794, 0.81", "-20.2085, 27.9325, -21.2954, 0.15", "-20.2309, 28.0066, -21.3163, 0.15", "-20.4976, 29.0541, -21.6762, 0.81", "-20.6573, 29.7446, -21.936, 1.55", "-21.2902, 32.3648, -22.93, 0.22", "-21.6491, 33.831, -23.5057, 1.99", "-21.8387, 34.5912, -23.8063, 2.87", "-22.4403, 37.0241, -24.8436, 0.22", "-22.4576, 37.0954, -24.8751, 0.22", "-22.7511, 38.3074, -25.4289, 0.22", "-23.0234, 39.4786, -25.9571, 0.81", "-23.1399, 40.0055, -26.2152, 1.03", "-23.6444, 42.2555, -27.3896, 0.22", "-23.8074, 42.9797, -27.772, 0.22", "-23.9856, 43.9009, -28.2827, 0.66", "-24.0075, 44.0385, -28.36, 0.66", "-24.1886, 45.1891, -28.997, 0.22", "-24.3768, 46.3529, -29.6299, 1.77", "-24.4489, 46.8188, -29.8645, 2.36", "-24.8146, 49.1335, -30.9794, 0.15", "-24.9232, 49.8115, -31.277, 0.15", "-25.0776, 50.7297, -31.6494, 1.11", "-25.1865, 51.3454, -31.9073, 1.4", "-25.4414, 52.7126, -32.5054, 0.22", "-25.5717, 53.3781, -32.8026, 0.22", "-25.8082, 54.4245, -33.2649, 1.03", "-25.9207, 54.8907, -33.4905, 1.18", "-26.4123, 56.8697, -34.472, 0.15", "-26.5467, 57.4065, -34.7526, 0.88", "-26.6502, 57.773, -34.9487, 0.88", "-27.0805, 59.2895, -35.7378, 0.22", "-27.514, 60.8028, -36.4672, 1.18", "-27.6392, 61.2437, -36.664, 1.77", "-27.8152, 61.8645, -36.9238, 1.4", "-28.365, 63.7731, -37.7524, 0.15", "-28.5576, 64.4393, -38.0452, 0.15", "-28.9567, 65.8738, -38.6665, 1.69", "-29.1382, 66.5356, -38.9423, 1.77", "-29.6794, 68.4966, -39.7807, 0.15", "-29.7531, 68.7602, -39.8972, 0.29", "-29.8362, 69.0577, -40.0434, 0.15", "-29.9038, 69.2717, -40.154, 0.29", "-30.1067, 69.8104, -40.4143, 0.22", "-30.4976, 70.75, -40.7951, 1.25", "-30.7542, 71.3555, -40.9935, 1.4", "-31.318, 72.7607, -41.5739, 0.15", "-31.6281, 73.5583, -41.941, 0.44", "-32.0864, 74.7635, -42.5346, 0.22", "-32.4459, 75.7454, -43.0344, 1.03", "-32.7164, 76.4965, -43.4734, 1.4", "-33.6112, 78.9792, -45.0834, 0.22", "-33.8973, 79.7662, -45.64, 0.22", "-34.0785, 80.2651, -46.0262, 0.81", "-34.1656, 80.5066, -46.2285, 0.96", "-34.8326, 82.0786, -47.6174, 0.15", "-35.1976, 82.7947, -48.2509, 0.15", "-35.7372, 83.7077, -48.9864, 1.33", "-35.8688, 83.9103, -49.1624, 1.69", "-35.907, 83.9624, -49.207, 1.69", "-37.3158, 85.7082, -50.6221, 0.15", "-37.9028, 86.3859, -51.1302, 0.74", "-38.1093, 86.6066, -51.3033, 0.96", "-39.1922, 87.6726, -52.1356, 0.15", "-40.1631, 88.5958, -52.8351, 0.15", "-40.7031, 89.0901, -53.1914, 1.03", "-41.104, 89.4422, -53.4191, 1.4", "-42.4082, 90.5864, -54.1472, 0.15", "-43.2434, 91.329, -54.6026, 0.15", "-43.345, 91.4198, -54.6534, 0.15", "-44.3635, 92.32, -55.1718, 1.55", "-44.7827, 92.6815, -55.373, 2.28", "-46.5902, 94.2098, -56.159, 0.22", "-47.1523, 94.6734, -56.3766, 0.59", "-47.8199, 95.209, -56.6077, 0.15", "-48.2651, 95.5423, -56.7303, 0.15", "-48.6975, 95.84, -56.8103, 0.52", "-48.7903, 95.8986, -56.8213, 0.52", "-49.731, 96.4383, -56.8445, 0.15", "-50.3433, 96.7763, -56.8552, 0.52", "-51.2584, 97.2691, -56.8653, 0.22", "-52.231, 97.8106, -56.883, 1.03", "-52.7701, 98.1108, -56.8908, 1.55", "-54.1811, 98.9068, -56.9009, 0.15", "-54.7786, 99.2512, -56.8924, 1.18", "-55.2138, 99.5102, -56.8814, 1.4", "-56.4877, 100.233, -56.9268, 0.15", "-57.2431, 100.628, -56.9873, 0.15", "-57.3024, 100.658, -56.9936, 0.15", "-57.7465, 100.858, -57.0351, 0.81", "-58.4206, 101.14, -57.0849, 0.81", "-60.2646, 101.821, -57.0499, 0.15", "-61.653, 102.273, -56.9347, 0.15", "-61.8521, 102.337, -56.9078, 0.15", "-63.3688, 102.866, -56.5309, 1.55", "-63.8012, 103.026, -56.3771, 1.84", "-65.5725, 103.753, -55.3997, 0.22", "-65.6284, 103.78, -55.3536, 0.22", "-66.2291, 104.097, -54.757, 0.96", "-67.3888, 104.804, -53.4579, 0.15", "-67.4233, 104.831, -53.4079, 0.15", "-68.3381, 105.691, -51.8429, 0.52", "-68.9775, 106.449, -50.5302, 0.22", "-69.0014, 106.482, -50.4773, 0.22", "-69.3284, 107.052, -49.7198, 1.25", "-70.0785, 108.659, -48.0955, 0.15", "-70.1001, 108.71, -48.0568, 0.15", "-70.3335, 109.355, -47.7424, 0.88", "-70.6358, 110.102, -47.5144, 1.11", "-71.3207, 111.586, -47.2009, 0.15", "-71.7351, 112.342, -47.1198, 0.15", "-72.2565, 113.133, -47.1098, 0.81", "-72.4263, 113.335, -47.0967, 0.81", "-73.2838, 114.159, -46.9926, 0.15", "-73.7805, 114.55, -46.895, 0.74", "-74.534, 115.035, -46.6988, 0.15", "-75.0239, 115.325, -46.6087, 0.44", "-76.4943, 116.118, -46.457, 0.22", "-76.5534, 116.149, -46.4547, 0.22", "-77.0587, 116.409, -46.4854, 1.03", "-77.7418, 116.775, -46.5778, 1.4", "-79.331, 117.726, -47.01, 0.22", "-80.4013, 118.437, -47.4316, 0.22", "-81.0921, 118.95, -47.8101, 0.22", "-81.7089, 119.444, -48.1903, 0.74", "-82.1753, 119.841, -48.5001, 0.96", "-83.0216, 120.62, -49.0904, 0.96", "-83.0635, 120.664, -49.1197, 0.96", "-84.0847, 121.875, -49.909, 0.15", "-84.2892, 122.127, -50.1651, 0.37", "-84.602, 122.514, -50.639, 0.15", "-84.6691, 122.586, -50.7294, 0.15", "-85.27, 123.182, -51.4157, 1.33", "-85.645, 123.543, -51.8722, 1.62", "-87.9703, 125.673, -54.694, 0.22", "-88.0077, 125.705, -54.7391, 0.22", "-89.6027, 127.006, -56.6207, 0.22", "-90.3433, 127.589, -57.4668, 1.4", "-92.7482, 129.41, -60.1164, 0.22", "-93.2877, 129.81, -60.6873, 1.03", "-95.3589, 131.305, -62.6237, 0.15", "-95.7939, 131.619, -63.0608, 0.88", "-96.1032, 131.844, -63.4354, 0.88", "-96.1863, 131.9, -63.539, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001168102554,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-12.751, -9.09375, -2.92132, 0.59", "-12.751, -9.09375, -2.92132, 0.59", "-12.6336, -9.74515, -2.82197, 0.59", "-12.4949, -10.439, -2.708, 0.81", "-12.3686, -10.9889, -2.61822, 0.81", "-12.216, -11.5697, -2.52729, 0.81", "-11.9637, -12.3672, -2.41113, 0.74", "-11.7277, -12.9691, -2.33054, 0.44", "-11.6694, -13.0921, -2.31457, 0.44", "-11.3809, -13.6457, -2.27838, 1.11", "-11.109, -14.1446, -2.27212, 1.4", "-10.6834, -14.8782, -2.34606, 0.88", "-10.1414, -15.7693, -2.53589, 0.59", "-9.80188, -16.3175, -2.68117, 0.52", "-9.17035, -17.2993, -3.0189, 1.47", "-8.94593, -17.6314, -3.15415, 2.14", "-8.27799, -18.5701, -3.60386, 2.5", "-7.82909, -19.1734, -3.91695, 1.92", "-7.39536, -19.7562, -4.21724, 1.47", "-6.72397, -20.6827, -4.62877, 1.11", "-6.3515, -21.2166, -4.81842, 1.25", "-5.85542, -21.9748, -5.02749, 1.03", "-5.35766, -22.8156, -5.16747, 0.37", "-4.89487, -23.6583, -5.27914, 0.37", "-4.50656, -24.3781, -5.36657, 0.22", "-4.20551, -24.953, -5.41841, 1.25", "-3.98009, -25.3794, -5.46481, 2.06", "-3.67687, -25.9547, -5.54357, 2.65", "-3.11469, -26.9956, -5.73545, 1.62", "-2.61665, -27.8769, -5.93489, 0.74", "-2.32123, -28.4078, -6.07441, 0.81", "-1.95796, -29.1203, -6.25347, 0.81", "-1.6271, -29.9144, -6.46545, 0.44", "-1.42304, -30.6007, -6.64726, 0.29", "-1.40221, -30.7354, -6.68494, 0.29", "-1.4011, -31.0126, -6.79584, 0.22", "-1.43118, -31.4817, -7.01984, 0.22", "-1.5218, -32.4301, -7.50822, 1.55", "-1.55389, -32.8534, -7.73715, 2.36", "-1.58951, -33.5583, -8.10937, 2.65", "-1.61576, -35.1675, -8.92758, 0.22", "-1.61203, -35.4958, -9.08493, 0.44", "-1.59653, -35.849, -9.23791, 0.44", "-1.57063, -36.4657, -9.46737, 0.22", "-1.53755, -37.2787, -9.71651, 0.22", "-1.5211, -37.9258, -9.84248, 0.22", "-1.5062, -38.5338, -9.91354, 1.62", "-1.49754, -39.3774, -10.0022, 2.65", "-1.49728, -39.6802, -10.0293, 2.95", "-1.49199, -40.2887, -10.0702, 2.95", "-1.43986, -41.891, -10.161, 0.66", "-1.40361, -42.7594, -10.1961, 0.22", "-1.38994, -43.1311, -10.2111, 0.74", "-1.37728, -43.5747, -10.2278, 0.74", "-1.34808, -44.2541, -10.232, 0.22", "-1.33243, -44.5617, -10.2224, 0.52", "-1.31354, -44.82, -10.2013, 0.52", "-1.25551, -45.5667, -10.0908, 0.15", "-1.21428, -46.0401, -9.98485, 0.15", "-1.13673, -46.7592, -9.80186, 1.25", "-1.07366, -47.2844, -9.66931, 2.06", "-1.01505, -47.7383, -9.56128, 2.28", "-0.867975, -48.7679, -9.33379, 1.77", "-0.657063, -50.1626, -9.04969, 0.29", "-0.50847, -51.1589, -8.87191, 0.29", "-0.367252, -52.0582, -8.75866, 0.29", "-0.236458, -52.8391, -8.69123, 1.33", "-0.119607, -53.5157, -8.66025, 1.99", "0.022948, -54.2389, -8.66703, 2.8", "0.16391, -54.8514, -8.69682, 2.8", "0.468105, -56.0126, -8.74964, 1.03", "0.765904, -56.9883, -8.78698, 0.44", "0.787018, -57.0513, -8.78897, 0.44", "1.0119, -57.7053, -8.80299, 0.37", "1.21263, -58.3351, -8.79706, 0.29", "1.37174, -58.8922, -8.7738, 1.25", "1.4812, -59.3405, -8.7406, 1.62", "1.72815, -60.4375, -8.65066, 0.29", "1.90497, -61.3023, -8.59916, 0.29", "2.07688, -62.2194, -8.55991, 0.22", "2.21186, -62.8841, -8.53653, 0.81", "2.31085, -63.2974, -8.53004, 1.4", "2.48661, -63.9359, -8.52976, 0.74", "2.8181, -65.0046, -8.5482, 0.15", "3.07839, -65.8126, -8.57298, 0.15", "3.28574, -66.4869, -8.60319, 1.03", "3.44972, -67.1126, -8.62687, 1.99", "3.57647, -67.7207, -8.64366, 1.92", "3.69277, -68.5668, -8.65243, 0.88", "3.75601, -69.4205, -8.64125, 0.15", "3.75745, -70.0355, -8.63407, 0.15", "3.72344, -70.6444, -8.62793, 0.15", "3.70528, -71.1941, -8.58778, 1.11", "3.72057, -71.7447, -8.52613, 1.84", "3.74312, -71.9901, -8.49112, 2.14", "3.75435, -72.0467, -8.48258, 2.14", "3.8943, -72.5287, -8.39551, 2.14", "4.45167, -74.1735, -8.06904, 0.15", "4.65995, -74.7507, -7.95174, 0.74", "4.76428, -75.0247, -7.8957, 0.74", "5.15743, -76.063, -7.66599, 0.22", "5.47829, -76.9536, -7.45293, 1.18", "5.58681, -77.3005, -7.35058, 1.69", "5.71428, -77.8067, -7.18537, 1.69", "5.73647, -77.9142, -7.14737, 1.69", "5.95805, -79.2467, -6.67499, 0.15", "6.07113, -80.1668, -6.34458, 0.74", "6.19523, -81.4283, -5.92105, 0.15", "6.26238, -82.1672, -5.67749, 0.74", "6.30347, -82.6243, -5.52924, 0.74", "6.3829, -83.5812, -5.23582, 0.44", "6.38807, -83.6453, -5.21843, 0.44", "6.53887, -84.5994, -5.01423, 0.88", "6.68572, -85.1015, -4.93992, 1.92", "6.9034, -85.6193, -4.86898, 2.43", "6.93032, -85.6701, -4.86248, 2.43", "7.06165, -85.8765, -4.84017, 2.43", "7.859, -87.0025, -4.747, 0.22", "8.33376, -87.6067, -4.71087, 0.22", "8.6114, -87.9848, -4.69564, 0.66", "8.64819, -88.0393, -4.69382, 0.66", "8.87697, -88.4359, -4.67455, 0.74", "8.9054, -88.4955, -4.67054, 0.74", "9.17567, -89.2839, -4.59893, 0.22", "9.38145, -89.9261, -4.54335, 0.22", "9.40066, -89.9807, -4.53758, 0.22", "9.71232, -90.7294, -4.45087, 1.11", "9.73481, -90.7825, -4.44446, 1.11", "9.97335, -91.3328, -4.37779, 1.77", "10.1003, -91.6364, -4.34276, 1.77", "10.4535, -92.5377, -4.23549, 0.29", "10.6884, -93.2397, -4.15445, 0.29", "10.8832, -93.9672, -4.08047, 0.22", "10.898, -94.0318, -4.07374, 0.22", "11.0058, -94.5989, -4.01624, 0.22", "11.058, -94.8991, -3.9889, 0.88", "11.1127, -95.2071, -3.94721, 0.88", "11.3272, -96.3195, -3.74419, 0.15", "11.4464, -96.8778, -3.62077, 1.03", "11.5551, -97.3682, -3.50334, 1.4", "11.6719, -97.902, -3.36866, 1.4", "11.9385, -99.2492, -3.02235, 0.29", "11.9454, -99.2974, -3.01091, 0.29", "12.0271, -100.206, -2.81822, 0.29", "12.0575, -100.726, -2.72725, 1.03", "12.0799, -101.274, -2.64662, 1.4", "12.091, -101.573, -2.6126, 1.47", "12.1352, -102.719, -2.52923, 0.22", "12.1544, -103.216, -2.4778, 0.29", "12.1575, -103.274, -2.4684, 0.29", "12.1682, -103.471, -2.42314, 0.29", "12.2157, -104.024, -2.26343, 0.22", "12.2647, -104.443, -2.12392, 0.52", "12.3332, -104.849, -1.97945, 0.52", "12.4909, -105.761, -1.69725, 0.22", "12.5016, -105.824, -1.68131, 0.22", "12.578, -106.311, -1.58576, 1.25", "12.6466, -106.755, -1.51978, 2.14", "12.7809, -107.635, -1.42231, 2.14", "12.9481, -108.692, -1.33084, 0.44", "13.0654, -109.603, -1.26903, 0.37", "13.1497, -110.393, -1.22063, 0.22", "13.1815, -110.817, -1.19879, 0.22", "13.2161, -111.492, -1.17039, 0.81", "13.2314, -111.936, -1.1569, 1.11", "13.2773, -113.169, -1.131, 0.22", "13.2811, -113.236, -1.1295, 0.22", "13.3941, -114.08, -1.11064, 0.22", "13.4213, -114.202, -1.10808, 0.22", "13.559, -114.675, -1.09922, 1.11", "13.7101, -115.119, -1.09217, 1.18", "13.7297, -115.174, -1.09148, 1.18", "14.138, -116.501, -1.05298, 0.22", "14.3295, -117.209, -1.02555, 0.22", "14.4858, -117.867, -0.99618, 1.25", "14.6536, -118.68, -0.955638, 1.62", "14.8995, -120.002, -0.884263, 0.22", "15.0561, -120.971, -0.810856, 0.22", "15.1058, -121.395, -0.767766, 0.44", "15.1124, -121.453, -0.760941, 0.44", "15.1263, -121.576, -0.74551, 0.44", "15.2035, -122.302, -0.655591, 0.15", "15.279, -122.942, -0.582934, 0.88", "15.3269, -123.309, -0.547891, 1.18", "15.4892, -124.488, -0.39898, 0.22", "15.6321, -125.437, -0.25994, 0.88", "15.7203, -125.974, -0.176899, 1.25", "15.8028, -126.466, -0.100047, 1.47", "15.8118, -126.523, -0.0916757, 1.47", "16.0543, -128.104, 0.152292, 0.22", "16.2041, -129.114, 0.315588, 0.15", "16.3052, -129.798, 0.424564, 1.18", "16.3853, -130.329, 0.501147, 1.62", "16.5943, -131.662, 0.668441, 0.22", "16.7466, -132.579, 0.762729, 0.22", "16.88, -133.444, 0.8275, 1.03", "16.9439, -133.863, 0.859065, 1.25", "17.1259, -135.029, 0.951057, 0.15", "17.2311, -135.645, 1.00449, 0.59", "17.2796, -135.905, 1.0281, 0.59", "17.4195, -136.802, 1.11039, 0.22", "17.4267, -136.859, 1.11811, 0.22", "17.4821, -137.399, 1.20969, 0.22", "17.5054, -137.743, 1.27904, 1.03", "17.5471, -138.141, 1.42041, 1.18", "17.6199, -138.757, 1.65661, 0.29", "17.7872, -139.792, 2.09648, 0.22", "17.8563, -140.185, 2.2779, 0.59", "17.8679, -140.242, 2.30857, 0.59", "18.2339, -141.826, 3.2728, 0.22", "19.5657, -149.87, 4.97287, 0.22", "22.2109, -157.508, 6.8264, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001168102554,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-8.74104, 2.60324, 1.32868, 1.25", "-8.74104, 2.60324, 1.32868, 1.25", "-8.80537, 3.18202, 1.32432, 0.96", "-8.81343, 3.26605, 1.32347, 0.96", "-8.86235, 3.9028, 1.31665, 0.96", "-8.89588, 4.91255, 1.26376, 1.25", "-8.89545, 5.55685, 1.21873, 1.84", "-8.86603, 6.13472, 1.15966, 2.5", "-8.81842, 6.58895, 1.10274, 2.95", "-8.72706, 7.16511, 1.01422, 2.43", "-8.43569, 8.44934, 0.766603, 1.03", "-8.27197, 9.01693, 0.638246, 1.03", "-7.93929, 10.0288, 0.387238, 1.03", "-7.80357, 10.4056, 0.28929, 1.69", "-7.52221, 11.131, 0.0901808, 2.43", "-7.20269, 11.8892, -0.127842, 2.73", "-7.18013, 11.9374, -0.141512, 2.73", "-7.09127, 12.118, -0.197623, 3.02", "-6.91077, 12.4671, -0.306016, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001168102554
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "11.199, 7.89525, 0.198678, 1.69", "11.7418, 8.00757, 0.164539, 1.69", "12.8363, 8.27939, 0.0816983, 1.55", "12.9002, 8.29581, 0.0811412, 1.55", "13.5608, 8.45228, 0.0936137, 1.55", "13.6645, 8.47684, 0.0955711, 1.55", "15.1759, 8.83484, 0.124107, 1.62", "15.8359, 8.99494, 0.140938, 2.28", "17.1151, 9.29666, 0.18649, 3.02", "18.1252, 9.52119, 0.231452, 3.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001168102554
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-14.531, -7.81276, -1.49132, 2.14", "-14.531, -7.81276, -1.49132, 2.14", "-15.7227, -9.20598, -0.976496, 1.92", "-16.8785, -10.5572, -0.477174, 1.92", "-18.0193, -11.8909, 0.0156517, 2.21", "-18.9078, -12.9297, 0.399498, 2.73", "-19.7769, -13.9457, 0.774955, 3.24", "-20.1558, -14.3849, 0.948534, 3.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001168102554
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "11.9616, 6.48795, -0.0125933, 0.663188", "24.9623, 13.9701, -0.0125933, 0.663188", "37.9629, 21.4523, -0.0125933, 0.663188" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-13.9867, -20.7572, -20.8276, 0.59", "-13.8992, -24.2034, -23.3257, 0.59", "-13.8993, -24.8938, -23.8235, 0.59", "-13.9355, -26.4112, -24.8806, 0.37", "-13.9531, -27.5141, -25.6375, 0.37", "-13.9345, -28.7431, -26.5266, 1.55", "-13.9197, -29.0398, -26.7419, 1.84", "-13.7074, -31.0687, -28.2221, 0.22", "-13.4097, -32.4506, -29.3732, 1.77", "-13.1176, -33.3492, -30.1868, 2.06", "-12.1876, -35.4341, -32.2419, 0.22", "-11.8573, -36.0449, -32.879, 0.22", "-11.1841, -37.133, -34.1583, 1.92", "-10.0862, -38.7003, -36.1448, 0.22", "-10.0373, -38.7699, -36.2401, 0.22", "-9.58843, -39.5007, -37.2885, 1.69", "-9.09965, -40.5352, -38.8243, 1.62", "-8.62439, -42.0545, -41.031, 0.52", "-8.53259, -42.5746, -41.7409, 0.52", "-8.40455, -43.6475, -43.2016, 1.62", "-8.30349, -44.6251, -44.5517, 1.4", "-8.13422, -45.9577, -46.4625, 0.22", "-8.02726, -46.6021, -47.3655, 1.77", "-7.98186, -46.8188, -47.649, 2.06", "-7.32115, -49.4834, -50.9959, 0.37", "-6.97936, -50.612, -52.3331, 1.62", "-6.03716, -53.3032, -55.3292, 0.22", "-5.72719, -54.1047, -56.1743, 0.22", "-5.29289, -55.1022, -57.2092, 1.62", "-5.12145, -55.4705, -57.5642, 1.92", "-3.84479, -58.124, -59.8199, 0.22", "-3.48147, -58.8513, -60.4352, 1.18", "-3.3143, -59.1951, -60.7148, 1.4", "-2.27061, -61.4739, -62.6718, 0.22", "-2.01342, -62.1286, -63.2205, 0.88", "-1.61059, -63.4172, -64.2269, 0.22", "-1.35631, -64.6646, -65.0644, 1.62", "-1.25423, -65.5077, -65.6102, 2.43", "-1.15047, -68.2274, -67.2395, 0.22", "-1.25365, -69.7319, -68.008, 0.22", "-1.38828, -70.6003, -68.4142, 0.81", "-1.7044, -71.941, -68.9305, 0.22", "-1.94691, -72.6685, -69.1624, 0.96", "-2.18213, -73.1766, -69.3125, 0.96", "-2.8386, -74.1804, -69.538, 0.22", "-3.67547, -75.3044, -69.8068, 0.22", "-4.13058, -75.8941, -69.9536, 1.03", "-4.52062, -76.383, -70.0881, 1.03", "-5.37142, -77.4514, -70.373, 0.15", "-6.08895, -78.3469, -70.6325, 0.15", "-6.43428, -78.7748, -70.7642, 0.44", "-6.73249, -79.2041, -70.8963, 0.59", "-7.56915, -80.5354, -71.2754, 0.15", "-7.937, -81.2106, -71.4384, 1.03", "-7.97316, -81.2878, -71.453, 1.03", "-8.13679, -81.6968, -71.5199, 1.03", "-8.72175, -83.3538, -71.7485, 0.15", "-8.96184, -84.1286, -71.8372, 1.18", "-9.15153, -84.8446, -71.9124, 1.62", "-9.1948, -85.0247, -71.9339, 1.62", "-9.30296, -85.4638, -71.9901, 1.25", "-9.78031, -87.3868, -72.2793, 0.15", "-9.97094, -88.1783, -72.409, 0.15", "-10.1353, -88.9209, -72.5417, 0.96", "-10.2677, -89.5304, -72.6528, 0.96", "-10.5691, -91.0172, -72.8721, 0.15", "-10.7732, -92.1935, -72.9509, 1.03", "-10.8562, -92.7353, -72.9567, 1.03", "-11.3512, -96.2882, -72.7964, 0.15", "-11.5026, -97.4992, -72.6834, 1.18", "-11.6222, -98.8202, -72.468, 1.47", "-11.7703, -101.943, -71.7618, 0.15", "-11.7717, -102.027, -71.7386, 0.15", "-11.7473, -103.266, -71.3519, 0.96", "-11.7113, -103.779, -71.17, 1.4", "-11.4085, -106.864, -70.1353, 0.15", "-11.2873, -107.813, -69.872, 0.22", "-11.2018, -108.338, -69.7483, 0.52", "-10.9344, -109.868, -69.4356, 0.22", "-10.7295, -110.857, -69.277, 1.33", "-10.641, -111.25, -69.228, 1.33", "-10.2348, -112.956, -69.1331, 0.15", "-10.217, -113.042, -69.1287, 0.15", "-10.0908, -113.756, -69.0907, 0.52", "-9.97044, -114.653, -69.047, 0.22", "-9.91184, -115.291, -69.0166, 1.03", "-9.90614, -115.839, -68.9934, 1.03", "-9.98834, -117.492, -68.9286, 0.22", "-10.0881, -118.673, -68.8858, 0.15", "-10.165, -119.308, -68.8647, 0.88", "-10.2694, -120.035, -68.8427, 1.11", "-10.6275, -122.44, -68.7755, 0.15", "-10.6401, -122.527, -68.7733, 0.15", "-10.7443, -123.351, -68.7622, 0.66", "-10.8285, -124.169, -68.7572, 0.81", "-10.9394, -125.635, -68.7512, 0.15", "-10.9604, -126.394, -68.7496, 0.52", "-10.9579, -126.686, -68.7489, 0.52", "-10.9449, -127.924, -68.7449, 0.15", "-10.9374, -128.738, -68.7204, 0.81", "-10.9351, -129.472, -68.6823, 1.03", "-10.9452, -131.579, -68.5328, 0.15", "-10.9318, -133.226, -68.3675, 0.15", "-10.9301, -133.312, -68.3571, 0.15", "-10.8911, -134.672, -68.1668, 0.96", "-10.8593, -135.391, -68.0597, 1.4", "-10.8315, -135.747, -68.0074, 1.4", "-10.5001, -138.522, -67.6177, 0.15", "-10.3155, -139.475, -67.5157, 0.44", "-10.1877, -140.002, -67.4552, 0.44", "-10.1544, -140.12, -67.442, 0.44", "-9.68214, -141.507, -67.2389, 0.15", "-9.34815, -142.374, -67.0831, 1.18", "-8.48543, -144.408, -66.7075, 0.15", "-7.71845, -146.164, -66.3717, 0.74", "-7.66528, -146.281, -66.3488, 0.74", "-6.74463, -148.251, -65.99, 0.15", "-6.64428, -148.459, -65.9546, 0.15", "-6.13973, -149.574, -65.8929, 1.25", "-6.10505, -149.665, -65.9037, 1.25", "-5.93302, -150.193, -66.0368, 1.25", "-5.66363, -151.537, -66.5619, 0.15", "-5.60465, -152.365, -66.9981, 0.74", "-5.81802, -154.367, -68.2882, 0.15", "-6.09641, -155.553, -69.1346, 1.18", "-6.16155, -155.761, -69.2916, 1.33", "-7.02892, -157.943, -70.995, 0.22", "-7.39553, -158.697, -71.5998, 0.88", "-9.01221, -161.663, -73.9277, 0.15", "-9.55015, -162.55, -74.595, 1.03", "-9.6793, -162.77, -74.7157, 1.03", "-10.14, -163.623, -74.9666, 0.15", "-10.6182, -164.631, -74.9349, 0.81", "-11.0712, -165.728, -74.6051, 0.52", "-11.098, -165.801, -74.5689, 0.52", "-12.2919, -169.241, -72.472, 0.15", "-12.6939, -170.373, -71.5385, 1.18", "-12.8488, -170.808, -71.1074, 1.33", "-13.3811, -172.172, -69.4139, 0.15", "-13.6708, -172.788, -68.4757, 1.33", "-14.5816, -174.157, -65.6884, 0.22", "-15.9632, -175.318, -61.7144, 0.59", "-16.0158, -175.341, -61.5709, 0.59", "-17.0228, -175.356, -58.994, 0.88", "-17.6023, -175.123, -57.6212, 0.15", "-18.6299, -174.357, -55.4561, 0.15", "-18.919, -174.031, -54.9806, 0.59", "-19.028, -173.88, -54.8435, 0.59", "-19.7222, -172.863, -54.0296, 0.15", "-19.7577, -172.812, -53.9919, 0.15", "-20.3, -172.089, -53.3726, 0.44", "-20.9119, -171.375, -52.7425, 0.15", "-21.6486, -170.549, -52.0031, 0.81", "-21.69, -170.505, -51.9634, 0.81", "-23.2709, -168.94, -50.5487, 0.15", "-23.3148, -168.899, -50.5086, 0.15", "-24.0016, -168.357, -49.8446, 0.52" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-13.9867, -20.7572, -20.8276, 0.22", "-14.5567, -20.7317, -22.71, 0.22", "-15.1137, -20.6045, -24.4655, 1.55", "-15.4631, -20.4793, -25.611, 2.28", "-16.0346, -20.1907, -27.4848, 2.5", "-16.5163, -19.9053, -29.0698, 0.52", "-16.6813, -19.7806, -29.6883, 0.52", "-17.0188, -19.3491, -31.2002, 1.84", "-17.1858, -19.059, -32.0111, 2.5", "-17.3423, -18.7504, -32.7206, 2.73", "-17.3608, -18.7084, -32.8117, 2.73", "-17.7804, -17.3423, -35.5408, 0.29", "-17.8258, -17.1248, -35.9709, 0.29", "-17.8961, -16.6534, -36.8503, 1.84", "-17.9327, -16.3695, -37.3245, 2.36", "-18.0961, -14.8297, -39.7025, 1.03", "-18.1324, -14.4196, -40.2429, 1.18", "-18.2148, -12.9889, -41.7888, 0.29", "-18.2257, -12.5683, -42.2177, 0.22", "-18.2195, -11.6318, -43.0921, 1.62", "-18.195, -10.8713, -43.701, 2.43", "-18.1375, -9.23758, -44.7387, 0.22", "-18.1102, -8.56702, -45.1485, 0.81", "-18.062, -7.78409, -45.6302, 0.88", "-17.9821, -6.94478, -46.1597, 0.22", "-17.8396, -5.82719, -46.8299, 2.06", "-17.7606, -5.27025, -47.1486, 2.43", "-17.7378, -5.12977, -47.234, 2.43", "-17.4105, -3.1214, -48.6014, 0.29", "-17.2313, -2.09821, -49.3338, 0.44", "-17.0917, -1.27866, -49.9508, 0.22", "-17.0823, -1.22463, -49.9934, 0.22", "-16.8033, 0.453918, -51.3092, 0.44", "-16.6517, 1.53139, -52.2698, 0.22", "-16.5387, 2.54035, -53.272, 1.77", "-16.505, 2.85659, -53.6255, 2.14", "-16.5018, 2.88974, -53.6649, 2.14", "-16.4776, 3.23711, -54.0844, 2.28", "-16.4626, 5.62184, -56.9576, 0.22", "-16.465, 5.67172, -57.0192, 0.22", "-16.5303, 6.30879, -57.813, 0.22", "-16.5343, 6.34108, -57.853, 0.22", "-16.6315, 7.07945, -58.7263, 1.11", "-16.6996, 7.53424, -59.2083, 1.55", "-16.9909, 9.03599, -60.4355, 0.22", "-17.0573, 9.41811, -60.723, 0.52", "-17.1193, 9.82289, -61.0036, 0.59", "-17.2051, 10.4463, -61.3931, 0.22", "-17.2979, 11.1606, -61.849, 1.4", "-17.3379, 11.4861, -62.0601, 1.4", "-17.536, 12.949, -62.9774, 0.22", "-17.6894, 13.9487, -63.622, 1.55", "-17.7309, 14.1817, -63.7797, 1.84", "-18.0829, 15.854, -64.965, 0.22", "-18.1661, 16.2118, -65.238, 0.22", "-18.3218, 16.7869, -65.7113, 0.15", "-18.4297, 17.1367, -65.9877, 0.44", "-18.6532, 17.8661, -66.5393, 0.29", "-18.8572, 18.539, -67.0126, 1.33", "-19.1027, 19.4151, -67.6029, 1.69", "-19.5804, 21.3311, -68.9008, 0.22", "-19.8377, 22.4718, -69.678, 0.22", "-20.0492, 23.7001, -70.5461, 1.25", "-20.1202, 24.2327, -70.9269, 1.62", "-20.2639, 25.7996, -72.068, 0.22", "-20.3091, 26.7995, -72.7816, 1.47", "-20.3051, 27.5794, -73.3375, 1.99", "-20.2169, 29.6725, -74.8816, 0.22", "-20.2137, 29.715, -74.9119, 0.22", "-20.153, 30.3042, -75.3154, 0.59", "-20.0454, 31.0438, -75.7912, 0.22", "-20.036, 31.0947, -75.8236, 0.22", "-19.9194, 31.5849, -76.1122, 0.22", "-19.5175, 32.8422, -76.856, 1.55", "-19.3664, 33.2513, -77.1111, 1.55", "-18.819, 34.4315, -78.0088, 0.15", "-18.7873, 34.4931, -78.0591, 0.15", "-18.5004, 35.0152, -78.5055, 0.15", "-17.8518, 36.0817, -79.5085, 1.4", "-17.6833, 36.3239, -79.7458, 1.62", "-16.5973, 37.7901, -81.159, 0.22", "-16.2214, 38.2761, -81.6089, 0.22", "-15.505, 39.1496, -82.3829, 1.4", "-14.9626, 39.7787, -82.9114, 1.18", "-13.971, 40.8781, -83.7443, 0.15", "-13.5016, 41.3637, -84.1161, 0.96", "-13.2856, 41.5757, -84.2715, 0.96", "-12.0502, 42.69, -85.1379, 0.22", "-11.347, 43.3145, -85.6253, 1.47", "-10.9764, 43.6486, -85.8945, 1.77", "-9.60994, 44.8591, -87.0337, 0.22", "-9.57272, 44.8912, -87.0679, 0.22", "-9.04531, 45.3427, -87.5717, 0.22", "-8.36763, 45.9028, -88.2534, 1.18", "-7.84812, 46.3194, -88.7893, 0.96", "-7.06878, 46.9476, -89.6135, 0.22", "-7.03324, 46.9786, -89.6504, 0.22", "-6.34323, 47.6033, -90.4086, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "1.71543, 34.351, 16.0014, 0.52", "1.31136, 35.9834, 16.7092, 0.52", "1.17317, 36.4613, 16.9284, 0.37", "0.929484, 37.1297, 17.24, 0.52", "0.5268, 38.0386, 17.6501, 0.29", "0.270263, 38.5686, 17.87, 0.52", "-0.120213, 39.3354, 18.1363, 0.66", "-0.197187, 39.47, 18.173, 0.66", "-0.551786, 39.9882, 18.3186, 0.22", "-0.96955, 40.4774, 18.4462, 0.22", "-1.47119, 40.9623, 18.5087, 0.74", "-1.96357, 41.4504, 18.5102, 1.4", "-7.94719, 49.4617, 21.8783, 1.4", "-13.606, 57.9236, 24.7753, 1.4", "-17.5677, 66.8392, 28.9714, 1.4", "-21.6369, 76.1038, 32.285, 1.4", "-26.5268, 85.3335, 34.3318, 1.4", "-31.151, 94.1971, 37.9011, 1.4", "-35.2608, 102.06, 43.5962, 1.4", "-39.9675, 109.66, 49.1515, 1.4", "-43.3679, 117.001, 55.8584, 1.4" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.71543, 34.351, 16.0014, 0.74", "2.93101, 36.5164, 15.223, 0.74", "3.294, 37.3471, 14.9997, 0.74", "3.37711, 37.5664, 14.952, 0.74", "3.84931, 38.8624, 14.6298, 0.44", "4.35053, 40.3005, 14.259, 0.29", "5.07243, 42.3064, 13.6902, 0.81", "5.57678, 43.8525, 13.2654, 0.29", "5.86488, 44.7542, 13.0156, 0.29", "6.4497, 46.5973, 12.5474, 1.03", "6.87154, 47.946, 12.2552, 1.4", "7.23504, 49.1, 12.0638, 1.03", "7.77147, 50.7454, 11.8489, 0.59", "7.79902, 50.846, 11.8469, 0.59", "8.06467, 52.0047, 11.9467, 1.03", "8.21117, 52.7371, 12.0861, 1.03", "8.56339, 54.7753, 12.5412, 0.22", "8.81361, 56.453, 12.9494, 1.25", "8.95266, 57.5606, 13.2248, 1.99", "9.11821, 59.1615, 13.5985, 1.03", "9.22469, 60.8125, 13.9732, 0.29", "9.2705, 62.1517, 14.2533, 0.37", "9.27107, 62.2688, 14.2743, 0.37", "9.21717, 64.1981, 14.5906, 0.52", "9.1485, 65.4509, 14.748, 0.81", "8.97006, 67.2439, 14.946, 1.92", "8.90696, 67.7992, 15.0022, 2.21", "8.88332, 68.0426, 15.0265, 2.21", "8.80858, 69.0557, 15.1129, 2.21", "8.74592, 70.5329, 15.2045, 1.03", "8.72656, 71.6884, 15.3227, 0.22", "8.73819, 72.3806, 15.4089, 0.22", "8.74011, 72.5162, 15.43, 0.22", "8.75339, 73.3926, 15.5749, 0.22", "8.75521, 73.4954, 15.5919, 0.22", "8.78681, 75.4442, 15.9033, 0.96", "8.80663, 76.1961, 16.0065, 1.55", "8.83312, 77.112, 16.15, 1.84", "8.88865, 78.8616, 16.4251, 0.29", "8.99755, 80.1686, 16.6432, 0.15", "9.00957, 80.2707, 16.6605, 0.15", "9.25254, 81.7689, 16.9181, 0.15", "9.6598, 83.9099, 17.3265, 1.62", "9.94919, 85.227, 17.6193, 2.36", "10.5787, 87.8001, 18.2655, 0.15", "10.604, 87.8978, 18.2913, 0.15", "10.8875, 88.9596, 18.5728, 0.15", "10.9168, 89.0563, 18.5982, 0.15", "11.2791, 90.1004, 18.8435, 1.18", "11.4574, 90.6052, 18.9708, 1.55", "11.6427, 91.2244, 19.1099, 1.55", "11.6713, 91.3225, 19.1308, 1.55", "12.3254, 93.615, 19.5409, 0.22", "12.4991, 94.2254, 19.6296, 0.29", "12.5629, 94.4387, 19.6494, 0.29", "13.0886, 96.2092, 19.7665, 0.29", "13.1135, 96.295, 19.7702, 0.29", "13.4555, 97.5918, 19.8257, 0.44", "13.7066, 98.6504, 19.8609, 0.66", "14.0686, 100.212, 19.9304, 1.33", "14.3806, 101.591, 20.0245, 2.14", "14.5676, 102.448, 20.0979, 2.28", "15.0573, 104.829, 20.3552, 0.22", "15.0758, 104.931, 20.3695, 0.22", "15.2834, 106.202, 20.576, 0.22", "15.5148, 107.959, 20.8738, 1.69", "15.5942, 108.612, 20.9774, 2.36", "15.6534, 109.125, 21.0516, 2.36", "15.8334, 111.174, 21.3442, 0.29", "15.8476, 111.394, 21.3773, 0.29", "15.9203, 113.582, 21.7232, 0.29", "15.9296, 114.654, 21.8974, 0.29", "15.9306, 114.771, 21.918, 0.29", "15.947, 116.303, 22.2927, 0.29", "15.9474, 116.473, 22.3465, 0.29", "15.9226, 117.528, 22.7147, 0.96", "15.9182, 117.625, 22.7509, 0.96", "15.87, 118.556, 23.069, 0.96", "15.7143, 120.841, 23.8175, 0.22", "15.6574, 121.809, 24.1189, 0.22", "15.5432, 123.492, 24.629, 0.22", "15.4843, 124.149, 24.8246, 0.59", "15.3678, 125.202, 25.1262, 0.22", "15.1674, 126.457, 25.4478, 0.88", "18.2544, 140.942, 27.164, 0.88", "22.5914, 154.282, 32.0242, 0.88", "27.2486, 167.09, 37.821, 0.88", "33.4477, 178.827, 44.2541, 0.88" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-6.91077, 12.4671, -0.306016, 0.52", "-8.83907, 13.1715, 1.15558, 0.52", "-9.72239, 13.4896, 1.83764, 0.52", "-11.9444, 14.2476, 4.01279, 1.11", "-11.9925, 14.2658, 4.06216, 1.11", "-12.8029, 14.5967, 4.88507, 1.4", "-12.8516, 14.618, 4.93276, 1.4", "-13.2495, 14.7909, 5.38567, 1.18", "-14.8189, 15.573, 7.13942, 1.03", "-15.6359, 16.0757, 7.91432, 0.29", "-16.0861, 16.3552, 8.27352, 1.11", "-16.7062, 16.7457, 8.68066, 1.47", "-17.1293, 16.9939, 8.89812, 1.77", "-17.545, 17.215, 9.03811, 1.77", "-17.6097, 17.2449, 9.0456, 1.77", "-18.9793, 17.8517, 9.17516, 0.59", "-19.1389, 17.9324, 9.18963, 0.59", "-19.7476, 18.2903, 9.234, 0.81", "-20.1948, 18.5838, 9.25847, 0.81", "-20.8754, 19.0721, 9.25918, 0.37", "-21.7591, 19.7618, 9.23009, 0.37", "-22.5117, 20.4516, 9.18699, 0.74", "-23.1173, 21.1063, 9.12844, 1.03", "-23.5323, 21.6873, 9.0596, 1.03", "-24.0406, 22.4708, 9.6044, 0.81", "-24.2926, 22.8859, 10.3402, 0.44", "-24.4565, 23.1193, 10.988, 0.44", "-24.632, 23.3852, 11.847, 0.44", "-24.836, 23.7166, 13.0178, 0.44", "-26.0345, 25.9058, 20.9155, 1.33", "-26.0438, 25.9239, 20.9839, 1.33", "-26.2426, 26.3779, 22.6996, 1.69", "-26.3747, 26.68, 23.804, 0.74", "-26.3974, 26.7319, 23.9732, 0.74", "-26.4838, 27.0455, 24.6818, 0.59", "-26.483, 27.2126, 24.7611, 0.59", "-26.4727, 28.4663, 25.2845, 0.59", "-26.4617, 29.7465, 25.7555, 0.37", "-26.4948, 30.7465, 26.1676, 1.18", "-26.673, 32.4336, 26.9155, 1.47", "-26.685, 32.512, 26.9496, 1.47", "-26.8502, 33.3551, 27.3082, 1.11", "-27.0162, 34.1376, 27.715, 1.18", "-27.0399, 34.2726, 27.7967, 1.18", "-27.1823, 35.7668, 28.7441, 0.59", "-27.2204, 36.7599, 29.3718, 0.37", "-27.2197, 36.8196, 29.4146, 0.37", "-27.0824, 38.3792, 30.7178, 0.81", "-27.0467, 38.5971, 30.9263, 0.81", "-26.8928, 39.515, 31.8853, 1.11", "-26.8843, 39.5706, 31.9486, 1.11", "-26.8809, 39.9633, 32.3639, 1.4", "-26.9168, 40.2601, 32.627, 1.4", "-27.1987, 41.4743, 33.5096, 1.4", "-27.5134, 42.768, 34.5309, 0.29", "-27.6184, 43.2435, 34.9417, 0.37", "-27.7723, 44.0615, 35.7239, 0.37", "-27.8602, 44.6896, 36.405, 0.37", "-27.8611, 44.7344, 36.462, 0.37", "-27.5564, 45.9689, 38.4062, 0.96", "-27.3145, 46.3699, 39.1488, 0.96", "-27.2632, 46.4359, 39.2686, 0.96", "-27.0593, 46.6222, 39.6511, 0.96", "-26.6275, 46.9535, 40.3503, 0.66", "-26.396, 47.1531, 40.6965, 0.44", "-26.0241, 47.694, 41.0879, 0.37", "-25.8652, 48.1563, 41.3176, 0.37", "-29.0172, 54.4329, 51.0574, 0.37", "-33.5424, 63.2585, 58.0876, 0.37", "-39.2738, 71.0784, 65.3141, 0.37", "-42.8621, 79.6325, 73.1444, 0.37", "-45.5514, 87.4017, 82.0086, 0.37", "-46.2173, 97.0179, 89.5076, 0.37", "-46.7055, 105.232, 98.402, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.91077, 12.4671, -0.306016, 1.62", "-6.77122, 13.4801, -0.885758, 1.62", "-6.78914, 14.1381, -1.21441, 0.81", "-6.92157, 15.1461, -1.67059, 0.66", "-6.93588, 15.2148, -1.6972, 0.66", "-7.08293, 15.783, -1.92926, 0.66", "-7.10071, 15.8493, -1.959, 0.66", "-7.35325, 16.5698, -2.26258, 0.66", "-7.38133, 16.6511, -2.29672, 0.66", "-7.52186, 17.1399, -2.52341, 0.66", "-7.7808, 18.3426, -3.18427, 1.18", "-7.8927, 19.1666, -3.66463, 1.99", "-7.92786, 19.5737, -3.90888, 2.06", "-7.94063, 20.0494, -4.18686, 1.92", "-7.9463, 21.1349, -4.80536, 1.62", "-7.95424, 22.013, -5.3377, 0.74", "-7.97399, 22.6658, -5.72641, 0.44", "-7.97977, 22.7404, -5.78002, 0.44", "-8.07726, 23.5812, -6.46279, 0.37", "-8.15712, 24.1467, -6.95894, 1.03", "-8.29872, 25.0003, -7.73378, 1.33", "-8.36823, 25.4271, -8.13463, 1.33", "-8.61028, 27.0007, -9.69656, 0.59", "-8.626, 27.1491, -9.84485, 0.59", "-8.63469, 27.448, -10.1502, 0.59", "-8.62732, 27.5212, -10.2155, 0.52", "-8.42893, 28.1377, -10.6154, 0.88", "-8.36152, 28.2564, -10.666, 0.88", "-8.05961, 28.6459, -10.7029, 1.18", "-7.83292, 28.8986, -10.746, 1.4", "-7.78807, 28.9439, -10.7563, 1.4", "-7.35566, 29.374, -10.8723, 1.4", "-6.93064, 29.8045, -11.0394, 1.25", "-6.87707, 29.8724, -11.0695, 1.25", "-6.39461, 30.6372, -11.4161, 0.88", "-6.10238, 31.2282, -11.7171, 0.52", "-5.8718, 31.8161, -12.0305, 0.44", "-5.71015, 32.5727, -12.4329, 0.44", "-5.62254, 33.81, -13.0459, 1.62", "-5.64548, 34.312, -13.2648, 2.58", "-5.78165, 35.2624, -13.6305, 2.95", "-5.83423, 35.5241, -13.7208, 2.95", "-6.20862, 37.0997, -14.2201, 0.59", "-6.41951, 37.9285, -14.4481, 0.59", "-6.64526, 38.8574, -14.6996, 0.44", "-6.67134, 38.9899, -14.7403, 0.44", "-6.81893, 40.0299, -15.0773, 0.44", "-6.91781, 41.0742, -15.4768, 0.37", "-6.91803, 41.132, -15.5076, 0.37", "-6.87505, 42.1333, -16.2334, 0.96", "-6.80656, 43.0895, -17.0397, 2.06", "-6.78342, 43.4243, -17.34, 2.06", "-6.77683, 43.5104, -17.4235, 2.06", "-6.62959, 45.1854, -19.1053, 0.29", "-6.51302, 46.6537, -20.6204, 2.36", "-6.50957, 46.7034, -20.6747, 2.36", "-6.49039, 47.127, -21.1444, 3.09" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "18.1252, 9.52119, 0.231452, 0.96", "19.8119, 6.86091, -1.30756, 0.96", "20.617, 5.59114, -2.04215, 1.18", "21.8308, 3.67656, -3.14976, 1.03", "22.8377, 2.08848, -4.0685, 1.18", "23.6055, 0.87749, -4.76908, 2.43", "24.4859, -0.51102, -5.57235, 2.87" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "18.1252, 9.52119, 0.231452, 0.66", "19.7821, 10.9917, 0.441581, 0.66", "20.5035, 11.5409, 0.527128, 0.88", "20.7232, 11.6742, 0.548826, 0.88", "21.2889, 11.9253, 0.613638, 0.88", "21.599, 12.0251, 0.623987, 0.88", "22.156, 12.2044, 0.64258, 0.74", "22.4694, 12.2419, 0.642564, 0.74", "23.272, 12.3023, 0.635305, 0.74", "24.3892, 12.3622, 0.611988, 1.62", "25.9744, 12.4043, 0.545216, 2.5" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-20.1558, -14.3849, 0.948534, 0.96", "-21.953, -13.9853, 1.70706, 0.96", "-22.7403, -13.8345, 2.01193, 0.88", "-23.1563, -13.7773, 2.16925, 1.03", "-23.2052, -13.7722, 2.18704, 1.03", "-23.695, -13.7383, 2.35604, 1.03", "-24.0401, -13.7303, 2.46678, 1.03", "-24.4777, -13.7646, 2.57621, 1.03", "-25.3511, -13.8805, 2.80626, 1.55", "-25.6643, -13.9334, 2.89027, 1.84", "-26.0649, -14.0082, 2.99867, 2.06", "-26.5948, -14.125, 3.1436, 2.28", "-27.6919, -14.3681, 3.43213, 2.5" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-20.1558, -14.3849, 0.948534, 1.11", "-19.9536, -16.1013, 1.5964, 1.11", "-19.7314, -17.9448, 2.24203, 1.03", "-19.5996, -18.9659, 2.5738, 1.03", "-19.3939, -20.4116, 3.00085, 0.81", "-19.2868, -21.1334, 3.20269, 1.25", "-19.1569, -21.8529, 3.38782, 1.25", "-19.0965, -22.0847, 3.43921, 1.25", "-18.7775, -23.0448, 3.57446, 1.25", "-18.2635, -24.3756, 3.79482, 1.25", "-18.234, -24.4452, 3.81216, 1.25", "-17.7291, -25.6536, 4.25048, 1.25", "-17.1748, -26.9883, 4.88974, 1.25", "-16.9481, -27.5353, 5.22998, 1.55", "-16.3302, -29.0209, 6.2336, 1.55", "-15.6741, -30.6188, 7.41165, 2.36", "-15.103, -32.0796, 8.55976, 2.8", "-14.6417, -33.3933, 9.70977, 2.8", "-14.0324, -35.2986, 11.543, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "37.9629, 21.4523, -0.0125933, 0.15", "50.9636, 28.9345, -0.0125933, 0.15", "63.9642, 36.4166, -0.0125933, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-6.34323, 47.6033, -90.4086, 0.96", "-5.87662, 47.6844, -90.5341, 0.96", "-5.41036, 47.7499, -90.6659, 0.29", "-5.37929, 47.7545, -90.6746, 0.29", "-5.08724, 47.7979, -90.7563, 0.74", "-4.34336, 47.9112, -90.9612, 0.15", "-4.01676, 47.9626, -91.0504, 0.52", "-3.46596, 48.0621, -91.2886, 0.15", "-3.24748, 48.1098, -91.4026, 1.03", "-3.21974, 48.1166, -91.4184, 1.03", "-3.07468, 48.1569, -91.5093, 1.25", "-3.04856, 48.1657, -91.5269, 1.25", "-2.01113, 48.5544, -92.3092, 0.15", "-1.89666, 48.6024, -92.4022, 0.15", "-1.72527, 48.6761, -92.5416, 0.52", "-1.67371, 48.7004, -92.5818, 0.52", "-1.57527, 48.7496, -92.6553, 0.52", "-1.54224, 48.7663, -92.6785, 0.52", "-1.16481, 48.9822, -92.9363, 0.15", "-0.84218, 49.1769, -93.1829, 1.18", "-0.661452, 49.2907, -93.3303, 1.4", "-0.64159, 49.3034, -93.347, 1.4", "-0.0736195, 49.6615, -93.8274, 0.15", "0.191042, 49.8387, -94.0754, 0.88", "0.209105, 49.851, -94.0941, 0.88", "0.311168, 49.9205, -94.2024, 0.88", "0.343961, 49.9457, -94.2481, 0.88", "0.591848, 50.1579, -94.6532, 0.15", "0.824104, 50.4034, -95.1867, 1.03", "1.02003, 50.6426, -95.738, 0.15", "1.09572, 50.7486, -95.9908, 0.59", "1.30834, 51.1471, -97.0168, 0.15", "1.31181, 51.1575, -97.0432, 0.15", "1.3651, 51.4698, -97.838, 1.18", "1.37545, 51.5644, -98.0772, 1.33", "1.37614, 51.5738, -98.0998, 1.33", "1.4318, 52.1145, -99.3586, 0.15", "1.48066, 52.4151, -99.9895, 1.25", "1.48392, 52.4334, -100.026, 1.25", "1.62638, 53.0977, -101.204, 0.15", "1.6512, 53.2048, -101.383, 0.52", "1.66087, 53.2385, -101.434, 0.52", "1.68798, 53.3125, -101.524, 0.52", "1.80211, 53.5786, -101.825, 0.15", "1.90231, 53.7861, -102.031, 1.18", "1.96628, 53.903, -102.125, 1.18", "2.28419, 54.465, -102.639, 0.15", "2.36804, 54.61, -102.782, 0.44", "2.3787, 54.6285, -102.802, 0.44", "2.58187, 54.9804, -103.195, 0.15", "2.64191, 55.0888, -103.32, 0.29", "2.86034, 55.5349, -103.768, 0.15", "2.8682, 55.5532, -103.784, 0.15", "3.04888, 55.977, -104.104, 1.4", "3.05834, 56.0004, -104.118, 1.4", "3.1512, 56.2464, -104.248, 1.62", "3.43231, 56.9987, -104.584, 0.15", "3.52169, 57.2447, -104.681, 0.44", "3.61997, 57.5215, -104.797, 0.15", "3.75089, 57.9191, -104.961, 1.03", "3.80105, 58.0796, -105.029, 1.03", "3.99832, 58.7782, -105.351, 0.22", "4.11239, 59.231, -105.578, 1.11", "4.29144, 59.9941, -105.976, 0.15", "4.47739, 60.8642, -106.433, 0.15", "4.48155, 60.886, -106.445, 0.15", "4.56595, 61.3951, -106.732, 1.11", "4.61456, 61.7462, -106.93, 0.66", "4.65862, 62.0591, -107.116, 0.15", "4.70305, 62.3489, -107.297, 1.33", "4.89228, 63.1318, -107.86, 0.15", "4.90657, 63.1739, -107.891, 0.15", "5.04998, 63.4846, -108.136, 0.81", "5.24394, 63.8273, -108.427, 0.22", "5.36045, 64.0075, -108.594, 0.37", "5.68367, 64.4217, -109.005, 0.15", "5.91361, 64.6515, -109.235, 0.66", "6.05178, 64.7827, -109.369, 0.96", "6.0699, 64.7978, -109.386, 0.96" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-6.34323, 47.6033, -90.4086, 0.74", "-5.73101, 48.9379, -95.8534, 0.74", "-5.45954, 49.5671, -98.1266, 0.96", "-4.73167, 51.2542, -104.222, 0.88", "-4.53365, 51.7131, -105.88, 0.44", "-4.37968, 52.07, -107.169, 1.03", "-4.36913, 52.0944, -107.258, 1.03", "-4.14648, 52.6963, -108.764, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-46.7055, 105.232, 98.402, 0.96", "-50.0317, 113.198, 106.848, 0.96", "-53.8618, 121.968, 114.296, 0.96", "-56.1518, 131.477, 121.558, 0.96", "-57.3742, 142.301, 127.235, 0.96", "-58.4932, 152.985, 133.173, 0.96", "-60.8551, 164.321, 137.376, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-46.7055, 105.232, 98.402, 0.74", "-49.6371, 110.463, 104.249, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-6.49039, 47.127, -21.1444, 0.22", "-6.57572, 49.2341, -21.4811, 0.22", "-6.63052, 50.4168, -21.6817, 0.22", "-6.67697, 51.6748, -21.8927, 1.25", "-6.69035, 52.1053, -21.9597, 1.77", "-6.7132, 52.7596, -22.0541, 1.84", "-6.76596, 54.2845, -22.2498, 0.15", "-6.77041, 54.3635, -22.2595, 0.15", "-6.79657, 55.0434, -22.3321, 0.15", "-6.83868, 56.2057, -22.4265, 1.11", "-6.86214, 56.8785, -22.4761, 1.33", "-6.90603, 58.1939, -22.5638, 0.15", "-6.96161, 59.4534, -22.616, 1.55", "-6.99848, 59.9668, -22.6331, 2.28", "-7.07531, 60.7738, -22.654, 1.03", "-7.08722, 60.8718, -22.6564, 1.03", "-7.3145, 62.3939, -22.6902, 0.15", "-7.54473, 63.652, -22.7118, 1.47", "-7.66912, 64.267, -22.7174, 1.92", "-7.80263, 64.8434, -22.717, 1.25", "-8.16722, 66.2408, -22.7057, 0.15", "-8.32041, 66.7716, -22.6986, 0.15", "-8.5417, 67.4656, -22.6706, 0.52", "-8.67484, 67.8812, -22.6412, 0.52", "-9.05446, 69.0952, -22.5158, 0.22", "-9.24154, 69.6544, -22.4375, 0.52", "-9.40805, 70.0776, -22.3639, 0.52", "-9.72993, 70.787, -22.245, 0.22", "-10.1667, 71.6316, -22.0956, 1.33", "-10.3571, 71.972, -22.0406, 1.84", "-10.5983, 72.3893, -21.9847, 1.84", "-11.5638, 73.9702, -21.8316, 0.15", "-12.099, 74.7881, -21.7851, 1.33", "-12.4817, 75.341, -21.7785, 2.06", "-12.982, 76.0712, -21.7915, 0.44", "-13.5119, 76.8966, -21.8154, 0.29", "-13.9429, 77.6317, -21.8464, 0.15", "-14.2555, 78.2441, -21.8849, 0.15", "-14.2846, 78.3068, -21.8895, 0.15", "-14.6834, 79.2321, -21.9698, 0.15", "-15.0165, 80.1392, -22.0283, 0.74", "-15.0913, 80.4282, -22.0367, 1.11", "-15.1421, 80.7497, -22.0369, 1.33", "-15.1713, 82.0445, -21.891, 0.22", "-15.1657, 82.1126, -21.8775, 0.22", "-14.9636, 83.2222, -21.5716, 0.22", "-14.5789, 84.582, -21.1152, 1.33", "-14.3548, 85.1518, -20.9048, 1.62", "-13.3461, 87.1204, -20.1548, 0.22", "-13.007, 87.68, -20.0446, 0.52", "-12.9663, 87.7472, -20.0463, 0.52", "-12.7349, 88.1432, -20.1378, 0.66", "-12.2455, 89.1946, -20.6395, 0.15", "-11.84, 90.3944, -21.369, 2.06", "-11.2554, 93.1773, -23.3753, 0.22", "-11.1476, 94.0391, -24.0171, 1.47", "-11.1402, 94.4663, -24.3724, 1.47", "-11.2566, 95.9368, -25.7115, 0.22", "-11.3408, 96.3687, -26.1386, 0.22", "-11.6201, 97.344, -27.131, 1.47", "-11.7233, 97.66, -27.4336, 1.84", "-12.3561, 99.777, -29.5409, 0.22", "-12.3666, 99.8174, -29.5817, 0.22", "-12.539, 100.526, -30.3071, 0.22", "-12.6357, 100.994, -30.7741, 0.81", "-12.7584, 101.914, -31.6219, 0.22", "-12.8332, 102.963, -32.4895, 1.11", "-12.8355, 103.209, -32.6592, 1.25", "-12.8201, 104.365, -33.4377, 0.22", "-12.7937, 104.804, -33.7187, 0.59", "-12.7051, 105.942, -34.4148, 0.22", "-12.6291, 106.856, -34.9108, 1.55", "-12.5907, 107.335, -35.1396, 1.92", "-12.587, 107.389, -35.1633, 1.92", "-12.4879, 109.18, -35.834, 0.15", "-12.4862, 109.335, -35.8873, 0.15", "-12.5099, 110.044, -36.0989, 0.15", "-12.536, 111.079, -36.3584, 1.18", "-12.5417, 111.361, -36.4199, 1.18", "-12.5676, 112.726, -36.6795, 0.22", "-12.5866, 113.295, -36.8006, 0.22", "-12.5893, 113.44, -36.8358, 0.22", "-12.5884, 114.312, -37.0645, 0.22", "-12.5742, 115.555, -37.4148, 1.33", "-12.5709, 116.041, -37.5584, 1.69", "-12.5357, 117.846, -38.1299, 0.22", "-12.516, 118.417, -38.3243, 0.37", "-12.4816, 119.456, -38.7018, 0.15", "-12.4628, 120.414, -39.0963, 0.81", "-12.4605, 120.628, -39.1874, 0.96", "-12.4478, 122.157, -39.8445, 0.15", "-12.4377, 123.259, -40.2954, 1.25", "-12.4384, 123.868, -40.5512, 1.77", "-12.4543, 125.748, -41.367, 0.15", "-12.47, 126.349, -41.634, 0.81", "-12.483, 126.694, -41.7805, 1.03", "-12.5756, 128.523, -42.4984, 0.15", "-12.5781, 128.589, -42.5218, 0.15", "-12.5928, 129.264, -42.7388, 0.15", "-12.5958, 130.841, -43.1904, 1.55", "-12.5902, 132.244, -43.5884, 0.15", "-12.5867, 132.895, -43.758, 0.15", "-12.5738, 133.647, -43.929, 1.11", "-12.5618, 134.212, -44.0465, 1.11", "-12.5241, 135.593, -44.2917, 0.15", "-12.5206, 135.753, -44.3287, 0.37", "-12.5374, 136.792, -44.6406, 0.15", "-12.561, 137.217, -44.7842, 0.15", "-12.6718, 138.271, -45.155, 1.18", "-12.7506, 138.815, -45.3546, 1.47", "-13.128, 140.746, -46.0658, 0.15", "-13.255, 141.309, -46.2768, 0.52", "-13.337, 141.638, -46.3983, 0.52", "-13.5824, 142.638, -46.7376, 0.22", "-13.6155, 142.768, -46.775, 0.22", "-13.7758, 143.355, -46.9174, 0.22", "-14.0607, 144.389, -47.1044, 1.11", "-14.2675, 145.156, -47.2567, 1.4", "-14.6652, 146.707, -47.5891, 0.15", "-14.9479, 147.852, -47.8444, 0.15", "-15.1256, 148.565, -48.0019, 1.03", "-15.2304, 148.979, -48.096, 1.18", "-15.6154, 150.492, -48.4294, 0.15", "-15.8678, 151.574, -48.6852, 1.03", "-15.9351, 151.993, -48.7898, 1.33", "-15.9751, 152.455, -48.916, 1.33", "-15.989, 153.792, -49.2874, 0.15", "-15.9545, 154.414, -49.4719, 0.15", "-15.8422, 155.347, -49.7544, 0.88", "-15.6482, 156.548, -50.1323, 0.15", "-15.6361, 156.603, -50.1511, 0.15", "-15.2695, 157.886, -50.6087, 0.15", "-14.8215, 159.197, -51.0939, 1.33", "-14.7232, 159.456, -51.1975, 1.33", "-14.6991, 159.516, -51.2219, 1.33", "-14.053, 161.119, -51.899, 0.15", "-13.6663, 162.071, -52.312, 0.15", "-13.6083, 162.208, -52.373, 0.15", "-13.1157, 163.33, -52.8453, 1.18", "-12.9534, 163.726, -53.0058, 1.4", "-12.4613, 165.088, -53.5164, 0.15", "-12.2186, 165.878, -53.7747, 0.15", "-12.0767, 166.418, -53.9351, 1.11", "-11.9373, 167.024, -54.0983, 1.11", "-11.6782, 168.372, -54.4178, 0.22", "-11.5696, 168.997, -54.5523, 0.22", "-11.4131, 169.887, -54.7379, 0.81", "-11.215, 170.907, -54.9505, 0.15", "-11.1992, 170.983, -54.9667, 0.15", "-10.9986, 171.845, -55.1652, 1.55", "-10.8155, 172.536, -55.3322, 1.77", "-10.3417, 174.165, -55.7615, 0.22", "-10.068, 175.016, -55.9923, 0.15", "-9.88914, 175.473, -56.1212, 0.37", "-9.40894, 176.567, -56.4443, 0.15", "-9.38354, 176.617, -56.46, 0.15", "-8.95301, 177.339, -56.6842, 1.11", "-8.58948, 177.877, -56.8341, 1.47", "-7.88676, 178.805, -57.1073, 0.22", "-7.8449, 178.856, -57.123, 0.22", "-7.63566, 179.121, -57.2315, 0.37", "-7.26802, 179.695, -57.5524, 0.15", "-7.10256, 180.031, -57.777, 0.52", "-6.9514, 180.581, -58.2221, 0.22", "-6.88631, 181.135, -58.6983, 0.88", "-6.89563, 182.262, -59.8972, 0.22", "-7.0064, 182.968, -60.7692, 1.25", "-7.06814, 183.193, -61.0721, 1.4", "-7.38892, 184.012, -62.2953, 0.22", "-7.50545, 184.232, -62.6465, 0.44", "-8.2703, 185.385, -64.6555, 0.15", "-8.59359, 185.806, -65.4233, 1.11", "-8.66985, 185.9, -65.5964, 1.18", "-9.13701, 186.486, -66.6424, 0.22", "-9.29321, 186.688, -66.968, 0.74", "-10.2835, 188.008, -68.9205, 0.22", "-10.6431, 188.522, -69.5681, 0.81", "-10.8339, 188.827, -69.9239, 1.03", "-11.3778, 189.756, -70.8882, 0.15", "-11.6837, 190.326, -71.407, 0.81", "-11.7086, 190.376, -71.4469, 0.81", "-11.7596, 190.483, -71.5151, 0.81", "-12.2707, 191.601, -72.1729, 0.22", "-12.5856, 192.309, -72.5783, 0.22", "-12.9972, 193.239, -73.0858, 1.18", "-13.1728, 193.695, -73.3295, 1.69", "-13.6872, 195.158, -74.0858, 0.22", "-13.958, 196.079, -74.5096, 1.03", "-14.0025, 196.265, -74.5781, 1.03", "-14.0154, 196.34, -74.6002, 1.03", "-14.2343, 197.9, -74.8967, 0.15", "-14.2503, 198.018, -74.9123, 0.15", "-14.4732, 199.525, -74.9916, 0.15", "-14.5885, 200.201, -75.0025, 0.96", "-14.6906, 200.708, -75.0164, 1.25", "-14.9278, 201.729, -75.0477, 0.22", "-15.0678, 202.276, -75.0657, 0.66", "-15.3092, 203.243, -75.1197, 0.15", "-15.5519, 204.224, -75.2191, 0.15", "-15.8146, 205.294, -75.3223, 1.11", "-15.9882, 206.02, -75.3876, 1.25", "-16.2948, 207.291, -75.4758, 0.22", "-16.3116, 207.348, -75.4784, 0.22", "-16.8134, 208.72, -75.5131, 0.22", "-17.3344, 209.924, -75.5153, 1.25", "-17.5007, 210.264, -75.5059, 1.62", "-18.1386, 211.416, -75.4711, 0.15", "-19.0003, 212.808, -75.4267, 0.15", "-19.3917, 213.418, -75.4112, 0.66", "-19.5536, 213.666, -75.407, 0.66", "-19.5895, 213.725, -75.4086, 0.66", "-19.9422, 214.429, -75.4168, 0.15", "-20.1796, 215.142, -75.4267, 0.88", "-20.23, 215.355, -75.4293, 0.88", "-20.4688, 216.523, -75.445, 0.22", "-20.5943, 217.163, -75.4678, 0.52", "-20.8529, 218.401, -75.5299, 0.22", "-21.277, 220.326, -75.6514, 0.22", "-21.459, 221.027, -75.7212, 0.96", "-21.6131, 221.509, -75.7954, 0.96", "-22.2412, 223.066, -76.1304, 0.15", "-22.6129, 223.886, -76.3326, 0.15", "-22.9358, 224.485, -76.511, 1.03", "-23.5881, 225.524, -76.8901, 0.15", "-24.1955, 226.427, -77.2502, 0.66", "-24.7131, 227.121, -77.5636, 0.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-6.49039, 47.127, -21.1444, 0.15", "-7.85928, 48.6499, -21.9781, 0.15", "-8.39469, 49.3942, -22.4315, 0.15", "-8.46987, 49.5176, -22.5087, 0.15", "-9.10584, 50.6641, -23.2378, 0.81", "-9.48186, 51.3672, -23.6906, 1.11", "-9.77088, 51.9088, -24.1169, 1.11", "-10.2569, 52.9283, -24.9795, 0.22", "-10.5715, 53.5543, -25.5895, 0.22", "-11.0579, 54.4832, -26.5866, 1.69", "-11.2763, 54.8953, -27.0623, 2.06", "-12.2604, 56.7858, -29.2058, 0.22", "-12.428, 57.1364, -29.603, 0.22", "-12.4659, 57.2309, -29.7005, 0.22", "-12.6456, 57.8147, -30.2658, 0.22", "-12.7673, 58.3383, -30.7426, 0.81", "-12.8672, 58.7552, -31.0668, 1.11", "-13.1082, 59.6134, -31.5503, 0.74", "-13.3568, 60.3409, -32.0239, 0.22", "-13.3766, 60.3926, -32.0593, 0.22", "-13.8041, 61.398, -32.7674, 0.22", "-14.2375, 62.4306, -33.5568, 1.62", "-14.541, 63.1555, -34.1275, 2.21", "-15.436, 65.3348, -35.8786, 0.22", "-15.8854, 66.4784, -36.8136, 1.33", "-15.9809, 66.7458, -37.0286, 1.69", "-16.7855, 69.34, -39.0353, 0.22", "-16.8033, 69.4074, -39.0879, 0.22", "-17.0108, 70.25, -39.7477, 0.22", "-17.0233, 70.3024, -39.7853, 0.22", "-17.2663, 71.481, -40.5652, 1.77", "-17.3474, 72.0075, -40.8728, 2.14", "-17.5651, 73.9302, -41.7889, 0.22", "-17.5714, 74.0004, -41.8206, 0.22", "-17.6346, 74.9673, -42.2261, 0.81", "-17.6872, 76.0007, -42.635, 0.22", "-17.7415, 77.4795, -43.1742, 1.4", "-17.7627, 78.0401, -43.3696, 1.92", "-17.7864, 78.453, -43.4981, 1.92", "-17.9251, 80.3013, -44.056, 0.29", "-17.9924, 80.9197, -44.2577, 0.29", "-18.0733, 81.4737, -44.4407, 1.03", "-18.0891, 81.546, -44.4638, 1.03", "-18.2181, 82.012, -44.6277, 1.03", "-18.4266, 82.5969, -44.8425, 0.74", "-18.9598, 83.7424, -45.3082, 0.15", "-18.9855, 83.7988, -45.3311, 0.15", "-19.4027, 84.7133, -45.7498, 0.15", "-19.8151, 85.6105, -46.1986, 1.33", "-20.0174, 86.0351, -46.4258, 1.77", "-20.9067, 87.8656, -47.4444, 0.22", "-21.3393, 88.7434, -47.9287, 0.15", "-21.9535, 89.9553, -48.704, 1.25", "-22.2889, 90.5952, -49.1567, 1.47", "-22.8125, 91.5405, -49.8492, 0.15", "-23.2912, 92.3639, -50.5319, 1.47", "-23.4788, 92.6625, -50.8034, 1.62", "-24.6989, 94.4779, -52.5049, 0.15", "-24.9995, 94.9298, -52.9065, 0.37", "-25.3747, 95.5405, -53.4325, 0.15", "-26.3109, 97.1517, -54.8902, 1.47", "-26.5077, 97.5051, -55.2126, 1.92", "-27.1545, 98.7576, -56.4166, 0.22", "-27.4027, 99.2943, -56.9295, 0.52", "-27.8734, 100.429, -58.0336, 0.22", "-28.3678, 101.737, -59.3631, 1.18", "-28.4658, 102.025, -59.657, 1.25", "-28.885, 103.444, -61.2255, 0.15", "-28.9758, 103.801, -61.6456, 0.44", "-29.0872, 104.242, -62.195, 0.15", "-29.3436, 105.109, -63.2709, 0.44", "-29.3556, 105.153, -63.3178, 0.44", "-29.4973, 105.657, -63.812, 0.44", "-29.6428, 106.173, -64.216, 0.22", "-29.6581, 106.224, -64.2535, 0.22", "-29.9074, 107.076, -64.8879, 1.47", "-30.0226, 107.481, -65.1743, 1.62", "-30.4544, 109.011, -66.2626, 0.22", "-30.6581, 109.714, -66.7537, 0.74", "-30.7437, 110.003, -66.9626, 0.74", "-31.2072, 111.564, -68.0719, 0.15", "-31.4594, 112.424, -68.6801, 1.11", "-31.4994, 112.554, -68.7718, 1.11", "-31.6341, 112.958, -69.0456, 1.11", "-31.9846, 114.03, -69.7065, 0.15", "-32.1512, 114.584, -69.9767, 0.52", "-32.174, 114.666, -70.0031, 0.52", "-32.285, 115.101, -70.1591, 0.52", "-32.3128, 115.212, -70.2085, 0.52", "-32.6242, 116.516, -70.8492, 0.22", "-32.8344, 117.42, -71.3102, 1.47", "-32.9147, 117.765, -71.5084, 1.47", "-33.3878, 119.534, -72.625, 0.15", "-33.7083, 120.5, -73.3608, 0.88", "-33.7553, 120.618, -73.4639, 0.88", "-33.9057, 120.935, -73.771, 0.88", "-34.5195, 122.056, -74.9947, 0.22", "-34.8418, 122.589, -75.6188, 0.74", "-35.6521, 123.825, -77.1338, 0.15", "-36.2589, 124.688, -78.1859, 1.69", "-36.5979, 125.139, -78.7438, 1.99", "-38.2239, 127.187, -81.3192, 0.22", "-38.9132, 127.995, -82.3683, 0.22", "-38.9431, 128.03, -82.4133, 0.22", "-39.5101, 128.666, -83.2759, 0.96", "-40.2165, 129.388, -84.3407, 0.22", "-40.2483, 129.418, -84.3878, 0.22", "-41.1479, 130.145, -85.5539, 1.33", "-41.486, 130.391, -85.9768, 1.62", "-43.3593, 131.646, -88.2301, 0.22", "-44.1032, 132.051, -89.0892, 1.18", "-44.2411, 132.113, -89.2362, 1.47", "-45.597, 132.663, -90.568, 0.22", "-46.1976, 132.877, -91.0966, 1.18", "-46.6906, 133.024, -91.4903, 1.55", "-48.7408, 133.513, -92.8538, 0.22", "-48.8263, 133.532, -92.9124, 0.22", "-49.3209, 133.644, -93.2536, 0.37", "-49.6345, 133.723, -93.4665, 0.37", "-50.1562, 133.906, -93.8234, 0.15", "-50.2635, 133.963, -93.8916, 0.15", "-50.8284, 134.397, -94.3215, 0.15", "-51.4698, 134.954, -94.867, 1.11", "-51.6185, 135.102, -95.0016, 1.11", "-52.6182, 136.192, -95.9341, 0.15", "-53.4516, 137.209, -96.7162, 2.06", "-54.8789, 139.101, -98.0488, 0.22", "-55.1817, 139.547, -98.3336, 0.81", "-55.8496, 140.67, -99.0096, 0.15", "-55.8819, 140.73, -99.0433, 0.15", "-56.2322, 141.512, -99.4256, 0.96", "-56.2717, 141.613, -99.47, 0.96", "-56.3616, 141.873, -99.5549, 0.96", "-56.7022, 142.881, -99.9239, 0.22", "-56.9709, 143.698, -100.247, 0.22", "-57.1673, 144.266, -100.48, 0.74", "-57.3491, 144.764, -100.688, 0.74", "-57.9399, 146.311, -101.331, 0.22", "-58.2255, 147.046, -101.617, 0.22", "-58.2528, 147.114, -101.642, 0.22", "-58.8286, 148.588, -102.159, 2.06", "-58.9804, 148.997, -102.319, 2.06", "-59.7574, 151.091, -103.189, 0.22", "-60.1733, 152.315, -103.763, 0.22", "-60.6045, 153.677, -104.489, 1.25", "-60.6717, 153.919, -104.638, 1.55", "-61.1291, 155.912, -106.067, 0.22", "-61.2096, 156.358, -106.425, 0.22", "-61.2192, 157.481, -107.652, 0.22", "-61.21, 157.567, -107.762, 0.22", "-61.0312, 158.386, -108.885, 1.25", "-61.0168, 158.438, -108.952, 1.25", "-60.8692, 158.888, -109.471, 1.62", "-59.9261, 161.916, -112.501, 0.22", "-59.9105, 161.972, -112.55, 0.22", "-59.6308, 163.046, -113.373, 0.96", "-59.3717, 164.118, -114.126, 0.22", "-59.2271, 164.781, -114.549, 0.66", "-59.009, 165.952, -115.214, 0.22", "-58.8614, 167.066, -115.742, 1.18", "-58.7995, 167.613, -116.009, 1.33", "-58.63, 169.722, -117.167, 0.22", "-58.5846, 170.557, -117.66, 0.66", "-58.528, 172.224, -118.672, 0.15", "-58.5179, 173.265, -119.316, 1.03", "-58.5267, 173.62, -119.529, 1.33", "-58.6143, 175.212, -120.426, 0.22", "-58.7002, 176.214, -120.952, 0.52", "-58.8024, 177.361, -121.573, 0.15", "-58.8122, 177.459, -121.622, 0.15", "-58.8437, 177.841, -121.814, 0.22", "-58.9071, 178.628, -122.23, 0.15", "-59.0115, 179.96, -122.951, 0.81", "-59.0816, 180.8, -123.446, 0.15", "-59.151, 181.569, -123.918, 0.96", "-59.2224, 182.33, -124.386, 1.4", "-59.3226, 183.45, -125.158, 0.22", "-59.3321, 183.556, -125.236, 0.22", "-59.3951, 184.286, -125.746, 1.11", "-59.473, 185.112, -126.278, 1.55", "-59.4841, 185.234, -126.352, 1.55", "-59.7067, 187.463, -127.511, 0.15", "-59.72, 187.604, -127.575, 0.15", "-59.9456, 188.876, -128.041, 0.15", "-60.1578, 189.721, -128.29, 0.96", "-60.1839, 189.792, -128.303, 0.96", "-60.4204, 190.246, -128.344, 0.96", "-60.5742, 190.431, -128.352, 0.96", "-62.1426, 191.884, -128.618, 0.15", "-62.2105, 191.934, -128.635, 0.15", "-62.7868, 192.303, -128.841, 0.74", "-63.5747, 192.76, -129.159, 0.29", "-65.0274, 193.527, -129.792, 0.15", "-65.7939, 193.892, -130.139, 0.96", "-66.2664, 194.089, -130.363, 1.33", "-67.9152, 194.751, -131.142, 0.15", "-68.3622, 194.924, -131.356, 0.81", "-68.7014, 195.05, -131.52, 0.81", "-69.4797, 195.327, -131.865, 0.15", "-69.83, 195.442, -132.005, 0.37", "-70.6036, 195.67, -132.299, 0.15", "-70.6632, 195.686, -132.315, 0.15", "-71.339, 195.85, -132.53, 0.74" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "24.4859, -0.51102, -5.57235, 0.66", "26.4713, -0.93193, -4.84184, 0.66", "27.3528, -1.03847, -4.49307, 0.96", "27.4176, -1.03862, -4.46887, 0.96", "28.3785, -0.99266, -4.16283, 0.96", "28.4367, -0.99527, -4.15213, 0.96", "28.9557, -1.07712, -4.13033, 1.11", "29.0225, -1.09221, -4.1409, 1.11", "29.9289, -1.35268, -4.33353, 0.52", "30.8738, -1.66455, -4.57326, 0.52", "32.3397, -2.23092, -5.03074, 1.47", "33.669, -2.79382, -5.4813, 2.58", "34.6382, -3.26801, -5.85118, 3.09" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "24.4859, -0.51102, -5.57235, 0.88", "24.1176, -1.37402, -6.60211, 0.88", "23.8727, -2.07296, -7.43326, 0.52", "23.7355, -2.50847, -7.93305, 0.88", "23.6376, -2.84167, -8.30595, 0.88", "23.4145, -3.66523, -9.16711, 0.29", "23.4051, -3.70363, -9.2042, 0.29", "23.3641, -3.98987, -9.45867, 0.96", "23.3251, -4.33236, -9.72412, 0.96", "23.3182, -4.37049, -9.76199, 0.96", "23.1314, -4.93988, -10.4704, 0.15", "22.9999, -5.23428, -10.8658, 0.15", "22.883, -5.47518, -11.2101, 1.18", "22.6882, -5.87188, -11.8457, 1.18", "22.2448, -6.80342, -13.3706, 0.22", "22.0942, -7.11974, -13.8948, 1.99", "22.0009, -7.31704, -14.2241, 2.58", "21.9006, -7.55632, -14.5994, 2.28", "21.5616, -8.56136, -15.9476, 0.52", "21.4438, -8.98322, -16.4153, 0.29", "21.3772, -9.30429, -16.7052, 0.96", "21.3364, -9.58859, -16.9766, 1.18", "21.253, -10.3211, -17.6994, 0.37", "21.1839, -11.0116, -18.3801, 1.77", "21.1606, -11.3472, -18.7011, 2.28", "21.1422, -11.7629, -19.101, 2.14", "21.0688, -13.1274, -20.3698, 0.29", "21.0326, -13.7194, -20.913, 1.33", "21.0142, -13.95, -21.1147, 2.28", "20.9531, -14.6045, -21.6738, 1.4", "20.8325, -15.5605, -22.4521, 0.22", "20.7435, -16.1061, -22.8695, 0.22", "20.7346, -16.1502, -22.9002, 0.22", "20.5363, -17.0569, -23.5473, 2.06", "20.4275, -17.532, -23.8892, 2.43", "20.1574, -18.6107, -24.6589, 0.22", "20.0485, -19.0568, -24.9929, 0.22", "19.9686, -19.4372, -25.2776, 0.81", "19.9245, -19.663, -25.4378, 1.11", "19.9073, -19.7597, -25.5013, 1.11", "19.8762, -20.0001, -25.6433, 1.11", "19.7902, -20.9152, -26.1339, 0.37", "19.738, -21.5716, -26.4764, 0.37", "19.6725, -22.7249, -27.0464, 1.92", "19.65, -23.1893, -27.2762, 2.58", "19.6035, -24.4281, -27.8794, 0.29", "19.5917, -25.0968, -28.2014, 0.29", "19.5916, -25.1394, -28.221, 0.29", "19.5962, -25.742, -28.502, 0.29", "19.6106, -26.4416, -28.8246, 1.25", "19.6166, -26.8194, -28.9972, 1.69", "19.6084, -27.9615, -29.5561, 0.15", "19.5983, -28.5667, -29.8652, 0.15", "19.5818, -29.0332, -30.1097, 1.25", "19.5636, -29.3506, -30.2799, 1.55", "19.5428, -29.8583, -30.5461, 0.59", "19.546, -30.869, -31.0737, 0.22", "19.5618, -31.2227, -31.2555, 0.22", "19.6189, -31.7007, -31.4964, 1.33", "19.6679, -32.0066, -31.6432, 1.47", "19.8778, -33.2706, -32.2108, 0.22", "20.0463, -34.2603, -32.6227, 1.84", "20.0771, -34.4284, -32.6867, 2.14", "20.3429, -36.0061, -33.2812, 0.22", "20.4706, -36.8609, -33.5971, 0.52", "20.5858, -37.8223, -33.9495, 0.22", "20.6284, -38.4114, -34.1611, 1.47", "20.6371, -38.8442, -34.3144, 1.77", "20.6265, -39.8821, -34.6891, 0.15", "20.5976, -40.3075, -34.8447, 0.15", "20.572, -40.6238, -34.978, 0.37", "20.5401, -40.9838, -35.1465, 0.37", "20.4987, -41.4957, -35.4009, 0.22", "20.4712, -41.9708, -35.6426, 0.96", "20.4703, -42.3403, -35.8318, 1.4", "20.5066, -43.4657, -36.4016, 0.22", "20.5106, -43.5219, -36.4287, 0.22", "20.5504, -43.9186, -36.6207, 0.22", "20.5925, -44.4283, -36.8627, 1.11", "20.6202, -44.8597, -37.0561, 1.47", "20.6428, -45.2291, -37.2161, 1.62", "20.6792, -45.9002, -37.4851, 0.59", "20.7217, -46.7858, -37.8521, 0.22", "20.7434, -47.3899, -38.1084, 0.22", "20.7764, -47.8863, -38.3267, 0.44", "20.7829, -47.9429, -38.3521, 0.44", "20.8746, -48.5613, -38.6298, 0.22", "20.9887, -49.1763, -38.9024, 1.25", "21.0774, -49.6462, -39.1058, 1.4", "21.2133, -50.4658, -39.4689, 0.22", "21.3024, -51.1529, -39.7756, 1.33", "21.3263, -51.4707, -39.9151, 1.92", "21.3277, -51.5209, -39.9369, 1.92", "21.3203, -52.8175, -40.4741, 0.22", "21.3046, -53.3154, -40.6741, 0.22", "21.2776, -53.7749, -40.8505, 1.18", "21.2263, -54.4956, -41.0961, 1.84", "21.1588, -55.7438, -41.4795, 0.22", "21.1301, -56.4088, -41.6643, 0.22", "21.1203, -56.8605, -41.7734, 1.03", "21.1158, -57.1899, -41.8407, 1.03", "21.0861, -58.3176, -42.0358, 0.22", "21.074, -59.0001, -42.1274, 0.96", "21.0609, -59.342, -42.1596, 1.25", "21.0588, -59.3964, -42.1642, 1.25", "20.9981, -60.3905, -42.2625, 0.22", "20.9488, -60.9596, -42.3022, 0.88", "20.9411, -61.0136, -42.3056, 0.88", "20.8524, -61.3965, -42.3235, 0.88", "20.8361, -61.4566, -42.327, 0.88", "20.6036, -62.1978, -42.3626, 0.15", "20.3794, -62.8956, -42.4039, 0.52", "20.1895, -63.5126, -42.4437, 0.15", "20.0321, -64.0526, -42.4874, 1.4", "19.8956, -64.5471, -42.5327, 1.55", "19.588, -65.7351, -42.6623, 0.22", "19.4357, -66.4639, -42.7652, 0.22", "19.3589, -66.9062, -42.8507, 1.03", "19.31, -67.3567, -42.9386, 1.4", "19.3075, -67.4103, -42.9495, 1.4", "19.3125, -67.6377, -43.0009, 1.4", "19.4233, -68.5994, -43.2659, 0.15", "19.4789, -69.0368, -43.3859, 0.15", "19.5389, -69.5149, -43.5123, 0.44", "19.5459, -69.5894, -43.5318, 0.44", "19.558, -69.8231, -43.5883, 0.44", "19.5615, -70.4403, -43.7309, 0.15", "19.5385, -71.1215, -43.8828, 0.15", "19.512, -71.629, -43.9931, 1.4", "19.4696, -72.1884, -44.1133, 1.77", "19.433, -73.1101, -44.31, 0.22", "19.4277, -73.566, -44.4046, 0.59", "19.447, -73.8488, -44.4558, 0.59", "19.5157, -74.3139, -44.5284, 0.22", "19.5285, -74.3741, -44.5378, 0.22", "19.7243, -75.0845, -44.6497, 0.22", "19.7399, -75.1358, -44.6585, 0.22", "19.9949, -75.9309, -44.8007, 1.18", "20.0623, -76.1468, -44.8413, 1.77", "20.521, -77.5929, -45.1269, 0.22", "20.6642, -78.0603, -45.206, 0.59", "20.9149, -78.9081, -45.3341, 0.22", "21.0911, -79.4811, -45.4153, 1.03", "21.2137, -79.8576, -45.4648, 1.25", "21.4111, -80.4249, -45.5264, 0.88", "21.7681, -81.3845, -45.5892, 0.22", "21.7862, -81.4355, -45.5918, 0.22", "21.9057, -81.7742, -45.602, 0.22", "21.9968, -82.0877, -45.6206, 0.96", "22.082, -82.5401, -45.6721, 1.25", "22.0891, -82.5934, -45.6818, 1.25", "22.1308, -82.9245, -45.7629, 1.25", "22.1384, -82.9848, -45.7769, 1.25", "22.2614, -83.991, -46.001, 0.22", "22.3444, -84.6644, -46.1587, 0.22", "22.4355, -85.5609, -46.3812, 0.22", "22.4778, -86.0299, -46.5231, 1.11", "22.5083, -86.4881, -46.6805, 1.55", "22.5167, -86.8138, -46.8038, 1.33", "22.5088, -87.3928, -47.0451, 0.96", "22.4461, -88.1458, -47.354, 0.44", "22.2691, -89.1681, -47.7661, 0.15", "22.1386, -89.7637, -47.9749, 0.15", "22.0317, -90.1943, -48.1064, 0.81", "21.9199, -90.6208, -48.2128, 1.11", "21.6978, -91.5379, -48.3113, 0.22", "21.6315, -91.874, -48.3048, 0.37", "21.4899, -92.6816, -48.2045, 0.22", "21.4523, -92.9605, -48.1628, 0.88", "21.4362, -93.1229, -48.1412, 1.18", "21.3149, -94.4325, -48.0187, 0.22", "21.2712, -94.9987, -47.997, 0.22", "21.2278, -95.329, -48.0111, 0.81", "21.1255, -95.8293, -48.0842, 0.59", "20.9432, -96.5343, -48.2296, 0.22", "20.803, -96.958, -48.37, 0.59", "20.7388, -97.1026, -48.4362, 0.59", "20.2755, -98.0227, -48.9107, 0.22", "19.9126, -98.6939, -49.2864, 0.66", "19.7347, -98.9972, -49.4681, 0.88", "19.1607, -99.9087, -50.0481, 0.22", "18.6911, -100.617, -50.5118, 0.22", "18.5321, -100.839, -50.6662, 0.88", "18.5035, -100.875, -50.6934, 0.88", "18.1699, -101.316, -51.0182, 1.11", "18.1442, -101.355, -51.045, 1.11", "17.8957, -101.832, -51.336, 1.11", "17.5795, -102.543, -51.767, 0.15", "17.4076, -102.978, -52.0248, 0.15", "17.2132, -103.487, -52.3304, 0.88", "16.8964, -104.388, -52.8841, 0.15", "16.7728, -104.786, -53.1286, 0.88", "16.7622, -104.831, -53.1567, 0.88", "16.6668, -105.438, -53.5175, 0.88" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "25.9744, 12.4043, 0.545216, 0.74", "28.2343, 12.5557, -1.31434, 0.74", "29.6754, 12.6416, -2.2872, 1.25", "31.6758, 12.7603, -3.48614, 0.37", "32.7122, 12.8393, -4.05504, 0.52", "33.5082, 12.9316, -4.44711, 0.96", "34.7908, 13.1476, -5.00507, 1.55", "36.5487, 13.7396, -5.07563, 0.22", "36.6201, 13.7775, -5.04621, 0.22", "37.0056, 14.0486, -4.76666, 0.22", "37.9323, 14.8276, -3.95684, 1.62", "38.4437, 15.3213, -3.4844, 1.99", "40.0745, 17.0466, -1.92748, 0.44", "40.6285, 17.6245, -1.48318, 0.44", "41.3156, 18.2573, -1.03534, 0.44", "41.4554, 18.3718, -0.965079, 0.44", "42.3069, 18.9942, -0.669221, 0.44", "42.3764, 19.0436, -0.654384, 0.44", "43.4455, 19.8005, -0.638863, 1.11", "44.0633, 20.19, -0.596551, 2.21", "44.6925, 20.5488, -0.530241, 2.43", "44.7675, 20.5897, -0.520142, 2.43", "45.4821, 20.959, -0.40467, 2.14", "46.0627, 21.2558, -0.296048, 1.77", "47.5641, 22.0086, 0.0370137, 0.59", "47.6496, 22.0527, 0.0568997, 0.59", "48.3273, 22.3912, 0.212346, 0.59", "48.6091, 22.5309, 0.270906, 0.59", "48.9061, 22.6758, 0.325065, 0.66", "49.1474, 22.7672, 0.350293, 0.66", "49.7812, 22.8521, 0.311986, 0.66", "49.8777, 22.8485, 0.301099, 0.66", "50.7534, 22.7484, 0.166787, 0.29", "50.9343, 22.7423, 0.145893, 0.29", "52.0882, 22.807, 0.0570452, 0.29", "52.9381, 22.9279, 0.0210478, 0.29", "53.0094, 22.9434, 0.0200937, 0.29", "53.8867, 23.223, 0.0506479, 0.29", "55.2248, 23.8036, 0.298855, 1.4", "55.8615, 24.1277, 0.470534, 2.06", "56.239, 24.3366, 0.589403, 2.43", "56.3229, 24.3799, 0.616713, 2.43", "56.8909, 24.6316, 0.794552, 2.36", "58.6624, 25.2544, 1.32183, 0.44", "59.3519, 25.4352, 1.48846, 0.37", "60.2294, 25.5966, 1.63866, 0.29", "60.9432, 25.6364, 1.739, 0.74", "61.2089, 25.6289, 1.76625, 0.74", "61.4912, 25.5972, 1.7821, 0.74", "62.4037, 25.4276, 1.79267, 0.44", "63.546, 25.1834, 1.81625, 0.44", "65.6315, 24.7182, 1.88356, 1.77", "66.4971, 24.519, 1.91135, 2.36", "66.9697, 24.4062, 1.92346, 2.87", "67.0644, 24.3835, 1.92561, 2.87", "67.927, 24.1688, 1.93981, 2.5", "68.021, 24.1431, 1.937, 2.5", "69.9255, 23.6222, 1.74511, 0.44", "70.5897, 23.4497, 1.69667, 0.44", "70.7677, 23.4095, 1.68759, 0.44", "71.3595, 23.3242, 1.67196, 0.66", "72.1228, 23.2732, 1.6704, 0.88", "72.6625, 23.2932, 1.70729, 0.88", "73.9897, 23.5117, 1.89592, 0.29", "74.2644, 23.5702, 1.94443, 0.29", "75.409, 23.8468, 2.17198, 0.29", "75.5853, 23.889, 2.19472, 0.29", "76.9296, 24.1636, 2.25347, 1.03", "77.3729, 24.2395, 2.23798, 1.4", "77.8999, 24.3091, 2.17886, 1.4", "77.9835, 24.3183, 2.16661, 1.4", "79.8591, 24.4818, 1.82309, 0.29", "80.8157, 24.6013, 1.62431, 0.29", "81.6309, 24.7412, 1.42944, 0.29", "82.0904, 24.8541, 1.34029, 1.33", "82.7229, 25.0659, 1.22371, 1.62", "82.7911, 25.09, 1.21231, 1.62", "83.3304, 25.2707, 1.13969, 1.77", "83.9477, 25.4534, 0.980876, 1.84", "84.7546, 25.6655, 0.708565, 1.4", "86.2327, 26.0273, 0.147121, 0.44", "87.0615, 26.2322, -0.188737, 0.44", "88.0315, 26.4935, -0.58075, 0.44", "89.5323, 26.9369, -1.22124, 1.25", "89.6938, 26.9919, -1.2864, 1.25", "90.3364, 27.232, -1.56092, 1.92", "90.8235, 27.445, -1.77633, 2.28", "91.6389, 27.8388, -2.14786, 2.28", "92.9674, 28.4872, -2.80584, 0.22", "94.3299, 29.1054, -3.49413, 0.22", "95.5844, 29.6316, -4.1637, 0.22", "96.3017, 29.9195, -4.5676, 1.25", "96.7446, 30.0815, -4.82175, 1.25", "98.0971, 30.5384, -5.63913, 0.44", "98.1668, 30.5641, -5.68082, 0.44", "98.8183, 30.8266, -6.07193, 0.44", "99.8006, 31.2711, -6.5669, 1.33", "100.246, 31.4798, -6.78245, 1.4", "101.969, 32.2869, -7.67074, 0.15", "102.712, 32.5726, -8.07591, 0.15", "102.783, 32.5961, -8.11762, 0.15", "103.779, 32.8842, -8.73634, 1.11", "104.659, 33.0846, -9.30601, 1.84", "105.816, 33.2729, -10.0749, 1.03", "107.431, 33.4204, -11.1149, 0.22", "107.514, 33.4252, -11.1662, 0.22", "108.172, 33.4666, -11.5537, 0.22", "109.623, 33.5609, -12.3701, 1.18", "111.039, 33.7229, -13.0765, 2.14", "111.606, 33.8106, -13.3238, 2.14", "113.243, 34.1285, -13.9839, 0.44", "113.946, 34.2532, -14.2583, 0.66", "114.036, 34.2686, -14.2919, 0.66", "114.974, 34.4261, -14.5863, 0.22", "115.74, 34.5666, -14.8145, 0.59", "115.82, 34.5813, -14.8387, 0.59", "116.832, 34.7778, -15.1225, 0.37", "118.123, 35.0296, -15.4709, 1.92", "119.06, 35.2137, -15.7114, 2.36", "121.157, 35.6279, -16.1606, 0.29", "121.807, 35.7698, -16.2788, 0.29", "123.21, 36.0932, -16.4853, 1.62", "123.632, 36.2033, -16.5285, 2.06", "123.726, 36.2282, -16.534, 2.06", "125.706, 36.7464, -16.5894, 0.22", "125.777, 36.7636, -16.5887, 0.22", "126.487, 36.898, -16.5873, 0.22", "127.472, 37.0405, -16.5928, 1.18", "127.919, 37.0936, -16.6052, 1.18", "129.452, 37.2129, -16.6892, 0.22", "129.537, 37.2139, -16.697, 0.22", "130.376, 37.1878, -16.803, 0.22", "130.46, 37.1818, -16.8156, 0.22", "131.958, 36.9886, -17.0765, 1.62", "132.676, 36.8713, -17.214, 1.92", "133.335, 36.7359, -17.3532, 1.92", "134.852, 36.4411, -17.6717, 0.22", "134.934, 36.4282, -17.6886, 0.22", "135.497, 36.3519, -17.801, 0.52", "135.683, 36.3405, -17.839, 0.52", "135.935, 36.3663, -17.8848, 0.52", "136.826, 36.593, -18.0193, 0.22", "137.43, 36.7842, -18.0928, 0.81", "137.731, 36.8708, -18.1407, 1.03", "138.514, 37.0952, -18.2811, 0.29", "139.376, 37.3147, -18.4494, 0.22", "139.458, 37.3314, -18.4666, 0.22", "140.196, 37.4088, -18.6919, 0.22", "141.36, 37.4209, -19.0979, 1.03", "141.439, 37.4187, -19.1295, 1.03", "141.937, 37.3825, -19.3409, 1.4", "142.348, 37.3527, -19.5213, 1.4", "143.814, 37.2529, -20.1608, 0.22", "144.762, 37.1949, -20.5578, 0.22", "145.998, 37.1005, -21.0689, 1.4", "146.479, 37.0654, -21.2709, 1.84", "147.056, 37.0248, -21.5257, 1.84", "149.399, 36.8579, -22.5539, 0.22", "150.308, 36.7977, -22.9373, 1.18", "150.462, 36.7893, -23.0058, 1.18", "150.788, 36.7803, -23.1485, 1.4", "152.008, 36.796, -23.6953, 0.29", "153.011, 36.847, -24.1497, 0.15", "153.099, 36.8601, -24.1874, 0.15", "153.755, 37.006, -24.5039, 0.15", "154.464, 37.237, -24.845, 0.88", "154.618, 37.3013, -24.9188, 0.88", "154.924, 37.4757, -25.0621, 1.4", "155.407, 37.7862, -25.3054, 1.4", "157.367, 39.0679, -26.2809, 0.22", "158.053, 39.5307, -26.622, 0.22", "158.128, 39.5798, -26.66, 0.22", "158.719, 39.949, -26.9687, 0.22", "159.757, 40.5758, -27.5085, 1.33", "160.12, 40.7817, -27.6898, 1.33", "160.19, 40.8179, -27.7237, 1.33", "160.638, 41.0054, -27.9515, 1.33", "162.204, 41.493, -28.8997, 0.29", "162.613, 41.5894, -29.1932, 0.29", "162.689, 41.6045, -29.2515, 0.29", "163.786, 41.9004, -30.2963, 1.4", "164.447, 42.1055, -30.9964, 1.84", "166.361, 42.8263, -33.2072, 0.22", "167.503, 43.3225, -34.5911, 1.47", "167.707, 43.4412, -34.8532, 2.14", "170.04, 45.2308, -38.0558, 0.22", "170.087, 45.2791, -38.1267, 0.22", "170.629, 46.0487, -39.0198, 1.25", "170.852, 46.5228, -39.4006, 1.4", "171.568, 48.4604, -40.584, 0.22", "171.779, 49.1515, -40.9627, 0.22", "171.824, 49.3315, -41.0434, 0.22", "172.044, 50.3046, -41.5371, 0.22", "172.348, 51.8208, -42.3752, 1.77", "172.489, 52.5519, -42.8026, 1.99", "173.115, 55.5343, -44.5027, 0.22", "173.224, 56.0068, -44.7617, 0.52", "173.588, 57.4452, -45.5137, 0.22", "173.877, 58.4993, -46.0587, 1.11", "174.022, 58.9541, -46.2836, 1.55", "174.752, 60.98, -47.1612, 0.22", "174.971, 61.5138, -47.3463, 0.22", "175.473, 62.5727, -47.7075, 1.25", "176.021, 63.613, -48.04, 1.55", "177.053, 65.3555, -48.7048, 0.22", "177.605, 66.2111, -49.0858, 0.88", "178.034, 66.803, -49.3884, 1.4", "179.327, 68.4625, -50.2852, 0.22", "179.387, 68.5268, -50.3302, 0.22", "180.602, 69.6304, -51.2662, 1.47", "180.667, 69.6806, -51.3192, 1.47", "181.19, 70.032, -51.7623, 1.84", "181.256, 70.073, -51.8208, 1.84", "183.562, 71.3098, -53.7611, 0.15", "184.597, 71.8199, -54.5641, 0.96", "184.664, 71.8462, -54.6105, 0.96", "185.165, 72.0079, -54.9386, 0.96", "185.336, 72.0401, -55.0391, 0.96", "186.656, 72.082, -55.6254, 0.22", "186.83, 72.048, -55.6693, 0.22", "187.702, 71.8334, -55.8781, 0.22", "187.96, 71.7798, -55.9242, 0.22", "189.208, 71.5494, -56.1024, 1.62", "190.037, 71.4123, -56.2016, 1.92", "192.517, 71.0477, -56.4526, 0.22", "194.395, 70.8697, -56.5873, 0.22", "196.067, 70.7851, -56.664, 0.22", "197.245, 70.7541, -56.6903, 1.47", "197.779, 70.7547, -56.6845, 2.14", "197.864, 70.757, -56.6817, 2.14", "200.066, 70.8234, -56.5579, 0.22", "200.151, 70.824, -56.556, 0.22", "200.867, 70.8009, -56.5861, 0.66", "201.062, 70.79, -56.5949, 0.66", "201.257, 70.7738, -56.6053, 0.66", "203.11, 70.5263, -56.4697, 0.22", "203.578, 70.4439, -56.3925, 0.22", "203.918, 70.3862, -56.3199, 0.22", "204.884, 70.232, -56.1025, 1.18", "205.314, 70.1729, -55.9878, 1.84", "207.979, 69.8539, -55.2035, 0.22", "208.736, 69.7714, -54.9539, 0.52", "209.078, 69.7434, -54.8297, 0.52", "210.276, 69.6575, -54.3738, 0.22", "211.683, 69.5769, -53.8182, 1.4", "212.249, 69.5253, -53.5426, 1.62", "212.354, 69.5125, -53.4855, 1.62", "213.968, 69.2446, -52.4313, 0.22", "214.656, 69.1046, -51.8691, 0.22", "214.71, 69.0925, -51.8214, 0.22", "216.67, 68.5263, -50.0988, 0.22", "217.42, 68.2697, -49.4671, 1.62", "217.483, 68.2438, -49.4165, 1.62", "219.575, 67.1416, -47.9816, 0.22", "220.543, 66.5939, -47.3868, 0.66", "221.412, 66.051, -46.9342, 0.22", "222.239, 65.4599, -46.5975, 0.88", "222.695, 65.0705, -46.4095, 1.11", "223.999, 63.8137, -45.9094, 0.22", "224.953, 62.7912, -45.6227, 0.88", "225.814, 61.8392, -45.3388, 0.15", "226.255, 61.37, -45.1964, 0.15", "227.065, 60.5157, -44.9326, 1.03", "227.286, 60.294, -44.8535, 1.03", "228.199, 59.3152, -44.4389, 0.22", "228.331, 59.1677, -44.3839, 0.22", "228.677, 58.8048, -44.2362, 0.22", "228.744, 58.7376, -44.2089, 0.22", "229.591, 57.8722, -43.8523, 0.74", "230.727, 56.6281, -43.2915, 0.22", "231.238, 56.0052, -42.9822, 1.4", "231.514, 55.6781, -42.8125, 1.84", "232.026, 55.0901, -42.4967, 1.4" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "25.9744, 12.4043, 0.545216, 0.66", "27.1054, 13.7233, 0.770577, 0.66", "27.208, 13.8963, 0.799234, 0.66", "27.572, 14.8914, 0.957459, 0.59", "27.6231, 15.1486, 1.00123, 0.59", "27.7153, 16.0533, 1.15774, 0.59", "27.7179, 16.1373, 1.16864, 0.59", "27.5647, 17.482, 1.30844, 0.59", "27.4149, 18.4172, 1.37634, 0.96", "27.2613, 19.3629, 1.41557, 1.4", "27.2021, 19.9109, 1.42367, 1.33", "27.1529, 21.0461, 1.41753, 1.03", "27.1557, 21.1659, 1.41706, 1.03", "27.2553, 22.2263, 1.41069, 0.37", "27.4421, 23.4379, 1.41336, 0.29", "27.7001, 24.7204, 1.4329, 0.66", "27.9496, 25.7165, 1.47082, 1.25", "28.1797, 26.5349, 1.5229, 1.84", "28.3296, 27.043, 1.55605, 1.99", "28.5859, 27.8277, 1.60856, 1.77", "28.9627, 28.9115, 1.6851, 0.96", "29.5789, 30.4822, 1.80735, 0.15", "29.6158, 30.5708, 1.8132, 0.15", "30.0718, 31.5764, 1.8589, 0.15", "30.4272, 32.3115, 1.89082, 0.37", "30.5088, 32.4716, 1.89756, 0.37", "30.596, 32.6316, 1.90458, 0.37", "33.2984, 44.1586, 4.2709, 0.37", "33.7729, 55.84, 7.36309, 0.37", "33.0659, 67.5507, 10.3024, 0.37", "31.4962, 79.472, 11.6746, 0.37", "27.9061, 90.7365, 14.0055, 0.37", "24.6147, 102.305, 14.9774, 0.37", "22.063, 114.115, 15.1462, 0.37", "20.5051, 125.957, 17.0728, 0.37", "19.5653, 137.833, 19.2165, 0.37", "17.87, 149.454, 22.0713, 0.37", "14.3576, 160.488, 25.3564, 0.37" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-27.6919, -14.3681, 3.43213, 0.29", "-27.53, -14.1824, 5.75674, 0.29", "-27.551, -14.15, 6.30766, 0.29", "-27.7702, -14.1528, 6.84472, 0.29", "-27.9833, -14.1707, 7.08554, 0.81", "-28.0466, -14.1783, 7.11961, 0.81", "-28.518, -14.2365, 7.30089, 1.03", "-28.8298, -14.275, 7.35463, 1.03", "-29.7578, -14.413, 7.49381, 0.37", "-29.8793, -14.4311, 7.51202, 0.37", "-30.6711, -14.5338, 7.64872, 0.37", "-31.3394, -14.5928, 7.77364, 0.66", "-31.9357, -14.6291, 7.89662, 0.88", "-32.0881, -14.6332, 7.92502, 0.88", "-32.6918, -14.6365, 8.03695, 0.88", "-33.2127, -14.6255, 8.1166, 1.03", "-34.1016, -14.5942, 8.24902, 1.18", "-35.3868, -14.5402, 8.43654, 0.22", "-36.4034, -14.4916, 8.59115, 1.03", "-36.7703, -14.4726, 8.64984, 1.03", "-38.5027, -14.3741, 8.93963, 0.29", "-39.0528, -14.3314, 9.03996, 0.66", "-39.5791, -14.2742, 9.15767, 0.88", "-40.0862, -14.1766, 9.29319, 1.25", "-40.4444, -14.0849, 9.41125, 1.47", "-40.7934, -13.9714, 9.53946, 1.47", "-41.7057, -13.596, 9.96351, 0.29", "-42.245, -13.3408, 10.2373, 0.29", "-43.1438, -12.8642, 10.7699, 1.55", "-43.4815, -12.6696, 10.9957, 1.92", "-43.7784, -12.4802, 11.2221, 1.84", "-44.6685, -11.8333, 12.0441, 0.22", "-45.0191, -11.5386, 12.4425, 0.22", "-45.4584, -11.0953, 13.0611, 1.18", "-45.6941, -10.7951, 13.4889, 1.55", "-45.8549, -10.533, 13.8442, 1.55", "-46.1078, -9.95703, 14.6298, 0.29", "-46.2093, -9.57593, 15.1292, 0.29", "-46.3125, -9.05519, 15.8107, 0.52", "-46.3428, -8.81907, 16.1171, 0.66", "-46.3893, -8.47467, 16.5852, 0.66", "-46.4883, -7.96812, 17.2921, 0.22", "-46.5642, -7.64315, 17.7512, 0.29", "-46.6102, -7.49375, 17.9832, 0.29", "-46.6252, -7.45608, 18.0462, 0.29", "-46.8893, -6.85065, 19.086, 1.62", "-47.0212, -6.56323, 19.5887, 1.84", "-47.0379, -6.52553, 19.6513, 1.84", "-47.3031, -5.85906, 20.7495, 0.22", "-47.315, -5.82477, 20.8026, 0.22", "-47.4709, -5.31153, 21.5173, 0.22", "-47.4805, -5.27162, 21.5671, 0.22", "-47.6851, -4.42362, 22.566, 1.55", "-47.7939, -4.03143, 23.004, 2.28", "-47.886, -3.74438, 23.31, 2.28", "-48.3264, -2.57266, 24.5578, 0.22", "-48.5088, -2.15464, 25.0032, 0.22", "-48.7857, -1.61681, 25.5868, 0.81", "-49.2125, -0.92646, 26.3555, 0.22", "-49.4781, -0.576915, 26.7721, 0.88", "-49.8055, -0.223135, 27.2233, 0.96", "-50.3652, 0.270247, 27.902, 0.22", "-51.0239, 0.789322, 28.6566, 1.99", "-51.3341, 1.01829, 29.0032, 2.14", "-52.128, 1.57172, 29.8763, 0.29", "-52.5157, 1.82801, 30.2963, 0.59", "-52.5627, 1.85613, 30.3454, 0.59", "-52.7828, 1.96589, 30.5593, 0.74", "-57.1804, 6.5429, 39.0608, 0.74", "-59.4659, 10.6889, 48.6047, 0.74", "-61.6573, 16.0767, 57.5923, 0.74", "-62.6556, 20.7324, 67.1774, 0.74", "-63.161, 24.316, 77.2075, 0.74", "-65.2888, 28.4602, 86.7925, 0.74", "-67.0796, 31.6331, 96.7698, 0.74", "-67.1373, 34.4582, 107.021, 0.74", "-68.5078, 36.6967, 117.277, 0.74" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-27.6919, -14.3681, 3.43213, 0.96", "-28.9635, -13.441, 1.87517, 0.96", "-29.3755, -13.1351, 1.43618, 0.88", "-30.6986, -12.154, 0.248557, 0.37", "-31.1541, -11.817, -0.0561933, 1.11", "-31.3492, -11.6726, -0.161543, 1.77", "-31.6631, -11.4399, -0.295058, 1.99", "-32.0735, -11.1038, -0.286187, 2.36", "-32.4952, -10.7533, -0.32386, 2.14", "-33.2812, -10.1181, -0.457077, 0.88", "-33.3159, -10.0891, -0.468258, 0.88", "-33.5968, -9.85022, -0.5835, 0.88", "-34.1828, -9.34408, -0.891674, 0.74", "-36.2383, -7.51707, -2.26297, 1.33", "-36.5657, -7.21679, -2.53305, 2.06", "-36.6935, -7.09758, -2.66016, 2.06" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-14.0324, -35.2986, 11.543, 0.96", "-13.5538, -36.7707, 10.722, 0.96", "-13.2762, -37.9731, 10.1516, 0.74", "-13.0888, -39.1896, 9.62977, 0.74", "-12.9755, -40.4271, 9.15935, 0.74", "-12.9513, -40.994, 8.96395, 1.4", "-12.944, -42.0319, 8.63677, 1.55", "-13.0072, -42.9879, 8.41387, 1.55", "-13.1718, -44.2682, 8.14899, 1.4", "-13.3805, -45.6607, 7.88646, 1.03", "-13.6001, -47.0598, 7.61944, 0.66", "-13.8196, -48.177, 7.36983, 0.59", "-14.0645, -49.2852, 7.08916, 1.25", "-14.3832, -50.4798, 6.75772, 1.69", "-14.8253, -51.8226, 6.36359, 1.84", "-15.2324, -52.8632, 6.03493, 1.84", "-15.9677, -54.4721, 5.49198, 0.52", "-15.9989, -54.5359, 5.47458, 0.52", "-16.5029, -55.4497, 5.29502, 0.52", "-16.9919, -56.2378, 5.2269, 1.03", "-17.548, -57.0518, 5.22625, 1.33", "-18.3852, -58.2632, 5.3228, 1.77", "-19.5254, -59.9961, 5.54769, 0.52", "-19.9972, -60.7562, 5.61245, 0.37", "-20.4263, -61.5295, 5.64059, 0.37", "-20.8916, -62.5329, 5.5184, 0.22", "-21.0622, -62.991, 5.37837, 1.25", "-21.1889, -63.5564, 5.09071, 1.77", "-21.3104, -64.5606, 4.42868, 1.99", "-21.3185, -65.1522, 4.03506, 1.69", "-21.2367, -66.6716, 3.0433, 0.74", "-21.2312, -66.7437, 2.99885, 0.74", "-21.1864, -67.4792, 2.57917, 0.44", "-21.1236, -68.5832, 2.0141, 0.81", "-21.0803, -69.2973, 1.68174, 1.25", "-21.0426, -69.8671, 1.43792, 1.47", "-20.9494, -71.1817, 0.94434, 0.52", "-20.8786, -72.1806, 0.584606, 0.29", "-20.8086, -73.4134, 0.20093, 0.29", "-20.7784, -74.5539, -0.0914671, 1.47", "-20.7918, -75.834, -0.364035, 2.36", "-20.8246, -76.8016, -0.533205, 2.8", "-20.8994, -77.8727, -0.66574, 2.73", "-21.1625, -79.7061, -0.899244, 0.88", "-21.4201, -80.8737, -1.04386, 0.52", "-21.6261, -81.6454, -1.14024, 0.59", "-21.6545, -81.7382, -1.1527, 0.59", "-21.9678, -82.6706, -1.30081, 0.59", "-22.5708, -84.3033, -1.64358, 0.22", "-22.8542, -85.0197, -1.87533, 0.22", "-23.302, -86.197, -2.33979, 0.59", "-24.8772, -97.3355, -7.05331, 0.59", "-28.189, -108.409, -10.9668, 0.59", "-31.7896, -118.394, -16.8432, 0.59", "-32.6672, -129.628, -21.5122, 0.59", "-31.2434, -141.324, -24.6607, 0.59", "-31.7085, -153.344, -26.9096, 0.59", "-32.9908, -165.513, -26.819, 0.59", "-34.7586, -177.591, -26.1238, 0.59", "-35.7462, -189.78, -25.8427, 0.59", "-37.5135, -201.783, -24.4395, 0.59", "-38.9089, -213.914, -25.343, 0.59" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-14.0324, -35.2986, 11.543, 0.59", "-14.9481, -36.9174, 11.997, 0.59", "-15.5867, -38.2921, 12.3417, 0.59", "-16.0831, -39.6143, 12.6085, 1.33", "-16.1106, -39.7052, 12.6225, 1.33", "-16.2822, -40.3862, 12.7014, 1.62", "-16.572, -41.6381, 12.8083, 1.92", "-16.8325, -43.1284, 12.8465, 1.18", "-17.0323, -44.6146, 12.7842, 1.03", "-17.2259, -46.1073, 12.5919, 0.96", "-17.4582, -47.5782, 12.3212, 0.74", "-17.6792, -48.6826, 12.0682, 1.4", "-17.913, -49.6289, 11.8159, 1.77", "-18.4202, -51.4303, 11.3976, 1.4", "-19.0927, -53.5, 11.0317, 0.66", "-19.5364, -54.7567, 10.8188, 0.96", "-20.1293, -56.3341, 10.5821, 1.62", "-20.601, -57.5478, 10.4493, 1.84", "-21.3736, -59.4284, 10.38, 1.84", "-22.046, -60.9828, 10.5637, 2.06" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "34.6382, -3.26801, -5.85118, 0.66", "36.5446, -2.69116, -4.61069, 0.66", "37.6246, -2.37953, -3.91851, 0.37", "38.3779, -2.16528, -3.4316, 0.37", "41.0853, -1.39515, -1.68144, 0.96", "42.0697, -1.11513, -1.04508, 1.18", "43.1845, -0.798043, -0.324488, 1.4", "44.3392, -0.41219, 0.557844, 1.92", "45.5511, -0.0207274, 1.56341, 2.14" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "34.6382, -3.26801, -5.85118, 0.88", "35.0623, -5.00157, -5.49673, 0.88", "35.081, -5.05829, -5.48425, 0.88", "35.4708, -6.03152, -5.25308, 0.59", "35.7113, -6.53243, -5.11336, 0.88", "36.0774, -7.21716, -4.89901, 0.22", "36.3211, -7.64306, -4.75685, 0.22", "36.6047, -8.03712, -4.63197, 0.44", "36.9159, -8.40573, -4.47105, 0.52", "37.3429, -8.83321, -4.22119, 1.18", "37.5885, -9.07462, -4.07697, 1.69", "37.6315, -9.12029, -4.04921, 1.69", "37.8875, -9.41281, -3.88345, 1.69", "38.3604, -9.95963, -3.59405, 1.18", "38.9218, -10.5975, -3.26462, 0.37", "39.6746, -11.4294, -2.84589, 0.29", "40.0713, -11.8509, -2.63442, 0.29", "40.3152, -12.0878, -2.49266, 1.03", "40.5958, -12.322, -2.32752, 1.33", "40.6456, -12.3556, -2.29585, 1.33", "41.0394, -12.5519, -2.04238, 1.47", "41.3898, -12.6877, -1.81207, 1.25", "42.499, -13.142, -1.1095, 0.52", "42.8269, -13.2964, -0.906755, 0.22", "43.5113, -13.6422, -0.49384, 1.47", "44.0591, -13.9416, -0.18525, 2.14", "44.4916, -14.198, 0.0340733, 2.5", "45.7448, -14.9946, 0.627926, 0.52", "46.4246, -15.464, 0.921639, 0.52", "46.4766, -15.5018, 0.943928, 0.52", "47.3349, -16.1343, 1.29548, 0.52", "48.277, -16.8504, 1.70674, 1.18", "48.8689, -17.2788, 1.95086, 2.21", "49.0794, -17.4155, 2.03229, 2.58", "49.4933, -17.6665, 2.18788, 2.14", "50.3158, -18.1271, 2.47898, 0.66", "51.2626, -18.598, 2.75496, 0.44", "51.9873, -18.9154, 2.91933, 0.44", "52.6671, -19.1811, 3.05208, 0.44", "52.7213, -19.2032, 3.05749, 0.44", "53.5447, -19.569, 3.08654, 0.44", "54.5121, -20.0183, 3.06458, 1.77", "54.9902, -20.2428, 3.03698, 2.43", "55.5024, -20.4994, 3.0024, 2.65", "57.4353, -21.4725, 2.86426, 0.29", "58.3698, -21.9389, 2.80212, 0.29", "58.4491, -21.9797, 2.79621, 0.29", "59.2247, -22.3794, 2.74274, 0.29", "60.0977, -22.8217, 2.67118, 1.47", "60.4915, -23.0074, 2.63665, 2.06", "60.8694, -23.1136, 2.66368, 2.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "232.026, 55.0901, -42.4967, 0.22", "231.976, 53.9288, -42.2645, 0.22", "231.948, 53.3071, -42.1402, 0.22", "231.947, 53.266, -42.132, 0.22", "231.913, 52.4864, -41.9761, 0.22", "231.889, 51.9531, -41.8694, 0.66", "231.878, 51.6949, -41.8178, 0.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "232.026, 55.0901, -42.4967, 0.22", "233.396, 54.2855, -43.5583, 0.22", "233.514, 54.2257, -43.6589, 0.52", "234.871, 53.6925, -44.7732, 0.22", "235.471, 53.5082, -45.2714, 0.22", "236.506, 53.2401, -46.1185, 1.18", "236.773, 53.1785, -46.335, 1.47", "237.835, 53.0545, -47.1475, 1.03", "238.739, 53.0047, -47.794, 0.22", "239.55, 53.0311, -48.3325, 1.25", "239.866, 53.0616, -48.5125, 1.69", "239.928, 53.0666, -48.5406, 1.69", "241.678, 53.1764, -49.2072, 0.22", "242.352, 53.1813, -49.3814, 0.15", "242.865, 53.1649, -49.4672, 0.88", "243.982, 53.1133, -49.5462, 0.22", "244.744, 53.0974, -49.5591, 0.59", "244.811, 53.0991, -49.5567, 0.59", "245.975, 53.2478, -49.3824, 0.29", "246.796, 53.4295, -49.2364, 1.47", "247.131, 53.5373, -49.1631, 1.47", "248.349, 54.0686, -48.8872, 0.22", "248.847, 54.3354, -48.7635, 0.81", "250.176, 55.1525, -48.4182, 0.22", "251.093, 55.7802, -48.1454, 0.81", "251.974, 56.4016, -47.8688, 0.15", "252.488, 56.7827, -47.6959, 1.18", "252.556, 56.836, -47.6707, 1.18", "252.834, 57.0467, -47.5599, 1.18", "254.066, 57.9965, -47.0365, 0.15", "254.18, 58.084, -46.9826, 0.15", "255.162, 58.8218, -46.4545, 0.15", "255.212, 58.8587, -46.425, 0.15", "256.236, 59.6866, -45.7694, 1.11", "256.507, 59.923, -45.58, 1.11", "256.567, 59.9847, -45.5332, 1.11", "257.478, 60.9916, -44.7433, 0.22", "257.76, 61.3288, -44.4636, 0.59", "258.632, 62.4747, -43.5556, 0.22", "258.666, 62.5242, -43.5203, 0.22", "259.433, 63.7582, -42.7057, 1.11", "260.225, 65.0871, -41.8901, 0.15", "260.667, 65.8765, -41.4411, 1.11", "260.86, 66.2232, -41.2405, 1.11", "261.287, 66.9772, -40.7825, 0.22", "261.485, 67.3061, -40.578, 0.52", "262.238, 68.4463, -39.8691, 0.15", "262.291, 68.5147, -39.8232, 0.15", "262.776, 68.9874, -39.4812, 0.66", "263.89, 69.7511, -38.8031, 0.07", "264.392, 70.0072, -38.5271, 0.96", "264.857, 70.1965, -38.295, 1.25", "266.648, 70.72, -37.5132, 0.15", "268.078, 71.0641, -36.9512, 0.15", "269.9, 71.3957, -36.319, 1.33", "270.275, 71.4478, -36.1967, 1.33", "270.338, 71.4566, -36.1742, 1.33", "271.681, 71.7054, -35.6295, 0.15", "272.081, 71.8227, -35.4563, 0.37", "272.136, 71.8518, -35.4271, 0.37", "273.285, 72.651, -34.748, 0.15", "273.63, 72.9006, -34.5378, 0.74", "274.653, 73.687, -33.9091, 0.22", "275.11, 74.0685, -33.6187, 0.81", "275.41, 74.3077, -33.4313, 0.81", "276.782, 75.3753, -32.6177, 0.15", "277.32, 75.7679, -32.3319, 0.74", "277.665, 75.9728, -32.1647, 0.96" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-36.6935, -7.09758, -2.66016, 2.28", "-36.9987, -6.80835, -2.56593, 2.28", "-38.0261, -5.80073, -2.19379, 0.44", "-38.0813, -5.74392, -2.17498, 0.44", "-38.6203, -5.1681, -1.9861, 0.66", "-38.9137, -4.8601, -1.88011, 0.66", "-38.9695, -4.80469, -1.85913, 0.66", "-39.3208, -4.4926, -1.71823, 0.52", "-39.9179, -4.01717, -1.44877, 0.22", "-40.2742, -3.75301, -1.27548, 0.44", "-40.7068, -3.45274, -1.05367, 0.59", "-41.3409, -3.03531, -0.712549, 0.22", "-42.0905, -2.57568, -0.316876, 0.29", "-42.7746, -2.1906, -0.0158767, 1.25", "-43.2562, -1.93463, 0.175539, 1.62", "-43.7669, -1.67569, 0.35022, 1.92", "-44.2682, -1.43059, 0.498854, 1.92", "-44.7801, -1.18964, 0.629144, 1.62", "-46.6004, -0.384669, 1.02787, 0.29", "-46.6644, -0.359072, 1.04037, 0.29", "-47.5927, -0.0113354, 1.2072, 0.29", "-47.9384, 0.102565, 1.2729, 1.03", "-48.4012, 0.233, 1.3748, 1.47", "-49.0886, 0.380727, 1.60163, 0.29", "-49.8137, 0.535757, 1.96042, 0.22", "-49.8736, 0.550769, 1.99351, 0.22", "-50.3681, 0.687574, 2.28709, 0.22", "-51.0046, 0.866918, 2.68903, 1.4", "-51.9244, 1.10092, 3.26193, 1.62", "-53.4082, 1.4641, 4.17445, 0.22", "-54.3726, 1.69762, 4.75737, 1.33", "-54.7096, 1.77918, 4.95619, 2.06", "-55.164, 1.88306, 5.22626, 2.06", "-56.4858, 2.15987, 5.98817, 0.22", "-57.0353, 2.26225, 6.27763, 0.29", "-57.3193, 2.29847, 6.42396, 0.29", "-57.381, 2.30628, 6.45585, 0.29", "-58.5586, 2.44436, 7.07752, 0.22", "-59.2475, 2.52612, 7.44818, 1.33", "-59.705, 2.55852, 7.70064, 1.92", "-60.9312, 2.57607, 8.35363, 0.22", "-61.7128, 2.55441, 8.75062, 0.22", "-62.5407, 2.50203, 9.13947, 1.25", "-62.819, 2.47077, 9.26082, 1.25", "-64.1662, 2.25284, 9.85158, 0.22", "-64.5061, 2.18848, 10.0017, 0.66", "-64.7145, 2.15311, 10.0922, 0.66", "-65.4454, 2.07529, 10.4249, 0.22", "-66.5476, 2.03428, 10.9295, 1.55", "-66.6016, 2.03572, 10.9552, 1.55", "-67.0711, 2.0989, 11.1945, 1.55", "-68.42, 2.38386, 11.9163, 0.22", "-68.9077, 2.51987, 12.1879, 0.37", "-69.048, 2.57338, 12.2693, 0.44", "-69.1037, 2.60169, 12.3019, 0.44", "-69.3871, 2.76549, 12.4691, 0.44", "-69.8721, 3.107, 12.7721, 0.22", "-69.9386, 3.17829, 12.82, 0.22", "-70.2302, 3.52972, 12.9907, 0.59", "-70.3691, 3.69186, 13.0612, 0.59", "-70.5239, 3.86258, 13.131, 0.59", "-70.5781, 3.9058, 13.1455, 0.59", "-71.3616, 4.37903, 13.2952, 0.22", "-71.9491, 4.66848, 13.3916, 0.22", "-72.5061, 4.89531, 13.4729, 1.11", "-72.7906, 4.98214, 13.5156, 1.33", "-74.469, 5.29208, 13.7593, 0.22", "-75.1866, 5.35753, 13.8569, 1.11", "-75.5606, 5.35872, 13.9052, 1.77", "-75.856, 5.3445, 13.948, 1.77", "-77.0173, 5.27085, 14.1146, 0.29", "-78.1551, 5.17545, 14.2827, 0.22", "-78.7262, 5.11084, 14.3751, 0.88", "-79.3044, 5.05728, 14.4671, 0.96", "-79.3633, 5.05291, 14.4763, 0.96", "-80.2622, 5.01019, 14.6179, 0.22", "-80.8614, 5.00456, 14.7101, 0.22", "-81.5261, 5.01035, 14.8015, 0.22", "-82.4097, 5.02892, 14.8989, 1.25", "-82.4792, 5.02925, 14.9049, 1.25", "-83.2085, 5.01876, 14.9605, 1.99", "-83.6661, 5.00248, 14.9937, 2.06", "-85.1195, 4.98121, 15.0987, 0.59", "-86.0898, 4.97889, 15.1732, 0.22", "-86.6808, 4.98095, 15.2227, 0.22", "-87.4863, 4.99762, 15.3046, 0.22", "-88.0694, 5.01903, 15.3737, 0.22", "-88.7922, 5.03844, 15.4714, 0.88", "-89.1689, 5.03943, 15.5314, 1.33", "-89.6012, 5.02292, 15.6021, 1.55", "-90.5549, 4.98716, 15.7605, 0.22", "-90.6524, 4.98446, 15.7751, 0.22", "-91.219, 4.97438, 15.8573, 0.22", "-91.8839, 4.96502, 15.954, 0.22", "-92.6168, 4.98962, 16.0559, 1.18", "-93.2683, 5.04548, 16.1538, 1.62", "-94.4801, 5.20895, 16.3304, 0.22", "-94.9325, 5.28392, 16.3968, 0.44", "-95.7164, 5.43853, 16.5155, 0.22", "-96.7506, 5.66063, 16.6745, 1.25", "-97.3215, 5.79513, 16.7691, 1.55", "-97.9843, 5.96468, 16.8931, 0.74", "-99.1674, 6.22755, 17.1899, 0.22", "-99.2239, 6.23842, 17.2067, 0.22", "-99.8108, 6.33066, 17.4111, 0.22", "-100.492, 6.3955, 17.6838, 1.4", "-100.942, 6.42397, 17.8765, 1.4", "-102.19, 6.48933, 18.4629, 0.22", "-102.387, 6.49872, 18.5591, 0.22", "-102.92, 6.51667, 18.8082, 0.22", "-103.591, 6.55821, 19.1181, 0.96", "-103.882, 6.58251, 19.251, 1.25", "-104.188, 6.63248, 19.3773, 1.4", "-105.305, 6.93556, 19.7958, 0.22", "-105.973, 7.14454, 20.0376, 0.22", "-107.068, 7.61833, 20.2326, 0.22", "-107.13, 7.65041, 20.2351, 0.22", "-107.965, 8.10946, 20.1853, 1.03", "-108.409, 8.3656, 20.0634, 1.55", "-108.71, 8.53464, 19.9328, 1.69", "-110.903, 9.61761, 18.675, 0.22", "-111.384, 9.79795, 18.3213, 0.66", "-111.558, 9.8478, 18.1795, 0.96", "-113.211, 10.1966, 16.712, 0.29", "-113.771, 10.2825, 16.164, 0.66", "-115.096, 10.4179, 14.8311, 0.29", "-116.513, 10.4893, 13.3633, 0.29", "-116.953, 10.5135, 12.8975, 0.81", "-117.042, 10.5244, 12.8029, 0.81", "-118.3, 10.7063, 11.482, 0.22", "-118.772, 10.7978, 10.9797, 0.22", "-119.721, 11.0117, 10.0399, 0.59", "-120.019, 11.0859, 9.7698, 0.59", "-121.645, 11.4888, 8.29036, 0.59", "-122.606, 11.703, 7.41401, 0.22", "-122.65, 11.7109, 7.37389, 0.22", "-123.317, 11.7828, 6.7272, 0.81", "-123.55, 11.7859, 6.50993, 1.11", "-125.389, 11.7212, 4.82059, 0.22", "-125.488, 11.7188, 4.70762, 0.22", "-125.945, 11.7211, 4.14409, 0.22", "-126.658, 11.7251, 3.25209, 1.62", "-127.128, 11.7234, 2.65658, 1.77", "-127.211, 11.7228, 2.55621, 1.77", "-130.619, 11.6227, -1.34733, 0.52", "-131.265, 11.6073, -2.0576, 0.22", "-131.524, 11.604, -2.33499, 0.52", "-131.854, 11.5946, -2.70191, 0.52", "-132.328, 11.5524, -3.27322, 0.22", "-132.967, 11.4012, -4.0664, 0.96", "-133.2, 11.2431, -4.40243, 0.96", "-133.231, 11.2144, -4.46045, 0.96", "-133.99, 10.2909, -6.17828, 0.22", "-134.254, 9.91504, -6.87532, 0.81", "-134.368, 9.70466, -7.25854, 0.88", "-134.72, 8.96223, -8.57358, 0.22", "-134.914, 8.52512, -9.35669, 0.37", "-134.975, 8.38139, -9.6107, 0.37", "-135.392, 7.37393, -11.3943, 0.22", "-135.69, 6.65674, -12.7339, 0.22", "-135.704, 6.62447, -12.7966, 0.22", "-135.969, 6.00414, -14.0145, 0.22", "-135.98, 5.97721, -14.0686, 0.22", "-136.333, 5.19029, -15.8092, 0.22", "-136.35, 5.14585, -15.9071, 0.22", "-136.482, 4.83212, -16.6123, 1.11", "-136.538, 4.6814, -16.9538, 1.69", "-136.55, 4.64896, -17.0281, 1.69", "-136.97, 3.33084, -19.8108, 0.29", "-137.044, 3.06163, -20.3583, 0.59", "-137.07, 2.95985, -20.5583, 0.59", "-137.078, 2.92397, -20.6316, 0.59", "-137.25, 2.1932, -22.0942, 0.22", "-137.363, 1.72031, -22.9456, 0.22", "-137.499, 1.14955, -23.6732, 0.74", "-137.575, 0.878489, -24.0401, 0.74" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-36.6935, -7.09758, -2.66016, 1.4", "-41.2876, -5.95855, -6.23796, 1.4", "-42.3264, -5.69405, -7.00326, 1.4", "-42.9348, -5.51977, -7.41966, 1.4", "-44.6362, -4.91648, -8.54268, 0.66", "-45.5945, -4.53541, -9.17067, 0.29", "-46.5608, -4.16618, -9.7551, 0.29", "-48.1609, -3.54933, -10.5126, 0.29", "-48.8768, -3.21346, -10.8541, 1.11", "-50.2682, -2.5054, -11.5037, 1.25", "-51.6791, -1.76131, -12.1451, 0.22", "-53.129, -0.96519, -12.8231, 1.47", "-54.1998, -0.413071, -13.317, 2.06", "-55.3489, 0.0681012, -13.8054, 2.14", "-55.4177, 0.0921571, -13.8347, 2.06", "-57.0638, 0.535505, -14.4541, 0.37", "-57.8718, 0.717115, -14.7188, 0.29", "-59.082, 0.913713, -15.1204, 1.55", "-59.9638, 0.961248, -15.4005, 1.92", "-61.0774, 0.941314, -15.736, 0.74", "-62.1517, 0.879521, -16.0827, 0.29", "-63.0565, 0.786655, -16.3909, 0.29", "-64.8272, 0.592101, -17.0715, 0.29", "-66.4561, 0.392336, -17.7346, 1.84", "-67.2146, 0.309153, -18.0471, 2.5", "-68.4666, 0.170638, -18.5356, 2.06", "-68.5521, 0.161435, -18.5686, 2.06", "-70.6132, -0.0576552, -19.3354, 0.22", "-70.713, -0.0689642, -19.3668, 0.22", "-71.5794, -0.165318, -19.6057, 0.22", "-72.9549, -0.348944, -19.9381, 1.33", "-73.5195, -0.433092, -20.0389, 1.84", "-74.2643, -0.540048, -20.1527, 2.28", "-74.7957, -0.607261, -20.209, 1.99", "-76.0293, -0.720135, -20.3166, 0.52", "-77.0645, -0.813519, -20.3994, 0.29", "-78.0458, -0.888941, -20.5135, 0.29", "-78.4142, -0.922653, -20.5659, 0.44", "-78.9691, -0.98079, -20.6569, 0.44", "-79.8087, -1.05748, -20.8601, 0.22", "-80.8368, -1.16611, -21.23, 0.22", "-81.9778, -1.29122, -21.7028, 0.22", "-83.5939, -1.44806, -22.3713, 1.99", "-84.1, -1.4758, -22.5768, 2.58", "-85.0858, -1.4635, -22.9832, 2.58", "-87.287, -1.18947, -23.924, 0.22", "-88.1424, -0.99829, -24.3068, 0.22", "-89.0551, -0.750225, -24.6929, 0.22", "-89.8501, -0.489573, -25.0373, 0.22", "-91.373, 0.062942, -25.692, 1.69", "-92.8475, 0.692794, -26.2956, 2.73", "-93.7696, 1.23803, -26.7406, 2.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-22.046, -60.9828, 10.5637, 0.74", "-22.8431, -62.3169, 9.24314, 0.74", "-23.431, -63.191, 8.4906, 0.44", "-23.5081, -63.284, 8.41392, 0.44", "-24.128, -63.9385, 7.93023, 0.37", "-24.6322, -64.4266, 7.60346, 0.37", "-25.1959, -64.9444, 7.32336, 0.59", "-25.9764, -65.5109, 7.26384, 0.81", "-26.7558, -65.92, 7.40218, 0.52", "-27.3245, -66.1751, 7.55024, 0.66", "-27.5503, -66.2477, 7.63697, 0.96", "-28.5086, -66.4441, 8.08309, 0.59", "-29.1247, -66.5241, 8.46441, 0.44", "-29.4607, -66.564, 8.7436, 0.44", "-36.144, -73.4651, 7.28545, 0.44", "-42.9382, -80.4022, 7.19343, 0.44", "-49.484, -87.5863, 7.49229, 0.44", "-56.3561, -94.0742, 9.51781, 0.44", "-62.1786, -101.626, 11.4674, 0.44", "-67.5651, -109.226, 14.2677, 0.44", "-73.2475, -117.098, 15.3029, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-22.046, -60.9828, 10.5637, 0.44", "-21.9987, -63.4578, 11.113, 0.44", "-22.0437, -64.3335, 11.1931, 0.66", "-22.1262, -65.1777, 11.1992, 0.88", "-22.1485, -65.3374, 11.1972, 0.88", "-22.2648, -66.1699, 11.1866, 0.88", "-22.2799, -66.2783, 11.1852, 0.88", "-22.6662, -67.4547, 10.7455, 0.29", "-22.6862, -67.5064, 10.7194, 0.29", "-23.1274, -68.2868, 10.2241, 0.37", "-25.1206, -78.301, 11.375, 0.37", "-26.6373, -88.4256, 12.3303, 0.37", "-28.9472, -98.2886, 13.9605, 0.37", "-32.1885, -107.889, 15.4943, 0.37", "-35.2258, -117.712, 15.5175, 0.37", "-38.3658, -127.422, 14.2203, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "45.5511, -0.0207274, 1.56341, 0.29", "48.2299, 0.624739, 3.22001, 0.29", "48.8624, 0.762792, 3.62998, 0.29", "49.5477, 0.885476, 4.16255, 0.88", "50.1201, 0.953207, 4.64143, 1.11", "50.2223, 0.962306, 4.72793, 1.11", "51.261, 1.04577, 5.55962, 0.44", "52.2904, 1.11309, 6.34404, 0.37", "53.2174, 1.25502, 7.17769, 0.96", "53.7357, 1.38049, 7.66793, 0.96", "54.8669, 1.73199, 8.70357, 0.22", "55.6205, 2.00166, 9.35899, 1.25", "56.7896, 2.47343, 10.2769, 2.06", "58.5978, 3.25246, 11.4982, 1.4", "60.1655, 3.95363, 12.4117, 0.37", "60.8525, 4.24416, 12.77, 0.59", "60.9361, 4.27607, 12.816, 0.59", "61.7918, 4.55029, 13.3106, 0.37", "62.7573, 4.75284, 13.7919, 0.59", "62.8386, 4.76029, 13.8253, 0.59", "64.1165, 4.82137, 14.4254, 0.22", "66.2261, 5.01335, 15.5206, 0.22", "66.3035, 5.02418, 15.5614, 0.22", "67.0863, 5.18695, 15.9463, 1.25", "67.645, 5.31865, 16.1777, 1.77", "68.3404, 5.47527, 16.3853, 1.99", "68.9038, 5.60065, 16.4933, 2.21", "69.4609, 5.67815, 16.515, 2.21", "71.273, 5.80817, 16.5295, 0.29", "72.4839, 5.82181, 16.5194, 0.74", "73.2251, 5.80327, 16.4827, 1.25", "73.3127, 5.8001, 16.4742, 1.25", "75.0398, 5.72719, 16.2287, 0.81", "76.2553, 5.68155, 16.0068, 0.29", "76.542, 5.66246, 15.9422, 0.44", "77.5547, 5.55896, 15.7343, 0.22", "78.2783, 5.45917, 15.6274, 0.96", "78.95, 5.35819, 15.5755, 1.25", "79.5929, 5.26224, 15.5851, 0.81", "80.3363, 5.14395, 15.6471, 0.22", "81.2775, 4.99209, 15.7977, 0.22", "82.1893, 4.84707, 15.9908, 0.88", "82.7366, 4.78382, 16.0995, 1.18", "82.8357, 4.77808, 16.1165, 1.18", "83.8463, 4.78223, 16.2573, 1.18", "84.2538, 4.8064, 16.3026, 1.4", "85.8112, 4.85117, 16.2675, 0.29", "86.8173, 4.84216, 16.1045, 0.29", "87.6339, 4.80283, 15.8241, 1.18", "88.3096, 4.75089, 15.5073, 1.69", "88.3854, 4.74346, 15.4628, 1.69", "90.2689, 4.55612, 14.1681, 0.52", "91.2062, 4.48284, 13.3911, 0.22", "92.3991, 4.42037, 12.2677, 1.77", "92.462, 4.42213, 12.2053, 1.77", "92.8144, 4.46911, 11.8513, 2.06", "92.8857, 4.47942, 11.7798, 2.06", "94.0212, 4.63896, 10.722, 0.29", "94.0895, 4.63999, 10.6659, 0.29", "94.9876, 4.58755, 10.0043, 0.44", "95.4643, 4.51083, 9.67311, 0.44", "97.2932, 4.12586, 8.48555, 0.22", "98.064, 3.94272, 8.03453, 1.25", "98.7504, 3.76692, 7.68024, 1.33", "98.8396, 3.74515, 7.63895, 1.33", "100.527, 3.36676, 6.97109, 0.22", "101.394, 3.23472, 6.68745, 1.62", "101.926, 3.2116, 6.5358, 1.92", "102.488, 3.21461, 6.37099, 2.06", "104.443, 3.31785, 5.7983, 0.37", "105.43, 3.394, 5.53569, 0.22", "106.293, 3.47862, 5.34329, 0.22", "107.551, 3.58988, 5.09415, 1.4", "108.098, 3.64321, 4.982, 1.77", "109.884, 3.83418, 4.6269, 0.22", "110.714, 3.94037, 4.46086, 0.22", "111.719, 4.06074, 4.2419, 1.18", "112.088, 4.10425, 4.16957, 1.18", "113.57, 4.323, 3.98087, 0.22", "113.656, 4.33775, 3.97318, 0.22", "114.93, 4.60813, 3.91137, 1.33", "115.468, 4.74207, 3.92733, 1.33", "117.104, 5.19638, 4.06283, 0.22", "118.473, 5.57625, 4.2372, 1.18", "119.177, 5.78128, 4.35909, 1.99", "120.24, 6.10865, 4.54, 1.18", "122.091, 6.71325, 4.87128, 0.29", "123.146, 7.0589, 5.03786, 0.59", "124.192, 7.40205, 5.17308, 0.59", "125.696, 7.85347, 5.306, 0.29", "126.847, 8.17788, 5.37663, 0.29", "127.993, 8.45873, 5.41144, 1.18", "128.811, 8.62737, 5.40097, 1.77", "129.143, 8.67414, 5.39957, 1.77", "130.133, 8.70687, 5.41962, 0.74", "131.101, 8.66457, 5.50153, 0.22", "131.839, 8.61298, 5.61265, 0.66", "132.414, 8.57888, 5.71771, 0.88", "133.286, 8.54309, 5.88091, 0.66", "135.196, 8.49681, 6.23762, 0.22", "136.782, 8.50758, 6.52834, 0.96", "137.458, 8.51947, 6.64348, 1.69", "138.131, 8.53748, 6.7362, 1.84", "140.03, 8.60863, 6.92873, 0.29", "140.859, 8.63119, 6.96946, 0.59", "141.625, 8.62959, 6.9691, 0.29", "142.183, 8.57533, 6.96262, 0.59", "143.5, 8.36865, 6.95866, 0.29", "144.327, 8.19955, 6.97295, 0.29", "145.537, 7.93293, 6.97916, 1.25", "145.985, 7.83062, 6.97261, 1.25", "147.581, 7.52832, 6.89219, 0.22", "148.736, 7.34777, 6.78018, 1.4", "149.106, 7.29418, 6.73439, 1.55", "150.962, 7.05131, 6.46202, 0.29", "151.048, 7.04288, 6.44745, 0.29", "152.394, 6.92393, 6.19827, 0.29", "153.215, 6.84625, 6.04236, 0.15", "154.026, 6.69803, 5.9667, 0.15", "154.852, 6.50117, 5.94891, 1.11", "154.95, 6.47446, 5.95566, 1.11", "155.647, 6.28531, 6.02932, 1.47", "156.238, 6.11681, 6.11814, 1.55", "157.854, 5.74858, 6.37379, 0.15", "158.378, 5.6557, 6.44715, 0.29", "159.382, 5.50468, 6.57882, 0.29", "160.71, 5.32199, 6.74488, 1.4", "161.647, 5.17301, 6.87795, 1.84", "163.744, 4.75766, 7.23203, 0.29", "164.82, 4.48664, 7.43338, 0.29", "166.141, 4.07845, 7.70467, 1.11", "166.504, 3.94547, 7.78603, 1.33", "168.41, 3.14295, 8.20877, 0.22", "169.534, 2.59007, 8.44095, 0.22", "170.662, 1.91551, 8.67692, 1.33", "170.94, 1.7278, 8.73148, 1.62", "171.693, 1.17998, 8.8719, 0.88", "173.102, 0.103281, 9.07855, 0.15", "173.86, -0.517439, 9.16219, 0.88", "174.302, -0.90794, 9.21214, 1.11", "175.637, -2.29915, 9.37006, 0.15", "176.33, -3.10317, 9.44237, 0.15", "176.885, -3.88921, 9.47738, 1.03", "177.168, -4.39392, 9.47976, 1.47", "177.348, -4.75439, 9.4702, 1.47", "178.361, -6.96189, 9.14866, 0.22", "178.543, -7.40183, 9.04949, 0.59", "179.083, -8.6754, 8.68323, 0.22", "179.435, -9.50783, 8.41293, 1.33", "179.704, -10.1421, 8.18136, 1.4", "180.896, -13.0643, 7.04068, 0.66", "180.932, -13.1531, 7.0043, 0.66", "181.142, -13.698, 6.79422, 0.81", "181.484, -14.5383, 6.52777, 0.15", "181.516, -14.6203, 6.50763, 0.15", "181.886, -15.6673, 6.33901, 1.03", "182.003, -16.0261, 6.34844, 1.25", "182.638, -17.8551, 6.55118, 0.44", "183.19, -19.3808, 6.80732, 0.22", "183.403, -19.9266, 6.85899, 0.96", "183.693, -20.5876, 6.88258, 1.18", "184.557, -22.3347, 6.35586, 0.22", "185.198, -23.5174, 5.73166, 0.22", "185.23, -23.5742, 5.69245, 0.22", "186.451, -25.9736, 3.6962, 1.03", "186.779, -26.6613, 3.1008, 1.33", "188.716, -31.0446, -0.809888, 0.22", "189.083, -31.9827, -1.69014, 1.33", "189.573, -33.3313, -2.92458, 1.62", "191.049, -37.6867, -6.72872, 0.15", "191.299, -38.5024, -7.388, 0.44", "191.542, -39.3817, -8.04329, 1.11", "193.023, -44.9352, -11.6481, 0.22", "193.301, -45.947, -12.2765, 0.22", "193.324, -46.0218, -12.3194, 0.22", "193.65, -46.8838, -12.7127, 1.4", "193.936, -47.5427, -12.9829, 1.84", "194.745, -49.0008, -13.3058, 0.22", "195.352, -49.8584, -13.1379, 1.18", "195.397, -49.9202, -13.1231, 1.18", "195.886, -50.6302, -12.9065, 1.47", "195.934, -50.7029, -12.8808, 1.47", "196.972, -52.3757, -12.2116, 0.29", "197.701, -53.6645, -11.6479, 0.22", "198.298, -54.7436, -11.1623, 0.74", "199.114, -56.248, -10.4837, 0.22", "199.152, -56.3227, -10.4465, 0.22", "199.687, -57.3994, -9.85784, 0.22", "200.251, -58.5593, -9.158, 1.18", "200.551, -59.1697, -8.77526, 1.92", "200.799, -59.6694, -8.45108, 1.92", "201.7, -61.5404, -7.0075, 0.22", "202.098, -62.4728, -6.20797, 0.29", "202.407, -63.3201, -5.41814, 0.15", "202.511, -63.6694, -5.07979, 0.81", "202.609, -64.0869, -4.68073, 0.96", "203.013, -66.1915, -2.74726, 0.15", "203.11, -66.8568, -2.16184, 0.37", "203.219, -68.0007, -1.19333, 0.22", "203.293, -68.816, -0.517412, 0.96", "203.34, -69.2666, -0.154963, 1.25", "203.495, -70.5821, 0.847421, 0.22", "203.506, -70.6578, 0.899314, 0.22", "203.714, -71.8356, 1.74382, 0.22", "204.082, -73.3556, 2.85629, 0.22", "204.331, -74.1409, 3.41773, 1.18", "204.45, -74.4501, 3.63158, 1.55", "204.829, -75.2411, 4.11208, 1.33", "205.468, -76.453, 4.76369, 0.22", "206.22, -77.7836, 5.38823, 0.15", "206.656, -78.5453, 5.65116, 0.81", "206.972, -79.0843, 5.79329, 1.18", "208.172, -81.0508, 6.23664, 0.22", "208.679, -81.8427, 6.3861, 0.22", "209.009, -82.3118, 6.43872, 0.74", "210.39, -84.0576, 6.54333, 0.29", "211.579, -85.3703, 6.58926, 0.22", "212.451, -86.1922, 6.5005, 0.22", "213.135, -86.7534, 6.36759, 1.4", "214.985, -88.1468, 5.86343, 0.22", "215.884, -88.787, 5.56479, 1.03", "216.39, -89.1588, 5.33987, 1.03", "218.777, -91.1926, 3.93731, 0.59", "218.897, -91.3124, 3.85291, 0.59", "219.715, -92.3299, 3.15268, 0.88", "220.653, -93.7849, 2.20111, 0.37", "221.84, -95.9682, 0.844497, 0.29", "222.522, -97.4479, -0.0179079, 1.11", "222.645, -97.7579, -0.177204, 1.33", "223.706, -100.485, -1.5299, 0.22", "223.923, -101.052, -1.80925, 0.66", "224.076, -101.456, -2.00068, 0.66", "224.857, -103.321, -2.79966, 0.29", "225.185, -103.985, -3.11064, 0.22", "225.592, -104.719, -3.46836, 1.18", "226.817, -106.688, -4.41842, 0.22", "227.294, -107.408, -4.77897, 0.88", "227.516, -107.732, -4.94615, 1.33", "229.373, -110.4, -6.32273, 0.22", "229.822, -111.077, -6.65996, 0.37", "230.247, -111.741, -6.94744, 0.15", "230.658, -112.406, -7.17802, 0.52", "231.148, -113.349, -7.49649, 0.22", "231.422, -113.984, -7.69615, 0.81", "231.54, -114.34, -7.78083, 0.81", "231.898, -115.531, -8.08413, 0.22", "232.152, -116.287, -8.30642, 0.74", "233.071, -118.688, -9.07044, 0.15", "233.11, -118.776, -9.10508, 0.15", "233.338, -119.219, -9.30837, 0.29", "233.933, -120.237, -9.82141, 0.29", "234.644, -121.32, -10.3954, 0.74", "234.856, -121.603, -10.5625, 0.74", "236.317, -123.358, -11.6019, 0.22", "236.367, -123.421, -11.6394, 0.22", "237.069, -124.342, -12.1881, 1.11", "237.289, -124.637, -12.3661, 1.33", "239.236, -127.204, -13.8376, 0.15", "239.649, -127.721, -14.1257, 0.29", "240.347, -128.525, -14.5399, 0.59", "240.876, -129.137, -14.8646, 0.74", "242.419, -130.895, -15.8064, 0.22", "243.046, -131.6, -16.1777, 0.22", "243.857, -132.491, -16.5964, 0.22", "244.449, -133.141, -16.915, 0.22", "245.938, -134.729, -17.6698, 0.81", "246.231, -135.054, -17.8184, 0.81" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "45.5511, -0.0207274, 1.56341, 0.22", "46.1759, 1.48911, 0.864559, 0.22", "46.2037, 1.54549, 0.832172, 0.22", "46.5248, 2.14669, 0.459302, 0.22", "46.8215, 2.68739, 0.118, 0.81", "47.1381, 3.25266, -0.24102, 1.55", "47.4618, 3.82178, -0.65175, 1.84", "47.9752, 4.76463, -1.41291, 0.37", "48.0054, 4.82265, -1.46287, 0.37", "48.2985, 5.4141, -2.12143, 0.37", "48.3295, 5.48965, -2.21557, 0.37", "48.6232, 6.40096, -3.41108, 0.29", "48.7447, 6.87382, -4.02294, 0.66", "48.7915, 7.09051, -4.29675, 0.66", "49.036, 8.48246, -6.04841, 0.22", "49.1258, 9.07547, -6.77724, 1.03", "49.1491, 9.24403, -6.97235, 1.47", "49.2345, 9.74706, -7.5116, 0.88", "49.4544, 10.806, -8.59486, 0.22", "49.7033, 11.9278, -9.66816, 1.47", "49.8344, 12.452, -10.1249, 1.99", "49.9055, 12.7151, -10.3513, 2.21", "50.3739, 14.3399, -11.6927, 0.15", "50.5486, 14.8776, -12.1365, 0.15", "50.5717, 14.9399, -12.1855, 0.15", "50.9494, 15.902, -12.9263, 1.33", "51.1342, 16.3815, -13.2996, 1.99", "51.2878, 16.8202, -13.6302, 2.28", "51.9354, 18.8528, -15.0515, 0.22", "52.0894, 19.3413, -15.3807, 0.74", "52.2119, 19.762, -15.6619, 0.74", "52.2291, 19.83, -15.7061, 0.74", "52.4691, 20.8297, -16.3629, 0.15", "52.7027, 21.8193, -17.0016, 0.22", "52.8329, 22.3699, -17.338, 0.22", "53.1656, 23.7151, -18.1913, 1.62", "53.3424, 24.4242, -18.6534, 1.99", "53.3561, 24.4822, -18.6921, 1.99", "53.6282, 25.8167, -19.6015, 0.22", "53.6375, 25.8849, -19.648, 0.22", "53.6907, 26.464, -20.0252, 0.22", "53.7153, 26.7785, -20.2104, 0.37", "53.7314, 27.1206, -20.3926, 0.37", "53.7482, 27.903, -20.7764, 0.22", "53.7416, 28.3965, -21.0006, 0.66", "53.7266, 29.0297, -21.2823, 0.66", "53.6654, 30.5906, -21.9603, 0.22", "53.6096, 31.7574, -22.4583, 1.03", "53.5909, 32.085, -22.5978, 1.55", "53.5518, 32.6459, -22.8435, 1.55", "53.3899, 34.5527, -23.6985, 0.22", "53.2795, 35.6782, -24.2636, 1.25", "53.2364, 36.0584, -24.4795, 1.77", "53.1886, 36.5851, -24.8169, 1.99", "53.1423, 37.2671, -25.3451, 1.47", "53.14, 37.3286, -25.4005, 1.47", "53.1506, 38.186, -26.2925, 0.59", "53.2081, 38.8035, -27.0013, 0.29", "53.2898, 39.4194, -27.7298, 0.22", "53.5149, 40.6123, -29.1323, 1.18", "53.6058, 41.0016, -29.5796, 1.55", "53.6939, 41.2981, -29.9181, 1.55", "54.1344, 42.4611, -31.2132, 0.22", "54.1558, 42.5052, -31.2637, 0.22", "54.4003, 42.9366, -31.7203, 0.22", "54.4538, 43.0342, -31.8107, 0.22", "54.7584, 43.6409, -32.3858, 0.81", "54.9018, 44.0309, -32.7427, 1.18", "54.9507, 44.2381, -32.9193, 1.4", "55.041, 44.7807, -33.3673, 1.03", "55.198, 46.1968, -34.4763, 0.22", "55.2046, 46.2622, -34.5268, 0.22", "55.2601, 46.8389, -34.9966, 0.22", "55.2676, 46.9013, -35.0505, 0.22", "55.3731, 47.6822, -35.7766, 0.22", "55.4536, 48.2201, -36.2836, 0.37", "55.6107, 49.3329, -37.2926, 1.4", "55.6797, 50.0174, -37.9036, 2.14", "55.6974, 50.363, -38.2021, 2.14", "55.6704, 52.0694, -39.6137, 0.22", "55.616, 52.7481, -40.1529, 0.37", "55.5247, 53.4334, -40.6548, 0.37", "55.4007, 54.1852, -41.1291, 0.22", "55.2519, 55.2081, -41.6968, 1.18", "55.1779, 55.7639, -41.9869, 1.77", "55.1515, 56.0113, -42.1023, 1.99", "55.1287, 56.4786, -42.3359, 1.84", "55.1441, 57.3357, -42.7839, 0.81", "55.2702, 58.8988, -43.6231, 0.22", "55.2841, 59.0021, -43.6775, 0.22", "55.4102, 59.8431, -44.1111, 0.22", "55.604, 61.1095, -44.7529, 1.03", "55.6658, 61.5062, -44.9497, 1.25", "55.833, 62.3819, -45.3676, 1.11", "56.1216, 63.516, -45.947, 0.22", "56.3004, 64.099, -46.3002, 0.44", "56.3243, 64.1641, -46.3452, 0.44", "56.5111, 64.6177, -46.6933, 0.44", "56.9356, 65.4266, -47.4169, 0.22", "57.715, 66.6229, -48.6, 1.18", "58.2575, 67.3126, -49.3256, 1.99", "58.4229, 67.4792, -49.5274, 1.99", "58.4684, 67.5209, -49.5803, 1.99", "59.9658, 68.81, -51.2475, 0.15", "60.5126, 69.2336, -51.8274, 0.15", "60.9061, 69.5189, -52.2036, 0.81", "62.3443, 70.5541, -53.5426, 0.22", "62.9115, 70.9613, -54.0804, 1.11", "63.3177, 71.2637, -54.4757, 1.11", "64.4511, 72.1618, -55.6455, 0.22", "64.9159, 72.5766, -56.1448, 0.22", "65.4547, 73.1132, -56.7277, 1.33", "65.7215, 73.4036, -56.9978, 1.77", "66.1324, 73.8311, -57.3863, 1.18", "67.288, 75.0236, -58.3758, 0.15", "67.7644, 75.5541, -58.7434, 0.37", "67.8125, 75.61, -58.7784, 0.37", "68.0133, 75.864, -58.9155, 0.37", "68.5656, 76.6124, -59.2869, 0.22", "69.0288, 77.2756, -59.5848, 0.22", "69.39, 77.8501, -59.8076, 0.74", "70.0698, 79.0071, -60.2593, 0.22", "70.6195, 80.0327, -60.6631, 1.4", "70.802, 80.4248, -60.8193, 1.69", "70.8355, 80.5068, -60.8522, 1.69", "70.9269, 80.7489, -60.9501, 1.69", "70.9582, 80.8197, -60.9788, 1.69", "71.7086, 82.3376, -61.5956, 0.22", "72.0351, 82.9966, -61.8649, 0.81", "72.2504, 83.4215, -62.0383, 0.81", "72.471, 83.8556, -62.2155, 0.74", "73.1713, 85.3036, -62.8085, 0.22", "73.5999, 86.2496, -63.2149, 1.03", "73.8531, 86.8417, -63.4801, 1.25", "74.4115, 88.2375, -64.1245, 0.15", "74.4474, 88.3458, -64.1775, 0.15", "74.6677, 89.1803, -64.606, 0.15", "74.8163, 90.0067, -65.0492, 1.25", "74.8412, 90.1495, -65.1304, 1.25", "74.9072, 90.5232, -65.351, 1.25", "75.1611, 92.0857, -66.3039, 0.15", "75.1817, 92.1925, -66.3676, 0.15", "75.3373, 92.8769, -66.7828, 0.59", "75.5059, 93.5767, -67.2031, 0.22", "75.5833, 93.8645, -67.3739, 0.29", "75.6055, 93.9326, -67.4153, 0.29", "75.9544, 94.8427, -67.9994, 0.15", "76.28, 95.5983, -68.5345, 0.59", "76.3153, 95.6664, -68.5891, 0.59", "76.9684, 96.7585, -69.5155, 0.22", "77.642, 97.7821, -70.4142, 1.18", "78.0193, 98.3293, -70.8963, 1.62", "78.4458, 98.9154, -71.4151, 1.62", "79.235, 100.007, -72.3515, 0.22", "79.594, 100.529, -72.7303, 0.22", "79.8628, 100.932, -72.9723, 0.74", "80.6405, 102.158, -73.5533, 0.15", "81.3532, 103.325, -73.9869, 1.18", "81.6048, 103.735, -74.1013, 1.18", "82.7167, 105.555, -74.4469, 0.22", "83.2439, 106.367, -74.5659, 0.66", "83.3547, 106.524, -74.582, 0.66", "83.6947, 106.938, -74.6132, 0.66", "84.4995, 107.82, -74.697, 0.15", "85.3291, 108.686, -74.848, 1.25", "85.6738, 109.019, -74.943, 1.55", "85.9744, 109.315, -75.0322, 1.69", "87.2878, 110.621, -75.4989, 0.22", "87.8235, 111.148, -75.7142, 0.22", "88.4134, 111.726, -75.9722, 0.52", "89.4883, 112.738, -76.4719, 0.22", "90.1677, 113.393, -76.8003, 1.03", "90.7716, 113.99, -77.105, 1.4", "91.3709, 114.611, -77.4308, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "60.8694, -23.1136, 2.66368, 0.44", "61.7766, -23.3454, 2.46883, 0.44", "62.2844, -23.519, 2.33719, 0.29", "62.6686, -23.6729, 2.23499, 1.11", "62.7019, -23.6876, 2.22658, 1.11", "63.063, -23.8663, 2.14214, 1.11", "64.0509, -24.4251, 1.96214, 0.22", "64.3817, -24.6441, 1.90995, 0.22", "64.5888, -24.7961, 1.8898, 1.25", "64.8577, -24.9985, 1.8821, 1.84", "65.1695, -25.2369, 1.87036, 1.62", "65.9671, -25.8801, 1.84784, 0.22", "66.4679, -26.2879, 1.84886, 0.22", "66.9243, -26.6481, 1.85486, 1.25", "67.1917, -26.8562, 1.86047, 1.25", "67.9684, -27.455, 1.90208, 0.22", "68.6476, -27.9677, 1.96418, 0.22", "68.6976, -28.0038, 1.97199, 0.22", "69.2991, -28.4162, 2.10911, 1.33", "69.3297, -28.4361, 2.11809, 1.33", "69.7658, -28.7003, 2.27363, 2.14", "69.9432, -28.7932, 2.34774, 2.14", "70.8331, -29.223, 2.68206, 0.15", "71.0707, -29.3384, 2.75524, 0.44", "71.159, -29.3816, 2.77608, 0.44", "71.5436, -29.5678, 2.85199, 0.15", "71.8199, -29.705, 2.89391, 0.81", "72.1012, -29.8672, 2.93331, 0.81", "72.6721, -30.2396, 3.00962, 0.22", "72.708, -30.2644, 3.01422, 0.22", "73.1274, -30.5611, 3.06832, 0.81", "73.3422, -30.7231, 3.09654, 0.81", "74.0535, -31.2898, 3.19601, 0.22", "74.0876, -31.3173, 3.20071, 0.22", "74.5919, -31.7228, 3.27017, 1.4", "74.9748, -32.039, 3.32491, 1.77", "75.2564, -32.275, 3.36543, 1.03", "75.7858, -32.7231, 3.44606, 0.15", "75.9231, -32.8417, 3.46815, 0.22", "76.2381, -33.1354, 3.51882, 0.15", "76.532, -33.435, 3.56788, 0.29", "76.5584, -33.462, 3.57204, 0.29", "76.7678, -33.6695, 3.60341, 0.29", "76.7941, -33.6967, 3.60708, 0.29", "77.2708, -34.1893, 3.69687, 0.22", "77.3013, -34.2207, 3.70371, 0.22", "77.5419, -34.4539, 3.76287, 0.44", "77.6149, -34.5306, 3.78201, 0.44", "77.9273, -34.8584, 3.86761, 0.22", "78.1976, -35.1606, 3.95073, 0.96", "78.4663, -35.4938, 4.03882, 1.55", "78.6058, -35.673, 4.08348, 1.84", "78.9414, -36.1171, 4.18934, 1.11", "79.243, -36.5139, 4.28255, 0.59", "79.5045, -36.8458, 4.36003, 0.29", "79.9363, -37.2879, 4.43751, 0.22", "80.2867, -37.5889, 4.48098, 1.18", "80.3213, -37.6159, 4.4836, 1.18", "80.4897, -37.7295, 4.49017, 1.55", "80.6439, -37.8253, 4.48688, 1.55", "81.7606, -38.4615, 4.4261, 0.22", "81.7992, -38.4814, 4.42097, 0.22", "82.2652, -38.7261, 4.34911, 0.22", "82.8749, -39.0417, 4.21762, 0.74", "83.2516, -39.2325, 4.12515, 1.4", "83.5306, -39.3791, 4.03935, 1.4", "84.6206, -39.9576, 3.66484, 0.22", "85.3822, -40.3373, 3.39664, 0.22", "86.1741, -40.699, 3.11524, 1.18", "86.5028, -40.8375, 2.99266, 1.4", "87.3992, -41.1612, 2.68366, 0.15", "87.7471, -41.2621, 2.57728, 0.15", "88.0936, -41.3386, 2.49101, 0.88", "88.4986, -41.3972, 2.40978, 0.88", "89.3805, -41.4682, 2.32893, 0.22", "89.96, -41.4803, 2.30683, 0.22", "90.5005, -41.4522, 2.35611, 0.59", "90.5492, -41.449, 2.36373, 0.59", "90.9461, -41.4177, 2.4645, 0.29", "91.4782, -41.3676, 2.64853, 1.4", "91.5119, -41.3641, 2.66345, 1.4", "92.1587, -41.2877, 2.95145, 2.14", "92.3418, -41.2618, 3.03214, 2.28", "93.4358, -41.1175, 3.4903, 0.22", "93.6048, -41.1004, 3.56173, 0.52", "93.8761, -41.0878, 3.67162, 0.52", "94.33, -41.0853, 3.84275, 0.22", "94.3769, -41.0899, 3.85752, 0.22", "94.7399, -41.1624, 3.96787, 0.22", "95.2673, -41.3211, 4.12373, 1.03", "95.5475, -41.4125, 4.20278, 1.25", "95.6785, -41.4583, 4.23868, 1.25", "96.6768, -41.8021, 4.49417, 0.22", "97.379, -42.0215, 4.66175, 1.03", "97.5484, -42.0691, 4.69855, 1.4", "97.7663, -42.1291, 4.73724, 1.4", "97.8012, -42.1382, 4.74637, 1.4", "98.8342, -42.3883, 5.09783, 0.22", "98.956, -42.4141, 5.15278, 0.66", "99.1286, -42.4497, 5.24572, 0.66", "99.7657, -42.5701, 5.61984, 0.22", "100.63, -42.7136, 6.17536, 0.96", "100.663, -42.7172, 6.20259, 0.96", "100.824, -42.7345, 6.36793, 1.25", "100.885, -42.7462, 6.43662, 1.25", "101.04, -42.7846, 6.62475, 1.25", "101.065, -42.7917, 6.65942, 1.25", "101.707, -43.0592, 7.49588, 0.22", "102.063, -43.2173, 7.93021, 0.29", "102.397, -43.3734, 8.33124, 0.29", "102.42, -43.3841, 8.35857, 0.29", "102.896, -43.6125, 8.90976, 1.4", "103.19, -43.7538, 9.22435, 1.92", "104.044, -44.1403, 10.0589, 0.22", "104.07, -44.1506, 10.0827, 0.22", "104.521, -44.3038, 10.4372, 1.03", "104.762, -44.3869, 10.6, 1.03", "105.32, -44.5899, 10.9289, 0.22", "105.984, -44.8248, 11.2985, 0.15", "106.344, -44.9642, 11.4922, 0.74", "106.497, -45.0298, 11.5745, 0.59", "107.074, -45.3, 11.8781, 0.22", "107.33, -45.4294, 12.0172, 0.52", "107.437, -45.4901, 12.0776, 0.52", "107.946, -45.8085, 12.3659, 0.29", "108.454, -46.1251, 12.6644, 1.03", "108.569, -46.1856, 12.727, 1.4", "108.813, -46.2916, 12.8477, 1.55", "109.622, -46.5955, 13.1924, 0.22", "110.024, -46.7311, 13.3517, 0.88", "110.356, -46.8282, 13.4688, 0.88", "111.044, -47.0021, 13.7018, 0.15", "111.536, -47.1201, 13.8675, 0.22", "111.623, -47.139, 13.8955, 0.22", "112.241, -47.2564, 14.0773, 0.81", "112.467, -47.2994, 14.1425, 1.11", "112.514, -47.3086, 14.1557, 1.11", "112.839, -47.3767, 14.2428, 1.11", "113.382, -47.4727, 14.3773, 0.52", "114.034, -47.5736, 14.5426, 0.22", "114.566, -47.6403, 14.6751, 1.11", "114.785, -47.6687, 14.7326, 1.25", "115.119, -47.7075, 14.824, 0.88", "115.689, -47.7677, 14.986, 0.22", "116.023, -47.8027, 15.0867, 0.59", "116.497, -47.8614, 15.2404, 0.29", "116.933, -47.9195, 15.3899, 0.88", "117.238, -47.9626, 15.4974, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "60.8694, -23.1136, 2.66368, 0.22", "61.1512, -24.1244, 2.82465, 0.22", "61.3052, -24.7202, 2.90232, 0.81", "61.366, -24.9589, 2.93102, 1.03", "61.5776, -25.8011, 3.03284, 0.22", "61.6497, -26.0848, 3.06895, 0.52", "61.8214, -26.7495, 3.15982, 0.22", "61.9062, -27.0919, 3.21718, 1.4", "61.9457, -27.2346, 3.24317, 1.77", "62.0115, -27.471, 3.29872, 1.77", "62.1886, -28.1281, 3.49429, 0.22", "62.256, -28.367, 3.58081, 0.88", "62.3162, -28.5547, 3.66107, 0.88", "62.5688, -29.2927, 4.00165, 0.22", "62.6966, -29.6492, 4.16983, 1.11", "62.7494, -29.7887, 4.23736, 1.4", "63.0479, -30.5521, 4.61953, 0.22", "63.1304, -30.748, 4.71072, 0.52", "63.2102, -30.9248, 4.78713, 0.52", "63.4248, -31.3662, 4.94814, 0.22", "63.5385, -31.5895, 5.01564, 0.74", "63.611, -31.7324, 5.04407, 0.74", "63.905, -32.2921, 5.11366, 0.22", "63.924, -32.3261, 5.11712, 0.22", "64.1492, -32.7036, 5.1414, 1.47", "64.258, -32.8746, 5.14839, 2.14", "64.9249, -33.8877, 5.15221, 0.22", "65.1244, -34.177, 5.14911, 0.44", "65.3411, -34.4822, 5.15109, 0.22", "65.5604, -34.7842, 5.15899, 1.4", "65.7519, -35.0395, 5.16613, 1.84", "66.2614, -35.7029, 5.18404, 0.22", "66.4516, -35.9345, 5.1951, 0.22", "66.7113, -36.2717, 5.20628, 0.88", "66.8637, -36.4802, 5.21399, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-93.7696, 1.23803, -26.7406, 0.22", "-94.984, 2.31574, -25.8015, 0.22", "-95.3902, 2.6921, -25.5065, 0.22", "-96.0772, 3.39261, -25.2299, 1.18", "-96.4581, 3.82209, -25.1591, 1.47", "-96.5649, 3.94759, -25.1474, 1.47", "-96.9296, 4.39466, -25.1556, 1.47", "-96.9694, 4.44882, -25.168, 1.47", "-98.0037, 5.99156, -25.6123, 0.81", "-98.4444, 6.75968, -25.8492, 0.29", "-98.7137, 7.2787, -25.9768, 0.52", "-99.3335, 8.52121, -26.1947, 0.29", "-99.3724, 8.60423, -26.2031, 0.29", "-99.5936, 9.12782, -26.2071, 0.29", "-100.142, 10.5424, -26.0588, 0.22", "-100.452, 11.3585, -25.9527, 1.11", "-100.592, 11.7518, -25.8803, 1.55", "-100.703, 12.0736, -25.7982, 1.55", "-101.28, 13.7481, -25.3268, 0.22", "-101.558, 14.5278, -25.0809, 0.59", "-101.698, 14.9202, -24.9571, 0.74", "-102.207, 16.3671, -24.5279, 0.22", "-102.594, 17.4399, -24.2101, 1.11", "-102.772, 17.909, -24.0734, 1.69", "-102.967, 18.4068, -23.923, 1.69", "-103.663, 20.0329, -23.5315, 0.22", "-104.103, 20.9017, -23.3472, 0.22", "-104.549, 21.6267, -23.2127, 0.22", "-104.971, 22.2371, -23.1166, 0.88", "-105.333, 22.7281, -23.0705, 1.18", "-106.622, 24.4079, -22.9826, 0.22", "-107.398, 25.3807, -22.9568, 0.22", "-108.327, 26.5284, -22.9671, 1.69", "-108.923, 27.29, -22.9826, 1.92", "-110.082, 28.8039, -23.0116, 0.29", "-110.131, 28.8676, -23.0124, 0.29", "-110.697, 29.6147, -22.9963, 0.37", "-110.946, 29.9493, -22.9881, 0.37", "-111.621, 30.7519, -22.9116, 0.22", "-111.74, 30.8725, -22.8839, 0.22", "-112.316, 31.3819, -22.678, 0.22", "-112.779, 31.7732, -22.5041, 0.88", "-113.173, 32.1096, -22.3547, 1.11", "-114.175, 33.0077, -21.9595, 0.22", "-114.719, 33.5283, -21.7523, 0.44", "-115.469, 34.3456, -21.4835, 0.22", "-115.763, 34.7089, -21.3778, 0.22", "-116.436, 35.647, -21.1433, 1.25", "-116.674, 36.0209, -21.0613, 1.69", "-117.229, 36.9622, -20.8889, 1.55", "-117.787, 37.9355, -20.7531, 0.22", "-118.119, 38.5228, -20.6876, 0.44", "-118.539, 39.2584, -20.6103, 0.22", "-118.862, 39.8089, -20.5509, 0.44", "-119.337, 40.6199, -20.443, 0.22", "-119.376, 40.6901, -20.4322, 0.22", "-119.58, 41.1045, -20.4038, 0.37", "-119.897, 41.7735, -20.3781, 0.22", "-119.931, 41.8469, -20.3751, 0.22", "-120.287, 42.6455, -20.3437, 1.25", "-120.728, 43.6107, -20.2864, 1.25", "-121.454, 45.1806, -20.1417, 0.22", "-121.794, 45.9477, -20.0503, 0.22", "-122.288, 47.1167, -19.8724, 1.11", "-122.405, 47.3986, -19.8204, 1.4", "-123.016, 48.9882, -19.51, 0.22", "-123.319, 49.8137, -19.3062, 0.22", "-123.647, 50.6978, -19.0472, 1.25", "-123.797, 51.0965, -18.9394, 1.4", "-124.003, 51.6147, -18.8069, 0.88", "-124.643, 53.1275, -18.4699, 0.22", "-125.052, 53.9392, -18.3314, 0.44", "-125.494, 54.6384, -18.2486, 0.22", "-126.004, 55.3617, -18.1687, 1.33", "-126.392, 55.8847, -18.1116, 1.69", "-126.618, 56.1774, -18.0743, 1.69", "-127.554, 57.3419, -17.8822, 0.22", "-128.322, 58.3545, -17.7296, 0.22", "-128.996, 59.2942, -17.5985, 0.22", "-129.362, 59.8103, -17.5116, 0.88", "-129.702, 60.3056, -17.4222, 1.25", "-129.847, 60.5291, -17.3783, 1.25", "-130.642, 61.8935, -17.2833, 0.22", "-131.164, 62.808, -17.3126, 0.22", "-131.552, 63.4807, -17.3864, 0.81", "-131.596, 63.5604, -17.3966, 0.81", "-131.838, 63.9999, -17.4548, 1.03", "-133.168, 66.4346, -17.7443, 0.22", "-133.738, 67.4853, -17.8564, 0.22", "-133.772, 67.5446, -17.8634, 0.22", "-134.547, 68.8011, -18.0027, 1.92", "-134.778, 69.148, -18.0253, 2.21", "-136.494, 71.5582, -18.1362, 0.22", "-136.543, 71.6222, -18.1354, 0.22", "-137.472, 72.822, -18.169, 0.22", "-137.955, 73.4222, -18.187, 0.37", "-138.608, 74.1947, -18.207, 0.22", "-139.545, 75.3017, -18.2013, 0.81", "-139.773, 75.5743, -18.1811, 0.81", "-140.609, 76.6509, -18.0534, 0.22", "-140.991, 77.182, -17.9504, 0.96", "-141.365, 77.7173, -17.8346, 1.55", "-141.554, 77.9826, -17.7591, 1.55", "-142.386, 79.1325, -17.3493, 0.22", "-142.703, 79.5769, -17.1893, 0.44", "-143.161, 80.2671, -17.0298, 0.22", "-143.212, 80.3434, -17.0182, 0.22", "-143.705, 81.1124, -16.9676, 0.22", "-144.481, 82.3959, -16.9754, 1.25", "-144.762, 82.8859, -17.0011, 1.55", "-146.003, 85.1567, -17.1714, 0.29", "-146.517, 86.1529, -17.2527, 0.44", "-147.053, 87.236, -17.3511, 0.22", "-147.603, 88.4293, -17.4752, 1.25", "-147.729, 88.7078, -17.5001, 1.25", "-148.363, 90.1181, -17.6467, 0.29", "-148.54, 90.5033, -17.6754, 0.29", "-149.14, 91.7657, -17.7889, 0.15", "-149.448, 92.3717, -17.8276, 1.03", "-149.705, 92.87, -17.8496, 1.11", "-150.797, 95.0548, -17.9397, 0.15", "-151.252, 95.994, -17.9635, 0.15", "-151.708, 96.9508, -17.9641, 1.55", "-151.95, 97.4652, -17.9487, 1.62", "-152.819, 99.353, -17.8421, 0.15", "-153.207, 100.234, -17.7677, 0.15", "-153.414, 100.729, -17.7128, 0.52", "-153.48, 100.897, -17.6955, 0.81", "-153.977, 102.21, -17.5553, 0.15", "-154.304, 103.069, -17.4759, 0.81", "-154.396, 103.306, -17.452, 0.81", "-155.119, 105.101, -17.2356, 0.15", "-155.502, 106.044, -17.1174, 1.33", "-155.81, 106.791, -17.0088, 1.33", "-156.483, 108.393, -16.722, 0.22", "-156.65, 108.774, -16.6497, 0.37", "-156.985, 109.481, -16.487, 0.22", "-157.022, 109.55, -16.4648, 0.22", "-157.268, 109.939, -16.3459, 0.29", "-157.95, 110.886, -15.9947, 0.15", "-157.997, 110.946, -15.9683, 0.15", "-158.514, 111.606, -15.6712, 0.66", "-158.912, 112.11, -15.4257, 1.25", "-159.401, 112.729, -15.1006, 1.25", "-160.236, 113.83, -14.4806, 0.15", "-160.609, 114.33, -14.1727, 0.66", "-160.764, 114.547, -14.0343, 0.74", "-161.418, 115.51, -13.3823, 0.22", "-161.471, 115.59, -13.335, 0.22", "-162.025, 116.419, -12.9295, 0.22", "-162.354, 116.899, -12.7637, 0.66", "-162.401, 116.963, -12.7493, 0.66", "-162.586, 117.205, -12.7148, 0.66", "-163.768, 118.724, -12.5746, 0.22", "-164.327, 119.393, -12.5183, 1.03", "-164.645, 119.748, -12.4871, 1.18", "-165.952, 121.204, -12.3017, 0.22", "-166.631, 121.943, -12.1669, 1.11", "-166.945, 122.264, -12.0806, 1.33", "-168.14, 123.426, -11.6601, 0.15", "-168.644, 123.909, -11.4641, 0.88", "-169.732, 124.958, -10.9916, 0.15", "-170.31, 125.539, -10.6996, 0.59", "-171.359, 126.652, -10.118, 0.15", "-171.939, 127.31, -9.7756, 0.74", "-172.084, 127.496, -9.68153, 0.74", "-172.535, 128.133, -9.37758, 0.15", "-173.211, 129.121, -8.90661, 1.55", "-173.438, 129.475, -8.7396, 1.84", "-173.478, 129.539, -8.7089, 1.84", "-174.362, 130.863, -8.02213, 0.15", "-174.854, 131.544, -7.65192, 0.29", "-175.476, 132.329, -7.23024, 0.15", "-175.874, 132.793, -6.97313, 0.44", "-176.141, 133.079, -6.82324, 0.52", "-176.513, 133.434, -6.63811, 0.15", "-176.899, 133.765, -6.49214, 0.52", "-177.418, 134.172, -6.37719, 0.59", "-177.493, 134.222, -6.36801, 0.59", "-178.852, 135.041, -6.29286, 0.15", "-179.613, 135.452, -6.27347, 1.18", "-180.319, 135.723, -6.22441, 1.33", "-181.495, 135.979, -6.08618, 0.22", "-182.49, 136.089, -5.92376, 0.22", "-183.074, 136.102, -5.81284, 0.74", "-183.648, 136.058, -5.68559, 1.11", "-185.687, 135.71, -4.95633, 0.22", "-186.942, 135.404, -4.31336, 0.22", "-187.006, 135.385, -4.27213, 0.22", "-187.52, 135.227, -3.87699, 1.03", "-187.74, 135.16, -3.68636, 1.18", "-189.554, 134.702, -1.97006, 0.22", "-190.048, 134.629, -1.45159, 0.66", "-190.274, 134.611, -1.20357, 0.96", "-191.074, 134.589, -0.373066, 0.22", "-191.342, 134.593, -0.113511, 0.37", "-191.795, 134.626, 0.269303, 0.15", "-192.083, 134.683, 0.46149, 0.44", "-192.668, 134.822, 0.842474, 0.22", "-193.012, 134.928, 1.07569, 0.37", "-193.632, 135.181, 1.51451, 0.15", "-193.72, 135.226, 1.58413, 0.15", "-194.16, 135.498, 1.96496, 0.88", "-194.451, 135.75, 2.25093, 1.18", "-195.169, 136.556, 2.92472, 0.15", "-195.471, 136.954, 3.19911, 0.29", "-195.951, 137.642, 3.63615, 0.15", "-196.196, 138.007, 3.85332, 0.44", "-197.236, 139.651, 4.73493, 0.15", "-197.941, 140.838, 5.32077, 0.66", "-198.14, 141.208, 5.47813, 0.66" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-93.7696, 1.23803, -26.7406, 0.22", "-94.9342, 1.09836, -27.4372, 0.22", "-95.8209, 0.993644, -27.9278, 1.03", "-96.3465, 0.966942, -28.2348, 1.25", "-98.2485, 0.915804, -29.2986, 0.22", "-98.6069, 0.915559, -29.5002, 0.22", "-99.1695, 0.915739, -29.8103, 0.81", "-99.4211, 0.928206, -29.9499, 0.81", "-101.33, 1.05692, -30.9686, 0.22", "-102.037, 1.10775, -31.3281, 0.15", "-103.304, 1.20501, -31.9367, 1.47", "-103.821, 1.25108, -32.1839, 1.84", "-104.467, 1.30845, -32.4868, 1.84", "-106.272, 1.49157, -33.2833, 0.15", "-106.804, 1.54939, -33.4866, 0.15", "-107.497, 1.66999, -33.7574, 0.96", "-107.889, 1.74956, -33.8968, 0.96", "-109.074, 2.0293, -34.3223, 0.15", "-110.023, 2.27302, -34.639, 1.03", "-110.369, 2.38005, -34.7574, 1.33", "-112.2, 2.9908, -35.3858, 0.15", "-112.931, 3.24533, -35.6185, 0.15", "-113.662, 3.54438, -35.8811, 0.37", "-114.184, 3.78992, -36.0695, 0.15", "-114.938, 4.16633, -36.3385, 1.11", "-115.112, 4.26738, -36.406, 1.55", "-115.376, 4.44023, -36.4997, 1.55", "-117.297, 5.7651, -37.2182, 0.22", "-117.99, 6.25468, -37.49, 1.11", "-118.148, 6.36745, -37.554, 1.11", "-119.564, 7.395, -38.1162, 0.22", "-120.345, 7.96875, -38.4265, 0.37", "-121.12, 8.55872, -38.7577, 0.15", "-121.793, 9.08599, -39.0596, 1.03", "-122.088, 9.30402, -39.1932, 1.18", "-123.51, 10.2835, -39.8007, 0.29", "-124.43, 10.8687, -40.1789, 0.29", "-125.799, 11.696, -40.7857, 1.55", "-126.34, 12.0032, -41.021, 1.77", "-127.573, 12.655, -41.5638, 0.15", "-127.985, 12.8598, -41.7535, 0.15", "-128.705, 13.2209, -42.106, 0.59", "-130.009, 13.9212, -42.7814, 0.15", "-130.734, 14.3107, -43.1372, 0.96", "-131.237, 14.6038, -43.3787, 1.4", "-131.289, 14.6387, -43.4046, 1.4", "-132.721, 15.7689, -44.1219, 0.15", "-132.761, 15.8065, -44.1403, 0.15", "-133.575, 16.66, -44.4637, 0.15", "-134.167, 17.3516, -44.6852, 1.25", "-134.39, 17.6279, -44.7528, 1.25", "-135.668, 19.2998, -45.0504, 0.22", "-136.358, 20.2484, -45.1578, 1.25", "-136.538, 20.5033, -45.181, 1.77", "-137.445, 21.8574, -45.272, 0.22", "-138.074, 22.7844, -45.3155, 0.22", "-138.76, 23.7443, -45.3262, 1.33", "-138.944, 23.9891, -45.3108, 1.47", "-139.804, 25.1083, -45.2522, 0.15", "-140.049, 25.4285, -45.2477, 0.59", "-140.66, 26.2211, -45.2573, 0.15", "-140.944, 26.5981, -45.279, 0.37", "-140.987, 26.6519, -45.283, 0.37", "-141.566, 27.3469, -45.3079, 0.15", "-142.137, 28.0041, -45.2942, 0.81", "-142.398, 28.2566, -45.3071, 1.25", "-142.632, 28.4485, -45.3187, 1.25", "-143.702, 29.2408, -45.3942, 0.22", "-144.421, 29.7279, -45.4442, 1.11", "-144.594, 29.8247, -45.4627, 1.77", "-146.606, 30.8278, -45.7712, 0.22", "-147.271, 31.1394, -45.895, 0.22", "-148.161, 31.5225, -46.0741, 1.18", "-148.712, 31.7291, -46.1898, 1.47", "-150.186, 32.1907, -46.4825, 0.22", "-151.124, 32.4324, -46.6293, 0.22", "-151.908, 32.5851, -46.7099, 1.11", "-152.537, 32.6846, -46.7638, 1.4", "-154.307, 32.9248, -46.8694, 0.15", "-155.557, 33.0918, -46.8969, 0.15", "-156.193, 33.1978, -46.8837, 0.15", "-156.552, 33.2625, -46.873, 0.88", "-156.961, 33.3736, -46.8705, 0.96", "-157.967, 33.7713, -46.8843, 0.15", "-158.505, 34.0582, -46.8912, 0.15", "-159.369, 34.5945, -46.9489, 0.96", "-159.535, 34.7024, -46.9672, 1.25", "-160.505, 35.3486, -47.125, 0.22", "-160.904, 35.6273, -47.2115, 0.29", "-161.649, 36.1614, -47.3842, 0.15", "-162.381, 36.7035, -47.5536, 0.15", "-162.906, 37.1161, -47.6825, 1.11", "-163.772, 37.8639, -47.8966, 1.25", "-164.899, 39.023, -48.1858, 0.15", "-165.179, 39.3784, -48.2636, 0.81", "-165.474, 39.8295, -48.3447, 0.81", "-166.072, 40.9279, -48.4907, 0.15", "-166.338, 41.5086, -48.5464, 0.59", "-166.846, 42.8344, -48.6413, 0.22", "-167.146, 43.7685, -48.6924, 0.81", "-167.248, 44.1215, -48.7144, 1.11", "-167.636, 45.6317, -48.781, 0.22", "-167.754, 46.1369, -48.7923, 0.22", "-167.943, 46.9009, -48.8802, 1.18", "-168.087, 47.4608, -48.9714, 1.47", "-168.687, 49.5697, -49.3819, 0.22", "-168.925, 50.3054, -49.5461, 0.22", "-169.441, 51.616, -49.8856, 1.77", "-170.68, 54.272, -50.6791, 0.22", "-170.713, 54.3271, -50.7022, 0.22", "-171.143, 54.8331, -51.0124, 0.52", "-171.431, 55.0341, -51.2616, 0.52", "-172.024, 55.2975, -51.8136, 0.15", "-172.232, 55.3578, -52.0168, 0.66", "-173.72, 55.7492, -53.8453, 0.29", "-174.291, 55.888, -54.6101, 1.69", "-175.873, 56.2601, -56.8245, 0.37", "-176.179, 56.3367, -57.274, 0.96", "-177.409, 56.6665, -59.0999, 1.62", "-180.357, 57.5035, -63.4892, 0.29", "-181.062, 57.7079, -64.5355, 0.29", "-181.421, 57.8169, -65.0633, 1.11", "-183.349, 58.3755, -67.7863, 0.66", "-184.256, 58.6044, -69.0476, 0.15", "-184.297, 58.6101, -69.1013, 0.15", "-184.917, 58.6287, -69.8102, 1.18", "-185.26, 58.6187, -70.2415, 1.33", "-186.14, 58.4851, -71.4167, 0.22", "-186.387, 58.4052, -71.7473, 0.37", "-186.842, 58.2218, -72.3461, 0.15", "-187.621, 57.8684, -73.3655, 1.03", "-188.83, 57.1986, -74.9482, 0.15", "-189.277, 56.9094, -75.5684, 1.11", "-189.472, 56.751, -75.8443, 1.25", "-190.123, 56.1403, -76.7991, 0.52", "-190.701, 55.5109, -77.668, 0.22", "-191.162, 54.9443, -78.419, 0.22", "-191.873, 53.9786, -79.691, 0.96", "-192.335, 53.2465, -80.6358, 1.11", "-192.685, 52.6417, -81.4409, 1.33", "-192.705, 52.6022, -81.4947, 1.33", "-193.462, 51.0704, -83.5172, 0.15", "-193.48, 51.029, -83.5706, 0.15", "-194.014, 49.5134, -85.2763, 0.15", "-194.027, 49.4727, -85.3187, 0.15", "-194.278, 48.5922, -86.1305, 1.11", "-194.406, 48.159, -86.5062, 1.47", "-194.924, 46.4571, -87.8613, 0.15", "-195.297, 45.2783, -88.8215, 0.29", "-195.783, 43.8752, -90.0142, 0.15", "-196.077, 43.0404, -90.7139, 0.15", "-196.351, 42.2923, -91.3281, 0.59", "-196.465, 42.0098, -91.5563, 0.59" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-38.3658, -127.422, 14.2203, 0.96", "-40.6873, -137.14, 14.8353, 0.96", "-42.2493, -146.971, 15.8838, 0.96", "-43.7343, -156.48, 18.4729, 0.96", "-46.5817, -165.511, 21.4745, 0.96", "-47.6249, -174.863, 24.6884, 0.96", "-49.0378, -183.935, 28.4408, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-38.3658, -127.422, 14.2203, 0.74", "-41.3664, -139.847, 14.8841, 0.96", "-46.7468, -151.354, 13.8232, 0.96", "-50.1501, -163.692, 13.8193, 0.96", "-53.0059, -176.111, 14.961, 0.96", "-55.5415, -188.618, 13.7667, 0.96", "-55.6944, -201.422, 13.0956, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "91.3709, 114.611, -77.4308, 0.15", "92.9523, 115.626, -78.932, 0.15", "93.581, 116.029, -79.5426, 0.37", "93.6482, 116.074, -79.6085, 0.37", "94.6356, 116.656, -80.5338, 0.88", "95.0058, 116.871, -80.8706, 1.11", "96.9954, 118.079, -82.6445, 0.15", "97.8084, 118.607, -83.3886, 1.11", "98.1201, 118.823, -83.6823, 1.47", "99.2485, 119.698, -84.7771, 0.15", "99.8748, 120.256, -85.3954, 0.29", "100.817, 121.161, -86.3205, 0.15", "101.448, 121.82, -86.9333, 0.88", "101.842, 122.212, -87.3037, 0.88", "102.689, 122.903, -88.2062, 0.22", "103.286, 123.244, -88.9796, 0.74", "103.347, 123.264, -89.0612, 0.74", "104.416, 123.482, -90.475, 0.22", "105.499, 123.647, -91.9034, 1.25", "107.827, 123.889, -95.0104, 1.99", "110.621, 124.038, -98.8308, 1.25", "112.465, 124.063, -101.417, 0.22", "112.962, 124.06, -102.134, 0.74" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "91.3709, 114.611, -77.4308, 1.18", "92.3222, 117.063, -77.2598, 1.18", "92.8906, 118.287, -77.2517, 0.59", "93.2554, 118.916, -77.2461, 0.22", "93.6844, 119.56, -77.2407, 0.37", "95.0424, 121.228, -77.1509, 0.15", "95.5195, 121.751, -77.0929, 0.29", "95.6677, 121.873, -77.0803, 0.29", "96.8432, 122.772, -76.9479, 0.22", "97.2851, 123.099, -76.8664, 0.74", "98.6065, 124.012, -76.5346, 0.22", "99.72, 124.745, -76.1552, 0.22", "100.788, 125.453, -75.7675, 0.74", "101.158, 125.704, -75.6312, 0.88", "101.21, 125.742, -75.612, 0.88" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_44", "dend_41", "dend_40", "dend_39", "dend_32", "dend_15", "dend_0", "dend_49", "dend_46", "dend_43", "dend_42", "dend_36", "dend_33", "dend_21", "dend_16", "dend_8", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_35", "dend_34", "dend_23", "dend_22", "dend_18", "dend_17", "dend_14", "dend_9", "dend_7", "dend_2", "dend_27", "dend_24", "dend_20", "dend_19", "dend_13", "dend_10", "dend_6", "dend_3", "dend_31", "dend_28", "dend_26", "dend_25", "dend_12", "dend_11", "dend_5", "dend_4", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_45", "dend_44", "dend_41", "dend_40", "dend_39", "dend_32", "dend_15", "dend_0", "dend_49", "dend_46", "dend_43", "dend_42", "dend_36", "dend_33", "dend_21", "dend_16", "dend_8", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_35", "dend_34", "dend_23", "dend_22", "dend_18", "dend_17", "dend_14", "dend_9", "dend_7", "dend_2", "dend_27", "dend_24", "dend_20", "dend_19", "dend_13", "dend_10", "dend_6", "dend_3", "dend_31", "dend_28", "dend_26", "dend_25", "dend_12", "dend_11", "dend_5", "dend_4", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_NBC_695ce74c39_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_21, id: dend_21, parent: dend_15
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_44, dend_41, dend_40, dend_39, dend_32, dend_15, dend_0, dend_49, dend_46, dend_43, dend_42, dend_36, dend_33, dend_21, dend_16, dend_8, dend_1, dend_48, dend_47, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_18, dend_17, dend_14, dend_9, dend_7, dend_2, dend_27, dend_24, dend_20, dend_19, dend_13, dend_10, dend_6, dend_3, dend_31, dend_28, dend_26, dend_25, dend_12, dend_11, dend_5, dend_4, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_45, dend_44, dend_41, dend_40, dend_39, dend_32, dend_15, dend_0, dend_49, dend_46, dend_43, dend_42, dend_36, dend_33, dend_21, dend_16, dend_8, dend_1, dend_48, dend_47, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_18, dend_17, dend_14, dend_9, dend_7, dend_2, dend_27, dend_24, dend_20, dend_19, dend_13, dend_10, dend_6, dend_3, dend_31, dend_28, dend_26, dend_25, dend_12, dend_11, dend_5, dend_4, dend_30, dend_29]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_45(0), soma_0(0.4500001168102554)
    connect dend_44(0), soma_0(0.4500001168102554)
    connect dend_41(0), soma_0(0.4500001168102554)
    connect dend_40(0), soma_0(0.4500001168102554)
    connect dend_39(0), soma_0(0.4500001168102554)
    connect dend_32(0), soma_0(0.4500001168102554)
    connect dend_15(0), soma_0(0.4500001168102554)
    connect dend_0(0), soma_0(0.4500001168102554)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_21(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -13.949, -8.42419, 0.100519, 3.62861 ) }
    soma_0 { pt3dadd( -12.6535, -7.67858, 0.0948633, 5.83631 ) }
    soma_0 { pt3dadd( -11.3579, -6.93297, 0.0892077, 8.55542 ) }
    soma_0 { pt3dadd( -10.0624, -6.18737, 0.0835521, 10.7156 ) }
    soma_0 { pt3dadd( -8.76689, -5.44176, 0.0778965, 12.4768 ) }
    soma_0 { pt3dadd( -7.47135, -4.69615, 0.0722409, 13.7805 ) }
    soma_0 { pt3dadd( -6.17582, -3.95054, 0.0665852, 14.7297 ) }
    soma_0 { pt3dadd( -4.88029, -3.20494, 0.0609296, 15.4698 ) }
    soma_0 { pt3dadd( -3.58476, -2.45933, 0.055274, 15.4283 ) }
    soma_0 { pt3dadd( -2.28923, -1.71372, 0.0496184, 15.2597 ) }
    soma_0 { pt3dadd( -0.993699, -0.968118, 0.0439628, 15.3383 ) }
    soma_0 { pt3dadd( 0.301832, -0.222511, 0.0383072, 15.1765 ) }
    soma_0 { pt3dadd( 1.59736, 0.523096, 0.0326516, 15.0411 ) }
    soma_0 { pt3dadd( 2.89289, 1.2687, 0.026996, 14.4622 ) }
    soma_0 { pt3dadd( 4.18843, 2.01431, 0.0213403, 13.8347 ) }
    soma_0 { pt3dadd( 5.48396, 2.75992, 0.0156847, 13.0717 ) }
    soma_0 { pt3dadd( 6.77949, 3.50552, 0.0100291, 12.0118 ) }
    soma_0 { pt3dadd( 8.07502, 4.25113, 0.0043735, 10.1352 ) }
    soma_0 { pt3dadd( 9.37055, 4.99674, -0.00128211, 7.91031 ) }
    soma_0 { pt3dadd( 10.6661, 5.74234, -0.00693772, 5.16328 ) }
    soma_0 { pt3dadd( 11.9616, 6.48795, -0.0125933, 3.54095 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -10.841, -6.32175, -12.7414, 1.77 ) }
    dend_45 { pt3dadd( -10.6457, -6.78138, -12.9126, 1.77 ) }
    dend_45 { pt3dadd( -10.3605, -7.66301, -13.2738, 1.77 ) }
    dend_45 { pt3dadd( -10.1364, -8.77234, -13.7381, 1.33 ) }
    dend_45 { pt3dadd( -10.134, -8.83226, -13.7607, 1.33 ) }
    dend_45 { pt3dadd( -10.2409, -10.5405, -14.3442, 0.66 ) }
    dend_45 { pt3dadd( -10.3474, -11.4362, -14.6263, 0.66 ) }
    dend_45 { pt3dadd( -10.5387, -12.3271, -14.893, 0.81 ) }
    dend_45 { pt3dadd( -10.8169, -13.2148, -15.1424, 0.81 ) }
    dend_45 { pt3dadd( -11.3658, -14.6294, -15.4712, 0.59 ) }
    dend_45 { pt3dadd( -11.7291, -15.5178, -15.656, 1.33 ) }
    dend_45 { pt3dadd( -11.9223, -15.9404, -15.7915, 1.69 ) }
    dend_45 { pt3dadd( -12.1578, -16.447, -16.0822, 1.99 ) }
    dend_45 { pt3dadd( -12.179, -16.4968, -16.1148, 1.99 ) }
    dend_45 { pt3dadd( -12.4777, -17.27, -16.7191, 1.69 ) }
    dend_45 { pt3dadd( -12.8072, -18.0891, -17.5417, 0.88 ) }
    dend_45 { pt3dadd( -13.5827, -19.8733, -19.65, 1.84 ) }
    dend_45 { pt3dadd( -13.9867, -20.7572, -20.8276, 2.87 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 39/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -5.76104, -0.252754, 16.0186, 1.33 ) }
    dend_44 { pt3dadd( -5.74412, 0.424633, 16.007, 1.33 ) }
    dend_44 { pt3dadd( -5.63967, 1.75701, 15.9851, 0.88 ) }
    dend_44 { pt3dadd( -5.62988, 1.82768, 15.984, 0.88 ) }
    dend_44 { pt3dadd( -5.44811, 2.94355, 15.9596, 0.88 ) }
    dend_44 { pt3dadd( -5.27407, 3.9957, 15.933, 0.59 ) }
    dend_44 { pt3dadd( -5.14977, 4.85505, 15.9509, 0.59 ) }
    dend_44 { pt3dadd( -5.11704, 5.06808, 15.9655, 0.59 ) }
    dend_44 { pt3dadd( -5.04671, 5.74008, 16.0819, 0.52 ) }
    dend_44 { pt3dadd( -5.02183, 6.45982, 16.2719, 1.18 ) }
    dend_44 { pt3dadd( -5.08764, 7.15216, 16.5266, 1.4 ) }
    dend_44 { pt3dadd( -5.32228, 8.16911, 16.9173, 1.4 ) }
    dend_44 { pt3dadd( -5.35647, 8.28908, 16.9597, 1.4 ) }
    dend_44 { pt3dadd( -5.73222, 9.54716, 17.3804, 1.03 ) }
    dend_44 { pt3dadd( -5.75293, 9.62249, 17.4027, 1.03 ) }
    dend_44 { pt3dadd( -5.9771, 10.8439, 17.7255, 1.03 ) }
    dend_44 { pt3dadd( -6.12113, 12.2224, 18.032, 1.33 ) }
    dend_44 { pt3dadd( -6.15574, 12.9695, 18.1657, 1.33 ) }
    dend_44 { pt3dadd( -6.15762, 13.0394, 18.1797, 1.33 ) }
    dend_44 { pt3dadd( -6.15313, 14.1887, 18.4192, 0.88 ) }
    dend_44 { pt3dadd( -6.15374, 15.3694, 18.8802, 0.74 ) }
    dend_44 { pt3dadd( -6.14495, 16.7142, 19.6568, 1.33 ) }
    dend_44 { pt3dadd( -6.14267, 16.7621, 19.693, 1.33 ) }
    dend_44 { pt3dadd( -6.061, 17.6914, 20.5453, 2.28 ) }
    dend_44 { pt3dadd( -6.01739, 18.0316, 20.9173, 2.28 ) }
    dend_44 { pt3dadd( -5.54693, 19.5992, 23.391, 0.74 ) }
    dend_44 { pt3dadd( -5.50671, 19.6532, 23.5103, 0.74 ) }
    dend_44 { pt3dadd( -5.04292, 19.9302, 24.3836, 0.74 ) }
    dend_44 { pt3dadd( -4.6031, 20.0755, 24.9566, 0.74 ) }
    dend_44 { pt3dadd( -4.56124, 20.0813, 24.9969, 0.74 ) }
    dend_44 { pt3dadd( -3.4945, 20.1133, 25.7823, 0.22 ) }
    dend_44 { pt3dadd( -2.58059, 20.0636, 26.0906, 0.22 ) }
    dend_44 { pt3dadd( -2.49041, 20.063, 26.1245, 0.22 ) }
    dend_44 { pt3dadd( -1.91448, 20.1402, 26.3921, 0.29 ) }
    dend_44 { pt3dadd( -0.783154, 29.0248, 31.015, 0.29 ) }
    dend_44 { pt3dadd( -1.22567, 37.1621, 36.8612, 0.29 ) }
    dend_44 { pt3dadd( -2.63697, 45.7331, 41.9562, 0.29 ) }
    dend_44 { pt3dadd( -2.39, 54.9221, 46.1667, 0.29 ) }
    dend_44 { pt3dadd( -1.06862, 64.522, 49.1547, 0.29 ) }
    dend_44 { pt3dadd( 0.757736, 74.3421, 51.0069, 0.29 ) }
    dend_44 { pt3dadd( 2.80309, 83.7668, 54.075, 0.29 ) }
    dend_44 { pt3dadd( 3.9785, 92.9135, 58.1965, 0.29 ) }
    dend_44 { pt3dadd( 6.86186, 100.92, 63.4494, 0.29 ) }
    dend_44 { pt3dadd( 9.81447, 107.477, 70.2619, 0.29 ) }
    dend_44 { pt3dadd( 12.1044, 112.485, 78.4036, 0.29 ) }
    dend_44 { pt3dadd( 12.6035, 116.67, 87.2532, 0.29 ) }
    dend_44 { pt3dadd( 12.063, 120.235, 96.3479, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 86/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.18896, 8.05274, 6.69868, 0.59 ) }
    dend_41 { pt3dadd( 6.21155, 8.73455, 6.56495, 0.59 ) }
    dend_41 { pt3dadd( 6.23034, 9.59334, 6.38637, 1.25 ) }
    dend_41 { pt3dadd( 6.23446, 10.0502, 6.27858, 1.77 ) }
    dend_41 { pt3dadd( 6.22645, 10.4604, 6.18667, 2.06 ) }
    dend_41 { pt3dadd( 6.1857, 11.388, 6.04969, 1.69 ) }
    dend_41 { pt3dadd( 6.13354, 12.2729, 5.96269, 0.74 ) }
    dend_41 { pt3dadd( 6.12746, 12.3221, 5.96405, 0.74 ) }
    dend_41 { pt3dadd( 6.04287, 12.8414, 6.12701, 0.66 ) }
    dend_41 { pt3dadd( 5.99389, 13.2175, 6.36369, 0.66 ) }
    dend_41 { pt3dadd( 5.98507, 13.9034, 7.01474, 1.4 ) }
    dend_41 { pt3dadd( 5.98752, 13.931, 7.04536, 1.4 ) }
    dend_41 { pt3dadd( 6.08943, 14.566, 7.82783, 2.06 ) }
    dend_41 { pt3dadd( 6.19683, 15.1022, 8.50432, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_41 { pt3dadd( 6.31936, 15.6101, 9.14412, 1.62 ) }
    dend_41 { pt3dadd( 6.53365, 16.3537, 10.0368, 0.88 ) }
    dend_41 { pt3dadd( 6.63367, 16.6863, 10.3917, 0.74 ) }
    dend_41 { pt3dadd( 6.85038, 17.4445, 11.0928, 0.59 ) }
    dend_41 { pt3dadd( 6.86215, 17.4892, 11.1238, 0.59 ) }
    dend_41 { pt3dadd( 6.93979, 17.9054, 11.3149, 0.59 ) }
    dend_41 { pt3dadd( 6.94453, 17.9672, 11.3342, 0.59 ) }
    dend_41 { pt3dadd( 6.92181, 18.6297, 11.4521, 1.47 ) }
    dend_41 { pt3dadd( 6.88123, 19.1418, 11.5272, 1.92 ) }
    dend_41 { pt3dadd( 6.79509, 19.7971, 11.6149, 2.36 ) }
    dend_41 { pt3dadd( 6.70209, 20.3145, 11.7082, 1.84 ) }
    dend_41 { pt3dadd( 6.43503, 21.3308, 11.9745, 0.66 ) }
    dend_41 { pt3dadd( 6.25291, 21.8552, 12.1585, 0.59 ) }
    dend_41 { pt3dadd( 6.19904, 21.9636, 12.212, 0.59 ) }
    dend_41 { pt3dadd( 5.90838, 22.4398, 12.5064, 0.37 ) }
    dend_41 { pt3dadd( 5.88586, 22.4735, 12.5327, 0.37 ) }
    dend_41 { pt3dadd( 5.6355, 22.8378, 12.8371, 0.37 ) }
    dend_41 { pt3dadd( 5.61671, 22.8674, 12.8592, 0.37 ) }
    dend_41 { pt3dadd( 5.36288, 23.3529, 13.1791, 1.18 ) }
    dend_41 { pt3dadd( 5.17375, 23.7675, 13.4205, 1.84 ) }
    dend_41 { pt3dadd( 4.84621, 24.5983, 13.8584, 1.03 ) }
    dend_41 { pt3dadd( 4.83092, 24.6399, 13.8789, 1.03 ) }
    dend_41 { pt3dadd( 4.71532, 25.0068, 14.0369, 1.62 ) }
    dend_41 { pt3dadd( 4.61971, 25.3449, 14.1544, 1.77 ) }
    dend_41 { pt3dadd( 4.57764, 25.5097, 14.1991, 1.77 ) }
    dend_41 { pt3dadd( 4.40673, 26.2054, 14.3272, 1.47 ) }
    dend_41 { pt3dadd( 4.30242, 26.6631, 14.3651, 0.81 ) }
    dend_41 { pt3dadd( 4.16562, 27.2844, 14.3971, 0.52 ) }
    dend_41 { pt3dadd( 4.00992, 27.9621, 14.3986, 0.52 ) }
    dend_41 { pt3dadd( 3.93106, 28.2737, 14.4009, 0.74 ) }
    dend_41 { pt3dadd( 3.91264, 28.3268, 14.4043, 0.74 ) }
    dend_41 { pt3dadd( 3.76968, 28.6376, 14.4487, 0.88 ) }
    dend_41 { pt3dadd( 3.7122, 28.7249, 14.479, 0.88 ) }
    dend_41 { pt3dadd( 3.46179, 29.0102, 14.6476, 0.88 ) }
    dend_41 { pt3dadd( 3.00635, 29.4855, 15.005, 0.44 ) }
    dend_41 { pt3dadd( 2.54444, 29.9847, 15.3759, 0.44 ) }
    dend_41 { pt3dadd( 2.5212, 30.0128, 15.3954, 0.44 ) }
    dend_41 { pt3dadd( 2.38042, 30.2006, 15.5224, 0.74 ) }
    dend_41 { pt3dadd( 2.35303, 30.2515, 15.5499, 0.74 ) }
    dend_41 { pt3dadd( 2.22255, 30.618, 15.6992, 0.74 ) }
    dend_41 { pt3dadd( 2.13436, 30.9851, 15.8006, 0.74 ) }
    dend_41 { pt3dadd( 2.05884, 31.4589, 15.8536, 1.03 ) }
    dend_41 { pt3dadd( 2.05048, 31.5145, 15.8591, 1.03 ) }
    dend_41 { pt3dadd( 1.93154, 32.3918, 15.9332, 1.25 ) }
    dend_41 { pt3dadd( 1.85155, 33.0039, 15.9771, 1.62 ) }
    dend_41 { pt3dadd( 1.84484, 33.06, 15.9802, 1.62 ) }
    dend_41 { pt3dadd( 1.71543, 34.351, 16.0014, 2.06 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 47/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -13.571, -2.24776, -0.0513216, 0.37 ) }
    dend_40 { pt3dadd( -13.8657, -1.83925, -0.0884216, 0.37 ) }
    dend_40 { pt3dadd( -14.1434, -1.31921, -0.178054, 0.29 ) }
    dend_40 { pt3dadd( -14.3861, -0.778331, -0.282249, 0.74 ) }
    dend_40 { pt3dadd( -14.6318, -0.115045, -0.422341, 1.03 ) }
    dend_40 { pt3dadd( -14.8332, 0.492662, -0.562436, 0.29 ) }
    dend_40 { pt3dadd( -15.0291, 1.21274, -0.77204, 0.22 ) }
    dend_40 { pt3dadd( -15.1768, 2.18744, -1.20775, 1.11 ) }
    dend_40 { pt3dadd( -15.2024, 2.48529, -1.37328, 1.33 ) }
    dend_40 { pt3dadd( -15.241, 2.96137, -1.67753, 1.33 ) }
    dend_40 { pt3dadd( -15.2544, 3.08184, -1.76138, 1.33 ) }
    dend_40 { pt3dadd( -15.4069, 3.93396, -2.36831, 1.03 ) }
    dend_40 { pt3dadd( -15.7256, 5.15306, -3.24868, 0.37 ) }
    dend_40 { pt3dadd( -15.9031, 5.69174, -3.61308, 0.37 ) }
    dend_40 { pt3dadd( -16.1722, 6.53676, -4.14276, 0.96 ) }
    dend_40 { pt3dadd( -16.2755, 6.88958, -4.34409, 1.18 ) }
    dend_40 { pt3dadd( -16.414, 7.41688, -4.6099, 0.96 ) }
    dend_40 { pt3dadd( -16.5702, 8.18897, -4.97087, 0.52 ) }
    dend_40 { pt3dadd( -16.624, 9.09551, -5.41189, 0.37 ) }
    dend_40 { pt3dadd( -16.5448, 10.047, -6.00638, 1.03 ) }
    dend_40 { pt3dadd( -16.4851, 10.412, -6.25999, 1.18 ) }
    dend_40 { pt3dadd( -16.4756, 10.475, -6.30708, 1.18 ) }
    dend_40 { pt3dadd( -16.3497, 11.4705, -7.07201, 0.81 ) }
    dend_40 { pt3dadd( -16.29, 12.3113, -7.77415, 0.29 ) }
    dend_40 { pt3dadd( -16.316, 13.2085, -8.70139, 0.22 ) }
    dend_40 { pt3dadd( -16.3548, 13.6138, -9.13886, 0.22 ) }
    dend_40 { pt3dadd( -16.4504, 14.4549, -10.0403, 0.96 ) }
    dend_40 { pt3dadd( -16.4948, 14.8089, -10.421, 1.55 ) }
    dend_40 { pt3dadd( -16.676, 15.8247, -11.5385, 1.55 ) }
    dend_40 { pt3dadd( -17.138, 17.929, -13.803, 0.37 ) }
    dend_40 { pt3dadd( -17.276, 18.4984, -14.3821, 0.22 ) }
    dend_40 { pt3dadd( -17.681, 20.095, -15.93, 2.14 ) }
    dend_40 { pt3dadd( -17.8634, 20.772, -16.5481, 2.87 ) }
    dend_40 { pt3dadd( -18.7576, 23.8235, -19.0885, 0.29 ) }
    dend_40 { pt3dadd( -19.0781, 24.8158, -19.8041, 0.29 ) }
    dend_40 { pt3dadd( -19.4614, 25.8824, -20.4382, 0.22 ) }
    dend_40 { pt3dadd( -19.6665, 26.4188, -20.7236, 0.81 ) }
    dend_40 { pt3dadd( -19.804, 26.7774, -20.8794, 0.81 ) }
    dend_40 { pt3dadd( -20.2085, 27.9325, -21.2954, 0.15 ) }
    dend_40 { pt3dadd( -20.2309, 28.0066, -21.3163, 0.15 ) }
    dend_40 { pt3dadd( -20.4976, 29.0541, -21.6762, 0.81 ) }
    dend_40 { pt3dadd( -20.6573, 29.7446, -21.936, 1.55 ) }
    dend_40 { pt3dadd( -21.2902, 32.3648, -22.93, 0.22 ) }
    dend_40 { pt3dadd( -21.6491, 33.831, -23.5057, 1.99 ) }
    dend_40 { pt3dadd( -21.8387, 34.5912, -23.8063, 2.87 ) }
    dend_40 { pt3dadd( -22.4403, 37.0241, -24.8436, 0.22 ) }
    dend_40 { pt3dadd( -22.4576, 37.0954, -24.8751, 0.22 ) }
    dend_40 { pt3dadd( -22.7511, 38.3074, -25.4289, 0.22 ) }
    dend_40 { pt3dadd( -23.0234, 39.4786, -25.9571, 0.81 ) }
    dend_40 { pt3dadd( -23.1399, 40.0055, -26.2152, 1.03 ) }
    dend_40 { pt3dadd( -23.6444, 42.2555, -27.3896, 0.22 ) }
    dend_40 { pt3dadd( -23.8074, 42.9797, -27.772, 0.22 ) }
    dend_40 { pt3dadd( -23.9856, 43.9009, -28.2827, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_40 { pt3dadd( -24.0075, 44.0385, -28.36, 0.66 ) }
    dend_40 { pt3dadd( -24.1886, 45.1891, -28.997, 0.22 ) }
    dend_40 { pt3dadd( -24.3768, 46.3529, -29.6299, 1.77 ) }
    dend_40 { pt3dadd( -24.4489, 46.8188, -29.8645, 2.36 ) }
    dend_40 { pt3dadd( -24.8146, 49.1335, -30.9794, 0.15 ) }
    dend_40 { pt3dadd( -24.9232, 49.8115, -31.277, 0.15 ) }
    dend_40 { pt3dadd( -25.0776, 50.7297, -31.6494, 1.11 ) }
    dend_40 { pt3dadd( -25.1865, 51.3454, -31.9073, 1.4 ) }
    dend_40 { pt3dadd( -25.4414, 52.7126, -32.5054, 0.22 ) }
    dend_40 { pt3dadd( -25.5717, 53.3781, -32.8026, 0.22 ) }
    dend_40 { pt3dadd( -25.8082, 54.4245, -33.2649, 1.03 ) }
    dend_40 { pt3dadd( -25.9207, 54.8907, -33.4905, 1.18 ) }
    dend_40 { pt3dadd( -26.4123, 56.8697, -34.472, 0.15 ) }
    dend_40 { pt3dadd( -26.5467, 57.4065, -34.7526, 0.88 ) }
    dend_40 { pt3dadd( -26.6502, 57.773, -34.9487, 0.88 ) }
    dend_40 { pt3dadd( -27.0805, 59.2895, -35.7378, 0.22 ) }
    dend_40 { pt3dadd( -27.514, 60.8028, -36.4672, 1.18 ) }
    dend_40 { pt3dadd( -27.6392, 61.2437, -36.664, 1.77 ) }
    dend_40 { pt3dadd( -27.8152, 61.8645, -36.9238, 1.4 ) }
    dend_40 { pt3dadd( -28.365, 63.7731, -37.7524, 0.15 ) }
    dend_40 { pt3dadd( -28.5576, 64.4393, -38.0452, 0.15 ) }
    dend_40 { pt3dadd( -28.9567, 65.8738, -38.6665, 1.69 ) }
    dend_40 { pt3dadd( -29.1382, 66.5356, -38.9423, 1.77 ) }
    dend_40 { pt3dadd( -29.6794, 68.4966, -39.7807, 0.15 ) }
    dend_40 { pt3dadd( -29.7531, 68.7602, -39.8972, 0.29 ) }
    dend_40 { pt3dadd( -29.8362, 69.0577, -40.0434, 0.15 ) }
    dend_40 { pt3dadd( -29.9038, 69.2717, -40.154, 0.29 ) }
    dend_40 { pt3dadd( -30.1067, 69.8104, -40.4143, 0.22 ) }
    dend_40 { pt3dadd( -30.4976, 70.75, -40.7951, 1.25 ) }
    dend_40 { pt3dadd( -30.7542, 71.3555, -40.9935, 1.4 ) }
    dend_40 { pt3dadd( -31.318, 72.7607, -41.5739, 0.15 ) }
    dend_40 { pt3dadd( -31.6281, 73.5583, -41.941, 0.44 ) }
    dend_40 { pt3dadd( -32.0864, 74.7635, -42.5346, 0.22 ) }
    dend_40 { pt3dadd( -32.4459, 75.7454, -43.0344, 1.03 ) }
    dend_40 { pt3dadd( -32.7164, 76.4965, -43.4734, 1.4 ) }
    dend_40 { pt3dadd( -33.6112, 78.9792, -45.0834, 0.22 ) }
    dend_40 { pt3dadd( -33.8973, 79.7662, -45.64, 0.22 ) }
    dend_40 { pt3dadd( -34.0785, 80.2651, -46.0262, 0.81 ) }
    dend_40 { pt3dadd( -34.1656, 80.5066, -46.2285, 0.96 ) }
    dend_40 { pt3dadd( -34.8326, 82.0786, -47.6174, 0.15 ) }
    dend_40 { pt3dadd( -35.1976, 82.7947, -48.2509, 0.15 ) }
    dend_40 { pt3dadd( -35.7372, 83.7077, -48.9864, 1.33 ) }
    dend_40 { pt3dadd( -35.8688, 83.9103, -49.1624, 1.69 ) }
    dend_40 { pt3dadd( -35.907, 83.9624, -49.207, 1.69 ) }
    dend_40 { pt3dadd( -37.3158, 85.7082, -50.6221, 0.15 ) }
    dend_40 { pt3dadd( -37.9028, 86.3859, -51.1302, 0.74 ) }
    dend_40 { pt3dadd( -38.1093, 86.6066, -51.3033, 0.96 ) }
    dend_40 { pt3dadd( -39.1922, 87.6726, -52.1356, 0.15 ) }
    dend_40 { pt3dadd( -40.1631, 88.5958, -52.8351, 0.15 ) }
    dend_40 { pt3dadd( -40.7031, 89.0901, -53.1914, 1.03 ) }
    dend_40 { pt3dadd( -41.104, 89.4422, -53.4191, 1.4 ) }
    dend_40 { pt3dadd( -42.4082, 90.5864, -54.1472, 0.15 ) }
    dend_40 { pt3dadd( -43.2434, 91.329, -54.6026, 0.15 ) }
    dend_40 { pt3dadd( -43.345, 91.4198, -54.6534, 0.15 ) }
    dend_40 { pt3dadd( -44.3635, 92.32, -55.1718, 1.55 ) }
    dend_40 { pt3dadd( -44.7827, 92.6815, -55.373, 2.28 ) }
    dend_40 { pt3dadd( -46.5902, 94.2098, -56.159, 0.22 ) }
    dend_40 { pt3dadd( -47.1523, 94.6734, -56.3766, 0.59 ) }
    dend_40 { pt3dadd( -47.8199, 95.209, -56.6077, 0.15 ) }
    dend_40 { pt3dadd( -48.2651, 95.5423, -56.7303, 0.15 ) }
    dend_40 { pt3dadd( -48.6975, 95.84, -56.8103, 0.52 ) }
    dend_40 { pt3dadd( -48.7903, 95.8986, -56.8213, 0.52 ) }
    dend_40 { pt3dadd( -49.731, 96.4383, -56.8445, 0.15 ) }
    dend_40 { pt3dadd( -50.3433, 96.7763, -56.8552, 0.52 ) }
    dend_40 { pt3dadd( -51.2584, 97.2691, -56.8653, 0.22 ) }
    dend_40 { pt3dadd( -52.231, 97.8106, -56.883, 1.03 ) }
    dend_40 { pt3dadd( -52.7701, 98.1108, -56.8908, 1.55 ) }
    dend_40 { pt3dadd( -54.1811, 98.9068, -56.9009, 0.15 ) }
    dend_40 { pt3dadd( -54.7786, 99.2512, -56.8924, 1.18 ) }
    dend_40 { pt3dadd( -55.2138, 99.5102, -56.8814, 1.4 ) }
    dend_40 { pt3dadd( -56.4877, 100.233, -56.9268, 0.15 ) }
    dend_40 { pt3dadd( -57.2431, 100.628, -56.9873, 0.15 ) }
    dend_40 { pt3dadd( -57.3024, 100.658, -56.9936, 0.15 ) }
    dend_40 { pt3dadd( -57.7465, 100.858, -57.0351, 0.81 ) }
    dend_40 { pt3dadd( -58.4206, 101.14, -57.0849, 0.81 ) }
    dend_40 { pt3dadd( -60.2646, 101.821, -57.0499, 0.15 ) }
    dend_40 { pt3dadd( -61.653, 102.273, -56.9347, 0.15 ) }
    dend_40 { pt3dadd( -61.8521, 102.337, -56.9078, 0.15 ) }
    dend_40 { pt3dadd( -63.3688, 102.866, -56.5309, 1.55 ) }
    dend_40 { pt3dadd( -63.8012, 103.026, -56.3771, 1.84 ) }
    dend_40 { pt3dadd( -65.5725, 103.753, -55.3997, 0.22 ) }
    dend_40 { pt3dadd( -65.6284, 103.78, -55.3536, 0.22 ) }
    dend_40 { pt3dadd( -66.2291, 104.097, -54.757, 0.96 ) }
    dend_40 { pt3dadd( -67.3888, 104.804, -53.4579, 0.15 ) }
    dend_40 { pt3dadd( -67.4233, 104.831, -53.4079, 0.15 ) }
    dend_40 { pt3dadd( -68.3381, 105.691, -51.8429, 0.52 ) }
    dend_40 { pt3dadd( -68.9775, 106.449, -50.5302, 0.22 ) }
    dend_40 { pt3dadd( -69.0014, 106.482, -50.4773, 0.22 ) }
    dend_40 { pt3dadd( -69.3284, 107.052, -49.7198, 1.25 ) }
    dend_40 { pt3dadd( -70.0785, 108.659, -48.0955, 0.15 ) }
    dend_40 { pt3dadd( -70.1001, 108.71, -48.0568, 0.15 ) }
    dend_40 { pt3dadd( -70.3335, 109.355, -47.7424, 0.88 ) }
    dend_40 { pt3dadd( -70.6358, 110.102, -47.5144, 1.11 ) }
    dend_40 { pt3dadd( -71.3207, 111.586, -47.2009, 0.15 ) }
    dend_40 { pt3dadd( -71.7351, 112.342, -47.1198, 0.15 ) }
    dend_40 { pt3dadd( -72.2565, 113.133, -47.1098, 0.81 ) }
    dend_40 { pt3dadd( -72.4263, 113.335, -47.0967, 0.81 ) }
    dend_40 { pt3dadd( -73.2838, 114.159, -46.9926, 0.15 ) }
    dend_40 { pt3dadd( -73.7805, 114.55, -46.895, 0.74 ) }
    dend_40 { pt3dadd( -74.534, 115.035, -46.6988, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_40 { pt3dadd( -75.0239, 115.325, -46.6087, 0.44 ) }
    dend_40 { pt3dadd( -76.4943, 116.118, -46.457, 0.22 ) }
    dend_40 { pt3dadd( -76.5534, 116.149, -46.4547, 0.22 ) }
    dend_40 { pt3dadd( -77.0587, 116.409, -46.4854, 1.03 ) }
    dend_40 { pt3dadd( -77.7418, 116.775, -46.5778, 1.4 ) }
    dend_40 { pt3dadd( -79.331, 117.726, -47.01, 0.22 ) }
    dend_40 { pt3dadd( -80.4013, 118.437, -47.4316, 0.22 ) }
    dend_40 { pt3dadd( -81.0921, 118.95, -47.8101, 0.22 ) }
    dend_40 { pt3dadd( -81.7089, 119.444, -48.1903, 0.74 ) }
    dend_40 { pt3dadd( -82.1753, 119.841, -48.5001, 0.96 ) }
    dend_40 { pt3dadd( -83.0216, 120.62, -49.0904, 0.96 ) }
    dend_40 { pt3dadd( -83.0635, 120.664, -49.1197, 0.96 ) }
    dend_40 { pt3dadd( -84.0847, 121.875, -49.909, 0.15 ) }
    dend_40 { pt3dadd( -84.2892, 122.127, -50.1651, 0.37 ) }
    dend_40 { pt3dadd( -84.602, 122.514, -50.639, 0.15 ) }
    dend_40 { pt3dadd( -84.6691, 122.586, -50.7294, 0.15 ) }
    dend_40 { pt3dadd( -85.27, 123.182, -51.4157, 1.33 ) }
    dend_40 { pt3dadd( -85.645, 123.543, -51.8722, 1.62 ) }
    dend_40 { pt3dadd( -87.9703, 125.673, -54.694, 0.22 ) }
    dend_40 { pt3dadd( -88.0077, 125.705, -54.7391, 0.22 ) }
    dend_40 { pt3dadd( -89.6027, 127.006, -56.6207, 0.22 ) }
    dend_40 { pt3dadd( -90.3433, 127.589, -57.4668, 1.4 ) }
    dend_40 { pt3dadd( -92.7482, 129.41, -60.1164, 0.22 ) }
    dend_40 { pt3dadd( -93.2877, 129.81, -60.6873, 1.03 ) }
    dend_40 { pt3dadd( -95.3589, 131.305, -62.6237, 0.15 ) }
    dend_40 { pt3dadd( -95.7939, 131.619, -63.0608, 0.88 ) }
    dend_40 { pt3dadd( -96.1032, 131.844, -63.4354, 0.88 ) }
    dend_40 { pt3dadd( -96.1863, 131.9, -63.539, 0.88 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -12.751, -9.09375, -2.92132, 0.59 ) }
    dend_39 { pt3dadd( -12.751, -9.09375, -2.92132, 0.59 ) }
    dend_39 { pt3dadd( -12.6336, -9.74515, -2.82197, 0.59 ) }
    dend_39 { pt3dadd( -12.4949, -10.439, -2.708, 0.81 ) }
    dend_39 { pt3dadd( -12.3686, -10.9889, -2.61822, 0.81 ) }
    dend_39 { pt3dadd( -12.216, -11.5697, -2.52729, 0.81 ) }
    dend_39 { pt3dadd( -11.9637, -12.3672, -2.41113, 0.74 ) }
    dend_39 { pt3dadd( -11.7277, -12.9691, -2.33054, 0.44 ) }
    dend_39 { pt3dadd( -11.6694, -13.0921, -2.31457, 0.44 ) }
    dend_39 { pt3dadd( -11.3809, -13.6457, -2.27838, 1.11 ) }
    dend_39 { pt3dadd( -11.109, -14.1446, -2.27212, 1.4 ) }
    dend_39 { pt3dadd( -10.6834, -14.8782, -2.34606, 0.88 ) }
    dend_39 { pt3dadd( -10.1414, -15.7693, -2.53589, 0.59 ) }
    dend_39 { pt3dadd( -9.80188, -16.3175, -2.68117, 0.52 ) }
    dend_39 { pt3dadd( -9.17035, -17.2993, -3.0189, 1.47 ) }
    dend_39 { pt3dadd( -8.94593, -17.6314, -3.15415, 2.14 ) }
    dend_39 { pt3dadd( -8.27799, -18.5701, -3.60386, 2.5 ) }
    dend_39 { pt3dadd( -7.82909, -19.1734, -3.91695, 1.92 ) }
    dend_39 { pt3dadd( -7.39536, -19.7562, -4.21724, 1.47 ) }
    dend_39 { pt3dadd( -6.72397, -20.6827, -4.62877, 1.11 ) }
    dend_39 { pt3dadd( -6.3515, -21.2166, -4.81842, 1.25 ) }
    dend_39 { pt3dadd( -5.85542, -21.9748, -5.02749, 1.03 ) }
    dend_39 { pt3dadd( -5.35766, -22.8156, -5.16747, 0.37 ) }
    dend_39 { pt3dadd( -4.89487, -23.6583, -5.27914, 0.37 ) }
    dend_39 { pt3dadd( -4.50656, -24.3781, -5.36657, 0.22 ) }
    dend_39 { pt3dadd( -4.20551, -24.953, -5.41841, 1.25 ) }
    dend_39 { pt3dadd( -3.98009, -25.3794, -5.46481, 2.06 ) }
    dend_39 { pt3dadd( -3.67687, -25.9547, -5.54357, 2.65 ) }
    dend_39 { pt3dadd( -3.11469, -26.9956, -5.73545, 1.62 ) }
    dend_39 { pt3dadd( -2.61665, -27.8769, -5.93489, 0.74 ) }
    dend_39 { pt3dadd( -2.32123, -28.4078, -6.07441, 0.81 ) }
    dend_39 { pt3dadd( -1.95796, -29.1203, -6.25347, 0.81 ) }
    dend_39 { pt3dadd( -1.6271, -29.9144, -6.46545, 0.44 ) }
    dend_39 { pt3dadd( -1.42304, -30.6007, -6.64726, 0.29 ) }
    dend_39 { pt3dadd( -1.40221, -30.7354, -6.68494, 0.29 ) }
    dend_39 { pt3dadd( -1.4011, -31.0126, -6.79584, 0.22 ) }
    dend_39 { pt3dadd( -1.43118, -31.4817, -7.01984, 0.22 ) }
    dend_39 { pt3dadd( -1.5218, -32.4301, -7.50822, 1.55 ) }
    dend_39 { pt3dadd( -1.55389, -32.8534, -7.73715, 2.36 ) }
    dend_39 { pt3dadd( -1.58951, -33.5583, -8.10937, 2.65 ) }
    dend_39 { pt3dadd( -1.61576, -35.1675, -8.92758, 0.22 ) }
    dend_39 { pt3dadd( -1.61203, -35.4958, -9.08493, 0.44 ) }
    dend_39 { pt3dadd( -1.59653, -35.849, -9.23791, 0.44 ) }
    dend_39 { pt3dadd( -1.57063, -36.4657, -9.46737, 0.22 ) }
    dend_39 { pt3dadd( -1.53755, -37.2787, -9.71651, 0.22 ) }
    dend_39 { pt3dadd( -1.5211, -37.9258, -9.84248, 0.22 ) }
    dend_39 { pt3dadd( -1.5062, -38.5338, -9.91354, 1.62 ) }
    dend_39 { pt3dadd( -1.49754, -39.3774, -10.0022, 2.65 ) }
    dend_39 { pt3dadd( -1.49728, -39.6802, -10.0293, 2.95 ) }
    dend_39 { pt3dadd( -1.49199, -40.2887, -10.0702, 2.95 ) }
    dend_39 { pt3dadd( -1.43986, -41.891, -10.161, 0.66 ) }
    dend_39 { pt3dadd( -1.40361, -42.7594, -10.1961, 0.22 ) }
    dend_39 { pt3dadd( -1.38994, -43.1311, -10.2111, 0.74 ) }
    dend_39 { pt3dadd( -1.37728, -43.5747, -10.2278, 0.74 ) }
    dend_39 { pt3dadd( -1.34808, -44.2541, -10.232, 0.22 ) }
    dend_39 { pt3dadd( -1.33243, -44.5617, -10.2224, 0.52 ) }
    dend_39 { pt3dadd( -1.31354, -44.82, -10.2013, 0.52 ) }
    dend_39 { pt3dadd( -1.25551, -45.5667, -10.0908, 0.15 ) }
    dend_39 { pt3dadd( -1.21428, -46.0401, -9.98485, 0.15 ) }
    dend_39 { pt3dadd( -1.13673, -46.7592, -9.80186, 1.25 ) }
    dend_39 { pt3dadd( -1.07366, -47.2844, -9.66931, 2.06 ) }
    dend_39 { pt3dadd( -1.01505, -47.7383, -9.56128, 2.28 ) }
    dend_39 { pt3dadd( -0.867975, -48.7679, -9.33379, 1.77 ) }
    dend_39 { pt3dadd( -0.657063, -50.1626, -9.04969, 0.29 ) }
    dend_39 { pt3dadd( -0.50847, -51.1589, -8.87191, 0.29 ) }
    dend_39 { pt3dadd( -0.367252, -52.0582, -8.75866, 0.29 ) }
    dend_39 { pt3dadd( -0.236458, -52.8391, -8.69123, 1.33 ) }
    dend_39 { pt3dadd( -0.119607, -53.5157, -8.66025, 1.99 ) }
    dend_39 { pt3dadd( 0.022948, -54.2389, -8.66703, 2.8 ) }
    dend_39 { pt3dadd( 0.16391, -54.8514, -8.69682, 2.8 ) }
    dend_39 { pt3dadd( 0.468105, -56.0126, -8.74964, 1.03 ) }
    dend_39 { pt3dadd( 0.765904, -56.9883, -8.78698, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_39 { pt3dadd( 0.787018, -57.0513, -8.78897, 0.44 ) }
    dend_39 { pt3dadd( 1.0119, -57.7053, -8.80299, 0.37 ) }
    dend_39 { pt3dadd( 1.21263, -58.3351, -8.79706, 0.29 ) }
    dend_39 { pt3dadd( 1.37174, -58.8922, -8.7738, 1.25 ) }
    dend_39 { pt3dadd( 1.4812, -59.3405, -8.7406, 1.62 ) }
    dend_39 { pt3dadd( 1.72815, -60.4375, -8.65066, 0.29 ) }
    dend_39 { pt3dadd( 1.90497, -61.3023, -8.59916, 0.29 ) }
    dend_39 { pt3dadd( 2.07688, -62.2194, -8.55991, 0.22 ) }
    dend_39 { pt3dadd( 2.21186, -62.8841, -8.53653, 0.81 ) }
    dend_39 { pt3dadd( 2.31085, -63.2974, -8.53004, 1.4 ) }
    dend_39 { pt3dadd( 2.48661, -63.9359, -8.52976, 0.74 ) }
    dend_39 { pt3dadd( 2.8181, -65.0046, -8.5482, 0.15 ) }
    dend_39 { pt3dadd( 3.07839, -65.8126, -8.57298, 0.15 ) }
    dend_39 { pt3dadd( 3.28574, -66.4869, -8.60319, 1.03 ) }
    dend_39 { pt3dadd( 3.44972, -67.1126, -8.62687, 1.99 ) }
    dend_39 { pt3dadd( 3.57647, -67.7207, -8.64366, 1.92 ) }
    dend_39 { pt3dadd( 3.69277, -68.5668, -8.65243, 0.88 ) }
    dend_39 { pt3dadd( 3.75601, -69.4205, -8.64125, 0.15 ) }
    dend_39 { pt3dadd( 3.75745, -70.0355, -8.63407, 0.15 ) }
    dend_39 { pt3dadd( 3.72344, -70.6444, -8.62793, 0.15 ) }
    dend_39 { pt3dadd( 3.70528, -71.1941, -8.58778, 1.11 ) }
    dend_39 { pt3dadd( 3.72057, -71.7447, -8.52613, 1.84 ) }
    dend_39 { pt3dadd( 3.74312, -71.9901, -8.49112, 2.14 ) }
    dend_39 { pt3dadd( 3.75435, -72.0467, -8.48258, 2.14 ) }
    dend_39 { pt3dadd( 3.8943, -72.5287, -8.39551, 2.14 ) }
    dend_39 { pt3dadd( 4.45167, -74.1735, -8.06904, 0.15 ) }
    dend_39 { pt3dadd( 4.65995, -74.7507, -7.95174, 0.74 ) }
    dend_39 { pt3dadd( 4.76428, -75.0247, -7.8957, 0.74 ) }
    dend_39 { pt3dadd( 5.15743, -76.063, -7.66599, 0.22 ) }
    dend_39 { pt3dadd( 5.47829, -76.9536, -7.45293, 1.18 ) }
    dend_39 { pt3dadd( 5.58681, -77.3005, -7.35058, 1.69 ) }
    dend_39 { pt3dadd( 5.71428, -77.8067, -7.18537, 1.69 ) }
    dend_39 { pt3dadd( 5.73647, -77.9142, -7.14737, 1.69 ) }
    dend_39 { pt3dadd( 5.95805, -79.2467, -6.67499, 0.15 ) }
    dend_39 { pt3dadd( 6.07113, -80.1668, -6.34458, 0.74 ) }
    dend_39 { pt3dadd( 6.19523, -81.4283, -5.92105, 0.15 ) }
    dend_39 { pt3dadd( 6.26238, -82.1672, -5.67749, 0.74 ) }
    dend_39 { pt3dadd( 6.30347, -82.6243, -5.52924, 0.74 ) }
    dend_39 { pt3dadd( 6.3829, -83.5812, -5.23582, 0.44 ) }
    dend_39 { pt3dadd( 6.38807, -83.6453, -5.21843, 0.44 ) }
    dend_39 { pt3dadd( 6.53887, -84.5994, -5.01423, 0.88 ) }
    dend_39 { pt3dadd( 6.68572, -85.1015, -4.93992, 1.92 ) }
    dend_39 { pt3dadd( 6.9034, -85.6193, -4.86898, 2.43 ) }
    dend_39 { pt3dadd( 6.93032, -85.6701, -4.86248, 2.43 ) }
    dend_39 { pt3dadd( 7.06165, -85.8765, -4.84017, 2.43 ) }
    dend_39 { pt3dadd( 7.859, -87.0025, -4.747, 0.22 ) }
    dend_39 { pt3dadd( 8.33376, -87.6067, -4.71087, 0.22 ) }
    dend_39 { pt3dadd( 8.6114, -87.9848, -4.69564, 0.66 ) }
    dend_39 { pt3dadd( 8.64819, -88.0393, -4.69382, 0.66 ) }
    dend_39 { pt3dadd( 8.87697, -88.4359, -4.67455, 0.74 ) }
    dend_39 { pt3dadd( 8.9054, -88.4955, -4.67054, 0.74 ) }
    dend_39 { pt3dadd( 9.17567, -89.2839, -4.59893, 0.22 ) }
    dend_39 { pt3dadd( 9.38145, -89.9261, -4.54335, 0.22 ) }
    dend_39 { pt3dadd( 9.40066, -89.9807, -4.53758, 0.22 ) }
    dend_39 { pt3dadd( 9.71232, -90.7294, -4.45087, 1.11 ) }
    dend_39 { pt3dadd( 9.73481, -90.7825, -4.44446, 1.11 ) }
    dend_39 { pt3dadd( 9.97335, -91.3328, -4.37779, 1.77 ) }
    dend_39 { pt3dadd( 10.1003, -91.6364, -4.34276, 1.77 ) }
    dend_39 { pt3dadd( 10.4535, -92.5377, -4.23549, 0.29 ) }
    dend_39 { pt3dadd( 10.6884, -93.2397, -4.15445, 0.29 ) }
    dend_39 { pt3dadd( 10.8832, -93.9672, -4.08047, 0.22 ) }
    dend_39 { pt3dadd( 10.898, -94.0318, -4.07374, 0.22 ) }
    dend_39 { pt3dadd( 11.0058, -94.5989, -4.01624, 0.22 ) }
    dend_39 { pt3dadd( 11.058, -94.8991, -3.9889, 0.88 ) }
    dend_39 { pt3dadd( 11.1127, -95.2071, -3.94721, 0.88 ) }
    dend_39 { pt3dadd( 11.3272, -96.3195, -3.74419, 0.15 ) }
    dend_39 { pt3dadd( 11.4464, -96.8778, -3.62077, 1.03 ) }
    dend_39 { pt3dadd( 11.5551, -97.3682, -3.50334, 1.4 ) }
    dend_39 { pt3dadd( 11.6719, -97.902, -3.36866, 1.4 ) }
    dend_39 { pt3dadd( 11.9385, -99.2492, -3.02235, 0.29 ) }
    dend_39 { pt3dadd( 11.9454, -99.2974, -3.01091, 0.29 ) }
    dend_39 { pt3dadd( 12.0271, -100.206, -2.81822, 0.29 ) }
    dend_39 { pt3dadd( 12.0575, -100.726, -2.72725, 1.03 ) }
    dend_39 { pt3dadd( 12.0799, -101.274, -2.64662, 1.4 ) }
    dend_39 { pt3dadd( 12.091, -101.573, -2.6126, 1.47 ) }
    dend_39 { pt3dadd( 12.1352, -102.719, -2.52923, 0.22 ) }
    dend_39 { pt3dadd( 12.1544, -103.216, -2.4778, 0.29 ) }
    dend_39 { pt3dadd( 12.1575, -103.274, -2.4684, 0.29 ) }
    dend_39 { pt3dadd( 12.1682, -103.471, -2.42314, 0.29 ) }
    dend_39 { pt3dadd( 12.2157, -104.024, -2.26343, 0.22 ) }
    dend_39 { pt3dadd( 12.2647, -104.443, -2.12392, 0.52 ) }
    dend_39 { pt3dadd( 12.3332, -104.849, -1.97945, 0.52 ) }
    dend_39 { pt3dadd( 12.4909, -105.761, -1.69725, 0.22 ) }
    dend_39 { pt3dadd( 12.5016, -105.824, -1.68131, 0.22 ) }
    dend_39 { pt3dadd( 12.578, -106.311, -1.58576, 1.25 ) }
    dend_39 { pt3dadd( 12.6466, -106.755, -1.51978, 2.14 ) }
    dend_39 { pt3dadd( 12.7809, -107.635, -1.42231, 2.14 ) }
    dend_39 { pt3dadd( 12.9481, -108.692, -1.33084, 0.44 ) }
    dend_39 { pt3dadd( 13.0654, -109.603, -1.26903, 0.37 ) }
    dend_39 { pt3dadd( 13.1497, -110.393, -1.22063, 0.22 ) }
    dend_39 { pt3dadd( 13.1815, -110.817, -1.19879, 0.22 ) }
    dend_39 { pt3dadd( 13.2161, -111.492, -1.17039, 0.81 ) }
    dend_39 { pt3dadd( 13.2314, -111.936, -1.1569, 1.11 ) }
    dend_39 { pt3dadd( 13.2773, -113.169, -1.131, 0.22 ) }
    dend_39 { pt3dadd( 13.2811, -113.236, -1.1295, 0.22 ) }
    dend_39 { pt3dadd( 13.3941, -114.08, -1.11064, 0.22 ) }
    dend_39 { pt3dadd( 13.4213, -114.202, -1.10808, 0.22 ) }
    dend_39 { pt3dadd( 13.559, -114.675, -1.09922, 1.11 ) }
    dend_39 { pt3dadd( 13.7101, -115.119, -1.09217, 1.18 ) }
    dend_39 { pt3dadd( 13.7297, -115.174, -1.09148, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( 14.138, -116.501, -1.05298, 0.22 ) }
    dend_39 { pt3dadd( 14.3295, -117.209, -1.02555, 0.22 ) }
    dend_39 { pt3dadd( 14.4858, -117.867, -0.99618, 1.25 ) }
    dend_39 { pt3dadd( 14.6536, -118.68, -0.955638, 1.62 ) }
    dend_39 { pt3dadd( 14.8995, -120.002, -0.884263, 0.22 ) }
    dend_39 { pt3dadd( 15.0561, -120.971, -0.810856, 0.22 ) }
    dend_39 { pt3dadd( 15.1058, -121.395, -0.767766, 0.44 ) }
    dend_39 { pt3dadd( 15.1124, -121.453, -0.760941, 0.44 ) }
    dend_39 { pt3dadd( 15.1263, -121.576, -0.74551, 0.44 ) }
    dend_39 { pt3dadd( 15.2035, -122.302, -0.655591, 0.15 ) }
    dend_39 { pt3dadd( 15.279, -122.942, -0.582934, 0.88 ) }
    dend_39 { pt3dadd( 15.3269, -123.309, -0.547891, 1.18 ) }
    dend_39 { pt3dadd( 15.4892, -124.488, -0.39898, 0.22 ) }
    dend_39 { pt3dadd( 15.6321, -125.437, -0.25994, 0.88 ) }
    dend_39 { pt3dadd( 15.7203, -125.974, -0.176899, 1.25 ) }
    dend_39 { pt3dadd( 15.8028, -126.466, -0.100047, 1.47 ) }
    dend_39 { pt3dadd( 15.8118, -126.523, -0.0916757, 1.47 ) }
    dend_39 { pt3dadd( 16.0543, -128.104, 0.152292, 0.22 ) }
    dend_39 { pt3dadd( 16.2041, -129.114, 0.315588, 0.15 ) }
    dend_39 { pt3dadd( 16.3052, -129.798, 0.424564, 1.18 ) }
    dend_39 { pt3dadd( 16.3853, -130.329, 0.501147, 1.62 ) }
    dend_39 { pt3dadd( 16.5943, -131.662, 0.668441, 0.22 ) }
    dend_39 { pt3dadd( 16.7466, -132.579, 0.762729, 0.22 ) }
    dend_39 { pt3dadd( 16.88, -133.444, 0.8275, 1.03 ) }
    dend_39 { pt3dadd( 16.9439, -133.863, 0.859065, 1.25 ) }
    dend_39 { pt3dadd( 17.1259, -135.029, 0.951057, 0.15 ) }
    dend_39 { pt3dadd( 17.2311, -135.645, 1.00449, 0.59 ) }
    dend_39 { pt3dadd( 17.2796, -135.905, 1.0281, 0.59 ) }
    dend_39 { pt3dadd( 17.4195, -136.802, 1.11039, 0.22 ) }
    dend_39 { pt3dadd( 17.4267, -136.859, 1.11811, 0.22 ) }
    dend_39 { pt3dadd( 17.4821, -137.399, 1.20969, 0.22 ) }
    dend_39 { pt3dadd( 17.5054, -137.743, 1.27904, 1.03 ) }
    dend_39 { pt3dadd( 17.5471, -138.141, 1.42041, 1.18 ) }
    dend_39 { pt3dadd( 17.6199, -138.757, 1.65661, 0.29 ) }
    dend_39 { pt3dadd( 17.7872, -139.792, 2.09648, 0.22 ) }
    dend_39 { pt3dadd( 17.8563, -140.185, 2.2779, 0.59 ) }
    dend_39 { pt3dadd( 17.8679, -140.242, 2.30857, 0.59 ) }
    dend_39 { pt3dadd( 18.2339, -141.826, 3.2728, 0.22 ) }
    dend_39 { pt3dadd( 19.5657, -149.87, 4.97287, 0.22 ) }
    dend_39 { pt3dadd( 22.2109, -157.508, 6.8264, 0.22 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 40/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -8.74104, 2.60324, 1.32868, 1.25 ) }
    dend_32 { pt3dadd( -8.74104, 2.60324, 1.32868, 1.25 ) }
    dend_32 { pt3dadd( -8.80537, 3.18202, 1.32432, 0.96 ) }
    dend_32 { pt3dadd( -8.81343, 3.26605, 1.32347, 0.96 ) }
    dend_32 { pt3dadd( -8.86235, 3.9028, 1.31665, 0.96 ) }
    dend_32 { pt3dadd( -8.89588, 4.91255, 1.26376, 1.25 ) }
    dend_32 { pt3dadd( -8.89545, 5.55685, 1.21873, 1.84 ) }
    dend_32 { pt3dadd( -8.86603, 6.13472, 1.15966, 2.5 ) }
    dend_32 { pt3dadd( -8.81842, 6.58895, 1.10274, 2.95 ) }
    dend_32 { pt3dadd( -8.72706, 7.16511, 1.01422, 2.43 ) }
    dend_32 { pt3dadd( -8.43569, 8.44934, 0.766603, 1.03 ) }
    dend_32 { pt3dadd( -8.27197, 9.01693, 0.638246, 1.03 ) }
    dend_32 { pt3dadd( -7.93929, 10.0288, 0.387238, 1.03 ) }
    dend_32 { pt3dadd( -7.80357, 10.4056, 0.28929, 1.69 ) }
    dend_32 { pt3dadd( -7.52221, 11.131, 0.0901808, 2.43 ) }
    dend_32 { pt3dadd( -7.20269, 11.8892, -0.127842, 2.73 ) }
    dend_32 { pt3dadd( -7.18013, 11.9374, -0.141512, 2.73 ) }
    dend_32 { pt3dadd( -7.09127, 12.118, -0.197623, 3.02 ) }
    dend_32 { pt3dadd( -6.91077, 12.4671, -0.306016, 2.87 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 59/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 11.199, 7.89525, 0.198678, 1.69 ) }
    dend_15 { pt3dadd( 11.7418, 8.00757, 0.164539, 1.69 ) }
    dend_15 { pt3dadd( 12.8363, 8.27939, 0.0816983, 1.55 ) }
    dend_15 { pt3dadd( 12.9002, 8.29581, 0.0811412, 1.55 ) }
    dend_15 { pt3dadd( 13.5608, 8.45228, 0.0936137, 1.55 ) }
    dend_15 { pt3dadd( 13.6645, 8.47684, 0.0955711, 1.55 ) }
    dend_15 { pt3dadd( 15.1759, 8.83484, 0.124107, 1.62 ) }
    dend_15 { pt3dadd( 15.8359, 8.99494, 0.140938, 2.28 ) }
    dend_15 { pt3dadd( 17.1151, 9.29666, 0.18649, 3.02 ) }
    dend_15 { pt3dadd( 18.1252, 9.52119, 0.231452, 3.39 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 69/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -14.531, -7.81276, -1.49132, 2.14 ) }
    dend_0 { pt3dadd( -14.531, -7.81276, -1.49132, 2.14 ) }
    dend_0 { pt3dadd( -15.7227, -9.20598, -0.976496, 1.92 ) }
    dend_0 { pt3dadd( -16.8785, -10.5572, -0.477174, 1.92 ) }
    dend_0 { pt3dadd( -18.0193, -11.8909, 0.0156517, 2.21 ) }
    dend_0 { pt3dadd( -18.9078, -12.9297, 0.399498, 2.73 ) }
    dend_0 { pt3dadd( -19.7769, -13.9457, 0.774955, 3.24 ) }
    dend_0 { pt3dadd( -20.1558, -14.3849, 0.948534, 3.46 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 77/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 11.9616, 6.48795, -0.0125933, 0.663188 ) }
    axon_0 { pt3dadd( 24.9623, 13.9701, -0.0125933, 0.663188 ) }
    axon_0 { pt3dadd( 37.9629, 21.4523, -0.0125933, 0.663188 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 80/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -13.9867, -20.7572, -20.8276, 0.59 ) }
    dend_49 { pt3dadd( -13.8992, -24.2034, -23.3257, 0.59 ) }
    dend_49 { pt3dadd( -13.8993, -24.8938, -23.8235, 0.59 ) }
    dend_49 { pt3dadd( -13.9355, -26.4112, -24.8806, 0.37 ) }
    dend_49 { pt3dadd( -13.9531, -27.5141, -25.6375, 0.37 ) }
    dend_49 { pt3dadd( -13.9345, -28.7431, -26.5266, 1.55 ) }
    dend_49 { pt3dadd( -13.9197, -29.0398, -26.7419, 1.84 ) }
    dend_49 { pt3dadd( -13.7074, -31.0687, -28.2221, 0.22 ) }
    dend_49 { pt3dadd( -13.4097, -32.4506, -29.3732, 1.77 ) }
    dend_49 { pt3dadd( -13.1176, -33.3492, -30.1868, 2.06 ) }
    dend_49 { pt3dadd( -12.1876, -35.4341, -32.2419, 0.22 ) }
    dend_49 { pt3dadd( -11.8573, -36.0449, -32.879, 0.22 ) }
    dend_49 { pt3dadd( -11.1841, -37.133, -34.1583, 1.92 ) }
    dend_49 { pt3dadd( -10.0862, -38.7003, -36.1448, 0.22 ) }
    dend_49 { pt3dadd( -10.0373, -38.7699, -36.2401, 0.22 ) }
    dend_49 { pt3dadd( -9.58843, -39.5007, -37.2885, 1.69 ) }
    dend_49 { pt3dadd( -9.09965, -40.5352, -38.8243, 1.62 ) }
    dend_49 { pt3dadd( -8.62439, -42.0545, -41.031, 0.52 ) }
    dend_49 { pt3dadd( -8.53259, -42.5746, -41.7409, 0.52 ) }
    dend_49 { pt3dadd( -8.40455, -43.6475, -43.2016, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_49 { pt3dadd( -8.30349, -44.6251, -44.5517, 1.4 ) }
    dend_49 { pt3dadd( -8.13422, -45.9577, -46.4625, 0.22 ) }
    dend_49 { pt3dadd( -8.02726, -46.6021, -47.3655, 1.77 ) }
    dend_49 { pt3dadd( -7.98186, -46.8188, -47.649, 2.06 ) }
    dend_49 { pt3dadd( -7.32115, -49.4834, -50.9959, 0.37 ) }
    dend_49 { pt3dadd( -6.97936, -50.612, -52.3331, 1.62 ) }
    dend_49 { pt3dadd( -6.03716, -53.3032, -55.3292, 0.22 ) }
    dend_49 { pt3dadd( -5.72719, -54.1047, -56.1743, 0.22 ) }
    dend_49 { pt3dadd( -5.29289, -55.1022, -57.2092, 1.62 ) }
    dend_49 { pt3dadd( -5.12145, -55.4705, -57.5642, 1.92 ) }
    dend_49 { pt3dadd( -3.84479, -58.124, -59.8199, 0.22 ) }
    dend_49 { pt3dadd( -3.48147, -58.8513, -60.4352, 1.18 ) }
    dend_49 { pt3dadd( -3.3143, -59.1951, -60.7148, 1.4 ) }
    dend_49 { pt3dadd( -2.27061, -61.4739, -62.6718, 0.22 ) }
    dend_49 { pt3dadd( -2.01342, -62.1286, -63.2205, 0.88 ) }
    dend_49 { pt3dadd( -1.61059, -63.4172, -64.2269, 0.22 ) }
    dend_49 { pt3dadd( -1.35631, -64.6646, -65.0644, 1.62 ) }
    dend_49 { pt3dadd( -1.25423, -65.5077, -65.6102, 2.43 ) }
    dend_49 { pt3dadd( -1.15047, -68.2274, -67.2395, 0.22 ) }
    dend_49 { pt3dadd( -1.25365, -69.7319, -68.008, 0.22 ) }
    dend_49 { pt3dadd( -1.38828, -70.6003, -68.4142, 0.81 ) }
    dend_49 { pt3dadd( -1.7044, -71.941, -68.9305, 0.22 ) }
    dend_49 { pt3dadd( -1.94691, -72.6685, -69.1624, 0.96 ) }
    dend_49 { pt3dadd( -2.18213, -73.1766, -69.3125, 0.96 ) }
    dend_49 { pt3dadd( -2.8386, -74.1804, -69.538, 0.22 ) }
    dend_49 { pt3dadd( -3.67547, -75.3044, -69.8068, 0.22 ) }
    dend_49 { pt3dadd( -4.13058, -75.8941, -69.9536, 1.03 ) }
    dend_49 { pt3dadd( -4.52062, -76.383, -70.0881, 1.03 ) }
    dend_49 { pt3dadd( -5.37142, -77.4514, -70.373, 0.15 ) }
    dend_49 { pt3dadd( -6.08895, -78.3469, -70.6325, 0.15 ) }
    dend_49 { pt3dadd( -6.43428, -78.7748, -70.7642, 0.44 ) }
    dend_49 { pt3dadd( -6.73249, -79.2041, -70.8963, 0.59 ) }
    dend_49 { pt3dadd( -7.56915, -80.5354, -71.2754, 0.15 ) }
    dend_49 { pt3dadd( -7.937, -81.2106, -71.4384, 1.03 ) }
    dend_49 { pt3dadd( -7.97316, -81.2878, -71.453, 1.03 ) }
    dend_49 { pt3dadd( -8.13679, -81.6968, -71.5199, 1.03 ) }
    dend_49 { pt3dadd( -8.72175, -83.3538, -71.7485, 0.15 ) }
    dend_49 { pt3dadd( -8.96184, -84.1286, -71.8372, 1.18 ) }
    dend_49 { pt3dadd( -9.15153, -84.8446, -71.9124, 1.62 ) }
    dend_49 { pt3dadd( -9.1948, -85.0247, -71.9339, 1.62 ) }
    dend_49 { pt3dadd( -9.30296, -85.4638, -71.9901, 1.25 ) }
    dend_49 { pt3dadd( -9.78031, -87.3868, -72.2793, 0.15 ) }
    dend_49 { pt3dadd( -9.97094, -88.1783, -72.409, 0.15 ) }
    dend_49 { pt3dadd( -10.1353, -88.9209, -72.5417, 0.96 ) }
    dend_49 { pt3dadd( -10.2677, -89.5304, -72.6528, 0.96 ) }
    dend_49 { pt3dadd( -10.5691, -91.0172, -72.8721, 0.15 ) }
    dend_49 { pt3dadd( -10.7732, -92.1935, -72.9509, 1.03 ) }
    dend_49 { pt3dadd( -10.8562, -92.7353, -72.9567, 1.03 ) }
    dend_49 { pt3dadd( -11.3512, -96.2882, -72.7964, 0.15 ) }
    dend_49 { pt3dadd( -11.5026, -97.4992, -72.6834, 1.18 ) }
    dend_49 { pt3dadd( -11.6222, -98.8202, -72.468, 1.47 ) }
    dend_49 { pt3dadd( -11.7703, -101.943, -71.7618, 0.15 ) }
    dend_49 { pt3dadd( -11.7717, -102.027, -71.7386, 0.15 ) }
    dend_49 { pt3dadd( -11.7473, -103.266, -71.3519, 0.96 ) }
    dend_49 { pt3dadd( -11.7113, -103.779, -71.17, 1.4 ) }
    dend_49 { pt3dadd( -11.4085, -106.864, -70.1353, 0.15 ) }
    dend_49 { pt3dadd( -11.2873, -107.813, -69.872, 0.22 ) }
    dend_49 { pt3dadd( -11.2018, -108.338, -69.7483, 0.52 ) }
    dend_49 { pt3dadd( -10.9344, -109.868, -69.4356, 0.22 ) }
    dend_49 { pt3dadd( -10.7295, -110.857, -69.277, 1.33 ) }
    dend_49 { pt3dadd( -10.641, -111.25, -69.228, 1.33 ) }
    dend_49 { pt3dadd( -10.2348, -112.956, -69.1331, 0.15 ) }
    dend_49 { pt3dadd( -10.217, -113.042, -69.1287, 0.15 ) }
    dend_49 { pt3dadd( -10.0908, -113.756, -69.0907, 0.52 ) }
    dend_49 { pt3dadd( -9.97044, -114.653, -69.047, 0.22 ) }
    dend_49 { pt3dadd( -9.91184, -115.291, -69.0166, 1.03 ) }
    dend_49 { pt3dadd( -9.90614, -115.839, -68.9934, 1.03 ) }
    dend_49 { pt3dadd( -9.98834, -117.492, -68.9286, 0.22 ) }
    dend_49 { pt3dadd( -10.0881, -118.673, -68.8858, 0.15 ) }
    dend_49 { pt3dadd( -10.165, -119.308, -68.8647, 0.88 ) }
    dend_49 { pt3dadd( -10.2694, -120.035, -68.8427, 1.11 ) }
    dend_49 { pt3dadd( -10.6275, -122.44, -68.7755, 0.15 ) }
    dend_49 { pt3dadd( -10.6401, -122.527, -68.7733, 0.15 ) }
    dend_49 { pt3dadd( -10.7443, -123.351, -68.7622, 0.66 ) }
    dend_49 { pt3dadd( -10.8285, -124.169, -68.7572, 0.81 ) }
    dend_49 { pt3dadd( -10.9394, -125.635, -68.7512, 0.15 ) }
    dend_49 { pt3dadd( -10.9604, -126.394, -68.7496, 0.52 ) }
    dend_49 { pt3dadd( -10.9579, -126.686, -68.7489, 0.52 ) }
    dend_49 { pt3dadd( -10.9449, -127.924, -68.7449, 0.15 ) }
    dend_49 { pt3dadd( -10.9374, -128.738, -68.7204, 0.81 ) }
    dend_49 { pt3dadd( -10.9351, -129.472, -68.6823, 1.03 ) }
    dend_49 { pt3dadd( -10.9452, -131.579, -68.5328, 0.15 ) }
    dend_49 { pt3dadd( -10.9318, -133.226, -68.3675, 0.15 ) }
    dend_49 { pt3dadd( -10.9301, -133.312, -68.3571, 0.15 ) }
    dend_49 { pt3dadd( -10.8911, -134.672, -68.1668, 0.96 ) }
    dend_49 { pt3dadd( -10.8593, -135.391, -68.0597, 1.4 ) }
    dend_49 { pt3dadd( -10.8315, -135.747, -68.0074, 1.4 ) }
    dend_49 { pt3dadd( -10.5001, -138.522, -67.6177, 0.15 ) }
    dend_49 { pt3dadd( -10.3155, -139.475, -67.5157, 0.44 ) }
    dend_49 { pt3dadd( -10.1877, -140.002, -67.4552, 0.44 ) }
    dend_49 { pt3dadd( -10.1544, -140.12, -67.442, 0.44 ) }
    dend_49 { pt3dadd( -9.68214, -141.507, -67.2389, 0.15 ) }
    dend_49 { pt3dadd( -9.34815, -142.374, -67.0831, 1.18 ) }
    dend_49 { pt3dadd( -8.48543, -144.408, -66.7075, 0.15 ) }
    dend_49 { pt3dadd( -7.71845, -146.164, -66.3717, 0.74 ) }
    dend_49 { pt3dadd( -7.66528, -146.281, -66.3488, 0.74 ) }
    dend_49 { pt3dadd( -6.74463, -148.251, -65.99, 0.15 ) }
    dend_49 { pt3dadd( -6.64428, -148.459, -65.9546, 0.15 ) }
    dend_49 { pt3dadd( -6.13973, -149.574, -65.8929, 1.25 ) }
    dend_49 { pt3dadd( -6.10505, -149.665, -65.9037, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_49 { pt3dadd( -5.93302, -150.193, -66.0368, 1.25 ) }
    dend_49 { pt3dadd( -5.66363, -151.537, -66.5619, 0.15 ) }
    dend_49 { pt3dadd( -5.60465, -152.365, -66.9981, 0.74 ) }
    dend_49 { pt3dadd( -5.81802, -154.367, -68.2882, 0.15 ) }
    dend_49 { pt3dadd( -6.09641, -155.553, -69.1346, 1.18 ) }
    dend_49 { pt3dadd( -6.16155, -155.761, -69.2916, 1.33 ) }
    dend_49 { pt3dadd( -7.02892, -157.943, -70.995, 0.22 ) }
    dend_49 { pt3dadd( -7.39553, -158.697, -71.5998, 0.88 ) }
    dend_49 { pt3dadd( -9.01221, -161.663, -73.9277, 0.15 ) }
    dend_49 { pt3dadd( -9.55015, -162.55, -74.595, 1.03 ) }
    dend_49 { pt3dadd( -9.6793, -162.77, -74.7157, 1.03 ) }
    dend_49 { pt3dadd( -10.14, -163.623, -74.9666, 0.15 ) }
    dend_49 { pt3dadd( -10.6182, -164.631, -74.9349, 0.81 ) }
    dend_49 { pt3dadd( -11.0712, -165.728, -74.6051, 0.52 ) }
    dend_49 { pt3dadd( -11.098, -165.801, -74.5689, 0.52 ) }
    dend_49 { pt3dadd( -12.2919, -169.241, -72.472, 0.15 ) }
    dend_49 { pt3dadd( -12.6939, -170.373, -71.5385, 1.18 ) }
    dend_49 { pt3dadd( -12.8488, -170.808, -71.1074, 1.33 ) }
    dend_49 { pt3dadd( -13.3811, -172.172, -69.4139, 0.15 ) }
    dend_49 { pt3dadd( -13.6708, -172.788, -68.4757, 1.33 ) }
    dend_49 { pt3dadd( -14.5816, -174.157, -65.6884, 0.22 ) }
    dend_49 { pt3dadd( -15.9632, -175.318, -61.7144, 0.59 ) }
    dend_49 { pt3dadd( -16.0158, -175.341, -61.5709, 0.59 ) }
    dend_49 { pt3dadd( -17.0228, -175.356, -58.994, 0.88 ) }
    dend_49 { pt3dadd( -17.6023, -175.123, -57.6212, 0.15 ) }
    dend_49 { pt3dadd( -18.6299, -174.357, -55.4561, 0.15 ) }
    dend_49 { pt3dadd( -18.919, -174.031, -54.9806, 0.59 ) }
    dend_49 { pt3dadd( -19.028, -173.88, -54.8435, 0.59 ) }
    dend_49 { pt3dadd( -19.7222, -172.863, -54.0296, 0.15 ) }
    dend_49 { pt3dadd( -19.7577, -172.812, -53.9919, 0.15 ) }
    dend_49 { pt3dadd( -20.3, -172.089, -53.3726, 0.44 ) }
    dend_49 { pt3dadd( -20.9119, -171.375, -52.7425, 0.15 ) }
    dend_49 { pt3dadd( -21.6486, -170.549, -52.0031, 0.81 ) }
    dend_49 { pt3dadd( -21.69, -170.505, -51.9634, 0.81 ) }
    dend_49 { pt3dadd( -23.2709, -168.94, -50.5487, 0.15 ) }
    dend_49 { pt3dadd( -23.3148, -168.899, -50.5086, 0.15 ) }
    dend_49 { pt3dadd( -24.0016, -168.357, -49.8446, 0.52 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 37/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -13.9867, -20.7572, -20.8276, 0.22 ) }
    dend_46 { pt3dadd( -14.5567, -20.7317, -22.71, 0.22 ) }
    dend_46 { pt3dadd( -15.1137, -20.6045, -24.4655, 1.55 ) }
    dend_46 { pt3dadd( -15.4631, -20.4793, -25.611, 2.28 ) }
    dend_46 { pt3dadd( -16.0346, -20.1907, -27.4848, 2.5 ) }
    dend_46 { pt3dadd( -16.5163, -19.9053, -29.0698, 0.52 ) }
    dend_46 { pt3dadd( -16.6813, -19.7806, -29.6883, 0.52 ) }
    dend_46 { pt3dadd( -17.0188, -19.3491, -31.2002, 1.84 ) }
    dend_46 { pt3dadd( -17.1858, -19.059, -32.0111, 2.5 ) }
    dend_46 { pt3dadd( -17.3423, -18.7504, -32.7206, 2.73 ) }
    dend_46 { pt3dadd( -17.3608, -18.7084, -32.8117, 2.73 ) }
    dend_46 { pt3dadd( -17.7804, -17.3423, -35.5408, 0.29 ) }
    dend_46 { pt3dadd( -17.8258, -17.1248, -35.9709, 0.29 ) }
    dend_46 { pt3dadd( -17.8961, -16.6534, -36.8503, 1.84 ) }
    dend_46 { pt3dadd( -17.9327, -16.3695, -37.3245, 2.36 ) }
    dend_46 { pt3dadd( -18.0961, -14.8297, -39.7025, 1.03 ) }
    dend_46 { pt3dadd( -18.1324, -14.4196, -40.2429, 1.18 ) }
    dend_46 { pt3dadd( -18.2148, -12.9889, -41.7888, 0.29 ) }
    dend_46 { pt3dadd( -18.2257, -12.5683, -42.2177, 0.22 ) }
    dend_46 { pt3dadd( -18.2195, -11.6318, -43.0921, 1.62 ) }
    dend_46 { pt3dadd( -18.195, -10.8713, -43.701, 2.43 ) }
    dend_46 { pt3dadd( -18.1375, -9.23758, -44.7387, 0.22 ) }
    dend_46 { pt3dadd( -18.1102, -8.56702, -45.1485, 0.81 ) }
    dend_46 { pt3dadd( -18.062, -7.78409, -45.6302, 0.88 ) }
    dend_46 { pt3dadd( -17.9821, -6.94478, -46.1597, 0.22 ) }
    dend_46 { pt3dadd( -17.8396, -5.82719, -46.8299, 2.06 ) }
    dend_46 { pt3dadd( -17.7606, -5.27025, -47.1486, 2.43 ) }
    dend_46 { pt3dadd( -17.7378, -5.12977, -47.234, 2.43 ) }
    dend_46 { pt3dadd( -17.4105, -3.1214, -48.6014, 0.29 ) }
    dend_46 { pt3dadd( -17.2313, -2.09821, -49.3338, 0.44 ) }
    dend_46 { pt3dadd( -17.0917, -1.27866, -49.9508, 0.22 ) }
    dend_46 { pt3dadd( -17.0823, -1.22463, -49.9934, 0.22 ) }
    dend_46 { pt3dadd( -16.8033, 0.453918, -51.3092, 0.44 ) }
    dend_46 { pt3dadd( -16.6517, 1.53139, -52.2698, 0.22 ) }
    dend_46 { pt3dadd( -16.5387, 2.54035, -53.272, 1.77 ) }
    dend_46 { pt3dadd( -16.505, 2.85659, -53.6255, 2.14 ) }
    dend_46 { pt3dadd( -16.5018, 2.88974, -53.6649, 2.14 ) }
    dend_46 { pt3dadd( -16.4776, 3.23711, -54.0844, 2.28 ) }
    dend_46 { pt3dadd( -16.4626, 5.62184, -56.9576, 0.22 ) }
    dend_46 { pt3dadd( -16.465, 5.67172, -57.0192, 0.22 ) }
    dend_46 { pt3dadd( -16.5303, 6.30879, -57.813, 0.22 ) }
    dend_46 { pt3dadd( -16.5343, 6.34108, -57.853, 0.22 ) }
    dend_46 { pt3dadd( -16.6315, 7.07945, -58.7263, 1.11 ) }
    dend_46 { pt3dadd( -16.6996, 7.53424, -59.2083, 1.55 ) }
    dend_46 { pt3dadd( -16.9909, 9.03599, -60.4355, 0.22 ) }
    dend_46 { pt3dadd( -17.0573, 9.41811, -60.723, 0.52 ) }
    dend_46 { pt3dadd( -17.1193, 9.82289, -61.0036, 0.59 ) }
    dend_46 { pt3dadd( -17.2051, 10.4463, -61.3931, 0.22 ) }
    dend_46 { pt3dadd( -17.2979, 11.1606, -61.849, 1.4 ) }
    dend_46 { pt3dadd( -17.3379, 11.4861, -62.0601, 1.4 ) }
    dend_46 { pt3dadd( -17.536, 12.949, -62.9774, 0.22 ) }
    dend_46 { pt3dadd( -17.6894, 13.9487, -63.622, 1.55 ) }
    dend_46 { pt3dadd( -17.7309, 14.1817, -63.7797, 1.84 ) }
    dend_46 { pt3dadd( -18.0829, 15.854, -64.965, 0.22 ) }
    dend_46 { pt3dadd( -18.1661, 16.2118, -65.238, 0.22 ) }
    dend_46 { pt3dadd( -18.3218, 16.7869, -65.7113, 0.15 ) }
    dend_46 { pt3dadd( -18.4297, 17.1367, -65.9877, 0.44 ) }
    dend_46 { pt3dadd( -18.6532, 17.8661, -66.5393, 0.29 ) }
    dend_46 { pt3dadd( -18.8572, 18.539, -67.0126, 1.33 ) }
    dend_46 { pt3dadd( -19.1027, 19.4151, -67.6029, 1.69 ) }
    dend_46 { pt3dadd( -19.5804, 21.3311, -68.9008, 0.22 ) }
    dend_46 { pt3dadd( -19.8377, 22.4718, -69.678, 0.22 ) }
    dend_46 { pt3dadd( -20.0492, 23.7001, -70.5461, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_46 { pt3dadd( -20.1202, 24.2327, -70.9269, 1.62 ) }
    dend_46 { pt3dadd( -20.2639, 25.7996, -72.068, 0.22 ) }
    dend_46 { pt3dadd( -20.3091, 26.7995, -72.7816, 1.47 ) }
    dend_46 { pt3dadd( -20.3051, 27.5794, -73.3375, 1.99 ) }
    dend_46 { pt3dadd( -20.2169, 29.6725, -74.8816, 0.22 ) }
    dend_46 { pt3dadd( -20.2137, 29.715, -74.9119, 0.22 ) }
    dend_46 { pt3dadd( -20.153, 30.3042, -75.3154, 0.59 ) }
    dend_46 { pt3dadd( -20.0454, 31.0438, -75.7912, 0.22 ) }
    dend_46 { pt3dadd( -20.036, 31.0947, -75.8236, 0.22 ) }
    dend_46 { pt3dadd( -19.9194, 31.5849, -76.1122, 0.22 ) }
    dend_46 { pt3dadd( -19.5175, 32.8422, -76.856, 1.55 ) }
    dend_46 { pt3dadd( -19.3664, 33.2513, -77.1111, 1.55 ) }
    dend_46 { pt3dadd( -18.819, 34.4315, -78.0088, 0.15 ) }
    dend_46 { pt3dadd( -18.7873, 34.4931, -78.0591, 0.15 ) }
    dend_46 { pt3dadd( -18.5004, 35.0152, -78.5055, 0.15 ) }
    dend_46 { pt3dadd( -17.8518, 36.0817, -79.5085, 1.4 ) }
    dend_46 { pt3dadd( -17.6833, 36.3239, -79.7458, 1.62 ) }
    dend_46 { pt3dadd( -16.5973, 37.7901, -81.159, 0.22 ) }
    dend_46 { pt3dadd( -16.2214, 38.2761, -81.6089, 0.22 ) }
    dend_46 { pt3dadd( -15.505, 39.1496, -82.3829, 1.4 ) }
    dend_46 { pt3dadd( -14.9626, 39.7787, -82.9114, 1.18 ) }
    dend_46 { pt3dadd( -13.971, 40.8781, -83.7443, 0.15 ) }
    dend_46 { pt3dadd( -13.5016, 41.3637, -84.1161, 0.96 ) }
    dend_46 { pt3dadd( -13.2856, 41.5757, -84.2715, 0.96 ) }
    dend_46 { pt3dadd( -12.0502, 42.69, -85.1379, 0.22 ) }
    dend_46 { pt3dadd( -11.347, 43.3145, -85.6253, 1.47 ) }
    dend_46 { pt3dadd( -10.9764, 43.6486, -85.8945, 1.77 ) }
    dend_46 { pt3dadd( -9.60994, 44.8591, -87.0337, 0.22 ) }
    dend_46 { pt3dadd( -9.57272, 44.8912, -87.0679, 0.22 ) }
    dend_46 { pt3dadd( -9.04531, 45.3427, -87.5717, 0.22 ) }
    dend_46 { pt3dadd( -8.36763, 45.9028, -88.2534, 1.18 ) }
    dend_46 { pt3dadd( -7.84812, 46.3194, -88.7893, 0.96 ) }
    dend_46 { pt3dadd( -7.06878, 46.9476, -89.6135, 0.22 ) }
    dend_46 { pt3dadd( -7.03324, 46.9786, -89.6504, 0.22 ) }
    dend_46 { pt3dadd( -6.34323, 47.6033, -90.4086, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 35/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 1.71543, 34.351, 16.0014, 0.52 ) }
    dend_43 { pt3dadd( 1.31136, 35.9834, 16.7092, 0.52 ) }
    dend_43 { pt3dadd( 1.17317, 36.4613, 16.9284, 0.37 ) }
    dend_43 { pt3dadd( 0.929484, 37.1297, 17.24, 0.52 ) }
    dend_43 { pt3dadd( 0.5268, 38.0386, 17.6501, 0.29 ) }
    dend_43 { pt3dadd( 0.270263, 38.5686, 17.87, 0.52 ) }
    dend_43 { pt3dadd( -0.120213, 39.3354, 18.1363, 0.66 ) }
    dend_43 { pt3dadd( -0.197187, 39.47, 18.173, 0.66 ) }
    dend_43 { pt3dadd( -0.551786, 39.9882, 18.3186, 0.22 ) }
    dend_43 { pt3dadd( -0.96955, 40.4774, 18.4462, 0.22 ) }
    dend_43 { pt3dadd( -1.47119, 40.9623, 18.5087, 0.74 ) }
    dend_43 { pt3dadd( -1.96357, 41.4504, 18.5102, 1.4 ) }
    dend_43 { pt3dadd( -7.94719, 49.4617, 21.8783, 1.4 ) }
    dend_43 { pt3dadd( -13.606, 57.9236, 24.7753, 1.4 ) }
    dend_43 { pt3dadd( -17.5677, 66.8392, 28.9714, 1.4 ) }
    dend_43 { pt3dadd( -21.6369, 76.1038, 32.285, 1.4 ) }
    dend_43 { pt3dadd( -26.5268, 85.3335, 34.3318, 1.4 ) }
    dend_43 { pt3dadd( -31.151, 94.1971, 37.9011, 1.4 ) }
    dend_43 { pt3dadd( -35.2608, 102.06, 43.5962, 1.4 ) }
    dend_43 { pt3dadd( -39.9675, 109.66, 49.1515, 1.4 ) }
    dend_43 { pt3dadd( -43.3679, 117.001, 55.8584, 1.4 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 56/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.71543, 34.351, 16.0014, 0.74 ) }
    dend_42 { pt3dadd( 2.93101, 36.5164, 15.223, 0.74 ) }
    dend_42 { pt3dadd( 3.294, 37.3471, 14.9997, 0.74 ) }
    dend_42 { pt3dadd( 3.37711, 37.5664, 14.952, 0.74 ) }
    dend_42 { pt3dadd( 3.84931, 38.8624, 14.6298, 0.44 ) }
    dend_42 { pt3dadd( 4.35053, 40.3005, 14.259, 0.29 ) }
    dend_42 { pt3dadd( 5.07243, 42.3064, 13.6902, 0.81 ) }
    dend_42 { pt3dadd( 5.57678, 43.8525, 13.2654, 0.29 ) }
    dend_42 { pt3dadd( 5.86488, 44.7542, 13.0156, 0.29 ) }
    dend_42 { pt3dadd( 6.4497, 46.5973, 12.5474, 1.03 ) }
    dend_42 { pt3dadd( 6.87154, 47.946, 12.2552, 1.4 ) }
    dend_42 { pt3dadd( 7.23504, 49.1, 12.0638, 1.03 ) }
    dend_42 { pt3dadd( 7.77147, 50.7454, 11.8489, 0.59 ) }
    dend_42 { pt3dadd( 7.79902, 50.846, 11.8469, 0.59 ) }
    dend_42 { pt3dadd( 8.06467, 52.0047, 11.9467, 1.03 ) }
    dend_42 { pt3dadd( 8.21117, 52.7371, 12.0861, 1.03 ) }
    dend_42 { pt3dadd( 8.56339, 54.7753, 12.5412, 0.22 ) }
    dend_42 { pt3dadd( 8.81361, 56.453, 12.9494, 1.25 ) }
    dend_42 { pt3dadd( 8.95266, 57.5606, 13.2248, 1.99 ) }
    dend_42 { pt3dadd( 9.11821, 59.1615, 13.5985, 1.03 ) }
    dend_42 { pt3dadd( 9.22469, 60.8125, 13.9732, 0.29 ) }
    dend_42 { pt3dadd( 9.2705, 62.1517, 14.2533, 0.37 ) }
    dend_42 { pt3dadd( 9.27107, 62.2688, 14.2743, 0.37 ) }
    dend_42 { pt3dadd( 9.21717, 64.1981, 14.5906, 0.52 ) }
    dend_42 { pt3dadd( 9.1485, 65.4509, 14.748, 0.81 ) }
    dend_42 { pt3dadd( 8.97006, 67.2439, 14.946, 1.92 ) }
    dend_42 { pt3dadd( 8.90696, 67.7992, 15.0022, 2.21 ) }
    dend_42 { pt3dadd( 8.88332, 68.0426, 15.0265, 2.21 ) }
    dend_42 { pt3dadd( 8.80858, 69.0557, 15.1129, 2.21 ) }
    dend_42 { pt3dadd( 8.74592, 70.5329, 15.2045, 1.03 ) }
    dend_42 { pt3dadd( 8.72656, 71.6884, 15.3227, 0.22 ) }
    dend_42 { pt3dadd( 8.73819, 72.3806, 15.4089, 0.22 ) }
    dend_42 { pt3dadd( 8.74011, 72.5162, 15.43, 0.22 ) }
    dend_42 { pt3dadd( 8.75339, 73.3926, 15.5749, 0.22 ) }
    dend_42 { pt3dadd( 8.75521, 73.4954, 15.5919, 0.22 ) }
    dend_42 { pt3dadd( 8.78681, 75.4442, 15.9033, 0.96 ) }
    dend_42 { pt3dadd( 8.80663, 76.1961, 16.0065, 1.55 ) }
    dend_42 { pt3dadd( 8.83312, 77.112, 16.15, 1.84 ) }
    dend_42 { pt3dadd( 8.88865, 78.8616, 16.4251, 0.29 ) }
    dend_42 { pt3dadd( 8.99755, 80.1686, 16.6432, 0.15 ) }
    dend_42 { pt3dadd( 9.00957, 80.2707, 16.6605, 0.15 ) }
    dend_42 { pt3dadd( 9.25254, 81.7689, 16.9181, 0.15 ) }
    dend_42 { pt3dadd( 9.6598, 83.9099, 17.3265, 1.62 ) }
    dend_42 { pt3dadd( 9.94919, 85.227, 17.6193, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_42 { pt3dadd( 10.5787, 87.8001, 18.2655, 0.15 ) }
    dend_42 { pt3dadd( 10.604, 87.8978, 18.2913, 0.15 ) }
    dend_42 { pt3dadd( 10.8875, 88.9596, 18.5728, 0.15 ) }
    dend_42 { pt3dadd( 10.9168, 89.0563, 18.5982, 0.15 ) }
    dend_42 { pt3dadd( 11.2791, 90.1004, 18.8435, 1.18 ) }
    dend_42 { pt3dadd( 11.4574, 90.6052, 18.9708, 1.55 ) }
    dend_42 { pt3dadd( 11.6427, 91.2244, 19.1099, 1.55 ) }
    dend_42 { pt3dadd( 11.6713, 91.3225, 19.1308, 1.55 ) }
    dend_42 { pt3dadd( 12.3254, 93.615, 19.5409, 0.22 ) }
    dend_42 { pt3dadd( 12.4991, 94.2254, 19.6296, 0.29 ) }
    dend_42 { pt3dadd( 12.5629, 94.4387, 19.6494, 0.29 ) }
    dend_42 { pt3dadd( 13.0886, 96.2092, 19.7665, 0.29 ) }
    dend_42 { pt3dadd( 13.1135, 96.295, 19.7702, 0.29 ) }
    dend_42 { pt3dadd( 13.4555, 97.5918, 19.8257, 0.44 ) }
    dend_42 { pt3dadd( 13.7066, 98.6504, 19.8609, 0.66 ) }
    dend_42 { pt3dadd( 14.0686, 100.212, 19.9304, 1.33 ) }
    dend_42 { pt3dadd( 14.3806, 101.591, 20.0245, 2.14 ) }
    dend_42 { pt3dadd( 14.5676, 102.448, 20.0979, 2.28 ) }
    dend_42 { pt3dadd( 15.0573, 104.829, 20.3552, 0.22 ) }
    dend_42 { pt3dadd( 15.0758, 104.931, 20.3695, 0.22 ) }
    dend_42 { pt3dadd( 15.2834, 106.202, 20.576, 0.22 ) }
    dend_42 { pt3dadd( 15.5148, 107.959, 20.8738, 1.69 ) }
    dend_42 { pt3dadd( 15.5942, 108.612, 20.9774, 2.36 ) }
    dend_42 { pt3dadd( 15.6534, 109.125, 21.0516, 2.36 ) }
    dend_42 { pt3dadd( 15.8334, 111.174, 21.3442, 0.29 ) }
    dend_42 { pt3dadd( 15.8476, 111.394, 21.3773, 0.29 ) }
    dend_42 { pt3dadd( 15.9203, 113.582, 21.7232, 0.29 ) }
    dend_42 { pt3dadd( 15.9296, 114.654, 21.8974, 0.29 ) }
    dend_42 { pt3dadd( 15.9306, 114.771, 21.918, 0.29 ) }
    dend_42 { pt3dadd( 15.947, 116.303, 22.2927, 0.29 ) }
    dend_42 { pt3dadd( 15.9474, 116.473, 22.3465, 0.29 ) }
    dend_42 { pt3dadd( 15.9226, 117.528, 22.7147, 0.96 ) }
    dend_42 { pt3dadd( 15.9182, 117.625, 22.7509, 0.96 ) }
    dend_42 { pt3dadd( 15.87, 118.556, 23.069, 0.96 ) }
    dend_42 { pt3dadd( 15.7143, 120.841, 23.8175, 0.22 ) }
    dend_42 { pt3dadd( 15.6574, 121.809, 24.1189, 0.22 ) }
    dend_42 { pt3dadd( 15.5432, 123.492, 24.629, 0.22 ) }
    dend_42 { pt3dadd( 15.4843, 124.149, 24.8246, 0.59 ) }
    dend_42 { pt3dadd( 15.3678, 125.202, 25.1262, 0.22 ) }
    dend_42 { pt3dadd( 15.1674, 126.457, 25.4478, 0.88 ) }
    dend_42 { pt3dadd( 18.2544, 140.942, 27.164, 0.88 ) }
    dend_42 { pt3dadd( 22.5914, 154.282, 32.0242, 0.88 ) }
    dend_42 { pt3dadd( 27.2486, 167.09, 37.821, 0.88 ) }
    dend_42 { pt3dadd( 33.4477, 178.827, 44.2541, 0.88 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 44/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -6.91077, 12.4671, -0.306016, 0.52 ) }
    dend_36 { pt3dadd( -8.83907, 13.1715, 1.15558, 0.52 ) }
    dend_36 { pt3dadd( -9.72239, 13.4896, 1.83764, 0.52 ) }
    dend_36 { pt3dadd( -11.9444, 14.2476, 4.01279, 1.11 ) }
    dend_36 { pt3dadd( -11.9925, 14.2658, 4.06216, 1.11 ) }
    dend_36 { pt3dadd( -12.8029, 14.5967, 4.88507, 1.4 ) }
    dend_36 { pt3dadd( -12.8516, 14.618, 4.93276, 1.4 ) }
    dend_36 { pt3dadd( -13.2495, 14.7909, 5.38567, 1.18 ) }
    dend_36 { pt3dadd( -14.8189, 15.573, 7.13942, 1.03 ) }
    dend_36 { pt3dadd( -15.6359, 16.0757, 7.91432, 0.29 ) }
    dend_36 { pt3dadd( -16.0861, 16.3552, 8.27352, 1.11 ) }
    dend_36 { pt3dadd( -16.7062, 16.7457, 8.68066, 1.47 ) }
    dend_36 { pt3dadd( -17.1293, 16.9939, 8.89812, 1.77 ) }
    dend_36 { pt3dadd( -17.545, 17.215, 9.03811, 1.77 ) }
    dend_36 { pt3dadd( -17.6097, 17.2449, 9.0456, 1.77 ) }
    dend_36 { pt3dadd( -18.9793, 17.8517, 9.17516, 0.59 ) }
    dend_36 { pt3dadd( -19.1389, 17.9324, 9.18963, 0.59 ) }
    dend_36 { pt3dadd( -19.7476, 18.2903, 9.234, 0.81 ) }
    dend_36 { pt3dadd( -20.1948, 18.5838, 9.25847, 0.81 ) }
    dend_36 { pt3dadd( -20.8754, 19.0721, 9.25918, 0.37 ) }
    dend_36 { pt3dadd( -21.7591, 19.7618, 9.23009, 0.37 ) }
    dend_36 { pt3dadd( -22.5117, 20.4516, 9.18699, 0.74 ) }
    dend_36 { pt3dadd( -23.1173, 21.1063, 9.12844, 1.03 ) }
    dend_36 { pt3dadd( -23.5323, 21.6873, 9.0596, 1.03 ) }
    dend_36 { pt3dadd( -24.0406, 22.4708, 9.6044, 0.81 ) }
    dend_36 { pt3dadd( -24.2926, 22.8859, 10.3402, 0.44 ) }
    dend_36 { pt3dadd( -24.4565, 23.1193, 10.988, 0.44 ) }
    dend_36 { pt3dadd( -24.632, 23.3852, 11.847, 0.44 ) }
    dend_36 { pt3dadd( -24.836, 23.7166, 13.0178, 0.44 ) }
    dend_36 { pt3dadd( -26.0345, 25.9058, 20.9155, 1.33 ) }
    dend_36 { pt3dadd( -26.0438, 25.9239, 20.9839, 1.33 ) }
    dend_36 { pt3dadd( -26.2426, 26.3779, 22.6996, 1.69 ) }
    dend_36 { pt3dadd( -26.3747, 26.68, 23.804, 0.74 ) }
    dend_36 { pt3dadd( -26.3974, 26.7319, 23.9732, 0.74 ) }
    dend_36 { pt3dadd( -26.4838, 27.0455, 24.6818, 0.59 ) }
    dend_36 { pt3dadd( -26.483, 27.2126, 24.7611, 0.59 ) }
    dend_36 { pt3dadd( -26.4727, 28.4663, 25.2845, 0.59 ) }
    dend_36 { pt3dadd( -26.4617, 29.7465, 25.7555, 0.37 ) }
    dend_36 { pt3dadd( -26.4948, 30.7465, 26.1676, 1.18 ) }
    dend_36 { pt3dadd( -26.673, 32.4336, 26.9155, 1.47 ) }
    dend_36 { pt3dadd( -26.685, 32.512, 26.9496, 1.47 ) }
    dend_36 { pt3dadd( -26.8502, 33.3551, 27.3082, 1.11 ) }
    dend_36 { pt3dadd( -27.0162, 34.1376, 27.715, 1.18 ) }
    dend_36 { pt3dadd( -27.0399, 34.2726, 27.7967, 1.18 ) }
    dend_36 { pt3dadd( -27.1823, 35.7668, 28.7441, 0.59 ) }
    dend_36 { pt3dadd( -27.2204, 36.7599, 29.3718, 0.37 ) }
    dend_36 { pt3dadd( -27.2197, 36.8196, 29.4146, 0.37 ) }
    dend_36 { pt3dadd( -27.0824, 38.3792, 30.7178, 0.81 ) }
    dend_36 { pt3dadd( -27.0467, 38.5971, 30.9263, 0.81 ) }
    dend_36 { pt3dadd( -26.8928, 39.515, 31.8853, 1.11 ) }
    dend_36 { pt3dadd( -26.8843, 39.5706, 31.9486, 1.11 ) }
    dend_36 { pt3dadd( -26.8809, 39.9633, 32.3639, 1.4 ) }
    dend_36 { pt3dadd( -26.9168, 40.2601, 32.627, 1.4 ) }
    dend_36 { pt3dadd( -27.1987, 41.4743, 33.5096, 1.4 ) }
    dend_36 { pt3dadd( -27.5134, 42.768, 34.5309, 0.29 ) }
    dend_36 { pt3dadd( -27.6184, 43.2435, 34.9417, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_36 { pt3dadd( -27.7723, 44.0615, 35.7239, 0.37 ) }
    dend_36 { pt3dadd( -27.8602, 44.6896, 36.405, 0.37 ) }
    dend_36 { pt3dadd( -27.8611, 44.7344, 36.462, 0.37 ) }
    dend_36 { pt3dadd( -27.5564, 45.9689, 38.4062, 0.96 ) }
    dend_36 { pt3dadd( -27.3145, 46.3699, 39.1488, 0.96 ) }
    dend_36 { pt3dadd( -27.2632, 46.4359, 39.2686, 0.96 ) }
    dend_36 { pt3dadd( -27.0593, 46.6222, 39.6511, 0.96 ) }
    dend_36 { pt3dadd( -26.6275, 46.9535, 40.3503, 0.66 ) }
    dend_36 { pt3dadd( -26.396, 47.1531, 40.6965, 0.44 ) }
    dend_36 { pt3dadd( -26.0241, 47.694, 41.0879, 0.37 ) }
    dend_36 { pt3dadd( -25.8652, 48.1563, 41.3176, 0.37 ) }
    dend_36 { pt3dadd( -29.0172, 54.4329, 51.0574, 0.37 ) }
    dend_36 { pt3dadd( -33.5424, 63.2585, 58.0876, 0.37 ) }
    dend_36 { pt3dadd( -39.2738, 71.0784, 65.3141, 0.37 ) }
    dend_36 { pt3dadd( -42.8621, 79.6325, 73.1444, 0.37 ) }
    dend_36 { pt3dadd( -45.5514, 87.4017, 82.0086, 0.37 ) }
    dend_36 { pt3dadd( -46.2173, 97.0179, 89.5076, 0.37 ) }
    dend_36 { pt3dadd( -46.7055, 105.232, 98.402, 0.37 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.91077, 12.4671, -0.306016, 1.62 ) }
    dend_33 { pt3dadd( -6.77122, 13.4801, -0.885758, 1.62 ) }
    dend_33 { pt3dadd( -6.78914, 14.1381, -1.21441, 0.81 ) }
    dend_33 { pt3dadd( -6.92157, 15.1461, -1.67059, 0.66 ) }
    dend_33 { pt3dadd( -6.93588, 15.2148, -1.6972, 0.66 ) }
    dend_33 { pt3dadd( -7.08293, 15.783, -1.92926, 0.66 ) }
    dend_33 { pt3dadd( -7.10071, 15.8493, -1.959, 0.66 ) }
    dend_33 { pt3dadd( -7.35325, 16.5698, -2.26258, 0.66 ) }
    dend_33 { pt3dadd( -7.38133, 16.6511, -2.29672, 0.66 ) }
    dend_33 { pt3dadd( -7.52186, 17.1399, -2.52341, 0.66 ) }
    dend_33 { pt3dadd( -7.7808, 18.3426, -3.18427, 1.18 ) }
    dend_33 { pt3dadd( -7.8927, 19.1666, -3.66463, 1.99 ) }
    dend_33 { pt3dadd( -7.92786, 19.5737, -3.90888, 2.06 ) }
    dend_33 { pt3dadd( -7.94063, 20.0494, -4.18686, 1.92 ) }
    dend_33 { pt3dadd( -7.9463, 21.1349, -4.80536, 1.62 ) }
    dend_33 { pt3dadd( -7.95424, 22.013, -5.3377, 0.74 ) }
    dend_33 { pt3dadd( -7.97399, 22.6658, -5.72641, 0.44 ) }
    dend_33 { pt3dadd( -7.97977, 22.7404, -5.78002, 0.44 ) }
    dend_33 { pt3dadd( -8.07726, 23.5812, -6.46279, 0.37 ) }
    dend_33 { pt3dadd( -8.15712, 24.1467, -6.95894, 1.03 ) }
    dend_33 { pt3dadd( -8.29872, 25.0003, -7.73378, 1.33 ) }
    dend_33 { pt3dadd( -8.36823, 25.4271, -8.13463, 1.33 ) }
    dend_33 { pt3dadd( -8.61028, 27.0007, -9.69656, 0.59 ) }
    dend_33 { pt3dadd( -8.626, 27.1491, -9.84485, 0.59 ) }
    dend_33 { pt3dadd( -8.63469, 27.448, -10.1502, 0.59 ) }
    dend_33 { pt3dadd( -8.62732, 27.5212, -10.2155, 0.52 ) }
    dend_33 { pt3dadd( -8.42893, 28.1377, -10.6154, 0.88 ) }
    dend_33 { pt3dadd( -8.36152, 28.2564, -10.666, 0.88 ) }
    dend_33 { pt3dadd( -8.05961, 28.6459, -10.7029, 1.18 ) }
    dend_33 { pt3dadd( -7.83292, 28.8986, -10.746, 1.4 ) }
    dend_33 { pt3dadd( -7.78807, 28.9439, -10.7563, 1.4 ) }
    dend_33 { pt3dadd( -7.35566, 29.374, -10.8723, 1.4 ) }
    dend_33 { pt3dadd( -6.93064, 29.8045, -11.0394, 1.25 ) }
    dend_33 { pt3dadd( -6.87707, 29.8724, -11.0695, 1.25 ) }
    dend_33 { pt3dadd( -6.39461, 30.6372, -11.4161, 0.88 ) }
    dend_33 { pt3dadd( -6.10238, 31.2282, -11.7171, 0.52 ) }
    dend_33 { pt3dadd( -5.8718, 31.8161, -12.0305, 0.44 ) }
    dend_33 { pt3dadd( -5.71015, 32.5727, -12.4329, 0.44 ) }
    dend_33 { pt3dadd( -5.62254, 33.81, -13.0459, 1.62 ) }
    dend_33 { pt3dadd( -5.64548, 34.312, -13.2648, 2.58 ) }
    dend_33 { pt3dadd( -5.78165, 35.2624, -13.6305, 2.95 ) }
    dend_33 { pt3dadd( -5.83423, 35.5241, -13.7208, 2.95 ) }
    dend_33 { pt3dadd( -6.20862, 37.0997, -14.2201, 0.59 ) }
    dend_33 { pt3dadd( -6.41951, 37.9285, -14.4481, 0.59 ) }
    dend_33 { pt3dadd( -6.64526, 38.8574, -14.6996, 0.44 ) }
    dend_33 { pt3dadd( -6.67134, 38.9899, -14.7403, 0.44 ) }
    dend_33 { pt3dadd( -6.81893, 40.0299, -15.0773, 0.44 ) }
    dend_33 { pt3dadd( -6.91781, 41.0742, -15.4768, 0.37 ) }
    dend_33 { pt3dadd( -6.91803, 41.132, -15.5076, 0.37 ) }
    dend_33 { pt3dadd( -6.87505, 42.1333, -16.2334, 0.96 ) }
    dend_33 { pt3dadd( -6.80656, 43.0895, -17.0397, 2.06 ) }
    dend_33 { pt3dadd( -6.78342, 43.4243, -17.34, 2.06 ) }
    dend_33 { pt3dadd( -6.77683, 43.5104, -17.4235, 2.06 ) }
    dend_33 { pt3dadd( -6.62959, 45.1854, -19.1053, 0.29 ) }
    dend_33 { pt3dadd( -6.51302, 46.6537, -20.6204, 2.36 ) }
    dend_33 { pt3dadd( -6.50957, 46.7034, -20.6747, 2.36 ) }
    dend_33 { pt3dadd( -6.49039, 47.127, -21.1444, 3.09 ) }
    // Section: dend_21, id: dend_21, parent: dend_15 (entry count 75/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 18.1252, 9.52119, 0.231452, 0.96 ) }
    dend_21 { pt3dadd( 19.8119, 6.86091, -1.30756, 0.96 ) }
    dend_21 { pt3dadd( 20.617, 5.59114, -2.04215, 1.18 ) }
    dend_21 { pt3dadd( 21.8308, 3.67656, -3.14976, 1.03 ) }
    dend_21 { pt3dadd( 22.8377, 2.08848, -4.0685, 1.18 ) }
    dend_21 { pt3dadd( 23.6055, 0.87749, -4.76908, 2.43 ) }
    dend_21 { pt3dadd( 24.4859, -0.51102, -5.57235, 2.87 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 82/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 18.1252, 9.52119, 0.231452, 0.66 ) }
    dend_16 { pt3dadd( 19.7821, 10.9917, 0.441581, 0.66 ) }
    dend_16 { pt3dadd( 20.5035, 11.5409, 0.527128, 0.88 ) }
    dend_16 { pt3dadd( 20.7232, 11.6742, 0.548826, 0.88 ) }
    dend_16 { pt3dadd( 21.2889, 11.9253, 0.613638, 0.88 ) }
    dend_16 { pt3dadd( 21.599, 12.0251, 0.623987, 0.88 ) }
    dend_16 { pt3dadd( 22.156, 12.2044, 0.64258, 0.74 ) }
    dend_16 { pt3dadd( 22.4694, 12.2419, 0.642564, 0.74 ) }
    dend_16 { pt3dadd( 23.272, 12.3023, 0.635305, 0.74 ) }
    dend_16 { pt3dadd( 24.3892, 12.3622, 0.611988, 1.62 ) }
    dend_16 { pt3dadd( 25.9744, 12.4043, 0.545216, 2.5 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 93/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -20.1558, -14.3849, 0.948534, 0.96 ) }
    dend_8 { pt3dadd( -21.953, -13.9853, 1.70706, 0.96 ) }
    dend_8 { pt3dadd( -22.7403, -13.8345, 2.01193, 0.88 ) }
    dend_8 { pt3dadd( -23.1563, -13.7773, 2.16925, 1.03 ) }
    dend_8 { pt3dadd( -23.2052, -13.7722, 2.18704, 1.03 ) }
    dend_8 { pt3dadd( -23.695, -13.7383, 2.35604, 1.03 ) }
    dend_8 { pt3dadd( -24.0401, -13.7303, 2.46678, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( -24.4777, -13.7646, 2.57621, 1.03 ) }
    dend_8 { pt3dadd( -25.3511, -13.8805, 2.80626, 1.55 ) }
    dend_8 { pt3dadd( -25.6643, -13.9334, 2.89027, 1.84 ) }
    dend_8 { pt3dadd( -26.0649, -14.0082, 2.99867, 2.06 ) }
    dend_8 { pt3dadd( -26.5948, -14.125, 3.1436, 2.28 ) }
    dend_8 { pt3dadd( -27.6919, -14.3681, 3.43213, 2.5 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 6/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -20.1558, -14.3849, 0.948534, 1.11 ) }
    dend_1 { pt3dadd( -19.9536, -16.1013, 1.5964, 1.11 ) }
    dend_1 { pt3dadd( -19.7314, -17.9448, 2.24203, 1.03 ) }
    dend_1 { pt3dadd( -19.5996, -18.9659, 2.5738, 1.03 ) }
    dend_1 { pt3dadd( -19.3939, -20.4116, 3.00085, 0.81 ) }
    dend_1 { pt3dadd( -19.2868, -21.1334, 3.20269, 1.25 ) }
    dend_1 { pt3dadd( -19.1569, -21.8529, 3.38782, 1.25 ) }
    dend_1 { pt3dadd( -19.0965, -22.0847, 3.43921, 1.25 ) }
    dend_1 { pt3dadd( -18.7775, -23.0448, 3.57446, 1.25 ) }
    dend_1 { pt3dadd( -18.2635, -24.3756, 3.79482, 1.25 ) }
    dend_1 { pt3dadd( -18.234, -24.4452, 3.81216, 1.25 ) }
    dend_1 { pt3dadd( -17.7291, -25.6536, 4.25048, 1.25 ) }
    dend_1 { pt3dadd( -17.1748, -26.9883, 4.88974, 1.25 ) }
    dend_1 { pt3dadd( -16.9481, -27.5353, 5.22998, 1.55 ) }
    dend_1 { pt3dadd( -16.3302, -29.0209, 6.2336, 1.55 ) }
    dend_1 { pt3dadd( -15.6741, -30.6188, 7.41165, 2.36 ) }
    dend_1 { pt3dadd( -15.103, -32.0796, 8.55976, 2.8 ) }
    dend_1 { pt3dadd( -14.6417, -33.3933, 9.70977, 2.8 ) }
    dend_1 { pt3dadd( -14.0324, -35.2986, 11.543, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 25/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 37.9629, 21.4523, -0.0125933, 0.15 ) }
    axon_1 { pt3dadd( 50.9636, 28.9345, -0.0125933, 0.15 ) }
    axon_1 { pt3dadd( 63.9642, 36.4166, -0.0125933, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 28/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -6.34323, 47.6033, -90.4086, 0.96 ) }
    dend_48 { pt3dadd( -5.87662, 47.6844, -90.5341, 0.96 ) }
    dend_48 { pt3dadd( -5.41036, 47.7499, -90.6659, 0.29 ) }
    dend_48 { pt3dadd( -5.37929, 47.7545, -90.6746, 0.29 ) }
    dend_48 { pt3dadd( -5.08724, 47.7979, -90.7563, 0.74 ) }
    dend_48 { pt3dadd( -4.34336, 47.9112, -90.9612, 0.15 ) }
    dend_48 { pt3dadd( -4.01676, 47.9626, -91.0504, 0.52 ) }
    dend_48 { pt3dadd( -3.46596, 48.0621, -91.2886, 0.15 ) }
    dend_48 { pt3dadd( -3.24748, 48.1098, -91.4026, 1.03 ) }
    dend_48 { pt3dadd( -3.21974, 48.1166, -91.4184, 1.03 ) }
    dend_48 { pt3dadd( -3.07468, 48.1569, -91.5093, 1.25 ) }
    dend_48 { pt3dadd( -3.04856, 48.1657, -91.5269, 1.25 ) }
    dend_48 { pt3dadd( -2.01113, 48.5544, -92.3092, 0.15 ) }
    dend_48 { pt3dadd( -1.89666, 48.6024, -92.4022, 0.15 ) }
    dend_48 { pt3dadd( -1.72527, 48.6761, -92.5416, 0.52 ) }
    dend_48 { pt3dadd( -1.67371, 48.7004, -92.5818, 0.52 ) }
    dend_48 { pt3dadd( -1.57527, 48.7496, -92.6553, 0.52 ) }
    dend_48 { pt3dadd( -1.54224, 48.7663, -92.6785, 0.52 ) }
    dend_48 { pt3dadd( -1.16481, 48.9822, -92.9363, 0.15 ) }
    dend_48 { pt3dadd( -0.84218, 49.1769, -93.1829, 1.18 ) }
    dend_48 { pt3dadd( -0.661452, 49.2907, -93.3303, 1.4 ) }
    dend_48 { pt3dadd( -0.64159, 49.3034, -93.347, 1.4 ) }
    dend_48 { pt3dadd( -0.0736195, 49.6615, -93.8274, 0.15 ) }
    dend_48 { pt3dadd( 0.191042, 49.8387, -94.0754, 0.88 ) }
    dend_48 { pt3dadd( 0.209105, 49.851, -94.0941, 0.88 ) }
    dend_48 { pt3dadd( 0.311168, 49.9205, -94.2024, 0.88 ) }
    dend_48 { pt3dadd( 0.343961, 49.9457, -94.2481, 0.88 ) }
    dend_48 { pt3dadd( 0.591848, 50.1579, -94.6532, 0.15 ) }
    dend_48 { pt3dadd( 0.824104, 50.4034, -95.1867, 1.03 ) }
    dend_48 { pt3dadd( 1.02003, 50.6426, -95.738, 0.15 ) }
    dend_48 { pt3dadd( 1.09572, 50.7486, -95.9908, 0.59 ) }
    dend_48 { pt3dadd( 1.30834, 51.1471, -97.0168, 0.15 ) }
    dend_48 { pt3dadd( 1.31181, 51.1575, -97.0432, 0.15 ) }
    dend_48 { pt3dadd( 1.3651, 51.4698, -97.838, 1.18 ) }
    dend_48 { pt3dadd( 1.37545, 51.5644, -98.0772, 1.33 ) }
    dend_48 { pt3dadd( 1.37614, 51.5738, -98.0998, 1.33 ) }
    dend_48 { pt3dadd( 1.4318, 52.1145, -99.3586, 0.15 ) }
    dend_48 { pt3dadd( 1.48066, 52.4151, -99.9895, 1.25 ) }
    dend_48 { pt3dadd( 1.48392, 52.4334, -100.026, 1.25 ) }
    dend_48 { pt3dadd( 1.62638, 53.0977, -101.204, 0.15 ) }
    dend_48 { pt3dadd( 1.6512, 53.2048, -101.383, 0.52 ) }
    dend_48 { pt3dadd( 1.66087, 53.2385, -101.434, 0.52 ) }
    dend_48 { pt3dadd( 1.68798, 53.3125, -101.524, 0.52 ) }
    dend_48 { pt3dadd( 1.80211, 53.5786, -101.825, 0.15 ) }
    dend_48 { pt3dadd( 1.90231, 53.7861, -102.031, 1.18 ) }
    dend_48 { pt3dadd( 1.96628, 53.903, -102.125, 1.18 ) }
    dend_48 { pt3dadd( 2.28419, 54.465, -102.639, 0.15 ) }
    dend_48 { pt3dadd( 2.36804, 54.61, -102.782, 0.44 ) }
    dend_48 { pt3dadd( 2.3787, 54.6285, -102.802, 0.44 ) }
    dend_48 { pt3dadd( 2.58187, 54.9804, -103.195, 0.15 ) }
    dend_48 { pt3dadd( 2.64191, 55.0888, -103.32, 0.29 ) }
    dend_48 { pt3dadd( 2.86034, 55.5349, -103.768, 0.15 ) }
    dend_48 { pt3dadd( 2.8682, 55.5532, -103.784, 0.15 ) }
    dend_48 { pt3dadd( 3.04888, 55.977, -104.104, 1.4 ) }
    dend_48 { pt3dadd( 3.05834, 56.0004, -104.118, 1.4 ) }
    dend_48 { pt3dadd( 3.1512, 56.2464, -104.248, 1.62 ) }
    dend_48 { pt3dadd( 3.43231, 56.9987, -104.584, 0.15 ) }
    dend_48 { pt3dadd( 3.52169, 57.2447, -104.681, 0.44 ) }
    dend_48 { pt3dadd( 3.61997, 57.5215, -104.797, 0.15 ) }
    dend_48 { pt3dadd( 3.75089, 57.9191, -104.961, 1.03 ) }
    dend_48 { pt3dadd( 3.80105, 58.0796, -105.029, 1.03 ) }
    dend_48 { pt3dadd( 3.99832, 58.7782, -105.351, 0.22 ) }
    dend_48 { pt3dadd( 4.11239, 59.231, -105.578, 1.11 ) }
    dend_48 { pt3dadd( 4.29144, 59.9941, -105.976, 0.15 ) }
    dend_48 { pt3dadd( 4.47739, 60.8642, -106.433, 0.15 ) }
    dend_48 { pt3dadd( 4.48155, 60.886, -106.445, 0.15 ) }
    dend_48 { pt3dadd( 4.56595, 61.3951, -106.732, 1.11 ) }
    dend_48 { pt3dadd( 4.61456, 61.7462, -106.93, 0.66 ) }
    dend_48 { pt3dadd( 4.65862, 62.0591, -107.116, 0.15 ) }
    dend_48 { pt3dadd( 4.70305, 62.3489, -107.297, 1.33 ) }
    dend_48 { pt3dadd( 4.89228, 63.1318, -107.86, 0.15 ) }
    dend_48 { pt3dadd( 4.90657, 63.1739, -107.891, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_48 { pt3dadd( 5.04998, 63.4846, -108.136, 0.81 ) }
    dend_48 { pt3dadd( 5.24394, 63.8273, -108.427, 0.22 ) }
    dend_48 { pt3dadd( 5.36045, 64.0075, -108.594, 0.37 ) }
    dend_48 { pt3dadd( 5.68367, 64.4217, -109.005, 0.15 ) }
    dend_48 { pt3dadd( 5.91361, 64.6515, -109.235, 0.66 ) }
    dend_48 { pt3dadd( 6.05178, 64.7827, -109.369, 0.96 ) }
    dend_48 { pt3dadd( 6.0699, 64.7978, -109.386, 0.96 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 7/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -6.34323, 47.6033, -90.4086, 0.74 ) }
    dend_47 { pt3dadd( -5.73101, 48.9379, -95.8534, 0.74 ) }
    dend_47 { pt3dadd( -5.45954, 49.5671, -98.1266, 0.96 ) }
    dend_47 { pt3dadd( -4.73167, 51.2542, -104.222, 0.88 ) }
    dend_47 { pt3dadd( -4.53365, 51.7131, -105.88, 0.44 ) }
    dend_47 { pt3dadd( -4.37968, 52.07, -107.169, 1.03 ) }
    dend_47 { pt3dadd( -4.36913, 52.0944, -107.258, 1.03 ) }
    dend_47 { pt3dadd( -4.14648, 52.6963, -108.764, 1.03 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 15/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -46.7055, 105.232, 98.402, 0.96 ) }
    dend_38 { pt3dadd( -50.0317, 113.198, 106.848, 0.96 ) }
    dend_38 { pt3dadd( -53.8618, 121.968, 114.296, 0.96 ) }
    dend_38 { pt3dadd( -56.1518, 131.477, 121.558, 0.96 ) }
    dend_38 { pt3dadd( -57.3742, 142.301, 127.235, 0.96 ) }
    dend_38 { pt3dadd( -58.4932, 152.985, 133.173, 0.96 ) }
    dend_38 { pt3dadd( -60.8551, 164.321, 137.376, 0.96 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 22/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -46.7055, 105.232, 98.402, 0.74 ) }
    dend_37 { pt3dadd( -49.6371, 110.463, 104.249, 0.96 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -6.49039, 47.127, -21.1444, 0.22 ) }
    dend_35 { pt3dadd( -6.57572, 49.2341, -21.4811, 0.22 ) }
    dend_35 { pt3dadd( -6.63052, 50.4168, -21.6817, 0.22 ) }
    dend_35 { pt3dadd( -6.67697, 51.6748, -21.8927, 1.25 ) }
    dend_35 { pt3dadd( -6.69035, 52.1053, -21.9597, 1.77 ) }
    dend_35 { pt3dadd( -6.7132, 52.7596, -22.0541, 1.84 ) }
    dend_35 { pt3dadd( -6.76596, 54.2845, -22.2498, 0.15 ) }
    dend_35 { pt3dadd( -6.77041, 54.3635, -22.2595, 0.15 ) }
    dend_35 { pt3dadd( -6.79657, 55.0434, -22.3321, 0.15 ) }
    dend_35 { pt3dadd( -6.83868, 56.2057, -22.4265, 1.11 ) }
    dend_35 { pt3dadd( -6.86214, 56.8785, -22.4761, 1.33 ) }
    dend_35 { pt3dadd( -6.90603, 58.1939, -22.5638, 0.15 ) }
    dend_35 { pt3dadd( -6.96161, 59.4534, -22.616, 1.55 ) }
    dend_35 { pt3dadd( -6.99848, 59.9668, -22.6331, 2.28 ) }
    dend_35 { pt3dadd( -7.07531, 60.7738, -22.654, 1.03 ) }
    dend_35 { pt3dadd( -7.08722, 60.8718, -22.6564, 1.03 ) }
    dend_35 { pt3dadd( -7.3145, 62.3939, -22.6902, 0.15 ) }
    dend_35 { pt3dadd( -7.54473, 63.652, -22.7118, 1.47 ) }
    dend_35 { pt3dadd( -7.66912, 64.267, -22.7174, 1.92 ) }
    dend_35 { pt3dadd( -7.80263, 64.8434, -22.717, 1.25 ) }
    dend_35 { pt3dadd( -8.16722, 66.2408, -22.7057, 0.15 ) }
    dend_35 { pt3dadd( -8.32041, 66.7716, -22.6986, 0.15 ) }
    dend_35 { pt3dadd( -8.5417, 67.4656, -22.6706, 0.52 ) }
    dend_35 { pt3dadd( -8.67484, 67.8812, -22.6412, 0.52 ) }
    dend_35 { pt3dadd( -9.05446, 69.0952, -22.5158, 0.22 ) }
    dend_35 { pt3dadd( -9.24154, 69.6544, -22.4375, 0.52 ) }
    dend_35 { pt3dadd( -9.40805, 70.0776, -22.3639, 0.52 ) }
    dend_35 { pt3dadd( -9.72993, 70.787, -22.245, 0.22 ) }
    dend_35 { pt3dadd( -10.1667, 71.6316, -22.0956, 1.33 ) }
    dend_35 { pt3dadd( -10.3571, 71.972, -22.0406, 1.84 ) }
    dend_35 { pt3dadd( -10.5983, 72.3893, -21.9847, 1.84 ) }
    dend_35 { pt3dadd( -11.5638, 73.9702, -21.8316, 0.15 ) }
    dend_35 { pt3dadd( -12.099, 74.7881, -21.7851, 1.33 ) }
    dend_35 { pt3dadd( -12.4817, 75.341, -21.7785, 2.06 ) }
    dend_35 { pt3dadd( -12.982, 76.0712, -21.7915, 0.44 ) }
    dend_35 { pt3dadd( -13.5119, 76.8966, -21.8154, 0.29 ) }
    dend_35 { pt3dadd( -13.9429, 77.6317, -21.8464, 0.15 ) }
    dend_35 { pt3dadd( -14.2555, 78.2441, -21.8849, 0.15 ) }
    dend_35 { pt3dadd( -14.2846, 78.3068, -21.8895, 0.15 ) }
    dend_35 { pt3dadd( -14.6834, 79.2321, -21.9698, 0.15 ) }
    dend_35 { pt3dadd( -15.0165, 80.1392, -22.0283, 0.74 ) }
    dend_35 { pt3dadd( -15.0913, 80.4282, -22.0367, 1.11 ) }
    dend_35 { pt3dadd( -15.1421, 80.7497, -22.0369, 1.33 ) }
    dend_35 { pt3dadd( -15.1713, 82.0445, -21.891, 0.22 ) }
    dend_35 { pt3dadd( -15.1657, 82.1126, -21.8775, 0.22 ) }
    dend_35 { pt3dadd( -14.9636, 83.2222, -21.5716, 0.22 ) }
    dend_35 { pt3dadd( -14.5789, 84.582, -21.1152, 1.33 ) }
    dend_35 { pt3dadd( -14.3548, 85.1518, -20.9048, 1.62 ) }
    dend_35 { pt3dadd( -13.3461, 87.1204, -20.1548, 0.22 ) }
    dend_35 { pt3dadd( -13.007, 87.68, -20.0446, 0.52 ) }
    dend_35 { pt3dadd( -12.9663, 87.7472, -20.0463, 0.52 ) }
    dend_35 { pt3dadd( -12.7349, 88.1432, -20.1378, 0.66 ) }
    dend_35 { pt3dadd( -12.2455, 89.1946, -20.6395, 0.15 ) }
    dend_35 { pt3dadd( -11.84, 90.3944, -21.369, 2.06 ) }
    dend_35 { pt3dadd( -11.2554, 93.1773, -23.3753, 0.22 ) }
    dend_35 { pt3dadd( -11.1476, 94.0391, -24.0171, 1.47 ) }
    dend_35 { pt3dadd( -11.1402, 94.4663, -24.3724, 1.47 ) }
    dend_35 { pt3dadd( -11.2566, 95.9368, -25.7115, 0.22 ) }
    dend_35 { pt3dadd( -11.3408, 96.3687, -26.1386, 0.22 ) }
    dend_35 { pt3dadd( -11.6201, 97.344, -27.131, 1.47 ) }
    dend_35 { pt3dadd( -11.7233, 97.66, -27.4336, 1.84 ) }
    dend_35 { pt3dadd( -12.3561, 99.777, -29.5409, 0.22 ) }
    dend_35 { pt3dadd( -12.3666, 99.8174, -29.5817, 0.22 ) }
    dend_35 { pt3dadd( -12.539, 100.526, -30.3071, 0.22 ) }
    dend_35 { pt3dadd( -12.6357, 100.994, -30.7741, 0.81 ) }
    dend_35 { pt3dadd( -12.7584, 101.914, -31.6219, 0.22 ) }
    dend_35 { pt3dadd( -12.8332, 102.963, -32.4895, 1.11 ) }
    dend_35 { pt3dadd( -12.8355, 103.209, -32.6592, 1.25 ) }
    dend_35 { pt3dadd( -12.8201, 104.365, -33.4377, 0.22 ) }
    dend_35 { pt3dadd( -12.7937, 104.804, -33.7187, 0.59 ) }
    dend_35 { pt3dadd( -12.7051, 105.942, -34.4148, 0.22 ) }
    dend_35 { pt3dadd( -12.6291, 106.856, -34.9108, 1.55 ) }
    dend_35 { pt3dadd( -12.5907, 107.335, -35.1396, 1.92 ) }
    dend_35 { pt3dadd( -12.587, 107.389, -35.1633, 1.92 ) }
    dend_35 { pt3dadd( -12.4879, 109.18, -35.834, 0.15 ) }
    dend_35 { pt3dadd( -12.4862, 109.335, -35.8873, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_35 { pt3dadd( -12.5099, 110.044, -36.0989, 0.15 ) }
    dend_35 { pt3dadd( -12.536, 111.079, -36.3584, 1.18 ) }
    dend_35 { pt3dadd( -12.5417, 111.361, -36.4199, 1.18 ) }
    dend_35 { pt3dadd( -12.5676, 112.726, -36.6795, 0.22 ) }
    dend_35 { pt3dadd( -12.5866, 113.295, -36.8006, 0.22 ) }
    dend_35 { pt3dadd( -12.5893, 113.44, -36.8358, 0.22 ) }
    dend_35 { pt3dadd( -12.5884, 114.312, -37.0645, 0.22 ) }
    dend_35 { pt3dadd( -12.5742, 115.555, -37.4148, 1.33 ) }
    dend_35 { pt3dadd( -12.5709, 116.041, -37.5584, 1.69 ) }
    dend_35 { pt3dadd( -12.5357, 117.846, -38.1299, 0.22 ) }
    dend_35 { pt3dadd( -12.516, 118.417, -38.3243, 0.37 ) }
    dend_35 { pt3dadd( -12.4816, 119.456, -38.7018, 0.15 ) }
    dend_35 { pt3dadd( -12.4628, 120.414, -39.0963, 0.81 ) }
    dend_35 { pt3dadd( -12.4605, 120.628, -39.1874, 0.96 ) }
    dend_35 { pt3dadd( -12.4478, 122.157, -39.8445, 0.15 ) }
    dend_35 { pt3dadd( -12.4377, 123.259, -40.2954, 1.25 ) }
    dend_35 { pt3dadd( -12.4384, 123.868, -40.5512, 1.77 ) }
    dend_35 { pt3dadd( -12.4543, 125.748, -41.367, 0.15 ) }
    dend_35 { pt3dadd( -12.47, 126.349, -41.634, 0.81 ) }
    dend_35 { pt3dadd( -12.483, 126.694, -41.7805, 1.03 ) }
    dend_35 { pt3dadd( -12.5756, 128.523, -42.4984, 0.15 ) }
    dend_35 { pt3dadd( -12.5781, 128.589, -42.5218, 0.15 ) }
    dend_35 { pt3dadd( -12.5928, 129.264, -42.7388, 0.15 ) }
    dend_35 { pt3dadd( -12.5958, 130.841, -43.1904, 1.55 ) }
    dend_35 { pt3dadd( -12.5902, 132.244, -43.5884, 0.15 ) }
    dend_35 { pt3dadd( -12.5867, 132.895, -43.758, 0.15 ) }
    dend_35 { pt3dadd( -12.5738, 133.647, -43.929, 1.11 ) }
    dend_35 { pt3dadd( -12.5618, 134.212, -44.0465, 1.11 ) }
    dend_35 { pt3dadd( -12.5241, 135.593, -44.2917, 0.15 ) }
    dend_35 { pt3dadd( -12.5206, 135.753, -44.3287, 0.37 ) }
    dend_35 { pt3dadd( -12.5374, 136.792, -44.6406, 0.15 ) }
    dend_35 { pt3dadd( -12.561, 137.217, -44.7842, 0.15 ) }
    dend_35 { pt3dadd( -12.6718, 138.271, -45.155, 1.18 ) }
    dend_35 { pt3dadd( -12.7506, 138.815, -45.3546, 1.47 ) }
    dend_35 { pt3dadd( -13.128, 140.746, -46.0658, 0.15 ) }
    dend_35 { pt3dadd( -13.255, 141.309, -46.2768, 0.52 ) }
    dend_35 { pt3dadd( -13.337, 141.638, -46.3983, 0.52 ) }
    dend_35 { pt3dadd( -13.5824, 142.638, -46.7376, 0.22 ) }
    dend_35 { pt3dadd( -13.6155, 142.768, -46.775, 0.22 ) }
    dend_35 { pt3dadd( -13.7758, 143.355, -46.9174, 0.22 ) }
    dend_35 { pt3dadd( -14.0607, 144.389, -47.1044, 1.11 ) }
    dend_35 { pt3dadd( -14.2675, 145.156, -47.2567, 1.4 ) }
    dend_35 { pt3dadd( -14.6652, 146.707, -47.5891, 0.15 ) }
    dend_35 { pt3dadd( -14.9479, 147.852, -47.8444, 0.15 ) }
    dend_35 { pt3dadd( -15.1256, 148.565, -48.0019, 1.03 ) }
    dend_35 { pt3dadd( -15.2304, 148.979, -48.096, 1.18 ) }
    dend_35 { pt3dadd( -15.6154, 150.492, -48.4294, 0.15 ) }
    dend_35 { pt3dadd( -15.8678, 151.574, -48.6852, 1.03 ) }
    dend_35 { pt3dadd( -15.9351, 151.993, -48.7898, 1.33 ) }
    dend_35 { pt3dadd( -15.9751, 152.455, -48.916, 1.33 ) }
    dend_35 { pt3dadd( -15.989, 153.792, -49.2874, 0.15 ) }
    dend_35 { pt3dadd( -15.9545, 154.414, -49.4719, 0.15 ) }
    dend_35 { pt3dadd( -15.8422, 155.347, -49.7544, 0.88 ) }
    dend_35 { pt3dadd( -15.6482, 156.548, -50.1323, 0.15 ) }
    dend_35 { pt3dadd( -15.6361, 156.603, -50.1511, 0.15 ) }
    dend_35 { pt3dadd( -15.2695, 157.886, -50.6087, 0.15 ) }
    dend_35 { pt3dadd( -14.8215, 159.197, -51.0939, 1.33 ) }
    dend_35 { pt3dadd( -14.7232, 159.456, -51.1975, 1.33 ) }
    dend_35 { pt3dadd( -14.6991, 159.516, -51.2219, 1.33 ) }
    dend_35 { pt3dadd( -14.053, 161.119, -51.899, 0.15 ) }
    dend_35 { pt3dadd( -13.6663, 162.071, -52.312, 0.15 ) }
    dend_35 { pt3dadd( -13.6083, 162.208, -52.373, 0.15 ) }
    dend_35 { pt3dadd( -13.1157, 163.33, -52.8453, 1.18 ) }
    dend_35 { pt3dadd( -12.9534, 163.726, -53.0058, 1.4 ) }
    dend_35 { pt3dadd( -12.4613, 165.088, -53.5164, 0.15 ) }
    dend_35 { pt3dadd( -12.2186, 165.878, -53.7747, 0.15 ) }
    dend_35 { pt3dadd( -12.0767, 166.418, -53.9351, 1.11 ) }
    dend_35 { pt3dadd( -11.9373, 167.024, -54.0983, 1.11 ) }
    dend_35 { pt3dadd( -11.6782, 168.372, -54.4178, 0.22 ) }
    dend_35 { pt3dadd( -11.5696, 168.997, -54.5523, 0.22 ) }
    dend_35 { pt3dadd( -11.4131, 169.887, -54.7379, 0.81 ) }
    dend_35 { pt3dadd( -11.215, 170.907, -54.9505, 0.15 ) }
    dend_35 { pt3dadd( -11.1992, 170.983, -54.9667, 0.15 ) }
    dend_35 { pt3dadd( -10.9986, 171.845, -55.1652, 1.55 ) }
    dend_35 { pt3dadd( -10.8155, 172.536, -55.3322, 1.77 ) }
    dend_35 { pt3dadd( -10.3417, 174.165, -55.7615, 0.22 ) }
    dend_35 { pt3dadd( -10.068, 175.016, -55.9923, 0.15 ) }
    dend_35 { pt3dadd( -9.88914, 175.473, -56.1212, 0.37 ) }
    dend_35 { pt3dadd( -9.40894, 176.567, -56.4443, 0.15 ) }
    dend_35 { pt3dadd( -9.38354, 176.617, -56.46, 0.15 ) }
    dend_35 { pt3dadd( -8.95301, 177.339, -56.6842, 1.11 ) }
    dend_35 { pt3dadd( -8.58948, 177.877, -56.8341, 1.47 ) }
    dend_35 { pt3dadd( -7.88676, 178.805, -57.1073, 0.22 ) }
    dend_35 { pt3dadd( -7.8449, 178.856, -57.123, 0.22 ) }
    dend_35 { pt3dadd( -7.63566, 179.121, -57.2315, 0.37 ) }
    dend_35 { pt3dadd( -7.26802, 179.695, -57.5524, 0.15 ) }
    dend_35 { pt3dadd( -7.10256, 180.031, -57.777, 0.52 ) }
    dend_35 { pt3dadd( -6.9514, 180.581, -58.2221, 0.22 ) }
    dend_35 { pt3dadd( -6.88631, 181.135, -58.6983, 0.88 ) }
    dend_35 { pt3dadd( -6.89563, 182.262, -59.8972, 0.22 ) }
    dend_35 { pt3dadd( -7.0064, 182.968, -60.7692, 1.25 ) }
    dend_35 { pt3dadd( -7.06814, 183.193, -61.0721, 1.4 ) }
    dend_35 { pt3dadd( -7.38892, 184.012, -62.2953, 0.22 ) }
    dend_35 { pt3dadd( -7.50545, 184.232, -62.6465, 0.44 ) }
    dend_35 { pt3dadd( -8.2703, 185.385, -64.6555, 0.15 ) }
    dend_35 { pt3dadd( -8.59359, 185.806, -65.4233, 1.11 ) }
    dend_35 { pt3dadd( -8.66985, 185.9, -65.5964, 1.18 ) }
    dend_35 { pt3dadd( -9.13701, 186.486, -66.6424, 0.22 ) }
    dend_35 { pt3dadd( -9.29321, 186.688, -66.968, 0.74 ) }
    dend_35 { pt3dadd( -10.2835, 188.008, -68.9205, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_35 { pt3dadd( -10.6431, 188.522, -69.5681, 0.81 ) }
    dend_35 { pt3dadd( -10.8339, 188.827, -69.9239, 1.03 ) }
    dend_35 { pt3dadd( -11.3778, 189.756, -70.8882, 0.15 ) }
    dend_35 { pt3dadd( -11.6837, 190.326, -71.407, 0.81 ) }
    dend_35 { pt3dadd( -11.7086, 190.376, -71.4469, 0.81 ) }
    dend_35 { pt3dadd( -11.7596, 190.483, -71.5151, 0.81 ) }
    dend_35 { pt3dadd( -12.2707, 191.601, -72.1729, 0.22 ) }
    dend_35 { pt3dadd( -12.5856, 192.309, -72.5783, 0.22 ) }
    dend_35 { pt3dadd( -12.9972, 193.239, -73.0858, 1.18 ) }
    dend_35 { pt3dadd( -13.1728, 193.695, -73.3295, 1.69 ) }
    dend_35 { pt3dadd( -13.6872, 195.158, -74.0858, 0.22 ) }
    dend_35 { pt3dadd( -13.958, 196.079, -74.5096, 1.03 ) }
    dend_35 { pt3dadd( -14.0025, 196.265, -74.5781, 1.03 ) }
    dend_35 { pt3dadd( -14.0154, 196.34, -74.6002, 1.03 ) }
    dend_35 { pt3dadd( -14.2343, 197.9, -74.8967, 0.15 ) }
    dend_35 { pt3dadd( -14.2503, 198.018, -74.9123, 0.15 ) }
    dend_35 { pt3dadd( -14.4732, 199.525, -74.9916, 0.15 ) }
    dend_35 { pt3dadd( -14.5885, 200.201, -75.0025, 0.96 ) }
    dend_35 { pt3dadd( -14.6906, 200.708, -75.0164, 1.25 ) }
    dend_35 { pt3dadd( -14.9278, 201.729, -75.0477, 0.22 ) }
    dend_35 { pt3dadd( -15.0678, 202.276, -75.0657, 0.66 ) }
    dend_35 { pt3dadd( -15.3092, 203.243, -75.1197, 0.15 ) }
    dend_35 { pt3dadd( -15.5519, 204.224, -75.2191, 0.15 ) }
    dend_35 { pt3dadd( -15.8146, 205.294, -75.3223, 1.11 ) }
    dend_35 { pt3dadd( -15.9882, 206.02, -75.3876, 1.25 ) }
    dend_35 { pt3dadd( -16.2948, 207.291, -75.4758, 0.22 ) }
    dend_35 { pt3dadd( -16.3116, 207.348, -75.4784, 0.22 ) }
    dend_35 { pt3dadd( -16.8134, 208.72, -75.5131, 0.22 ) }
    dend_35 { pt3dadd( -17.3344, 209.924, -75.5153, 1.25 ) }
    dend_35 { pt3dadd( -17.5007, 210.264, -75.5059, 1.62 ) }
    dend_35 { pt3dadd( -18.1386, 211.416, -75.4711, 0.15 ) }
    dend_35 { pt3dadd( -19.0003, 212.808, -75.4267, 0.15 ) }
    dend_35 { pt3dadd( -19.3917, 213.418, -75.4112, 0.66 ) }
    dend_35 { pt3dadd( -19.5536, 213.666, -75.407, 0.66 ) }
    dend_35 { pt3dadd( -19.5895, 213.725, -75.4086, 0.66 ) }
    dend_35 { pt3dadd( -19.9422, 214.429, -75.4168, 0.15 ) }
    dend_35 { pt3dadd( -20.1796, 215.142, -75.4267, 0.88 ) }
    dend_35 { pt3dadd( -20.23, 215.355, -75.4293, 0.88 ) }
    dend_35 { pt3dadd( -20.4688, 216.523, -75.445, 0.22 ) }
    dend_35 { pt3dadd( -20.5943, 217.163, -75.4678, 0.52 ) }
    dend_35 { pt3dadd( -20.8529, 218.401, -75.5299, 0.22 ) }
    dend_35 { pt3dadd( -21.277, 220.326, -75.6514, 0.22 ) }
    dend_35 { pt3dadd( -21.459, 221.027, -75.7212, 0.96 ) }
    dend_35 { pt3dadd( -21.6131, 221.509, -75.7954, 0.96 ) }
    dend_35 { pt3dadd( -22.2412, 223.066, -76.1304, 0.15 ) }
    dend_35 { pt3dadd( -22.6129, 223.886, -76.3326, 0.15 ) }
    dend_35 { pt3dadd( -22.9358, 224.485, -76.511, 1.03 ) }
    dend_35 { pt3dadd( -23.5881, 225.524, -76.8901, 0.15 ) }
    dend_35 { pt3dadd( -24.1955, 226.427, -77.2502, 0.66 ) }
    dend_35 { pt3dadd( -24.7131, 227.121, -77.5636, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 50/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -6.49039, 47.127, -21.1444, 0.15 ) }
    dend_34 { pt3dadd( -7.85928, 48.6499, -21.9781, 0.15 ) }
    dend_34 { pt3dadd( -8.39469, 49.3942, -22.4315, 0.15 ) }
    dend_34 { pt3dadd( -8.46987, 49.5176, -22.5087, 0.15 ) }
    dend_34 { pt3dadd( -9.10584, 50.6641, -23.2378, 0.81 ) }
    dend_34 { pt3dadd( -9.48186, 51.3672, -23.6906, 1.11 ) }
    dend_34 { pt3dadd( -9.77088, 51.9088, -24.1169, 1.11 ) }
    dend_34 { pt3dadd( -10.2569, 52.9283, -24.9795, 0.22 ) }
    dend_34 { pt3dadd( -10.5715, 53.5543, -25.5895, 0.22 ) }
    dend_34 { pt3dadd( -11.0579, 54.4832, -26.5866, 1.69 ) }
    dend_34 { pt3dadd( -11.2763, 54.8953, -27.0623, 2.06 ) }
    dend_34 { pt3dadd( -12.2604, 56.7858, -29.2058, 0.22 ) }
    dend_34 { pt3dadd( -12.428, 57.1364, -29.603, 0.22 ) }
    dend_34 { pt3dadd( -12.4659, 57.2309, -29.7005, 0.22 ) }
    dend_34 { pt3dadd( -12.6456, 57.8147, -30.2658, 0.22 ) }
    dend_34 { pt3dadd( -12.7673, 58.3383, -30.7426, 0.81 ) }
    dend_34 { pt3dadd( -12.8672, 58.7552, -31.0668, 1.11 ) }
    dend_34 { pt3dadd( -13.1082, 59.6134, -31.5503, 0.74 ) }
    dend_34 { pt3dadd( -13.3568, 60.3409, -32.0239, 0.22 ) }
    dend_34 { pt3dadd( -13.3766, 60.3926, -32.0593, 0.22 ) }
    dend_34 { pt3dadd( -13.8041, 61.398, -32.7674, 0.22 ) }
    dend_34 { pt3dadd( -14.2375, 62.4306, -33.5568, 1.62 ) }
    dend_34 { pt3dadd( -14.541, 63.1555, -34.1275, 2.21 ) }
    dend_34 { pt3dadd( -15.436, 65.3348, -35.8786, 0.22 ) }
    dend_34 { pt3dadd( -15.8854, 66.4784, -36.8136, 1.33 ) }
    dend_34 { pt3dadd( -15.9809, 66.7458, -37.0286, 1.69 ) }
    dend_34 { pt3dadd( -16.7855, 69.34, -39.0353, 0.22 ) }
    dend_34 { pt3dadd( -16.8033, 69.4074, -39.0879, 0.22 ) }
    dend_34 { pt3dadd( -17.0108, 70.25, -39.7477, 0.22 ) }
    dend_34 { pt3dadd( -17.0233, 70.3024, -39.7853, 0.22 ) }
    dend_34 { pt3dadd( -17.2663, 71.481, -40.5652, 1.77 ) }
    dend_34 { pt3dadd( -17.3474, 72.0075, -40.8728, 2.14 ) }
    dend_34 { pt3dadd( -17.5651, 73.9302, -41.7889, 0.22 ) }
    dend_34 { pt3dadd( -17.5714, 74.0004, -41.8206, 0.22 ) }
    dend_34 { pt3dadd( -17.6346, 74.9673, -42.2261, 0.81 ) }
    dend_34 { pt3dadd( -17.6872, 76.0007, -42.635, 0.22 ) }
    dend_34 { pt3dadd( -17.7415, 77.4795, -43.1742, 1.4 ) }
    dend_34 { pt3dadd( -17.7627, 78.0401, -43.3696, 1.92 ) }
    dend_34 { pt3dadd( -17.7864, 78.453, -43.4981, 1.92 ) }
    dend_34 { pt3dadd( -17.9251, 80.3013, -44.056, 0.29 ) }
    dend_34 { pt3dadd( -17.9924, 80.9197, -44.2577, 0.29 ) }
    dend_34 { pt3dadd( -18.0733, 81.4737, -44.4407, 1.03 ) }
    dend_34 { pt3dadd( -18.0891, 81.546, -44.4638, 1.03 ) }
    dend_34 { pt3dadd( -18.2181, 82.012, -44.6277, 1.03 ) }
    dend_34 { pt3dadd( -18.4266, 82.5969, -44.8425, 0.74 ) }
    dend_34 { pt3dadd( -18.9598, 83.7424, -45.3082, 0.15 ) }
    dend_34 { pt3dadd( -18.9855, 83.7988, -45.3311, 0.15 ) }
    dend_34 { pt3dadd( -19.4027, 84.7133, -45.7498, 0.15 ) }
    dend_34 { pt3dadd( -19.8151, 85.6105, -46.1986, 1.33 ) }
    dend_34 { pt3dadd( -20.0174, 86.0351, -46.4258, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_34 { pt3dadd( -20.9067, 87.8656, -47.4444, 0.22 ) }
    dend_34 { pt3dadd( -21.3393, 88.7434, -47.9287, 0.15 ) }
    dend_34 { pt3dadd( -21.9535, 89.9553, -48.704, 1.25 ) }
    dend_34 { pt3dadd( -22.2889, 90.5952, -49.1567, 1.47 ) }
    dend_34 { pt3dadd( -22.8125, 91.5405, -49.8492, 0.15 ) }
    dend_34 { pt3dadd( -23.2912, 92.3639, -50.5319, 1.47 ) }
    dend_34 { pt3dadd( -23.4788, 92.6625, -50.8034, 1.62 ) }
    dend_34 { pt3dadd( -24.6989, 94.4779, -52.5049, 0.15 ) }
    dend_34 { pt3dadd( -24.9995, 94.9298, -52.9065, 0.37 ) }
    dend_34 { pt3dadd( -25.3747, 95.5405, -53.4325, 0.15 ) }
    dend_34 { pt3dadd( -26.3109, 97.1517, -54.8902, 1.47 ) }
    dend_34 { pt3dadd( -26.5077, 97.5051, -55.2126, 1.92 ) }
    dend_34 { pt3dadd( -27.1545, 98.7576, -56.4166, 0.22 ) }
    dend_34 { pt3dadd( -27.4027, 99.2943, -56.9295, 0.52 ) }
    dend_34 { pt3dadd( -27.8734, 100.429, -58.0336, 0.22 ) }
    dend_34 { pt3dadd( -28.3678, 101.737, -59.3631, 1.18 ) }
    dend_34 { pt3dadd( -28.4658, 102.025, -59.657, 1.25 ) }
    dend_34 { pt3dadd( -28.885, 103.444, -61.2255, 0.15 ) }
    dend_34 { pt3dadd( -28.9758, 103.801, -61.6456, 0.44 ) }
    dend_34 { pt3dadd( -29.0872, 104.242, -62.195, 0.15 ) }
    dend_34 { pt3dadd( -29.3436, 105.109, -63.2709, 0.44 ) }
    dend_34 { pt3dadd( -29.3556, 105.153, -63.3178, 0.44 ) }
    dend_34 { pt3dadd( -29.4973, 105.657, -63.812, 0.44 ) }
    dend_34 { pt3dadd( -29.6428, 106.173, -64.216, 0.22 ) }
    dend_34 { pt3dadd( -29.6581, 106.224, -64.2535, 0.22 ) }
    dend_34 { pt3dadd( -29.9074, 107.076, -64.8879, 1.47 ) }
    dend_34 { pt3dadd( -30.0226, 107.481, -65.1743, 1.62 ) }
    dend_34 { pt3dadd( -30.4544, 109.011, -66.2626, 0.22 ) }
    dend_34 { pt3dadd( -30.6581, 109.714, -66.7537, 0.74 ) }
    dend_34 { pt3dadd( -30.7437, 110.003, -66.9626, 0.74 ) }
    dend_34 { pt3dadd( -31.2072, 111.564, -68.0719, 0.15 ) }
    dend_34 { pt3dadd( -31.4594, 112.424, -68.6801, 1.11 ) }
    dend_34 { pt3dadd( -31.4994, 112.554, -68.7718, 1.11 ) }
    dend_34 { pt3dadd( -31.6341, 112.958, -69.0456, 1.11 ) }
    dend_34 { pt3dadd( -31.9846, 114.03, -69.7065, 0.15 ) }
    dend_34 { pt3dadd( -32.1512, 114.584, -69.9767, 0.52 ) }
    dend_34 { pt3dadd( -32.174, 114.666, -70.0031, 0.52 ) }
    dend_34 { pt3dadd( -32.285, 115.101, -70.1591, 0.52 ) }
    dend_34 { pt3dadd( -32.3128, 115.212, -70.2085, 0.52 ) }
    dend_34 { pt3dadd( -32.6242, 116.516, -70.8492, 0.22 ) }
    dend_34 { pt3dadd( -32.8344, 117.42, -71.3102, 1.47 ) }
    dend_34 { pt3dadd( -32.9147, 117.765, -71.5084, 1.47 ) }
    dend_34 { pt3dadd( -33.3878, 119.534, -72.625, 0.15 ) }
    dend_34 { pt3dadd( -33.7083, 120.5, -73.3608, 0.88 ) }
    dend_34 { pt3dadd( -33.7553, 120.618, -73.4639, 0.88 ) }
    dend_34 { pt3dadd( -33.9057, 120.935, -73.771, 0.88 ) }
    dend_34 { pt3dadd( -34.5195, 122.056, -74.9947, 0.22 ) }
    dend_34 { pt3dadd( -34.8418, 122.589, -75.6188, 0.74 ) }
    dend_34 { pt3dadd( -35.6521, 123.825, -77.1338, 0.15 ) }
    dend_34 { pt3dadd( -36.2589, 124.688, -78.1859, 1.69 ) }
    dend_34 { pt3dadd( -36.5979, 125.139, -78.7438, 1.99 ) }
    dend_34 { pt3dadd( -38.2239, 127.187, -81.3192, 0.22 ) }
    dend_34 { pt3dadd( -38.9132, 127.995, -82.3683, 0.22 ) }
    dend_34 { pt3dadd( -38.9431, 128.03, -82.4133, 0.22 ) }
    dend_34 { pt3dadd( -39.5101, 128.666, -83.2759, 0.96 ) }
    dend_34 { pt3dadd( -40.2165, 129.388, -84.3407, 0.22 ) }
    dend_34 { pt3dadd( -40.2483, 129.418, -84.3878, 0.22 ) }
    dend_34 { pt3dadd( -41.1479, 130.145, -85.5539, 1.33 ) }
    dend_34 { pt3dadd( -41.486, 130.391, -85.9768, 1.62 ) }
    dend_34 { pt3dadd( -43.3593, 131.646, -88.2301, 0.22 ) }
    dend_34 { pt3dadd( -44.1032, 132.051, -89.0892, 1.18 ) }
    dend_34 { pt3dadd( -44.2411, 132.113, -89.2362, 1.47 ) }
    dend_34 { pt3dadd( -45.597, 132.663, -90.568, 0.22 ) }
    dend_34 { pt3dadd( -46.1976, 132.877, -91.0966, 1.18 ) }
    dend_34 { pt3dadd( -46.6906, 133.024, -91.4903, 1.55 ) }
    dend_34 { pt3dadd( -48.7408, 133.513, -92.8538, 0.22 ) }
    dend_34 { pt3dadd( -48.8263, 133.532, -92.9124, 0.22 ) }
    dend_34 { pt3dadd( -49.3209, 133.644, -93.2536, 0.37 ) }
    dend_34 { pt3dadd( -49.6345, 133.723, -93.4665, 0.37 ) }
    dend_34 { pt3dadd( -50.1562, 133.906, -93.8234, 0.15 ) }
    dend_34 { pt3dadd( -50.2635, 133.963, -93.8916, 0.15 ) }
    dend_34 { pt3dadd( -50.8284, 134.397, -94.3215, 0.15 ) }
    dend_34 { pt3dadd( -51.4698, 134.954, -94.867, 1.11 ) }
    dend_34 { pt3dadd( -51.6185, 135.102, -95.0016, 1.11 ) }
    dend_34 { pt3dadd( -52.6182, 136.192, -95.9341, 0.15 ) }
    dend_34 { pt3dadd( -53.4516, 137.209, -96.7162, 2.06 ) }
    dend_34 { pt3dadd( -54.8789, 139.101, -98.0488, 0.22 ) }
    dend_34 { pt3dadd( -55.1817, 139.547, -98.3336, 0.81 ) }
    dend_34 { pt3dadd( -55.8496, 140.67, -99.0096, 0.15 ) }
    dend_34 { pt3dadd( -55.8819, 140.73, -99.0433, 0.15 ) }
    dend_34 { pt3dadd( -56.2322, 141.512, -99.4256, 0.96 ) }
    dend_34 { pt3dadd( -56.2717, 141.613, -99.47, 0.96 ) }
    dend_34 { pt3dadd( -56.3616, 141.873, -99.5549, 0.96 ) }
    dend_34 { pt3dadd( -56.7022, 142.881, -99.9239, 0.22 ) }
    dend_34 { pt3dadd( -56.9709, 143.698, -100.247, 0.22 ) }
    dend_34 { pt3dadd( -57.1673, 144.266, -100.48, 0.74 ) }
    dend_34 { pt3dadd( -57.3491, 144.764, -100.688, 0.74 ) }
    dend_34 { pt3dadd( -57.9399, 146.311, -101.331, 0.22 ) }
    dend_34 { pt3dadd( -58.2255, 147.046, -101.617, 0.22 ) }
    dend_34 { pt3dadd( -58.2528, 147.114, -101.642, 0.22 ) }
    dend_34 { pt3dadd( -58.8286, 148.588, -102.159, 2.06 ) }
    dend_34 { pt3dadd( -58.9804, 148.997, -102.319, 2.06 ) }
    dend_34 { pt3dadd( -59.7574, 151.091, -103.189, 0.22 ) }
    dend_34 { pt3dadd( -60.1733, 152.315, -103.763, 0.22 ) }
    dend_34 { pt3dadd( -60.6045, 153.677, -104.489, 1.25 ) }
    dend_34 { pt3dadd( -60.6717, 153.919, -104.638, 1.55 ) }
    dend_34 { pt3dadd( -61.1291, 155.912, -106.067, 0.22 ) }
    dend_34 { pt3dadd( -61.2096, 156.358, -106.425, 0.22 ) }
    dend_34 { pt3dadd( -61.2192, 157.481, -107.652, 0.22 ) }
    dend_34 { pt3dadd( -61.21, 157.567, -107.762, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_34 { pt3dadd( -61.0312, 158.386, -108.885, 1.25 ) }
    dend_34 { pt3dadd( -61.0168, 158.438, -108.952, 1.25 ) }
    dend_34 { pt3dadd( -60.8692, 158.888, -109.471, 1.62 ) }
    dend_34 { pt3dadd( -59.9261, 161.916, -112.501, 0.22 ) }
    dend_34 { pt3dadd( -59.9105, 161.972, -112.55, 0.22 ) }
    dend_34 { pt3dadd( -59.6308, 163.046, -113.373, 0.96 ) }
    dend_34 { pt3dadd( -59.3717, 164.118, -114.126, 0.22 ) }
    dend_34 { pt3dadd( -59.2271, 164.781, -114.549, 0.66 ) }
    dend_34 { pt3dadd( -59.009, 165.952, -115.214, 0.22 ) }
    dend_34 { pt3dadd( -58.8614, 167.066, -115.742, 1.18 ) }
    dend_34 { pt3dadd( -58.7995, 167.613, -116.009, 1.33 ) }
    dend_34 { pt3dadd( -58.63, 169.722, -117.167, 0.22 ) }
    dend_34 { pt3dadd( -58.5846, 170.557, -117.66, 0.66 ) }
    dend_34 { pt3dadd( -58.528, 172.224, -118.672, 0.15 ) }
    dend_34 { pt3dadd( -58.5179, 173.265, -119.316, 1.03 ) }
    dend_34 { pt3dadd( -58.5267, 173.62, -119.529, 1.33 ) }
    dend_34 { pt3dadd( -58.6143, 175.212, -120.426, 0.22 ) }
    dend_34 { pt3dadd( -58.7002, 176.214, -120.952, 0.52 ) }
    dend_34 { pt3dadd( -58.8024, 177.361, -121.573, 0.15 ) }
    dend_34 { pt3dadd( -58.8122, 177.459, -121.622, 0.15 ) }
    dend_34 { pt3dadd( -58.8437, 177.841, -121.814, 0.22 ) }
    dend_34 { pt3dadd( -58.9071, 178.628, -122.23, 0.15 ) }
    dend_34 { pt3dadd( -59.0115, 179.96, -122.951, 0.81 ) }
    dend_34 { pt3dadd( -59.0816, 180.8, -123.446, 0.15 ) }
    dend_34 { pt3dadd( -59.151, 181.569, -123.918, 0.96 ) }
    dend_34 { pt3dadd( -59.2224, 182.33, -124.386, 1.4 ) }
    dend_34 { pt3dadd( -59.3226, 183.45, -125.158, 0.22 ) }
    dend_34 { pt3dadd( -59.3321, 183.556, -125.236, 0.22 ) }
    dend_34 { pt3dadd( -59.3951, 184.286, -125.746, 1.11 ) }
    dend_34 { pt3dadd( -59.473, 185.112, -126.278, 1.55 ) }
    dend_34 { pt3dadd( -59.4841, 185.234, -126.352, 1.55 ) }
    dend_34 { pt3dadd( -59.7067, 187.463, -127.511, 0.15 ) }
    dend_34 { pt3dadd( -59.72, 187.604, -127.575, 0.15 ) }
    dend_34 { pt3dadd( -59.9456, 188.876, -128.041, 0.15 ) }
    dend_34 { pt3dadd( -60.1578, 189.721, -128.29, 0.96 ) }
    dend_34 { pt3dadd( -60.1839, 189.792, -128.303, 0.96 ) }
    dend_34 { pt3dadd( -60.4204, 190.246, -128.344, 0.96 ) }
    dend_34 { pt3dadd( -60.5742, 190.431, -128.352, 0.96 ) }
    dend_34 { pt3dadd( -62.1426, 191.884, -128.618, 0.15 ) }
    dend_34 { pt3dadd( -62.2105, 191.934, -128.635, 0.15 ) }
    dend_34 { pt3dadd( -62.7868, 192.303, -128.841, 0.74 ) }
    dend_34 { pt3dadd( -63.5747, 192.76, -129.159, 0.29 ) }
    dend_34 { pt3dadd( -65.0274, 193.527, -129.792, 0.15 ) }
    dend_34 { pt3dadd( -65.7939, 193.892, -130.139, 0.96 ) }
    dend_34 { pt3dadd( -66.2664, 194.089, -130.363, 1.33 ) }
    dend_34 { pt3dadd( -67.9152, 194.751, -131.142, 0.15 ) }
    dend_34 { pt3dadd( -68.3622, 194.924, -131.356, 0.81 ) }
    dend_34 { pt3dadd( -68.7014, 195.05, -131.52, 0.81 ) }
    dend_34 { pt3dadd( -69.4797, 195.327, -131.865, 0.15 ) }
    dend_34 { pt3dadd( -69.83, 195.442, -132.005, 0.37 ) }
    dend_34 { pt3dadd( -70.6036, 195.67, -132.299, 0.15 ) }
    dend_34 { pt3dadd( -70.6632, 195.686, -132.315, 0.15 ) }
    dend_34 { pt3dadd( -71.339, 195.85, -132.53, 0.74 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 53/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 24.4859, -0.51102, -5.57235, 0.66 ) }
    dend_23 { pt3dadd( 26.4713, -0.93193, -4.84184, 0.66 ) }
    dend_23 { pt3dadd( 27.3528, -1.03847, -4.49307, 0.96 ) }
    dend_23 { pt3dadd( 27.4176, -1.03862, -4.46887, 0.96 ) }
    dend_23 { pt3dadd( 28.3785, -0.99266, -4.16283, 0.96 ) }
    dend_23 { pt3dadd( 28.4367, -0.99527, -4.15213, 0.96 ) }
    dend_23 { pt3dadd( 28.9557, -1.07712, -4.13033, 1.11 ) }
    dend_23 { pt3dadd( 29.0225, -1.09221, -4.1409, 1.11 ) }
    dend_23 { pt3dadd( 29.9289, -1.35268, -4.33353, 0.52 ) }
    dend_23 { pt3dadd( 30.8738, -1.66455, -4.57326, 0.52 ) }
    dend_23 { pt3dadd( 32.3397, -2.23092, -5.03074, 1.47 ) }
    dend_23 { pt3dadd( 33.669, -2.79382, -5.4813, 2.58 ) }
    dend_23 { pt3dadd( 34.6382, -3.26801, -5.85118, 3.09 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 66/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 24.4859, -0.51102, -5.57235, 0.88 ) }
    dend_22 { pt3dadd( 24.1176, -1.37402, -6.60211, 0.88 ) }
    dend_22 { pt3dadd( 23.8727, -2.07296, -7.43326, 0.52 ) }
    dend_22 { pt3dadd( 23.7355, -2.50847, -7.93305, 0.88 ) }
    dend_22 { pt3dadd( 23.6376, -2.84167, -8.30595, 0.88 ) }
    dend_22 { pt3dadd( 23.4145, -3.66523, -9.16711, 0.29 ) }
    dend_22 { pt3dadd( 23.4051, -3.70363, -9.2042, 0.29 ) }
    dend_22 { pt3dadd( 23.3641, -3.98987, -9.45867, 0.96 ) }
    dend_22 { pt3dadd( 23.3251, -4.33236, -9.72412, 0.96 ) }
    dend_22 { pt3dadd( 23.3182, -4.37049, -9.76199, 0.96 ) }
    dend_22 { pt3dadd( 23.1314, -4.93988, -10.4704, 0.15 ) }
    dend_22 { pt3dadd( 22.9999, -5.23428, -10.8658, 0.15 ) }
    dend_22 { pt3dadd( 22.883, -5.47518, -11.2101, 1.18 ) }
    dend_22 { pt3dadd( 22.6882, -5.87188, -11.8457, 1.18 ) }
    dend_22 { pt3dadd( 22.2448, -6.80342, -13.3706, 0.22 ) }
    dend_22 { pt3dadd( 22.0942, -7.11974, -13.8948, 1.99 ) }
    dend_22 { pt3dadd( 22.0009, -7.31704, -14.2241, 2.58 ) }
    dend_22 { pt3dadd( 21.9006, -7.55632, -14.5994, 2.28 ) }
    dend_22 { pt3dadd( 21.5616, -8.56136, -15.9476, 0.52 ) }
    dend_22 { pt3dadd( 21.4438, -8.98322, -16.4153, 0.29 ) }
    dend_22 { pt3dadd( 21.3772, -9.30429, -16.7052, 0.96 ) }
    dend_22 { pt3dadd( 21.3364, -9.58859, -16.9766, 1.18 ) }
    dend_22 { pt3dadd( 21.253, -10.3211, -17.6994, 0.37 ) }
    dend_22 { pt3dadd( 21.1839, -11.0116, -18.3801, 1.77 ) }
    dend_22 { pt3dadd( 21.1606, -11.3472, -18.7011, 2.28 ) }
    dend_22 { pt3dadd( 21.1422, -11.7629, -19.101, 2.14 ) }
    dend_22 { pt3dadd( 21.0688, -13.1274, -20.3698, 0.29 ) }
    dend_22 { pt3dadd( 21.0326, -13.7194, -20.913, 1.33 ) }
    dend_22 { pt3dadd( 21.0142, -13.95, -21.1147, 2.28 ) }
    dend_22 { pt3dadd( 20.9531, -14.6045, -21.6738, 1.4 ) }
    dend_22 { pt3dadd( 20.8325, -15.5605, -22.4521, 0.22 ) }
    dend_22 { pt3dadd( 20.7435, -16.1061, -22.8695, 0.22 ) }
    dend_22 { pt3dadd( 20.7346, -16.1502, -22.9002, 0.22 ) }
    dend_22 { pt3dadd( 20.5363, -17.0569, -23.5473, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_22 { pt3dadd( 20.4275, -17.532, -23.8892, 2.43 ) }
    dend_22 { pt3dadd( 20.1574, -18.6107, -24.6589, 0.22 ) }
    dend_22 { pt3dadd( 20.0485, -19.0568, -24.9929, 0.22 ) }
    dend_22 { pt3dadd( 19.9686, -19.4372, -25.2776, 0.81 ) }
    dend_22 { pt3dadd( 19.9245, -19.663, -25.4378, 1.11 ) }
    dend_22 { pt3dadd( 19.9073, -19.7597, -25.5013, 1.11 ) }
    dend_22 { pt3dadd( 19.8762, -20.0001, -25.6433, 1.11 ) }
    dend_22 { pt3dadd( 19.7902, -20.9152, -26.1339, 0.37 ) }
    dend_22 { pt3dadd( 19.738, -21.5716, -26.4764, 0.37 ) }
    dend_22 { pt3dadd( 19.6725, -22.7249, -27.0464, 1.92 ) }
    dend_22 { pt3dadd( 19.65, -23.1893, -27.2762, 2.58 ) }
    dend_22 { pt3dadd( 19.6035, -24.4281, -27.8794, 0.29 ) }
    dend_22 { pt3dadd( 19.5917, -25.0968, -28.2014, 0.29 ) }
    dend_22 { pt3dadd( 19.5916, -25.1394, -28.221, 0.29 ) }
    dend_22 { pt3dadd( 19.5962, -25.742, -28.502, 0.29 ) }
    dend_22 { pt3dadd( 19.6106, -26.4416, -28.8246, 1.25 ) }
    dend_22 { pt3dadd( 19.6166, -26.8194, -28.9972, 1.69 ) }
    dend_22 { pt3dadd( 19.6084, -27.9615, -29.5561, 0.15 ) }
    dend_22 { pt3dadd( 19.5983, -28.5667, -29.8652, 0.15 ) }
    dend_22 { pt3dadd( 19.5818, -29.0332, -30.1097, 1.25 ) }
    dend_22 { pt3dadd( 19.5636, -29.3506, -30.2799, 1.55 ) }
    dend_22 { pt3dadd( 19.5428, -29.8583, -30.5461, 0.59 ) }
    dend_22 { pt3dadd( 19.546, -30.869, -31.0737, 0.22 ) }
    dend_22 { pt3dadd( 19.5618, -31.2227, -31.2555, 0.22 ) }
    dend_22 { pt3dadd( 19.6189, -31.7007, -31.4964, 1.33 ) }
    dend_22 { pt3dadd( 19.6679, -32.0066, -31.6432, 1.47 ) }
    dend_22 { pt3dadd( 19.8778, -33.2706, -32.2108, 0.22 ) }
    dend_22 { pt3dadd( 20.0463, -34.2603, -32.6227, 1.84 ) }
    dend_22 { pt3dadd( 20.0771, -34.4284, -32.6867, 2.14 ) }
    dend_22 { pt3dadd( 20.3429, -36.0061, -33.2812, 0.22 ) }
    dend_22 { pt3dadd( 20.4706, -36.8609, -33.5971, 0.52 ) }
    dend_22 { pt3dadd( 20.5858, -37.8223, -33.9495, 0.22 ) }
    dend_22 { pt3dadd( 20.6284, -38.4114, -34.1611, 1.47 ) }
    dend_22 { pt3dadd( 20.6371, -38.8442, -34.3144, 1.77 ) }
    dend_22 { pt3dadd( 20.6265, -39.8821, -34.6891, 0.15 ) }
    dend_22 { pt3dadd( 20.5976, -40.3075, -34.8447, 0.15 ) }
    dend_22 { pt3dadd( 20.572, -40.6238, -34.978, 0.37 ) }
    dend_22 { pt3dadd( 20.5401, -40.9838, -35.1465, 0.37 ) }
    dend_22 { pt3dadd( 20.4987, -41.4957, -35.4009, 0.22 ) }
    dend_22 { pt3dadd( 20.4712, -41.9708, -35.6426, 0.96 ) }
    dend_22 { pt3dadd( 20.4703, -42.3403, -35.8318, 1.4 ) }
    dend_22 { pt3dadd( 20.5066, -43.4657, -36.4016, 0.22 ) }
    dend_22 { pt3dadd( 20.5106, -43.5219, -36.4287, 0.22 ) }
    dend_22 { pt3dadd( 20.5504, -43.9186, -36.6207, 0.22 ) }
    dend_22 { pt3dadd( 20.5925, -44.4283, -36.8627, 1.11 ) }
    dend_22 { pt3dadd( 20.6202, -44.8597, -37.0561, 1.47 ) }
    dend_22 { pt3dadd( 20.6428, -45.2291, -37.2161, 1.62 ) }
    dend_22 { pt3dadd( 20.6792, -45.9002, -37.4851, 0.59 ) }
    dend_22 { pt3dadd( 20.7217, -46.7858, -37.8521, 0.22 ) }
    dend_22 { pt3dadd( 20.7434, -47.3899, -38.1084, 0.22 ) }
    dend_22 { pt3dadd( 20.7764, -47.8863, -38.3267, 0.44 ) }
    dend_22 { pt3dadd( 20.7829, -47.9429, -38.3521, 0.44 ) }
    dend_22 { pt3dadd( 20.8746, -48.5613, -38.6298, 0.22 ) }
    dend_22 { pt3dadd( 20.9887, -49.1763, -38.9024, 1.25 ) }
    dend_22 { pt3dadd( 21.0774, -49.6462, -39.1058, 1.4 ) }
    dend_22 { pt3dadd( 21.2133, -50.4658, -39.4689, 0.22 ) }
    dend_22 { pt3dadd( 21.3024, -51.1529, -39.7756, 1.33 ) }
    dend_22 { pt3dadd( 21.3263, -51.4707, -39.9151, 1.92 ) }
    dend_22 { pt3dadd( 21.3277, -51.5209, -39.9369, 1.92 ) }
    dend_22 { pt3dadd( 21.3203, -52.8175, -40.4741, 0.22 ) }
    dend_22 { pt3dadd( 21.3046, -53.3154, -40.6741, 0.22 ) }
    dend_22 { pt3dadd( 21.2776, -53.7749, -40.8505, 1.18 ) }
    dend_22 { pt3dadd( 21.2263, -54.4956, -41.0961, 1.84 ) }
    dend_22 { pt3dadd( 21.1588, -55.7438, -41.4795, 0.22 ) }
    dend_22 { pt3dadd( 21.1301, -56.4088, -41.6643, 0.22 ) }
    dend_22 { pt3dadd( 21.1203, -56.8605, -41.7734, 1.03 ) }
    dend_22 { pt3dadd( 21.1158, -57.1899, -41.8407, 1.03 ) }
    dend_22 { pt3dadd( 21.0861, -58.3176, -42.0358, 0.22 ) }
    dend_22 { pt3dadd( 21.074, -59.0001, -42.1274, 0.96 ) }
    dend_22 { pt3dadd( 21.0609, -59.342, -42.1596, 1.25 ) }
    dend_22 { pt3dadd( 21.0588, -59.3964, -42.1642, 1.25 ) }
    dend_22 { pt3dadd( 20.9981, -60.3905, -42.2625, 0.22 ) }
    dend_22 { pt3dadd( 20.9488, -60.9596, -42.3022, 0.88 ) }
    dend_22 { pt3dadd( 20.9411, -61.0136, -42.3056, 0.88 ) }
    dend_22 { pt3dadd( 20.8524, -61.3965, -42.3235, 0.88 ) }
    dend_22 { pt3dadd( 20.8361, -61.4566, -42.327, 0.88 ) }
    dend_22 { pt3dadd( 20.6036, -62.1978, -42.3626, 0.15 ) }
    dend_22 { pt3dadd( 20.3794, -62.8956, -42.4039, 0.52 ) }
    dend_22 { pt3dadd( 20.1895, -63.5126, -42.4437, 0.15 ) }
    dend_22 { pt3dadd( 20.0321, -64.0526, -42.4874, 1.4 ) }
    dend_22 { pt3dadd( 19.8956, -64.5471, -42.5327, 1.55 ) }
    dend_22 { pt3dadd( 19.588, -65.7351, -42.6623, 0.22 ) }
    dend_22 { pt3dadd( 19.4357, -66.4639, -42.7652, 0.22 ) }
    dend_22 { pt3dadd( 19.3589, -66.9062, -42.8507, 1.03 ) }
    dend_22 { pt3dadd( 19.31, -67.3567, -42.9386, 1.4 ) }
    dend_22 { pt3dadd( 19.3075, -67.4103, -42.9495, 1.4 ) }
    dend_22 { pt3dadd( 19.3125, -67.6377, -43.0009, 1.4 ) }
    dend_22 { pt3dadd( 19.4233, -68.5994, -43.2659, 0.15 ) }
    dend_22 { pt3dadd( 19.4789, -69.0368, -43.3859, 0.15 ) }
    dend_22 { pt3dadd( 19.5389, -69.5149, -43.5123, 0.44 ) }
    dend_22 { pt3dadd( 19.5459, -69.5894, -43.5318, 0.44 ) }
    dend_22 { pt3dadd( 19.558, -69.8231, -43.5883, 0.44 ) }
    dend_22 { pt3dadd( 19.5615, -70.4403, -43.7309, 0.15 ) }
    dend_22 { pt3dadd( 19.5385, -71.1215, -43.8828, 0.15 ) }
    dend_22 { pt3dadd( 19.512, -71.629, -43.9931, 1.4 ) }
    dend_22 { pt3dadd( 19.4696, -72.1884, -44.1133, 1.77 ) }
    dend_22 { pt3dadd( 19.433, -73.1101, -44.31, 0.22 ) }
    dend_22 { pt3dadd( 19.4277, -73.566, -44.4046, 0.59 ) }
    dend_22 { pt3dadd( 19.447, -73.8488, -44.4558, 0.59 ) }
    dend_22 { pt3dadd( 19.5157, -74.3139, -44.5284, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_22 { pt3dadd( 19.5285, -74.3741, -44.5378, 0.22 ) }
    dend_22 { pt3dadd( 19.7243, -75.0845, -44.6497, 0.22 ) }
    dend_22 { pt3dadd( 19.7399, -75.1358, -44.6585, 0.22 ) }
    dend_22 { pt3dadd( 19.9949, -75.9309, -44.8007, 1.18 ) }
    dend_22 { pt3dadd( 20.0623, -76.1468, -44.8413, 1.77 ) }
    dend_22 { pt3dadd( 20.521, -77.5929, -45.1269, 0.22 ) }
    dend_22 { pt3dadd( 20.6642, -78.0603, -45.206, 0.59 ) }
    dend_22 { pt3dadd( 20.9149, -78.9081, -45.3341, 0.22 ) }
    dend_22 { pt3dadd( 21.0911, -79.4811, -45.4153, 1.03 ) }
    dend_22 { pt3dadd( 21.2137, -79.8576, -45.4648, 1.25 ) }
    dend_22 { pt3dadd( 21.4111, -80.4249, -45.5264, 0.88 ) }
    dend_22 { pt3dadd( 21.7681, -81.3845, -45.5892, 0.22 ) }
    dend_22 { pt3dadd( 21.7862, -81.4355, -45.5918, 0.22 ) }
    dend_22 { pt3dadd( 21.9057, -81.7742, -45.602, 0.22 ) }
    dend_22 { pt3dadd( 21.9968, -82.0877, -45.6206, 0.96 ) }
    dend_22 { pt3dadd( 22.082, -82.5401, -45.6721, 1.25 ) }
    dend_22 { pt3dadd( 22.0891, -82.5934, -45.6818, 1.25 ) }
    dend_22 { pt3dadd( 22.1308, -82.9245, -45.7629, 1.25 ) }
    dend_22 { pt3dadd( 22.1384, -82.9848, -45.7769, 1.25 ) }
    dend_22 { pt3dadd( 22.2614, -83.991, -46.001, 0.22 ) }
    dend_22 { pt3dadd( 22.3444, -84.6644, -46.1587, 0.22 ) }
    dend_22 { pt3dadd( 22.4355, -85.5609, -46.3812, 0.22 ) }
    dend_22 { pt3dadd( 22.4778, -86.0299, -46.5231, 1.11 ) }
    dend_22 { pt3dadd( 22.5083, -86.4881, -46.6805, 1.55 ) }
    dend_22 { pt3dadd( 22.5167, -86.8138, -46.8038, 1.33 ) }
    dend_22 { pt3dadd( 22.5088, -87.3928, -47.0451, 0.96 ) }
    dend_22 { pt3dadd( 22.4461, -88.1458, -47.354, 0.44 ) }
    dend_22 { pt3dadd( 22.2691, -89.1681, -47.7661, 0.15 ) }
    dend_22 { pt3dadd( 22.1386, -89.7637, -47.9749, 0.15 ) }
    dend_22 { pt3dadd( 22.0317, -90.1943, -48.1064, 0.81 ) }
    dend_22 { pt3dadd( 21.9199, -90.6208, -48.2128, 1.11 ) }
    dend_22 { pt3dadd( 21.6978, -91.5379, -48.3113, 0.22 ) }
    dend_22 { pt3dadd( 21.6315, -91.874, -48.3048, 0.37 ) }
    dend_22 { pt3dadd( 21.4899, -92.6816, -48.2045, 0.22 ) }
    dend_22 { pt3dadd( 21.4523, -92.9605, -48.1628, 0.88 ) }
    dend_22 { pt3dadd( 21.4362, -93.1229, -48.1412, 1.18 ) }
    dend_22 { pt3dadd( 21.3149, -94.4325, -48.0187, 0.22 ) }
    dend_22 { pt3dadd( 21.2712, -94.9987, -47.997, 0.22 ) }
    dend_22 { pt3dadd( 21.2278, -95.329, -48.0111, 0.81 ) }
    dend_22 { pt3dadd( 21.1255, -95.8293, -48.0842, 0.59 ) }
    dend_22 { pt3dadd( 20.9432, -96.5343, -48.2296, 0.22 ) }
    dend_22 { pt3dadd( 20.803, -96.958, -48.37, 0.59 ) }
    dend_22 { pt3dadd( 20.7388, -97.1026, -48.4362, 0.59 ) }
    dend_22 { pt3dadd( 20.2755, -98.0227, -48.9107, 0.22 ) }
    dend_22 { pt3dadd( 19.9126, -98.6939, -49.2864, 0.66 ) }
    dend_22 { pt3dadd( 19.7347, -98.9972, -49.4681, 0.88 ) }
    dend_22 { pt3dadd( 19.1607, -99.9087, -50.0481, 0.22 ) }
    dend_22 { pt3dadd( 18.6911, -100.617, -50.5118, 0.22 ) }
    dend_22 { pt3dadd( 18.5321, -100.839, -50.6662, 0.88 ) }
    dend_22 { pt3dadd( 18.5035, -100.875, -50.6934, 0.88 ) }
    dend_22 { pt3dadd( 18.1699, -101.316, -51.0182, 1.11 ) }
    dend_22 { pt3dadd( 18.1442, -101.355, -51.045, 1.11 ) }
    dend_22 { pt3dadd( 17.8957, -101.832, -51.336, 1.11 ) }
    dend_22 { pt3dadd( 17.5795, -102.543, -51.767, 0.15 ) }
    dend_22 { pt3dadd( 17.4076, -102.978, -52.0248, 0.15 ) }
    dend_22 { pt3dadd( 17.2132, -103.487, -52.3304, 0.88 ) }
    dend_22 { pt3dadd( 16.8964, -104.388, -52.8841, 0.15 ) }
    dend_22 { pt3dadd( 16.7728, -104.786, -53.1286, 0.88 ) }
    dend_22 { pt3dadd( 16.7622, -104.831, -53.1567, 0.88 ) }
    dend_22 { pt3dadd( 16.6668, -105.438, -53.5175, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 60/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 25.9744, 12.4043, 0.545216, 0.74 ) }
    dend_18 { pt3dadd( 28.2343, 12.5557, -1.31434, 0.74 ) }
    dend_18 { pt3dadd( 29.6754, 12.6416, -2.2872, 1.25 ) }
    dend_18 { pt3dadd( 31.6758, 12.7603, -3.48614, 0.37 ) }
    dend_18 { pt3dadd( 32.7122, 12.8393, -4.05504, 0.52 ) }
    dend_18 { pt3dadd( 33.5082, 12.9316, -4.44711, 0.96 ) }
    dend_18 { pt3dadd( 34.7908, 13.1476, -5.00507, 1.55 ) }
    dend_18 { pt3dadd( 36.5487, 13.7396, -5.07563, 0.22 ) }
    dend_18 { pt3dadd( 36.6201, 13.7775, -5.04621, 0.22 ) }
    dend_18 { pt3dadd( 37.0056, 14.0486, -4.76666, 0.22 ) }
    dend_18 { pt3dadd( 37.9323, 14.8276, -3.95684, 1.62 ) }
    dend_18 { pt3dadd( 38.4437, 15.3213, -3.4844, 1.99 ) }
    dend_18 { pt3dadd( 40.0745, 17.0466, -1.92748, 0.44 ) }
    dend_18 { pt3dadd( 40.6285, 17.6245, -1.48318, 0.44 ) }
    dend_18 { pt3dadd( 41.3156, 18.2573, -1.03534, 0.44 ) }
    dend_18 { pt3dadd( 41.4554, 18.3718, -0.965079, 0.44 ) }
    dend_18 { pt3dadd( 42.3069, 18.9942, -0.669221, 0.44 ) }
    dend_18 { pt3dadd( 42.3764, 19.0436, -0.654384, 0.44 ) }
    dend_18 { pt3dadd( 43.4455, 19.8005, -0.638863, 1.11 ) }
    dend_18 { pt3dadd( 44.0633, 20.19, -0.596551, 2.21 ) }
    dend_18 { pt3dadd( 44.6925, 20.5488, -0.530241, 2.43 ) }
    dend_18 { pt3dadd( 44.7675, 20.5897, -0.520142, 2.43 ) }
    dend_18 { pt3dadd( 45.4821, 20.959, -0.40467, 2.14 ) }
    dend_18 { pt3dadd( 46.0627, 21.2558, -0.296048, 1.77 ) }
    dend_18 { pt3dadd( 47.5641, 22.0086, 0.0370137, 0.59 ) }
    dend_18 { pt3dadd( 47.6496, 22.0527, 0.0568997, 0.59 ) }
    dend_18 { pt3dadd( 48.3273, 22.3912, 0.212346, 0.59 ) }
    dend_18 { pt3dadd( 48.6091, 22.5309, 0.270906, 0.59 ) }
    dend_18 { pt3dadd( 48.9061, 22.6758, 0.325065, 0.66 ) }
    dend_18 { pt3dadd( 49.1474, 22.7672, 0.350293, 0.66 ) }
    dend_18 { pt3dadd( 49.7812, 22.8521, 0.311986, 0.66 ) }
    dend_18 { pt3dadd( 49.8777, 22.8485, 0.301099, 0.66 ) }
    dend_18 { pt3dadd( 50.7534, 22.7484, 0.166787, 0.29 ) }
    dend_18 { pt3dadd( 50.9343, 22.7423, 0.145893, 0.29 ) }
    dend_18 { pt3dadd( 52.0882, 22.807, 0.0570452, 0.29 ) }
    dend_18 { pt3dadd( 52.9381, 22.9279, 0.0210478, 0.29 ) }
    dend_18 { pt3dadd( 53.0094, 22.9434, 0.0200937, 0.29 ) }
    dend_18 { pt3dadd( 53.8867, 23.223, 0.0506479, 0.29 ) }
    dend_18 { pt3dadd( 55.2248, 23.8036, 0.298855, 1.4 ) }
    dend_18 { pt3dadd( 55.8615, 24.1277, 0.470534, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_18 { pt3dadd( 56.239, 24.3366, 0.589403, 2.43 ) }
    dend_18 { pt3dadd( 56.3229, 24.3799, 0.616713, 2.43 ) }
    dend_18 { pt3dadd( 56.8909, 24.6316, 0.794552, 2.36 ) }
    dend_18 { pt3dadd( 58.6624, 25.2544, 1.32183, 0.44 ) }
    dend_18 { pt3dadd( 59.3519, 25.4352, 1.48846, 0.37 ) }
    dend_18 { pt3dadd( 60.2294, 25.5966, 1.63866, 0.29 ) }
    dend_18 { pt3dadd( 60.9432, 25.6364, 1.739, 0.74 ) }
    dend_18 { pt3dadd( 61.2089, 25.6289, 1.76625, 0.74 ) }
    dend_18 { pt3dadd( 61.4912, 25.5972, 1.7821, 0.74 ) }
    dend_18 { pt3dadd( 62.4037, 25.4276, 1.79267, 0.44 ) }
    dend_18 { pt3dadd( 63.546, 25.1834, 1.81625, 0.44 ) }
    dend_18 { pt3dadd( 65.6315, 24.7182, 1.88356, 1.77 ) }
    dend_18 { pt3dadd( 66.4971, 24.519, 1.91135, 2.36 ) }
    dend_18 { pt3dadd( 66.9697, 24.4062, 1.92346, 2.87 ) }
    dend_18 { pt3dadd( 67.0644, 24.3835, 1.92561, 2.87 ) }
    dend_18 { pt3dadd( 67.927, 24.1688, 1.93981, 2.5 ) }
    dend_18 { pt3dadd( 68.021, 24.1431, 1.937, 2.5 ) }
    dend_18 { pt3dadd( 69.9255, 23.6222, 1.74511, 0.44 ) }
    dend_18 { pt3dadd( 70.5897, 23.4497, 1.69667, 0.44 ) }
    dend_18 { pt3dadd( 70.7677, 23.4095, 1.68759, 0.44 ) }
    dend_18 { pt3dadd( 71.3595, 23.3242, 1.67196, 0.66 ) }
    dend_18 { pt3dadd( 72.1228, 23.2732, 1.6704, 0.88 ) }
    dend_18 { pt3dadd( 72.6625, 23.2932, 1.70729, 0.88 ) }
    dend_18 { pt3dadd( 73.9897, 23.5117, 1.89592, 0.29 ) }
    dend_18 { pt3dadd( 74.2644, 23.5702, 1.94443, 0.29 ) }
    dend_18 { pt3dadd( 75.409, 23.8468, 2.17198, 0.29 ) }
    dend_18 { pt3dadd( 75.5853, 23.889, 2.19472, 0.29 ) }
    dend_18 { pt3dadd( 76.9296, 24.1636, 2.25347, 1.03 ) }
    dend_18 { pt3dadd( 77.3729, 24.2395, 2.23798, 1.4 ) }
    dend_18 { pt3dadd( 77.8999, 24.3091, 2.17886, 1.4 ) }
    dend_18 { pt3dadd( 77.9835, 24.3183, 2.16661, 1.4 ) }
    dend_18 { pt3dadd( 79.8591, 24.4818, 1.82309, 0.29 ) }
    dend_18 { pt3dadd( 80.8157, 24.6013, 1.62431, 0.29 ) }
    dend_18 { pt3dadd( 81.6309, 24.7412, 1.42944, 0.29 ) }
    dend_18 { pt3dadd( 82.0904, 24.8541, 1.34029, 1.33 ) }
    dend_18 { pt3dadd( 82.7229, 25.0659, 1.22371, 1.62 ) }
    dend_18 { pt3dadd( 82.7911, 25.09, 1.21231, 1.62 ) }
    dend_18 { pt3dadd( 83.3304, 25.2707, 1.13969, 1.77 ) }
    dend_18 { pt3dadd( 83.9477, 25.4534, 0.980876, 1.84 ) }
    dend_18 { pt3dadd( 84.7546, 25.6655, 0.708565, 1.4 ) }
    dend_18 { pt3dadd( 86.2327, 26.0273, 0.147121, 0.44 ) }
    dend_18 { pt3dadd( 87.0615, 26.2322, -0.188737, 0.44 ) }
    dend_18 { pt3dadd( 88.0315, 26.4935, -0.58075, 0.44 ) }
    dend_18 { pt3dadd( 89.5323, 26.9369, -1.22124, 1.25 ) }
    dend_18 { pt3dadd( 89.6938, 26.9919, -1.2864, 1.25 ) }
    dend_18 { pt3dadd( 90.3364, 27.232, -1.56092, 1.92 ) }
    dend_18 { pt3dadd( 90.8235, 27.445, -1.77633, 2.28 ) }
    dend_18 { pt3dadd( 91.6389, 27.8388, -2.14786, 2.28 ) }
    dend_18 { pt3dadd( 92.9674, 28.4872, -2.80584, 0.22 ) }
    dend_18 { pt3dadd( 94.3299, 29.1054, -3.49413, 0.22 ) }
    dend_18 { pt3dadd( 95.5844, 29.6316, -4.1637, 0.22 ) }
    dend_18 { pt3dadd( 96.3017, 29.9195, -4.5676, 1.25 ) }
    dend_18 { pt3dadd( 96.7446, 30.0815, -4.82175, 1.25 ) }
    dend_18 { pt3dadd( 98.0971, 30.5384, -5.63913, 0.44 ) }
    dend_18 { pt3dadd( 98.1668, 30.5641, -5.68082, 0.44 ) }
    dend_18 { pt3dadd( 98.8183, 30.8266, -6.07193, 0.44 ) }
    dend_18 { pt3dadd( 99.8006, 31.2711, -6.5669, 1.33 ) }
    dend_18 { pt3dadd( 100.246, 31.4798, -6.78245, 1.4 ) }
    dend_18 { pt3dadd( 101.969, 32.2869, -7.67074, 0.15 ) }
    dend_18 { pt3dadd( 102.712, 32.5726, -8.07591, 0.15 ) }
    dend_18 { pt3dadd( 102.783, 32.5961, -8.11762, 0.15 ) }
    dend_18 { pt3dadd( 103.779, 32.8842, -8.73634, 1.11 ) }
    dend_18 { pt3dadd( 104.659, 33.0846, -9.30601, 1.84 ) }
    dend_18 { pt3dadd( 105.816, 33.2729, -10.0749, 1.03 ) }
    dend_18 { pt3dadd( 107.431, 33.4204, -11.1149, 0.22 ) }
    dend_18 { pt3dadd( 107.514, 33.4252, -11.1662, 0.22 ) }
    dend_18 { pt3dadd( 108.172, 33.4666, -11.5537, 0.22 ) }
    dend_18 { pt3dadd( 109.623, 33.5609, -12.3701, 1.18 ) }
    dend_18 { pt3dadd( 111.039, 33.7229, -13.0765, 2.14 ) }
    dend_18 { pt3dadd( 111.606, 33.8106, -13.3238, 2.14 ) }
    dend_18 { pt3dadd( 113.243, 34.1285, -13.9839, 0.44 ) }
    dend_18 { pt3dadd( 113.946, 34.2532, -14.2583, 0.66 ) }
    dend_18 { pt3dadd( 114.036, 34.2686, -14.2919, 0.66 ) }
    dend_18 { pt3dadd( 114.974, 34.4261, -14.5863, 0.22 ) }
    dend_18 { pt3dadd( 115.74, 34.5666, -14.8145, 0.59 ) }
    dend_18 { pt3dadd( 115.82, 34.5813, -14.8387, 0.59 ) }
    dend_18 { pt3dadd( 116.832, 34.7778, -15.1225, 0.37 ) }
    dend_18 { pt3dadd( 118.123, 35.0296, -15.4709, 1.92 ) }
    dend_18 { pt3dadd( 119.06, 35.2137, -15.7114, 2.36 ) }
    dend_18 { pt3dadd( 121.157, 35.6279, -16.1606, 0.29 ) }
    dend_18 { pt3dadd( 121.807, 35.7698, -16.2788, 0.29 ) }
    dend_18 { pt3dadd( 123.21, 36.0932, -16.4853, 1.62 ) }
    dend_18 { pt3dadd( 123.632, 36.2033, -16.5285, 2.06 ) }
    dend_18 { pt3dadd( 123.726, 36.2282, -16.534, 2.06 ) }
    dend_18 { pt3dadd( 125.706, 36.7464, -16.5894, 0.22 ) }
    dend_18 { pt3dadd( 125.777, 36.7636, -16.5887, 0.22 ) }
    dend_18 { pt3dadd( 126.487, 36.898, -16.5873, 0.22 ) }
    dend_18 { pt3dadd( 127.472, 37.0405, -16.5928, 1.18 ) }
    dend_18 { pt3dadd( 127.919, 37.0936, -16.6052, 1.18 ) }
    dend_18 { pt3dadd( 129.452, 37.2129, -16.6892, 0.22 ) }
    dend_18 { pt3dadd( 129.537, 37.2139, -16.697, 0.22 ) }
    dend_18 { pt3dadd( 130.376, 37.1878, -16.803, 0.22 ) }
    dend_18 { pt3dadd( 130.46, 37.1818, -16.8156, 0.22 ) }
    dend_18 { pt3dadd( 131.958, 36.9886, -17.0765, 1.62 ) }
    dend_18 { pt3dadd( 132.676, 36.8713, -17.214, 1.92 ) }
    dend_18 { pt3dadd( 133.335, 36.7359, -17.3532, 1.92 ) }
    dend_18 { pt3dadd( 134.852, 36.4411, -17.6717, 0.22 ) }
    dend_18 { pt3dadd( 134.934, 36.4282, -17.6886, 0.22 ) }
    dend_18 { pt3dadd( 135.497, 36.3519, -17.801, 0.52 ) }
    dend_18 { pt3dadd( 135.683, 36.3405, -17.839, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_18 { pt3dadd( 135.935, 36.3663, -17.8848, 0.52 ) }
    dend_18 { pt3dadd( 136.826, 36.593, -18.0193, 0.22 ) }
    dend_18 { pt3dadd( 137.43, 36.7842, -18.0928, 0.81 ) }
    dend_18 { pt3dadd( 137.731, 36.8708, -18.1407, 1.03 ) }
    dend_18 { pt3dadd( 138.514, 37.0952, -18.2811, 0.29 ) }
    dend_18 { pt3dadd( 139.376, 37.3147, -18.4494, 0.22 ) }
    dend_18 { pt3dadd( 139.458, 37.3314, -18.4666, 0.22 ) }
    dend_18 { pt3dadd( 140.196, 37.4088, -18.6919, 0.22 ) }
    dend_18 { pt3dadd( 141.36, 37.4209, -19.0979, 1.03 ) }
    dend_18 { pt3dadd( 141.439, 37.4187, -19.1295, 1.03 ) }
    dend_18 { pt3dadd( 141.937, 37.3825, -19.3409, 1.4 ) }
    dend_18 { pt3dadd( 142.348, 37.3527, -19.5213, 1.4 ) }
    dend_18 { pt3dadd( 143.814, 37.2529, -20.1608, 0.22 ) }
    dend_18 { pt3dadd( 144.762, 37.1949, -20.5578, 0.22 ) }
    dend_18 { pt3dadd( 145.998, 37.1005, -21.0689, 1.4 ) }
    dend_18 { pt3dadd( 146.479, 37.0654, -21.2709, 1.84 ) }
    dend_18 { pt3dadd( 147.056, 37.0248, -21.5257, 1.84 ) }
    dend_18 { pt3dadd( 149.399, 36.8579, -22.5539, 0.22 ) }
    dend_18 { pt3dadd( 150.308, 36.7977, -22.9373, 1.18 ) }
    dend_18 { pt3dadd( 150.462, 36.7893, -23.0058, 1.18 ) }
    dend_18 { pt3dadd( 150.788, 36.7803, -23.1485, 1.4 ) }
    dend_18 { pt3dadd( 152.008, 36.796, -23.6953, 0.29 ) }
    dend_18 { pt3dadd( 153.011, 36.847, -24.1497, 0.15 ) }
    dend_18 { pt3dadd( 153.099, 36.8601, -24.1874, 0.15 ) }
    dend_18 { pt3dadd( 153.755, 37.006, -24.5039, 0.15 ) }
    dend_18 { pt3dadd( 154.464, 37.237, -24.845, 0.88 ) }
    dend_18 { pt3dadd( 154.618, 37.3013, -24.9188, 0.88 ) }
    dend_18 { pt3dadd( 154.924, 37.4757, -25.0621, 1.4 ) }
    dend_18 { pt3dadd( 155.407, 37.7862, -25.3054, 1.4 ) }
    dend_18 { pt3dadd( 157.367, 39.0679, -26.2809, 0.22 ) }
    dend_18 { pt3dadd( 158.053, 39.5307, -26.622, 0.22 ) }
    dend_18 { pt3dadd( 158.128, 39.5798, -26.66, 0.22 ) }
    dend_18 { pt3dadd( 158.719, 39.949, -26.9687, 0.22 ) }
    dend_18 { pt3dadd( 159.757, 40.5758, -27.5085, 1.33 ) }
    dend_18 { pt3dadd( 160.12, 40.7817, -27.6898, 1.33 ) }
    dend_18 { pt3dadd( 160.19, 40.8179, -27.7237, 1.33 ) }
    dend_18 { pt3dadd( 160.638, 41.0054, -27.9515, 1.33 ) }
    dend_18 { pt3dadd( 162.204, 41.493, -28.8997, 0.29 ) }
    dend_18 { pt3dadd( 162.613, 41.5894, -29.1932, 0.29 ) }
    dend_18 { pt3dadd( 162.689, 41.6045, -29.2515, 0.29 ) }
    dend_18 { pt3dadd( 163.786, 41.9004, -30.2963, 1.4 ) }
    dend_18 { pt3dadd( 164.447, 42.1055, -30.9964, 1.84 ) }
    dend_18 { pt3dadd( 166.361, 42.8263, -33.2072, 0.22 ) }
    dend_18 { pt3dadd( 167.503, 43.3225, -34.5911, 1.47 ) }
    dend_18 { pt3dadd( 167.707, 43.4412, -34.8532, 2.14 ) }
    dend_18 { pt3dadd( 170.04, 45.2308, -38.0558, 0.22 ) }
    dend_18 { pt3dadd( 170.087, 45.2791, -38.1267, 0.22 ) }
    dend_18 { pt3dadd( 170.629, 46.0487, -39.0198, 1.25 ) }
    dend_18 { pt3dadd( 170.852, 46.5228, -39.4006, 1.4 ) }
    dend_18 { pt3dadd( 171.568, 48.4604, -40.584, 0.22 ) }
    dend_18 { pt3dadd( 171.779, 49.1515, -40.9627, 0.22 ) }
    dend_18 { pt3dadd( 171.824, 49.3315, -41.0434, 0.22 ) }
    dend_18 { pt3dadd( 172.044, 50.3046, -41.5371, 0.22 ) }
    dend_18 { pt3dadd( 172.348, 51.8208, -42.3752, 1.77 ) }
    dend_18 { pt3dadd( 172.489, 52.5519, -42.8026, 1.99 ) }
    dend_18 { pt3dadd( 173.115, 55.5343, -44.5027, 0.22 ) }
    dend_18 { pt3dadd( 173.224, 56.0068, -44.7617, 0.52 ) }
    dend_18 { pt3dadd( 173.588, 57.4452, -45.5137, 0.22 ) }
    dend_18 { pt3dadd( 173.877, 58.4993, -46.0587, 1.11 ) }
    dend_18 { pt3dadd( 174.022, 58.9541, -46.2836, 1.55 ) }
    dend_18 { pt3dadd( 174.752, 60.98, -47.1612, 0.22 ) }
    dend_18 { pt3dadd( 174.971, 61.5138, -47.3463, 0.22 ) }
    dend_18 { pt3dadd( 175.473, 62.5727, -47.7075, 1.25 ) }
    dend_18 { pt3dadd( 176.021, 63.613, -48.04, 1.55 ) }
    dend_18 { pt3dadd( 177.053, 65.3555, -48.7048, 0.22 ) }
    dend_18 { pt3dadd( 177.605, 66.2111, -49.0858, 0.88 ) }
    dend_18 { pt3dadd( 178.034, 66.803, -49.3884, 1.4 ) }
    dend_18 { pt3dadd( 179.327, 68.4625, -50.2852, 0.22 ) }
    dend_18 { pt3dadd( 179.387, 68.5268, -50.3302, 0.22 ) }
    dend_18 { pt3dadd( 180.602, 69.6304, -51.2662, 1.47 ) }
    dend_18 { pt3dadd( 180.667, 69.6806, -51.3192, 1.47 ) }
    dend_18 { pt3dadd( 181.19, 70.032, -51.7623, 1.84 ) }
    dend_18 { pt3dadd( 181.256, 70.073, -51.8208, 1.84 ) }
    dend_18 { pt3dadd( 183.562, 71.3098, -53.7611, 0.15 ) }
    dend_18 { pt3dadd( 184.597, 71.8199, -54.5641, 0.96 ) }
    dend_18 { pt3dadd( 184.664, 71.8462, -54.6105, 0.96 ) }
    dend_18 { pt3dadd( 185.165, 72.0079, -54.9386, 0.96 ) }
    dend_18 { pt3dadd( 185.336, 72.0401, -55.0391, 0.96 ) }
    dend_18 { pt3dadd( 186.656, 72.082, -55.6254, 0.22 ) }
    dend_18 { pt3dadd( 186.83, 72.048, -55.6693, 0.22 ) }
    dend_18 { pt3dadd( 187.702, 71.8334, -55.8781, 0.22 ) }
    dend_18 { pt3dadd( 187.96, 71.7798, -55.9242, 0.22 ) }
    dend_18 { pt3dadd( 189.208, 71.5494, -56.1024, 1.62 ) }
    dend_18 { pt3dadd( 190.037, 71.4123, -56.2016, 1.92 ) }
    dend_18 { pt3dadd( 192.517, 71.0477, -56.4526, 0.22 ) }
    dend_18 { pt3dadd( 194.395, 70.8697, -56.5873, 0.22 ) }
    dend_18 { pt3dadd( 196.067, 70.7851, -56.664, 0.22 ) }
    dend_18 { pt3dadd( 197.245, 70.7541, -56.6903, 1.47 ) }
    dend_18 { pt3dadd( 197.779, 70.7547, -56.6845, 2.14 ) }
    dend_18 { pt3dadd( 197.864, 70.757, -56.6817, 2.14 ) }
    dend_18 { pt3dadd( 200.066, 70.8234, -56.5579, 0.22 ) }
    dend_18 { pt3dadd( 200.151, 70.824, -56.556, 0.22 ) }
    dend_18 { pt3dadd( 200.867, 70.8009, -56.5861, 0.66 ) }
    dend_18 { pt3dadd( 201.062, 70.79, -56.5949, 0.66 ) }
    dend_18 { pt3dadd( 201.257, 70.7738, -56.6053, 0.66 ) }
    dend_18 { pt3dadd( 203.11, 70.5263, -56.4697, 0.22 ) }
    dend_18 { pt3dadd( 203.578, 70.4439, -56.3925, 0.22 ) }
    dend_18 { pt3dadd( 203.918, 70.3862, -56.3199, 0.22 ) }
    dend_18 { pt3dadd( 204.884, 70.232, -56.1025, 1.18 ) }
    dend_18 { pt3dadd( 205.314, 70.1729, -55.9878, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_18 { pt3dadd( 207.979, 69.8539, -55.2035, 0.22 ) }
    dend_18 { pt3dadd( 208.736, 69.7714, -54.9539, 0.52 ) }
    dend_18 { pt3dadd( 209.078, 69.7434, -54.8297, 0.52 ) }
    dend_18 { pt3dadd( 210.276, 69.6575, -54.3738, 0.22 ) }
    dend_18 { pt3dadd( 211.683, 69.5769, -53.8182, 1.4 ) }
    dend_18 { pt3dadd( 212.249, 69.5253, -53.5426, 1.62 ) }
    dend_18 { pt3dadd( 212.354, 69.5125, -53.4855, 1.62 ) }
    dend_18 { pt3dadd( 213.968, 69.2446, -52.4313, 0.22 ) }
    dend_18 { pt3dadd( 214.656, 69.1046, -51.8691, 0.22 ) }
    dend_18 { pt3dadd( 214.71, 69.0925, -51.8214, 0.22 ) }
    dend_18 { pt3dadd( 216.67, 68.5263, -50.0988, 0.22 ) }
    dend_18 { pt3dadd( 217.42, 68.2697, -49.4671, 1.62 ) }
    dend_18 { pt3dadd( 217.483, 68.2438, -49.4165, 1.62 ) }
    dend_18 { pt3dadd( 219.575, 67.1416, -47.9816, 0.22 ) }
    dend_18 { pt3dadd( 220.543, 66.5939, -47.3868, 0.66 ) }
    dend_18 { pt3dadd( 221.412, 66.051, -46.9342, 0.22 ) }
    dend_18 { pt3dadd( 222.239, 65.4599, -46.5975, 0.88 ) }
    dend_18 { pt3dadd( 222.695, 65.0705, -46.4095, 1.11 ) }
    dend_18 { pt3dadd( 223.999, 63.8137, -45.9094, 0.22 ) }
    dend_18 { pt3dadd( 224.953, 62.7912, -45.6227, 0.88 ) }
    dend_18 { pt3dadd( 225.814, 61.8392, -45.3388, 0.15 ) }
    dend_18 { pt3dadd( 226.255, 61.37, -45.1964, 0.15 ) }
    dend_18 { pt3dadd( 227.065, 60.5157, -44.9326, 1.03 ) }
    dend_18 { pt3dadd( 227.286, 60.294, -44.8535, 1.03 ) }
    dend_18 { pt3dadd( 228.199, 59.3152, -44.4389, 0.22 ) }
    dend_18 { pt3dadd( 228.331, 59.1677, -44.3839, 0.22 ) }
    dend_18 { pt3dadd( 228.677, 58.8048, -44.2362, 0.22 ) }
    dend_18 { pt3dadd( 228.744, 58.7376, -44.2089, 0.22 ) }
    dend_18 { pt3dadd( 229.591, 57.8722, -43.8523, 0.74 ) }
    dend_18 { pt3dadd( 230.727, 56.6281, -43.2915, 0.22 ) }
    dend_18 { pt3dadd( 231.238, 56.0052, -42.9822, 1.4 ) }
    dend_18 { pt3dadd( 231.514, 55.6781, -42.8125, 1.84 ) }
    dend_18 { pt3dadd( 232.026, 55.0901, -42.4967, 1.4 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 25.9744, 12.4043, 0.545216, 0.66 ) }
    dend_17 { pt3dadd( 27.1054, 13.7233, 0.770577, 0.66 ) }
    dend_17 { pt3dadd( 27.208, 13.8963, 0.799234, 0.66 ) }
    dend_17 { pt3dadd( 27.572, 14.8914, 0.957459, 0.59 ) }
    dend_17 { pt3dadd( 27.6231, 15.1486, 1.00123, 0.59 ) }
    dend_17 { pt3dadd( 27.7153, 16.0533, 1.15774, 0.59 ) }
    dend_17 { pt3dadd( 27.7179, 16.1373, 1.16864, 0.59 ) }
    dend_17 { pt3dadd( 27.5647, 17.482, 1.30844, 0.59 ) }
    dend_17 { pt3dadd( 27.4149, 18.4172, 1.37634, 0.96 ) }
    dend_17 { pt3dadd( 27.2613, 19.3629, 1.41557, 1.4 ) }
    dend_17 { pt3dadd( 27.2021, 19.9109, 1.42367, 1.33 ) }
    dend_17 { pt3dadd( 27.1529, 21.0461, 1.41753, 1.03 ) }
    dend_17 { pt3dadd( 27.1557, 21.1659, 1.41706, 1.03 ) }
    dend_17 { pt3dadd( 27.2553, 22.2263, 1.41069, 0.37 ) }
    dend_17 { pt3dadd( 27.4421, 23.4379, 1.41336, 0.29 ) }
    dend_17 { pt3dadd( 27.7001, 24.7204, 1.4329, 0.66 ) }
    dend_17 { pt3dadd( 27.9496, 25.7165, 1.47082, 1.25 ) }
    dend_17 { pt3dadd( 28.1797, 26.5349, 1.5229, 1.84 ) }
    dend_17 { pt3dadd( 28.3296, 27.043, 1.55605, 1.99 ) }
    dend_17 { pt3dadd( 28.5859, 27.8277, 1.60856, 1.77 ) }
    dend_17 { pt3dadd( 28.9627, 28.9115, 1.6851, 0.96 ) }
    dend_17 { pt3dadd( 29.5789, 30.4822, 1.80735, 0.15 ) }
    dend_17 { pt3dadd( 29.6158, 30.5708, 1.8132, 0.15 ) }
    dend_17 { pt3dadd( 30.0718, 31.5764, 1.8589, 0.15 ) }
    dend_17 { pt3dadd( 30.4272, 32.3115, 1.89082, 0.37 ) }
    dend_17 { pt3dadd( 30.5088, 32.4716, 1.89756, 0.37 ) }
    dend_17 { pt3dadd( 30.596, 32.6316, 1.90458, 0.37 ) }
    dend_17 { pt3dadd( 33.2984, 44.1586, 4.2709, 0.37 ) }
    dend_17 { pt3dadd( 33.7729, 55.84, 7.36309, 0.37 ) }
    dend_17 { pt3dadd( 33.0659, 67.5507, 10.3024, 0.37 ) }
    dend_17 { pt3dadd( 31.4962, 79.472, 11.6746, 0.37 ) }
    dend_17 { pt3dadd( 27.9061, 90.7365, 14.0055, 0.37 ) }
    dend_17 { pt3dadd( 24.6147, 102.305, 14.9774, 0.37 ) }
    dend_17 { pt3dadd( 22.063, 114.115, 15.1462, 0.37 ) }
    dend_17 { pt3dadd( 20.5051, 125.957, 17.0728, 0.37 ) }
    dend_17 { pt3dadd( 19.5653, 137.833, 19.2165, 0.37 ) }
    dend_17 { pt3dadd( 17.87, 149.454, 22.0713, 0.37 ) }
    dend_17 { pt3dadd( 14.3576, 160.488, 25.3564, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 71/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -27.6919, -14.3681, 3.43213, 0.29 ) }
    dend_14 { pt3dadd( -27.53, -14.1824, 5.75674, 0.29 ) }
    dend_14 { pt3dadd( -27.551, -14.15, 6.30766, 0.29 ) }
    dend_14 { pt3dadd( -27.7702, -14.1528, 6.84472, 0.29 ) }
    dend_14 { pt3dadd( -27.9833, -14.1707, 7.08554, 0.81 ) }
    dend_14 { pt3dadd( -28.0466, -14.1783, 7.11961, 0.81 ) }
    dend_14 { pt3dadd( -28.518, -14.2365, 7.30089, 1.03 ) }
    dend_14 { pt3dadd( -28.8298, -14.275, 7.35463, 1.03 ) }
    dend_14 { pt3dadd( -29.7578, -14.413, 7.49381, 0.37 ) }
    dend_14 { pt3dadd( -29.8793, -14.4311, 7.51202, 0.37 ) }
    dend_14 { pt3dadd( -30.6711, -14.5338, 7.64872, 0.37 ) }
    dend_14 { pt3dadd( -31.3394, -14.5928, 7.77364, 0.66 ) }
    dend_14 { pt3dadd( -31.9357, -14.6291, 7.89662, 0.88 ) }
    dend_14 { pt3dadd( -32.0881, -14.6332, 7.92502, 0.88 ) }
    dend_14 { pt3dadd( -32.6918, -14.6365, 8.03695, 0.88 ) }
    dend_14 { pt3dadd( -33.2127, -14.6255, 8.1166, 1.03 ) }
    dend_14 { pt3dadd( -34.1016, -14.5942, 8.24902, 1.18 ) }
    dend_14 { pt3dadd( -35.3868, -14.5402, 8.43654, 0.22 ) }
    dend_14 { pt3dadd( -36.4034, -14.4916, 8.59115, 1.03 ) }
    dend_14 { pt3dadd( -36.7703, -14.4726, 8.64984, 1.03 ) }
    dend_14 { pt3dadd( -38.5027, -14.3741, 8.93963, 0.29 ) }
    dend_14 { pt3dadd( -39.0528, -14.3314, 9.03996, 0.66 ) }
    dend_14 { pt3dadd( -39.5791, -14.2742, 9.15767, 0.88 ) }
    dend_14 { pt3dadd( -40.0862, -14.1766, 9.29319, 1.25 ) }
    dend_14 { pt3dadd( -40.4444, -14.0849, 9.41125, 1.47 ) }
    dend_14 { pt3dadd( -40.7934, -13.9714, 9.53946, 1.47 ) }
    dend_14 { pt3dadd( -41.7057, -13.596, 9.96351, 0.29 ) }
    dend_14 { pt3dadd( -42.245, -13.3408, 10.2373, 0.29 ) }
    dend_14 { pt3dadd( -43.1438, -12.8642, 10.7699, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_14 { pt3dadd( -43.4815, -12.6696, 10.9957, 1.92 ) }
    dend_14 { pt3dadd( -43.7784, -12.4802, 11.2221, 1.84 ) }
    dend_14 { pt3dadd( -44.6685, -11.8333, 12.0441, 0.22 ) }
    dend_14 { pt3dadd( -45.0191, -11.5386, 12.4425, 0.22 ) }
    dend_14 { pt3dadd( -45.4584, -11.0953, 13.0611, 1.18 ) }
    dend_14 { pt3dadd( -45.6941, -10.7951, 13.4889, 1.55 ) }
    dend_14 { pt3dadd( -45.8549, -10.533, 13.8442, 1.55 ) }
    dend_14 { pt3dadd( -46.1078, -9.95703, 14.6298, 0.29 ) }
    dend_14 { pt3dadd( -46.2093, -9.57593, 15.1292, 0.29 ) }
    dend_14 { pt3dadd( -46.3125, -9.05519, 15.8107, 0.52 ) }
    dend_14 { pt3dadd( -46.3428, -8.81907, 16.1171, 0.66 ) }
    dend_14 { pt3dadd( -46.3893, -8.47467, 16.5852, 0.66 ) }
    dend_14 { pt3dadd( -46.4883, -7.96812, 17.2921, 0.22 ) }
    dend_14 { pt3dadd( -46.5642, -7.64315, 17.7512, 0.29 ) }
    dend_14 { pt3dadd( -46.6102, -7.49375, 17.9832, 0.29 ) }
    dend_14 { pt3dadd( -46.6252, -7.45608, 18.0462, 0.29 ) }
    dend_14 { pt3dadd( -46.8893, -6.85065, 19.086, 1.62 ) }
    dend_14 { pt3dadd( -47.0212, -6.56323, 19.5887, 1.84 ) }
    dend_14 { pt3dadd( -47.0379, -6.52553, 19.6513, 1.84 ) }
    dend_14 { pt3dadd( -47.3031, -5.85906, 20.7495, 0.22 ) }
    dend_14 { pt3dadd( -47.315, -5.82477, 20.8026, 0.22 ) }
    dend_14 { pt3dadd( -47.4709, -5.31153, 21.5173, 0.22 ) }
    dend_14 { pt3dadd( -47.4805, -5.27162, 21.5671, 0.22 ) }
    dend_14 { pt3dadd( -47.6851, -4.42362, 22.566, 1.55 ) }
    dend_14 { pt3dadd( -47.7939, -4.03143, 23.004, 2.28 ) }
    dend_14 { pt3dadd( -47.886, -3.74438, 23.31, 2.28 ) }
    dend_14 { pt3dadd( -48.3264, -2.57266, 24.5578, 0.22 ) }
    dend_14 { pt3dadd( -48.5088, -2.15464, 25.0032, 0.22 ) }
    dend_14 { pt3dadd( -48.7857, -1.61681, 25.5868, 0.81 ) }
    dend_14 { pt3dadd( -49.2125, -0.92646, 26.3555, 0.22 ) }
    dend_14 { pt3dadd( -49.4781, -0.576915, 26.7721, 0.88 ) }
    dend_14 { pt3dadd( -49.8055, -0.223135, 27.2233, 0.96 ) }
    dend_14 { pt3dadd( -50.3652, 0.270247, 27.902, 0.22 ) }
    dend_14 { pt3dadd( -51.0239, 0.789322, 28.6566, 1.99 ) }
    dend_14 { pt3dadd( -51.3341, 1.01829, 29.0032, 2.14 ) }
    dend_14 { pt3dadd( -52.128, 1.57172, 29.8763, 0.29 ) }
    dend_14 { pt3dadd( -52.5157, 1.82801, 30.2963, 0.59 ) }
    dend_14 { pt3dadd( -52.5627, 1.85613, 30.3454, 0.59 ) }
    dend_14 { pt3dadd( -52.7828, 1.96589, 30.5593, 0.74 ) }
    dend_14 { pt3dadd( -57.1804, 6.5429, 39.0608, 0.74 ) }
    dend_14 { pt3dadd( -59.4659, 10.6889, 48.6047, 0.74 ) }
    dend_14 { pt3dadd( -61.6573, 16.0767, 57.5923, 0.74 ) }
    dend_14 { pt3dadd( -62.6556, 20.7324, 67.1774, 0.74 ) }
    dend_14 { pt3dadd( -63.161, 24.316, 77.2075, 0.74 ) }
    dend_14 { pt3dadd( -65.2888, 28.4602, 86.7925, 0.74 ) }
    dend_14 { pt3dadd( -67.0796, 31.6331, 96.7698, 0.74 ) }
    dend_14 { pt3dadd( -67.1373, 34.4582, 107.021, 0.74 ) }
    dend_14 { pt3dadd( -68.5078, 36.6967, 117.277, 0.74 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 48/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -27.6919, -14.3681, 3.43213, 0.96 ) }
    dend_9 { pt3dadd( -28.9635, -13.441, 1.87517, 0.96 ) }
    dend_9 { pt3dadd( -29.3755, -13.1351, 1.43618, 0.88 ) }
    dend_9 { pt3dadd( -30.6986, -12.154, 0.248557, 0.37 ) }
    dend_9 { pt3dadd( -31.1541, -11.817, -0.0561933, 1.11 ) }
    dend_9 { pt3dadd( -31.3492, -11.6726, -0.161543, 1.77 ) }
    dend_9 { pt3dadd( -31.6631, -11.4399, -0.295058, 1.99 ) }
    dend_9 { pt3dadd( -32.0735, -11.1038, -0.286187, 2.36 ) }
    dend_9 { pt3dadd( -32.4952, -10.7533, -0.32386, 2.14 ) }
    dend_9 { pt3dadd( -33.2812, -10.1181, -0.457077, 0.88 ) }
    dend_9 { pt3dadd( -33.3159, -10.0891, -0.468258, 0.88 ) }
    dend_9 { pt3dadd( -33.5968, -9.85022, -0.5835, 0.88 ) }
    dend_9 { pt3dadd( -34.1828, -9.34408, -0.891674, 0.74 ) }
    dend_9 { pt3dadd( -36.2383, -7.51707, -2.26297, 1.33 ) }
    dend_9 { pt3dadd( -36.5657, -7.21679, -2.53305, 2.06 ) }
    dend_9 { pt3dadd( -36.6935, -7.09758, -2.66016, 2.06 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 64/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -14.0324, -35.2986, 11.543, 0.96 ) }
    dend_7 { pt3dadd( -13.5538, -36.7707, 10.722, 0.96 ) }
    dend_7 { pt3dadd( -13.2762, -37.9731, 10.1516, 0.74 ) }
    dend_7 { pt3dadd( -13.0888, -39.1896, 9.62977, 0.74 ) }
    dend_7 { pt3dadd( -12.9755, -40.4271, 9.15935, 0.74 ) }
    dend_7 { pt3dadd( -12.9513, -40.994, 8.96395, 1.4 ) }
    dend_7 { pt3dadd( -12.944, -42.0319, 8.63677, 1.55 ) }
    dend_7 { pt3dadd( -13.0072, -42.9879, 8.41387, 1.55 ) }
    dend_7 { pt3dadd( -13.1718, -44.2682, 8.14899, 1.4 ) }
    dend_7 { pt3dadd( -13.3805, -45.6607, 7.88646, 1.03 ) }
    dend_7 { pt3dadd( -13.6001, -47.0598, 7.61944, 0.66 ) }
    dend_7 { pt3dadd( -13.8196, -48.177, 7.36983, 0.59 ) }
    dend_7 { pt3dadd( -14.0645, -49.2852, 7.08916, 1.25 ) }
    dend_7 { pt3dadd( -14.3832, -50.4798, 6.75772, 1.69 ) }
    dend_7 { pt3dadd( -14.8253, -51.8226, 6.36359, 1.84 ) }
    dend_7 { pt3dadd( -15.2324, -52.8632, 6.03493, 1.84 ) }
    dend_7 { pt3dadd( -15.9677, -54.4721, 5.49198, 0.52 ) }
    dend_7 { pt3dadd( -15.9989, -54.5359, 5.47458, 0.52 ) }
    dend_7 { pt3dadd( -16.5029, -55.4497, 5.29502, 0.52 ) }
    dend_7 { pt3dadd( -16.9919, -56.2378, 5.2269, 1.03 ) }
    dend_7 { pt3dadd( -17.548, -57.0518, 5.22625, 1.33 ) }
    dend_7 { pt3dadd( -18.3852, -58.2632, 5.3228, 1.77 ) }
    dend_7 { pt3dadd( -19.5254, -59.9961, 5.54769, 0.52 ) }
    dend_7 { pt3dadd( -19.9972, -60.7562, 5.61245, 0.37 ) }
    dend_7 { pt3dadd( -20.4263, -61.5295, 5.64059, 0.37 ) }
    dend_7 { pt3dadd( -20.8916, -62.5329, 5.5184, 0.22 ) }
    dend_7 { pt3dadd( -21.0622, -62.991, 5.37837, 1.25 ) }
    dend_7 { pt3dadd( -21.1889, -63.5564, 5.09071, 1.77 ) }
    dend_7 { pt3dadd( -21.3104, -64.5606, 4.42868, 1.99 ) }
    dend_7 { pt3dadd( -21.3185, -65.1522, 4.03506, 1.69 ) }
    dend_7 { pt3dadd( -21.2367, -66.6716, 3.0433, 0.74 ) }
    dend_7 { pt3dadd( -21.2312, -66.7437, 2.99885, 0.74 ) }
    dend_7 { pt3dadd( -21.1864, -67.4792, 2.57917, 0.44 ) }
    dend_7 { pt3dadd( -21.1236, -68.5832, 2.0141, 0.81 ) }
    dend_7 { pt3dadd( -21.0803, -69.2973, 1.68174, 1.25 ) }
    dend_7 { pt3dadd( -21.0426, -69.8671, 1.43792, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_7 { pt3dadd( -20.9494, -71.1817, 0.94434, 0.52 ) }
    dend_7 { pt3dadd( -20.8786, -72.1806, 0.584606, 0.29 ) }
    dend_7 { pt3dadd( -20.8086, -73.4134, 0.20093, 0.29 ) }
    dend_7 { pt3dadd( -20.7784, -74.5539, -0.0914671, 1.47 ) }
    dend_7 { pt3dadd( -20.7918, -75.834, -0.364035, 2.36 ) }
    dend_7 { pt3dadd( -20.8246, -76.8016, -0.533205, 2.8 ) }
    dend_7 { pt3dadd( -20.8994, -77.8727, -0.66574, 2.73 ) }
    dend_7 { pt3dadd( -21.1625, -79.7061, -0.899244, 0.88 ) }
    dend_7 { pt3dadd( -21.4201, -80.8737, -1.04386, 0.52 ) }
    dend_7 { pt3dadd( -21.6261, -81.6454, -1.14024, 0.59 ) }
    dend_7 { pt3dadd( -21.6545, -81.7382, -1.1527, 0.59 ) }
    dend_7 { pt3dadd( -21.9678, -82.6706, -1.30081, 0.59 ) }
    dend_7 { pt3dadd( -22.5708, -84.3033, -1.64358, 0.22 ) }
    dend_7 { pt3dadd( -22.8542, -85.0197, -1.87533, 0.22 ) }
    dend_7 { pt3dadd( -23.302, -86.197, -2.33979, 0.59 ) }
    dend_7 { pt3dadd( -24.8772, -97.3355, -7.05331, 0.59 ) }
    dend_7 { pt3dadd( -28.189, -108.409, -10.9668, 0.59 ) }
    dend_7 { pt3dadd( -31.7896, -118.394, -16.8432, 0.59 ) }
    dend_7 { pt3dadd( -32.6672, -129.628, -21.5122, 0.59 ) }
    dend_7 { pt3dadd( -31.2434, -141.324, -24.6607, 0.59 ) }
    dend_7 { pt3dadd( -31.7085, -153.344, -26.9096, 0.59 ) }
    dend_7 { pt3dadd( -32.9908, -165.513, -26.819, 0.59 ) }
    dend_7 { pt3dadd( -34.7586, -177.591, -26.1238, 0.59 ) }
    dend_7 { pt3dadd( -35.7462, -189.78, -25.8427, 0.59 ) }
    dend_7 { pt3dadd( -37.5135, -201.783, -24.4395, 0.59 ) }
    dend_7 { pt3dadd( -38.9089, -213.914, -25.343, 0.59 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 26/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -14.0324, -35.2986, 11.543, 0.59 ) }
    dend_2 { pt3dadd( -14.9481, -36.9174, 11.997, 0.59 ) }
    dend_2 { pt3dadd( -15.5867, -38.2921, 12.3417, 0.59 ) }
    dend_2 { pt3dadd( -16.0831, -39.6143, 12.6085, 1.33 ) }
    dend_2 { pt3dadd( -16.1106, -39.7052, 12.6225, 1.33 ) }
    dend_2 { pt3dadd( -16.2822, -40.3862, 12.7014, 1.62 ) }
    dend_2 { pt3dadd( -16.572, -41.6381, 12.8083, 1.92 ) }
    dend_2 { pt3dadd( -16.8325, -43.1284, 12.8465, 1.18 ) }
    dend_2 { pt3dadd( -17.0323, -44.6146, 12.7842, 1.03 ) }
    dend_2 { pt3dadd( -17.2259, -46.1073, 12.5919, 0.96 ) }
    dend_2 { pt3dadd( -17.4582, -47.5782, 12.3212, 0.74 ) }
    dend_2 { pt3dadd( -17.6792, -48.6826, 12.0682, 1.4 ) }
    dend_2 { pt3dadd( -17.913, -49.6289, 11.8159, 1.77 ) }
    dend_2 { pt3dadd( -18.4202, -51.4303, 11.3976, 1.4 ) }
    dend_2 { pt3dadd( -19.0927, -53.5, 11.0317, 0.66 ) }
    dend_2 { pt3dadd( -19.5364, -54.7567, 10.8188, 0.96 ) }
    dend_2 { pt3dadd( -20.1293, -56.3341, 10.5821, 1.62 ) }
    dend_2 { pt3dadd( -20.601, -57.5478, 10.4493, 1.84 ) }
    dend_2 { pt3dadd( -21.3736, -59.4284, 10.38, 1.84 ) }
    dend_2 { pt3dadd( -22.046, -60.9828, 10.5637, 2.06 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 34.6382, -3.26801, -5.85118, 0.66 ) }
    dend_27 { pt3dadd( 36.5446, -2.69116, -4.61069, 0.66 ) }
    dend_27 { pt3dadd( 37.6246, -2.37953, -3.91851, 0.37 ) }
    dend_27 { pt3dadd( 38.3779, -2.16528, -3.4316, 0.37 ) }
    dend_27 { pt3dadd( 41.0853, -1.39515, -1.68144, 0.96 ) }
    dend_27 { pt3dadd( 42.0697, -1.11513, -1.04508, 1.18 ) }
    dend_27 { pt3dadd( 43.1845, -0.798043, -0.324488, 1.4 ) }
    dend_27 { pt3dadd( 44.3392, -0.41219, 0.557844, 1.92 ) }
    dend_27 { pt3dadd( 45.5511, -0.0207274, 1.56341, 2.14 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 34.6382, -3.26801, -5.85118, 0.88 ) }
    dend_24 { pt3dadd( 35.0623, -5.00157, -5.49673, 0.88 ) }
    dend_24 { pt3dadd( 35.081, -5.05829, -5.48425, 0.88 ) }
    dend_24 { pt3dadd( 35.4708, -6.03152, -5.25308, 0.59 ) }
    dend_24 { pt3dadd( 35.7113, -6.53243, -5.11336, 0.88 ) }
    dend_24 { pt3dadd( 36.0774, -7.21716, -4.89901, 0.22 ) }
    dend_24 { pt3dadd( 36.3211, -7.64306, -4.75685, 0.22 ) }
    dend_24 { pt3dadd( 36.6047, -8.03712, -4.63197, 0.44 ) }
    dend_24 { pt3dadd( 36.9159, -8.40573, -4.47105, 0.52 ) }
    dend_24 { pt3dadd( 37.3429, -8.83321, -4.22119, 1.18 ) }
    dend_24 { pt3dadd( 37.5885, -9.07462, -4.07697, 1.69 ) }
    dend_24 { pt3dadd( 37.6315, -9.12029, -4.04921, 1.69 ) }
    dend_24 { pt3dadd( 37.8875, -9.41281, -3.88345, 1.69 ) }
    dend_24 { pt3dadd( 38.3604, -9.95963, -3.59405, 1.18 ) }
    dend_24 { pt3dadd( 38.9218, -10.5975, -3.26462, 0.37 ) }
    dend_24 { pt3dadd( 39.6746, -11.4294, -2.84589, 0.29 ) }
    dend_24 { pt3dadd( 40.0713, -11.8509, -2.63442, 0.29 ) }
    dend_24 { pt3dadd( 40.3152, -12.0878, -2.49266, 1.03 ) }
    dend_24 { pt3dadd( 40.5958, -12.322, -2.32752, 1.33 ) }
    dend_24 { pt3dadd( 40.6456, -12.3556, -2.29585, 1.33 ) }
    dend_24 { pt3dadd( 41.0394, -12.5519, -2.04238, 1.47 ) }
    dend_24 { pt3dadd( 41.3898, -12.6877, -1.81207, 1.25 ) }
    dend_24 { pt3dadd( 42.499, -13.142, -1.1095, 0.52 ) }
    dend_24 { pt3dadd( 42.8269, -13.2964, -0.906755, 0.22 ) }
    dend_24 { pt3dadd( 43.5113, -13.6422, -0.49384, 1.47 ) }
    dend_24 { pt3dadd( 44.0591, -13.9416, -0.18525, 2.14 ) }
    dend_24 { pt3dadd( 44.4916, -14.198, 0.0340733, 2.5 ) }
    dend_24 { pt3dadd( 45.7448, -14.9946, 0.627926, 0.52 ) }
    dend_24 { pt3dadd( 46.4246, -15.464, 0.921639, 0.52 ) }
    dend_24 { pt3dadd( 46.4766, -15.5018, 0.943928, 0.52 ) }
    dend_24 { pt3dadd( 47.3349, -16.1343, 1.29548, 0.52 ) }
    dend_24 { pt3dadd( 48.277, -16.8504, 1.70674, 1.18 ) }
    dend_24 { pt3dadd( 48.8689, -17.2788, 1.95086, 2.21 ) }
    dend_24 { pt3dadd( 49.0794, -17.4155, 2.03229, 2.58 ) }
    dend_24 { pt3dadd( 49.4933, -17.6665, 2.18788, 2.14 ) }
    dend_24 { pt3dadd( 50.3158, -18.1271, 2.47898, 0.66 ) }
    dend_24 { pt3dadd( 51.2626, -18.598, 2.75496, 0.44 ) }
    dend_24 { pt3dadd( 51.9873, -18.9154, 2.91933, 0.44 ) }
    dend_24 { pt3dadd( 52.6671, -19.1811, 3.05208, 0.44 ) }
    dend_24 { pt3dadd( 52.7213, -19.2032, 3.05749, 0.44 ) }
    dend_24 { pt3dadd( 53.5447, -19.569, 3.08654, 0.44 ) }
    dend_24 { pt3dadd( 54.5121, -20.0183, 3.06458, 1.77 ) }
    dend_24 { pt3dadd( 54.9902, -20.2428, 3.03698, 2.43 ) }
    dend_24 { pt3dadd( 55.5024, -20.4994, 3.0024, 2.65 ) }
    dend_24 { pt3dadd( 57.4353, -21.4725, 2.86426, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_24 { pt3dadd( 58.3698, -21.9389, 2.80212, 0.29 ) }
    dend_24 { pt3dadd( 58.4491, -21.9797, 2.79621, 0.29 ) }
    dend_24 { pt3dadd( 59.2247, -22.3794, 2.74274, 0.29 ) }
    dend_24 { pt3dadd( 60.0977, -22.8217, 2.67118, 1.47 ) }
    dend_24 { pt3dadd( 60.4915, -23.0074, 2.63665, 2.06 ) }
    dend_24 { pt3dadd( 60.8694, -23.1136, 2.66368, 2.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 6/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 232.026, 55.0901, -42.4967, 0.22 ) }
    dend_20 { pt3dadd( 231.976, 53.9288, -42.2645, 0.22 ) }
    dend_20 { pt3dadd( 231.948, 53.3071, -42.1402, 0.22 ) }
    dend_20 { pt3dadd( 231.947, 53.266, -42.132, 0.22 ) }
    dend_20 { pt3dadd( 231.913, 52.4864, -41.9761, 0.22 ) }
    dend_20 { pt3dadd( 231.889, 51.9531, -41.8694, 0.66 ) }
    dend_20 { pt3dadd( 231.878, 51.6949, -41.8178, 0.66 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 13/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 232.026, 55.0901, -42.4967, 0.22 ) }
    dend_19 { pt3dadd( 233.396, 54.2855, -43.5583, 0.22 ) }
    dend_19 { pt3dadd( 233.514, 54.2257, -43.6589, 0.52 ) }
    dend_19 { pt3dadd( 234.871, 53.6925, -44.7732, 0.22 ) }
    dend_19 { pt3dadd( 235.471, 53.5082, -45.2714, 0.22 ) }
    dend_19 { pt3dadd( 236.506, 53.2401, -46.1185, 1.18 ) }
    dend_19 { pt3dadd( 236.773, 53.1785, -46.335, 1.47 ) }
    dend_19 { pt3dadd( 237.835, 53.0545, -47.1475, 1.03 ) }
    dend_19 { pt3dadd( 238.739, 53.0047, -47.794, 0.22 ) }
    dend_19 { pt3dadd( 239.55, 53.0311, -48.3325, 1.25 ) }
    dend_19 { pt3dadd( 239.866, 53.0616, -48.5125, 1.69 ) }
    dend_19 { pt3dadd( 239.928, 53.0666, -48.5406, 1.69 ) }
    dend_19 { pt3dadd( 241.678, 53.1764, -49.2072, 0.22 ) }
    dend_19 { pt3dadd( 242.352, 53.1813, -49.3814, 0.15 ) }
    dend_19 { pt3dadd( 242.865, 53.1649, -49.4672, 0.88 ) }
    dend_19 { pt3dadd( 243.982, 53.1133, -49.5462, 0.22 ) }
    dend_19 { pt3dadd( 244.744, 53.0974, -49.5591, 0.59 ) }
    dend_19 { pt3dadd( 244.811, 53.0991, -49.5567, 0.59 ) }
    dend_19 { pt3dadd( 245.975, 53.2478, -49.3824, 0.29 ) }
    dend_19 { pt3dadd( 246.796, 53.4295, -49.2364, 1.47 ) }
    dend_19 { pt3dadd( 247.131, 53.5373, -49.1631, 1.47 ) }
    dend_19 { pt3dadd( 248.349, 54.0686, -48.8872, 0.22 ) }
    dend_19 { pt3dadd( 248.847, 54.3354, -48.7635, 0.81 ) }
    dend_19 { pt3dadd( 250.176, 55.1525, -48.4182, 0.22 ) }
    dend_19 { pt3dadd( 251.093, 55.7802, -48.1454, 0.81 ) }
    dend_19 { pt3dadd( 251.974, 56.4016, -47.8688, 0.15 ) }
    dend_19 { pt3dadd( 252.488, 56.7827, -47.6959, 1.18 ) }
    dend_19 { pt3dadd( 252.556, 56.836, -47.6707, 1.18 ) }
    dend_19 { pt3dadd( 252.834, 57.0467, -47.5599, 1.18 ) }
    dend_19 { pt3dadd( 254.066, 57.9965, -47.0365, 0.15 ) }
    dend_19 { pt3dadd( 254.18, 58.084, -46.9826, 0.15 ) }
    dend_19 { pt3dadd( 255.162, 58.8218, -46.4545, 0.15 ) }
    dend_19 { pt3dadd( 255.212, 58.8587, -46.425, 0.15 ) }
    dend_19 { pt3dadd( 256.236, 59.6866, -45.7694, 1.11 ) }
    dend_19 { pt3dadd( 256.507, 59.923, -45.58, 1.11 ) }
    dend_19 { pt3dadd( 256.567, 59.9847, -45.5332, 1.11 ) }
    dend_19 { pt3dadd( 257.478, 60.9916, -44.7433, 0.22 ) }
    dend_19 { pt3dadd( 257.76, 61.3288, -44.4636, 0.59 ) }
    dend_19 { pt3dadd( 258.632, 62.4747, -43.5556, 0.22 ) }
    dend_19 { pt3dadd( 258.666, 62.5242, -43.5203, 0.22 ) }
    dend_19 { pt3dadd( 259.433, 63.7582, -42.7057, 1.11 ) }
    dend_19 { pt3dadd( 260.225, 65.0871, -41.8901, 0.15 ) }
    dend_19 { pt3dadd( 260.667, 65.8765, -41.4411, 1.11 ) }
    dend_19 { pt3dadd( 260.86, 66.2232, -41.2405, 1.11 ) }
    dend_19 { pt3dadd( 261.287, 66.9772, -40.7825, 0.22 ) }
    dend_19 { pt3dadd( 261.485, 67.3061, -40.578, 0.52 ) }
    dend_19 { pt3dadd( 262.238, 68.4463, -39.8691, 0.15 ) }
    dend_19 { pt3dadd( 262.291, 68.5147, -39.8232, 0.15 ) }
    dend_19 { pt3dadd( 262.776, 68.9874, -39.4812, 0.66 ) }
    dend_19 { pt3dadd( 263.89, 69.7511, -38.8031, 0.07 ) }
    dend_19 { pt3dadd( 264.392, 70.0072, -38.5271, 0.96 ) }
    dend_19 { pt3dadd( 264.857, 70.1965, -38.295, 1.25 ) }
    dend_19 { pt3dadd( 266.648, 70.72, -37.5132, 0.15 ) }
    dend_19 { pt3dadd( 268.078, 71.0641, -36.9512, 0.15 ) }
    dend_19 { pt3dadd( 269.9, 71.3957, -36.319, 1.33 ) }
    dend_19 { pt3dadd( 270.275, 71.4478, -36.1967, 1.33 ) }
    dend_19 { pt3dadd( 270.338, 71.4566, -36.1742, 1.33 ) }
    dend_19 { pt3dadd( 271.681, 71.7054, -35.6295, 0.15 ) }
    dend_19 { pt3dadd( 272.081, 71.8227, -35.4563, 0.37 ) }
    dend_19 { pt3dadd( 272.136, 71.8518, -35.4271, 0.37 ) }
    dend_19 { pt3dadd( 273.285, 72.651, -34.748, 0.15 ) }
    dend_19 { pt3dadd( 273.63, 72.9006, -34.5378, 0.74 ) }
    dend_19 { pt3dadd( 274.653, 73.687, -33.9091, 0.22 ) }
    dend_19 { pt3dadd( 275.11, 74.0685, -33.6187, 0.81 ) }
    dend_19 { pt3dadd( 275.41, 74.3077, -33.4313, 0.81 ) }
    dend_19 { pt3dadd( 276.782, 75.3753, -32.6177, 0.15 ) }
    dend_19 { pt3dadd( 277.32, 75.7679, -32.3319, 0.74 ) }
    dend_19 { pt3dadd( 277.665, 75.9728, -32.1647, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 81/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -36.6935, -7.09758, -2.66016, 2.28 ) }
    dend_13 { pt3dadd( -36.9987, -6.80835, -2.56593, 2.28 ) }
    dend_13 { pt3dadd( -38.0261, -5.80073, -2.19379, 0.44 ) }
    dend_13 { pt3dadd( -38.0813, -5.74392, -2.17498, 0.44 ) }
    dend_13 { pt3dadd( -38.6203, -5.1681, -1.9861, 0.66 ) }
    dend_13 { pt3dadd( -38.9137, -4.8601, -1.88011, 0.66 ) }
    dend_13 { pt3dadd( -38.9695, -4.80469, -1.85913, 0.66 ) }
    dend_13 { pt3dadd( -39.3208, -4.4926, -1.71823, 0.52 ) }
    dend_13 { pt3dadd( -39.9179, -4.01717, -1.44877, 0.22 ) }
    dend_13 { pt3dadd( -40.2742, -3.75301, -1.27548, 0.44 ) }
    dend_13 { pt3dadd( -40.7068, -3.45274, -1.05367, 0.59 ) }
    dend_13 { pt3dadd( -41.3409, -3.03531, -0.712549, 0.22 ) }
    dend_13 { pt3dadd( -42.0905, -2.57568, -0.316876, 0.29 ) }
    dend_13 { pt3dadd( -42.7746, -2.1906, -0.0158767, 1.25 ) }
    dend_13 { pt3dadd( -43.2562, -1.93463, 0.175539, 1.62 ) }
    dend_13 { pt3dadd( -43.7669, -1.67569, 0.35022, 1.92 ) }
    dend_13 { pt3dadd( -44.2682, -1.43059, 0.498854, 1.92 ) }
    dend_13 { pt3dadd( -44.7801, -1.18964, 0.629144, 1.62 ) }
    dend_13 { pt3dadd( -46.6004, -0.384669, 1.02787, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_13 { pt3dadd( -46.6644, -0.359072, 1.04037, 0.29 ) }
    dend_13 { pt3dadd( -47.5927, -0.0113354, 1.2072, 0.29 ) }
    dend_13 { pt3dadd( -47.9384, 0.102565, 1.2729, 1.03 ) }
    dend_13 { pt3dadd( -48.4012, 0.233, 1.3748, 1.47 ) }
    dend_13 { pt3dadd( -49.0886, 0.380727, 1.60163, 0.29 ) }
    dend_13 { pt3dadd( -49.8137, 0.535757, 1.96042, 0.22 ) }
    dend_13 { pt3dadd( -49.8736, 0.550769, 1.99351, 0.22 ) }
    dend_13 { pt3dadd( -50.3681, 0.687574, 2.28709, 0.22 ) }
    dend_13 { pt3dadd( -51.0046, 0.866918, 2.68903, 1.4 ) }
    dend_13 { pt3dadd( -51.9244, 1.10092, 3.26193, 1.62 ) }
    dend_13 { pt3dadd( -53.4082, 1.4641, 4.17445, 0.22 ) }
    dend_13 { pt3dadd( -54.3726, 1.69762, 4.75737, 1.33 ) }
    dend_13 { pt3dadd( -54.7096, 1.77918, 4.95619, 2.06 ) }
    dend_13 { pt3dadd( -55.164, 1.88306, 5.22626, 2.06 ) }
    dend_13 { pt3dadd( -56.4858, 2.15987, 5.98817, 0.22 ) }
    dend_13 { pt3dadd( -57.0353, 2.26225, 6.27763, 0.29 ) }
    dend_13 { pt3dadd( -57.3193, 2.29847, 6.42396, 0.29 ) }
    dend_13 { pt3dadd( -57.381, 2.30628, 6.45585, 0.29 ) }
    dend_13 { pt3dadd( -58.5586, 2.44436, 7.07752, 0.22 ) }
    dend_13 { pt3dadd( -59.2475, 2.52612, 7.44818, 1.33 ) }
    dend_13 { pt3dadd( -59.705, 2.55852, 7.70064, 1.92 ) }
    dend_13 { pt3dadd( -60.9312, 2.57607, 8.35363, 0.22 ) }
    dend_13 { pt3dadd( -61.7128, 2.55441, 8.75062, 0.22 ) }
    dend_13 { pt3dadd( -62.5407, 2.50203, 9.13947, 1.25 ) }
    dend_13 { pt3dadd( -62.819, 2.47077, 9.26082, 1.25 ) }
    dend_13 { pt3dadd( -64.1662, 2.25284, 9.85158, 0.22 ) }
    dend_13 { pt3dadd( -64.5061, 2.18848, 10.0017, 0.66 ) }
    dend_13 { pt3dadd( -64.7145, 2.15311, 10.0922, 0.66 ) }
    dend_13 { pt3dadd( -65.4454, 2.07529, 10.4249, 0.22 ) }
    dend_13 { pt3dadd( -66.5476, 2.03428, 10.9295, 1.55 ) }
    dend_13 { pt3dadd( -66.6016, 2.03572, 10.9552, 1.55 ) }
    dend_13 { pt3dadd( -67.0711, 2.0989, 11.1945, 1.55 ) }
    dend_13 { pt3dadd( -68.42, 2.38386, 11.9163, 0.22 ) }
    dend_13 { pt3dadd( -68.9077, 2.51987, 12.1879, 0.37 ) }
    dend_13 { pt3dadd( -69.048, 2.57338, 12.2693, 0.44 ) }
    dend_13 { pt3dadd( -69.1037, 2.60169, 12.3019, 0.44 ) }
    dend_13 { pt3dadd( -69.3871, 2.76549, 12.4691, 0.44 ) }
    dend_13 { pt3dadd( -69.8721, 3.107, 12.7721, 0.22 ) }
    dend_13 { pt3dadd( -69.9386, 3.17829, 12.82, 0.22 ) }
    dend_13 { pt3dadd( -70.2302, 3.52972, 12.9907, 0.59 ) }
    dend_13 { pt3dadd( -70.3691, 3.69186, 13.0612, 0.59 ) }
    dend_13 { pt3dadd( -70.5239, 3.86258, 13.131, 0.59 ) }
    dend_13 { pt3dadd( -70.5781, 3.9058, 13.1455, 0.59 ) }
    dend_13 { pt3dadd( -71.3616, 4.37903, 13.2952, 0.22 ) }
    dend_13 { pt3dadd( -71.9491, 4.66848, 13.3916, 0.22 ) }
    dend_13 { pt3dadd( -72.5061, 4.89531, 13.4729, 1.11 ) }
    dend_13 { pt3dadd( -72.7906, 4.98214, 13.5156, 1.33 ) }
    dend_13 { pt3dadd( -74.469, 5.29208, 13.7593, 0.22 ) }
    dend_13 { pt3dadd( -75.1866, 5.35753, 13.8569, 1.11 ) }
    dend_13 { pt3dadd( -75.5606, 5.35872, 13.9052, 1.77 ) }
    dend_13 { pt3dadd( -75.856, 5.3445, 13.948, 1.77 ) }
    dend_13 { pt3dadd( -77.0173, 5.27085, 14.1146, 0.29 ) }
    dend_13 { pt3dadd( -78.1551, 5.17545, 14.2827, 0.22 ) }
    dend_13 { pt3dadd( -78.7262, 5.11084, 14.3751, 0.88 ) }
    dend_13 { pt3dadd( -79.3044, 5.05728, 14.4671, 0.96 ) }
    dend_13 { pt3dadd( -79.3633, 5.05291, 14.4763, 0.96 ) }
    dend_13 { pt3dadd( -80.2622, 5.01019, 14.6179, 0.22 ) }
    dend_13 { pt3dadd( -80.8614, 5.00456, 14.7101, 0.22 ) }
    dend_13 { pt3dadd( -81.5261, 5.01035, 14.8015, 0.22 ) }
    dend_13 { pt3dadd( -82.4097, 5.02892, 14.8989, 1.25 ) }
    dend_13 { pt3dadd( -82.4792, 5.02925, 14.9049, 1.25 ) }
    dend_13 { pt3dadd( -83.2085, 5.01876, 14.9605, 1.99 ) }
    dend_13 { pt3dadd( -83.6661, 5.00248, 14.9937, 2.06 ) }
    dend_13 { pt3dadd( -85.1195, 4.98121, 15.0987, 0.59 ) }
    dend_13 { pt3dadd( -86.0898, 4.97889, 15.1732, 0.22 ) }
    dend_13 { pt3dadd( -86.6808, 4.98095, 15.2227, 0.22 ) }
    dend_13 { pt3dadd( -87.4863, 4.99762, 15.3046, 0.22 ) }
    dend_13 { pt3dadd( -88.0694, 5.01903, 15.3737, 0.22 ) }
    dend_13 { pt3dadd( -88.7922, 5.03844, 15.4714, 0.88 ) }
    dend_13 { pt3dadd( -89.1689, 5.03943, 15.5314, 1.33 ) }
    dend_13 { pt3dadd( -89.6012, 5.02292, 15.6021, 1.55 ) }
    dend_13 { pt3dadd( -90.5549, 4.98716, 15.7605, 0.22 ) }
    dend_13 { pt3dadd( -90.6524, 4.98446, 15.7751, 0.22 ) }
    dend_13 { pt3dadd( -91.219, 4.97438, 15.8573, 0.22 ) }
    dend_13 { pt3dadd( -91.8839, 4.96502, 15.954, 0.22 ) }
    dend_13 { pt3dadd( -92.6168, 4.98962, 16.0559, 1.18 ) }
    dend_13 { pt3dadd( -93.2683, 5.04548, 16.1538, 1.62 ) }
    dend_13 { pt3dadd( -94.4801, 5.20895, 16.3304, 0.22 ) }
    dend_13 { pt3dadd( -94.9325, 5.28392, 16.3968, 0.44 ) }
    dend_13 { pt3dadd( -95.7164, 5.43853, 16.5155, 0.22 ) }
    dend_13 { pt3dadd( -96.7506, 5.66063, 16.6745, 1.25 ) }
    dend_13 { pt3dadd( -97.3215, 5.79513, 16.7691, 1.55 ) }
    dend_13 { pt3dadd( -97.9843, 5.96468, 16.8931, 0.74 ) }
    dend_13 { pt3dadd( -99.1674, 6.22755, 17.1899, 0.22 ) }
    dend_13 { pt3dadd( -99.2239, 6.23842, 17.2067, 0.22 ) }
    dend_13 { pt3dadd( -99.8108, 6.33066, 17.4111, 0.22 ) }
    dend_13 { pt3dadd( -100.492, 6.3955, 17.6838, 1.4 ) }
    dend_13 { pt3dadd( -100.942, 6.42397, 17.8765, 1.4 ) }
    dend_13 { pt3dadd( -102.19, 6.48933, 18.4629, 0.22 ) }
    dend_13 { pt3dadd( -102.387, 6.49872, 18.5591, 0.22 ) }
    dend_13 { pt3dadd( -102.92, 6.51667, 18.8082, 0.22 ) }
    dend_13 { pt3dadd( -103.591, 6.55821, 19.1181, 0.96 ) }
    dend_13 { pt3dadd( -103.882, 6.58251, 19.251, 1.25 ) }
    dend_13 { pt3dadd( -104.188, 6.63248, 19.3773, 1.4 ) }
    dend_13 { pt3dadd( -105.305, 6.93556, 19.7958, 0.22 ) }
    dend_13 { pt3dadd( -105.973, 7.14454, 20.0376, 0.22 ) }
    dend_13 { pt3dadd( -107.068, 7.61833, 20.2326, 0.22 ) }
    dend_13 { pt3dadd( -107.13, 7.65041, 20.2351, 0.22 ) }
    dend_13 { pt3dadd( -107.965, 8.10946, 20.1853, 1.03 ) }
    dend_13 { pt3dadd( -108.409, 8.3656, 20.0634, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_13 { pt3dadd( -108.71, 8.53464, 19.9328, 1.69 ) }
    dend_13 { pt3dadd( -110.903, 9.61761, 18.675, 0.22 ) }
    dend_13 { pt3dadd( -111.384, 9.79795, 18.3213, 0.66 ) }
    dend_13 { pt3dadd( -111.558, 9.8478, 18.1795, 0.96 ) }
    dend_13 { pt3dadd( -113.211, 10.1966, 16.712, 0.29 ) }
    dend_13 { pt3dadd( -113.771, 10.2825, 16.164, 0.66 ) }
    dend_13 { pt3dadd( -115.096, 10.4179, 14.8311, 0.29 ) }
    dend_13 { pt3dadd( -116.513, 10.4893, 13.3633, 0.29 ) }
    dend_13 { pt3dadd( -116.953, 10.5135, 12.8975, 0.81 ) }
    dend_13 { pt3dadd( -117.042, 10.5244, 12.8029, 0.81 ) }
    dend_13 { pt3dadd( -118.3, 10.7063, 11.482, 0.22 ) }
    dend_13 { pt3dadd( -118.772, 10.7978, 10.9797, 0.22 ) }
    dend_13 { pt3dadd( -119.721, 11.0117, 10.0399, 0.59 ) }
    dend_13 { pt3dadd( -120.019, 11.0859, 9.7698, 0.59 ) }
    dend_13 { pt3dadd( -121.645, 11.4888, 8.29036, 0.59 ) }
    dend_13 { pt3dadd( -122.606, 11.703, 7.41401, 0.22 ) }
    dend_13 { pt3dadd( -122.65, 11.7109, 7.37389, 0.22 ) }
    dend_13 { pt3dadd( -123.317, 11.7828, 6.7272, 0.81 ) }
    dend_13 { pt3dadd( -123.55, 11.7859, 6.50993, 1.11 ) }
    dend_13 { pt3dadd( -125.389, 11.7212, 4.82059, 0.22 ) }
    dend_13 { pt3dadd( -125.488, 11.7188, 4.70762, 0.22 ) }
    dend_13 { pt3dadd( -125.945, 11.7211, 4.14409, 0.22 ) }
    dend_13 { pt3dadd( -126.658, 11.7251, 3.25209, 1.62 ) }
    dend_13 { pt3dadd( -127.128, 11.7234, 2.65658, 1.77 ) }
    dend_13 { pt3dadd( -127.211, 11.7228, 2.55621, 1.77 ) }
    dend_13 { pt3dadd( -130.619, 11.6227, -1.34733, 0.52 ) }
    dend_13 { pt3dadd( -131.265, 11.6073, -2.0576, 0.22 ) }
    dend_13 { pt3dadd( -131.524, 11.604, -2.33499, 0.52 ) }
    dend_13 { pt3dadd( -131.854, 11.5946, -2.70191, 0.52 ) }
    dend_13 { pt3dadd( -132.328, 11.5524, -3.27322, 0.22 ) }
    dend_13 { pt3dadd( -132.967, 11.4012, -4.0664, 0.96 ) }
    dend_13 { pt3dadd( -133.2, 11.2431, -4.40243, 0.96 ) }
    dend_13 { pt3dadd( -133.231, 11.2144, -4.46045, 0.96 ) }
    dend_13 { pt3dadd( -133.99, 10.2909, -6.17828, 0.22 ) }
    dend_13 { pt3dadd( -134.254, 9.91504, -6.87532, 0.81 ) }
    dend_13 { pt3dadd( -134.368, 9.70466, -7.25854, 0.88 ) }
    dend_13 { pt3dadd( -134.72, 8.96223, -8.57358, 0.22 ) }
    dend_13 { pt3dadd( -134.914, 8.52512, -9.35669, 0.37 ) }
    dend_13 { pt3dadd( -134.975, 8.38139, -9.6107, 0.37 ) }
    dend_13 { pt3dadd( -135.392, 7.37393, -11.3943, 0.22 ) }
    dend_13 { pt3dadd( -135.69, 6.65674, -12.7339, 0.22 ) }
    dend_13 { pt3dadd( -135.704, 6.62447, -12.7966, 0.22 ) }
    dend_13 { pt3dadd( -135.969, 6.00414, -14.0145, 0.22 ) }
    dend_13 { pt3dadd( -135.98, 5.97721, -14.0686, 0.22 ) }
    dend_13 { pt3dadd( -136.333, 5.19029, -15.8092, 0.22 ) }
    dend_13 { pt3dadd( -136.35, 5.14585, -15.9071, 0.22 ) }
    dend_13 { pt3dadd( -136.482, 4.83212, -16.6123, 1.11 ) }
    dend_13 { pt3dadd( -136.538, 4.6814, -16.9538, 1.69 ) }
    dend_13 { pt3dadd( -136.55, 4.64896, -17.0281, 1.69 ) }
    dend_13 { pt3dadd( -136.97, 3.33084, -19.8108, 0.29 ) }
    dend_13 { pt3dadd( -137.044, 3.06163, -20.3583, 0.59 ) }
    dend_13 { pt3dadd( -137.07, 2.95985, -20.5583, 0.59 ) }
    dend_13 { pt3dadd( -137.078, 2.92397, -20.6316, 0.59 ) }
    dend_13 { pt3dadd( -137.25, 2.1932, -22.0942, 0.22 ) }
    dend_13 { pt3dadd( -137.363, 1.72031, -22.9456, 0.22 ) }
    dend_13 { pt3dadd( -137.499, 1.14955, -23.6732, 0.74 ) }
    dend_13 { pt3dadd( -137.575, 0.878489, -24.0401, 0.74 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -36.6935, -7.09758, -2.66016, 1.4 ) }
    dend_10 { pt3dadd( -41.2876, -5.95855, -6.23796, 1.4 ) }
    dend_10 { pt3dadd( -42.3264, -5.69405, -7.00326, 1.4 ) }
    dend_10 { pt3dadd( -42.9348, -5.51977, -7.41966, 1.4 ) }
    dend_10 { pt3dadd( -44.6362, -4.91648, -8.54268, 0.66 ) }
    dend_10 { pt3dadd( -45.5945, -4.53541, -9.17067, 0.29 ) }
    dend_10 { pt3dadd( -46.5608, -4.16618, -9.7551, 0.29 ) }
    dend_10 { pt3dadd( -48.1609, -3.54933, -10.5126, 0.29 ) }
    dend_10 { pt3dadd( -48.8768, -3.21346, -10.8541, 1.11 ) }
    dend_10 { pt3dadd( -50.2682, -2.5054, -11.5037, 1.25 ) }
    dend_10 { pt3dadd( -51.6791, -1.76131, -12.1451, 0.22 ) }
    dend_10 { pt3dadd( -53.129, -0.96519, -12.8231, 1.47 ) }
    dend_10 { pt3dadd( -54.1998, -0.413071, -13.317, 2.06 ) }
    dend_10 { pt3dadd( -55.3489, 0.0681012, -13.8054, 2.14 ) }
    dend_10 { pt3dadd( -55.4177, 0.0921571, -13.8347, 2.06 ) }
    dend_10 { pt3dadd( -57.0638, 0.535505, -14.4541, 0.37 ) }
    dend_10 { pt3dadd( -57.8718, 0.717115, -14.7188, 0.29 ) }
    dend_10 { pt3dadd( -59.082, 0.913713, -15.1204, 1.55 ) }
    dend_10 { pt3dadd( -59.9638, 0.961248, -15.4005, 1.92 ) }
    dend_10 { pt3dadd( -61.0774, 0.941314, -15.736, 0.74 ) }
    dend_10 { pt3dadd( -62.1517, 0.879521, -16.0827, 0.29 ) }
    dend_10 { pt3dadd( -63.0565, 0.786655, -16.3909, 0.29 ) }
    dend_10 { pt3dadd( -64.8272, 0.592101, -17.0715, 0.29 ) }
    dend_10 { pt3dadd( -66.4561, 0.392336, -17.7346, 1.84 ) }
    dend_10 { pt3dadd( -67.2146, 0.309153, -18.0471, 2.5 ) }
    dend_10 { pt3dadd( -68.4666, 0.170638, -18.5356, 2.06 ) }
    dend_10 { pt3dadd( -68.5521, 0.161435, -18.5686, 2.06 ) }
    dend_10 { pt3dadd( -70.6132, -0.0576552, -19.3354, 0.22 ) }
    dend_10 { pt3dadd( -70.713, -0.0689642, -19.3668, 0.22 ) }
    dend_10 { pt3dadd( -71.5794, -0.165318, -19.6057, 0.22 ) }
    dend_10 { pt3dadd( -72.9549, -0.348944, -19.9381, 1.33 ) }
    dend_10 { pt3dadd( -73.5195, -0.433092, -20.0389, 1.84 ) }
    dend_10 { pt3dadd( -74.2643, -0.540048, -20.1527, 2.28 ) }
    dend_10 { pt3dadd( -74.7957, -0.607261, -20.209, 1.99 ) }
    dend_10 { pt3dadd( -76.0293, -0.720135, -20.3166, 0.52 ) }
    dend_10 { pt3dadd( -77.0645, -0.813519, -20.3994, 0.29 ) }
    dend_10 { pt3dadd( -78.0458, -0.888941, -20.5135, 0.29 ) }
    dend_10 { pt3dadd( -78.4142, -0.922653, -20.5659, 0.44 ) }
    dend_10 { pt3dadd( -78.9691, -0.98079, -20.6569, 0.44 ) }
    dend_10 { pt3dadd( -79.8087, -1.05748, -20.8601, 0.22 ) }
    dend_10 { pt3dadd( -80.8368, -1.16611, -21.23, 0.22 ) }
    dend_10 { pt3dadd( -81.9778, -1.29122, -21.7028, 0.22 ) }
    dend_10 { pt3dadd( -83.5939, -1.44806, -22.3713, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_10 { pt3dadd( -84.1, -1.4758, -22.5768, 2.58 ) }
    dend_10 { pt3dadd( -85.0858, -1.4635, -22.9832, 2.58 ) }
    dend_10 { pt3dadd( -87.287, -1.18947, -23.924, 0.22 ) }
    dend_10 { pt3dadd( -88.1424, -0.99829, -24.3068, 0.22 ) }
    dend_10 { pt3dadd( -89.0551, -0.750225, -24.6929, 0.22 ) }
    dend_10 { pt3dadd( -89.8501, -0.489573, -25.0373, 0.22 ) }
    dend_10 { pt3dadd( -91.373, 0.062942, -25.692, 1.69 ) }
    dend_10 { pt3dadd( -92.8475, 0.692794, -26.2956, 2.73 ) }
    dend_10 { pt3dadd( -93.7696, 1.23803, -26.7406, 2.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 9/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -22.046, -60.9828, 10.5637, 0.74 ) }
    dend_6 { pt3dadd( -22.8431, -62.3169, 9.24314, 0.74 ) }
    dend_6 { pt3dadd( -23.431, -63.191, 8.4906, 0.44 ) }
    dend_6 { pt3dadd( -23.5081, -63.284, 8.41392, 0.44 ) }
    dend_6 { pt3dadd( -24.128, -63.9385, 7.93023, 0.37 ) }
    dend_6 { pt3dadd( -24.6322, -64.4266, 7.60346, 0.37 ) }
    dend_6 { pt3dadd( -25.1959, -64.9444, 7.32336, 0.59 ) }
    dend_6 { pt3dadd( -25.9764, -65.5109, 7.26384, 0.81 ) }
    dend_6 { pt3dadd( -26.7558, -65.92, 7.40218, 0.52 ) }
    dend_6 { pt3dadd( -27.3245, -66.1751, 7.55024, 0.66 ) }
    dend_6 { pt3dadd( -27.5503, -66.2477, 7.63697, 0.96 ) }
    dend_6 { pt3dadd( -28.5086, -66.4441, 8.08309, 0.59 ) }
    dend_6 { pt3dadd( -29.1247, -66.5241, 8.46441, 0.44 ) }
    dend_6 { pt3dadd( -29.4607, -66.564, 8.7436, 0.44 ) }
    dend_6 { pt3dadd( -36.144, -73.4651, 7.28545, 0.44 ) }
    dend_6 { pt3dadd( -42.9382, -80.4022, 7.19343, 0.44 ) }
    dend_6 { pt3dadd( -49.484, -87.5863, 7.49229, 0.44 ) }
    dend_6 { pt3dadd( -56.3561, -94.0742, 9.51781, 0.44 ) }
    dend_6 { pt3dadd( -62.1786, -101.626, 11.4674, 0.44 ) }
    dend_6 { pt3dadd( -67.5651, -109.226, 14.2677, 0.44 ) }
    dend_6 { pt3dadd( -73.2475, -117.098, 15.3029, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 30/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -22.046, -60.9828, 10.5637, 0.44 ) }
    dend_3 { pt3dadd( -21.9987, -63.4578, 11.113, 0.44 ) }
    dend_3 { pt3dadd( -22.0437, -64.3335, 11.1931, 0.66 ) }
    dend_3 { pt3dadd( -22.1262, -65.1777, 11.1992, 0.88 ) }
    dend_3 { pt3dadd( -22.1485, -65.3374, 11.1972, 0.88 ) }
    dend_3 { pt3dadd( -22.2648, -66.1699, 11.1866, 0.88 ) }
    dend_3 { pt3dadd( -22.2799, -66.2783, 11.1852, 0.88 ) }
    dend_3 { pt3dadd( -22.6662, -67.4547, 10.7455, 0.29 ) }
    dend_3 { pt3dadd( -22.6862, -67.5064, 10.7194, 0.29 ) }
    dend_3 { pt3dadd( -23.1274, -68.2868, 10.2241, 0.37 ) }
    dend_3 { pt3dadd( -25.1206, -78.301, 11.375, 0.37 ) }
    dend_3 { pt3dadd( -26.6373, -88.4256, 12.3303, 0.37 ) }
    dend_3 { pt3dadd( -28.9472, -98.2886, 13.9605, 0.37 ) }
    dend_3 { pt3dadd( -32.1885, -107.889, 15.4943, 0.37 ) }
    dend_3 { pt3dadd( -35.2258, -117.712, 15.5175, 0.37 ) }
    dend_3 { pt3dadd( -38.3658, -127.422, 14.2203, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 46/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 45.5511, -0.0207274, 1.56341, 0.29 ) }
    dend_31 { pt3dadd( 48.2299, 0.624739, 3.22001, 0.29 ) }
    dend_31 { pt3dadd( 48.8624, 0.762792, 3.62998, 0.29 ) }
    dend_31 { pt3dadd( 49.5477, 0.885476, 4.16255, 0.88 ) }
    dend_31 { pt3dadd( 50.1201, 0.953207, 4.64143, 1.11 ) }
    dend_31 { pt3dadd( 50.2223, 0.962306, 4.72793, 1.11 ) }
    dend_31 { pt3dadd( 51.261, 1.04577, 5.55962, 0.44 ) }
    dend_31 { pt3dadd( 52.2904, 1.11309, 6.34404, 0.37 ) }
    dend_31 { pt3dadd( 53.2174, 1.25502, 7.17769, 0.96 ) }
    dend_31 { pt3dadd( 53.7357, 1.38049, 7.66793, 0.96 ) }
    dend_31 { pt3dadd( 54.8669, 1.73199, 8.70357, 0.22 ) }
    dend_31 { pt3dadd( 55.6205, 2.00166, 9.35899, 1.25 ) }
    dend_31 { pt3dadd( 56.7896, 2.47343, 10.2769, 2.06 ) }
    dend_31 { pt3dadd( 58.5978, 3.25246, 11.4982, 1.4 ) }
    dend_31 { pt3dadd( 60.1655, 3.95363, 12.4117, 0.37 ) }
    dend_31 { pt3dadd( 60.8525, 4.24416, 12.77, 0.59 ) }
    dend_31 { pt3dadd( 60.9361, 4.27607, 12.816, 0.59 ) }
    dend_31 { pt3dadd( 61.7918, 4.55029, 13.3106, 0.37 ) }
    dend_31 { pt3dadd( 62.7573, 4.75284, 13.7919, 0.59 ) }
    dend_31 { pt3dadd( 62.8386, 4.76029, 13.8253, 0.59 ) }
    dend_31 { pt3dadd( 64.1165, 4.82137, 14.4254, 0.22 ) }
    dend_31 { pt3dadd( 66.2261, 5.01335, 15.5206, 0.22 ) }
    dend_31 { pt3dadd( 66.3035, 5.02418, 15.5614, 0.22 ) }
    dend_31 { pt3dadd( 67.0863, 5.18695, 15.9463, 1.25 ) }
    dend_31 { pt3dadd( 67.645, 5.31865, 16.1777, 1.77 ) }
    dend_31 { pt3dadd( 68.3404, 5.47527, 16.3853, 1.99 ) }
    dend_31 { pt3dadd( 68.9038, 5.60065, 16.4933, 2.21 ) }
    dend_31 { pt3dadd( 69.4609, 5.67815, 16.515, 2.21 ) }
    dend_31 { pt3dadd( 71.273, 5.80817, 16.5295, 0.29 ) }
    dend_31 { pt3dadd( 72.4839, 5.82181, 16.5194, 0.74 ) }
    dend_31 { pt3dadd( 73.2251, 5.80327, 16.4827, 1.25 ) }
    dend_31 { pt3dadd( 73.3127, 5.8001, 16.4742, 1.25 ) }
    dend_31 { pt3dadd( 75.0398, 5.72719, 16.2287, 0.81 ) }
    dend_31 { pt3dadd( 76.2553, 5.68155, 16.0068, 0.29 ) }
    dend_31 { pt3dadd( 76.542, 5.66246, 15.9422, 0.44 ) }
    dend_31 { pt3dadd( 77.5547, 5.55896, 15.7343, 0.22 ) }
    dend_31 { pt3dadd( 78.2783, 5.45917, 15.6274, 0.96 ) }
    dend_31 { pt3dadd( 78.95, 5.35819, 15.5755, 1.25 ) }
    dend_31 { pt3dadd( 79.5929, 5.26224, 15.5851, 0.81 ) }
    dend_31 { pt3dadd( 80.3363, 5.14395, 15.6471, 0.22 ) }
    dend_31 { pt3dadd( 81.2775, 4.99209, 15.7977, 0.22 ) }
    dend_31 { pt3dadd( 82.1893, 4.84707, 15.9908, 0.88 ) }
    dend_31 { pt3dadd( 82.7366, 4.78382, 16.0995, 1.18 ) }
    dend_31 { pt3dadd( 82.8357, 4.77808, 16.1165, 1.18 ) }
    dend_31 { pt3dadd( 83.8463, 4.78223, 16.2573, 1.18 ) }
    dend_31 { pt3dadd( 84.2538, 4.8064, 16.3026, 1.4 ) }
    dend_31 { pt3dadd( 85.8112, 4.85117, 16.2675, 0.29 ) }
    dend_31 { pt3dadd( 86.8173, 4.84216, 16.1045, 0.29 ) }
    dend_31 { pt3dadd( 87.6339, 4.80283, 15.8241, 1.18 ) }
    dend_31 { pt3dadd( 88.3096, 4.75089, 15.5073, 1.69 ) }
    dend_31 { pt3dadd( 88.3854, 4.74346, 15.4628, 1.69 ) }
    dend_31 { pt3dadd( 90.2689, 4.55612, 14.1681, 0.52 ) }
    dend_31 { pt3dadd( 91.2062, 4.48284, 13.3911, 0.22 ) }
    dend_31 { pt3dadd( 92.3991, 4.42037, 12.2677, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_31 { pt3dadd( 92.462, 4.42213, 12.2053, 1.77 ) }
    dend_31 { pt3dadd( 92.8144, 4.46911, 11.8513, 2.06 ) }
    dend_31 { pt3dadd( 92.8857, 4.47942, 11.7798, 2.06 ) }
    dend_31 { pt3dadd( 94.0212, 4.63896, 10.722, 0.29 ) }
    dend_31 { pt3dadd( 94.0895, 4.63999, 10.6659, 0.29 ) }
    dend_31 { pt3dadd( 94.9876, 4.58755, 10.0043, 0.44 ) }
    dend_31 { pt3dadd( 95.4643, 4.51083, 9.67311, 0.44 ) }
    dend_31 { pt3dadd( 97.2932, 4.12586, 8.48555, 0.22 ) }
    dend_31 { pt3dadd( 98.064, 3.94272, 8.03453, 1.25 ) }
    dend_31 { pt3dadd( 98.7504, 3.76692, 7.68024, 1.33 ) }
    dend_31 { pt3dadd( 98.8396, 3.74515, 7.63895, 1.33 ) }
    dend_31 { pt3dadd( 100.527, 3.36676, 6.97109, 0.22 ) }
    dend_31 { pt3dadd( 101.394, 3.23472, 6.68745, 1.62 ) }
    dend_31 { pt3dadd( 101.926, 3.2116, 6.5358, 1.92 ) }
    dend_31 { pt3dadd( 102.488, 3.21461, 6.37099, 2.06 ) }
    dend_31 { pt3dadd( 104.443, 3.31785, 5.7983, 0.37 ) }
    dend_31 { pt3dadd( 105.43, 3.394, 5.53569, 0.22 ) }
    dend_31 { pt3dadd( 106.293, 3.47862, 5.34329, 0.22 ) }
    dend_31 { pt3dadd( 107.551, 3.58988, 5.09415, 1.4 ) }
    dend_31 { pt3dadd( 108.098, 3.64321, 4.982, 1.77 ) }
    dend_31 { pt3dadd( 109.884, 3.83418, 4.6269, 0.22 ) }
    dend_31 { pt3dadd( 110.714, 3.94037, 4.46086, 0.22 ) }
    dend_31 { pt3dadd( 111.719, 4.06074, 4.2419, 1.18 ) }
    dend_31 { pt3dadd( 112.088, 4.10425, 4.16957, 1.18 ) }
    dend_31 { pt3dadd( 113.57, 4.323, 3.98087, 0.22 ) }
    dend_31 { pt3dadd( 113.656, 4.33775, 3.97318, 0.22 ) }
    dend_31 { pt3dadd( 114.93, 4.60813, 3.91137, 1.33 ) }
    dend_31 { pt3dadd( 115.468, 4.74207, 3.92733, 1.33 ) }
    dend_31 { pt3dadd( 117.104, 5.19638, 4.06283, 0.22 ) }
    dend_31 { pt3dadd( 118.473, 5.57625, 4.2372, 1.18 ) }
    dend_31 { pt3dadd( 119.177, 5.78128, 4.35909, 1.99 ) }
    dend_31 { pt3dadd( 120.24, 6.10865, 4.54, 1.18 ) }
    dend_31 { pt3dadd( 122.091, 6.71325, 4.87128, 0.29 ) }
    dend_31 { pt3dadd( 123.146, 7.0589, 5.03786, 0.59 ) }
    dend_31 { pt3dadd( 124.192, 7.40205, 5.17308, 0.59 ) }
    dend_31 { pt3dadd( 125.696, 7.85347, 5.306, 0.29 ) }
    dend_31 { pt3dadd( 126.847, 8.17788, 5.37663, 0.29 ) }
    dend_31 { pt3dadd( 127.993, 8.45873, 5.41144, 1.18 ) }
    dend_31 { pt3dadd( 128.811, 8.62737, 5.40097, 1.77 ) }
    dend_31 { pt3dadd( 129.143, 8.67414, 5.39957, 1.77 ) }
    dend_31 { pt3dadd( 130.133, 8.70687, 5.41962, 0.74 ) }
    dend_31 { pt3dadd( 131.101, 8.66457, 5.50153, 0.22 ) }
    dend_31 { pt3dadd( 131.839, 8.61298, 5.61265, 0.66 ) }
    dend_31 { pt3dadd( 132.414, 8.57888, 5.71771, 0.88 ) }
    dend_31 { pt3dadd( 133.286, 8.54309, 5.88091, 0.66 ) }
    dend_31 { pt3dadd( 135.196, 8.49681, 6.23762, 0.22 ) }
    dend_31 { pt3dadd( 136.782, 8.50758, 6.52834, 0.96 ) }
    dend_31 { pt3dadd( 137.458, 8.51947, 6.64348, 1.69 ) }
    dend_31 { pt3dadd( 138.131, 8.53748, 6.7362, 1.84 ) }
    dend_31 { pt3dadd( 140.03, 8.60863, 6.92873, 0.29 ) }
    dend_31 { pt3dadd( 140.859, 8.63119, 6.96946, 0.59 ) }
    dend_31 { pt3dadd( 141.625, 8.62959, 6.9691, 0.29 ) }
    dend_31 { pt3dadd( 142.183, 8.57533, 6.96262, 0.59 ) }
    dend_31 { pt3dadd( 143.5, 8.36865, 6.95866, 0.29 ) }
    dend_31 { pt3dadd( 144.327, 8.19955, 6.97295, 0.29 ) }
    dend_31 { pt3dadd( 145.537, 7.93293, 6.97916, 1.25 ) }
    dend_31 { pt3dadd( 145.985, 7.83062, 6.97261, 1.25 ) }
    dend_31 { pt3dadd( 147.581, 7.52832, 6.89219, 0.22 ) }
    dend_31 { pt3dadd( 148.736, 7.34777, 6.78018, 1.4 ) }
    dend_31 { pt3dadd( 149.106, 7.29418, 6.73439, 1.55 ) }
    dend_31 { pt3dadd( 150.962, 7.05131, 6.46202, 0.29 ) }
    dend_31 { pt3dadd( 151.048, 7.04288, 6.44745, 0.29 ) }
    dend_31 { pt3dadd( 152.394, 6.92393, 6.19827, 0.29 ) }
    dend_31 { pt3dadd( 153.215, 6.84625, 6.04236, 0.15 ) }
    dend_31 { pt3dadd( 154.026, 6.69803, 5.9667, 0.15 ) }
    dend_31 { pt3dadd( 154.852, 6.50117, 5.94891, 1.11 ) }
    dend_31 { pt3dadd( 154.95, 6.47446, 5.95566, 1.11 ) }
    dend_31 { pt3dadd( 155.647, 6.28531, 6.02932, 1.47 ) }
    dend_31 { pt3dadd( 156.238, 6.11681, 6.11814, 1.55 ) }
    dend_31 { pt3dadd( 157.854, 5.74858, 6.37379, 0.15 ) }
    dend_31 { pt3dadd( 158.378, 5.6557, 6.44715, 0.29 ) }
    dend_31 { pt3dadd( 159.382, 5.50468, 6.57882, 0.29 ) }
    dend_31 { pt3dadd( 160.71, 5.32199, 6.74488, 1.4 ) }
    dend_31 { pt3dadd( 161.647, 5.17301, 6.87795, 1.84 ) }
    dend_31 { pt3dadd( 163.744, 4.75766, 7.23203, 0.29 ) }
    dend_31 { pt3dadd( 164.82, 4.48664, 7.43338, 0.29 ) }
    dend_31 { pt3dadd( 166.141, 4.07845, 7.70467, 1.11 ) }
    dend_31 { pt3dadd( 166.504, 3.94547, 7.78603, 1.33 ) }
    dend_31 { pt3dadd( 168.41, 3.14295, 8.20877, 0.22 ) }
    dend_31 { pt3dadd( 169.534, 2.59007, 8.44095, 0.22 ) }
    dend_31 { pt3dadd( 170.662, 1.91551, 8.67692, 1.33 ) }
    dend_31 { pt3dadd( 170.94, 1.7278, 8.73148, 1.62 ) }
    dend_31 { pt3dadd( 171.693, 1.17998, 8.8719, 0.88 ) }
    dend_31 { pt3dadd( 173.102, 0.103281, 9.07855, 0.15 ) }
    dend_31 { pt3dadd( 173.86, -0.517439, 9.16219, 0.88 ) }
    dend_31 { pt3dadd( 174.302, -0.90794, 9.21214, 1.11 ) }
    dend_31 { pt3dadd( 175.637, -2.29915, 9.37006, 0.15 ) }
    dend_31 { pt3dadd( 176.33, -3.10317, 9.44237, 0.15 ) }
    dend_31 { pt3dadd( 176.885, -3.88921, 9.47738, 1.03 ) }
    dend_31 { pt3dadd( 177.168, -4.39392, 9.47976, 1.47 ) }
    dend_31 { pt3dadd( 177.348, -4.75439, 9.4702, 1.47 ) }
    dend_31 { pt3dadd( 178.361, -6.96189, 9.14866, 0.22 ) }
    dend_31 { pt3dadd( 178.543, -7.40183, 9.04949, 0.59 ) }
    dend_31 { pt3dadd( 179.083, -8.6754, 8.68323, 0.22 ) }
    dend_31 { pt3dadd( 179.435, -9.50783, 8.41293, 1.33 ) }
    dend_31 { pt3dadd( 179.704, -10.1421, 8.18136, 1.4 ) }
    dend_31 { pt3dadd( 180.896, -13.0643, 7.04068, 0.66 ) }
    dend_31 { pt3dadd( 180.932, -13.1531, 7.0043, 0.66 ) }
    dend_31 { pt3dadd( 181.142, -13.698, 6.79422, 0.81 ) }
    dend_31 { pt3dadd( 181.484, -14.5383, 6.52777, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_31 { pt3dadd( 181.516, -14.6203, 6.50763, 0.15 ) }
    dend_31 { pt3dadd( 181.886, -15.6673, 6.33901, 1.03 ) }
    dend_31 { pt3dadd( 182.003, -16.0261, 6.34844, 1.25 ) }
    dend_31 { pt3dadd( 182.638, -17.8551, 6.55118, 0.44 ) }
    dend_31 { pt3dadd( 183.19, -19.3808, 6.80732, 0.22 ) }
    dend_31 { pt3dadd( 183.403, -19.9266, 6.85899, 0.96 ) }
    dend_31 { pt3dadd( 183.693, -20.5876, 6.88258, 1.18 ) }
    dend_31 { pt3dadd( 184.557, -22.3347, 6.35586, 0.22 ) }
    dend_31 { pt3dadd( 185.198, -23.5174, 5.73166, 0.22 ) }
    dend_31 { pt3dadd( 185.23, -23.5742, 5.69245, 0.22 ) }
    dend_31 { pt3dadd( 186.451, -25.9736, 3.6962, 1.03 ) }
    dend_31 { pt3dadd( 186.779, -26.6613, 3.1008, 1.33 ) }
    dend_31 { pt3dadd( 188.716, -31.0446, -0.809888, 0.22 ) }
    dend_31 { pt3dadd( 189.083, -31.9827, -1.69014, 1.33 ) }
    dend_31 { pt3dadd( 189.573, -33.3313, -2.92458, 1.62 ) }
    dend_31 { pt3dadd( 191.049, -37.6867, -6.72872, 0.15 ) }
    dend_31 { pt3dadd( 191.299, -38.5024, -7.388, 0.44 ) }
    dend_31 { pt3dadd( 191.542, -39.3817, -8.04329, 1.11 ) }
    dend_31 { pt3dadd( 193.023, -44.9352, -11.6481, 0.22 ) }
    dend_31 { pt3dadd( 193.301, -45.947, -12.2765, 0.22 ) }
    dend_31 { pt3dadd( 193.324, -46.0218, -12.3194, 0.22 ) }
    dend_31 { pt3dadd( 193.65, -46.8838, -12.7127, 1.4 ) }
    dend_31 { pt3dadd( 193.936, -47.5427, -12.9829, 1.84 ) }
    dend_31 { pt3dadd( 194.745, -49.0008, -13.3058, 0.22 ) }
    dend_31 { pt3dadd( 195.352, -49.8584, -13.1379, 1.18 ) }
    dend_31 { pt3dadd( 195.397, -49.9202, -13.1231, 1.18 ) }
    dend_31 { pt3dadd( 195.886, -50.6302, -12.9065, 1.47 ) }
    dend_31 { pt3dadd( 195.934, -50.7029, -12.8808, 1.47 ) }
    dend_31 { pt3dadd( 196.972, -52.3757, -12.2116, 0.29 ) }
    dend_31 { pt3dadd( 197.701, -53.6645, -11.6479, 0.22 ) }
    dend_31 { pt3dadd( 198.298, -54.7436, -11.1623, 0.74 ) }
    dend_31 { pt3dadd( 199.114, -56.248, -10.4837, 0.22 ) }
    dend_31 { pt3dadd( 199.152, -56.3227, -10.4465, 0.22 ) }
    dend_31 { pt3dadd( 199.687, -57.3994, -9.85784, 0.22 ) }
    dend_31 { pt3dadd( 200.251, -58.5593, -9.158, 1.18 ) }
    dend_31 { pt3dadd( 200.551, -59.1697, -8.77526, 1.92 ) }
    dend_31 { pt3dadd( 200.799, -59.6694, -8.45108, 1.92 ) }
    dend_31 { pt3dadd( 201.7, -61.5404, -7.0075, 0.22 ) }
    dend_31 { pt3dadd( 202.098, -62.4728, -6.20797, 0.29 ) }
    dend_31 { pt3dadd( 202.407, -63.3201, -5.41814, 0.15 ) }
    dend_31 { pt3dadd( 202.511, -63.6694, -5.07979, 0.81 ) }
    dend_31 { pt3dadd( 202.609, -64.0869, -4.68073, 0.96 ) }
    dend_31 { pt3dadd( 203.013, -66.1915, -2.74726, 0.15 ) }
    dend_31 { pt3dadd( 203.11, -66.8568, -2.16184, 0.37 ) }
    dend_31 { pt3dadd( 203.219, -68.0007, -1.19333, 0.22 ) }
    dend_31 { pt3dadd( 203.293, -68.816, -0.517412, 0.96 ) }
    dend_31 { pt3dadd( 203.34, -69.2666, -0.154963, 1.25 ) }
    dend_31 { pt3dadd( 203.495, -70.5821, 0.847421, 0.22 ) }
    dend_31 { pt3dadd( 203.506, -70.6578, 0.899314, 0.22 ) }
    dend_31 { pt3dadd( 203.714, -71.8356, 1.74382, 0.22 ) }
    dend_31 { pt3dadd( 204.082, -73.3556, 2.85629, 0.22 ) }
    dend_31 { pt3dadd( 204.331, -74.1409, 3.41773, 1.18 ) }
    dend_31 { pt3dadd( 204.45, -74.4501, 3.63158, 1.55 ) }
    dend_31 { pt3dadd( 204.829, -75.2411, 4.11208, 1.33 ) }
    dend_31 { pt3dadd( 205.468, -76.453, 4.76369, 0.22 ) }
    dend_31 { pt3dadd( 206.22, -77.7836, 5.38823, 0.15 ) }
    dend_31 { pt3dadd( 206.656, -78.5453, 5.65116, 0.81 ) }
    dend_31 { pt3dadd( 206.972, -79.0843, 5.79329, 1.18 ) }
    dend_31 { pt3dadd( 208.172, -81.0508, 6.23664, 0.22 ) }
    dend_31 { pt3dadd( 208.679, -81.8427, 6.3861, 0.22 ) }
    dend_31 { pt3dadd( 209.009, -82.3118, 6.43872, 0.74 ) }
    dend_31 { pt3dadd( 210.39, -84.0576, 6.54333, 0.29 ) }
    dend_31 { pt3dadd( 211.579, -85.3703, 6.58926, 0.22 ) }
    dend_31 { pt3dadd( 212.451, -86.1922, 6.5005, 0.22 ) }
    dend_31 { pt3dadd( 213.135, -86.7534, 6.36759, 1.4 ) }
    dend_31 { pt3dadd( 214.985, -88.1468, 5.86343, 0.22 ) }
    dend_31 { pt3dadd( 215.884, -88.787, 5.56479, 1.03 ) }
    dend_31 { pt3dadd( 216.39, -89.1588, 5.33987, 1.03 ) }
    dend_31 { pt3dadd( 218.777, -91.1926, 3.93731, 0.59 ) }
    dend_31 { pt3dadd( 218.897, -91.3124, 3.85291, 0.59 ) }
    dend_31 { pt3dadd( 219.715, -92.3299, 3.15268, 0.88 ) }
    dend_31 { pt3dadd( 220.653, -93.7849, 2.20111, 0.37 ) }
    dend_31 { pt3dadd( 221.84, -95.9682, 0.844497, 0.29 ) }
    dend_31 { pt3dadd( 222.522, -97.4479, -0.0179079, 1.11 ) }
    dend_31 { pt3dadd( 222.645, -97.7579, -0.177204, 1.33 ) }
    dend_31 { pt3dadd( 223.706, -100.485, -1.5299, 0.22 ) }
    dend_31 { pt3dadd( 223.923, -101.052, -1.80925, 0.66 ) }
    dend_31 { pt3dadd( 224.076, -101.456, -2.00068, 0.66 ) }
    dend_31 { pt3dadd( 224.857, -103.321, -2.79966, 0.29 ) }
    dend_31 { pt3dadd( 225.185, -103.985, -3.11064, 0.22 ) }
    dend_31 { pt3dadd( 225.592, -104.719, -3.46836, 1.18 ) }
    dend_31 { pt3dadd( 226.817, -106.688, -4.41842, 0.22 ) }
    dend_31 { pt3dadd( 227.294, -107.408, -4.77897, 0.88 ) }
    dend_31 { pt3dadd( 227.516, -107.732, -4.94615, 1.33 ) }
    dend_31 { pt3dadd( 229.373, -110.4, -6.32273, 0.22 ) }
    dend_31 { pt3dadd( 229.822, -111.077, -6.65996, 0.37 ) }
    dend_31 { pt3dadd( 230.247, -111.741, -6.94744, 0.15 ) }
    dend_31 { pt3dadd( 230.658, -112.406, -7.17802, 0.52 ) }
    dend_31 { pt3dadd( 231.148, -113.349, -7.49649, 0.22 ) }
    dend_31 { pt3dadd( 231.422, -113.984, -7.69615, 0.81 ) }
    dend_31 { pt3dadd( 231.54, -114.34, -7.78083, 0.81 ) }
    dend_31 { pt3dadd( 231.898, -115.531, -8.08413, 0.22 ) }
    dend_31 { pt3dadd( 232.152, -116.287, -8.30642, 0.74 ) }
    dend_31 { pt3dadd( 233.071, -118.688, -9.07044, 0.15 ) }
    dend_31 { pt3dadd( 233.11, -118.776, -9.10508, 0.15 ) }
    dend_31 { pt3dadd( 233.338, -119.219, -9.30837, 0.29 ) }
    dend_31 { pt3dadd( 233.933, -120.237, -9.82141, 0.29 ) }
    dend_31 { pt3dadd( 234.644, -121.32, -10.3954, 0.74 ) }
    dend_31 { pt3dadd( 234.856, -121.603, -10.5625, 0.74 ) }
    dend_31 { pt3dadd( 236.317, -123.358, -11.6019, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_31 { pt3dadd( 236.367, -123.421, -11.6394, 0.22 ) }
    dend_31 { pt3dadd( 237.069, -124.342, -12.1881, 1.11 ) }
    dend_31 { pt3dadd( 237.289, -124.637, -12.3661, 1.33 ) }
    dend_31 { pt3dadd( 239.236, -127.204, -13.8376, 0.15 ) }
    dend_31 { pt3dadd( 239.649, -127.721, -14.1257, 0.29 ) }
    dend_31 { pt3dadd( 240.347, -128.525, -14.5399, 0.59 ) }
    dend_31 { pt3dadd( 240.876, -129.137, -14.8646, 0.74 ) }
    dend_31 { pt3dadd( 242.419, -130.895, -15.8064, 0.22 ) }
    dend_31 { pt3dadd( 243.046, -131.6, -16.1777, 0.22 ) }
    dend_31 { pt3dadd( 243.857, -132.491, -16.5964, 0.22 ) }
    dend_31 { pt3dadd( 244.449, -133.141, -16.915, 0.22 ) }
    dend_31 { pt3dadd( 245.938, -134.729, -17.6698, 0.81 ) }
    dend_31 { pt3dadd( 246.231, -135.054, -17.8184, 0.81 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 13/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 45.5511, -0.0207274, 1.56341, 0.22 ) }
    dend_28 { pt3dadd( 46.1759, 1.48911, 0.864559, 0.22 ) }
    dend_28 { pt3dadd( 46.2037, 1.54549, 0.832172, 0.22 ) }
    dend_28 { pt3dadd( 46.5248, 2.14669, 0.459302, 0.22 ) }
    dend_28 { pt3dadd( 46.8215, 2.68739, 0.118, 0.81 ) }
    dend_28 { pt3dadd( 47.1381, 3.25266, -0.24102, 1.55 ) }
    dend_28 { pt3dadd( 47.4618, 3.82178, -0.65175, 1.84 ) }
    dend_28 { pt3dadd( 47.9752, 4.76463, -1.41291, 0.37 ) }
    dend_28 { pt3dadd( 48.0054, 4.82265, -1.46287, 0.37 ) }
    dend_28 { pt3dadd( 48.2985, 5.4141, -2.12143, 0.37 ) }
    dend_28 { pt3dadd( 48.3295, 5.48965, -2.21557, 0.37 ) }
    dend_28 { pt3dadd( 48.6232, 6.40096, -3.41108, 0.29 ) }
    dend_28 { pt3dadd( 48.7447, 6.87382, -4.02294, 0.66 ) }
    dend_28 { pt3dadd( 48.7915, 7.09051, -4.29675, 0.66 ) }
    dend_28 { pt3dadd( 49.036, 8.48246, -6.04841, 0.22 ) }
    dend_28 { pt3dadd( 49.1258, 9.07547, -6.77724, 1.03 ) }
    dend_28 { pt3dadd( 49.1491, 9.24403, -6.97235, 1.47 ) }
    dend_28 { pt3dadd( 49.2345, 9.74706, -7.5116, 0.88 ) }
    dend_28 { pt3dadd( 49.4544, 10.806, -8.59486, 0.22 ) }
    dend_28 { pt3dadd( 49.7033, 11.9278, -9.66816, 1.47 ) }
    dend_28 { pt3dadd( 49.8344, 12.452, -10.1249, 1.99 ) }
    dend_28 { pt3dadd( 49.9055, 12.7151, -10.3513, 2.21 ) }
    dend_28 { pt3dadd( 50.3739, 14.3399, -11.6927, 0.15 ) }
    dend_28 { pt3dadd( 50.5486, 14.8776, -12.1365, 0.15 ) }
    dend_28 { pt3dadd( 50.5717, 14.9399, -12.1855, 0.15 ) }
    dend_28 { pt3dadd( 50.9494, 15.902, -12.9263, 1.33 ) }
    dend_28 { pt3dadd( 51.1342, 16.3815, -13.2996, 1.99 ) }
    dend_28 { pt3dadd( 51.2878, 16.8202, -13.6302, 2.28 ) }
    dend_28 { pt3dadd( 51.9354, 18.8528, -15.0515, 0.22 ) }
    dend_28 { pt3dadd( 52.0894, 19.3413, -15.3807, 0.74 ) }
    dend_28 { pt3dadd( 52.2119, 19.762, -15.6619, 0.74 ) }
    dend_28 { pt3dadd( 52.2291, 19.83, -15.7061, 0.74 ) }
    dend_28 { pt3dadd( 52.4691, 20.8297, -16.3629, 0.15 ) }
    dend_28 { pt3dadd( 52.7027, 21.8193, -17.0016, 0.22 ) }
    dend_28 { pt3dadd( 52.8329, 22.3699, -17.338, 0.22 ) }
    dend_28 { pt3dadd( 53.1656, 23.7151, -18.1913, 1.62 ) }
    dend_28 { pt3dadd( 53.3424, 24.4242, -18.6534, 1.99 ) }
    dend_28 { pt3dadd( 53.3561, 24.4822, -18.6921, 1.99 ) }
    dend_28 { pt3dadd( 53.6282, 25.8167, -19.6015, 0.22 ) }
    dend_28 { pt3dadd( 53.6375, 25.8849, -19.648, 0.22 ) }
    dend_28 { pt3dadd( 53.6907, 26.464, -20.0252, 0.22 ) }
    dend_28 { pt3dadd( 53.7153, 26.7785, -20.2104, 0.37 ) }
    dend_28 { pt3dadd( 53.7314, 27.1206, -20.3926, 0.37 ) }
    dend_28 { pt3dadd( 53.7482, 27.903, -20.7764, 0.22 ) }
    dend_28 { pt3dadd( 53.7416, 28.3965, -21.0006, 0.66 ) }
    dend_28 { pt3dadd( 53.7266, 29.0297, -21.2823, 0.66 ) }
    dend_28 { pt3dadd( 53.6654, 30.5906, -21.9603, 0.22 ) }
    dend_28 { pt3dadd( 53.6096, 31.7574, -22.4583, 1.03 ) }
    dend_28 { pt3dadd( 53.5909, 32.085, -22.5978, 1.55 ) }
    dend_28 { pt3dadd( 53.5518, 32.6459, -22.8435, 1.55 ) }
    dend_28 { pt3dadd( 53.3899, 34.5527, -23.6985, 0.22 ) }
    dend_28 { pt3dadd( 53.2795, 35.6782, -24.2636, 1.25 ) }
    dend_28 { pt3dadd( 53.2364, 36.0584, -24.4795, 1.77 ) }
    dend_28 { pt3dadd( 53.1886, 36.5851, -24.8169, 1.99 ) }
    dend_28 { pt3dadd( 53.1423, 37.2671, -25.3451, 1.47 ) }
    dend_28 { pt3dadd( 53.14, 37.3286, -25.4005, 1.47 ) }
    dend_28 { pt3dadd( 53.1506, 38.186, -26.2925, 0.59 ) }
    dend_28 { pt3dadd( 53.2081, 38.8035, -27.0013, 0.29 ) }
    dend_28 { pt3dadd( 53.2898, 39.4194, -27.7298, 0.22 ) }
    dend_28 { pt3dadd( 53.5149, 40.6123, -29.1323, 1.18 ) }
    dend_28 { pt3dadd( 53.6058, 41.0016, -29.5796, 1.55 ) }
    dend_28 { pt3dadd( 53.6939, 41.2981, -29.9181, 1.55 ) }
    dend_28 { pt3dadd( 54.1344, 42.4611, -31.2132, 0.22 ) }
    dend_28 { pt3dadd( 54.1558, 42.5052, -31.2637, 0.22 ) }
    dend_28 { pt3dadd( 54.4003, 42.9366, -31.7203, 0.22 ) }
    dend_28 { pt3dadd( 54.4538, 43.0342, -31.8107, 0.22 ) }
    dend_28 { pt3dadd( 54.7584, 43.6409, -32.3858, 0.81 ) }
    dend_28 { pt3dadd( 54.9018, 44.0309, -32.7427, 1.18 ) }
    dend_28 { pt3dadd( 54.9507, 44.2381, -32.9193, 1.4 ) }
    dend_28 { pt3dadd( 55.041, 44.7807, -33.3673, 1.03 ) }
    dend_28 { pt3dadd( 55.198, 46.1968, -34.4763, 0.22 ) }
    dend_28 { pt3dadd( 55.2046, 46.2622, -34.5268, 0.22 ) }
    dend_28 { pt3dadd( 55.2601, 46.8389, -34.9966, 0.22 ) }
    dend_28 { pt3dadd( 55.2676, 46.9013, -35.0505, 0.22 ) }
    dend_28 { pt3dadd( 55.3731, 47.6822, -35.7766, 0.22 ) }
    dend_28 { pt3dadd( 55.4536, 48.2201, -36.2836, 0.37 ) }
    dend_28 { pt3dadd( 55.6107, 49.3329, -37.2926, 1.4 ) }
    dend_28 { pt3dadd( 55.6797, 50.0174, -37.9036, 2.14 ) }
    dend_28 { pt3dadd( 55.6974, 50.363, -38.2021, 2.14 ) }
    dend_28 { pt3dadd( 55.6704, 52.0694, -39.6137, 0.22 ) }
    dend_28 { pt3dadd( 55.616, 52.7481, -40.1529, 0.37 ) }
    dend_28 { pt3dadd( 55.5247, 53.4334, -40.6548, 0.37 ) }
    dend_28 { pt3dadd( 55.4007, 54.1852, -41.1291, 0.22 ) }
    dend_28 { pt3dadd( 55.2519, 55.2081, -41.6968, 1.18 ) }
    dend_28 { pt3dadd( 55.1779, 55.7639, -41.9869, 1.77 ) }
    dend_28 { pt3dadd( 55.1515, 56.0113, -42.1023, 1.99 ) }
    dend_28 { pt3dadd( 55.1287, 56.4786, -42.3359, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_28 { pt3dadd( 55.1441, 57.3357, -42.7839, 0.81 ) }
    dend_28 { pt3dadd( 55.2702, 58.8988, -43.6231, 0.22 ) }
    dend_28 { pt3dadd( 55.2841, 59.0021, -43.6775, 0.22 ) }
    dend_28 { pt3dadd( 55.4102, 59.8431, -44.1111, 0.22 ) }
    dend_28 { pt3dadd( 55.604, 61.1095, -44.7529, 1.03 ) }
    dend_28 { pt3dadd( 55.6658, 61.5062, -44.9497, 1.25 ) }
    dend_28 { pt3dadd( 55.833, 62.3819, -45.3676, 1.11 ) }
    dend_28 { pt3dadd( 56.1216, 63.516, -45.947, 0.22 ) }
    dend_28 { pt3dadd( 56.3004, 64.099, -46.3002, 0.44 ) }
    dend_28 { pt3dadd( 56.3243, 64.1641, -46.3452, 0.44 ) }
    dend_28 { pt3dadd( 56.5111, 64.6177, -46.6933, 0.44 ) }
    dend_28 { pt3dadd( 56.9356, 65.4266, -47.4169, 0.22 ) }
    dend_28 { pt3dadd( 57.715, 66.6229, -48.6, 1.18 ) }
    dend_28 { pt3dadd( 58.2575, 67.3126, -49.3256, 1.99 ) }
    dend_28 { pt3dadd( 58.4229, 67.4792, -49.5274, 1.99 ) }
    dend_28 { pt3dadd( 58.4684, 67.5209, -49.5803, 1.99 ) }
    dend_28 { pt3dadd( 59.9658, 68.81, -51.2475, 0.15 ) }
    dend_28 { pt3dadd( 60.5126, 69.2336, -51.8274, 0.15 ) }
    dend_28 { pt3dadd( 60.9061, 69.5189, -52.2036, 0.81 ) }
    dend_28 { pt3dadd( 62.3443, 70.5541, -53.5426, 0.22 ) }
    dend_28 { pt3dadd( 62.9115, 70.9613, -54.0804, 1.11 ) }
    dend_28 { pt3dadd( 63.3177, 71.2637, -54.4757, 1.11 ) }
    dend_28 { pt3dadd( 64.4511, 72.1618, -55.6455, 0.22 ) }
    dend_28 { pt3dadd( 64.9159, 72.5766, -56.1448, 0.22 ) }
    dend_28 { pt3dadd( 65.4547, 73.1132, -56.7277, 1.33 ) }
    dend_28 { pt3dadd( 65.7215, 73.4036, -56.9978, 1.77 ) }
    dend_28 { pt3dadd( 66.1324, 73.8311, -57.3863, 1.18 ) }
    dend_28 { pt3dadd( 67.288, 75.0236, -58.3758, 0.15 ) }
    dend_28 { pt3dadd( 67.7644, 75.5541, -58.7434, 0.37 ) }
    dend_28 { pt3dadd( 67.8125, 75.61, -58.7784, 0.37 ) }
    dend_28 { pt3dadd( 68.0133, 75.864, -58.9155, 0.37 ) }
    dend_28 { pt3dadd( 68.5656, 76.6124, -59.2869, 0.22 ) }
    dend_28 { pt3dadd( 69.0288, 77.2756, -59.5848, 0.22 ) }
    dend_28 { pt3dadd( 69.39, 77.8501, -59.8076, 0.74 ) }
    dend_28 { pt3dadd( 70.0698, 79.0071, -60.2593, 0.22 ) }
    dend_28 { pt3dadd( 70.6195, 80.0327, -60.6631, 1.4 ) }
    dend_28 { pt3dadd( 70.802, 80.4248, -60.8193, 1.69 ) }
    dend_28 { pt3dadd( 70.8355, 80.5068, -60.8522, 1.69 ) }
    dend_28 { pt3dadd( 70.9269, 80.7489, -60.9501, 1.69 ) }
    dend_28 { pt3dadd( 70.9582, 80.8197, -60.9788, 1.69 ) }
    dend_28 { pt3dadd( 71.7086, 82.3376, -61.5956, 0.22 ) }
    dend_28 { pt3dadd( 72.0351, 82.9966, -61.8649, 0.81 ) }
    dend_28 { pt3dadd( 72.2504, 83.4215, -62.0383, 0.81 ) }
    dend_28 { pt3dadd( 72.471, 83.8556, -62.2155, 0.74 ) }
    dend_28 { pt3dadd( 73.1713, 85.3036, -62.8085, 0.22 ) }
    dend_28 { pt3dadd( 73.5999, 86.2496, -63.2149, 1.03 ) }
    dend_28 { pt3dadd( 73.8531, 86.8417, -63.4801, 1.25 ) }
    dend_28 { pt3dadd( 74.4115, 88.2375, -64.1245, 0.15 ) }
    dend_28 { pt3dadd( 74.4474, 88.3458, -64.1775, 0.15 ) }
    dend_28 { pt3dadd( 74.6677, 89.1803, -64.606, 0.15 ) }
    dend_28 { pt3dadd( 74.8163, 90.0067, -65.0492, 1.25 ) }
    dend_28 { pt3dadd( 74.8412, 90.1495, -65.1304, 1.25 ) }
    dend_28 { pt3dadd( 74.9072, 90.5232, -65.351, 1.25 ) }
    dend_28 { pt3dadd( 75.1611, 92.0857, -66.3039, 0.15 ) }
    dend_28 { pt3dadd( 75.1817, 92.1925, -66.3676, 0.15 ) }
    dend_28 { pt3dadd( 75.3373, 92.8769, -66.7828, 0.59 ) }
    dend_28 { pt3dadd( 75.5059, 93.5767, -67.2031, 0.22 ) }
    dend_28 { pt3dadd( 75.5833, 93.8645, -67.3739, 0.29 ) }
    dend_28 { pt3dadd( 75.6055, 93.9326, -67.4153, 0.29 ) }
    dend_28 { pt3dadd( 75.9544, 94.8427, -67.9994, 0.15 ) }
    dend_28 { pt3dadd( 76.28, 95.5983, -68.5345, 0.59 ) }
    dend_28 { pt3dadd( 76.3153, 95.6664, -68.5891, 0.59 ) }
    dend_28 { pt3dadd( 76.9684, 96.7585, -69.5155, 0.22 ) }
    dend_28 { pt3dadd( 77.642, 97.7821, -70.4142, 1.18 ) }
    dend_28 { pt3dadd( 78.0193, 98.3293, -70.8963, 1.62 ) }
    dend_28 { pt3dadd( 78.4458, 98.9154, -71.4151, 1.62 ) }
    dend_28 { pt3dadd( 79.235, 100.007, -72.3515, 0.22 ) }
    dend_28 { pt3dadd( 79.594, 100.529, -72.7303, 0.22 ) }
    dend_28 { pt3dadd( 79.8628, 100.932, -72.9723, 0.74 ) }
    dend_28 { pt3dadd( 80.6405, 102.158, -73.5533, 0.15 ) }
    dend_28 { pt3dadd( 81.3532, 103.325, -73.9869, 1.18 ) }
    dend_28 { pt3dadd( 81.6048, 103.735, -74.1013, 1.18 ) }
    dend_28 { pt3dadd( 82.7167, 105.555, -74.4469, 0.22 ) }
    dend_28 { pt3dadd( 83.2439, 106.367, -74.5659, 0.66 ) }
    dend_28 { pt3dadd( 83.3547, 106.524, -74.582, 0.66 ) }
    dend_28 { pt3dadd( 83.6947, 106.938, -74.6132, 0.66 ) }
    dend_28 { pt3dadd( 84.4995, 107.82, -74.697, 0.15 ) }
    dend_28 { pt3dadd( 85.3291, 108.686, -74.848, 1.25 ) }
    dend_28 { pt3dadd( 85.6738, 109.019, -74.943, 1.55 ) }
    dend_28 { pt3dadd( 85.9744, 109.315, -75.0322, 1.69 ) }
    dend_28 { pt3dadd( 87.2878, 110.621, -75.4989, 0.22 ) }
    dend_28 { pt3dadd( 87.8235, 111.148, -75.7142, 0.22 ) }
    dend_28 { pt3dadd( 88.4134, 111.726, -75.9722, 0.52 ) }
    dend_28 { pt3dadd( 89.4883, 112.738, -76.4719, 0.22 ) }
    dend_28 { pt3dadd( 90.1677, 113.393, -76.8003, 1.03 ) }
    dend_28 { pt3dadd( 90.7716, 113.99, -77.105, 1.4 ) }
    dend_28 { pt3dadd( 91.3709, 114.611, -77.4308, 0.96 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 60.8694, -23.1136, 2.66368, 0.44 ) }
    dend_26 { pt3dadd( 61.7766, -23.3454, 2.46883, 0.44 ) }
    dend_26 { pt3dadd( 62.2844, -23.519, 2.33719, 0.29 ) }
    dend_26 { pt3dadd( 62.6686, -23.6729, 2.23499, 1.11 ) }
    dend_26 { pt3dadd( 62.7019, -23.6876, 2.22658, 1.11 ) }
    dend_26 { pt3dadd( 63.063, -23.8663, 2.14214, 1.11 ) }
    dend_26 { pt3dadd( 64.0509, -24.4251, 1.96214, 0.22 ) }
    dend_26 { pt3dadd( 64.3817, -24.6441, 1.90995, 0.22 ) }
    dend_26 { pt3dadd( 64.5888, -24.7961, 1.8898, 1.25 ) }
    dend_26 { pt3dadd( 64.8577, -24.9985, 1.8821, 1.84 ) }
    dend_26 { pt3dadd( 65.1695, -25.2369, 1.87036, 1.62 ) }
    dend_26 { pt3dadd( 65.9671, -25.8801, 1.84784, 0.22 ) }
    dend_26 { pt3dadd( 66.4679, -26.2879, 1.84886, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_26 { pt3dadd( 66.9243, -26.6481, 1.85486, 1.25 ) }
    dend_26 { pt3dadd( 67.1917, -26.8562, 1.86047, 1.25 ) }
    dend_26 { pt3dadd( 67.9684, -27.455, 1.90208, 0.22 ) }
    dend_26 { pt3dadd( 68.6476, -27.9677, 1.96418, 0.22 ) }
    dend_26 { pt3dadd( 68.6976, -28.0038, 1.97199, 0.22 ) }
    dend_26 { pt3dadd( 69.2991, -28.4162, 2.10911, 1.33 ) }
    dend_26 { pt3dadd( 69.3297, -28.4361, 2.11809, 1.33 ) }
    dend_26 { pt3dadd( 69.7658, -28.7003, 2.27363, 2.14 ) }
    dend_26 { pt3dadd( 69.9432, -28.7932, 2.34774, 2.14 ) }
    dend_26 { pt3dadd( 70.8331, -29.223, 2.68206, 0.15 ) }
    dend_26 { pt3dadd( 71.0707, -29.3384, 2.75524, 0.44 ) }
    dend_26 { pt3dadd( 71.159, -29.3816, 2.77608, 0.44 ) }
    dend_26 { pt3dadd( 71.5436, -29.5678, 2.85199, 0.15 ) }
    dend_26 { pt3dadd( 71.8199, -29.705, 2.89391, 0.81 ) }
    dend_26 { pt3dadd( 72.1012, -29.8672, 2.93331, 0.81 ) }
    dend_26 { pt3dadd( 72.6721, -30.2396, 3.00962, 0.22 ) }
    dend_26 { pt3dadd( 72.708, -30.2644, 3.01422, 0.22 ) }
    dend_26 { pt3dadd( 73.1274, -30.5611, 3.06832, 0.81 ) }
    dend_26 { pt3dadd( 73.3422, -30.7231, 3.09654, 0.81 ) }
    dend_26 { pt3dadd( 74.0535, -31.2898, 3.19601, 0.22 ) }
    dend_26 { pt3dadd( 74.0876, -31.3173, 3.20071, 0.22 ) }
    dend_26 { pt3dadd( 74.5919, -31.7228, 3.27017, 1.4 ) }
    dend_26 { pt3dadd( 74.9748, -32.039, 3.32491, 1.77 ) }
    dend_26 { pt3dadd( 75.2564, -32.275, 3.36543, 1.03 ) }
    dend_26 { pt3dadd( 75.7858, -32.7231, 3.44606, 0.15 ) }
    dend_26 { pt3dadd( 75.9231, -32.8417, 3.46815, 0.22 ) }
    dend_26 { pt3dadd( 76.2381, -33.1354, 3.51882, 0.15 ) }
    dend_26 { pt3dadd( 76.532, -33.435, 3.56788, 0.29 ) }
    dend_26 { pt3dadd( 76.5584, -33.462, 3.57204, 0.29 ) }
    dend_26 { pt3dadd( 76.7678, -33.6695, 3.60341, 0.29 ) }
    dend_26 { pt3dadd( 76.7941, -33.6967, 3.60708, 0.29 ) }
    dend_26 { pt3dadd( 77.2708, -34.1893, 3.69687, 0.22 ) }
    dend_26 { pt3dadd( 77.3013, -34.2207, 3.70371, 0.22 ) }
    dend_26 { pt3dadd( 77.5419, -34.4539, 3.76287, 0.44 ) }
    dend_26 { pt3dadd( 77.6149, -34.5306, 3.78201, 0.44 ) }
    dend_26 { pt3dadd( 77.9273, -34.8584, 3.86761, 0.22 ) }
    dend_26 { pt3dadd( 78.1976, -35.1606, 3.95073, 0.96 ) }
    dend_26 { pt3dadd( 78.4663, -35.4938, 4.03882, 1.55 ) }
    dend_26 { pt3dadd( 78.6058, -35.673, 4.08348, 1.84 ) }
    dend_26 { pt3dadd( 78.9414, -36.1171, 4.18934, 1.11 ) }
    dend_26 { pt3dadd( 79.243, -36.5139, 4.28255, 0.59 ) }
    dend_26 { pt3dadd( 79.5045, -36.8458, 4.36003, 0.29 ) }
    dend_26 { pt3dadd( 79.9363, -37.2879, 4.43751, 0.22 ) }
    dend_26 { pt3dadd( 80.2867, -37.5889, 4.48098, 1.18 ) }
    dend_26 { pt3dadd( 80.3213, -37.6159, 4.4836, 1.18 ) }
    dend_26 { pt3dadd( 80.4897, -37.7295, 4.49017, 1.55 ) }
    dend_26 { pt3dadd( 80.6439, -37.8253, 4.48688, 1.55 ) }
    dend_26 { pt3dadd( 81.7606, -38.4615, 4.4261, 0.22 ) }
    dend_26 { pt3dadd( 81.7992, -38.4814, 4.42097, 0.22 ) }
    dend_26 { pt3dadd( 82.2652, -38.7261, 4.34911, 0.22 ) }
    dend_26 { pt3dadd( 82.8749, -39.0417, 4.21762, 0.74 ) }
    dend_26 { pt3dadd( 83.2516, -39.2325, 4.12515, 1.4 ) }
    dend_26 { pt3dadd( 83.5306, -39.3791, 4.03935, 1.4 ) }
    dend_26 { pt3dadd( 84.6206, -39.9576, 3.66484, 0.22 ) }
    dend_26 { pt3dadd( 85.3822, -40.3373, 3.39664, 0.22 ) }
    dend_26 { pt3dadd( 86.1741, -40.699, 3.11524, 1.18 ) }
    dend_26 { pt3dadd( 86.5028, -40.8375, 2.99266, 1.4 ) }
    dend_26 { pt3dadd( 87.3992, -41.1612, 2.68366, 0.15 ) }
    dend_26 { pt3dadd( 87.7471, -41.2621, 2.57728, 0.15 ) }
    dend_26 { pt3dadd( 88.0936, -41.3386, 2.49101, 0.88 ) }
    dend_26 { pt3dadd( 88.4986, -41.3972, 2.40978, 0.88 ) }
    dend_26 { pt3dadd( 89.3805, -41.4682, 2.32893, 0.22 ) }
    dend_26 { pt3dadd( 89.96, -41.4803, 2.30683, 0.22 ) }
    dend_26 { pt3dadd( 90.5005, -41.4522, 2.35611, 0.59 ) }
    dend_26 { pt3dadd( 90.5492, -41.449, 2.36373, 0.59 ) }
    dend_26 { pt3dadd( 90.9461, -41.4177, 2.4645, 0.29 ) }
    dend_26 { pt3dadd( 91.4782, -41.3676, 2.64853, 1.4 ) }
    dend_26 { pt3dadd( 91.5119, -41.3641, 2.66345, 1.4 ) }
    dend_26 { pt3dadd( 92.1587, -41.2877, 2.95145, 2.14 ) }
    dend_26 { pt3dadd( 92.3418, -41.2618, 3.03214, 2.28 ) }
    dend_26 { pt3dadd( 93.4358, -41.1175, 3.4903, 0.22 ) }
    dend_26 { pt3dadd( 93.6048, -41.1004, 3.56173, 0.52 ) }
    dend_26 { pt3dadd( 93.8761, -41.0878, 3.67162, 0.52 ) }
    dend_26 { pt3dadd( 94.33, -41.0853, 3.84275, 0.22 ) }
    dend_26 { pt3dadd( 94.3769, -41.0899, 3.85752, 0.22 ) }
    dend_26 { pt3dadd( 94.7399, -41.1624, 3.96787, 0.22 ) }
    dend_26 { pt3dadd( 95.2673, -41.3211, 4.12373, 1.03 ) }
    dend_26 { pt3dadd( 95.5475, -41.4125, 4.20278, 1.25 ) }
    dend_26 { pt3dadd( 95.6785, -41.4583, 4.23868, 1.25 ) }
    dend_26 { pt3dadd( 96.6768, -41.8021, 4.49417, 0.22 ) }
    dend_26 { pt3dadd( 97.379, -42.0215, 4.66175, 1.03 ) }
    dend_26 { pt3dadd( 97.5484, -42.0691, 4.69855, 1.4 ) }
    dend_26 { pt3dadd( 97.7663, -42.1291, 4.73724, 1.4 ) }
    dend_26 { pt3dadd( 97.8012, -42.1382, 4.74637, 1.4 ) }
    dend_26 { pt3dadd( 98.8342, -42.3883, 5.09783, 0.22 ) }
    dend_26 { pt3dadd( 98.956, -42.4141, 5.15278, 0.66 ) }
    dend_26 { pt3dadd( 99.1286, -42.4497, 5.24572, 0.66 ) }
    dend_26 { pt3dadd( 99.7657, -42.5701, 5.61984, 0.22 ) }
    dend_26 { pt3dadd( 100.63, -42.7136, 6.17536, 0.96 ) }
    dend_26 { pt3dadd( 100.663, -42.7172, 6.20259, 0.96 ) }
    dend_26 { pt3dadd( 100.824, -42.7345, 6.36793, 1.25 ) }
    dend_26 { pt3dadd( 100.885, -42.7462, 6.43662, 1.25 ) }
    dend_26 { pt3dadd( 101.04, -42.7846, 6.62475, 1.25 ) }
    dend_26 { pt3dadd( 101.065, -42.7917, 6.65942, 1.25 ) }
    dend_26 { pt3dadd( 101.707, -43.0592, 7.49588, 0.22 ) }
    dend_26 { pt3dadd( 102.063, -43.2173, 7.93021, 0.29 ) }
    dend_26 { pt3dadd( 102.397, -43.3734, 8.33124, 0.29 ) }
    dend_26 { pt3dadd( 102.42, -43.3841, 8.35857, 0.29 ) }
    dend_26 { pt3dadd( 102.896, -43.6125, 8.90976, 1.4 ) }
    dend_26 { pt3dadd( 103.19, -43.7538, 9.22435, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_26 { pt3dadd( 104.044, -44.1403, 10.0589, 0.22 ) }
    dend_26 { pt3dadd( 104.07, -44.1506, 10.0827, 0.22 ) }
    dend_26 { pt3dadd( 104.521, -44.3038, 10.4372, 1.03 ) }
    dend_26 { pt3dadd( 104.762, -44.3869, 10.6, 1.03 ) }
    dend_26 { pt3dadd( 105.32, -44.5899, 10.9289, 0.22 ) }
    dend_26 { pt3dadd( 105.984, -44.8248, 11.2985, 0.15 ) }
    dend_26 { pt3dadd( 106.344, -44.9642, 11.4922, 0.74 ) }
    dend_26 { pt3dadd( 106.497, -45.0298, 11.5745, 0.59 ) }
    dend_26 { pt3dadd( 107.074, -45.3, 11.8781, 0.22 ) }
    dend_26 { pt3dadd( 107.33, -45.4294, 12.0172, 0.52 ) }
    dend_26 { pt3dadd( 107.437, -45.4901, 12.0776, 0.52 ) }
    dend_26 { pt3dadd( 107.946, -45.8085, 12.3659, 0.29 ) }
    dend_26 { pt3dadd( 108.454, -46.1251, 12.6644, 1.03 ) }
    dend_26 { pt3dadd( 108.569, -46.1856, 12.727, 1.4 ) }
    dend_26 { pt3dadd( 108.813, -46.2916, 12.8477, 1.55 ) }
    dend_26 { pt3dadd( 109.622, -46.5955, 13.1924, 0.22 ) }
    dend_26 { pt3dadd( 110.024, -46.7311, 13.3517, 0.88 ) }
    dend_26 { pt3dadd( 110.356, -46.8282, 13.4688, 0.88 ) }
    dend_26 { pt3dadd( 111.044, -47.0021, 13.7018, 0.15 ) }
    dend_26 { pt3dadd( 111.536, -47.1201, 13.8675, 0.22 ) }
    dend_26 { pt3dadd( 111.623, -47.139, 13.8955, 0.22 ) }
    dend_26 { pt3dadd( 112.241, -47.2564, 14.0773, 0.81 ) }
    dend_26 { pt3dadd( 112.467, -47.2994, 14.1425, 1.11 ) }
    dend_26 { pt3dadd( 112.514, -47.3086, 14.1557, 1.11 ) }
    dend_26 { pt3dadd( 112.839, -47.3767, 14.2428, 1.11 ) }
    dend_26 { pt3dadd( 113.382, -47.4727, 14.3773, 0.52 ) }
    dend_26 { pt3dadd( 114.034, -47.5736, 14.5426, 0.22 ) }
    dend_26 { pt3dadd( 114.566, -47.6403, 14.6751, 1.11 ) }
    dend_26 { pt3dadd( 114.785, -47.6687, 14.7326, 1.25 ) }
    dend_26 { pt3dadd( 115.119, -47.7075, 14.824, 0.88 ) }
    dend_26 { pt3dadd( 115.689, -47.7677, 14.986, 0.22 ) }
    dend_26 { pt3dadd( 116.023, -47.8027, 15.0867, 0.59 ) }
    dend_26 { pt3dadd( 116.497, -47.8614, 15.2404, 0.29 ) }
    dend_26 { pt3dadd( 116.933, -47.9195, 15.3899, 0.88 ) }
    dend_26 { pt3dadd( 117.238, -47.9626, 15.4974, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 35/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 60.8694, -23.1136, 2.66368, 0.22 ) }
    dend_25 { pt3dadd( 61.1512, -24.1244, 2.82465, 0.22 ) }
    dend_25 { pt3dadd( 61.3052, -24.7202, 2.90232, 0.81 ) }
    dend_25 { pt3dadd( 61.366, -24.9589, 2.93102, 1.03 ) }
    dend_25 { pt3dadd( 61.5776, -25.8011, 3.03284, 0.22 ) }
    dend_25 { pt3dadd( 61.6497, -26.0848, 3.06895, 0.52 ) }
    dend_25 { pt3dadd( 61.8214, -26.7495, 3.15982, 0.22 ) }
    dend_25 { pt3dadd( 61.9062, -27.0919, 3.21718, 1.4 ) }
    dend_25 { pt3dadd( 61.9457, -27.2346, 3.24317, 1.77 ) }
    dend_25 { pt3dadd( 62.0115, -27.471, 3.29872, 1.77 ) }
    dend_25 { pt3dadd( 62.1886, -28.1281, 3.49429, 0.22 ) }
    dend_25 { pt3dadd( 62.256, -28.367, 3.58081, 0.88 ) }
    dend_25 { pt3dadd( 62.3162, -28.5547, 3.66107, 0.88 ) }
    dend_25 { pt3dadd( 62.5688, -29.2927, 4.00165, 0.22 ) }
    dend_25 { pt3dadd( 62.6966, -29.6492, 4.16983, 1.11 ) }
    dend_25 { pt3dadd( 62.7494, -29.7887, 4.23736, 1.4 ) }
    dend_25 { pt3dadd( 63.0479, -30.5521, 4.61953, 0.22 ) }
    dend_25 { pt3dadd( 63.1304, -30.748, 4.71072, 0.52 ) }
    dend_25 { pt3dadd( 63.2102, -30.9248, 4.78713, 0.52 ) }
    dend_25 { pt3dadd( 63.4248, -31.3662, 4.94814, 0.22 ) }
    dend_25 { pt3dadd( 63.5385, -31.5895, 5.01564, 0.74 ) }
    dend_25 { pt3dadd( 63.611, -31.7324, 5.04407, 0.74 ) }
    dend_25 { pt3dadd( 63.905, -32.2921, 5.11366, 0.22 ) }
    dend_25 { pt3dadd( 63.924, -32.3261, 5.11712, 0.22 ) }
    dend_25 { pt3dadd( 64.1492, -32.7036, 5.1414, 1.47 ) }
    dend_25 { pt3dadd( 64.258, -32.8746, 5.14839, 2.14 ) }
    dend_25 { pt3dadd( 64.9249, -33.8877, 5.15221, 0.22 ) }
    dend_25 { pt3dadd( 65.1244, -34.177, 5.14911, 0.44 ) }
    dend_25 { pt3dadd( 65.3411, -34.4822, 5.15109, 0.22 ) }
    dend_25 { pt3dadd( 65.5604, -34.7842, 5.15899, 1.4 ) }
    dend_25 { pt3dadd( 65.7519, -35.0395, 5.16613, 1.84 ) }
    dend_25 { pt3dadd( 66.2614, -35.7029, 5.18404, 0.22 ) }
    dend_25 { pt3dadd( 66.4516, -35.9345, 5.1951, 0.22 ) }
    dend_25 { pt3dadd( 66.7113, -36.2717, 5.20628, 0.88 ) }
    dend_25 { pt3dadd( 66.8637, -36.4802, 5.21399, 0.88 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -93.7696, 1.23803, -26.7406, 0.22 ) }
    dend_12 { pt3dadd( -94.984, 2.31574, -25.8015, 0.22 ) }
    dend_12 { pt3dadd( -95.3902, 2.6921, -25.5065, 0.22 ) }
    dend_12 { pt3dadd( -96.0772, 3.39261, -25.2299, 1.18 ) }
    dend_12 { pt3dadd( -96.4581, 3.82209, -25.1591, 1.47 ) }
    dend_12 { pt3dadd( -96.5649, 3.94759, -25.1474, 1.47 ) }
    dend_12 { pt3dadd( -96.9296, 4.39466, -25.1556, 1.47 ) }
    dend_12 { pt3dadd( -96.9694, 4.44882, -25.168, 1.47 ) }
    dend_12 { pt3dadd( -98.0037, 5.99156, -25.6123, 0.81 ) }
    dend_12 { pt3dadd( -98.4444, 6.75968, -25.8492, 0.29 ) }
    dend_12 { pt3dadd( -98.7137, 7.2787, -25.9768, 0.52 ) }
    dend_12 { pt3dadd( -99.3335, 8.52121, -26.1947, 0.29 ) }
    dend_12 { pt3dadd( -99.3724, 8.60423, -26.2031, 0.29 ) }
    dend_12 { pt3dadd( -99.5936, 9.12782, -26.2071, 0.29 ) }
    dend_12 { pt3dadd( -100.142, 10.5424, -26.0588, 0.22 ) }
    dend_12 { pt3dadd( -100.452, 11.3585, -25.9527, 1.11 ) }
    dend_12 { pt3dadd( -100.592, 11.7518, -25.8803, 1.55 ) }
    dend_12 { pt3dadd( -100.703, 12.0736, -25.7982, 1.55 ) }
    dend_12 { pt3dadd( -101.28, 13.7481, -25.3268, 0.22 ) }
    dend_12 { pt3dadd( -101.558, 14.5278, -25.0809, 0.59 ) }
    dend_12 { pt3dadd( -101.698, 14.9202, -24.9571, 0.74 ) }
    dend_12 { pt3dadd( -102.207, 16.3671, -24.5279, 0.22 ) }
    dend_12 { pt3dadd( -102.594, 17.4399, -24.2101, 1.11 ) }
    dend_12 { pt3dadd( -102.772, 17.909, -24.0734, 1.69 ) }
    dend_12 { pt3dadd( -102.967, 18.4068, -23.923, 1.69 ) }
    dend_12 { pt3dadd( -103.663, 20.0329, -23.5315, 0.22 ) }
    dend_12 { pt3dadd( -104.103, 20.9017, -23.3472, 0.22 ) }
    dend_12 { pt3dadd( -104.549, 21.6267, -23.2127, 0.22 ) }
    dend_12 { pt3dadd( -104.971, 22.2371, -23.1166, 0.88 ) }
    dend_12 { pt3dadd( -105.333, 22.7281, -23.0705, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_12 { pt3dadd( -106.622, 24.4079, -22.9826, 0.22 ) }
    dend_12 { pt3dadd( -107.398, 25.3807, -22.9568, 0.22 ) }
    dend_12 { pt3dadd( -108.327, 26.5284, -22.9671, 1.69 ) }
    dend_12 { pt3dadd( -108.923, 27.29, -22.9826, 1.92 ) }
    dend_12 { pt3dadd( -110.082, 28.8039, -23.0116, 0.29 ) }
    dend_12 { pt3dadd( -110.131, 28.8676, -23.0124, 0.29 ) }
    dend_12 { pt3dadd( -110.697, 29.6147, -22.9963, 0.37 ) }
    dend_12 { pt3dadd( -110.946, 29.9493, -22.9881, 0.37 ) }
    dend_12 { pt3dadd( -111.621, 30.7519, -22.9116, 0.22 ) }
    dend_12 { pt3dadd( -111.74, 30.8725, -22.8839, 0.22 ) }
    dend_12 { pt3dadd( -112.316, 31.3819, -22.678, 0.22 ) }
    dend_12 { pt3dadd( -112.779, 31.7732, -22.5041, 0.88 ) }
    dend_12 { pt3dadd( -113.173, 32.1096, -22.3547, 1.11 ) }
    dend_12 { pt3dadd( -114.175, 33.0077, -21.9595, 0.22 ) }
    dend_12 { pt3dadd( -114.719, 33.5283, -21.7523, 0.44 ) }
    dend_12 { pt3dadd( -115.469, 34.3456, -21.4835, 0.22 ) }
    dend_12 { pt3dadd( -115.763, 34.7089, -21.3778, 0.22 ) }
    dend_12 { pt3dadd( -116.436, 35.647, -21.1433, 1.25 ) }
    dend_12 { pt3dadd( -116.674, 36.0209, -21.0613, 1.69 ) }
    dend_12 { pt3dadd( -117.229, 36.9622, -20.8889, 1.55 ) }
    dend_12 { pt3dadd( -117.787, 37.9355, -20.7531, 0.22 ) }
    dend_12 { pt3dadd( -118.119, 38.5228, -20.6876, 0.44 ) }
    dend_12 { pt3dadd( -118.539, 39.2584, -20.6103, 0.22 ) }
    dend_12 { pt3dadd( -118.862, 39.8089, -20.5509, 0.44 ) }
    dend_12 { pt3dadd( -119.337, 40.6199, -20.443, 0.22 ) }
    dend_12 { pt3dadd( -119.376, 40.6901, -20.4322, 0.22 ) }
    dend_12 { pt3dadd( -119.58, 41.1045, -20.4038, 0.37 ) }
    dend_12 { pt3dadd( -119.897, 41.7735, -20.3781, 0.22 ) }
    dend_12 { pt3dadd( -119.931, 41.8469, -20.3751, 0.22 ) }
    dend_12 { pt3dadd( -120.287, 42.6455, -20.3437, 1.25 ) }
    dend_12 { pt3dadd( -120.728, 43.6107, -20.2864, 1.25 ) }
    dend_12 { pt3dadd( -121.454, 45.1806, -20.1417, 0.22 ) }
    dend_12 { pt3dadd( -121.794, 45.9477, -20.0503, 0.22 ) }
    dend_12 { pt3dadd( -122.288, 47.1167, -19.8724, 1.11 ) }
    dend_12 { pt3dadd( -122.405, 47.3986, -19.8204, 1.4 ) }
    dend_12 { pt3dadd( -123.016, 48.9882, -19.51, 0.22 ) }
    dend_12 { pt3dadd( -123.319, 49.8137, -19.3062, 0.22 ) }
    dend_12 { pt3dadd( -123.647, 50.6978, -19.0472, 1.25 ) }
    dend_12 { pt3dadd( -123.797, 51.0965, -18.9394, 1.4 ) }
    dend_12 { pt3dadd( -124.003, 51.6147, -18.8069, 0.88 ) }
    dend_12 { pt3dadd( -124.643, 53.1275, -18.4699, 0.22 ) }
    dend_12 { pt3dadd( -125.052, 53.9392, -18.3314, 0.44 ) }
    dend_12 { pt3dadd( -125.494, 54.6384, -18.2486, 0.22 ) }
    dend_12 { pt3dadd( -126.004, 55.3617, -18.1687, 1.33 ) }
    dend_12 { pt3dadd( -126.392, 55.8847, -18.1116, 1.69 ) }
    dend_12 { pt3dadd( -126.618, 56.1774, -18.0743, 1.69 ) }
    dend_12 { pt3dadd( -127.554, 57.3419, -17.8822, 0.22 ) }
    dend_12 { pt3dadd( -128.322, 58.3545, -17.7296, 0.22 ) }
    dend_12 { pt3dadd( -128.996, 59.2942, -17.5985, 0.22 ) }
    dend_12 { pt3dadd( -129.362, 59.8103, -17.5116, 0.88 ) }
    dend_12 { pt3dadd( -129.702, 60.3056, -17.4222, 1.25 ) }
    dend_12 { pt3dadd( -129.847, 60.5291, -17.3783, 1.25 ) }
    dend_12 { pt3dadd( -130.642, 61.8935, -17.2833, 0.22 ) }
    dend_12 { pt3dadd( -131.164, 62.808, -17.3126, 0.22 ) }
    dend_12 { pt3dadd( -131.552, 63.4807, -17.3864, 0.81 ) }
    dend_12 { pt3dadd( -131.596, 63.5604, -17.3966, 0.81 ) }
    dend_12 { pt3dadd( -131.838, 63.9999, -17.4548, 1.03 ) }
    dend_12 { pt3dadd( -133.168, 66.4346, -17.7443, 0.22 ) }
    dend_12 { pt3dadd( -133.738, 67.4853, -17.8564, 0.22 ) }
    dend_12 { pt3dadd( -133.772, 67.5446, -17.8634, 0.22 ) }
    dend_12 { pt3dadd( -134.547, 68.8011, -18.0027, 1.92 ) }
    dend_12 { pt3dadd( -134.778, 69.148, -18.0253, 2.21 ) }
    dend_12 { pt3dadd( -136.494, 71.5582, -18.1362, 0.22 ) }
    dend_12 { pt3dadd( -136.543, 71.6222, -18.1354, 0.22 ) }
    dend_12 { pt3dadd( -137.472, 72.822, -18.169, 0.22 ) }
    dend_12 { pt3dadd( -137.955, 73.4222, -18.187, 0.37 ) }
    dend_12 { pt3dadd( -138.608, 74.1947, -18.207, 0.22 ) }
    dend_12 { pt3dadd( -139.545, 75.3017, -18.2013, 0.81 ) }
    dend_12 { pt3dadd( -139.773, 75.5743, -18.1811, 0.81 ) }
    dend_12 { pt3dadd( -140.609, 76.6509, -18.0534, 0.22 ) }
    dend_12 { pt3dadd( -140.991, 77.182, -17.9504, 0.96 ) }
    dend_12 { pt3dadd( -141.365, 77.7173, -17.8346, 1.55 ) }
    dend_12 { pt3dadd( -141.554, 77.9826, -17.7591, 1.55 ) }
    dend_12 { pt3dadd( -142.386, 79.1325, -17.3493, 0.22 ) }
    dend_12 { pt3dadd( -142.703, 79.5769, -17.1893, 0.44 ) }
    dend_12 { pt3dadd( -143.161, 80.2671, -17.0298, 0.22 ) }
    dend_12 { pt3dadd( -143.212, 80.3434, -17.0182, 0.22 ) }
    dend_12 { pt3dadd( -143.705, 81.1124, -16.9676, 0.22 ) }
    dend_12 { pt3dadd( -144.481, 82.3959, -16.9754, 1.25 ) }
    dend_12 { pt3dadd( -144.762, 82.8859, -17.0011, 1.55 ) }
    dend_12 { pt3dadd( -146.003, 85.1567, -17.1714, 0.29 ) }
    dend_12 { pt3dadd( -146.517, 86.1529, -17.2527, 0.44 ) }
    dend_12 { pt3dadd( -147.053, 87.236, -17.3511, 0.22 ) }
    dend_12 { pt3dadd( -147.603, 88.4293, -17.4752, 1.25 ) }
    dend_12 { pt3dadd( -147.729, 88.7078, -17.5001, 1.25 ) }
    dend_12 { pt3dadd( -148.363, 90.1181, -17.6467, 0.29 ) }
    dend_12 { pt3dadd( -148.54, 90.5033, -17.6754, 0.29 ) }
    dend_12 { pt3dadd( -149.14, 91.7657, -17.7889, 0.15 ) }
    dend_12 { pt3dadd( -149.448, 92.3717, -17.8276, 1.03 ) }
    dend_12 { pt3dadd( -149.705, 92.87, -17.8496, 1.11 ) }
    dend_12 { pt3dadd( -150.797, 95.0548, -17.9397, 0.15 ) }
    dend_12 { pt3dadd( -151.252, 95.994, -17.9635, 0.15 ) }
    dend_12 { pt3dadd( -151.708, 96.9508, -17.9641, 1.55 ) }
    dend_12 { pt3dadd( -151.95, 97.4652, -17.9487, 1.62 ) }
    dend_12 { pt3dadd( -152.819, 99.353, -17.8421, 0.15 ) }
    dend_12 { pt3dadd( -153.207, 100.234, -17.7677, 0.15 ) }
    dend_12 { pt3dadd( -153.414, 100.729, -17.7128, 0.52 ) }
    dend_12 { pt3dadd( -153.48, 100.897, -17.6955, 0.81 ) }
    dend_12 { pt3dadd( -153.977, 102.21, -17.5553, 0.15 ) }
    dend_12 { pt3dadd( -154.304, 103.069, -17.4759, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_12 { pt3dadd( -154.396, 103.306, -17.452, 0.81 ) }
    dend_12 { pt3dadd( -155.119, 105.101, -17.2356, 0.15 ) }
    dend_12 { pt3dadd( -155.502, 106.044, -17.1174, 1.33 ) }
    dend_12 { pt3dadd( -155.81, 106.791, -17.0088, 1.33 ) }
    dend_12 { pt3dadd( -156.483, 108.393, -16.722, 0.22 ) }
    dend_12 { pt3dadd( -156.65, 108.774, -16.6497, 0.37 ) }
    dend_12 { pt3dadd( -156.985, 109.481, -16.487, 0.22 ) }
    dend_12 { pt3dadd( -157.022, 109.55, -16.4648, 0.22 ) }
    dend_12 { pt3dadd( -157.268, 109.939, -16.3459, 0.29 ) }
    dend_12 { pt3dadd( -157.95, 110.886, -15.9947, 0.15 ) }
    dend_12 { pt3dadd( -157.997, 110.946, -15.9683, 0.15 ) }
    dend_12 { pt3dadd( -158.514, 111.606, -15.6712, 0.66 ) }
    dend_12 { pt3dadd( -158.912, 112.11, -15.4257, 1.25 ) }
    dend_12 { pt3dadd( -159.401, 112.729, -15.1006, 1.25 ) }
    dend_12 { pt3dadd( -160.236, 113.83, -14.4806, 0.15 ) }
    dend_12 { pt3dadd( -160.609, 114.33, -14.1727, 0.66 ) }
    dend_12 { pt3dadd( -160.764, 114.547, -14.0343, 0.74 ) }
    dend_12 { pt3dadd( -161.418, 115.51, -13.3823, 0.22 ) }
    dend_12 { pt3dadd( -161.471, 115.59, -13.335, 0.22 ) }
    dend_12 { pt3dadd( -162.025, 116.419, -12.9295, 0.22 ) }
    dend_12 { pt3dadd( -162.354, 116.899, -12.7637, 0.66 ) }
    dend_12 { pt3dadd( -162.401, 116.963, -12.7493, 0.66 ) }
    dend_12 { pt3dadd( -162.586, 117.205, -12.7148, 0.66 ) }
    dend_12 { pt3dadd( -163.768, 118.724, -12.5746, 0.22 ) }
    dend_12 { pt3dadd( -164.327, 119.393, -12.5183, 1.03 ) }
    dend_12 { pt3dadd( -164.645, 119.748, -12.4871, 1.18 ) }
    dend_12 { pt3dadd( -165.952, 121.204, -12.3017, 0.22 ) }
    dend_12 { pt3dadd( -166.631, 121.943, -12.1669, 1.11 ) }
    dend_12 { pt3dadd( -166.945, 122.264, -12.0806, 1.33 ) }
    dend_12 { pt3dadd( -168.14, 123.426, -11.6601, 0.15 ) }
    dend_12 { pt3dadd( -168.644, 123.909, -11.4641, 0.88 ) }
    dend_12 { pt3dadd( -169.732, 124.958, -10.9916, 0.15 ) }
    dend_12 { pt3dadd( -170.31, 125.539, -10.6996, 0.59 ) }
    dend_12 { pt3dadd( -171.359, 126.652, -10.118, 0.15 ) }
    dend_12 { pt3dadd( -171.939, 127.31, -9.7756, 0.74 ) }
    dend_12 { pt3dadd( -172.084, 127.496, -9.68153, 0.74 ) }
    dend_12 { pt3dadd( -172.535, 128.133, -9.37758, 0.15 ) }
    dend_12 { pt3dadd( -173.211, 129.121, -8.90661, 1.55 ) }
    dend_12 { pt3dadd( -173.438, 129.475, -8.7396, 1.84 ) }
    dend_12 { pt3dadd( -173.478, 129.539, -8.7089, 1.84 ) }
    dend_12 { pt3dadd( -174.362, 130.863, -8.02213, 0.15 ) }
    dend_12 { pt3dadd( -174.854, 131.544, -7.65192, 0.29 ) }
    dend_12 { pt3dadd( -175.476, 132.329, -7.23024, 0.15 ) }
    dend_12 { pt3dadd( -175.874, 132.793, -6.97313, 0.44 ) }
    dend_12 { pt3dadd( -176.141, 133.079, -6.82324, 0.52 ) }
    dend_12 { pt3dadd( -176.513, 133.434, -6.63811, 0.15 ) }
    dend_12 { pt3dadd( -176.899, 133.765, -6.49214, 0.52 ) }
    dend_12 { pt3dadd( -177.418, 134.172, -6.37719, 0.59 ) }
    dend_12 { pt3dadd( -177.493, 134.222, -6.36801, 0.59 ) }
    dend_12 { pt3dadd( -178.852, 135.041, -6.29286, 0.15 ) }
    dend_12 { pt3dadd( -179.613, 135.452, -6.27347, 1.18 ) }
    dend_12 { pt3dadd( -180.319, 135.723, -6.22441, 1.33 ) }
    dend_12 { pt3dadd( -181.495, 135.979, -6.08618, 0.22 ) }
    dend_12 { pt3dadd( -182.49, 136.089, -5.92376, 0.22 ) }
    dend_12 { pt3dadd( -183.074, 136.102, -5.81284, 0.74 ) }
    dend_12 { pt3dadd( -183.648, 136.058, -5.68559, 1.11 ) }
    dend_12 { pt3dadd( -185.687, 135.71, -4.95633, 0.22 ) }
    dend_12 { pt3dadd( -186.942, 135.404, -4.31336, 0.22 ) }
    dend_12 { pt3dadd( -187.006, 135.385, -4.27213, 0.22 ) }
    dend_12 { pt3dadd( -187.52, 135.227, -3.87699, 1.03 ) }
    dend_12 { pt3dadd( -187.74, 135.16, -3.68636, 1.18 ) }
    dend_12 { pt3dadd( -189.554, 134.702, -1.97006, 0.22 ) }
    dend_12 { pt3dadd( -190.048, 134.629, -1.45159, 0.66 ) }
    dend_12 { pt3dadd( -190.274, 134.611, -1.20357, 0.96 ) }
    dend_12 { pt3dadd( -191.074, 134.589, -0.373066, 0.22 ) }
    dend_12 { pt3dadd( -191.342, 134.593, -0.113511, 0.37 ) }
    dend_12 { pt3dadd( -191.795, 134.626, 0.269303, 0.15 ) }
    dend_12 { pt3dadd( -192.083, 134.683, 0.46149, 0.44 ) }
    dend_12 { pt3dadd( -192.668, 134.822, 0.842474, 0.22 ) }
    dend_12 { pt3dadd( -193.012, 134.928, 1.07569, 0.37 ) }
    dend_12 { pt3dadd( -193.632, 135.181, 1.51451, 0.15 ) }
    dend_12 { pt3dadd( -193.72, 135.226, 1.58413, 0.15 ) }
    dend_12 { pt3dadd( -194.16, 135.498, 1.96496, 0.88 ) }
    dend_12 { pt3dadd( -194.451, 135.75, 2.25093, 1.18 ) }
    dend_12 { pt3dadd( -195.169, 136.556, 2.92472, 0.15 ) }
    dend_12 { pt3dadd( -195.471, 136.954, 3.19911, 0.29 ) }
    dend_12 { pt3dadd( -195.951, 137.642, 3.63615, 0.15 ) }
    dend_12 { pt3dadd( -196.196, 138.007, 3.85332, 0.44 ) }
    dend_12 { pt3dadd( -197.236, 139.651, 4.73493, 0.15 ) }
    dend_12 { pt3dadd( -197.941, 140.838, 5.32077, 0.66 ) }
    dend_12 { pt3dadd( -198.14, 141.208, 5.47813, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 81/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -93.7696, 1.23803, -26.7406, 0.22 ) }
    dend_11 { pt3dadd( -94.9342, 1.09836, -27.4372, 0.22 ) }
    dend_11 { pt3dadd( -95.8209, 0.993644, -27.9278, 1.03 ) }
    dend_11 { pt3dadd( -96.3465, 0.966942, -28.2348, 1.25 ) }
    dend_11 { pt3dadd( -98.2485, 0.915804, -29.2986, 0.22 ) }
    dend_11 { pt3dadd( -98.6069, 0.915559, -29.5002, 0.22 ) }
    dend_11 { pt3dadd( -99.1695, 0.915739, -29.8103, 0.81 ) }
    dend_11 { pt3dadd( -99.4211, 0.928206, -29.9499, 0.81 ) }
    dend_11 { pt3dadd( -101.33, 1.05692, -30.9686, 0.22 ) }
    dend_11 { pt3dadd( -102.037, 1.10775, -31.3281, 0.15 ) }
    dend_11 { pt3dadd( -103.304, 1.20501, -31.9367, 1.47 ) }
    dend_11 { pt3dadd( -103.821, 1.25108, -32.1839, 1.84 ) }
    dend_11 { pt3dadd( -104.467, 1.30845, -32.4868, 1.84 ) }
    dend_11 { pt3dadd( -106.272, 1.49157, -33.2833, 0.15 ) }
    dend_11 { pt3dadd( -106.804, 1.54939, -33.4866, 0.15 ) }
    dend_11 { pt3dadd( -107.497, 1.66999, -33.7574, 0.96 ) }
    dend_11 { pt3dadd( -107.889, 1.74956, -33.8968, 0.96 ) }
    dend_11 { pt3dadd( -109.074, 2.0293, -34.3223, 0.15 ) }
    dend_11 { pt3dadd( -110.023, 2.27302, -34.639, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_11 { pt3dadd( -110.369, 2.38005, -34.7574, 1.33 ) }
    dend_11 { pt3dadd( -112.2, 2.9908, -35.3858, 0.15 ) }
    dend_11 { pt3dadd( -112.931, 3.24533, -35.6185, 0.15 ) }
    dend_11 { pt3dadd( -113.662, 3.54438, -35.8811, 0.37 ) }
    dend_11 { pt3dadd( -114.184, 3.78992, -36.0695, 0.15 ) }
    dend_11 { pt3dadd( -114.938, 4.16633, -36.3385, 1.11 ) }
    dend_11 { pt3dadd( -115.112, 4.26738, -36.406, 1.55 ) }
    dend_11 { pt3dadd( -115.376, 4.44023, -36.4997, 1.55 ) }
    dend_11 { pt3dadd( -117.297, 5.7651, -37.2182, 0.22 ) }
    dend_11 { pt3dadd( -117.99, 6.25468, -37.49, 1.11 ) }
    dend_11 { pt3dadd( -118.148, 6.36745, -37.554, 1.11 ) }
    dend_11 { pt3dadd( -119.564, 7.395, -38.1162, 0.22 ) }
    dend_11 { pt3dadd( -120.345, 7.96875, -38.4265, 0.37 ) }
    dend_11 { pt3dadd( -121.12, 8.55872, -38.7577, 0.15 ) }
    dend_11 { pt3dadd( -121.793, 9.08599, -39.0596, 1.03 ) }
    dend_11 { pt3dadd( -122.088, 9.30402, -39.1932, 1.18 ) }
    dend_11 { pt3dadd( -123.51, 10.2835, -39.8007, 0.29 ) }
    dend_11 { pt3dadd( -124.43, 10.8687, -40.1789, 0.29 ) }
    dend_11 { pt3dadd( -125.799, 11.696, -40.7857, 1.55 ) }
    dend_11 { pt3dadd( -126.34, 12.0032, -41.021, 1.77 ) }
    dend_11 { pt3dadd( -127.573, 12.655, -41.5638, 0.15 ) }
    dend_11 { pt3dadd( -127.985, 12.8598, -41.7535, 0.15 ) }
    dend_11 { pt3dadd( -128.705, 13.2209, -42.106, 0.59 ) }
    dend_11 { pt3dadd( -130.009, 13.9212, -42.7814, 0.15 ) }
    dend_11 { pt3dadd( -130.734, 14.3107, -43.1372, 0.96 ) }
    dend_11 { pt3dadd( -131.237, 14.6038, -43.3787, 1.4 ) }
    dend_11 { pt3dadd( -131.289, 14.6387, -43.4046, 1.4 ) }
    dend_11 { pt3dadd( -132.721, 15.7689, -44.1219, 0.15 ) }
    dend_11 { pt3dadd( -132.761, 15.8065, -44.1403, 0.15 ) }
    dend_11 { pt3dadd( -133.575, 16.66, -44.4637, 0.15 ) }
    dend_11 { pt3dadd( -134.167, 17.3516, -44.6852, 1.25 ) }
    dend_11 { pt3dadd( -134.39, 17.6279, -44.7528, 1.25 ) }
    dend_11 { pt3dadd( -135.668, 19.2998, -45.0504, 0.22 ) }
    dend_11 { pt3dadd( -136.358, 20.2484, -45.1578, 1.25 ) }
    dend_11 { pt3dadd( -136.538, 20.5033, -45.181, 1.77 ) }
    dend_11 { pt3dadd( -137.445, 21.8574, -45.272, 0.22 ) }
    dend_11 { pt3dadd( -138.074, 22.7844, -45.3155, 0.22 ) }
    dend_11 { pt3dadd( -138.76, 23.7443, -45.3262, 1.33 ) }
    dend_11 { pt3dadd( -138.944, 23.9891, -45.3108, 1.47 ) }
    dend_11 { pt3dadd( -139.804, 25.1083, -45.2522, 0.15 ) }
    dend_11 { pt3dadd( -140.049, 25.4285, -45.2477, 0.59 ) }
    dend_11 { pt3dadd( -140.66, 26.2211, -45.2573, 0.15 ) }
    dend_11 { pt3dadd( -140.944, 26.5981, -45.279, 0.37 ) }
    dend_11 { pt3dadd( -140.987, 26.6519, -45.283, 0.37 ) }
    dend_11 { pt3dadd( -141.566, 27.3469, -45.3079, 0.15 ) }
    dend_11 { pt3dadd( -142.137, 28.0041, -45.2942, 0.81 ) }
    dend_11 { pt3dadd( -142.398, 28.2566, -45.3071, 1.25 ) }
    dend_11 { pt3dadd( -142.632, 28.4485, -45.3187, 1.25 ) }
    dend_11 { pt3dadd( -143.702, 29.2408, -45.3942, 0.22 ) }
    dend_11 { pt3dadd( -144.421, 29.7279, -45.4442, 1.11 ) }
    dend_11 { pt3dadd( -144.594, 29.8247, -45.4627, 1.77 ) }
    dend_11 { pt3dadd( -146.606, 30.8278, -45.7712, 0.22 ) }
    dend_11 { pt3dadd( -147.271, 31.1394, -45.895, 0.22 ) }
    dend_11 { pt3dadd( -148.161, 31.5225, -46.0741, 1.18 ) }
    dend_11 { pt3dadd( -148.712, 31.7291, -46.1898, 1.47 ) }
    dend_11 { pt3dadd( -150.186, 32.1907, -46.4825, 0.22 ) }
    dend_11 { pt3dadd( -151.124, 32.4324, -46.6293, 0.22 ) }
    dend_11 { pt3dadd( -151.908, 32.5851, -46.7099, 1.11 ) }
    dend_11 { pt3dadd( -152.537, 32.6846, -46.7638, 1.4 ) }
    dend_11 { pt3dadd( -154.307, 32.9248, -46.8694, 0.15 ) }
    dend_11 { pt3dadd( -155.557, 33.0918, -46.8969, 0.15 ) }
    dend_11 { pt3dadd( -156.193, 33.1978, -46.8837, 0.15 ) }
    dend_11 { pt3dadd( -156.552, 33.2625, -46.873, 0.88 ) }
    dend_11 { pt3dadd( -156.961, 33.3736, -46.8705, 0.96 ) }
    dend_11 { pt3dadd( -157.967, 33.7713, -46.8843, 0.15 ) }
    dend_11 { pt3dadd( -158.505, 34.0582, -46.8912, 0.15 ) }
    dend_11 { pt3dadd( -159.369, 34.5945, -46.9489, 0.96 ) }
    dend_11 { pt3dadd( -159.535, 34.7024, -46.9672, 1.25 ) }
    dend_11 { pt3dadd( -160.505, 35.3486, -47.125, 0.22 ) }
    dend_11 { pt3dadd( -160.904, 35.6273, -47.2115, 0.29 ) }
    dend_11 { pt3dadd( -161.649, 36.1614, -47.3842, 0.15 ) }
    dend_11 { pt3dadd( -162.381, 36.7035, -47.5536, 0.15 ) }
    dend_11 { pt3dadd( -162.906, 37.1161, -47.6825, 1.11 ) }
    dend_11 { pt3dadd( -163.772, 37.8639, -47.8966, 1.25 ) }
    dend_11 { pt3dadd( -164.899, 39.023, -48.1858, 0.15 ) }
    dend_11 { pt3dadd( -165.179, 39.3784, -48.2636, 0.81 ) }
    dend_11 { pt3dadd( -165.474, 39.8295, -48.3447, 0.81 ) }
    dend_11 { pt3dadd( -166.072, 40.9279, -48.4907, 0.15 ) }
    dend_11 { pt3dadd( -166.338, 41.5086, -48.5464, 0.59 ) }
    dend_11 { pt3dadd( -166.846, 42.8344, -48.6413, 0.22 ) }
    dend_11 { pt3dadd( -167.146, 43.7685, -48.6924, 0.81 ) }
    dend_11 { pt3dadd( -167.248, 44.1215, -48.7144, 1.11 ) }
    dend_11 { pt3dadd( -167.636, 45.6317, -48.781, 0.22 ) }
    dend_11 { pt3dadd( -167.754, 46.1369, -48.7923, 0.22 ) }
    dend_11 { pt3dadd( -167.943, 46.9009, -48.8802, 1.18 ) }
    dend_11 { pt3dadd( -168.087, 47.4608, -48.9714, 1.47 ) }
    dend_11 { pt3dadd( -168.687, 49.5697, -49.3819, 0.22 ) }
    dend_11 { pt3dadd( -168.925, 50.3054, -49.5461, 0.22 ) }
    dend_11 { pt3dadd( -169.441, 51.616, -49.8856, 1.77 ) }
    dend_11 { pt3dadd( -170.68, 54.272, -50.6791, 0.22 ) }
    dend_11 { pt3dadd( -170.713, 54.3271, -50.7022, 0.22 ) }
    dend_11 { pt3dadd( -171.143, 54.8331, -51.0124, 0.52 ) }
    dend_11 { pt3dadd( -171.431, 55.0341, -51.2616, 0.52 ) }
    dend_11 { pt3dadd( -172.024, 55.2975, -51.8136, 0.15 ) }
    dend_11 { pt3dadd( -172.232, 55.3578, -52.0168, 0.66 ) }
    dend_11 { pt3dadd( -173.72, 55.7492, -53.8453, 0.29 ) }
    dend_11 { pt3dadd( -174.291, 55.888, -54.6101, 1.69 ) }
    dend_11 { pt3dadd( -175.873, 56.2601, -56.8245, 0.37 ) }
    dend_11 { pt3dadd( -176.179, 56.3367, -57.274, 0.96 ) }
    dend_11 { pt3dadd( -177.409, 56.6665, -59.0999, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_11 { pt3dadd( -180.357, 57.5035, -63.4892, 0.29 ) }
    dend_11 { pt3dadd( -181.062, 57.7079, -64.5355, 0.29 ) }
    dend_11 { pt3dadd( -181.421, 57.8169, -65.0633, 1.11 ) }
    dend_11 { pt3dadd( -183.349, 58.3755, -67.7863, 0.66 ) }
    dend_11 { pt3dadd( -184.256, 58.6044, -69.0476, 0.15 ) }
    dend_11 { pt3dadd( -184.297, 58.6101, -69.1013, 0.15 ) }
    dend_11 { pt3dadd( -184.917, 58.6287, -69.8102, 1.18 ) }
    dend_11 { pt3dadd( -185.26, 58.6187, -70.2415, 1.33 ) }
    dend_11 { pt3dadd( -186.14, 58.4851, -71.4167, 0.22 ) }
    dend_11 { pt3dadd( -186.387, 58.4052, -71.7473, 0.37 ) }
    dend_11 { pt3dadd( -186.842, 58.2218, -72.3461, 0.15 ) }
    dend_11 { pt3dadd( -187.621, 57.8684, -73.3655, 1.03 ) }
    dend_11 { pt3dadd( -188.83, 57.1986, -74.9482, 0.15 ) }
    dend_11 { pt3dadd( -189.277, 56.9094, -75.5684, 1.11 ) }
    dend_11 { pt3dadd( -189.472, 56.751, -75.8443, 1.25 ) }
    dend_11 { pt3dadd( -190.123, 56.1403, -76.7991, 0.52 ) }
    dend_11 { pt3dadd( -190.701, 55.5109, -77.668, 0.22 ) }
    dend_11 { pt3dadd( -191.162, 54.9443, -78.419, 0.22 ) }
    dend_11 { pt3dadd( -191.873, 53.9786, -79.691, 0.96 ) }
    dend_11 { pt3dadd( -192.335, 53.2465, -80.6358, 1.11 ) }
    dend_11 { pt3dadd( -192.685, 52.6417, -81.4409, 1.33 ) }
    dend_11 { pt3dadd( -192.705, 52.6022, -81.4947, 1.33 ) }
    dend_11 { pt3dadd( -193.462, 51.0704, -83.5172, 0.15 ) }
    dend_11 { pt3dadd( -193.48, 51.029, -83.5706, 0.15 ) }
    dend_11 { pt3dadd( -194.014, 49.5134, -85.2763, 0.15 ) }
    dend_11 { pt3dadd( -194.027, 49.4727, -85.3187, 0.15 ) }
    dend_11 { pt3dadd( -194.278, 48.5922, -86.1305, 1.11 ) }
    dend_11 { pt3dadd( -194.406, 48.159, -86.5062, 1.47 ) }
    dend_11 { pt3dadd( -194.924, 46.4571, -87.8613, 0.15 ) }
    dend_11 { pt3dadd( -195.297, 45.2783, -88.8215, 0.29 ) }
    dend_11 { pt3dadd( -195.783, 43.8752, -90.0142, 0.15 ) }
    dend_11 { pt3dadd( -196.077, 43.0404, -90.7139, 0.15 ) }
    dend_11 { pt3dadd( -196.351, 42.2923, -91.3281, 0.59 ) }
    dend_11 { pt3dadd( -196.465, 42.0098, -91.5563, 0.59 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 34/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -38.3658, -127.422, 14.2203, 0.96 ) }
    dend_5 { pt3dadd( -40.6873, -137.14, 14.8353, 0.96 ) }
    dend_5 { pt3dadd( -42.2493, -146.971, 15.8838, 0.96 ) }
    dend_5 { pt3dadd( -43.7343, -156.48, 18.4729, 0.96 ) }
    dend_5 { pt3dadd( -46.5817, -165.511, 21.4745, 0.96 ) }
    dend_5 { pt3dadd( -47.6249, -174.863, 24.6884, 0.96 ) }
    dend_5 { pt3dadd( -49.0378, -183.935, 28.4408, 0.96 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 41/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -38.3658, -127.422, 14.2203, 0.74 ) }
    dend_4 { pt3dadd( -41.3664, -139.847, 14.8841, 0.96 ) }
    dend_4 { pt3dadd( -46.7468, -151.354, 13.8232, 0.96 ) }
    dend_4 { pt3dadd( -50.1501, -163.692, 13.8193, 0.96 ) }
    dend_4 { pt3dadd( -53.0059, -176.111, 14.961, 0.96 ) }
    dend_4 { pt3dadd( -55.5415, -188.618, 13.7667, 0.96 ) }
    dend_4 { pt3dadd( -55.6944, -201.422, 13.0956, 0.96 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 48/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 91.3709, 114.611, -77.4308, 0.15 ) }
    dend_30 { pt3dadd( 92.9523, 115.626, -78.932, 0.15 ) }
    dend_30 { pt3dadd( 93.581, 116.029, -79.5426, 0.37 ) }
    dend_30 { pt3dadd( 93.6482, 116.074, -79.6085, 0.37 ) }
    dend_30 { pt3dadd( 94.6356, 116.656, -80.5338, 0.88 ) }
    dend_30 { pt3dadd( 95.0058, 116.871, -80.8706, 1.11 ) }
    dend_30 { pt3dadd( 96.9954, 118.079, -82.6445, 0.15 ) }
    dend_30 { pt3dadd( 97.8084, 118.607, -83.3886, 1.11 ) }
    dend_30 { pt3dadd( 98.1201, 118.823, -83.6823, 1.47 ) }
    dend_30 { pt3dadd( 99.2485, 119.698, -84.7771, 0.15 ) }
    dend_30 { pt3dadd( 99.8748, 120.256, -85.3954, 0.29 ) }
    dend_30 { pt3dadd( 100.817, 121.161, -86.3205, 0.15 ) }
    dend_30 { pt3dadd( 101.448, 121.82, -86.9333, 0.88 ) }
    dend_30 { pt3dadd( 101.842, 122.212, -87.3037, 0.88 ) }
    dend_30 { pt3dadd( 102.689, 122.903, -88.2062, 0.22 ) }
    dend_30 { pt3dadd( 103.286, 123.244, -88.9796, 0.74 ) }
    dend_30 { pt3dadd( 103.347, 123.264, -89.0612, 0.74 ) }
    dend_30 { pt3dadd( 104.416, 123.482, -90.475, 0.22 ) }
    dend_30 { pt3dadd( 105.499, 123.647, -91.9034, 1.25 ) }
    dend_30 { pt3dadd( 107.827, 123.889, -95.0104, 1.99 ) }
    dend_30 { pt3dadd( 110.621, 124.038, -98.8308, 1.25 ) }
    dend_30 { pt3dadd( 112.465, 124.063, -101.417, 0.22 ) }
    dend_30 { pt3dadd( 112.962, 124.06, -102.134, 0.74 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 71/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 91.3709, 114.611, -77.4308, 1.18 ) }
    dend_29 { pt3dadd( 92.3222, 117.063, -77.2598, 1.18 ) }
    dend_29 { pt3dadd( 92.8906, 118.287, -77.2517, 0.59 ) }
    dend_29 { pt3dadd( 93.2554, 118.916, -77.2461, 0.22 ) }
    dend_29 { pt3dadd( 93.6844, 119.56, -77.2407, 0.37 ) }
    dend_29 { pt3dadd( 95.0424, 121.228, -77.1509, 0.15 ) }
    dend_29 { pt3dadd( 95.5195, 121.751, -77.0929, 0.29 ) }
    dend_29 { pt3dadd( 95.6677, 121.873, -77.0803, 0.29 ) }
    dend_29 { pt3dadd( 96.8432, 122.772, -76.9479, 0.22 ) }
    dend_29 { pt3dadd( 97.2851, 123.099, -76.8664, 0.74 ) }
    dend_29 { pt3dadd( 98.6065, 124.012, -76.5346, 0.22 ) }
    dend_29 { pt3dadd( 99.72, 124.745, -76.1552, 0.22 ) }
    dend_29 { pt3dadd( 100.788, 125.453, -75.7675, 0.74 ) }
    dend_29 { pt3dadd( 101.158, 125.704, -75.6312, 0.88 ) }
    dend_29 { pt3dadd( 101.21, 125.742, -75.612, 0.88 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_44, dend_41, dend_40, dend_39, dend_32, dend_15, dend_0, dend_49, dend_46, dend_43, dend_42, dend_36, dend_33, dend_21, dend_16, dend_8, dend_1, dend_48, dend_47, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_18, dend_17, dend_14, dend_9, dend_7, dend_2, dend_27, dend_24, dend_20, dend_19, dend_13, dend_10, dend_6, dend_3, dend_31, dend_28, dend_26, dend_25, dend_12, dend_11, dend_5, dend_4, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_45, dend_44, dend_41, dend_40, dend_39, dend_32, dend_15, dend_0, dend_49, dend_46, dend_43, dend_42, dend_36, dend_33, dend_21, dend_16, dend_8, dend_1, dend_48, dend_47, dend_38, dend_37, dend_35, dend_34, dend_23, dend_22, dend_18, dend_17, dend_14, dend_9, dend_7, dend_2, dend_27, dend_24, dend_20, dend_19, dend_13, dend_10, dend_6, dend_3, dend_31, dend_28, dend_26, dend_25, dend_12, dend_11, dend_5, dend_4, dend_30, dend_29]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_40 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_39 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_49 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_43 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_42 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_36 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_33 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_38 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_35 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_22 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_17 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_14 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_19 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_6 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_3 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_28 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_26 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_12 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_11 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_5 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_15 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_32 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_16 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_45 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_21 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_41 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_23 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_27 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_2 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_25 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_47 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_37 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_29 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_30 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_47 all.append()
    dend_47 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_44 nseg = 7
    dend_40 nseg = 9
    dend_39 nseg = 7
    dend_49 nseg = 11
    dend_46 nseg = 5
    dend_43 nseg = 5
    dend_42 nseg = 7
    dend_36 nseg = 7
    dend_33 nseg = 3
    dend_38 nseg = 3
    dend_35 nseg = 11
    dend_34 nseg = 11
    dend_22 nseg = 7
    dend_18 nseg = 13
    dend_17 nseg = 7
    dend_14 nseg = 7
    dend_7 nseg = 9
    dend_19 nseg = 3
    dend_13 nseg = 7
    dend_10 nseg = 3
    dend_6 nseg = 3
    dend_3 nseg = 3
    dend_31 nseg = 15
    dend_28 nseg = 7
    dend_26 nseg = 3
    dend_12 nseg = 9
    dend_11 nseg = 7
    dend_5 nseg = 3
    dend_4 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_NBC_695ce74c39_0_0


