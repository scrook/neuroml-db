// Cell: Cell_471081668
/*
{
  "id" : "Cell_471081668",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "437.251, 354.857, 77.6588, 12.584", "443.543, 354.857, 77.6588, 12.584", "449.835, 354.857, 77.6588, 12.584" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "443.543, 354.857, 77.6588, 1.0", "449.384, 368.673, 77.6588, 1.0", "455.226, 382.489, 77.6588, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "439.486, 357.865, 84.0512, 0.2288", "438.669, 358.47, 85.437, 0.2752", "437.853, 359.075, 86.0569, 0.2758", "436.99, 359.651, 86.7432, 0.2766", "435.94, 360.103, 87.3183, 0.2782", "434.878, 360.525, 87.7831, 0.2814", "433.772, 360.796, 88.1544, 0.287", "432.644, 360.943, 88.464, 0.2988", "431.569, 361.252, 88.8224, 0.3142", "430.522, 361.535, 89.3001, 0.3734", "429.461, 361.914, 89.8338, 0.3338", "428.387, 362.292, 90.3641, 0.3002", "427.292, 362.356, 90.949, 0.2748", "426.274, 362.039, 91.695, 0.2748", "425.287, 361.695, 92.582, 0.2752", "424.393, 361.291, 93.6211, 0.2758", "423.571, 360.853, 94.7957, 0.2766", "422.748, 360.414, 96.0439, 0.2784", "421.924, 359.974, 97.3017, 0.2818", "421.018, 359.584, 98.4665, 0.288", "419.945, 359.223, 99.386, 0.3008", "418.976, 358.621, 100.087, 0.3178", "418.0, 358.121, 100.671, 0.3804", "416.989, 358.133, 101.305, 0.3468", "416.066, 358.355, 102.053, 0.3252", "415.04, 358.504, 102.789, 0.3158", "413.96, 358.287, 103.401, 0.3766", "413.055, 357.632, 103.965, 0.3398", "412.085, 357.43, 104.484, 0.311", "410.954, 357.563, 104.929, 0.2952", "409.971, 357.128, 105.377, 0.312", "409.144, 356.528, 106.006, 0.3474", "408.338, 355.962, 106.831, 0.3936", "407.436, 355.447, 107.744, 0.5718", "406.494, 354.95, 108.689, 0.4534", "405.553, 354.453, 109.633, 0.3528", "404.611, 353.957, 110.541, 0.2782", "403.746, 353.284, 111.343, 0.2814", "402.968, 352.471, 112.015, 0.287", "402.207, 351.632, 112.586, 0.2988", "401.448, 350.795, 113.084, 0.3142", "400.712, 349.932, 113.526, 0.3734", "400.161, 348.943, 113.913, 0.3338", "399.563, 347.99, 114.303, 0.3", "398.936, 347.058, 114.712, 0.2746", "398.308, 346.125, 115.133, 0.2746", "397.78, 345.128, 115.544, 0.2746", "397.319, 344.091, 115.933, 0.2746", "396.867, 343.05, 116.298, 0.2746", "396.414, 342.009, 116.634, 0.2746", "395.962, 340.968, 116.945, 0.2748", "395.524, 339.918, 117.222, 0.2748", "395.116, 338.85, 117.455, 0.275", "394.714, 337.781, 117.65, 0.2752", "394.314, 336.71, 117.822, 0.276", "393.912, 335.639, 117.984, 0.277", "393.511, 334.569, 118.151, 0.2794", "393.109, 333.498, 118.34, 0.2834", "392.706, 332.428, 118.555, 0.2906", "392.301, 331.358, 118.798, 0.3056", "391.94, 330.307, 119.155, 0.3264", "391.63, 329.3, 119.667, 0.3976", "391.329, 328.302, 120.295, 0.3734", "390.789, 327.369, 120.952, 0.3988", "389.839, 326.766, 121.497, 0.3338", "388.841, 326.207, 121.931, 0.3", "387.844, 325.647, 122.269, 0.2746", "386.953, 324.953, 122.602, 0.2746", "386.114, 324.211, 122.971, 0.2746", "385.28, 323.466, 123.387, 0.2746", "384.445, 322.72, 123.85, 0.2746", "383.611, 321.974, 124.342, 0.2746", "382.654, 321.372, 124.824, 0.2746", "381.546, 321.114, 125.235, 0.2746", "380.426, 320.881, 125.596, 0.2746", "379.723, 320.043, 126.025, 0.2746", "379.079, 319.142, 126.526, 0.2746", "378.439, 318.238, 127.09, 0.2746", "377.796, 317.335, 127.709, 0.2746", "377.28, 316.352, 128.363, 0.2746", "376.951, 315.284, 129.026, 0.2746", "376.633, 314.212, 129.686, 0.2746", "376.315, 313.14, 130.349, 0.2746", "375.997, 312.068, 131.017, 0.2746", "375.675, 311.004, 131.7, 0.2746", "375.319, 310.03, 132.465, 0.2746", "374.963, 309.06, 133.288, 0.2746", "374.606, 308.09, 134.142, 0.2748", "373.689, 307.431, 134.851, 0.2748", "372.725, 306.813, 135.43, 0.2752", "371.762, 306.196, 135.919, 0.2758", "371.03, 305.416, 136.488, 0.2766", "370.308, 304.63, 137.134, 0.2782", "369.585, 303.843, 137.849, 0.2814", "368.861, 303.057, 138.625, 0.287", "368.138, 302.271, 139.428, 0.2988", "367.141, 301.721, 140.096, 0.3142", "366.127, 301.19, 140.637, 0.3734", "365.052, 300.867, 141.171, 0.3338", "363.978, 300.712, 141.765, 0.3", "362.904, 300.556, 142.413, 0.2746", "361.831, 300.402, 143.105, 0.2746", "360.757, 300.247, 143.835, 0.2746", "359.655, 300.079, 144.534, 0.2746", "358.542, 299.904, 145.163, 0.2746", "357.429, 299.729, 145.728, 0.2744", "356.315, 299.555, 146.245, 0.2744", "355.202, 299.38, 146.728, 0.2742", "354.094, 299.166, 147.186, 0.2736", "353.001, 298.877, 147.625, 0.2728", "351.908, 298.587, 148.059, 0.2712", "350.816, 298.298, 148.48, 0.2684", "349.723, 298.01, 148.88, 0.2626", "348.629, 297.72, 149.254, 0.2542", "347.537, 297.431, 149.598, 0.2288", "346.444, 297.141, 150.267, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "441.657, 359.576, 83.2398, 0.6406", "441.269, 360.547, 84.3595, 0.6406", "440.882, 361.515, 84.8798, 0.6406", "440.799, 362.616, 85.3723, 0.6406", "441.452, 363.477, 85.7931, 0.6406", "442.003, 364.462, 86.1524, 0.6406", "441.157, 364.93, 86.4604, 0.6406", "440.097, 365.35, 86.7353, 0.6406", "439.181, 365.644, 87.2116, 0.6406", "438.265, 365.947, 87.841, 0.6406", "437.411, 366.695, 88.3649, 0.6406", "437.207, 367.82, 88.7796, 0.6406", "437.182, 368.964, 89.0974, 0.6406", "437.182, 370.108, 89.332, 0.6406", "437.188, 371.25, 89.5031, 0.6406", "437.365, 372.324, 89.7683, 0.6406", "438.071, 373.166, 90.0738, 0.6406", "438.974, 373.665, 90.3602, 0.6406", "439.239, 374.764, 90.6643, 0.6406", "439.496, 375.865, 90.9644, 0.6406", "439.711, 376.981, 91.2232, 0.6406", "439.852, 378.117, 91.3996, 0.6406", "439.797, 379.203, 91.523, 0.6406", "439.127, 380.129, 91.6121, 0.6406", "438.387, 380.982, 91.6773, 0.6406", "437.405, 381.565, 91.7378, 0.6406", "436.362, 382.034, 91.8134, 0.6406", "435.297, 382.451, 91.9212, 0.6406", "434.254, 382.921, 92.0693, 0.6406", "433.215, 383.393, 92.2645, 0.6406", "432.207, 383.86, 92.54, 0.6406", "431.651, 384.741, 92.9972, 0.6406", "431.489, 385.788, 93.6146, 0.6406", "431.591, 386.888, 94.2645, 0.6406", "432.084, 387.85, 94.9318, 0.6406", "432.819, 388.507, 95.7407, 0.6406", "432.875, 389.398, 96.6325, 0.6406", "432.369, 390.364, 97.4543, 0.6406", "431.648, 391.247, 98.1442, 0.6406", "430.825, 391.746, 98.9106, 0.6406", "430.042, 392.407, 99.7083, 0.6406", "430.284, 393.453, 100.35, 0.6406", "431.218, 394.063, 100.91, 0.6406", "431.72, 395.023, 101.52, 0.6406", "432.217, 395.991, 102.155, 0.6406", "432.659, 397.021, 102.741, 0.6406", "433.087, 398.04, 103.261, 0.6406", "433.781, 398.769, 103.874, 0.6406", "433.944, 399.853, 104.418, 0.6406", "433.71, 400.967, 104.849, 0.6406", "433.662, 402.093, 105.245, 0.6406", "433.717, 403.214, 105.632, 0.6406", "433.638, 404.347, 105.968, 0.6406", "433.449, 405.474, 106.238, 0.6406", "433.248, 406.585, 106.521, 0.6406", "432.972, 407.667, 106.826, 0.6406", "432.481, 408.691, 107.091, 0.6406", "431.992, 409.706, 107.297, 0.6406", "431.846, 410.836, 107.469, 0.6406", "431.755, 411.968, 107.626, 0.6406", "431.491, 413.081, 107.784, 0.6406", "431.127, 414.159, 107.962, 0.6406", "430.61, 415.176, 108.197, 0.6406", "430.073, 416.113, 108.583, 0.6406", "429.486, 416.965, 109.151, 0.6406", "428.784, 417.827, 109.759, 0.6406", "428.159, 418.766, 110.332, 0.6406", "427.496, 419.643, 110.886, 0.6406", "426.765, 419.687, 111.565, 0.6406", "426.753, 418.784, 112.417, 0.6406", "427.218, 417.84, 113.364, 0.6406", "427.764, 417.072, 114.473, 0.6406", "428.819, 416.707, 115.485, 0.6406", "429.639, 417.099, 116.539, 0.6406", "430.023, 416.684, 117.798, 0.6406", "430.526, 416.274, 119.144, 0.6406", "431.565, 416.09, 120.32, 0.6406", "432.55, 416.572, 121.252, 0.6406", "433.423, 417.205, 122.089, 0.6406", "434.342, 417.633, 122.931, 0.6406", "435.208, 418.21, 123.723, 0.6406", "435.855, 419.109, 124.423, 0.6406", "436.096, 420.089, 125.154, 0.6406", "436.172, 421.14, 125.886, 0.6406", "436.26, 422.268, 126.477, 0.6406", "436.465, 423.39, 126.916, 0.6406", "436.759, 424.495, 127.262, 0.6406", "437.008, 425.593, 127.602, 0.6406", "437.225, 426.69, 127.966, 0.6406", "437.443, 427.787, 128.363, 0.6406", "438.01, 428.729, 128.744, 0.6406", "438.686, 429.649, 129.078, 0.6406", "438.829, 430.694, 129.444, 0.6406", "438.433, 431.651, 129.907, 0.6406", "437.732, 432.516, 130.316, 0.6406", "436.966, 433.366, 130.647, 0.6406", "436.445, 434.371, 130.923, 0.6406", "436.099, 435.456, 131.189, 0.6406", "435.851, 436.552, 131.482, 0.6406", "435.624, 437.65, 131.805, 0.6406", "435.411, 438.754, 132.163, 0.6406", "435.367, 439.89, 132.486, 0.6406", "435.347, 441.034, 132.765, 0.6406", "435.247, 442.172, 133.009, 0.6406", "435.148, 443.299, 133.283, 0.6406", "435.063, 444.409, 133.623, 0.6406", "434.983, 445.513, 134.018, 0.6406", "434.902, 446.618, 134.445, 0.6406", "434.761, 447.724, 134.863, 0.6406", "434.258, 448.731, 135.176, 0.6406", "433.69, 449.724, 135.374, 0.6406", "433.385, 450.794, 135.418, 0.6406", "433.129, 451.881, 135.355, 0.6406", "432.506, 452.818, 135.315, 0.6406", "431.806, 453.722, 135.34, 0.6406", "431.431, 454.745, 135.54, 0.6406", "431.249, 455.79, 135.924, 0.6406", "431.089, 456.835, 136.438, 0.6406", "430.406, 457.706, 136.913, 0.6406", "429.544, 458.457, 137.275, 0.6406", "428.552, 459.021, 137.529, 0.6406", "427.498, 459.464, 137.689, 0.6406", "426.472, 459.968, 137.787, 0.6406", "425.632, 460.74, 137.859, 0.6406", "425.049, 461.722, 137.94, 0.6406", "424.531, 462.738, 138.073, 0.6406", "424.043, 463.763, 138.263, 0.6406", "423.557, 464.789, 138.494, 0.6406", "423.069, 465.814, 138.748, 0.6406", "422.582, 466.84, 139.012, 0.6406", "422.055, 467.848, 139.264, 0.6406", "421.359, 468.755, 139.459, 0.6406", "420.657, 469.658, 139.61, 0.6406", "419.846, 470.464, 139.738, 0.6406", "418.876, 471.069, 139.862, 0.6406", "417.902, 471.671, 139.999, 0.6406", "416.931, 472.274, 140.168, 0.6406", "416.009, 472.877, 140.471, 0.6406", "415.088, 473.479, 140.873, 0.6406", "414.166, 474.081, 141.335, 0.6406", "413.097, 474.479, 141.745, 0.6406", "412.002, 474.811, 142.086, 0.6406", "410.861, 474.875, 142.377, 0.6406", "409.717, 474.874, 142.638, 0.6406" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "447.671, 350.138, 73.9679, 0.6406", "448.405, 349.302, 73.621, 0.6406", "449.235, 348.517, 73.4944, 0.6406", "450.076, 347.742, 73.3992, 0.6406", "450.916, 346.965, 73.334, 0.6406", "451.734, 346.164, 73.2978, 0.6406", "452.542, 345.355, 73.2886, 0.6406", "453.351, 344.547, 73.3054, 0.6406", "453.922, 343.556, 73.3309, 0.6406", "454.399, 342.516, 73.3676, 0.6406", "454.877, 341.476, 73.4219, 0.6406", "455.336, 340.428, 73.4958, 0.6406", "455.669, 339.334, 73.5879, 0.6406", "456.002, 338.24, 73.6929, 0.6406" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "439.429, 359.328, 76.036, 0.2288", "438.659, 360.164, 75.5824, 0.2858", "437.889, 361.002, 75.3852, 0.2952", "437.142, 361.86, 75.15, 0.3134", "436.909, 362.978, 74.9305, 0.3426", "436.664, 364.083, 74.6724, 0.4206", "436.412, 365.175, 74.3697, 0.447", "436.16, 366.268, 74.0457, 0.3856", "435.968, 367.384, 73.743, 0.3494", "435.9, 368.526, 73.5263, 0.3632", "435.887, 369.67, 73.3919, 0.4538", "435.89, 370.814, 73.337, 0.5338", "435.967, 371.848, 73.1954, 0.4228", "435.969, 372.992, 73.1758, 0.3332" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "446.197, 357.662, 65.9711, 0.2288", "447.2, 357.955, 65.5418, 0.2826", "448.336, 357.961, 65.3923, 0.289", "449.448, 357.873, 65.34, 0.3024", "450.552, 357.716, 65.3243, 0.321", "451.539, 357.211, 65.2336, 0.386", "452.397, 356.623, 64.9869, 0.3586", "453.304, 356.213, 64.542, 0.3402", "454.034, 355.347, 64.0116, 0.3748", "454.999, 355.074, 63.4435, 0.3364", "456.069, 355.278, 62.7561, 0.3046", "457.067, 355.437, 61.871, 0.2828", "457.917, 355.56, 60.7936, 0.291", "458.365, 355.858, 59.5255, 0.2994", "457.595, 356.595, 58.471, 0.3476", "456.606, 357.057, 57.5366, 0.2796", "455.73, 357.236, 55.5607, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "449.503, 352.923, 82.0655, 0.4576", "450.548, 352.583, 82.6879, 0.4576", "451.594, 352.163, 82.9548, 0.4576", "452.35, 351.349, 83.1972, 0.4576", "452.667, 350.262, 83.4086, 0.4576", "453.162, 349.238, 83.5968, 0.4576", "454.095, 348.608, 83.7654, 0.4576", "455.203, 348.428, 83.9824, 0.4576", "456.294, 348.259, 84.2794, 0.4576", "457.384, 348.088, 84.6283, 0.4576", "458.447, 347.742, 84.9688, 0.4576", "459.231, 346.91, 85.1889, 0.4576", "460.017, 346.078, 85.2953, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "438.954, 352.096, 84.5944, 0.6864", "437.962, 351.594, 85.267, 0.6864", "436.884, 351.231, 85.5294, 0.6864", "435.8, 351.043, 85.878, 0.6864", "434.663, 350.959, 86.2011, 0.6864", "433.522, 350.874, 86.4674, 0.6864", "432.435, 350.515, 86.686, 0.6864", "431.33, 350.221, 86.8647, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "437.401, 358.047, 77.8137, 0.938", "436.386, 358.573, 77.8652, 0.938", "435.3, 358.916, 77.9598, 0.938", "434.188, 359.102, 78.1085, 0.938", "433.076, 359.286, 78.2841, 0.938", "431.932, 359.307, 78.398, 0.938", "430.788, 359.307, 78.4336, 0.938", "429.653, 359.446, 78.3854, 0.938", "428.522, 359.615, 78.2505, 0.938", "427.378, 359.616, 78.0343, 0.938", "426.312, 359.477, 77.6166, 0.938", "425.258, 359.327, 77.0529, 0.938", "424.203, 359.177, 76.4, 0.938", "423.15, 359.028, 75.7086, 0.938", "422.095, 358.879, 75.0257, 0.938" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000022
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "455.226, 382.489, 77.6588, 1.0", "461.067, 396.305, 77.6588, 1.0", "466.908, 410.121, 77.6588, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "409.717, 474.874, 142.638, 0.6406", "409.765, 474.543, 142.825, 0.2746", "408.811, 474.13, 143.235, 0.2746", "407.858, 473.718, 143.832, 0.2746", "406.904, 473.305, 144.563, 0.2746", "405.958, 472.829, 145.346, 0.2746", "405.03, 472.189, 146.067, 0.2746", "404.102, 471.549, 146.717, 0.2746", "403.174, 470.909, 147.279, 0.2746", "402.246, 470.269, 147.782, 0.2748", "401.187, 470.034, 148.205, 0.2748", "400.043, 470.056, 148.555, 0.275", "398.981, 469.941, 148.931, 0.2758", "398.143, 469.461, 149.502, 0.2764", "397.101, 469.237, 150.072, 0.2782", "395.961, 469.134, 150.578, 0.2812", "394.822, 469.031, 151.046, 0.2866", "393.766, 469.072, 151.573, 0.2982", "392.878, 469.406, 152.304, 0.3132", "391.982, 469.776, 153.162, 0.3716", "391.027, 470.405, 153.972, 0.3304", "390.072, 471.035, 154.734, 0.2938", "389.34, 471.683, 155.575, 0.2626", "388.819, 472.347, 156.574, 0.2542", "388.3, 473.012, 157.649, 0.2288", "387.779, 473.677, 160.221, 0.2288" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "409.717, 474.874, 142.638, 0.6406", "409.943, 474.771, 141.329, 0.5034", "408.966, 475.365, 141.425, 0.5034", "407.989, 475.96, 141.455, 0.5034", "406.939, 476.411, 141.525, 0.5034", "405.892, 476.864, 141.636, 0.5034", "405.06, 477.649, 141.771, 0.5034", "404.227, 478.432, 141.933, 0.5034", "403.657, 479.359, 142.223, 0.5034", "403.164, 480.326, 142.639, 0.5034", "402.571, 481.226, 143.112, 0.5034", "401.656, 481.912, 143.522, 0.5034", "400.741, 482.6, 143.881, 0.5034", "399.904, 483.33, 144.219, 0.5034", "399.539, 484.325, 144.665, 0.5034", "399.175, 485.319, 145.185, 0.5034", "398.811, 486.314, 145.755, 0.5034", "398.679, 487.437, 146.207, 0.5034", "398.579, 488.576, 146.527, 0.5034", "398.478, 489.716, 146.724, 0.5034", "398.822, 490.775, 146.823, 0.5034", "399.318, 491.806, 146.874, 0.5034" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "456.002, 338.24, 73.6929, 0.6406", "457.021, 338.282, 73.7643, 0.5492", "458.018, 338.123, 71.8578, 0.5492", "458.896, 337.742, 71.0108, 0.5492", "459.703, 337.363, 69.9118, 0.5492", "460.412, 336.962, 68.6316, 0.5492", "460.962, 336.394, 67.2386, 0.5492", "461.544, 335.834, 65.8344, 0.5492", "462.575, 335.381, 64.6974, 0.5492", "463.608, 334.932, 63.8084, 0.5492", "464.679, 334.538, 63.1784, 0.5492", "465.647, 334.008, 62.6847, 0.5492", "465.571, 332.994, 62.258, 0.5492", "464.917, 332.057, 61.9592, 0.5492", "464.242, 331.211, 61.628, 0.5492", "463.56, 330.293, 61.3668, 0.5492", "462.878, 329.377, 61.1598, 0.5492", "462.241, 328.43, 61.0162, 0.5492", "461.795, 327.425, 61.0274, 0.5492", "462.178, 326.879, 60.9661, 0.5492", "463.037, 327.622, 60.9087, 0.5492", "464.065, 328.104, 60.7821, 0.5492" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "456.002, 338.24, 73.6929, 0.6406", "455.99, 337.012, 73.9665, 0.5492", "455.981, 335.946, 74.3154, 0.5492", "455.953, 334.811, 74.5836, 0.5492", "455.915, 333.667, 74.7015, 0.5492", "455.877, 332.524, 74.6704, 0.5492" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "435.969, 372.992, 73.1758, 0.3332", "436.149, 373.518, 73.3648, 0.2892", "436.491, 374.494, 73.794, 0.3012", "437.03, 375.441, 74.3305, 0.326", "437.972, 376.075, 74.8692, 0.3592", "438.905, 376.654, 75.4967, 0.4828", "439.75, 377.326, 76.1799, 0.4126", "440.475, 378.102, 76.8592, 0.362", "440.795, 379.197, 77.4388, 0.3382", "440.972, 380.307, 77.9996, 0.413", "441.149, 381.308, 78.6906, 0.4326", "441.112, 382.228, 79.494, 0.3592", "440.554, 383.028, 80.3485, 0.3", "439.715, 383.672, 81.128, 0.2746", "439.43, 384.562, 81.7328, 0.2746", "439.894, 385.595, 82.1811, 0.2746", "440.495, 386.558, 82.5364, 0.2746", "441.102, 387.504, 82.8652, 0.2746", "441.709, 388.449, 83.1956, 0.2746", "442.331, 389.391, 83.5288, 0.2746", "442.989, 390.323, 83.8292, 0.2746", "443.687, 391.229, 84.0804, 0.2746", "444.406, 392.119, 84.2901, 0.2746", "444.973, 393.092, 84.5102, 0.2746", "445.372, 394.141, 84.7823, 0.2746", "445.734, 395.201, 85.1054, 0.2746", "446.03, 396.29, 85.4454, 0.2746", "446.264, 397.406, 85.7517, 0.2746", "446.547, 398.513, 86.0118, 0.2746", "446.862, 399.614, 86.2341, 0.2746", "447.177, 400.714, 86.4329, 0.2746", "447.543, 401.651, 86.7745, 0.2746", "447.231, 402.672, 87.1643, 0.2746", "446.607, 403.62, 87.5437, 0.2746", "445.771, 404.396, 87.8861, 0.2746", "444.8, 404.998, 88.2081, 0.2746", "443.799, 405.551, 88.5326, 0.2746", "442.857, 406.199, 88.8812, 0.2746", "442.21, 407.134, 89.2976, 0.2746", "442.278, 408.095, 90.0007, 0.2746", "442.493, 409.001, 90.9706, 0.2746", "442.712, 409.904, 92.1357, 0.2746", "442.878, 410.864, 93.4013, 0.2746", "442.952, 411.902, 94.6691, 0.2748", "443.024, 412.94, 95.902, 0.2748", "443.096, 413.979, 97.0687, 0.2752", "443.174, 415.019, 98.1761, 0.2758", "443.466, 416.061, 99.2034, 0.2766", "443.762, 417.102, 100.173, 0.2782", "444.06, 418.145, 101.104, 0.2814", "444.356, 419.187, 102.003, 0.287", "444.653, 420.228, 102.877, 0.2988", "444.951, 421.27, 103.731, 0.3142", "445.288, 422.296, 104.567, 0.3734", "445.643, 423.315, 105.377, 0.3338", "446.0, 424.334, 106.148, 0.2998", "446.356, 425.352, 106.868, 0.2742", "446.713, 426.37, 107.529, 0.2736", "447.143, 427.428, 107.997, 0.2728", "447.577, 428.486, 108.301, 0.2712", "448.232, 429.424, 108.478, 0.2684", "449.085, 430.185, 108.565, 0.2626", "449.94, 430.946, 108.594, 0.2542", "450.794, 431.707, 108.596, 0.2288", "451.649, 432.467, 108.596, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "435.969, 372.992, 73.1758, 0.3332", "436.047, 373.109, 71.9765, 0.2288", "436.785, 373.914, 72.0017, 0.2758", "437.742, 374.398, 72.0978, 0.2768", "438.812, 374.526, 72.0555, 0.2786", "439.901, 374.492, 71.7979, 0.2822", "441.003, 374.342, 71.3964, 0.2886", "442.108, 374.127, 70.8946, 0.3014", "443.214, 373.913, 70.3077, 0.319", "444.295, 373.621, 69.6517, 0.3824", "445.265, 373.116, 68.9382, 0.3506", "446.178, 372.509, 68.1713, 0.3304", "446.97, 372.723, 67.3112, 0.3332", "447.664, 373.466, 66.3578, 0.3728", "448.384, 374.225, 65.3708, 0.5084", "449.162, 374.983, 64.414, 0.456", "449.958, 375.74, 63.5118, 0.462", "450.722, 376.522, 62.6354, 0.4294", "451.353, 377.393, 61.7851, 0.353", "451.819, 378.379, 60.9916, 0.288", "451.488, 379.352, 60.3394, 0.2542", "450.436, 379.235, 59.7167, 0.2288", "449.551, 379.061, 58.0863, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "460.017, 346.078, 85.2953, 0.4576", "460.594, 345.329, 85.237, 0.3976", "461.279, 344.437, 85.0469, 0.3734", "461.966, 343.546, 84.7776, 0.3988", "462.651, 342.653, 84.4774, 0.3338", "463.223, 341.664, 84.2565, 0.3", "463.794, 340.672, 84.1131, 0.2746", "464.363, 339.68, 84.042, 0.2746", "464.933, 338.688, 84.0286, 0.2746", "465.701, 337.845, 84.0582, 0.2748", "466.496, 337.022, 84.1201, 0.2748", "467.292, 336.201, 84.2072, 0.2752", "468.088, 335.38, 84.3301, 0.2758", "468.689, 334.408, 84.5012, 0.2766", "469.327, 333.483, 84.7356, 0.2782", "470.31, 332.904, 85.066, 0.2814", "471.253, 332.358, 85.5347, 0.287", "472.101, 331.894, 86.2369, 0.2988", "472.949, 331.431, 87.0946, 0.3142" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "460.017, 346.078, 85.2953, 0.4576", "460.757, 346.198, 87.6672, 0.4118", "461.647, 346.461, 89.0089, 0.4118", "462.599, 347.006, 89.539, 0.4118", "462.993, 347.984, 90.0374, 0.4118", "463.392, 349.024, 90.5654, 0.4118", "464.08, 349.811, 91.2069, 0.4118", "464.827, 350.525, 91.9363, 0.4118", "465.719, 351.088, 92.6702, 0.4118", "466.693, 351.556, 93.3853, 0.4118", "467.675, 352.009, 94.0498, 0.4118", "468.328, 352.781, 94.6649, 0.4118" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "431.33, 350.221, 86.8647, 0.6864", "430.813, 349.334, 87.0904, 0.572", "430.245, 348.361, 87.3645, 0.572", "429.562, 347.454, 87.6669, 0.572", "428.721, 346.684, 87.9542, 0.572", "427.812, 345.988, 88.2235, 0.572", "427.525, 344.956, 88.5758, 0.572", "427.355, 343.874, 88.996, 0.572", "427.188, 342.792, 89.4603, 0.572", "426.927, 341.685, 89.8626, 0.572", "426.635, 340.579, 90.1858, 0.572", "426.322, 339.479, 90.4394, 0.572", "426.04, 338.37, 90.636, 0.572", "425.822, 337.25, 90.8281, 0.572", "425.75, 336.14, 91.1033, 0.572", "425.756, 335.01, 91.4262, 0.572", "425.852, 333.872, 91.728, 0.572", "425.724, 332.764, 92.0842, 0.572", "425.576, 331.66, 92.4745, 0.572", "425.397, 330.558, 92.8682, 0.572", "424.838, 329.568, 93.1694, 0.572", "424.045, 328.748, 93.3974, 0.572", "423.129, 328.064, 93.5718, 0.572", "422.152, 327.469, 93.7006, 0.572", "421.141, 326.956, 93.8546, 0.572", "420.126, 326.452, 94.0397, 0.572", "419.112, 325.946, 94.2533, 0.572", "418.062, 325.497, 94.4398, 0.572", "417.001, 325.071, 94.5809, 0.572", "416.191, 324.271, 94.6803, 0.572", "415.443, 323.406, 94.7436, 0.572", "414.728, 322.513, 94.7859, 0.572", "414.149, 321.527, 94.8231, 0.572", "413.691, 320.479, 94.8696, 0.572", "412.83, 319.732, 94.9346, 0.572", "411.726, 319.443, 95.0272, 0.572", "410.616, 319.166, 95.1574, 0.572", "409.503, 318.901, 95.3336, 0.572", "408.43, 318.506, 95.5587, 0.572", "407.432, 318.034, 95.9364, 0.572", "406.495, 317.581, 96.4877, 0.572" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "431.33, 350.221, 86.8647, 0.6864", "431.092, 350.32, 86.4982, 0.572", "430.103, 350.888, 87.367, 0.572", "429.303, 351.69, 87.6971, 0.572", "428.868, 352.694, 88.2084, 0.572", "428.753, 353.799, 88.8902, 0.572", "429.357, 353.88, 89.8817, 0.572", "430.391, 353.624, 90.9955, 0.572", "430.757, 353.074, 92.3958, 0.572", "430.208, 352.239, 93.8826, 0.572", "429.707, 351.644, 95.5122, 0.572", "429.206, 351.049, 97.2171, 0.572", "428.704, 350.454, 98.9349, 0.572", "428.202, 349.859, 100.636, 0.572", "427.698, 349.212, 102.242, 0.572", "427.197, 348.194, 103.528, 0.572", "426.852, 347.17, 104.658, 0.572", "426.506, 346.145, 105.678, 0.572", "426.161, 345.12, 106.638, 0.572", "425.82, 344.089, 107.573, 0.572", "425.517, 343.017, 108.482, 0.572", "425.267, 341.976, 109.409, 0.572", "424.991, 341.191, 110.507, 0.572", "424.717, 340.406, 111.72, 0.572", "424.558, 339.562, 112.946, 0.572", "424.893, 338.47, 113.946, 0.572", "425.204, 337.385, 114.78, 0.572", "425.339, 336.309, 115.578, 0.572", "425.446, 335.242, 116.353, 0.572", "425.551, 334.177, 117.123, 0.572", "425.657, 333.111, 117.904, 0.572", "425.758, 332.043, 118.7, 0.572", "425.766, 330.951, 119.445, 0.572", "425.638, 329.824, 120.038, 0.572", "425.838, 328.703, 120.531, 0.572", "426.25, 327.648, 121.0, 0.572", "426.783, 326.676, 121.557, 0.572", "427.338, 325.73, 122.227, 0.572", "427.978, 324.901, 123.025, 0.572", "428.872, 324.472, 123.987, 0.572", "429.821, 324.235, 125.066, 0.572", "430.771, 323.998, 126.204, 0.572", "431.747, 323.754, 127.339, 0.572", "432.8, 323.479, 128.359, 0.572", "433.859, 323.067, 129.185, 0.572", "434.719, 322.394, 129.926, 0.572", "435.275, 321.553, 130.741, 0.572", "435.708, 320.692, 131.653, 0.572", "436.225, 319.834, 132.611, 0.572", "437.005, 319.08, 133.495, 0.572", "437.963, 318.603, 134.315, 0.572", "438.941, 318.292, 135.12, 0.572", "439.993, 318.09, 135.822, 0.572", "441.125, 318.081, 136.341, 0.572", "442.267, 318.144, 136.686, 0.572", "443.41, 318.206, 136.91, 0.572", "444.535, 318.379, 137.042, 0.572", "445.639, 318.678, 137.112, 0.572", "446.747, 318.684, 137.159, 0.572", "447.865, 318.437, 137.207, 0.572", "448.882, 318.006, 137.323, 0.572", "449.647, 317.215, 137.467, 0.572", "450.608, 316.809, 137.581, 0.572", "451.75, 316.774, 137.664, 0.572", "452.894, 316.774, 137.72, 0.572", "454.038, 316.774, 137.751, 0.572", "455.182, 316.774, 137.76, 0.572", "456.248, 317.109, 137.76, 0.572", "457.256, 317.649, 137.76, 0.572", "458.389, 317.708, 137.76, 0.572", "459.516, 317.896, 137.76, 0.572", "460.609, 318.234, 137.76, 0.572", "461.713, 318.534, 137.76, 0.572", "462.661, 319.167, 137.76, 0.572", "463.789, 319.348, 137.76, 0.572", "464.858, 319.756, 137.76, 0.572", "465.951, 320.091, 137.76, 0.572" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "422.095, 358.879, 75.0257, 0.938", "421.514, 359.485, 73.8707, 0.2288", "420.754, 360.338, 73.246, 0.2834", "419.885, 361.053, 73.0162, 0.2908", "419.777, 362.004, 72.5953, 0.3056", "420.354, 362.886, 72.0443, 0.327", "420.965, 363.852, 71.5145, 0.3984", "421.054, 364.838, 70.9464, 0.3748", "420.372, 365.341, 70.184, 0.4014", "419.428, 365.757, 69.4019, 0.3386", "418.488, 366.039, 68.5656, 0.3086", "417.461, 366.287, 67.7379, 0.2908", "416.569, 366.943, 67.013, 0.3046", "416.018, 367.855, 66.3096, 0.3308", "415.243, 368.675, 65.7597, 0.376", "415.385, 369.742, 65.3307, 0.4776", "415.941, 370.712, 64.9166, 0.5786", "415.948, 371.655, 64.3658, 0.5016", "415.075, 372.386, 63.9164, 0.5004", "414.074, 372.912, 63.5382, 0.4952", "413.32, 373.72, 63.1154, 0.5016", "412.648, 374.578, 62.662, 0.4354", "411.833, 375.37, 62.281, 0.4626", "410.964, 376.113, 62.0018, 0.4722", "410.096, 376.859, 61.7786, 0.4582", "409.14, 377.467, 61.5992, 0.3594", "408.055, 377.763, 61.4096, 0.3002", "406.955, 377.868, 61.1666, 0.275", "405.82, 377.988, 60.958, 0.2752", "404.799, 378.36, 60.7986, 0.276", "404.435, 379.357, 60.6852, 0.277", "404.462, 380.474, 60.6124, 0.2794", "403.953, 381.457, 60.5732, 0.2838", "403.049, 382.132, 60.5525, 0.2912", "401.981, 382.522, 60.529, 0.3064", "400.863, 382.765, 60.4968, 0.3284", "399.993, 383.334, 60.4503, 0.3998", "399.552, 384.383, 60.3831, 0.3832", "399.237, 385.482, 60.2916, 0.3886", "398.818, 386.539, 60.174, 0.4538", "398.174, 387.476, 60.03, 0.5338", "397.609, 388.161, 59.6963, 0.4228", "396.864, 388.822, 59.3026, 0.3332", "396.116, 389.678, 58.9593, 0.2888", "395.94, 390.763, 58.646, 0.3004", "395.938, 391.906, 58.3738, 0.3248", "395.938, 393.05, 58.1384, 0.3572", "395.938, 394.194, 57.93, 0.4788", "395.938, 395.336, 57.6898, 0.4054", "395.827, 396.28, 57.2396, 0.3492", "395.273, 397.18, 56.7249, 0.3132", "394.321, 397.674, 56.191, 0.3716", "393.267, 398.103, 55.7654, 0.3304", "392.328, 398.748, 55.4652, 0.2938", "392.279, 399.875, 55.2804, 0.2626", "392.233, 401.019, 55.1953, 0.2542", "392.165, 402.161, 55.1642, 0.2288", "391.591, 403.146, 55.16, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "422.095, 358.879, 75.0257, 0.938", "421.293, 358.592, 74.5385, 0.8694", "420.261, 358.099, 74.2328, 0.8694", "419.299, 357.482, 74.0698, 0.8694", "418.256, 357.013, 74.0124, 0.8694", "417.177, 356.633, 74.0292, 0.8694", "416.085, 356.29, 74.0942, 0.8694", "414.991, 355.956, 74.1852, 0.8694", "413.882, 355.677, 74.3036, 0.8694", "412.766, 355.428, 74.4489, 0.8694", "411.68, 355.402, 74.741, 0.8694", "410.595, 355.38, 75.1355, 0.8694", "409.495, 355.426, 75.5684, 0.8694", "408.417, 355.808, 75.8971, 0.8694", "407.279, 355.916, 76.1272, 0.8694", "406.136, 355.965, 76.2656, 0.8694" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "455.877, 332.524, 74.6704, 0.5492", "455.562, 332.025, 74.3952, 0.5364", "455.17, 331.074, 73.8475, 0.4824", "455.35, 330.049, 73.1601, 0.405", "455.93, 329.162, 72.4044, 0.3802", "456.282, 328.13, 71.6775, 0.4448", "455.881, 327.356, 70.8702, 0.4866", "454.901, 326.839, 70.2615, 0.4848", "453.869, 326.345, 69.8491, 0.408", "452.843, 325.839, 69.5842, 0.3934", "451.785, 325.405, 69.426, 0.4332", "450.687, 325.087, 69.3347, 0.6394", "449.622, 325.395, 69.281, 0.6056", "448.59, 324.903, 69.2166, 0.5078", "447.671, 324.227, 69.1326, 0.4956", "446.956, 323.348, 68.9791, 0.5654", "446.241, 322.468, 68.7764, 0.4756", "445.53, 321.586, 68.5443, 0.4578", "444.851, 320.665, 68.334, 0.3906", "444.187, 319.734, 68.1579, 0.4318", "443.505, 318.821, 68.01, 0.3896", "442.553, 318.188, 67.886, 0.4292", "441.547, 317.675, 67.7552, 0.3896", "440.774, 317.046, 67.4674, 0.4052", "440.021, 316.325, 67.2308, 0.461", "438.939, 316.136, 67.0376, 0.6624", "438.11, 315.361, 66.8802, 0.789", "437.488, 314.408, 66.7523, 0.8496", "437.114, 313.336, 66.6476, 0.8912", "436.873, 312.22, 66.5428, 0.8538", "436.638, 311.126, 66.3592, 0.6536", "436.557, 310.014, 66.1164, 0.4606", "436.428, 308.885, 65.9, 0.383", "435.965, 307.866, 65.6902, 0.4796", "435.196, 307.042, 65.4802, 0.4066", "434.617, 306.118, 65.308, 0.3512", "434.491, 304.991, 65.1753, 0.3168", "434.491, 303.857, 65.035, 0.3788", "434.641, 302.736, 64.9015, 0.3438", "435.133, 301.725, 64.8071, 0.3184", "435.982, 300.993, 64.7452, 0.3088", "436.318, 300.033, 64.706, 0.3378", "436.319, 298.889, 64.685, 0.3934", "436.183, 297.758, 64.6786, 0.4872", "435.956, 296.637, 64.678, 0.7064", "435.799, 295.505, 64.6772, 0.8914", "435.702, 294.365, 64.6758, 0.9376", "435.636, 293.223, 64.6744, 0.8618", "435.49, 292.091, 64.6722, 0.5912", "435.181, 290.991, 64.6688, 0.4916", "434.603, 290.018, 64.6646, 0.4136", "433.844, 289.164, 64.6582, 0.4396", "432.982, 288.415, 64.6495, 0.5736", "432.343, 287.487, 64.6377, 0.633", "432.206, 286.376, 64.6209, 0.518", "432.395, 285.254, 64.5963, 0.4826", "433.11, 284.404, 64.5624, 0.4678", "433.83, 283.517, 64.5187, 0.4236", "433.919, 282.403, 64.4661, 0.4232", "433.904, 281.271, 64.3552, 0.4818", "433.593, 280.19, 64.1931, 0.763", "433.126, 279.147, 64.0567, 0.6742", "432.58, 278.143, 63.9531, 0.726", "431.881, 277.239, 63.8795, 0.6868", "431.172, 276.341, 63.8322, 0.8126", "430.485, 275.427, 63.807, 0.7696", "429.957, 274.414, 63.7921, 0.6588", "429.915, 273.279, 63.7753, 0.6036", "429.928, 272.135, 63.7552, 0.4574", "430.108, 271.011, 63.6964, 0.4004", "430.143, 269.868, 63.6443, 0.3978", "430.144, 268.724, 63.6028, 0.5798", "430.215, 267.583, 63.5706, 0.4684", "430.565, 266.496, 63.5468, 0.3812", "430.692, 265.361, 63.5295, 0.3254", "430.715, 264.218, 63.5163, 0.3942", "430.716, 263.074, 63.4987, 0.3734", "430.716, 261.93, 63.474, 0.369", "430.296, 260.871, 63.4402, 0.4228", "429.349, 260.245, 63.394, 0.4512", "428.263, 259.888, 63.3262, 0.393", "427.132, 259.721, 63.226, 0.3648", "426.085, 259.262, 63.0949, 0.385", "425.185, 258.562, 62.9387, 0.525", "424.22, 257.947, 62.7214, 0.5176" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "455.877, 332.524, 74.6704, 0.5492", "455.033, 331.522, 75.7646, 0.4576", "454.43, 330.553, 76.0606, 0.3862", "454.12, 329.461, 76.1712, 0.3444", "454.366, 328.367, 76.323, 0.3826", "455.288, 327.805, 76.5878, 0.3508", "456.275, 327.304, 76.9446, 0.3322", "457.288, 326.801, 77.3226, 0.3288", "458.055, 325.966, 77.6566, 0.4018", "458.178, 324.831, 77.947, 0.3812", "459.057, 324.118, 78.2205, 0.413", "460.077, 323.724, 78.5705, 0.361", "461.097, 323.332, 78.9737, 0.3452", "462.118, 322.92, 79.3948, 0.384", "463.086, 322.347, 79.7146, 0.3532", "463.562, 321.318, 79.9394, 0.337", "463.712, 320.193, 80.0464, 0.3388", "463.672, 319.067, 80.0786, 0.4142", "463.203, 318.035, 80.12, 0.4348", "462.473, 317.167, 80.2259, 0.3632", "461.794, 316.284, 80.4667, 0.3072", "461.088, 315.388, 80.7559, 0.2876", "460.486, 314.416, 81.0975, 0.3", "459.962, 313.465, 81.5612, 0.3164", "459.615, 312.661, 82.2881, 0.3778", "459.436, 311.762, 83.1384, 0.342", "459.292, 310.644, 83.9401, 0.3152", "459.033, 309.576, 84.7336, 0.3028", "458.855, 308.492, 85.4896, 0.3272", "458.948, 307.368, 86.1204, 0.3692", "459.329, 306.503, 86.7754, 0.465", "460.198, 306.355, 87.4885, 0.5558", "461.318, 306.534, 88.0855, 0.4582", "461.447, 305.496, 88.571, 0.4244", "461.305, 304.48, 89.0002, 0.334", "462.158, 303.759, 89.4704, 0.3002", "463.01, 303.04, 89.9704, 0.275", "463.876, 302.339, 90.5145, 0.2752", "464.803, 301.721, 91.1196, 0.276", "465.73, 301.107, 91.7686, 0.277", "466.657, 300.49, 92.4426, 0.2794", "467.554, 299.845, 93.1328, 0.2834", "468.343, 299.094, 93.8577, 0.291", "469.134, 298.345, 94.6025, 0.3062", "469.909, 297.582, 95.3515, 0.3276", "470.596, 296.74, 96.0884, 0.3994", "471.169, 295.812, 96.7985, 0.377", "471.738, 294.874, 97.4618, 0.4056", "472.272, 293.881, 98.0232, 0.3464", "472.766, 292.849, 98.4466, 0.3242", "473.299, 291.837, 98.7748, 0.3142", "473.84, 290.831, 99.0548, 0.3734", "474.362, 289.828, 99.3639, 0.3338", "474.857, 288.841, 99.7564, 0.3", "475.353, 287.854, 100.22, 0.2746", "475.851, 286.867, 100.735, 0.2746", "476.392, 285.89, 101.247, 0.2746", "476.875, 284.903, 101.665, 0.2746", "476.911, 283.788, 102.005, 0.2746", "477.56, 283.023, 102.339, 0.2748", "478.559, 282.734, 102.773, 0.2748", "478.946, 281.858, 103.195, 0.2752", "478.987, 280.724, 103.563, 0.2758", "479.227, 279.618, 103.919, 0.2766", "479.54, 278.531, 104.257, 0.2782", "479.853, 277.445, 104.562, 0.2814", "480.16, 276.354, 104.823, 0.287", "480.423, 275.245, 105.02, 0.2988", "480.654, 274.125, 105.136, 0.3142", "480.951, 273.022, 105.177, 0.3734", "481.343, 271.948, 105.153, 0.3338", "481.768, 270.885, 105.073, 0.3", "482.199, 269.827, 104.935, 0.2746", "482.642, 268.783, 104.716, 0.2746", "483.093, 267.747, 104.418, 0.2746", "483.543, 266.712, 104.059, 0.2746", "483.993, 265.677, 103.655, 0.2746", "484.444, 264.642, 103.224, 0.2746", "484.894, 263.605, 102.778, 0.2746", "485.303, 262.554, 102.33, 0.2746", "485.599, 261.466, 101.883, 0.2746", "485.833, 260.361, 101.438, 0.2746", "486.067, 259.254, 100.988, 0.2748", "486.302, 258.149, 100.532, 0.2748", "486.185, 257.061, 100.101, 0.2752", "486.527, 256.166, 99.6758, 0.2758", "487.382, 255.53, 99.1581, 0.2766", "488.254, 254.966, 98.5424, 0.2782", "489.196, 254.419, 97.9264, 0.2814", "490.198, 253.895, 97.3879, 0.287", "491.212, 253.378, 96.941, 0.2988", "492.225, 252.861, 96.5852, 0.3142", "493.208, 252.285, 96.3264, 0.3734", "494.11, 251.586, 96.1635, 0.3338", "494.977, 250.84, 96.0691, 0.3", "495.639, 249.925, 96.0173, 0.2746", "496.075, 248.873, 95.9941, 0.2746", "496.375, 247.77, 95.9902, 0.2746", "496.491, 246.636, 95.9963, 0.2746", "496.507, 245.492, 96.007, 0.2746", "496.39, 244.357, 96.0226, 0.2746", "496.282, 243.219, 96.0448, 0.2746", "496.783, 242.219, 96.0744, 0.2746", "496.461, 241.144, 96.1136, 0.2746", "496.225, 240.025, 96.1671, 0.2746", "496.156, 238.891, 96.2772, 0.2746", "496.153, 237.747, 96.3872, 0.2746", "496.153, 236.603, 96.4986, 0.2746", "496.153, 235.465, 96.6487, 0.2746", "495.988, 234.337, 96.822, 0.2746", "495.818, 233.206, 96.9959, 0.2746", "495.81, 232.064, 97.183, 0.2746", "495.771, 230.922, 97.3924, 0.2746", "495.438, 229.829, 97.5979, 0.2746", "495.353, 228.694, 97.8359, 0.2746", "495.352, 227.788, 98.3024, 0.2746", "495.367, 226.648, 98.7162, 0.2746", "495.466, 225.509, 99.0447, 0.2746", "495.466, 224.365, 99.2922, 0.2746", "495.471, 223.222, 99.4736, 0.2746", "495.616, 222.087, 99.5996, 0.2746", "495.824, 220.961, 99.6881, 0.2746", "496.038, 219.841, 99.7923, 0.2746", "496.061, 218.729, 100.004, 0.2746", "496.346, 217.635, 100.239, 0.2746", "496.93, 216.658, 100.491, 0.2746", "497.394, 215.615, 100.742, 0.2748", "497.79, 214.548, 100.984, 0.2748", "498.319, 213.549, 101.247, 0.2752", "498.848, 212.553, 101.5, 0.2758", "499.163, 211.459, 101.744, 0.2766", "499.456, 210.355, 101.946, 0.2784", "499.585, 209.222, 102.124, 0.2816", "499.585, 208.078, 102.292, 0.2876", "499.49, 206.949, 102.461, 0.2998", "499.083, 205.91, 102.691, 0.3162", "498.58, 204.971, 103.072, 0.377", "498.326, 203.936, 103.528, 0.3406", "498.326, 202.797, 103.951, 0.3126", "498.326, 201.653, 104.317, 0.2988", "498.326, 200.509, 104.635, 0.3144", "498.441, 199.395, 104.963, 0.3738", "498.993, 198.624, 105.428, 0.3348", "499.721, 197.837, 105.921, 0.3018", "500.133, 196.785, 106.351, 0.2778", "500.258, 195.657, 106.749, 0.2806", "500.056, 194.658, 107.242, 0.285", "499.633, 193.601, 107.626, 0.2954", "499.585, 192.462, 107.938, 0.308", "499.585, 191.366, 108.287, 0.3616", "499.782, 190.24, 108.558, 0.3134", "499.814, 189.098, 108.739, 0.2542", "499.928, 187.959, 108.92, 0.2288" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "472.949, 331.431, 87.0946, 0.3142", "473.805, 330.442, 87.9802, 0.3338", "474.513, 329.625, 88.8213, 0.3", "475.338, 328.886, 89.5244, 0.2746", "476.365, 328.438, 90.0304, 0.2746", "477.495, 328.334, 90.3683, 0.2746", "478.599, 328.134, 90.6203, 0.2748", "479.503, 327.518, 90.883, 0.2748", "480.231, 326.662, 91.1358, 0.2752", "481.005, 325.828, 91.3402, 0.2758", "482.026, 325.411, 91.525, 0.2766", "483.15, 325.211, 91.67, 0.2784", "484.267, 324.967, 91.7619, 0.2818", "485.145, 324.3, 91.8112, 0.2882", "485.883, 323.427, 91.8369, 0.2994", "486.338, 322.394, 91.852, 0.3228", "486.674, 321.3, 91.8604, 0.3538", "487.012, 320.208, 91.8686, 0.4722", "487.247, 319.09, 91.8803, 0.3934", "488.001, 318.316, 91.8968, 0.3254", "488.823, 317.525, 91.919, 0.2746", "489.772, 316.896, 91.9475, 0.2746", "490.413, 315.967, 91.9895, 0.2746", "491.199, 315.146, 92.0699, 0.2746", "492.184, 314.57, 92.1514, 0.2746", "493.249, 314.154, 92.234, 0.2746", "494.174, 313.485, 92.3199, 0.2746", "495.145, 312.881, 92.4137, 0.2746", "496.148, 312.376, 92.5901, 0.2746", "496.845, 311.484, 92.7634, 0.2746", "497.044, 310.37, 92.9589, 0.2746", "497.835, 309.547, 93.1636, 0.2746", "498.754, 308.905, 93.4307, 0.2746", "499.73, 308.309, 93.672, 0.2746", "500.688, 307.694, 93.9215, 0.2746", "501.604, 307.04, 94.1889, 0.2746", "502.519, 306.473, 94.5364, 0.2746", "503.415, 305.783, 94.8167, 0.2746", "504.028, 304.846, 95.0718, 0.2746", "504.434, 303.809, 95.3526, 0.2746", "504.908, 302.77, 95.5702, 0.2746", "505.46, 301.768, 95.7272, 0.2746", "506.023, 300.772, 95.839, 0.2746", "506.638, 299.81, 95.9465, 0.2746", "507.192, 298.827, 96.0624, 0.2746", "507.53, 297.734, 96.1671, 0.2746", "507.868, 296.646, 96.283, 0.2746", "508.47, 295.699, 96.4163, 0.2746", "509.137, 294.797, 96.5698, 0.2746", "509.464, 293.735, 96.8013, 0.2746", "509.711, 292.689, 97.1765, 0.2746", "509.893, 291.609, 97.6055, 0.2746", "509.957, 290.467, 97.9899, 0.2748", "509.936, 289.328, 98.3399, 0.2748", "509.827, 288.202, 98.6922, 0.275", "509.77, 287.215, 99.1536, 0.2754", "509.705, 286.148, 99.5817, 0.2762", "509.606, 285.009, 99.9037, 0.2776", "509.303, 283.916, 100.136, 0.2802", "509.197, 282.789, 100.317, 0.285", "509.087, 281.652, 100.475, 0.2938", "508.895, 280.544, 100.692, 0.3112", "508.611, 279.446, 100.967, 0.3382", "508.185, 278.387, 101.265, 0.413", "508.058, 277.32, 101.686, 0.4326", "508.349, 276.269, 102.187, 0.3592", "508.968, 275.329, 102.7, 0.3", "509.96, 274.801, 103.171, 0.2746", "510.818, 274.141, 103.728, 0.2746", "511.626, 273.336, 104.251, 0.2746", "512.377, 272.55, 104.831, 0.2746", "512.837, 271.684, 105.591, 0.2746", "513.423, 270.851, 106.433, 0.2746", "514.198, 270.06, 107.21, 0.2746", "514.533, 269.065, 108.04, 0.2746", "514.506, 268.063, 108.937, 0.2746", "514.222, 267.081, 109.853, 0.2746", "513.991, 266.051, 110.721, 0.2746", "513.897, 264.922, 111.45, 0.2746", "513.944, 263.796, 112.061, 0.2748", "514.15, 262.71, 112.634, 0.2748", "514.379, 261.637, 113.184, 0.2752", "514.762, 260.615, 113.696, 0.2758", "515.284, 259.612, 114.127, 0.2766", "515.491, 258.498, 114.486, 0.2782", "515.619, 257.367, 114.815, 0.2814", "515.849, 256.265, 115.166, 0.2872", "516.102, 255.181, 115.569, 0.2988", "516.354, 254.095, 116.023, 0.3142", "516.579, 252.992, 116.502, 0.3736", "516.749, 251.865, 116.953, 0.3342", "516.898, 250.732, 117.367, 0.3006", "517.094, 249.636, 117.819, 0.2758", "517.327, 248.573, 118.357, 0.2766", "517.56, 247.51, 118.965, 0.2782", "517.794, 246.446, 119.626, 0.2814", "518.369, 245.57, 120.277, 0.287", "519.246, 244.839, 120.864, 0.2988", "519.702, 243.861, 121.43, 0.3142", "519.984, 242.779, 122.002, 0.3734", "520.395, 241.76, 122.608, 0.3338", "520.864, 240.77, 123.253, 0.3", "521.336, 239.78, 123.929, 0.2746", "521.806, 238.789, 124.623, 0.2746", "522.276, 237.8, 125.314, 0.2746", "522.818, 236.816, 125.944, 0.2746", "523.473, 235.883, 126.466, 0.2746", "523.581, 234.85, 126.97, 0.2746", "523.331, 233.789, 127.506, 0.2746", "523.046, 232.739, 128.072, 0.2746", "522.443, 231.803, 128.577, 0.2746", "521.673, 230.959, 129.007, 0.2746", "520.809, 230.211, 129.387, 0.2746", "520.265, 229.278, 129.824, 0.2746", "519.83, 228.279, 130.34, 0.2746", "519.378, 227.285, 130.916, 0.2746", "518.723, 226.376, 131.479, 0.2746", "519.085, 225.41, 132.098, 0.2746", "519.52, 224.44, 132.735, 0.2746", "520.091, 223.459, 133.246, 0.2746", "520.7, 222.49, 133.614, 0.2746", "520.927, 221.373, 133.875, 0.2746", "520.991, 220.23, 134.066, 0.2746", "521.494, 219.205, 134.209, 0.2746", "522.162, 218.284, 134.377, 0.2746", "522.933, 217.462, 134.613, 0.2746", "523.703, 216.639, 134.899, 0.2746", "524.474, 215.818, 135.216, 0.2746", "525.299, 215.027, 135.499, 0.2746", "526.145, 214.259, 135.723, 0.2746", "526.993, 213.491, 135.896, 0.2746", "527.803, 212.687, 136.061, 0.2746", "528.605, 211.877, 136.232, 0.2746", "529.407, 211.067, 136.415, 0.2746", "530.208, 210.257, 136.612, 0.2746", "531.012, 209.447, 136.823, 0.2746", "531.817, 208.637, 137.026, 0.2746", "532.626, 207.827, 137.209, 0.2746", "533.46, 207.045, 137.386, 0.2746", "534.383, 206.368, 137.572, 0.2746" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "472.949, 331.431, 87.0946, 0.3142", "474.196, 331.567, 87.7607, 0.2288", "475.335, 331.664, 87.7276, 0.4866", "476.478, 331.715, 87.7145, 0.421", "477.62, 331.776, 87.6952, 0.3718", "478.762, 331.836, 87.6683, 0.386", "479.906, 331.849, 87.6338, 0.358", "481.042, 331.925, 87.5921, 0.3396", "482.155, 332.049, 87.512, 0.3736", "483.239, 331.815, 87.3737, 0.3342", "484.271, 331.325, 87.2645, 0.3006", "485.3, 330.837, 87.1825, 0.2758", "486.385, 330.475, 87.1259, 0.2766", "487.49, 330.197, 87.0926, 0.2782", "488.462, 329.737, 87.08, 0.2814", "489.224, 328.884, 87.08, 0.287", "490.178, 328.447, 87.08, 0.2988", "491.322, 328.442, 87.08, 0.3142", "492.451, 328.568, 87.08, 0.3734", "493.579, 328.742, 87.08, 0.3338", "494.72, 328.786, 87.08, 0.3002", "495.865, 328.762, 87.08, 0.2748", "496.852, 328.344, 87.0797, 0.2748", "497.431, 327.398, 87.0797, 0.2752", "498.009, 326.439, 87.0797, 0.2758", "498.678, 325.517, 87.0794, 0.2766", "499.261, 324.533, 87.0794, 0.2782", "500.1, 323.825, 87.0792, 0.2814", "501.133, 323.333, 87.0789, 0.287", "501.915, 322.558, 87.0783, 0.2988", "502.612, 321.654, 87.0778, 0.3142", "503.496, 320.944, 87.0766, 0.3734", "504.549, 320.52, 87.0755, 0.3338", "505.61, 320.097, 87.0736, 0.3", "506.489, 319.385, 87.071, 0.2746", "507.292, 318.571, 87.0677, 0.2746", "508.088, 317.749, 87.0629, 0.2746", "509.036, 317.121, 87.0556, 0.2746", "509.951, 316.437, 87.0458, 0.2746", "510.66, 315.548, 87.0332, 0.2748", "511.471, 314.746, 87.0187, 0.2748", "512.461, 314.19, 86.984, 0.275", "513.373, 313.509, 86.9364, 0.2752", "514.162, 312.681, 86.9002, 0.276", "515.214, 312.245, 86.8787, 0.277", "516.283, 311.837, 86.872, 0.2792", "517.228, 311.193, 86.8798, 0.283" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "468.328, 352.781, 94.6649, 0.4118", "468.617, 352.913, 94.9155, 0.2816", "469.385, 353.609, 94.9119, 0.2878", "470.191, 354.405, 94.7993, 0.299", "471.168, 354.979, 94.6856, 0.3208", "472.057, 355.688, 94.6224, 0.356", "472.774, 356.573, 94.6394, 0.4454", "473.585, 357.376, 94.7666, 0.4948", "474.592, 357.848, 95.046, 0.4652", "475.635, 358.229, 95.4643, 0.5422", "476.678, 358.605, 95.982, 0.5014", "477.694, 359.042, 96.5681, 0.4014", "478.492, 359.783, 97.2028, 0.332", "479.245, 360.583, 97.8603, 0.3286", "479.997, 361.383, 98.5149, 0.4014", "481.067, 361.634, 99.066, 0.3802", "482.203, 361.765, 99.5268, 0.4114", "483.199, 362.151, 100.031, 0.3584", "484.174, 362.578, 100.578, 0.34", "485.065, 363.258, 101.066, 0.3746", "485.862, 364.076, 101.452, 0.3358", "486.707, 364.847, 101.764, 0.3036", "487.586, 365.578, 102.019, 0.2814", "488.47, 366.305, 102.231, 0.287", "489.124, 367.19, 102.532, 0.2988", "489.745, 368.093, 102.936, 0.3142", "490.061, 369.174, 103.37, 0.3734", "490.103, 370.315, 103.772, 0.3338", "490.428, 371.41, 104.15, 0.3", "490.798, 372.485, 104.558, 0.2746", "491.037, 373.511, 105.112, 0.2746", "491.272, 374.536, 105.795, 0.2746", "491.911, 375.48, 106.434, 0.2746", "492.786, 376.216, 107.041, 0.2746", "493.348, 376.915, 107.871, 0.2746", "494.007, 377.517, 108.843, 0.2746", "495.047, 377.889, 109.758, 0.2746", "496.085, 378.264, 110.626, 0.2746", "497.125, 378.637, 111.456, 0.2746", "498.164, 379.009, 112.228, 0.2746", "499.204, 379.384, 112.927, 0.2746", "500.24, 379.766, 113.579, 0.2746", "501.244, 380.248, 114.194, 0.2746", "502.175, 380.887, 114.75, 0.2746", "503.106, 381.525, 115.258, 0.2746", "504.038, 382.162, 115.726, 0.2746", "504.97, 382.801, 116.162, 0.2746", "505.901, 383.439, 116.57, 0.2746", "506.831, 384.077, 116.954, 0.2746", "507.763, 384.715, 117.315, 0.2746", "508.685, 385.367, 117.643, 0.2746", "509.527, 386.141, 117.882, 0.2746", "510.369, 386.916, 118.054, 0.2746", "511.21, 387.691, 118.179, 0.2746", "512.035, 388.482, 118.282, 0.2746", "512.721, 389.396, 118.385, 0.2746", "513.424, 390.295, 118.509, 0.2746", "514.302, 391.026, 118.677, 0.2746", "515.159, 391.768, 118.935, 0.2746", "515.979, 392.513, 119.315, 0.2746", "516.799, 393.258, 119.782, 0.2746", "517.619, 394.003, 120.303, 0.2746", "518.438, 394.749, 120.851, 0.2746", "519.212, 395.537, 121.385, 0.2746", "519.709, 396.566, 121.806, 0.2746", "520.205, 397.596, 122.14, 0.2746", "520.697, 398.612, 122.466, 0.2746", "521.179, 399.608, 122.825, 0.2746", "521.662, 400.604, 123.202, 0.2746", "522.104, 401.617, 123.566, 0.2746", "522.313, 402.736, 123.787, 0.2746", "522.541, 403.855, 123.918, 0.2746", "522.648, 404.989, 123.983, 0.2744", "522.68, 406.129, 123.999, 0.2744", "522.893, 407.254, 123.99, 0.2742", "523.444, 408.251, 123.978, 0.2736", "523.96, 409.273, 123.976, 0.2728", "524.275, 410.37, 123.976, 0.2712", "524.581, 411.472, 123.976, 0.2684", "524.707, 412.599, 123.976, 0.2626", "524.707, 413.742, 123.976, 0.2542", "524.707, 414.887, 123.976, 0.2288", "524.707, 416.03, 123.976, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "468.328, 352.781, 94.6649, 0.4118", "468.922, 353.426, 97.3524, 0.2288", "469.61, 354.174, 99.3723, 0.2746", "470.298, 354.924, 100.232, 0.2746", "470.986, 355.672, 101.254, 0.2746", "471.675, 356.421, 102.388, 0.2746", "472.362, 357.169, 103.583, 0.2746", "473.051, 357.918, 104.793, 0.2746", "473.738, 358.667, 105.971, 0.2746", "474.427, 359.415, 107.107, 0.2746", "475.115, 360.164, 108.193, 0.2746", "475.803, 360.913, 109.227, 0.2746", "476.614, 361.693, 110.068, 0.2746", "477.428, 362.496, 110.729, 0.2746", "478.185, 363.354, 111.267, 0.2746", "478.69, 364.328, 111.837, 0.2746", "479.057, 365.326, 112.507, 0.2746", "479.413, 366.324, 113.284, 0.2746", "479.75, 367.35, 114.153, 0.2746", "479.952, 368.47, 114.975, 0.2746", "480.073, 369.594, 115.811, 0.2746", "479.931, 370.488, 116.843, 0.2746", "479.778, 371.37, 118.029, 0.2746", "479.625, 372.253, 119.325, 0.2746", "479.528, 373.219, 120.647, 0.2746", "479.469, 374.231, 121.933, 0.2746", "479.411, 375.246, 123.133, 0.2746", "479.353, 376.259, 124.214, 0.2744", "479.295, 377.274, 125.178, 0.2744", "479.158, 378.394, 125.907, 0.2742", "478.989, 379.525, 126.388, 0.2736", "478.82, 380.657, 126.679, 0.2728", "478.494, 381.754, 126.832, 0.2712", "478.007, 382.788, 126.894, 0.2684", "477.46, 383.794, 126.906, 0.2626", "476.912, 384.797, 126.906, 0.2542", "476.364, 385.801, 126.906, 0.2288", "475.816, 386.806, 126.906, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "406.495, 317.581, 96.4877, 0.572", "406.157, 316.208, 97.1636, 0.3476", "405.963, 315.142, 97.8527, 0.315", "406.114, 314.065, 98.4612, 0.3514", "406.53, 313.004, 98.9226, 0.4088", "406.533, 311.912, 99.2527, 0.564", "406.164, 310.829, 99.4902, 0.6152", "405.669, 309.86, 99.7382, 0.484", "405.119, 308.936, 100.048, 0.4248", "404.531, 308.011, 100.34, 0.3348", "403.569, 307.416, 100.61, 0.3018", "403.298, 306.567, 100.893, 0.2778", "403.659, 305.503, 101.219, 0.2808", "404.091, 304.468, 101.583, 0.286", "404.522, 303.431, 101.978, 0.2956", "404.953, 302.395, 102.399, 0.3132", "405.4, 301.351, 102.781, 0.3482", "405.693, 300.253, 103.09, 0.4026", "405.816, 299.146, 103.406, 0.5526", "405.901, 298.067, 103.777, 0.593", "405.896, 296.95, 104.111, 0.448", "405.825, 295.809, 104.348, 0.333", "405.746, 294.668, 104.495, 0.288", "405.157, 293.772, 104.563, 0.3006", "404.562, 292.817, 104.56, 0.3178", "404.303, 291.717, 104.486, 0.3802", "404.129, 290.623, 104.309, 0.3464", "404.064, 289.501, 104.11, 0.3242", "403.953, 288.365, 103.963, 0.3144", "403.535, 287.313, 103.879, 0.3738", "403.167, 286.233, 103.856, 0.3346", "402.928, 285.117, 103.906, 0.3012", "402.812, 283.989, 104.046, 0.2766", "402.725, 282.859, 104.25, 0.2784", "402.603, 281.732, 104.486, 0.2818", "402.09, 280.737, 104.699, 0.288", "401.511, 279.75, 104.881, 0.3006", "401.409, 278.639, 105.038, 0.3178", "401.378, 277.498, 105.192, 0.3802", "401.174, 276.386, 105.388, 0.3464", "400.93, 275.283, 105.628, 0.3242", "400.685, 274.18, 105.9, 0.3142", "400.439, 273.076, 106.187, 0.3734", "400.301, 271.946, 106.425, 0.3338", "400.196, 270.806, 106.599, 0.3", "400.097, 269.667, 106.72, 0.2746", "400.075, 268.523, 106.805, 0.2746", "399.97, 267.386, 106.875, 0.2748", "399.542, 266.336, 106.945, 0.2748", "399.089, 265.287, 107.043, 0.2752", "398.733, 264.206, 107.195, 0.2758", "398.397, 263.12, 107.393, 0.2766", "398.06, 262.033, 107.622, 0.2782", "397.724, 260.948, 107.869, 0.2814", "397.388, 259.861, 108.121, 0.287", "397.104, 258.758, 108.363, 0.2988", "397.054, 257.621, 108.559, 0.3142", "397.3, 256.51, 108.721, 0.3734", "397.636, 255.417, 108.868, 0.3338", "397.593, 254.285, 109.02, 0.3", "397.484, 253.147, 109.197, 0.2746", "397.247, 252.03, 109.437, 0.2746", "396.671, 251.078, 109.803, 0.2746", "396.091, 250.126, 110.288, 0.2746", "395.711, 249.101, 110.89, 0.2746", "395.354, 248.067, 111.579, 0.2746", "395.652, 247.036, 112.323, 0.2746", "396.129, 246.045, 113.089, 0.2746", "396.534, 245.024, 113.862, 0.2746", "396.784, 243.958, 114.638, 0.2746", "397.023, 242.889, 115.408, 0.2746", "397.251, 241.818, 116.168, 0.2746", "397.447, 240.738, 116.913, 0.2746", "397.642, 239.657, 117.644, 0.2746", "397.848, 238.577, 118.364, 0.2746", "398.203, 237.494, 118.97, 0.2746", "398.015, 236.373, 119.527, 0.2746", "397.738, 235.356, 120.163, 0.2746", "397.462, 234.364, 120.855, 0.2746", "397.311, 234.004, 121.698, 0.2746", "397.311, 232.86, 122.339, 0.2746", "397.244, 231.723, 122.812, 0.2746", "397.027, 230.601, 123.139, 0.2746", "396.808, 229.482, 123.355, 0.2746", "396.374, 228.437, 123.496, 0.2746", "395.769, 227.468, 123.587, 0.2746", "395.141, 226.529, 123.698, 0.2746", "394.254, 225.83, 123.817, 0.2746", "393.343, 225.177, 123.932, 0.2746", "392.611, 224.297, 124.023, 0.2746", "391.956, 223.363, 124.1, 0.2746", "391.353, 222.391, 124.169, 0.2746", "390.716, 221.441, 124.236, 0.2746", "389.935, 220.633, 124.306, 0.2746", "389.157, 219.847, 124.442, 0.2746", "388.478, 218.95, 124.631, 0.2748", "388.172, 217.909, 124.807, 0.2748", "387.877, 216.826, 124.963, 0.2752", "387.527, 215.74, 125.101, 0.2758", "387.034, 214.74, 125.28, 0.2766", "386.624, 213.696, 125.487, 0.2784", "386.022, 212.743, 125.673, 0.2818", "385.5, 211.732, 125.841, 0.288", "384.946, 210.733, 125.999, 0.3006", "384.202, 209.886, 126.199, 0.3178", "383.542, 208.976, 126.445, 0.3802", "382.804, 208.103, 126.664, 0.3464", "382.52, 207.006, 126.89, 0.3242", "382.328, 205.988, 127.251, 0.3142", "382.107, 204.866, 127.526, 0.3734", "381.842, 203.753, 127.719, 0.3338", "381.653, 202.625, 127.845, 0.3", "381.079, 201.638, 127.921, 0.2746", "380.494, 200.703, 127.952, 0.2746", "380.43, 199.568, 127.949, 0.2746", "380.07, 198.485, 127.945, 0.2746", "379.543, 197.474, 127.94, 0.2746", "378.889, 196.536, 127.931, 0.2746", "378.362, 195.533, 127.919, 0.2746", "378.116, 194.421, 127.904, 0.2746", "377.983, 193.285, 127.885, 0.2746", "377.83, 192.154, 127.847, 0.2746", "377.764, 191.015, 127.792, 0.2746", "377.749, 189.871, 127.748, 0.2746", "377.749, 188.727, 127.715, 0.2746", "377.749, 187.583, 127.692, 0.2746", "377.749, 186.439, 127.677, 0.2746", "377.749, 185.295, 127.67, 0.2746", "377.749, 184.151, 127.666, 0.2746", "377.716, 183.008, 127.661, 0.2746", "377.431, 181.932, 127.653, 0.2746", "376.922, 180.916, 127.643, 0.2746", "376.592, 179.821, 127.628, 0.2746", "376.36, 178.703, 127.607, 0.2746", "376.195, 177.572, 127.578, 0.2746", "376.016, 176.443, 127.536, 0.2746", "375.658, 175.398, 127.478, 0.2746", "374.964, 174.488, 127.402, 0.2746", "374.414, 173.503, 127.299, 0.2748", "373.985, 172.463, 127.124, 0.2748", "373.331, 171.57, 126.872, 0.275", "372.513, 170.776, 126.611, 0.2752", "371.824, 169.876, 126.368, 0.276", "371.507, 168.803, 126.123, 0.277", "371.115, 167.783, 125.821, 0.2794", "370.566, 166.796, 125.503, 0.2834", "370.285, 165.727, 125.145, 0.2906", "369.811, 164.767, 124.699, 0.3054", "369.043, 163.94, 124.274, 0.3268", "368.233, 163.185, 123.823, 0.3966", "367.175, 162.899, 123.388, 0.3788", "366.194, 162.525, 122.896, 0.373", "365.135, 162.139, 122.473, 0.4604", "364.084, 161.692, 122.174, 0.373", "363.046, 161.211, 121.973, 0.2796", "361.962, 160.846, 121.8, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "406.495, 317.581, 96.4877, 0.572", "405.702, 316.729, 96.8828, 0.6864", "404.934, 315.894, 97.0178, 0.5396", "404.246, 314.986, 97.0673, 0.5546", "403.565, 314.067, 97.1054, 0.446", "402.712, 313.316, 97.1326, 0.4498", "401.964, 312.462, 97.1496, 0.3756", "401.507, 311.424, 97.158, 0.4032", "400.921, 310.451, 97.1583, 0.342", "400.351, 309.461, 97.1575, 0.315", "399.702, 308.521, 97.1566, 0.3024", "398.891, 307.718, 97.1552, 0.327", "397.908, 307.143, 97.1533, 0.3676", "396.853, 306.707, 97.1505, 0.4668", "395.787, 306.289, 97.1468, 0.5354", "394.718, 305.883, 97.1415, 0.536", "393.856, 305.147, 97.1342, 0.6934", "392.853, 304.611, 97.1242, 0.6846", "391.789, 304.192, 97.1099, 0.5274", "390.726, 303.767, 97.0897, 0.4596", "389.733, 303.203, 97.0614, 0.394", "388.879, 302.447, 97.0225, 0.438", "387.913, 301.837, 96.9688, 0.4006", "386.815, 301.538, 96.8954, 0.4516", "385.883, 300.9, 96.7716, 0.421", "385.678, 299.807, 96.6381, 0.5126", "385.084, 298.861, 96.4362, 0.422", "384.475, 297.922, 96.1699, 0.3732", "384.052, 296.863, 95.9372, 0.3886", "383.621, 295.806, 95.7312, 0.3632", "383.233, 294.741, 95.5217, 0.349", "382.6, 293.792, 95.3686, 0.3904", "382.232, 292.712, 95.27, 0.3666", "382.18, 291.57, 95.209, 0.355", "381.706, 290.534, 95.1658, 0.4034", "381.155, 289.53, 95.1348, 0.3842", "380.57, 288.548, 95.1076, 0.4184", "380.24, 287.453, 95.0718, 0.3708", "379.881, 286.367, 95.0202, 0.3644", "379.491, 285.292, 94.9458, 0.4146", "378.911, 284.306, 94.8441, 0.4358", "378.129, 283.471, 94.7114, 0.365", "377.38, 282.606, 94.5428, 0.3104" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "406.136, 355.965, 76.2656, 0.8694", "405.416, 356.089, 78.8822, 0.2288", "404.738, 356.198, 80.024, 0.2746", "403.594, 356.198, 80.4154, 0.2748", "402.458, 356.318, 80.7218, 0.2748", "401.695, 357.072, 80.9502, 0.275", "401.393, 358.139, 81.1107, 0.2754", "400.651, 359.01, 81.214, 0.2762", "399.883, 359.854, 81.2745, 0.2778", "399.012, 360.597, 81.3585, 0.2802", "398.089, 361.231, 81.4752, 0.2854", "396.969, 361.455, 81.6449, 0.2942", "395.849, 361.679, 81.8622, 0.3124", "394.777, 361.938, 82.2016, 0.339", "393.709, 362.198, 82.6325, 0.4216", "392.847, 362.942, 83.0396, 0.413", "391.995, 363.69, 83.4288, 0.4976", "391.232, 364.459, 83.8768, 0.3934", "390.346, 365.149, 84.264, 0.3254", "389.248, 365.371, 84.5704, 0.2746", "388.23, 365.801, 84.8473, 0.2746", "387.349, 366.478, 85.155, 0.2746", "386.683, 367.346, 85.5002, 0.2746", "386.151, 368.327, 85.8595, 0.2746", "385.68, 369.348, 86.1885, 0.2748", "385.283, 370.422, 86.4326, 0.2748", "384.8, 371.447, 86.5998, 0.2752", "384.087, 372.34, 86.7031, 0.2758", "383.412, 373.261, 86.7636, 0.2766", "382.842, 374.252, 86.805, 0.2784", "382.269, 375.242, 86.8501, 0.2818", "381.563, 376.112, 86.9137, 0.288", "380.554, 376.629, 87.0019, 0.3006", "379.444, 376.878, 87.1212, 0.3178", "378.347, 377.159, 87.2903, 0.3802", "377.237, 377.353, 87.5526, 0.3464", "376.121, 377.515, 87.8906, 0.3242", "375.031, 377.633, 88.3252, 0.3142", "373.953, 377.732, 88.8387, 0.3734", "372.872, 377.992, 89.3292, 0.3338", "371.789, 378.354, 89.7459, 0.3", "370.729, 378.777, 90.0822, 0.2746", "369.692, 379.259, 90.3459, 0.2746", "368.631, 379.648, 90.5932, 0.2746", "367.538, 379.896, 90.8916, 0.2746", "366.483, 380.263, 91.2229, 0.2746", "365.497, 380.843, 91.5446, 0.2744", "364.509, 381.405, 91.8918, 0.2744", "363.516, 381.929, 92.3065, 0.2742", "362.573, 382.522, 92.7713, 0.2736", "361.678, 383.185, 93.2705, 0.2728", "360.812, 383.766, 93.8566, 0.2712", "359.948, 384.321, 94.4983, 0.2684", "358.98, 384.931, 94.9836, 0.2626", "358.01, 385.535, 95.3266, 0.2542", "356.986, 386.046, 95.5422, 0.2288", "356.247, 386.873, 95.6992, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "406.136, 355.965, 76.2656, 0.8694", "405.372, 355.973, 76.3204, 0.5492", "404.228, 355.976, 76.3204, 0.5492", "403.084, 356.003, 76.2908, 0.5492", "401.947, 356.111, 76.2474, 0.5492", "400.835, 356.37, 76.1869, 0.5492", "399.742, 356.708, 76.1074, 0.5492", "398.729, 357.223, 76.008, 0.5492", "397.686, 357.627, 75.8299, 0.5492", "396.592, 357.63, 75.5415, 0.5492", "395.457, 357.554, 75.2693, 0.5492", "394.323, 357.402, 75.0249, 0.5492", "393.292, 356.92, 74.8003, 0.5492", "392.35, 356.284, 74.5525, 0.5492", "391.488, 355.557, 74.2566, 0.5492", "390.636, 354.822, 73.9175, 0.5492", "389.784, 354.086, 73.5361, 0.5492", "388.931, 353.351, 73.1312, 0.5492", "388.129, 352.551, 72.7356, 0.5492", "387.395, 351.684, 72.3778, 0.5492", "386.666, 350.809, 72.0591, 0.5492", "385.938, 349.932, 71.773, 0.5492", "385.21, 349.058, 71.5134, 0.5492", "384.481, 348.182, 71.2746, 0.5492", "383.754, 347.308, 71.0511, 0.5492", "382.931, 346.514, 70.859, 0.5492", "382.033, 345.808, 70.7076, 0.5492", "381.163, 345.066, 70.5824, 0.5492", "380.398, 344.216, 70.4668, 0.5492", "379.665, 343.337, 70.3452, 0.5492", "378.982, 342.42, 70.2058, 0.5492", "378.204, 341.603, 69.9796, 0.5492", "377.386, 340.849, 69.655, 0.5492", "376.565, 340.099, 69.2614, 0.5492", "375.743, 339.349, 68.8285, 0.5492", "375.24, 338.332, 68.4541, 0.5492", "374.745, 337.302, 68.1484, 0.5492", "373.956, 336.476, 67.8969, 0.5492", "373.157, 335.658, 67.6766, 0.5492", "372.413, 334.789, 67.4626, 0.5492", "371.587, 334.077, 67.1149, 0.5492", "370.751, 333.466, 66.6002, 0.5492", "369.78, 332.901, 66.0657, 0.5492", "368.755, 332.394, 65.606, 0.5492" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "424.22, 257.947, 62.7214, 0.5176", "423.06, 257.418, 62.2143, 0.4268", "422.141, 256.999, 61.5535, 0.4034", "421.22, 256.579, 60.8054, 0.3422", "420.099, 256.43, 60.1832, 0.3158", "418.966, 256.267, 59.7176, 0.3032", "417.859, 255.983, 59.3981, 0.33", "416.86, 255.429, 59.2063, 0.3666", "415.921, 254.776, 59.0859, 0.4962", "415.175, 253.918, 58.9557, 0.4384", "414.526, 252.988, 58.7779, 0.4048", "413.88, 252.057, 58.5656, 0.443", "413.304, 251.074, 58.3629, 0.4832", "412.809, 250.042, 58.203, 0.4782", "412.264, 249.036, 58.0818, 0.3972", "411.559, 248.136, 57.9992, 0.3664", "410.682, 247.401, 57.9508, 0.4178", "409.607, 247.101, 57.8435, 0.4416", "408.53, 246.818, 57.6954, 0.3754", "407.726, 246.005, 57.6167, 0.331", "406.908, 245.259, 57.7032, 0.327", "406.088, 244.625, 57.9765, 0.397", "404.992, 244.305, 58.2207, 0.3784", "404.001, 243.743, 58.4256, 0.3782", "403.273, 242.864, 58.5771, 0.4412", "402.8, 241.823, 58.6634, 0.4796", "402.387, 240.758, 58.6908, 0.4716", "401.7, 239.858, 58.6818, 0.385", "400.681, 239.339, 58.6676, 0.3422", "399.597, 238.976, 58.648, 0.3786", "398.508, 238.626, 58.62, 0.3436", "397.431, 238.239, 58.5794, 0.3182", "396.391, 237.763, 58.5242, 0.308", "395.428, 237.173, 58.4545, 0.3384", "394.81, 236.217, 58.3579, 0.3836", "394.284, 235.23, 58.175, 0.5226", "393.595, 234.368, 57.925, 0.5118", "392.737, 233.625, 57.7256, 0.4222", "391.693, 233.179, 57.5725, 0.3654", "390.604, 233.178, 57.4599, 0.416", "389.561, 233.63, 57.3818, 0.4384", "388.453, 233.717, 57.3289, 0.3698", "387.387, 233.318, 57.2818, 0.3194", "386.368, 232.803, 57.211, 0.3112", "385.326, 232.338, 57.1007, 0.3384", "384.284, 231.874, 56.9624, 0.4132", "383.242, 231.411, 56.8067, 0.4334", "382.2, 230.946, 56.6443, 0.3604", "381.163, 230.473, 56.4861, 0.3018", "380.148, 229.949, 56.3522, 0.278", "379.164, 229.365, 56.2579, 0.281", "378.233, 228.711, 56.1929, 0.2862", "377.408, 227.919, 56.1473, 0.2962", "376.543, 227.181, 56.1114, 0.3156", "375.529, 226.663, 56.0753, 0.3464", "374.428, 226.467, 56.0272, 0.4278", "373.286, 226.553, 55.96, 0.4614", "372.146, 226.567, 55.8726, 0.4072", "371.023, 226.385, 55.7606, 0.4144", "370.184, 225.791, 55.5629, 0.3638", "369.614, 224.88, 55.2485, 0.35", "368.803, 224.142, 54.9366, 0.3928", "367.815, 223.564, 54.707, 0.3708", "366.792, 223.061, 54.5566, 0.3644", "365.699, 222.739, 54.4816, 0.4142", "364.652, 222.325, 54.4788, 0.4352", "363.952, 221.492, 54.5362, 0.3636", "363.324, 220.563, 54.633, 0.308", "362.515, 219.754, 54.7613, 0.2894", "361.717, 218.934, 54.9242, 0.3018", "361.3, 217.994, 55.2059, 0.3274", "361.21, 216.955, 55.6466, 0.362", "361.161, 215.861, 56.119, 0.4876", "360.922, 214.763, 56.5202, 0.422", "360.923, 213.68, 56.8431, 0.3778", "361.511, 212.725, 57.0942, 0.3748", "362.018, 211.733, 57.3331, 0.4454", "362.249, 210.68, 57.6341, 0.6638", "362.289, 209.569, 57.9354, 0.6466", "361.951, 208.5, 58.161, 0.6012", "361.534, 207.435, 58.2963, 0.5826", "361.115, 206.37, 58.345, 0.4608", "360.485, 205.427, 58.3136, 0.429", "359.576, 204.79, 58.1549, 0.3428", "358.586, 204.286, 57.883, 0.3162", "357.604, 203.718, 57.6122, 0.3056", "357.079, 202.748, 57.3717, 0.3268", "356.725, 201.66, 57.1575, 0.3978", "356.061, 200.764, 56.9162, 0.374", "355.158, 200.124, 56.6213, 0.4", "354.229, 199.518, 56.2864, 0.3358", "353.276, 198.896, 55.9978, 0.3036", "352.381, 198.185, 55.7785, 0.2814", "351.812, 197.204, 55.6228, 0.2874", "351.436, 196.125, 55.5232, 0.2982", "351.134, 195.022, 55.4632, 0.3192", "350.395, 194.158, 55.4215, 0.3532", "349.452, 193.513, 55.3689, 0.4408", "348.472, 192.953, 55.2535, 0.484", "347.578, 192.242, 55.1415, 0.4572", "346.721, 191.484, 55.0547, 0.4676", "345.866, 190.724, 54.9926, 0.6516", "345.077, 189.896, 54.9528, 0.6526", "344.302, 189.055, 54.9329, 0.4746", "343.346, 188.427, 54.9293, 0.3304", "342.281, 188.012, 54.9293, 0.305", "341.333, 187.374, 54.9293, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "424.22, 257.947, 62.7214, 0.5176", "423.241, 257.027, 63.84, 0.2288", "422.509, 256.147, 63.9864, 0.7432", "421.521, 255.599, 64.0444, 0.8152", "420.487, 255.109, 64.1192, 0.8108", "419.501, 254.531, 64.2127, 0.7864", "418.579, 253.952, 64.44, 0.59", "417.674, 253.282, 64.6528, 0.5032", "417.434, 252.187, 64.8824, 0.5988", "416.605, 251.408, 65.1059, 0.6732", "415.977, 250.469, 65.345, 0.6234", "415.455, 249.46, 65.5567, 0.5258", "414.715, 248.587, 65.7205, 0.6022", "413.911, 247.774, 65.854, 0.6388", "413.007, 247.077, 65.9674, 0.5282", "412.049, 246.453, 66.0744, 0.503", "411.167, 245.729, 66.1954, 0.5", "410.222, 245.094, 66.3656, 0.51", "409.244, 244.536, 66.5902, 0.4524", "408.279, 244.008, 66.9043, 0.4876", "407.33, 243.407, 67.2272, 0.5496", "406.523, 242.623, 67.5338, 0.4514", "405.817, 241.725, 67.7536, 0.3886", "405.273, 240.726, 67.8952, 0.381", "404.711, 239.773, 67.9714, 0.5234", "403.908, 238.975, 67.9977, 0.4848", "403.171, 238.119, 67.9966, 0.5104", "402.245, 237.449, 67.9784, 0.5446", "401.307, 236.794, 67.949, 0.4436", "400.441, 236.055, 67.9185, 0.3666", "399.723, 235.176, 67.8871, 0.3762", "399.168, 234.179, 67.8194, 0.339", "398.851, 233.121, 67.664, 0.3094", "398.784, 232.017, 67.4002, 0.2922", "398.723, 230.892, 67.0897, 0.3068", "398.648, 229.77, 66.7523, 0.3362", "398.564, 228.638, 66.4549, 0.3794", "398.483, 227.496, 66.2365, 0.5146", "398.342, 226.362, 66.087, 0.497", "398.079, 225.25, 65.9865, 0.394", "397.713, 224.168, 65.9095, 0.3168", "397.336, 223.088, 65.8406, 0.3068", "396.735, 222.144, 65.7462, 0.329", "395.929, 221.365, 65.581, 0.402", "395.452, 220.398, 65.3705, 0.3816", "394.956, 219.387, 65.179, 0.4142", "393.972, 219.028, 65.053, 0.3622", "393.003, 218.51, 65.0269, 0.3532", "392.426, 217.553, 65.0404, 0.369", "391.868, 216.556, 65.0636, 0.4708", "391.256, 215.589, 65.0784, 0.537", "390.59, 214.66, 65.0681, 0.5674", "390.024, 213.668, 65.023, 0.6136", "389.493, 212.655, 64.9412, 0.5192", "388.661, 211.894, 64.8301, 0.534", "387.734, 211.234, 64.6576, 0.5532", "386.861, 210.515, 64.4137, 0.6296", "385.974, 209.858, 64.0749, 0.5736", "384.9, 209.7, 63.6706, 0.5136", "383.758, 209.695, 63.3335, 0.4174", "382.636, 209.911, 63.0658, 0.397", "381.492, 209.924, 62.858, 0.5052", "380.597, 210.615, 62.6928, 0.4562", "379.52, 210.911, 62.5386, 0.4328", "378.412, 210.842, 62.335, 0.5196", "377.36, 210.891, 62.0141, 0.5064", "376.363, 211.298, 61.7263, 0.412", "375.655, 212.194, 61.5051, 0.3454", "375.046, 213.158, 61.369, 0.3846", "374.532, 214.174, 61.3362, 0.3546", "373.922, 215.12, 61.3922, 0.339", "373.103, 215.911, 61.4636, 0.343", "372.169, 216.572, 61.5233, 0.422", "371.179, 217.138, 61.565, 0.449", "370.159, 217.657, 61.586, 0.3906", "369.153, 218.201, 61.5877, 0.3524", "368.106, 218.639, 61.5933, 0.3984", "366.994, 218.882, 61.6011, 0.3748", "365.856, 218.97, 61.5773, 0.4016", "364.722, 219.089, 61.5168, 0.3388", "363.623, 219.393, 61.4163, 0.3092", "362.514, 219.615, 61.2576, 0.2912", "361.406, 219.648, 60.9764, 0.3068", "360.298, 219.677, 60.5945, 0.3288", "359.325, 220.111, 60.174, 0.402", "358.3, 220.432, 59.7548, 0.3814", "357.206, 220.449, 59.2813, 0.4136", "356.095, 220.507, 58.8045, 0.361", "354.955, 220.555, 58.3979, 0.3526", "353.822, 220.563, 58.009, 0.3616", "352.729, 220.563, 57.5663, 0.4864", "351.634, 220.542, 57.0934, 0.4208", "350.522, 220.392, 56.6577, 0.3712", "349.402, 220.175, 56.3114, 0.3846", "348.263, 220.109, 56.0468, 0.3548", "347.132, 220.252, 55.8502, 0.3386", "345.999, 220.415, 55.701, 0.348", "344.861, 220.365, 55.5694, 0.4008", "344.051, 219.67, 55.3524, 0.5566", "343.286, 218.852, 55.0539, 0.565", "342.431, 218.097, 54.7758, 0.5706", "341.799, 217.168, 54.4681, 0.3984", "340.891, 216.504, 54.1517, 0.2796", "339.768, 216.445, 53.48, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "534.383, 206.368, 137.572, 0.2746", "535.551, 205.959, 137.859, 0.2746", "536.612, 205.587, 138.223, 0.2746", "537.672, 205.215, 138.65, 0.2746", "538.732, 204.844, 139.12, 0.2746", "539.793, 204.472, 139.616, 0.2746", "540.854, 204.1, 140.118, 0.2746", "541.915, 203.728, 140.611, 0.2746", "542.976, 203.357, 141.091, 0.2746", "544.036, 202.986, 141.554, 0.2746", "545.097, 202.614, 141.995, 0.2746", "546.158, 202.242, 142.409, 0.2746", "547.242, 201.919, 142.773, 0.2746", "548.359, 201.699, 143.054, 0.2746", "549.493, 201.548, 143.253, 0.2746", "550.633, 201.477, 143.393, 0.2746", "551.778, 201.452, 143.5, 0.2746", "552.922, 201.431, 143.597, 0.2746", "554.065, 201.423, 143.706, 0.2746", "555.159, 201.18, 143.865, 0.2746", "556.15, 200.642, 144.102, 0.2746", "557.099, 200.028, 144.409, 0.2746", "558.049, 199.415, 144.768, 0.2746", "558.998, 198.802, 145.16, 0.2746", "559.947, 198.189, 145.572, 0.2746", "560.896, 197.576, 145.987, 0.2746", "561.846, 196.962, 146.395, 0.2746", "562.795, 196.349, 146.792, 0.2746", "563.744, 195.736, 147.174, 0.2746", "564.693, 195.123, 147.538, 0.2746", "565.647, 194.514, 147.878, 0.2746", "566.664, 194.01, 148.157, 0.2746", "567.719, 193.567, 148.368, 0.2746", "568.773, 193.122, 148.535, 0.2746", "569.828, 192.678, 148.682, 0.2748", "570.882, 192.236, 148.828, 0.2748", "571.883, 191.698, 149.022, 0.2752", "572.808, 191.053, 149.305, 0.2758", "573.707, 190.375, 149.673, 0.2766", "574.605, 189.699, 150.106, 0.2782", "575.503, 189.022, 150.585, 0.2814", "576.402, 188.346, 151.093, 0.287", "577.3, 187.67, 151.616, 0.2988", "578.199, 186.994, 152.146, 0.3142", "579.097, 186.316, 152.681, 0.3734", "580.081, 185.799, 153.23, 0.3338", "581.114, 185.38, 153.796, 0.3", "582.15, 184.961, 154.377, 0.2746", "583.184, 184.542, 154.964, 0.2746", "584.219, 184.123, 155.549, 0.2746", "585.253, 183.705, 156.122, 0.2746", "586.287, 183.286, 156.671, 0.2746", "586.871, 182.72, 157.328, 0.2746", "587.947, 182.365, 157.816, 0.2746", "588.793, 181.596, 158.159, 0.2746", "589.495, 180.725, 158.386, 0.2746", "590.504, 180.201, 158.528, 0.2746", "591.36, 179.448, 158.612, 0.2746", "592.092, 178.57, 158.662, 0.2746", "592.964, 177.885, 158.731, 0.2746", "593.783, 177.183, 158.851, 0.2746", "594.399, 176.23, 158.999, 0.2744", "595.357, 175.784, 159.179, 0.2744", "595.982, 174.962, 159.34, 0.2742", "596.305, 173.867, 159.458, 0.2736", "597.107, 173.151, 159.535, 0.2728", "597.988, 172.426, 159.578, 0.2712", "599.078, 172.108, 159.596, 0.2684", "600.219, 172.05, 159.6, 0.2626", "600.959, 171.208, 159.6, 0.2542", "602.087, 171.039, 159.6, 0.2288", "603.231, 171.028, 159.6, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "534.383, 206.368, 137.572, 0.2746", "534.916, 206.69, 137.508, 0.2288", "535.846, 207.253, 138.849, 0.2746", "536.776, 207.816, 139.421, 0.2746", "537.706, 208.377, 140.098, 0.2746", "538.636, 208.94, 140.842, 0.2746", "539.567, 209.503, 141.619, 0.2746", "540.497, 210.066, 142.396, 0.2746", "541.393, 210.702, 143.127, 0.2746", "542.233, 211.44, 143.787, 0.2746", "543.068, 212.184, 144.38, 0.2746", "543.903, 212.929, 144.911, 0.2746", "544.739, 213.674, 145.385, 0.2746", "545.574, 214.419, 145.805, 0.2746", "546.378, 215.23, 146.099, 0.2746", "547.18, 216.046, 146.29, 0.2746", "547.982, 216.861, 146.401, 0.2746", "548.733, 217.724, 146.455, 0.2746", "549.256, 218.738, 146.472, 0.2746", "550.273, 219.225, 146.471, 0.2746", "551.241, 219.836, 146.469, 0.2746", "552.077, 220.615, 146.465, 0.2746", "552.914, 221.396, 146.46, 0.2746", "553.749, 222.177, 146.452, 0.2746", "554.586, 222.958, 146.442, 0.2746", "555.421, 223.739, 146.427, 0.2746", "556.27, 224.505, 146.406, 0.2746", "557.34, 224.913, 146.377, 0.2746", "558.408, 225.319, 146.337, 0.2746", "559.478, 225.725, 146.284, 0.2746", "560.56, 226.096, 146.207, 0.2746", "561.667, 226.364, 146.084, 0.2746", "562.776, 226.632, 145.925, 0.2746", "563.883, 226.901, 145.742, 0.2746", "564.992, 227.169, 145.545, 0.2746", "566.099, 227.438, 145.344, 0.2746", "567.208, 227.705, 145.151, 0.2744", "568.315, 227.973, 144.971, 0.2744", "569.424, 228.247, 144.817, 0.2742", "570.529, 228.543, 144.711, 0.2736", "571.635, 228.837, 144.644, 0.2728", "572.713, 229.22, 144.607, 0.2712", "573.786, 229.617, 144.589, 0.2684", "574.858, 230.014, 144.584, 0.2626", "575.931, 230.411, 144.584, 0.2542", "577.004, 230.808, 144.584, 0.2288", "578.077, 231.205, 144.584, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "517.228, 311.193, 86.8798, 0.283", "517.913, 311.169, 85.7581, 0.2288", "519.056, 311.153, 85.8796, 0.2882", "520.184, 311.014, 85.9314, 0.2998", "521.297, 310.756, 86.0079, 0.3222", "522.417, 310.533, 86.112, 0.359", "523.51, 310.311, 86.296, 0.4508", "524.606, 310.253, 86.5939, 0.5058", "525.741, 310.27, 86.9053, 0.4792", "526.857, 310.448, 87.197, 0.5986", "527.965, 310.67, 87.4731, 0.4564", "529.069, 310.534, 87.7492, 0.358", "530.125, 310.17, 88.0636, 0.2876", "530.872, 309.422, 88.3515, 0.2998", "531.123, 308.329, 88.615, 0.3162", "531.723, 307.468, 88.9176, 0.377", "532.833, 307.336, 89.1682, 0.341", "533.964, 307.173, 89.362, 0.3126", "535.073, 306.893, 89.5115, 0.299", "536.113, 306.43, 89.668, 0.3148", "537.173, 306.163, 89.9083, 0.3746", "538.295, 305.955, 90.1004, 0.3362", "539.435, 305.863, 90.2446, 0.304", "540.491, 305.433, 90.3465, 0.2826", "541.548, 304.996, 90.4092, 0.288", "542.631, 304.628, 90.4372, 0.305", "543.735, 304.327, 90.44, 0.305", "544.773, 303.846, 90.44, 0.4576" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "517.228, 311.193, 86.8798, 0.283", "517.826, 310.359, 86.9025, 0.2906", "518.698, 309.651, 86.9478, 0.3036", "519.653, 309.025, 87.017, 0.3308", "520.598, 308.38, 87.0878, 0.3682", "521.602, 307.841, 87.1716, 0.5002", "522.393, 307.029, 87.2617, 0.4396", "523.006, 306.066, 87.3376, 0.4368", "523.116, 304.933, 87.4003, 0.358", "523.435, 303.836, 87.4566, 0.3396", "523.952, 302.816, 87.5129, 0.3736", "524.691, 301.944, 87.5722, 0.3342", "525.62, 301.288, 87.6784, 0.3006", "526.27, 300.35, 87.8055, 0.2758", "527.103, 299.593, 87.978, 0.2766", "527.615, 298.569, 88.1264, 0.2782", "528.163, 297.566, 88.2504, 0.2814", "528.789, 296.608, 88.3501, 0.2872", "529.43, 295.692, 88.4596, 0.2988", "530.02, 294.82, 88.6544, 0.3142", "530.849, 294.042, 88.7849, 0.3736", "531.469, 293.093, 88.8423, 0.3342", "531.92, 292.048, 88.8031, 0.3006", "532.58, 291.153, 88.7043, 0.2758", "533.368, 290.345, 88.536, 0.2768", "533.741, 289.328, 88.3294, 0.279", "534.178, 288.302, 88.144, 0.2826", "534.729, 287.305, 87.9721, 0.2892", "534.919, 286.204, 87.8422, 0.3016", "534.792, 285.072, 87.7601, 0.3264", "534.632, 283.94, 87.7184, 0.3606", "534.521, 282.801, 87.7055, 0.4848", "534.481, 281.659, 87.7134, 0.4178", "534.477, 280.514, 87.74, 0.3656", "534.477, 279.371, 87.7808, 0.3746", "534.707, 278.26, 87.8352, 0.3358", "535.295, 277.291, 87.9043, 0.3038", "535.647, 276.221, 88.0152, 0.2816", "535.878, 275.124, 88.2115, 0.2876", "536.446, 274.152, 88.4089, 0.2998", "536.546, 273.034, 88.5948, 0.316", "536.735, 271.907, 88.7785, 0.377", "536.782, 270.767, 88.9703, 0.3406", "536.934, 269.634, 89.1848, 0.3126", "537.706, 268.857, 89.49, 0.2988", "538.076, 267.9, 89.9623, 0.3142", "538.608, 266.94, 90.4442, 0.3734", "539.103, 266.232, 91.0731, 0.3338", "539.781, 265.354, 91.5701, 0.3", "539.935, 264.235, 91.9464, 0.2744", "539.866, 263.095, 92.2186, 0.2744", "539.816, 261.952, 92.4146, 0.2742", "539.85, 260.825, 92.5739, 0.2736", "539.923, 259.767, 92.7948, 0.2728", "539.773, 258.695, 93.1193, 0.2712", "539.934, 257.584, 93.427, 0.2684", "540.708, 256.891, 93.7129, 0.2626", "541.62, 256.251, 94.0072, 0.2542", "542.382, 255.714, 94.4625, 0.2288", "543.286, 255.112, 95.48, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "377.38, 282.606, 94.5428, 0.3104", "376.855, 282.33, 94.498, 0.4576", "375.9, 281.82, 93.8504, 0.3856", "374.912, 281.265, 93.6029, 0.3432", "373.914, 280.706, 93.387, 0.3802", "372.873, 280.253, 93.163, 0.3464", "371.949, 279.662, 92.878, 0.3242", "371.126, 278.885, 92.6397, 0.3142", "370.336, 278.058, 92.4857, 0.3734", "369.51, 277.268, 92.3922, 0.3338", "368.651, 276.512, 92.353, 0.3", "367.783, 275.766, 92.3678, 0.2746", "367.292, 274.754, 92.4336, 0.2744", "367.025, 273.644, 92.5364, 0.2744", "366.821, 272.518, 92.6752, 0.2742", "366.731, 271.379, 92.8514, 0.2736", "367.058, 270.315, 93.1325, 0.2728", "367.881, 269.688, 93.597, 0.2712", "368.782, 269.1, 94.1486, 0.2684", "369.821, 268.635, 94.6448, 0.2626", "370.86, 268.171, 95.0746, 0.2542", "371.897, 267.706, 95.4302, 0.2288", "372.936, 267.242, 95.9686, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "377.38, 282.606, 94.5428, 0.3104", "377.494, 282.158, 94.2007, 0.294", "377.444, 281.076, 93.7544, 0.3112", "376.885, 280.083, 93.352, 0.3384", "376.06, 279.321, 92.9239, 0.4132", "375.23, 278.642, 92.4227, 0.4334", "374.303, 277.995, 91.9671, 0.3604", "373.5, 277.202, 91.6238, 0.302", "373.026, 276.201, 91.3525, 0.2782", "372.06, 275.626, 91.0815, 0.2814", "371.095, 275.188, 90.7418, 0.2872", "369.994, 274.892, 90.5008, 0.2988", "369.134, 274.335, 90.2986, 0.3142", "369.022, 273.332, 90.0323, 0.3736", "368.7, 272.399, 89.8181, 0.3342", "368.1, 271.519, 89.7893, 0.3006", "367.983, 270.625, 90.225, 0.2758", "368.014, 269.788, 91.0815, 0.2766", "368.047, 268.952, 92.2508, 0.2784", "368.079, 268.116, 93.6202, 0.2818", "368.111, 267.28, 95.0648, 0.2878", "368.121, 266.37, 96.4491, 0.3004", "368.041, 265.281, 97.5268, 0.3172", "368.058, 264.14, 98.2946, 0.3792", "368.231, 263.013, 98.8546, 0.3444", "368.552, 261.935, 99.3258, 0.3192", "368.909, 260.872, 99.7696, 0.3112", "369.266, 259.808, 100.221, 0.3382", "369.903, 258.915, 100.716, 0.413", "370.666, 258.11, 101.243, 0.4326", "371.442, 257.318, 101.774, 0.3592", "372.214, 256.509, 102.274, 0.3", "372.764, 255.524, 102.677, 0.2746", "372.921, 254.403, 102.986, 0.2746", "372.308, 253.502, 103.232, 0.2746", "371.99, 252.426, 103.451, 0.2748", "372.428, 251.425, 103.738, 0.2748", "372.946, 250.439, 104.093, 0.2752", "373.406, 249.422, 104.5, 0.2758", "373.372, 248.301, 104.901, 0.2766", "373.289, 247.169, 105.279, 0.2782", "373.206, 246.037, 105.625, 0.2814", "373.308, 244.902, 105.908, 0.2872", "373.558, 243.786, 106.121, 0.2988", "373.662, 242.648, 106.288, 0.3144", "373.211, 241.606, 106.443, 0.374", "372.692, 240.651, 106.707, 0.335", "372.255, 239.594, 106.933, 0.302", "371.898, 238.509, 107.132, 0.2782", "371.714, 237.406, 107.338, 0.2814", "371.266, 236.508, 107.681, 0.2872", "370.497, 235.715, 107.941, 0.299", "369.642, 235.158, 108.12, 0.3146", "369.295, 234.088, 108.246, 0.3746", "368.672, 233.128, 108.323, 0.3358", "368.19, 232.107, 108.357, 0.3036", "367.918, 230.998, 108.356, 0.2814", "367.682, 229.894, 108.355, 0.287", "367.682, 228.75, 108.353, 0.2988", "367.669, 227.606, 108.35, 0.3142", "367.576, 226.469, 108.346, 0.3734", "367.303, 225.362, 108.341, 0.3338", "366.824, 224.329, 108.333, 0.3", "366.264, 223.332, 108.322, 0.2746", "365.765, 222.303, 108.307, 0.2746", "365.314, 221.253, 108.29, 0.2746", "364.768, 220.266, 108.254, 0.2744", "363.895, 219.577, 108.201, 0.2744", "362.806, 219.289, 108.156, 0.2742", "361.796, 218.865, 108.123, 0.2736", "361.099, 217.988, 108.099, 0.2728", "360.883, 216.904, 108.086, 0.2712", "361.239, 215.855, 108.081, 0.2684", "361.909, 214.93, 108.08, 0.2626", "362.568, 213.997, 108.08, 0.2542", "362.702, 212.876, 108.08, 0.2288", "363.22, 211.869, 108.08, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "368.755, 332.394, 65.606, 0.5492", "368.147, 331.3, 65.6597, 0.4576", "367.46, 330.57, 64.6232, 0.3986", "366.709, 329.855, 64.1295, 0.3684", "365.932, 329.037, 63.6978, 0.4216", "365.453, 328.011, 63.3548, 0.449", "364.834, 327.054, 63.0882, 0.3904", "364.072, 326.202, 62.881, 0.3518", "363.293, 325.365, 62.7136, 0.3976", "362.577, 324.473, 62.5386, 0.3734", "361.951, 323.516, 62.319, 0.399", "361.288, 322.609, 61.9839, 0.334", "360.585, 321.86, 61.4558, 0.3002", "359.879, 321.13, 60.7863, 0.275", "359.174, 320.4, 60.0387, 0.2754", "358.588, 319.439, 59.4294, 0.2762", "358.016, 318.447, 58.9719, 0.2776", "357.275, 317.579, 58.6463, 0.2798", "356.467, 316.769, 58.4214, 0.2844", "355.655, 315.964, 58.2526, 0.2926", "354.77, 315.254, 58.0482, 0.3094", "353.838, 314.662, 57.7368, 0.3334", "352.9, 314.079, 57.3415, 0.41", "352.06, 313.31, 56.985, 0.3976", "351.238, 312.514, 56.6815, 0.4386", "350.498, 311.647, 56.4007, 0.4332", "350.09, 310.632, 56.065, 0.36", "349.704, 309.606, 55.6945, 0.3012", "348.928, 308.778, 55.403, 0.2768", "348.02, 308.083, 55.1891, 0.2786", "346.919, 307.788, 55.0446, 0.2826", "345.78, 307.688, 54.9632, 0.288", "344.765, 307.165, 54.9329, 0.305", "343.974, 306.34, 54.9293, 0.305", "343.326, 305.398, 54.9293, 0.4576" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "368.755, 332.394, 65.606, 0.5492", "368.417, 332.493, 65.17, 0.4118", "367.392, 332.794, 64.6738, 0.4118", "366.356, 333.117, 64.1785, 0.4118", "365.308, 333.523, 63.7759, 0.4118", "364.205, 333.776, 63.4872, 0.4118", "363.069, 333.728, 63.2906, 0.4118", "361.934, 333.582, 63.177, 0.4118", "360.8, 333.431, 63.1288, 0.4118", "359.675, 333.233, 63.1128, 0.4118", "358.552, 333.009, 63.1033, 0.4118", "357.431, 332.778, 63.0896, 0.4118", "356.345, 332.435, 63.0711, 0.4118", "355.398, 331.818, 63.0448, 0.4118", "354.656, 330.957, 63.0073, 0.4118", "353.978, 330.036, 62.9549, 0.4118", "353.074, 329.379, 62.8835, 0.4118", "351.98, 329.07, 62.7903, 0.4118", "350.871, 329.199, 62.6402, 0.4118", "349.809, 329.589, 62.4215, 0.4118", "348.762, 330.017, 62.1505, 0.4118", "347.715, 330.444, 61.8484, 0.4118", "346.668, 330.872, 61.5348, 0.4118", "345.621, 331.3, 61.2273, 0.4118", "344.529, 331.625, 60.9717, 0.4118", "343.41, 331.861, 60.7897, 0.4118", "342.288, 332.079, 60.6698, 0.4118", "341.15, 332.182, 60.5945, 0.4118", "340.008, 332.152, 60.5464, 0.4118", "338.871, 332.025, 60.5097, 0.4118", "337.751, 331.8, 60.4677, 0.4118", "336.615, 331.677, 60.4083, 0.4118", "335.473, 331.612, 60.3263, 0.4118", "334.642, 332.28, 60.2196, 0.4118", "333.898, 333.15, 60.0802, 0.4118", "333.295, 334.071, 59.8217, 0.4118", "332.727, 335.004, 59.4583, 0.4118", "332.033, 335.898, 59.0996, 0.4118", "331.265, 336.744, 58.7894, 0.4118", "330.355, 337.433, 58.5214, 0.4118", "329.25, 337.609, 58.2851, 0.4118", "328.257, 337.088, 58.072, 0.4118", "327.198, 336.869, 57.748, 0.4118", "326.13, 336.72, 57.3135, 0.4118", "325.063, 336.575, 56.8081, 0.4118", "323.941, 336.478, 56.3469, 0.4118", "322.799, 336.421, 56.0031, 0.4118", "321.659, 336.334, 55.7752, 0.4118", "320.518, 336.243, 55.6522, 0.4118", "319.376, 336.165, 55.6046, 0.4118", "318.233, 336.114, 55.601, 0.4118", "317.091, 336.071, 55.6161, 0.4118", "315.948, 336.106, 55.6396, 0.4118", "314.911, 335.651, 55.671, 0.4118", "313.975, 334.994, 55.7105, 0.4118", "312.939, 334.514, 55.757, 0.4118", "311.825, 334.414, 55.8827, 0.4118", "310.684, 334.38, 56.0157, 0.4118", "309.561, 334.166, 56.1204, 0.4118", "308.435, 333.962, 56.1968, 0.4118", "307.293, 333.9, 56.247, 0.4118", "306.224, 333.501, 56.2738, 0.4118" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "306.224, 333.501, 56.2738, 0.4118", "305.232, 332.746, 56.2797, 0.3432", "304.257, 332.165, 56.28, 0.3432", "303.431, 331.376, 56.28, 0.3432", "302.601, 330.605, 56.28, 0.3432", "301.6, 330.059, 56.28, 0.3432", "300.529, 329.656, 56.2803, 0.3432", "299.442, 329.299, 56.2803, 0.3432", "298.359, 328.933, 56.2803, 0.3432", "297.248, 328.701, 56.2803, 0.3432", "296.104, 328.671, 56.2806, 0.3432", "294.961, 328.706, 56.2808, 0.3432", "293.822, 328.807, 56.2811, 0.3432", "292.684, 328.926, 56.2817, 0.3432", "291.569, 329.152, 56.2822, 0.3432", "290.495, 329.544, 56.2831, 0.3432", "289.421, 329.938, 56.2842, 0.3432", "288.366, 330.374, 56.2859, 0.3432", "287.327, 330.846, 56.2884, 0.3432", "286.223, 331.104, 56.2918, 0.3432", "285.081, 331.165, 56.2962, 0.3432", "283.937, 331.188, 56.3027, 0.3432", "282.802, 331.096, 56.3119, 0.3432", "281.716, 330.765, 56.3245, 0.3432", "280.67, 330.3, 56.3424, 0.3432", "279.608, 329.876, 56.3674, 0.3432", "278.577, 329.393, 56.4015, 0.3432", "277.727, 328.661, 56.45, 0.3432", "276.975, 327.804, 56.5194, 0.3432", "276.128, 327.035, 56.6166, 0.3432", "275.162, 326.456, 56.7454, 0.3432", "274.052, 326.269, 56.9097, 0.3432", "272.961, 326.319, 57.1962, 0.3432", "272.003, 326.71, 57.6302, 0.3432", "271.001, 327.175, 58.0975, 0.3432", "269.882, 327.298, 58.5365, 0.3432", "268.779, 327.272, 58.9991, 0.3432", "267.751, 326.897, 59.4345, 0.3432", "266.775, 326.304, 59.7738, 0.3432", "265.796, 325.714, 60.0348, 0.3432", "264.919, 324.987, 60.263, 0.3432", "264.153, 324.14, 60.4898, 0.3432", "263.305, 323.378, 60.7326, 0.3432", "262.463, 322.605, 61.028, 0.3432", "261.834, 321.843, 61.5468, 0.3432", "261.077, 321.405, 62.2863, 0.3432", "260.087, 321.186, 63.0851, 0.3432", "259.238, 320.465, 63.7832, 0.3432", "258.204, 319.978, 64.2827, 0.3432", "257.311, 319.265, 64.5943, 0.3432" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "306.224, 333.501, 56.2738, 0.4118", "305.824, 333.603, 56.0011, 0.2746", "304.926, 334.217, 55.8438, 0.2746", "304.357, 335.193, 55.7894, 0.2746", "303.944, 336.259, 55.7466, 0.2746", "303.362, 337.235, 55.7155, 0.2746", "302.865, 338.256, 55.6651, 0.2746", "302.421, 339.308, 55.627, 0.2746", "301.689, 340.16, 55.6419, 0.2746", "300.979, 341.053, 55.6688, 0.2746", "300.484, 342.078, 55.6965, 0.2746", "299.598, 342.736, 55.725, 0.2746", "298.526, 343.131, 55.755, 0.2746", "297.397, 343.302, 55.7808, 0.2746", "296.254, 343.314, 55.8012, 0.2746", "295.211, 342.877, 55.8603, 0.2746", "294.072, 342.857, 55.9096, 0.2746", "292.928, 342.857, 55.9474, 0.2746", "291.784, 342.825, 55.9745, 0.2746", "290.657, 342.635, 55.9916, 0.2746", "289.513, 342.609, 55.9997, 0.2746", "288.517, 342.056, 56.0, 0.2746" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "257.311, 319.265, 64.5943, 0.3432", "257.129, 319.063, 66.8934, 0.2974", "256.865, 318.177, 67.3632, 0.2974", "256.828, 317.036, 67.5254, 0.2974", "256.723, 315.9, 67.6558, 0.2974", "256.338, 314.836, 67.7592, 0.2974", "255.691, 313.901, 67.8409, 0.2974", "254.985, 313.001, 67.9067, 0.2974", "254.686, 311.94, 67.9624, 0.2974", "254.656, 310.797, 68.0422, 0.2974", "254.654, 309.656, 68.1694, 0.2974", "254.654, 308.513, 68.334, 0.2974", "254.654, 307.369, 68.5252, 0.2974", "254.649, 306.225, 68.7492, 0.2974", "254.01, 305.559, 69.1068, 0.2974", "253.081, 305.084, 69.617, 0.2974", "252.335, 304.299, 70.1753, 0.2974", "251.606, 303.428, 70.6709, 0.2974", "251.171, 302.372, 71.1105, 0.2974", "250.886, 301.27, 71.5154, 0.2974", "250.794, 300.132, 71.8525, 0.2974", "250.402, 299.061, 72.161, 0.2974", "249.827, 298.132, 72.5763, 0.2974", "249.615, 297.099, 73.1304, 0.2974", "249.506, 296.026, 73.7534, 0.2974", "249.506, 294.963, 74.424, 0.2974", "249.494, 293.839, 75.0254, 0.2974", "249.432, 292.696, 75.4902, 0.2974", "249.23, 291.583, 75.8486, 0.2974", "248.859, 290.517, 76.1684, 0.2974", "248.627, 289.423, 76.4907, 0.2974", "248.439, 288.323, 76.8132, 0.2974", "248.184, 287.213, 77.089, 0.2974", "247.888, 286.113, 77.3217, 0.2974", "247.532, 285.052, 77.4894, 0.2974", "246.96, 284.065, 77.6028, 0.2974", "246.466, 283.035, 77.6838, 0.2974", "246.07, 281.978, 77.7568, 0.2974", "245.586, 281.027, 77.8417, 0.2974", "244.69, 280.315, 77.9447, 0.2974", "244.271, 279.316, 78.0682, 0.2974", "244.069, 278.32, 78.3597, 0.2974", "244.015, 277.245, 78.7223, 0.2974", "244.015, 276.105, 79.025, 0.2974", "244.015, 274.961, 79.2498, 0.2974", "244.015, 273.818, 79.4021, 0.2974", "244.37, 272.749, 79.4886, 0.2974", "245.159, 271.929, 79.52, 0.2974" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "257.311, 319.265, 64.5943, 0.3432", "256.177, 318.869, 64.7357, 0.2974", "255.181, 318.307, 64.752, 0.2974", "254.21, 317.701, 64.6918, 0.2974", "253.318, 316.991, 64.5842, 0.2974", "252.427, 316.28, 64.435, 0.2974", "251.38, 315.913, 64.2351, 0.2974", "250.245, 315.858, 63.9467, 0.2974", "249.192, 316.053, 63.5001, 0.2974", "248.247, 316.565, 62.9222, 0.2974", "247.432, 317.089, 62.1886, 0.2974", "246.569, 317.666, 61.425, 0.2974", "245.84, 318.423, 60.6743, 0.2974", "245.057, 319.214, 60.0692, 0.2974", "244.036, 319.681, 59.647, 0.2974", "242.909, 319.84, 59.3656, 0.2974", "241.766, 319.862, 59.1816, 0.2974", "240.622, 319.862, 59.0425, 0.2974", "239.478, 319.826, 58.9114, 0.2974", "238.381, 319.54, 58.7364, 0.2974", "237.307, 319.28, 58.4458, 0.2974", "236.255, 318.923, 58.0748, 0.2974", "235.307, 318.345, 57.6618, 0.2974", "234.344, 317.779, 57.2415, 0.2974", "233.583, 316.949, 56.9069, 0.2974", "232.87, 316.06, 56.6378, 0.2974", "232.224, 315.118, 56.4609, 0.2974", "231.61, 314.153, 56.3587, 0.2974", "230.902, 313.256, 56.3066, 0.2974", "230.485, 312.195, 56.2839, 0.2974", "230.086, 311.123, 56.2724, 0.2974", "229.61, 310.082, 56.268, 0.2974", "228.905, 309.184, 56.2635, 0.2974", "228.086, 308.386, 56.2562, 0.2974", "227.413, 307.473, 56.2458, 0.2974", "226.328, 307.125, 56.2335, 0.2974", "225.478, 306.379, 56.2226, 0.2974", "224.932, 305.38, 56.1999, 0.2974", "224.385, 304.418, 56.1165, 0.2974", "223.585, 303.604, 56.075, 0.2974", "222.744, 302.832, 56.1134, 0.2974", "222.057, 301.926, 56.2386, 0.2974", "221.548, 300.903, 56.4589, 0.2974", "220.957, 299.956, 56.812, 0.2974", "220.479, 299.31, 57.4476, 0.2974", "219.918, 298.909, 58.3363, 0.2974", "218.853, 298.813, 59.1567, 0.2974", "217.745, 298.635, 59.8892, 0.2974", "216.794, 298.054, 60.4895, 0.2974", "215.808, 297.485, 60.9596, 0.2974", "214.963, 297.099, 61.4995, 0.2974", "213.974, 296.801, 62.0278, 0.2974", "213.168, 296.013, 62.4196, 0.2974", "212.511, 295.176, 62.6959, 0.2974", "211.4, 294.937, 62.8765, 0.2974", "210.256, 294.923, 62.9745, 0.2974", "209.113, 294.896, 63.0025, 0.2974", "207.99, 294.72, 63.0034, 0.2974", "206.898, 294.379, 63.0048, 0.2974", "205.788, 294.105, 63.0067, 0.2974", "204.673, 293.894, 63.0092, 0.2974", "203.53, 293.86, 63.0129, 0.2974", "202.39, 293.783, 63.0179, 0.2974", "201.249, 293.731, 63.0252, 0.2974", "200.139, 293.491, 63.0353, 0.2974", "199.074, 293.072, 63.049, 0.2974", "198.079, 292.551, 63.0686, 0.2974", "197.404, 291.66, 63.0966, 0.2974", "197.033, 290.579, 63.1358, 0.2974", "196.609, 289.529, 63.1879, 0.2974", "195.948, 288.599, 63.2542, 0.2974", "195.051, 288.079, 63.369, 0.2974", "193.992, 287.809, 63.5494, 0.2974", "192.941, 287.39, 63.728, 0.2974", "191.824, 287.22, 63.9142, 0.2974", "190.785, 286.855, 64.0984, 0.2974", "189.78, 286.311, 64.2382, 0.2974", "188.785, 285.751, 64.3308, 0.2974", "187.785, 285.198, 64.3874, 0.2974", "186.763, 284.685, 64.4232, 0.2974", "185.902, 283.959, 64.4468, 0.2974", "185.509, 282.927, 64.4678, 0.2974", "185.136, 281.853, 64.4946, 0.2974", "184.519, 280.898, 64.5291, 0.2974", "183.764, 280.04, 64.5728, 0.2974", "183.199, 279.073, 64.6727, 0.2974", "183.027, 277.963, 64.7858, 0.2974", "182.348, 277.149, 64.8838, 0.2974", "181.81, 276.167, 64.9664, 0.2974", "181.782, 275.029, 65.0367, 0.2974", "181.774, 273.885, 65.0952, 0.2974", "181.564, 272.762, 65.1431, 0.2974", "181.173, 271.713, 65.2658, 0.2974", "180.412, 270.87, 65.4007, 0.2974", "179.511, 270.167, 65.4903, 0.2974", "178.724, 269.336, 65.5346, 0.2974", "178.005, 268.449, 65.5348, 0.2974", "177.128, 267.718, 65.4797, 0.2974", "176.25, 267.003, 65.3416, 0.2974", "175.423, 266.258, 65.1297, 0.2974", "174.539, 265.538, 64.9662, 0.2974", "173.577, 264.919, 64.8491, 0.2974", "172.696, 264.207, 64.7755, 0.2974", "171.891, 263.422, 64.7408, 0.2974", "170.972, 262.765, 64.7399, 0.2974", "170.171, 261.951, 64.773, 0.2974", "169.392, 261.121, 64.8172, 0.2974", "168.588, 260.318, 64.8458, 0.2974", "167.609, 259.742, 64.8581, 0.2974", "166.819, 258.96, 64.8522, 0.2974", "165.985, 258.192, 64.8259, 0.2974", "164.941, 257.768, 64.7772, 0.2974", "163.881, 257.343, 64.7083, 0.2974", "163.274, 256.441, 64.6184, 0.2974", "163.142, 255.334, 64.4498, 0.2974", "163.261, 254.207, 64.2303, 0.2974", "163.823, 253.231, 63.9954, 0.2974", "163.934, 252.119, 63.7608, 0.2974", "163.809, 251.018, 63.4379, 0.2974", "163.527, 249.923, 63.0882, 0.2974", "163.48, 248.785, 62.7662, 0.2974", "163.359, 247.762, 62.3193, 0.2974", "162.854, 246.768, 61.878, 0.2974", "162.21, 245.847, 61.5017, 0.2974", "161.072, 245.742, 61.231, 0.2974", "159.928, 245.731, 61.0408, 0.2974", "158.785, 245.731, 60.9095, 0.2974", "157.666, 245.71, 60.7608, 0.2974", "156.646, 245.252, 60.66, 0.2974", "156.074, 244.263, 60.5909, 0.2974", "155.609, 243.219, 60.5441, 0.2974", "155.059, 242.22, 60.5192, 0.2974", "154.783, 241.117, 60.5144, 0.2974", "154.783, 239.973, 60.5287, 0.2974", "154.798, 238.829, 60.548, 0.2974", "154.993, 237.727, 60.5738, 0.2974", "155.573, 236.763, 60.6094, 0.2974", "155.698, 235.628, 60.6684, 0.2974", "155.698, 234.487, 60.7516, 0.2974", "155.698, 233.343, 60.8373, 0.2974", "155.698, 232.199, 60.9297, 0.2974", "155.698, 231.055, 61.0316, 0.2974", "155.698, 229.911, 61.1442, 0.2974", "155.648, 228.794, 61.3007, 0.2974", "155.322, 227.792, 61.6039, 0.2974", "154.745, 226.833, 61.9198, 0.2974", "154.098, 225.902, 62.1698, 0.2974", "153.738, 224.829, 62.37, 0.2974", "153.639, 223.695, 62.5335, 0.2974", "153.639, 222.551, 62.6321, 0.2974", "153.639, 221.408, 62.6774, 0.2974", "153.639, 220.264, 62.7007, 0.2974", "153.643, 219.12, 62.7144, 0.2974", "153.862, 218.041, 62.7194, 0.2974", "154.375, 217.035, 62.7194, 0.2974", "154.536, 215.914, 62.7194, 0.2974", "154.202, 214.89, 62.7192, 0.2974", "153.588, 213.949, 62.7189, 0.2974", "153.318, 212.849, 62.7183, 0.2974", "153.227, 211.709, 62.7175, 0.2974", "153.171, 210.567, 62.7166, 0.2974", "153.067, 209.431, 62.7152, 0.2974", "152.958, 208.296, 62.7136, 0.2974", "152.948, 207.152, 62.7108, 0.2974", "152.828, 206.02, 62.7071, 0.2974", "152.541, 204.913, 62.7021, 0.2974", "152.264, 203.806, 62.6948, 0.2974", "151.851, 202.76, 62.6847, 0.2974", "151.413, 201.721, 62.671, 0.2974", "151.174, 200.604, 62.6517, 0.2974", "150.891, 199.496, 62.6237, 0.2974", "150.357, 198.5, 62.5836, 0.2974", "149.827, 197.49, 62.5313, 0.2974", "149.457, 196.41, 62.4672, 0.2974", "149.285, 195.286, 62.3647, 0.2974", "149.189, 194.195, 62.1552, 0.2974", "148.648, 193.224, 61.9637, 0.2974", "147.908, 192.352, 61.8195, 0.2974", "147.033, 191.618, 61.7193, 0.2974", "146.135, 190.91, 61.6608, 0.2974", "145.39, 190.045, 61.6403, 0.2974", "144.485, 189.347, 61.6501, 0.2974", "143.923, 188.36, 61.67, 0.2974", "143.915, 187.218, 61.698, 0.2974", "144.289, 186.138, 61.7378, 0.2974", "144.487, 185.011, 61.7929, 0.2974", "144.487, 183.867, 61.8668, 0.2974", "144.487, 182.723, 61.9676, 0.2974", "144.486, 181.584, 62.1286, 0.2974", "144.255, 180.483, 62.3638, 0.2974", "143.403, 179.729, 62.627, 0.2974", "142.801, 178.765, 62.9023, 0.2974", "142.542, 177.682, 63.2388, 0.2974", "142.493, 176.568, 63.6488, 0.2974", "142.355, 175.456, 64.0875, 0.2974", "142.197, 174.55, 64.6937, 0.2974", "142.088, 173.708, 65.4203, 0.2974", "142.085, 172.575, 66.0204, 0.2974", "142.085, 171.431, 66.4546, 0.2974", "142.085, 170.287, 66.7461, 0.2974", "142.085, 169.143, 66.9228, 0.2974", "142.041, 168.0, 67.009, 0.2974", "141.839, 166.881, 67.055, 0.2974", "141.489, 165.792, 67.1084, 0.2974", "140.988, 164.775, 67.1849, 0.2974", "140.531, 163.745, 67.2918, 0.2974", "140.384, 162.617, 67.4372, 0.2974", "140.369, 161.473, 67.6259, 0.2974", "140.501, 160.383, 67.9325, 0.2974", "140.832, 159.35, 68.3878, 0.2974", "141.183, 158.3, 68.9259, 0.2974", "141.282, 157.228, 69.5383, 0.2974", "141.261, 156.113, 70.1481, 0.2974", "141.132, 154.994, 70.7134, 0.2974", "140.865, 153.909, 71.237, 0.2974", "140.269, 153.027, 71.7679, 0.2974", "139.716, 152.027, 72.1543, 0.2974", "138.842, 151.3, 72.4268, 0.2974", "138.774, 150.163, 72.6541, 0.2974", "138.939, 149.031, 72.8188, 0.2974", "138.996, 147.888, 72.9406, 0.2974", "138.979, 146.747, 73.0467, 0.2974", "138.744, 145.628, 73.1718, 0.2974", "138.653, 144.488, 73.327, 0.2974", "138.6, 143.363, 73.5381, 0.2974", "137.923, 142.478, 73.8648, 0.2974", "136.979, 141.867, 74.2787, 0.2974", "136.078, 141.281, 74.7718, 0.2974", "135.678, 140.41, 75.413, 0.2974", "135.678, 139.283, 76.0707, 0.2974", "135.678, 138.173, 76.7656, 0.2974", "135.683, 137.077, 77.4925, 0.2974", "136.102, 136.332, 78.3026, 0.2974", "136.516, 135.466, 79.0913, 0.2974", "136.937, 134.546, 79.8972, 0.2974", "137.095, 133.456, 80.5935, 0.2974", "137.334, 132.339, 81.1518, 0.2974", "137.694, 131.773, 81.8846, 0.2974", "138.195, 130.874, 82.581, 0.2974", "138.195, 129.73, 83.0833, 0.2974", "138.195, 128.586, 83.72, 0.2974" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_40", "dend_33", "dend_30", "dend_29", "dend_18", "dend_11", "dend_0", "dend_42", "dend_41", "dend_39", "dend_34", "dend_32", "dend_31", "dend_22", "dend_19", "dend_13", "dend_12", "dend_10", "dend_1", "dend_36", "dend_35", "dend_26", "dend_23", "dend_21", "dend_20", "dend_17", "dend_14", "dend_9", "dend_2", "dend_38", "dend_37", "dend_28", "dend_27", "dend_25", "dend_24", "dend_16", "dend_15", "dend_8", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1161",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "4.371848"
  }, {
    "group" : "axon",
    "value" : "4.371848"
  }, {
    "group" : "dend",
    "value" : "4.371848"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "30.880049"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.8449004E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.16245225",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.3899197E-8",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.7082612E-8",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.1736213",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.017917162",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.810469E-6",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "8.152512E-9",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "9.454739E-7",
    "erev" : "-84.206"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "3.0887375E-5",
    "erev" : "-84.206"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.0118024E-7",
    "erev" : "-84.206"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "7.8431226E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.009186071",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_471081668",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_471081668

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_43, dend_40, dend_33, dend_30, dend_29, dend_18, dend_11, dend_0, dend_42, dend_41, dend_39, dend_34, dend_32, dend_31, dend_22, dend_19, dend_13, dend_12, dend_10, dend_1, dend_36, dend_35, dend_26, dend_23, dend_21, dend_20, dend_17, dend_14, dend_9, dend_2, dend_38, dend_37, dend_28, dend_27, dend_25, dend_24, dend_16, dend_15, dend_8, dend_3, dend_5, dend_4, dend_7, dend_6]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_1161, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1161
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_471081668
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000000000000022)
    connect dend_43(0), soma_0(0.5000000000000022)
    connect dend_40(0), soma_0(0.5000000000000022)
    connect dend_33(0), soma_0(0.5000000000000022)
    connect dend_30(0), soma_0(0.5000000000000022)
    connect dend_29(0), soma_0(0.5000000000000022)
    connect dend_18(0), soma_0(0.5000000000000022)
    connect dend_11(0), soma_0(0.5000000000000022)
    connect dend_0(0), soma_0(0.5000000000000022)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 437.251, 354.857, 77.6588, 12.584 ) }
    soma_0 { pt3dadd( 443.543, 354.857, 77.6588, 12.584 ) }
    soma_0 { pt3dadd( 449.835, 354.857, 77.6588, 12.584 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 443.543, 354.857, 77.6588, 1.0 ) }
    axon_0 { pt3dadd( 449.384, 368.673, 77.6588, 1.0 ) }
    axon_0 { pt3dadd( 455.226, 382.489, 77.6588, 1.0 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 6/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 439.486, 357.865, 84.0512, 0.2288 ) }
    dend_43 { pt3dadd( 438.669, 358.47, 85.437, 0.2752 ) }
    dend_43 { pt3dadd( 437.853, 359.075, 86.0569, 0.2758 ) }
    dend_43 { pt3dadd( 436.99, 359.651, 86.7432, 0.2766 ) }
    dend_43 { pt3dadd( 435.94, 360.103, 87.3183, 0.2782 ) }
    dend_43 { pt3dadd( 434.878, 360.525, 87.7831, 0.2814 ) }
    dend_43 { pt3dadd( 433.772, 360.796, 88.1544, 0.287 ) }
    dend_43 { pt3dadd( 432.644, 360.943, 88.464, 0.2988 ) }
    dend_43 { pt3dadd( 431.569, 361.252, 88.8224, 0.3142 ) }
    dend_43 { pt3dadd( 430.522, 361.535, 89.3001, 0.3734 ) }
    dend_43 { pt3dadd( 429.461, 361.914, 89.8338, 0.3338 ) }
    dend_43 { pt3dadd( 428.387, 362.292, 90.3641, 0.3002 ) }
    dend_43 { pt3dadd( 427.292, 362.356, 90.949, 0.2748 ) }
    dend_43 { pt3dadd( 426.274, 362.039, 91.695, 0.2748 ) }
    dend_43 { pt3dadd( 425.287, 361.695, 92.582, 0.2752 ) }
    dend_43 { pt3dadd( 424.393, 361.291, 93.6211, 0.2758 ) }
    dend_43 { pt3dadd( 423.571, 360.853, 94.7957, 0.2766 ) }
    dend_43 { pt3dadd( 422.748, 360.414, 96.0439, 0.2784 ) }
    dend_43 { pt3dadd( 421.924, 359.974, 97.3017, 0.2818 ) }
    dend_43 { pt3dadd( 421.018, 359.584, 98.4665, 0.288 ) }
    dend_43 { pt3dadd( 419.945, 359.223, 99.386, 0.3008 ) }
    dend_43 { pt3dadd( 418.976, 358.621, 100.087, 0.3178 ) }
    dend_43 { pt3dadd( 418.0, 358.121, 100.671, 0.3804 ) }
    dend_43 { pt3dadd( 416.989, 358.133, 101.305, 0.3468 ) }
    dend_43 { pt3dadd( 416.066, 358.355, 102.053, 0.3252 ) }
    dend_43 { pt3dadd( 415.04, 358.504, 102.789, 0.3158 ) }
    dend_43 { pt3dadd( 413.96, 358.287, 103.401, 0.3766 ) }
    dend_43 { pt3dadd( 413.055, 357.632, 103.965, 0.3398 ) }
    dend_43 { pt3dadd( 412.085, 357.43, 104.484, 0.311 ) }
    dend_43 { pt3dadd( 410.954, 357.563, 104.929, 0.2952 ) }
    dend_43 { pt3dadd( 409.971, 357.128, 105.377, 0.312 ) }
    dend_43 { pt3dadd( 409.144, 356.528, 106.006, 0.3474 ) }
    dend_43 { pt3dadd( 408.338, 355.962, 106.831, 0.3936 ) }
    dend_43 { pt3dadd( 407.436, 355.447, 107.744, 0.5718 ) }
    dend_43 { pt3dadd( 406.494, 354.95, 108.689, 0.4534 ) }
    dend_43 { pt3dadd( 405.553, 354.453, 109.633, 0.3528 ) }
    dend_43 { pt3dadd( 404.611, 353.957, 110.541, 0.2782 ) }
    dend_43 { pt3dadd( 403.746, 353.284, 111.343, 0.2814 ) }
    dend_43 { pt3dadd( 402.968, 352.471, 112.015, 0.287 ) }
    dend_43 { pt3dadd( 402.207, 351.632, 112.586, 0.2988 ) }
    dend_43 { pt3dadd( 401.448, 350.795, 113.084, 0.3142 ) }
    dend_43 { pt3dadd( 400.712, 349.932, 113.526, 0.3734 ) }
    dend_43 { pt3dadd( 400.161, 348.943, 113.913, 0.3338 ) }
    dend_43 { pt3dadd( 399.563, 347.99, 114.303, 0.3 ) }
    dend_43 { pt3dadd( 398.936, 347.058, 114.712, 0.2746 ) }
    dend_43 { pt3dadd( 398.308, 346.125, 115.133, 0.2746 ) }
    dend_43 { pt3dadd( 397.78, 345.128, 115.544, 0.2746 ) }
    dend_43 { pt3dadd( 397.319, 344.091, 115.933, 0.2746 ) }
    dend_43 { pt3dadd( 396.867, 343.05, 116.298, 0.2746 ) }
    dend_43 { pt3dadd( 396.414, 342.009, 116.634, 0.2746 ) }
    dend_43 { pt3dadd( 395.962, 340.968, 116.945, 0.2748 ) }
    dend_43 { pt3dadd( 395.524, 339.918, 117.222, 0.2748 ) }
    dend_43 { pt3dadd( 395.116, 338.85, 117.455, 0.275 ) }
    dend_43 { pt3dadd( 394.714, 337.781, 117.65, 0.2752 ) }
    dend_43 { pt3dadd( 394.314, 336.71, 117.822, 0.276 ) }
    dend_43 { pt3dadd( 393.912, 335.639, 117.984, 0.277 ) }
    dend_43 { pt3dadd( 393.511, 334.569, 118.151, 0.2794 ) }
    dend_43 { pt3dadd( 393.109, 333.498, 118.34, 0.2834 ) }
    dend_43 { pt3dadd( 392.706, 332.428, 118.555, 0.2906 ) }
    dend_43 { pt3dadd( 392.301, 331.358, 118.798, 0.3056 ) }
    dend_43 { pt3dadd( 391.94, 330.307, 119.155, 0.3264 ) }
    dend_43 { pt3dadd( 391.63, 329.3, 119.667, 0.3976 ) }
    dend_43 { pt3dadd( 391.329, 328.302, 120.295, 0.3734 ) }
    dend_43 { pt3dadd( 390.789, 327.369, 120.952, 0.3988 ) }
    dend_43 { pt3dadd( 389.839, 326.766, 121.497, 0.3338 ) }
    dend_43 { pt3dadd( 388.841, 326.207, 121.931, 0.3 ) }
    dend_43 { pt3dadd( 387.844, 325.647, 122.269, 0.2746 ) }
    dend_43 { pt3dadd( 386.953, 324.953, 122.602, 0.2746 ) }
    dend_43 { pt3dadd( 386.114, 324.211, 122.971, 0.2746 ) }
    dend_43 { pt3dadd( 385.28, 323.466, 123.387, 0.2746 ) }
    dend_43 { pt3dadd( 384.445, 322.72, 123.85, 0.2746 ) }
    dend_43 { pt3dadd( 383.611, 321.974, 124.342, 0.2746 ) }
    dend_43 { pt3dadd( 382.654, 321.372, 124.824, 0.2746 ) }
    dend_43 { pt3dadd( 381.546, 321.114, 125.235, 0.2746 ) }
    dend_43 { pt3dadd( 380.426, 320.881, 125.596, 0.2746 ) }
    dend_43 { pt3dadd( 379.723, 320.043, 126.025, 0.2746 ) }
    dend_43 { pt3dadd( 379.079, 319.142, 126.526, 0.2746 ) }
    dend_43 { pt3dadd( 378.439, 318.238, 127.09, 0.2746 ) }
    dend_43 { pt3dadd( 377.796, 317.335, 127.709, 0.2746 ) }
    dend_43 { pt3dadd( 377.28, 316.352, 128.363, 0.2746 ) }
    dend_43 { pt3dadd( 376.951, 315.284, 129.026, 0.2746 ) }
    dend_43 { pt3dadd( 376.633, 314.212, 129.686, 0.2746 ) }
    dend_43 { pt3dadd( 376.315, 313.14, 130.349, 0.2746 ) }
    dend_43 { pt3dadd( 375.997, 312.068, 131.017, 0.2746 ) }
    dend_43 { pt3dadd( 375.675, 311.004, 131.7, 0.2746 ) }
    dend_43 { pt3dadd( 375.319, 310.03, 132.465, 0.2746 ) }
    dend_43 { pt3dadd( 374.963, 309.06, 133.288, 0.2746 ) }
    dend_43 { pt3dadd( 374.606, 308.09, 134.142, 0.2748 ) }
    dend_43 { pt3dadd( 373.689, 307.431, 134.851, 0.2748 ) }
    dend_43 { pt3dadd( 372.725, 306.813, 135.43, 0.2752 ) }
    dend_43 { pt3dadd( 371.762, 306.196, 135.919, 0.2758 ) }
    dend_43 { pt3dadd( 371.03, 305.416, 136.488, 0.2766 ) }
    dend_43 { pt3dadd( 370.308, 304.63, 137.134, 0.2782 ) }
    dend_43 { pt3dadd( 369.585, 303.843, 137.849, 0.2814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_43 { pt3dadd( 368.861, 303.057, 138.625, 0.287 ) }
    dend_43 { pt3dadd( 368.138, 302.271, 139.428, 0.2988 ) }
    dend_43 { pt3dadd( 367.141, 301.721, 140.096, 0.3142 ) }
    dend_43 { pt3dadd( 366.127, 301.19, 140.637, 0.3734 ) }
    dend_43 { pt3dadd( 365.052, 300.867, 141.171, 0.3338 ) }
    dend_43 { pt3dadd( 363.978, 300.712, 141.765, 0.3 ) }
    dend_43 { pt3dadd( 362.904, 300.556, 142.413, 0.2746 ) }
    dend_43 { pt3dadd( 361.831, 300.402, 143.105, 0.2746 ) }
    dend_43 { pt3dadd( 360.757, 300.247, 143.835, 0.2746 ) }
    dend_43 { pt3dadd( 359.655, 300.079, 144.534, 0.2746 ) }
    dend_43 { pt3dadd( 358.542, 299.904, 145.163, 0.2746 ) }
    dend_43 { pt3dadd( 357.429, 299.729, 145.728, 0.2744 ) }
    dend_43 { pt3dadd( 356.315, 299.555, 146.245, 0.2744 ) }
    dend_43 { pt3dadd( 355.202, 299.38, 146.728, 0.2742 ) }
    dend_43 { pt3dadd( 354.094, 299.166, 147.186, 0.2736 ) }
    dend_43 { pt3dadd( 353.001, 298.877, 147.625, 0.2728 ) }
    dend_43 { pt3dadd( 351.908, 298.587, 148.059, 0.2712 ) }
    dend_43 { pt3dadd( 350.816, 298.298, 148.48, 0.2684 ) }
    dend_43 { pt3dadd( 349.723, 298.01, 148.88, 0.2626 ) }
    dend_43 { pt3dadd( 348.629, 297.72, 149.254, 0.2542 ) }
    dend_43 { pt3dadd( 347.537, 297.431, 149.598, 0.2288 ) }
    dend_43 { pt3dadd( 346.444, 297.141, 150.267, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 22/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 441.657, 359.576, 83.2398, 0.6406 ) }
    dend_40 { pt3dadd( 441.269, 360.547, 84.3595, 0.6406 ) }
    dend_40 { pt3dadd( 440.882, 361.515, 84.8798, 0.6406 ) }
    dend_40 { pt3dadd( 440.799, 362.616, 85.3723, 0.6406 ) }
    dend_40 { pt3dadd( 441.452, 363.477, 85.7931, 0.6406 ) }
    dend_40 { pt3dadd( 442.003, 364.462, 86.1524, 0.6406 ) }
    dend_40 { pt3dadd( 441.157, 364.93, 86.4604, 0.6406 ) }
    dend_40 { pt3dadd( 440.097, 365.35, 86.7353, 0.6406 ) }
    dend_40 { pt3dadd( 439.181, 365.644, 87.2116, 0.6406 ) }
    dend_40 { pt3dadd( 438.265, 365.947, 87.841, 0.6406 ) }
    dend_40 { pt3dadd( 437.411, 366.695, 88.3649, 0.6406 ) }
    dend_40 { pt3dadd( 437.207, 367.82, 88.7796, 0.6406 ) }
    dend_40 { pt3dadd( 437.182, 368.964, 89.0974, 0.6406 ) }
    dend_40 { pt3dadd( 437.182, 370.108, 89.332, 0.6406 ) }
    dend_40 { pt3dadd( 437.188, 371.25, 89.5031, 0.6406 ) }
    dend_40 { pt3dadd( 437.365, 372.324, 89.7683, 0.6406 ) }
    dend_40 { pt3dadd( 438.071, 373.166, 90.0738, 0.6406 ) }
    dend_40 { pt3dadd( 438.974, 373.665, 90.3602, 0.6406 ) }
    dend_40 { pt3dadd( 439.239, 374.764, 90.6643, 0.6406 ) }
    dend_40 { pt3dadd( 439.496, 375.865, 90.9644, 0.6406 ) }
    dend_40 { pt3dadd( 439.711, 376.981, 91.2232, 0.6406 ) }
    dend_40 { pt3dadd( 439.852, 378.117, 91.3996, 0.6406 ) }
    dend_40 { pt3dadd( 439.797, 379.203, 91.523, 0.6406 ) }
    dend_40 { pt3dadd( 439.127, 380.129, 91.6121, 0.6406 ) }
    dend_40 { pt3dadd( 438.387, 380.982, 91.6773, 0.6406 ) }
    dend_40 { pt3dadd( 437.405, 381.565, 91.7378, 0.6406 ) }
    dend_40 { pt3dadd( 436.362, 382.034, 91.8134, 0.6406 ) }
    dend_40 { pt3dadd( 435.297, 382.451, 91.9212, 0.6406 ) }
    dend_40 { pt3dadd( 434.254, 382.921, 92.0693, 0.6406 ) }
    dend_40 { pt3dadd( 433.215, 383.393, 92.2645, 0.6406 ) }
    dend_40 { pt3dadd( 432.207, 383.86, 92.54, 0.6406 ) }
    dend_40 { pt3dadd( 431.651, 384.741, 92.9972, 0.6406 ) }
    dend_40 { pt3dadd( 431.489, 385.788, 93.6146, 0.6406 ) }
    dend_40 { pt3dadd( 431.591, 386.888, 94.2645, 0.6406 ) }
    dend_40 { pt3dadd( 432.084, 387.85, 94.9318, 0.6406 ) }
    dend_40 { pt3dadd( 432.819, 388.507, 95.7407, 0.6406 ) }
    dend_40 { pt3dadd( 432.875, 389.398, 96.6325, 0.6406 ) }
    dend_40 { pt3dadd( 432.369, 390.364, 97.4543, 0.6406 ) }
    dend_40 { pt3dadd( 431.648, 391.247, 98.1442, 0.6406 ) }
    dend_40 { pt3dadd( 430.825, 391.746, 98.9106, 0.6406 ) }
    dend_40 { pt3dadd( 430.042, 392.407, 99.7083, 0.6406 ) }
    dend_40 { pt3dadd( 430.284, 393.453, 100.35, 0.6406 ) }
    dend_40 { pt3dadd( 431.218, 394.063, 100.91, 0.6406 ) }
    dend_40 { pt3dadd( 431.72, 395.023, 101.52, 0.6406 ) }
    dend_40 { pt3dadd( 432.217, 395.991, 102.155, 0.6406 ) }
    dend_40 { pt3dadd( 432.659, 397.021, 102.741, 0.6406 ) }
    dend_40 { pt3dadd( 433.087, 398.04, 103.261, 0.6406 ) }
    dend_40 { pt3dadd( 433.781, 398.769, 103.874, 0.6406 ) }
    dend_40 { pt3dadd( 433.944, 399.853, 104.418, 0.6406 ) }
    dend_40 { pt3dadd( 433.71, 400.967, 104.849, 0.6406 ) }
    dend_40 { pt3dadd( 433.662, 402.093, 105.245, 0.6406 ) }
    dend_40 { pt3dadd( 433.717, 403.214, 105.632, 0.6406 ) }
    dend_40 { pt3dadd( 433.638, 404.347, 105.968, 0.6406 ) }
    dend_40 { pt3dadd( 433.449, 405.474, 106.238, 0.6406 ) }
    dend_40 { pt3dadd( 433.248, 406.585, 106.521, 0.6406 ) }
    dend_40 { pt3dadd( 432.972, 407.667, 106.826, 0.6406 ) }
    dend_40 { pt3dadd( 432.481, 408.691, 107.091, 0.6406 ) }
    dend_40 { pt3dadd( 431.992, 409.706, 107.297, 0.6406 ) }
    dend_40 { pt3dadd( 431.846, 410.836, 107.469, 0.6406 ) }
    dend_40 { pt3dadd( 431.755, 411.968, 107.626, 0.6406 ) }
    dend_40 { pt3dadd( 431.491, 413.081, 107.784, 0.6406 ) }
    dend_40 { pt3dadd( 431.127, 414.159, 107.962, 0.6406 ) }
    dend_40 { pt3dadd( 430.61, 415.176, 108.197, 0.6406 ) }
    dend_40 { pt3dadd( 430.073, 416.113, 108.583, 0.6406 ) }
    dend_40 { pt3dadd( 429.486, 416.965, 109.151, 0.6406 ) }
    dend_40 { pt3dadd( 428.784, 417.827, 109.759, 0.6406 ) }
    dend_40 { pt3dadd( 428.159, 418.766, 110.332, 0.6406 ) }
    dend_40 { pt3dadd( 427.496, 419.643, 110.886, 0.6406 ) }
    dend_40 { pt3dadd( 426.765, 419.687, 111.565, 0.6406 ) }
    dend_40 { pt3dadd( 426.753, 418.784, 112.417, 0.6406 ) }
    dend_40 { pt3dadd( 427.218, 417.84, 113.364, 0.6406 ) }
    dend_40 { pt3dadd( 427.764, 417.072, 114.473, 0.6406 ) }
    dend_40 { pt3dadd( 428.819, 416.707, 115.485, 0.6406 ) }
    dend_40 { pt3dadd( 429.639, 417.099, 116.539, 0.6406 ) }
    dend_40 { pt3dadd( 430.023, 416.684, 117.798, 0.6406 ) }
    dend_40 { pt3dadd( 430.526, 416.274, 119.144, 0.6406 ) }
    dend_40 { pt3dadd( 431.565, 416.09, 120.32, 0.6406 ) }
    dend_40 { pt3dadd( 432.55, 416.572, 121.252, 0.6406 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_40 { pt3dadd( 433.423, 417.205, 122.089, 0.6406 ) }
    dend_40 { pt3dadd( 434.342, 417.633, 122.931, 0.6406 ) }
    dend_40 { pt3dadd( 435.208, 418.21, 123.723, 0.6406 ) }
    dend_40 { pt3dadd( 435.855, 419.109, 124.423, 0.6406 ) }
    dend_40 { pt3dadd( 436.096, 420.089, 125.154, 0.6406 ) }
    dend_40 { pt3dadd( 436.172, 421.14, 125.886, 0.6406 ) }
    dend_40 { pt3dadd( 436.26, 422.268, 126.477, 0.6406 ) }
    dend_40 { pt3dadd( 436.465, 423.39, 126.916, 0.6406 ) }
    dend_40 { pt3dadd( 436.759, 424.495, 127.262, 0.6406 ) }
    dend_40 { pt3dadd( 437.008, 425.593, 127.602, 0.6406 ) }
    dend_40 { pt3dadd( 437.225, 426.69, 127.966, 0.6406 ) }
    dend_40 { pt3dadd( 437.443, 427.787, 128.363, 0.6406 ) }
    dend_40 { pt3dadd( 438.01, 428.729, 128.744, 0.6406 ) }
    dend_40 { pt3dadd( 438.686, 429.649, 129.078, 0.6406 ) }
    dend_40 { pt3dadd( 438.829, 430.694, 129.444, 0.6406 ) }
    dend_40 { pt3dadd( 438.433, 431.651, 129.907, 0.6406 ) }
    dend_40 { pt3dadd( 437.732, 432.516, 130.316, 0.6406 ) }
    dend_40 { pt3dadd( 436.966, 433.366, 130.647, 0.6406 ) }
    dend_40 { pt3dadd( 436.445, 434.371, 130.923, 0.6406 ) }
    dend_40 { pt3dadd( 436.099, 435.456, 131.189, 0.6406 ) }
    dend_40 { pt3dadd( 435.851, 436.552, 131.482, 0.6406 ) }
    dend_40 { pt3dadd( 435.624, 437.65, 131.805, 0.6406 ) }
    dend_40 { pt3dadd( 435.411, 438.754, 132.163, 0.6406 ) }
    dend_40 { pt3dadd( 435.367, 439.89, 132.486, 0.6406 ) }
    dend_40 { pt3dadd( 435.347, 441.034, 132.765, 0.6406 ) }
    dend_40 { pt3dadd( 435.247, 442.172, 133.009, 0.6406 ) }
    dend_40 { pt3dadd( 435.148, 443.299, 133.283, 0.6406 ) }
    dend_40 { pt3dadd( 435.063, 444.409, 133.623, 0.6406 ) }
    dend_40 { pt3dadd( 434.983, 445.513, 134.018, 0.6406 ) }
    dend_40 { pt3dadd( 434.902, 446.618, 134.445, 0.6406 ) }
    dend_40 { pt3dadd( 434.761, 447.724, 134.863, 0.6406 ) }
    dend_40 { pt3dadd( 434.258, 448.731, 135.176, 0.6406 ) }
    dend_40 { pt3dadd( 433.69, 449.724, 135.374, 0.6406 ) }
    dend_40 { pt3dadd( 433.385, 450.794, 135.418, 0.6406 ) }
    dend_40 { pt3dadd( 433.129, 451.881, 135.355, 0.6406 ) }
    dend_40 { pt3dadd( 432.506, 452.818, 135.315, 0.6406 ) }
    dend_40 { pt3dadd( 431.806, 453.722, 135.34, 0.6406 ) }
    dend_40 { pt3dadd( 431.431, 454.745, 135.54, 0.6406 ) }
    dend_40 { pt3dadd( 431.249, 455.79, 135.924, 0.6406 ) }
    dend_40 { pt3dadd( 431.089, 456.835, 136.438, 0.6406 ) }
    dend_40 { pt3dadd( 430.406, 457.706, 136.913, 0.6406 ) }
    dend_40 { pt3dadd( 429.544, 458.457, 137.275, 0.6406 ) }
    dend_40 { pt3dadd( 428.552, 459.021, 137.529, 0.6406 ) }
    dend_40 { pt3dadd( 427.498, 459.464, 137.689, 0.6406 ) }
    dend_40 { pt3dadd( 426.472, 459.968, 137.787, 0.6406 ) }
    dend_40 { pt3dadd( 425.632, 460.74, 137.859, 0.6406 ) }
    dend_40 { pt3dadd( 425.049, 461.722, 137.94, 0.6406 ) }
    dend_40 { pt3dadd( 424.531, 462.738, 138.073, 0.6406 ) }
    dend_40 { pt3dadd( 424.043, 463.763, 138.263, 0.6406 ) }
    dend_40 { pt3dadd( 423.557, 464.789, 138.494, 0.6406 ) }
    dend_40 { pt3dadd( 423.069, 465.814, 138.748, 0.6406 ) }
    dend_40 { pt3dadd( 422.582, 466.84, 139.012, 0.6406 ) }
    dend_40 { pt3dadd( 422.055, 467.848, 139.264, 0.6406 ) }
    dend_40 { pt3dadd( 421.359, 468.755, 139.459, 0.6406 ) }
    dend_40 { pt3dadd( 420.657, 469.658, 139.61, 0.6406 ) }
    dend_40 { pt3dadd( 419.846, 470.464, 139.738, 0.6406 ) }
    dend_40 { pt3dadd( 418.876, 471.069, 139.862, 0.6406 ) }
    dend_40 { pt3dadd( 417.902, 471.671, 139.999, 0.6406 ) }
    dend_40 { pt3dadd( 416.931, 472.274, 140.168, 0.6406 ) }
    dend_40 { pt3dadd( 416.009, 472.877, 140.471, 0.6406 ) }
    dend_40 { pt3dadd( 415.088, 473.479, 140.873, 0.6406 ) }
    dend_40 { pt3dadd( 414.166, 474.081, 141.335, 0.6406 ) }
    dend_40 { pt3dadd( 413.097, 474.479, 141.745, 0.6406 ) }
    dend_40 { pt3dadd( 412.002, 474.811, 142.086, 0.6406 ) }
    dend_40 { pt3dadd( 410.861, 474.875, 142.377, 0.6406 ) }
    dend_40 { pt3dadd( 409.717, 474.874, 142.638, 0.6406 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 66/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 447.671, 350.138, 73.9679, 0.6406 ) }
    dend_33 { pt3dadd( 448.405, 349.302, 73.621, 0.6406 ) }
    dend_33 { pt3dadd( 449.235, 348.517, 73.4944, 0.6406 ) }
    dend_33 { pt3dadd( 450.076, 347.742, 73.3992, 0.6406 ) }
    dend_33 { pt3dadd( 450.916, 346.965, 73.334, 0.6406 ) }
    dend_33 { pt3dadd( 451.734, 346.164, 73.2978, 0.6406 ) }
    dend_33 { pt3dadd( 452.542, 345.355, 73.2886, 0.6406 ) }
    dend_33 { pt3dadd( 453.351, 344.547, 73.3054, 0.6406 ) }
    dend_33 { pt3dadd( 453.922, 343.556, 73.3309, 0.6406 ) }
    dend_33 { pt3dadd( 454.399, 342.516, 73.3676, 0.6406 ) }
    dend_33 { pt3dadd( 454.877, 341.476, 73.4219, 0.6406 ) }
    dend_33 { pt3dadd( 455.336, 340.428, 73.4958, 0.6406 ) }
    dend_33 { pt3dadd( 455.669, 339.334, 73.5879, 0.6406 ) }
    dend_33 { pt3dadd( 456.002, 338.24, 73.6929, 0.6406 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 439.429, 359.328, 76.036, 0.2288 ) }
    dend_30 { pt3dadd( 438.659, 360.164, 75.5824, 0.2858 ) }
    dend_30 { pt3dadd( 437.889, 361.002, 75.3852, 0.2952 ) }
    dend_30 { pt3dadd( 437.142, 361.86, 75.15, 0.3134 ) }
    dend_30 { pt3dadd( 436.909, 362.978, 74.9305, 0.3426 ) }
    dend_30 { pt3dadd( 436.664, 364.083, 74.6724, 0.4206 ) }
    dend_30 { pt3dadd( 436.412, 365.175, 74.3697, 0.447 ) }
    dend_30 { pt3dadd( 436.16, 366.268, 74.0457, 0.3856 ) }
    dend_30 { pt3dadd( 435.968, 367.384, 73.743, 0.3494 ) }
    dend_30 { pt3dadd( 435.9, 368.526, 73.5263, 0.3632 ) }
    dend_30 { pt3dadd( 435.887, 369.67, 73.3919, 0.4538 ) }
    dend_30 { pt3dadd( 435.89, 370.814, 73.337, 0.5338 ) }
    dend_30 { pt3dadd( 435.967, 371.848, 73.1954, 0.4228 ) }
    dend_30 { pt3dadd( 435.969, 372.992, 73.1758, 0.3332 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 94/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 446.197, 357.662, 65.9711, 0.2288 ) }
    dend_29 { pt3dadd( 447.2, 357.955, 65.5418, 0.2826 ) }
    dend_29 { pt3dadd( 448.336, 357.961, 65.3923, 0.289 ) }
    dend_29 { pt3dadd( 449.448, 357.873, 65.34, 0.3024 ) }
    dend_29 { pt3dadd( 450.552, 357.716, 65.3243, 0.321 ) }
    dend_29 { pt3dadd( 451.539, 357.211, 65.2336, 0.386 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( 452.397, 356.623, 64.9869, 0.3586 ) }
    dend_29 { pt3dadd( 453.304, 356.213, 64.542, 0.3402 ) }
    dend_29 { pt3dadd( 454.034, 355.347, 64.0116, 0.3748 ) }
    dend_29 { pt3dadd( 454.999, 355.074, 63.4435, 0.3364 ) }
    dend_29 { pt3dadd( 456.069, 355.278, 62.7561, 0.3046 ) }
    dend_29 { pt3dadd( 457.067, 355.437, 61.871, 0.2828 ) }
    dend_29 { pt3dadd( 457.917, 355.56, 60.7936, 0.291 ) }
    dend_29 { pt3dadd( 458.365, 355.858, 59.5255, 0.2994 ) }
    dend_29 { pt3dadd( 457.595, 356.595, 58.471, 0.3476 ) }
    dend_29 { pt3dadd( 456.606, 357.057, 57.5366, 0.2796 ) }
    dend_29 { pt3dadd( 455.73, 357.236, 55.5607, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 11/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 449.503, 352.923, 82.0655, 0.4576 ) }
    dend_18 { pt3dadd( 450.548, 352.583, 82.6879, 0.4576 ) }
    dend_18 { pt3dadd( 451.594, 352.163, 82.9548, 0.4576 ) }
    dend_18 { pt3dadd( 452.35, 351.349, 83.1972, 0.4576 ) }
    dend_18 { pt3dadd( 452.667, 350.262, 83.4086, 0.4576 ) }
    dend_18 { pt3dadd( 453.162, 349.238, 83.5968, 0.4576 ) }
    dend_18 { pt3dadd( 454.095, 348.608, 83.7654, 0.4576 ) }
    dend_18 { pt3dadd( 455.203, 348.428, 83.9824, 0.4576 ) }
    dend_18 { pt3dadd( 456.294, 348.259, 84.2794, 0.4576 ) }
    dend_18 { pt3dadd( 457.384, 348.088, 84.6283, 0.4576 ) }
    dend_18 { pt3dadd( 458.447, 347.742, 84.9688, 0.4576 ) }
    dend_18 { pt3dadd( 459.231, 346.91, 85.1889, 0.4576 ) }
    dend_18 { pt3dadd( 460.017, 346.078, 85.2953, 0.4576 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 24/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 438.954, 352.096, 84.5944, 0.6864 ) }
    dend_11 { pt3dadd( 437.962, 351.594, 85.267, 0.6864 ) }
    dend_11 { pt3dadd( 436.884, 351.231, 85.5294, 0.6864 ) }
    dend_11 { pt3dadd( 435.8, 351.043, 85.878, 0.6864 ) }
    dend_11 { pt3dadd( 434.663, 350.959, 86.2011, 0.6864 ) }
    dend_11 { pt3dadd( 433.522, 350.874, 86.4674, 0.6864 ) }
    dend_11 { pt3dadd( 432.435, 350.515, 86.686, 0.6864 ) }
    dend_11 { pt3dadd( 431.33, 350.221, 86.8647, 0.6864 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 437.401, 358.047, 77.8137, 0.938 ) }
    dend_0 { pt3dadd( 436.386, 358.573, 77.8652, 0.938 ) }
    dend_0 { pt3dadd( 435.3, 358.916, 77.9598, 0.938 ) }
    dend_0 { pt3dadd( 434.188, 359.102, 78.1085, 0.938 ) }
    dend_0 { pt3dadd( 433.076, 359.286, 78.2841, 0.938 ) }
    dend_0 { pt3dadd( 431.932, 359.307, 78.398, 0.938 ) }
    dend_0 { pt3dadd( 430.788, 359.307, 78.4336, 0.938 ) }
    dend_0 { pt3dadd( 429.653, 359.446, 78.3854, 0.938 ) }
    dend_0 { pt3dadd( 428.522, 359.615, 78.2505, 0.938 ) }
    dend_0 { pt3dadd( 427.378, 359.616, 78.0343, 0.938 ) }
    dend_0 { pt3dadd( 426.312, 359.477, 77.6166, 0.938 ) }
    dend_0 { pt3dadd( 425.258, 359.327, 77.0529, 0.938 ) }
    dend_0 { pt3dadd( 424.203, 359.177, 76.4, 0.938 ) }
    dend_0 { pt3dadd( 423.15, 359.028, 75.7086, 0.938 ) }
    dend_0 { pt3dadd( 422.095, 358.879, 75.0257, 0.938 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 47/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 455.226, 382.489, 77.6588, 1.0 ) }
    axon_1 { pt3dadd( 461.067, 396.305, 77.6588, 1.0 ) }
    axon_1 { pt3dadd( 466.908, 410.121, 77.6588, 1.0 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 50/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 409.717, 474.874, 142.638, 0.6406 ) }
    dend_42 { pt3dadd( 409.765, 474.543, 142.825, 0.2746 ) }
    dend_42 { pt3dadd( 408.811, 474.13, 143.235, 0.2746 ) }
    dend_42 { pt3dadd( 407.858, 473.718, 143.832, 0.2746 ) }
    dend_42 { pt3dadd( 406.904, 473.305, 144.563, 0.2746 ) }
    dend_42 { pt3dadd( 405.958, 472.829, 145.346, 0.2746 ) }
    dend_42 { pt3dadd( 405.03, 472.189, 146.067, 0.2746 ) }
    dend_42 { pt3dadd( 404.102, 471.549, 146.717, 0.2746 ) }
    dend_42 { pt3dadd( 403.174, 470.909, 147.279, 0.2746 ) }
    dend_42 { pt3dadd( 402.246, 470.269, 147.782, 0.2748 ) }
    dend_42 { pt3dadd( 401.187, 470.034, 148.205, 0.2748 ) }
    dend_42 { pt3dadd( 400.043, 470.056, 148.555, 0.275 ) }
    dend_42 { pt3dadd( 398.981, 469.941, 148.931, 0.2758 ) }
    dend_42 { pt3dadd( 398.143, 469.461, 149.502, 0.2764 ) }
    dend_42 { pt3dadd( 397.101, 469.237, 150.072, 0.2782 ) }
    dend_42 { pt3dadd( 395.961, 469.134, 150.578, 0.2812 ) }
    dend_42 { pt3dadd( 394.822, 469.031, 151.046, 0.2866 ) }
    dend_42 { pt3dadd( 393.766, 469.072, 151.573, 0.2982 ) }
    dend_42 { pt3dadd( 392.878, 469.406, 152.304, 0.3132 ) }
    dend_42 { pt3dadd( 391.982, 469.776, 153.162, 0.3716 ) }
    dend_42 { pt3dadd( 391.027, 470.405, 153.972, 0.3304 ) }
    dend_42 { pt3dadd( 390.072, 471.035, 154.734, 0.2938 ) }
    dend_42 { pt3dadd( 389.34, 471.683, 155.575, 0.2626 ) }
    dend_42 { pt3dadd( 388.819, 472.347, 156.574, 0.2542 ) }
    dend_42 { pt3dadd( 388.3, 473.012, 157.649, 0.2288 ) }
    dend_42 { pt3dadd( 387.779, 473.677, 160.221, 0.2288 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 76/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 409.717, 474.874, 142.638, 0.6406 ) }
    dend_41 { pt3dadd( 409.943, 474.771, 141.329, 0.5034 ) }
    dend_41 { pt3dadd( 408.966, 475.365, 141.425, 0.5034 ) }
    dend_41 { pt3dadd( 407.989, 475.96, 141.455, 0.5034 ) }
    dend_41 { pt3dadd( 406.939, 476.411, 141.525, 0.5034 ) }
    dend_41 { pt3dadd( 405.892, 476.864, 141.636, 0.5034 ) }
    dend_41 { pt3dadd( 405.06, 477.649, 141.771, 0.5034 ) }
    dend_41 { pt3dadd( 404.227, 478.432, 141.933, 0.5034 ) }
    dend_41 { pt3dadd( 403.657, 479.359, 142.223, 0.5034 ) }
    dend_41 { pt3dadd( 403.164, 480.326, 142.639, 0.5034 ) }
    dend_41 { pt3dadd( 402.571, 481.226, 143.112, 0.5034 ) }
    dend_41 { pt3dadd( 401.656, 481.912, 143.522, 0.5034 ) }
    dend_41 { pt3dadd( 400.741, 482.6, 143.881, 0.5034 ) }
    dend_41 { pt3dadd( 399.904, 483.33, 144.219, 0.5034 ) }
    dend_41 { pt3dadd( 399.539, 484.325, 144.665, 0.5034 ) }
    dend_41 { pt3dadd( 399.175, 485.319, 145.185, 0.5034 ) }
    dend_41 { pt3dadd( 398.811, 486.314, 145.755, 0.5034 ) }
    dend_41 { pt3dadd( 398.679, 487.437, 146.207, 0.5034 ) }
    dend_41 { pt3dadd( 398.579, 488.576, 146.527, 0.5034 ) }
    dend_41 { pt3dadd( 398.478, 489.716, 146.724, 0.5034 ) }
    dend_41 { pt3dadd( 398.822, 490.775, 146.823, 0.5034 ) }
    dend_41 { pt3dadd( 399.318, 491.806, 146.874, 0.5034 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 98/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 456.002, 338.24, 73.6929, 0.6406 ) }
    dend_39 { pt3dadd( 457.021, 338.282, 73.7643, 0.5492 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_39 { pt3dadd( 458.018, 338.123, 71.8578, 0.5492 ) }
    dend_39 { pt3dadd( 458.896, 337.742, 71.0108, 0.5492 ) }
    dend_39 { pt3dadd( 459.703, 337.363, 69.9118, 0.5492 ) }
    dend_39 { pt3dadd( 460.412, 336.962, 68.6316, 0.5492 ) }
    dend_39 { pt3dadd( 460.962, 336.394, 67.2386, 0.5492 ) }
    dend_39 { pt3dadd( 461.544, 335.834, 65.8344, 0.5492 ) }
    dend_39 { pt3dadd( 462.575, 335.381, 64.6974, 0.5492 ) }
    dend_39 { pt3dadd( 463.608, 334.932, 63.8084, 0.5492 ) }
    dend_39 { pt3dadd( 464.679, 334.538, 63.1784, 0.5492 ) }
    dend_39 { pt3dadd( 465.647, 334.008, 62.6847, 0.5492 ) }
    dend_39 { pt3dadd( 465.571, 332.994, 62.258, 0.5492 ) }
    dend_39 { pt3dadd( 464.917, 332.057, 61.9592, 0.5492 ) }
    dend_39 { pt3dadd( 464.242, 331.211, 61.628, 0.5492 ) }
    dend_39 { pt3dadd( 463.56, 330.293, 61.3668, 0.5492 ) }
    dend_39 { pt3dadd( 462.878, 329.377, 61.1598, 0.5492 ) }
    dend_39 { pt3dadd( 462.241, 328.43, 61.0162, 0.5492 ) }
    dend_39 { pt3dadd( 461.795, 327.425, 61.0274, 0.5492 ) }
    dend_39 { pt3dadd( 462.178, 326.879, 60.9661, 0.5492 ) }
    dend_39 { pt3dadd( 463.037, 327.622, 60.9087, 0.5492 ) }
    dend_39 { pt3dadd( 464.065, 328.104, 60.7821, 0.5492 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 456.002, 338.24, 73.6929, 0.6406 ) }
    dend_34 { pt3dadd( 455.99, 337.012, 73.9665, 0.5492 ) }
    dend_34 { pt3dadd( 455.981, 335.946, 74.3154, 0.5492 ) }
    dend_34 { pt3dadd( 455.953, 334.811, 74.5836, 0.5492 ) }
    dend_34 { pt3dadd( 455.915, 333.667, 74.7015, 0.5492 ) }
    dend_34 { pt3dadd( 455.877, 332.524, 74.6704, 0.5492 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 26/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 435.969, 372.992, 73.1758, 0.3332 ) }
    dend_32 { pt3dadd( 436.149, 373.518, 73.3648, 0.2892 ) }
    dend_32 { pt3dadd( 436.491, 374.494, 73.794, 0.3012 ) }
    dend_32 { pt3dadd( 437.03, 375.441, 74.3305, 0.326 ) }
    dend_32 { pt3dadd( 437.972, 376.075, 74.8692, 0.3592 ) }
    dend_32 { pt3dadd( 438.905, 376.654, 75.4967, 0.4828 ) }
    dend_32 { pt3dadd( 439.75, 377.326, 76.1799, 0.4126 ) }
    dend_32 { pt3dadd( 440.475, 378.102, 76.8592, 0.362 ) }
    dend_32 { pt3dadd( 440.795, 379.197, 77.4388, 0.3382 ) }
    dend_32 { pt3dadd( 440.972, 380.307, 77.9996, 0.413 ) }
    dend_32 { pt3dadd( 441.149, 381.308, 78.6906, 0.4326 ) }
    dend_32 { pt3dadd( 441.112, 382.228, 79.494, 0.3592 ) }
    dend_32 { pt3dadd( 440.554, 383.028, 80.3485, 0.3 ) }
    dend_32 { pt3dadd( 439.715, 383.672, 81.128, 0.2746 ) }
    dend_32 { pt3dadd( 439.43, 384.562, 81.7328, 0.2746 ) }
    dend_32 { pt3dadd( 439.894, 385.595, 82.1811, 0.2746 ) }
    dend_32 { pt3dadd( 440.495, 386.558, 82.5364, 0.2746 ) }
    dend_32 { pt3dadd( 441.102, 387.504, 82.8652, 0.2746 ) }
    dend_32 { pt3dadd( 441.709, 388.449, 83.1956, 0.2746 ) }
    dend_32 { pt3dadd( 442.331, 389.391, 83.5288, 0.2746 ) }
    dend_32 { pt3dadd( 442.989, 390.323, 83.8292, 0.2746 ) }
    dend_32 { pt3dadd( 443.687, 391.229, 84.0804, 0.2746 ) }
    dend_32 { pt3dadd( 444.406, 392.119, 84.2901, 0.2746 ) }
    dend_32 { pt3dadd( 444.973, 393.092, 84.5102, 0.2746 ) }
    dend_32 { pt3dadd( 445.372, 394.141, 84.7823, 0.2746 ) }
    dend_32 { pt3dadd( 445.734, 395.201, 85.1054, 0.2746 ) }
    dend_32 { pt3dadd( 446.03, 396.29, 85.4454, 0.2746 ) }
    dend_32 { pt3dadd( 446.264, 397.406, 85.7517, 0.2746 ) }
    dend_32 { pt3dadd( 446.547, 398.513, 86.0118, 0.2746 ) }
    dend_32 { pt3dadd( 446.862, 399.614, 86.2341, 0.2746 ) }
    dend_32 { pt3dadd( 447.177, 400.714, 86.4329, 0.2746 ) }
    dend_32 { pt3dadd( 447.543, 401.651, 86.7745, 0.2746 ) }
    dend_32 { pt3dadd( 447.231, 402.672, 87.1643, 0.2746 ) }
    dend_32 { pt3dadd( 446.607, 403.62, 87.5437, 0.2746 ) }
    dend_32 { pt3dadd( 445.771, 404.396, 87.8861, 0.2746 ) }
    dend_32 { pt3dadd( 444.8, 404.998, 88.2081, 0.2746 ) }
    dend_32 { pt3dadd( 443.799, 405.551, 88.5326, 0.2746 ) }
    dend_32 { pt3dadd( 442.857, 406.199, 88.8812, 0.2746 ) }
    dend_32 { pt3dadd( 442.21, 407.134, 89.2976, 0.2746 ) }
    dend_32 { pt3dadd( 442.278, 408.095, 90.0007, 0.2746 ) }
    dend_32 { pt3dadd( 442.493, 409.001, 90.9706, 0.2746 ) }
    dend_32 { pt3dadd( 442.712, 409.904, 92.1357, 0.2746 ) }
    dend_32 { pt3dadd( 442.878, 410.864, 93.4013, 0.2746 ) }
    dend_32 { pt3dadd( 442.952, 411.902, 94.6691, 0.2748 ) }
    dend_32 { pt3dadd( 443.024, 412.94, 95.902, 0.2748 ) }
    dend_32 { pt3dadd( 443.096, 413.979, 97.0687, 0.2752 ) }
    dend_32 { pt3dadd( 443.174, 415.019, 98.1761, 0.2758 ) }
    dend_32 { pt3dadd( 443.466, 416.061, 99.2034, 0.2766 ) }
    dend_32 { pt3dadd( 443.762, 417.102, 100.173, 0.2782 ) }
    dend_32 { pt3dadd( 444.06, 418.145, 101.104, 0.2814 ) }
    dend_32 { pt3dadd( 444.356, 419.187, 102.003, 0.287 ) }
    dend_32 { pt3dadd( 444.653, 420.228, 102.877, 0.2988 ) }
    dend_32 { pt3dadd( 444.951, 421.27, 103.731, 0.3142 ) }
    dend_32 { pt3dadd( 445.288, 422.296, 104.567, 0.3734 ) }
    dend_32 { pt3dadd( 445.643, 423.315, 105.377, 0.3338 ) }
    dend_32 { pt3dadd( 446.0, 424.334, 106.148, 0.2998 ) }
    dend_32 { pt3dadd( 446.356, 425.352, 106.868, 0.2742 ) }
    dend_32 { pt3dadd( 446.713, 426.37, 107.529, 0.2736 ) }
    dend_32 { pt3dadd( 447.143, 427.428, 107.997, 0.2728 ) }
    dend_32 { pt3dadd( 447.577, 428.486, 108.301, 0.2712 ) }
    dend_32 { pt3dadd( 448.232, 429.424, 108.478, 0.2684 ) }
    dend_32 { pt3dadd( 449.085, 430.185, 108.565, 0.2626 ) }
    dend_32 { pt3dadd( 449.94, 430.946, 108.594, 0.2542 ) }
    dend_32 { pt3dadd( 450.794, 431.707, 108.596, 0.2288 ) }
    dend_32 { pt3dadd( 451.649, 432.467, 108.596, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 91/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 435.969, 372.992, 73.1758, 0.3332 ) }
    dend_31 { pt3dadd( 436.047, 373.109, 71.9765, 0.2288 ) }
    dend_31 { pt3dadd( 436.785, 373.914, 72.0017, 0.2758 ) }
    dend_31 { pt3dadd( 437.742, 374.398, 72.0978, 0.2768 ) }
    dend_31 { pt3dadd( 438.812, 374.526, 72.0555, 0.2786 ) }
    dend_31 { pt3dadd( 439.901, 374.492, 71.7979, 0.2822 ) }
    dend_31 { pt3dadd( 441.003, 374.342, 71.3964, 0.2886 ) }
    dend_31 { pt3dadd( 442.108, 374.127, 70.8946, 0.3014 ) }
    dend_31 { pt3dadd( 443.214, 373.913, 70.3077, 0.319 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_31 { pt3dadd( 444.295, 373.621, 69.6517, 0.3824 ) }
    dend_31 { pt3dadd( 445.265, 373.116, 68.9382, 0.3506 ) }
    dend_31 { pt3dadd( 446.178, 372.509, 68.1713, 0.3304 ) }
    dend_31 { pt3dadd( 446.97, 372.723, 67.3112, 0.3332 ) }
    dend_31 { pt3dadd( 447.664, 373.466, 66.3578, 0.3728 ) }
    dend_31 { pt3dadd( 448.384, 374.225, 65.3708, 0.5084 ) }
    dend_31 { pt3dadd( 449.162, 374.983, 64.414, 0.456 ) }
    dend_31 { pt3dadd( 449.958, 375.74, 63.5118, 0.462 ) }
    dend_31 { pt3dadd( 450.722, 376.522, 62.6354, 0.4294 ) }
    dend_31 { pt3dadd( 451.353, 377.393, 61.7851, 0.353 ) }
    dend_31 { pt3dadd( 451.819, 378.379, 60.9916, 0.288 ) }
    dend_31 { pt3dadd( 451.488, 379.352, 60.3394, 0.2542 ) }
    dend_31 { pt3dadd( 450.436, 379.235, 59.7167, 0.2288 ) }
    dend_31 { pt3dadd( 449.551, 379.061, 58.0863, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 14/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 460.017, 346.078, 85.2953, 0.4576 ) }
    dend_22 { pt3dadd( 460.594, 345.329, 85.237, 0.3976 ) }
    dend_22 { pt3dadd( 461.279, 344.437, 85.0469, 0.3734 ) }
    dend_22 { pt3dadd( 461.966, 343.546, 84.7776, 0.3988 ) }
    dend_22 { pt3dadd( 462.651, 342.653, 84.4774, 0.3338 ) }
    dend_22 { pt3dadd( 463.223, 341.664, 84.2565, 0.3 ) }
    dend_22 { pt3dadd( 463.794, 340.672, 84.1131, 0.2746 ) }
    dend_22 { pt3dadd( 464.363, 339.68, 84.042, 0.2746 ) }
    dend_22 { pt3dadd( 464.933, 338.688, 84.0286, 0.2746 ) }
    dend_22 { pt3dadd( 465.701, 337.845, 84.0582, 0.2748 ) }
    dend_22 { pt3dadd( 466.496, 337.022, 84.1201, 0.2748 ) }
    dend_22 { pt3dadd( 467.292, 336.201, 84.2072, 0.2752 ) }
    dend_22 { pt3dadd( 468.088, 335.38, 84.3301, 0.2758 ) }
    dend_22 { pt3dadd( 468.689, 334.408, 84.5012, 0.2766 ) }
    dend_22 { pt3dadd( 469.327, 333.483, 84.7356, 0.2782 ) }
    dend_22 { pt3dadd( 470.31, 332.904, 85.066, 0.2814 ) }
    dend_22 { pt3dadd( 471.253, 332.358, 85.5347, 0.287 ) }
    dend_22 { pt3dadd( 472.101, 331.894, 86.2369, 0.2988 ) }
    dend_22 { pt3dadd( 472.949, 331.431, 87.0946, 0.3142 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 33/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 460.017, 346.078, 85.2953, 0.4576 ) }
    dend_19 { pt3dadd( 460.757, 346.198, 87.6672, 0.4118 ) }
    dend_19 { pt3dadd( 461.647, 346.461, 89.0089, 0.4118 ) }
    dend_19 { pt3dadd( 462.599, 347.006, 89.539, 0.4118 ) }
    dend_19 { pt3dadd( 462.993, 347.984, 90.0374, 0.4118 ) }
    dend_19 { pt3dadd( 463.392, 349.024, 90.5654, 0.4118 ) }
    dend_19 { pt3dadd( 464.08, 349.811, 91.2069, 0.4118 ) }
    dend_19 { pt3dadd( 464.827, 350.525, 91.9363, 0.4118 ) }
    dend_19 { pt3dadd( 465.719, 351.088, 92.6702, 0.4118 ) }
    dend_19 { pt3dadd( 466.693, 351.556, 93.3853, 0.4118 ) }
    dend_19 { pt3dadd( 467.675, 352.009, 94.0498, 0.4118 ) }
    dend_19 { pt3dadd( 468.328, 352.781, 94.6649, 0.4118 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 45/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 431.33, 350.221, 86.8647, 0.6864 ) }
    dend_13 { pt3dadd( 430.813, 349.334, 87.0904, 0.572 ) }
    dend_13 { pt3dadd( 430.245, 348.361, 87.3645, 0.572 ) }
    dend_13 { pt3dadd( 429.562, 347.454, 87.6669, 0.572 ) }
    dend_13 { pt3dadd( 428.721, 346.684, 87.9542, 0.572 ) }
    dend_13 { pt3dadd( 427.812, 345.988, 88.2235, 0.572 ) }
    dend_13 { pt3dadd( 427.525, 344.956, 88.5758, 0.572 ) }
    dend_13 { pt3dadd( 427.355, 343.874, 88.996, 0.572 ) }
    dend_13 { pt3dadd( 427.188, 342.792, 89.4603, 0.572 ) }
    dend_13 { pt3dadd( 426.927, 341.685, 89.8626, 0.572 ) }
    dend_13 { pt3dadd( 426.635, 340.579, 90.1858, 0.572 ) }
    dend_13 { pt3dadd( 426.322, 339.479, 90.4394, 0.572 ) }
    dend_13 { pt3dadd( 426.04, 338.37, 90.636, 0.572 ) }
    dend_13 { pt3dadd( 425.822, 337.25, 90.8281, 0.572 ) }
    dend_13 { pt3dadd( 425.75, 336.14, 91.1033, 0.572 ) }
    dend_13 { pt3dadd( 425.756, 335.01, 91.4262, 0.572 ) }
    dend_13 { pt3dadd( 425.852, 333.872, 91.728, 0.572 ) }
    dend_13 { pt3dadd( 425.724, 332.764, 92.0842, 0.572 ) }
    dend_13 { pt3dadd( 425.576, 331.66, 92.4745, 0.572 ) }
    dend_13 { pt3dadd( 425.397, 330.558, 92.8682, 0.572 ) }
    dend_13 { pt3dadd( 424.838, 329.568, 93.1694, 0.572 ) }
    dend_13 { pt3dadd( 424.045, 328.748, 93.3974, 0.572 ) }
    dend_13 { pt3dadd( 423.129, 328.064, 93.5718, 0.572 ) }
    dend_13 { pt3dadd( 422.152, 327.469, 93.7006, 0.572 ) }
    dend_13 { pt3dadd( 421.141, 326.956, 93.8546, 0.572 ) }
    dend_13 { pt3dadd( 420.126, 326.452, 94.0397, 0.572 ) }
    dend_13 { pt3dadd( 419.112, 325.946, 94.2533, 0.572 ) }
    dend_13 { pt3dadd( 418.062, 325.497, 94.4398, 0.572 ) }
    dend_13 { pt3dadd( 417.001, 325.071, 94.5809, 0.572 ) }
    dend_13 { pt3dadd( 416.191, 324.271, 94.6803, 0.572 ) }
    dend_13 { pt3dadd( 415.443, 323.406, 94.7436, 0.572 ) }
    dend_13 { pt3dadd( 414.728, 322.513, 94.7859, 0.572 ) }
    dend_13 { pt3dadd( 414.149, 321.527, 94.8231, 0.572 ) }
    dend_13 { pt3dadd( 413.691, 320.479, 94.8696, 0.572 ) }
    dend_13 { pt3dadd( 412.83, 319.732, 94.9346, 0.572 ) }
    dend_13 { pt3dadd( 411.726, 319.443, 95.0272, 0.572 ) }
    dend_13 { pt3dadd( 410.616, 319.166, 95.1574, 0.572 ) }
    dend_13 { pt3dadd( 409.503, 318.901, 95.3336, 0.572 ) }
    dend_13 { pt3dadd( 408.43, 318.506, 95.5587, 0.572 ) }
    dend_13 { pt3dadd( 407.432, 318.034, 95.9364, 0.572 ) }
    dend_13 { pt3dadd( 406.495, 317.581, 96.4877, 0.572 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 86/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 431.33, 350.221, 86.8647, 0.6864 ) }
    dend_12 { pt3dadd( 431.092, 350.32, 86.4982, 0.572 ) }
    dend_12 { pt3dadd( 430.103, 350.888, 87.367, 0.572 ) }
    dend_12 { pt3dadd( 429.303, 351.69, 87.6971, 0.572 ) }
    dend_12 { pt3dadd( 428.868, 352.694, 88.2084, 0.572 ) }
    dend_12 { pt3dadd( 428.753, 353.799, 88.8902, 0.572 ) }
    dend_12 { pt3dadd( 429.357, 353.88, 89.8817, 0.572 ) }
    dend_12 { pt3dadd( 430.391, 353.624, 90.9955, 0.572 ) }
    dend_12 { pt3dadd( 430.757, 353.074, 92.3958, 0.572 ) }
    dend_12 { pt3dadd( 430.208, 352.239, 93.8826, 0.572 ) }
    dend_12 { pt3dadd( 429.707, 351.644, 95.5122, 0.572 ) }
    dend_12 { pt3dadd( 429.206, 351.049, 97.2171, 0.572 ) }
    dend_12 { pt3dadd( 428.704, 350.454, 98.9349, 0.572 ) }
    dend_12 { pt3dadd( 428.202, 349.859, 100.636, 0.572 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( 427.698, 349.212, 102.242, 0.572 ) }
    dend_12 { pt3dadd( 427.197, 348.194, 103.528, 0.572 ) }
    dend_12 { pt3dadd( 426.852, 347.17, 104.658, 0.572 ) }
    dend_12 { pt3dadd( 426.506, 346.145, 105.678, 0.572 ) }
    dend_12 { pt3dadd( 426.161, 345.12, 106.638, 0.572 ) }
    dend_12 { pt3dadd( 425.82, 344.089, 107.573, 0.572 ) }
    dend_12 { pt3dadd( 425.517, 343.017, 108.482, 0.572 ) }
    dend_12 { pt3dadd( 425.267, 341.976, 109.409, 0.572 ) }
    dend_12 { pt3dadd( 424.991, 341.191, 110.507, 0.572 ) }
    dend_12 { pt3dadd( 424.717, 340.406, 111.72, 0.572 ) }
    dend_12 { pt3dadd( 424.558, 339.562, 112.946, 0.572 ) }
    dend_12 { pt3dadd( 424.893, 338.47, 113.946, 0.572 ) }
    dend_12 { pt3dadd( 425.204, 337.385, 114.78, 0.572 ) }
    dend_12 { pt3dadd( 425.339, 336.309, 115.578, 0.572 ) }
    dend_12 { pt3dadd( 425.446, 335.242, 116.353, 0.572 ) }
    dend_12 { pt3dadd( 425.551, 334.177, 117.123, 0.572 ) }
    dend_12 { pt3dadd( 425.657, 333.111, 117.904, 0.572 ) }
    dend_12 { pt3dadd( 425.758, 332.043, 118.7, 0.572 ) }
    dend_12 { pt3dadd( 425.766, 330.951, 119.445, 0.572 ) }
    dend_12 { pt3dadd( 425.638, 329.824, 120.038, 0.572 ) }
    dend_12 { pt3dadd( 425.838, 328.703, 120.531, 0.572 ) }
    dend_12 { pt3dadd( 426.25, 327.648, 121.0, 0.572 ) }
    dend_12 { pt3dadd( 426.783, 326.676, 121.557, 0.572 ) }
    dend_12 { pt3dadd( 427.338, 325.73, 122.227, 0.572 ) }
    dend_12 { pt3dadd( 427.978, 324.901, 123.025, 0.572 ) }
    dend_12 { pt3dadd( 428.872, 324.472, 123.987, 0.572 ) }
    dend_12 { pt3dadd( 429.821, 324.235, 125.066, 0.572 ) }
    dend_12 { pt3dadd( 430.771, 323.998, 126.204, 0.572 ) }
    dend_12 { pt3dadd( 431.747, 323.754, 127.339, 0.572 ) }
    dend_12 { pt3dadd( 432.8, 323.479, 128.359, 0.572 ) }
    dend_12 { pt3dadd( 433.859, 323.067, 129.185, 0.572 ) }
    dend_12 { pt3dadd( 434.719, 322.394, 129.926, 0.572 ) }
    dend_12 { pt3dadd( 435.275, 321.553, 130.741, 0.572 ) }
    dend_12 { pt3dadd( 435.708, 320.692, 131.653, 0.572 ) }
    dend_12 { pt3dadd( 436.225, 319.834, 132.611, 0.572 ) }
    dend_12 { pt3dadd( 437.005, 319.08, 133.495, 0.572 ) }
    dend_12 { pt3dadd( 437.963, 318.603, 134.315, 0.572 ) }
    dend_12 { pt3dadd( 438.941, 318.292, 135.12, 0.572 ) }
    dend_12 { pt3dadd( 439.993, 318.09, 135.822, 0.572 ) }
    dend_12 { pt3dadd( 441.125, 318.081, 136.341, 0.572 ) }
    dend_12 { pt3dadd( 442.267, 318.144, 136.686, 0.572 ) }
    dend_12 { pt3dadd( 443.41, 318.206, 136.91, 0.572 ) }
    dend_12 { pt3dadd( 444.535, 318.379, 137.042, 0.572 ) }
    dend_12 { pt3dadd( 445.639, 318.678, 137.112, 0.572 ) }
    dend_12 { pt3dadd( 446.747, 318.684, 137.159, 0.572 ) }
    dend_12 { pt3dadd( 447.865, 318.437, 137.207, 0.572 ) }
    dend_12 { pt3dadd( 448.882, 318.006, 137.323, 0.572 ) }
    dend_12 { pt3dadd( 449.647, 317.215, 137.467, 0.572 ) }
    dend_12 { pt3dadd( 450.608, 316.809, 137.581, 0.572 ) }
    dend_12 { pt3dadd( 451.75, 316.774, 137.664, 0.572 ) }
    dend_12 { pt3dadd( 452.894, 316.774, 137.72, 0.572 ) }
    dend_12 { pt3dadd( 454.038, 316.774, 137.751, 0.572 ) }
    dend_12 { pt3dadd( 455.182, 316.774, 137.76, 0.572 ) }
    dend_12 { pt3dadd( 456.248, 317.109, 137.76, 0.572 ) }
    dend_12 { pt3dadd( 457.256, 317.649, 137.76, 0.572 ) }
    dend_12 { pt3dadd( 458.389, 317.708, 137.76, 0.572 ) }
    dend_12 { pt3dadd( 459.516, 317.896, 137.76, 0.572 ) }
    dend_12 { pt3dadd( 460.609, 318.234, 137.76, 0.572 ) }
    dend_12 { pt3dadd( 461.713, 318.534, 137.76, 0.572 ) }
    dend_12 { pt3dadd( 462.661, 319.167, 137.76, 0.572 ) }
    dend_12 { pt3dadd( 463.789, 319.348, 137.76, 0.572 ) }
    dend_12 { pt3dadd( 464.858, 319.756, 137.76, 0.572 ) }
    dend_12 { pt3dadd( 465.951, 320.091, 137.76, 0.572 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 63/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 422.095, 358.879, 75.0257, 0.938 ) }
    dend_10 { pt3dadd( 421.514, 359.485, 73.8707, 0.2288 ) }
    dend_10 { pt3dadd( 420.754, 360.338, 73.246, 0.2834 ) }
    dend_10 { pt3dadd( 419.885, 361.053, 73.0162, 0.2908 ) }
    dend_10 { pt3dadd( 419.777, 362.004, 72.5953, 0.3056 ) }
    dend_10 { pt3dadd( 420.354, 362.886, 72.0443, 0.327 ) }
    dend_10 { pt3dadd( 420.965, 363.852, 71.5145, 0.3984 ) }
    dend_10 { pt3dadd( 421.054, 364.838, 70.9464, 0.3748 ) }
    dend_10 { pt3dadd( 420.372, 365.341, 70.184, 0.4014 ) }
    dend_10 { pt3dadd( 419.428, 365.757, 69.4019, 0.3386 ) }
    dend_10 { pt3dadd( 418.488, 366.039, 68.5656, 0.3086 ) }
    dend_10 { pt3dadd( 417.461, 366.287, 67.7379, 0.2908 ) }
    dend_10 { pt3dadd( 416.569, 366.943, 67.013, 0.3046 ) }
    dend_10 { pt3dadd( 416.018, 367.855, 66.3096, 0.3308 ) }
    dend_10 { pt3dadd( 415.243, 368.675, 65.7597, 0.376 ) }
    dend_10 { pt3dadd( 415.385, 369.742, 65.3307, 0.4776 ) }
    dend_10 { pt3dadd( 415.941, 370.712, 64.9166, 0.5786 ) }
    dend_10 { pt3dadd( 415.948, 371.655, 64.3658, 0.5016 ) }
    dend_10 { pt3dadd( 415.075, 372.386, 63.9164, 0.5004 ) }
    dend_10 { pt3dadd( 414.074, 372.912, 63.5382, 0.4952 ) }
    dend_10 { pt3dadd( 413.32, 373.72, 63.1154, 0.5016 ) }
    dend_10 { pt3dadd( 412.648, 374.578, 62.662, 0.4354 ) }
    dend_10 { pt3dadd( 411.833, 375.37, 62.281, 0.4626 ) }
    dend_10 { pt3dadd( 410.964, 376.113, 62.0018, 0.4722 ) }
    dend_10 { pt3dadd( 410.096, 376.859, 61.7786, 0.4582 ) }
    dend_10 { pt3dadd( 409.14, 377.467, 61.5992, 0.3594 ) }
    dend_10 { pt3dadd( 408.055, 377.763, 61.4096, 0.3002 ) }
    dend_10 { pt3dadd( 406.955, 377.868, 61.1666, 0.275 ) }
    dend_10 { pt3dadd( 405.82, 377.988, 60.958, 0.2752 ) }
    dend_10 { pt3dadd( 404.799, 378.36, 60.7986, 0.276 ) }
    dend_10 { pt3dadd( 404.435, 379.357, 60.6852, 0.277 ) }
    dend_10 { pt3dadd( 404.462, 380.474, 60.6124, 0.2794 ) }
    dend_10 { pt3dadd( 403.953, 381.457, 60.5732, 0.2838 ) }
    dend_10 { pt3dadd( 403.049, 382.132, 60.5525, 0.2912 ) }
    dend_10 { pt3dadd( 401.981, 382.522, 60.529, 0.3064 ) }
    dend_10 { pt3dadd( 400.863, 382.765, 60.4968, 0.3284 ) }
    dend_10 { pt3dadd( 399.993, 383.334, 60.4503, 0.3998 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_10 { pt3dadd( 399.552, 384.383, 60.3831, 0.3832 ) }
    dend_10 { pt3dadd( 399.237, 385.482, 60.2916, 0.3886 ) }
    dend_10 { pt3dadd( 398.818, 386.539, 60.174, 0.4538 ) }
    dend_10 { pt3dadd( 398.174, 387.476, 60.03, 0.5338 ) }
    dend_10 { pt3dadd( 397.609, 388.161, 59.6963, 0.4228 ) }
    dend_10 { pt3dadd( 396.864, 388.822, 59.3026, 0.3332 ) }
    dend_10 { pt3dadd( 396.116, 389.678, 58.9593, 0.2888 ) }
    dend_10 { pt3dadd( 395.94, 390.763, 58.646, 0.3004 ) }
    dend_10 { pt3dadd( 395.938, 391.906, 58.3738, 0.3248 ) }
    dend_10 { pt3dadd( 395.938, 393.05, 58.1384, 0.3572 ) }
    dend_10 { pt3dadd( 395.938, 394.194, 57.93, 0.4788 ) }
    dend_10 { pt3dadd( 395.938, 395.336, 57.6898, 0.4054 ) }
    dend_10 { pt3dadd( 395.827, 396.28, 57.2396, 0.3492 ) }
    dend_10 { pt3dadd( 395.273, 397.18, 56.7249, 0.3132 ) }
    dend_10 { pt3dadd( 394.321, 397.674, 56.191, 0.3716 ) }
    dend_10 { pt3dadd( 393.267, 398.103, 55.7654, 0.3304 ) }
    dend_10 { pt3dadd( 392.328, 398.748, 55.4652, 0.2938 ) }
    dend_10 { pt3dadd( 392.279, 399.875, 55.2804, 0.2626 ) }
    dend_10 { pt3dadd( 392.233, 401.019, 55.1953, 0.2542 ) }
    dend_10 { pt3dadd( 392.165, 402.161, 55.1642, 0.2288 ) }
    dend_10 { pt3dadd( 391.591, 403.146, 55.16, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 21/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 422.095, 358.879, 75.0257, 0.938 ) }
    dend_1 { pt3dadd( 421.293, 358.592, 74.5385, 0.8694 ) }
    dend_1 { pt3dadd( 420.261, 358.099, 74.2328, 0.8694 ) }
    dend_1 { pt3dadd( 419.299, 357.482, 74.0698, 0.8694 ) }
    dend_1 { pt3dadd( 418.256, 357.013, 74.0124, 0.8694 ) }
    dend_1 { pt3dadd( 417.177, 356.633, 74.0292, 0.8694 ) }
    dend_1 { pt3dadd( 416.085, 356.29, 74.0942, 0.8694 ) }
    dend_1 { pt3dadd( 414.991, 355.956, 74.1852, 0.8694 ) }
    dend_1 { pt3dadd( 413.882, 355.677, 74.3036, 0.8694 ) }
    dend_1 { pt3dadd( 412.766, 355.428, 74.4489, 0.8694 ) }
    dend_1 { pt3dadd( 411.68, 355.402, 74.741, 0.8694 ) }
    dend_1 { pt3dadd( 410.595, 355.38, 75.1355, 0.8694 ) }
    dend_1 { pt3dadd( 409.495, 355.426, 75.5684, 0.8694 ) }
    dend_1 { pt3dadd( 408.417, 355.808, 75.8971, 0.8694 ) }
    dend_1 { pt3dadd( 407.279, 355.916, 76.1272, 0.8694 ) }
    dend_1 { pt3dadd( 406.136, 355.965, 76.2656, 0.8694 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 37/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 455.877, 332.524, 74.6704, 0.5492 ) }
    dend_36 { pt3dadd( 455.562, 332.025, 74.3952, 0.5364 ) }
    dend_36 { pt3dadd( 455.17, 331.074, 73.8475, 0.4824 ) }
    dend_36 { pt3dadd( 455.35, 330.049, 73.1601, 0.405 ) }
    dend_36 { pt3dadd( 455.93, 329.162, 72.4044, 0.3802 ) }
    dend_36 { pt3dadd( 456.282, 328.13, 71.6775, 0.4448 ) }
    dend_36 { pt3dadd( 455.881, 327.356, 70.8702, 0.4866 ) }
    dend_36 { pt3dadd( 454.901, 326.839, 70.2615, 0.4848 ) }
    dend_36 { pt3dadd( 453.869, 326.345, 69.8491, 0.408 ) }
    dend_36 { pt3dadd( 452.843, 325.839, 69.5842, 0.3934 ) }
    dend_36 { pt3dadd( 451.785, 325.405, 69.426, 0.4332 ) }
    dend_36 { pt3dadd( 450.687, 325.087, 69.3347, 0.6394 ) }
    dend_36 { pt3dadd( 449.622, 325.395, 69.281, 0.6056 ) }
    dend_36 { pt3dadd( 448.59, 324.903, 69.2166, 0.5078 ) }
    dend_36 { pt3dadd( 447.671, 324.227, 69.1326, 0.4956 ) }
    dend_36 { pt3dadd( 446.956, 323.348, 68.9791, 0.5654 ) }
    dend_36 { pt3dadd( 446.241, 322.468, 68.7764, 0.4756 ) }
    dend_36 { pt3dadd( 445.53, 321.586, 68.5443, 0.4578 ) }
    dend_36 { pt3dadd( 444.851, 320.665, 68.334, 0.3906 ) }
    dend_36 { pt3dadd( 444.187, 319.734, 68.1579, 0.4318 ) }
    dend_36 { pt3dadd( 443.505, 318.821, 68.01, 0.3896 ) }
    dend_36 { pt3dadd( 442.553, 318.188, 67.886, 0.4292 ) }
    dend_36 { pt3dadd( 441.547, 317.675, 67.7552, 0.3896 ) }
    dend_36 { pt3dadd( 440.774, 317.046, 67.4674, 0.4052 ) }
    dend_36 { pt3dadd( 440.021, 316.325, 67.2308, 0.461 ) }
    dend_36 { pt3dadd( 438.939, 316.136, 67.0376, 0.6624 ) }
    dend_36 { pt3dadd( 438.11, 315.361, 66.8802, 0.789 ) }
    dend_36 { pt3dadd( 437.488, 314.408, 66.7523, 0.8496 ) }
    dend_36 { pt3dadd( 437.114, 313.336, 66.6476, 0.8912 ) }
    dend_36 { pt3dadd( 436.873, 312.22, 66.5428, 0.8538 ) }
    dend_36 { pt3dadd( 436.638, 311.126, 66.3592, 0.6536 ) }
    dend_36 { pt3dadd( 436.557, 310.014, 66.1164, 0.4606 ) }
    dend_36 { pt3dadd( 436.428, 308.885, 65.9, 0.383 ) }
    dend_36 { pt3dadd( 435.965, 307.866, 65.6902, 0.4796 ) }
    dend_36 { pt3dadd( 435.196, 307.042, 65.4802, 0.4066 ) }
    dend_36 { pt3dadd( 434.617, 306.118, 65.308, 0.3512 ) }
    dend_36 { pt3dadd( 434.491, 304.991, 65.1753, 0.3168 ) }
    dend_36 { pt3dadd( 434.491, 303.857, 65.035, 0.3788 ) }
    dend_36 { pt3dadd( 434.641, 302.736, 64.9015, 0.3438 ) }
    dend_36 { pt3dadd( 435.133, 301.725, 64.8071, 0.3184 ) }
    dend_36 { pt3dadd( 435.982, 300.993, 64.7452, 0.3088 ) }
    dend_36 { pt3dadd( 436.318, 300.033, 64.706, 0.3378 ) }
    dend_36 { pt3dadd( 436.319, 298.889, 64.685, 0.3934 ) }
    dend_36 { pt3dadd( 436.183, 297.758, 64.6786, 0.4872 ) }
    dend_36 { pt3dadd( 435.956, 296.637, 64.678, 0.7064 ) }
    dend_36 { pt3dadd( 435.799, 295.505, 64.6772, 0.8914 ) }
    dend_36 { pt3dadd( 435.702, 294.365, 64.6758, 0.9376 ) }
    dend_36 { pt3dadd( 435.636, 293.223, 64.6744, 0.8618 ) }
    dend_36 { pt3dadd( 435.49, 292.091, 64.6722, 0.5912 ) }
    dend_36 { pt3dadd( 435.181, 290.991, 64.6688, 0.4916 ) }
    dend_36 { pt3dadd( 434.603, 290.018, 64.6646, 0.4136 ) }
    dend_36 { pt3dadd( 433.844, 289.164, 64.6582, 0.4396 ) }
    dend_36 { pt3dadd( 432.982, 288.415, 64.6495, 0.5736 ) }
    dend_36 { pt3dadd( 432.343, 287.487, 64.6377, 0.633 ) }
    dend_36 { pt3dadd( 432.206, 286.376, 64.6209, 0.518 ) }
    dend_36 { pt3dadd( 432.395, 285.254, 64.5963, 0.4826 ) }
    dend_36 { pt3dadd( 433.11, 284.404, 64.5624, 0.4678 ) }
    dend_36 { pt3dadd( 433.83, 283.517, 64.5187, 0.4236 ) }
    dend_36 { pt3dadd( 433.919, 282.403, 64.4661, 0.4232 ) }
    dend_36 { pt3dadd( 433.904, 281.271, 64.3552, 0.4818 ) }
    dend_36 { pt3dadd( 433.593, 280.19, 64.1931, 0.763 ) }
    dend_36 { pt3dadd( 433.126, 279.147, 64.0567, 0.6742 ) }
    dend_36 { pt3dadd( 432.58, 278.143, 63.9531, 0.726 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_36 { pt3dadd( 431.881, 277.239, 63.8795, 0.6868 ) }
    dend_36 { pt3dadd( 431.172, 276.341, 63.8322, 0.8126 ) }
    dend_36 { pt3dadd( 430.485, 275.427, 63.807, 0.7696 ) }
    dend_36 { pt3dadd( 429.957, 274.414, 63.7921, 0.6588 ) }
    dend_36 { pt3dadd( 429.915, 273.279, 63.7753, 0.6036 ) }
    dend_36 { pt3dadd( 429.928, 272.135, 63.7552, 0.4574 ) }
    dend_36 { pt3dadd( 430.108, 271.011, 63.6964, 0.4004 ) }
    dend_36 { pt3dadd( 430.143, 269.868, 63.6443, 0.3978 ) }
    dend_36 { pt3dadd( 430.144, 268.724, 63.6028, 0.5798 ) }
    dend_36 { pt3dadd( 430.215, 267.583, 63.5706, 0.4684 ) }
    dend_36 { pt3dadd( 430.565, 266.496, 63.5468, 0.3812 ) }
    dend_36 { pt3dadd( 430.692, 265.361, 63.5295, 0.3254 ) }
    dend_36 { pt3dadd( 430.715, 264.218, 63.5163, 0.3942 ) }
    dend_36 { pt3dadd( 430.716, 263.074, 63.4987, 0.3734 ) }
    dend_36 { pt3dadd( 430.716, 261.93, 63.474, 0.369 ) }
    dend_36 { pt3dadd( 430.296, 260.871, 63.4402, 0.4228 ) }
    dend_36 { pt3dadd( 429.349, 260.245, 63.394, 0.4512 ) }
    dend_36 { pt3dadd( 428.263, 259.888, 63.3262, 0.393 ) }
    dend_36 { pt3dadd( 427.132, 259.721, 63.226, 0.3648 ) }
    dend_36 { pt3dadd( 426.085, 259.262, 63.0949, 0.385 ) }
    dend_36 { pt3dadd( 425.185, 258.562, 62.9387, 0.525 ) }
    dend_36 { pt3dadd( 424.22, 257.947, 62.7214, 0.5176 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 22/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 455.877, 332.524, 74.6704, 0.5492 ) }
    dend_35 { pt3dadd( 455.033, 331.522, 75.7646, 0.4576 ) }
    dend_35 { pt3dadd( 454.43, 330.553, 76.0606, 0.3862 ) }
    dend_35 { pt3dadd( 454.12, 329.461, 76.1712, 0.3444 ) }
    dend_35 { pt3dadd( 454.366, 328.367, 76.323, 0.3826 ) }
    dend_35 { pt3dadd( 455.288, 327.805, 76.5878, 0.3508 ) }
    dend_35 { pt3dadd( 456.275, 327.304, 76.9446, 0.3322 ) }
    dend_35 { pt3dadd( 457.288, 326.801, 77.3226, 0.3288 ) }
    dend_35 { pt3dadd( 458.055, 325.966, 77.6566, 0.4018 ) }
    dend_35 { pt3dadd( 458.178, 324.831, 77.947, 0.3812 ) }
    dend_35 { pt3dadd( 459.057, 324.118, 78.2205, 0.413 ) }
    dend_35 { pt3dadd( 460.077, 323.724, 78.5705, 0.361 ) }
    dend_35 { pt3dadd( 461.097, 323.332, 78.9737, 0.3452 ) }
    dend_35 { pt3dadd( 462.118, 322.92, 79.3948, 0.384 ) }
    dend_35 { pt3dadd( 463.086, 322.347, 79.7146, 0.3532 ) }
    dend_35 { pt3dadd( 463.562, 321.318, 79.9394, 0.337 ) }
    dend_35 { pt3dadd( 463.712, 320.193, 80.0464, 0.3388 ) }
    dend_35 { pt3dadd( 463.672, 319.067, 80.0786, 0.4142 ) }
    dend_35 { pt3dadd( 463.203, 318.035, 80.12, 0.4348 ) }
    dend_35 { pt3dadd( 462.473, 317.167, 80.2259, 0.3632 ) }
    dend_35 { pt3dadd( 461.794, 316.284, 80.4667, 0.3072 ) }
    dend_35 { pt3dadd( 461.088, 315.388, 80.7559, 0.2876 ) }
    dend_35 { pt3dadd( 460.486, 314.416, 81.0975, 0.3 ) }
    dend_35 { pt3dadd( 459.962, 313.465, 81.5612, 0.3164 ) }
    dend_35 { pt3dadd( 459.615, 312.661, 82.2881, 0.3778 ) }
    dend_35 { pt3dadd( 459.436, 311.762, 83.1384, 0.342 ) }
    dend_35 { pt3dadd( 459.292, 310.644, 83.9401, 0.3152 ) }
    dend_35 { pt3dadd( 459.033, 309.576, 84.7336, 0.3028 ) }
    dend_35 { pt3dadd( 458.855, 308.492, 85.4896, 0.3272 ) }
    dend_35 { pt3dadd( 458.948, 307.368, 86.1204, 0.3692 ) }
    dend_35 { pt3dadd( 459.329, 306.503, 86.7754, 0.465 ) }
    dend_35 { pt3dadd( 460.198, 306.355, 87.4885, 0.5558 ) }
    dend_35 { pt3dadd( 461.318, 306.534, 88.0855, 0.4582 ) }
    dend_35 { pt3dadd( 461.447, 305.496, 88.571, 0.4244 ) }
    dend_35 { pt3dadd( 461.305, 304.48, 89.0002, 0.334 ) }
    dend_35 { pt3dadd( 462.158, 303.759, 89.4704, 0.3002 ) }
    dend_35 { pt3dadd( 463.01, 303.04, 89.9704, 0.275 ) }
    dend_35 { pt3dadd( 463.876, 302.339, 90.5145, 0.2752 ) }
    dend_35 { pt3dadd( 464.803, 301.721, 91.1196, 0.276 ) }
    dend_35 { pt3dadd( 465.73, 301.107, 91.7686, 0.277 ) }
    dend_35 { pt3dadd( 466.657, 300.49, 92.4426, 0.2794 ) }
    dend_35 { pt3dadd( 467.554, 299.845, 93.1328, 0.2834 ) }
    dend_35 { pt3dadd( 468.343, 299.094, 93.8577, 0.291 ) }
    dend_35 { pt3dadd( 469.134, 298.345, 94.6025, 0.3062 ) }
    dend_35 { pt3dadd( 469.909, 297.582, 95.3515, 0.3276 ) }
    dend_35 { pt3dadd( 470.596, 296.74, 96.0884, 0.3994 ) }
    dend_35 { pt3dadd( 471.169, 295.812, 96.7985, 0.377 ) }
    dend_35 { pt3dadd( 471.738, 294.874, 97.4618, 0.4056 ) }
    dend_35 { pt3dadd( 472.272, 293.881, 98.0232, 0.3464 ) }
    dend_35 { pt3dadd( 472.766, 292.849, 98.4466, 0.3242 ) }
    dend_35 { pt3dadd( 473.299, 291.837, 98.7748, 0.3142 ) }
    dend_35 { pt3dadd( 473.84, 290.831, 99.0548, 0.3734 ) }
    dend_35 { pt3dadd( 474.362, 289.828, 99.3639, 0.3338 ) }
    dend_35 { pt3dadd( 474.857, 288.841, 99.7564, 0.3 ) }
    dend_35 { pt3dadd( 475.353, 287.854, 100.22, 0.2746 ) }
    dend_35 { pt3dadd( 475.851, 286.867, 100.735, 0.2746 ) }
    dend_35 { pt3dadd( 476.392, 285.89, 101.247, 0.2746 ) }
    dend_35 { pt3dadd( 476.875, 284.903, 101.665, 0.2746 ) }
    dend_35 { pt3dadd( 476.911, 283.788, 102.005, 0.2746 ) }
    dend_35 { pt3dadd( 477.56, 283.023, 102.339, 0.2748 ) }
    dend_35 { pt3dadd( 478.559, 282.734, 102.773, 0.2748 ) }
    dend_35 { pt3dadd( 478.946, 281.858, 103.195, 0.2752 ) }
    dend_35 { pt3dadd( 478.987, 280.724, 103.563, 0.2758 ) }
    dend_35 { pt3dadd( 479.227, 279.618, 103.919, 0.2766 ) }
    dend_35 { pt3dadd( 479.54, 278.531, 104.257, 0.2782 ) }
    dend_35 { pt3dadd( 479.853, 277.445, 104.562, 0.2814 ) }
    dend_35 { pt3dadd( 480.16, 276.354, 104.823, 0.287 ) }
    dend_35 { pt3dadd( 480.423, 275.245, 105.02, 0.2988 ) }
    dend_35 { pt3dadd( 480.654, 274.125, 105.136, 0.3142 ) }
    dend_35 { pt3dadd( 480.951, 273.022, 105.177, 0.3734 ) }
    dend_35 { pt3dadd( 481.343, 271.948, 105.153, 0.3338 ) }
    dend_35 { pt3dadd( 481.768, 270.885, 105.073, 0.3 ) }
    dend_35 { pt3dadd( 482.199, 269.827, 104.935, 0.2746 ) }
    dend_35 { pt3dadd( 482.642, 268.783, 104.716, 0.2746 ) }
    dend_35 { pt3dadd( 483.093, 267.747, 104.418, 0.2746 ) }
    dend_35 { pt3dadd( 483.543, 266.712, 104.059, 0.2746 ) }
    dend_35 { pt3dadd( 483.993, 265.677, 103.655, 0.2746 ) }
    dend_35 { pt3dadd( 484.444, 264.642, 103.224, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_35 { pt3dadd( 484.894, 263.605, 102.778, 0.2746 ) }
    dend_35 { pt3dadd( 485.303, 262.554, 102.33, 0.2746 ) }
    dend_35 { pt3dadd( 485.599, 261.466, 101.883, 0.2746 ) }
    dend_35 { pt3dadd( 485.833, 260.361, 101.438, 0.2746 ) }
    dend_35 { pt3dadd( 486.067, 259.254, 100.988, 0.2748 ) }
    dend_35 { pt3dadd( 486.302, 258.149, 100.532, 0.2748 ) }
    dend_35 { pt3dadd( 486.185, 257.061, 100.101, 0.2752 ) }
    dend_35 { pt3dadd( 486.527, 256.166, 99.6758, 0.2758 ) }
    dend_35 { pt3dadd( 487.382, 255.53, 99.1581, 0.2766 ) }
    dend_35 { pt3dadd( 488.254, 254.966, 98.5424, 0.2782 ) }
    dend_35 { pt3dadd( 489.196, 254.419, 97.9264, 0.2814 ) }
    dend_35 { pt3dadd( 490.198, 253.895, 97.3879, 0.287 ) }
    dend_35 { pt3dadd( 491.212, 253.378, 96.941, 0.2988 ) }
    dend_35 { pt3dadd( 492.225, 252.861, 96.5852, 0.3142 ) }
    dend_35 { pt3dadd( 493.208, 252.285, 96.3264, 0.3734 ) }
    dend_35 { pt3dadd( 494.11, 251.586, 96.1635, 0.3338 ) }
    dend_35 { pt3dadd( 494.977, 250.84, 96.0691, 0.3 ) }
    dend_35 { pt3dadd( 495.639, 249.925, 96.0173, 0.2746 ) }
    dend_35 { pt3dadd( 496.075, 248.873, 95.9941, 0.2746 ) }
    dend_35 { pt3dadd( 496.375, 247.77, 95.9902, 0.2746 ) }
    dend_35 { pt3dadd( 496.491, 246.636, 95.9963, 0.2746 ) }
    dend_35 { pt3dadd( 496.507, 245.492, 96.007, 0.2746 ) }
    dend_35 { pt3dadd( 496.39, 244.357, 96.0226, 0.2746 ) }
    dend_35 { pt3dadd( 496.282, 243.219, 96.0448, 0.2746 ) }
    dend_35 { pt3dadd( 496.783, 242.219, 96.0744, 0.2746 ) }
    dend_35 { pt3dadd( 496.461, 241.144, 96.1136, 0.2746 ) }
    dend_35 { pt3dadd( 496.225, 240.025, 96.1671, 0.2746 ) }
    dend_35 { pt3dadd( 496.156, 238.891, 96.2772, 0.2746 ) }
    dend_35 { pt3dadd( 496.153, 237.747, 96.3872, 0.2746 ) }
    dend_35 { pt3dadd( 496.153, 236.603, 96.4986, 0.2746 ) }
    dend_35 { pt3dadd( 496.153, 235.465, 96.6487, 0.2746 ) }
    dend_35 { pt3dadd( 495.988, 234.337, 96.822, 0.2746 ) }
    dend_35 { pt3dadd( 495.818, 233.206, 96.9959, 0.2746 ) }
    dend_35 { pt3dadd( 495.81, 232.064, 97.183, 0.2746 ) }
    dend_35 { pt3dadd( 495.771, 230.922, 97.3924, 0.2746 ) }
    dend_35 { pt3dadd( 495.438, 229.829, 97.5979, 0.2746 ) }
    dend_35 { pt3dadd( 495.353, 228.694, 97.8359, 0.2746 ) }
    dend_35 { pt3dadd( 495.352, 227.788, 98.3024, 0.2746 ) }
    dend_35 { pt3dadd( 495.367, 226.648, 98.7162, 0.2746 ) }
    dend_35 { pt3dadd( 495.466, 225.509, 99.0447, 0.2746 ) }
    dend_35 { pt3dadd( 495.466, 224.365, 99.2922, 0.2746 ) }
    dend_35 { pt3dadd( 495.471, 223.222, 99.4736, 0.2746 ) }
    dend_35 { pt3dadd( 495.616, 222.087, 99.5996, 0.2746 ) }
    dend_35 { pt3dadd( 495.824, 220.961, 99.6881, 0.2746 ) }
    dend_35 { pt3dadd( 496.038, 219.841, 99.7923, 0.2746 ) }
    dend_35 { pt3dadd( 496.061, 218.729, 100.004, 0.2746 ) }
    dend_35 { pt3dadd( 496.346, 217.635, 100.239, 0.2746 ) }
    dend_35 { pt3dadd( 496.93, 216.658, 100.491, 0.2746 ) }
    dend_35 { pt3dadd( 497.394, 215.615, 100.742, 0.2748 ) }
    dend_35 { pt3dadd( 497.79, 214.548, 100.984, 0.2748 ) }
    dend_35 { pt3dadd( 498.319, 213.549, 101.247, 0.2752 ) }
    dend_35 { pt3dadd( 498.848, 212.553, 101.5, 0.2758 ) }
    dend_35 { pt3dadd( 499.163, 211.459, 101.744, 0.2766 ) }
    dend_35 { pt3dadd( 499.456, 210.355, 101.946, 0.2784 ) }
    dend_35 { pt3dadd( 499.585, 209.222, 102.124, 0.2816 ) }
    dend_35 { pt3dadd( 499.585, 208.078, 102.292, 0.2876 ) }
    dend_35 { pt3dadd( 499.49, 206.949, 102.461, 0.2998 ) }
    dend_35 { pt3dadd( 499.083, 205.91, 102.691, 0.3162 ) }
    dend_35 { pt3dadd( 498.58, 204.971, 103.072, 0.377 ) }
    dend_35 { pt3dadd( 498.326, 203.936, 103.528, 0.3406 ) }
    dend_35 { pt3dadd( 498.326, 202.797, 103.951, 0.3126 ) }
    dend_35 { pt3dadd( 498.326, 201.653, 104.317, 0.2988 ) }
    dend_35 { pt3dadd( 498.326, 200.509, 104.635, 0.3144 ) }
    dend_35 { pt3dadd( 498.441, 199.395, 104.963, 0.3738 ) }
    dend_35 { pt3dadd( 498.993, 198.624, 105.428, 0.3348 ) }
    dend_35 { pt3dadd( 499.721, 197.837, 105.921, 0.3018 ) }
    dend_35 { pt3dadd( 500.133, 196.785, 106.351, 0.2778 ) }
    dend_35 { pt3dadd( 500.258, 195.657, 106.749, 0.2806 ) }
    dend_35 { pt3dadd( 500.056, 194.658, 107.242, 0.285 ) }
    dend_35 { pt3dadd( 499.633, 193.601, 107.626, 0.2954 ) }
    dend_35 { pt3dadd( 499.585, 192.462, 107.938, 0.308 ) }
    dend_35 { pt3dadd( 499.585, 191.366, 108.287, 0.3616 ) }
    dend_35 { pt3dadd( 499.782, 190.24, 108.558, 0.3134 ) }
    dend_35 { pt3dadd( 499.814, 189.098, 108.739, 0.2542 ) }
    dend_35 { pt3dadd( 499.928, 187.959, 108.92, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 75/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 472.949, 331.431, 87.0946, 0.3142 ) }
    dend_26 { pt3dadd( 473.805, 330.442, 87.9802, 0.3338 ) }
    dend_26 { pt3dadd( 474.513, 329.625, 88.8213, 0.3 ) }
    dend_26 { pt3dadd( 475.338, 328.886, 89.5244, 0.2746 ) }
    dend_26 { pt3dadd( 476.365, 328.438, 90.0304, 0.2746 ) }
    dend_26 { pt3dadd( 477.495, 328.334, 90.3683, 0.2746 ) }
    dend_26 { pt3dadd( 478.599, 328.134, 90.6203, 0.2748 ) }
    dend_26 { pt3dadd( 479.503, 327.518, 90.883, 0.2748 ) }
    dend_26 { pt3dadd( 480.231, 326.662, 91.1358, 0.2752 ) }
    dend_26 { pt3dadd( 481.005, 325.828, 91.3402, 0.2758 ) }
    dend_26 { pt3dadd( 482.026, 325.411, 91.525, 0.2766 ) }
    dend_26 { pt3dadd( 483.15, 325.211, 91.67, 0.2784 ) }
    dend_26 { pt3dadd( 484.267, 324.967, 91.7619, 0.2818 ) }
    dend_26 { pt3dadd( 485.145, 324.3, 91.8112, 0.2882 ) }
    dend_26 { pt3dadd( 485.883, 323.427, 91.8369, 0.2994 ) }
    dend_26 { pt3dadd( 486.338, 322.394, 91.852, 0.3228 ) }
    dend_26 { pt3dadd( 486.674, 321.3, 91.8604, 0.3538 ) }
    dend_26 { pt3dadd( 487.012, 320.208, 91.8686, 0.4722 ) }
    dend_26 { pt3dadd( 487.247, 319.09, 91.8803, 0.3934 ) }
    dend_26 { pt3dadd( 488.001, 318.316, 91.8968, 0.3254 ) }
    dend_26 { pt3dadd( 488.823, 317.525, 91.919, 0.2746 ) }
    dend_26 { pt3dadd( 489.772, 316.896, 91.9475, 0.2746 ) }
    dend_26 { pt3dadd( 490.413, 315.967, 91.9895, 0.2746 ) }
    dend_26 { pt3dadd( 491.199, 315.146, 92.0699, 0.2746 ) }
    dend_26 { pt3dadd( 492.184, 314.57, 92.1514, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( 493.249, 314.154, 92.234, 0.2746 ) }
    dend_26 { pt3dadd( 494.174, 313.485, 92.3199, 0.2746 ) }
    dend_26 { pt3dadd( 495.145, 312.881, 92.4137, 0.2746 ) }
    dend_26 { pt3dadd( 496.148, 312.376, 92.5901, 0.2746 ) }
    dend_26 { pt3dadd( 496.845, 311.484, 92.7634, 0.2746 ) }
    dend_26 { pt3dadd( 497.044, 310.37, 92.9589, 0.2746 ) }
    dend_26 { pt3dadd( 497.835, 309.547, 93.1636, 0.2746 ) }
    dend_26 { pt3dadd( 498.754, 308.905, 93.4307, 0.2746 ) }
    dend_26 { pt3dadd( 499.73, 308.309, 93.672, 0.2746 ) }
    dend_26 { pt3dadd( 500.688, 307.694, 93.9215, 0.2746 ) }
    dend_26 { pt3dadd( 501.604, 307.04, 94.1889, 0.2746 ) }
    dend_26 { pt3dadd( 502.519, 306.473, 94.5364, 0.2746 ) }
    dend_26 { pt3dadd( 503.415, 305.783, 94.8167, 0.2746 ) }
    dend_26 { pt3dadd( 504.028, 304.846, 95.0718, 0.2746 ) }
    dend_26 { pt3dadd( 504.434, 303.809, 95.3526, 0.2746 ) }
    dend_26 { pt3dadd( 504.908, 302.77, 95.5702, 0.2746 ) }
    dend_26 { pt3dadd( 505.46, 301.768, 95.7272, 0.2746 ) }
    dend_26 { pt3dadd( 506.023, 300.772, 95.839, 0.2746 ) }
    dend_26 { pt3dadd( 506.638, 299.81, 95.9465, 0.2746 ) }
    dend_26 { pt3dadd( 507.192, 298.827, 96.0624, 0.2746 ) }
    dend_26 { pt3dadd( 507.53, 297.734, 96.1671, 0.2746 ) }
    dend_26 { pt3dadd( 507.868, 296.646, 96.283, 0.2746 ) }
    dend_26 { pt3dadd( 508.47, 295.699, 96.4163, 0.2746 ) }
    dend_26 { pt3dadd( 509.137, 294.797, 96.5698, 0.2746 ) }
    dend_26 { pt3dadd( 509.464, 293.735, 96.8013, 0.2746 ) }
    dend_26 { pt3dadd( 509.711, 292.689, 97.1765, 0.2746 ) }
    dend_26 { pt3dadd( 509.893, 291.609, 97.6055, 0.2746 ) }
    dend_26 { pt3dadd( 509.957, 290.467, 97.9899, 0.2748 ) }
    dend_26 { pt3dadd( 509.936, 289.328, 98.3399, 0.2748 ) }
    dend_26 { pt3dadd( 509.827, 288.202, 98.6922, 0.275 ) }
    dend_26 { pt3dadd( 509.77, 287.215, 99.1536, 0.2754 ) }
    dend_26 { pt3dadd( 509.705, 286.148, 99.5817, 0.2762 ) }
    dend_26 { pt3dadd( 509.606, 285.009, 99.9037, 0.2776 ) }
    dend_26 { pt3dadd( 509.303, 283.916, 100.136, 0.2802 ) }
    dend_26 { pt3dadd( 509.197, 282.789, 100.317, 0.285 ) }
    dend_26 { pt3dadd( 509.087, 281.652, 100.475, 0.2938 ) }
    dend_26 { pt3dadd( 508.895, 280.544, 100.692, 0.3112 ) }
    dend_26 { pt3dadd( 508.611, 279.446, 100.967, 0.3382 ) }
    dend_26 { pt3dadd( 508.185, 278.387, 101.265, 0.413 ) }
    dend_26 { pt3dadd( 508.058, 277.32, 101.686, 0.4326 ) }
    dend_26 { pt3dadd( 508.349, 276.269, 102.187, 0.3592 ) }
    dend_26 { pt3dadd( 508.968, 275.329, 102.7, 0.3 ) }
    dend_26 { pt3dadd( 509.96, 274.801, 103.171, 0.2746 ) }
    dend_26 { pt3dadd( 510.818, 274.141, 103.728, 0.2746 ) }
    dend_26 { pt3dadd( 511.626, 273.336, 104.251, 0.2746 ) }
    dend_26 { pt3dadd( 512.377, 272.55, 104.831, 0.2746 ) }
    dend_26 { pt3dadd( 512.837, 271.684, 105.591, 0.2746 ) }
    dend_26 { pt3dadd( 513.423, 270.851, 106.433, 0.2746 ) }
    dend_26 { pt3dadd( 514.198, 270.06, 107.21, 0.2746 ) }
    dend_26 { pt3dadd( 514.533, 269.065, 108.04, 0.2746 ) }
    dend_26 { pt3dadd( 514.506, 268.063, 108.937, 0.2746 ) }
    dend_26 { pt3dadd( 514.222, 267.081, 109.853, 0.2746 ) }
    dend_26 { pt3dadd( 513.991, 266.051, 110.721, 0.2746 ) }
    dend_26 { pt3dadd( 513.897, 264.922, 111.45, 0.2746 ) }
    dend_26 { pt3dadd( 513.944, 263.796, 112.061, 0.2748 ) }
    dend_26 { pt3dadd( 514.15, 262.71, 112.634, 0.2748 ) }
    dend_26 { pt3dadd( 514.379, 261.637, 113.184, 0.2752 ) }
    dend_26 { pt3dadd( 514.762, 260.615, 113.696, 0.2758 ) }
    dend_26 { pt3dadd( 515.284, 259.612, 114.127, 0.2766 ) }
    dend_26 { pt3dadd( 515.491, 258.498, 114.486, 0.2782 ) }
    dend_26 { pt3dadd( 515.619, 257.367, 114.815, 0.2814 ) }
    dend_26 { pt3dadd( 515.849, 256.265, 115.166, 0.2872 ) }
    dend_26 { pt3dadd( 516.102, 255.181, 115.569, 0.2988 ) }
    dend_26 { pt3dadd( 516.354, 254.095, 116.023, 0.3142 ) }
    dend_26 { pt3dadd( 516.579, 252.992, 116.502, 0.3736 ) }
    dend_26 { pt3dadd( 516.749, 251.865, 116.953, 0.3342 ) }
    dend_26 { pt3dadd( 516.898, 250.732, 117.367, 0.3006 ) }
    dend_26 { pt3dadd( 517.094, 249.636, 117.819, 0.2758 ) }
    dend_26 { pt3dadd( 517.327, 248.573, 118.357, 0.2766 ) }
    dend_26 { pt3dadd( 517.56, 247.51, 118.965, 0.2782 ) }
    dend_26 { pt3dadd( 517.794, 246.446, 119.626, 0.2814 ) }
    dend_26 { pt3dadd( 518.369, 245.57, 120.277, 0.287 ) }
    dend_26 { pt3dadd( 519.246, 244.839, 120.864, 0.2988 ) }
    dend_26 { pt3dadd( 519.702, 243.861, 121.43, 0.3142 ) }
    dend_26 { pt3dadd( 519.984, 242.779, 122.002, 0.3734 ) }
    dend_26 { pt3dadd( 520.395, 241.76, 122.608, 0.3338 ) }
    dend_26 { pt3dadd( 520.864, 240.77, 123.253, 0.3 ) }
    dend_26 { pt3dadd( 521.336, 239.78, 123.929, 0.2746 ) }
    dend_26 { pt3dadd( 521.806, 238.789, 124.623, 0.2746 ) }
    dend_26 { pt3dadd( 522.276, 237.8, 125.314, 0.2746 ) }
    dend_26 { pt3dadd( 522.818, 236.816, 125.944, 0.2746 ) }
    dend_26 { pt3dadd( 523.473, 235.883, 126.466, 0.2746 ) }
    dend_26 { pt3dadd( 523.581, 234.85, 126.97, 0.2746 ) }
    dend_26 { pt3dadd( 523.331, 233.789, 127.506, 0.2746 ) }
    dend_26 { pt3dadd( 523.046, 232.739, 128.072, 0.2746 ) }
    dend_26 { pt3dadd( 522.443, 231.803, 128.577, 0.2746 ) }
    dend_26 { pt3dadd( 521.673, 230.959, 129.007, 0.2746 ) }
    dend_26 { pt3dadd( 520.809, 230.211, 129.387, 0.2746 ) }
    dend_26 { pt3dadd( 520.265, 229.278, 129.824, 0.2746 ) }
    dend_26 { pt3dadd( 519.83, 228.279, 130.34, 0.2746 ) }
    dend_26 { pt3dadd( 519.378, 227.285, 130.916, 0.2746 ) }
    dend_26 { pt3dadd( 518.723, 226.376, 131.479, 0.2746 ) }
    dend_26 { pt3dadd( 519.085, 225.41, 132.098, 0.2746 ) }
    dend_26 { pt3dadd( 519.52, 224.44, 132.735, 0.2746 ) }
    dend_26 { pt3dadd( 520.091, 223.459, 133.246, 0.2746 ) }
    dend_26 { pt3dadd( 520.7, 222.49, 133.614, 0.2746 ) }
    dend_26 { pt3dadd( 520.927, 221.373, 133.875, 0.2746 ) }
    dend_26 { pt3dadd( 520.991, 220.23, 134.066, 0.2746 ) }
    dend_26 { pt3dadd( 521.494, 219.205, 134.209, 0.2746 ) }
    dend_26 { pt3dadd( 522.162, 218.284, 134.377, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_26 { pt3dadd( 522.933, 217.462, 134.613, 0.2746 ) }
    dend_26 { pt3dadd( 523.703, 216.639, 134.899, 0.2746 ) }
    dend_26 { pt3dadd( 524.474, 215.818, 135.216, 0.2746 ) }
    dend_26 { pt3dadd( 525.299, 215.027, 135.499, 0.2746 ) }
    dend_26 { pt3dadd( 526.145, 214.259, 135.723, 0.2746 ) }
    dend_26 { pt3dadd( 526.993, 213.491, 135.896, 0.2746 ) }
    dend_26 { pt3dadd( 527.803, 212.687, 136.061, 0.2746 ) }
    dend_26 { pt3dadd( 528.605, 211.877, 136.232, 0.2746 ) }
    dend_26 { pt3dadd( 529.407, 211.067, 136.415, 0.2746 ) }
    dend_26 { pt3dadd( 530.208, 210.257, 136.612, 0.2746 ) }
    dend_26 { pt3dadd( 531.012, 209.447, 136.823, 0.2746 ) }
    dend_26 { pt3dadd( 531.817, 208.637, 137.026, 0.2746 ) }
    dend_26 { pt3dadd( 532.626, 207.827, 137.209, 0.2746 ) }
    dend_26 { pt3dadd( 533.46, 207.045, 137.386, 0.2746 ) }
    dend_26 { pt3dadd( 534.383, 206.368, 137.572, 0.2746 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 15/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 472.949, 331.431, 87.0946, 0.3142 ) }
    dend_23 { pt3dadd( 474.196, 331.567, 87.7607, 0.2288 ) }
    dend_23 { pt3dadd( 475.335, 331.664, 87.7276, 0.4866 ) }
    dend_23 { pt3dadd( 476.478, 331.715, 87.7145, 0.421 ) }
    dend_23 { pt3dadd( 477.62, 331.776, 87.6952, 0.3718 ) }
    dend_23 { pt3dadd( 478.762, 331.836, 87.6683, 0.386 ) }
    dend_23 { pt3dadd( 479.906, 331.849, 87.6338, 0.358 ) }
    dend_23 { pt3dadd( 481.042, 331.925, 87.5921, 0.3396 ) }
    dend_23 { pt3dadd( 482.155, 332.049, 87.512, 0.3736 ) }
    dend_23 { pt3dadd( 483.239, 331.815, 87.3737, 0.3342 ) }
    dend_23 { pt3dadd( 484.271, 331.325, 87.2645, 0.3006 ) }
    dend_23 { pt3dadd( 485.3, 330.837, 87.1825, 0.2758 ) }
    dend_23 { pt3dadd( 486.385, 330.475, 87.1259, 0.2766 ) }
    dend_23 { pt3dadd( 487.49, 330.197, 87.0926, 0.2782 ) }
    dend_23 { pt3dadd( 488.462, 329.737, 87.08, 0.2814 ) }
    dend_23 { pt3dadd( 489.224, 328.884, 87.08, 0.287 ) }
    dend_23 { pt3dadd( 490.178, 328.447, 87.08, 0.2988 ) }
    dend_23 { pt3dadd( 491.322, 328.442, 87.08, 0.3142 ) }
    dend_23 { pt3dadd( 492.451, 328.568, 87.08, 0.3734 ) }
    dend_23 { pt3dadd( 493.579, 328.742, 87.08, 0.3338 ) }
    dend_23 { pt3dadd( 494.72, 328.786, 87.08, 0.3002 ) }
    dend_23 { pt3dadd( 495.865, 328.762, 87.08, 0.2748 ) }
    dend_23 { pt3dadd( 496.852, 328.344, 87.0797, 0.2748 ) }
    dend_23 { pt3dadd( 497.431, 327.398, 87.0797, 0.2752 ) }
    dend_23 { pt3dadd( 498.009, 326.439, 87.0797, 0.2758 ) }
    dend_23 { pt3dadd( 498.678, 325.517, 87.0794, 0.2766 ) }
    dend_23 { pt3dadd( 499.261, 324.533, 87.0794, 0.2782 ) }
    dend_23 { pt3dadd( 500.1, 323.825, 87.0792, 0.2814 ) }
    dend_23 { pt3dadd( 501.133, 323.333, 87.0789, 0.287 ) }
    dend_23 { pt3dadd( 501.915, 322.558, 87.0783, 0.2988 ) }
    dend_23 { pt3dadd( 502.612, 321.654, 87.0778, 0.3142 ) }
    dend_23 { pt3dadd( 503.496, 320.944, 87.0766, 0.3734 ) }
    dend_23 { pt3dadd( 504.549, 320.52, 87.0755, 0.3338 ) }
    dend_23 { pt3dadd( 505.61, 320.097, 87.0736, 0.3 ) }
    dend_23 { pt3dadd( 506.489, 319.385, 87.071, 0.2746 ) }
    dend_23 { pt3dadd( 507.292, 318.571, 87.0677, 0.2746 ) }
    dend_23 { pt3dadd( 508.088, 317.749, 87.0629, 0.2746 ) }
    dend_23 { pt3dadd( 509.036, 317.121, 87.0556, 0.2746 ) }
    dend_23 { pt3dadd( 509.951, 316.437, 87.0458, 0.2746 ) }
    dend_23 { pt3dadd( 510.66, 315.548, 87.0332, 0.2748 ) }
    dend_23 { pt3dadd( 511.471, 314.746, 87.0187, 0.2748 ) }
    dend_23 { pt3dadd( 512.461, 314.19, 86.984, 0.275 ) }
    dend_23 { pt3dadd( 513.373, 313.509, 86.9364, 0.2752 ) }
    dend_23 { pt3dadd( 514.162, 312.681, 86.9002, 0.276 ) }
    dend_23 { pt3dadd( 515.214, 312.245, 86.8787, 0.277 ) }
    dend_23 { pt3dadd( 516.283, 311.837, 86.872, 0.2792 ) }
    dend_23 { pt3dadd( 517.228, 311.193, 86.8798, 0.283 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 62/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 468.328, 352.781, 94.6649, 0.4118 ) }
    dend_21 { pt3dadd( 468.617, 352.913, 94.9155, 0.2816 ) }
    dend_21 { pt3dadd( 469.385, 353.609, 94.9119, 0.2878 ) }
    dend_21 { pt3dadd( 470.191, 354.405, 94.7993, 0.299 ) }
    dend_21 { pt3dadd( 471.168, 354.979, 94.6856, 0.3208 ) }
    dend_21 { pt3dadd( 472.057, 355.688, 94.6224, 0.356 ) }
    dend_21 { pt3dadd( 472.774, 356.573, 94.6394, 0.4454 ) }
    dend_21 { pt3dadd( 473.585, 357.376, 94.7666, 0.4948 ) }
    dend_21 { pt3dadd( 474.592, 357.848, 95.046, 0.4652 ) }
    dend_21 { pt3dadd( 475.635, 358.229, 95.4643, 0.5422 ) }
    dend_21 { pt3dadd( 476.678, 358.605, 95.982, 0.5014 ) }
    dend_21 { pt3dadd( 477.694, 359.042, 96.5681, 0.4014 ) }
    dend_21 { pt3dadd( 478.492, 359.783, 97.2028, 0.332 ) }
    dend_21 { pt3dadd( 479.245, 360.583, 97.8603, 0.3286 ) }
    dend_21 { pt3dadd( 479.997, 361.383, 98.5149, 0.4014 ) }
    dend_21 { pt3dadd( 481.067, 361.634, 99.066, 0.3802 ) }
    dend_21 { pt3dadd( 482.203, 361.765, 99.5268, 0.4114 ) }
    dend_21 { pt3dadd( 483.199, 362.151, 100.031, 0.3584 ) }
    dend_21 { pt3dadd( 484.174, 362.578, 100.578, 0.34 ) }
    dend_21 { pt3dadd( 485.065, 363.258, 101.066, 0.3746 ) }
    dend_21 { pt3dadd( 485.862, 364.076, 101.452, 0.3358 ) }
    dend_21 { pt3dadd( 486.707, 364.847, 101.764, 0.3036 ) }
    dend_21 { pt3dadd( 487.586, 365.578, 102.019, 0.2814 ) }
    dend_21 { pt3dadd( 488.47, 366.305, 102.231, 0.287 ) }
    dend_21 { pt3dadd( 489.124, 367.19, 102.532, 0.2988 ) }
    dend_21 { pt3dadd( 489.745, 368.093, 102.936, 0.3142 ) }
    dend_21 { pt3dadd( 490.061, 369.174, 103.37, 0.3734 ) }
    dend_21 { pt3dadd( 490.103, 370.315, 103.772, 0.3338 ) }
    dend_21 { pt3dadd( 490.428, 371.41, 104.15, 0.3 ) }
    dend_21 { pt3dadd( 490.798, 372.485, 104.558, 0.2746 ) }
    dend_21 { pt3dadd( 491.037, 373.511, 105.112, 0.2746 ) }
    dend_21 { pt3dadd( 491.272, 374.536, 105.795, 0.2746 ) }
    dend_21 { pt3dadd( 491.911, 375.48, 106.434, 0.2746 ) }
    dend_21 { pt3dadd( 492.786, 376.216, 107.041, 0.2746 ) }
    dend_21 { pt3dadd( 493.348, 376.915, 107.871, 0.2746 ) }
    dend_21 { pt3dadd( 494.007, 377.517, 108.843, 0.2746 ) }
    dend_21 { pt3dadd( 495.047, 377.889, 109.758, 0.2746 ) }
    dend_21 { pt3dadd( 496.085, 378.264, 110.626, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_21 { pt3dadd( 497.125, 378.637, 111.456, 0.2746 ) }
    dend_21 { pt3dadd( 498.164, 379.009, 112.228, 0.2746 ) }
    dend_21 { pt3dadd( 499.204, 379.384, 112.927, 0.2746 ) }
    dend_21 { pt3dadd( 500.24, 379.766, 113.579, 0.2746 ) }
    dend_21 { pt3dadd( 501.244, 380.248, 114.194, 0.2746 ) }
    dend_21 { pt3dadd( 502.175, 380.887, 114.75, 0.2746 ) }
    dend_21 { pt3dadd( 503.106, 381.525, 115.258, 0.2746 ) }
    dend_21 { pt3dadd( 504.038, 382.162, 115.726, 0.2746 ) }
    dend_21 { pt3dadd( 504.97, 382.801, 116.162, 0.2746 ) }
    dend_21 { pt3dadd( 505.901, 383.439, 116.57, 0.2746 ) }
    dend_21 { pt3dadd( 506.831, 384.077, 116.954, 0.2746 ) }
    dend_21 { pt3dadd( 507.763, 384.715, 117.315, 0.2746 ) }
    dend_21 { pt3dadd( 508.685, 385.367, 117.643, 0.2746 ) }
    dend_21 { pt3dadd( 509.527, 386.141, 117.882, 0.2746 ) }
    dend_21 { pt3dadd( 510.369, 386.916, 118.054, 0.2746 ) }
    dend_21 { pt3dadd( 511.21, 387.691, 118.179, 0.2746 ) }
    dend_21 { pt3dadd( 512.035, 388.482, 118.282, 0.2746 ) }
    dend_21 { pt3dadd( 512.721, 389.396, 118.385, 0.2746 ) }
    dend_21 { pt3dadd( 513.424, 390.295, 118.509, 0.2746 ) }
    dend_21 { pt3dadd( 514.302, 391.026, 118.677, 0.2746 ) }
    dend_21 { pt3dadd( 515.159, 391.768, 118.935, 0.2746 ) }
    dend_21 { pt3dadd( 515.979, 392.513, 119.315, 0.2746 ) }
    dend_21 { pt3dadd( 516.799, 393.258, 119.782, 0.2746 ) }
    dend_21 { pt3dadd( 517.619, 394.003, 120.303, 0.2746 ) }
    dend_21 { pt3dadd( 518.438, 394.749, 120.851, 0.2746 ) }
    dend_21 { pt3dadd( 519.212, 395.537, 121.385, 0.2746 ) }
    dend_21 { pt3dadd( 519.709, 396.566, 121.806, 0.2746 ) }
    dend_21 { pt3dadd( 520.205, 397.596, 122.14, 0.2746 ) }
    dend_21 { pt3dadd( 520.697, 398.612, 122.466, 0.2746 ) }
    dend_21 { pt3dadd( 521.179, 399.608, 122.825, 0.2746 ) }
    dend_21 { pt3dadd( 521.662, 400.604, 123.202, 0.2746 ) }
    dend_21 { pt3dadd( 522.104, 401.617, 123.566, 0.2746 ) }
    dend_21 { pt3dadd( 522.313, 402.736, 123.787, 0.2746 ) }
    dend_21 { pt3dadd( 522.541, 403.855, 123.918, 0.2746 ) }
    dend_21 { pt3dadd( 522.648, 404.989, 123.983, 0.2744 ) }
    dend_21 { pt3dadd( 522.68, 406.129, 123.999, 0.2744 ) }
    dend_21 { pt3dadd( 522.893, 407.254, 123.99, 0.2742 ) }
    dend_21 { pt3dadd( 523.444, 408.251, 123.978, 0.2736 ) }
    dend_21 { pt3dadd( 523.96, 409.273, 123.976, 0.2728 ) }
    dend_21 { pt3dadd( 524.275, 410.37, 123.976, 0.2712 ) }
    dend_21 { pt3dadd( 524.581, 411.472, 123.976, 0.2684 ) }
    dend_21 { pt3dadd( 524.707, 412.599, 123.976, 0.2626 ) }
    dend_21 { pt3dadd( 524.707, 413.742, 123.976, 0.2542 ) }
    dend_21 { pt3dadd( 524.707, 414.887, 123.976, 0.2288 ) }
    dend_21 { pt3dadd( 524.707, 416.03, 123.976, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 45/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 468.328, 352.781, 94.6649, 0.4118 ) }
    dend_20 { pt3dadd( 468.922, 353.426, 97.3524, 0.2288 ) }
    dend_20 { pt3dadd( 469.61, 354.174, 99.3723, 0.2746 ) }
    dend_20 { pt3dadd( 470.298, 354.924, 100.232, 0.2746 ) }
    dend_20 { pt3dadd( 470.986, 355.672, 101.254, 0.2746 ) }
    dend_20 { pt3dadd( 471.675, 356.421, 102.388, 0.2746 ) }
    dend_20 { pt3dadd( 472.362, 357.169, 103.583, 0.2746 ) }
    dend_20 { pt3dadd( 473.051, 357.918, 104.793, 0.2746 ) }
    dend_20 { pt3dadd( 473.738, 358.667, 105.971, 0.2746 ) }
    dend_20 { pt3dadd( 474.427, 359.415, 107.107, 0.2746 ) }
    dend_20 { pt3dadd( 475.115, 360.164, 108.193, 0.2746 ) }
    dend_20 { pt3dadd( 475.803, 360.913, 109.227, 0.2746 ) }
    dend_20 { pt3dadd( 476.614, 361.693, 110.068, 0.2746 ) }
    dend_20 { pt3dadd( 477.428, 362.496, 110.729, 0.2746 ) }
    dend_20 { pt3dadd( 478.185, 363.354, 111.267, 0.2746 ) }
    dend_20 { pt3dadd( 478.69, 364.328, 111.837, 0.2746 ) }
    dend_20 { pt3dadd( 479.057, 365.326, 112.507, 0.2746 ) }
    dend_20 { pt3dadd( 479.413, 366.324, 113.284, 0.2746 ) }
    dend_20 { pt3dadd( 479.75, 367.35, 114.153, 0.2746 ) }
    dend_20 { pt3dadd( 479.952, 368.47, 114.975, 0.2746 ) }
    dend_20 { pt3dadd( 480.073, 369.594, 115.811, 0.2746 ) }
    dend_20 { pt3dadd( 479.931, 370.488, 116.843, 0.2746 ) }
    dend_20 { pt3dadd( 479.778, 371.37, 118.029, 0.2746 ) }
    dend_20 { pt3dadd( 479.625, 372.253, 119.325, 0.2746 ) }
    dend_20 { pt3dadd( 479.528, 373.219, 120.647, 0.2746 ) }
    dend_20 { pt3dadd( 479.469, 374.231, 121.933, 0.2746 ) }
    dend_20 { pt3dadd( 479.411, 375.246, 123.133, 0.2746 ) }
    dend_20 { pt3dadd( 479.353, 376.259, 124.214, 0.2744 ) }
    dend_20 { pt3dadd( 479.295, 377.274, 125.178, 0.2744 ) }
    dend_20 { pt3dadd( 479.158, 378.394, 125.907, 0.2742 ) }
    dend_20 { pt3dadd( 478.989, 379.525, 126.388, 0.2736 ) }
    dend_20 { pt3dadd( 478.82, 380.657, 126.679, 0.2728 ) }
    dend_20 { pt3dadd( 478.494, 381.754, 126.832, 0.2712 ) }
    dend_20 { pt3dadd( 478.007, 382.788, 126.894, 0.2684 ) }
    dend_20 { pt3dadd( 477.46, 383.794, 126.906, 0.2626 ) }
    dend_20 { pt3dadd( 476.912, 384.797, 126.906, 0.2542 ) }
    dend_20 { pt3dadd( 476.364, 385.801, 126.906, 0.2288 ) }
    dend_20 { pt3dadd( 475.816, 386.806, 126.906, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 83/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 406.495, 317.581, 96.4877, 0.572 ) }
    dend_17 { pt3dadd( 406.157, 316.208, 97.1636, 0.3476 ) }
    dend_17 { pt3dadd( 405.963, 315.142, 97.8527, 0.315 ) }
    dend_17 { pt3dadd( 406.114, 314.065, 98.4612, 0.3514 ) }
    dend_17 { pt3dadd( 406.53, 313.004, 98.9226, 0.4088 ) }
    dend_17 { pt3dadd( 406.533, 311.912, 99.2527, 0.564 ) }
    dend_17 { pt3dadd( 406.164, 310.829, 99.4902, 0.6152 ) }
    dend_17 { pt3dadd( 405.669, 309.86, 99.7382, 0.484 ) }
    dend_17 { pt3dadd( 405.119, 308.936, 100.048, 0.4248 ) }
    dend_17 { pt3dadd( 404.531, 308.011, 100.34, 0.3348 ) }
    dend_17 { pt3dadd( 403.569, 307.416, 100.61, 0.3018 ) }
    dend_17 { pt3dadd( 403.298, 306.567, 100.893, 0.2778 ) }
    dend_17 { pt3dadd( 403.659, 305.503, 101.219, 0.2808 ) }
    dend_17 { pt3dadd( 404.091, 304.468, 101.583, 0.286 ) }
    dend_17 { pt3dadd( 404.522, 303.431, 101.978, 0.2956 ) }
    dend_17 { pt3dadd( 404.953, 302.395, 102.399, 0.3132 ) }
    dend_17 { pt3dadd( 405.4, 301.351, 102.781, 0.3482 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_17 { pt3dadd( 405.693, 300.253, 103.09, 0.4026 ) }
    dend_17 { pt3dadd( 405.816, 299.146, 103.406, 0.5526 ) }
    dend_17 { pt3dadd( 405.901, 298.067, 103.777, 0.593 ) }
    dend_17 { pt3dadd( 405.896, 296.95, 104.111, 0.448 ) }
    dend_17 { pt3dadd( 405.825, 295.809, 104.348, 0.333 ) }
    dend_17 { pt3dadd( 405.746, 294.668, 104.495, 0.288 ) }
    dend_17 { pt3dadd( 405.157, 293.772, 104.563, 0.3006 ) }
    dend_17 { pt3dadd( 404.562, 292.817, 104.56, 0.3178 ) }
    dend_17 { pt3dadd( 404.303, 291.717, 104.486, 0.3802 ) }
    dend_17 { pt3dadd( 404.129, 290.623, 104.309, 0.3464 ) }
    dend_17 { pt3dadd( 404.064, 289.501, 104.11, 0.3242 ) }
    dend_17 { pt3dadd( 403.953, 288.365, 103.963, 0.3144 ) }
    dend_17 { pt3dadd( 403.535, 287.313, 103.879, 0.3738 ) }
    dend_17 { pt3dadd( 403.167, 286.233, 103.856, 0.3346 ) }
    dend_17 { pt3dadd( 402.928, 285.117, 103.906, 0.3012 ) }
    dend_17 { pt3dadd( 402.812, 283.989, 104.046, 0.2766 ) }
    dend_17 { pt3dadd( 402.725, 282.859, 104.25, 0.2784 ) }
    dend_17 { pt3dadd( 402.603, 281.732, 104.486, 0.2818 ) }
    dend_17 { pt3dadd( 402.09, 280.737, 104.699, 0.288 ) }
    dend_17 { pt3dadd( 401.511, 279.75, 104.881, 0.3006 ) }
    dend_17 { pt3dadd( 401.409, 278.639, 105.038, 0.3178 ) }
    dend_17 { pt3dadd( 401.378, 277.498, 105.192, 0.3802 ) }
    dend_17 { pt3dadd( 401.174, 276.386, 105.388, 0.3464 ) }
    dend_17 { pt3dadd( 400.93, 275.283, 105.628, 0.3242 ) }
    dend_17 { pt3dadd( 400.685, 274.18, 105.9, 0.3142 ) }
    dend_17 { pt3dadd( 400.439, 273.076, 106.187, 0.3734 ) }
    dend_17 { pt3dadd( 400.301, 271.946, 106.425, 0.3338 ) }
    dend_17 { pt3dadd( 400.196, 270.806, 106.599, 0.3 ) }
    dend_17 { pt3dadd( 400.097, 269.667, 106.72, 0.2746 ) }
    dend_17 { pt3dadd( 400.075, 268.523, 106.805, 0.2746 ) }
    dend_17 { pt3dadd( 399.97, 267.386, 106.875, 0.2748 ) }
    dend_17 { pt3dadd( 399.542, 266.336, 106.945, 0.2748 ) }
    dend_17 { pt3dadd( 399.089, 265.287, 107.043, 0.2752 ) }
    dend_17 { pt3dadd( 398.733, 264.206, 107.195, 0.2758 ) }
    dend_17 { pt3dadd( 398.397, 263.12, 107.393, 0.2766 ) }
    dend_17 { pt3dadd( 398.06, 262.033, 107.622, 0.2782 ) }
    dend_17 { pt3dadd( 397.724, 260.948, 107.869, 0.2814 ) }
    dend_17 { pt3dadd( 397.388, 259.861, 108.121, 0.287 ) }
    dend_17 { pt3dadd( 397.104, 258.758, 108.363, 0.2988 ) }
    dend_17 { pt3dadd( 397.054, 257.621, 108.559, 0.3142 ) }
    dend_17 { pt3dadd( 397.3, 256.51, 108.721, 0.3734 ) }
    dend_17 { pt3dadd( 397.636, 255.417, 108.868, 0.3338 ) }
    dend_17 { pt3dadd( 397.593, 254.285, 109.02, 0.3 ) }
    dend_17 { pt3dadd( 397.484, 253.147, 109.197, 0.2746 ) }
    dend_17 { pt3dadd( 397.247, 252.03, 109.437, 0.2746 ) }
    dend_17 { pt3dadd( 396.671, 251.078, 109.803, 0.2746 ) }
    dend_17 { pt3dadd( 396.091, 250.126, 110.288, 0.2746 ) }
    dend_17 { pt3dadd( 395.711, 249.101, 110.89, 0.2746 ) }
    dend_17 { pt3dadd( 395.354, 248.067, 111.579, 0.2746 ) }
    dend_17 { pt3dadd( 395.652, 247.036, 112.323, 0.2746 ) }
    dend_17 { pt3dadd( 396.129, 246.045, 113.089, 0.2746 ) }
    dend_17 { pt3dadd( 396.534, 245.024, 113.862, 0.2746 ) }
    dend_17 { pt3dadd( 396.784, 243.958, 114.638, 0.2746 ) }
    dend_17 { pt3dadd( 397.023, 242.889, 115.408, 0.2746 ) }
    dend_17 { pt3dadd( 397.251, 241.818, 116.168, 0.2746 ) }
    dend_17 { pt3dadd( 397.447, 240.738, 116.913, 0.2746 ) }
    dend_17 { pt3dadd( 397.642, 239.657, 117.644, 0.2746 ) }
    dend_17 { pt3dadd( 397.848, 238.577, 118.364, 0.2746 ) }
    dend_17 { pt3dadd( 398.203, 237.494, 118.97, 0.2746 ) }
    dend_17 { pt3dadd( 398.015, 236.373, 119.527, 0.2746 ) }
    dend_17 { pt3dadd( 397.738, 235.356, 120.163, 0.2746 ) }
    dend_17 { pt3dadd( 397.462, 234.364, 120.855, 0.2746 ) }
    dend_17 { pt3dadd( 397.311, 234.004, 121.698, 0.2746 ) }
    dend_17 { pt3dadd( 397.311, 232.86, 122.339, 0.2746 ) }
    dend_17 { pt3dadd( 397.244, 231.723, 122.812, 0.2746 ) }
    dend_17 { pt3dadd( 397.027, 230.601, 123.139, 0.2746 ) }
    dend_17 { pt3dadd( 396.808, 229.482, 123.355, 0.2746 ) }
    dend_17 { pt3dadd( 396.374, 228.437, 123.496, 0.2746 ) }
    dend_17 { pt3dadd( 395.769, 227.468, 123.587, 0.2746 ) }
    dend_17 { pt3dadd( 395.141, 226.529, 123.698, 0.2746 ) }
    dend_17 { pt3dadd( 394.254, 225.83, 123.817, 0.2746 ) }
    dend_17 { pt3dadd( 393.343, 225.177, 123.932, 0.2746 ) }
    dend_17 { pt3dadd( 392.611, 224.297, 124.023, 0.2746 ) }
    dend_17 { pt3dadd( 391.956, 223.363, 124.1, 0.2746 ) }
    dend_17 { pt3dadd( 391.353, 222.391, 124.169, 0.2746 ) }
    dend_17 { pt3dadd( 390.716, 221.441, 124.236, 0.2746 ) }
    dend_17 { pt3dadd( 389.935, 220.633, 124.306, 0.2746 ) }
    dend_17 { pt3dadd( 389.157, 219.847, 124.442, 0.2746 ) }
    dend_17 { pt3dadd( 388.478, 218.95, 124.631, 0.2748 ) }
    dend_17 { pt3dadd( 388.172, 217.909, 124.807, 0.2748 ) }
    dend_17 { pt3dadd( 387.877, 216.826, 124.963, 0.2752 ) }
    dend_17 { pt3dadd( 387.527, 215.74, 125.101, 0.2758 ) }
    dend_17 { pt3dadd( 387.034, 214.74, 125.28, 0.2766 ) }
    dend_17 { pt3dadd( 386.624, 213.696, 125.487, 0.2784 ) }
    dend_17 { pt3dadd( 386.022, 212.743, 125.673, 0.2818 ) }
    dend_17 { pt3dadd( 385.5, 211.732, 125.841, 0.288 ) }
    dend_17 { pt3dadd( 384.946, 210.733, 125.999, 0.3006 ) }
    dend_17 { pt3dadd( 384.202, 209.886, 126.199, 0.3178 ) }
    dend_17 { pt3dadd( 383.542, 208.976, 126.445, 0.3802 ) }
    dend_17 { pt3dadd( 382.804, 208.103, 126.664, 0.3464 ) }
    dend_17 { pt3dadd( 382.52, 207.006, 126.89, 0.3242 ) }
    dend_17 { pt3dadd( 382.328, 205.988, 127.251, 0.3142 ) }
    dend_17 { pt3dadd( 382.107, 204.866, 127.526, 0.3734 ) }
    dend_17 { pt3dadd( 381.842, 203.753, 127.719, 0.3338 ) }
    dend_17 { pt3dadd( 381.653, 202.625, 127.845, 0.3 ) }
    dend_17 { pt3dadd( 381.079, 201.638, 127.921, 0.2746 ) }
    dend_17 { pt3dadd( 380.494, 200.703, 127.952, 0.2746 ) }
    dend_17 { pt3dadd( 380.43, 199.568, 127.949, 0.2746 ) }
    dend_17 { pt3dadd( 380.07, 198.485, 127.945, 0.2746 ) }
    dend_17 { pt3dadd( 379.543, 197.474, 127.94, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( 378.889, 196.536, 127.931, 0.2746 ) }
    dend_17 { pt3dadd( 378.362, 195.533, 127.919, 0.2746 ) }
    dend_17 { pt3dadd( 378.116, 194.421, 127.904, 0.2746 ) }
    dend_17 { pt3dadd( 377.983, 193.285, 127.885, 0.2746 ) }
    dend_17 { pt3dadd( 377.83, 192.154, 127.847, 0.2746 ) }
    dend_17 { pt3dadd( 377.764, 191.015, 127.792, 0.2746 ) }
    dend_17 { pt3dadd( 377.749, 189.871, 127.748, 0.2746 ) }
    dend_17 { pt3dadd( 377.749, 188.727, 127.715, 0.2746 ) }
    dend_17 { pt3dadd( 377.749, 187.583, 127.692, 0.2746 ) }
    dend_17 { pt3dadd( 377.749, 186.439, 127.677, 0.2746 ) }
    dend_17 { pt3dadd( 377.749, 185.295, 127.67, 0.2746 ) }
    dend_17 { pt3dadd( 377.749, 184.151, 127.666, 0.2746 ) }
    dend_17 { pt3dadd( 377.716, 183.008, 127.661, 0.2746 ) }
    dend_17 { pt3dadd( 377.431, 181.932, 127.653, 0.2746 ) }
    dend_17 { pt3dadd( 376.922, 180.916, 127.643, 0.2746 ) }
    dend_17 { pt3dadd( 376.592, 179.821, 127.628, 0.2746 ) }
    dend_17 { pt3dadd( 376.36, 178.703, 127.607, 0.2746 ) }
    dend_17 { pt3dadd( 376.195, 177.572, 127.578, 0.2746 ) }
    dend_17 { pt3dadd( 376.016, 176.443, 127.536, 0.2746 ) }
    dend_17 { pt3dadd( 375.658, 175.398, 127.478, 0.2746 ) }
    dend_17 { pt3dadd( 374.964, 174.488, 127.402, 0.2746 ) }
    dend_17 { pt3dadd( 374.414, 173.503, 127.299, 0.2748 ) }
    dend_17 { pt3dadd( 373.985, 172.463, 127.124, 0.2748 ) }
    dend_17 { pt3dadd( 373.331, 171.57, 126.872, 0.275 ) }
    dend_17 { pt3dadd( 372.513, 170.776, 126.611, 0.2752 ) }
    dend_17 { pt3dadd( 371.824, 169.876, 126.368, 0.276 ) }
    dend_17 { pt3dadd( 371.507, 168.803, 126.123, 0.277 ) }
    dend_17 { pt3dadd( 371.115, 167.783, 125.821, 0.2794 ) }
    dend_17 { pt3dadd( 370.566, 166.796, 125.503, 0.2834 ) }
    dend_17 { pt3dadd( 370.285, 165.727, 125.145, 0.2906 ) }
    dend_17 { pt3dadd( 369.811, 164.767, 124.699, 0.3054 ) }
    dend_17 { pt3dadd( 369.043, 163.94, 124.274, 0.3268 ) }
    dend_17 { pt3dadd( 368.233, 163.185, 123.823, 0.3966 ) }
    dend_17 { pt3dadd( 367.175, 162.899, 123.388, 0.3788 ) }
    dend_17 { pt3dadd( 366.194, 162.525, 122.896, 0.373 ) }
    dend_17 { pt3dadd( 365.135, 162.139, 122.473, 0.4604 ) }
    dend_17 { pt3dadd( 364.084, 161.692, 122.174, 0.373 ) }
    dend_17 { pt3dadd( 363.046, 161.211, 121.973, 0.2796 ) }
    dend_17 { pt3dadd( 361.962, 160.846, 121.8, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 39/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 406.495, 317.581, 96.4877, 0.572 ) }
    dend_14 { pt3dadd( 405.702, 316.729, 96.8828, 0.6864 ) }
    dend_14 { pt3dadd( 404.934, 315.894, 97.0178, 0.5396 ) }
    dend_14 { pt3dadd( 404.246, 314.986, 97.0673, 0.5546 ) }
    dend_14 { pt3dadd( 403.565, 314.067, 97.1054, 0.446 ) }
    dend_14 { pt3dadd( 402.712, 313.316, 97.1326, 0.4498 ) }
    dend_14 { pt3dadd( 401.964, 312.462, 97.1496, 0.3756 ) }
    dend_14 { pt3dadd( 401.507, 311.424, 97.158, 0.4032 ) }
    dend_14 { pt3dadd( 400.921, 310.451, 97.1583, 0.342 ) }
    dend_14 { pt3dadd( 400.351, 309.461, 97.1575, 0.315 ) }
    dend_14 { pt3dadd( 399.702, 308.521, 97.1566, 0.3024 ) }
    dend_14 { pt3dadd( 398.891, 307.718, 97.1552, 0.327 ) }
    dend_14 { pt3dadd( 397.908, 307.143, 97.1533, 0.3676 ) }
    dend_14 { pt3dadd( 396.853, 306.707, 97.1505, 0.4668 ) }
    dend_14 { pt3dadd( 395.787, 306.289, 97.1468, 0.5354 ) }
    dend_14 { pt3dadd( 394.718, 305.883, 97.1415, 0.536 ) }
    dend_14 { pt3dadd( 393.856, 305.147, 97.1342, 0.6934 ) }
    dend_14 { pt3dadd( 392.853, 304.611, 97.1242, 0.6846 ) }
    dend_14 { pt3dadd( 391.789, 304.192, 97.1099, 0.5274 ) }
    dend_14 { pt3dadd( 390.726, 303.767, 97.0897, 0.4596 ) }
    dend_14 { pt3dadd( 389.733, 303.203, 97.0614, 0.394 ) }
    dend_14 { pt3dadd( 388.879, 302.447, 97.0225, 0.438 ) }
    dend_14 { pt3dadd( 387.913, 301.837, 96.9688, 0.4006 ) }
    dend_14 { pt3dadd( 386.815, 301.538, 96.8954, 0.4516 ) }
    dend_14 { pt3dadd( 385.883, 300.9, 96.7716, 0.421 ) }
    dend_14 { pt3dadd( 385.678, 299.807, 96.6381, 0.5126 ) }
    dend_14 { pt3dadd( 385.084, 298.861, 96.4362, 0.422 ) }
    dend_14 { pt3dadd( 384.475, 297.922, 96.1699, 0.3732 ) }
    dend_14 { pt3dadd( 384.052, 296.863, 95.9372, 0.3886 ) }
    dend_14 { pt3dadd( 383.621, 295.806, 95.7312, 0.3632 ) }
    dend_14 { pt3dadd( 383.233, 294.741, 95.5217, 0.349 ) }
    dend_14 { pt3dadd( 382.6, 293.792, 95.3686, 0.3904 ) }
    dend_14 { pt3dadd( 382.232, 292.712, 95.27, 0.3666 ) }
    dend_14 { pt3dadd( 382.18, 291.57, 95.209, 0.355 ) }
    dend_14 { pt3dadd( 381.706, 290.534, 95.1658, 0.4034 ) }
    dend_14 { pt3dadd( 381.155, 289.53, 95.1348, 0.3842 ) }
    dend_14 { pt3dadd( 380.57, 288.548, 95.1076, 0.4184 ) }
    dend_14 { pt3dadd( 380.24, 287.453, 95.0718, 0.3708 ) }
    dend_14 { pt3dadd( 379.881, 286.367, 95.0202, 0.3644 ) }
    dend_14 { pt3dadd( 379.491, 285.292, 94.9458, 0.4146 ) }
    dend_14 { pt3dadd( 378.911, 284.306, 94.8441, 0.4358 ) }
    dend_14 { pt3dadd( 378.129, 283.471, 94.7114, 0.365 ) }
    dend_14 { pt3dadd( 377.38, 282.606, 94.5428, 0.3104 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 406.136, 355.965, 76.2656, 0.8694 ) }
    dend_9 { pt3dadd( 405.416, 356.089, 78.8822, 0.2288 ) }
    dend_9 { pt3dadd( 404.738, 356.198, 80.024, 0.2746 ) }
    dend_9 { pt3dadd( 403.594, 356.198, 80.4154, 0.2748 ) }
    dend_9 { pt3dadd( 402.458, 356.318, 80.7218, 0.2748 ) }
    dend_9 { pt3dadd( 401.695, 357.072, 80.9502, 0.275 ) }
    dend_9 { pt3dadd( 401.393, 358.139, 81.1107, 0.2754 ) }
    dend_9 { pt3dadd( 400.651, 359.01, 81.214, 0.2762 ) }
    dend_9 { pt3dadd( 399.883, 359.854, 81.2745, 0.2778 ) }
    dend_9 { pt3dadd( 399.012, 360.597, 81.3585, 0.2802 ) }
    dend_9 { pt3dadd( 398.089, 361.231, 81.4752, 0.2854 ) }
    dend_9 { pt3dadd( 396.969, 361.455, 81.6449, 0.2942 ) }
    dend_9 { pt3dadd( 395.849, 361.679, 81.8622, 0.3124 ) }
    dend_9 { pt3dadd( 394.777, 361.938, 82.2016, 0.339 ) }
    dend_9 { pt3dadd( 393.709, 362.198, 82.6325, 0.4216 ) }
    dend_9 { pt3dadd( 392.847, 362.942, 83.0396, 0.413 ) }
    dend_9 { pt3dadd( 391.995, 363.69, 83.4288, 0.4976 ) }
    dend_9 { pt3dadd( 391.232, 364.459, 83.8768, 0.3934 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( 390.346, 365.149, 84.264, 0.3254 ) }
    dend_9 { pt3dadd( 389.248, 365.371, 84.5704, 0.2746 ) }
    dend_9 { pt3dadd( 388.23, 365.801, 84.8473, 0.2746 ) }
    dend_9 { pt3dadd( 387.349, 366.478, 85.155, 0.2746 ) }
    dend_9 { pt3dadd( 386.683, 367.346, 85.5002, 0.2746 ) }
    dend_9 { pt3dadd( 386.151, 368.327, 85.8595, 0.2746 ) }
    dend_9 { pt3dadd( 385.68, 369.348, 86.1885, 0.2748 ) }
    dend_9 { pt3dadd( 385.283, 370.422, 86.4326, 0.2748 ) }
    dend_9 { pt3dadd( 384.8, 371.447, 86.5998, 0.2752 ) }
    dend_9 { pt3dadd( 384.087, 372.34, 86.7031, 0.2758 ) }
    dend_9 { pt3dadd( 383.412, 373.261, 86.7636, 0.2766 ) }
    dend_9 { pt3dadd( 382.842, 374.252, 86.805, 0.2784 ) }
    dend_9 { pt3dadd( 382.269, 375.242, 86.8501, 0.2818 ) }
    dend_9 { pt3dadd( 381.563, 376.112, 86.9137, 0.288 ) }
    dend_9 { pt3dadd( 380.554, 376.629, 87.0019, 0.3006 ) }
    dend_9 { pt3dadd( 379.444, 376.878, 87.1212, 0.3178 ) }
    dend_9 { pt3dadd( 378.347, 377.159, 87.2903, 0.3802 ) }
    dend_9 { pt3dadd( 377.237, 377.353, 87.5526, 0.3464 ) }
    dend_9 { pt3dadd( 376.121, 377.515, 87.8906, 0.3242 ) }
    dend_9 { pt3dadd( 375.031, 377.633, 88.3252, 0.3142 ) }
    dend_9 { pt3dadd( 373.953, 377.732, 88.8387, 0.3734 ) }
    dend_9 { pt3dadd( 372.872, 377.992, 89.3292, 0.3338 ) }
    dend_9 { pt3dadd( 371.789, 378.354, 89.7459, 0.3 ) }
    dend_9 { pt3dadd( 370.729, 378.777, 90.0822, 0.2746 ) }
    dend_9 { pt3dadd( 369.692, 379.259, 90.3459, 0.2746 ) }
    dend_9 { pt3dadd( 368.631, 379.648, 90.5932, 0.2746 ) }
    dend_9 { pt3dadd( 367.538, 379.896, 90.8916, 0.2746 ) }
    dend_9 { pt3dadd( 366.483, 380.263, 91.2229, 0.2746 ) }
    dend_9 { pt3dadd( 365.497, 380.843, 91.5446, 0.2744 ) }
    dend_9 { pt3dadd( 364.509, 381.405, 91.8918, 0.2744 ) }
    dend_9 { pt3dadd( 363.516, 381.929, 92.3065, 0.2742 ) }
    dend_9 { pt3dadd( 362.573, 382.522, 92.7713, 0.2736 ) }
    dend_9 { pt3dadd( 361.678, 383.185, 93.2705, 0.2728 ) }
    dend_9 { pt3dadd( 360.812, 383.766, 93.8566, 0.2712 ) }
    dend_9 { pt3dadd( 359.948, 384.321, 94.4983, 0.2684 ) }
    dend_9 { pt3dadd( 358.98, 384.931, 94.9836, 0.2626 ) }
    dend_9 { pt3dadd( 358.01, 385.535, 95.3266, 0.2542 ) }
    dend_9 { pt3dadd( 356.986, 386.046, 95.5422, 0.2288 ) }
    dend_9 { pt3dadd( 356.247, 386.873, 95.6992, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 39/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 406.136, 355.965, 76.2656, 0.8694 ) }
    dend_2 { pt3dadd( 405.372, 355.973, 76.3204, 0.5492 ) }
    dend_2 { pt3dadd( 404.228, 355.976, 76.3204, 0.5492 ) }
    dend_2 { pt3dadd( 403.084, 356.003, 76.2908, 0.5492 ) }
    dend_2 { pt3dadd( 401.947, 356.111, 76.2474, 0.5492 ) }
    dend_2 { pt3dadd( 400.835, 356.37, 76.1869, 0.5492 ) }
    dend_2 { pt3dadd( 399.742, 356.708, 76.1074, 0.5492 ) }
    dend_2 { pt3dadd( 398.729, 357.223, 76.008, 0.5492 ) }
    dend_2 { pt3dadd( 397.686, 357.627, 75.8299, 0.5492 ) }
    dend_2 { pt3dadd( 396.592, 357.63, 75.5415, 0.5492 ) }
    dend_2 { pt3dadd( 395.457, 357.554, 75.2693, 0.5492 ) }
    dend_2 { pt3dadd( 394.323, 357.402, 75.0249, 0.5492 ) }
    dend_2 { pt3dadd( 393.292, 356.92, 74.8003, 0.5492 ) }
    dend_2 { pt3dadd( 392.35, 356.284, 74.5525, 0.5492 ) }
    dend_2 { pt3dadd( 391.488, 355.557, 74.2566, 0.5492 ) }
    dend_2 { pt3dadd( 390.636, 354.822, 73.9175, 0.5492 ) }
    dend_2 { pt3dadd( 389.784, 354.086, 73.5361, 0.5492 ) }
    dend_2 { pt3dadd( 388.931, 353.351, 73.1312, 0.5492 ) }
    dend_2 { pt3dadd( 388.129, 352.551, 72.7356, 0.5492 ) }
    dend_2 { pt3dadd( 387.395, 351.684, 72.3778, 0.5492 ) }
    dend_2 { pt3dadd( 386.666, 350.809, 72.0591, 0.5492 ) }
    dend_2 { pt3dadd( 385.938, 349.932, 71.773, 0.5492 ) }
    dend_2 { pt3dadd( 385.21, 349.058, 71.5134, 0.5492 ) }
    dend_2 { pt3dadd( 384.481, 348.182, 71.2746, 0.5492 ) }
    dend_2 { pt3dadd( 383.754, 347.308, 71.0511, 0.5492 ) }
    dend_2 { pt3dadd( 382.931, 346.514, 70.859, 0.5492 ) }
    dend_2 { pt3dadd( 382.033, 345.808, 70.7076, 0.5492 ) }
    dend_2 { pt3dadd( 381.163, 345.066, 70.5824, 0.5492 ) }
    dend_2 { pt3dadd( 380.398, 344.216, 70.4668, 0.5492 ) }
    dend_2 { pt3dadd( 379.665, 343.337, 70.3452, 0.5492 ) }
    dend_2 { pt3dadd( 378.982, 342.42, 70.2058, 0.5492 ) }
    dend_2 { pt3dadd( 378.204, 341.603, 69.9796, 0.5492 ) }
    dend_2 { pt3dadd( 377.386, 340.849, 69.655, 0.5492 ) }
    dend_2 { pt3dadd( 376.565, 340.099, 69.2614, 0.5492 ) }
    dend_2 { pt3dadd( 375.743, 339.349, 68.8285, 0.5492 ) }
    dend_2 { pt3dadd( 375.24, 338.332, 68.4541, 0.5492 ) }
    dend_2 { pt3dadd( 374.745, 337.302, 68.1484, 0.5492 ) }
    dend_2 { pt3dadd( 373.956, 336.476, 67.8969, 0.5492 ) }
    dend_2 { pt3dadd( 373.157, 335.658, 67.6766, 0.5492 ) }
    dend_2 { pt3dadd( 372.413, 334.789, 67.4626, 0.5492 ) }
    dend_2 { pt3dadd( 371.587, 334.077, 67.1149, 0.5492 ) }
    dend_2 { pt3dadd( 370.751, 333.466, 66.6002, 0.5492 ) }
    dend_2 { pt3dadd( 369.78, 332.901, 66.0657, 0.5492 ) }
    dend_2 { pt3dadd( 368.755, 332.394, 65.606, 0.5492 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 424.22, 257.947, 62.7214, 0.5176 ) }
    dend_38 { pt3dadd( 423.06, 257.418, 62.2143, 0.4268 ) }
    dend_38 { pt3dadd( 422.141, 256.999, 61.5535, 0.4034 ) }
    dend_38 { pt3dadd( 421.22, 256.579, 60.8054, 0.3422 ) }
    dend_38 { pt3dadd( 420.099, 256.43, 60.1832, 0.3158 ) }
    dend_38 { pt3dadd( 418.966, 256.267, 59.7176, 0.3032 ) }
    dend_38 { pt3dadd( 417.859, 255.983, 59.3981, 0.33 ) }
    dend_38 { pt3dadd( 416.86, 255.429, 59.2063, 0.3666 ) }
    dend_38 { pt3dadd( 415.921, 254.776, 59.0859, 0.4962 ) }
    dend_38 { pt3dadd( 415.175, 253.918, 58.9557, 0.4384 ) }
    dend_38 { pt3dadd( 414.526, 252.988, 58.7779, 0.4048 ) }
    dend_38 { pt3dadd( 413.88, 252.057, 58.5656, 0.443 ) }
    dend_38 { pt3dadd( 413.304, 251.074, 58.3629, 0.4832 ) }
    dend_38 { pt3dadd( 412.809, 250.042, 58.203, 0.4782 ) }
    dend_38 { pt3dadd( 412.264, 249.036, 58.0818, 0.3972 ) }
    dend_38 { pt3dadd( 411.559, 248.136, 57.9992, 0.3664 ) }
    dend_38 { pt3dadd( 410.682, 247.401, 57.9508, 0.4178 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_38 { pt3dadd( 409.607, 247.101, 57.8435, 0.4416 ) }
    dend_38 { pt3dadd( 408.53, 246.818, 57.6954, 0.3754 ) }
    dend_38 { pt3dadd( 407.726, 246.005, 57.6167, 0.331 ) }
    dend_38 { pt3dadd( 406.908, 245.259, 57.7032, 0.327 ) }
    dend_38 { pt3dadd( 406.088, 244.625, 57.9765, 0.397 ) }
    dend_38 { pt3dadd( 404.992, 244.305, 58.2207, 0.3784 ) }
    dend_38 { pt3dadd( 404.001, 243.743, 58.4256, 0.3782 ) }
    dend_38 { pt3dadd( 403.273, 242.864, 58.5771, 0.4412 ) }
    dend_38 { pt3dadd( 402.8, 241.823, 58.6634, 0.4796 ) }
    dend_38 { pt3dadd( 402.387, 240.758, 58.6908, 0.4716 ) }
    dend_38 { pt3dadd( 401.7, 239.858, 58.6818, 0.385 ) }
    dend_38 { pt3dadd( 400.681, 239.339, 58.6676, 0.3422 ) }
    dend_38 { pt3dadd( 399.597, 238.976, 58.648, 0.3786 ) }
    dend_38 { pt3dadd( 398.508, 238.626, 58.62, 0.3436 ) }
    dend_38 { pt3dadd( 397.431, 238.239, 58.5794, 0.3182 ) }
    dend_38 { pt3dadd( 396.391, 237.763, 58.5242, 0.308 ) }
    dend_38 { pt3dadd( 395.428, 237.173, 58.4545, 0.3384 ) }
    dend_38 { pt3dadd( 394.81, 236.217, 58.3579, 0.3836 ) }
    dend_38 { pt3dadd( 394.284, 235.23, 58.175, 0.5226 ) }
    dend_38 { pt3dadd( 393.595, 234.368, 57.925, 0.5118 ) }
    dend_38 { pt3dadd( 392.737, 233.625, 57.7256, 0.4222 ) }
    dend_38 { pt3dadd( 391.693, 233.179, 57.5725, 0.3654 ) }
    dend_38 { pt3dadd( 390.604, 233.178, 57.4599, 0.416 ) }
    dend_38 { pt3dadd( 389.561, 233.63, 57.3818, 0.4384 ) }
    dend_38 { pt3dadd( 388.453, 233.717, 57.3289, 0.3698 ) }
    dend_38 { pt3dadd( 387.387, 233.318, 57.2818, 0.3194 ) }
    dend_38 { pt3dadd( 386.368, 232.803, 57.211, 0.3112 ) }
    dend_38 { pt3dadd( 385.326, 232.338, 57.1007, 0.3384 ) }
    dend_38 { pt3dadd( 384.284, 231.874, 56.9624, 0.4132 ) }
    dend_38 { pt3dadd( 383.242, 231.411, 56.8067, 0.4334 ) }
    dend_38 { pt3dadd( 382.2, 230.946, 56.6443, 0.3604 ) }
    dend_38 { pt3dadd( 381.163, 230.473, 56.4861, 0.3018 ) }
    dend_38 { pt3dadd( 380.148, 229.949, 56.3522, 0.278 ) }
    dend_38 { pt3dadd( 379.164, 229.365, 56.2579, 0.281 ) }
    dend_38 { pt3dadd( 378.233, 228.711, 56.1929, 0.2862 ) }
    dend_38 { pt3dadd( 377.408, 227.919, 56.1473, 0.2962 ) }
    dend_38 { pt3dadd( 376.543, 227.181, 56.1114, 0.3156 ) }
    dend_38 { pt3dadd( 375.529, 226.663, 56.0753, 0.3464 ) }
    dend_38 { pt3dadd( 374.428, 226.467, 56.0272, 0.4278 ) }
    dend_38 { pt3dadd( 373.286, 226.553, 55.96, 0.4614 ) }
    dend_38 { pt3dadd( 372.146, 226.567, 55.8726, 0.4072 ) }
    dend_38 { pt3dadd( 371.023, 226.385, 55.7606, 0.4144 ) }
    dend_38 { pt3dadd( 370.184, 225.791, 55.5629, 0.3638 ) }
    dend_38 { pt3dadd( 369.614, 224.88, 55.2485, 0.35 ) }
    dend_38 { pt3dadd( 368.803, 224.142, 54.9366, 0.3928 ) }
    dend_38 { pt3dadd( 367.815, 223.564, 54.707, 0.3708 ) }
    dend_38 { pt3dadd( 366.792, 223.061, 54.5566, 0.3644 ) }
    dend_38 { pt3dadd( 365.699, 222.739, 54.4816, 0.4142 ) }
    dend_38 { pt3dadd( 364.652, 222.325, 54.4788, 0.4352 ) }
    dend_38 { pt3dadd( 363.952, 221.492, 54.5362, 0.3636 ) }
    dend_38 { pt3dadd( 363.324, 220.563, 54.633, 0.308 ) }
    dend_38 { pt3dadd( 362.515, 219.754, 54.7613, 0.2894 ) }
    dend_38 { pt3dadd( 361.717, 218.934, 54.9242, 0.3018 ) }
    dend_38 { pt3dadd( 361.3, 217.994, 55.2059, 0.3274 ) }
    dend_38 { pt3dadd( 361.21, 216.955, 55.6466, 0.362 ) }
    dend_38 { pt3dadd( 361.161, 215.861, 56.119, 0.4876 ) }
    dend_38 { pt3dadd( 360.922, 214.763, 56.5202, 0.422 ) }
    dend_38 { pt3dadd( 360.923, 213.68, 56.8431, 0.3778 ) }
    dend_38 { pt3dadd( 361.511, 212.725, 57.0942, 0.3748 ) }
    dend_38 { pt3dadd( 362.018, 211.733, 57.3331, 0.4454 ) }
    dend_38 { pt3dadd( 362.249, 210.68, 57.6341, 0.6638 ) }
    dend_38 { pt3dadd( 362.289, 209.569, 57.9354, 0.6466 ) }
    dend_38 { pt3dadd( 361.951, 208.5, 58.161, 0.6012 ) }
    dend_38 { pt3dadd( 361.534, 207.435, 58.2963, 0.5826 ) }
    dend_38 { pt3dadd( 361.115, 206.37, 58.345, 0.4608 ) }
    dend_38 { pt3dadd( 360.485, 205.427, 58.3136, 0.429 ) }
    dend_38 { pt3dadd( 359.576, 204.79, 58.1549, 0.3428 ) }
    dend_38 { pt3dadd( 358.586, 204.286, 57.883, 0.3162 ) }
    dend_38 { pt3dadd( 357.604, 203.718, 57.6122, 0.3056 ) }
    dend_38 { pt3dadd( 357.079, 202.748, 57.3717, 0.3268 ) }
    dend_38 { pt3dadd( 356.725, 201.66, 57.1575, 0.3978 ) }
    dend_38 { pt3dadd( 356.061, 200.764, 56.9162, 0.374 ) }
    dend_38 { pt3dadd( 355.158, 200.124, 56.6213, 0.4 ) }
    dend_38 { pt3dadd( 354.229, 199.518, 56.2864, 0.3358 ) }
    dend_38 { pt3dadd( 353.276, 198.896, 55.9978, 0.3036 ) }
    dend_38 { pt3dadd( 352.381, 198.185, 55.7785, 0.2814 ) }
    dend_38 { pt3dadd( 351.812, 197.204, 55.6228, 0.2874 ) }
    dend_38 { pt3dadd( 351.436, 196.125, 55.5232, 0.2982 ) }
    dend_38 { pt3dadd( 351.134, 195.022, 55.4632, 0.3192 ) }
    dend_38 { pt3dadd( 350.395, 194.158, 55.4215, 0.3532 ) }
    dend_38 { pt3dadd( 349.452, 193.513, 55.3689, 0.4408 ) }
    dend_38 { pt3dadd( 348.472, 192.953, 55.2535, 0.484 ) }
    dend_38 { pt3dadd( 347.578, 192.242, 55.1415, 0.4572 ) }
    dend_38 { pt3dadd( 346.721, 191.484, 55.0547, 0.4676 ) }
    dend_38 { pt3dadd( 345.866, 190.724, 54.9926, 0.6516 ) }
    dend_38 { pt3dadd( 345.077, 189.896, 54.9528, 0.6526 ) }
    dend_38 { pt3dadd( 344.302, 189.055, 54.9329, 0.4746 ) }
    dend_38 { pt3dadd( 343.346, 188.427, 54.9293, 0.3304 ) }
    dend_38 { pt3dadd( 342.281, 188.012, 54.9293, 0.305 ) }
    dend_38 { pt3dadd( 341.333, 187.374, 54.9293, 0.2288 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 90/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 424.22, 257.947, 62.7214, 0.5176 ) }
    dend_37 { pt3dadd( 423.241, 257.027, 63.84, 0.2288 ) }
    dend_37 { pt3dadd( 422.509, 256.147, 63.9864, 0.7432 ) }
    dend_37 { pt3dadd( 421.521, 255.599, 64.0444, 0.8152 ) }
    dend_37 { pt3dadd( 420.487, 255.109, 64.1192, 0.8108 ) }
    dend_37 { pt3dadd( 419.501, 254.531, 64.2127, 0.7864 ) }
    dend_37 { pt3dadd( 418.579, 253.952, 64.44, 0.59 ) }
    dend_37 { pt3dadd( 417.674, 253.282, 64.6528, 0.5032 ) }
    dend_37 { pt3dadd( 417.434, 252.187, 64.8824, 0.5988 ) }
    dend_37 { pt3dadd( 416.605, 251.408, 65.1059, 0.6732 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( 415.977, 250.469, 65.345, 0.6234 ) }
    dend_37 { pt3dadd( 415.455, 249.46, 65.5567, 0.5258 ) }
    dend_37 { pt3dadd( 414.715, 248.587, 65.7205, 0.6022 ) }
    dend_37 { pt3dadd( 413.911, 247.774, 65.854, 0.6388 ) }
    dend_37 { pt3dadd( 413.007, 247.077, 65.9674, 0.5282 ) }
    dend_37 { pt3dadd( 412.049, 246.453, 66.0744, 0.503 ) }
    dend_37 { pt3dadd( 411.167, 245.729, 66.1954, 0.5 ) }
    dend_37 { pt3dadd( 410.222, 245.094, 66.3656, 0.51 ) }
    dend_37 { pt3dadd( 409.244, 244.536, 66.5902, 0.4524 ) }
    dend_37 { pt3dadd( 408.279, 244.008, 66.9043, 0.4876 ) }
    dend_37 { pt3dadd( 407.33, 243.407, 67.2272, 0.5496 ) }
    dend_37 { pt3dadd( 406.523, 242.623, 67.5338, 0.4514 ) }
    dend_37 { pt3dadd( 405.817, 241.725, 67.7536, 0.3886 ) }
    dend_37 { pt3dadd( 405.273, 240.726, 67.8952, 0.381 ) }
    dend_37 { pt3dadd( 404.711, 239.773, 67.9714, 0.5234 ) }
    dend_37 { pt3dadd( 403.908, 238.975, 67.9977, 0.4848 ) }
    dend_37 { pt3dadd( 403.171, 238.119, 67.9966, 0.5104 ) }
    dend_37 { pt3dadd( 402.245, 237.449, 67.9784, 0.5446 ) }
    dend_37 { pt3dadd( 401.307, 236.794, 67.949, 0.4436 ) }
    dend_37 { pt3dadd( 400.441, 236.055, 67.9185, 0.3666 ) }
    dend_37 { pt3dadd( 399.723, 235.176, 67.8871, 0.3762 ) }
    dend_37 { pt3dadd( 399.168, 234.179, 67.8194, 0.339 ) }
    dend_37 { pt3dadd( 398.851, 233.121, 67.664, 0.3094 ) }
    dend_37 { pt3dadd( 398.784, 232.017, 67.4002, 0.2922 ) }
    dend_37 { pt3dadd( 398.723, 230.892, 67.0897, 0.3068 ) }
    dend_37 { pt3dadd( 398.648, 229.77, 66.7523, 0.3362 ) }
    dend_37 { pt3dadd( 398.564, 228.638, 66.4549, 0.3794 ) }
    dend_37 { pt3dadd( 398.483, 227.496, 66.2365, 0.5146 ) }
    dend_37 { pt3dadd( 398.342, 226.362, 66.087, 0.497 ) }
    dend_37 { pt3dadd( 398.079, 225.25, 65.9865, 0.394 ) }
    dend_37 { pt3dadd( 397.713, 224.168, 65.9095, 0.3168 ) }
    dend_37 { pt3dadd( 397.336, 223.088, 65.8406, 0.3068 ) }
    dend_37 { pt3dadd( 396.735, 222.144, 65.7462, 0.329 ) }
    dend_37 { pt3dadd( 395.929, 221.365, 65.581, 0.402 ) }
    dend_37 { pt3dadd( 395.452, 220.398, 65.3705, 0.3816 ) }
    dend_37 { pt3dadd( 394.956, 219.387, 65.179, 0.4142 ) }
    dend_37 { pt3dadd( 393.972, 219.028, 65.053, 0.3622 ) }
    dend_37 { pt3dadd( 393.003, 218.51, 65.0269, 0.3532 ) }
    dend_37 { pt3dadd( 392.426, 217.553, 65.0404, 0.369 ) }
    dend_37 { pt3dadd( 391.868, 216.556, 65.0636, 0.4708 ) }
    dend_37 { pt3dadd( 391.256, 215.589, 65.0784, 0.537 ) }
    dend_37 { pt3dadd( 390.59, 214.66, 65.0681, 0.5674 ) }
    dend_37 { pt3dadd( 390.024, 213.668, 65.023, 0.6136 ) }
    dend_37 { pt3dadd( 389.493, 212.655, 64.9412, 0.5192 ) }
    dend_37 { pt3dadd( 388.661, 211.894, 64.8301, 0.534 ) }
    dend_37 { pt3dadd( 387.734, 211.234, 64.6576, 0.5532 ) }
    dend_37 { pt3dadd( 386.861, 210.515, 64.4137, 0.6296 ) }
    dend_37 { pt3dadd( 385.974, 209.858, 64.0749, 0.5736 ) }
    dend_37 { pt3dadd( 384.9, 209.7, 63.6706, 0.5136 ) }
    dend_37 { pt3dadd( 383.758, 209.695, 63.3335, 0.4174 ) }
    dend_37 { pt3dadd( 382.636, 209.911, 63.0658, 0.397 ) }
    dend_37 { pt3dadd( 381.492, 209.924, 62.858, 0.5052 ) }
    dend_37 { pt3dadd( 380.597, 210.615, 62.6928, 0.4562 ) }
    dend_37 { pt3dadd( 379.52, 210.911, 62.5386, 0.4328 ) }
    dend_37 { pt3dadd( 378.412, 210.842, 62.335, 0.5196 ) }
    dend_37 { pt3dadd( 377.36, 210.891, 62.0141, 0.5064 ) }
    dend_37 { pt3dadd( 376.363, 211.298, 61.7263, 0.412 ) }
    dend_37 { pt3dadd( 375.655, 212.194, 61.5051, 0.3454 ) }
    dend_37 { pt3dadd( 375.046, 213.158, 61.369, 0.3846 ) }
    dend_37 { pt3dadd( 374.532, 214.174, 61.3362, 0.3546 ) }
    dend_37 { pt3dadd( 373.922, 215.12, 61.3922, 0.339 ) }
    dend_37 { pt3dadd( 373.103, 215.911, 61.4636, 0.343 ) }
    dend_37 { pt3dadd( 372.169, 216.572, 61.5233, 0.422 ) }
    dend_37 { pt3dadd( 371.179, 217.138, 61.565, 0.449 ) }
    dend_37 { pt3dadd( 370.159, 217.657, 61.586, 0.3906 ) }
    dend_37 { pt3dadd( 369.153, 218.201, 61.5877, 0.3524 ) }
    dend_37 { pt3dadd( 368.106, 218.639, 61.5933, 0.3984 ) }
    dend_37 { pt3dadd( 366.994, 218.882, 61.6011, 0.3748 ) }
    dend_37 { pt3dadd( 365.856, 218.97, 61.5773, 0.4016 ) }
    dend_37 { pt3dadd( 364.722, 219.089, 61.5168, 0.3388 ) }
    dend_37 { pt3dadd( 363.623, 219.393, 61.4163, 0.3092 ) }
    dend_37 { pt3dadd( 362.514, 219.615, 61.2576, 0.2912 ) }
    dend_37 { pt3dadd( 361.406, 219.648, 60.9764, 0.3068 ) }
    dend_37 { pt3dadd( 360.298, 219.677, 60.5945, 0.3288 ) }
    dend_37 { pt3dadd( 359.325, 220.111, 60.174, 0.402 ) }
    dend_37 { pt3dadd( 358.3, 220.432, 59.7548, 0.3814 ) }
    dend_37 { pt3dadd( 357.206, 220.449, 59.2813, 0.4136 ) }
    dend_37 { pt3dadd( 356.095, 220.507, 58.8045, 0.361 ) }
    dend_37 { pt3dadd( 354.955, 220.555, 58.3979, 0.3526 ) }
    dend_37 { pt3dadd( 353.822, 220.563, 58.009, 0.3616 ) }
    dend_37 { pt3dadd( 352.729, 220.563, 57.5663, 0.4864 ) }
    dend_37 { pt3dadd( 351.634, 220.542, 57.0934, 0.4208 ) }
    dend_37 { pt3dadd( 350.522, 220.392, 56.6577, 0.3712 ) }
    dend_37 { pt3dadd( 349.402, 220.175, 56.3114, 0.3846 ) }
    dend_37 { pt3dadd( 348.263, 220.109, 56.0468, 0.3548 ) }
    dend_37 { pt3dadd( 347.132, 220.252, 55.8502, 0.3386 ) }
    dend_37 { pt3dadd( 345.999, 220.415, 55.701, 0.348 ) }
    dend_37 { pt3dadd( 344.861, 220.365, 55.5694, 0.4008 ) }
    dend_37 { pt3dadd( 344.051, 219.67, 55.3524, 0.5566 ) }
    dend_37 { pt3dadd( 343.286, 218.852, 55.0539, 0.565 ) }
    dend_37 { pt3dadd( 342.431, 218.097, 54.7758, 0.5706 ) }
    dend_37 { pt3dadd( 341.799, 217.168, 54.4681, 0.3984 ) }
    dend_37 { pt3dadd( 340.891, 216.504, 54.1517, 0.2796 ) }
    dend_37 { pt3dadd( 339.768, 216.445, 53.48, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 94/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 534.383, 206.368, 137.572, 0.2746 ) }
    dend_28 { pt3dadd( 535.551, 205.959, 137.859, 0.2746 ) }
    dend_28 { pt3dadd( 536.612, 205.587, 138.223, 0.2746 ) }
    dend_28 { pt3dadd( 537.672, 205.215, 138.65, 0.2746 ) }
    dend_28 { pt3dadd( 538.732, 204.844, 139.12, 0.2746 ) }
    dend_28 { pt3dadd( 539.793, 204.472, 139.616, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_28 { pt3dadd( 540.854, 204.1, 140.118, 0.2746 ) }
    dend_28 { pt3dadd( 541.915, 203.728, 140.611, 0.2746 ) }
    dend_28 { pt3dadd( 542.976, 203.357, 141.091, 0.2746 ) }
    dend_28 { pt3dadd( 544.036, 202.986, 141.554, 0.2746 ) }
    dend_28 { pt3dadd( 545.097, 202.614, 141.995, 0.2746 ) }
    dend_28 { pt3dadd( 546.158, 202.242, 142.409, 0.2746 ) }
    dend_28 { pt3dadd( 547.242, 201.919, 142.773, 0.2746 ) }
    dend_28 { pt3dadd( 548.359, 201.699, 143.054, 0.2746 ) }
    dend_28 { pt3dadd( 549.493, 201.548, 143.253, 0.2746 ) }
    dend_28 { pt3dadd( 550.633, 201.477, 143.393, 0.2746 ) }
    dend_28 { pt3dadd( 551.778, 201.452, 143.5, 0.2746 ) }
    dend_28 { pt3dadd( 552.922, 201.431, 143.597, 0.2746 ) }
    dend_28 { pt3dadd( 554.065, 201.423, 143.706, 0.2746 ) }
    dend_28 { pt3dadd( 555.159, 201.18, 143.865, 0.2746 ) }
    dend_28 { pt3dadd( 556.15, 200.642, 144.102, 0.2746 ) }
    dend_28 { pt3dadd( 557.099, 200.028, 144.409, 0.2746 ) }
    dend_28 { pt3dadd( 558.049, 199.415, 144.768, 0.2746 ) }
    dend_28 { pt3dadd( 558.998, 198.802, 145.16, 0.2746 ) }
    dend_28 { pt3dadd( 559.947, 198.189, 145.572, 0.2746 ) }
    dend_28 { pt3dadd( 560.896, 197.576, 145.987, 0.2746 ) }
    dend_28 { pt3dadd( 561.846, 196.962, 146.395, 0.2746 ) }
    dend_28 { pt3dadd( 562.795, 196.349, 146.792, 0.2746 ) }
    dend_28 { pt3dadd( 563.744, 195.736, 147.174, 0.2746 ) }
    dend_28 { pt3dadd( 564.693, 195.123, 147.538, 0.2746 ) }
    dend_28 { pt3dadd( 565.647, 194.514, 147.878, 0.2746 ) }
    dend_28 { pt3dadd( 566.664, 194.01, 148.157, 0.2746 ) }
    dend_28 { pt3dadd( 567.719, 193.567, 148.368, 0.2746 ) }
    dend_28 { pt3dadd( 568.773, 193.122, 148.535, 0.2746 ) }
    dend_28 { pt3dadd( 569.828, 192.678, 148.682, 0.2748 ) }
    dend_28 { pt3dadd( 570.882, 192.236, 148.828, 0.2748 ) }
    dend_28 { pt3dadd( 571.883, 191.698, 149.022, 0.2752 ) }
    dend_28 { pt3dadd( 572.808, 191.053, 149.305, 0.2758 ) }
    dend_28 { pt3dadd( 573.707, 190.375, 149.673, 0.2766 ) }
    dend_28 { pt3dadd( 574.605, 189.699, 150.106, 0.2782 ) }
    dend_28 { pt3dadd( 575.503, 189.022, 150.585, 0.2814 ) }
    dend_28 { pt3dadd( 576.402, 188.346, 151.093, 0.287 ) }
    dend_28 { pt3dadd( 577.3, 187.67, 151.616, 0.2988 ) }
    dend_28 { pt3dadd( 578.199, 186.994, 152.146, 0.3142 ) }
    dend_28 { pt3dadd( 579.097, 186.316, 152.681, 0.3734 ) }
    dend_28 { pt3dadd( 580.081, 185.799, 153.23, 0.3338 ) }
    dend_28 { pt3dadd( 581.114, 185.38, 153.796, 0.3 ) }
    dend_28 { pt3dadd( 582.15, 184.961, 154.377, 0.2746 ) }
    dend_28 { pt3dadd( 583.184, 184.542, 154.964, 0.2746 ) }
    dend_28 { pt3dadd( 584.219, 184.123, 155.549, 0.2746 ) }
    dend_28 { pt3dadd( 585.253, 183.705, 156.122, 0.2746 ) }
    dend_28 { pt3dadd( 586.287, 183.286, 156.671, 0.2746 ) }
    dend_28 { pt3dadd( 586.871, 182.72, 157.328, 0.2746 ) }
    dend_28 { pt3dadd( 587.947, 182.365, 157.816, 0.2746 ) }
    dend_28 { pt3dadd( 588.793, 181.596, 158.159, 0.2746 ) }
    dend_28 { pt3dadd( 589.495, 180.725, 158.386, 0.2746 ) }
    dend_28 { pt3dadd( 590.504, 180.201, 158.528, 0.2746 ) }
    dend_28 { pt3dadd( 591.36, 179.448, 158.612, 0.2746 ) }
    dend_28 { pt3dadd( 592.092, 178.57, 158.662, 0.2746 ) }
    dend_28 { pt3dadd( 592.964, 177.885, 158.731, 0.2746 ) }
    dend_28 { pt3dadd( 593.783, 177.183, 158.851, 0.2746 ) }
    dend_28 { pt3dadd( 594.399, 176.23, 158.999, 0.2744 ) }
    dend_28 { pt3dadd( 595.357, 175.784, 159.179, 0.2744 ) }
    dend_28 { pt3dadd( 595.982, 174.962, 159.34, 0.2742 ) }
    dend_28 { pt3dadd( 596.305, 173.867, 159.458, 0.2736 ) }
    dend_28 { pt3dadd( 597.107, 173.151, 159.535, 0.2728 ) }
    dend_28 { pt3dadd( 597.988, 172.426, 159.578, 0.2712 ) }
    dend_28 { pt3dadd( 599.078, 172.108, 159.596, 0.2684 ) }
    dend_28 { pt3dadd( 600.219, 172.05, 159.6, 0.2626 ) }
    dend_28 { pt3dadd( 600.959, 171.208, 159.6, 0.2542 ) }
    dend_28 { pt3dadd( 602.087, 171.039, 159.6, 0.2288 ) }
    dend_28 { pt3dadd( 603.231, 171.028, 159.6, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 66/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 534.383, 206.368, 137.572, 0.2746 ) }
    dend_27 { pt3dadd( 534.916, 206.69, 137.508, 0.2288 ) }
    dend_27 { pt3dadd( 535.846, 207.253, 138.849, 0.2746 ) }
    dend_27 { pt3dadd( 536.776, 207.816, 139.421, 0.2746 ) }
    dend_27 { pt3dadd( 537.706, 208.377, 140.098, 0.2746 ) }
    dend_27 { pt3dadd( 538.636, 208.94, 140.842, 0.2746 ) }
    dend_27 { pt3dadd( 539.567, 209.503, 141.619, 0.2746 ) }
    dend_27 { pt3dadd( 540.497, 210.066, 142.396, 0.2746 ) }
    dend_27 { pt3dadd( 541.393, 210.702, 143.127, 0.2746 ) }
    dend_27 { pt3dadd( 542.233, 211.44, 143.787, 0.2746 ) }
    dend_27 { pt3dadd( 543.068, 212.184, 144.38, 0.2746 ) }
    dend_27 { pt3dadd( 543.903, 212.929, 144.911, 0.2746 ) }
    dend_27 { pt3dadd( 544.739, 213.674, 145.385, 0.2746 ) }
    dend_27 { pt3dadd( 545.574, 214.419, 145.805, 0.2746 ) }
    dend_27 { pt3dadd( 546.378, 215.23, 146.099, 0.2746 ) }
    dend_27 { pt3dadd( 547.18, 216.046, 146.29, 0.2746 ) }
    dend_27 { pt3dadd( 547.982, 216.861, 146.401, 0.2746 ) }
    dend_27 { pt3dadd( 548.733, 217.724, 146.455, 0.2746 ) }
    dend_27 { pt3dadd( 549.256, 218.738, 146.472, 0.2746 ) }
    dend_27 { pt3dadd( 550.273, 219.225, 146.471, 0.2746 ) }
    dend_27 { pt3dadd( 551.241, 219.836, 146.469, 0.2746 ) }
    dend_27 { pt3dadd( 552.077, 220.615, 146.465, 0.2746 ) }
    dend_27 { pt3dadd( 552.914, 221.396, 146.46, 0.2746 ) }
    dend_27 { pt3dadd( 553.749, 222.177, 146.452, 0.2746 ) }
    dend_27 { pt3dadd( 554.586, 222.958, 146.442, 0.2746 ) }
    dend_27 { pt3dadd( 555.421, 223.739, 146.427, 0.2746 ) }
    dend_27 { pt3dadd( 556.27, 224.505, 146.406, 0.2746 ) }
    dend_27 { pt3dadd( 557.34, 224.913, 146.377, 0.2746 ) }
    dend_27 { pt3dadd( 558.408, 225.319, 146.337, 0.2746 ) }
    dend_27 { pt3dadd( 559.478, 225.725, 146.284, 0.2746 ) }
    dend_27 { pt3dadd( 560.56, 226.096, 146.207, 0.2746 ) }
    dend_27 { pt3dadd( 561.667, 226.364, 146.084, 0.2746 ) }
    dend_27 { pt3dadd( 562.776, 226.632, 145.925, 0.2746 ) }
    dend_27 { pt3dadd( 563.883, 226.901, 145.742, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( 564.992, 227.169, 145.545, 0.2746 ) }
    dend_27 { pt3dadd( 566.099, 227.438, 145.344, 0.2746 ) }
    dend_27 { pt3dadd( 567.208, 227.705, 145.151, 0.2744 ) }
    dend_27 { pt3dadd( 568.315, 227.973, 144.971, 0.2744 ) }
    dend_27 { pt3dadd( 569.424, 228.247, 144.817, 0.2742 ) }
    dend_27 { pt3dadd( 570.529, 228.543, 144.711, 0.2736 ) }
    dend_27 { pt3dadd( 571.635, 228.837, 144.644, 0.2728 ) }
    dend_27 { pt3dadd( 572.713, 229.22, 144.607, 0.2712 ) }
    dend_27 { pt3dadd( 573.786, 229.617, 144.589, 0.2684 ) }
    dend_27 { pt3dadd( 574.858, 230.014, 144.584, 0.2626 ) }
    dend_27 { pt3dadd( 575.931, 230.411, 144.584, 0.2542 ) }
    dend_27 { pt3dadd( 577.004, 230.808, 144.584, 0.2288 ) }
    dend_27 { pt3dadd( 578.077, 231.205, 144.584, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 13/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 517.228, 311.193, 86.8798, 0.283 ) }
    dend_25 { pt3dadd( 517.913, 311.169, 85.7581, 0.2288 ) }
    dend_25 { pt3dadd( 519.056, 311.153, 85.8796, 0.2882 ) }
    dend_25 { pt3dadd( 520.184, 311.014, 85.9314, 0.2998 ) }
    dend_25 { pt3dadd( 521.297, 310.756, 86.0079, 0.3222 ) }
    dend_25 { pt3dadd( 522.417, 310.533, 86.112, 0.359 ) }
    dend_25 { pt3dadd( 523.51, 310.311, 86.296, 0.4508 ) }
    dend_25 { pt3dadd( 524.606, 310.253, 86.5939, 0.5058 ) }
    dend_25 { pt3dadd( 525.741, 310.27, 86.9053, 0.4792 ) }
    dend_25 { pt3dadd( 526.857, 310.448, 87.197, 0.5986 ) }
    dend_25 { pt3dadd( 527.965, 310.67, 87.4731, 0.4564 ) }
    dend_25 { pt3dadd( 529.069, 310.534, 87.7492, 0.358 ) }
    dend_25 { pt3dadd( 530.125, 310.17, 88.0636, 0.2876 ) }
    dend_25 { pt3dadd( 530.872, 309.422, 88.3515, 0.2998 ) }
    dend_25 { pt3dadd( 531.123, 308.329, 88.615, 0.3162 ) }
    dend_25 { pt3dadd( 531.723, 307.468, 88.9176, 0.377 ) }
    dend_25 { pt3dadd( 532.833, 307.336, 89.1682, 0.341 ) }
    dend_25 { pt3dadd( 533.964, 307.173, 89.362, 0.3126 ) }
    dend_25 { pt3dadd( 535.073, 306.893, 89.5115, 0.299 ) }
    dend_25 { pt3dadd( 536.113, 306.43, 89.668, 0.3148 ) }
    dend_25 { pt3dadd( 537.173, 306.163, 89.9083, 0.3746 ) }
    dend_25 { pt3dadd( 538.295, 305.955, 90.1004, 0.3362 ) }
    dend_25 { pt3dadd( 539.435, 305.863, 90.2446, 0.304 ) }
    dend_25 { pt3dadd( 540.491, 305.433, 90.3465, 0.2826 ) }
    dend_25 { pt3dadd( 541.548, 304.996, 90.4092, 0.288 ) }
    dend_25 { pt3dadd( 542.631, 304.628, 90.4372, 0.305 ) }
    dend_25 { pt3dadd( 543.735, 304.327, 90.44, 0.305 ) }
    dend_25 { pt3dadd( 544.773, 303.846, 90.44, 0.4576 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 41/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 517.228, 311.193, 86.8798, 0.283 ) }
    dend_24 { pt3dadd( 517.826, 310.359, 86.9025, 0.2906 ) }
    dend_24 { pt3dadd( 518.698, 309.651, 86.9478, 0.3036 ) }
    dend_24 { pt3dadd( 519.653, 309.025, 87.017, 0.3308 ) }
    dend_24 { pt3dadd( 520.598, 308.38, 87.0878, 0.3682 ) }
    dend_24 { pt3dadd( 521.602, 307.841, 87.1716, 0.5002 ) }
    dend_24 { pt3dadd( 522.393, 307.029, 87.2617, 0.4396 ) }
    dend_24 { pt3dadd( 523.006, 306.066, 87.3376, 0.4368 ) }
    dend_24 { pt3dadd( 523.116, 304.933, 87.4003, 0.358 ) }
    dend_24 { pt3dadd( 523.435, 303.836, 87.4566, 0.3396 ) }
    dend_24 { pt3dadd( 523.952, 302.816, 87.5129, 0.3736 ) }
    dend_24 { pt3dadd( 524.691, 301.944, 87.5722, 0.3342 ) }
    dend_24 { pt3dadd( 525.62, 301.288, 87.6784, 0.3006 ) }
    dend_24 { pt3dadd( 526.27, 300.35, 87.8055, 0.2758 ) }
    dend_24 { pt3dadd( 527.103, 299.593, 87.978, 0.2766 ) }
    dend_24 { pt3dadd( 527.615, 298.569, 88.1264, 0.2782 ) }
    dend_24 { pt3dadd( 528.163, 297.566, 88.2504, 0.2814 ) }
    dend_24 { pt3dadd( 528.789, 296.608, 88.3501, 0.2872 ) }
    dend_24 { pt3dadd( 529.43, 295.692, 88.4596, 0.2988 ) }
    dend_24 { pt3dadd( 530.02, 294.82, 88.6544, 0.3142 ) }
    dend_24 { pt3dadd( 530.849, 294.042, 88.7849, 0.3736 ) }
    dend_24 { pt3dadd( 531.469, 293.093, 88.8423, 0.3342 ) }
    dend_24 { pt3dadd( 531.92, 292.048, 88.8031, 0.3006 ) }
    dend_24 { pt3dadd( 532.58, 291.153, 88.7043, 0.2758 ) }
    dend_24 { pt3dadd( 533.368, 290.345, 88.536, 0.2768 ) }
    dend_24 { pt3dadd( 533.741, 289.328, 88.3294, 0.279 ) }
    dend_24 { pt3dadd( 534.178, 288.302, 88.144, 0.2826 ) }
    dend_24 { pt3dadd( 534.729, 287.305, 87.9721, 0.2892 ) }
    dend_24 { pt3dadd( 534.919, 286.204, 87.8422, 0.3016 ) }
    dend_24 { pt3dadd( 534.792, 285.072, 87.7601, 0.3264 ) }
    dend_24 { pt3dadd( 534.632, 283.94, 87.7184, 0.3606 ) }
    dend_24 { pt3dadd( 534.521, 282.801, 87.7055, 0.4848 ) }
    dend_24 { pt3dadd( 534.481, 281.659, 87.7134, 0.4178 ) }
    dend_24 { pt3dadd( 534.477, 280.514, 87.74, 0.3656 ) }
    dend_24 { pt3dadd( 534.477, 279.371, 87.7808, 0.3746 ) }
    dend_24 { pt3dadd( 534.707, 278.26, 87.8352, 0.3358 ) }
    dend_24 { pt3dadd( 535.295, 277.291, 87.9043, 0.3038 ) }
    dend_24 { pt3dadd( 535.647, 276.221, 88.0152, 0.2816 ) }
    dend_24 { pt3dadd( 535.878, 275.124, 88.2115, 0.2876 ) }
    dend_24 { pt3dadd( 536.446, 274.152, 88.4089, 0.2998 ) }
    dend_24 { pt3dadd( 536.546, 273.034, 88.5948, 0.316 ) }
    dend_24 { pt3dadd( 536.735, 271.907, 88.7785, 0.377 ) }
    dend_24 { pt3dadd( 536.782, 270.767, 88.9703, 0.3406 ) }
    dend_24 { pt3dadd( 536.934, 269.634, 89.1848, 0.3126 ) }
    dend_24 { pt3dadd( 537.706, 268.857, 89.49, 0.2988 ) }
    dend_24 { pt3dadd( 538.076, 267.9, 89.9623, 0.3142 ) }
    dend_24 { pt3dadd( 538.608, 266.94, 90.4442, 0.3734 ) }
    dend_24 { pt3dadd( 539.103, 266.232, 91.0731, 0.3338 ) }
    dend_24 { pt3dadd( 539.781, 265.354, 91.5701, 0.3 ) }
    dend_24 { pt3dadd( 539.935, 264.235, 91.9464, 0.2744 ) }
    dend_24 { pt3dadd( 539.866, 263.095, 92.2186, 0.2744 ) }
    dend_24 { pt3dadd( 539.816, 261.952, 92.4146, 0.2742 ) }
    dend_24 { pt3dadd( 539.85, 260.825, 92.5739, 0.2736 ) }
    dend_24 { pt3dadd( 539.923, 259.767, 92.7948, 0.2728 ) }
    dend_24 { pt3dadd( 539.773, 258.695, 93.1193, 0.2712 ) }
    dend_24 { pt3dadd( 539.934, 257.584, 93.427, 0.2684 ) }
    dend_24 { pt3dadd( 540.708, 256.891, 93.7129, 0.2626 ) }
    dend_24 { pt3dadd( 541.62, 256.251, 94.0072, 0.2542 ) }
    dend_24 { pt3dadd( 542.382, 255.714, 94.4625, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_24 { pt3dadd( 543.286, 255.112, 95.48, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 377.38, 282.606, 94.5428, 0.3104 ) }
    dend_16 { pt3dadd( 376.855, 282.33, 94.498, 0.4576 ) }
    dend_16 { pt3dadd( 375.9, 281.82, 93.8504, 0.3856 ) }
    dend_16 { pt3dadd( 374.912, 281.265, 93.6029, 0.3432 ) }
    dend_16 { pt3dadd( 373.914, 280.706, 93.387, 0.3802 ) }
    dend_16 { pt3dadd( 372.873, 280.253, 93.163, 0.3464 ) }
    dend_16 { pt3dadd( 371.949, 279.662, 92.878, 0.3242 ) }
    dend_16 { pt3dadd( 371.126, 278.885, 92.6397, 0.3142 ) }
    dend_16 { pt3dadd( 370.336, 278.058, 92.4857, 0.3734 ) }
    dend_16 { pt3dadd( 369.51, 277.268, 92.3922, 0.3338 ) }
    dend_16 { pt3dadd( 368.651, 276.512, 92.353, 0.3 ) }
    dend_16 { pt3dadd( 367.783, 275.766, 92.3678, 0.2746 ) }
    dend_16 { pt3dadd( 367.292, 274.754, 92.4336, 0.2744 ) }
    dend_16 { pt3dadd( 367.025, 273.644, 92.5364, 0.2744 ) }
    dend_16 { pt3dadd( 366.821, 272.518, 92.6752, 0.2742 ) }
    dend_16 { pt3dadd( 366.731, 271.379, 92.8514, 0.2736 ) }
    dend_16 { pt3dadd( 367.058, 270.315, 93.1325, 0.2728 ) }
    dend_16 { pt3dadd( 367.881, 269.688, 93.597, 0.2712 ) }
    dend_16 { pt3dadd( 368.782, 269.1, 94.1486, 0.2684 ) }
    dend_16 { pt3dadd( 369.821, 268.635, 94.6448, 0.2626 ) }
    dend_16 { pt3dadd( 370.86, 268.171, 95.0746, 0.2542 ) }
    dend_16 { pt3dadd( 371.897, 267.706, 95.4302, 0.2288 ) }
    dend_16 { pt3dadd( 372.936, 267.242, 95.9686, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 24/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 377.38, 282.606, 94.5428, 0.3104 ) }
    dend_15 { pt3dadd( 377.494, 282.158, 94.2007, 0.294 ) }
    dend_15 { pt3dadd( 377.444, 281.076, 93.7544, 0.3112 ) }
    dend_15 { pt3dadd( 376.885, 280.083, 93.352, 0.3384 ) }
    dend_15 { pt3dadd( 376.06, 279.321, 92.9239, 0.4132 ) }
    dend_15 { pt3dadd( 375.23, 278.642, 92.4227, 0.4334 ) }
    dend_15 { pt3dadd( 374.303, 277.995, 91.9671, 0.3604 ) }
    dend_15 { pt3dadd( 373.5, 277.202, 91.6238, 0.302 ) }
    dend_15 { pt3dadd( 373.026, 276.201, 91.3525, 0.2782 ) }
    dend_15 { pt3dadd( 372.06, 275.626, 91.0815, 0.2814 ) }
    dend_15 { pt3dadd( 371.095, 275.188, 90.7418, 0.2872 ) }
    dend_15 { pt3dadd( 369.994, 274.892, 90.5008, 0.2988 ) }
    dend_15 { pt3dadd( 369.134, 274.335, 90.2986, 0.3142 ) }
    dend_15 { pt3dadd( 369.022, 273.332, 90.0323, 0.3736 ) }
    dend_15 { pt3dadd( 368.7, 272.399, 89.8181, 0.3342 ) }
    dend_15 { pt3dadd( 368.1, 271.519, 89.7893, 0.3006 ) }
    dend_15 { pt3dadd( 367.983, 270.625, 90.225, 0.2758 ) }
    dend_15 { pt3dadd( 368.014, 269.788, 91.0815, 0.2766 ) }
    dend_15 { pt3dadd( 368.047, 268.952, 92.2508, 0.2784 ) }
    dend_15 { pt3dadd( 368.079, 268.116, 93.6202, 0.2818 ) }
    dend_15 { pt3dadd( 368.111, 267.28, 95.0648, 0.2878 ) }
    dend_15 { pt3dadd( 368.121, 266.37, 96.4491, 0.3004 ) }
    dend_15 { pt3dadd( 368.041, 265.281, 97.5268, 0.3172 ) }
    dend_15 { pt3dadd( 368.058, 264.14, 98.2946, 0.3792 ) }
    dend_15 { pt3dadd( 368.231, 263.013, 98.8546, 0.3444 ) }
    dend_15 { pt3dadd( 368.552, 261.935, 99.3258, 0.3192 ) }
    dend_15 { pt3dadd( 368.909, 260.872, 99.7696, 0.3112 ) }
    dend_15 { pt3dadd( 369.266, 259.808, 100.221, 0.3382 ) }
    dend_15 { pt3dadd( 369.903, 258.915, 100.716, 0.413 ) }
    dend_15 { pt3dadd( 370.666, 258.11, 101.243, 0.4326 ) }
    dend_15 { pt3dadd( 371.442, 257.318, 101.774, 0.3592 ) }
    dend_15 { pt3dadd( 372.214, 256.509, 102.274, 0.3 ) }
    dend_15 { pt3dadd( 372.764, 255.524, 102.677, 0.2746 ) }
    dend_15 { pt3dadd( 372.921, 254.403, 102.986, 0.2746 ) }
    dend_15 { pt3dadd( 372.308, 253.502, 103.232, 0.2746 ) }
    dend_15 { pt3dadd( 371.99, 252.426, 103.451, 0.2748 ) }
    dend_15 { pt3dadd( 372.428, 251.425, 103.738, 0.2748 ) }
    dend_15 { pt3dadd( 372.946, 250.439, 104.093, 0.2752 ) }
    dend_15 { pt3dadd( 373.406, 249.422, 104.5, 0.2758 ) }
    dend_15 { pt3dadd( 373.372, 248.301, 104.901, 0.2766 ) }
    dend_15 { pt3dadd( 373.289, 247.169, 105.279, 0.2782 ) }
    dend_15 { pt3dadd( 373.206, 246.037, 105.625, 0.2814 ) }
    dend_15 { pt3dadd( 373.308, 244.902, 105.908, 0.2872 ) }
    dend_15 { pt3dadd( 373.558, 243.786, 106.121, 0.2988 ) }
    dend_15 { pt3dadd( 373.662, 242.648, 106.288, 0.3144 ) }
    dend_15 { pt3dadd( 373.211, 241.606, 106.443, 0.374 ) }
    dend_15 { pt3dadd( 372.692, 240.651, 106.707, 0.335 ) }
    dend_15 { pt3dadd( 372.255, 239.594, 106.933, 0.302 ) }
    dend_15 { pt3dadd( 371.898, 238.509, 107.132, 0.2782 ) }
    dend_15 { pt3dadd( 371.714, 237.406, 107.338, 0.2814 ) }
    dend_15 { pt3dadd( 371.266, 236.508, 107.681, 0.2872 ) }
    dend_15 { pt3dadd( 370.497, 235.715, 107.941, 0.299 ) }
    dend_15 { pt3dadd( 369.642, 235.158, 108.12, 0.3146 ) }
    dend_15 { pt3dadd( 369.295, 234.088, 108.246, 0.3746 ) }
    dend_15 { pt3dadd( 368.672, 233.128, 108.323, 0.3358 ) }
    dend_15 { pt3dadd( 368.19, 232.107, 108.357, 0.3036 ) }
    dend_15 { pt3dadd( 367.918, 230.998, 108.356, 0.2814 ) }
    dend_15 { pt3dadd( 367.682, 229.894, 108.355, 0.287 ) }
    dend_15 { pt3dadd( 367.682, 228.75, 108.353, 0.2988 ) }
    dend_15 { pt3dadd( 367.669, 227.606, 108.35, 0.3142 ) }
    dend_15 { pt3dadd( 367.576, 226.469, 108.346, 0.3734 ) }
    dend_15 { pt3dadd( 367.303, 225.362, 108.341, 0.3338 ) }
    dend_15 { pt3dadd( 366.824, 224.329, 108.333, 0.3 ) }
    dend_15 { pt3dadd( 366.264, 223.332, 108.322, 0.2746 ) }
    dend_15 { pt3dadd( 365.765, 222.303, 108.307, 0.2746 ) }
    dend_15 { pt3dadd( 365.314, 221.253, 108.29, 0.2746 ) }
    dend_15 { pt3dadd( 364.768, 220.266, 108.254, 0.2744 ) }
    dend_15 { pt3dadd( 363.895, 219.577, 108.201, 0.2744 ) }
    dend_15 { pt3dadd( 362.806, 219.289, 108.156, 0.2742 ) }
    dend_15 { pt3dadd( 361.796, 218.865, 108.123, 0.2736 ) }
    dend_15 { pt3dadd( 361.099, 217.988, 108.099, 0.2728 ) }
    dend_15 { pt3dadd( 360.883, 216.904, 108.086, 0.2712 ) }
    dend_15 { pt3dadd( 361.239, 215.855, 108.081, 0.2684 ) }
    dend_15 { pt3dadd( 361.909, 214.93, 108.08, 0.2626 ) }
    dend_15 { pt3dadd( 362.568, 213.997, 108.08, 0.2542 ) }
    dend_15 { pt3dadd( 362.702, 212.876, 108.08, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_15 { pt3dadd( 363.22, 211.869, 108.08, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 1/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 368.755, 332.394, 65.606, 0.5492 ) }
    dend_8 { pt3dadd( 368.147, 331.3, 65.6597, 0.4576 ) }
    dend_8 { pt3dadd( 367.46, 330.57, 64.6232, 0.3986 ) }
    dend_8 { pt3dadd( 366.709, 329.855, 64.1295, 0.3684 ) }
    dend_8 { pt3dadd( 365.932, 329.037, 63.6978, 0.4216 ) }
    dend_8 { pt3dadd( 365.453, 328.011, 63.3548, 0.449 ) }
    dend_8 { pt3dadd( 364.834, 327.054, 63.0882, 0.3904 ) }
    dend_8 { pt3dadd( 364.072, 326.202, 62.881, 0.3518 ) }
    dend_8 { pt3dadd( 363.293, 325.365, 62.7136, 0.3976 ) }
    dend_8 { pt3dadd( 362.577, 324.473, 62.5386, 0.3734 ) }
    dend_8 { pt3dadd( 361.951, 323.516, 62.319, 0.399 ) }
    dend_8 { pt3dadd( 361.288, 322.609, 61.9839, 0.334 ) }
    dend_8 { pt3dadd( 360.585, 321.86, 61.4558, 0.3002 ) }
    dend_8 { pt3dadd( 359.879, 321.13, 60.7863, 0.275 ) }
    dend_8 { pt3dadd( 359.174, 320.4, 60.0387, 0.2754 ) }
    dend_8 { pt3dadd( 358.588, 319.439, 59.4294, 0.2762 ) }
    dend_8 { pt3dadd( 358.016, 318.447, 58.9719, 0.2776 ) }
    dend_8 { pt3dadd( 357.275, 317.579, 58.6463, 0.2798 ) }
    dend_8 { pt3dadd( 356.467, 316.769, 58.4214, 0.2844 ) }
    dend_8 { pt3dadd( 355.655, 315.964, 58.2526, 0.2926 ) }
    dend_8 { pt3dadd( 354.77, 315.254, 58.0482, 0.3094 ) }
    dend_8 { pt3dadd( 353.838, 314.662, 57.7368, 0.3334 ) }
    dend_8 { pt3dadd( 352.9, 314.079, 57.3415, 0.41 ) }
    dend_8 { pt3dadd( 352.06, 313.31, 56.985, 0.3976 ) }
    dend_8 { pt3dadd( 351.238, 312.514, 56.6815, 0.4386 ) }
    dend_8 { pt3dadd( 350.498, 311.647, 56.4007, 0.4332 ) }
    dend_8 { pt3dadd( 350.09, 310.632, 56.065, 0.36 ) }
    dend_8 { pt3dadd( 349.704, 309.606, 55.6945, 0.3012 ) }
    dend_8 { pt3dadd( 348.928, 308.778, 55.403, 0.2768 ) }
    dend_8 { pt3dadd( 348.02, 308.083, 55.1891, 0.2786 ) }
    dend_8 { pt3dadd( 346.919, 307.788, 55.0446, 0.2826 ) }
    dend_8 { pt3dadd( 345.78, 307.688, 54.9632, 0.288 ) }
    dend_8 { pt3dadd( 344.765, 307.165, 54.9329, 0.305 ) }
    dend_8 { pt3dadd( 343.974, 306.34, 54.9293, 0.305 ) }
    dend_8 { pt3dadd( 343.326, 305.398, 54.9293, 0.4576 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 36/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 368.755, 332.394, 65.606, 0.5492 ) }
    dend_3 { pt3dadd( 368.417, 332.493, 65.17, 0.4118 ) }
    dend_3 { pt3dadd( 367.392, 332.794, 64.6738, 0.4118 ) }
    dend_3 { pt3dadd( 366.356, 333.117, 64.1785, 0.4118 ) }
    dend_3 { pt3dadd( 365.308, 333.523, 63.7759, 0.4118 ) }
    dend_3 { pt3dadd( 364.205, 333.776, 63.4872, 0.4118 ) }
    dend_3 { pt3dadd( 363.069, 333.728, 63.2906, 0.4118 ) }
    dend_3 { pt3dadd( 361.934, 333.582, 63.177, 0.4118 ) }
    dend_3 { pt3dadd( 360.8, 333.431, 63.1288, 0.4118 ) }
    dend_3 { pt3dadd( 359.675, 333.233, 63.1128, 0.4118 ) }
    dend_3 { pt3dadd( 358.552, 333.009, 63.1033, 0.4118 ) }
    dend_3 { pt3dadd( 357.431, 332.778, 63.0896, 0.4118 ) }
    dend_3 { pt3dadd( 356.345, 332.435, 63.0711, 0.4118 ) }
    dend_3 { pt3dadd( 355.398, 331.818, 63.0448, 0.4118 ) }
    dend_3 { pt3dadd( 354.656, 330.957, 63.0073, 0.4118 ) }
    dend_3 { pt3dadd( 353.978, 330.036, 62.9549, 0.4118 ) }
    dend_3 { pt3dadd( 353.074, 329.379, 62.8835, 0.4118 ) }
    dend_3 { pt3dadd( 351.98, 329.07, 62.7903, 0.4118 ) }
    dend_3 { pt3dadd( 350.871, 329.199, 62.6402, 0.4118 ) }
    dend_3 { pt3dadd( 349.809, 329.589, 62.4215, 0.4118 ) }
    dend_3 { pt3dadd( 348.762, 330.017, 62.1505, 0.4118 ) }
    dend_3 { pt3dadd( 347.715, 330.444, 61.8484, 0.4118 ) }
    dend_3 { pt3dadd( 346.668, 330.872, 61.5348, 0.4118 ) }
    dend_3 { pt3dadd( 345.621, 331.3, 61.2273, 0.4118 ) }
    dend_3 { pt3dadd( 344.529, 331.625, 60.9717, 0.4118 ) }
    dend_3 { pt3dadd( 343.41, 331.861, 60.7897, 0.4118 ) }
    dend_3 { pt3dadd( 342.288, 332.079, 60.6698, 0.4118 ) }
    dend_3 { pt3dadd( 341.15, 332.182, 60.5945, 0.4118 ) }
    dend_3 { pt3dadd( 340.008, 332.152, 60.5464, 0.4118 ) }
    dend_3 { pt3dadd( 338.871, 332.025, 60.5097, 0.4118 ) }
    dend_3 { pt3dadd( 337.751, 331.8, 60.4677, 0.4118 ) }
    dend_3 { pt3dadd( 336.615, 331.677, 60.4083, 0.4118 ) }
    dend_3 { pt3dadd( 335.473, 331.612, 60.3263, 0.4118 ) }
    dend_3 { pt3dadd( 334.642, 332.28, 60.2196, 0.4118 ) }
    dend_3 { pt3dadd( 333.898, 333.15, 60.0802, 0.4118 ) }
    dend_3 { pt3dadd( 333.295, 334.071, 59.8217, 0.4118 ) }
    dend_3 { pt3dadd( 332.727, 335.004, 59.4583, 0.4118 ) }
    dend_3 { pt3dadd( 332.033, 335.898, 59.0996, 0.4118 ) }
    dend_3 { pt3dadd( 331.265, 336.744, 58.7894, 0.4118 ) }
    dend_3 { pt3dadd( 330.355, 337.433, 58.5214, 0.4118 ) }
    dend_3 { pt3dadd( 329.25, 337.609, 58.2851, 0.4118 ) }
    dend_3 { pt3dadd( 328.257, 337.088, 58.072, 0.4118 ) }
    dend_3 { pt3dadd( 327.198, 336.869, 57.748, 0.4118 ) }
    dend_3 { pt3dadd( 326.13, 336.72, 57.3135, 0.4118 ) }
    dend_3 { pt3dadd( 325.063, 336.575, 56.8081, 0.4118 ) }
    dend_3 { pt3dadd( 323.941, 336.478, 56.3469, 0.4118 ) }
    dend_3 { pt3dadd( 322.799, 336.421, 56.0031, 0.4118 ) }
    dend_3 { pt3dadd( 321.659, 336.334, 55.7752, 0.4118 ) }
    dend_3 { pt3dadd( 320.518, 336.243, 55.6522, 0.4118 ) }
    dend_3 { pt3dadd( 319.376, 336.165, 55.6046, 0.4118 ) }
    dend_3 { pt3dadd( 318.233, 336.114, 55.601, 0.4118 ) }
    dend_3 { pt3dadd( 317.091, 336.071, 55.6161, 0.4118 ) }
    dend_3 { pt3dadd( 315.948, 336.106, 55.6396, 0.4118 ) }
    dend_3 { pt3dadd( 314.911, 335.651, 55.671, 0.4118 ) }
    dend_3 { pt3dadd( 313.975, 334.994, 55.7105, 0.4118 ) }
    dend_3 { pt3dadd( 312.939, 334.514, 55.757, 0.4118 ) }
    dend_3 { pt3dadd( 311.825, 334.414, 55.8827, 0.4118 ) }
    dend_3 { pt3dadd( 310.684, 334.38, 56.0157, 0.4118 ) }
    dend_3 { pt3dadd( 309.561, 334.166, 56.1204, 0.4118 ) }
    dend_3 { pt3dadd( 308.435, 333.962, 56.1968, 0.4118 ) }
    dend_3 { pt3dadd( 307.293, 333.9, 56.247, 0.4118 ) }
    dend_3 { pt3dadd( 306.224, 333.501, 56.2738, 0.4118 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 306.224, 333.501, 56.2738, 0.4118 ) }
    dend_5 { pt3dadd( 305.232, 332.746, 56.2797, 0.3432 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_5 { pt3dadd( 304.257, 332.165, 56.28, 0.3432 ) }
    dend_5 { pt3dadd( 303.431, 331.376, 56.28, 0.3432 ) }
    dend_5 { pt3dadd( 302.601, 330.605, 56.28, 0.3432 ) }
    dend_5 { pt3dadd( 301.6, 330.059, 56.28, 0.3432 ) }
    dend_5 { pt3dadd( 300.529, 329.656, 56.2803, 0.3432 ) }
    dend_5 { pt3dadd( 299.442, 329.299, 56.2803, 0.3432 ) }
    dend_5 { pt3dadd( 298.359, 328.933, 56.2803, 0.3432 ) }
    dend_5 { pt3dadd( 297.248, 328.701, 56.2803, 0.3432 ) }
    dend_5 { pt3dadd( 296.104, 328.671, 56.2806, 0.3432 ) }
    dend_5 { pt3dadd( 294.961, 328.706, 56.2808, 0.3432 ) }
    dend_5 { pt3dadd( 293.822, 328.807, 56.2811, 0.3432 ) }
    dend_5 { pt3dadd( 292.684, 328.926, 56.2817, 0.3432 ) }
    dend_5 { pt3dadd( 291.569, 329.152, 56.2822, 0.3432 ) }
    dend_5 { pt3dadd( 290.495, 329.544, 56.2831, 0.3432 ) }
    dend_5 { pt3dadd( 289.421, 329.938, 56.2842, 0.3432 ) }
    dend_5 { pt3dadd( 288.366, 330.374, 56.2859, 0.3432 ) }
    dend_5 { pt3dadd( 287.327, 330.846, 56.2884, 0.3432 ) }
    dend_5 { pt3dadd( 286.223, 331.104, 56.2918, 0.3432 ) }
    dend_5 { pt3dadd( 285.081, 331.165, 56.2962, 0.3432 ) }
    dend_5 { pt3dadd( 283.937, 331.188, 56.3027, 0.3432 ) }
    dend_5 { pt3dadd( 282.802, 331.096, 56.3119, 0.3432 ) }
    dend_5 { pt3dadd( 281.716, 330.765, 56.3245, 0.3432 ) }
    dend_5 { pt3dadd( 280.67, 330.3, 56.3424, 0.3432 ) }
    dend_5 { pt3dadd( 279.608, 329.876, 56.3674, 0.3432 ) }
    dend_5 { pt3dadd( 278.577, 329.393, 56.4015, 0.3432 ) }
    dend_5 { pt3dadd( 277.727, 328.661, 56.45, 0.3432 ) }
    dend_5 { pt3dadd( 276.975, 327.804, 56.5194, 0.3432 ) }
    dend_5 { pt3dadd( 276.128, 327.035, 56.6166, 0.3432 ) }
    dend_5 { pt3dadd( 275.162, 326.456, 56.7454, 0.3432 ) }
    dend_5 { pt3dadd( 274.052, 326.269, 56.9097, 0.3432 ) }
    dend_5 { pt3dadd( 272.961, 326.319, 57.1962, 0.3432 ) }
    dend_5 { pt3dadd( 272.003, 326.71, 57.6302, 0.3432 ) }
    dend_5 { pt3dadd( 271.001, 327.175, 58.0975, 0.3432 ) }
    dend_5 { pt3dadd( 269.882, 327.298, 58.5365, 0.3432 ) }
    dend_5 { pt3dadd( 268.779, 327.272, 58.9991, 0.3432 ) }
    dend_5 { pt3dadd( 267.751, 326.897, 59.4345, 0.3432 ) }
    dend_5 { pt3dadd( 266.775, 326.304, 59.7738, 0.3432 ) }
    dend_5 { pt3dadd( 265.796, 325.714, 60.0348, 0.3432 ) }
    dend_5 { pt3dadd( 264.919, 324.987, 60.263, 0.3432 ) }
    dend_5 { pt3dadd( 264.153, 324.14, 60.4898, 0.3432 ) }
    dend_5 { pt3dadd( 263.305, 323.378, 60.7326, 0.3432 ) }
    dend_5 { pt3dadd( 262.463, 322.605, 61.028, 0.3432 ) }
    dend_5 { pt3dadd( 261.834, 321.843, 61.5468, 0.3432 ) }
    dend_5 { pt3dadd( 261.077, 321.405, 62.2863, 0.3432 ) }
    dend_5 { pt3dadd( 260.087, 321.186, 63.0851, 0.3432 ) }
    dend_5 { pt3dadd( 259.238, 320.465, 63.7832, 0.3432 ) }
    dend_5 { pt3dadd( 258.204, 319.978, 64.2827, 0.3432 ) }
    dend_5 { pt3dadd( 257.311, 319.265, 64.5943, 0.3432 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 48/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 306.224, 333.501, 56.2738, 0.4118 ) }
    dend_4 { pt3dadd( 305.824, 333.603, 56.0011, 0.2746 ) }
    dend_4 { pt3dadd( 304.926, 334.217, 55.8438, 0.2746 ) }
    dend_4 { pt3dadd( 304.357, 335.193, 55.7894, 0.2746 ) }
    dend_4 { pt3dadd( 303.944, 336.259, 55.7466, 0.2746 ) }
    dend_4 { pt3dadd( 303.362, 337.235, 55.7155, 0.2746 ) }
    dend_4 { pt3dadd( 302.865, 338.256, 55.6651, 0.2746 ) }
    dend_4 { pt3dadd( 302.421, 339.308, 55.627, 0.2746 ) }
    dend_4 { pt3dadd( 301.689, 340.16, 55.6419, 0.2746 ) }
    dend_4 { pt3dadd( 300.979, 341.053, 55.6688, 0.2746 ) }
    dend_4 { pt3dadd( 300.484, 342.078, 55.6965, 0.2746 ) }
    dend_4 { pt3dadd( 299.598, 342.736, 55.725, 0.2746 ) }
    dend_4 { pt3dadd( 298.526, 343.131, 55.755, 0.2746 ) }
    dend_4 { pt3dadd( 297.397, 343.302, 55.7808, 0.2746 ) }
    dend_4 { pt3dadd( 296.254, 343.314, 55.8012, 0.2746 ) }
    dend_4 { pt3dadd( 295.211, 342.877, 55.8603, 0.2746 ) }
    dend_4 { pt3dadd( 294.072, 342.857, 55.9096, 0.2746 ) }
    dend_4 { pt3dadd( 292.928, 342.857, 55.9474, 0.2746 ) }
    dend_4 { pt3dadd( 291.784, 342.825, 55.9745, 0.2746 ) }
    dend_4 { pt3dadd( 290.657, 342.635, 55.9916, 0.2746 ) }
    dend_4 { pt3dadd( 289.513, 342.609, 55.9997, 0.2746 ) }
    dend_4 { pt3dadd( 288.517, 342.056, 56.0, 0.2746 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 70/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 257.311, 319.265, 64.5943, 0.3432 ) }
    dend_7 { pt3dadd( 257.129, 319.063, 66.8934, 0.2974 ) }
    dend_7 { pt3dadd( 256.865, 318.177, 67.3632, 0.2974 ) }
    dend_7 { pt3dadd( 256.828, 317.036, 67.5254, 0.2974 ) }
    dend_7 { pt3dadd( 256.723, 315.9, 67.6558, 0.2974 ) }
    dend_7 { pt3dadd( 256.338, 314.836, 67.7592, 0.2974 ) }
    dend_7 { pt3dadd( 255.691, 313.901, 67.8409, 0.2974 ) }
    dend_7 { pt3dadd( 254.985, 313.001, 67.9067, 0.2974 ) }
    dend_7 { pt3dadd( 254.686, 311.94, 67.9624, 0.2974 ) }
    dend_7 { pt3dadd( 254.656, 310.797, 68.0422, 0.2974 ) }
    dend_7 { pt3dadd( 254.654, 309.656, 68.1694, 0.2974 ) }
    dend_7 { pt3dadd( 254.654, 308.513, 68.334, 0.2974 ) }
    dend_7 { pt3dadd( 254.654, 307.369, 68.5252, 0.2974 ) }
    dend_7 { pt3dadd( 254.649, 306.225, 68.7492, 0.2974 ) }
    dend_7 { pt3dadd( 254.01, 305.559, 69.1068, 0.2974 ) }
    dend_7 { pt3dadd( 253.081, 305.084, 69.617, 0.2974 ) }
    dend_7 { pt3dadd( 252.335, 304.299, 70.1753, 0.2974 ) }
    dend_7 { pt3dadd( 251.606, 303.428, 70.6709, 0.2974 ) }
    dend_7 { pt3dadd( 251.171, 302.372, 71.1105, 0.2974 ) }
    dend_7 { pt3dadd( 250.886, 301.27, 71.5154, 0.2974 ) }
    dend_7 { pt3dadd( 250.794, 300.132, 71.8525, 0.2974 ) }
    dend_7 { pt3dadd( 250.402, 299.061, 72.161, 0.2974 ) }
    dend_7 { pt3dadd( 249.827, 298.132, 72.5763, 0.2974 ) }
    dend_7 { pt3dadd( 249.615, 297.099, 73.1304, 0.2974 ) }
    dend_7 { pt3dadd( 249.506, 296.026, 73.7534, 0.2974 ) }
    dend_7 { pt3dadd( 249.506, 294.963, 74.424, 0.2974 ) }
    dend_7 { pt3dadd( 249.494, 293.839, 75.0254, 0.2974 ) }
    dend_7 { pt3dadd( 249.432, 292.696, 75.4902, 0.2974 ) }
    dend_7 { pt3dadd( 249.23, 291.583, 75.8486, 0.2974 ) }
    dend_7 { pt3dadd( 248.859, 290.517, 76.1684, 0.2974 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_7 { pt3dadd( 248.627, 289.423, 76.4907, 0.2974 ) }
    dend_7 { pt3dadd( 248.439, 288.323, 76.8132, 0.2974 ) }
    dend_7 { pt3dadd( 248.184, 287.213, 77.089, 0.2974 ) }
    dend_7 { pt3dadd( 247.888, 286.113, 77.3217, 0.2974 ) }
    dend_7 { pt3dadd( 247.532, 285.052, 77.4894, 0.2974 ) }
    dend_7 { pt3dadd( 246.96, 284.065, 77.6028, 0.2974 ) }
    dend_7 { pt3dadd( 246.466, 283.035, 77.6838, 0.2974 ) }
    dend_7 { pt3dadd( 246.07, 281.978, 77.7568, 0.2974 ) }
    dend_7 { pt3dadd( 245.586, 281.027, 77.8417, 0.2974 ) }
    dend_7 { pt3dadd( 244.69, 280.315, 77.9447, 0.2974 ) }
    dend_7 { pt3dadd( 244.271, 279.316, 78.0682, 0.2974 ) }
    dend_7 { pt3dadd( 244.069, 278.32, 78.3597, 0.2974 ) }
    dend_7 { pt3dadd( 244.015, 277.245, 78.7223, 0.2974 ) }
    dend_7 { pt3dadd( 244.015, 276.105, 79.025, 0.2974 ) }
    dend_7 { pt3dadd( 244.015, 274.961, 79.2498, 0.2974 ) }
    dend_7 { pt3dadd( 244.015, 273.818, 79.4021, 0.2974 ) }
    dend_7 { pt3dadd( 244.37, 272.749, 79.4886, 0.2974 ) }
    dend_7 { pt3dadd( 245.159, 271.929, 79.52, 0.2974 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 18/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 257.311, 319.265, 64.5943, 0.3432 ) }
    dend_6 { pt3dadd( 256.177, 318.869, 64.7357, 0.2974 ) }
    dend_6 { pt3dadd( 255.181, 318.307, 64.752, 0.2974 ) }
    dend_6 { pt3dadd( 254.21, 317.701, 64.6918, 0.2974 ) }
    dend_6 { pt3dadd( 253.318, 316.991, 64.5842, 0.2974 ) }
    dend_6 { pt3dadd( 252.427, 316.28, 64.435, 0.2974 ) }
    dend_6 { pt3dadd( 251.38, 315.913, 64.2351, 0.2974 ) }
    dend_6 { pt3dadd( 250.245, 315.858, 63.9467, 0.2974 ) }
    dend_6 { pt3dadd( 249.192, 316.053, 63.5001, 0.2974 ) }
    dend_6 { pt3dadd( 248.247, 316.565, 62.9222, 0.2974 ) }
    dend_6 { pt3dadd( 247.432, 317.089, 62.1886, 0.2974 ) }
    dend_6 { pt3dadd( 246.569, 317.666, 61.425, 0.2974 ) }
    dend_6 { pt3dadd( 245.84, 318.423, 60.6743, 0.2974 ) }
    dend_6 { pt3dadd( 245.057, 319.214, 60.0692, 0.2974 ) }
    dend_6 { pt3dadd( 244.036, 319.681, 59.647, 0.2974 ) }
    dend_6 { pt3dadd( 242.909, 319.84, 59.3656, 0.2974 ) }
    dend_6 { pt3dadd( 241.766, 319.862, 59.1816, 0.2974 ) }
    dend_6 { pt3dadd( 240.622, 319.862, 59.0425, 0.2974 ) }
    dend_6 { pt3dadd( 239.478, 319.826, 58.9114, 0.2974 ) }
    dend_6 { pt3dadd( 238.381, 319.54, 58.7364, 0.2974 ) }
    dend_6 { pt3dadd( 237.307, 319.28, 58.4458, 0.2974 ) }
    dend_6 { pt3dadd( 236.255, 318.923, 58.0748, 0.2974 ) }
    dend_6 { pt3dadd( 235.307, 318.345, 57.6618, 0.2974 ) }
    dend_6 { pt3dadd( 234.344, 317.779, 57.2415, 0.2974 ) }
    dend_6 { pt3dadd( 233.583, 316.949, 56.9069, 0.2974 ) }
    dend_6 { pt3dadd( 232.87, 316.06, 56.6378, 0.2974 ) }
    dend_6 { pt3dadd( 232.224, 315.118, 56.4609, 0.2974 ) }
    dend_6 { pt3dadd( 231.61, 314.153, 56.3587, 0.2974 ) }
    dend_6 { pt3dadd( 230.902, 313.256, 56.3066, 0.2974 ) }
    dend_6 { pt3dadd( 230.485, 312.195, 56.2839, 0.2974 ) }
    dend_6 { pt3dadd( 230.086, 311.123, 56.2724, 0.2974 ) }
    dend_6 { pt3dadd( 229.61, 310.082, 56.268, 0.2974 ) }
    dend_6 { pt3dadd( 228.905, 309.184, 56.2635, 0.2974 ) }
    dend_6 { pt3dadd( 228.086, 308.386, 56.2562, 0.2974 ) }
    dend_6 { pt3dadd( 227.413, 307.473, 56.2458, 0.2974 ) }
    dend_6 { pt3dadd( 226.328, 307.125, 56.2335, 0.2974 ) }
    dend_6 { pt3dadd( 225.478, 306.379, 56.2226, 0.2974 ) }
    dend_6 { pt3dadd( 224.932, 305.38, 56.1999, 0.2974 ) }
    dend_6 { pt3dadd( 224.385, 304.418, 56.1165, 0.2974 ) }
    dend_6 { pt3dadd( 223.585, 303.604, 56.075, 0.2974 ) }
    dend_6 { pt3dadd( 222.744, 302.832, 56.1134, 0.2974 ) }
    dend_6 { pt3dadd( 222.057, 301.926, 56.2386, 0.2974 ) }
    dend_6 { pt3dadd( 221.548, 300.903, 56.4589, 0.2974 ) }
    dend_6 { pt3dadd( 220.957, 299.956, 56.812, 0.2974 ) }
    dend_6 { pt3dadd( 220.479, 299.31, 57.4476, 0.2974 ) }
    dend_6 { pt3dadd( 219.918, 298.909, 58.3363, 0.2974 ) }
    dend_6 { pt3dadd( 218.853, 298.813, 59.1567, 0.2974 ) }
    dend_6 { pt3dadd( 217.745, 298.635, 59.8892, 0.2974 ) }
    dend_6 { pt3dadd( 216.794, 298.054, 60.4895, 0.2974 ) }
    dend_6 { pt3dadd( 215.808, 297.485, 60.9596, 0.2974 ) }
    dend_6 { pt3dadd( 214.963, 297.099, 61.4995, 0.2974 ) }
    dend_6 { pt3dadd( 213.974, 296.801, 62.0278, 0.2974 ) }
    dend_6 { pt3dadd( 213.168, 296.013, 62.4196, 0.2974 ) }
    dend_6 { pt3dadd( 212.511, 295.176, 62.6959, 0.2974 ) }
    dend_6 { pt3dadd( 211.4, 294.937, 62.8765, 0.2974 ) }
    dend_6 { pt3dadd( 210.256, 294.923, 62.9745, 0.2974 ) }
    dend_6 { pt3dadd( 209.113, 294.896, 63.0025, 0.2974 ) }
    dend_6 { pt3dadd( 207.99, 294.72, 63.0034, 0.2974 ) }
    dend_6 { pt3dadd( 206.898, 294.379, 63.0048, 0.2974 ) }
    dend_6 { pt3dadd( 205.788, 294.105, 63.0067, 0.2974 ) }
    dend_6 { pt3dadd( 204.673, 293.894, 63.0092, 0.2974 ) }
    dend_6 { pt3dadd( 203.53, 293.86, 63.0129, 0.2974 ) }
    dend_6 { pt3dadd( 202.39, 293.783, 63.0179, 0.2974 ) }
    dend_6 { pt3dadd( 201.249, 293.731, 63.0252, 0.2974 ) }
    dend_6 { pt3dadd( 200.139, 293.491, 63.0353, 0.2974 ) }
    dend_6 { pt3dadd( 199.074, 293.072, 63.049, 0.2974 ) }
    dend_6 { pt3dadd( 198.079, 292.551, 63.0686, 0.2974 ) }
    dend_6 { pt3dadd( 197.404, 291.66, 63.0966, 0.2974 ) }
    dend_6 { pt3dadd( 197.033, 290.579, 63.1358, 0.2974 ) }
    dend_6 { pt3dadd( 196.609, 289.529, 63.1879, 0.2974 ) }
    dend_6 { pt3dadd( 195.948, 288.599, 63.2542, 0.2974 ) }
    dend_6 { pt3dadd( 195.051, 288.079, 63.369, 0.2974 ) }
    dend_6 { pt3dadd( 193.992, 287.809, 63.5494, 0.2974 ) }
    dend_6 { pt3dadd( 192.941, 287.39, 63.728, 0.2974 ) }
    dend_6 { pt3dadd( 191.824, 287.22, 63.9142, 0.2974 ) }
    dend_6 { pt3dadd( 190.785, 286.855, 64.0984, 0.2974 ) }
    dend_6 { pt3dadd( 189.78, 286.311, 64.2382, 0.2974 ) }
    dend_6 { pt3dadd( 188.785, 285.751, 64.3308, 0.2974 ) }
    dend_6 { pt3dadd( 187.785, 285.198, 64.3874, 0.2974 ) }
    dend_6 { pt3dadd( 186.763, 284.685, 64.4232, 0.2974 ) }
    dend_6 { pt3dadd( 185.902, 283.959, 64.4468, 0.2974 ) }
    dend_6 { pt3dadd( 185.509, 282.927, 64.4678, 0.2974 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 185.136, 281.853, 64.4946, 0.2974 ) }
    dend_6 { pt3dadd( 184.519, 280.898, 64.5291, 0.2974 ) }
    dend_6 { pt3dadd( 183.764, 280.04, 64.5728, 0.2974 ) }
    dend_6 { pt3dadd( 183.199, 279.073, 64.6727, 0.2974 ) }
    dend_6 { pt3dadd( 183.027, 277.963, 64.7858, 0.2974 ) }
    dend_6 { pt3dadd( 182.348, 277.149, 64.8838, 0.2974 ) }
    dend_6 { pt3dadd( 181.81, 276.167, 64.9664, 0.2974 ) }
    dend_6 { pt3dadd( 181.782, 275.029, 65.0367, 0.2974 ) }
    dend_6 { pt3dadd( 181.774, 273.885, 65.0952, 0.2974 ) }
    dend_6 { pt3dadd( 181.564, 272.762, 65.1431, 0.2974 ) }
    dend_6 { pt3dadd( 181.173, 271.713, 65.2658, 0.2974 ) }
    dend_6 { pt3dadd( 180.412, 270.87, 65.4007, 0.2974 ) }
    dend_6 { pt3dadd( 179.511, 270.167, 65.4903, 0.2974 ) }
    dend_6 { pt3dadd( 178.724, 269.336, 65.5346, 0.2974 ) }
    dend_6 { pt3dadd( 178.005, 268.449, 65.5348, 0.2974 ) }
    dend_6 { pt3dadd( 177.128, 267.718, 65.4797, 0.2974 ) }
    dend_6 { pt3dadd( 176.25, 267.003, 65.3416, 0.2974 ) }
    dend_6 { pt3dadd( 175.423, 266.258, 65.1297, 0.2974 ) }
    dend_6 { pt3dadd( 174.539, 265.538, 64.9662, 0.2974 ) }
    dend_6 { pt3dadd( 173.577, 264.919, 64.8491, 0.2974 ) }
    dend_6 { pt3dadd( 172.696, 264.207, 64.7755, 0.2974 ) }
    dend_6 { pt3dadd( 171.891, 263.422, 64.7408, 0.2974 ) }
    dend_6 { pt3dadd( 170.972, 262.765, 64.7399, 0.2974 ) }
    dend_6 { pt3dadd( 170.171, 261.951, 64.773, 0.2974 ) }
    dend_6 { pt3dadd( 169.392, 261.121, 64.8172, 0.2974 ) }
    dend_6 { pt3dadd( 168.588, 260.318, 64.8458, 0.2974 ) }
    dend_6 { pt3dadd( 167.609, 259.742, 64.8581, 0.2974 ) }
    dend_6 { pt3dadd( 166.819, 258.96, 64.8522, 0.2974 ) }
    dend_6 { pt3dadd( 165.985, 258.192, 64.8259, 0.2974 ) }
    dend_6 { pt3dadd( 164.941, 257.768, 64.7772, 0.2974 ) }
    dend_6 { pt3dadd( 163.881, 257.343, 64.7083, 0.2974 ) }
    dend_6 { pt3dadd( 163.274, 256.441, 64.6184, 0.2974 ) }
    dend_6 { pt3dadd( 163.142, 255.334, 64.4498, 0.2974 ) }
    dend_6 { pt3dadd( 163.261, 254.207, 64.2303, 0.2974 ) }
    dend_6 { pt3dadd( 163.823, 253.231, 63.9954, 0.2974 ) }
    dend_6 { pt3dadd( 163.934, 252.119, 63.7608, 0.2974 ) }
    dend_6 { pt3dadd( 163.809, 251.018, 63.4379, 0.2974 ) }
    dend_6 { pt3dadd( 163.527, 249.923, 63.0882, 0.2974 ) }
    dend_6 { pt3dadd( 163.48, 248.785, 62.7662, 0.2974 ) }
    dend_6 { pt3dadd( 163.359, 247.762, 62.3193, 0.2974 ) }
    dend_6 { pt3dadd( 162.854, 246.768, 61.878, 0.2974 ) }
    dend_6 { pt3dadd( 162.21, 245.847, 61.5017, 0.2974 ) }
    dend_6 { pt3dadd( 161.072, 245.742, 61.231, 0.2974 ) }
    dend_6 { pt3dadd( 159.928, 245.731, 61.0408, 0.2974 ) }
    dend_6 { pt3dadd( 158.785, 245.731, 60.9095, 0.2974 ) }
    dend_6 { pt3dadd( 157.666, 245.71, 60.7608, 0.2974 ) }
    dend_6 { pt3dadd( 156.646, 245.252, 60.66, 0.2974 ) }
    dend_6 { pt3dadd( 156.074, 244.263, 60.5909, 0.2974 ) }
    dend_6 { pt3dadd( 155.609, 243.219, 60.5441, 0.2974 ) }
    dend_6 { pt3dadd( 155.059, 242.22, 60.5192, 0.2974 ) }
    dend_6 { pt3dadd( 154.783, 241.117, 60.5144, 0.2974 ) }
    dend_6 { pt3dadd( 154.783, 239.973, 60.5287, 0.2974 ) }
    dend_6 { pt3dadd( 154.798, 238.829, 60.548, 0.2974 ) }
    dend_6 { pt3dadd( 154.993, 237.727, 60.5738, 0.2974 ) }
    dend_6 { pt3dadd( 155.573, 236.763, 60.6094, 0.2974 ) }
    dend_6 { pt3dadd( 155.698, 235.628, 60.6684, 0.2974 ) }
    dend_6 { pt3dadd( 155.698, 234.487, 60.7516, 0.2974 ) }
    dend_6 { pt3dadd( 155.698, 233.343, 60.8373, 0.2974 ) }
    dend_6 { pt3dadd( 155.698, 232.199, 60.9297, 0.2974 ) }
    dend_6 { pt3dadd( 155.698, 231.055, 61.0316, 0.2974 ) }
    dend_6 { pt3dadd( 155.698, 229.911, 61.1442, 0.2974 ) }
    dend_6 { pt3dadd( 155.648, 228.794, 61.3007, 0.2974 ) }
    dend_6 { pt3dadd( 155.322, 227.792, 61.6039, 0.2974 ) }
    dend_6 { pt3dadd( 154.745, 226.833, 61.9198, 0.2974 ) }
    dend_6 { pt3dadd( 154.098, 225.902, 62.1698, 0.2974 ) }
    dend_6 { pt3dadd( 153.738, 224.829, 62.37, 0.2974 ) }
    dend_6 { pt3dadd( 153.639, 223.695, 62.5335, 0.2974 ) }
    dend_6 { pt3dadd( 153.639, 222.551, 62.6321, 0.2974 ) }
    dend_6 { pt3dadd( 153.639, 221.408, 62.6774, 0.2974 ) }
    dend_6 { pt3dadd( 153.639, 220.264, 62.7007, 0.2974 ) }
    dend_6 { pt3dadd( 153.643, 219.12, 62.7144, 0.2974 ) }
    dend_6 { pt3dadd( 153.862, 218.041, 62.7194, 0.2974 ) }
    dend_6 { pt3dadd( 154.375, 217.035, 62.7194, 0.2974 ) }
    dend_6 { pt3dadd( 154.536, 215.914, 62.7194, 0.2974 ) }
    dend_6 { pt3dadd( 154.202, 214.89, 62.7192, 0.2974 ) }
    dend_6 { pt3dadd( 153.588, 213.949, 62.7189, 0.2974 ) }
    dend_6 { pt3dadd( 153.318, 212.849, 62.7183, 0.2974 ) }
    dend_6 { pt3dadd( 153.227, 211.709, 62.7175, 0.2974 ) }
    dend_6 { pt3dadd( 153.171, 210.567, 62.7166, 0.2974 ) }
    dend_6 { pt3dadd( 153.067, 209.431, 62.7152, 0.2974 ) }
    dend_6 { pt3dadd( 152.958, 208.296, 62.7136, 0.2974 ) }
    dend_6 { pt3dadd( 152.948, 207.152, 62.7108, 0.2974 ) }
    dend_6 { pt3dadd( 152.828, 206.02, 62.7071, 0.2974 ) }
    dend_6 { pt3dadd( 152.541, 204.913, 62.7021, 0.2974 ) }
    dend_6 { pt3dadd( 152.264, 203.806, 62.6948, 0.2974 ) }
    dend_6 { pt3dadd( 151.851, 202.76, 62.6847, 0.2974 ) }
    dend_6 { pt3dadd( 151.413, 201.721, 62.671, 0.2974 ) }
    dend_6 { pt3dadd( 151.174, 200.604, 62.6517, 0.2974 ) }
    dend_6 { pt3dadd( 150.891, 199.496, 62.6237, 0.2974 ) }
    dend_6 { pt3dadd( 150.357, 198.5, 62.5836, 0.2974 ) }
    dend_6 { pt3dadd( 149.827, 197.49, 62.5313, 0.2974 ) }
    dend_6 { pt3dadd( 149.457, 196.41, 62.4672, 0.2974 ) }
    dend_6 { pt3dadd( 149.285, 195.286, 62.3647, 0.2974 ) }
    dend_6 { pt3dadd( 149.189, 194.195, 62.1552, 0.2974 ) }
    dend_6 { pt3dadd( 148.648, 193.224, 61.9637, 0.2974 ) }
    dend_6 { pt3dadd( 147.908, 192.352, 61.8195, 0.2974 ) }
    dend_6 { pt3dadd( 147.033, 191.618, 61.7193, 0.2974 ) }
    dend_6 { pt3dadd( 146.135, 190.91, 61.6608, 0.2974 ) }
    dend_6 { pt3dadd( 145.39, 190.045, 61.6403, 0.2974 ) }
    dend_6 { pt3dadd( 144.485, 189.347, 61.6501, 0.2974 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_6 { pt3dadd( 143.923, 188.36, 61.67, 0.2974 ) }
    dend_6 { pt3dadd( 143.915, 187.218, 61.698, 0.2974 ) }
    dend_6 { pt3dadd( 144.289, 186.138, 61.7378, 0.2974 ) }
    dend_6 { pt3dadd( 144.487, 185.011, 61.7929, 0.2974 ) }
    dend_6 { pt3dadd( 144.487, 183.867, 61.8668, 0.2974 ) }
    dend_6 { pt3dadd( 144.487, 182.723, 61.9676, 0.2974 ) }
    dend_6 { pt3dadd( 144.486, 181.584, 62.1286, 0.2974 ) }
    dend_6 { pt3dadd( 144.255, 180.483, 62.3638, 0.2974 ) }
    dend_6 { pt3dadd( 143.403, 179.729, 62.627, 0.2974 ) }
    dend_6 { pt3dadd( 142.801, 178.765, 62.9023, 0.2974 ) }
    dend_6 { pt3dadd( 142.542, 177.682, 63.2388, 0.2974 ) }
    dend_6 { pt3dadd( 142.493, 176.568, 63.6488, 0.2974 ) }
    dend_6 { pt3dadd( 142.355, 175.456, 64.0875, 0.2974 ) }
    dend_6 { pt3dadd( 142.197, 174.55, 64.6937, 0.2974 ) }
    dend_6 { pt3dadd( 142.088, 173.708, 65.4203, 0.2974 ) }
    dend_6 { pt3dadd( 142.085, 172.575, 66.0204, 0.2974 ) }
    dend_6 { pt3dadd( 142.085, 171.431, 66.4546, 0.2974 ) }
    dend_6 { pt3dadd( 142.085, 170.287, 66.7461, 0.2974 ) }
    dend_6 { pt3dadd( 142.085, 169.143, 66.9228, 0.2974 ) }
    dend_6 { pt3dadd( 142.041, 168.0, 67.009, 0.2974 ) }
    dend_6 { pt3dadd( 141.839, 166.881, 67.055, 0.2974 ) }
    dend_6 { pt3dadd( 141.489, 165.792, 67.1084, 0.2974 ) }
    dend_6 { pt3dadd( 140.988, 164.775, 67.1849, 0.2974 ) }
    dend_6 { pt3dadd( 140.531, 163.745, 67.2918, 0.2974 ) }
    dend_6 { pt3dadd( 140.384, 162.617, 67.4372, 0.2974 ) }
    dend_6 { pt3dadd( 140.369, 161.473, 67.6259, 0.2974 ) }
    dend_6 { pt3dadd( 140.501, 160.383, 67.9325, 0.2974 ) }
    dend_6 { pt3dadd( 140.832, 159.35, 68.3878, 0.2974 ) }
    dend_6 { pt3dadd( 141.183, 158.3, 68.9259, 0.2974 ) }
    dend_6 { pt3dadd( 141.282, 157.228, 69.5383, 0.2974 ) }
    dend_6 { pt3dadd( 141.261, 156.113, 70.1481, 0.2974 ) }
    dend_6 { pt3dadd( 141.132, 154.994, 70.7134, 0.2974 ) }
    dend_6 { pt3dadd( 140.865, 153.909, 71.237, 0.2974 ) }
    dend_6 { pt3dadd( 140.269, 153.027, 71.7679, 0.2974 ) }
    dend_6 { pt3dadd( 139.716, 152.027, 72.1543, 0.2974 ) }
    dend_6 { pt3dadd( 138.842, 151.3, 72.4268, 0.2974 ) }
    dend_6 { pt3dadd( 138.774, 150.163, 72.6541, 0.2974 ) }
    dend_6 { pt3dadd( 138.939, 149.031, 72.8188, 0.2974 ) }
    dend_6 { pt3dadd( 138.996, 147.888, 72.9406, 0.2974 ) }
    dend_6 { pt3dadd( 138.979, 146.747, 73.0467, 0.2974 ) }
    dend_6 { pt3dadd( 138.744, 145.628, 73.1718, 0.2974 ) }
    dend_6 { pt3dadd( 138.653, 144.488, 73.327, 0.2974 ) }
    dend_6 { pt3dadd( 138.6, 143.363, 73.5381, 0.2974 ) }
    dend_6 { pt3dadd( 137.923, 142.478, 73.8648, 0.2974 ) }
    dend_6 { pt3dadd( 136.979, 141.867, 74.2787, 0.2974 ) }
    dend_6 { pt3dadd( 136.078, 141.281, 74.7718, 0.2974 ) }
    dend_6 { pt3dadd( 135.678, 140.41, 75.413, 0.2974 ) }
    dend_6 { pt3dadd( 135.678, 139.283, 76.0707, 0.2974 ) }
    dend_6 { pt3dadd( 135.678, 138.173, 76.7656, 0.2974 ) }
    dend_6 { pt3dadd( 135.683, 137.077, 77.4925, 0.2974 ) }
    dend_6 { pt3dadd( 136.102, 136.332, 78.3026, 0.2974 ) }
    dend_6 { pt3dadd( 136.516, 135.466, 79.0913, 0.2974 ) }
    dend_6 { pt3dadd( 136.937, 134.546, 79.8972, 0.2974 ) }
    dend_6 { pt3dadd( 137.095, 133.456, 80.5935, 0.2974 ) }
    dend_6 { pt3dadd( 137.334, 132.339, 81.1518, 0.2974 ) }
    dend_6 { pt3dadd( 137.694, 131.773, 81.8846, 0.2974 ) }
    dend_6 { pt3dadd( 138.195, 130.874, 82.581, 0.2974 ) }
    dend_6 { pt3dadd( 138.195, 129.73, 83.0833, 0.2974 ) }
    dend_6 { pt3dadd( 138.195, 128.586, 83.72, 0.2974 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_43, dend_40, dend_33, dend_30, dend_29, dend_18, dend_11, dend_0, dend_42, dend_41, dend_39, dend_34, dend_32, dend_31, dend_22, dend_19, dend_13, dend_12, dend_10, dend_1, dend_36, dend_35, dend_26, dend_23, dend_21, dend_20, dend_17, dend_14, dend_9, dend_2, dend_38, dend_37, dend_28, dend_27, dend_25, dend_24, dend_16, dend_15, dend_8, dend_3, dend_5, dend_4, dend_7, dend_6]}
    dend = new SectionList()
    dend_43 dend.append()
    dend_40 dend.append()
    dend_33 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_18 dend.append()
    dend_11 dend.append()
    dend_0 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_39 dend.append()
    dend_34 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_10 dend.append()
    dend_1 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_26 dend.append()
    dend_23 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_17 dend.append()
    dend_14 dend.append()
    dend_9 dend.append()
    dend_2 dend.append()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_8 dend.append()
    dend_3 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_1161, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1161 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1161.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 4.371848  // units: uF/cm2
    forsec axon cm = 4.371848  // units: uF/cm2
    forsec dend cm = 4.371848  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 30.880049  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 4.8449004E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.16245225  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.3899197E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 2.7082612E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 1.1736213  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.017917162  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 4.810469E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 8.152512E-9  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 9.454739E-7  // units: S cm-2
        e_pas_nml2 = -84.206  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 3.0887375E-5  // units: S cm-2
        e_pas_nml2 = -84.206  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.0118024E-7  // units: S cm-2
        e_pas_nml2 = -84.206  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 7.8431226E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.009186071  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_471081668
    forsec soma {
        insert CaDynamics_471081668
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 7
    dend_40 nseg = 9
    dend_32 nseg = 5
    dend_13 nseg = 3
    dend_12 nseg = 5
    dend_10 nseg = 3
    dend_36 nseg = 5
    dend_35 nseg = 9
    dend_26 nseg = 9
    dend_23 nseg = 3
    dend_21 nseg = 5
    dend_20 nseg = 3
    dend_17 nseg = 9
    dend_14 nseg = 3
    dend_9 nseg = 3
    dend_2 nseg = 3
    dend_38 nseg = 7
    dend_37 nseg = 5
    dend_28 nseg = 5
    dend_27 nseg = 3
    dend_24 nseg = 3
    dend_15 nseg = 5
    dend_8 nseg = 3
    dend_3 nseg = 3
    dend_5 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_471081668


