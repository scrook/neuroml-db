// Cell: bNAC219_L23_BP_e8c88c2686_0_0
/*
{
  "id" : "bNAC219_L23_BP_e8c88c2686_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.47449, 10.7418, 1.66", "-0.629351, -10.6159, 12.6096, 1.66", "-1.25152, -12.9273, 14.6255, 1.66", "-2.32001, -16.8966, 18.0876, 1.39", "-6.56942, -32.6829, 31.8564, 1.11", "-7.31487, -35.4522, 34.2718, 1.11", "-8.25899, -38.9595, 37.3309, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.47601, -0.778182, 1.39", "0.627681, 12.9533, 1.73753, 0.83", "0.631169, 14.7568, 2.56588, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.25899, -38.9595, 37.3309, 0.83", "-8.44183, -43.8203, 35.6266, 0.83", "-8.48536, -44.9776, 35.2207, 0.83", "-8.59649, -47.932, 34.1848, 0.83", "-8.6463, -49.2564, 33.7205, 0.83", "-8.75343, -52.1045, 32.7218, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.25899, -38.9595, 37.3309, 0.83", "-8.23415, -40.0164, 37.5192, 0.83", "-8.21127, -40.9737, 37.6743, 0.83", "-8.22394, -42.2291, 37.8581, 0.83", "-8.1961, -45.0978, 38.2, 0.83", "-8.1383, -47.4649, 38.4457, 0.55", "-8.03757, -51.4806, 38.7693, 0.55", "-7.92878, -53.4759, 38.9513, 0.83", "-7.74917, -55.7561, 39.1646, 0.55", "-7.34359, -59.4761, 39.6356, 0.55", "-7.20525, -60.5377, 39.7849, 0.55", "-6.82119, -63.4159, 40.2074, 0.55", "-6.32793, -67.0433, 40.838, 0.55", "-6.03639, -69.2151, 41.2418, 0.55", "-5.67891, -72.1075, 41.8069, 0.55", "-5.23161, -77.3208, 42.877, 0.55", "-5.07937, -80.0756, 43.4274, 0.55", "-5.01218, -82.1339, 43.8055, 0.55", "-5.05474, -83.565, 44.0, 0.55", "-5.16055, -84.8208, 44.1402, 0.55", "-5.49026, -87.3407, 44.4753, 0.55", "-5.68643, -88.6027, 44.6531, 0.55", "-5.99999, -90.5287, 45.0108, 0.55", "-6.43108, -93.1071, 45.5353, 0.55", "-7.10328, -96.8278, 46.351, 0.55", "-7.68814, -100.175, 47.1389, 0.55", "-8.22977, -103.095, 47.8909, 0.83", "-8.75962, -105.881, 48.7132, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.631169, 14.7568, 2.56588, 0.83", "0.602461, 20.7388, -0.446788, 0.83", "0.645121, 22.3148, -1.17684, 0.83", "0.696498, 24.2464, -2.09228, 0.83", "0.763034, 25.8419, -2.79844, 0.83", "0.881673, 28.3932, -3.87063, 0.83", "1.08074, 31.7296, -5.1937, 0.83", "1.19367, 34.102, -5.92722, 0.83", "1.34132, 36.6686, -6.76821, 0.83", "1.53318, 39.303, -7.74204, 0.55", "1.59402, 40.1373, -8.05567, 0.55", "1.67455, 41.5649, -8.60236, 0.55", "1.88512, 44.5453, -9.68553, 0.55", "2.01458, 46.7078, -10.4435, 0.55", "2.38523, 52.1266, -12.3346, 0.55", "2.52888, 54.5727, -13.2992, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.631169, 14.7568, 2.56588, 0.83", "1.609, 18.0527, 4.15546, 0.83", "2.28101, 20.6582, 5.48484, 0.83", "3.18321, 24.7763, 7.69142, 0.83", "3.99601, 28.7486, 9.84375, 0.83", "4.93522, 33.7801, 12.3011, 0.83", "5.66878, 37.5713, 14.0455, 0.83", "6.11491, 40.4445, 15.338, 0.83", "6.60196, 43.5961, 16.6302, 0.83", "6.71222, 44.4549, 16.9196, 0.83", "8.13588, 54.3177, 19.6947, 0.83", "8.43465, 56.4137, 20.1257, 0.83", "8.8601, 59.2624, 20.5483, 0.83", "9.21915, 61.7285, 20.8472, 0.83", "9.60319, 64.59, 21.129, 0.83", "10.1155, 68.203, 21.4963, 0.83", "10.5507, 71.9305, 21.8284, 0.83", "10.8372, 74.058, 22.0335, 0.83", "11.3729, 77.344, 22.3776, 0.83", "11.8427, 80.578, 22.7047, 0.83", "12.4087, 83.9731, 23.0283, 0.83", "13.1319, 88.4113, 23.5003, 0.83", "13.5628, 91.3132, 23.9462, 0.83", "13.7561, 92.9216, 24.2283, 0.83", "13.9086, 94.7446, 24.6309, 0.83", "14.0791, 97.4451, 25.39, 0.83", "14.0699, 101.425, 26.7053, 0.55", "14.0134, 106.647, 28.6567, 0.55", "13.9092, 108.188, 29.2313, 0.55", "13.6826, 111.428, 30.416, 0.55", "13.5588, 112.788, 30.8798, 0.55", "13.287, 115.341, 31.7293, 0.55", "13.0924, 117.999, 32.505, 0.55", "13.0505, 121.848, 33.4626, 0.55", "13.0438, 124.384, 34.0567, 0.55", "13.0213, 126.692, 34.5073, 0.55", "13.0748, 129.572, 35.0854, 0.55", "13.3256, 132.562, 35.6889, 0.55", "13.7709, 136.634, 36.6157, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-8.75343, -52.1045, 32.7218, 0.83", "-9.98088, -57.211, 34.7407, 0.83", "-10.8882, -61.2553, 36.153, 0.83", "-11.9112, -66.1308, 37.6505, 0.83", "-12.7288, -70.1627, 38.7526, 0.83", "-13.2257, -72.6129, 39.4224, 0.83", "-13.8181, -75.5344, 40.2209, 0.83", "-14.1298, -77.6342, 40.67, 0.83", "-14.4516, -80.0305, 41.079, 0.83", "-14.6798, -83.0838, 41.1647, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.75343, -52.1045, 32.7218, 0.55", "-10.4061, -51.6674, 41.2375, 0.55", "-11.935, -51.0668, 50.3905, 0.55", "-12.7116, -50.7617, 55.04, 0.55", "-13.6898, -50.3775, 60.8962, 0.28", "-13.8514, -50.314, 61.8636, 0.83", "-14.6991, -49.981, 66.9387, 0.28", "-14.8312, -49.8646, 67.8049, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.52888, 54.5727, -13.2992, 0.55", "2.93342, 57.8934, -13.3911, 0.55", "3.41522, 61.4026, -13.5748, 0.55", "3.74266, 63.8694, -13.6809, 0.55", "4.25884, 67.5737, -13.8015, 0.83", "4.61958, 70.2069, -13.872, 0.55", "4.97337, 72.6634, -13.9147, 0.55", "5.27254, 74.9611, -13.8925, 1.11", "5.87827, 78.9529, -13.9516, 0.55", "6.0603, 80.2867, -14.0148, 0.55", "6.2932, 81.9691, -14.1162, 1.11", "6.58007, 84.0565, -14.262, 0.55", "6.74386, 85.4193, -14.3717, 1.11", "7.18405, 89.5766, -14.6878, 0.55", "7.42184, 91.7646, -15.0382, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.52888, 54.5727, -13.2992, 0.28", "4.11743, 58.0911, -16.7335, 0.28", "4.36553, 58.6192, -17.2213, 0.55", "6.51856, 63.2932, -21.3081, 0.28", "8.76372, 67.6621, -25.2611, 1.11", "10.0623, 69.9399, -27.3904, 0.28", "10.0623, 69.9399, -27.3904, 0.55", "11.6189, 72.728, -29.2578, 0.28", "12.2345, 73.8015, -29.8115, 1.11", "14.9647, 78.6045, -30.4983, 0.55", "16.9111, 82.3646, -29.6411, 0.28", "19.887, 88.2598, -27.4127, 1.11", "22.3024, 93.2655, -24.8997, 0.28", "22.353, 93.3822, -24.812, 0.55", "23.645, 96.6942, -21.6165, 0.28", "23.7286, 96.9856, -21.2544, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-14.6798, -83.0838, 41.1647, 0.83", "-13.9765, -87.9701, 43.7693, 0.83", "-13.567, -91.8904, 46.1175, 0.83", "-13.3318, -93.7074, 47.2509, 0.83", "-13.2572, -94.7546, 47.9869, 0.83", "-13.1608, -97.6415, 50.0346, 0.83", "-13.0515, -99.3561, 51.1169, 0.83", "-12.6502, -102.612, 52.8704, 0.83", "-12.286, -104.838, 54.1376, 0.83", "-11.4139, -108.577, 56.2588, 0.83", "-10.7974, -110.469, 57.2669, 0.83", "-8.92471, -115.095, 59.3349, 0.83", "-7.13841, -119.242, 60.8803, 0.83", "-5.58958, -122.714, 61.8027, 0.83", "-4.54973, -125.274, 62.335, 0.83", "-4.33882, -125.794, 62.4216, 0.83", "-3.32716, -128.814, 63.0153, 0.28", "-3.14131, -129.631, 63.2032, 0.83", "-2.76656, -131.788, 63.5668, 0.28", "-2.11826, -135.638, 64.1319, 0.28", "-2.00277, -136.467, 64.2784, 0.28", "-1.62723, -139.102, 64.7731, 0.83", "-1.25797, -141.413, 65.2668, 0.28", "-0.963697, -143.261, 65.6925, 0.83", "-0.692743, -144.72, 66.0993, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.6798, -83.0838, 41.1647, 0.55", "-14.51, -86.7637, 39.9847, 0.55", "-14.5046, -88.3551, 39.4941, 0.55", "-14.594, -91.7493, 38.4951, 0.55", "-14.6773, -93.2108, 38.0789, 0.55", "-14.8169, -94.6463, 37.6798, 0.28", "-14.8793, -95.2878, 37.5015, 0.55", "-15.1793, -96.8045, 37.1163, 0.28", "-15.399, -97.7933, 36.8799, 0.55", "-15.7599, -98.9594, 36.659, 0.28", "-16.3555, -100.732, 36.2875, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_BP_e8c88c2686_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.47449, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.629351, -10.6159, 12.6096, 1.66 ) }
    dend_5 { pt3dadd( -1.25152, -12.9273, 14.6255, 1.66 ) }
    dend_5 { pt3dadd( -2.32001, -16.8966, 18.0876, 1.39 ) }
    dend_5 { pt3dadd( -6.56942, -32.6829, 31.8564, 1.11 ) }
    dend_5 { pt3dadd( -7.31487, -35.4522, 34.2718, 1.11 ) }
    dend_5 { pt3dadd( -8.25899, -38.9595, 37.3309, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.47601, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.627681, 12.9533, 1.73753, 0.83 ) }
    dend_0 { pt3dadd( 0.631169, 14.7568, 2.56588, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.25899, -38.9595, 37.3309, 0.83 ) }
    dend_7 { pt3dadd( -8.44183, -43.8203, 35.6266, 0.83 ) }
    dend_7 { pt3dadd( -8.48536, -44.9776, 35.2207, 0.83 ) }
    dend_7 { pt3dadd( -8.59649, -47.932, 34.1848, 0.83 ) }
    dend_7 { pt3dadd( -8.6463, -49.2564, 33.7205, 0.83 ) }
    dend_7 { pt3dadd( -8.75343, -52.1045, 32.7218, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.25899, -38.9595, 37.3309, 0.83 ) }
    dend_6 { pt3dadd( -8.23415, -40.0164, 37.5192, 0.83 ) }
    dend_6 { pt3dadd( -8.21127, -40.9737, 37.6743, 0.83 ) }
    dend_6 { pt3dadd( -8.22394, -42.2291, 37.8581, 0.83 ) }
    dend_6 { pt3dadd( -8.1961, -45.0978, 38.2, 0.83 ) }
    dend_6 { pt3dadd( -8.1383, -47.4649, 38.4457, 0.55 ) }
    dend_6 { pt3dadd( -8.03757, -51.4806, 38.7693, 0.55 ) }
    dend_6 { pt3dadd( -7.92878, -53.4759, 38.9513, 0.83 ) }
    dend_6 { pt3dadd( -7.74917, -55.7561, 39.1646, 0.55 ) }
    dend_6 { pt3dadd( -7.34359, -59.4761, 39.6356, 0.55 ) }
    dend_6 { pt3dadd( -7.20525, -60.5377, 39.7849, 0.55 ) }
    dend_6 { pt3dadd( -6.82119, -63.4159, 40.2074, 0.55 ) }
    dend_6 { pt3dadd( -6.32793, -67.0433, 40.838, 0.55 ) }
    dend_6 { pt3dadd( -6.03639, -69.2151, 41.2418, 0.55 ) }
    dend_6 { pt3dadd( -5.67891, -72.1075, 41.8069, 0.55 ) }
    dend_6 { pt3dadd( -5.23161, -77.3208, 42.877, 0.55 ) }
    dend_6 { pt3dadd( -5.07937, -80.0756, 43.4274, 0.55 ) }
    dend_6 { pt3dadd( -5.01218, -82.1339, 43.8055, 0.55 ) }
    dend_6 { pt3dadd( -5.05474, -83.565, 44.0, 0.55 ) }
    dend_6 { pt3dadd( -5.16055, -84.8208, 44.1402, 0.55 ) }
    dend_6 { pt3dadd( -5.49026, -87.3407, 44.4753, 0.55 ) }
    dend_6 { pt3dadd( -5.68643, -88.6027, 44.6531, 0.55 ) }
    dend_6 { pt3dadd( -5.99999, -90.5287, 45.0108, 0.55 ) }
    dend_6 { pt3dadd( -6.43108, -93.1071, 45.5353, 0.55 ) }
    dend_6 { pt3dadd( -7.10328, -96.8278, 46.351, 0.55 ) }
    dend_6 { pt3dadd( -7.68814, -100.175, 47.1389, 0.55 ) }
    dend_6 { pt3dadd( -8.22977, -103.095, 47.8909, 0.83 ) }
    dend_6 { pt3dadd( -8.75962, -105.881, 48.7132, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.631169, 14.7568, 2.56588, 0.83 ) }
    dend_2 { pt3dadd( 0.602461, 20.7388, -0.446788, 0.83 ) }
    dend_2 { pt3dadd( 0.645121, 22.3148, -1.17684, 0.83 ) }
    dend_2 { pt3dadd( 0.696498, 24.2464, -2.09228, 0.83 ) }
    dend_2 { pt3dadd( 0.763034, 25.8419, -2.79844, 0.83 ) }
    dend_2 { pt3dadd( 0.881673, 28.3932, -3.87063, 0.83 ) }
    dend_2 { pt3dadd( 1.08074, 31.7296, -5.1937, 0.83 ) }
    dend_2 { pt3dadd( 1.19367, 34.102, -5.92722, 0.83 ) }
    dend_2 { pt3dadd( 1.34132, 36.6686, -6.76821, 0.83 ) }
    dend_2 { pt3dadd( 1.53318, 39.303, -7.74204, 0.55 ) }
    dend_2 { pt3dadd( 1.59402, 40.1373, -8.05567, 0.55 ) }
    dend_2 { pt3dadd( 1.67455, 41.5649, -8.60236, 0.55 ) }
    dend_2 { pt3dadd( 1.88512, 44.5453, -9.68553, 0.55 ) }
    dend_2 { pt3dadd( 2.01458, 46.7078, -10.4435, 0.55 ) }
    dend_2 { pt3dadd( 2.38523, 52.1266, -12.3346, 0.55 ) }
    dend_2 { pt3dadd( 2.52888, 54.5727, -13.2992, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.631169, 14.7568, 2.56588, 0.83 ) }
    dend_1 { pt3dadd( 1.609, 18.0527, 4.15546, 0.83 ) }
    dend_1 { pt3dadd( 2.28101, 20.6582, 5.48484, 0.83 ) }
    dend_1 { pt3dadd( 3.18321, 24.7763, 7.69142, 0.83 ) }
    dend_1 { pt3dadd( 3.99601, 28.7486, 9.84375, 0.83 ) }
    dend_1 { pt3dadd( 4.93522, 33.7801, 12.3011, 0.83 ) }
    dend_1 { pt3dadd( 5.66878, 37.5713, 14.0455, 0.83 ) }
    dend_1 { pt3dadd( 6.11491, 40.4445, 15.338, 0.83 ) }
    dend_1 { pt3dadd( 6.60196, 43.5961, 16.6302, 0.83 ) }
    dend_1 { pt3dadd( 6.71222, 44.4549, 16.9196, 0.83 ) }
    dend_1 { pt3dadd( 8.13588, 54.3177, 19.6947, 0.83 ) }
    dend_1 { pt3dadd( 8.43465, 56.4137, 20.1257, 0.83 ) }
    dend_1 { pt3dadd( 8.8601, 59.2624, 20.5483, 0.83 ) }
    dend_1 { pt3dadd( 9.21915, 61.7285, 20.8472, 0.83 ) }
    dend_1 { pt3dadd( 9.60319, 64.59, 21.129, 0.83 ) }
    dend_1 { pt3dadd( 10.1155, 68.203, 21.4963, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 10.5507, 71.9305, 21.8284, 0.83 ) }
    dend_1 { pt3dadd( 10.8372, 74.058, 22.0335, 0.83 ) }
    dend_1 { pt3dadd( 11.3729, 77.344, 22.3776, 0.83 ) }
    dend_1 { pt3dadd( 11.8427, 80.578, 22.7047, 0.83 ) }
    dend_1 { pt3dadd( 12.4087, 83.9731, 23.0283, 0.83 ) }
    dend_1 { pt3dadd( 13.1319, 88.4113, 23.5003, 0.83 ) }
    dend_1 { pt3dadd( 13.5628, 91.3132, 23.9462, 0.83 ) }
    dend_1 { pt3dadd( 13.7561, 92.9216, 24.2283, 0.83 ) }
    dend_1 { pt3dadd( 13.9086, 94.7446, 24.6309, 0.83 ) }
    dend_1 { pt3dadd( 14.0791, 97.4451, 25.39, 0.83 ) }
    dend_1 { pt3dadd( 14.0699, 101.425, 26.7053, 0.55 ) }
    dend_1 { pt3dadd( 14.0134, 106.647, 28.6567, 0.55 ) }
    dend_1 { pt3dadd( 13.9092, 108.188, 29.2313, 0.55 ) }
    dend_1 { pt3dadd( 13.6826, 111.428, 30.416, 0.55 ) }
    dend_1 { pt3dadd( 13.5588, 112.788, 30.8798, 0.55 ) }
    dend_1 { pt3dadd( 13.287, 115.341, 31.7293, 0.55 ) }
    dend_1 { pt3dadd( 13.0924, 117.999, 32.505, 0.55 ) }
    dend_1 { pt3dadd( 13.0505, 121.848, 33.4626, 0.55 ) }
    dend_1 { pt3dadd( 13.0438, 124.384, 34.0567, 0.55 ) }
    dend_1 { pt3dadd( 13.0213, 126.692, 34.5073, 0.55 ) }
    dend_1 { pt3dadd( 13.0748, 129.572, 35.0854, 0.55 ) }
    dend_1 { pt3dadd( 13.3256, 132.562, 35.6889, 0.55 ) }
    dend_1 { pt3dadd( 13.7709, 136.634, 36.6157, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -8.75343, -52.1045, 32.7218, 0.83 ) }
    dend_9 { pt3dadd( -9.98088, -57.211, 34.7407, 0.83 ) }
    dend_9 { pt3dadd( -10.8882, -61.2553, 36.153, 0.83 ) }
    dend_9 { pt3dadd( -11.9112, -66.1308, 37.6505, 0.83 ) }
    dend_9 { pt3dadd( -12.7288, -70.1627, 38.7526, 0.83 ) }
    dend_9 { pt3dadd( -13.2257, -72.6129, 39.4224, 0.83 ) }
    dend_9 { pt3dadd( -13.8181, -75.5344, 40.2209, 0.83 ) }
    dend_9 { pt3dadd( -14.1298, -77.6342, 40.67, 0.83 ) }
    dend_9 { pt3dadd( -14.4516, -80.0305, 41.079, 0.83 ) }
    dend_9 { pt3dadd( -14.6798, -83.0838, 41.1647, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.75343, -52.1045, 32.7218, 0.55 ) }
    dend_8 { pt3dadd( -10.4061, -51.6674, 41.2375, 0.55 ) }
    dend_8 { pt3dadd( -11.935, -51.0668, 50.3905, 0.55 ) }
    dend_8 { pt3dadd( -12.7116, -50.7617, 55.04, 0.55 ) }
    dend_8 { pt3dadd( -13.6898, -50.3775, 60.8962, 0.28 ) }
    dend_8 { pt3dadd( -13.8514, -50.314, 61.8636, 0.83 ) }
    dend_8 { pt3dadd( -14.6991, -49.981, 66.9387, 0.28 ) }
    dend_8 { pt3dadd( -14.8312, -49.8646, 67.8049, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.52888, 54.5727, -13.2992, 0.55 ) }
    dend_4 { pt3dadd( 2.93342, 57.8934, -13.3911, 0.55 ) }
    dend_4 { pt3dadd( 3.41522, 61.4026, -13.5748, 0.55 ) }
    dend_4 { pt3dadd( 3.74266, 63.8694, -13.6809, 0.55 ) }
    dend_4 { pt3dadd( 4.25884, 67.5737, -13.8015, 0.83 ) }
    dend_4 { pt3dadd( 4.61958, 70.2069, -13.872, 0.55 ) }
    dend_4 { pt3dadd( 4.97337, 72.6634, -13.9147, 0.55 ) }
    dend_4 { pt3dadd( 5.27254, 74.9611, -13.8925, 1.11 ) }
    dend_4 { pt3dadd( 5.87827, 78.9529, -13.9516, 0.55 ) }
    dend_4 { pt3dadd( 6.0603, 80.2867, -14.0148, 0.55 ) }
    dend_4 { pt3dadd( 6.2932, 81.9691, -14.1162, 1.11 ) }
    dend_4 { pt3dadd( 6.58007, 84.0565, -14.262, 0.55 ) }
    dend_4 { pt3dadd( 6.74386, 85.4193, -14.3717, 1.11 ) }
    dend_4 { pt3dadd( 7.18405, 89.5766, -14.6878, 0.55 ) }
    dend_4 { pt3dadd( 7.42184, 91.7646, -15.0382, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.52888, 54.5727, -13.2992, 0.28 ) }
    dend_3 { pt3dadd( 4.11743, 58.0911, -16.7335, 0.28 ) }
    dend_3 { pt3dadd( 4.36553, 58.6192, -17.2213, 0.55 ) }
    dend_3 { pt3dadd( 6.51856, 63.2932, -21.3081, 0.28 ) }
    dend_3 { pt3dadd( 8.76372, 67.6621, -25.2611, 1.11 ) }
    dend_3 { pt3dadd( 10.0623, 69.9399, -27.3904, 0.28 ) }
    dend_3 { pt3dadd( 10.0623, 69.9399, -27.3904, 0.55 ) }
    dend_3 { pt3dadd( 11.6189, 72.728, -29.2578, 0.28 ) }
    dend_3 { pt3dadd( 12.2345, 73.8015, -29.8115, 1.11 ) }
    dend_3 { pt3dadd( 14.9647, 78.6045, -30.4983, 0.55 ) }
    dend_3 { pt3dadd( 16.9111, 82.3646, -29.6411, 0.28 ) }
    dend_3 { pt3dadd( 19.887, 88.2598, -27.4127, 1.11 ) }
    dend_3 { pt3dadd( 22.3024, 93.2655, -24.8997, 0.28 ) }
    dend_3 { pt3dadd( 22.353, 93.3822, -24.812, 0.55 ) }
    dend_3 { pt3dadd( 23.645, 96.6942, -21.6165, 0.28 ) }
    dend_3 { pt3dadd( 23.7286, 96.9856, -21.2544, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -14.6798, -83.0838, 41.1647, 0.83 ) }
    dend_11 { pt3dadd( -13.9765, -87.9701, 43.7693, 0.83 ) }
    dend_11 { pt3dadd( -13.567, -91.8904, 46.1175, 0.83 ) }
    dend_11 { pt3dadd( -13.3318, -93.7074, 47.2509, 0.83 ) }
    dend_11 { pt3dadd( -13.2572, -94.7546, 47.9869, 0.83 ) }
    dend_11 { pt3dadd( -13.1608, -97.6415, 50.0346, 0.83 ) }
    dend_11 { pt3dadd( -13.0515, -99.3561, 51.1169, 0.83 ) }
    dend_11 { pt3dadd( -12.6502, -102.612, 52.8704, 0.83 ) }
    dend_11 { pt3dadd( -12.286, -104.838, 54.1376, 0.83 ) }
    dend_11 { pt3dadd( -11.4139, -108.577, 56.2588, 0.83 ) }
    dend_11 { pt3dadd( -10.7974, -110.469, 57.2669, 0.83 ) }
    dend_11 { pt3dadd( -8.92471, -115.095, 59.3349, 0.83 ) }
    dend_11 { pt3dadd( -7.13841, -119.242, 60.8803, 0.83 ) }
    dend_11 { pt3dadd( -5.58958, -122.714, 61.8027, 0.83 ) }
    dend_11 { pt3dadd( -4.54973, -125.274, 62.335, 0.83 ) }
    dend_11 { pt3dadd( -4.33882, -125.794, 62.4216, 0.83 ) }
    dend_11 { pt3dadd( -3.32716, -128.814, 63.0153, 0.28 ) }
    dend_11 { pt3dadd( -3.14131, -129.631, 63.2032, 0.83 ) }
    dend_11 { pt3dadd( -2.76656, -131.788, 63.5668, 0.28 ) }
    dend_11 { pt3dadd( -2.11826, -135.638, 64.1319, 0.28 ) }
    dend_11 { pt3dadd( -2.00277, -136.467, 64.2784, 0.28 ) }
    dend_11 { pt3dadd( -1.62723, -139.102, 64.7731, 0.83 ) }
    dend_11 { pt3dadd( -1.25797, -141.413, 65.2668, 0.28 ) }
    dend_11 { pt3dadd( -0.963697, -143.261, 65.6925, 0.83 ) }
    dend_11 { pt3dadd( -0.692743, -144.72, 66.0993, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.6798, -83.0838, 41.1647, 0.55 ) }
    dend_10 { pt3dadd( -14.51, -86.7637, 39.9847, 0.55 ) }
    dend_10 { pt3dadd( -14.5046, -88.3551, 39.4941, 0.55 ) }
    dend_10 { pt3dadd( -14.594, -91.7493, 38.4951, 0.55 ) }
    dend_10 { pt3dadd( -14.6773, -93.2108, 38.0789, 0.55 ) }
    dend_10 { pt3dadd( -14.8169, -94.6463, 37.6798, 0.28 ) }
    dend_10 { pt3dadd( -14.8793, -95.2878, 37.5015, 0.55 ) }
    dend_10 { pt3dadd( -15.1793, -96.8045, 37.1163, 0.28 ) }
    dend_10 { pt3dadd( -15.399, -97.7933, 36.8799, 0.55 ) }
    dend_10 { pt3dadd( -15.7599, -98.9594, 36.659, 0.28 ) }
    dend_10 { pt3dadd( -16.3555, -100.732, 36.2875, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 7
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_BP_e8c88c2686_0_0


