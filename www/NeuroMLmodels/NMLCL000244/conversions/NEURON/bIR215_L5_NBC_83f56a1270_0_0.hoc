// Cell: bIR215_L5_NBC_83f56a1270_0_0
/*
{
  "id" : "bIR215_L5_NBC_83f56a1270_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.80187, -2.65497, 0.815749, 4.80603", "-7.85711, -2.42647, 0.741853, 8.49266", "-6.91236, -2.19797, 0.667957, 10.2778", "-5.96761, -1.96947, 0.594062, 12.0489", "-5.02286, -1.74096, 0.520166, 13.6363", "-4.07811, -1.51246, 0.44627, 14.7753", "-3.13335, -1.28396, 0.372375, 15.6483", "-2.1886, -1.05546, 0.298479, 16.2981", "-1.24385, -0.826954, 0.224583, 16.8319", "-0.299097, -0.598451, 0.150687, 17.082", "0.645655, -0.369949, 0.0767917, 17.31", "1.59041, -0.141446, 0.00289604, 17.538", "2.53516, 0.0870562, -0.0709997, 17.43", "3.47991, 0.315559, -0.144895, 16.9438", "4.42466, 0.544061, -0.218791, 16.4576", "5.36941, 0.772563, -0.292687, 15.5199", "6.31417, 1.00107, -0.366582, 14.2667", "7.25892, 1.22957, -0.440478, 13.0135", "8.20367, 1.45807, -0.514374, 10.6764", "9.14842, 1.68657, -0.588269, 7.11693", "10.0932, 1.91508, -0.662165, 4.00176" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-9.8861, 1.27317, -7.14961, 1.71", "-10.0555, 1.21813, -6.81796, 1.71", "-13.7129, 0.0294133, 0.344714, 1.71" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-3.2361, 7.48317, -0.579609, 1.03", "-3.59376, 7.84821, -0.460311, 1.03", "-3.86101, 8.38336, 0.263563, 0.86", "-4.39877, 9.46021, 1.72017, 0.86", "-4.71079, 10.085, 2.56531, 0.86", "-5.7633, 12.1926, 5.41614, 0.86", "-5.85994, 12.3861, 5.67789, 0.86", "-8.01451, 17.7793, 13.3761, 0.86" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.0861, 8.55317, -5.19961, 1.71", "-0.62158, 11.6093, -5.02226, 1.71", "-0.479169, 12.5462, -4.96788, 0.86", "-0.0645573, 15.274, -4.80959, 0.68", "0.328015, 17.8568, -4.65971, 0.68", "0.529454, 19.1821, -4.5828, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "8.1539, 4.83317, -6.22961, 1.2", "9.63939, 5.27533, -6.96853, 1.2", "12.4649, 6.11633, -8.37398, 1.2", "16.4666, 7.30743, -10.3645, 0.68", "20.9146, 8.63138, -12.577, 0.68", "24.1217, 9.58597, -14.1723, 0.68", "26.001, 10.1453, -15.1072, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.4639, -0.806829, -1.19961, 1.54", "12.6293, 0.990161, 1.24235, 1.54", "14.1897, 2.28517, 3.00216, 1.54", "18.3655, 5.75057, 7.71136, 1.03", "19.1649, 6.41395, 8.61283, 1.03", "19.4743, 6.67071, 8.96175, 1.03", "21.3873, 8.25833, 11.1192, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.0039, -4.83683, -5.19961, 1.2", "1.71833, -4.90967, -5.38707, 1.2", "0.187362, -5.34182, -6.27216, 1.2", "-1.54448, -5.43265, -10.0119, 1.03", "-2.21459, -5.45721, -11.6687, 0.68", "-3.4355, -5.44509, -14.6678, 0.68", "-4.21952, -5.39908, -16.913, 0.68", "-4.832, -5.3087, -18.7284, 2.05", "-10.3365, -4.03329, -34.9962, 0.17", "-10.6141, -3.9585, -35.7976, 0.17", "-11.1557, -3.76967, -37.2699, 0.17", "-14.0602, -2.71348, -44.2925, 0.17", "-15.559, -2.27596, -47.5524, 0.17", "-16.7127, -1.96466, -49.5482, 2.05", "-18.0137, -1.79774, -50.7565, 0.17", "-18.8335, -1.7119, -51.4853, 0.17", "-20.6263, -1.63608, -53.2576, 0.17", "-25.4926, -1.8799, -57.6634, 2.22", "-25.9049, -1.92208, -58.4856, 0.17", "-26.4354, -2.01386, -59.7148, 0.17", "-26.9675, -2.11308, -61.0476, 0.17", "-29.166, -2.54407, -66.9401, 0.17", "-30.4141, -2.78, -70.548, 0.17", "-36.8223, -4.30448, -89.8808, 1.71", "-37.7245, -4.52074, -92.7982, 0.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.7139, -0.396829, -15.7696, 1.37", "1.963, -3.36085, -15.7525, 1.37", "2.1113, -4.93018, -15.7063, 1.37", "2.31155, -6.60913, -15.6439, 1.03", "2.65909, -9.00381, -15.5477, 1.03", "3.33646, -13.2036, -15.3721, 1.03", "3.81247, -16.155, -15.2487, 1.03", "4.25815, -19.2733, -15.026, 1.03", "4.48108, -21.0417, -14.8931, 2.22", "4.63043, -22.3309, -14.7876, 1.54", "4.66789, -22.5655, -14.7663, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.0932, 1.91508, -0.662165, 1.00001", "24.6728, 5.44137, -0.662165, 1.00001", "39.2524, 8.96767, -0.662165, 1.00001" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-13.7129, 0.0294133, 0.344714, 1.37", "-14.5798, -0.519495, 0.359959, 1.37", "-17.4105, -2.31207, 0.409747, 1.37", "-20.1099, -4.02144, 0.457224, 1.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-13.7129, 0.0294133, 0.344714, 0.68", "-19.5914, 1.08844, -6.7759, 0.68", "-21.4905, 1.60008, -8.92603, 0.51", "-22.7459, 1.97924, -10.3197, 0.51", "-23.9542, 2.47019, -11.7765, 0.51", "-24.1648, 2.57177, -12.0331, 0.51", "-24.3125, 2.65302, -12.2019, 0.51", "-28.2038, 5.31091, -16.1018, 0.51", "-28.2599, 5.35073, -16.1599, 0.51", "-30.3137, 6.86629, -18.0947, 0.51", "-32.4269, 8.51942, -19.8378, 1.88", "-34.2725, 9.94802, -21.217, 0.17", "-37.0552, 12.0592, -23.213, 0.68", "-38.819, 13.2402, -24.2739, 0.68", "-40.8848, 14.4515, -25.433, 0.17", "-42.8051, 15.3881, -26.3735, 1.37", "-44.9526, 16.3582, -27.8115, 0.17", "-47.2116, 17.383, -29.736, 0.68", "-49.3742, 18.3885, -31.6859, 0.68", "-49.9923, 18.6901, -32.3049, 0.51", "-51.056, 19.2131, -33.3892, 1.03", "-56.0956, 21.5926, -38.0043, 0.51", "-57.6357, 22.3534, -39.239, 0.51", "-60.4, 23.686, -41.1368, 0.51", "-60.5336, 23.7568, -41.2242, 0.51", "-62.109, 24.5284, -42.0322, 2.22", "-63.6967, 25.1703, -42.5665, 0.34", "-66.1237, 25.8805, -42.7785, 0.34", "-68.6422, 26.3946, -42.8891, 0.34", "-70.338, 26.684, -42.8974, 0.34", "-72.8805, 27.0874, -42.8665, 2.05", "-74.8118, 27.3557, -42.7832, 0.17", "-78.8364, 27.8937, -42.4141, 0.17", "-80.8792, 28.1388, -42.0739, 0.17", "-82.7884, 28.3405, -41.7166, 2.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-8.01451, 17.7793, 13.3761, 0.68", "-9.60504, 21.8511, 16.2213, 0.68", "-10.4641, 23.497, 17.1882, 0.51", "-11.7807, 25.9537, 18.0521, 0.51", "-12.8006, 27.9995, 18.7034, 0.51", "-13.077, 28.5353, 18.858, 1.37", "-13.6438, 29.5567, 19.1359, 0.68", "-14.6524, 31.2502, 19.359, 0.34", "-17.2128, 34.8753, 19.7792, 0.34", "-18.6736, 36.6137, 20.0053, 0.34", "-20.1032, 38.2685, 20.1656, 0.34", "-20.9433, 39.2565, 20.2627, 1.37", "-21.7335, 40.2084, 20.3563, 0.17", "-22.3502, 40.8886, 20.4242, 0.17", "-24.7603, 42.6606, 20.4678, 0.17", "-26.0213, 43.4573, 20.3308, 0.17", "-29.8553, 52.0533, 23.7086, 0.17", "-32.256, 60.5821, 28.3448, 0.17", "-34.7818, 68.1062, 34.4284, 0.17", "-38.8208, 75.9166, 39.1911, 0.17", "-43.563, 83.9262, 42.8459, 0.17", "-49.7069, 90.4881, 47.227, 0.17", "-54.923, 96.7058, 53.0694, 0.17", "-60.1304, 104.04, 57.4393, 0.17", "-64.4914, 112.224, 61.1812, 0.17", "-67.9116, 121.362, 63.3705, 0.17", "-70.6805, 130.927, 64.2924, 0.17", "-73.5438, 140.507, 64.4394, 0.17" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-8.01451, 17.7793, 13.3761, 0.51", "-7.09887, 19.6853, 13.5203, 0.51", "-6.62871, 20.5607, 13.5919, 0.51", "-5.10918, 23.0755, 13.797, 0.51", "-4.0439, 24.6804, 14.1084, 0.51", "-3.84322, 24.999, 14.1649, 0.51", "-0.993291, 29.7722, 14.9581, 0.51", "-0.308405, 31.1551, 15.1015, 0.51", "0.37693, 32.7812, 15.3523, 0.51", "2.00588, 36.5535, 16.1291, 0.51", "3.3458, 39.4913, 16.423, 1.71", "3.64732, 40.1303, 16.4251, 0.17", "5.39904, 43.8768, 16.058, 1.03", "7.89232, 49.1973, 15.207, 0.68", "9.56173, 52.4519, 14.4979, 0.51", "12.866, 57.8425, 12.9614, 0.51", "13.948, 59.2974, 12.5768, 1.54", "14.9496, 60.4676, 12.2297, 0.17", "15.2152, 60.7243, 12.1373, 0.68", "17.5928, 62.8955, 10.962, 0.68", "18.6327, 63.8659, 10.622, 1.37", "19.0659, 64.3025, 10.6687, 0.17", "19.3238, 64.5929, 10.7098, 0.17", "19.4715, 64.778, 10.7382, 0.17", "20.5632, 66.2654, 10.9205, 0.17", "20.657, 66.4116, 10.9391, 0.17", "21.6367, 68.0868, 11.1354, 0.17", "22.4944, 69.5586, 11.291, 1.37", "23.56, 71.414, 11.4549, 0.17", "25.5124, 74.7413, 11.6534, 0.17" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "0.529454, 19.1821, -4.5828, 0.68", "-0.643692, 20.8562, -3.94586, 0.68", "-1.35711, 21.8742, -3.55852, 0.68", "-1.75554, 22.4428, -3.3422, 1.03" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.529454, 19.1821, -4.5828, 0.68", "2.06089, 21.2494, -5.35894, 0.68", "3.72978, 23.1014, -6.31731, 0.68", "4.17756, 23.6043, -6.4514, 0.68", "5.81804, 25.003, -6.21076, 0.68", "7.94493, 26.8165, -5.89878, 0.17", "11.8849, 30.1759, -5.32084, 0.17", "12.9444, 31.0101, -5.0311, 0.17", "17.3575, 34.1561, -3.4508, 0.17", "23.632, 38.1263, -0.74834, 0.17" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "26.001, 10.1453, -15.1072, 0.17", "30.6244, 12.3282, -17.6689, 0.17", "32.0307, 13.0723, -18.3091, 0.17", "32.2241, 13.1779, -18.3856, 0.17", "35.0932, 14.7662, -19.3951, 0.17", "38.8084, 16.8301, -20.6287, 1.88", "40.3963, 17.7095, -21.1361, 0.17", "42.6928, 18.9938, -21.7597, 0.17", "43.8594, 19.6282, -22.156, 1.37", "45.0338, 20.2468, -22.6144, 0.17", "45.3468, 20.421, -22.7497, 0.17", "45.4737, 20.4948, -22.825, 0.17", "49.5397, 23.0058, -25.8352, 0.17", "51.3034, 24.2198, -27.2461, 1.71", "51.6054, 24.4487, -27.5411, 0.17", "53.861, 26.3266, -29.9644, 0.17", "56.9128, 28.9859, -33.2676, 1.71", "57.0085, 29.073, -33.3699, 0.17", "59.1046, 31.0865, -35.5589, 0.17", "61.8405, 33.5916, -38.7393, 1.71", "62.8396, 34.4012, -39.8439, 0.17", "63.9247, 35.1772, -40.93, 0.17", "65.0137, 35.9082, -41.8009, 1.71", "65.8743, 36.452, -42.4377, 0.17", "70.5466, 39.0091, -45.4897, 0.17", "72.3868, 40.0021, -46.508, 0.17", "74.0322, 40.8869, -47.3951, 1.71", "75.2017, 41.5343, -48.0144, 0.17", "79.6291, 43.9879, -50.2189, 0.17", "81.5579, 45.0543, -50.857, 1.71", "82.4537, 45.5898, -50.5618, 0.17", "83.8449, 46.545, -49.2363, 0.17", "83.8913, 46.5854, -49.0833, 0.17", "84.021, 46.7097, -48.4993, 1.37", "86.568, 49.0278, -37.4719, 0.17", "87.4635, 49.8453, -33.6586, 0.17", "87.7292, 50.078, -32.5593, 1.2", "92.2122, 53.8727, -16.0709, 0.17", "92.3113, 53.954, -15.7565, 0.17", "93.8899, 55.2531, -10.9694, 0.17", "94.0241, 55.3553, -10.6328, 1.88", "94.1943, 55.4647, -10.1601, 0.17", "95.8401, 56.4957, -6.04654, 0.17", "96.2766, 56.7632, -6.04654, 1.54" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "26.001, 10.1453, -15.1072, 0.34", "25.1618, 15.1161, -15.5574, 0.34", "24.9561, 17.3335, -15.7947, 0.34", "24.7014, 21.1698, -16.224, 0.34", "24.5182, 27.2081, -17.0742, 0.68", "24.4194, 31.9384, -18.0203, 0.68", "24.2693, 40.5396, -20.0216, 0.68", "24.3215, 46.9553, -21.8975, 0.68", "24.337, 47.1756, -21.9725, 0.68", "25.1851, 52.4291, -23.7922, 0.68", "26.2966, 57.1463, -25.4084, 0.34", "27.8631, 62.6912, -27.2905, 0.34", "28.9355, 66.1288, -28.3432, 0.34", "31.9933, 75.3155, -30.9117, 0.34", "35.5445, 85.5827, -33.355, 0.34", "36.1245, 87.1906, -33.6358, 2.05", "36.6413, 88.5489, -33.7985, 0.17", "38.7888, 93.8649, -34.3749, 0.17", "39.0404, 94.5421, -34.4228, 0.68", "39.2051, 95.1364, -34.4087, 0.17", "39.8716, 98.992, -34.3564, 0.17", "39.9184, 99.5323, -34.3564, 1.54", "39.9532, 100.402, -34.3818, 0.17", "39.9262, 103.727, -34.5658, 0.17", "39.8895, 105.635, -34.6972, 1.54", "39.8605, 106.364, -34.7543, 0.17", "39.5382, 112.162, -35.265, 0.17", "39.4435, 113.818, -35.4078, 1.2", "39.3756, 114.896, -35.4981, 0.17", "39.1494, 118.574, -35.7692, 0.17", "39.0287, 120.312, -35.8684, 1.88", "38.984, 120.927, -35.8939, 0.17", "38.7428, 124.551, -35.9713, 0.17", "38.612, 126.259, -35.9713, 0.17", "38.2715, 130.807, -35.9713, 0.17", "37.9839, 134.397, -35.9713, 0.17", "37.9595, 134.94, -35.9713, 1.37", "37.9934, 136.145, -35.9713, 0.17", "38.4181, 140.8, -35.9713, 0.17", "38.7479, 143.081, -35.9713, 1.2", "39.1085, 144.588, -35.9713, 0.17", "40.1963, 147.676, -35.9713, 0.17", "42.4094, 152.919, -35.9713, 0.17", "42.6588, 153.4, -35.9713, 1.54", "42.9424, 153.829, -35.9713, 0.17", "44.8968, 156.306, -35.9713, 0.17", "47.0701, 158.623, -35.9713, 0.17", "47.1954, 158.745, -35.9713, 0.17", "47.5598, 159.078, -35.9713, 1.88", "48.1179, 159.593, -35.9713, 0.17", "50.4501, 161.718, -35.9713, 0.17", "52.4582, 163.601, -35.9713, 0.17", "53.9875, 165.027, -35.9713, 1.54", "54.1067, 165.141, -35.9713, 1.54" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "21.3873, 8.25833, 11.1192, 0.68", "22.2138, 11.0328, 10.926, 0.68", "22.8705, 13.2373, 10.7725, 0.68", "23.7004, 16.0232, 10.5785, 0.68", "24.3927, 18.3473, 10.4166, 0.68", "25.255, 21.2421, 10.215, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "21.3873, 8.25833, 11.1192, 0.68", "23.9687, 8.46242, 12.2019, 0.68", "26.3314, 8.64921, 13.1928, 0.68", "30.6344, 8.98941, 14.9976, 0.68", "34.2001, 9.27131, 16.493, 0.68", "43.3176, 10.853, 20.2839, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.66789, -22.5655, -14.7663, 0.17", "7.51985, -23.3276, -1.13133, 0.17", "7.59528, -23.3486, -0.897092, 0.17", "8.5182, -23.5927, 0.805129, 0.17", "9.42513, -23.9006, 1.59373, 0.17", "10.6874, -24.3952, 2.28806, 1.37", "12.5757, -25.2076, 3.05102, 0.17", "14.8948, -26.2655, 2.80842, 0.68", "16.1572, -26.829, 2.68275, 0.17", "18.9621, -28.0912, 2.4107, 0.86", "19.4146, -28.2482, 2.37587, 0.17", "20.0112, -28.3956, 2.34812, 0.17", "21.5733, -28.6314, 2.31388, 0.17", "23.7955, -28.865, 2.31388, 1.2", "24.6483, -28.9265, 2.31388, 1.2", "28.5792, -29.0186, 2.31388, 0.17", "33.0198, -29.1778, 2.31388, 0.68", "34.5921, -29.2608, 2.31388, 0.17", "36.877, -29.4695, 2.31388, 0.17", "38.3921, -29.7024, 2.31388, 1.37", "39.4439, -29.9342, 2.31388, 0.17", "42.1035, -30.7758, 2.31388, 0.17", "43.0459, -31.108, 2.31388, 1.88", "44.3398, -31.5672, 2.31388, 0.17", "47.0463, -32.5225, 2.82983, 0.17", "49.6165, -33.4173, 3.66504, 0.17", "51.2658, -33.9464, 4.34547, 2.05", "52.0618, -34.1935, 4.73111, 0.17", "55.3327, -35.2481, 6.79742, 0.17", "61.8247, -37.1684, 11.4002, 2.05", "62.1159, -37.2505, 11.6313, 0.17", "64.2877, -37.8283, 13.6037, 0.17", "65.6575, -38.1907, 14.8949, 1.71", "69.464, -39.2372, 18.5452, 0.17", "72.1632, -39.9479, 21.1182, 0.17", "72.3519, -39.9876, 21.2587, 0.86", "75.2265, -40.5279, 23.2995, 0.17", "77.1353, -40.8269, 24.5937, 0.17", "77.2811, -40.8408, 24.6695, 0.17", "78.0732, -40.9163, 25.0225, 1.88", "79.2605, -41.1612, 25.6758, 0.17", "81.2369, -41.7093, 26.7045, 0.17", "81.7102, -41.8549, 26.9256, 1.37", "82.8885, -42.276, 28.0478, 0.34", "85.771, -43.4642, 31.466, 0.17", "87.0676, -44.0428, 33.176, 0.17", "88.2697, -44.6276, 34.9726, 0.17", "88.8001, -44.9023, 35.8751, 2.05", "93.5584, -47.4536, 44.5846, 0.17", "93.8543, -47.6176, 45.182, 1.71", "101.278, -50.1591, 51.3818, 1.71" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.66789, -22.5655, -14.7663, 1.2", "3.72001, -24.793, -14.1693, 1.2", "2.05942, -28.8152, -13.1798, 0.68", "0.79461, -31.9485, -12.4485, 2.22", "0.219593, -33.6438, -12.0871, 0.86", "-0.0484973, -34.4342, -11.9186, 0.68", "-0.89053, -36.9167, -11.3894, 0.68", "-1.23061, -37.875, -11.1713, 1.54", "-1.28012, -38.0372, -11.1389, 1.54", "-1.77995, -40.6161, -11.1389, 1.54" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "39.2524, 8.96767, -0.662165, 0.17", "53.8321, 12.494, -0.662165, 0.17", "68.4117, 16.0203, -0.662165, 0.17" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-20.1099, -4.02144, 0.457224, 0.86", "-20.9225, -4.99313, -0.916803, 0.86", "-21.9197, -5.88035, -2.48428, 0.68", "-23.2398, -6.82716, -4.40945, 0.68", "-27.4749, -9.42027, -10.2737, 0.68", "-29.5191, -10.4557, -12.9088, 0.68", "-31.5278, -11.2235, -15.3411, 0.68", "-33.9053, -11.6687, -17.9058, 1.2", "-34.8165, -11.6559, -18.7339, 1.2", "-35.3302, -11.5749, -19.0631, 0.68", "-37.0211, -11.176, -19.623, 0.68", "-39.5907, -10.4106, -20.3625, 0.51", "-40.9099, -10.0664, -20.5567, 0.51", "-43.2798, -9.71134, -20.6316, 1.88", "-45.7128, -9.57034, -20.7073, 1.88", "-47.6329, -9.71124, -20.7598, 1.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-20.1099, -4.02144, 0.457224, 0.86", "-22.0369, -3.5981, -1.59382, 0.86", "-24.9189, -3.21034, -4.55912, 0.86", "-27.0314, -2.96347, -6.59554, 0.86", "-33.0092, -2.06646, -11.7904, 0.86", "-35.0148, -1.72004, -13.4098, 0.86", "-40.8135, -0.663555, -17.9969, 0.86", "-42.1205, -0.422709, -19.0212, 0.86", "-44.2262, -0.0315901, -20.6052, 0.86", "-47.8687, 0.64404, -23.201, 0.86", "-50.7603, 1.12693, -25.1918, 0.51", "-53.987, 1.69723, -27.3227, 0.34", "-57.5392, 2.45821, -29.3976, 0.17", "-60.0704, 2.93294, -30.8271, 0.17", "-62.3193, 3.20846, -32.0324, 2.05", "-64.0527, 3.29009, -32.801, 0.17", "-65.7737, 3.35141, -33.2606, 0.17", "-66.8676, 3.38219, -33.3727, 0.68", "-69.5427, 3.40182, -33.39, 0.34", "-70.3974, 3.3817, -33.3954, 0.17", "-72.632, 3.32553, -33.3383, 1.88", "-73.6993, 3.27417, -33.2152, 0.17", "-75.2104, 3.1697, -32.9358, 0.17", "-76.8771, 3.00422, -32.5431, 1.2", "-77.8613, 2.89943, -32.2723, 0.17", "-81.0529, 2.61828, -31.3606, 0.17", "-83.6264, 2.47547, -30.3513, 1.71", "-84.7536, 2.43616, -29.8327, 0.17", "-86.2529, 2.44818, -29.0731, 0.17", "-87.6143, 2.54193, -28.3749, 2.39", "-89.3844, 2.67631, -27.5639, 0.68", "-93.1069, 2.89716, -26.158, 0.17", "-94.2466, 2.93477, -25.814, 0.17", "-95.5242, 2.95826, -25.42, 1.2", "-97.7581, 2.94564, -24.7415, 0.17", "-100.932, 2.84358, -23.8879, 0.17", "-102.649, 2.74529, -23.5882, 2.22", "-103.216, 2.69678, -23.5882, 2.22" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-82.7884, 28.3405, -41.7166, 0.17", "-83.485, 29.7903, -41.7412, 0.17", "-83.9184, 30.6091, -41.7531, 0.17", "-85.2513, 33.0305, -41.7853, 0.17", "-85.4488, 33.3585, -41.7883, 0.17", "-87.7146, 37.0881, -41.8143, 0.17", "-88.9619, 39.12, -41.8263, 1.2", "-89.3574, 39.7822, -41.8263, 0.17", "-89.4467, 39.9322, -41.8311, 0.17", "-93.2701, 46.2319, -42.2092, 0.17", "-94.5015, 48.3102, -42.3796, 1.54", "-95.0717, 49.2955, -42.4858, 0.17", "-96.5548, 51.9876, -42.8223, 0.17", "-97.5459, 53.851, -43.1312, 1.2", "-97.9627, 54.6966, -43.3095, 0.17", "-98.0233, 54.8433, -43.3543, 0.17", "-98.4729, 56.0052, -43.7329, 0.17", "-98.8969, 57.1788, -44.1048, 1.37", "-99.6209, 58.9275, -44.6009, 0.17", "-100.689, 61.2151, -45.305, 0.17", "-100.768, 61.3614, -45.3589, 0.17", "-101.266, 62.1896, -45.7038, 1.03", "-101.545, 62.5784, -45.9691, 0.17", "-102.655, 63.9565, -47.0832, 0.17", "-104.276, 65.8269, -48.7028, 1.71", "-105.083, 66.7423, -49.4874, 0.17", "-105.181, 66.8547, -49.5786, 0.17", "-108.864, 71.296, -52.9717, 0.17", "-109.774, 72.4772, -53.776, 1.37", "-110.125, 72.9737, -54.095, 0.17", "-111.552, 75.0971, -55.2749, 0.17", "-111.978, 75.763, -55.61, 1.54", "-112.694, 76.8885, -56.041, 0.17", "-113.562, 78.2339, -56.3103, 0.17", "-114.796, 80.0499, -56.6299, 1.88", "-115.494, 81.0315, -56.7697, 0.17", "-116.645, 82.5494, -56.9303, 0.17", "-117.885, 84.0782, -57.0223, 1.54", "-118.449, 84.7278, -57.0308, 0.17", "-120.049, 86.498, -56.9746, 0.17", "-121.259, 87.8086, -56.8675, 1.71", "-122.265, 88.8604, -56.7979, 0.17", "-123.617, 90.238, -56.7411, 0.17", "-124.416, 90.9731, -56.7366, 2.22", "-125.359, 91.7753, -56.7338, 0.17", "-126.866, 92.9483, -56.7338, 0.17", "-127.253, 93.2413, -56.7338, 1.88", "-128.52, 94.1861, -56.7338, 0.17", "-131.867, 96.6335, -56.7338, 0.17", "-132.953, 97.409, -56.7338, 1.03", "-134.346, 98.3999, -56.67, 0.17", "-137.184, 100.387, -56.443, 0.17", "-138.184, 101.097, -56.335, 2.05", "-139.821, 102.277, -55.9252, 0.17", "-142.108, 103.862, -55.0318, 0.17", "-144.1, 105.039, -54.0323, 1.03", "-144.837, 105.368, -53.5868, 0.17", "-145.931, 105.747, -52.8358, 0.17", "-150.01, 106.896, -49.8851, 0.17", "-151.998, 107.324, -48.4422, 0.17", "-153.816, 107.648, -47.1941, 0.17", "-158.223, 108.336, -44.7072, 0.17", "-158.544, 108.39, -44.581, 1.71", "-159.217, 108.513, -44.4458, 0.17", "-160.99, 108.992, -44.6492, 0.17", "-162.425, 109.54, -45.06, 0.17", "-164.737, 110.562, -45.7517, 0.17", "-168.745, 112.323, -47.015, 1.37", "-169.681, 112.717, -47.2497, 0.17", "-172.47, 113.79, -47.7295, 0.17", "-175.898, 114.979, -47.8971, 0.17", "-179.552, 116.154, -47.7853, 1.03", "-180.574, 116.475, -47.6333, 0.17", "-181.374, 116.688, -47.3858, 0.17", "-184.382, 117.344, -46.3617, 0.17", "-186.245, 117.586, -45.4288, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-82.7884, 28.3405, -41.7166, 0.34", "-84.7821, 27.737, -42.6283, 0.34", "-87.0188, 27.179, -43.5335, 0.34", "-87.6729, 26.9948, -43.7833, 0.34", "-87.8897, 26.9295, -43.8582, 0.34", "-90.6055, 26.0414, -45.0344, 0.34", "-92.6831, 25.2972, -45.9713, 0.34", "-94.6312, 24.5688, -46.7612, 1.03", "-95.5881, 24.1722, -47.1192, 0.68", "-96.8735, 23.5772, -47.74, 0.86", "-99.124, 22.3903, -49.0487, 0.17", "-101.344, 21.0331, -50.5167, 0.17", "-102.187, 20.5001, -51.0883, 1.37", "-103.376, 19.7982, -51.8055, 0.17", "-107.312, 17.6742, -54.0238, 0.17", "-107.458, 17.6062, -54.0924, 0.17", "-108.784, 17.1107, -54.5361, 1.03", "-109.601, 16.9223, -54.7614, 0.34", "-111.656, 16.7514, -55.2544, 0.34", "-111.99, 16.7627, -55.3147, 0.34", "-114.303, 16.9193, -55.4987, 0.17", "-115.06, 16.9609, -55.5778, 2.05", "-117.331, 17.1165, -55.8657, 0.17", "-119.244, 17.2165, -56.089, 0.17", "-119.592, 17.2274, -56.1251, 0.17", "-123.904, 17.3167, -56.4928, 0.17", "-125.503, 17.3241, -56.732, 1.03", "-127.094, 17.289, -57.0318, 0.17", "-129.786, 17.1587, -57.5981, 0.17", "-131.688, 17.0089, -58.0085, 0.17", "-133.969, 16.8313, -58.6762, 1.54", "-137.499, 16.5461, -60.0331, 0.17", "-139.369, 16.3265, -60.8642, 0.17", "-140.585, 16.1363, -61.4822, 0.86", "-141.441, 15.9711, -61.972, 0.17", "-143.992, 15.3024, -63.9186, 0.17", "-144.552, 15.1236, -64.4007, 1.37", "-144.819, 15.0385, -64.6583, 0.17", "-144.929, 15.0054, -64.7742, 0.17", "-145.603, 14.8108, -65.5368, 0.17", "-149.007, 13.8314, -69.3944, 0.17", "-150.215, 13.4646, -70.7943, 1.37", "-153.241, 12.5655, -74.354, 0.17", "-154.329, 12.2413, -75.638, 0.17", "-156.451, 11.6257, -78.1112, 0.17", "-157.477, 11.3445, -79.2884, 1.88" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "25.5124, 74.7413, 11.6534, 0.17", "24.3348, 77.2528, 15.1468, 0.17", "23.9395, 78.5666, 16.6001, 0.68", "22.8514, 83.5525, 21.3864, 0.68", "22.1198, 86.9052, 24.6049, 0.68", "21.7963, 88.3875, 26.0278, 0.51", "21.4951, 89.7675, 27.3527, 0.51", "21.2895, 91.6465, 28.5312, 0.51", "21.2991, 91.954, 28.6696, 0.51", "20.0811, 100.131, 34.2958, 0.51", "17.7783, 106.999, 41.1897, 0.51", "14.4557, 113.613, 47.9141, 0.51", "10.5619, 119.448, 55.0407, 0.51", "6.17906, 125.408, 61.7692, 0.51", "2.06263, 132.741, 67.1808, 0.51", "-1.73303, 140.7, 71.8968, 0.51", "-6.15942, 147.676, 77.5308, 0.51", "-11.1666, 154.95, 82.2233, 0.51" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "25.5124, 74.7413, 11.6534, 0.17", "26.3279, 75.9031, -6.76599, 0.17", "26.3352, 75.9134, -6.93043, 0.17", "26.4363, 76.0576, -9.21577, 2.22", "26.4828, 76.1237, -10.2641, 2.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "25.255, 21.2421, 10.215, 0.68", "26.0275, 23.1422, 8.85068, 0.68", "26.1153, 23.4652, 8.66481, 1.88", "26.7854, 28.8945, 6.79285, 0.17", "26.9737, 32.7404, 5.73142, 0.51", "27.0534, 36.1103, 4.92059, 0.51", "27.1756, 41.281, 3.67645, 0.51", "27.1398, 45.8251, 2.63769, 1.03", "26.9028, 52.9578, 1.37571, 1.03", "26.6068, 56.8403, 1.06813, 1.03", "26.3229, 58.7292, 0.951021, 0.17" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "25.255, 21.2421, 10.215, 0.17", "26.9574, 21.1115, 11.2614, 0.17", "29.5303, 20.9141, 12.8428, 0.17", "31.425, 20.7688, 14.0073, 0.51", "35.3912, 20.4645, 16.4452, 0.51", "42.3143, 19.9334, 20.7004, 0.51", "42.5171, 19.9178, 20.825, 0.51" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.77995, -40.6161, -11.1389, 1.54", "-1.65612, -41.3093, -11.2538, 1.54", "-1.47031, -42.3493, -11.4262, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-1.77995, -40.6161, -11.1389, 0.17", "-1.01719, -41.7372, -8.88896, 0.17", "-0.699381, -42.7069, -7.10092, 0.17", "-0.672858, -42.9108, -6.77637, 1.71", "-0.658692, -43.6443, -5.57892, 0.17", "-1.12563, -47.4425, 1.2404, 0.17", "-1.72741, -50.4385, 6.56037, 0.17", "-2.22828, -51.8776, 9.1214, 0.17", "-2.73514, -53.1001, 11.2093, 0.17", "-4.22777, -56.5896, 16.6418, 0.17", "-5.41787, -59.3905, 20.4914, 0.17", "-6.04126, -60.7182, 22.063, 0.17", "-6.42923, -61.7349, 23.2071, 0.17", "-6.83693, -63.0922, 24.7835, 0.17", "-7.40771, -65.3494, 27.2317, 0.17", "-7.95838, -68.8426, 29.3825, 0.17", "-11.4209, -73.4203, 37.5713, 0.17", "-16.5979, -76.0268, 45.7202, 0.17", "-21.9083, -78.5278, 53.8162, 0.17", "-26.0609, -81.6485, 62.3612, 0.17", "-31.145, -84.4177, 70.5149, 0.17" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-47.6329, -9.71124, -20.7598, 0.17", "-47.7461, -9.63634, -20.7954, 0.17", "-48.5356, -9.03607, -21.1084, 0.17", "-49.1376, -8.61246, -21.3388, 0.17", "-50.6124, -7.65137, -21.8715, 1.37", "-51.7179, -7.00424, -22.2442, 1.37", "-53.7705, -5.94441, -22.8787, 0.17", "-55.0519, -5.34286, -23.2535, 0.17", "-56.2744, -4.85616, -23.6598, 0.17", "-56.9277, -4.68083, -23.8766, 1.03", "-57.6944, -4.58997, -24.2735, 1.03", "-58.954, -4.60829, -25.0379, 0.17", "-59.6869, -4.73456, -25.5807, 0.17", "-61.7007, -5.3579, -27.3238, 2.22", "-62.884, -5.82005, -28.4757, 2.22", "-66.2744, -7.38744, -31.8567, 0.17", "-67.4712, -8.06007, -33.1851, 0.17", "-69.4501, -9.32499, -35.409, 0.17", "-70.2072, -9.88507, -36.2022, 1.88", "-70.3061, -9.97516, -36.2949, 1.88", "-71.617, -11.3766, -37.4674, 1.2", "-73.4369, -13.6515, -38.7774, 0.34", "-74.7609, -15.4591, -39.661, 0.34", "-76.1967, -17.6976, -40.4873, 2.05", "-77.329, -19.636, -41.0969, 0.51", "-78.7102, -22.1802, -41.7693, 0.51", "-80.0784, -24.8905, -42.3371, 0.17", "-81.2318, -27.1627, -42.6598, 0.17", "-82.6977, -30.0446, -43.0243, 0.17", "-83.5438, -31.5233, -43.1781, 1.54", "-84.1985, -32.4684, -43.2358, 1.54", "-85.2142, -33.719, -43.1767, 0.17", "-86.5187, -35.1079, -43.0405, 0.17", "-87.6115, -36.1641, -42.8876, 2.05", "-88.7608, -37.1474, -42.6322, 0.34", "-91.3979, -39.3403, -41.8132, 0.34", "-93.043, -40.6841, -41.1843, 1.54", "-94.3203, -41.6828, -40.6192, 1.54", "-94.6822, -41.9483, -40.4485, 0.17", "-96.813, -43.3934, -39.4068, 0.17", "-97.8805, -44.0488, -38.8963, 1.03", "-98.3144, -44.3115, -38.7153, 1.03", "-99.3319, -44.8751, -38.4172, 0.17", "-101.354, -45.8245, -37.955, 0.17", "-101.696, -45.9722, -37.902, 0.68", "-102.833, -46.4418, -37.7173, 0.17", "-105.309, -47.3869, -37.3576, 0.17", "-107.47, -48.2359, -36.8984, 0.17", "-108.773, -48.7901, -36.5779, 1.37", "-110.2, -49.4605, -36.1855, 0.51", "-112.621, -50.7843, -35.1277, 0.51", "-114.398, -51.886, -34.071, 0.51", "-116.304, -53.1536, -32.7106, 0.17", "-117.5, -54.1065, -31.761, 1.2", "-118.172, -54.6356, -31.2435, 1.2", "-121.266, -57.0157, -28.9738, 0.17", "-122.202, -57.7096, -28.3918, 0.17", "-123.281, -58.4787, -27.5876, 1.88", "-123.946, -58.9031, -27.1127, 0.17", "-125.402, -59.8334, -25.9651, 0.17", "-125.769, -60.0697, -25.6968, 0.86", "-126.764, -60.7306, -25.1791, 0.86", "-129.029, -62.4644, -23.9283, 0.17", "-129.6, -62.8902, -23.6387, 0.17", "-130.28, -63.3436, -23.3577, 0.17", "-130.89, -63.7478, -23.1555, 0.86", "-132.597, -64.8418, -22.7467, 0.34", "-134.265, -65.8917, -22.4405, 0.34", "-135.806, -66.899, -22.2409, 0.34", "-139.189, -69.1545, -22.0029, 0.34", "-140.91, -70.3385, -21.9557, 0.34", "-144.551, -72.9228, -21.8807, 0.34", "-144.682, -73.0221, -21.8797, 0.34", "-146.399, -74.3915, -21.9147, 0.34", "-148.67, -76.4586, -22.0963, 1.88", "-149.181, -76.9639, -22.2354, 1.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-47.6329, -9.71124, -20.7598, 0.68", "-49.581, -14.127, -22.7603, 0.68", "-50.2205, -15.5765, -23.417, 0.51", "-51.1979, -17.7919, -24.4206, 0.51", "-52.76, -21.3329, -26.0248, 0.51" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-103.216, 2.69678, -23.5882, 0.17", "-103.679, 2.69747, -24.211, 0.17", "-103.777, 2.69927, -24.3439, 0.17", "-104.109, 2.71387, -24.7363, 0.17", "-105.192, 2.80727, -26.1632, 0.86", "-106.94, 2.95475, -28.4089, 0.34", "-110.672, 3.22074, -33.5746, 0.34", "-111.512, 3.27215, -34.6832, 1.71", "-112.904, 3.36685, -36.4111, 0.17", "-115.464, 3.53653, -39.3084, 0.17", "-116.729, 3.6186, -40.694, 0.17", "-120.597, 3.82857, -44.313, 0.17", "-123.591, 3.99375, -46.5405, 0.17", "-124.726, 4.03338, -47.323, 1.88", "-126.993, 4.09273, -48.6295, 0.17", "-131.596, 4.17444, -50.6108, 0.17", "-133.861, 4.23985, -51.4566, 0.17", "-134.704, 4.26409, -51.7101, 1.2", "-136.341, 4.32371, -52.2976, 0.17", "-139.186, 4.39378, -53.5601, 0.17", "-139.68, 4.40732, -53.8066, 0.17", "-139.84, 4.41307, -53.8712, 0.17", "-142.06, 4.45246, -54.9747, 0.17", "-143.583, 4.42252, -55.7634, 2.05", "-146.252, 4.29983, -57.1454, 1.54", "-147.076, 4.2355, -57.5506, 0.17", "-149.589, 3.9797, -58.673, 0.17", "-153.854, 3.41007, -60.3471, 0.17", "-155.523, 3.16481, -60.7951, 1.03", "-156.892, 2.94197, -61.0524, 0.17", "-158.247, 2.72599, -61.1576, 0.17", "-159.153, 2.56451, -61.1767, 1.54", "-160.172, 2.37099, -61.1032, 0.17", "-163.588, 1.84653, -60.3968, 0.17", "-163.76, 1.82534, -60.3741, 0.17", "-165.121, 1.73733, -60.3954, 1.54", "-165.656, 1.75062, -60.4871, 0.17", "-167.489, 1.94714, -60.9933, 0.17", "-167.826, 2.02604, -61.1481, 1.54", "-171.171, 3.04271, -62.8983, 0.17", "-173.516, 3.88379, -64.0761, 0.17", "-175.423, 4.59581, -64.969, 2.05", "-176.92, 5.15878, -65.5631, 0.17", "-181.292, 6.83401, -66.8094, 0.17", "-183.988, 7.81377, -67.3059, 1.2", "-185.071, 8.19263, -67.3975, 0.17", "-188.116, 9.23138, -67.544, 0.17", "-192.001, 10.4416, -67.2869, 0.17", "-195.135, 11.1989, -66.5402, 1.54", "-196.539, 11.4412, -65.9611, 0.17", "-197.15, 11.5156, -65.6075, 0.86", "-197.443, 11.5373, -65.4177, 0.17", "-201.087, 11.5264, -62.6793, 0.17", "-204.027, 11.2407, -60.3871, 0.17", "-205.243, 11.0477, -59.4732, 1.54", "-208.456, 10.4147, -57.0789, 0.17", "-211.494, 9.68075, -54.7405, 0.17", "-214.62, 8.81677, -52.1895, 1.2", "-215.705, 8.47199, -51.2897, 1.2", "-216.218, 8.29155, -50.8327, 0.17", "-217.076, 7.97501, -50.0413, 0.17", "-219.756, 6.988, -47.6144, 0.86", "-222.645, 5.9684, -44.8039, 0.34", "-223.826, 5.66565, -43.8137, 0.34", "-223.968, 5.63656, -43.7165, 0.34", "-224.546, 5.53626, -43.3497, 1.03", "-225.175, 5.43193, -43.0439, 0.17", "-227.009, 5.06418, -43.2248, 0.17", "-229.706, 4.33695, -44.6958, 1.2", "-230.934, 3.95823, -45.5439, 0.68" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-103.216, 2.69678, -23.5882, 0.17", "-106.241, 6.54798, -25.0536, 0.17", "-108.14, 8.85626, -25.6074, 0.17", "-109.866, 10.8905, -25.7334, 1.03", "-110.771, 11.9353, -25.708, 0.17", "-112.028, 13.3734, -25.5943, 0.17", "-115.627, 17.4499, -25.1592, 0.17", "-115.744, 17.575, -25.1244, 0.17", "-117.721, 19.6539, -24.4143, 1.2", "-118.035, 20.0005, -24.2838, 0.17", "-119.918, 22.2555, -23.4226, 0.17", "-120.399, 22.9174, -23.1864, 0.17", "-120.934, 23.7041, -22.9537, 1.54", "-121.605, 24.6828, -22.6961, 0.17", "-122.667, 26.19, -22.3411, 0.17", "-124.288, 28.2856, -22.1258, 0.17", "-124.744, 28.8253, -22.1298, 1.71", "-125.989, 30.1372, -22.2468, 0.17", "-127.215, 31.3256, -22.4284, 0.17", "-129.566, 33.332, -22.8609, 0.17", "-133.521, 36.2956, -23.7267, 1.54", "-135.496, 37.5468, -24.1935, 0.17", "-137.901, 38.8289, -24.8602, 0.17", "-137.901, 38.8289, -24.8602, 2.05", "-140.351, 39.6766, -25.6552, 0.17", "-141.352, 39.9116, -25.9838, 0.17", "-145.09, 40.4821, -26.6911, 0.17", "-148.677, 40.8072, -27.1963, 1.03", "-149.525, 40.8864, -27.2645, 0.17", "-149.695, 40.9143, -27.2644, 0.17", "-150.509, 41.1478, -27.1541, 0.17", "-154.122, 42.9737, -26.087, 1.37", "-155.051, 43.6575, -25.6251, 0.17", "-156.15, 44.5892, -24.9905, 0.17", "-157.186, 45.6205, -24.4584, 1.03", "-158.132, 46.6589, -24.0615, 0.17", "-159.067, 47.8395, -23.8052, 0.17", "-159.494, 48.4175, -23.6959, 1.03", "-159.702, 48.7185, -23.5783, 0.17", "-160.398, 49.6997, -22.8418, 0.17", "-160.478, 49.8131, -22.736, 0.17", "-160.768, 50.2477, -22.2553, 1.2", "-162.393, 52.6841, -19.1044, 0.17", "-162.926, 53.4684, -17.9883, 0.17", "-164.029, 54.9719, -15.6121, 1.54" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-157.477, 11.3445, -79.2884, 0.17", "-157.278, 9.53581, -78.1266, 0.17", "-157.086, 7.78589, -77.0026, 0.17", "-156.483, 2.29436, -73.4753, 0.17", "-156.413, 1.65712, -73.066, 0.86", "-156.405, 1.58172, -73.0176, 0.86" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-157.477, 11.3445, -79.2884, 0.17", "-158.742, 11.679, -79.9907, 0.17", "-162.276, 12.7215, -81.8106, 0.17", "-162.419, 12.7719, -81.8972, 0.17", "-165.373, 13.8344, -83.7897, 1.37", "-166.893, 14.3743, -84.7528, 0.17", "-170.153, 15.5593, -86.7394, 0.17", "-171.362, 16.0508, -87.5021, 0.17", "-174.614, 17.5177, -89.823, 1.03", "-175.035, 17.71, -90.1058, 0.17", "-176.519, 18.3618, -90.98, 0.17", "-177.999, 18.9806, -91.8361, 0.68", "-178.262, 19.0855, -92.0234, 0.68", "-180.161, 19.7355, -93.3306, 0.17", "-182.356, 20.3195, -94.737, 0.17", "-183.629, 20.6118, -95.6664, 1.2", "-184.385, 20.7329, -96.254, 0.17", "-187.251, 21.0097, -98.4322, 0.17", "-188.377, 21.0747, -99.2226, 0.17", "-189.494, 21.0408, -99.91, 0.68", "-191.024, 20.8133, -100.929, 0.17", "-192.449, 20.4855, -101.843, 0.17", "-193.198, 20.2331, -102.315, 1.88", "-193.731, 20.0217, -102.674, 0.17", "-196.76, 18.7831, -104.897, 0.17", "-198.379, 18.0143, -106.088, 1.37", "-199.467, 17.4494, -106.889, 0.17", "-202.005, 16.0161, -108.93, 0.17", "-204.199, 14.7261, -110.735, 1.03", "-204.702, 14.4083, -111.227, 0.17", "-206.678, 13.0893, -113.373, 0.17", "-206.913, 12.9356, -113.635, 0.17", "-207.871, 12.2856, -114.722, 1.2", "-208.588, 11.7605, -115.53, 0.17", "-212.924, 8.45869, -120.344, 0.17", "-213.282, 8.18678, -120.889, 1.37", "-213.36, 8.12945, -121.031, 1.37", "-214.163, 7.52015, -122.663, 0.34", "-215.285, 6.64948, -125.22, 0.34", "-215.413, 6.548, -125.527, 0.34", "-219.061, 3.7433, -134.889, 0.17", "-219.196, 3.6408, -135.233, 0.17", "-219.383, 3.49879, -135.717, 0.17", "-219.469, 3.44697, -135.934, 0.17", "-221.357, 2.53025, -140.095, 0.86", "-223.268, 1.7156, -143.311, 0.17", "-224.511, 1.38873, -144.219, 0.17", "-224.618, 1.37437, -144.357, 1.37", "-226.651, 1.22236, -148.016, 0.17", "-226.895, 1.20542, -148.435, 1.03", "-227.163, 1.1894, -148.906, 0.17", "-228.249, 1.12213, -150.91, 0.17", "-234.205, 0.437264, -160.967, 1.03", "-236.808, 0.0187502, -165.133, 0.17", "-239.511, -0.500731, -169.269, 0.17", "-239.724, -0.555553, -169.582, 1.03", "-243.155, -1.6929, -174.322, 0.17", "-247.249, -3.45735, -179.378, 0.17", "-249.082, -4.56038, -180.835, 1.2", "-249.583, -4.95323, -181.186, 0.17", "-251.575, -7.07367, -182.89, 0.17", "-252.158, -7.92164, -183.401, 0.68", "-252.435, -8.58249, -183.657, 0.17", "-252.761, -10.7859, -184.518, 0.17", "-253.041, -14.0343, -186.021, 1.37", "-253.118, -15.5079, -186.863, 0.17", "-253.037, -18.2992, -188.618, 0.17", "-252.823, -19.1024, -189.014, 1.03", "-252.692, -19.4413, -189.156, 0.17", "-250.865, -23.5021, -190.73, 0.17", "-250.702, -23.8307, -190.833, 0.17", "-248.586, -27.8304, -191.913, 0.17", "-244.14, -35.4968, -193.886, 0.17", "-243.884, -35.9299, -193.98, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "26.4828, 76.1237, -10.2641, 0.17", "26.6076, 76.7581, -10.2641, 0.17", "26.6968, 77.2931, -10.2641, 0.17", "26.9208, 78.7492, -10.2641, 0.17", "27.04, 79.4402, -10.1528, 1.71", "27.3187, 81.0046, -9.80343, 0.17", "27.7342, 83.4886, -9.19434, 0.17", "27.7687, 83.7109, -9.13277, 1.54", "27.9345, 84.9637, -8.78639, 0.17", "28.4048, 88.5442, -7.77726, 0.17", "28.7208, 90.8182, -7.13861, 1.37", "28.7866, 91.5034, -6.9789, 0.17", "28.809, 91.7349, -6.92622, 0.17", "29.0963, 95.3541, -6.21205, 0.17", "29.1388, 96.1968, -6.0983, 1.2", "29.1429, 97.0741, -6.0983, 0.17", "29.0621, 102.045, -6.0983, 0.17" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "26.4828, 76.1237, -10.2641, 0.86", "29.4725, 75.9995, -6.16314, 0.86", "30.6098, 75.9522, -4.60297, 0.86", "31.9545, 75.8964, -2.75847, 0.34", "33.0781, 75.8497, -1.21721, 0.34", "35.0635, 75.7672, 1.50622, 0.34", "41.4634, 75.5013, 10.2852, 0.17" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "42.5171, 19.9178, 20.825, 0.17", "39.6671, 25.4178, 19.135, 0.17", "35.3018, 33.948, 16.2748, 0.17", "30.4242, 41.9202, 12.7177, 0.17", "25.2657, 49.3026, 8.37142, 0.17", "20.3456, 56.8505, 4.03301, 0.17", "16.4055, 64.2931, -1.35986, 0.17", "10.7423, 71.1544, -5.92624, 0.17", "6.06775, 79.1978, -9.5938, 0.17", "1.98072, 86.4928, -15.0782, 0.17", "-3.60723, 91.7545, -21.4883, 0.17", "-8.46186, 97.991, -27.6153, 0.17", "-13.2902, 104.495, -33.4796, 0.17" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "42.5171, 19.9178, 20.825, 0.68", "43.638, 19.4049, 18.7579, 0.68", "45.7359, 18.5732, 15.6398, 0.17", "54.4128, 15.4215, 4.68459, 0.17", "54.4741, 15.3983, 4.62284, 0.17", "56.5338, 14.6463, 2.9781, 0.17", "60.5277, 13.2068, 0.194335, 0.17", "61.556, 12.8494, -0.343096, 1.37", "62.8364, 12.4441, -0.657457, 0.17", "67.4441, 11.2473, -0.663156, 0.17", "70.7039, 10.4271, -0.663156, 0.17", "70.8731, 10.3835, -0.663156, 0.17", "74.3013, 9.53652, -0.663156, 0.17", "77.5834, 8.73878, -0.663156, 0.17", "80.9798, 8.22955, -0.663156, 0.17", "81.3262, 8.24011, -0.706668, 0.17", "82.8357, 8.4914, -1.09998, 0.17", "85.9067, 9.4339, -2.27558, 0.17", "86.0452, 9.51286, -2.3418, 0.17", "89.4995, 12.3875, -4.40788, 0.17", "94.1267, 16.8936, -7.86899, 0.17", "94.5428, 17.3252, -8.20357, 1.2", "94.8568, 17.6757, -8.47321, 0.17", "98.9908, 22.631, -12.169, 0.17", "103.501, 27.9946, -16.135, 0.17", "107.346, 32.2801, -19.8199, 0.17", "107.546, 32.4953, -20.0041, 1.2", "107.853, 32.8165, -20.332, 0.17", "109.187, 34.1933, -21.8872, 0.17", "109.537, 34.5501, -22.3871, 0.86", "114.076, 38.455, -28.9366, 0.17", "116.661, 40.45, -32.5865, 0.17", "119.231, 42.3486, -36.2956, 1.54" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.47031, -42.3493, -11.4262, 1.03", "-2.51672, -44.4567, -11.3923, 1.03", "-3.57014, -47.0404, -11.3569, 1.54", "-3.95506, -48.2825, -11.3421, 0.68", "-4.84256, -52.7871, -11.6796, 0.68", "-5.16756, -55.2925, -11.3826, 0.68", "-5.28103, -57.1219, -10.821, 0.17", "-5.19274, -58.7545, -9.94795, 0.86", "-4.92447, -60.2915, -8.78236, 0.86", "-4.2036, -63.2447, -5.56606, 0.51", "-1.69711, -70.6579, 3.65577, 0.17", "-1.37565, -71.6589, 4.91401, 1.03", "-1.04604, -72.9843, 6.49727, 1.03", "-0.95627, -73.4809, 7.03576, 1.03", "-0.601414, -77.0577, 10.3319, 0.51", "-0.495742, -80.424, 12.836, 0.51", "-0.473893, -81.8831, 13.3052, 1.2", "-0.382692, -83.9005, 13.82, 1.88", "-0.241256, -85.5876, 14.146, 0.51", "-0.00810526, -88.2257, 14.4322, 0.51", "0.075151, -89.4208, 14.3508, 0.51", "0.0873893, -91.3223, 14.1071, 0.51", "-0.0182353, -94.6016, 13.5596, 0.68", "-0.0857993, -95.8243, 13.3217, 0.68", "-0.157504, -97.6276, 12.9559, 0.34", "-0.193071, -101.658, 12.1502, 1.54", "-0.257721, -103.681, 11.7713, 0.68", "-0.489785, -105.703, 11.4317, 0.17", "-0.793324, -107.214, 11.2178, 0.68", "-1.44044, -109.908, 10.9351, 0.51", "-1.94973, -111.722, 10.8277, 0.51", "-2.43772, -113.476, 10.8277, 0.51", "-3.28113, -116.383, 10.8277, 0.51", "-3.87403, -118.239, 10.8277, 1.2", "-4.54556, -120.058, 10.8277, 0.86", "-5.41575, -122.222, 10.8277, 0.17", "-5.90356, -123.601, 10.8277, 0.17", "-6.49529, -125.897, 10.9661, 0.17", "-6.78898, -127.552, 11.149, 1.54", "-6.9904, -128.903, 11.3434, 1.03", "-7.19037, -130.122, 11.5453, 0.34", "-7.72271, -133.022, 12.0391, 0.34", "-8.28338, -135.973, 12.6656, 1.03", "-8.45925, -137.077, 12.9367, 0.68", "-8.81154, -139.395, 13.5429, 0.17", "-9.10186, -141.162, 13.9969, 0.17", "-9.61035, -143.901, 14.6794, 0.17", "-10.2022, -146.642, 15.2716, 1.54", "-10.5659, -148.483, 15.5625, 0.68", "-10.781, -149.798, 15.7236, 0.51", "-11.1168, -152.445, 15.9602, 0.51", "-11.1592, -152.78, 15.9731, 0.51", "-11.6567, -155.732, 15.8914, 0.51", "-12.1113, -157.681, 15.6936, 0.51", "-12.5117, -159.24, 15.5158, 0.51", "-12.5595, -159.407, 15.4971, 0.51", "-13.254, -161.569, 14.998, 1.37", "-13.3068, -161.721, 14.9603, 1.37", "-14.47, -164.431, 14.1801, 0.86", "-14.6434, -164.759, 14.0836, 0.17", "-15.801, -166.821, 13.5252, 0.68", "-17.6193, -170.051, 12.5122, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.47031, -42.3493, -11.4262, 0.86", "-0.525658, -45.4416, -20.2965, 0.86", "-0.502321, -45.518, -20.5156, 0.86", "-0.222906, -46.4327, -23.1393, 0.86" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-149.181, -76.9639, -22.2354, 0.17", "-154.859, -77.3632, -24.1159, 0.17", "-157.945, -77.4413, -24.3525, 0.17", "-159.255, -77.4043, -24.3124, 1.03", "-160.328, -77.374, -24.2794, 0.17", "-163.988, -77.2705, -24.1671, 0.17", "-165.746, -77.2208, -24.1131, 1.03", "-169.293, -76.9908, -23.297, 0.17", "-171.213, -76.7373, -22.7188, 0.17" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-149.181, -76.9639, -22.2354, 0.17", "-151.414, -78.4341, -22.0518, 0.17", "-153.707, -79.8033, -21.6265, 0.17", "-155.313, -80.7065, -21.265, 0.86", "-155.86, -80.9853, -21.1378, 0.17", "-156.959, -81.5187, -20.8771, 0.17", "-160.225, -83.0526, -20.1036, 0.17", "-162.531, -83.9616, -19.3979, 1.54", "-162.73, -84.0513, -19.2833, 0.17", "-164.055, -84.8611, -17.9261, 0.17", "-164.149, -84.9302, -17.7966, 1.2", "-164.484, -85.2501, -17.2626, 0.17", "-165.936, -87.0113, -14.6957, 0.17", "-167.717, -89.3183, -11.7636, 0.17", "-169.084, -91.3265, -9.66109, 1.54", "-169.354, -91.8134, -9.27237, 0.17", "-170.789, -94.7021, -7.58852, 0.17", "-171.567, -96.4964, -6.62447, 1.2", "-172.024, -97.6414, -6.0952, 0.86", "-173.131, -100.283, -5.00165, 0.17", "-174.486, -103.506, -3.69082, 0.17", "-175.462, -105.821, -2.66992, 0.17", "-177.784, -111.226, -0.0273753, 0.17", "-177.879, -111.431, 0.0743597, 0.17", "-179.473, -114.488, 1.76858, 0.17", "-180.189, -115.694, 2.49452, 0.86", "-180.645, -116.448, 2.90263, 0.86", "-180.891, -116.893, 3.07839, 0.17", "-181.849, -118.797, 3.52798, 0.17", "-182.853, -121.206, 4.07104, 1.37", "-183.277, -122.574, 4.36541, 0.17", "-184.113, -125.98, 5.07195, 0.17", "-184.659, -128.887, 5.62954, 0.17", "-184.682, -129.056, 5.65658, 0.17", "-184.862, -130.951, 5.84424, 0.17", "-184.947, -131.944, 5.86135, 1.37", "-185.069, -133.171, 5.69696, 0.34", "-185.158, -133.994, 5.42691, 0.17", "-185.458, -136.333, 4.29599, 0.17", "-185.672, -137.473, 3.64201, 1.03", "-185.953, -138.34, 3.03195, 1.03", "-187.498, -141.547, 0.484467, 0.17", "-188.257, -142.55, -0.694581, 0.17", "-188.562, -142.838, -1.16028, 1.03", "-188.774, -142.953, -1.39944, 0.17", "-190.231, -143.35, -2.63625, 0.17", "-191.033, -143.488, -3.22424, 1.71", "-194.575, -143.747, -5.09329, 0.68", "-195.457, -143.766, -5.56337, 0.17", "-199.058, -143.926, -7.55442, 0.17", "-201.929, -144.11, -9.18714, 0.17" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-52.76, -21.3329, -26.0248, 0.17", "-56.271, -25.2875, -21.4675, 0.17", "-58.5813, -28.3848, -17.5291, 0.17", "-61.853, -33.519, -10.5484, 0.17", "-63.965, -36.8333, -6.04217, 0.17", "-65.8575, -39.8031, -2.00421, 0.17", "-70.5482, -47.1641, 8.00426, 0.17", "-71.7159, -49.6007, 11.9158, 0.17", "-72.3654, -51.6795, 15.7136, 0.17", "-74.0933, -57.159, 23.8983, 0.17", "-74.1869, -63.3375, 31.7607, 0.17" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-52.76, -21.3329, -26.0248, 0.51", "-53.1964, -23.0466, -21.7623, 0.51", "-55.2002, -28.1361, -9.69113, 0.51", "-55.937, -29.549, -6.56126, 0.51", "-56.4769, -30.4219, -4.74127, 0.51", "-58.6758, -33.611, 1.55785, 0.51", "-59.3871, -34.5704, 3.28041, 0.34", "-60.3502, -35.9102, 5.30127, 0.34", "-61.3896, -37.34, 6.55609, 0.34", "-61.8925, -38.1072, 7.13602, 0.86", "-62.1709, -38.7015, 7.53285, 0.17", "-63.0485, -40.8779, 8.77525, 0.68", "-64.8742, -46.888, 12.3623, 0.68", "-65.162, -48.2512, 13.1874, 0.17", "-65.3572, -49.6026, 14.0445, 0.17", "-65.8891, -54.7707, 17.4164, 0.51", "-69.0591, -59.4503, 25.6658, 0.51", "-74.4267, -64.5773, 32.3667, 0.51", "-78.1502, -68.4858, 40.7845, 0.51", "-81.379, -72.4759, 49.3667, 0.51", "-84.6079, -75.8487, 58.2097, 0.51", "-87.7178, -77.307, 67.6013, 0.51", "-91.418, -77.7498, 76.881, 0.51", "-94.4674, -79.5544, 86.2321, 0.51", "-96.4326, -82.3466, 95.6312, 0.51", "-96.7987, -85.5049, 105.112, 0.51", "-96.8091, -87.7676, 114.853, 0.51" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-230.934, 3.95823, -45.5439, 0.17", "-231.705, 1.08963, -46.1642, 0.17", "-232.409, -1.52306, -46.6125, 0.17", "-232.659, -2.41015, -46.7409, 0.68", "-232.709, -2.57401, -46.7614, 0.68", "-232.988, -3.53288, -46.8673, 0.68", "-233.14, -3.99224, -46.9085, 0.17", "-234.136, -6.6393, -47.0552, 0.17", "-234.439, -7.30027, -47.0552, 1.37", "-234.821, -8.06153, -47.0552, 1.37", "-235.307, -8.84347, -47.0552, 0.17", "-236.838, -11.0443, -46.7006, 0.17", "-237.497, -11.8845, -46.4515, 0.17", "-238.445, -12.9118, -45.9939, 1.03", "-239.131, -13.6626, -45.6248, 0.17", "-240.89, -15.5052, -44.6194, 0.17", "-243.508, -18.4813, -43.0371, 1.37", "-244.039, -19.2097, -42.6104, 0.17", "-244.682, -20.1838, -42.0328, 0.17", "-245.861, -22.1501, -40.9688, 0.68", "-246.182, -22.7446, -40.6999, 0.17", "-247.507, -25.3793, -39.6636, 0.17", "-249.072, -28.1048, -38.8214, 0.68", "-249.535, -28.8035, -38.5883, 0.17", "-251.018, -30.7621, -37.8978, 0.17", "-252.307, -31.9566, -37.4528, 1.37", "-253.27, -32.6323, -37.2963, 0.17", "-254.981, -33.4454, -37.2877, 0.17", "-256.738, -34.0942, -37.4983, 0.17", "-257.189, -34.2608, -37.61, 0.17", "-260.685, -35.5616, -38.7606, 0.17", "-263.296, -36.6952, -39.7669, 1.03", "-264.325, -37.227, -40.2559, 0.51", "-266.592, -38.6102, -41.4998, 0.17", "-269.475, -40.7754, -43.2836, 0.17", "-271.727, -42.8309, -44.8134, 0.17", "-272.731, -44.0696, -45.6119, 1.71", "-273.691, -45.655, -46.4216, 0.17", "-273.851, -46.0888, -46.6415, 0.17", "-273.892, -47.6384, -47.3751, 0.17", "-273.841, -47.8564, -47.457, 1.2", "-273.637, -48.2587, -47.6222, 0.17", "-272.41, -50.1518, -48.3934, 0.17", "-271.354, -51.5604, -48.8372, 1.03", "-270.536, -52.5438, -49.2124, 0.17" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-230.934, 3.95823, -45.5439, 0.17", "-232.496, 4.0473, -45.9206, 0.17", "-234.335, 4.15497, -46.4331, 0.17", "-235.523, 4.2101, -46.7488, 0.86", "-236.973, 4.24346, -47.1093, 0.17", "-239.764, 4.25562, -47.7743, 0.17", "-240.982, 4.26092, -48.0644, 1.03", "-242.02, 4.26551, -48.28, 0.17", "-244.738, 4.24198, -48.8759, 0.17", "-245.924, 4.19553, -49.1246, 0.17", "-246.295, 4.17407, -49.1838, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "29.0621, 102.045, -6.0983, 0.17", "29.2446, 104.858, -5.50974, 0.17", "29.4937, 108.376, -4.79111, 0.17", "29.6846, 110.866, -4.30801, 0.17", "29.7603, 114.716, -3.64489, 1.2", "29.7199, 116.746, -3.33014, 0.17", "29.5961, 119.032, -3.02562, 0.17", "29.5961, 119.032, -3.02562, 1.03", "29.3468, 120.469, -2.92156, 0.17", "28.5366, 124.299, -2.93417, 0.17", "28.2444, 125.629, -3.03888, 0.17", "27.503, 128.978, -3.38965, 0.17", "26.8412, 132.656, -3.84486, 0.17", "26.755, 133.334, -3.93503, 0.17", "26.5759, 136.172, -4.49278, 1.37", "26.5616, 137.017, -4.69232, 0.17", "26.5733, 138.872, -5.16289, 0.17", "26.6748, 141.864, -5.95539, 0.17", "26.871, 145.079, -6.79399, 0.17", "27.2549, 151.533, -8.3904, 0.17", "27.3707, 153.762, -8.88235, 0.17", "27.4258, 155.299, -9.24204, 0.17", "27.4107, 156.496, -9.54495, 2.05", "27.3438, 157.234, -9.74265, 0.17" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "29.0621, 102.045, -6.0983, 0.17", "26.6909, 100.471, -5.97993, 0.17", "24.5702, 99.0624, -5.87407, 0.17", "20.8673, 96.6037, -5.68922, 0.17", "16.7213, 93.8508, -5.48225, 0.17", "11.3024, 90.2526, -5.21174, 0.17", "9.89524, 89.3183, -5.1415, 0.17" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "119.231, 42.3486, -36.2956, 0.17", "122.724, 46.3306, -36.0714, 0.17", "125.45, 49.4373, -35.8964, 0.17", "128.17, 52.5383, -35.7218, 0.17", "130.246, 54.9053, -35.5886, 0.17", "130.618, 55.3287, -35.5647, 0.17" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "119.231, 42.3486, -36.2956, 0.17", "121.124, 47.6911, -37.7709, 0.17", "121.686, 49.279, -38.2094, 1.37", "121.863, 49.7781, -38.3472, 0.17", "122.727, 52.2176, -39.0208, 0.17" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-17.6193, -170.051, 12.5122, 1.2", "-18.4221, -172.186, 13.1535, 1.2", "-19.7141, -175.332, 16.4343, 0.17", "-20.3123, -176.488, 18.0583, 0.17", "-21.7524, -178.746, 21.5144, 0.17", "-23.3788, -180.813, 25.2954, 0.17", "-23.4385, -180.884, 25.4319, 0.17", "-27.7042, -185.624, 35.5981, 1.54", "-28.3597, -186.332, 37.2947, 0.17", "-29.0999, -186.987, 39.3188, 0.17", "-31.8976, -188.766, 47.3062, 0.17", "-32.0612, -188.85, 47.8165, 1.37", "-32.2373, -188.951, 48.3209, 0.17", "-34.2305, -190.431, 51.9394, 0.17", "-37.6792, -194.051, 60.6002, 0.17" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-17.6193, -170.051, 12.5122, 0.86", "-16.9859, -173.124, 13.6204, 0.86", "-16.5088, -176.525, 14.7291, 0.86", "-16.4627, -177.113, 14.9045, 0.86", "-16.3317, -180.24, 15.7858, 0.68", "-16.302, -182.262, 16.2887, 0.34", "-16.2246, -185.686, 16.8284, 0.34", "-16.2569, -186.553, 16.8937, 1.2", "-16.3207, -187.887, 16.9061, 1.2", "-16.3407, -188.125, 16.8942, 0.34", "-16.6829, -191.052, 16.5778, 0.34", "-17.1569, -194.862, 16.1286, 0.34", "-17.364, -196.801, 15.8982, 1.88", "-17.5196, -198.465, 15.7155, 0.68", "-17.7261, -201.732, 15.3965, 0.51", "-17.9504, -205.158, 15.122, 0.51", "-18.1264, -207.172, 15.0068, 1.03", "-18.3903, -209.209, 14.9567, 1.71", "-18.6784, -211.249, 14.8879, 0.68", "-18.9818, -213.337, 14.8285, 0.17", "-19.3529, -215.88, 14.7726, 0.17", "-19.7005, -217.667, 14.7498, 1.03", "-20.452, -220.725, 14.7498, 1.03", "-21.7747, -225.645, 14.7498, 1.03", "-21.8648, -225.972, 14.7498, 1.03", "-21.9556, -226.324, 14.7498, 1.03", "-22.1886, -227.323, 14.7498, 0.17", "-22.4338, -228.499, 14.7498, 0.17", "-22.8156, -230.449, 14.7498, 0.34", "-22.9895, -231.161, 14.7498, 0.34", "-23.6411, -233.606, 14.7498, 0.34", "-24.6989, -239.197, 14.7498, 1.37", "-24.8347, -240.23, 14.7498, 0.17", "-24.8544, -240.404, 14.7498, 0.17", "-25.0726, -242.244, 14.7498, 0.17", "-25.2117, -243.919, 14.7498, 0.34", "-25.2009, -248.68, 14.7498, 0.34", "-25.058, -249.873, 14.7498, 0.34", "-25.044, -250.047, 14.7498, 0.34", "-25.0182, -251.81, 14.7498, 0.34", "-25.0182, -251.81, 14.7498, 1.03", "-25.0149, -252.661, 14.7723, 0.17", "-24.9811, -253.516, 14.8599, 0.17", "-24.6295, -256.029, 15.0886, 1.37", "-24.1325, -258.344, 15.274, 0.51", "-23.6896, -260.009, 15.3382, 0.17", "-22.239, -264.53, 15.4533, 0.51", "-20.796, -268.279, 15.3109, 0.51", "-19.5067, -271.439, 15.0262, 1.88", "-18.5046, -273.802, 14.4861, 1.2", "-17.693, -275.82, 13.748, 0.17", "-16.9635, -277.948, 12.6378, 0.51", "-16.2236, -281.192, 10.3369, 1.03", "-15.8856, -282.974, 8.88142, 1.03", "-15.2639, -287.215, 5.55332, 0.17", "-15.1256, -288.271, 4.80387, 0.17", "-15.1065, -288.422, 4.71874, 0.17", "-14.7999, -290.377, 3.9578, 0.17", "-14.0507, -292.988, 3.79585, 1.2", "-13.2248, -294.982, 4.00655, 1.2", "-12.7183, -296.155, 4.29608, 0.17", "-12.649, -296.312, 4.32941, 0.17", "-11.7347, -298.558, 4.6925, 0.17", "-11.67, -298.731, 4.70906, 1.54", "-11.1786, -300.412, 4.72618, 0.17", "-10.8583, -301.46, 4.73622, 0.17", "-10.5077, -302.701, 4.81819, 0.17", "-10.0957, -304.193, 4.981, 1.37", "-9.8747, -305.198, 5.12808, 0.68", "-9.82761, -305.429, 5.16602, 0.68", "-9.35456, -307.888, 5.61015, 0.17", "-8.96187, -310.075, 6.6828, 0.17", "-8.87151, -310.673, 7.01995, 1.71", "-8.71131, -311.993, 7.87107, 1.54", "-8.63132, -312.838, 8.47465, 0.17", "-8.53658, -314.187, 9.53036, 0.17", "-8.53835, -319.47, 14.5799, 2.05" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.222906, -46.4327, -23.1393, 0.17", "-0.0698333, -47.1198, -22.6303, 0.17", "0.25262, -48.5861, -21.4445, 0.17", "0.828306, -51.2213, -19.2169, 1.2", "1.68008, -55.0314, -15.1504, 0.17", "2.31312, -57.9472, -11.8405, 0.17", "2.39186, -58.2787, -11.4583, 0.17", "2.86254, -59.9912, -9.34426, 1.37", "2.87812, -60.0466, -9.27509, 1.37", "4.04431, -63.8945, -4.68496, 0.17", "4.46249, -65.3356, -3.22438, 0.17", "4.74436, -66.2772, -2.15679, 0.17", "4.7791, -66.4152, -1.9612, 0.17", "5.26034, -68.3504, 0.851879, 0.17", "5.39551, -68.7808, 1.58546, 1.2", "5.48048, -69.0276, 2.05652, 0.17", "6.32642, -71.4712, 7.43071, 0.17", "7.29757, -74.2583, 13.8832, 0.17", "7.54262, -74.8849, 15.4317, 0.17", "8.45482, -76.653, 20.3592, 0.17", "8.52142, -76.7699, 20.671, 0.17", "8.68209, -77.0289, 21.3085, 0.17", "9.26916, -77.8509, 22.8481, 0.17", "9.42873, -78.0749, 23.1253, 0.68", "10.12, -79.2052, 24.4063, 0.68", "10.6461, -80.2032, 25.3559, 0.68", "11.6889, -84.244, 29.0537, 0.17", "11.3092, -86.0437, 30.4394, 0.17", "10.7005, -87.0982, 31.0875, 1.2", "10.2005, -87.6354, 31.2822, 0.17", "10.0835, -87.7485, 31.3092, 0.17", "5.15949, -92.7494, 30.9956, 0.17", "3.69874, -94.3176, 30.6057, 0.17", "2.98935, -95.1191, 30.3681, 0.17", "-0.89449, -100.029, 28.8075, 0.17", "-3.02595, -103.08, 27.865, 0.17", "-6.87395, -109.242, 25.9939, 0.17", "-8.74798, -112.736, 24.6947, 0.17", "-9.73205, -114.482, 23.9428, 0.17", "-10.9235, -116.462, 23.0077, 0.17", "-13.3682, -120.863, 20.9132, 0.17", "-13.9349, -121.919, 20.4051, 0.17", "-16.6247, -127.304, 18.2276, 0.17", "-17.5923, -129.561, 17.3167, 0.17", "-18.3499, -131.509, 16.5677, 0.17", "-20.3678, -136.939, 14.6187, 0.17", "-22.3043, -142.718, 12.9055, 0.17", "-23.76, -147.35, 11.7372, 0.17", "-24.499, -149.819, 11.2558, 0.17", "-25.3627, -152.691, 10.7185, 0.17", "-26.2025, -155.225, 10.2443, 0.17", "-28.5204, -161.068, 9.2149, 0.17", "-29.8847, -164.071, 8.83723, 1.71", "-30.3588, -165.046, 8.67479, 0.17", "-31.2614, -166.79, 8.25319, 0.17", "-31.4134, -167.077, 8.1627, 0.17", "-32.5332, -169.085, 7.3781, 0.17", "-34.2852, -171.71, 5.80526, 0.17", "-35.9637, -174.092, 4.16091, 0.17", "-37.4519, -176.19, 2.45383, 1.54", "-37.7766, -176.656, 2.03284, 0.17", "-38.3751, -177.517, 1.26375, 0.17", "-40.1841, -180.337, -1.00618, 0.17", "-40.6391, -181.215, -1.57915, 1.2", "-40.6391, -181.215, -1.57915, 0.17", "-41.2472, -182.671, -1.92717, 0.17", "-42.3218, -185.37, -2.41049, 0.17", "-43.4832, -188.343, -2.67835, 0.17", "-43.5817, -188.57, -2.67835, 0.17", "-44.5832, -191.025, -3.04629, 0.17", "-44.6738, -191.239, -3.10025, 0.17", "-44.7415, -191.385, -3.16814, 0.17", "-46.5942, -194.955, -5.52133, 0.17", "-47.36, -196.525, -6.66696, 0.17", "-49.6342, -201.391, -10.1326, 0.17", "-51.0443, -204.422, -12.2091, 0.17", "-53.4532, -209.638, -15.4645, 0.17", "-55.8391, -214.886, -18.5149, 0.17", "-58.3996, -220.322, -21.3847, 0.17", "-60.1175, -223.865, -22.9563, 0.17", "-61.7932, -226.955, -23.9708, 0.17", "-64.306, -231.46, -25.1673, 0.17", "-64.9162, -232.493, -25.3516, 0.17", "-67.5899, -236.649, -25.8986, 0.17", "-69.0745, -238.698, -26.1497, 0.17", "-72.1964, -242.394, -26.7068, 0.17", "-77.4972, -247.846, -27.6835, 0.17", "-78.0373, -248.299, -27.7791, 0.68", "-80.3726, -250.001, -28.1703, 0.17", "-81.7356, -250.837, -28.3762, 0.17", "-86.7538, -253.586, -28.9722, 0.17", "-87.0475, -253.75, -28.9917, 0.17", "-89.4018, -255.18, -28.9947, 0.17", "-89.8188, -255.481, -28.9947, 0.17", "-92.5676, -257.594, -28.9947, 0.17", "-94.856, -259.52, -28.9947, 0.17", "-98.5628, -262.993, -29.0856, 0.17", "-102.464, -266.747, -29.1902, 0.17", "-102.588, -266.871, -29.1939, 0.17", "-106.868, -271.09, -29.341, 0.17", "-106.988, -271.202, -29.3461, 0.17", "-108.841, -272.619, -29.4395, 0.17" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.222906, -46.4327, -23.1393, 0.17", "0.813848, -47.4508, -19.9245, 0.17", "2.80089, -48.9393, -13.7559, 1.37", "2.84607, -48.9779, -13.6021, 1.37", "3.0071, -49.1249, -13.0264, 0.17", "4.89368, -50.8236, -6.30903, 0.17", "5.03243, -50.9284, -5.85574, 1.03", "6.82019, -52.0327, 0.224446, 0.17", "9.19886, -53.2038, 7.60003, 0.17", "9.30411, -53.2527, 7.91914, 1.2", "9.53149, -53.3484, 8.58737, 0.17", "10.5354, -53.739, 11.453, 0.17", "11.8879, -54.2152, 15.3209, 1.2", "11.9629, -54.2309, 15.5018, 0.17", "15.6872, -56.9527, 24.3743, 0.17", "19.3436, -60.0969, 33.1347, 0.17", "23.0671, -64.6711, 41.2101, 0.17", "27.3533, -70.0011, 48.5053, 0.17", "32.8611, -76.562, 53.6647, 0.17", "39.1192, -80.8652, 60.1699, 0.17" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "122.727, 52.2176, -39.0208, 0.17", "124.539, 58.6843, -42.7745, 0.17", "126.864, 68.4165, -47.4215, 0.17", "126.894, 68.5723, -47.4892, 0.17", "127.757, 73.6193, -49.5543, 0.17", "128.627, 79.2444, -51.7846, 0.17", "129.715, 87.9998, -55.0518, 0.17", "129.888, 92.6249, -56.3873, 0.17", "129.704, 98.3822, -57.6098, 0.17", "129.58, 99.7184, -57.9186, 1.88", "129.489, 100.204, -58.0614, 0.17", "128.148, 104.977, -59.5958, 0.17", "126.777, 107.936, -60.54, 0.17", "124.738, 111.595, -61.9076, 0.17", "124.271, 112.3, -62.1851, 0.17", "122.059, 115.535, -63.645, 0.17" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "122.727, 52.2176, -39.0208, 0.17", "127.745, 50.0088, -41.8422, 0.17", "130.62, 48.743, -43.4589, 0.17", "133.843, 47.3242, -45.271, 0.17" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.53835, -319.47, 14.5799, 0.17", "-8.26903, -320.483, 15.6125, 0.17", "-8.18944, -321.473, 16.5743, 0.17", "-8.18478, -321.767, 16.7622, 0.17", "-8.1789, -322.079, 16.8969, 1.03", "-8.18393, -323.95, 17.4872, 0.51", "-8.22933, -327.44, 18.3696, 0.17", "-8.36364, -328.752, 18.5664, 0.17", "-9.00917, -332.425, 18.8436, 1.2", "-9.28513, -333.549, 18.8458, 0.17", "-9.51404, -334.374, 18.7823, 0.17", "-9.56581, -334.54, 18.7651, 0.17", "-10.0054, -335.933, 18.636, 0.17", "-10.4503, -337.344, 18.6724, 1.37", "-10.9577, -338.827, 18.8743, 0.17", "-11.6176, -340.74, 19.3711, 0.17", "-12.2683, -343.116, 20.1813, 0.68", "-12.3881, -343.69, 20.403, 0.17", "-12.5276, -344.834, 20.8934, 0.17", "-12.5922, -345.921, 21.4057, 0.17", "-12.6566, -349.432, 23.0694, 0.68", "-12.7102, -351.931, 24.1942, 0.68", "-12.804, -353.394, 24.6982, 0.34", "-12.8832, -354.331, 24.9432, 0.17", "-12.901, -354.502, 24.9731, 0.17", "-13.2252, -356.941, 25.1656, 0.17", "-13.4488, -358.375, 25.1315, 0.68", "-13.9125, -361.236, 24.7565, 0.17", "-14.1939, -362.824, 24.5255, 0.17", "-14.4454, -364.195, 24.3083, 1.2", "-14.6652, -365.63, 24.0513, 0.17", "-14.8142, -367.463, 23.6188, 0.17", "-14.7922, -371.359, 22.4262, 1.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-8.53835, -319.47, 14.5799, 0.17", "-8.82043, -320.554, 14.0413, 0.17", "-9.37984, -322.625, 12.9811, 0.17", "-9.61282, -323.541, 12.5417, 1.54", "-9.78853, -324.224, 12.2541, 0.17", "-10.9153, -328.109, 10.9635, 0.17", "-11.0585, -328.559, 10.7662, 1.54", "-11.2714, -329.182, 10.4566, 0.17", "-11.7573, -330.509, 9.75035, 0.17", "-12.4159, -332.261, 8.81784, 0.17", "-13.6828, -335.409, 7.18563, 0.17", "-15.8167, -340.031, 4.33549, 0.17", "-16.253, -340.952, 3.67821, 1.03", "-16.5616, -341.584, 3.16624, 1.03", "-16.7315, -341.965, 2.8193, 0.17", "-17.3163, -343.678, 1.08333, 0.17", "-18.0522, -347.283, -2.53067, 1.54", "-18.1742, -349.03, -3.93096, 1.2", "-18.1741, -349.168, -4.03494, 1.2", "-18.0199, -352.141, -6.10377, 0.17", "-17.7919, -353.895, -7.08931, 0.17", "-17.3588, -356.025, -7.9457, 0.68", "-16.9003, -358.143, -8.45763, 0.17", "-16.8692, -358.311, -8.49086, 0.17", "-16.8136, -358.685, -8.54231, 0.86", "-16.4992, -361.757, -8.68045, 0.17", "-16.4318, -362.907, -8.68045, 1.03", "-16.4193, -363.247, -8.68045, 0.17", "-16.3646, -365.819, -8.68045, 0.17", "-16.3645, -366.358, -8.68045, 1.03", "-16.3937, -366.842, -8.68045, 0.17", "-16.6991, -369.527, -8.68045, 0.17", "-16.8823, -370.988, -8.68045, 1.2", "-16.9767, -371.597, -8.68045, 0.17", "-17.6433, -374.512, -8.68045, 0.17", "-18.0087, -375.826, -8.68045, 0.17", "-18.2614, -376.558, -8.68045, 1.2", "-18.7893, -377.919, -8.58905, 0.17", "-19.5375, -379.838, -8.37178, 0.17", "-19.8721, -380.77, -8.23744, 0.86", "-20.281, -382.028, -8.01387, 0.17", "-20.6935, -383.322, -7.77378, 0.17", "-21.663, -386.032, -7.26981, 0.17", "-21.8324, -386.513, -7.21012, 1.54", "-22.1312, -387.384, -7.17303, 0.17", "-22.6558, -389.016, -7.22053, 0.17", "-23.1942, -390.533, -7.358, 0.17", "-23.736, -392.0, -7.5708, 0.17", "-24.5122, -393.985, -7.97395, 1.54", "-25.3794, -396.225, -8.40831, 0.17", "-26.1391, -398.309, -8.52851, 0.17", "-26.7332, -400.529, -8.34238, 0.17", "-26.8842, -401.12, -8.23222, 1.03", "-26.9297, -401.283, -8.18886, 1.03", "-27.4057, -402.965, -7.61091, 0.17", "-28.5386, -407.161, -5.93239, 0.17", "-29.2798, -409.892, -4.70035, 0.17", "-30.0932, -412.983, -3.21088, 0.17", "-30.2645, -413.573, -2.92728, 0.17" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.7922, -371.359, 22.4262, 0.17", "-16.7501, -374.276, 23.8192, 0.17", "-17.7052, -376.072, 24.4834, 0.17", "-17.7764, -376.223, 24.5338, 0.17", "-18.5293, -377.901, 25.0631, 1.2", "-18.7481, -378.551, 25.2326, 0.17", "-19.0185, -379.701, 25.448, 0.17", "-19.0922, -380.738, 25.4395, 0.86", "-19.0775, -381.224, 25.4345, 0.17", "-19.0566, -381.606, 25.4306, 0.17", "-18.8918, -383.852, 25.4062, 0.17", "-18.7626, -385.921, 25.385, 0.86", "-18.7364, -387.152, 25.3736, 0.17", "-18.7912, -389.023, 25.1146, 0.17", "-18.923, -390.7, 24.7415, 1.71", "-18.9413, -390.857, 24.6949, 0.17", "-19.1968, -392.2, 24.1756, 0.17", "-19.5058, -393.566, 23.5536, 0.17", "-20.5405, -397.435, 21.565, 0.17", "-20.7929, -398.282, 21.1029, 1.03", "-20.8361, -398.43, 21.0254, 0.17", "-21.1415, -399.785, 20.504, 0.17", "-21.3268, -400.804, 20.2161, 1.37", "-21.3503, -400.965, 20.1902, 0.17", "-21.4797, -402.681, 20.1902, 0.17", "-21.5291, -403.98, 20.1902, 0.17", "-21.8763, -407.373, 20.1902, 0.17", "-21.902, -407.535, 20.199, 0.17", "-22.02, -408.229, 20.2642, 1.54", "-22.3135, -409.655, 20.4199, 0.17", "-22.7737, -411.108, 20.5875, 0.17", "-23.8898, -413.803, 21.2826, 0.17", "-24.5417, -415.308, 21.8422, 0.17", "-25.5044, -417.523, 22.7901, 0.17", "-26.9887, -420.975, 24.3978, 0.17", "-28.2427, -423.921, 25.8732, 0.17", "-30.1398, -428.621, 28.3917, 0.17", "-31.1013, -431.166, 29.8091, 0.17", "-31.2004, -431.429, 29.964, 1.71", "-31.4533, -432.102, 30.4205, 0.17", "-31.7934, -433.309, 31.3315, 0.17", "-31.8162, -433.505, 31.4655, 0.17", "-31.852, -434.937, 32.1189, 0.17", "-31.9606, -438.207, 33.4749, 0.17", "-31.9655, -438.685, 33.6645, 0.17", "-31.9259, -439.56, 33.9635, 0.17", "-31.8225, -440.764, 34.3106, 1.54", "-31.715, -441.589, 34.4936, 0.17", "-31.583, -442.282, 34.5743, 0.17", "-31.547, -442.793, 34.5768, 0.17", "-31.7272, -445.708, 34.5828, 0.17", "-31.7949, -446.187, 34.5543, 1.71", "-31.8363, -446.422, 34.5389, 0.17", "-32.3508, -448.94, 34.3578, 0.17", "-33.1321, -452.277, 34.0921, 0.17", "-34.2996, -456.501, 33.7127, 0.17", "-35.0431, -458.656, 33.4815, 0.17" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-14.7922, -371.359, 22.4262, 0.17", "-14.5187, -373.226, 22.4262, 0.17", "-14.1481, -375.245, 22.4262, 0.17", "-14.1125, -375.416, 22.4262, 1.2", "-13.9978, -375.917, 22.4262, 0.17", "-13.4591, -378.18, 22.4262, 0.17", "-13.0547, -379.686, 22.4262, 1.37", "-12.7139, -380.621, 22.4785, 0.17", "-12.6478, -380.782, 22.4922, 0.17", "-11.7535, -383.175, 22.7179, 0.17", "-11.6984, -383.327, 22.7505, 0.17", "-11.0392, -385.305, 23.3452, 0.17", "-9.67882, -389.887, 24.9823, 0.17", "-9.14148, -391.749, 25.6642, 0.17", "-8.52492, -393.958, 26.4267, 0.17", "-7.41335, -398.066, 27.9362, 1.37", "-6.94832, -399.892, 28.6211, 0.17", "-6.91346, -400.051, 28.6842, 0.17", "-6.08176, -404.627, 30.4921, 0.17", "-5.29869, -407.926, 31.6992, 0.17", "-3.68203, -417.5, 34.0923, 0.17" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-35.0431, -458.656, 33.4815, 0.17", "-33.8081, -461.729, 35.7997, 0.17", "-32.8562, -464.097, 37.5866, 0.17", "-31.9856, -466.263, 39.2211, 0.17", "-31.9352, -466.388, 39.3156, 0.17", "-29.7535, -471.817, 43.4112, 0.17", "-29.5878, -472.229, 43.7223, 0.17", "-25.3956, -480.152, 48.1556, 0.17" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-35.0431, -458.656, 33.4815, 0.17", "-37.2624, -460.902, 33.4815, 0.17", "-40.2817, -463.959, 33.4815, 0.17", "-41.6995, -465.394, 33.4815, 0.17", "-41.8139, -465.509, 33.4815, 0.17", "-47.8054, -473.436, 34.6067, 0.17" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_29", "dend_18", "dend_17", "dend_0", "dend_50", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_16", "dend_1", "dend_56", "dend_51", "dend_49", "dend_46", "dend_42", "dend_37", "dend_28", "dend_21", "dend_3", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_48", "dend_47", "dend_39", "dend_38", "dend_27", "dend_22", "dend_7", "dend_4", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_41", "dend_40", "dend_26", "dend_23", "dend_15", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_10", "dend_9", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_35", "dend_32", "dend_29", "dend_18", "dend_17", "dend_0", "dend_50", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_16", "dend_1", "dend_56", "dend_51", "dend_49", "dend_46", "dend_42", "dend_37", "dend_28", "dend_21", "dend_3", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_48", "dend_47", "dend_39", "dend_38", "dend_27", "dend_22", "dend_7", "dend_4", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_41", "dend_40", "dend_26", "dend_23", "dend_15", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_10", "dend_9", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_NBC_83f56a1270_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_20
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_65
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.49999945595718026)
    connect dend_35(0), soma_0(0.49999945595718026)
    connect dend_32(0), soma_0(0.49999945595718026)
    connect dend_29(0), soma_0(0.49999945595718026)
    connect dend_18(0), soma_0(0.49999945595718026)
    connect dend_17(0), soma_0(0.49999945595718026)
    connect dend_0(0), soma_0(0.49999945595718026)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.80187, -2.65497, 0.815749, 4.80603 ) }
    soma_0 { pt3dadd( -7.85711, -2.42647, 0.741853, 8.49266 ) }
    soma_0 { pt3dadd( -6.91236, -2.19797, 0.667957, 10.2778 ) }
    soma_0 { pt3dadd( -5.96761, -1.96947, 0.594062, 12.0489 ) }
    soma_0 { pt3dadd( -5.02286, -1.74096, 0.520166, 13.6363 ) }
    soma_0 { pt3dadd( -4.07811, -1.51246, 0.44627, 14.7753 ) }
    soma_0 { pt3dadd( -3.13335, -1.28396, 0.372375, 15.6483 ) }
    soma_0 { pt3dadd( -2.1886, -1.05546, 0.298479, 16.2981 ) }
    soma_0 { pt3dadd( -1.24385, -0.826954, 0.224583, 16.8319 ) }
    soma_0 { pt3dadd( -0.299097, -0.598451, 0.150687, 17.082 ) }
    soma_0 { pt3dadd( 0.645655, -0.369949, 0.0767917, 17.31 ) }
    soma_0 { pt3dadd( 1.59041, -0.141446, 0.00289604, 17.538 ) }
    soma_0 { pt3dadd( 2.53516, 0.0870562, -0.0709997, 17.43 ) }
    soma_0 { pt3dadd( 3.47991, 0.315559, -0.144895, 16.9438 ) }
    soma_0 { pt3dadd( 4.42466, 0.544061, -0.218791, 16.4576 ) }
    soma_0 { pt3dadd( 5.36941, 0.772563, -0.292687, 15.5199 ) }
    soma_0 { pt3dadd( 6.31417, 1.00107, -0.366582, 14.2667 ) }
    soma_0 { pt3dadd( 7.25892, 1.22957, -0.440478, 13.0135 ) }
    soma_0 { pt3dadd( 8.20367, 1.45807, -0.514374, 10.6764 ) }
    soma_0 { pt3dadd( 9.14842, 1.68657, -0.588269, 7.11693 ) }
    soma_0 { pt3dadd( 10.0932, 1.91508, -0.662165, 4.00176 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -9.8861, 1.27317, -7.14961, 1.71 ) }
    dend_44 { pt3dadd( -10.0555, 1.21813, -6.81796, 1.71 ) }
    dend_44 { pt3dadd( -13.7129, 0.0294133, 0.344714, 1.71 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -3.2361, 7.48317, -0.579609, 1.03 ) }
    dend_35 { pt3dadd( -3.59376, 7.84821, -0.460311, 1.03 ) }
    dend_35 { pt3dadd( -3.86101, 8.38336, 0.263563, 0.86 ) }
    dend_35 { pt3dadd( -4.39877, 9.46021, 1.72017, 0.86 ) }
    dend_35 { pt3dadd( -4.71079, 10.085, 2.56531, 0.86 ) }
    dend_35 { pt3dadd( -5.7633, 12.1926, 5.41614, 0.86 ) }
    dend_35 { pt3dadd( -5.85994, 12.3861, 5.67789, 0.86 ) }
    dend_35 { pt3dadd( -8.01451, 17.7793, 13.3761, 0.86 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 32/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.0861, 8.55317, -5.19961, 1.71 ) }
    dend_32 { pt3dadd( -0.62158, 11.6093, -5.02226, 1.71 ) }
    dend_32 { pt3dadd( -0.479169, 12.5462, -4.96788, 0.86 ) }
    dend_32 { pt3dadd( -0.0645573, 15.274, -4.80959, 0.68 ) }
    dend_32 { pt3dadd( 0.328015, 17.8568, -4.65971, 0.68 ) }
    dend_32 { pt3dadd( 0.529454, 19.1821, -4.5828, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 8.1539, 4.83317, -6.22961, 1.2 ) }
    dend_29 { pt3dadd( 9.63939, 5.27533, -6.96853, 1.2 ) }
    dend_29 { pt3dadd( 12.4649, 6.11633, -8.37398, 1.2 ) }
    dend_29 { pt3dadd( 16.4666, 7.30743, -10.3645, 0.68 ) }
    dend_29 { pt3dadd( 20.9146, 8.63138, -12.577, 0.68 ) }
    dend_29 { pt3dadd( 24.1217, 9.58597, -14.1723, 0.68 ) }
    dend_29 { pt3dadd( 26.001, 10.1453, -15.1072, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.4639, -0.806829, -1.19961, 1.54 ) }
    dend_18 { pt3dadd( 12.6293, 0.990161, 1.24235, 1.54 ) }
    dend_18 { pt3dadd( 14.1897, 2.28517, 3.00216, 1.54 ) }
    dend_18 { pt3dadd( 18.3655, 5.75057, 7.71136, 1.03 ) }
    dend_18 { pt3dadd( 19.1649, 6.41395, 8.61283, 1.03 ) }
    dend_18 { pt3dadd( 19.4743, 6.67071, 8.96175, 1.03 ) }
    dend_18 { pt3dadd( 21.3873, 8.25833, 11.1192, 1.03 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.0039, -4.83683, -5.19961, 1.2 ) }
    dend_17 { pt3dadd( 1.71833, -4.90967, -5.38707, 1.2 ) }
    dend_17 { pt3dadd( 0.187362, -5.34182, -6.27216, 1.2 ) }
    dend_17 { pt3dadd( -1.54448, -5.43265, -10.0119, 1.03 ) }
    dend_17 { pt3dadd( -2.21459, -5.45721, -11.6687, 0.68 ) }
    dend_17 { pt3dadd( -3.4355, -5.44509, -14.6678, 0.68 ) }
    dend_17 { pt3dadd( -4.21952, -5.39908, -16.913, 0.68 ) }
    dend_17 { pt3dadd( -4.832, -5.3087, -18.7284, 2.05 ) }
    dend_17 { pt3dadd( -10.3365, -4.03329, -34.9962, 0.17 ) }
    dend_17 { pt3dadd( -10.6141, -3.9585, -35.7976, 0.17 ) }
    dend_17 { pt3dadd( -11.1557, -3.76967, -37.2699, 0.17 ) }
    dend_17 { pt3dadd( -14.0602, -2.71348, -44.2925, 0.17 ) }
    dend_17 { pt3dadd( -15.559, -2.27596, -47.5524, 0.17 ) }
    dend_17 { pt3dadd( -16.7127, -1.96466, -49.5482, 2.05 ) }
    dend_17 { pt3dadd( -18.0137, -1.79774, -50.7565, 0.17 ) }
    dend_17 { pt3dadd( -18.8335, -1.7119, -51.4853, 0.17 ) }
    dend_17 { pt3dadd( -20.6263, -1.63608, -53.2576, 0.17 ) }
    dend_17 { pt3dadd( -25.4926, -1.8799, -57.6634, 2.22 ) }
    dend_17 { pt3dadd( -25.9049, -1.92208, -58.4856, 0.17 ) }
    dend_17 { pt3dadd( -26.4354, -2.01386, -59.7148, 0.17 ) }
    dend_17 { pt3dadd( -26.9675, -2.11308, -61.0476, 0.17 ) }
    dend_17 { pt3dadd( -29.166, -2.54407, -66.9401, 0.17 ) }
    dend_17 { pt3dadd( -30.4141, -2.78, -70.548, 0.17 ) }
    dend_17 { pt3dadd( -36.8223, -4.30448, -89.8808, 1.71 ) }
    dend_17 { pt3dadd( -37.7245, -4.52074, -92.7982, 0.17 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.7139, -0.396829, -15.7696, 1.37 ) }
    dend_0 { pt3dadd( 1.963, -3.36085, -15.7525, 1.37 ) }
    dend_0 { pt3dadd( 2.1113, -4.93018, -15.7063, 1.37 ) }
    dend_0 { pt3dadd( 2.31155, -6.60913, -15.6439, 1.03 ) }
    dend_0 { pt3dadd( 2.65909, -9.00381, -15.5477, 1.03 ) }
    dend_0 { pt3dadd( 3.33646, -13.2036, -15.3721, 1.03 ) }
    dend_0 { pt3dadd( 3.81247, -16.155, -15.2487, 1.03 ) }
    dend_0 { pt3dadd( 4.25815, -19.2733, -15.026, 1.03 ) }
    dend_0 { pt3dadd( 4.48108, -21.0417, -14.8931, 2.22 ) }
    dend_0 { pt3dadd( 4.63043, -22.3309, -14.7876, 1.54 ) }
    dend_0 { pt3dadd( 4.66789, -22.5655, -14.7663, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.0932, 1.91508, -0.662165, 1.00001 ) }
    axon_0 { pt3dadd( 24.6728, 5.44137, -0.662165, 1.00001 ) }
    axon_0 { pt3dadd( 39.2524, 8.96767, -0.662165, 1.00001 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 91/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -13.7129, 0.0294133, 0.344714, 1.37 ) }
    dend_50 { pt3dadd( -14.5798, -0.519495, 0.359959, 1.37 ) }
    dend_50 { pt3dadd( -17.4105, -2.31207, 0.409747, 1.37 ) }
    dend_50 { pt3dadd( -20.1099, -4.02144, 0.457224, 1.37 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 95/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -13.7129, 0.0294133, 0.344714, 0.68 ) }
    dend_45 { pt3dadd( -19.5914, 1.08844, -6.7759, 0.68 ) }
    dend_45 { pt3dadd( -21.4905, 1.60008, -8.92603, 0.51 ) }
    dend_45 { pt3dadd( -22.7459, 1.97924, -10.3197, 0.51 ) }
    dend_45 { pt3dadd( -23.9542, 2.47019, -11.7765, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( -24.1648, 2.57177, -12.0331, 0.51 ) }
    dend_45 { pt3dadd( -24.3125, 2.65302, -12.2019, 0.51 ) }
    dend_45 { pt3dadd( -28.2038, 5.31091, -16.1018, 0.51 ) }
    dend_45 { pt3dadd( -28.2599, 5.35073, -16.1599, 0.51 ) }
    dend_45 { pt3dadd( -30.3137, 6.86629, -18.0947, 0.51 ) }
    dend_45 { pt3dadd( -32.4269, 8.51942, -19.8378, 1.88 ) }
    dend_45 { pt3dadd( -34.2725, 9.94802, -21.217, 0.17 ) }
    dend_45 { pt3dadd( -37.0552, 12.0592, -23.213, 0.68 ) }
    dend_45 { pt3dadd( -38.819, 13.2402, -24.2739, 0.68 ) }
    dend_45 { pt3dadd( -40.8848, 14.4515, -25.433, 0.17 ) }
    dend_45 { pt3dadd( -42.8051, 15.3881, -26.3735, 1.37 ) }
    dend_45 { pt3dadd( -44.9526, 16.3582, -27.8115, 0.17 ) }
    dend_45 { pt3dadd( -47.2116, 17.383, -29.736, 0.68 ) }
    dend_45 { pt3dadd( -49.3742, 18.3885, -31.6859, 0.68 ) }
    dend_45 { pt3dadd( -49.9923, 18.6901, -32.3049, 0.51 ) }
    dend_45 { pt3dadd( -51.056, 19.2131, -33.3892, 1.03 ) }
    dend_45 { pt3dadd( -56.0956, 21.5926, -38.0043, 0.51 ) }
    dend_45 { pt3dadd( -57.6357, 22.3534, -39.239, 0.51 ) }
    dend_45 { pt3dadd( -60.4, 23.686, -41.1368, 0.51 ) }
    dend_45 { pt3dadd( -60.5336, 23.7568, -41.2242, 0.51 ) }
    dend_45 { pt3dadd( -62.109, 24.5284, -42.0322, 2.22 ) }
    dend_45 { pt3dadd( -63.6967, 25.1703, -42.5665, 0.34 ) }
    dend_45 { pt3dadd( -66.1237, 25.8805, -42.7785, 0.34 ) }
    dend_45 { pt3dadd( -68.6422, 26.3946, -42.8891, 0.34 ) }
    dend_45 { pt3dadd( -70.338, 26.684, -42.8974, 0.34 ) }
    dend_45 { pt3dadd( -72.8805, 27.0874, -42.8665, 2.05 ) }
    dend_45 { pt3dadd( -74.8118, 27.3557, -42.7832, 0.17 ) }
    dend_45 { pt3dadd( -78.8364, 27.8937, -42.4141, 0.17 ) }
    dend_45 { pt3dadd( -80.8792, 28.1388, -42.0739, 0.17 ) }
    dend_45 { pt3dadd( -82.7884, 28.3405, -41.7166, 2.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 30/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -8.01451, 17.7793, 13.3761, 0.68 ) }
    dend_43 { pt3dadd( -9.60504, 21.8511, 16.2213, 0.68 ) }
    dend_43 { pt3dadd( -10.4641, 23.497, 17.1882, 0.51 ) }
    dend_43 { pt3dadd( -11.7807, 25.9537, 18.0521, 0.51 ) }
    dend_43 { pt3dadd( -12.8006, 27.9995, 18.7034, 0.51 ) }
    dend_43 { pt3dadd( -13.077, 28.5353, 18.858, 1.37 ) }
    dend_43 { pt3dadd( -13.6438, 29.5567, 19.1359, 0.68 ) }
    dend_43 { pt3dadd( -14.6524, 31.2502, 19.359, 0.34 ) }
    dend_43 { pt3dadd( -17.2128, 34.8753, 19.7792, 0.34 ) }
    dend_43 { pt3dadd( -18.6736, 36.6137, 20.0053, 0.34 ) }
    dend_43 { pt3dadd( -20.1032, 38.2685, 20.1656, 0.34 ) }
    dend_43 { pt3dadd( -20.9433, 39.2565, 20.2627, 1.37 ) }
    dend_43 { pt3dadd( -21.7335, 40.2084, 20.3563, 0.17 ) }
    dend_43 { pt3dadd( -22.3502, 40.8886, 20.4242, 0.17 ) }
    dend_43 { pt3dadd( -24.7603, 42.6606, 20.4678, 0.17 ) }
    dend_43 { pt3dadd( -26.0213, 43.4573, 20.3308, 0.17 ) }
    dend_43 { pt3dadd( -29.8553, 52.0533, 23.7086, 0.17 ) }
    dend_43 { pt3dadd( -32.256, 60.5821, 28.3448, 0.17 ) }
    dend_43 { pt3dadd( -34.7818, 68.1062, 34.4284, 0.17 ) }
    dend_43 { pt3dadd( -38.8208, 75.9166, 39.1911, 0.17 ) }
    dend_43 { pt3dadd( -43.563, 83.9262, 42.8459, 0.17 ) }
    dend_43 { pt3dadd( -49.7069, 90.4881, 47.227, 0.17 ) }
    dend_43 { pt3dadd( -54.923, 96.7058, 53.0694, 0.17 ) }
    dend_43 { pt3dadd( -60.1304, 104.04, 57.4393, 0.17 ) }
    dend_43 { pt3dadd( -64.4914, 112.224, 61.1812, 0.17 ) }
    dend_43 { pt3dadd( -67.9116, 121.362, 63.3705, 0.17 ) }
    dend_43 { pt3dadd( -70.6805, 130.927, 64.2924, 0.17 ) }
    dend_43 { pt3dadd( -73.5438, 140.507, 64.4394, 0.17 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -8.01451, 17.7793, 13.3761, 0.51 ) }
    dend_36 { pt3dadd( -7.09887, 19.6853, 13.5203, 0.51 ) }
    dend_36 { pt3dadd( -6.62871, 20.5607, 13.5919, 0.51 ) }
    dend_36 { pt3dadd( -5.10918, 23.0755, 13.797, 0.51 ) }
    dend_36 { pt3dadd( -4.0439, 24.6804, 14.1084, 0.51 ) }
    dend_36 { pt3dadd( -3.84322, 24.999, 14.1649, 0.51 ) }
    dend_36 { pt3dadd( -0.993291, 29.7722, 14.9581, 0.51 ) }
    dend_36 { pt3dadd( -0.308405, 31.1551, 15.1015, 0.51 ) }
    dend_36 { pt3dadd( 0.37693, 32.7812, 15.3523, 0.51 ) }
    dend_36 { pt3dadd( 2.00588, 36.5535, 16.1291, 0.51 ) }
    dend_36 { pt3dadd( 3.3458, 39.4913, 16.423, 1.71 ) }
    dend_36 { pt3dadd( 3.64732, 40.1303, 16.4251, 0.17 ) }
    dend_36 { pt3dadd( 5.39904, 43.8768, 16.058, 1.03 ) }
    dend_36 { pt3dadd( 7.89232, 49.1973, 15.207, 0.68 ) }
    dend_36 { pt3dadd( 9.56173, 52.4519, 14.4979, 0.51 ) }
    dend_36 { pt3dadd( 12.866, 57.8425, 12.9614, 0.51 ) }
    dend_36 { pt3dadd( 13.948, 59.2974, 12.5768, 1.54 ) }
    dend_36 { pt3dadd( 14.9496, 60.4676, 12.2297, 0.17 ) }
    dend_36 { pt3dadd( 15.2152, 60.7243, 12.1373, 0.68 ) }
    dend_36 { pt3dadd( 17.5928, 62.8955, 10.962, 0.68 ) }
    dend_36 { pt3dadd( 18.6327, 63.8659, 10.622, 1.37 ) }
    dend_36 { pt3dadd( 19.0659, 64.3025, 10.6687, 0.17 ) }
    dend_36 { pt3dadd( 19.3238, 64.5929, 10.7098, 0.17 ) }
    dend_36 { pt3dadd( 19.4715, 64.778, 10.7382, 0.17 ) }
    dend_36 { pt3dadd( 20.5632, 66.2654, 10.9205, 0.17 ) }
    dend_36 { pt3dadd( 20.657, 66.4116, 10.9391, 0.17 ) }
    dend_36 { pt3dadd( 21.6367, 68.0868, 11.1354, 0.17 ) }
    dend_36 { pt3dadd( 22.4944, 69.5586, 11.291, 1.37 ) }
    dend_36 { pt3dadd( 23.56, 71.414, 11.4549, 0.17 ) }
    dend_36 { pt3dadd( 25.5124, 74.7413, 11.6534, 0.17 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 88/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 0.529454, 19.1821, -4.5828, 0.68 ) }
    dend_34 { pt3dadd( -0.643692, 20.8562, -3.94586, 0.68 ) }
    dend_34 { pt3dadd( -1.35711, 21.8742, -3.55852, 0.68 ) }
    dend_34 { pt3dadd( -1.75554, 22.4428, -3.3422, 1.03 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 92/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.529454, 19.1821, -4.5828, 0.68 ) }
    dend_33 { pt3dadd( 2.06089, 21.2494, -5.35894, 0.68 ) }
    dend_33 { pt3dadd( 3.72978, 23.1014, -6.31731, 0.68 ) }
    dend_33 { pt3dadd( 4.17756, 23.6043, -6.4514, 0.68 ) }
    dend_33 { pt3dadd( 5.81804, 25.003, -6.21076, 0.68 ) }
    dend_33 { pt3dadd( 7.94493, 26.8165, -5.89878, 0.17 ) }
    dend_33 { pt3dadd( 11.8849, 30.1759, -5.32084, 0.17 ) }
    dend_33 { pt3dadd( 12.9444, 31.0101, -5.0311, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_33 { pt3dadd( 17.3575, 34.1561, -3.4508, 0.17 ) }
    dend_33 { pt3dadd( 23.632, 38.1263, -0.74834, 0.17 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 26.001, 10.1453, -15.1072, 0.17 ) }
    dend_31 { pt3dadd( 30.6244, 12.3282, -17.6689, 0.17 ) }
    dend_31 { pt3dadd( 32.0307, 13.0723, -18.3091, 0.17 ) }
    dend_31 { pt3dadd( 32.2241, 13.1779, -18.3856, 0.17 ) }
    dend_31 { pt3dadd( 35.0932, 14.7662, -19.3951, 0.17 ) }
    dend_31 { pt3dadd( 38.8084, 16.8301, -20.6287, 1.88 ) }
    dend_31 { pt3dadd( 40.3963, 17.7095, -21.1361, 0.17 ) }
    dend_31 { pt3dadd( 42.6928, 18.9938, -21.7597, 0.17 ) }
    dend_31 { pt3dadd( 43.8594, 19.6282, -22.156, 1.37 ) }
    dend_31 { pt3dadd( 45.0338, 20.2468, -22.6144, 0.17 ) }
    dend_31 { pt3dadd( 45.3468, 20.421, -22.7497, 0.17 ) }
    dend_31 { pt3dadd( 45.4737, 20.4948, -22.825, 0.17 ) }
    dend_31 { pt3dadd( 49.5397, 23.0058, -25.8352, 0.17 ) }
    dend_31 { pt3dadd( 51.3034, 24.2198, -27.2461, 1.71 ) }
    dend_31 { pt3dadd( 51.6054, 24.4487, -27.5411, 0.17 ) }
    dend_31 { pt3dadd( 53.861, 26.3266, -29.9644, 0.17 ) }
    dend_31 { pt3dadd( 56.9128, 28.9859, -33.2676, 1.71 ) }
    dend_31 { pt3dadd( 57.0085, 29.073, -33.3699, 0.17 ) }
    dend_31 { pt3dadd( 59.1046, 31.0865, -35.5589, 0.17 ) }
    dend_31 { pt3dadd( 61.8405, 33.5916, -38.7393, 1.71 ) }
    dend_31 { pt3dadd( 62.8396, 34.4012, -39.8439, 0.17 ) }
    dend_31 { pt3dadd( 63.9247, 35.1772, -40.93, 0.17 ) }
    dend_31 { pt3dadd( 65.0137, 35.9082, -41.8009, 1.71 ) }
    dend_31 { pt3dadd( 65.8743, 36.452, -42.4377, 0.17 ) }
    dend_31 { pt3dadd( 70.5466, 39.0091, -45.4897, 0.17 ) }
    dend_31 { pt3dadd( 72.3868, 40.0021, -46.508, 0.17 ) }
    dend_31 { pt3dadd( 74.0322, 40.8869, -47.3951, 1.71 ) }
    dend_31 { pt3dadd( 75.2017, 41.5343, -48.0144, 0.17 ) }
    dend_31 { pt3dadd( 79.6291, 43.9879, -50.2189, 0.17 ) }
    dend_31 { pt3dadd( 81.5579, 45.0543, -50.857, 1.71 ) }
    dend_31 { pt3dadd( 82.4537, 45.5898, -50.5618, 0.17 ) }
    dend_31 { pt3dadd( 83.8449, 46.545, -49.2363, 0.17 ) }
    dend_31 { pt3dadd( 83.8913, 46.5854, -49.0833, 0.17 ) }
    dend_31 { pt3dadd( 84.021, 46.7097, -48.4993, 1.37 ) }
    dend_31 { pt3dadd( 86.568, 49.0278, -37.4719, 0.17 ) }
    dend_31 { pt3dadd( 87.4635, 49.8453, -33.6586, 0.17 ) }
    dend_31 { pt3dadd( 87.7292, 50.078, -32.5593, 1.2 ) }
    dend_31 { pt3dadd( 92.2122, 53.8727, -16.0709, 0.17 ) }
    dend_31 { pt3dadd( 92.3113, 53.954, -15.7565, 0.17 ) }
    dend_31 { pt3dadd( 93.8899, 55.2531, -10.9694, 0.17 ) }
    dend_31 { pt3dadd( 94.0241, 55.3553, -10.6328, 1.88 ) }
    dend_31 { pt3dadd( 94.1943, 55.4647, -10.1601, 0.17 ) }
    dend_31 { pt3dadd( 95.8401, 56.4957, -6.04654, 0.17 ) }
    dend_31 { pt3dadd( 96.2766, 56.7632, -6.04654, 1.54 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 46/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 26.001, 10.1453, -15.1072, 0.34 ) }
    dend_30 { pt3dadd( 25.1618, 15.1161, -15.5574, 0.34 ) }
    dend_30 { pt3dadd( 24.9561, 17.3335, -15.7947, 0.34 ) }
    dend_30 { pt3dadd( 24.7014, 21.1698, -16.224, 0.34 ) }
    dend_30 { pt3dadd( 24.5182, 27.2081, -17.0742, 0.68 ) }
    dend_30 { pt3dadd( 24.4194, 31.9384, -18.0203, 0.68 ) }
    dend_30 { pt3dadd( 24.2693, 40.5396, -20.0216, 0.68 ) }
    dend_30 { pt3dadd( 24.3215, 46.9553, -21.8975, 0.68 ) }
    dend_30 { pt3dadd( 24.337, 47.1756, -21.9725, 0.68 ) }
    dend_30 { pt3dadd( 25.1851, 52.4291, -23.7922, 0.68 ) }
    dend_30 { pt3dadd( 26.2966, 57.1463, -25.4084, 0.34 ) }
    dend_30 { pt3dadd( 27.8631, 62.6912, -27.2905, 0.34 ) }
    dend_30 { pt3dadd( 28.9355, 66.1288, -28.3432, 0.34 ) }
    dend_30 { pt3dadd( 31.9933, 75.3155, -30.9117, 0.34 ) }
    dend_30 { pt3dadd( 35.5445, 85.5827, -33.355, 0.34 ) }
    dend_30 { pt3dadd( 36.1245, 87.1906, -33.6358, 2.05 ) }
    dend_30 { pt3dadd( 36.6413, 88.5489, -33.7985, 0.17 ) }
    dend_30 { pt3dadd( 38.7888, 93.8649, -34.3749, 0.17 ) }
    dend_30 { pt3dadd( 39.0404, 94.5421, -34.4228, 0.68 ) }
    dend_30 { pt3dadd( 39.2051, 95.1364, -34.4087, 0.17 ) }
    dend_30 { pt3dadd( 39.8716, 98.992, -34.3564, 0.17 ) }
    dend_30 { pt3dadd( 39.9184, 99.5323, -34.3564, 1.54 ) }
    dend_30 { pt3dadd( 39.9532, 100.402, -34.3818, 0.17 ) }
    dend_30 { pt3dadd( 39.9262, 103.727, -34.5658, 0.17 ) }
    dend_30 { pt3dadd( 39.8895, 105.635, -34.6972, 1.54 ) }
    dend_30 { pt3dadd( 39.8605, 106.364, -34.7543, 0.17 ) }
    dend_30 { pt3dadd( 39.5382, 112.162, -35.265, 0.17 ) }
    dend_30 { pt3dadd( 39.4435, 113.818, -35.4078, 1.2 ) }
    dend_30 { pt3dadd( 39.3756, 114.896, -35.4981, 0.17 ) }
    dend_30 { pt3dadd( 39.1494, 118.574, -35.7692, 0.17 ) }
    dend_30 { pt3dadd( 39.0287, 120.312, -35.8684, 1.88 ) }
    dend_30 { pt3dadd( 38.984, 120.927, -35.8939, 0.17 ) }
    dend_30 { pt3dadd( 38.7428, 124.551, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 38.612, 126.259, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 38.2715, 130.807, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 37.9839, 134.397, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 37.9595, 134.94, -35.9713, 1.37 ) }
    dend_30 { pt3dadd( 37.9934, 136.145, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 38.4181, 140.8, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 38.7479, 143.081, -35.9713, 1.2 ) }
    dend_30 { pt3dadd( 39.1085, 144.588, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 40.1963, 147.676, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 42.4094, 152.919, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 42.6588, 153.4, -35.9713, 1.54 ) }
    dend_30 { pt3dadd( 42.9424, 153.829, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 44.8968, 156.306, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 47.0701, 158.623, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 47.1954, 158.745, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 47.5598, 159.078, -35.9713, 1.88 ) }
    dend_30 { pt3dadd( 48.1179, 159.593, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 50.4501, 161.718, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 52.4582, 163.601, -35.9713, 0.17 ) }
    dend_30 { pt3dadd( 53.9875, 165.027, -35.9713, 1.54 ) }
    dend_30 { pt3dadd( 54.1067, 165.141, -35.9713, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 21.3873, 8.25833, 11.1192, 0.68 ) }
    dend_20 { pt3dadd( 22.2138, 11.0328, 10.926, 0.68 ) }
    dend_20 { pt3dadd( 22.8705, 13.2373, 10.7725, 0.68 ) }
    dend_20 { pt3dadd( 23.7004, 16.0232, 10.5785, 0.68 ) }
    dend_20 { pt3dadd( 24.3927, 18.3473, 10.4166, 0.68 ) }
    dend_20 { pt3dadd( 25.255, 21.2421, 10.215, 0.68 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 21.3873, 8.25833, 11.1192, 0.68 ) }
    dend_19 { pt3dadd( 23.9687, 8.46242, 12.2019, 0.68 ) }
    dend_19 { pt3dadd( 26.3314, 8.64921, 13.1928, 0.68 ) }
    dend_19 { pt3dadd( 30.6344, 8.98941, 14.9976, 0.68 ) }
    dend_19 { pt3dadd( 34.2001, 9.27131, 16.493, 0.68 ) }
    dend_19 { pt3dadd( 43.3176, 10.853, 20.2839, 0.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 12/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.66789, -22.5655, -14.7663, 0.17 ) }
    dend_16 { pt3dadd( 7.51985, -23.3276, -1.13133, 0.17 ) }
    dend_16 { pt3dadd( 7.59528, -23.3486, -0.897092, 0.17 ) }
    dend_16 { pt3dadd( 8.5182, -23.5927, 0.805129, 0.17 ) }
    dend_16 { pt3dadd( 9.42513, -23.9006, 1.59373, 0.17 ) }
    dend_16 { pt3dadd( 10.6874, -24.3952, 2.28806, 1.37 ) }
    dend_16 { pt3dadd( 12.5757, -25.2076, 3.05102, 0.17 ) }
    dend_16 { pt3dadd( 14.8948, -26.2655, 2.80842, 0.68 ) }
    dend_16 { pt3dadd( 16.1572, -26.829, 2.68275, 0.17 ) }
    dend_16 { pt3dadd( 18.9621, -28.0912, 2.4107, 0.86 ) }
    dend_16 { pt3dadd( 19.4146, -28.2482, 2.37587, 0.17 ) }
    dend_16 { pt3dadd( 20.0112, -28.3956, 2.34812, 0.17 ) }
    dend_16 { pt3dadd( 21.5733, -28.6314, 2.31388, 0.17 ) }
    dend_16 { pt3dadd( 23.7955, -28.865, 2.31388, 1.2 ) }
    dend_16 { pt3dadd( 24.6483, -28.9265, 2.31388, 1.2 ) }
    dend_16 { pt3dadd( 28.5792, -29.0186, 2.31388, 0.17 ) }
    dend_16 { pt3dadd( 33.0198, -29.1778, 2.31388, 0.68 ) }
    dend_16 { pt3dadd( 34.5921, -29.2608, 2.31388, 0.17 ) }
    dend_16 { pt3dadd( 36.877, -29.4695, 2.31388, 0.17 ) }
    dend_16 { pt3dadd( 38.3921, -29.7024, 2.31388, 1.37 ) }
    dend_16 { pt3dadd( 39.4439, -29.9342, 2.31388, 0.17 ) }
    dend_16 { pt3dadd( 42.1035, -30.7758, 2.31388, 0.17 ) }
    dend_16 { pt3dadd( 43.0459, -31.108, 2.31388, 1.88 ) }
    dend_16 { pt3dadd( 44.3398, -31.5672, 2.31388, 0.17 ) }
    dend_16 { pt3dadd( 47.0463, -32.5225, 2.82983, 0.17 ) }
    dend_16 { pt3dadd( 49.6165, -33.4173, 3.66504, 0.17 ) }
    dend_16 { pt3dadd( 51.2658, -33.9464, 4.34547, 2.05 ) }
    dend_16 { pt3dadd( 52.0618, -34.1935, 4.73111, 0.17 ) }
    dend_16 { pt3dadd( 55.3327, -35.2481, 6.79742, 0.17 ) }
    dend_16 { pt3dadd( 61.8247, -37.1684, 11.4002, 2.05 ) }
    dend_16 { pt3dadd( 62.1159, -37.2505, 11.6313, 0.17 ) }
    dend_16 { pt3dadd( 64.2877, -37.8283, 13.6037, 0.17 ) }
    dend_16 { pt3dadd( 65.6575, -38.1907, 14.8949, 1.71 ) }
    dend_16 { pt3dadd( 69.464, -39.2372, 18.5452, 0.17 ) }
    dend_16 { pt3dadd( 72.1632, -39.9479, 21.1182, 0.17 ) }
    dend_16 { pt3dadd( 72.3519, -39.9876, 21.2587, 0.86 ) }
    dend_16 { pt3dadd( 75.2265, -40.5279, 23.2995, 0.17 ) }
    dend_16 { pt3dadd( 77.1353, -40.8269, 24.5937, 0.17 ) }
    dend_16 { pt3dadd( 77.2811, -40.8408, 24.6695, 0.17 ) }
    dend_16 { pt3dadd( 78.0732, -40.9163, 25.0225, 1.88 ) }
    dend_16 { pt3dadd( 79.2605, -41.1612, 25.6758, 0.17 ) }
    dend_16 { pt3dadd( 81.2369, -41.7093, 26.7045, 0.17 ) }
    dend_16 { pt3dadd( 81.7102, -41.8549, 26.9256, 1.37 ) }
    dend_16 { pt3dadd( 82.8885, -42.276, 28.0478, 0.34 ) }
    dend_16 { pt3dadd( 85.771, -43.4642, 31.466, 0.17 ) }
    dend_16 { pt3dadd( 87.0676, -44.0428, 33.176, 0.17 ) }
    dend_16 { pt3dadd( 88.2697, -44.6276, 34.9726, 0.17 ) }
    dend_16 { pt3dadd( 88.8001, -44.9023, 35.8751, 2.05 ) }
    dend_16 { pt3dadd( 93.5584, -47.4536, 44.5846, 0.17 ) }
    dend_16 { pt3dadd( 93.8543, -47.6176, 45.182, 1.71 ) }
    dend_16 { pt3dadd( 101.278, -50.1591, 51.3818, 1.71 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.66789, -22.5655, -14.7663, 1.2 ) }
    dend_1 { pt3dadd( 3.72001, -24.793, -14.1693, 1.2 ) }
    dend_1 { pt3dadd( 2.05942, -28.8152, -13.1798, 0.68 ) }
    dend_1 { pt3dadd( 0.79461, -31.9485, -12.4485, 2.22 ) }
    dend_1 { pt3dadd( 0.219593, -33.6438, -12.0871, 0.86 ) }
    dend_1 { pt3dadd( -0.0484973, -34.4342, -11.9186, 0.68 ) }
    dend_1 { pt3dadd( -0.89053, -36.9167, -11.3894, 0.68 ) }
    dend_1 { pt3dadd( -1.23061, -37.875, -11.1713, 1.54 ) }
    dend_1 { pt3dadd( -1.28012, -38.0372, -11.1389, 1.54 ) }
    dend_1 { pt3dadd( -1.77995, -40.6161, -11.1389, 1.54 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 39.2524, 8.96767, -0.662165, 0.17 ) }
    axon_1 { pt3dadd( 53.8321, 12.494, -0.662165, 0.17 ) }
    axon_1 { pt3dadd( 68.4117, 16.0203, -0.662165, 0.17 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 76/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -20.1099, -4.02144, 0.457224, 0.86 ) }
    dend_56 { pt3dadd( -20.9225, -4.99313, -0.916803, 0.86 ) }
    dend_56 { pt3dadd( -21.9197, -5.88035, -2.48428, 0.68 ) }
    dend_56 { pt3dadd( -23.2398, -6.82716, -4.40945, 0.68 ) }
    dend_56 { pt3dadd( -27.4749, -9.42027, -10.2737, 0.68 ) }
    dend_56 { pt3dadd( -29.5191, -10.4557, -12.9088, 0.68 ) }
    dend_56 { pt3dadd( -31.5278, -11.2235, -15.3411, 0.68 ) }
    dend_56 { pt3dadd( -33.9053, -11.6687, -17.9058, 1.2 ) }
    dend_56 { pt3dadd( -34.8165, -11.6559, -18.7339, 1.2 ) }
    dend_56 { pt3dadd( -35.3302, -11.5749, -19.0631, 0.68 ) }
    dend_56 { pt3dadd( -37.0211, -11.176, -19.623, 0.68 ) }
    dend_56 { pt3dadd( -39.5907, -10.4106, -20.3625, 0.51 ) }
    dend_56 { pt3dadd( -40.9099, -10.0664, -20.5567, 0.51 ) }
    dend_56 { pt3dadd( -43.2798, -9.71134, -20.6316, 1.88 ) }
    dend_56 { pt3dadd( -45.7128, -9.57034, -20.7073, 1.88 ) }
    dend_56 { pt3dadd( -47.6329, -9.71124, -20.7598, 1.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 92/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -20.1099, -4.02144, 0.457224, 0.86 ) }
    dend_51 { pt3dadd( -22.0369, -3.5981, -1.59382, 0.86 ) }
    dend_51 { pt3dadd( -24.9189, -3.21034, -4.55912, 0.86 ) }
    dend_51 { pt3dadd( -27.0314, -2.96347, -6.59554, 0.86 ) }
    dend_51 { pt3dadd( -33.0092, -2.06646, -11.7904, 0.86 ) }
    dend_51 { pt3dadd( -35.0148, -1.72004, -13.4098, 0.86 ) }
    dend_51 { pt3dadd( -40.8135, -0.663555, -17.9969, 0.86 ) }
    dend_51 { pt3dadd( -42.1205, -0.422709, -19.0212, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_51 { pt3dadd( -44.2262, -0.0315901, -20.6052, 0.86 ) }
    dend_51 { pt3dadd( -47.8687, 0.64404, -23.201, 0.86 ) }
    dend_51 { pt3dadd( -50.7603, 1.12693, -25.1918, 0.51 ) }
    dend_51 { pt3dadd( -53.987, 1.69723, -27.3227, 0.34 ) }
    dend_51 { pt3dadd( -57.5392, 2.45821, -29.3976, 0.17 ) }
    dend_51 { pt3dadd( -60.0704, 2.93294, -30.8271, 0.17 ) }
    dend_51 { pt3dadd( -62.3193, 3.20846, -32.0324, 2.05 ) }
    dend_51 { pt3dadd( -64.0527, 3.29009, -32.801, 0.17 ) }
    dend_51 { pt3dadd( -65.7737, 3.35141, -33.2606, 0.17 ) }
    dend_51 { pt3dadd( -66.8676, 3.38219, -33.3727, 0.68 ) }
    dend_51 { pt3dadd( -69.5427, 3.40182, -33.39, 0.34 ) }
    dend_51 { pt3dadd( -70.3974, 3.3817, -33.3954, 0.17 ) }
    dend_51 { pt3dadd( -72.632, 3.32553, -33.3383, 1.88 ) }
    dend_51 { pt3dadd( -73.6993, 3.27417, -33.2152, 0.17 ) }
    dend_51 { pt3dadd( -75.2104, 3.1697, -32.9358, 0.17 ) }
    dend_51 { pt3dadd( -76.8771, 3.00422, -32.5431, 1.2 ) }
    dend_51 { pt3dadd( -77.8613, 2.89943, -32.2723, 0.17 ) }
    dend_51 { pt3dadd( -81.0529, 2.61828, -31.3606, 0.17 ) }
    dend_51 { pt3dadd( -83.6264, 2.47547, -30.3513, 1.71 ) }
    dend_51 { pt3dadd( -84.7536, 2.43616, -29.8327, 0.17 ) }
    dend_51 { pt3dadd( -86.2529, 2.44818, -29.0731, 0.17 ) }
    dend_51 { pt3dadd( -87.6143, 2.54193, -28.3749, 2.39 ) }
    dend_51 { pt3dadd( -89.3844, 2.67631, -27.5639, 0.68 ) }
    dend_51 { pt3dadd( -93.1069, 2.89716, -26.158, 0.17 ) }
    dend_51 { pt3dadd( -94.2466, 2.93477, -25.814, 0.17 ) }
    dend_51 { pt3dadd( -95.5242, 2.95826, -25.42, 1.2 ) }
    dend_51 { pt3dadd( -97.7581, 2.94564, -24.7415, 0.17 ) }
    dend_51 { pt3dadd( -100.932, 2.84358, -23.8879, 0.17 ) }
    dend_51 { pt3dadd( -102.649, 2.74529, -23.5882, 2.22 ) }
    dend_51 { pt3dadd( -103.216, 2.69678, -23.5882, 2.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -82.7884, 28.3405, -41.7166, 0.17 ) }
    dend_49 { pt3dadd( -83.485, 29.7903, -41.7412, 0.17 ) }
    dend_49 { pt3dadd( -83.9184, 30.6091, -41.7531, 0.17 ) }
    dend_49 { pt3dadd( -85.2513, 33.0305, -41.7853, 0.17 ) }
    dend_49 { pt3dadd( -85.4488, 33.3585, -41.7883, 0.17 ) }
    dend_49 { pt3dadd( -87.7146, 37.0881, -41.8143, 0.17 ) }
    dend_49 { pt3dadd( -88.9619, 39.12, -41.8263, 1.2 ) }
    dend_49 { pt3dadd( -89.3574, 39.7822, -41.8263, 0.17 ) }
    dend_49 { pt3dadd( -89.4467, 39.9322, -41.8311, 0.17 ) }
    dend_49 { pt3dadd( -93.2701, 46.2319, -42.2092, 0.17 ) }
    dend_49 { pt3dadd( -94.5015, 48.3102, -42.3796, 1.54 ) }
    dend_49 { pt3dadd( -95.0717, 49.2955, -42.4858, 0.17 ) }
    dend_49 { pt3dadd( -96.5548, 51.9876, -42.8223, 0.17 ) }
    dend_49 { pt3dadd( -97.5459, 53.851, -43.1312, 1.2 ) }
    dend_49 { pt3dadd( -97.9627, 54.6966, -43.3095, 0.17 ) }
    dend_49 { pt3dadd( -98.0233, 54.8433, -43.3543, 0.17 ) }
    dend_49 { pt3dadd( -98.4729, 56.0052, -43.7329, 0.17 ) }
    dend_49 { pt3dadd( -98.8969, 57.1788, -44.1048, 1.37 ) }
    dend_49 { pt3dadd( -99.6209, 58.9275, -44.6009, 0.17 ) }
    dend_49 { pt3dadd( -100.689, 61.2151, -45.305, 0.17 ) }
    dend_49 { pt3dadd( -100.768, 61.3614, -45.3589, 0.17 ) }
    dend_49 { pt3dadd( -101.266, 62.1896, -45.7038, 1.03 ) }
    dend_49 { pt3dadd( -101.545, 62.5784, -45.9691, 0.17 ) }
    dend_49 { pt3dadd( -102.655, 63.9565, -47.0832, 0.17 ) }
    dend_49 { pt3dadd( -104.276, 65.8269, -48.7028, 1.71 ) }
    dend_49 { pt3dadd( -105.083, 66.7423, -49.4874, 0.17 ) }
    dend_49 { pt3dadd( -105.181, 66.8547, -49.5786, 0.17 ) }
    dend_49 { pt3dadd( -108.864, 71.296, -52.9717, 0.17 ) }
    dend_49 { pt3dadd( -109.774, 72.4772, -53.776, 1.37 ) }
    dend_49 { pt3dadd( -110.125, 72.9737, -54.095, 0.17 ) }
    dend_49 { pt3dadd( -111.552, 75.0971, -55.2749, 0.17 ) }
    dend_49 { pt3dadd( -111.978, 75.763, -55.61, 1.54 ) }
    dend_49 { pt3dadd( -112.694, 76.8885, -56.041, 0.17 ) }
    dend_49 { pt3dadd( -113.562, 78.2339, -56.3103, 0.17 ) }
    dend_49 { pt3dadd( -114.796, 80.0499, -56.6299, 1.88 ) }
    dend_49 { pt3dadd( -115.494, 81.0315, -56.7697, 0.17 ) }
    dend_49 { pt3dadd( -116.645, 82.5494, -56.9303, 0.17 ) }
    dend_49 { pt3dadd( -117.885, 84.0782, -57.0223, 1.54 ) }
    dend_49 { pt3dadd( -118.449, 84.7278, -57.0308, 0.17 ) }
    dend_49 { pt3dadd( -120.049, 86.498, -56.9746, 0.17 ) }
    dend_49 { pt3dadd( -121.259, 87.8086, -56.8675, 1.71 ) }
    dend_49 { pt3dadd( -122.265, 88.8604, -56.7979, 0.17 ) }
    dend_49 { pt3dadd( -123.617, 90.238, -56.7411, 0.17 ) }
    dend_49 { pt3dadd( -124.416, 90.9731, -56.7366, 2.22 ) }
    dend_49 { pt3dadd( -125.359, 91.7753, -56.7338, 0.17 ) }
    dend_49 { pt3dadd( -126.866, 92.9483, -56.7338, 0.17 ) }
    dend_49 { pt3dadd( -127.253, 93.2413, -56.7338, 1.88 ) }
    dend_49 { pt3dadd( -128.52, 94.1861, -56.7338, 0.17 ) }
    dend_49 { pt3dadd( -131.867, 96.6335, -56.7338, 0.17 ) }
    dend_49 { pt3dadd( -132.953, 97.409, -56.7338, 1.03 ) }
    dend_49 { pt3dadd( -134.346, 98.3999, -56.67, 0.17 ) }
    dend_49 { pt3dadd( -137.184, 100.387, -56.443, 0.17 ) }
    dend_49 { pt3dadd( -138.184, 101.097, -56.335, 2.05 ) }
    dend_49 { pt3dadd( -139.821, 102.277, -55.9252, 0.17 ) }
    dend_49 { pt3dadd( -142.108, 103.862, -55.0318, 0.17 ) }
    dend_49 { pt3dadd( -144.1, 105.039, -54.0323, 1.03 ) }
    dend_49 { pt3dadd( -144.837, 105.368, -53.5868, 0.17 ) }
    dend_49 { pt3dadd( -145.931, 105.747, -52.8358, 0.17 ) }
    dend_49 { pt3dadd( -150.01, 106.896, -49.8851, 0.17 ) }
    dend_49 { pt3dadd( -151.998, 107.324, -48.4422, 0.17 ) }
    dend_49 { pt3dadd( -153.816, 107.648, -47.1941, 0.17 ) }
    dend_49 { pt3dadd( -158.223, 108.336, -44.7072, 0.17 ) }
    dend_49 { pt3dadd( -158.544, 108.39, -44.581, 1.71 ) }
    dend_49 { pt3dadd( -159.217, 108.513, -44.4458, 0.17 ) }
    dend_49 { pt3dadd( -160.99, 108.992, -44.6492, 0.17 ) }
    dend_49 { pt3dadd( -162.425, 109.54, -45.06, 0.17 ) }
    dend_49 { pt3dadd( -164.737, 110.562, -45.7517, 0.17 ) }
    dend_49 { pt3dadd( -168.745, 112.323, -47.015, 1.37 ) }
    dend_49 { pt3dadd( -169.681, 112.717, -47.2497, 0.17 ) }
    dend_49 { pt3dadd( -172.47, 113.79, -47.7295, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -175.898, 114.979, -47.8971, 0.17 ) }
    dend_49 { pt3dadd( -179.552, 116.154, -47.7853, 1.03 ) }
    dend_49 { pt3dadd( -180.574, 116.475, -47.6333, 0.17 ) }
    dend_49 { pt3dadd( -181.374, 116.688, -47.3858, 0.17 ) }
    dend_49 { pt3dadd( -184.382, 117.344, -46.3617, 0.17 ) }
    dend_49 { pt3dadd( -186.245, 117.586, -45.4288, 1.03 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 6/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -82.7884, 28.3405, -41.7166, 0.34 ) }
    dend_46 { pt3dadd( -84.7821, 27.737, -42.6283, 0.34 ) }
    dend_46 { pt3dadd( -87.0188, 27.179, -43.5335, 0.34 ) }
    dend_46 { pt3dadd( -87.6729, 26.9948, -43.7833, 0.34 ) }
    dend_46 { pt3dadd( -87.8897, 26.9295, -43.8582, 0.34 ) }
    dend_46 { pt3dadd( -90.6055, 26.0414, -45.0344, 0.34 ) }
    dend_46 { pt3dadd( -92.6831, 25.2972, -45.9713, 0.34 ) }
    dend_46 { pt3dadd( -94.6312, 24.5688, -46.7612, 1.03 ) }
    dend_46 { pt3dadd( -95.5881, 24.1722, -47.1192, 0.68 ) }
    dend_46 { pt3dadd( -96.8735, 23.5772, -47.74, 0.86 ) }
    dend_46 { pt3dadd( -99.124, 22.3903, -49.0487, 0.17 ) }
    dend_46 { pt3dadd( -101.344, 21.0331, -50.5167, 0.17 ) }
    dend_46 { pt3dadd( -102.187, 20.5001, -51.0883, 1.37 ) }
    dend_46 { pt3dadd( -103.376, 19.7982, -51.8055, 0.17 ) }
    dend_46 { pt3dadd( -107.312, 17.6742, -54.0238, 0.17 ) }
    dend_46 { pt3dadd( -107.458, 17.6062, -54.0924, 0.17 ) }
    dend_46 { pt3dadd( -108.784, 17.1107, -54.5361, 1.03 ) }
    dend_46 { pt3dadd( -109.601, 16.9223, -54.7614, 0.34 ) }
    dend_46 { pt3dadd( -111.656, 16.7514, -55.2544, 0.34 ) }
    dend_46 { pt3dadd( -111.99, 16.7627, -55.3147, 0.34 ) }
    dend_46 { pt3dadd( -114.303, 16.9193, -55.4987, 0.17 ) }
    dend_46 { pt3dadd( -115.06, 16.9609, -55.5778, 2.05 ) }
    dend_46 { pt3dadd( -117.331, 17.1165, -55.8657, 0.17 ) }
    dend_46 { pt3dadd( -119.244, 17.2165, -56.089, 0.17 ) }
    dend_46 { pt3dadd( -119.592, 17.2274, -56.1251, 0.17 ) }
    dend_46 { pt3dadd( -123.904, 17.3167, -56.4928, 0.17 ) }
    dend_46 { pt3dadd( -125.503, 17.3241, -56.732, 1.03 ) }
    dend_46 { pt3dadd( -127.094, 17.289, -57.0318, 0.17 ) }
    dend_46 { pt3dadd( -129.786, 17.1587, -57.5981, 0.17 ) }
    dend_46 { pt3dadd( -131.688, 17.0089, -58.0085, 0.17 ) }
    dend_46 { pt3dadd( -133.969, 16.8313, -58.6762, 1.54 ) }
    dend_46 { pt3dadd( -137.499, 16.5461, -60.0331, 0.17 ) }
    dend_46 { pt3dadd( -139.369, 16.3265, -60.8642, 0.17 ) }
    dend_46 { pt3dadd( -140.585, 16.1363, -61.4822, 0.86 ) }
    dend_46 { pt3dadd( -141.441, 15.9711, -61.972, 0.17 ) }
    dend_46 { pt3dadd( -143.992, 15.3024, -63.9186, 0.17 ) }
    dend_46 { pt3dadd( -144.552, 15.1236, -64.4007, 1.37 ) }
    dend_46 { pt3dadd( -144.819, 15.0385, -64.6583, 0.17 ) }
    dend_46 { pt3dadd( -144.929, 15.0054, -64.7742, 0.17 ) }
    dend_46 { pt3dadd( -145.603, 14.8108, -65.5368, 0.17 ) }
    dend_46 { pt3dadd( -149.007, 13.8314, -69.3944, 0.17 ) }
    dend_46 { pt3dadd( -150.215, 13.4646, -70.7943, 1.37 ) }
    dend_46 { pt3dadd( -153.241, 12.5655, -74.354, 0.17 ) }
    dend_46 { pt3dadd( -154.329, 12.2413, -75.638, 0.17 ) }
    dend_46 { pt3dadd( -156.451, 11.6257, -78.1112, 0.17 ) }
    dend_46 { pt3dadd( -157.477, 11.3445, -79.2884, 1.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 52/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 25.5124, 74.7413, 11.6534, 0.17 ) }
    dend_42 { pt3dadd( 24.3348, 77.2528, 15.1468, 0.17 ) }
    dend_42 { pt3dadd( 23.9395, 78.5666, 16.6001, 0.68 ) }
    dend_42 { pt3dadd( 22.8514, 83.5525, 21.3864, 0.68 ) }
    dend_42 { pt3dadd( 22.1198, 86.9052, 24.6049, 0.68 ) }
    dend_42 { pt3dadd( 21.7963, 88.3875, 26.0278, 0.51 ) }
    dend_42 { pt3dadd( 21.4951, 89.7675, 27.3527, 0.51 ) }
    dend_42 { pt3dadd( 21.2895, 91.6465, 28.5312, 0.51 ) }
    dend_42 { pt3dadd( 21.2991, 91.954, 28.6696, 0.51 ) }
    dend_42 { pt3dadd( 20.0811, 100.131, 34.2958, 0.51 ) }
    dend_42 { pt3dadd( 17.7783, 106.999, 41.1897, 0.51 ) }
    dend_42 { pt3dadd( 14.4557, 113.613, 47.9141, 0.51 ) }
    dend_42 { pt3dadd( 10.5619, 119.448, 55.0407, 0.51 ) }
    dend_42 { pt3dadd( 6.17906, 125.408, 61.7692, 0.51 ) }
    dend_42 { pt3dadd( 2.06263, 132.741, 67.1808, 0.51 ) }
    dend_42 { pt3dadd( -1.73303, 140.7, 71.8968, 0.51 ) }
    dend_42 { pt3dadd( -6.15942, 147.676, 77.5308, 0.51 ) }
    dend_42 { pt3dadd( -11.1666, 154.95, 82.2233, 0.51 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 70/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 25.5124, 74.7413, 11.6534, 0.17 ) }
    dend_37 { pt3dadd( 26.3279, 75.9031, -6.76599, 0.17 ) }
    dend_37 { pt3dadd( 26.3352, 75.9134, -6.93043, 0.17 ) }
    dend_37 { pt3dadd( 26.4363, 76.0576, -9.21577, 2.22 ) }
    dend_37 { pt3dadd( 26.4828, 76.1237, -10.2641, 2.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_20 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 25.255, 21.2421, 10.215, 0.68 ) }
    dend_28 { pt3dadd( 26.0275, 23.1422, 8.85068, 0.68 ) }
    dend_28 { pt3dadd( 26.1153, 23.4652, 8.66481, 1.88 ) }
    dend_28 { pt3dadd( 26.7854, 28.8945, 6.79285, 0.17 ) }
    dend_28 { pt3dadd( 26.9737, 32.7404, 5.73142, 0.51 ) }
    dend_28 { pt3dadd( 27.0534, 36.1103, 4.92059, 0.51 ) }
    dend_28 { pt3dadd( 27.1756, 41.281, 3.67645, 0.51 ) }
    dend_28 { pt3dadd( 27.1398, 45.8251, 2.63769, 1.03 ) }
    dend_28 { pt3dadd( 26.9028, 52.9578, 1.37571, 1.03 ) }
    dend_28 { pt3dadd( 26.6068, 56.8403, 1.06813, 1.03 ) }
    dend_28 { pt3dadd( 26.3229, 58.7292, 0.951021, 0.17 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 86/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 25.255, 21.2421, 10.215, 0.17 ) }
    dend_21 { pt3dadd( 26.9574, 21.1115, 11.2614, 0.17 ) }
    dend_21 { pt3dadd( 29.5303, 20.9141, 12.8428, 0.17 ) }
    dend_21 { pt3dadd( 31.425, 20.7688, 14.0073, 0.51 ) }
    dend_21 { pt3dadd( 35.3912, 20.4645, 16.4452, 0.51 ) }
    dend_21 { pt3dadd( 42.3143, 19.9334, 20.7004, 0.51 ) }
    dend_21 { pt3dadd( 42.5171, 19.9178, 20.825, 0.51 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.77995, -40.6161, -11.1389, 1.54 ) }
    dend_3 { pt3dadd( -1.65612, -41.3093, -11.2538, 1.54 ) }
    dend_3 { pt3dadd( -1.47031, -42.3493, -11.4262, 1.03 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 96/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -1.77995, -40.6161, -11.1389, 0.17 ) }
    dend_2 { pt3dadd( -1.01719, -41.7372, -8.88896, 0.17 ) }
    dend_2 { pt3dadd( -0.699381, -42.7069, -7.10092, 0.17 ) }
    dend_2 { pt3dadd( -0.672858, -42.9108, -6.77637, 1.71 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( -0.658692, -43.6443, -5.57892, 0.17 ) }
    dend_2 { pt3dadd( -1.12563, -47.4425, 1.2404, 0.17 ) }
    dend_2 { pt3dadd( -1.72741, -50.4385, 6.56037, 0.17 ) }
    dend_2 { pt3dadd( -2.22828, -51.8776, 9.1214, 0.17 ) }
    dend_2 { pt3dadd( -2.73514, -53.1001, 11.2093, 0.17 ) }
    dend_2 { pt3dadd( -4.22777, -56.5896, 16.6418, 0.17 ) }
    dend_2 { pt3dadd( -5.41787, -59.3905, 20.4914, 0.17 ) }
    dend_2 { pt3dadd( -6.04126, -60.7182, 22.063, 0.17 ) }
    dend_2 { pt3dadd( -6.42923, -61.7349, 23.2071, 0.17 ) }
    dend_2 { pt3dadd( -6.83693, -63.0922, 24.7835, 0.17 ) }
    dend_2 { pt3dadd( -7.40771, -65.3494, 27.2317, 0.17 ) }
    dend_2 { pt3dadd( -7.95838, -68.8426, 29.3825, 0.17 ) }
    dend_2 { pt3dadd( -11.4209, -73.4203, 37.5713, 0.17 ) }
    dend_2 { pt3dadd( -16.5979, -76.0268, 45.7202, 0.17 ) }
    dend_2 { pt3dadd( -21.9083, -78.5278, 53.8162, 0.17 ) }
    dend_2 { pt3dadd( -26.0609, -81.6485, 62.3612, 0.17 ) }
    dend_2 { pt3dadd( -31.145, -84.4177, 70.5149, 0.17 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 17/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -47.6329, -9.71124, -20.7598, 0.17 ) }
    dend_60 { pt3dadd( -47.7461, -9.63634, -20.7954, 0.17 ) }
    dend_60 { pt3dadd( -48.5356, -9.03607, -21.1084, 0.17 ) }
    dend_60 { pt3dadd( -49.1376, -8.61246, -21.3388, 0.17 ) }
    dend_60 { pt3dadd( -50.6124, -7.65137, -21.8715, 1.37 ) }
    dend_60 { pt3dadd( -51.7179, -7.00424, -22.2442, 1.37 ) }
    dend_60 { pt3dadd( -53.7705, -5.94441, -22.8787, 0.17 ) }
    dend_60 { pt3dadd( -55.0519, -5.34286, -23.2535, 0.17 ) }
    dend_60 { pt3dadd( -56.2744, -4.85616, -23.6598, 0.17 ) }
    dend_60 { pt3dadd( -56.9277, -4.68083, -23.8766, 1.03 ) }
    dend_60 { pt3dadd( -57.6944, -4.58997, -24.2735, 1.03 ) }
    dend_60 { pt3dadd( -58.954, -4.60829, -25.0379, 0.17 ) }
    dend_60 { pt3dadd( -59.6869, -4.73456, -25.5807, 0.17 ) }
    dend_60 { pt3dadd( -61.7007, -5.3579, -27.3238, 2.22 ) }
    dend_60 { pt3dadd( -62.884, -5.82005, -28.4757, 2.22 ) }
    dend_60 { pt3dadd( -66.2744, -7.38744, -31.8567, 0.17 ) }
    dend_60 { pt3dadd( -67.4712, -8.06007, -33.1851, 0.17 ) }
    dend_60 { pt3dadd( -69.4501, -9.32499, -35.409, 0.17 ) }
    dend_60 { pt3dadd( -70.2072, -9.88507, -36.2022, 1.88 ) }
    dend_60 { pt3dadd( -70.3061, -9.97516, -36.2949, 1.88 ) }
    dend_60 { pt3dadd( -71.617, -11.3766, -37.4674, 1.2 ) }
    dend_60 { pt3dadd( -73.4369, -13.6515, -38.7774, 0.34 ) }
    dend_60 { pt3dadd( -74.7609, -15.4591, -39.661, 0.34 ) }
    dend_60 { pt3dadd( -76.1967, -17.6976, -40.4873, 2.05 ) }
    dend_60 { pt3dadd( -77.329, -19.636, -41.0969, 0.51 ) }
    dend_60 { pt3dadd( -78.7102, -22.1802, -41.7693, 0.51 ) }
    dend_60 { pt3dadd( -80.0784, -24.8905, -42.3371, 0.17 ) }
    dend_60 { pt3dadd( -81.2318, -27.1627, -42.6598, 0.17 ) }
    dend_60 { pt3dadd( -82.6977, -30.0446, -43.0243, 0.17 ) }
    dend_60 { pt3dadd( -83.5438, -31.5233, -43.1781, 1.54 ) }
    dend_60 { pt3dadd( -84.1985, -32.4684, -43.2358, 1.54 ) }
    dend_60 { pt3dadd( -85.2142, -33.719, -43.1767, 0.17 ) }
    dend_60 { pt3dadd( -86.5187, -35.1079, -43.0405, 0.17 ) }
    dend_60 { pt3dadd( -87.6115, -36.1641, -42.8876, 2.05 ) }
    dend_60 { pt3dadd( -88.7608, -37.1474, -42.6322, 0.34 ) }
    dend_60 { pt3dadd( -91.3979, -39.3403, -41.8132, 0.34 ) }
    dend_60 { pt3dadd( -93.043, -40.6841, -41.1843, 1.54 ) }
    dend_60 { pt3dadd( -94.3203, -41.6828, -40.6192, 1.54 ) }
    dend_60 { pt3dadd( -94.6822, -41.9483, -40.4485, 0.17 ) }
    dend_60 { pt3dadd( -96.813, -43.3934, -39.4068, 0.17 ) }
    dend_60 { pt3dadd( -97.8805, -44.0488, -38.8963, 1.03 ) }
    dend_60 { pt3dadd( -98.3144, -44.3115, -38.7153, 1.03 ) }
    dend_60 { pt3dadd( -99.3319, -44.8751, -38.4172, 0.17 ) }
    dend_60 { pt3dadd( -101.354, -45.8245, -37.955, 0.17 ) }
    dend_60 { pt3dadd( -101.696, -45.9722, -37.902, 0.68 ) }
    dend_60 { pt3dadd( -102.833, -46.4418, -37.7173, 0.17 ) }
    dend_60 { pt3dadd( -105.309, -47.3869, -37.3576, 0.17 ) }
    dend_60 { pt3dadd( -107.47, -48.2359, -36.8984, 0.17 ) }
    dend_60 { pt3dadd( -108.773, -48.7901, -36.5779, 1.37 ) }
    dend_60 { pt3dadd( -110.2, -49.4605, -36.1855, 0.51 ) }
    dend_60 { pt3dadd( -112.621, -50.7843, -35.1277, 0.51 ) }
    dend_60 { pt3dadd( -114.398, -51.886, -34.071, 0.51 ) }
    dend_60 { pt3dadd( -116.304, -53.1536, -32.7106, 0.17 ) }
    dend_60 { pt3dadd( -117.5, -54.1065, -31.761, 1.2 ) }
    dend_60 { pt3dadd( -118.172, -54.6356, -31.2435, 1.2 ) }
    dend_60 { pt3dadd( -121.266, -57.0157, -28.9738, 0.17 ) }
    dend_60 { pt3dadd( -122.202, -57.7096, -28.3918, 0.17 ) }
    dend_60 { pt3dadd( -123.281, -58.4787, -27.5876, 1.88 ) }
    dend_60 { pt3dadd( -123.946, -58.9031, -27.1127, 0.17 ) }
    dend_60 { pt3dadd( -125.402, -59.8334, -25.9651, 0.17 ) }
    dend_60 { pt3dadd( -125.769, -60.0697, -25.6968, 0.86 ) }
    dend_60 { pt3dadd( -126.764, -60.7306, -25.1791, 0.86 ) }
    dend_60 { pt3dadd( -129.029, -62.4644, -23.9283, 0.17 ) }
    dend_60 { pt3dadd( -129.6, -62.8902, -23.6387, 0.17 ) }
    dend_60 { pt3dadd( -130.28, -63.3436, -23.3577, 0.17 ) }
    dend_60 { pt3dadd( -130.89, -63.7478, -23.1555, 0.86 ) }
    dend_60 { pt3dadd( -132.597, -64.8418, -22.7467, 0.34 ) }
    dend_60 { pt3dadd( -134.265, -65.8917, -22.4405, 0.34 ) }
    dend_60 { pt3dadd( -135.806, -66.899, -22.2409, 0.34 ) }
    dend_60 { pt3dadd( -139.189, -69.1545, -22.0029, 0.34 ) }
    dend_60 { pt3dadd( -140.91, -70.3385, -21.9557, 0.34 ) }
    dend_60 { pt3dadd( -144.551, -72.9228, -21.8807, 0.34 ) }
    dend_60 { pt3dadd( -144.682, -73.0221, -21.8797, 0.34 ) }
    dend_60 { pt3dadd( -146.399, -74.3915, -21.9147, 0.34 ) }
    dend_60 { pt3dadd( -148.67, -76.4586, -22.0963, 1.88 ) }
    dend_60 { pt3dadd( -149.181, -76.9639, -22.2354, 1.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 93/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -47.6329, -9.71124, -20.7598, 0.68 ) }
    dend_57 { pt3dadd( -49.581, -14.127, -22.7603, 0.68 ) }
    dend_57 { pt3dadd( -50.2205, -15.5765, -23.417, 0.51 ) }
    dend_57 { pt3dadd( -51.1979, -17.7919, -24.4206, 0.51 ) }
    dend_57 { pt3dadd( -52.76, -21.3329, -26.0248, 0.51 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 98/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -103.216, 2.69678, -23.5882, 0.17 ) }
    dend_53 { pt3dadd( -103.679, 2.69747, -24.211, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_53 { pt3dadd( -103.777, 2.69927, -24.3439, 0.17 ) }
    dend_53 { pt3dadd( -104.109, 2.71387, -24.7363, 0.17 ) }
    dend_53 { pt3dadd( -105.192, 2.80727, -26.1632, 0.86 ) }
    dend_53 { pt3dadd( -106.94, 2.95475, -28.4089, 0.34 ) }
    dend_53 { pt3dadd( -110.672, 3.22074, -33.5746, 0.34 ) }
    dend_53 { pt3dadd( -111.512, 3.27215, -34.6832, 1.71 ) }
    dend_53 { pt3dadd( -112.904, 3.36685, -36.4111, 0.17 ) }
    dend_53 { pt3dadd( -115.464, 3.53653, -39.3084, 0.17 ) }
    dend_53 { pt3dadd( -116.729, 3.6186, -40.694, 0.17 ) }
    dend_53 { pt3dadd( -120.597, 3.82857, -44.313, 0.17 ) }
    dend_53 { pt3dadd( -123.591, 3.99375, -46.5405, 0.17 ) }
    dend_53 { pt3dadd( -124.726, 4.03338, -47.323, 1.88 ) }
    dend_53 { pt3dadd( -126.993, 4.09273, -48.6295, 0.17 ) }
    dend_53 { pt3dadd( -131.596, 4.17444, -50.6108, 0.17 ) }
    dend_53 { pt3dadd( -133.861, 4.23985, -51.4566, 0.17 ) }
    dend_53 { pt3dadd( -134.704, 4.26409, -51.7101, 1.2 ) }
    dend_53 { pt3dadd( -136.341, 4.32371, -52.2976, 0.17 ) }
    dend_53 { pt3dadd( -139.186, 4.39378, -53.5601, 0.17 ) }
    dend_53 { pt3dadd( -139.68, 4.40732, -53.8066, 0.17 ) }
    dend_53 { pt3dadd( -139.84, 4.41307, -53.8712, 0.17 ) }
    dend_53 { pt3dadd( -142.06, 4.45246, -54.9747, 0.17 ) }
    dend_53 { pt3dadd( -143.583, 4.42252, -55.7634, 2.05 ) }
    dend_53 { pt3dadd( -146.252, 4.29983, -57.1454, 1.54 ) }
    dend_53 { pt3dadd( -147.076, 4.2355, -57.5506, 0.17 ) }
    dend_53 { pt3dadd( -149.589, 3.9797, -58.673, 0.17 ) }
    dend_53 { pt3dadd( -153.854, 3.41007, -60.3471, 0.17 ) }
    dend_53 { pt3dadd( -155.523, 3.16481, -60.7951, 1.03 ) }
    dend_53 { pt3dadd( -156.892, 2.94197, -61.0524, 0.17 ) }
    dend_53 { pt3dadd( -158.247, 2.72599, -61.1576, 0.17 ) }
    dend_53 { pt3dadd( -159.153, 2.56451, -61.1767, 1.54 ) }
    dend_53 { pt3dadd( -160.172, 2.37099, -61.1032, 0.17 ) }
    dend_53 { pt3dadd( -163.588, 1.84653, -60.3968, 0.17 ) }
    dend_53 { pt3dadd( -163.76, 1.82534, -60.3741, 0.17 ) }
    dend_53 { pt3dadd( -165.121, 1.73733, -60.3954, 1.54 ) }
    dend_53 { pt3dadd( -165.656, 1.75062, -60.4871, 0.17 ) }
    dend_53 { pt3dadd( -167.489, 1.94714, -60.9933, 0.17 ) }
    dend_53 { pt3dadd( -167.826, 2.02604, -61.1481, 1.54 ) }
    dend_53 { pt3dadd( -171.171, 3.04271, -62.8983, 0.17 ) }
    dend_53 { pt3dadd( -173.516, 3.88379, -64.0761, 0.17 ) }
    dend_53 { pt3dadd( -175.423, 4.59581, -64.969, 2.05 ) }
    dend_53 { pt3dadd( -176.92, 5.15878, -65.5631, 0.17 ) }
    dend_53 { pt3dadd( -181.292, 6.83401, -66.8094, 0.17 ) }
    dend_53 { pt3dadd( -183.988, 7.81377, -67.3059, 1.2 ) }
    dend_53 { pt3dadd( -185.071, 8.19263, -67.3975, 0.17 ) }
    dend_53 { pt3dadd( -188.116, 9.23138, -67.544, 0.17 ) }
    dend_53 { pt3dadd( -192.001, 10.4416, -67.2869, 0.17 ) }
    dend_53 { pt3dadd( -195.135, 11.1989, -66.5402, 1.54 ) }
    dend_53 { pt3dadd( -196.539, 11.4412, -65.9611, 0.17 ) }
    dend_53 { pt3dadd( -197.15, 11.5156, -65.6075, 0.86 ) }
    dend_53 { pt3dadd( -197.443, 11.5373, -65.4177, 0.17 ) }
    dend_53 { pt3dadd( -201.087, 11.5264, -62.6793, 0.17 ) }
    dend_53 { pt3dadd( -204.027, 11.2407, -60.3871, 0.17 ) }
    dend_53 { pt3dadd( -205.243, 11.0477, -59.4732, 1.54 ) }
    dend_53 { pt3dadd( -208.456, 10.4147, -57.0789, 0.17 ) }
    dend_53 { pt3dadd( -211.494, 9.68075, -54.7405, 0.17 ) }
    dend_53 { pt3dadd( -214.62, 8.81677, -52.1895, 1.2 ) }
    dend_53 { pt3dadd( -215.705, 8.47199, -51.2897, 1.2 ) }
    dend_53 { pt3dadd( -216.218, 8.29155, -50.8327, 0.17 ) }
    dend_53 { pt3dadd( -217.076, 7.97501, -50.0413, 0.17 ) }
    dend_53 { pt3dadd( -219.756, 6.988, -47.6144, 0.86 ) }
    dend_53 { pt3dadd( -222.645, 5.9684, -44.8039, 0.34 ) }
    dend_53 { pt3dadd( -223.826, 5.66565, -43.8137, 0.34 ) }
    dend_53 { pt3dadd( -223.968, 5.63656, -43.7165, 0.34 ) }
    dend_53 { pt3dadd( -224.546, 5.53626, -43.3497, 1.03 ) }
    dend_53 { pt3dadd( -225.175, 5.43193, -43.0439, 0.17 ) }
    dend_53 { pt3dadd( -227.009, 5.06418, -43.2248, 0.17 ) }
    dend_53 { pt3dadd( -229.706, 4.33695, -44.6958, 1.2 ) }
    dend_53 { pt3dadd( -230.934, 3.95823, -45.5439, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 68/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -103.216, 2.69678, -23.5882, 0.17 ) }
    dend_52 { pt3dadd( -106.241, 6.54798, -25.0536, 0.17 ) }
    dend_52 { pt3dadd( -108.14, 8.85626, -25.6074, 0.17 ) }
    dend_52 { pt3dadd( -109.866, 10.8905, -25.7334, 1.03 ) }
    dend_52 { pt3dadd( -110.771, 11.9353, -25.708, 0.17 ) }
    dend_52 { pt3dadd( -112.028, 13.3734, -25.5943, 0.17 ) }
    dend_52 { pt3dadd( -115.627, 17.4499, -25.1592, 0.17 ) }
    dend_52 { pt3dadd( -115.744, 17.575, -25.1244, 0.17 ) }
    dend_52 { pt3dadd( -117.721, 19.6539, -24.4143, 1.2 ) }
    dend_52 { pt3dadd( -118.035, 20.0005, -24.2838, 0.17 ) }
    dend_52 { pt3dadd( -119.918, 22.2555, -23.4226, 0.17 ) }
    dend_52 { pt3dadd( -120.399, 22.9174, -23.1864, 0.17 ) }
    dend_52 { pt3dadd( -120.934, 23.7041, -22.9537, 1.54 ) }
    dend_52 { pt3dadd( -121.605, 24.6828, -22.6961, 0.17 ) }
    dend_52 { pt3dadd( -122.667, 26.19, -22.3411, 0.17 ) }
    dend_52 { pt3dadd( -124.288, 28.2856, -22.1258, 0.17 ) }
    dend_52 { pt3dadd( -124.744, 28.8253, -22.1298, 1.71 ) }
    dend_52 { pt3dadd( -125.989, 30.1372, -22.2468, 0.17 ) }
    dend_52 { pt3dadd( -127.215, 31.3256, -22.4284, 0.17 ) }
    dend_52 { pt3dadd( -129.566, 33.332, -22.8609, 0.17 ) }
    dend_52 { pt3dadd( -133.521, 36.2956, -23.7267, 1.54 ) }
    dend_52 { pt3dadd( -135.496, 37.5468, -24.1935, 0.17 ) }
    dend_52 { pt3dadd( -137.901, 38.8289, -24.8602, 0.17 ) }
    dend_52 { pt3dadd( -137.901, 38.8289, -24.8602, 2.05 ) }
    dend_52 { pt3dadd( -140.351, 39.6766, -25.6552, 0.17 ) }
    dend_52 { pt3dadd( -141.352, 39.9116, -25.9838, 0.17 ) }
    dend_52 { pt3dadd( -145.09, 40.4821, -26.6911, 0.17 ) }
    dend_52 { pt3dadd( -148.677, 40.8072, -27.1963, 1.03 ) }
    dend_52 { pt3dadd( -149.525, 40.8864, -27.2645, 0.17 ) }
    dend_52 { pt3dadd( -149.695, 40.9143, -27.2644, 0.17 ) }
    dend_52 { pt3dadd( -150.509, 41.1478, -27.1541, 0.17 ) }
    dend_52 { pt3dadd( -154.122, 42.9737, -26.087, 1.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_52 { pt3dadd( -155.051, 43.6575, -25.6251, 0.17 ) }
    dend_52 { pt3dadd( -156.15, 44.5892, -24.9905, 0.17 ) }
    dend_52 { pt3dadd( -157.186, 45.6205, -24.4584, 1.03 ) }
    dend_52 { pt3dadd( -158.132, 46.6589, -24.0615, 0.17 ) }
    dend_52 { pt3dadd( -159.067, 47.8395, -23.8052, 0.17 ) }
    dend_52 { pt3dadd( -159.494, 48.4175, -23.6959, 1.03 ) }
    dend_52 { pt3dadd( -159.702, 48.7185, -23.5783, 0.17 ) }
    dend_52 { pt3dadd( -160.398, 49.6997, -22.8418, 0.17 ) }
    dend_52 { pt3dadd( -160.478, 49.8131, -22.736, 0.17 ) }
    dend_52 { pt3dadd( -160.768, 50.2477, -22.2553, 1.2 ) }
    dend_52 { pt3dadd( -162.393, 52.6841, -19.1044, 0.17 ) }
    dend_52 { pt3dadd( -162.926, 53.4684, -17.9883, 0.17 ) }
    dend_52 { pt3dadd( -164.029, 54.9719, -15.6121, 1.54 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -157.477, 11.3445, -79.2884, 0.17 ) }
    dend_48 { pt3dadd( -157.278, 9.53581, -78.1266, 0.17 ) }
    dend_48 { pt3dadd( -157.086, 7.78589, -77.0026, 0.17 ) }
    dend_48 { pt3dadd( -156.483, 2.29436, -73.4753, 0.17 ) }
    dend_48 { pt3dadd( -156.413, 1.65712, -73.066, 0.86 ) }
    dend_48 { pt3dadd( -156.405, 1.58172, -73.0176, 0.86 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 19/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -157.477, 11.3445, -79.2884, 0.17 ) }
    dend_47 { pt3dadd( -158.742, 11.679, -79.9907, 0.17 ) }
    dend_47 { pt3dadd( -162.276, 12.7215, -81.8106, 0.17 ) }
    dend_47 { pt3dadd( -162.419, 12.7719, -81.8972, 0.17 ) }
    dend_47 { pt3dadd( -165.373, 13.8344, -83.7897, 1.37 ) }
    dend_47 { pt3dadd( -166.893, 14.3743, -84.7528, 0.17 ) }
    dend_47 { pt3dadd( -170.153, 15.5593, -86.7394, 0.17 ) }
    dend_47 { pt3dadd( -171.362, 16.0508, -87.5021, 0.17 ) }
    dend_47 { pt3dadd( -174.614, 17.5177, -89.823, 1.03 ) }
    dend_47 { pt3dadd( -175.035, 17.71, -90.1058, 0.17 ) }
    dend_47 { pt3dadd( -176.519, 18.3618, -90.98, 0.17 ) }
    dend_47 { pt3dadd( -177.999, 18.9806, -91.8361, 0.68 ) }
    dend_47 { pt3dadd( -178.262, 19.0855, -92.0234, 0.68 ) }
    dend_47 { pt3dadd( -180.161, 19.7355, -93.3306, 0.17 ) }
    dend_47 { pt3dadd( -182.356, 20.3195, -94.737, 0.17 ) }
    dend_47 { pt3dadd( -183.629, 20.6118, -95.6664, 1.2 ) }
    dend_47 { pt3dadd( -184.385, 20.7329, -96.254, 0.17 ) }
    dend_47 { pt3dadd( -187.251, 21.0097, -98.4322, 0.17 ) }
    dend_47 { pt3dadd( -188.377, 21.0747, -99.2226, 0.17 ) }
    dend_47 { pt3dadd( -189.494, 21.0408, -99.91, 0.68 ) }
    dend_47 { pt3dadd( -191.024, 20.8133, -100.929, 0.17 ) }
    dend_47 { pt3dadd( -192.449, 20.4855, -101.843, 0.17 ) }
    dend_47 { pt3dadd( -193.198, 20.2331, -102.315, 1.88 ) }
    dend_47 { pt3dadd( -193.731, 20.0217, -102.674, 0.17 ) }
    dend_47 { pt3dadd( -196.76, 18.7831, -104.897, 0.17 ) }
    dend_47 { pt3dadd( -198.379, 18.0143, -106.088, 1.37 ) }
    dend_47 { pt3dadd( -199.467, 17.4494, -106.889, 0.17 ) }
    dend_47 { pt3dadd( -202.005, 16.0161, -108.93, 0.17 ) }
    dend_47 { pt3dadd( -204.199, 14.7261, -110.735, 1.03 ) }
    dend_47 { pt3dadd( -204.702, 14.4083, -111.227, 0.17 ) }
    dend_47 { pt3dadd( -206.678, 13.0893, -113.373, 0.17 ) }
    dend_47 { pt3dadd( -206.913, 12.9356, -113.635, 0.17 ) }
    dend_47 { pt3dadd( -207.871, 12.2856, -114.722, 1.2 ) }
    dend_47 { pt3dadd( -208.588, 11.7605, -115.53, 0.17 ) }
    dend_47 { pt3dadd( -212.924, 8.45869, -120.344, 0.17 ) }
    dend_47 { pt3dadd( -213.282, 8.18678, -120.889, 1.37 ) }
    dend_47 { pt3dadd( -213.36, 8.12945, -121.031, 1.37 ) }
    dend_47 { pt3dadd( -214.163, 7.52015, -122.663, 0.34 ) }
    dend_47 { pt3dadd( -215.285, 6.64948, -125.22, 0.34 ) }
    dend_47 { pt3dadd( -215.413, 6.548, -125.527, 0.34 ) }
    dend_47 { pt3dadd( -219.061, 3.7433, -134.889, 0.17 ) }
    dend_47 { pt3dadd( -219.196, 3.6408, -135.233, 0.17 ) }
    dend_47 { pt3dadd( -219.383, 3.49879, -135.717, 0.17 ) }
    dend_47 { pt3dadd( -219.469, 3.44697, -135.934, 0.17 ) }
    dend_47 { pt3dadd( -221.357, 2.53025, -140.095, 0.86 ) }
    dend_47 { pt3dadd( -223.268, 1.7156, -143.311, 0.17 ) }
    dend_47 { pt3dadd( -224.511, 1.38873, -144.219, 0.17 ) }
    dend_47 { pt3dadd( -224.618, 1.37437, -144.357, 1.37 ) }
    dend_47 { pt3dadd( -226.651, 1.22236, -148.016, 0.17 ) }
    dend_47 { pt3dadd( -226.895, 1.20542, -148.435, 1.03 ) }
    dend_47 { pt3dadd( -227.163, 1.1894, -148.906, 0.17 ) }
    dend_47 { pt3dadd( -228.249, 1.12213, -150.91, 0.17 ) }
    dend_47 { pt3dadd( -234.205, 0.437264, -160.967, 1.03 ) }
    dend_47 { pt3dadd( -236.808, 0.0187502, -165.133, 0.17 ) }
    dend_47 { pt3dadd( -239.511, -0.500731, -169.269, 0.17 ) }
    dend_47 { pt3dadd( -239.724, -0.555553, -169.582, 1.03 ) }
    dend_47 { pt3dadd( -243.155, -1.6929, -174.322, 0.17 ) }
    dend_47 { pt3dadd( -247.249, -3.45735, -179.378, 0.17 ) }
    dend_47 { pt3dadd( -249.082, -4.56038, -180.835, 1.2 ) }
    dend_47 { pt3dadd( -249.583, -4.95323, -181.186, 0.17 ) }
    dend_47 { pt3dadd( -251.575, -7.07367, -182.89, 0.17 ) }
    dend_47 { pt3dadd( -252.158, -7.92164, -183.401, 0.68 ) }
    dend_47 { pt3dadd( -252.435, -8.58249, -183.657, 0.17 ) }
    dend_47 { pt3dadd( -252.761, -10.7859, -184.518, 0.17 ) }
    dend_47 { pt3dadd( -253.041, -14.0343, -186.021, 1.37 ) }
    dend_47 { pt3dadd( -253.118, -15.5079, -186.863, 0.17 ) }
    dend_47 { pt3dadd( -253.037, -18.2992, -188.618, 0.17 ) }
    dend_47 { pt3dadd( -252.823, -19.1024, -189.014, 1.03 ) }
    dend_47 { pt3dadd( -252.692, -19.4413, -189.156, 0.17 ) }
    dend_47 { pt3dadd( -250.865, -23.5021, -190.73, 0.17 ) }
    dend_47 { pt3dadd( -250.702, -23.8307, -190.833, 0.17 ) }
    dend_47 { pt3dadd( -248.586, -27.8304, -191.913, 0.17 ) }
    dend_47 { pt3dadd( -244.14, -35.4968, -193.886, 0.17 ) }
    dend_47 { pt3dadd( -243.884, -35.9299, -193.98, 1.03 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 93/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 26.4828, 76.1237, -10.2641, 0.17 ) }
    dend_39 { pt3dadd( 26.6076, 76.7581, -10.2641, 0.17 ) }
    dend_39 { pt3dadd( 26.6968, 77.2931, -10.2641, 0.17 ) }
    dend_39 { pt3dadd( 26.9208, 78.7492, -10.2641, 0.17 ) }
    dend_39 { pt3dadd( 27.04, 79.4402, -10.1528, 1.71 ) }
    dend_39 { pt3dadd( 27.3187, 81.0046, -9.80343, 0.17 ) }
    dend_39 { pt3dadd( 27.7342, 83.4886, -9.19434, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_39 { pt3dadd( 27.7687, 83.7109, -9.13277, 1.54 ) }
    dend_39 { pt3dadd( 27.9345, 84.9637, -8.78639, 0.17 ) }
    dend_39 { pt3dadd( 28.4048, 88.5442, -7.77726, 0.17 ) }
    dend_39 { pt3dadd( 28.7208, 90.8182, -7.13861, 1.37 ) }
    dend_39 { pt3dadd( 28.7866, 91.5034, -6.9789, 0.17 ) }
    dend_39 { pt3dadd( 28.809, 91.7349, -6.92622, 0.17 ) }
    dend_39 { pt3dadd( 29.0963, 95.3541, -6.21205, 0.17 ) }
    dend_39 { pt3dadd( 29.1388, 96.1968, -6.0983, 1.2 ) }
    dend_39 { pt3dadd( 29.1429, 97.0741, -6.0983, 0.17 ) }
    dend_39 { pt3dadd( 29.0621, 102.045, -6.0983, 0.17 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 10/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 26.4828, 76.1237, -10.2641, 0.86 ) }
    dend_38 { pt3dadd( 29.4725, 75.9995, -6.16314, 0.86 ) }
    dend_38 { pt3dadd( 30.6098, 75.9522, -4.60297, 0.86 ) }
    dend_38 { pt3dadd( 31.9545, 75.8964, -2.75847, 0.34 ) }
    dend_38 { pt3dadd( 33.0781, 75.8497, -1.21721, 0.34 ) }
    dend_38 { pt3dadd( 35.0635, 75.7672, 1.50622, 0.34 ) }
    dend_38 { pt3dadd( 41.4634, 75.5013, 10.2852, 0.17 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 17/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 42.5171, 19.9178, 20.825, 0.17 ) }
    dend_27 { pt3dadd( 39.6671, 25.4178, 19.135, 0.17 ) }
    dend_27 { pt3dadd( 35.3018, 33.948, 16.2748, 0.17 ) }
    dend_27 { pt3dadd( 30.4242, 41.9202, 12.7177, 0.17 ) }
    dend_27 { pt3dadd( 25.2657, 49.3026, 8.37142, 0.17 ) }
    dend_27 { pt3dadd( 20.3456, 56.8505, 4.03301, 0.17 ) }
    dend_27 { pt3dadd( 16.4055, 64.2931, -1.35986, 0.17 ) }
    dend_27 { pt3dadd( 10.7423, 71.1544, -5.92624, 0.17 ) }
    dend_27 { pt3dadd( 6.06775, 79.1978, -9.5938, 0.17 ) }
    dend_27 { pt3dadd( 1.98072, 86.4928, -15.0782, 0.17 ) }
    dend_27 { pt3dadd( -3.60723, 91.7545, -21.4883, 0.17 ) }
    dend_27 { pt3dadd( -8.46186, 97.991, -27.6153, 0.17 ) }
    dend_27 { pt3dadd( -13.2902, 104.495, -33.4796, 0.17 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 30/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 42.5171, 19.9178, 20.825, 0.68 ) }
    dend_22 { pt3dadd( 43.638, 19.4049, 18.7579, 0.68 ) }
    dend_22 { pt3dadd( 45.7359, 18.5732, 15.6398, 0.17 ) }
    dend_22 { pt3dadd( 54.4128, 15.4215, 4.68459, 0.17 ) }
    dend_22 { pt3dadd( 54.4741, 15.3983, 4.62284, 0.17 ) }
    dend_22 { pt3dadd( 56.5338, 14.6463, 2.9781, 0.17 ) }
    dend_22 { pt3dadd( 60.5277, 13.2068, 0.194335, 0.17 ) }
    dend_22 { pt3dadd( 61.556, 12.8494, -0.343096, 1.37 ) }
    dend_22 { pt3dadd( 62.8364, 12.4441, -0.657457, 0.17 ) }
    dend_22 { pt3dadd( 67.4441, 11.2473, -0.663156, 0.17 ) }
    dend_22 { pt3dadd( 70.7039, 10.4271, -0.663156, 0.17 ) }
    dend_22 { pt3dadd( 70.8731, 10.3835, -0.663156, 0.17 ) }
    dend_22 { pt3dadd( 74.3013, 9.53652, -0.663156, 0.17 ) }
    dend_22 { pt3dadd( 77.5834, 8.73878, -0.663156, 0.17 ) }
    dend_22 { pt3dadd( 80.9798, 8.22955, -0.663156, 0.17 ) }
    dend_22 { pt3dadd( 81.3262, 8.24011, -0.706668, 0.17 ) }
    dend_22 { pt3dadd( 82.8357, 8.4914, -1.09998, 0.17 ) }
    dend_22 { pt3dadd( 85.9067, 9.4339, -2.27558, 0.17 ) }
    dend_22 { pt3dadd( 86.0452, 9.51286, -2.3418, 0.17 ) }
    dend_22 { pt3dadd( 89.4995, 12.3875, -4.40788, 0.17 ) }
    dend_22 { pt3dadd( 94.1267, 16.8936, -7.86899, 0.17 ) }
    dend_22 { pt3dadd( 94.5428, 17.3252, -8.20357, 1.2 ) }
    dend_22 { pt3dadd( 94.8568, 17.6757, -8.47321, 0.17 ) }
    dend_22 { pt3dadd( 98.9908, 22.631, -12.169, 0.17 ) }
    dend_22 { pt3dadd( 103.501, 27.9946, -16.135, 0.17 ) }
    dend_22 { pt3dadd( 107.346, 32.2801, -19.8199, 0.17 ) }
    dend_22 { pt3dadd( 107.546, 32.4953, -20.0041, 1.2 ) }
    dend_22 { pt3dadd( 107.853, 32.8165, -20.332, 0.17 ) }
    dend_22 { pt3dadd( 109.187, 34.1933, -21.8872, 0.17 ) }
    dend_22 { pt3dadd( 109.537, 34.5501, -22.3871, 0.86 ) }
    dend_22 { pt3dadd( 114.076, 38.455, -28.9366, 0.17 ) }
    dend_22 { pt3dadd( 116.661, 40.45, -32.5865, 0.17 ) }
    dend_22 { pt3dadd( 119.231, 42.3486, -36.2956, 1.54 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.47031, -42.3493, -11.4262, 1.03 ) }
    dend_7 { pt3dadd( -2.51672, -44.4567, -11.3923, 1.03 ) }
    dend_7 { pt3dadd( -3.57014, -47.0404, -11.3569, 1.54 ) }
    dend_7 { pt3dadd( -3.95506, -48.2825, -11.3421, 0.68 ) }
    dend_7 { pt3dadd( -4.84256, -52.7871, -11.6796, 0.68 ) }
    dend_7 { pt3dadd( -5.16756, -55.2925, -11.3826, 0.68 ) }
    dend_7 { pt3dadd( -5.28103, -57.1219, -10.821, 0.17 ) }
    dend_7 { pt3dadd( -5.19274, -58.7545, -9.94795, 0.86 ) }
    dend_7 { pt3dadd( -4.92447, -60.2915, -8.78236, 0.86 ) }
    dend_7 { pt3dadd( -4.2036, -63.2447, -5.56606, 0.51 ) }
    dend_7 { pt3dadd( -1.69711, -70.6579, 3.65577, 0.17 ) }
    dend_7 { pt3dadd( -1.37565, -71.6589, 4.91401, 1.03 ) }
    dend_7 { pt3dadd( -1.04604, -72.9843, 6.49727, 1.03 ) }
    dend_7 { pt3dadd( -0.95627, -73.4809, 7.03576, 1.03 ) }
    dend_7 { pt3dadd( -0.601414, -77.0577, 10.3319, 0.51 ) }
    dend_7 { pt3dadd( -0.495742, -80.424, 12.836, 0.51 ) }
    dend_7 { pt3dadd( -0.473893, -81.8831, 13.3052, 1.2 ) }
    dend_7 { pt3dadd( -0.382692, -83.9005, 13.82, 1.88 ) }
    dend_7 { pt3dadd( -0.241256, -85.5876, 14.146, 0.51 ) }
    dend_7 { pt3dadd( -0.00810526, -88.2257, 14.4322, 0.51 ) }
    dend_7 { pt3dadd( 0.075151, -89.4208, 14.3508, 0.51 ) }
    dend_7 { pt3dadd( 0.0873893, -91.3223, 14.1071, 0.51 ) }
    dend_7 { pt3dadd( -0.0182353, -94.6016, 13.5596, 0.68 ) }
    dend_7 { pt3dadd( -0.0857993, -95.8243, 13.3217, 0.68 ) }
    dend_7 { pt3dadd( -0.157504, -97.6276, 12.9559, 0.34 ) }
    dend_7 { pt3dadd( -0.193071, -101.658, 12.1502, 1.54 ) }
    dend_7 { pt3dadd( -0.257721, -103.681, 11.7713, 0.68 ) }
    dend_7 { pt3dadd( -0.489785, -105.703, 11.4317, 0.17 ) }
    dend_7 { pt3dadd( -0.793324, -107.214, 11.2178, 0.68 ) }
    dend_7 { pt3dadd( -1.44044, -109.908, 10.9351, 0.51 ) }
    dend_7 { pt3dadd( -1.94973, -111.722, 10.8277, 0.51 ) }
    dend_7 { pt3dadd( -2.43772, -113.476, 10.8277, 0.51 ) }
    dend_7 { pt3dadd( -3.28113, -116.383, 10.8277, 0.51 ) }
    dend_7 { pt3dadd( -3.87403, -118.239, 10.8277, 1.2 ) }
    dend_7 { pt3dadd( -4.54556, -120.058, 10.8277, 0.86 ) }
    dend_7 { pt3dadd( -5.41575, -122.222, 10.8277, 0.17 ) }
    dend_7 { pt3dadd( -5.90356, -123.601, 10.8277, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( -6.49529, -125.897, 10.9661, 0.17 ) }
    dend_7 { pt3dadd( -6.78898, -127.552, 11.149, 1.54 ) }
    dend_7 { pt3dadd( -6.9904, -128.903, 11.3434, 1.03 ) }
    dend_7 { pt3dadd( -7.19037, -130.122, 11.5453, 0.34 ) }
    dend_7 { pt3dadd( -7.72271, -133.022, 12.0391, 0.34 ) }
    dend_7 { pt3dadd( -8.28338, -135.973, 12.6656, 1.03 ) }
    dend_7 { pt3dadd( -8.45925, -137.077, 12.9367, 0.68 ) }
    dend_7 { pt3dadd( -8.81154, -139.395, 13.5429, 0.17 ) }
    dend_7 { pt3dadd( -9.10186, -141.162, 13.9969, 0.17 ) }
    dend_7 { pt3dadd( -9.61035, -143.901, 14.6794, 0.17 ) }
    dend_7 { pt3dadd( -10.2022, -146.642, 15.2716, 1.54 ) }
    dend_7 { pt3dadd( -10.5659, -148.483, 15.5625, 0.68 ) }
    dend_7 { pt3dadd( -10.781, -149.798, 15.7236, 0.51 ) }
    dend_7 { pt3dadd( -11.1168, -152.445, 15.9602, 0.51 ) }
    dend_7 { pt3dadd( -11.1592, -152.78, 15.9731, 0.51 ) }
    dend_7 { pt3dadd( -11.6567, -155.732, 15.8914, 0.51 ) }
    dend_7 { pt3dadd( -12.1113, -157.681, 15.6936, 0.51 ) }
    dend_7 { pt3dadd( -12.5117, -159.24, 15.5158, 0.51 ) }
    dend_7 { pt3dadd( -12.5595, -159.407, 15.4971, 0.51 ) }
    dend_7 { pt3dadd( -13.254, -161.569, 14.998, 1.37 ) }
    dend_7 { pt3dadd( -13.3068, -161.721, 14.9603, 1.37 ) }
    dend_7 { pt3dadd( -14.47, -164.431, 14.1801, 0.86 ) }
    dend_7 { pt3dadd( -14.6434, -164.759, 14.0836, 0.17 ) }
    dend_7 { pt3dadd( -15.801, -166.821, 13.5252, 0.68 ) }
    dend_7 { pt3dadd( -17.6193, -170.051, 12.5122, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 25/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.47031, -42.3493, -11.4262, 0.86 ) }
    dend_4 { pt3dadd( -0.525658, -45.4416, -20.2965, 0.86 ) }
    dend_4 { pt3dadd( -0.502321, -45.518, -20.5156, 0.86 ) }
    dend_4 { pt3dadd( -0.222906, -46.4327, -23.1393, 0.86 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 29/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -149.181, -76.9639, -22.2354, 0.17 ) }
    dend_62 { pt3dadd( -154.859, -77.3632, -24.1159, 0.17 ) }
    dend_62 { pt3dadd( -157.945, -77.4413, -24.3525, 0.17 ) }
    dend_62 { pt3dadd( -159.255, -77.4043, -24.3124, 1.03 ) }
    dend_62 { pt3dadd( -160.328, -77.374, -24.2794, 0.17 ) }
    dend_62 { pt3dadd( -163.988, -77.2705, -24.1671, 0.17 ) }
    dend_62 { pt3dadd( -165.746, -77.2208, -24.1131, 1.03 ) }
    dend_62 { pt3dadd( -169.293, -76.9908, -23.297, 0.17 ) }
    dend_62 { pt3dadd( -171.213, -76.7373, -22.7188, 0.17 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 38/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -149.181, -76.9639, -22.2354, 0.17 ) }
    dend_61 { pt3dadd( -151.414, -78.4341, -22.0518, 0.17 ) }
    dend_61 { pt3dadd( -153.707, -79.8033, -21.6265, 0.17 ) }
    dend_61 { pt3dadd( -155.313, -80.7065, -21.265, 0.86 ) }
    dend_61 { pt3dadd( -155.86, -80.9853, -21.1378, 0.17 ) }
    dend_61 { pt3dadd( -156.959, -81.5187, -20.8771, 0.17 ) }
    dend_61 { pt3dadd( -160.225, -83.0526, -20.1036, 0.17 ) }
    dend_61 { pt3dadd( -162.531, -83.9616, -19.3979, 1.54 ) }
    dend_61 { pt3dadd( -162.73, -84.0513, -19.2833, 0.17 ) }
    dend_61 { pt3dadd( -164.055, -84.8611, -17.9261, 0.17 ) }
    dend_61 { pt3dadd( -164.149, -84.9302, -17.7966, 1.2 ) }
    dend_61 { pt3dadd( -164.484, -85.2501, -17.2626, 0.17 ) }
    dend_61 { pt3dadd( -165.936, -87.0113, -14.6957, 0.17 ) }
    dend_61 { pt3dadd( -167.717, -89.3183, -11.7636, 0.17 ) }
    dend_61 { pt3dadd( -169.084, -91.3265, -9.66109, 1.54 ) }
    dend_61 { pt3dadd( -169.354, -91.8134, -9.27237, 0.17 ) }
    dend_61 { pt3dadd( -170.789, -94.7021, -7.58852, 0.17 ) }
    dend_61 { pt3dadd( -171.567, -96.4964, -6.62447, 1.2 ) }
    dend_61 { pt3dadd( -172.024, -97.6414, -6.0952, 0.86 ) }
    dend_61 { pt3dadd( -173.131, -100.283, -5.00165, 0.17 ) }
    dend_61 { pt3dadd( -174.486, -103.506, -3.69082, 0.17 ) }
    dend_61 { pt3dadd( -175.462, -105.821, -2.66992, 0.17 ) }
    dend_61 { pt3dadd( -177.784, -111.226, -0.0273753, 0.17 ) }
    dend_61 { pt3dadd( -177.879, -111.431, 0.0743597, 0.17 ) }
    dend_61 { pt3dadd( -179.473, -114.488, 1.76858, 0.17 ) }
    dend_61 { pt3dadd( -180.189, -115.694, 2.49452, 0.86 ) }
    dend_61 { pt3dadd( -180.645, -116.448, 2.90263, 0.86 ) }
    dend_61 { pt3dadd( -180.891, -116.893, 3.07839, 0.17 ) }
    dend_61 { pt3dadd( -181.849, -118.797, 3.52798, 0.17 ) }
    dend_61 { pt3dadd( -182.853, -121.206, 4.07104, 1.37 ) }
    dend_61 { pt3dadd( -183.277, -122.574, 4.36541, 0.17 ) }
    dend_61 { pt3dadd( -184.113, -125.98, 5.07195, 0.17 ) }
    dend_61 { pt3dadd( -184.659, -128.887, 5.62954, 0.17 ) }
    dend_61 { pt3dadd( -184.682, -129.056, 5.65658, 0.17 ) }
    dend_61 { pt3dadd( -184.862, -130.951, 5.84424, 0.17 ) }
    dend_61 { pt3dadd( -184.947, -131.944, 5.86135, 1.37 ) }
    dend_61 { pt3dadd( -185.069, -133.171, 5.69696, 0.34 ) }
    dend_61 { pt3dadd( -185.158, -133.994, 5.42691, 0.17 ) }
    dend_61 { pt3dadd( -185.458, -136.333, 4.29599, 0.17 ) }
    dend_61 { pt3dadd( -185.672, -137.473, 3.64201, 1.03 ) }
    dend_61 { pt3dadd( -185.953, -138.34, 3.03195, 1.03 ) }
    dend_61 { pt3dadd( -187.498, -141.547, 0.484467, 0.17 ) }
    dend_61 { pt3dadd( -188.257, -142.55, -0.694581, 0.17 ) }
    dend_61 { pt3dadd( -188.562, -142.838, -1.16028, 1.03 ) }
    dend_61 { pt3dadd( -188.774, -142.953, -1.39944, 0.17 ) }
    dend_61 { pt3dadd( -190.231, -143.35, -2.63625, 0.17 ) }
    dend_61 { pt3dadd( -191.033, -143.488, -3.22424, 1.71 ) }
    dend_61 { pt3dadd( -194.575, -143.747, -5.09329, 0.68 ) }
    dend_61 { pt3dadd( -195.457, -143.766, -5.56337, 0.17 ) }
    dend_61 { pt3dadd( -199.058, -143.926, -7.55442, 0.17 ) }
    dend_61 { pt3dadd( -201.929, -144.11, -9.18714, 0.17 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 89/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -52.76, -21.3329, -26.0248, 0.17 ) }
    dend_59 { pt3dadd( -56.271, -25.2875, -21.4675, 0.17 ) }
    dend_59 { pt3dadd( -58.5813, -28.3848, -17.5291, 0.17 ) }
    dend_59 { pt3dadd( -61.853, -33.519, -10.5484, 0.17 ) }
    dend_59 { pt3dadd( -63.965, -36.8333, -6.04217, 0.17 ) }
    dend_59 { pt3dadd( -65.8575, -39.8031, -2.00421, 0.17 ) }
    dend_59 { pt3dadd( -70.5482, -47.1641, 8.00426, 0.17 ) }
    dend_59 { pt3dadd( -71.7159, -49.6007, 11.9158, 0.17 ) }
    dend_59 { pt3dadd( -72.3654, -51.6795, 15.7136, 0.17 ) }
    dend_59 { pt3dadd( -74.0933, -57.159, 23.8983, 0.17 ) }
    dend_59 { pt3dadd( -74.1869, -63.3375, 31.7607, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -52.76, -21.3329, -26.0248, 0.51 ) }
    dend_58 { pt3dadd( -53.1964, -23.0466, -21.7623, 0.51 ) }
    dend_58 { pt3dadd( -55.2002, -28.1361, -9.69113, 0.51 ) }
    dend_58 { pt3dadd( -55.937, -29.549, -6.56126, 0.51 ) }
    dend_58 { pt3dadd( -56.4769, -30.4219, -4.74127, 0.51 ) }
    dend_58 { pt3dadd( -58.6758, -33.611, 1.55785, 0.51 ) }
    dend_58 { pt3dadd( -59.3871, -34.5704, 3.28041, 0.34 ) }
    dend_58 { pt3dadd( -60.3502, -35.9102, 5.30127, 0.34 ) }
    dend_58 { pt3dadd( -61.3896, -37.34, 6.55609, 0.34 ) }
    dend_58 { pt3dadd( -61.8925, -38.1072, 7.13602, 0.86 ) }
    dend_58 { pt3dadd( -62.1709, -38.7015, 7.53285, 0.17 ) }
    dend_58 { pt3dadd( -63.0485, -40.8779, 8.77525, 0.68 ) }
    dend_58 { pt3dadd( -64.8742, -46.888, 12.3623, 0.68 ) }
    dend_58 { pt3dadd( -65.162, -48.2512, 13.1874, 0.17 ) }
    dend_58 { pt3dadd( -65.3572, -49.6026, 14.0445, 0.17 ) }
    dend_58 { pt3dadd( -65.8891, -54.7707, 17.4164, 0.51 ) }
    dend_58 { pt3dadd( -69.0591, -59.4503, 25.6658, 0.51 ) }
    dend_58 { pt3dadd( -74.4267, -64.5773, 32.3667, 0.51 ) }
    dend_58 { pt3dadd( -78.1502, -68.4858, 40.7845, 0.51 ) }
    dend_58 { pt3dadd( -81.379, -72.4759, 49.3667, 0.51 ) }
    dend_58 { pt3dadd( -84.6079, -75.8487, 58.2097, 0.51 ) }
    dend_58 { pt3dadd( -87.7178, -77.307, 67.6013, 0.51 ) }
    dend_58 { pt3dadd( -91.418, -77.7498, 76.881, 0.51 ) }
    dend_58 { pt3dadd( -94.4674, -79.5544, 86.2321, 0.51 ) }
    dend_58 { pt3dadd( -96.4326, -82.3466, 95.6312, 0.51 ) }
    dend_58 { pt3dadd( -96.7987, -85.5049, 105.112, 0.51 ) }
    dend_58 { pt3dadd( -96.8091, -87.7676, 114.853, 0.51 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 27/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -230.934, 3.95823, -45.5439, 0.17 ) }
    dend_55 { pt3dadd( -231.705, 1.08963, -46.1642, 0.17 ) }
    dend_55 { pt3dadd( -232.409, -1.52306, -46.6125, 0.17 ) }
    dend_55 { pt3dadd( -232.659, -2.41015, -46.7409, 0.68 ) }
    dend_55 { pt3dadd( -232.709, -2.57401, -46.7614, 0.68 ) }
    dend_55 { pt3dadd( -232.988, -3.53288, -46.8673, 0.68 ) }
    dend_55 { pt3dadd( -233.14, -3.99224, -46.9085, 0.17 ) }
    dend_55 { pt3dadd( -234.136, -6.6393, -47.0552, 0.17 ) }
    dend_55 { pt3dadd( -234.439, -7.30027, -47.0552, 1.37 ) }
    dend_55 { pt3dadd( -234.821, -8.06153, -47.0552, 1.37 ) }
    dend_55 { pt3dadd( -235.307, -8.84347, -47.0552, 0.17 ) }
    dend_55 { pt3dadd( -236.838, -11.0443, -46.7006, 0.17 ) }
    dend_55 { pt3dadd( -237.497, -11.8845, -46.4515, 0.17 ) }
    dend_55 { pt3dadd( -238.445, -12.9118, -45.9939, 1.03 ) }
    dend_55 { pt3dadd( -239.131, -13.6626, -45.6248, 0.17 ) }
    dend_55 { pt3dadd( -240.89, -15.5052, -44.6194, 0.17 ) }
    dend_55 { pt3dadd( -243.508, -18.4813, -43.0371, 1.37 ) }
    dend_55 { pt3dadd( -244.039, -19.2097, -42.6104, 0.17 ) }
    dend_55 { pt3dadd( -244.682, -20.1838, -42.0328, 0.17 ) }
    dend_55 { pt3dadd( -245.861, -22.1501, -40.9688, 0.68 ) }
    dend_55 { pt3dadd( -246.182, -22.7446, -40.6999, 0.17 ) }
    dend_55 { pt3dadd( -247.507, -25.3793, -39.6636, 0.17 ) }
    dend_55 { pt3dadd( -249.072, -28.1048, -38.8214, 0.68 ) }
    dend_55 { pt3dadd( -249.535, -28.8035, -38.5883, 0.17 ) }
    dend_55 { pt3dadd( -251.018, -30.7621, -37.8978, 0.17 ) }
    dend_55 { pt3dadd( -252.307, -31.9566, -37.4528, 1.37 ) }
    dend_55 { pt3dadd( -253.27, -32.6323, -37.2963, 0.17 ) }
    dend_55 { pt3dadd( -254.981, -33.4454, -37.2877, 0.17 ) }
    dend_55 { pt3dadd( -256.738, -34.0942, -37.4983, 0.17 ) }
    dend_55 { pt3dadd( -257.189, -34.2608, -37.61, 0.17 ) }
    dend_55 { pt3dadd( -260.685, -35.5616, -38.7606, 0.17 ) }
    dend_55 { pt3dadd( -263.296, -36.6952, -39.7669, 1.03 ) }
    dend_55 { pt3dadd( -264.325, -37.227, -40.2559, 0.51 ) }
    dend_55 { pt3dadd( -266.592, -38.6102, -41.4998, 0.17 ) }
    dend_55 { pt3dadd( -269.475, -40.7754, -43.2836, 0.17 ) }
    dend_55 { pt3dadd( -271.727, -42.8309, -44.8134, 0.17 ) }
    dend_55 { pt3dadd( -272.731, -44.0696, -45.6119, 1.71 ) }
    dend_55 { pt3dadd( -273.691, -45.655, -46.4216, 0.17 ) }
    dend_55 { pt3dadd( -273.851, -46.0888, -46.6415, 0.17 ) }
    dend_55 { pt3dadd( -273.892, -47.6384, -47.3751, 0.17 ) }
    dend_55 { pt3dadd( -273.841, -47.8564, -47.457, 1.2 ) }
    dend_55 { pt3dadd( -273.637, -48.2587, -47.6222, 0.17 ) }
    dend_55 { pt3dadd( -272.41, -50.1518, -48.3934, 0.17 ) }
    dend_55 { pt3dadd( -271.354, -51.5604, -48.8372, 1.03 ) }
    dend_55 { pt3dadd( -270.536, -52.5438, -49.2124, 0.17 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 72/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -230.934, 3.95823, -45.5439, 0.17 ) }
    dend_54 { pt3dadd( -232.496, 4.0473, -45.9206, 0.17 ) }
    dend_54 { pt3dadd( -234.335, 4.15497, -46.4331, 0.17 ) }
    dend_54 { pt3dadd( -235.523, 4.2101, -46.7488, 0.86 ) }
    dend_54 { pt3dadd( -236.973, 4.24346, -47.1093, 0.17 ) }
    dend_54 { pt3dadd( -239.764, 4.25562, -47.7743, 0.17 ) }
    dend_54 { pt3dadd( -240.982, 4.26092, -48.0644, 1.03 ) }
    dend_54 { pt3dadd( -242.02, 4.26551, -48.28, 0.17 ) }
    dend_54 { pt3dadd( -244.738, 4.24198, -48.8759, 0.17 ) }
    dend_54 { pt3dadd( -245.924, 4.19553, -49.1246, 0.17 ) }
    dend_54 { pt3dadd( -246.295, 4.17407, -49.1838, 0.68 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 83/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 29.0621, 102.045, -6.0983, 0.17 ) }
    dend_41 { pt3dadd( 29.2446, 104.858, -5.50974, 0.17 ) }
    dend_41 { pt3dadd( 29.4937, 108.376, -4.79111, 0.17 ) }
    dend_41 { pt3dadd( 29.6846, 110.866, -4.30801, 0.17 ) }
    dend_41 { pt3dadd( 29.7603, 114.716, -3.64489, 1.2 ) }
    dend_41 { pt3dadd( 29.7199, 116.746, -3.33014, 0.17 ) }
    dend_41 { pt3dadd( 29.5961, 119.032, -3.02562, 0.17 ) }
    dend_41 { pt3dadd( 29.5961, 119.032, -3.02562, 1.03 ) }
    dend_41 { pt3dadd( 29.3468, 120.469, -2.92156, 0.17 ) }
    dend_41 { pt3dadd( 28.5366, 124.299, -2.93417, 0.17 ) }
    dend_41 { pt3dadd( 28.2444, 125.629, -3.03888, 0.17 ) }
    dend_41 { pt3dadd( 27.503, 128.978, -3.38965, 0.17 ) }
    dend_41 { pt3dadd( 26.8412, 132.656, -3.84486, 0.17 ) }
    dend_41 { pt3dadd( 26.755, 133.334, -3.93503, 0.17 ) }
    dend_41 { pt3dadd( 26.5759, 136.172, -4.49278, 1.37 ) }
    dend_41 { pt3dadd( 26.5616, 137.017, -4.69232, 0.17 ) }
    dend_41 { pt3dadd( 26.5733, 138.872, -5.16289, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_41 { pt3dadd( 26.6748, 141.864, -5.95539, 0.17 ) }
    dend_41 { pt3dadd( 26.871, 145.079, -6.79399, 0.17 ) }
    dend_41 { pt3dadd( 27.2549, 151.533, -8.3904, 0.17 ) }
    dend_41 { pt3dadd( 27.3707, 153.762, -8.88235, 0.17 ) }
    dend_41 { pt3dadd( 27.4258, 155.299, -9.24204, 0.17 ) }
    dend_41 { pt3dadd( 27.4107, 156.496, -9.54495, 2.05 ) }
    dend_41 { pt3dadd( 27.3438, 157.234, -9.74265, 0.17 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 7/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 29.0621, 102.045, -6.0983, 0.17 ) }
    dend_40 { pt3dadd( 26.6909, 100.471, -5.97993, 0.17 ) }
    dend_40 { pt3dadd( 24.5702, 99.0624, -5.87407, 0.17 ) }
    dend_40 { pt3dadd( 20.8673, 96.6037, -5.68922, 0.17 ) }
    dend_40 { pt3dadd( 16.7213, 93.8508, -5.48225, 0.17 ) }
    dend_40 { pt3dadd( 11.3024, 90.2526, -5.21174, 0.17 ) }
    dend_40 { pt3dadd( 9.89524, 89.3183, -5.1415, 0.17 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 119.231, 42.3486, -36.2956, 0.17 ) }
    dend_26 { pt3dadd( 122.724, 46.3306, -36.0714, 0.17 ) }
    dend_26 { pt3dadd( 125.45, 49.4373, -35.8964, 0.17 ) }
    dend_26 { pt3dadd( 128.17, 52.5383, -35.7218, 0.17 ) }
    dend_26 { pt3dadd( 130.246, 54.9053, -35.5886, 0.17 ) }
    dend_26 { pt3dadd( 130.618, 55.3287, -35.5647, 0.17 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 119.231, 42.3486, -36.2956, 0.17 ) }
    dend_23 { pt3dadd( 121.124, 47.6911, -37.7709, 0.17 ) }
    dend_23 { pt3dadd( 121.686, 49.279, -38.2094, 1.37 ) }
    dend_23 { pt3dadd( 121.863, 49.7781, -38.3472, 0.17 ) }
    dend_23 { pt3dadd( 122.727, 52.2176, -39.0208, 0.17 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 25/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -17.6193, -170.051, 12.5122, 1.2 ) }
    dend_15 { pt3dadd( -18.4221, -172.186, 13.1535, 1.2 ) }
    dend_15 { pt3dadd( -19.7141, -175.332, 16.4343, 0.17 ) }
    dend_15 { pt3dadd( -20.3123, -176.488, 18.0583, 0.17 ) }
    dend_15 { pt3dadd( -21.7524, -178.746, 21.5144, 0.17 ) }
    dend_15 { pt3dadd( -23.3788, -180.813, 25.2954, 0.17 ) }
    dend_15 { pt3dadd( -23.4385, -180.884, 25.4319, 0.17 ) }
    dend_15 { pt3dadd( -27.7042, -185.624, 35.5981, 1.54 ) }
    dend_15 { pt3dadd( -28.3597, -186.332, 37.2947, 0.17 ) }
    dend_15 { pt3dadd( -29.0999, -186.987, 39.3188, 0.17 ) }
    dend_15 { pt3dadd( -31.8976, -188.766, 47.3062, 0.17 ) }
    dend_15 { pt3dadd( -32.0612, -188.85, 47.8165, 1.37 ) }
    dend_15 { pt3dadd( -32.2373, -188.951, 48.3209, 0.17 ) }
    dend_15 { pt3dadd( -34.2305, -190.431, 51.9394, 0.17 ) }
    dend_15 { pt3dadd( -37.6792, -194.051, 60.6002, 0.17 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -17.6193, -170.051, 12.5122, 0.86 ) }
    dend_8 { pt3dadd( -16.9859, -173.124, 13.6204, 0.86 ) }
    dend_8 { pt3dadd( -16.5088, -176.525, 14.7291, 0.86 ) }
    dend_8 { pt3dadd( -16.4627, -177.113, 14.9045, 0.86 ) }
    dend_8 { pt3dadd( -16.3317, -180.24, 15.7858, 0.68 ) }
    dend_8 { pt3dadd( -16.302, -182.262, 16.2887, 0.34 ) }
    dend_8 { pt3dadd( -16.2246, -185.686, 16.8284, 0.34 ) }
    dend_8 { pt3dadd( -16.2569, -186.553, 16.8937, 1.2 ) }
    dend_8 { pt3dadd( -16.3207, -187.887, 16.9061, 1.2 ) }
    dend_8 { pt3dadd( -16.3407, -188.125, 16.8942, 0.34 ) }
    dend_8 { pt3dadd( -16.6829, -191.052, 16.5778, 0.34 ) }
    dend_8 { pt3dadd( -17.1569, -194.862, 16.1286, 0.34 ) }
    dend_8 { pt3dadd( -17.364, -196.801, 15.8982, 1.88 ) }
    dend_8 { pt3dadd( -17.5196, -198.465, 15.7155, 0.68 ) }
    dend_8 { pt3dadd( -17.7261, -201.732, 15.3965, 0.51 ) }
    dend_8 { pt3dadd( -17.9504, -205.158, 15.122, 0.51 ) }
    dend_8 { pt3dadd( -18.1264, -207.172, 15.0068, 1.03 ) }
    dend_8 { pt3dadd( -18.3903, -209.209, 14.9567, 1.71 ) }
    dend_8 { pt3dadd( -18.6784, -211.249, 14.8879, 0.68 ) }
    dend_8 { pt3dadd( -18.9818, -213.337, 14.8285, 0.17 ) }
    dend_8 { pt3dadd( -19.3529, -215.88, 14.7726, 0.17 ) }
    dend_8 { pt3dadd( -19.7005, -217.667, 14.7498, 1.03 ) }
    dend_8 { pt3dadd( -20.452, -220.725, 14.7498, 1.03 ) }
    dend_8 { pt3dadd( -21.7747, -225.645, 14.7498, 1.03 ) }
    dend_8 { pt3dadd( -21.8648, -225.972, 14.7498, 1.03 ) }
    dend_8 { pt3dadd( -21.9556, -226.324, 14.7498, 1.03 ) }
    dend_8 { pt3dadd( -22.1886, -227.323, 14.7498, 0.17 ) }
    dend_8 { pt3dadd( -22.4338, -228.499, 14.7498, 0.17 ) }
    dend_8 { pt3dadd( -22.8156, -230.449, 14.7498, 0.34 ) }
    dend_8 { pt3dadd( -22.9895, -231.161, 14.7498, 0.34 ) }
    dend_8 { pt3dadd( -23.6411, -233.606, 14.7498, 0.34 ) }
    dend_8 { pt3dadd( -24.6989, -239.197, 14.7498, 1.37 ) }
    dend_8 { pt3dadd( -24.8347, -240.23, 14.7498, 0.17 ) }
    dend_8 { pt3dadd( -24.8544, -240.404, 14.7498, 0.17 ) }
    dend_8 { pt3dadd( -25.0726, -242.244, 14.7498, 0.17 ) }
    dend_8 { pt3dadd( -25.2117, -243.919, 14.7498, 0.34 ) }
    dend_8 { pt3dadd( -25.2009, -248.68, 14.7498, 0.34 ) }
    dend_8 { pt3dadd( -25.058, -249.873, 14.7498, 0.34 ) }
    dend_8 { pt3dadd( -25.044, -250.047, 14.7498, 0.34 ) }
    dend_8 { pt3dadd( -25.0182, -251.81, 14.7498, 0.34 ) }
    dend_8 { pt3dadd( -25.0182, -251.81, 14.7498, 1.03 ) }
    dend_8 { pt3dadd( -25.0149, -252.661, 14.7723, 0.17 ) }
    dend_8 { pt3dadd( -24.9811, -253.516, 14.8599, 0.17 ) }
    dend_8 { pt3dadd( -24.6295, -256.029, 15.0886, 1.37 ) }
    dend_8 { pt3dadd( -24.1325, -258.344, 15.274, 0.51 ) }
    dend_8 { pt3dadd( -23.6896, -260.009, 15.3382, 0.17 ) }
    dend_8 { pt3dadd( -22.239, -264.53, 15.4533, 0.51 ) }
    dend_8 { pt3dadd( -20.796, -268.279, 15.3109, 0.51 ) }
    dend_8 { pt3dadd( -19.5067, -271.439, 15.0262, 1.88 ) }
    dend_8 { pt3dadd( -18.5046, -273.802, 14.4861, 1.2 ) }
    dend_8 { pt3dadd( -17.693, -275.82, 13.748, 0.17 ) }
    dend_8 { pt3dadd( -16.9635, -277.948, 12.6378, 0.51 ) }
    dend_8 { pt3dadd( -16.2236, -281.192, 10.3369, 1.03 ) }
    dend_8 { pt3dadd( -15.8856, -282.974, 8.88142, 1.03 ) }
    dend_8 { pt3dadd( -15.2639, -287.215, 5.55332, 0.17 ) }
    dend_8 { pt3dadd( -15.1256, -288.271, 4.80387, 0.17 ) }
    dend_8 { pt3dadd( -15.1065, -288.422, 4.71874, 0.17 ) }
    dend_8 { pt3dadd( -14.7999, -290.377, 3.9578, 0.17 ) }
    dend_8 { pt3dadd( -14.0507, -292.988, 3.79585, 1.2 ) }
    dend_8 { pt3dadd( -13.2248, -294.982, 4.00655, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( -12.7183, -296.155, 4.29608, 0.17 ) }
    dend_8 { pt3dadd( -12.649, -296.312, 4.32941, 0.17 ) }
    dend_8 { pt3dadd( -11.7347, -298.558, 4.6925, 0.17 ) }
    dend_8 { pt3dadd( -11.67, -298.731, 4.70906, 1.54 ) }
    dend_8 { pt3dadd( -11.1786, -300.412, 4.72618, 0.17 ) }
    dend_8 { pt3dadd( -10.8583, -301.46, 4.73622, 0.17 ) }
    dend_8 { pt3dadd( -10.5077, -302.701, 4.81819, 0.17 ) }
    dend_8 { pt3dadd( -10.0957, -304.193, 4.981, 1.37 ) }
    dend_8 { pt3dadd( -9.8747, -305.198, 5.12808, 0.68 ) }
    dend_8 { pt3dadd( -9.82761, -305.429, 5.16602, 0.68 ) }
    dend_8 { pt3dadd( -9.35456, -307.888, 5.61015, 0.17 ) }
    dend_8 { pt3dadd( -8.96187, -310.075, 6.6828, 0.17 ) }
    dend_8 { pt3dadd( -8.87151, -310.673, 7.01995, 1.71 ) }
    dend_8 { pt3dadd( -8.71131, -311.993, 7.87107, 1.54 ) }
    dend_8 { pt3dadd( -8.63132, -312.838, 8.47465, 0.17 ) }
    dend_8 { pt3dadd( -8.53658, -314.187, 9.53036, 0.17 ) }
    dend_8 { pt3dadd( -8.53835, -319.47, 14.5799, 2.05 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 17/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.222906, -46.4327, -23.1393, 0.17 ) }
    dend_6 { pt3dadd( -0.0698333, -47.1198, -22.6303, 0.17 ) }
    dend_6 { pt3dadd( 0.25262, -48.5861, -21.4445, 0.17 ) }
    dend_6 { pt3dadd( 0.828306, -51.2213, -19.2169, 1.2 ) }
    dend_6 { pt3dadd( 1.68008, -55.0314, -15.1504, 0.17 ) }
    dend_6 { pt3dadd( 2.31312, -57.9472, -11.8405, 0.17 ) }
    dend_6 { pt3dadd( 2.39186, -58.2787, -11.4583, 0.17 ) }
    dend_6 { pt3dadd( 2.86254, -59.9912, -9.34426, 1.37 ) }
    dend_6 { pt3dadd( 2.87812, -60.0466, -9.27509, 1.37 ) }
    dend_6 { pt3dadd( 4.04431, -63.8945, -4.68496, 0.17 ) }
    dend_6 { pt3dadd( 4.46249, -65.3356, -3.22438, 0.17 ) }
    dend_6 { pt3dadd( 4.74436, -66.2772, -2.15679, 0.17 ) }
    dend_6 { pt3dadd( 4.7791, -66.4152, -1.9612, 0.17 ) }
    dend_6 { pt3dadd( 5.26034, -68.3504, 0.851879, 0.17 ) }
    dend_6 { pt3dadd( 5.39551, -68.7808, 1.58546, 1.2 ) }
    dend_6 { pt3dadd( 5.48048, -69.0276, 2.05652, 0.17 ) }
    dend_6 { pt3dadd( 6.32642, -71.4712, 7.43071, 0.17 ) }
    dend_6 { pt3dadd( 7.29757, -74.2583, 13.8832, 0.17 ) }
    dend_6 { pt3dadd( 7.54262, -74.8849, 15.4317, 0.17 ) }
    dend_6 { pt3dadd( 8.45482, -76.653, 20.3592, 0.17 ) }
    dend_6 { pt3dadd( 8.52142, -76.7699, 20.671, 0.17 ) }
    dend_6 { pt3dadd( 8.68209, -77.0289, 21.3085, 0.17 ) }
    dend_6 { pt3dadd( 9.26916, -77.8509, 22.8481, 0.17 ) }
    dend_6 { pt3dadd( 9.42873, -78.0749, 23.1253, 0.68 ) }
    dend_6 { pt3dadd( 10.12, -79.2052, 24.4063, 0.68 ) }
    dend_6 { pt3dadd( 10.6461, -80.2032, 25.3559, 0.68 ) }
    dend_6 { pt3dadd( 11.6889, -84.244, 29.0537, 0.17 ) }
    dend_6 { pt3dadd( 11.3092, -86.0437, 30.4394, 0.17 ) }
    dend_6 { pt3dadd( 10.7005, -87.0982, 31.0875, 1.2 ) }
    dend_6 { pt3dadd( 10.2005, -87.6354, 31.2822, 0.17 ) }
    dend_6 { pt3dadd( 10.0835, -87.7485, 31.3092, 0.17 ) }
    dend_6 { pt3dadd( 5.15949, -92.7494, 30.9956, 0.17 ) }
    dend_6 { pt3dadd( 3.69874, -94.3176, 30.6057, 0.17 ) }
    dend_6 { pt3dadd( 2.98935, -95.1191, 30.3681, 0.17 ) }
    dend_6 { pt3dadd( -0.89449, -100.029, 28.8075, 0.17 ) }
    dend_6 { pt3dadd( -3.02595, -103.08, 27.865, 0.17 ) }
    dend_6 { pt3dadd( -6.87395, -109.242, 25.9939, 0.17 ) }
    dend_6 { pt3dadd( -8.74798, -112.736, 24.6947, 0.17 ) }
    dend_6 { pt3dadd( -9.73205, -114.482, 23.9428, 0.17 ) }
    dend_6 { pt3dadd( -10.9235, -116.462, 23.0077, 0.17 ) }
    dend_6 { pt3dadd( -13.3682, -120.863, 20.9132, 0.17 ) }
    dend_6 { pt3dadd( -13.9349, -121.919, 20.4051, 0.17 ) }
    dend_6 { pt3dadd( -16.6247, -127.304, 18.2276, 0.17 ) }
    dend_6 { pt3dadd( -17.5923, -129.561, 17.3167, 0.17 ) }
    dend_6 { pt3dadd( -18.3499, -131.509, 16.5677, 0.17 ) }
    dend_6 { pt3dadd( -20.3678, -136.939, 14.6187, 0.17 ) }
    dend_6 { pt3dadd( -22.3043, -142.718, 12.9055, 0.17 ) }
    dend_6 { pt3dadd( -23.76, -147.35, 11.7372, 0.17 ) }
    dend_6 { pt3dadd( -24.499, -149.819, 11.2558, 0.17 ) }
    dend_6 { pt3dadd( -25.3627, -152.691, 10.7185, 0.17 ) }
    dend_6 { pt3dadd( -26.2025, -155.225, 10.2443, 0.17 ) }
    dend_6 { pt3dadd( -28.5204, -161.068, 9.2149, 0.17 ) }
    dend_6 { pt3dadd( -29.8847, -164.071, 8.83723, 1.71 ) }
    dend_6 { pt3dadd( -30.3588, -165.046, 8.67479, 0.17 ) }
    dend_6 { pt3dadd( -31.2614, -166.79, 8.25319, 0.17 ) }
    dend_6 { pt3dadd( -31.4134, -167.077, 8.1627, 0.17 ) }
    dend_6 { pt3dadd( -32.5332, -169.085, 7.3781, 0.17 ) }
    dend_6 { pt3dadd( -34.2852, -171.71, 5.80526, 0.17 ) }
    dend_6 { pt3dadd( -35.9637, -174.092, 4.16091, 0.17 ) }
    dend_6 { pt3dadd( -37.4519, -176.19, 2.45383, 1.54 ) }
    dend_6 { pt3dadd( -37.7766, -176.656, 2.03284, 0.17 ) }
    dend_6 { pt3dadd( -38.3751, -177.517, 1.26375, 0.17 ) }
    dend_6 { pt3dadd( -40.1841, -180.337, -1.00618, 0.17 ) }
    dend_6 { pt3dadd( -40.6391, -181.215, -1.57915, 1.2 ) }
    dend_6 { pt3dadd( -40.6391, -181.215, -1.57915, 0.17 ) }
    dend_6 { pt3dadd( -41.2472, -182.671, -1.92717, 0.17 ) }
    dend_6 { pt3dadd( -42.3218, -185.37, -2.41049, 0.17 ) }
    dend_6 { pt3dadd( -43.4832, -188.343, -2.67835, 0.17 ) }
    dend_6 { pt3dadd( -43.5817, -188.57, -2.67835, 0.17 ) }
    dend_6 { pt3dadd( -44.5832, -191.025, -3.04629, 0.17 ) }
    dend_6 { pt3dadd( -44.6738, -191.239, -3.10025, 0.17 ) }
    dend_6 { pt3dadd( -44.7415, -191.385, -3.16814, 0.17 ) }
    dend_6 { pt3dadd( -46.5942, -194.955, -5.52133, 0.17 ) }
    dend_6 { pt3dadd( -47.36, -196.525, -6.66696, 0.17 ) }
    dend_6 { pt3dadd( -49.6342, -201.391, -10.1326, 0.17 ) }
    dend_6 { pt3dadd( -51.0443, -204.422, -12.2091, 0.17 ) }
    dend_6 { pt3dadd( -53.4532, -209.638, -15.4645, 0.17 ) }
    dend_6 { pt3dadd( -55.8391, -214.886, -18.5149, 0.17 ) }
    dend_6 { pt3dadd( -58.3996, -220.322, -21.3847, 0.17 ) }
    dend_6 { pt3dadd( -60.1175, -223.865, -22.9563, 0.17 ) }
    dend_6 { pt3dadd( -61.7932, -226.955, -23.9708, 0.17 ) }
    dend_6 { pt3dadd( -64.306, -231.46, -25.1673, 0.17 ) }
    dend_6 { pt3dadd( -64.9162, -232.493, -25.3516, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -67.5899, -236.649, -25.8986, 0.17 ) }
    dend_6 { pt3dadd( -69.0745, -238.698, -26.1497, 0.17 ) }
    dend_6 { pt3dadd( -72.1964, -242.394, -26.7068, 0.17 ) }
    dend_6 { pt3dadd( -77.4972, -247.846, -27.6835, 0.17 ) }
    dend_6 { pt3dadd( -78.0373, -248.299, -27.7791, 0.68 ) }
    dend_6 { pt3dadd( -80.3726, -250.001, -28.1703, 0.17 ) }
    dend_6 { pt3dadd( -81.7356, -250.837, -28.3762, 0.17 ) }
    dend_6 { pt3dadd( -86.7538, -253.586, -28.9722, 0.17 ) }
    dend_6 { pt3dadd( -87.0475, -253.75, -28.9917, 0.17 ) }
    dend_6 { pt3dadd( -89.4018, -255.18, -28.9947, 0.17 ) }
    dend_6 { pt3dadd( -89.8188, -255.481, -28.9947, 0.17 ) }
    dend_6 { pt3dadd( -92.5676, -257.594, -28.9947, 0.17 ) }
    dend_6 { pt3dadd( -94.856, -259.52, -28.9947, 0.17 ) }
    dend_6 { pt3dadd( -98.5628, -262.993, -29.0856, 0.17 ) }
    dend_6 { pt3dadd( -102.464, -266.747, -29.1902, 0.17 ) }
    dend_6 { pt3dadd( -102.588, -266.871, -29.1939, 0.17 ) }
    dend_6 { pt3dadd( -106.868, -271.09, -29.341, 0.17 ) }
    dend_6 { pt3dadd( -106.988, -271.202, -29.3461, 0.17 ) }
    dend_6 { pt3dadd( -108.841, -272.619, -29.4395, 0.17 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 19/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.222906, -46.4327, -23.1393, 0.17 ) }
    dend_5 { pt3dadd( 0.813848, -47.4508, -19.9245, 0.17 ) }
    dend_5 { pt3dadd( 2.80089, -48.9393, -13.7559, 1.37 ) }
    dend_5 { pt3dadd( 2.84607, -48.9779, -13.6021, 1.37 ) }
    dend_5 { pt3dadd( 3.0071, -49.1249, -13.0264, 0.17 ) }
    dend_5 { pt3dadd( 4.89368, -50.8236, -6.30903, 0.17 ) }
    dend_5 { pt3dadd( 5.03243, -50.9284, -5.85574, 1.03 ) }
    dend_5 { pt3dadd( 6.82019, -52.0327, 0.224446, 0.17 ) }
    dend_5 { pt3dadd( 9.19886, -53.2038, 7.60003, 0.17 ) }
    dend_5 { pt3dadd( 9.30411, -53.2527, 7.91914, 1.2 ) }
    dend_5 { pt3dadd( 9.53149, -53.3484, 8.58737, 0.17 ) }
    dend_5 { pt3dadd( 10.5354, -53.739, 11.453, 0.17 ) }
    dend_5 { pt3dadd( 11.8879, -54.2152, 15.3209, 1.2 ) }
    dend_5 { pt3dadd( 11.9629, -54.2309, 15.5018, 0.17 ) }
    dend_5 { pt3dadd( 15.6872, -56.9527, 24.3743, 0.17 ) }
    dend_5 { pt3dadd( 19.3436, -60.0969, 33.1347, 0.17 ) }
    dend_5 { pt3dadd( 23.0671, -64.6711, 41.2101, 0.17 ) }
    dend_5 { pt3dadd( 27.3533, -70.0011, 48.5053, 0.17 ) }
    dend_5 { pt3dadd( 32.8611, -76.562, 53.6647, 0.17 ) }
    dend_5 { pt3dadd( 39.1192, -80.8652, 60.1699, 0.17 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 39/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 122.727, 52.2176, -39.0208, 0.17 ) }
    dend_25 { pt3dadd( 124.539, 58.6843, -42.7745, 0.17 ) }
    dend_25 { pt3dadd( 126.864, 68.4165, -47.4215, 0.17 ) }
    dend_25 { pt3dadd( 126.894, 68.5723, -47.4892, 0.17 ) }
    dend_25 { pt3dadd( 127.757, 73.6193, -49.5543, 0.17 ) }
    dend_25 { pt3dadd( 128.627, 79.2444, -51.7846, 0.17 ) }
    dend_25 { pt3dadd( 129.715, 87.9998, -55.0518, 0.17 ) }
    dend_25 { pt3dadd( 129.888, 92.6249, -56.3873, 0.17 ) }
    dend_25 { pt3dadd( 129.704, 98.3822, -57.6098, 0.17 ) }
    dend_25 { pt3dadd( 129.58, 99.7184, -57.9186, 1.88 ) }
    dend_25 { pt3dadd( 129.489, 100.204, -58.0614, 0.17 ) }
    dend_25 { pt3dadd( 128.148, 104.977, -59.5958, 0.17 ) }
    dend_25 { pt3dadd( 126.777, 107.936, -60.54, 0.17 ) }
    dend_25 { pt3dadd( 124.738, 111.595, -61.9076, 0.17 ) }
    dend_25 { pt3dadd( 124.271, 112.3, -62.1851, 0.17 ) }
    dend_25 { pt3dadd( 122.059, 115.535, -63.645, 0.17 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 122.727, 52.2176, -39.0208, 0.17 ) }
    dend_24 { pt3dadd( 127.745, 50.0088, -41.8422, 0.17 ) }
    dend_24 { pt3dadd( 130.62, 48.743, -43.4589, 0.17 ) }
    dend_24 { pt3dadd( 133.843, 47.3242, -45.271, 0.17 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 59/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.53835, -319.47, 14.5799, 0.17 ) }
    dend_10 { pt3dadd( -8.26903, -320.483, 15.6125, 0.17 ) }
    dend_10 { pt3dadd( -8.18944, -321.473, 16.5743, 0.17 ) }
    dend_10 { pt3dadd( -8.18478, -321.767, 16.7622, 0.17 ) }
    dend_10 { pt3dadd( -8.1789, -322.079, 16.8969, 1.03 ) }
    dend_10 { pt3dadd( -8.18393, -323.95, 17.4872, 0.51 ) }
    dend_10 { pt3dadd( -8.22933, -327.44, 18.3696, 0.17 ) }
    dend_10 { pt3dadd( -8.36364, -328.752, 18.5664, 0.17 ) }
    dend_10 { pt3dadd( -9.00917, -332.425, 18.8436, 1.2 ) }
    dend_10 { pt3dadd( -9.28513, -333.549, 18.8458, 0.17 ) }
    dend_10 { pt3dadd( -9.51404, -334.374, 18.7823, 0.17 ) }
    dend_10 { pt3dadd( -9.56581, -334.54, 18.7651, 0.17 ) }
    dend_10 { pt3dadd( -10.0054, -335.933, 18.636, 0.17 ) }
    dend_10 { pt3dadd( -10.4503, -337.344, 18.6724, 1.37 ) }
    dend_10 { pt3dadd( -10.9577, -338.827, 18.8743, 0.17 ) }
    dend_10 { pt3dadd( -11.6176, -340.74, 19.3711, 0.17 ) }
    dend_10 { pt3dadd( -12.2683, -343.116, 20.1813, 0.68 ) }
    dend_10 { pt3dadd( -12.3881, -343.69, 20.403, 0.17 ) }
    dend_10 { pt3dadd( -12.5276, -344.834, 20.8934, 0.17 ) }
    dend_10 { pt3dadd( -12.5922, -345.921, 21.4057, 0.17 ) }
    dend_10 { pt3dadd( -12.6566, -349.432, 23.0694, 0.68 ) }
    dend_10 { pt3dadd( -12.7102, -351.931, 24.1942, 0.68 ) }
    dend_10 { pt3dadd( -12.804, -353.394, 24.6982, 0.34 ) }
    dend_10 { pt3dadd( -12.8832, -354.331, 24.9432, 0.17 ) }
    dend_10 { pt3dadd( -12.901, -354.502, 24.9731, 0.17 ) }
    dend_10 { pt3dadd( -13.2252, -356.941, 25.1656, 0.17 ) }
    dend_10 { pt3dadd( -13.4488, -358.375, 25.1315, 0.68 ) }
    dend_10 { pt3dadd( -13.9125, -361.236, 24.7565, 0.17 ) }
    dend_10 { pt3dadd( -14.1939, -362.824, 24.5255, 0.17 ) }
    dend_10 { pt3dadd( -14.4454, -364.195, 24.3083, 1.2 ) }
    dend_10 { pt3dadd( -14.6652, -365.63, 24.0513, 0.17 ) }
    dend_10 { pt3dadd( -14.8142, -367.463, 23.6188, 0.17 ) }
    dend_10 { pt3dadd( -14.7922, -371.359, 22.4262, 1.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 92/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -8.53835, -319.47, 14.5799, 0.17 ) }
    dend_9 { pt3dadd( -8.82043, -320.554, 14.0413, 0.17 ) }
    dend_9 { pt3dadd( -9.37984, -322.625, 12.9811, 0.17 ) }
    dend_9 { pt3dadd( -9.61282, -323.541, 12.5417, 1.54 ) }
    dend_9 { pt3dadd( -9.78853, -324.224, 12.2541, 0.17 ) }
    dend_9 { pt3dadd( -10.9153, -328.109, 10.9635, 0.17 ) }
    dend_9 { pt3dadd( -11.0585, -328.559, 10.7662, 1.54 ) }
    dend_9 { pt3dadd( -11.2714, -329.182, 10.4566, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( -11.7573, -330.509, 9.75035, 0.17 ) }
    dend_9 { pt3dadd( -12.4159, -332.261, 8.81784, 0.17 ) }
    dend_9 { pt3dadd( -13.6828, -335.409, 7.18563, 0.17 ) }
    dend_9 { pt3dadd( -15.8167, -340.031, 4.33549, 0.17 ) }
    dend_9 { pt3dadd( -16.253, -340.952, 3.67821, 1.03 ) }
    dend_9 { pt3dadd( -16.5616, -341.584, 3.16624, 1.03 ) }
    dend_9 { pt3dadd( -16.7315, -341.965, 2.8193, 0.17 ) }
    dend_9 { pt3dadd( -17.3163, -343.678, 1.08333, 0.17 ) }
    dend_9 { pt3dadd( -18.0522, -347.283, -2.53067, 1.54 ) }
    dend_9 { pt3dadd( -18.1742, -349.03, -3.93096, 1.2 ) }
    dend_9 { pt3dadd( -18.1741, -349.168, -4.03494, 1.2 ) }
    dend_9 { pt3dadd( -18.0199, -352.141, -6.10377, 0.17 ) }
    dend_9 { pt3dadd( -17.7919, -353.895, -7.08931, 0.17 ) }
    dend_9 { pt3dadd( -17.3588, -356.025, -7.9457, 0.68 ) }
    dend_9 { pt3dadd( -16.9003, -358.143, -8.45763, 0.17 ) }
    dend_9 { pt3dadd( -16.8692, -358.311, -8.49086, 0.17 ) }
    dend_9 { pt3dadd( -16.8136, -358.685, -8.54231, 0.86 ) }
    dend_9 { pt3dadd( -16.4992, -361.757, -8.68045, 0.17 ) }
    dend_9 { pt3dadd( -16.4318, -362.907, -8.68045, 1.03 ) }
    dend_9 { pt3dadd( -16.4193, -363.247, -8.68045, 0.17 ) }
    dend_9 { pt3dadd( -16.3646, -365.819, -8.68045, 0.17 ) }
    dend_9 { pt3dadd( -16.3645, -366.358, -8.68045, 1.03 ) }
    dend_9 { pt3dadd( -16.3937, -366.842, -8.68045, 0.17 ) }
    dend_9 { pt3dadd( -16.6991, -369.527, -8.68045, 0.17 ) }
    dend_9 { pt3dadd( -16.8823, -370.988, -8.68045, 1.2 ) }
    dend_9 { pt3dadd( -16.9767, -371.597, -8.68045, 0.17 ) }
    dend_9 { pt3dadd( -17.6433, -374.512, -8.68045, 0.17 ) }
    dend_9 { pt3dadd( -18.0087, -375.826, -8.68045, 0.17 ) }
    dend_9 { pt3dadd( -18.2614, -376.558, -8.68045, 1.2 ) }
    dend_9 { pt3dadd( -18.7893, -377.919, -8.58905, 0.17 ) }
    dend_9 { pt3dadd( -19.5375, -379.838, -8.37178, 0.17 ) }
    dend_9 { pt3dadd( -19.8721, -380.77, -8.23744, 0.86 ) }
    dend_9 { pt3dadd( -20.281, -382.028, -8.01387, 0.17 ) }
    dend_9 { pt3dadd( -20.6935, -383.322, -7.77378, 0.17 ) }
    dend_9 { pt3dadd( -21.663, -386.032, -7.26981, 0.17 ) }
    dend_9 { pt3dadd( -21.8324, -386.513, -7.21012, 1.54 ) }
    dend_9 { pt3dadd( -22.1312, -387.384, -7.17303, 0.17 ) }
    dend_9 { pt3dadd( -22.6558, -389.016, -7.22053, 0.17 ) }
    dend_9 { pt3dadd( -23.1942, -390.533, -7.358, 0.17 ) }
    dend_9 { pt3dadd( -23.736, -392.0, -7.5708, 0.17 ) }
    dend_9 { pt3dadd( -24.5122, -393.985, -7.97395, 1.54 ) }
    dend_9 { pt3dadd( -25.3794, -396.225, -8.40831, 0.17 ) }
    dend_9 { pt3dadd( -26.1391, -398.309, -8.52851, 0.17 ) }
    dend_9 { pt3dadd( -26.7332, -400.529, -8.34238, 0.17 ) }
    dend_9 { pt3dadd( -26.8842, -401.12, -8.23222, 1.03 ) }
    dend_9 { pt3dadd( -26.9297, -401.283, -8.18886, 1.03 ) }
    dend_9 { pt3dadd( -27.4057, -402.965, -7.61091, 0.17 ) }
    dend_9 { pt3dadd( -28.5386, -407.161, -5.93239, 0.17 ) }
    dend_9 { pt3dadd( -29.2798, -409.892, -4.70035, 0.17 ) }
    dend_9 { pt3dadd( -30.0932, -412.983, -3.21088, 0.17 ) }
    dend_9 { pt3dadd( -30.2645, -413.573, -2.92728, 0.17 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.7922, -371.359, 22.4262, 0.17 ) }
    dend_12 { pt3dadd( -16.7501, -374.276, 23.8192, 0.17 ) }
    dend_12 { pt3dadd( -17.7052, -376.072, 24.4834, 0.17 ) }
    dend_12 { pt3dadd( -17.7764, -376.223, 24.5338, 0.17 ) }
    dend_12 { pt3dadd( -18.5293, -377.901, 25.0631, 1.2 ) }
    dend_12 { pt3dadd( -18.7481, -378.551, 25.2326, 0.17 ) }
    dend_12 { pt3dadd( -19.0185, -379.701, 25.448, 0.17 ) }
    dend_12 { pt3dadd( -19.0922, -380.738, 25.4395, 0.86 ) }
    dend_12 { pt3dadd( -19.0775, -381.224, 25.4345, 0.17 ) }
    dend_12 { pt3dadd( -19.0566, -381.606, 25.4306, 0.17 ) }
    dend_12 { pt3dadd( -18.8918, -383.852, 25.4062, 0.17 ) }
    dend_12 { pt3dadd( -18.7626, -385.921, 25.385, 0.86 ) }
    dend_12 { pt3dadd( -18.7364, -387.152, 25.3736, 0.17 ) }
    dend_12 { pt3dadd( -18.7912, -389.023, 25.1146, 0.17 ) }
    dend_12 { pt3dadd( -18.923, -390.7, 24.7415, 1.71 ) }
    dend_12 { pt3dadd( -18.9413, -390.857, 24.6949, 0.17 ) }
    dend_12 { pt3dadd( -19.1968, -392.2, 24.1756, 0.17 ) }
    dend_12 { pt3dadd( -19.5058, -393.566, 23.5536, 0.17 ) }
    dend_12 { pt3dadd( -20.5405, -397.435, 21.565, 0.17 ) }
    dend_12 { pt3dadd( -20.7929, -398.282, 21.1029, 1.03 ) }
    dend_12 { pt3dadd( -20.8361, -398.43, 21.0254, 0.17 ) }
    dend_12 { pt3dadd( -21.1415, -399.785, 20.504, 0.17 ) }
    dend_12 { pt3dadd( -21.3268, -400.804, 20.2161, 1.37 ) }
    dend_12 { pt3dadd( -21.3503, -400.965, 20.1902, 0.17 ) }
    dend_12 { pt3dadd( -21.4797, -402.681, 20.1902, 0.17 ) }
    dend_12 { pt3dadd( -21.5291, -403.98, 20.1902, 0.17 ) }
    dend_12 { pt3dadd( -21.8763, -407.373, 20.1902, 0.17 ) }
    dend_12 { pt3dadd( -21.902, -407.535, 20.199, 0.17 ) }
    dend_12 { pt3dadd( -22.02, -408.229, 20.2642, 1.54 ) }
    dend_12 { pt3dadd( -22.3135, -409.655, 20.4199, 0.17 ) }
    dend_12 { pt3dadd( -22.7737, -411.108, 20.5875, 0.17 ) }
    dend_12 { pt3dadd( -23.8898, -413.803, 21.2826, 0.17 ) }
    dend_12 { pt3dadd( -24.5417, -415.308, 21.8422, 0.17 ) }
    dend_12 { pt3dadd( -25.5044, -417.523, 22.7901, 0.17 ) }
    dend_12 { pt3dadd( -26.9887, -420.975, 24.3978, 0.17 ) }
    dend_12 { pt3dadd( -28.2427, -423.921, 25.8732, 0.17 ) }
    dend_12 { pt3dadd( -30.1398, -428.621, 28.3917, 0.17 ) }
    dend_12 { pt3dadd( -31.1013, -431.166, 29.8091, 0.17 ) }
    dend_12 { pt3dadd( -31.2004, -431.429, 29.964, 1.71 ) }
    dend_12 { pt3dadd( -31.4533, -432.102, 30.4205, 0.17 ) }
    dend_12 { pt3dadd( -31.7934, -433.309, 31.3315, 0.17 ) }
    dend_12 { pt3dadd( -31.8162, -433.505, 31.4655, 0.17 ) }
    dend_12 { pt3dadd( -31.852, -434.937, 32.1189, 0.17 ) }
    dend_12 { pt3dadd( -31.9606, -438.207, 33.4749, 0.17 ) }
    dend_12 { pt3dadd( -31.9655, -438.685, 33.6645, 0.17 ) }
    dend_12 { pt3dadd( -31.9259, -439.56, 33.9635, 0.17 ) }
    dend_12 { pt3dadd( -31.8225, -440.764, 34.3106, 1.54 ) }
    dend_12 { pt3dadd( -31.715, -441.589, 34.4936, 0.17 ) }
    dend_12 { pt3dadd( -31.583, -442.282, 34.5743, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( -31.547, -442.793, 34.5768, 0.17 ) }
    dend_12 { pt3dadd( -31.7272, -445.708, 34.5828, 0.17 ) }
    dend_12 { pt3dadd( -31.7949, -446.187, 34.5543, 1.71 ) }
    dend_12 { pt3dadd( -31.8363, -446.422, 34.5389, 0.17 ) }
    dend_12 { pt3dadd( -32.3508, -448.94, 34.3578, 0.17 ) }
    dend_12 { pt3dadd( -33.1321, -452.277, 34.0921, 0.17 ) }
    dend_12 { pt3dadd( -34.2996, -456.501, 33.7127, 0.17 ) }
    dend_12 { pt3dadd( -35.0431, -458.656, 33.4815, 0.17 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 8/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -14.7922, -371.359, 22.4262, 0.17 ) }
    dend_11 { pt3dadd( -14.5187, -373.226, 22.4262, 0.17 ) }
    dend_11 { pt3dadd( -14.1481, -375.245, 22.4262, 0.17 ) }
    dend_11 { pt3dadd( -14.1125, -375.416, 22.4262, 1.2 ) }
    dend_11 { pt3dadd( -13.9978, -375.917, 22.4262, 0.17 ) }
    dend_11 { pt3dadd( -13.4591, -378.18, 22.4262, 0.17 ) }
    dend_11 { pt3dadd( -13.0547, -379.686, 22.4262, 1.37 ) }
    dend_11 { pt3dadd( -12.7139, -380.621, 22.4785, 0.17 ) }
    dend_11 { pt3dadd( -12.6478, -380.782, 22.4922, 0.17 ) }
    dend_11 { pt3dadd( -11.7535, -383.175, 22.7179, 0.17 ) }
    dend_11 { pt3dadd( -11.6984, -383.327, 22.7505, 0.17 ) }
    dend_11 { pt3dadd( -11.0392, -385.305, 23.3452, 0.17 ) }
    dend_11 { pt3dadd( -9.67882, -389.887, 24.9823, 0.17 ) }
    dend_11 { pt3dadd( -9.14148, -391.749, 25.6642, 0.17 ) }
    dend_11 { pt3dadd( -8.52492, -393.958, 26.4267, 0.17 ) }
    dend_11 { pt3dadd( -7.41335, -398.066, 27.9362, 1.37 ) }
    dend_11 { pt3dadd( -6.94832, -399.892, 28.6211, 0.17 ) }
    dend_11 { pt3dadd( -6.91346, -400.051, 28.6842, 0.17 ) }
    dend_11 { pt3dadd( -6.08176, -404.627, 30.4921, 0.17 ) }
    dend_11 { pt3dadd( -5.29869, -407.926, 31.6992, 0.17 ) }
    dend_11 { pt3dadd( -3.68203, -417.5, 34.0923, 0.17 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 29/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -35.0431, -458.656, 33.4815, 0.17 ) }
    dend_14 { pt3dadd( -33.8081, -461.729, 35.7997, 0.17 ) }
    dend_14 { pt3dadd( -32.8562, -464.097, 37.5866, 0.17 ) }
    dend_14 { pt3dadd( -31.9856, -466.263, 39.2211, 0.17 ) }
    dend_14 { pt3dadd( -31.9352, -466.388, 39.3156, 0.17 ) }
    dend_14 { pt3dadd( -29.7535, -471.817, 43.4112, 0.17 ) }
    dend_14 { pt3dadd( -29.5878, -472.229, 43.7223, 0.17 ) }
    dend_14 { pt3dadd( -25.3956, -480.152, 48.1556, 0.17 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -35.0431, -458.656, 33.4815, 0.17 ) }
    dend_13 { pt3dadd( -37.2624, -460.902, 33.4815, 0.17 ) }
    dend_13 { pt3dadd( -40.2817, -463.959, 33.4815, 0.17 ) }
    dend_13 { pt3dadd( -41.6995, -465.394, 33.4815, 0.17 ) }
    dend_13 { pt3dadd( -41.8139, -465.509, 33.4815, 0.17 ) }
    dend_13 { pt3dadd( -47.8054, -473.436, 34.6067, 0.17 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_17 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_45 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_31 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_16 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_49 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_46 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_42 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_60 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_53 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_52 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_47 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_22 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_15 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_8 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_5 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_12 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_11 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_29 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_56 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_57 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_28 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_38 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_23 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_26 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_48 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_13 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_14 OneSecGrp_SectionRef_65.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 5
    dend_45 nseg = 5
    dend_43 nseg = 7
    dend_36 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 9
    dend_16 nseg = 7
    dend_51 nseg = 5
    dend_49 nseg = 7
    dend_46 nseg = 5
    dend_42 nseg = 5
    dend_2 nseg = 5
    dend_60 nseg = 7
    dend_53 nseg = 7
    dend_52 nseg = 5
    dend_47 nseg = 9
    dend_27 nseg = 5
    dend_22 nseg = 5
    dend_7 nseg = 7
    dend_61 nseg = 5
    dend_59 nseg = 3
    dend_58 nseg = 9
    dend_55 nseg = 5
    dend_41 nseg = 3
    dend_15 nseg = 3
    dend_8 nseg = 9
    dend_6 nseg = 15
    dend_5 nseg = 5
    dend_25 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 5
    dend_12 nseg = 5
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_NBC_83f56a1270_0_0


