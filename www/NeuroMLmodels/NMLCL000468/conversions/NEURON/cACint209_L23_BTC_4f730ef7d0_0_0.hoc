// Cell: cACint209_L23_BTC_4f730ef7d0_0_0
/*
{
  "id" : "cACint209_L23_BTC_4f730ef7d0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.10599, -10.005, -3.63045, 2.05199", "1.00994, -8.98941, -3.26388, 3.40229", "0.913884, -7.97383, -2.89732, 4.43836", "0.817831, -6.95825, -2.53075, 5.9106", "0.721777, -5.94268, -2.16418, 7.4154", "0.625724, -4.9271, -1.79761, 8.65317", "0.52967, -3.91152, -1.43104, 9.36003", "0.433616, -2.89594, -1.06447, 10.0585", "0.337563, -1.88037, -0.697906, 10.4351", "0.241509, -0.864787, -0.331337, 10.6941", "0.145456, 0.150791, 0.0352311, 10.9531", "0.0494021, 1.16637, 0.4018, 11.2338", "-0.0466515, 2.18195, 0.768368, 11.5118", "-0.142705, 3.19752, 1.13494, 11.7095", "-0.238759, 4.2131, 1.5015, 10.7536", "-0.334812, 5.22868, 1.86807, 9.97", "-0.430866, 6.24426, 2.23464, 9.36435", "-0.526919, 7.25984, 2.60121, 8.19972", "-0.622973, 8.27541, 2.96778, 6.07377", "-0.719027, 9.29099, 3.33435, 3.38096", "-0.81508, 10.3066, 3.70092, 2.12602" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.00111, -9.59314, -3.03985, 2.66", "1.28097, -14.3282, -3.42946, 2.66", "1.5871, -19.508, -3.85567, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995461318083
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.84111, 9.45687, 0.260152, 2.66", "4.02954, 10.1268, 5.28489, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995461318083
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.81508, 10.3066, 3.70092, 0.66", "-2.22748, 25.24, 3.70092, 0.66", "-3.63987, 40.1733, 3.70092, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "1.5871, -19.508, -3.85567, 2.66", "1.30125, -19.7165, -3.02278, 2.66" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "1.5871, -19.508, -3.85567, 0.66", "4.48744, -21.9876, -4.36889, 0.66", "7.92559, -24.927, -4.97728, 0.66", "10.6551, -27.2607, -5.46029, 0.66" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.02954, 10.1268, 5.28489, 1.99", "6.73804, 17.4178, 2.52108, 1.99", "8.60872, 22.4535, 0.612194, 1.99", "10.2384, 26.8405, -1.05082, 1.99", "12.1705, 32.0414, -3.02233, 1.99", "14.265, 37.6794, -5.15956, 1.99", "15.7933, 41.7934, -6.71908, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.02954, 10.1268, 5.28489, 1.33", "4.8385, 19.5199, 7.27302, 1.33", "5.59854, 26.8298, 8.91746, 1.33", "6.46803, 33.1407, 10.2805, 1.33", "7.54269, 39.9288, 11.4884, 0.66", "8.27398, 43.7542, 12.0889, 0.66", "9.48563, 49.6131, 12.7261, 0.66", "10.1783, 52.6199, 12.9759, 0.66", "11.5139, 57.6084, 12.9907, 0.66", "14.5158, 67.228, 12.8314, 0.66", "15.7818, 71.2531, 12.7126, 0.66", "17.6672, 77.6926, 12.5131, 0.66", "18.5535, 81.0304, 12.392, 0.66", "19.6162, 85.0953, 12.2259, 0.66", "21.1606, 91.6077, 12.0529, 0.66", "22.0006, 94.9901, 12.0403, 0.66", "23.1107, 99.8778, 12.1627, 0.66", "24.0435, 104.659, 12.4885, 0.66", "24.6735, 108.262, 12.7404, 0.66", "25.3849, 111.842, 13.0298, 0.66", "26.7593, 118.436, 13.7101, 0.66", "27.9011, 123.206, 14.4272, 0.66", "28.9805, 127.573, 15.4129, 0.66", "29.8734, 130.443, 16.2347, 0.66", "30.7335, 133.113, 17.0688, 0.66", "31.9594, 136.382, 18.1675, 0.66", "33.2864, 139.616, 19.339, 0.66", "35.4687, 144.005, 20.8893, 0.66", "38.2539, 149.161, 22.6735, 0.66", "40.1537, 152.833, 23.8914, 0.66", "41.1926, 154.943, 24.4995, 0.33", "41.8796, 156.286, 24.8172, 0.66", "43.653, 159.871, 25.5693, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.63987, 40.1733, 3.70092, 0.33", "-5.05227, 55.1067, 3.70092, 0.33", "-6.46467, 70.04, 3.70092, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "1.30125, -19.7165, -3.02278, 2.0", "1.17658, -20.9987, -6.37225, 2.0" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "1.30125, -19.7165, -3.02278, 0.66", "-0.471344, -23.4607, -1.00402, 0.66", "-1.59455, -25.9463, 0.224325, 0.66", "-2.32202, -27.7139, 0.910645, 0.66", "-4.91332, -33.0955, 3.41069, 0.66", "-5.71904, -34.717, 4.31468, 0.66", "-6.6905, -36.6522, 5.46656, 0.33", "-7.11599, -37.4521, 5.96661, 0.66", "-8.38868, -39.7995, 7.46228, 0.66", "-11.2456, -45.8882, 11.3289, 0.66", "-12.4952, -49.0255, 12.9676, 0.33", "-12.7267, -49.6254, 13.2355, 0.66", "-13.6247, -51.9052, 14.2171, 0.66", "-14.3355, -53.8853, 15.0296, 0.33", "-14.6374, -54.7851, 15.3667, 0.66", "-15.5576, -58.4747, 15.9937, 0.33", "-16.454, -61.8209, 16.3572, 0.66", "-17.4081, -65.2583, 16.7909, 0.33", "-17.6082, -65.9207, 16.8934, 0.66" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "10.6551, -27.2607, -5.46029, 0.66", "12.7713, -27.4397, -9.58165, 0.66", "14.8477, -27.7471, -13.7941, 0.66", "19.3665, -28.6596, -22.7091, 0.66", "22.3181, -29.0436, -27.7837, 0.66", "25.532, -29.4019, -32.7792, 0.66", "28.3494, -29.6641, -36.9342, 0.66", "31.0359, -30.0858, -40.4276, 0.66", "34.7387, -30.7888, -44.8749, 0.66", "39.8514, -31.5799, -50.273, 0.66", "42.1891, -31.9458, -52.831, 0.66", "43.9498, -32.2138, -54.8954, 0.33", "48.2111, -32.7417, -59.5817, 0.66", "51.4863, -33.1265, -63.0354, 0.66", "53.1631, -33.3383, -64.8569, 0.66", "55.0086, -33.5805, -66.9987, 0.33", "56.7616, -33.6822, -69.226, 0.66", "58.7616, -33.7205, -72.1885, 0.66", "60.4518, -33.6982, -75.1942, 0.33", "61.3647, -33.6669, -76.7369, 0.66", "62.8287, -33.665, -79.3976, 0.33", "65.0495, -33.6904, -83.9085, 0.66", "67.4681, -33.8971, -88.8141, 0.66", "68.3843, -34.0722, -90.773, 0.33", "70.504, -34.5883, -95.3774, 0.66", "73.0145, -35.3122, -100.808, 0.33", "74.2065, -35.8391, -103.457, 1.33", "75.539, -36.5483, -106.177, 0.66", "76.6263, -37.2231, -108.123, 0.33", "77.2753, -37.7122, -109.253, 0.66", "78.0703, -38.5899, -110.798, 0.33", "79.9489, -41.0766, -114.307, 1.33", "80.6171, -42.0053, -115.612, 0.66", "82.6093, -44.7455, -119.592, 0.33", "82.8761, -45.1622, -120.319, 0.33", "84.0246, -47.0474, -123.655, 0.66", "85.0828, -48.9011, -126.896, 0.33", "85.8295, -50.1143, -129.175, 1.33", "86.664, -51.7222, -132.63, 0.33", "87.6011, -54.4885, -140.009, 0.66" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "10.6551, -27.2607, -5.46029, 0.66", "13.4244, -28.8452, -3.85157, 0.66", "15.4454, -30.008, -2.18512, 0.66", "16.1741, -30.436, -1.56447, 0.66", "18.785, -31.9767, 0.656694, 0.66", "22.5486, -34.3071, 4.20561, 0.66", "23.0947, -34.6476, 4.74672, 1.33", "26.1123, -36.6543, 8.27721, 0.33", "27.1724, -37.1881, 9.43507, 0.33", "27.4181, -37.2988, 9.697, 0.66", "29.3939, -38.0298, 11.5968, 0.33", "31.3087, -38.5709, 13.2883, 0.66", "32.7653, -38.8657, 14.412, 0.66", "40.0076, -39.5915, 18.7839, 0.66" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "15.7933, 41.7934, -6.71908, 1.33", "20.3354, 44.4915, -12.8606, 1.33", "22.957, 46.0487, -16.4053, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "15.7933, 41.7934, -6.71908, 1.33", "16.0914, 44.1469, -14.568, 1.33", "16.2753, 45.598, -19.4076, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "1.17658, -20.9987, -6.37225, 0.66", "1.27122, -20.4777, -7.96245, 0.66", "1.29516, -20.0857, -9.13181, 0.66", "1.11849, -18.4328, -15.2594, 0.66", "0.352771, -17.5181, -20.3518, 0.66", "-0.0991505, -17.3039, -22.6756, 0.66", "-0.628583, -17.1181, -25.2585, 0.66", "-1.6703, -17.0255, -30.2162, 0.66", "-2.51315, -17.186, -33.6402, 0.66", "-4.99296, -17.9813, -41.797, 0.66", "-6.92798, -18.6187, -47.7332, 0.66", "-7.4467, -18.8615, -49.2984, 0.66", "-8.14428, -19.3128, -51.422, 0.66", "-10.1243, -20.7563, -57.8161, 0.66", "-12.0723, -22.4367, -65.6663, 0.66", "-12.4653, -22.9133, -68.6113, 0.66", "-12.8814, -23.2293, -71.9873, 0.66", "-13.1213, -23.4117, -74.2417, 0.66", "-13.8859, -24.0974, -83.5989, 0.66", "-13.9662, -24.2115, -85.0721, 0.66", "-14.5526, -25.109, -95.8071, 0.66", "-14.83, -25.6718, -103.033, 0.33", "-14.8444, -25.7108, -103.773, 1.33", "-14.8067, -25.7858, -105.207, 0.66", "-14.3882, -26.1649, -110.588, 0.33", "-14.0204, -26.3539, -113.451, 1.33", "-13.5476, -26.5538, -115.169, 0.33", "-13.2108, -26.6659, -116.08, 0.66", "-12.0596, -26.9738, -119.986, 0.33", "-11.8521, -27.0466, -120.951, 1.33", "-11.5822, -27.1251, -122.15, 0.66", "-11.1109, -27.2225, -124.33, 0.33", "-10.6311, -27.3151, -126.787, 1.33", "-9.37604, -27.4443, -134.603, 0.33", "-8.88139, -27.498, -139.621, 0.33", "-8.68232, -27.5579, -142.013, 0.33", "-8.60832, -27.5898, -142.994, 0.33", "-8.50541, -27.5888, -144.096, 0.33", "-7.81182, -27.4453, -148.721, 0.66", "-6.37346, -26.8946, -155.763, 0.33", "-5.85072, -26.5975, -158.16, 0.33", "-5.38427, -26.2459, -160.677, 0.66", "-4.34947, -25.3708, -166.266, 0.33", "-3.96241, -24.9985, -168.194, 0.66", "-3.55112, -24.6182, -169.647, 0.33", "-3.44478, -24.4931, -169.95, 0.66", "-2.24042, -22.2047, -175.178, 0.33", "-2.10943, -21.8221, -176.14, 0.66" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "1.17658, -20.9987, -6.37225, 1.33", "0.636498, -23.1838, -8.28584, 1.33", "-0.225437, -26.6711, -11.3398, 1.99" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "22.957, 46.0487, -16.4053, 1.33", "25.7385, 47.5373, -13.5565, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "22.957, 46.0487, -16.4053, 0.66", "23.0006, 47.3054, -17.1482, 0.66", "23.096, 48.4037, -17.7683, 0.66", "23.231, 49.7583, -18.3632, 0.66", "23.4898, 51.7886, -19.1112, 0.66", "24.0505, 55.5643, -20.2828, 0.66", "24.3173, 57.0226, -20.6715, 0.66", "24.6326, 58.4358, -20.955, 0.66", "25.2259, 60.6677, -21.3806, 0.66", "25.4888, 61.5616, -21.516, 0.66", "25.9889, 63.1716, -21.6835, 0.66", "26.3421, 64.537, -21.7586, 0.66", "27.1545, 68.0029, -22.2669, 0.66", "27.757, 70.854, -22.8946, 0.66", "28.0883, 72.7543, -23.4479, 0.66", "28.3613, 74.5822, -24.0224, 0.66", "28.6253, 76.4409, -24.6991, 0.66", "29.048, 79.8569, -25.9976, 0.66", "29.278, 81.6119, -26.6735, 0.66", "29.6464, 84.4852, -27.7115, 0.66", "29.8588, 85.9165, -28.227, 0.33", "30.2121, 88.0807, -28.9305, 0.66", "30.5049, 89.5243, -29.3062, 0.66", "30.8303, 90.9626, -29.5277, 0.66", "31.113, 92.2021, -29.7329, 0.33", "31.4012, 93.3804, -29.9107, 0.66", "31.6472, 94.4754, -30.0712, 0.33", "31.852, 95.3848, -30.1858, 0.66", "32.2724, 97.2732, -30.5962, 0.33", "32.5362, 98.664, -30.9615, 0.66", "32.8509, 100.251, -31.4215, 0.66", "33.045, 101.034, -31.6633, 0.33", "33.2578, 101.818, -31.8852, 0.33", "33.7068, 103.385, -32.2744, 0.66", "34.004, 104.463, -32.472, 0.33", "34.2621, 105.178, -32.5451, 0.33", "34.6694, 106.435, -32.6598, 0.66", "35.2114, 108.288, -32.8919, 0.66", "35.3562, 108.926, -33.0046, 0.66", "35.6905, 111.196, -33.3987, 0.66", "35.7329, 112.67, -33.6163, 0.66", "35.4934, 115.489, -34.0854, 0.66", "35.0819, 117.763, -34.4973, 0.66", "34.6171, 119.778, -34.8266, 0.33", "34.131, 121.555, -35.0688, 0.66", "33.2639, 124.317, -35.3482, 0.33", "32.7535, 125.971, -35.4098, 0.66", "32.3202, 127.712, -35.2983, 0.66", "31.9272, 129.755, -35.0145, 0.33", "31.8524, 130.64, -34.877, 0.66", "31.8432, 131.28, -34.7118, 0.66", "31.9725, 133.184, -34.001, 0.33", "32.0712, 134.051, -33.5663, 0.66", "32.2563, 135.163, -32.9113, 0.33", "32.4594, 136.084, -32.3335, 0.66", "33.4464, 139.796, -29.9587, 0.66", "33.7927, 140.901, -29.2663, 0.33", "34.1773, 141.925, -28.631, 0.33", "34.3964, 142.531, -28.2439, 0.66", "34.7119, 143.4, -27.688, 0.33", "35.0075, 144.284, -27.1978, 0.33", "35.2978, 145.272, -26.7277, 0.33", "35.3317, 145.448, -26.6162, 0.66", "35.6138, 147.541, -25.1458, 0.33", "35.66, 148.159, -24.7068, 0.33", "35.6828, 148.503, -24.468, 0.66", "35.9406, 150.695, -23.0459, 0.33", "35.9684, 150.883, -22.9425, 0.66", "36.3438, 152.445, -22.3011, 0.33", "36.505, 153.001, -22.1589, 0.66", "37.0726, 155.153, -21.5515, 0.33", "37.4296, 156.305, -21.3451, 0.33", "37.7708, 157.347, -21.2508, 0.33", "38.5652, 160.078, -21.0, 0.66", "39.3202, 162.767, -20.7538, 0.66", "40.2219, 166.312, -20.455, 0.66", "41.1773, 170.533, -20.299, 0.66", "41.5785, 172.488, -20.3438, 0.33", "42.4185, 176.919, -20.5101, 0.66", "42.5563, 177.752, -20.576, 0.66", "42.7482, 178.922, -20.7265, 0.66", "43.1239, 181.432, -21.2727, 0.66", "43.2502, 183.859, -21.5145, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "16.2753, 45.598, -19.4076, 0.66", "16.5951, 47.3298, -21.1434, 0.66", "16.8388, 48.9456, -22.9786, 0.66", "17.0419, 51.6419, -26.177, 0.66", "17.1414, 56.5175, -32.4669, 0.66", "17.0766, 58.1604, -34.6374, 0.66", "16.8448, 61.6195, -39.2294, 0.66", "16.4542, 64.1478, -42.8281, 0.66", "16.2548, 65.2956, -44.7041, 0.66", "15.6095, 68.8789, -51.2895, 0.66", "15.5036, 69.7517, -52.8012, 0.66", "15.3552, 70.9584, -54.8359, 0.66", "15.3223, 71.7776, -56.1559, 0.33", "15.5636, 76.3911, -63.2007, 0.66", "15.7371, 77.3672, -64.6028, 1.33", "16.1306, 79.1075, -66.8766, 0.33", "16.3067, 79.8829, -67.8528, 0.66", "16.9024, 82.9757, -71.4186, 0.33", "17.2806, 84.948, -73.5192, 1.33", "17.7754, 89.1795, -77.6647, 0.66", "17.8303, 90.3643, -78.9661, 0.66", "17.7881, 92.5195, -81.5603, 0.66", "17.6687, 93.6411, -83.0672, 0.66", "17.2135, 96.254, -86.8075, 0.66", "16.6786, 98.5251, -90.1951, 0.66", "15.8143, 101.708, -94.7141, 0.33", "15.6347, 102.442, -95.7431, 0.66", "14.7779, 106.246, -101.059, 0.33", "14.605, 107.119, -102.244, 0.33", "14.2787, 108.705, -104.098, 1.33", "13.9679, 110.372, -105.959, 0.33", "13.8136, 111.314, -106.961, 0.66", "12.9406, 116.415, -112.326, 0.33", "12.7087, 117.686, -113.504, 0.33", "12.2629, 119.94, -115.571, 0.66", "11.4787, 125.906, -121.785, 0.33", "11.3904, 127.077, -123.078, 0.33", "11.3071, 129.507, -125.878, 0.66", "11.3111, 132.049, -128.876, 0.33", "11.3873, 134.287, -131.802, 0.66", "11.8252, 139.916, -139.713, 0.33", "11.9362, 141.613, -142.177, 0.66", "11.941, 144.161, -145.981, 0.33", "11.9286, 144.909, -147.167, 0.66", "11.7924, 147.566, -151.259, 0.66", "11.578, 150.174, -154.784, 0.33", "11.3131, 152.748, -158.093, 0.66", "11.079, 155.129, -161.268, 0.66", "10.6934, 159.312, -167.332, 0.66", "10.4643, 161.459, -170.585, 0.33", "10.173, 163.82, -174.378, 0.66", "9.40397, 171.461, -186.526, 0.66", "9.25534, 173.209, -189.461, 0.66", "8.81494, 176.987, -195.947, 0.33", "8.68602, 177.981, -197.711, 0.66", "8.19806, 181.354, -203.854, 0.33", "7.72653, 183.922, -208.325, 0.66", "6.36154, 189.363, -217.923, 0.66", "5.90017, 191.032, -221.0, 1.99", "4.2524, 196.294, -231.081, 0.66", "3.81751, 197.645, -233.712, 0.66", "3.40848, 198.816, -235.977, 0.66", "0.968421, 205.863, -250.257, 0.66", "0.217121, 208.304, -255.041, 0.33", "-0.301183, 210.091, -258.819, 0.66", "-0.804035, 211.526, -261.819, 0.66", "-1.44613, 213.284, -265.571, 0.66", "-3.12311, 217.908, -275.406, 0.66", "-4.74345, 222.284, -284.377, 0.66", "-8.33588, 231.222, -303.345, 0.33", "-9.32328, 233.513, -308.444, 0.33", "-11.033, 237.024, -316.868, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "16.2753, 45.598, -19.4076, 0.66", "14.9073, 49.6527, -23.4552, 0.66", "13.7828, 52.1191, -26.2407, 0.66", "12.1749, 55.649, -30.1352, 0.66", "11.0036, 58.0953, -32.6725, 0.66", "10.4611, 59.2598, -33.8751, 0.66", "8.18634, 63.6099, -38.556, 0.66", "5.46035, 67.8196, -43.66, 0.66", "4.59554, 69.0293, -45.209, 0.66", "2.0087, 73.0056, -49.7688, 0.66", "-0.307703, 76.3823, -53.2684, 0.66", "-3.41407, 81.0525, -57.3433, 0.66", "-5.5334, 84.5057, -59.7104, 0.66", "-6.83696, 86.6909, -60.782, 0.66", "-10.8849, 93.4685, -63.0594, 0.66", "-12.9189, 97.3463, -63.4899, 0.66", "-15.7072, 102.942, -63.4738, 0.66", "-17.1126, 106.102, -63.1439, 0.66", "-20.4134, 113.883, -61.7726, 0.66", "-21.6467, 116.745, -61.1177, 0.66", "-24.5143, 123.246, -58.9598, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "-0.225437, -26.6711, -11.3398, 1.33", "-1.50644, -32.3991, -10.6268, 1.33", "-2.26189, -34.9663, -11.9948, 1.33", "-2.29187, -35.1294, -12.093, 1.33", "-2.65422, -37.3538, -13.3618, 0.66", "-2.87579, -39.1286, -14.2986, 0.66", "-3.19284, -41.4497, -15.3696, 0.66", "-4.46411, -52.7573, -20.3675, 0.66", "-4.8837, -56.9425, -21.9108, 0.66", "-4.99249, -59.8411, -22.7149, 0.66", "-5.04036, -62.6492, -23.2927, 0.66", "-5.11178, -67.7234, -24.2134, 0.66", "-5.12179, -73.3804, -25.031, 0.66", "-5.16797, -76.6446, -25.2528, 0.66", "-5.27625, -84.5561, -25.9035, 0.66", "-5.35014, -88.7171, -26.2187, 0.66", "-5.46987, -97.1875, -26.908, 0.66", "-5.41178, -100.772, -27.2234, 0.66", "-5.20098, -107.413, -27.9913, 0.66", "-5.00639, -112.161, -28.6194, 0.66", "-4.7763, -117.529, -29.5022, 0.66", "-4.36617, -123.475, -30.4412, 0.66", "-4.08826, -127.036, -30.9178, 0.66", "-3.58235, -134.818, -31.972, 0.66", "-3.29257, -138.982, -32.4998, 0.66", "-2.93697, -144.487, -33.2332, 0.66", "-2.40716, -151.944, -34.2653, 0.66", "-2.25991, -155.238, -34.6316, 0.66", "-2.1041, -162.563, -35.243, 0.66", "-1.8451, -172.695, -35.4818, 0.66" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-0.225437, -26.6711, -11.3398, 1.33", "-2.27555, -28.0458, -8.33522, 1.33", "-7.5982, -31.6147, -0.534503, 1.33" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "25.7385, 47.5373, -13.5565, 1.33", "28.0851, 49.9772, -15.164, 1.33", "28.7618, 50.6465, -15.523, 1.33", "30.0221, 51.8496, -15.9498, 1.33", "31.6349, 53.4104, -16.3189, 1.33", "34.0351, 55.6887, -16.6457, 1.33", "37.9373, 59.0858, -16.7012, 1.33", "40.2075, 60.9692, -16.3382, 1.33", "42.5456, 62.9124, -15.6709, 0.66", "43.8553, 63.8821, -15.2269, 0.66", "47.1447, 66.1162, -14.2784, 0.66", "51.2256, 68.7833, -12.9539, 0.66", "53.6845, 70.3847, -12.116, 0.66", "58.2675, 73.2875, -10.8308, 0.66", "64.3941, 77.0372, -9.37956, 0.66", "69.8315, 80.2084, -8.16918, 0.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "25.7385, 47.5373, -13.5565, 0.66", "32.5803, 45.8101, -7.40372, 0.66", "37.0559, 44.9491, -3.61356, 0.66", "43.4547, 44.0636, 1.4628, 0.66", "45.5767, 43.8121, 3.03815, 0.66", "48.5599, 43.4528, 5.34864, 0.66", "52.3648, 42.9828, 8.55464, 0.66", "58.1752, 42.6538, 13.538, 0.66", "60.0186, 42.5796, 15.0449, 0.33", "61.4088, 42.5433, 16.1468, 0.66", "69.6743, 42.4707, 23.0331, 0.66", "74.9238, 42.5511, 27.7429, 0.66", "77.2753, 42.5944, 29.9502, 0.66", "79.826, 42.8346, 32.1815, 0.66", "81.8347, 43.4072, 34.0017, 0.33", "82.5455, 43.702, 34.6279, 0.66", "83.7407, 44.6686, 35.3732, 0.33", "84.3396, 45.3284, 35.714, 0.66", "86.9361, 48.6563, 37.7471, 0.33", "89.6196, 53.4864, 40.3079, 0.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "43.2502, 183.859, -21.5145, 0.33", "41.806, 185.114, -24.0991, 0.33", "41.0884, 185.737, -25.3833, 0.66", "39.2916, 187.298, -28.5991, 0.33", "37.9911, 188.428, -30.9265, 0.66", "35.2308, 190.825, -35.8664, 0.33", "34.033, 191.866, -38.01, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "43.2502, 183.859, -21.5145, 0.33", "41.11, 185.138, -22.9114, 0.33", "38.8523, 186.487, -24.3851, 0.66", "33.2414, 189.839, -28.0474, 0.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-24.5143, 123.246, -58.9598, 0.66", "-26.5772, 126.526, -62.3097, 0.66", "-29.1812, 130.127, -66.8121, 0.66", "-31.6328, 133.183, -70.5601, 0.66", "-32.5698, 134.248, -71.8436, 0.66", "-34.3271, 136.161, -73.9998, 0.66", "-35.1605, 137.002, -74.9614, 0.66", "-39.1255, 140.838, -79.2019, 0.66", "-42.5628, 143.866, -82.1539, 0.66", "-43.7577, 144.84, -83.1881, 0.66", "-46.9088, 147.363, -85.8307, 0.66", "-50.4656, 150.304, -88.7338, 0.66", "-53.0059, 152.499, -90.9033, 0.66", "-56.1671, 155.374, -93.7421, 0.66", "-60.297, 159.159, -98.0864, 0.33", "-61.8041, 160.62, -99.947, 0.66", "-62.2531, 161.067, -100.61, 0.66", "-64.8943, 163.813, -105.274, 0.66", "-66.1909, 165.294, -108.253, 0.33", "-66.6025, 165.807, -109.371, 0.66", "-68.1513, 167.85, -113.744, 0.33", "-68.8931, 168.835, -116.087, 1.33", "-70.7573, 171.366, -122.053, 0.33", "-72.093, 173.318, -126.582, 0.33", "-72.3551, 173.717, -127.545, 0.66", "-73.2031, 174.991, -130.933, 0.33", "-74.4438, 176.807, -135.905, 0.66", "-74.8832, 177.491, -137.72, 0.33", "-75.3831, 178.309, -139.815, 0.66", "-76.5285, 180.06, -144.084, 0.33", "-77.2161, 181.417, -146.772, 0.66", "-77.5488, 182.357, -148.078, 0.33", "-77.8781, 183.68, -149.181, 0.66", "-78.1297, 185.239, -150.0, 0.33", "-78.2981, 187.597, -150.364, 0.66", "-78.379, 191.822, -150.122, 0.33", "-78.2978, 194.258, -149.665, 0.66", "-78.1517, 196.92, -148.792, 0.33", "-78.1189, 197.738, -148.462, 0.66", "-78.1397, 200.872, -147.149, 0.33", "-78.234, 201.884, -146.706, 0.66", "-78.5617, 204.573, -145.524, 0.33", "-79.5564, 211.195, -142.63, 0.66", "-80.1154, 214.212, -141.292, 0.33", "-81.2809, 219.584, -139.031, 0.33", "-82.1395, 222.724, -137.783, 0.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-24.5143, 123.246, -58.9598, 0.33", "-25.1104, 126.339, -59.4347, 0.33", "-25.4299, 128.591, -59.7078, 0.33", "-25.6017, 129.849, -59.8452, 0.66", "-26.0656, 133.059, -60.1721, 0.33", "-26.2567, 134.242, -60.2898, 0.66", "-26.5629, 135.886, -60.2853, 0.33", "-27.2872, 139.469, -60.0575, 0.33", "-27.5557, 140.576, -59.9574, 0.66", "-28.1286, 142.493, -59.7513, 0.33", "-28.4106, 143.353, -59.642, 0.66", "-29.8501, 148.269, -59.2108, 0.33", "-30.5581, 150.516, -58.9841, 1.33", "-31.3495, 152.846, -58.7575, 0.33", "-31.642, 153.698, -58.6953, 0.66", "-33.1002, 157.921, -58.5058, 0.33", "-34.3983, 161.461, -58.5968, 0.66", "-36.3711, 166.421, -58.9859, 0.66", "-37.1379, 168.457, -59.0437, 0.66", "-38.3795, 171.966, -59.0974, 0.66", "-39.2025, 174.414, -59.076, 0.33", "-40.5177, 178.355, -58.991, 0.66", "-41.9788, 183.387, -58.8043, 0.66", "-43.8227, 191.25, -58.1049, 0.33", "-44.0834, 192.488, -57.928, 0.66", "-44.8362, 197.091, -57.0954, 0.33", "-45.4823, 201.562, -56.1558, 0.33", "-45.6663, 203.18, -55.7769, 0.66", "-46.321, 210.61, -54.4623, 0.33", "-46.4, 211.75, -54.3583, 0.66", "-46.5901, 216.31, -54.0067, 0.33", "-46.6574, 218.315, -53.9094, 0.33", "-46.6476, 222.04, -53.8058, 0.66", "-46.6284, 227.247, -53.8491, 0.66", "-46.5402, 232.1, -54.0703, 0.66", "-46.5192, 236.5, -54.1068, 0.33", "-46.5722, 238.115, -54.0598, 0.33", "-46.9384, 242.967, -53.8017, 0.33", "-47.1686, 244.147, -53.647, 0.66", "-47.8201, 246.357, -53.3561, 0.33", "-48.2564, 247.488, -53.2592, 0.66", "-49.3012, 249.924, -53.2602, 0.33", "-50.2447, 252.074, -53.2606, 1.99", "-52.6538, 256.553, -53.3268, 0.33", "-54.4986, 260.301, -53.4604, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "-1.8451, -172.695, -35.4818, 0.33", "-2.36175, -175.665, -36.1798, 0.33", "-2.37842, -176.382, -36.2234, 0.66", "-2.35701, -177.7, -36.1603, 0.33", "-2.34414, -178.031, -36.1363, 0.66", "-2.25172, -182.672, -35.9319, 0.66", "-2.20322, -184.918, -36.0447, 0.33", "-2.15057, -189.813, -36.7073, 0.66", "-2.08984, -195.052, -37.5099, 0.66", "-2.04237, -197.185, -37.8533, 0.66", "-1.85672, -203.78, -38.7671, 0.66", "-1.60963, -210.307, -39.5856, 0.66", "-1.53345, -213.403, -39.9988, 0.66", "-1.47767, -217.719, -40.5536, 0.66", "-1.45018, -221.596, -40.9208, 0.66", "-1.38371, -226.509, -41.1611, 0.66", "-1.33854, -231.111, -41.1163, 0.66", "-1.32018, -234.634, -40.8565, 0.66", "-1.36267, -241.191, -40.2639, 0.66", "-1.37454, -245.411, -39.8107, 0.66", "-1.41595, -250.285, -39.2015, 0.66", "-1.4223, -254.809, -38.6075, 0.66", "-1.42496, -261.535, -37.6151, 0.66", "-1.38952, -266.646, -36.8669, 0.66", "-1.28246, -272.192, -36.2406, 0.66", "-1.14393, -276.048, -35.8711, 0.66", "-0.930272, -279.918, -35.658, 0.66", "-0.511928, -284.781, -35.5954, 0.66", "-0.178943, -289.459, -35.8089, 0.66", "0.101778, -294.516, -36.291, 0.66", "0.266261, -298.786, -36.8974, 0.66", "0.435905, -304.283, -37.7334, 0.66", "0.485298, -309.627, -38.5026, 0.66", "0.514985, -314.286, -39.1289, 0.66", "0.488446, -318.044, -39.5647, 0.66", "0.425397, -320.366, -39.7764, 0.66", "0.0664812, -326.781, -40.606, 0.66", "-0.501285, -333.932, -41.757, 0.66", "-0.695442, -336.379, -42.2846, 0.33", "-0.791893, -337.947, -42.6552, 0.33", "-0.990023, -340.802, -43.3481, 0.66", "-1.41885, -346.24, -44.7721, 0.66", "-1.91398, -352.81, -46.67, 0.66", "-2.0742, -354.893, -47.2691, 0.33", "-2.24204, -357.71, -47.8983, 0.33", "-2.32645, -360.725, -48.4838, 0.66", "-2.35037, -362.754, -48.8658, 0.66", "-2.34864, -365.304, -49.286, 0.33", "-2.35226, -367.026, -49.5603, 0.66", "-2.38302, -390.408, -53.2207, 0.66", "-2.39732, -392.264, -53.5246, 0.33", "-2.44528, -397.726, -54.5384, 0.66", "-2.47567, -399.651, -54.9077, 0.33", "-2.48326, -400.793, -55.1269, 0.66", "-2.48914, -403.516, -55.6135, 0.33", "-2.48686, -404.81, -55.7601, 0.66", "-2.82349, -409.416, -56.0901, 0.33", "-2.98549, -410.855, -56.1069, 0.33", "-3.83963, -417.009, -56.0906, 0.66", "-4.30806, -420.583, -56.0312, 0.66", "-4.66175, -423.465, -55.9513, 0.66", "-5.23894, -428.784, -55.6136, 0.66", "-5.63619, -433.506, -55.1627, 0.66", "-5.7626, -436.77, -54.8642, 0.66", "-5.75942, -440.627, -54.5102, 0.33", "-5.66142, -441.649, -54.4377, 0.66", "-5.10455, -444.571, -54.3219, 0.66", "-4.39375, -446.915, -54.222, 0.66", "-3.51342, -449.538, -54.0923, 0.33", "-3.26941, -450.215, -54.044, 0.66", "-2.16992, -453.446, -53.8287, 0.66", "-0.919694, -457.445, -53.6093, 0.66", "-0.0205818, -460.826, -53.4643, 0.66", "0.216359, -462.132, -53.3836, 0.66", "0.502551, -464.888, -53.2359, 0.33", "0.607953, -467.05, -53.1499, 0.66", "0.57447, -468.999, -53.2645, 0.33", "0.453371, -470.905, -53.5858, 0.66", "0.226224, -472.99, -54.1107, 0.33", "-0.242319, -476.899, -55.1717, 0.33", "-0.336066, -477.585, -55.3651, 0.66", "-0.759591, -481.875, -56.5136, 0.33", "-0.918478, -484.383, -57.194, 0.33", "-0.918366, -484.833, -57.2668, 0.66", "-0.779529, -486.561, -57.3378, 0.33", "-0.700952, -487.196, -57.2615, 0.66", "-0.411463, -488.919, -56.9747, 0.33", "-0.0522878, -490.801, -56.5515, 0.66", "0.911198, -495.33, -55.8916, 0.33", "1.11683, -496.331, -55.8025, 0.33", "1.18038, -496.649, -55.7924, 0.66", "1.88953, -500.281, -55.8603, 0.33", "2.29161, -502.486, -56.0303, 0.33", "2.91905, -506.304, -56.5225, 0.33", "3.01206, -507.002, -56.6219, 0.66", "3.32002, -509.734, -56.7676, 0.33", "3.32002, -509.734, -56.7676, 0.66", "3.50501, -511.748, -56.5078, 0.33", "3.50501, -511.748, -56.5078, 0.66", "3.95943, -514.479, -56.3584, 0.33", "4.54612, -517.703, -56.2757, 0.33", "4.81104, -519.051, -56.2796, 0.66", "5.39578, -522.344, -56.3565, 0.33", "6.10733, -527.443, -56.6903, 0.33", "6.22043, -528.592, -56.7978, 0.33", "6.24953, -529.225, -56.8731, 0.66", "6.30419, -530.958, -57.0763, 0.33", "6.31588, -533.295, -57.3194, 0.66", "6.04662, -538.675, -57.9507, 0.33", "5.81576, -540.287, -58.0389, 0.66", "5.30237, -543.48, -58.2208, 0.33" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-1.8451, -172.695, -35.4818, 0.66", "-0.282622, -173.428, -36.958, 0.66", "1.60815, -174.48, -38.802, 0.33", "1.93167, -174.672, -39.1193, 0.66", "5.61726, -176.906, -42.6795, 0.66", "8.78038, -178.85, -45.6312, 0.33", "9.8549, -179.493, -46.5228, 0.33", "11.3823, -180.504, -47.6847, 0.33", "11.8981, -180.855, -47.9845, 0.66", "13.0133, -181.608, -48.2304, 0.33", "14.5624, -182.647, -48.2166, 0.66", "17.5401, -184.48, -47.771, 0.33", "19.6193, -185.767, -47.3517, 0.66", "21.8594, -187.059, -46.7996, 0.33", "26.578, -189.877, -45.3488, 0.66" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-7.5982, -31.6147, -0.534503, 0.66", "-10.9109, -34.9019, -0.278418, 0.66", "-12.9451, -36.8443, -0.199277, 0.66", "-16.5484, -40.0252, -0.344236, 0.66", "-17.6887, -40.9637, -0.4237, 0.66", "-18.6384, -41.7243, -0.501329, 0.66", "-21.1795, -43.6476, -0.823729, 0.66", "-22.6687, -44.6849, -1.07134, 0.66", "-25.0061, -45.9858, -1.60528, 0.66", "-25.8478, -46.4327, -1.86879, 0.66", "-26.9156, -46.9794, -2.13367, 0.66", "-29.0915, -48.2483, -2.46939, 0.66", "-30.6036, -49.201, -2.58546, 0.66", "-31.8686, -50.1114, -2.61546, 0.66", "-34.2622, -52.0486, -2.50021, 0.66", "-38.4225, -55.7725, -2.16151, 0.66", "-40.4019, -57.6701, -1.85813, 0.66", "-41.8438, -59.1676, -1.5557, 0.66", "-43.1821, -60.7397, -1.2781, 0.66", "-43.7564, -61.5087, -1.14709, 0.66", "-44.2817, -62.3329, -0.997772, 0.66", "-45.5512, -64.7421, -0.624349, 0.66", "-46.9402, -66.9403, -0.320631, 0.66", "-48.499, -69.2273, -0.175459, 0.66", "-49.545, -70.6092, -0.285731, 0.66", "-50.8605, -72.2986, -0.575224, 0.66", "-52.906, -74.8682, -1.13164, 0.66", "-55.4149, -78.0705, -1.95627, 0.66", "-58.7522, -82.211, -3.22656, 0.66", "-61.5673, -85.6617, -4.4982, 0.66", "-62.5179, -86.9267, -4.97511, 0.66", "-64.6767, -89.9683, -6.18813, 0.66", "-65.1991, -90.8038, -6.53058, 0.66", "-67.0359, -94.2933, -7.91023, 0.66", "-68.1678, -96.7476, -8.67638, 0.66", "-69.544, -100.04, -9.43374, 0.66", "-70.7034, -102.659, -10.0494, 0.66", "-71.1466, -103.669, -10.3185, 0.66", "-72.0624, -105.447, -10.8021, 0.33", "-72.7502, -106.586, -11.1301, 0.33", "-73.7289, -107.778, -11.7885, 0.33", "-74.5486, -108.619, -12.4103, 1.33", "-75.2803, -109.347, -12.9846, 0.66", "-77.0317, -110.875, -14.365, 0.66", "-78.8935, -112.286, -15.7402, 0.66", "-82.5804, -114.794, -18.4162, 0.33", "-83.1434, -115.161, -18.8023, 0.33", "-83.9915, -115.672, -19.3408, 0.66", "-86.2333, -116.85, -20.575, 0.33", "-87.2383, -117.305, -20.9922, 0.33", "-87.7991, -117.524, -21.1219, 0.33", "-89.696, -118.213, -21.2005, 0.33", "-91.9496, -118.882, -21.4455, 0.66", "-93.137, -119.162, -21.6084, 0.33", "-93.5079, -119.234, -21.6626, 0.66", "-94.7626, -119.472, -21.8978, 0.33", "-96.1568, -119.703, -22.1805, 0.66", "-98.6814, -120.151, -22.8708, 0.33", "-99.4528, -120.338, -23.0729, 0.66", "-100.587, -120.716, -23.4738, 0.33", "-101.269, -121.017, -23.7449, 0.33", "-101.786, -121.351, -23.969, 0.66", "-103.539, -123.208, -24.751, 0.33", "-103.915, -123.936, -24.9267, 0.66", "-104.442, -125.469, -25.2219, 0.33", "-104.681, -126.739, -25.367, 0.33", "-104.763, -128.206, -25.4659, 0.33", "-104.728, -129.179, -25.4517, 0.33", "-104.651, -129.968, -25.3867, 0.66", "-104.638, -130.573, -25.3361, 0.33", "-104.721, -131.727, -25.2131, 0.66", "-104.901, -132.834, -25.1163, 0.66", "-105.385, -135.129, -24.8749, 0.33", "-105.548, -135.808, -24.7931, 0.66", "-106.141, -138.159, -24.4975, 0.33", "-106.315, -138.838, -24.4103, 0.66", "-106.669, -139.992, -24.2309, 0.33", "-106.89, -140.547, -24.1214, 0.66" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-7.5982, -31.6147, -0.534503, 0.66", "-10.645, -31.0768, -0.693814, 0.66", "-16.2498, -30.0873, -0.986882, 0.66" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "69.8315, 80.2084, -8.16918, 0.33", "75.6267, 80.9244, -4.70959, 0.33", "77.5574, 81.116, -3.84141, 0.33", "77.9638, 81.1552, -3.69585, 0.66", "80.5308, 81.401, -3.24839, 0.33", "81.9239, 81.5126, -2.97348, 0.66", "83.1152, 81.6424, -2.70145, 0.33", "83.8709, 81.7383, -2.65305, 0.33", "85.2818, 81.976, -2.40458, 0.33", "87.8175, 82.5946, -1.70312, 0.66", "91.006, 83.8891, -0.567954, 0.66", "92.4314, 84.6384, 0.0405965, 0.66", "93.5493, 85.3228, 0.580323, 0.66", "94.9122, 86.2551, 1.30081, 0.66", "96.1607, 87.2172, 2.00685, 0.66", "98.7214, 89.31, 3.492, 0.66", "100.149, 90.5438, 4.28411, 0.33", "100.753, 91.06, 4.65465, 0.66", "101.707, 91.8715, 5.31708, 0.33", "102.753, 92.7075, 5.97523, 0.66", "104.103, 93.7104, 6.84518, 0.33", "105.649, 94.7492, 7.9849, 0.66", "106.732, 95.443, 8.73579, 0.33", "107.838, 96.224, 9.44379, 0.33", "110.261, 98.1236, 11.0402, 0.66", "112.215, 99.7689, 12.0576, 0.33", "113.261, 100.761, 12.3836, 1.33", "114.386, 101.742, 12.3828, 0.33", "115.983, 103.126, 12.5711, 0.33", "116.423, 103.479, 12.6661, 0.66", "118.614, 105.12, 13.3361, 0.66", "119.61, 105.803, 13.5623, 0.33", "121.702, 107.255, 14.0295, 0.66", "125.56, 109.947, 15.3734, 0.33", "126.738, 110.72, 15.8782, 0.33", "127.466, 111.198, 16.2391, 0.33", "127.951, 111.517, 16.5589, 0.66", "129.314, 112.477, 17.5709, 0.33", "131.036, 113.924, 19.041, 0.33", "131.799, 114.628, 19.3671, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "69.8315, 80.2084, -8.16918, 0.66", "72.0456, 83.1924, -8.60287, 0.66", "73.9936, 86.2761, -9.10575, 0.66", "75.6619, 89.049, -9.5571, 0.66", "77.6941, 92.6025, -10.2885, 0.66", "79.4307, 95.8184, -10.9749, 0.66", "82.3771, 101.382, -12.1734, 0.66", "83.5438, 103.825, -12.7258, 0.66", "84.5512, 106.053, -13.1665, 0.66", "85.9037, 109.151, -13.9221, 0.33", "87.3322, 112.684, -14.8782, 0.66", "87.9076, 113.976, -15.25, 0.66", "88.4588, 115.158, -15.5917, 0.66", "89.7079, 117.696, -16.3042, 0.66", "91.1972, 120.796, -17.1578, 0.66", "92.2202, 122.809, -17.6252, 0.66", "93.7125, 125.658, -18.523, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "5.30237, -543.48, -58.2208, 0.66", "4.15866, -547.427, -58.8242, 0.66", "4.14148, -549.89, -59.453, 0.33", "4.19841, -550.495, -59.6295, 0.66", "4.50463, -553.747, -60.5787, 0.33", "4.86503, -557.575, -61.6957, 0.33", "5.13523, -560.445, -62.5333, 1.99", "6.59092, -568.16, -64.3318, 0.33", "6.73663, -568.68, -64.4781, 0.66" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "5.30237, -543.48, -58.2208, 0.33", "4.67667, -542.821, -57.9277, 0.33", "4.53478, -542.672, -57.8613, 0.66" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-16.2498, -30.0873, -0.986882, 0.66", "-20.5807, -30.9419, 0.136875, 0.66", "-21.939, -31.1497, 0.464691, 0.66", "-26.0241, -31.8163, 1.41686, 0.66", "-29.0566, -32.4089, 2.08371, 0.66", "-32.1315, -33.043, 2.71052, 0.66", "-35.1513, -33.7158, 3.2973, 0.66", "-37.2863, -34.3313, 3.79655, 0.66", "-38.8303, -34.879, 4.28005, 0.66", "-41.9354, -36.2794, 5.44785, 0.66", "-44.3593, -37.5977, 6.45166, 0.66", "-45.3329, -38.2421, 6.91263, 0.66", "-49.1495, -41.0555, 8.87305, 0.66", "-52.6704, -43.9831, 10.5594, 0.66", "-55.4729, -46.4661, 11.7383, 0.66", "-56.668, -47.6349, 12.1289, 0.66", "-58.2691, -49.2752, 12.4728, 0.66", "-59.9525, -51.0121, 12.6242, 0.66", "-63.6, -54.7419, 12.5384, 0.66", "-66.8834, -58.0979, 12.2827, 0.66", "-69.0217, -60.2194, 12.2658, 0.66", "-71.1034, -62.3738, 12.4, 0.33", "-71.7652, -63.0444, 12.4924, 0.66", "-74.7242, -66.1507, 13.2167, 0.66", "-75.958, -67.358, 13.755, 0.66", "-78.4464, -69.613, 15.1846, 0.66", "-80.1243, -71.1101, 16.3248, 0.66", "-81.0401, -71.9439, 17.0097, 0.66", "-82.6803, -73.3847, 18.2731, 0.66", "-84.7481, -75.1632, 19.8829, 0.66", "-87.5621, -77.3343, 22.0098, 0.66" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-16.2498, -30.0873, -0.986882, 0.33", "-16.9043, -30.0925, 1.03536, 0.33", "-18.0454, -29.9716, 4.23767, 0.66", "-18.557, -29.9174, 5.67346, 0.66", "-19.9197, -29.7731, 9.4973, 0.66", "-21.1997, -29.6374, 13.0895, 0.66", "-22.4174, -29.5084, 16.5066, 0.66", "-23.1358, -29.5118, 18.6256, 0.66" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "93.7125, 125.658, -18.523, 0.33", "97.0119, 127.577, -18.0663, 0.33", "98.3008, 128.346, -17.8725, 0.33", "99.6827, 129.178, -17.5452, 0.66", "101.922, 130.705, -16.8747, 0.33", "103.983, 132.177, -16.1397, 0.33", "105.067, 133.013, -15.5997, 0.33", "106.124, 133.956, -14.7752, 0.66", "107.448, 135.201, -13.5213, 0.66", "108.905, 136.645, -11.9604, 0.33", "109.475, 137.275, -11.2431, 0.66", "111.771, 139.826, -8.44572, 0.33", "112.865, 140.926, -7.27982, 0.66", "114.312, 142.153, -5.94624, 0.33", "114.719, 142.463, -5.61575, 0.66", "117.555, 144.344, -3.48242, 0.33", "120.026, 145.922, -1.67713, 0.33", "121.078, 146.488, -1.08858, 0.66", "124.582, 148.249, 0.891332, 0.33", "126.044, 148.998, 1.77598, 0.66", "132.324, 152.189, 5.59229, 0.66", "135.658, 153.861, 7.60131, 0.66", "142.307, 157.197, 11.7661, 0.66", "147.317, 159.774, 14.8776, 0.66", "150.929, 161.629, 17.0246, 1.33" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "93.7125, 125.658, -18.523, 0.33", "94.6959, 126.442, -19.8542, 0.33", "95.0326, 126.831, -20.2882, 0.66", "95.6356, 127.632, -21.0147, 0.33", "96.0325, 128.232, -21.47, 0.66", "98.4695, 132.067, -24.024, 0.33", "99.2849, 133.468, -24.8605, 0.33", "101.066, 136.527, -26.5204, 0.66", "101.76, 137.848, -27.1113, 0.33", "102.468, 139.432, -27.7058, 0.66", "102.978, 140.635, -28.0257, 0.33", "103.57, 141.986, -28.3393, 0.66", "104.176, 143.304, -28.7398, 0.33", "105.294, 145.39, -29.4596, 0.66", "105.97, 146.565, -29.8749, 0.33", "107.725, 149.416, -30.912, 0.66", "109.799, 152.574, -32.0125, 0.33", "110.366, 153.294, -32.2517, 0.33", "111.283, 154.27, -32.7012, 0.66", "112.343, 155.198, -33.2357, 0.33", "113.008, 155.684, -33.6128, 0.66", "114.259, 156.688, -34.3605, 0.33", "115.792, 157.964, -35.091, 0.33", "119.378, 161.263, -36.7915, 0.33", "119.78, 161.672, -36.9861, 0.66", "122.633, 164.943, -38.3437, 0.33", "124.961, 167.877, -39.632, 0.66", "126.454, 169.959, -40.5258, 0.33", "127.63, 171.805, -41.2256, 0.33", "128.822, 173.668, -41.7729, 0.33", "129.464, 174.642, -42.0809, 0.66", "131.969, 178.204, -43.2561, 0.33", "132.781, 179.217, -43.5594, 0.66", "133.711, 180.398, -43.6814, 0.66", "135.331, 182.357, -43.3977, 0.33", "135.606, 182.716, -43.2672, 0.66", "136.884, 184.475, -42.3669, 0.66", "139.141, 188.076, -39.8211, 0.66", "140.647, 190.731, -37.8775, 0.33", "140.788, 191.036, -37.6291, 0.66", "141.727, 193.453, -35.5757, 0.33", "141.844, 193.768, -35.3149, 0.66", "142.95, 196.707, -32.9556, 0.33", "144.259, 200.007, -30.5516, 0.66", "146.044, 204.395, -27.5634, 0.33", "146.187, 204.745, -27.3247, 0.66", "146.84, 206.352, -26.2417, 0.33", "147.567, 207.965, -25.5652, 0.33", "148.479, 209.621, -25.7158, 0.33", "149.139, 210.733, -26.3374, 0.66", "149.969, 211.829, -27.5526, 0.33", "150.585, 212.571, -28.5072, 0.66", "153.5, 215.99, -33.3911, 0.33", "154.123, 216.678, -34.3267, 0.66", "154.767, 217.308, -35.1711, 0.66", "158.73, 220.92, -40.4562, 0.33", "159.542, 221.601, -41.5251, 0.33", "159.899, 221.872, -41.9406, 0.66", "164.288, 225.01, -45.82, 0.33", "164.755, 225.325, -46.1759, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-87.5621, -77.3343, 22.0098, 0.66", "-92.4089, -81.9233, 24.0721, 0.66", "-93.8057, -83.1236, 24.6153, 0.66", "-95.2628, -84.2677, 25.1041, 0.66", "-97.2026, -85.6972, 25.6824, 0.66", "-98.9225, -86.9364, 26.1495, 0.66", "-100.254, -87.9052, 26.4934, 0.33", "-102.194, -89.2302, 26.8033, 0.66", "-104.601, -90.9233, 27.1997, 0.66", "-105.666, -91.6837, 27.3755, 0.66", "-107.387, -92.8865, 27.642, 0.66", "-108.467, -93.6688, 27.7586, 0.33", "-109.624, -94.6679, 27.8584, 0.66", "-111.698, -96.8314, 27.9715, 0.66", "-112.403, -97.6548, 28.0184, 0.66", "-112.913, -98.2466, 28.0574, 0.66", "-114.704, -100.329, 28.2133, 0.33", "-115.413, -101.187, 28.2954, 0.33", "-115.576, -101.396, 28.3173, 0.66", "-117.024, -103.236, 28.5331, 0.33", "-118.028, -104.568, 28.7442, 0.66", "-118.562, -105.189, 28.8911, 0.33", "-119.321, -105.889, 29.2241, 0.66" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-87.5621, -77.3343, 22.0098, 0.33", "-88.1198, -76.8696, 22.7133, 0.33", "-89.6015, -75.635, 24.5824, 0.66" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-23.1358, -29.5118, 18.6256, 0.66", "-23.0531, -26.7441, 17.6839, 0.66" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-23.1358, -29.5118, 18.6256, 0.66", "-23.7709, -30.3403, 23.5653, 0.66", "-24.2728, -30.7222, 25.9848, 0.66", "-25.0342, -31.21, 28.7311, 0.66", "-26.9874, -32.3467, 34.054, 0.66", "-28.9271, -33.3116, 38.1071, 0.66", "-30.276, -33.9826, 40.9257, 0.33", "-31.8146, -34.6186, 43.4681, 0.66", "-33.4042, -35.2159, 45.7299, 0.33", "-35.8628, -36.1835, 48.518, 0.66", "-39.7564, -37.3281, 50.8369, 0.33" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_0", "apic_4", "apic_1", "dend_2", "dend_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_8", "dend_3", "apic_22", "apic_7", "dend_12", "dend_9", "dend_7", "dend_4", "apic_17", "apic_8", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "apic_19", "apic_18", "apic_16", "apic_9", "dend_18", "dend_15", "apic_21", "apic_20", "apic_13", "apic_10", "dend_17", "dend_16", "apic_15", "apic_14", "apic_12", "apic_11" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_0", "apic_4", "apic_1", "dend_2", "dend_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_8", "dend_3", "apic_22", "apic_7", "dend_12", "dend_9", "dend_7", "dend_4", "apic_17", "apic_8", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "apic_19", "apic_18", "apic_16", "apic_9", "dend_18", "dend_15", "apic_21", "apic_20", "apic_13", "apic_10", "dend_17", "dend_16", "apic_15", "apic_14", "apic_12", "apic_11" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_0", "axon_0", "apic_4", "apic_1", "dend_2", "dend_1", "axon_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_8", "dend_3", "apic_22", "apic_7", "dend_12", "dend_9", "dend_7", "dend_4", "apic_17", "apic_8", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "apic_19", "apic_18", "apic_16", "apic_9", "dend_18", "dend_15", "apic_21", "apic_20", "apic_13", "apic_10", "dend_17", "dend_16", "apic_15", "apic_14", "apic_12", "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "apic_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "apic_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19", "apic_20", "apic_21", "apic_22" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "dend_0", "axon_0", "axon_0", "apic_4", "apic_1", "apic_1", "apic_1", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_8", "dend_8", "dend_3", "dend_3", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_7", "apic_7", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_8", "apic_8", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_9", "apic_9", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_BTC_4f730ef7d0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_22, id: apic_22, parent: apic_6
create apic_22
public apic_22
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_17, id: apic_17, parent: apic_7
create apic_17
public apic_17
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_16, id: apic_16, parent: apic_8
create apic_16
public apic_16
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_13, id: apic_13, parent: apic_9
create apic_13
public apic_13
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_0, axon_0, apic_4, apic_1, dend_2, dend_1, axon_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_0, axon_0, axon_0, apic_4, apic_1, apic_1, apic_1, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_3, dend_3, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_7, apic_7, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_9, apic_9, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999995461318083)
    connect dend_0(0), soma_0(0.4999995461318083)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_22(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_17(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_16(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_13(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.10599, -10.005, -3.63045, 2.05199 ) }
    soma_0 { pt3dadd( 1.00994, -8.98941, -3.26388, 3.40229 ) }
    soma_0 { pt3dadd( 0.913884, -7.97383, -2.89732, 4.43836 ) }
    soma_0 { pt3dadd( 0.817831, -6.95825, -2.53075, 5.9106 ) }
    soma_0 { pt3dadd( 0.721777, -5.94268, -2.16418, 7.4154 ) }
    soma_0 { pt3dadd( 0.625724, -4.9271, -1.79761, 8.65317 ) }
    soma_0 { pt3dadd( 0.52967, -3.91152, -1.43104, 9.36003 ) }
    soma_0 { pt3dadd( 0.433616, -2.89594, -1.06447, 10.0585 ) }
    soma_0 { pt3dadd( 0.337563, -1.88037, -0.697906, 10.4351 ) }
    soma_0 { pt3dadd( 0.241509, -0.864787, -0.331337, 10.6941 ) }
    soma_0 { pt3dadd( 0.145456, 0.150791, 0.0352311, 10.9531 ) }
    soma_0 { pt3dadd( 0.0494021, 1.16637, 0.4018, 11.2338 ) }
    soma_0 { pt3dadd( -0.0466515, 2.18195, 0.768368, 11.5118 ) }
    soma_0 { pt3dadd( -0.142705, 3.19752, 1.13494, 11.7095 ) }
    soma_0 { pt3dadd( -0.238759, 4.2131, 1.5015, 10.7536 ) }
    soma_0 { pt3dadd( -0.334812, 5.22868, 1.86807, 9.97 ) }
    soma_0 { pt3dadd( -0.430866, 6.24426, 2.23464, 9.36435 ) }
    soma_0 { pt3dadd( -0.526919, 7.25984, 2.60121, 8.19972 ) }
    soma_0 { pt3dadd( -0.622973, 8.27541, 2.96778, 6.07377 ) }
    soma_0 { pt3dadd( -0.719027, 9.29099, 3.33435, 3.38096 ) }
    soma_0 { pt3dadd( -0.81508, 10.3066, 3.70092, 2.12602 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.00111, -9.59314, -3.03985, 2.66 ) }
    apic_0 { pt3dadd( 1.28097, -14.3282, -3.42946, 2.66 ) }
    apic_0 { pt3dadd( 1.5871, -19.508, -3.85567, 2.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.84111, 9.45687, 0.260152, 2.66 ) }
    dend_0 { pt3dadd( 4.02954, 10.1268, 5.28489, 2.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.81508, 10.3066, 3.70092, 0.66 ) }
    axon_0 { pt3dadd( -2.22748, 25.24, 3.70092, 0.66 ) }
    axon_0 { pt3dadd( -3.63987, 40.1733, 3.70092, 0.66 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 29/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 1.5871, -19.508, -3.85567, 2.66 ) }
    apic_4 { pt3dadd( 1.30125, -19.7165, -3.02278, 2.66 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 31/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 1.5871, -19.508, -3.85567, 0.66 ) }
    apic_1 { pt3dadd( 4.48744, -21.9876, -4.36889, 0.66 ) }
    apic_1 { pt3dadd( 7.92559, -24.927, -4.97728, 0.66 ) }
    apic_1 { pt3dadd( 10.6551, -27.2607, -5.46029, 0.66 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 35/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.02954, 10.1268, 5.28489, 1.99 ) }
    dend_2 { pt3dadd( 6.73804, 17.4178, 2.52108, 1.99 ) }
    dend_2 { pt3dadd( 8.60872, 22.4535, 0.612194, 1.99 ) }
    dend_2 { pt3dadd( 10.2384, 26.8405, -1.05082, 1.99 ) }
    dend_2 { pt3dadd( 12.1705, 32.0414, -3.02233, 1.99 ) }
    dend_2 { pt3dadd( 14.265, 37.6794, -5.15956, 1.99 ) }
    dend_2 { pt3dadd( 15.7933, 41.7934, -6.71908, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 42/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.02954, 10.1268, 5.28489, 1.33 ) }
    dend_1 { pt3dadd( 4.8385, 19.5199, 7.27302, 1.33 ) }
    dend_1 { pt3dadd( 5.59854, 26.8298, 8.91746, 1.33 ) }
    dend_1 { pt3dadd( 6.46803, 33.1407, 10.2805, 1.33 ) }
    dend_1 { pt3dadd( 7.54269, 39.9288, 11.4884, 0.66 ) }
    dend_1 { pt3dadd( 8.27398, 43.7542, 12.0889, 0.66 ) }
    dend_1 { pt3dadd( 9.48563, 49.6131, 12.7261, 0.66 ) }
    dend_1 { pt3dadd( 10.1783, 52.6199, 12.9759, 0.66 ) }
    dend_1 { pt3dadd( 11.5139, 57.6084, 12.9907, 0.66 ) }
    dend_1 { pt3dadd( 14.5158, 67.228, 12.8314, 0.66 ) }
    dend_1 { pt3dadd( 15.7818, 71.2531, 12.7126, 0.66 ) }
    dend_1 { pt3dadd( 17.6672, 77.6926, 12.5131, 0.66 ) }
    dend_1 { pt3dadd( 18.5535, 81.0304, 12.392, 0.66 ) }
    dend_1 { pt3dadd( 19.6162, 85.0953, 12.2259, 0.66 ) }
    dend_1 { pt3dadd( 21.1606, 91.6077, 12.0529, 0.66 ) }
    dend_1 { pt3dadd( 22.0006, 94.9901, 12.0403, 0.66 ) }
    dend_1 { pt3dadd( 23.1107, 99.8778, 12.1627, 0.66 ) }
    dend_1 { pt3dadd( 24.0435, 104.659, 12.4885, 0.66 ) }
    dend_1 { pt3dadd( 24.6735, 108.262, 12.7404, 0.66 ) }
    dend_1 { pt3dadd( 25.3849, 111.842, 13.0298, 0.66 ) }
    dend_1 { pt3dadd( 26.7593, 118.436, 13.7101, 0.66 ) }
    dend_1 { pt3dadd( 27.9011, 123.206, 14.4272, 0.66 ) }
    dend_1 { pt3dadd( 28.9805, 127.573, 15.4129, 0.66 ) }
    dend_1 { pt3dadd( 29.8734, 130.443, 16.2347, 0.66 ) }
    dend_1 { pt3dadd( 30.7335, 133.113, 17.0688, 0.66 ) }
    dend_1 { pt3dadd( 31.9594, 136.382, 18.1675, 0.66 ) }
    dend_1 { pt3dadd( 33.2864, 139.616, 19.339, 0.66 ) }
    dend_1 { pt3dadd( 35.4687, 144.005, 20.8893, 0.66 ) }
    dend_1 { pt3dadd( 38.2539, 149.161, 22.6735, 0.66 ) }
    dend_1 { pt3dadd( 40.1537, 152.833, 23.8914, 0.66 ) }
    dend_1 { pt3dadd( 41.1926, 154.943, 24.4995, 0.33 ) }
    dend_1 { pt3dadd( 41.8796, 156.286, 24.8172, 0.66 ) }
    dend_1 { pt3dadd( 43.653, 159.871, 25.5693, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 75/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.63987, 40.1733, 3.70092, 0.33 ) }
    axon_1 { pt3dadd( -5.05227, 55.1067, 3.70092, 0.33 ) }
    axon_1 { pt3dadd( -6.46467, 70.04, 3.70092, 0.33 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 78/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 1.30125, -19.7165, -3.02278, 2.0 ) }
    apic_6 { pt3dadd( 1.17658, -20.9987, -6.37225, 2.0 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 80/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 1.30125, -19.7165, -3.02278, 0.66 ) }
    apic_5 { pt3dadd( -0.471344, -23.4607, -1.00402, 0.66 ) }
    apic_5 { pt3dadd( -1.59455, -25.9463, 0.224325, 0.66 ) }
    apic_5 { pt3dadd( -2.32202, -27.7139, 0.910645, 0.66 ) }
    apic_5 { pt3dadd( -4.91332, -33.0955, 3.41069, 0.66 ) }
    apic_5 { pt3dadd( -5.71904, -34.717, 4.31468, 0.66 ) }
    apic_5 { pt3dadd( -6.6905, -36.6522, 5.46656, 0.33 ) }
    apic_5 { pt3dadd( -7.11599, -37.4521, 5.96661, 0.66 ) }
    apic_5 { pt3dadd( -8.38868, -39.7995, 7.46228, 0.66 ) }
    apic_5 { pt3dadd( -11.2456, -45.8882, 11.3289, 0.66 ) }
    apic_5 { pt3dadd( -12.4952, -49.0255, 12.9676, 0.33 ) }
    apic_5 { pt3dadd( -12.7267, -49.6254, 13.2355, 0.66 ) }
    apic_5 { pt3dadd( -13.6247, -51.9052, 14.2171, 0.66 ) }
    apic_5 { pt3dadd( -14.3355, -53.8853, 15.0296, 0.33 ) }
    apic_5 { pt3dadd( -14.6374, -54.7851, 15.3667, 0.66 ) }
    apic_5 { pt3dadd( -15.5576, -58.4747, 15.9937, 0.33 ) }
    apic_5 { pt3dadd( -16.454, -61.8209, 16.3572, 0.66 ) }
    apic_5 { pt3dadd( -17.4081, -65.2583, 16.7909, 0.33 ) }
    apic_5 { pt3dadd( -17.6082, -65.9207, 16.8934, 0.66 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 99/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 10.6551, -27.2607, -5.46029, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_3 { pt3dadd( 12.7713, -27.4397, -9.58165, 0.66 ) }
    apic_3 { pt3dadd( 14.8477, -27.7471, -13.7941, 0.66 ) }
    apic_3 { pt3dadd( 19.3665, -28.6596, -22.7091, 0.66 ) }
    apic_3 { pt3dadd( 22.3181, -29.0436, -27.7837, 0.66 ) }
    apic_3 { pt3dadd( 25.532, -29.4019, -32.7792, 0.66 ) }
    apic_3 { pt3dadd( 28.3494, -29.6641, -36.9342, 0.66 ) }
    apic_3 { pt3dadd( 31.0359, -30.0858, -40.4276, 0.66 ) }
    apic_3 { pt3dadd( 34.7387, -30.7888, -44.8749, 0.66 ) }
    apic_3 { pt3dadd( 39.8514, -31.5799, -50.273, 0.66 ) }
    apic_3 { pt3dadd( 42.1891, -31.9458, -52.831, 0.66 ) }
    apic_3 { pt3dadd( 43.9498, -32.2138, -54.8954, 0.33 ) }
    apic_3 { pt3dadd( 48.2111, -32.7417, -59.5817, 0.66 ) }
    apic_3 { pt3dadd( 51.4863, -33.1265, -63.0354, 0.66 ) }
    apic_3 { pt3dadd( 53.1631, -33.3383, -64.8569, 0.66 ) }
    apic_3 { pt3dadd( 55.0086, -33.5805, -66.9987, 0.33 ) }
    apic_3 { pt3dadd( 56.7616, -33.6822, -69.226, 0.66 ) }
    apic_3 { pt3dadd( 58.7616, -33.7205, -72.1885, 0.66 ) }
    apic_3 { pt3dadd( 60.4518, -33.6982, -75.1942, 0.33 ) }
    apic_3 { pt3dadd( 61.3647, -33.6669, -76.7369, 0.66 ) }
    apic_3 { pt3dadd( 62.8287, -33.665, -79.3976, 0.33 ) }
    apic_3 { pt3dadd( 65.0495, -33.6904, -83.9085, 0.66 ) }
    apic_3 { pt3dadd( 67.4681, -33.8971, -88.8141, 0.66 ) }
    apic_3 { pt3dadd( 68.3843, -34.0722, -90.773, 0.33 ) }
    apic_3 { pt3dadd( 70.504, -34.5883, -95.3774, 0.66 ) }
    apic_3 { pt3dadd( 73.0145, -35.3122, -100.808, 0.33 ) }
    apic_3 { pt3dadd( 74.2065, -35.8391, -103.457, 1.33 ) }
    apic_3 { pt3dadd( 75.539, -36.5483, -106.177, 0.66 ) }
    apic_3 { pt3dadd( 76.6263, -37.2231, -108.123, 0.33 ) }
    apic_3 { pt3dadd( 77.2753, -37.7122, -109.253, 0.66 ) }
    apic_3 { pt3dadd( 78.0703, -38.5899, -110.798, 0.33 ) }
    apic_3 { pt3dadd( 79.9489, -41.0766, -114.307, 1.33 ) }
    apic_3 { pt3dadd( 80.6171, -42.0053, -115.612, 0.66 ) }
    apic_3 { pt3dadd( 82.6093, -44.7455, -119.592, 0.33 ) }
    apic_3 { pt3dadd( 82.8761, -45.1622, -120.319, 0.33 ) }
    apic_3 { pt3dadd( 84.0246, -47.0474, -123.655, 0.66 ) }
    apic_3 { pt3dadd( 85.0828, -48.9011, -126.896, 0.33 ) }
    apic_3 { pt3dadd( 85.8295, -50.1143, -129.175, 1.33 ) }
    apic_3 { pt3dadd( 86.664, -51.7222, -132.63, 0.33 ) }
    apic_3 { pt3dadd( 87.6011, -54.4885, -140.009, 0.66 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 39/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 10.6551, -27.2607, -5.46029, 0.66 ) }
    apic_2 { pt3dadd( 13.4244, -28.8452, -3.85157, 0.66 ) }
    apic_2 { pt3dadd( 15.4454, -30.008, -2.18512, 0.66 ) }
    apic_2 { pt3dadd( 16.1741, -30.436, -1.56447, 0.66 ) }
    apic_2 { pt3dadd( 18.785, -31.9767, 0.656694, 0.66 ) }
    apic_2 { pt3dadd( 22.5486, -34.3071, 4.20561, 0.66 ) }
    apic_2 { pt3dadd( 23.0947, -34.6476, 4.74672, 1.33 ) }
    apic_2 { pt3dadd( 26.1123, -36.6543, 8.27721, 0.33 ) }
    apic_2 { pt3dadd( 27.1724, -37.1881, 9.43507, 0.33 ) }
    apic_2 { pt3dadd( 27.4181, -37.2988, 9.697, 0.66 ) }
    apic_2 { pt3dadd( 29.3939, -38.0298, 11.5968, 0.33 ) }
    apic_2 { pt3dadd( 31.3087, -38.5709, 13.2883, 0.66 ) }
    apic_2 { pt3dadd( 32.7653, -38.8657, 14.412, 0.66 ) }
    apic_2 { pt3dadd( 40.0076, -39.5915, 18.7839, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 15.7933, 41.7934, -6.71908, 1.33 ) }
    dend_8 { pt3dadd( 20.3354, 44.4915, -12.8606, 1.33 ) }
    dend_8 { pt3dadd( 22.957, 46.0487, -16.4053, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 56/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 15.7933, 41.7934, -6.71908, 1.33 ) }
    dend_3 { pt3dadd( 16.0914, 44.1469, -14.568, 1.33 ) }
    dend_3 { pt3dadd( 16.2753, 45.598, -19.4076, 1.33 ) }
    // Section: apic_22, id: apic_22, parent: apic_6 (entry count 59/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 1.17658, -20.9987, -6.37225, 0.66 ) }
    apic_22 { pt3dadd( 1.27122, -20.4777, -7.96245, 0.66 ) }
    apic_22 { pt3dadd( 1.29516, -20.0857, -9.13181, 0.66 ) }
    apic_22 { pt3dadd( 1.11849, -18.4328, -15.2594, 0.66 ) }
    apic_22 { pt3dadd( 0.352771, -17.5181, -20.3518, 0.66 ) }
    apic_22 { pt3dadd( -0.0991505, -17.3039, -22.6756, 0.66 ) }
    apic_22 { pt3dadd( -0.628583, -17.1181, -25.2585, 0.66 ) }
    apic_22 { pt3dadd( -1.6703, -17.0255, -30.2162, 0.66 ) }
    apic_22 { pt3dadd( -2.51315, -17.186, -33.6402, 0.66 ) }
    apic_22 { pt3dadd( -4.99296, -17.9813, -41.797, 0.66 ) }
    apic_22 { pt3dadd( -6.92798, -18.6187, -47.7332, 0.66 ) }
    apic_22 { pt3dadd( -7.4467, -18.8615, -49.2984, 0.66 ) }
    apic_22 { pt3dadd( -8.14428, -19.3128, -51.422, 0.66 ) }
    apic_22 { pt3dadd( -10.1243, -20.7563, -57.8161, 0.66 ) }
    apic_22 { pt3dadd( -12.0723, -22.4367, -65.6663, 0.66 ) }
    apic_22 { pt3dadd( -12.4653, -22.9133, -68.6113, 0.66 ) }
    apic_22 { pt3dadd( -12.8814, -23.2293, -71.9873, 0.66 ) }
    apic_22 { pt3dadd( -13.1213, -23.4117, -74.2417, 0.66 ) }
    apic_22 { pt3dadd( -13.8859, -24.0974, -83.5989, 0.66 ) }
    apic_22 { pt3dadd( -13.9662, -24.2115, -85.0721, 0.66 ) }
    apic_22 { pt3dadd( -14.5526, -25.109, -95.8071, 0.66 ) }
    apic_22 { pt3dadd( -14.83, -25.6718, -103.033, 0.33 ) }
    apic_22 { pt3dadd( -14.8444, -25.7108, -103.773, 1.33 ) }
    apic_22 { pt3dadd( -14.8067, -25.7858, -105.207, 0.66 ) }
    apic_22 { pt3dadd( -14.3882, -26.1649, -110.588, 0.33 ) }
    apic_22 { pt3dadd( -14.0204, -26.3539, -113.451, 1.33 ) }
    apic_22 { pt3dadd( -13.5476, -26.5538, -115.169, 0.33 ) }
    apic_22 { pt3dadd( -13.2108, -26.6659, -116.08, 0.66 ) }
    apic_22 { pt3dadd( -12.0596, -26.9738, -119.986, 0.33 ) }
    apic_22 { pt3dadd( -11.8521, -27.0466, -120.951, 1.33 ) }
    apic_22 { pt3dadd( -11.5822, -27.1251, -122.15, 0.66 ) }
    apic_22 { pt3dadd( -11.1109, -27.2225, -124.33, 0.33 ) }
    apic_22 { pt3dadd( -10.6311, -27.3151, -126.787, 1.33 ) }
    apic_22 { pt3dadd( -9.37604, -27.4443, -134.603, 0.33 ) }
    apic_22 { pt3dadd( -8.88139, -27.498, -139.621, 0.33 ) }
    apic_22 { pt3dadd( -8.68232, -27.5579, -142.013, 0.33 ) }
    apic_22 { pt3dadd( -8.60832, -27.5898, -142.994, 0.33 ) }
    apic_22 { pt3dadd( -8.50541, -27.5888, -144.096, 0.33 ) }
    apic_22 { pt3dadd( -7.81182, -27.4453, -148.721, 0.66 ) }
    apic_22 { pt3dadd( -6.37346, -26.8946, -155.763, 0.33 ) }
    apic_22 { pt3dadd( -5.85072, -26.5975, -158.16, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_22 { pt3dadd( -5.38427, -26.2459, -160.677, 0.66 ) }
    apic_22 { pt3dadd( -4.34947, -25.3708, -166.266, 0.33 ) }
    apic_22 { pt3dadd( -3.96241, -24.9985, -168.194, 0.66 ) }
    apic_22 { pt3dadd( -3.55112, -24.6182, -169.647, 0.33 ) }
    apic_22 { pt3dadd( -3.44478, -24.4931, -169.95, 0.66 ) }
    apic_22 { pt3dadd( -2.24042, -22.2047, -175.178, 0.33 ) }
    apic_22 { pt3dadd( -2.10943, -21.8221, -176.14, 0.66 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 7/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 1.17658, -20.9987, -6.37225, 1.33 ) }
    apic_7 { pt3dadd( 0.636498, -23.1838, -8.28584, 1.33 ) }
    apic_7 { pt3dadd( -0.225437, -26.6711, -11.3398, 1.99 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 10/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 22.957, 46.0487, -16.4053, 1.33 ) }
    dend_12 { pt3dadd( 25.7385, 47.5373, -13.5565, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 12/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 22.957, 46.0487, -16.4053, 0.66 ) }
    dend_9 { pt3dadd( 23.0006, 47.3054, -17.1482, 0.66 ) }
    dend_9 { pt3dadd( 23.096, 48.4037, -17.7683, 0.66 ) }
    dend_9 { pt3dadd( 23.231, 49.7583, -18.3632, 0.66 ) }
    dend_9 { pt3dadd( 23.4898, 51.7886, -19.1112, 0.66 ) }
    dend_9 { pt3dadd( 24.0505, 55.5643, -20.2828, 0.66 ) }
    dend_9 { pt3dadd( 24.3173, 57.0226, -20.6715, 0.66 ) }
    dend_9 { pt3dadd( 24.6326, 58.4358, -20.955, 0.66 ) }
    dend_9 { pt3dadd( 25.2259, 60.6677, -21.3806, 0.66 ) }
    dend_9 { pt3dadd( 25.4888, 61.5616, -21.516, 0.66 ) }
    dend_9 { pt3dadd( 25.9889, 63.1716, -21.6835, 0.66 ) }
    dend_9 { pt3dadd( 26.3421, 64.537, -21.7586, 0.66 ) }
    dend_9 { pt3dadd( 27.1545, 68.0029, -22.2669, 0.66 ) }
    dend_9 { pt3dadd( 27.757, 70.854, -22.8946, 0.66 ) }
    dend_9 { pt3dadd( 28.0883, 72.7543, -23.4479, 0.66 ) }
    dend_9 { pt3dadd( 28.3613, 74.5822, -24.0224, 0.66 ) }
    dend_9 { pt3dadd( 28.6253, 76.4409, -24.6991, 0.66 ) }
    dend_9 { pt3dadd( 29.048, 79.8569, -25.9976, 0.66 ) }
    dend_9 { pt3dadd( 29.278, 81.6119, -26.6735, 0.66 ) }
    dend_9 { pt3dadd( 29.6464, 84.4852, -27.7115, 0.66 ) }
    dend_9 { pt3dadd( 29.8588, 85.9165, -28.227, 0.33 ) }
    dend_9 { pt3dadd( 30.2121, 88.0807, -28.9305, 0.66 ) }
    dend_9 { pt3dadd( 30.5049, 89.5243, -29.3062, 0.66 ) }
    dend_9 { pt3dadd( 30.8303, 90.9626, -29.5277, 0.66 ) }
    dend_9 { pt3dadd( 31.113, 92.2021, -29.7329, 0.33 ) }
    dend_9 { pt3dadd( 31.4012, 93.3804, -29.9107, 0.66 ) }
    dend_9 { pt3dadd( 31.6472, 94.4754, -30.0712, 0.33 ) }
    dend_9 { pt3dadd( 31.852, 95.3848, -30.1858, 0.66 ) }
    dend_9 { pt3dadd( 32.2724, 97.2732, -30.5962, 0.33 ) }
    dend_9 { pt3dadd( 32.5362, 98.664, -30.9615, 0.66 ) }
    dend_9 { pt3dadd( 32.8509, 100.251, -31.4215, 0.66 ) }
    dend_9 { pt3dadd( 33.045, 101.034, -31.6633, 0.33 ) }
    dend_9 { pt3dadd( 33.2578, 101.818, -31.8852, 0.33 ) }
    dend_9 { pt3dadd( 33.7068, 103.385, -32.2744, 0.66 ) }
    dend_9 { pt3dadd( 34.004, 104.463, -32.472, 0.33 ) }
    dend_9 { pt3dadd( 34.2621, 105.178, -32.5451, 0.33 ) }
    dend_9 { pt3dadd( 34.6694, 106.435, -32.6598, 0.66 ) }
    dend_9 { pt3dadd( 35.2114, 108.288, -32.8919, 0.66 ) }
    dend_9 { pt3dadd( 35.3562, 108.926, -33.0046, 0.66 ) }
    dend_9 { pt3dadd( 35.6905, 111.196, -33.3987, 0.66 ) }
    dend_9 { pt3dadd( 35.7329, 112.67, -33.6163, 0.66 ) }
    dend_9 { pt3dadd( 35.4934, 115.489, -34.0854, 0.66 ) }
    dend_9 { pt3dadd( 35.0819, 117.763, -34.4973, 0.66 ) }
    dend_9 { pt3dadd( 34.6171, 119.778, -34.8266, 0.33 ) }
    dend_9 { pt3dadd( 34.131, 121.555, -35.0688, 0.66 ) }
    dend_9 { pt3dadd( 33.2639, 124.317, -35.3482, 0.33 ) }
    dend_9 { pt3dadd( 32.7535, 125.971, -35.4098, 0.66 ) }
    dend_9 { pt3dadd( 32.3202, 127.712, -35.2983, 0.66 ) }
    dend_9 { pt3dadd( 31.9272, 129.755, -35.0145, 0.33 ) }
    dend_9 { pt3dadd( 31.8524, 130.64, -34.877, 0.66 ) }
    dend_9 { pt3dadd( 31.8432, 131.28, -34.7118, 0.66 ) }
    dend_9 { pt3dadd( 31.9725, 133.184, -34.001, 0.33 ) }
    dend_9 { pt3dadd( 32.0712, 134.051, -33.5663, 0.66 ) }
    dend_9 { pt3dadd( 32.2563, 135.163, -32.9113, 0.33 ) }
    dend_9 { pt3dadd( 32.4594, 136.084, -32.3335, 0.66 ) }
    dend_9 { pt3dadd( 33.4464, 139.796, -29.9587, 0.66 ) }
    dend_9 { pt3dadd( 33.7927, 140.901, -29.2663, 0.33 ) }
    dend_9 { pt3dadd( 34.1773, 141.925, -28.631, 0.33 ) }
    dend_9 { pt3dadd( 34.3964, 142.531, -28.2439, 0.66 ) }
    dend_9 { pt3dadd( 34.7119, 143.4, -27.688, 0.33 ) }
    dend_9 { pt3dadd( 35.0075, 144.284, -27.1978, 0.33 ) }
    dend_9 { pt3dadd( 35.2978, 145.272, -26.7277, 0.33 ) }
    dend_9 { pt3dadd( 35.3317, 145.448, -26.6162, 0.66 ) }
    dend_9 { pt3dadd( 35.6138, 147.541, -25.1458, 0.33 ) }
    dend_9 { pt3dadd( 35.66, 148.159, -24.7068, 0.33 ) }
    dend_9 { pt3dadd( 35.6828, 148.503, -24.468, 0.66 ) }
    dend_9 { pt3dadd( 35.9406, 150.695, -23.0459, 0.33 ) }
    dend_9 { pt3dadd( 35.9684, 150.883, -22.9425, 0.66 ) }
    dend_9 { pt3dadd( 36.3438, 152.445, -22.3011, 0.33 ) }
    dend_9 { pt3dadd( 36.505, 153.001, -22.1589, 0.66 ) }
    dend_9 { pt3dadd( 37.0726, 155.153, -21.5515, 0.33 ) }
    dend_9 { pt3dadd( 37.4296, 156.305, -21.3451, 0.33 ) }
    dend_9 { pt3dadd( 37.7708, 157.347, -21.2508, 0.33 ) }
    dend_9 { pt3dadd( 38.5652, 160.078, -21.0, 0.66 ) }
    dend_9 { pt3dadd( 39.3202, 162.767, -20.7538, 0.66 ) }
    dend_9 { pt3dadd( 40.2219, 166.312, -20.455, 0.66 ) }
    dend_9 { pt3dadd( 41.1773, 170.533, -20.299, 0.66 ) }
    dend_9 { pt3dadd( 41.5785, 172.488, -20.3438, 0.33 ) }
    dend_9 { pt3dadd( 42.4185, 176.919, -20.5101, 0.66 ) }
    dend_9 { pt3dadd( 42.5563, 177.752, -20.576, 0.66 ) }
    dend_9 { pt3dadd( 42.7482, 178.922, -20.7265, 0.66 ) }
    dend_9 { pt3dadd( 43.1239, 181.432, -21.2727, 0.66 ) }
    dend_9 { pt3dadd( 43.2502, 183.859, -21.5145, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 95/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 16.2753, 45.598, -19.4076, 0.66 ) }
    dend_7 { pt3dadd( 16.5951, 47.3298, -21.1434, 0.66 ) }
    dend_7 { pt3dadd( 16.8388, 48.9456, -22.9786, 0.66 ) }
    dend_7 { pt3dadd( 17.0419, 51.6419, -26.177, 0.66 ) }
    dend_7 { pt3dadd( 17.1414, 56.5175, -32.4669, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_7 { pt3dadd( 17.0766, 58.1604, -34.6374, 0.66 ) }
    dend_7 { pt3dadd( 16.8448, 61.6195, -39.2294, 0.66 ) }
    dend_7 { pt3dadd( 16.4542, 64.1478, -42.8281, 0.66 ) }
    dend_7 { pt3dadd( 16.2548, 65.2956, -44.7041, 0.66 ) }
    dend_7 { pt3dadd( 15.6095, 68.8789, -51.2895, 0.66 ) }
    dend_7 { pt3dadd( 15.5036, 69.7517, -52.8012, 0.66 ) }
    dend_7 { pt3dadd( 15.3552, 70.9584, -54.8359, 0.66 ) }
    dend_7 { pt3dadd( 15.3223, 71.7776, -56.1559, 0.33 ) }
    dend_7 { pt3dadd( 15.5636, 76.3911, -63.2007, 0.66 ) }
    dend_7 { pt3dadd( 15.7371, 77.3672, -64.6028, 1.33 ) }
    dend_7 { pt3dadd( 16.1306, 79.1075, -66.8766, 0.33 ) }
    dend_7 { pt3dadd( 16.3067, 79.8829, -67.8528, 0.66 ) }
    dend_7 { pt3dadd( 16.9024, 82.9757, -71.4186, 0.33 ) }
    dend_7 { pt3dadd( 17.2806, 84.948, -73.5192, 1.33 ) }
    dend_7 { pt3dadd( 17.7754, 89.1795, -77.6647, 0.66 ) }
    dend_7 { pt3dadd( 17.8303, 90.3643, -78.9661, 0.66 ) }
    dend_7 { pt3dadd( 17.7881, 92.5195, -81.5603, 0.66 ) }
    dend_7 { pt3dadd( 17.6687, 93.6411, -83.0672, 0.66 ) }
    dend_7 { pt3dadd( 17.2135, 96.254, -86.8075, 0.66 ) }
    dend_7 { pt3dadd( 16.6786, 98.5251, -90.1951, 0.66 ) }
    dend_7 { pt3dadd( 15.8143, 101.708, -94.7141, 0.33 ) }
    dend_7 { pt3dadd( 15.6347, 102.442, -95.7431, 0.66 ) }
    dend_7 { pt3dadd( 14.7779, 106.246, -101.059, 0.33 ) }
    dend_7 { pt3dadd( 14.605, 107.119, -102.244, 0.33 ) }
    dend_7 { pt3dadd( 14.2787, 108.705, -104.098, 1.33 ) }
    dend_7 { pt3dadd( 13.9679, 110.372, -105.959, 0.33 ) }
    dend_7 { pt3dadd( 13.8136, 111.314, -106.961, 0.66 ) }
    dend_7 { pt3dadd( 12.9406, 116.415, -112.326, 0.33 ) }
    dend_7 { pt3dadd( 12.7087, 117.686, -113.504, 0.33 ) }
    dend_7 { pt3dadd( 12.2629, 119.94, -115.571, 0.66 ) }
    dend_7 { pt3dadd( 11.4787, 125.906, -121.785, 0.33 ) }
    dend_7 { pt3dadd( 11.3904, 127.077, -123.078, 0.33 ) }
    dend_7 { pt3dadd( 11.3071, 129.507, -125.878, 0.66 ) }
    dend_7 { pt3dadd( 11.3111, 132.049, -128.876, 0.33 ) }
    dend_7 { pt3dadd( 11.3873, 134.287, -131.802, 0.66 ) }
    dend_7 { pt3dadd( 11.8252, 139.916, -139.713, 0.33 ) }
    dend_7 { pt3dadd( 11.9362, 141.613, -142.177, 0.66 ) }
    dend_7 { pt3dadd( 11.941, 144.161, -145.981, 0.33 ) }
    dend_7 { pt3dadd( 11.9286, 144.909, -147.167, 0.66 ) }
    dend_7 { pt3dadd( 11.7924, 147.566, -151.259, 0.66 ) }
    dend_7 { pt3dadd( 11.578, 150.174, -154.784, 0.33 ) }
    dend_7 { pt3dadd( 11.3131, 152.748, -158.093, 0.66 ) }
    dend_7 { pt3dadd( 11.079, 155.129, -161.268, 0.66 ) }
    dend_7 { pt3dadd( 10.6934, 159.312, -167.332, 0.66 ) }
    dend_7 { pt3dadd( 10.4643, 161.459, -170.585, 0.33 ) }
    dend_7 { pt3dadd( 10.173, 163.82, -174.378, 0.66 ) }
    dend_7 { pt3dadd( 9.40397, 171.461, -186.526, 0.66 ) }
    dend_7 { pt3dadd( 9.25534, 173.209, -189.461, 0.66 ) }
    dend_7 { pt3dadd( 8.81494, 176.987, -195.947, 0.33 ) }
    dend_7 { pt3dadd( 8.68602, 177.981, -197.711, 0.66 ) }
    dend_7 { pt3dadd( 8.19806, 181.354, -203.854, 0.33 ) }
    dend_7 { pt3dadd( 7.72653, 183.922, -208.325, 0.66 ) }
    dend_7 { pt3dadd( 6.36154, 189.363, -217.923, 0.66 ) }
    dend_7 { pt3dadd( 5.90017, 191.032, -221.0, 1.99 ) }
    dend_7 { pt3dadd( 4.2524, 196.294, -231.081, 0.66 ) }
    dend_7 { pt3dadd( 3.81751, 197.645, -233.712, 0.66 ) }
    dend_7 { pt3dadd( 3.40848, 198.816, -235.977, 0.66 ) }
    dend_7 { pt3dadd( 0.968421, 205.863, -250.257, 0.66 ) }
    dend_7 { pt3dadd( 0.217121, 208.304, -255.041, 0.33 ) }
    dend_7 { pt3dadd( -0.301183, 210.091, -258.819, 0.66 ) }
    dend_7 { pt3dadd( -0.804035, 211.526, -261.819, 0.66 ) }
    dend_7 { pt3dadd( -1.44613, 213.284, -265.571, 0.66 ) }
    dend_7 { pt3dadd( -3.12311, 217.908, -275.406, 0.66 ) }
    dend_7 { pt3dadd( -4.74345, 222.284, -284.377, 0.66 ) }
    dend_7 { pt3dadd( -8.33588, 231.222, -303.345, 0.33 ) }
    dend_7 { pt3dadd( -9.32328, 233.513, -308.444, 0.33 ) }
    dend_7 { pt3dadd( -11.033, 237.024, -316.868, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 67/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 16.2753, 45.598, -19.4076, 0.66 ) }
    dend_4 { pt3dadd( 14.9073, 49.6527, -23.4552, 0.66 ) }
    dend_4 { pt3dadd( 13.7828, 52.1191, -26.2407, 0.66 ) }
    dend_4 { pt3dadd( 12.1749, 55.649, -30.1352, 0.66 ) }
    dend_4 { pt3dadd( 11.0036, 58.0953, -32.6725, 0.66 ) }
    dend_4 { pt3dadd( 10.4611, 59.2598, -33.8751, 0.66 ) }
    dend_4 { pt3dadd( 8.18634, 63.6099, -38.556, 0.66 ) }
    dend_4 { pt3dadd( 5.46035, 67.8196, -43.66, 0.66 ) }
    dend_4 { pt3dadd( 4.59554, 69.0293, -45.209, 0.66 ) }
    dend_4 { pt3dadd( 2.0087, 73.0056, -49.7688, 0.66 ) }
    dend_4 { pt3dadd( -0.307703, 76.3823, -53.2684, 0.66 ) }
    dend_4 { pt3dadd( -3.41407, 81.0525, -57.3433, 0.66 ) }
    dend_4 { pt3dadd( -5.5334, 84.5057, -59.7104, 0.66 ) }
    dend_4 { pt3dadd( -6.83696, 86.6909, -60.782, 0.66 ) }
    dend_4 { pt3dadd( -10.8849, 93.4685, -63.0594, 0.66 ) }
    dend_4 { pt3dadd( -12.9189, 97.3463, -63.4899, 0.66 ) }
    dend_4 { pt3dadd( -15.7072, 102.942, -63.4738, 0.66 ) }
    dend_4 { pt3dadd( -17.1126, 106.102, -63.1439, 0.66 ) }
    dend_4 { pt3dadd( -20.4134, 113.883, -61.7726, 0.66 ) }
    dend_4 { pt3dadd( -21.6467, 116.745, -61.1177, 0.66 ) }
    dend_4 { pt3dadd( -24.5143, 123.246, -58.9598, 0.66 ) }
    // Section: apic_17, id: apic_17, parent: apic_7 (entry count 88/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( -0.225437, -26.6711, -11.3398, 1.33 ) }
    apic_17 { pt3dadd( -1.50644, -32.3991, -10.6268, 1.33 ) }
    apic_17 { pt3dadd( -2.26189, -34.9663, -11.9948, 1.33 ) }
    apic_17 { pt3dadd( -2.29187, -35.1294, -12.093, 1.33 ) }
    apic_17 { pt3dadd( -2.65422, -37.3538, -13.3618, 0.66 ) }
    apic_17 { pt3dadd( -2.87579, -39.1286, -14.2986, 0.66 ) }
    apic_17 { pt3dadd( -3.19284, -41.4497, -15.3696, 0.66 ) }
    apic_17 { pt3dadd( -4.46411, -52.7573, -20.3675, 0.66 ) }
    apic_17 { pt3dadd( -4.8837, -56.9425, -21.9108, 0.66 ) }
    apic_17 { pt3dadd( -4.99249, -59.8411, -22.7149, 0.66 ) }
    apic_17 { pt3dadd( -5.04036, -62.6492, -23.2927, 0.66 ) }
    apic_17 { pt3dadd( -5.11178, -67.7234, -24.2134, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_17 { pt3dadd( -5.12179, -73.3804, -25.031, 0.66 ) }
    apic_17 { pt3dadd( -5.16797, -76.6446, -25.2528, 0.66 ) }
    apic_17 { pt3dadd( -5.27625, -84.5561, -25.9035, 0.66 ) }
    apic_17 { pt3dadd( -5.35014, -88.7171, -26.2187, 0.66 ) }
    apic_17 { pt3dadd( -5.46987, -97.1875, -26.908, 0.66 ) }
    apic_17 { pt3dadd( -5.41178, -100.772, -27.2234, 0.66 ) }
    apic_17 { pt3dadd( -5.20098, -107.413, -27.9913, 0.66 ) }
    apic_17 { pt3dadd( -5.00639, -112.161, -28.6194, 0.66 ) }
    apic_17 { pt3dadd( -4.7763, -117.529, -29.5022, 0.66 ) }
    apic_17 { pt3dadd( -4.36617, -123.475, -30.4412, 0.66 ) }
    apic_17 { pt3dadd( -4.08826, -127.036, -30.9178, 0.66 ) }
    apic_17 { pt3dadd( -3.58235, -134.818, -31.972, 0.66 ) }
    apic_17 { pt3dadd( -3.29257, -138.982, -32.4998, 0.66 ) }
    apic_17 { pt3dadd( -2.93697, -144.487, -33.2332, 0.66 ) }
    apic_17 { pt3dadd( -2.40716, -151.944, -34.2653, 0.66 ) }
    apic_17 { pt3dadd( -2.25991, -155.238, -34.6316, 0.66 ) }
    apic_17 { pt3dadd( -2.1041, -162.563, -35.243, 0.66 ) }
    apic_17 { pt3dadd( -1.8451, -172.695, -35.4818, 0.66 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 18/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -0.225437, -26.6711, -11.3398, 1.33 ) }
    apic_8 { pt3dadd( -2.27555, -28.0458, -8.33522, 1.33 ) }
    apic_8 { pt3dadd( -7.5982, -31.6147, -0.534503, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 21/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 25.7385, 47.5373, -13.5565, 1.33 ) }
    dend_14 { pt3dadd( 28.0851, 49.9772, -15.164, 1.33 ) }
    dend_14 { pt3dadd( 28.7618, 50.6465, -15.523, 1.33 ) }
    dend_14 { pt3dadd( 30.0221, 51.8496, -15.9498, 1.33 ) }
    dend_14 { pt3dadd( 31.6349, 53.4104, -16.3189, 1.33 ) }
    dend_14 { pt3dadd( 34.0351, 55.6887, -16.6457, 1.33 ) }
    dend_14 { pt3dadd( 37.9373, 59.0858, -16.7012, 1.33 ) }
    dend_14 { pt3dadd( 40.2075, 60.9692, -16.3382, 1.33 ) }
    dend_14 { pt3dadd( 42.5456, 62.9124, -15.6709, 0.66 ) }
    dend_14 { pt3dadd( 43.8553, 63.8821, -15.2269, 0.66 ) }
    dend_14 { pt3dadd( 47.1447, 66.1162, -14.2784, 0.66 ) }
    dend_14 { pt3dadd( 51.2256, 68.7833, -12.9539, 0.66 ) }
    dend_14 { pt3dadd( 53.6845, 70.3847, -12.116, 0.66 ) }
    dend_14 { pt3dadd( 58.2675, 73.2875, -10.8308, 0.66 ) }
    dend_14 { pt3dadd( 64.3941, 77.0372, -9.37956, 0.66 ) }
    dend_14 { pt3dadd( 69.8315, 80.2084, -8.16918, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 25.7385, 47.5373, -13.5565, 0.66 ) }
    dend_13 { pt3dadd( 32.5803, 45.8101, -7.40372, 0.66 ) }
    dend_13 { pt3dadd( 37.0559, 44.9491, -3.61356, 0.66 ) }
    dend_13 { pt3dadd( 43.4547, 44.0636, 1.4628, 0.66 ) }
    dend_13 { pt3dadd( 45.5767, 43.8121, 3.03815, 0.66 ) }
    dend_13 { pt3dadd( 48.5599, 43.4528, 5.34864, 0.66 ) }
    dend_13 { pt3dadd( 52.3648, 42.9828, 8.55464, 0.66 ) }
    dend_13 { pt3dadd( 58.1752, 42.6538, 13.538, 0.66 ) }
    dend_13 { pt3dadd( 60.0186, 42.5796, 15.0449, 0.33 ) }
    dend_13 { pt3dadd( 61.4088, 42.5433, 16.1468, 0.66 ) }
    dend_13 { pt3dadd( 69.6743, 42.4707, 23.0331, 0.66 ) }
    dend_13 { pt3dadd( 74.9238, 42.5511, 27.7429, 0.66 ) }
    dend_13 { pt3dadd( 77.2753, 42.5944, 29.9502, 0.66 ) }
    dend_13 { pt3dadd( 79.826, 42.8346, 32.1815, 0.66 ) }
    dend_13 { pt3dadd( 81.8347, 43.4072, 34.0017, 0.33 ) }
    dend_13 { pt3dadd( 82.5455, 43.702, 34.6279, 0.66 ) }
    dend_13 { pt3dadd( 83.7407, 44.6686, 35.3732, 0.33 ) }
    dend_13 { pt3dadd( 84.3396, 45.3284, 35.714, 0.66 ) }
    dend_13 { pt3dadd( 86.9361, 48.6563, 37.7471, 0.33 ) }
    dend_13 { pt3dadd( 89.6196, 53.4864, 40.3079, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 43.2502, 183.859, -21.5145, 0.33 ) }
    dend_11 { pt3dadd( 41.806, 185.114, -24.0991, 0.33 ) }
    dend_11 { pt3dadd( 41.0884, 185.737, -25.3833, 0.66 ) }
    dend_11 { pt3dadd( 39.2916, 187.298, -28.5991, 0.33 ) }
    dend_11 { pt3dadd( 37.9911, 188.428, -30.9265, 0.66 ) }
    dend_11 { pt3dadd( 35.2308, 190.825, -35.8664, 0.33 ) }
    dend_11 { pt3dadd( 34.033, 191.866, -38.01, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 43.2502, 183.859, -21.5145, 0.33 ) }
    dend_10 { pt3dadd( 41.11, 185.138, -22.9114, 0.33 ) }
    dend_10 { pt3dadd( 38.8523, 186.487, -24.3851, 0.66 ) }
    dend_10 { pt3dadd( 33.2414, 189.839, -28.0474, 0.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -24.5143, 123.246, -58.9598, 0.66 ) }
    dend_6 { pt3dadd( -26.5772, 126.526, -62.3097, 0.66 ) }
    dend_6 { pt3dadd( -29.1812, 130.127, -66.8121, 0.66 ) }
    dend_6 { pt3dadd( -31.6328, 133.183, -70.5601, 0.66 ) }
    dend_6 { pt3dadd( -32.5698, 134.248, -71.8436, 0.66 ) }
    dend_6 { pt3dadd( -34.3271, 136.161, -73.9998, 0.66 ) }
    dend_6 { pt3dadd( -35.1605, 137.002, -74.9614, 0.66 ) }
    dend_6 { pt3dadd( -39.1255, 140.838, -79.2019, 0.66 ) }
    dend_6 { pt3dadd( -42.5628, 143.866, -82.1539, 0.66 ) }
    dend_6 { pt3dadd( -43.7577, 144.84, -83.1881, 0.66 ) }
    dend_6 { pt3dadd( -46.9088, 147.363, -85.8307, 0.66 ) }
    dend_6 { pt3dadd( -50.4656, 150.304, -88.7338, 0.66 ) }
    dend_6 { pt3dadd( -53.0059, 152.499, -90.9033, 0.66 ) }
    dend_6 { pt3dadd( -56.1671, 155.374, -93.7421, 0.66 ) }
    dend_6 { pt3dadd( -60.297, 159.159, -98.0864, 0.33 ) }
    dend_6 { pt3dadd( -61.8041, 160.62, -99.947, 0.66 ) }
    dend_6 { pt3dadd( -62.2531, 161.067, -100.61, 0.66 ) }
    dend_6 { pt3dadd( -64.8943, 163.813, -105.274, 0.66 ) }
    dend_6 { pt3dadd( -66.1909, 165.294, -108.253, 0.33 ) }
    dend_6 { pt3dadd( -66.6025, 165.807, -109.371, 0.66 ) }
    dend_6 { pt3dadd( -68.1513, 167.85, -113.744, 0.33 ) }
    dend_6 { pt3dadd( -68.8931, 168.835, -116.087, 1.33 ) }
    dend_6 { pt3dadd( -70.7573, 171.366, -122.053, 0.33 ) }
    dend_6 { pt3dadd( -72.093, 173.318, -126.582, 0.33 ) }
    dend_6 { pt3dadd( -72.3551, 173.717, -127.545, 0.66 ) }
    dend_6 { pt3dadd( -73.2031, 174.991, -130.933, 0.33 ) }
    dend_6 { pt3dadd( -74.4438, 176.807, -135.905, 0.66 ) }
    dend_6 { pt3dadd( -74.8832, 177.491, -137.72, 0.33 ) }
    dend_6 { pt3dadd( -75.3831, 178.309, -139.815, 0.66 ) }
    dend_6 { pt3dadd( -76.5285, 180.06, -144.084, 0.33 ) }
    dend_6 { pt3dadd( -77.2161, 181.417, -146.772, 0.66 ) }
    dend_6 { pt3dadd( -77.5488, 182.357, -148.078, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( -77.8781, 183.68, -149.181, 0.66 ) }
    dend_6 { pt3dadd( -78.1297, 185.239, -150.0, 0.33 ) }
    dend_6 { pt3dadd( -78.2981, 187.597, -150.364, 0.66 ) }
    dend_6 { pt3dadd( -78.379, 191.822, -150.122, 0.33 ) }
    dend_6 { pt3dadd( -78.2978, 194.258, -149.665, 0.66 ) }
    dend_6 { pt3dadd( -78.1517, 196.92, -148.792, 0.33 ) }
    dend_6 { pt3dadd( -78.1189, 197.738, -148.462, 0.66 ) }
    dend_6 { pt3dadd( -78.1397, 200.872, -147.149, 0.33 ) }
    dend_6 { pt3dadd( -78.234, 201.884, -146.706, 0.66 ) }
    dend_6 { pt3dadd( -78.5617, 204.573, -145.524, 0.33 ) }
    dend_6 { pt3dadd( -79.5564, 211.195, -142.63, 0.66 ) }
    dend_6 { pt3dadd( -80.1154, 214.212, -141.292, 0.33 ) }
    dend_6 { pt3dadd( -81.2809, 219.584, -139.031, 0.33 ) }
    dend_6 { pt3dadd( -82.1395, 222.724, -137.783, 0.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 14/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -24.5143, 123.246, -58.9598, 0.33 ) }
    dend_5 { pt3dadd( -25.1104, 126.339, -59.4347, 0.33 ) }
    dend_5 { pt3dadd( -25.4299, 128.591, -59.7078, 0.33 ) }
    dend_5 { pt3dadd( -25.6017, 129.849, -59.8452, 0.66 ) }
    dend_5 { pt3dadd( -26.0656, 133.059, -60.1721, 0.33 ) }
    dend_5 { pt3dadd( -26.2567, 134.242, -60.2898, 0.66 ) }
    dend_5 { pt3dadd( -26.5629, 135.886, -60.2853, 0.33 ) }
    dend_5 { pt3dadd( -27.2872, 139.469, -60.0575, 0.33 ) }
    dend_5 { pt3dadd( -27.5557, 140.576, -59.9574, 0.66 ) }
    dend_5 { pt3dadd( -28.1286, 142.493, -59.7513, 0.33 ) }
    dend_5 { pt3dadd( -28.4106, 143.353, -59.642, 0.66 ) }
    dend_5 { pt3dadd( -29.8501, 148.269, -59.2108, 0.33 ) }
    dend_5 { pt3dadd( -30.5581, 150.516, -58.9841, 1.33 ) }
    dend_5 { pt3dadd( -31.3495, 152.846, -58.7575, 0.33 ) }
    dend_5 { pt3dadd( -31.642, 153.698, -58.6953, 0.66 ) }
    dend_5 { pt3dadd( -33.1002, 157.921, -58.5058, 0.33 ) }
    dend_5 { pt3dadd( -34.3983, 161.461, -58.5968, 0.66 ) }
    dend_5 { pt3dadd( -36.3711, 166.421, -58.9859, 0.66 ) }
    dend_5 { pt3dadd( -37.1379, 168.457, -59.0437, 0.66 ) }
    dend_5 { pt3dadd( -38.3795, 171.966, -59.0974, 0.66 ) }
    dend_5 { pt3dadd( -39.2025, 174.414, -59.076, 0.33 ) }
    dend_5 { pt3dadd( -40.5177, 178.355, -58.991, 0.66 ) }
    dend_5 { pt3dadd( -41.9788, 183.387, -58.8043, 0.66 ) }
    dend_5 { pt3dadd( -43.8227, 191.25, -58.1049, 0.33 ) }
    dend_5 { pt3dadd( -44.0834, 192.488, -57.928, 0.66 ) }
    dend_5 { pt3dadd( -44.8362, 197.091, -57.0954, 0.33 ) }
    dend_5 { pt3dadd( -45.4823, 201.562, -56.1558, 0.33 ) }
    dend_5 { pt3dadd( -45.6663, 203.18, -55.7769, 0.66 ) }
    dend_5 { pt3dadd( -46.321, 210.61, -54.4623, 0.33 ) }
    dend_5 { pt3dadd( -46.4, 211.75, -54.3583, 0.66 ) }
    dend_5 { pt3dadd( -46.5901, 216.31, -54.0067, 0.33 ) }
    dend_5 { pt3dadd( -46.6574, 218.315, -53.9094, 0.33 ) }
    dend_5 { pt3dadd( -46.6476, 222.04, -53.8058, 0.66 ) }
    dend_5 { pt3dadd( -46.6284, 227.247, -53.8491, 0.66 ) }
    dend_5 { pt3dadd( -46.5402, 232.1, -54.0703, 0.66 ) }
    dend_5 { pt3dadd( -46.5192, 236.5, -54.1068, 0.33 ) }
    dend_5 { pt3dadd( -46.5722, 238.115, -54.0598, 0.33 ) }
    dend_5 { pt3dadd( -46.9384, 242.967, -53.8017, 0.33 ) }
    dend_5 { pt3dadd( -47.1686, 244.147, -53.647, 0.66 ) }
    dend_5 { pt3dadd( -47.8201, 246.357, -53.3561, 0.33 ) }
    dend_5 { pt3dadd( -48.2564, 247.488, -53.2592, 0.66 ) }
    dend_5 { pt3dadd( -49.3012, 249.924, -53.2602, 0.33 ) }
    dend_5 { pt3dadd( -50.2447, 252.074, -53.2606, 1.99 ) }
    dend_5 { pt3dadd( -52.6538, 256.553, -53.3268, 0.33 ) }
    dend_5 { pt3dadd( -54.4986, 260.301, -53.4604, 0.66 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 59/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( -1.8451, -172.695, -35.4818, 0.33 ) }
    apic_19 { pt3dadd( -2.36175, -175.665, -36.1798, 0.33 ) }
    apic_19 { pt3dadd( -2.37842, -176.382, -36.2234, 0.66 ) }
    apic_19 { pt3dadd( -2.35701, -177.7, -36.1603, 0.33 ) }
    apic_19 { pt3dadd( -2.34414, -178.031, -36.1363, 0.66 ) }
    apic_19 { pt3dadd( -2.25172, -182.672, -35.9319, 0.66 ) }
    apic_19 { pt3dadd( -2.20322, -184.918, -36.0447, 0.33 ) }
    apic_19 { pt3dadd( -2.15057, -189.813, -36.7073, 0.66 ) }
    apic_19 { pt3dadd( -2.08984, -195.052, -37.5099, 0.66 ) }
    apic_19 { pt3dadd( -2.04237, -197.185, -37.8533, 0.66 ) }
    apic_19 { pt3dadd( -1.85672, -203.78, -38.7671, 0.66 ) }
    apic_19 { pt3dadd( -1.60963, -210.307, -39.5856, 0.66 ) }
    apic_19 { pt3dadd( -1.53345, -213.403, -39.9988, 0.66 ) }
    apic_19 { pt3dadd( -1.47767, -217.719, -40.5536, 0.66 ) }
    apic_19 { pt3dadd( -1.45018, -221.596, -40.9208, 0.66 ) }
    apic_19 { pt3dadd( -1.38371, -226.509, -41.1611, 0.66 ) }
    apic_19 { pt3dadd( -1.33854, -231.111, -41.1163, 0.66 ) }
    apic_19 { pt3dadd( -1.32018, -234.634, -40.8565, 0.66 ) }
    apic_19 { pt3dadd( -1.36267, -241.191, -40.2639, 0.66 ) }
    apic_19 { pt3dadd( -1.37454, -245.411, -39.8107, 0.66 ) }
    apic_19 { pt3dadd( -1.41595, -250.285, -39.2015, 0.66 ) }
    apic_19 { pt3dadd( -1.4223, -254.809, -38.6075, 0.66 ) }
    apic_19 { pt3dadd( -1.42496, -261.535, -37.6151, 0.66 ) }
    apic_19 { pt3dadd( -1.38952, -266.646, -36.8669, 0.66 ) }
    apic_19 { pt3dadd( -1.28246, -272.192, -36.2406, 0.66 ) }
    apic_19 { pt3dadd( -1.14393, -276.048, -35.8711, 0.66 ) }
    apic_19 { pt3dadd( -0.930272, -279.918, -35.658, 0.66 ) }
    apic_19 { pt3dadd( -0.511928, -284.781, -35.5954, 0.66 ) }
    apic_19 { pt3dadd( -0.178943, -289.459, -35.8089, 0.66 ) }
    apic_19 { pt3dadd( 0.101778, -294.516, -36.291, 0.66 ) }
    apic_19 { pt3dadd( 0.266261, -298.786, -36.8974, 0.66 ) }
    apic_19 { pt3dadd( 0.435905, -304.283, -37.7334, 0.66 ) }
    apic_19 { pt3dadd( 0.485298, -309.627, -38.5026, 0.66 ) }
    apic_19 { pt3dadd( 0.514985, -314.286, -39.1289, 0.66 ) }
    apic_19 { pt3dadd( 0.488446, -318.044, -39.5647, 0.66 ) }
    apic_19 { pt3dadd( 0.425397, -320.366, -39.7764, 0.66 ) }
    apic_19 { pt3dadd( 0.0664812, -326.781, -40.606, 0.66 ) }
    apic_19 { pt3dadd( -0.501285, -333.932, -41.757, 0.66 ) }
    apic_19 { pt3dadd( -0.695442, -336.379, -42.2846, 0.33 ) }
    apic_19 { pt3dadd( -0.791893, -337.947, -42.6552, 0.33 ) }
    apic_19 { pt3dadd( -0.990023, -340.802, -43.3481, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_19 { pt3dadd( -1.41885, -346.24, -44.7721, 0.66 ) }
    apic_19 { pt3dadd( -1.91398, -352.81, -46.67, 0.66 ) }
    apic_19 { pt3dadd( -2.0742, -354.893, -47.2691, 0.33 ) }
    apic_19 { pt3dadd( -2.24204, -357.71, -47.8983, 0.33 ) }
    apic_19 { pt3dadd( -2.32645, -360.725, -48.4838, 0.66 ) }
    apic_19 { pt3dadd( -2.35037, -362.754, -48.8658, 0.66 ) }
    apic_19 { pt3dadd( -2.34864, -365.304, -49.286, 0.33 ) }
    apic_19 { pt3dadd( -2.35226, -367.026, -49.5603, 0.66 ) }
    apic_19 { pt3dadd( -2.38302, -390.408, -53.2207, 0.66 ) }
    apic_19 { pt3dadd( -2.39732, -392.264, -53.5246, 0.33 ) }
    apic_19 { pt3dadd( -2.44528, -397.726, -54.5384, 0.66 ) }
    apic_19 { pt3dadd( -2.47567, -399.651, -54.9077, 0.33 ) }
    apic_19 { pt3dadd( -2.48326, -400.793, -55.1269, 0.66 ) }
    apic_19 { pt3dadd( -2.48914, -403.516, -55.6135, 0.33 ) }
    apic_19 { pt3dadd( -2.48686, -404.81, -55.7601, 0.66 ) }
    apic_19 { pt3dadd( -2.82349, -409.416, -56.0901, 0.33 ) }
    apic_19 { pt3dadd( -2.98549, -410.855, -56.1069, 0.33 ) }
    apic_19 { pt3dadd( -3.83963, -417.009, -56.0906, 0.66 ) }
    apic_19 { pt3dadd( -4.30806, -420.583, -56.0312, 0.66 ) }
    apic_19 { pt3dadd( -4.66175, -423.465, -55.9513, 0.66 ) }
    apic_19 { pt3dadd( -5.23894, -428.784, -55.6136, 0.66 ) }
    apic_19 { pt3dadd( -5.63619, -433.506, -55.1627, 0.66 ) }
    apic_19 { pt3dadd( -5.7626, -436.77, -54.8642, 0.66 ) }
    apic_19 { pt3dadd( -5.75942, -440.627, -54.5102, 0.33 ) }
    apic_19 { pt3dadd( -5.66142, -441.649, -54.4377, 0.66 ) }
    apic_19 { pt3dadd( -5.10455, -444.571, -54.3219, 0.66 ) }
    apic_19 { pt3dadd( -4.39375, -446.915, -54.222, 0.66 ) }
    apic_19 { pt3dadd( -3.51342, -449.538, -54.0923, 0.33 ) }
    apic_19 { pt3dadd( -3.26941, -450.215, -54.044, 0.66 ) }
    apic_19 { pt3dadd( -2.16992, -453.446, -53.8287, 0.66 ) }
    apic_19 { pt3dadd( -0.919694, -457.445, -53.6093, 0.66 ) }
    apic_19 { pt3dadd( -0.0205818, -460.826, -53.4643, 0.66 ) }
    apic_19 { pt3dadd( 0.216359, -462.132, -53.3836, 0.66 ) }
    apic_19 { pt3dadd( 0.502551, -464.888, -53.2359, 0.33 ) }
    apic_19 { pt3dadd( 0.607953, -467.05, -53.1499, 0.66 ) }
    apic_19 { pt3dadd( 0.57447, -468.999, -53.2645, 0.33 ) }
    apic_19 { pt3dadd( 0.453371, -470.905, -53.5858, 0.66 ) }
    apic_19 { pt3dadd( 0.226224, -472.99, -54.1107, 0.33 ) }
    apic_19 { pt3dadd( -0.242319, -476.899, -55.1717, 0.33 ) }
    apic_19 { pt3dadd( -0.336066, -477.585, -55.3651, 0.66 ) }
    apic_19 { pt3dadd( -0.759591, -481.875, -56.5136, 0.33 ) }
    apic_19 { pt3dadd( -0.918478, -484.383, -57.194, 0.33 ) }
    apic_19 { pt3dadd( -0.918366, -484.833, -57.2668, 0.66 ) }
    apic_19 { pt3dadd( -0.779529, -486.561, -57.3378, 0.33 ) }
    apic_19 { pt3dadd( -0.700952, -487.196, -57.2615, 0.66 ) }
    apic_19 { pt3dadd( -0.411463, -488.919, -56.9747, 0.33 ) }
    apic_19 { pt3dadd( -0.0522878, -490.801, -56.5515, 0.66 ) }
    apic_19 { pt3dadd( 0.911198, -495.33, -55.8916, 0.33 ) }
    apic_19 { pt3dadd( 1.11683, -496.331, -55.8025, 0.33 ) }
    apic_19 { pt3dadd( 1.18038, -496.649, -55.7924, 0.66 ) }
    apic_19 { pt3dadd( 1.88953, -500.281, -55.8603, 0.33 ) }
    apic_19 { pt3dadd( 2.29161, -502.486, -56.0303, 0.33 ) }
    apic_19 { pt3dadd( 2.91905, -506.304, -56.5225, 0.33 ) }
    apic_19 { pt3dadd( 3.01206, -507.002, -56.6219, 0.66 ) }
    apic_19 { pt3dadd( 3.32002, -509.734, -56.7676, 0.33 ) }
    apic_19 { pt3dadd( 3.32002, -509.734, -56.7676, 0.66 ) }
    apic_19 { pt3dadd( 3.50501, -511.748, -56.5078, 0.33 ) }
    apic_19 { pt3dadd( 3.50501, -511.748, -56.5078, 0.66 ) }
    apic_19 { pt3dadd( 3.95943, -514.479, -56.3584, 0.33 ) }
    apic_19 { pt3dadd( 4.54612, -517.703, -56.2757, 0.33 ) }
    apic_19 { pt3dadd( 4.81104, -519.051, -56.2796, 0.66 ) }
    apic_19 { pt3dadd( 5.39578, -522.344, -56.3565, 0.33 ) }
    apic_19 { pt3dadd( 6.10733, -527.443, -56.6903, 0.33 ) }
    apic_19 { pt3dadd( 6.22043, -528.592, -56.7978, 0.33 ) }
    apic_19 { pt3dadd( 6.24953, -529.225, -56.8731, 0.66 ) }
    apic_19 { pt3dadd( 6.30419, -530.958, -57.0763, 0.33 ) }
    apic_19 { pt3dadd( 6.31588, -533.295, -57.3194, 0.66 ) }
    apic_19 { pt3dadd( 6.04662, -538.675, -57.9507, 0.33 ) }
    apic_19 { pt3dadd( 5.81576, -540.287, -58.0389, 0.66 ) }
    apic_19 { pt3dadd( 5.30237, -543.48, -58.2208, 0.33 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 70/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -1.8451, -172.695, -35.4818, 0.66 ) }
    apic_18 { pt3dadd( -0.282622, -173.428, -36.958, 0.66 ) }
    apic_18 { pt3dadd( 1.60815, -174.48, -38.802, 0.33 ) }
    apic_18 { pt3dadd( 1.93167, -174.672, -39.1193, 0.66 ) }
    apic_18 { pt3dadd( 5.61726, -176.906, -42.6795, 0.66 ) }
    apic_18 { pt3dadd( 8.78038, -178.85, -45.6312, 0.33 ) }
    apic_18 { pt3dadd( 9.8549, -179.493, -46.5228, 0.33 ) }
    apic_18 { pt3dadd( 11.3823, -180.504, -47.6847, 0.33 ) }
    apic_18 { pt3dadd( 11.8981, -180.855, -47.9845, 0.66 ) }
    apic_18 { pt3dadd( 13.0133, -181.608, -48.2304, 0.33 ) }
    apic_18 { pt3dadd( 14.5624, -182.647, -48.2166, 0.66 ) }
    apic_18 { pt3dadd( 17.5401, -184.48, -47.771, 0.33 ) }
    apic_18 { pt3dadd( 19.6193, -185.767, -47.3517, 0.66 ) }
    apic_18 { pt3dadd( 21.8594, -187.059, -46.7996, 0.33 ) }
    apic_18 { pt3dadd( 26.578, -189.877, -45.3488, 0.66 ) }
    // Section: apic_16, id: apic_16, parent: apic_8 (entry count 85/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -7.5982, -31.6147, -0.534503, 0.66 ) }
    apic_16 { pt3dadd( -10.9109, -34.9019, -0.278418, 0.66 ) }
    apic_16 { pt3dadd( -12.9451, -36.8443, -0.199277, 0.66 ) }
    apic_16 { pt3dadd( -16.5484, -40.0252, -0.344236, 0.66 ) }
    apic_16 { pt3dadd( -17.6887, -40.9637, -0.4237, 0.66 ) }
    apic_16 { pt3dadd( -18.6384, -41.7243, -0.501329, 0.66 ) }
    apic_16 { pt3dadd( -21.1795, -43.6476, -0.823729, 0.66 ) }
    apic_16 { pt3dadd( -22.6687, -44.6849, -1.07134, 0.66 ) }
    apic_16 { pt3dadd( -25.0061, -45.9858, -1.60528, 0.66 ) }
    apic_16 { pt3dadd( -25.8478, -46.4327, -1.86879, 0.66 ) }
    apic_16 { pt3dadd( -26.9156, -46.9794, -2.13367, 0.66 ) }
    apic_16 { pt3dadd( -29.0915, -48.2483, -2.46939, 0.66 ) }
    apic_16 { pt3dadd( -30.6036, -49.201, -2.58546, 0.66 ) }
    apic_16 { pt3dadd( -31.8686, -50.1114, -2.61546, 0.66 ) }
    apic_16 { pt3dadd( -34.2622, -52.0486, -2.50021, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_16 { pt3dadd( -38.4225, -55.7725, -2.16151, 0.66 ) }
    apic_16 { pt3dadd( -40.4019, -57.6701, -1.85813, 0.66 ) }
    apic_16 { pt3dadd( -41.8438, -59.1676, -1.5557, 0.66 ) }
    apic_16 { pt3dadd( -43.1821, -60.7397, -1.2781, 0.66 ) }
    apic_16 { pt3dadd( -43.7564, -61.5087, -1.14709, 0.66 ) }
    apic_16 { pt3dadd( -44.2817, -62.3329, -0.997772, 0.66 ) }
    apic_16 { pt3dadd( -45.5512, -64.7421, -0.624349, 0.66 ) }
    apic_16 { pt3dadd( -46.9402, -66.9403, -0.320631, 0.66 ) }
    apic_16 { pt3dadd( -48.499, -69.2273, -0.175459, 0.66 ) }
    apic_16 { pt3dadd( -49.545, -70.6092, -0.285731, 0.66 ) }
    apic_16 { pt3dadd( -50.8605, -72.2986, -0.575224, 0.66 ) }
    apic_16 { pt3dadd( -52.906, -74.8682, -1.13164, 0.66 ) }
    apic_16 { pt3dadd( -55.4149, -78.0705, -1.95627, 0.66 ) }
    apic_16 { pt3dadd( -58.7522, -82.211, -3.22656, 0.66 ) }
    apic_16 { pt3dadd( -61.5673, -85.6617, -4.4982, 0.66 ) }
    apic_16 { pt3dadd( -62.5179, -86.9267, -4.97511, 0.66 ) }
    apic_16 { pt3dadd( -64.6767, -89.9683, -6.18813, 0.66 ) }
    apic_16 { pt3dadd( -65.1991, -90.8038, -6.53058, 0.66 ) }
    apic_16 { pt3dadd( -67.0359, -94.2933, -7.91023, 0.66 ) }
    apic_16 { pt3dadd( -68.1678, -96.7476, -8.67638, 0.66 ) }
    apic_16 { pt3dadd( -69.544, -100.04, -9.43374, 0.66 ) }
    apic_16 { pt3dadd( -70.7034, -102.659, -10.0494, 0.66 ) }
    apic_16 { pt3dadd( -71.1466, -103.669, -10.3185, 0.66 ) }
    apic_16 { pt3dadd( -72.0624, -105.447, -10.8021, 0.33 ) }
    apic_16 { pt3dadd( -72.7502, -106.586, -11.1301, 0.33 ) }
    apic_16 { pt3dadd( -73.7289, -107.778, -11.7885, 0.33 ) }
    apic_16 { pt3dadd( -74.5486, -108.619, -12.4103, 1.33 ) }
    apic_16 { pt3dadd( -75.2803, -109.347, -12.9846, 0.66 ) }
    apic_16 { pt3dadd( -77.0317, -110.875, -14.365, 0.66 ) }
    apic_16 { pt3dadd( -78.8935, -112.286, -15.7402, 0.66 ) }
    apic_16 { pt3dadd( -82.5804, -114.794, -18.4162, 0.33 ) }
    apic_16 { pt3dadd( -83.1434, -115.161, -18.8023, 0.33 ) }
    apic_16 { pt3dadd( -83.9915, -115.672, -19.3408, 0.66 ) }
    apic_16 { pt3dadd( -86.2333, -116.85, -20.575, 0.33 ) }
    apic_16 { pt3dadd( -87.2383, -117.305, -20.9922, 0.33 ) }
    apic_16 { pt3dadd( -87.7991, -117.524, -21.1219, 0.33 ) }
    apic_16 { pt3dadd( -89.696, -118.213, -21.2005, 0.33 ) }
    apic_16 { pt3dadd( -91.9496, -118.882, -21.4455, 0.66 ) }
    apic_16 { pt3dadd( -93.137, -119.162, -21.6084, 0.33 ) }
    apic_16 { pt3dadd( -93.5079, -119.234, -21.6626, 0.66 ) }
    apic_16 { pt3dadd( -94.7626, -119.472, -21.8978, 0.33 ) }
    apic_16 { pt3dadd( -96.1568, -119.703, -22.1805, 0.66 ) }
    apic_16 { pt3dadd( -98.6814, -120.151, -22.8708, 0.33 ) }
    apic_16 { pt3dadd( -99.4528, -120.338, -23.0729, 0.66 ) }
    apic_16 { pt3dadd( -100.587, -120.716, -23.4738, 0.33 ) }
    apic_16 { pt3dadd( -101.269, -121.017, -23.7449, 0.33 ) }
    apic_16 { pt3dadd( -101.786, -121.351, -23.969, 0.66 ) }
    apic_16 { pt3dadd( -103.539, -123.208, -24.751, 0.33 ) }
    apic_16 { pt3dadd( -103.915, -123.936, -24.9267, 0.66 ) }
    apic_16 { pt3dadd( -104.442, -125.469, -25.2219, 0.33 ) }
    apic_16 { pt3dadd( -104.681, -126.739, -25.367, 0.33 ) }
    apic_16 { pt3dadd( -104.763, -128.206, -25.4659, 0.33 ) }
    apic_16 { pt3dadd( -104.728, -129.179, -25.4517, 0.33 ) }
    apic_16 { pt3dadd( -104.651, -129.968, -25.3867, 0.66 ) }
    apic_16 { pt3dadd( -104.638, -130.573, -25.3361, 0.33 ) }
    apic_16 { pt3dadd( -104.721, -131.727, -25.2131, 0.66 ) }
    apic_16 { pt3dadd( -104.901, -132.834, -25.1163, 0.66 ) }
    apic_16 { pt3dadd( -105.385, -135.129, -24.8749, 0.33 ) }
    apic_16 { pt3dadd( -105.548, -135.808, -24.7931, 0.66 ) }
    apic_16 { pt3dadd( -106.141, -138.159, -24.4975, 0.33 ) }
    apic_16 { pt3dadd( -106.315, -138.838, -24.4103, 0.66 ) }
    apic_16 { pt3dadd( -106.669, -139.992, -24.2309, 0.33 ) }
    apic_16 { pt3dadd( -106.89, -140.547, -24.1214, 0.66 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 63/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -7.5982, -31.6147, -0.534503, 0.66 ) }
    apic_9 { pt3dadd( -10.645, -31.0768, -0.693814, 0.66 ) }
    apic_9 { pt3dadd( -16.2498, -30.0873, -0.986882, 0.66 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 66/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 69.8315, 80.2084, -8.16918, 0.33 ) }
    dend_18 { pt3dadd( 75.6267, 80.9244, -4.70959, 0.33 ) }
    dend_18 { pt3dadd( 77.5574, 81.116, -3.84141, 0.33 ) }
    dend_18 { pt3dadd( 77.9638, 81.1552, -3.69585, 0.66 ) }
    dend_18 { pt3dadd( 80.5308, 81.401, -3.24839, 0.33 ) }
    dend_18 { pt3dadd( 81.9239, 81.5126, -2.97348, 0.66 ) }
    dend_18 { pt3dadd( 83.1152, 81.6424, -2.70145, 0.33 ) }
    dend_18 { pt3dadd( 83.8709, 81.7383, -2.65305, 0.33 ) }
    dend_18 { pt3dadd( 85.2818, 81.976, -2.40458, 0.33 ) }
    dend_18 { pt3dadd( 87.8175, 82.5946, -1.70312, 0.66 ) }
    dend_18 { pt3dadd( 91.006, 83.8891, -0.567954, 0.66 ) }
    dend_18 { pt3dadd( 92.4314, 84.6384, 0.0405965, 0.66 ) }
    dend_18 { pt3dadd( 93.5493, 85.3228, 0.580323, 0.66 ) }
    dend_18 { pt3dadd( 94.9122, 86.2551, 1.30081, 0.66 ) }
    dend_18 { pt3dadd( 96.1607, 87.2172, 2.00685, 0.66 ) }
    dend_18 { pt3dadd( 98.7214, 89.31, 3.492, 0.66 ) }
    dend_18 { pt3dadd( 100.149, 90.5438, 4.28411, 0.33 ) }
    dend_18 { pt3dadd( 100.753, 91.06, 4.65465, 0.66 ) }
    dend_18 { pt3dadd( 101.707, 91.8715, 5.31708, 0.33 ) }
    dend_18 { pt3dadd( 102.753, 92.7075, 5.97523, 0.66 ) }
    dend_18 { pt3dadd( 104.103, 93.7104, 6.84518, 0.33 ) }
    dend_18 { pt3dadd( 105.649, 94.7492, 7.9849, 0.66 ) }
    dend_18 { pt3dadd( 106.732, 95.443, 8.73579, 0.33 ) }
    dend_18 { pt3dadd( 107.838, 96.224, 9.44379, 0.33 ) }
    dend_18 { pt3dadd( 110.261, 98.1236, 11.0402, 0.66 ) }
    dend_18 { pt3dadd( 112.215, 99.7689, 12.0576, 0.33 ) }
    dend_18 { pt3dadd( 113.261, 100.761, 12.3836, 1.33 ) }
    dend_18 { pt3dadd( 114.386, 101.742, 12.3828, 0.33 ) }
    dend_18 { pt3dadd( 115.983, 103.126, 12.5711, 0.33 ) }
    dend_18 { pt3dadd( 116.423, 103.479, 12.6661, 0.66 ) }
    dend_18 { pt3dadd( 118.614, 105.12, 13.3361, 0.66 ) }
    dend_18 { pt3dadd( 119.61, 105.803, 13.5623, 0.33 ) }
    dend_18 { pt3dadd( 121.702, 107.255, 14.0295, 0.66 ) }
    dend_18 { pt3dadd( 125.56, 109.947, 15.3734, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( 126.738, 110.72, 15.8782, 0.33 ) }
    dend_18 { pt3dadd( 127.466, 111.198, 16.2391, 0.33 ) }
    dend_18 { pt3dadd( 127.951, 111.517, 16.5589, 0.66 ) }
    dend_18 { pt3dadd( 129.314, 112.477, 17.5709, 0.33 ) }
    dend_18 { pt3dadd( 131.036, 113.924, 19.041, 0.33 ) }
    dend_18 { pt3dadd( 131.799, 114.628, 19.3671, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 6/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 69.8315, 80.2084, -8.16918, 0.66 ) }
    dend_15 { pt3dadd( 72.0456, 83.1924, -8.60287, 0.66 ) }
    dend_15 { pt3dadd( 73.9936, 86.2761, -9.10575, 0.66 ) }
    dend_15 { pt3dadd( 75.6619, 89.049, -9.5571, 0.66 ) }
    dend_15 { pt3dadd( 77.6941, 92.6025, -10.2885, 0.66 ) }
    dend_15 { pt3dadd( 79.4307, 95.8184, -10.9749, 0.66 ) }
    dend_15 { pt3dadd( 82.3771, 101.382, -12.1734, 0.66 ) }
    dend_15 { pt3dadd( 83.5438, 103.825, -12.7258, 0.66 ) }
    dend_15 { pt3dadd( 84.5512, 106.053, -13.1665, 0.66 ) }
    dend_15 { pt3dadd( 85.9037, 109.151, -13.9221, 0.33 ) }
    dend_15 { pt3dadd( 87.3322, 112.684, -14.8782, 0.66 ) }
    dend_15 { pt3dadd( 87.9076, 113.976, -15.25, 0.66 ) }
    dend_15 { pt3dadd( 88.4588, 115.158, -15.5917, 0.66 ) }
    dend_15 { pt3dadd( 89.7079, 117.696, -16.3042, 0.66 ) }
    dend_15 { pt3dadd( 91.1972, 120.796, -17.1578, 0.66 ) }
    dend_15 { pt3dadd( 92.2202, 122.809, -17.6252, 0.66 ) }
    dend_15 { pt3dadd( 93.7125, 125.658, -18.523, 0.66 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 23/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 5.30237, -543.48, -58.2208, 0.66 ) }
    apic_21 { pt3dadd( 4.15866, -547.427, -58.8242, 0.66 ) }
    apic_21 { pt3dadd( 4.14148, -549.89, -59.453, 0.33 ) }
    apic_21 { pt3dadd( 4.19841, -550.495, -59.6295, 0.66 ) }
    apic_21 { pt3dadd( 4.50463, -553.747, -60.5787, 0.33 ) }
    apic_21 { pt3dadd( 4.86503, -557.575, -61.6957, 0.33 ) }
    apic_21 { pt3dadd( 5.13523, -560.445, -62.5333, 1.99 ) }
    apic_21 { pt3dadd( 6.59092, -568.16, -64.3318, 0.33 ) }
    apic_21 { pt3dadd( 6.73663, -568.68, -64.4781, 0.66 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 32/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 5.30237, -543.48, -58.2208, 0.33 ) }
    apic_20 { pt3dadd( 4.67667, -542.821, -57.9277, 0.33 ) }
    apic_20 { pt3dadd( 4.53478, -542.672, -57.8613, 0.66 ) }
    // Section: apic_13, id: apic_13, parent: apic_9 (entry count 35/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -16.2498, -30.0873, -0.986882, 0.66 ) }
    apic_13 { pt3dadd( -20.5807, -30.9419, 0.136875, 0.66 ) }
    apic_13 { pt3dadd( -21.939, -31.1497, 0.464691, 0.66 ) }
    apic_13 { pt3dadd( -26.0241, -31.8163, 1.41686, 0.66 ) }
    apic_13 { pt3dadd( -29.0566, -32.4089, 2.08371, 0.66 ) }
    apic_13 { pt3dadd( -32.1315, -33.043, 2.71052, 0.66 ) }
    apic_13 { pt3dadd( -35.1513, -33.7158, 3.2973, 0.66 ) }
    apic_13 { pt3dadd( -37.2863, -34.3313, 3.79655, 0.66 ) }
    apic_13 { pt3dadd( -38.8303, -34.879, 4.28005, 0.66 ) }
    apic_13 { pt3dadd( -41.9354, -36.2794, 5.44785, 0.66 ) }
    apic_13 { pt3dadd( -44.3593, -37.5977, 6.45166, 0.66 ) }
    apic_13 { pt3dadd( -45.3329, -38.2421, 6.91263, 0.66 ) }
    apic_13 { pt3dadd( -49.1495, -41.0555, 8.87305, 0.66 ) }
    apic_13 { pt3dadd( -52.6704, -43.9831, 10.5594, 0.66 ) }
    apic_13 { pt3dadd( -55.4729, -46.4661, 11.7383, 0.66 ) }
    apic_13 { pt3dadd( -56.668, -47.6349, 12.1289, 0.66 ) }
    apic_13 { pt3dadd( -58.2691, -49.2752, 12.4728, 0.66 ) }
    apic_13 { pt3dadd( -59.9525, -51.0121, 12.6242, 0.66 ) }
    apic_13 { pt3dadd( -63.6, -54.7419, 12.5384, 0.66 ) }
    apic_13 { pt3dadd( -66.8834, -58.0979, 12.2827, 0.66 ) }
    apic_13 { pt3dadd( -69.0217, -60.2194, 12.2658, 0.66 ) }
    apic_13 { pt3dadd( -71.1034, -62.3738, 12.4, 0.33 ) }
    apic_13 { pt3dadd( -71.7652, -63.0444, 12.4924, 0.66 ) }
    apic_13 { pt3dadd( -74.7242, -66.1507, 13.2167, 0.66 ) }
    apic_13 { pt3dadd( -75.958, -67.358, 13.755, 0.66 ) }
    apic_13 { pt3dadd( -78.4464, -69.613, 15.1846, 0.66 ) }
    apic_13 { pt3dadd( -80.1243, -71.1101, 16.3248, 0.66 ) }
    apic_13 { pt3dadd( -81.0401, -71.9439, 17.0097, 0.66 ) }
    apic_13 { pt3dadd( -82.6803, -73.3847, 18.2731, 0.66 ) }
    apic_13 { pt3dadd( -84.7481, -75.1632, 19.8829, 0.66 ) }
    apic_13 { pt3dadd( -87.5621, -77.3343, 22.0098, 0.66 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 66/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -16.2498, -30.0873, -0.986882, 0.33 ) }
    apic_10 { pt3dadd( -16.9043, -30.0925, 1.03536, 0.33 ) }
    apic_10 { pt3dadd( -18.0454, -29.9716, 4.23767, 0.66 ) }
    apic_10 { pt3dadd( -18.557, -29.9174, 5.67346, 0.66 ) }
    apic_10 { pt3dadd( -19.9197, -29.7731, 9.4973, 0.66 ) }
    apic_10 { pt3dadd( -21.1997, -29.6374, 13.0895, 0.66 ) }
    apic_10 { pt3dadd( -22.4174, -29.5084, 16.5066, 0.66 ) }
    apic_10 { pt3dadd( -23.1358, -29.5118, 18.6256, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 74/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 93.7125, 125.658, -18.523, 0.33 ) }
    dend_17 { pt3dadd( 97.0119, 127.577, -18.0663, 0.33 ) }
    dend_17 { pt3dadd( 98.3008, 128.346, -17.8725, 0.33 ) }
    dend_17 { pt3dadd( 99.6827, 129.178, -17.5452, 0.66 ) }
    dend_17 { pt3dadd( 101.922, 130.705, -16.8747, 0.33 ) }
    dend_17 { pt3dadd( 103.983, 132.177, -16.1397, 0.33 ) }
    dend_17 { pt3dadd( 105.067, 133.013, -15.5997, 0.33 ) }
    dend_17 { pt3dadd( 106.124, 133.956, -14.7752, 0.66 ) }
    dend_17 { pt3dadd( 107.448, 135.201, -13.5213, 0.66 ) }
    dend_17 { pt3dadd( 108.905, 136.645, -11.9604, 0.33 ) }
    dend_17 { pt3dadd( 109.475, 137.275, -11.2431, 0.66 ) }
    dend_17 { pt3dadd( 111.771, 139.826, -8.44572, 0.33 ) }
    dend_17 { pt3dadd( 112.865, 140.926, -7.27982, 0.66 ) }
    dend_17 { pt3dadd( 114.312, 142.153, -5.94624, 0.33 ) }
    dend_17 { pt3dadd( 114.719, 142.463, -5.61575, 0.66 ) }
    dend_17 { pt3dadd( 117.555, 144.344, -3.48242, 0.33 ) }
    dend_17 { pt3dadd( 120.026, 145.922, -1.67713, 0.33 ) }
    dend_17 { pt3dadd( 121.078, 146.488, -1.08858, 0.66 ) }
    dend_17 { pt3dadd( 124.582, 148.249, 0.891332, 0.33 ) }
    dend_17 { pt3dadd( 126.044, 148.998, 1.77598, 0.66 ) }
    dend_17 { pt3dadd( 132.324, 152.189, 5.59229, 0.66 ) }
    dend_17 { pt3dadd( 135.658, 153.861, 7.60131, 0.66 ) }
    dend_17 { pt3dadd( 142.307, 157.197, 11.7661, 0.66 ) }
    dend_17 { pt3dadd( 147.317, 159.774, 14.8776, 0.66 ) }
    dend_17 { pt3dadd( 150.929, 161.629, 17.0246, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 99/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 93.7125, 125.658, -18.523, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_16 { pt3dadd( 94.6959, 126.442, -19.8542, 0.33 ) }
    dend_16 { pt3dadd( 95.0326, 126.831, -20.2882, 0.66 ) }
    dend_16 { pt3dadd( 95.6356, 127.632, -21.0147, 0.33 ) }
    dend_16 { pt3dadd( 96.0325, 128.232, -21.47, 0.66 ) }
    dend_16 { pt3dadd( 98.4695, 132.067, -24.024, 0.33 ) }
    dend_16 { pt3dadd( 99.2849, 133.468, -24.8605, 0.33 ) }
    dend_16 { pt3dadd( 101.066, 136.527, -26.5204, 0.66 ) }
    dend_16 { pt3dadd( 101.76, 137.848, -27.1113, 0.33 ) }
    dend_16 { pt3dadd( 102.468, 139.432, -27.7058, 0.66 ) }
    dend_16 { pt3dadd( 102.978, 140.635, -28.0257, 0.33 ) }
    dend_16 { pt3dadd( 103.57, 141.986, -28.3393, 0.66 ) }
    dend_16 { pt3dadd( 104.176, 143.304, -28.7398, 0.33 ) }
    dend_16 { pt3dadd( 105.294, 145.39, -29.4596, 0.66 ) }
    dend_16 { pt3dadd( 105.97, 146.565, -29.8749, 0.33 ) }
    dend_16 { pt3dadd( 107.725, 149.416, -30.912, 0.66 ) }
    dend_16 { pt3dadd( 109.799, 152.574, -32.0125, 0.33 ) }
    dend_16 { pt3dadd( 110.366, 153.294, -32.2517, 0.33 ) }
    dend_16 { pt3dadd( 111.283, 154.27, -32.7012, 0.66 ) }
    dend_16 { pt3dadd( 112.343, 155.198, -33.2357, 0.33 ) }
    dend_16 { pt3dadd( 113.008, 155.684, -33.6128, 0.66 ) }
    dend_16 { pt3dadd( 114.259, 156.688, -34.3605, 0.33 ) }
    dend_16 { pt3dadd( 115.792, 157.964, -35.091, 0.33 ) }
    dend_16 { pt3dadd( 119.378, 161.263, -36.7915, 0.33 ) }
    dend_16 { pt3dadd( 119.78, 161.672, -36.9861, 0.66 ) }
    dend_16 { pt3dadd( 122.633, 164.943, -38.3437, 0.33 ) }
    dend_16 { pt3dadd( 124.961, 167.877, -39.632, 0.66 ) }
    dend_16 { pt3dadd( 126.454, 169.959, -40.5258, 0.33 ) }
    dend_16 { pt3dadd( 127.63, 171.805, -41.2256, 0.33 ) }
    dend_16 { pt3dadd( 128.822, 173.668, -41.7729, 0.33 ) }
    dend_16 { pt3dadd( 129.464, 174.642, -42.0809, 0.66 ) }
    dend_16 { pt3dadd( 131.969, 178.204, -43.2561, 0.33 ) }
    dend_16 { pt3dadd( 132.781, 179.217, -43.5594, 0.66 ) }
    dend_16 { pt3dadd( 133.711, 180.398, -43.6814, 0.66 ) }
    dend_16 { pt3dadd( 135.331, 182.357, -43.3977, 0.33 ) }
    dend_16 { pt3dadd( 135.606, 182.716, -43.2672, 0.66 ) }
    dend_16 { pt3dadd( 136.884, 184.475, -42.3669, 0.66 ) }
    dend_16 { pt3dadd( 139.141, 188.076, -39.8211, 0.66 ) }
    dend_16 { pt3dadd( 140.647, 190.731, -37.8775, 0.33 ) }
    dend_16 { pt3dadd( 140.788, 191.036, -37.6291, 0.66 ) }
    dend_16 { pt3dadd( 141.727, 193.453, -35.5757, 0.33 ) }
    dend_16 { pt3dadd( 141.844, 193.768, -35.3149, 0.66 ) }
    dend_16 { pt3dadd( 142.95, 196.707, -32.9556, 0.33 ) }
    dend_16 { pt3dadd( 144.259, 200.007, -30.5516, 0.66 ) }
    dend_16 { pt3dadd( 146.044, 204.395, -27.5634, 0.33 ) }
    dend_16 { pt3dadd( 146.187, 204.745, -27.3247, 0.66 ) }
    dend_16 { pt3dadd( 146.84, 206.352, -26.2417, 0.33 ) }
    dend_16 { pt3dadd( 147.567, 207.965, -25.5652, 0.33 ) }
    dend_16 { pt3dadd( 148.479, 209.621, -25.7158, 0.33 ) }
    dend_16 { pt3dadd( 149.139, 210.733, -26.3374, 0.66 ) }
    dend_16 { pt3dadd( 149.969, 211.829, -27.5526, 0.33 ) }
    dend_16 { pt3dadd( 150.585, 212.571, -28.5072, 0.66 ) }
    dend_16 { pt3dadd( 153.5, 215.99, -33.3911, 0.33 ) }
    dend_16 { pt3dadd( 154.123, 216.678, -34.3267, 0.66 ) }
    dend_16 { pt3dadd( 154.767, 217.308, -35.1711, 0.66 ) }
    dend_16 { pt3dadd( 158.73, 220.92, -40.4562, 0.33 ) }
    dend_16 { pt3dadd( 159.542, 221.601, -41.5251, 0.33 ) }
    dend_16 { pt3dadd( 159.899, 221.872, -41.9406, 0.66 ) }
    dend_16 { pt3dadd( 164.288, 225.01, -45.82, 0.33 ) }
    dend_16 { pt3dadd( 164.755, 225.325, -46.1759, 0.66 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 59/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -87.5621, -77.3343, 22.0098, 0.66 ) }
    apic_15 { pt3dadd( -92.4089, -81.9233, 24.0721, 0.66 ) }
    apic_15 { pt3dadd( -93.8057, -83.1236, 24.6153, 0.66 ) }
    apic_15 { pt3dadd( -95.2628, -84.2677, 25.1041, 0.66 ) }
    apic_15 { pt3dadd( -97.2026, -85.6972, 25.6824, 0.66 ) }
    apic_15 { pt3dadd( -98.9225, -86.9364, 26.1495, 0.66 ) }
    apic_15 { pt3dadd( -100.254, -87.9052, 26.4934, 0.33 ) }
    apic_15 { pt3dadd( -102.194, -89.2302, 26.8033, 0.66 ) }
    apic_15 { pt3dadd( -104.601, -90.9233, 27.1997, 0.66 ) }
    apic_15 { pt3dadd( -105.666, -91.6837, 27.3755, 0.66 ) }
    apic_15 { pt3dadd( -107.387, -92.8865, 27.642, 0.66 ) }
    apic_15 { pt3dadd( -108.467, -93.6688, 27.7586, 0.33 ) }
    apic_15 { pt3dadd( -109.624, -94.6679, 27.8584, 0.66 ) }
    apic_15 { pt3dadd( -111.698, -96.8314, 27.9715, 0.66 ) }
    apic_15 { pt3dadd( -112.403, -97.6548, 28.0184, 0.66 ) }
    apic_15 { pt3dadd( -112.913, -98.2466, 28.0574, 0.66 ) }
    apic_15 { pt3dadd( -114.704, -100.329, 28.2133, 0.33 ) }
    apic_15 { pt3dadd( -115.413, -101.187, 28.2954, 0.33 ) }
    apic_15 { pt3dadd( -115.576, -101.396, 28.3173, 0.66 ) }
    apic_15 { pt3dadd( -117.024, -103.236, 28.5331, 0.33 ) }
    apic_15 { pt3dadd( -118.028, -104.568, 28.7442, 0.66 ) }
    apic_15 { pt3dadd( -118.562, -105.189, 28.8911, 0.33 ) }
    apic_15 { pt3dadd( -119.321, -105.889, 29.2241, 0.66 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 82/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -87.5621, -77.3343, 22.0098, 0.33 ) }
    apic_14 { pt3dadd( -88.1198, -76.8696, 22.7133, 0.33 ) }
    apic_14 { pt3dadd( -89.6015, -75.635, 24.5824, 0.66 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 85/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -23.1358, -29.5118, 18.6256, 0.66 ) }
    apic_12 { pt3dadd( -23.0531, -26.7441, 17.6839, 0.66 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 87/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -23.1358, -29.5118, 18.6256, 0.66 ) }
    apic_11 { pt3dadd( -23.7709, -30.3403, 23.5653, 0.66 ) }
    apic_11 { pt3dadd( -24.2728, -30.7222, 25.9848, 0.66 ) }
    apic_11 { pt3dadd( -25.0342, -31.21, 28.7311, 0.66 ) }
    apic_11 { pt3dadd( -26.9874, -32.3467, 34.054, 0.66 ) }
    apic_11 { pt3dadd( -28.9271, -33.3116, 38.1071, 0.66 ) }
    apic_11 { pt3dadd( -30.276, -33.9826, 40.9257, 0.33 ) }
    apic_11 { pt3dadd( -31.8146, -34.6186, 43.4681, 0.66 ) }
    apic_11 { pt3dadd( -33.4042, -35.2159, 45.7299, 0.33 ) }
    apic_11 { pt3dadd( -35.8628, -36.1835, 48.518, 0.66 ) }
    apic_11 { pt3dadd( -39.7564, -37.3281, 50.8369, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_22 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    apic_17 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    apic_19 ModelViewParmSubset_2.append()
    apic_18 ModelViewParmSubset_2.append()
    apic_16 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    apic_21 ModelViewParmSubset_2.append()
    apic_20 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    apic_15 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_22 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    apic_21 ModelViewParmSubset_4.append()
    apic_20 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_0, axon_0, apic_4, apic_1, dend_2, dend_1, axon_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
    ModelViewParmSubset_5 = new SectionList()
    apic_0 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    apic_4 ModelViewParmSubset_5.append()
    apic_1 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    apic_6 ModelViewParmSubset_5.append()
    apic_5 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_3 ModelViewParmSubset_5.append()
    apic_2 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    apic_22 ModelViewParmSubset_5.append()
    apic_7 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    apic_17 ModelViewParmSubset_5.append()
    apic_8 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    apic_19 ModelViewParmSubset_5.append()
    apic_18 ModelViewParmSubset_5.append()
    apic_16 ModelViewParmSubset_5.append()
    apic_9 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    apic_21 ModelViewParmSubset_5.append()
    apic_20 ModelViewParmSubset_5.append()
    apic_13 ModelViewParmSubset_5.append()
    apic_10 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    apic_15 ModelViewParmSubset_5.append()
    apic_14 ModelViewParmSubset_5.append()
    apic_12 ModelViewParmSubset_5.append()
    apic_11 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_5 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_12 = new SectionList()
    apic_3 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_13 = new SectionList()
    apic_2 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    apic_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_9 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_4 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_22 = new SectionList()
    apic_17 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_14 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    apic_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_13 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_42 = new SectionList()
    apic_15 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_5 = new SectionList()
    apic_4 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_6 = new SectionList()
    apic_1 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_8 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_3 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    apic_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    apic_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_11 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_10 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_11 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    apic_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()
    apic_20 apical.append()
    apic_21 apical.append()
    apic_22 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_0, axon_0, axon_0, apic_4, apic_1, apic_1, apic_1, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_3, dend_3, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_7, apic_7, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_9, apic_9, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_9 all.append()
    apic_9 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_1 nseg = 7
    apic_5 nseg = 3
    apic_3 nseg = 9
    apic_2 nseg = 3
    apic_22 nseg = 9
    dend_9 nseg = 7
    dend_7 nseg = 17
    dend_4 nseg = 5
    apic_17 nseg = 7
    dend_14 nseg = 3
    dend_13 nseg = 5
    dend_6 nseg = 9
    dend_5 nseg = 7
    apic_19 nseg = 19
    apic_16 nseg = 7
    dend_18 nseg = 3
    dend_15 nseg = 3
    apic_13 nseg = 5
    dend_17 nseg = 3
    dend_16 nseg = 7
    apic_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_BTC_4f730ef7d0_0_0


