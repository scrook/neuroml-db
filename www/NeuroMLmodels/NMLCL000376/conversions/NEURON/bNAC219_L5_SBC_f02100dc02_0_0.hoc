// Cell: bNAC219_L5_SBC_f02100dc02_0_0
/*
{
  "id" : "bNAC219_L5_SBC_f02100dc02_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.0539, -10.2039, 0.0, 4.14336", "-1.01121, -9.20625, 0.0, 7.24872", "-0.968511, -8.20857, 0.0, 9.44401", "-0.925815, -7.2109, 0.0, 10.5422", "-0.88312, -6.21322, 0.0, 11.4092", "-0.840424, -5.21554, 0.0, 11.9642", "-0.797728, -4.21787, 0.0, 12.4342", "-0.755032, -3.22019, 0.0, 12.6614", "-0.712337, -2.22251, 0.0, 12.6364", "-0.669641, -1.22484, 0.0, 12.5104", "-0.626945, -0.227159, 0.0, 12.2671", "-0.584249, 0.770517, 0.0, 12.0239", "-0.541554, 1.76819, 0.0, 11.4645", "-0.498858, 2.76587, 0.0, 10.6882", "-0.456162, 3.76355, 0.0, 9.91399", "-0.413466, 4.76122, 0.0, 9.47101", "-0.370771, 5.7589, 0.0, 9.20688", "-0.328075, 6.75658, 0.0, 8.75449", "-0.285379, 7.75425, 0.0, 8.25522", "-0.242683, 8.75193, 0.0, 6.57349", "-0.199988, 9.74961, 0.0, 3.81" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.284736, 7.14994, 0.16, 6.82", "0.791615, 8.84031, 0.527359, 6.82", "1.59696, 11.526, 1.11103, 6.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.66527, -9.6493, 1.27, 5.68", "-3.36419, -11.9145, 0.668817, 3.64", "-4.04361, -14.1164, 0.0844088, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.30527, 7.10119, 0.0100002, 1.59", "-5.02992, 7.69779, -0.0240922, 1.59", "-7.74067, 8.6355, -0.0776773, 1.36", "-9.16799, 9.12924, -0.105892, 1.36", "-12.4851, 10.2767, -0.171463, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.199988, 9.74961, 0.0, 0.483274", "0.441352, 24.7359, 0.0, 0.483274", "1.08269, 39.7222, 0.0, 0.483274" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "1.59696, 11.526, 1.11103, 1.14", "-0.0836726, 16.0407, -0.257514, 1.14", "-0.837611, 18.066, -0.871449, 1.14", "-1.32536, 19.3762, -1.26862, 1.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.59696, 11.526, 1.11103, 0.91", "4.48376, 12.2916, 0.763479, 0.91", "5.82689, 12.6478, 0.601774, 0.91" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.04361, -14.1164, 0.0844088, 0.91", "-5.76842, -14.3298, -0.039156, 0.91", "-7.88008, -14.3627, -0.0794573, 0.91", "-9.78826, -14.3018, -0.0950774, 1.14", "-11.1799, -14.2483, -0.123403, 0.91", "-13.7139, -14.1923, -0.168124, 0.68", "-14.9839, -14.205, -0.186364, 0.91", "-17.382, -14.2203, -0.193865, 1.36", "-19.5954, -14.2593, -0.142914, 0.68", "-21.1246, -14.3558, -0.0899512, 0.68", "-23.0709, -14.6056, -0.00286518, 1.59", "-25.6228, -15.0803, 0.139905, 1.14", "-26.7388, -15.3092, 0.220457, 0.68", "-29.0734, -15.8065, 0.397287, 1.14", "-30.939, -16.2065, 0.542099, 0.23", "-32.4347, -16.5276, 0.650375, 1.14", "-34.2975, -16.9569, 0.742752, 0.91", "-37.449, -17.788, 0.841511, 0.23", "-38.9962, -18.2918, 0.854533, 0.91", "-40.363, -18.8674, 0.820476, 0.91", "-41.2674, -19.4007, 0.767009, 1.14", "-42.4892, -20.5317, 0.655777, 0.45", "-43.1836, -21.5115, 0.572809, 0.45", "-43.8348, -22.734, 0.485339, 0.91", "-44.4061, -24.0162, 0.421105, 0.45", "-44.9138, -25.3287, 0.379803, 1.59", "-45.8004, -27.9122, 0.313719, 0.45", "-46.4352, -30.0528, 0.27236, 1.82" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.04361, -14.1164, 0.0844088, 2.95", "-4.82359, -19.4863, 0.299874, 2.95", "-5.61889, -24.9618, 0.519573, 2.95", "-5.95803, -27.2968, 0.61326, 3.41" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-12.4851, 10.2767, -0.171463, 1.14", "-14.2591, 8.65631, 0.219756, 1.14", "-15.4462, 7.38393, 0.459898, 0.45", "-16.5357, 6.14747, 0.679954, 1.59", "-18.7349, 3.7111, 1.11554, 0.45", "-20.3793, 1.96795, 1.37666, 0.91", "-21.1808, 1.16542, 1.48096, 1.59", "-23.1139, -0.844285, 1.71403, 0.23", "-23.9199, -1.61043, 1.74837, 0.23", "-24.8216, -2.24326, 1.62855, 0.23", "-26.6133, -2.55977, 1.12786, 0.68", "-28.3717, -2.56797, 0.73774, 0.68", "-29.6765, -2.60467, 0.571018, 0.68", "-31.7742, -2.76331, 0.510403, 1.59", "-33.3988, -3.0581, 0.608472, 1.59", "-35.7023, -3.61618, 0.910246, 0.23", "-37.7641, -4.20498, 1.29834, 0.91", "-39.7036, -4.75769, 1.72051, 0.91", "-41.3538, -5.18048, 2.13152, 0.91", "-43.46, -5.63526, 2.66442, 0.23", "-46.4371, -6.1866, 3.37355, 0.68", "-48.1347, -6.43023, 3.74382, 0.68", "-50.3985, -6.67181, 4.18487, 0.23", "-52.4956, -6.83025, 4.54924, 0.45", "-55.1379, -6.99206, 4.9703, 0.45", "-56.8246, -7.06841, 5.22201, 0.23", "-58.5123, -7.13137, 5.46836, 0.23", "-60.9448, -7.19911, 5.82053, 1.36", "-63.0722, -7.28511, 6.12873, 0.45", "-65.9043, -7.40414, 6.54797, 0.91", "-67.6441, -7.51679, 6.84651, 0.91", "-69.0665, -7.61894, 7.10547, 1.36", "-71.1582, -7.7779, 7.51, 0.23", "-73.5451, -7.95403, 7.99346, 0.23", "-74.7435, -8.06242, 8.23481, 0.91", "-77.9359, -8.52936, 8.91362, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-12.4851, 10.2767, -0.171463, 0.23", "-13.8123, 10.5621, 0.125896, 0.23", "-15.1783, 10.8485, 0.469189, 0.68", "-16.4228, 11.1013, 0.842304, 0.23", "-16.969, 11.2065, 1.01617, 0.45", "-18.1118, 11.4288, 1.42445, 0.91", "-19.3036, 11.6775, 1.87313, 0.23", "-19.8243, 11.7772, 2.11117, 0.68", "-20.5502, 11.9704, 2.53787, 0.23", "-20.9201, 12.0965, 2.80388, 0.68", "-21.7409, 12.4278, 3.42768, 0.23", "-22.1693, 12.5985, 3.75137, 0.68", "-23.0859, 12.9092, 4.41932, 0.23", "-24.0319, 13.1643, 5.05211, 0.68", "-25.7067, 13.5393, 6.07981, 0.23", "-26.5033, 13.6844, 6.51442, 0.45", "-27.8507, 13.8493, 7.10464, 0.23", "-28.7686, 13.9198, 7.39884, 0.23", "-29.6448, 13.9968, 7.55743, 0.23", "-30.4473, 14.0979, 7.6284, 0.23", "-31.3053, 14.3021, 7.65444, 0.23", "-32.2861, 14.6495, 7.67521, 0.23", "-33.7278, 15.3197, 7.70859, 0.45", "-35.2761, 16.1292, 7.77188, 0.23", "-36.158, 16.5986, 7.82149, 0.68", "-37.5063, 17.2642, 7.90682, 0.23", "-38.9151, 17.931, 8.02032, 0.23", "-40.3978, 18.6094, 8.13441, 0.23", "-41.8523, 19.2492, 8.24885, 0.23", "-43.4336, 19.8681, 8.36245, 0.23", "-45.3488, 20.5225, 8.4684, 0.45", "-45.8756, 20.6762, 8.48038, 0.23", "-46.6906, 20.8748, 8.48779, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.08269, 39.7222, 0.0, 0.483274", "1.72403, 54.7085, 0.0, 0.483274", "2.36537, 69.6947, 0.0, 0.483274" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-1.32536, 19.3762, -1.26862, 0.23", "-1.84531, 19.2952, 0.495104, 0.23", "-1.84389, 18.6653, 1.51009, 0.91", "-1.79562, 17.2597, 3.067, 0.23", "-1.96119, 16.1651, 4.38378, 0.23", "-2.30489, 15.4631, 5.70001, 0.23", "-2.66492, 15.0752, 6.71712, 0.91", "-3.47004, 14.5071, 8.02734, 0.23", "-3.9503, 14.3293, 8.56511, 0.23", "-5.26474, 13.9533, 9.89465, 0.91", "-6.85026, 13.6466, 11.4607, 0.23", "-8.64873, 13.4306, 13.0703, 0.23", "-10.5812, 13.346, 14.7348, 0.68", "-13.809, 13.3278, 17.4079, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.32536, 19.3762, -1.26862, 0.68", "-0.94154, 22.1203, -1.47563, 0.68", "-0.682067, 24.0512, -1.57696, 0.68", "-0.549437, 25.1482, -1.62081, 1.36", "-0.180416, 28.2188, -1.71803, 0.68", "-0.0604722, 29.3482, -1.76504, 0.68", "0.104145, 31.6679, -1.89432, 1.59", "0.139447, 32.7722, -1.93593, 1.59", "0.0730365, 35.5686, -1.99197, 0.23", "-0.093187, 37.0164, -2.02305, 0.23", "-0.462847, 38.7514, -2.07416, 1.14", "-0.97863, 40.6982, -2.14273, 0.91", "-1.40571, 42.0971, -2.20375, 0.91", "-1.95593, 43.8365, -2.27304, 1.36", "-2.59341, 45.6489, -2.33219, 0.68", "-3.26357, 47.4835, -2.37516, 1.14", "-3.90768, 49.349, -2.38136, 0.45", "-4.29892, 50.6762, -2.39042, 1.59", "-4.77581, 52.5652, -2.48376, 2.27" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.82689, 12.6478, 0.601774, 0.91", "6.47775, 12.4894, -0.346982, 0.91", "7.40101, 11.9382, -1.71013, 0.91", "8.93819, 10.893, -3.70679, 0.68", "9.65508, 10.3609, -4.54922, 0.68", "10.4136, 9.72593, -5.36866, 1.14", "11.6072, 8.59669, -6.55119, 0.68", "12.9398, 7.0149, -7.69392, 0.23", "13.5793, 5.98136, -8.16135, 0.23", "13.8999, 5.29873, -8.36557, 0.23", "14.3956, 3.96305, -8.68506, 1.14", "14.8663, 2.65365, -8.94841, 1.82", "15.3237, 1.2434, -9.16175, 0.68", "15.7216, -0.541241, -9.34552, 1.14", "15.9256, -1.94313, -9.51065, 0.45", "16.0427, -3.08789, -9.65373, 0.45" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.82689, 12.6478, 0.601774, 1.14", "8.42534, 12.8469, 0.851055, 1.14", "9.88709, 12.9589, 0.991286, 1.59", "12.5054, 13.1596, 1.24247, 1.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-46.4352, -30.0528, 0.27236, 0.23", "-48.6668, -30.7846, 0.851721, 0.23", "-50.2151, -31.408, 1.23684, 0.68", "-52.1476, -32.3295, 1.74182, 0.23", "-52.9549, -32.7676, 1.96023, 0.23", "-54.674, -33.7742, 2.42715, 0.23", "-56.4731, -34.9126, 2.91599, 0.91", "-57.6997, -35.8008, 3.24114, 0.23", "-58.8414, -36.7214, 3.56175, 0.91", "-59.8027, -37.5156, 3.84382, 0.23", "-60.9983, -38.4692, 4.19548, 1.59", "-62.7199, -39.7388, 4.68304, 0.23", "-63.8475, -40.4921, 4.99342, 0.23", "-65.9463, -41.7204, 5.52925, 0.23", "-67.1822, -42.3516, 5.81662, 1.59", "-67.9464, -42.7009, 5.98477, 0.23", "-69.5953, -43.367, 6.31773, 0.68", "-71.3771, -44.0055, 6.62009, 0.23", "-72.6915, -44.4674, 6.77754, 1.14", "-73.2522, -44.675, 6.82127, 1.14", "-74.2853, -45.0929, 6.8757, 0.23", "-75.9418, -45.8327, 6.98307, 0.68", "-77.6017, -46.6351, 7.10798, 0.23", "-79.5757, -47.6045, 7.32764, 1.14", "-82.1093, -48.8856, 7.70097, 0.23", "-83.57, -49.6456, 7.97168, 0.91", "-86.3586, -51.1585, 8.58091, 0.23", "-87.1548, -51.6212, 8.78392, 0.91", "-90.0338, -53.3954, 9.63594, 0.23", "-92.3283, -54.9113, 10.4575, 1.14", "-94.3254, -56.2605, 11.2309, 0.45", "-95.6606, -57.2056, 11.7628, 1.14", "-96.718, -57.9941, 12.1799, 1.14", "-98.0011, -59.0333, 12.7077, 0.23", "-98.8853, -59.948, 13.1022, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-46.4352, -30.0528, 0.27236, 0.45", "-48.5335, -32.3058, 0.207771, 0.45", "-50.0313, -33.9141, 0.161666, 1.14", "-50.9697, -34.9216, 0.13278, 0.23", "-52.2025, -36.2453, 0.0948308, 1.36", "-53.4513, -37.5862, 0.056391, 0.45" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-5.95803, -27.2968, 0.61326, 0.23", "-5.49967, -28.8783, 1.312, 0.23", "-4.95157, -30.772, 2.11809, 0.23", "-4.35478, -32.7534, 2.98107, 1.14", "-3.72621, -34.7277, 3.86012, 0.23", "-3.26715, -36.1008, 4.47773, 0.91", "-2.90807, -37.1479, 4.94681, 0.91", "-2.03797, -39.6966, 6.05609, 0.23", "-1.37703, -41.5636, 6.87081, 1.14", "-0.915235, -42.8428, 7.42088, 1.14", "-0.0663262, -45.2023, 8.39897, 0.45", "0.768749, -47.497, 9.32507, 0.45", "1.18412, -48.7006, 9.79589, 0.91", "1.87875, -50.7575, 10.587, 0.23", "2.49113, -52.7181, 11.34, 0.23", "3.1577, -55.0084, 12.2324, 0.68", "3.90988, -57.649, 13.2915, 0.23", "4.39554, -59.3897, 14.0236, 0.91", "5.03145, -61.7845, 15.0944, 1.14", "5.98109, -65.7964, 17.0431, 0.23", "6.24351, -67.0806, 17.7197, 0.23", "6.54948, -68.9225, 18.7336, 0.68", "6.85329, -71.24, 20.0558, 0.23", "7.14862, -74.1154, 21.7775, 1.36", "7.30058, -76.1528, 23.0384, 0.68", "7.43578, -78.7308, 24.5983, 0.23", "7.46484, -79.5487, 25.0715, 0.91", "7.52431, -81.9435, 26.4149, 0.23", "7.57395, -83.5661, 27.2801, 0.91", "7.69038, -85.8992, 28.4436, 1.14", "7.89738, -88.7318, 29.784, 0.23", "8.01462, -90.1578, 30.4427, 0.91", "8.22306, -92.4863, 31.5053, 0.23", "8.33066, -93.3361, 31.8753, 0.91", "8.52255, -94.5007, 32.3643, 0.91", "9.08199, -97.1752, 33.5439, 0.23", "9.59633, -99.1795, 34.463, 2.05", "9.83727, -100.043, 34.853, 2.05", "11.3214, -104.977, 37.05, 0.23", "11.8395, -106.635, 37.7893, 0.91", "13.2505, -110.977, 39.6936, 0.23", "13.6851, -112.252, 40.2408, 0.23", "14.0766, -113.346, 40.7169, 1.14", "14.4623, -114.38, 41.1745, 1.14", "15.829, -117.957, 42.8108, 0.23", "16.4462, -119.509, 43.5669, 0.23", "16.9061, -120.648, 44.153, 0.91", "17.4369, -121.926, 44.8488, 0.91", "18.664, -124.647, 46.4474, 0.23", "19.3083, -126.01, 47.2994, 1.14", "20.7985, -128.889, 49.2577, 0.23", "21.6728, -130.514, 50.4095, 0.23", "22.1132, -131.306, 50.9779, 0.91", "22.7111, -132.314, 51.7632, 0.91", "23.6337, -133.714, 52.9511, 0.23", "24.2151, -134.515, 53.6632, 0.68", "25.0004, -135.539, 54.6278, 0.23", "25.9299, -136.71, 55.7498, 0.91", "28.5805, -139.899, 58.8737, 0.23", "29.2183, -140.632, 59.6133, 1.14", "30.077, -141.54, 60.5703, 1.14", "32.113, -143.676, 62.9167, 0.23", "32.7718, -144.398, 63.7641, 0.23", "33.8975, -145.746, 65.3751, 0.68", "34.616, -146.881, 66.6845, 0.23", "35.2295, -148.293, 68.2061, 0.91", "35.5158, -149.459, 69.4175, 0.23", "35.741, -151.23, 71.296, 0.23", "35.8714, -152.295, 72.4461, 0.68", "36.1585, -154.392, 74.6794, 0.23", "36.4715, -156.097, 76.5722, 0.68", "37.1677, -158.994, 79.8992, 0.23", "38.2607, -162.188, 83.6389, 0.23", "38.9488, -163.903, 85.6867, 0.23", "39.5012, -165.106, 87.2107, 0.68", "40.7465, -167.368, 90.2505, 0.23", "41.9053, -169.265, 92.975, 0.23", "42.9198, -170.738, 95.0695, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.95803, -27.2968, 0.61326, 2.27", "-7.37414, -30.7203, 0.0989146, 2.27", "-8.04423, -32.3403, -0.144468, 2.73", "-8.761, -34.0731, -0.404807, 3.64" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.77581, 52.5652, -2.48376, 0.23", "-2.48763, 54.2982, -0.0141625, 0.23", "-0.701811, 55.134, 1.58805, 0.91", "1.06169, 55.8893, 3.03538, 0.23", "2.60904, 56.5779, 4.33135, 0.23", "4.00721, 57.1718, 5.47208, 0.91", "5.8406, 57.98, 6.89687, 0.23", "6.82175, 58.3379, 7.60987, 0.23", "7.71079, 58.7507, 8.25399, 0.23", "9.15744, 59.6787, 9.26006, 0.23", "10.3746, 60.7835, 10.094, 1.36", "11.4061, 61.8704, 10.7917, 1.36", "13.6006, 64.497, 12.1687, 0.23", "14.9748, 66.118, 12.9518, 0.23", "16.1376, 67.4689, 13.5194, 0.23", "17.7943, 69.4916, 14.1846, 0.23", "19.7725, 72.0152, 14.8724, 1.14", "21.6783, 74.5441, 15.5007, 0.23", "23.1029, 76.4583, 15.8817, 0.23", "25.0421, 79.1404, 16.3824, 0.45", "26.7944, 81.8151, 16.8087, 0.23", "27.8387, 83.6295, 17.0321, 0.68", "29.1733, 86.5508, 17.2727, 0.23", "29.6738, 87.9244, 17.4094, 0.23", "30.1949, 89.7097, 17.6019, 0.91", "30.5292, 90.916, 17.7479, 0.91", "30.9094, 92.1084, 17.9022, 0.23", "31.9744, 95.1405, 18.4264, 0.68", "33.5055, 99.0188, 19.17, 0.23", "34.0133, 100.287, 19.4603, 0.91", "35.1695, 103.143, 20.1375, 0.23", "36.4649, 106.328, 20.9382, 0.68", "37.8489, 109.751, 21.8603, 0.23", "39.2496, 113.499, 22.8709, 0.68", "40.0107, 115.863, 23.4862, 0.23", "40.7021, 118.686, 24.2234, 0.68", "41.0091, 120.667, 24.755, 0.23", "41.1098, 122.301, 25.2194, 0.23", "41.1653, 124.46, 25.8008, 0.23", "41.13, 127.025, 26.5469, 0.68", "41.0304, 130.757, 27.6393, 0.23", "40.8371, 133.918, 28.6228, 0.68", "40.4955, 137.18, 29.586, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-4.77581, 52.5652, -2.48376, 0.23", "-5.55742, 54.237, -2.81092, 0.23", "-6.27119, 55.6277, -3.09503, 0.91", "-7.75308, 58.3258, -3.67811, 0.23", "-8.29521, 59.2258, -3.89533, 0.91", "-8.87039, 60.14, -4.13019, 0.91", "-9.76177, 61.5875, -4.49851, 0.23", "-10.8311, 63.3111, -4.92027, 0.23", "-11.8486, 64.9952, -5.35802, 0.23", "-12.6005, 66.369, -5.71468, 0.68", "-13.0658, 67.3141, -5.9506, 0.23", "-13.5076, 68.3618, -6.18704, 0.23", "-13.729, 68.9663, -6.3041, 0.23", "-14.2324, 70.4724, -6.53631, 1.59", "-14.8505, 72.4026, -6.78318, 0.68", "-15.2648, 73.6622, -6.94069, 0.23", "-15.5484, 74.3896, -7.04857, 0.91", "-16.0578, 75.4875, -7.24746, 0.23", "-16.3334, 76.024, -7.35847, 0.91", "-16.8466, 76.9475, -7.55444, 0.23", "-17.3188, 77.7647, -7.75111, 1.14", "-17.7639, 78.5291, -7.95996, 1.14", "-18.2961, 79.3691, -8.21581, 0.23", "-19.0325, 80.4247, -8.5561, 0.23", "-19.9581, 81.6225, -8.92588, 0.91", "-20.663, 82.4471, -9.17718, 0.23", "-21.6214, 83.4433, -9.46919, 0.23", "-22.3634, 84.1297, -9.67004, 0.91", "-23.6395, 85.172, -9.95943, 0.23", "-24.7488, 86.0287, -10.1814, 0.68", "-25.223, 86.4093, -10.2757, 0.68", "-26.0879, 87.129, -10.4399, 0.23", "-27.0245, 87.9592, -10.641, 0.68", "-27.8759, 88.7249, -10.871, 0.23", "-28.7961, 89.4911, -11.1536, 0.23", "-30.2337, 90.6006, -11.6708, 0.91", "-31.3361, 91.3748, -12.1372, 0.23", "-32.7692, 92.3185, -12.8401, 0.23", "-34.4177, 93.3479, -13.7243, 0.91", "-35.7223, 94.1183, -14.4786, 0.23", "-36.7918, 94.6926, -15.1101, 0.91", "-37.8798, 95.2675, -15.7824, 0.23", "-39.5792, 96.2325, -16.8899, 0.23", "-40.7024, 96.9114, -17.6402, 0.91", "-41.7941, 97.6653, -18.3933, 0.23", "-42.3606, 98.0945, -18.7879, 0.68", "-43.3997, 98.8586, -19.4513, 0.23", "-44.2274, 99.451, -19.9217, 0.91", "-45.0797, 100.025, -20.356, 0.23", "-45.8478, 100.542, -20.7066, 0.68", "-46.6175, 101.051, -21.0271, 0.23", "-48.1969, 102.083, -21.6508, 0.91", "-49.9291, 103.199, -22.301, 0.23", "-51.5353, 104.269, -22.8975, 0.23", "-52.7253, 105.115, -23.3433, 0.91", "-53.6887, 105.866, -23.7112, 0.23", "-54.1256, 106.252, -23.8953, 0.68", "-54.7791, 106.947, -24.2097, 0.23", "-55.3569, 107.707, -24.5439, 0.91", "-56.1679, 109.03, -25.1287, 0.23", "-56.5982, 109.841, -25.497, 0.91", "-57.1301, 110.955, -25.9955, 0.23", "-57.5122, 111.781, -26.3828, 1.14", "-58.2806, 113.483, -27.2532, 0.23", "-59.0146, 115.074, -28.1253, 0.91", "-59.6183, 116.33, -28.8677, 0.23", "-60.1493, 117.357, -29.516, 0.91", "-60.8594, 118.688, -30.3896, 0.23", "-61.3902, 119.629, -31.061, 0.23", "-61.9839, 120.597, -31.8111, 0.91", "-62.7587, 121.813, -32.7782, 0.23", "-63.1612, 122.423, -33.2732, 0.23", "-63.569, 123.014, -33.7611, 0.68", "-63.8583, 123.394, -34.0763, 0.23", "-64.5699, 124.283, -34.8115, 0.68", "-65.3747, 125.227, -35.626, 0.23", "-66.0108, 125.934, -36.2118, 0.23", "-66.4431, 126.415, -36.5957, 0.68", "-66.999, 127.017, -37.0617, 0.23", "-67.5041, 127.582, -37.4724, 0.23", "-68.0245, 128.158, -37.8776, 0.45", "-69.1181, 129.372, -38.72, 0.23", "-69.8846, 130.282, -39.3268, 1.82", "-70.4404, 130.964, -39.7681, 0.68", "-71.5627, 132.401, -40.6562, 0.23", "-72.4704, 133.515, -41.3221, 0.91", "-73.3301, 134.585, -41.9566, 0.23", "-74.0294, 135.439, -42.4665, 0.23", "-74.4562, 135.96, -42.7628, 0.91", "-75.0469, 136.706, -43.173, 0.23", "-75.6975, 137.53, -43.5989, 1.36" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "12.5054, 13.1596, 1.24247, 0.68", "14.5888, 11.8885, 1.26913, 0.68", "16.8151, 10.5351, 1.42758, 0.68", "18.7262, 9.31989, 1.63419, 0.68", "20.5877, 7.96274, 1.90472, 1.14", "22.8118, 6.2786, 2.21015, 1.59", "25.9322, 3.89261, 2.62153, 0.68", "28.555, 1.87965, 3.01068, 1.82", "31.324, -0.257817, 3.41703, 0.91", "36.0345, -3.95969, 4.03067, 0.68", "38.4569, -5.87013, 4.27335, 0.68", "40.9978, -7.89905, 4.44909, 1.14", "42.7403, -9.30305, 4.52368, 1.14", "46.5316, -12.3647, 4.60123, 1.82", "49.6208, -14.7807, 4.60433, 0.23", "51.9511, -16.5263, 4.56607, 0.91", "54.6073, -18.6313, 4.55347, 1.14", "56.3809, -20.1285, 4.51451, 2.05" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "12.5054, 13.1596, 1.24247, 0.45", "13.9997, 13.2664, 1.38879, 0.45", "16.3931, 13.4351, 1.6466, 0.91", "18.3738, 13.6043, 1.87413, 0.45", "20.7419, 13.8215, 2.16474, 1.14", "23.792, 14.2135, 2.58208, 0.68", "27.0046, 14.7264, 3.05163, 0.45", "28.8469, 15.0906, 3.34098, 0.91", "30.2958, 15.4617, 3.58568, 0.91", "32.944, 16.2672, 4.06991, 2.05", "36.8148, 17.5465, 4.81947, 0.68", "39.1253, 18.377, 5.27593, 1.14", "41.1384, 19.1852, 5.68431, 0.68", "42.129, 19.6204, 5.88775, 1.59", "44.2743, 20.6074, 6.33104, 1.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-8.761, -34.0731, -0.404807, 0.68", "-13.0785, -35.4966, -1.91309, 0.68", "-17.4126, -36.8142, -3.27784, 0.68", "-19.8826, -37.5199, -4.01048, 1.14", "-24.6947, -38.7202, -5.46003, 0.68", "-28.1575, -39.4783, -6.51286, 1.36", "-31.257, -40.0833, -7.48517, 0.45", "-34.8979, -40.5773, -8.63993, 1.14", "-38.4259, -40.8929, -9.75466, 0.23", "-41.5403, -41.2347, -10.7506, 0.45", "-43.0446, -41.4721, -11.2681, 0.45", "-46.4934, -42.2694, -12.5607, 1.14", "-49.2718, -43.1732, -13.6773, 0.23", "-51.7157, -44.2594, -14.7073, 0.91", "-55.0708, -46.0617, -16.0343, 0.45", "-57.0892, -47.2811, -16.7676, 1.14", "-59.9683, -49.0899, -17.7474, 0.23", "-62.5094, -50.7051, -18.5411, 0.91", "-65.4397, -52.5118, -19.3781, 0.68", "-68.2005, -54.0983, -20.0927, 0.23", "-70.21, -55.127, -20.5343, 0.91", "-73.101, -56.4008, -21.0667, 0.23", "-76.742, -57.8617, -21.6661, 0.91", "-78.7656, -58.663, -21.9864, 0.68", "-81.9082, -59.9639, -22.4754, 0.68", "-85.5615, -61.6167, -23.0436, 1.36", "-88.7037, -63.1292, -23.5186, 0.23", "-90.0836, -63.8354, -23.7305, 0.23", "-92.7153, -65.2585, -24.1675, 1.36", "-94.4151, -66.2885, -24.4566, 1.36", "-96.2817, -67.5665, -24.7744, 0.23", "-98.8285, -69.562, -25.2898, 0.91", "-101.149, -71.624, -25.8499, 0.91", "-103.401, -73.7677, -26.4476, 0.23", "-105.655, -76.0526, -27.0987, 0.91", "-107.42, -77.9391, -27.6727, 0.23", "-109.359, -80.2215, -28.3714, 0.23", "-110.768, -82.1647, -28.9142, 0.23", "-111.665, -83.5154, -29.2469, 1.14", "-112.633, -85.0102, -29.5629, 0.45", "-113.662, -86.5938, -29.8595, 1.59", "-116.391, -90.8179, -30.4893, 0.68", "-119.33, -95.291, -30.9666, 0.68", "-121.282, -98.1004, -31.2003, 0.23", "-123.154, -100.649, -31.386, 0.91", "-124.457, -102.284, -31.4976, 0.91", "-125.502, -103.427, -31.5815, 0.23", "-127.111, -104.982, -31.711, 0.91", "-129.478, -107.097, -31.936, 0.23", "-131.31, -108.702, -32.1668, 0.45", "-133.235, -110.381, -32.4553, 1.14", "-134.995, -111.915, -32.7405, 0.23", "-137.549, -114.144, -33.1891, 0.91", "-140.224, -116.448, -33.6731, 0.91", "-141.912, -117.879, -33.9852, 0.23", "-144.226, -119.791, -34.3959, 0.68", "-146.089, -121.31, -34.6814, 0.23", "-146.987, -121.996, -34.7956, 0.23", "-149.543, -123.776, -35.0978, 0.91", "-152.179, -125.516, -35.3414, 2.05", "-155.688, -127.864, -35.5982, 0.68", "-158.538, -129.789, -35.7378, 1.36", "-161.457, -131.794, -35.8422, 0.45", "-163.7, -133.37, -35.8948, 0.45", "-166.283, -135.217, -35.9425, 0.23", "-167.786, -136.294, -35.9614, 0.91", "-169.575, -137.557, -36.0051, 0.23", "-170.873, -138.445, -36.0735, 0.23", "-173.567, -140.281, -36.285, 1.14", "-175.042, -141.252, -36.4309, 1.14", "-178.468, -143.367, -36.85, 0.23", "-179.501, -143.955, -36.9932, 0.91", "-181.718, -145.188, -37.3465, 1.59", "-183.455, -146.16, -37.5856, 0.45", "-184.447, -146.707, -37.7037, 1.14", "-187.77, -148.499, -38.0346, 0.23", "-189.387, -149.364, -38.1838, 1.36", "-191.144, -150.318, -38.2996, 1.36", "-196.048, -153.059, -38.5319, 0.23", "-198.147, -154.284, -38.6133, 1.36", "-198.874, -154.747, -38.6387, 2.27", "-201.854, -156.887, -38.7538, 0.23", "-203.975, -158.458, -38.8229, 0.68", "-205.379, -159.545, -38.8737, 0.23", "-206.96, -160.92, -38.9843, 0.91", "-208.263, -162.219, -39.0761, 0.23", "-209.776, -163.957, -39.1604, 1.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.761, -34.0731, -0.404807, 2.27", "-8.86914, -36.4609, -0.203068, 2.27", "-8.89629, -37.0604, -0.152418, 2.27" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-75.6975, 137.53, -43.5989, 0.23", "-80.5077, 139.237, -46.4219, 0.23", "-83.0981, 140.098, -47.9358, 0.91", "-86.9194, 141.249, -50.1642, 0.23", "-89.4814, 141.921, -51.5887, 0.91", "-91.337, 142.37, -52.5944, 0.23", "-94.3031, 143.089, -54.2441, 0.23", "-95.7371, 143.367, -55.0335, 0.23", "-97.729, 143.788, -56.2209, 0.91", "-100.939, 144.409, -58.3095, 0.23", "-102.1, 144.611, -59.074, 0.68", "-104.184, 144.954, -60.4484, 0.23", "-105.099, 145.111, -61.0335, 1.14", "-107.888, 145.553, -62.7492, 0.23", "-111.423, 146.076, -64.8023, 1.14", "-113.953, 146.437, -66.2097, 0.23", "-116.772, 146.81, -67.6295, 0.68", "-118.381, 147.013, -68.345, 0.23", "-121.789, 147.517, -69.755, 0.91", "-126.292, 148.301, -71.4908, 0.23", "-129.572, 149.06, -72.7632, 0.23", "-131.378, 149.528, -73.4971, 0.91", "-134.024, 150.334, -74.6003, 0.23", "-136.095, 151.075, -75.5205, 0.68", "-138.501, 152.053, -76.6221, 0.23", "-140.613, 152.939, -77.6927, 0.23", "-142.32, 153.558, -78.6448, 0.68", "-144.36, 154.291, -79.8746, 0.23", "-147.097, 155.211, -81.6329, 0.23", "-149.04, 155.751, -82.9074, 0.68", "-150.65, 156.116, -83.9937, 0.23", "-153.224, 156.447, -85.7906, 0.91" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-75.6975, 137.53, -43.5989, 0.23", "-77.8017, 139.845, -44.1849, 0.23", "-78.2963, 140.48, -44.3212, 0.68", "-79.6855, 142.377, -44.6707, 0.23", "-81.0331, 144.43, -45.1788, 0.23", "-81.93, 145.865, -45.6038, 0.68", "-83.0358, 147.671, -46.1861, 0.23", "-83.8201, 149.038, -46.6244, 0.68", "-85.4298, 151.87, -47.6494, 0.23", "-86.8488, 154.374, -48.6701, 0.91", "-88.653, 157.494, -50.0004, 0.23", "-89.7255, 159.29, -50.8094, 0.23", "-91.0301, 161.372, -51.8169, 0.91", "-92.5054, 163.667, -52.9736, 0.23", "-93.6433, 165.406, -53.8714, 0.68" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "56.3809, -20.1285, 4.51451, 0.45", "57.0965, -22.0835, 4.51583, 0.45", "57.4821, -23.0477, 4.55615, 0.91", "57.8943, -23.8277, 4.62948, 0.23", "58.2436, -24.4118, 4.69234, 0.91", "58.625, -24.9843, 4.76349, 0.91", "59.7223, -26.4892, 4.98267, 0.23", "60.4603, -27.385, 5.13602, 1.59", "62.0875, -29.2474, 5.44009, 0.45", "62.9933, -30.2358, 5.59276, 0.45", "64.1261, -31.4355, 5.76018, 1.36", "66.3049, -33.6632, 6.05268, 0.68", "67.753, -35.0868, 6.20541, 0.68", "68.9872, -36.2569, 6.31085, 1.14", "71.3897, -38.4304, 6.48213, 0.45", "71.9772, -38.9263, 6.5211, 1.14", "73.1715, -39.9038, 6.58595, 0.23", "74.4889, -40.9629, 6.64458, 1.36", "74.9335, -41.3238, 6.67019, 2.05", "76.3743, -42.555, 6.77682, 0.23", "77.804, -43.9024, 6.89666, 0.23", "78.9744, -45.0623, 7.01203, 1.14", "80.1556, -46.3283, 7.14094, 0.23", "80.8935, -47.1965, 7.24503, 1.36", "81.762, -48.3229, 7.36628, 1.59", "82.7309, -49.8204, 7.50336, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "56.3809, -20.1285, 4.51451, 0.68", "58.3236, -20.5088, 4.89844, 0.68", "59.2219, -20.6795, 5.06148, 0.23", "59.8182, -20.7863, 5.14775, 0.68", "60.5968, -20.9295, 5.25166, 0.23", "61.3048, -21.0853, 5.3443, 0.91", "62.6357, -21.4142, 5.52112, 0.23", "63.7459, -21.7082, 5.68828, 1.14", "65.9331, -22.274, 6.05787, 0.45", "66.593, -22.4312, 6.18354, 0.91", "68.1611, -22.7456, 6.50935, 0.23", "69.6978, -22.9861, 6.84861, 0.91", "71.0724, -23.1282, 7.17252, 0.23", "72.8003, -23.1907, 7.59524, 0.91", "74.6044, -23.1056, 8.04473, 0.23", "76.0519, -22.8971, 8.38384, 0.68", "76.8775, -22.678, 8.56151, 0.23", "77.6858, -22.3924, 8.70432, 1.14", "78.5139, -22.0553, 8.81155, 0.23", "79.735, -21.5101, 8.93107, 0.91", "80.7784, -21.0327, 8.99779, 0.23", "81.6636, -20.6281, 9.03921, 1.14", "82.5, -20.2599, 9.081, 0.23", "83.6307, -19.7727, 9.12401, 1.82", "84.2117, -19.5327, 9.14059, 2.27", "85.9204, -18.8389, 9.14178, 0.23", "86.2934, -18.7079, 9.14017, 0.23", "87.6545, -18.2811, 9.14025, 0.68", "88.8547, -17.9638, 9.16345, 0.23", "89.7894, -17.7723, 9.19426, 1.36", "91.2745, -17.5994, 9.27928, 0.23", "92.7739, -17.5638, 9.40972, 0.23", "93.3826, -17.5883, 9.47127, 1.14", "94.8667, -17.7614, 9.65444, 0.23", "95.6029, -17.8837, 9.77214, 0.68", "96.8046, -18.107, 9.99084, 0.23", "97.1235, -18.1731, 10.0528, 1.59", "97.6175, -18.2788, 10.1487, 0.23", "98.6038, -18.4919, 10.3402, 1.36", "100.017, -18.7721, 10.6151, 0.23", "101.325, -18.9761, 10.8699, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "44.2743, 20.6074, 6.33104, 0.23", "47.0822, 21.3765, 6.71534, 0.23", "48.9203, 21.9471, 7.01311, 0.23", "50.3501, 22.3919, 7.26968, 1.36", "52.3336, 23.0036, 7.59741, 1.36", "55.0538, 23.827, 8.03108, 0.23", "56.3325, 24.1986, 8.23413, 0.23", "58.8993, 24.9493, 8.6394, 0.91", "61.7101, 25.6701, 9.09144, 0.23", "63.9265, 26.1413, 9.46343, 1.59", "64.7433, 26.2759, 9.60272, 1.59", "67.6114, 26.6159, 10.1066, 0.45", "69.0775, 26.7276, 10.3342, 0.45", "71.4141, 26.8284, 10.6901, 0.23", "72.7522, 26.8572, 10.9027, 1.14", "74.684, 26.8786, 11.2581, 0.23", "75.9411, 26.8865, 11.4988, 0.68", "78.2592, 26.9305, 11.9583, 0.23", "80.9525, 27.0559, 12.5088, 1.14", "84.0531, 27.3417, 13.116, 0.23", "85.9715, 27.6039, 13.4731, 0.23", "87.0239, 27.8114, 13.6599, 1.59", "89.3435, 28.3887, 14.0417, 0.23", "90.4434, 28.7415, 14.1978, 0.23", "91.562, 29.1895, 14.3124, 0.68", "92.7888, 29.7525, 14.3501, 0.68", "95.3424, 30.934, 14.3077, 0.23", "96.482, 31.4101, 14.2685, 0.23", "97.511, 31.7902, 14.2185, 1.82", "98.109, 31.9743, 14.1978, 1.82", "100.16, 32.4782, 14.1886, 0.23", "101.88, 32.8246, 14.2159, 0.68", "104.426, 33.2463, 14.3276, 0.23", "105.431, 33.416, 14.3964, 0.91", "107.094, 33.7107, 14.5308, 0.23", "108.921, 34.0814, 14.6873, 1.14", "111.404, 34.6582, 14.9374, 0.23", "113.233, 35.1252, 15.0927, 1.14", "115.047, 35.6482, 15.2366, 0.23", "116.344, 36.04, 15.337, 0.91", "118.099, 36.6125, 15.4525, 0.23", "119.939, 37.246, 15.5624, 1.36", "121.414, 37.7556, 15.6536, 0.23", "123.192, 38.3974, 15.7651, 0.91", "126.132, 39.5174, 15.9413, 0.23", "127.792, 40.1578, 16.0513, 1.14", "128.705, 40.5098, 16.112, 0.23", "129.677, 40.8963, 16.1751, 1.14", "131.542, 41.6706, 16.3238, 0.23", "132.973, 42.3282, 16.3827, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "44.2743, 20.6074, 6.33104, 0.23", "46.5564, 22.0206, 6.22024, 0.23", "47.7726, 22.7894, 6.1686, 0.91", "49.6579, 23.9427, 6.12841, 0.23", "51.5745, 25.0173, 6.13884, 0.68", "53.5552, 26.0046, 6.23955, 0.68", "56.8799, 27.6159, 6.4987, 0.23", "58.512, 28.3574, 6.64195, 0.91", "60.3059, 29.1866, 6.8149, 0.91", "63.6581, 30.768, 7.16669, 0.23", "66.9045, 32.3782, 7.4996, 0.68", "70.0201, 33.9544, 7.75697, 0.23", "72.1152, 35.0483, 7.87765, 0.91", "74.4069, 36.3078, 7.941, 0.91", "76.4928, 37.5727, 7.8781, 0.23", "79.1202, 39.3948, 7.56871, 1.14", "81.5905, 41.3108, 7.0807, 0.23", "82.9958, 42.5165, 6.73997, 0.23", "84.0308, 43.5633, 6.46647, 0.23", "86.2362, 46.0844, 5.85211, 0.91", "88.6574, 49.1577, 5.18684, 0.45", "89.5099, 50.36, 4.95859, 0.45", "91.4129, 53.2822, 4.43537, 1.59", "94.1123, 57.4528, 3.79204, 0.45", "95.0621, 58.8968, 3.60492, 0.68", "95.7954, 60.0023, 3.50564, 0.23", "97.1815, 61.9347, 3.36516, 0.91", "99.3347, 64.6893, 3.13793, 0.23", "100.605, 66.1637, 3.00853, 0.23", "101.338, 66.9471, 2.93564, 1.36", "102.21, 67.9297, 2.84413, 1.36", "103.976, 69.998, 2.65633, 0.23", "105.837, 72.2818, 2.46623, 0.68", "107.437, 74.3163, 2.31487, 0.23", "109.854, 77.4342, 2.09621, 1.14", "112.301, 80.659, 1.8659, 0.23", "114.064, 83.0499, 1.69875, 0.91", "115.176, 84.6053, 1.60627, 1.59", "116.312, 86.204, 1.50414, 0.91", "118.018, 88.6797, 1.33395, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-209.776, -163.957, -39.1604, 0.23", "-213.636, -164.176, -38.2564, 0.23", "-214.837, -164.28, -37.9841, 1.14", "-219.005, -164.633, -37.0868, 0.23", "-220.594, -164.794, -36.7345, 0.91", "-225.713, -165.582, -35.6246, 0.23", "-228.266, -166.022, -35.0385, 0.91", "-233.582, -167.164, -33.8233, 0.23", "-236.938, -167.918, -33.0404, 0.91", "-240.007, -168.661, -32.3523, 0.23", "-243.828, -169.54, -31.461, 1.14", "-248.962, -170.772, -30.251, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-209.776, -163.957, -39.1604, 0.23", "-210.862, -166.439, -40.25, 0.23", "-211.592, -168.185, -41.0564, 1.59", "-212.647, -170.789, -42.3264, 0.23", "-213.365, -172.44, -43.2545, 1.36", "-213.958, -173.633, -43.9947, 0.23", "-214.582, -174.713, -44.7163, 0.23", "-215.462, -175.786, -45.568, 1.36", "-216.65, -176.839, -46.5798, 2.27", "-218.047, -177.754, -47.6107, 0.23", "-219.332, -178.363, -48.3875, 1.14", "-220.644, -178.821, -49.0507, 0.23", "-222.221, -179.242, -49.6896, 1.14", "-222.867, -179.339, -49.8667, 1.14", "-224.193, -179.435, -50.1219, 0.23", "-224.813, -179.442, -50.2122, 0.23", "-225.637, -179.323, -50.2976, 1.36", "-226.216, -179.114, -50.2986, 1.36", "-228.557, -177.988, -50.1364, 0.23", "-229.037, -177.732, -50.0867, 0.23", "-230.515, -176.856, -49.9002, 0.23", "-232.329, -175.735, -49.6881, 1.14", "-233.705, -174.915, -49.5472, 0.23", "-235.879, -173.874, -49.3987, 0.23", "-237.124, -173.477, -49.4121, 1.36", "-239.051, -172.964, -49.4661, 0.23", "-240.714, -172.637, -49.5662, 1.14", "-241.97, -172.445, -49.7536, 1.14", "-244.889, -172.164, -50.4053, 0.23", "-247.37, -172.255, -51.1153, 1.14" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-8.89629, -37.0604, -0.152418, 0.23", "-9.07273, -38.4555, 0.900069, 0.23", "-9.15411, -38.8283, 1.13882, 0.23", "-9.34982, -39.597, 1.61937, 0.23", "-9.49023, -40.176, 1.9545, 1.14", "-9.70634, -41.0867, 2.44263, 0.23", "-9.8791, -41.8145, 2.81671, 1.14", "-10.1521, -42.9559, 3.31457, 0.23", "-10.4214, -44.1193, 3.80514, 0.23", "-10.6247, -45.0873, 4.19978, 1.36", "-11.0431, -47.02, 4.94967, 0.23", "-11.1759, -47.6269, 5.16459, 0.23", "-11.3531, -48.492, 5.4595, 0.91", "-11.4308, -48.9226, 5.6011, 0.91", "-11.6293, -50.0736, 5.96004, 0.23", "-11.7861, -50.9725, 6.24926, 0.23", "-11.9209, -51.9739, 6.58038, 0.68", "-12.1226, -53.8694, 7.24992, 0.23", "-12.1627, -54.4357, 7.47135, 1.36", "-12.1851, -54.9119, 7.66797, 1.36", "-12.1923, -56.1211, 8.18484, 0.45", "-12.1357, -57.1313, 8.62528, 1.14", "-12.0219, -58.288, 9.16312, 0.23", "-11.8958, -59.1406, 9.56159, 0.45", "-11.6978, -60.4049, 10.1679, 0.23", "-11.5332, -61.3865, 10.636, 0.23", "-11.392, -62.249, 11.0564, 0.91", "-11.2606, -63.5008, 11.6694, 0.23", "-11.1638, -64.7604, 12.2774, 0.91", "-11.1275, -65.4264, 12.5899, 0.23", "-11.0994, -66.4137, 13.0565, 1.14", "-11.1781, -67.6189, 13.618, 0.23", "-11.3294, -68.6338, 14.0555, 0.91", "-11.5206, -69.336, 14.327, 0.23", "-11.9399, -70.6364, 14.8232, 0.23", "-12.1264, -71.1604, 15.0137, 0.91", "-12.8305, -72.9143, 15.6258, 0.23", "-13.1925, -73.7823, 15.8991, 1.14", "-14.0191, -75.6176, 16.4707, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.89629, -37.0604, -0.152418, 1.59", "-8.98691, -38.7589, -0.18635, 1.59", "-9.12623, -41.3703, -0.238516, 2.27" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-9.12623, -41.3703, -0.238516, 0.23", "-8.6024, -44.6567, 0.174762, 0.23", "-8.20241, -46.9614, 0.452668, 0.45", "-7.83927, -48.6433, 0.640986, 1.36", "-7.29009, -50.8519, 0.815928, 1.36", "-6.63017, -53.3422, 0.968639, 0.91", "-5.93811, -55.8368, 1.07411, 1.14", "-5.51773, -57.3613, 1.09718, 1.14", "-4.45743, -61.1768, 1.06102, 0.91", "-3.76639, -63.68, 0.980293, 1.14", "-3.32843, -65.3421, 0.89918, 1.14", "-2.8164, -67.3891, 0.779398, 0.23", "-2.25338, -69.9286, 0.624861, 0.23", "-1.99866, -71.3264, 0.550769, 0.23", "-1.75465, -73.0843, 0.483102, 2.05", "-1.40809, -75.9076, 0.44471, 1.59", "-1.19634, -77.6783, 0.435615, 1.59", "-0.951478, -79.667, 0.451258, 0.45", "-0.671477, -81.6396, 0.496778, 1.14", "-0.378697, -83.6232, 0.568347, 1.14", "0.012901, -86.4492, 0.681716, 1.59", "0.277942, -88.4237, 0.737681, 1.14", "0.673276, -91.8336, 0.797853, 0.68", "0.872284, -93.733, 0.815241, 1.14", "1.11062, -96.2962, 0.821434, 0.23", "1.29846, -98.6956, 0.815946, 1.59", "1.39589, -100.816, 0.804044, 0.68", "1.44435, -102.39, 0.79194, 0.91", "1.4887, -104.672, 0.772046, 0.91", "1.56084, -108.093, 0.749273, 1.36", "1.68473, -111.523, 0.764171, 0.91", "1.96112, -116.161, 0.83702, 1.14", "2.12596, -118.449, 0.911093, 0.68", "2.31178, -120.712, 1.00314, 1.14", "2.4991, -123.567, 1.13173, 0.23", "2.60534, -125.885, 1.24326, 0.68", "2.66405, -128.493, 1.37202, 0.45", "2.66994, -130.12, 1.44143, 2.05", "2.57343, -134.195, 1.58189, 0.91", "2.37307, -138.955, 1.7085, 0.45", "2.25924, -140.794, 1.74169, 0.91", "2.06702, -143.104, 1.75644, 0.91", "1.80989, -145.705, 1.74219, 0.23", "1.6764, -147.129, 1.72093, 0.91", "1.47004, -149.976, 1.6938, 0.45", "1.35078, -152.577, 1.71278, 1.36", "1.27398, -154.843, 1.76656, 0.68", "1.24721, -155.82, 1.80665, 1.14", "1.21797, -157.847, 1.92486, 0.23", "1.26734, -159.57, 2.04292, 0.68", "1.43292, -161.598, 2.19384, 0.23", "1.59688, -163.025, 2.30105, 0.91", "1.83684, -164.727, 2.42744, 0.91", "2.38331, -168.657, 2.68531, 0.23", "2.71021, -171.372, 2.83019, 1.36", "3.15117, -175.634, 3.05551, 0.23", "3.33873, -177.678, 3.15781, 1.14", "3.4053, -178.559, 3.20354, 1.14", "3.56813, -181.202, 3.36844, 0.23", "3.65987, -183.579, 3.53744, 0.91", "3.68382, -185.069, 3.64991, 1.82", "3.68888, -186.485, 3.77833, 1.82", "3.74826, -190.179, 4.14756, 0.45", "3.80029, -192.023, 4.35741, 1.14", "3.86032, -193.176, 4.51081, 1.14", "4.00086, -195.144, 4.78808, 0.23", "4.26698, -198.08, 5.19921, 0.23", "4.39129, -199.227, 5.36258, 1.36", "4.58605, -200.726, 5.55825, 1.36", "4.94692, -203.29, 5.83431, 0.23", "5.28319, -205.538, 6.06937, 0.91", "5.54385, -207.097, 6.22286, 0.91", "6.1151, -210.173, 6.49185, 0.23", "6.51281, -212.26, 6.65703, 0.45", "7.00145, -214.773, 6.83745, 0.91", "7.47441, -217.08, 7.00121, 0.45", "7.81198, -218.884, 7.13316, 1.14", "8.03122, -220.304, 7.25247, 1.14", "8.34238, -222.6, 7.48316, 0.23", "8.4451, -223.487, 7.5839, 1.14", "8.63897, -225.226, 7.79395, 1.14", "9.04668, -228.946, 8.2415, 0.23", "9.39774, -232.134, 8.64243, 0.68", "9.60802, -233.864, 8.86144, 1.59", "9.77266, -234.975, 9.00299, 2.05", "10.5271, -238.959, 9.49049, 0.23", "10.8665, -240.352, 9.665, 1.14", "11.2013, -241.388, 9.79548, 1.59", "12.1649, -243.767, 10.0688, 0.45", "13.0616, -245.762, 10.3274, 0.91", "14.2111, -248.139, 10.7043, 0.23", "15.2206, -250.092, 11.058, 1.14", "15.8533, -251.231, 11.2887, 1.14", "17.9696, -254.848, 12.0741, 0.23", "19.3328, -257.02, 12.5738, 0.23", "20.2726, -258.484, 12.9089, 0.68", "20.7967, -259.289, 13.0834, 0.68", "22.0142, -261.234, 13.4539, 0.23", "23.2984, -263.301, 13.828, 1.36", "24.9055, -265.905, 14.2371, 0.45", "26.0246, -267.704, 14.434, 1.14", "26.816, -269.014, 14.5374, 0.23", "27.7998, -270.757, 14.6635, 2.5" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.12623, -41.3703, -0.238516, 0.91", "-11.4554, -44.9185, -0.198879, 0.91", "-13.2503, -47.6527, -0.168337, 0.91", "-14.847, -50.0852, -0.141163, 0.68", "-15.789, -51.5201, -0.125134, 1.36", "-17.1719, -53.6268, -0.101602, 1.59" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "27.7998, -270.757, 14.6635, 0.23", "30.0526, -270.741, 14.6518, 0.23", "31.6221, -270.735, 14.6614, 0.91", "33.7317, -270.745, 14.694, 0.23", "35.6116, -270.754, 14.7231, 1.14", "37.6718, -270.764, 14.7549, 0.23", "38.2261, -270.767, 14.7635, 0.68", "39.2432, -270.681, 14.8244, 0.23", "39.6643, -270.625, 14.8447, 0.68" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "27.7998, -270.757, 14.6635, 0.23", "26.9055, -274.24, 14.6743, 0.23", "26.6576, -275.329, 14.6997, 0.91", "26.3541, -276.755, 14.7771, 0.45", "26.1758, -277.589, 14.8396, 1.36", "25.7235, -279.474, 14.9792, 0.23", "25.4411, -280.627, 15.0811, 1.14", "24.7137, -283.593, 15.408, 0.23", "24.1823, -285.555, 15.6844, 0.23", "23.7127, -287.286, 15.9619, 1.59", "23.1345, -289.635, 16.3378, 0.91", "22.6682, -291.892, 16.6955, 0.23", "22.388, -293.697, 17.0109, 1.14", "22.1276, -296.412, 17.509, 0.23", "22.0541, -298.315, 17.8525, 0.91", "22.0883, -300.744, 18.2827, 0.23", "22.1932, -302.694, 18.6107, 1.14", "22.3551, -304.935, 18.9191, 0.23", "22.5328, -306.837, 19.1385, 1.36", "22.5876, -307.38, 19.1839, 1.36", "22.9004, -311.007, 19.3917, 0.23", "23.0249, -312.963, 19.3953, 0.91", "23.1462, -315.233, 19.2394, 0.23", "23.2625, -317.139, 18.9854, 1.36", "23.3792, -318.21, 18.7896, 1.36", "24.0337, -321.93, 17.9213, 0.23", "24.7313, -324.68, 17.1301, 1.14", "25.3601, -326.64, 16.4763, 0.23", "25.8042, -327.893, 16.0152, 1.36", "26.8016, -330.42, 14.9917, 0.23", "27.717, -332.409, 14.1244, 1.82", "28.0626, -332.968, 13.8563, 1.82", "28.689, -333.75, 13.5183, 0.45" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-17.1719, -53.6268, -0.101602, 0.68", "-18.8368, -54.0607, -1.47614, 0.68", "-20.4997, -54.3831, -2.96222, 1.14", "-22.3587, -54.7657, -4.6508, 0.23", "-23.5236, -55.0714, -5.72722, 0.23", "-24.7184, -55.53, -6.76063, 1.14", "-25.6916, -55.9396, -7.50825, 0.23", "-26.8502, -56.4121, -8.27875, 0.45", "-27.6901, -56.7665, -8.7679, 0.45", "-28.9307, -57.2688, -9.4501, 1.14", "-31.6607, -58.3378, -10.914, 0.23", "-33.6788, -59.0177, -11.9805, 0.91", "-34.9787, -59.2928, -12.6785, 0.91", "-36.3215, -59.3139, -13.4552, 0.45", "-37.7909, -59.0494, -14.4204, 0.45", "-38.8544, -58.5603, -15.2577, 0.45", "-39.752, -57.6796, -16.2468, 0.91", "-40.6306, -56.1582, -17.7093, 0.45", "-41.0293, -55.0361, -18.6163, 0.45", "-41.2259, -54.007, -19.2874, 0.45", "-41.4039, -52.8544, -19.8129, 0.45", "-40.7327, -53.7755, -19.7548, 1.36", "-39.6619, -54.5972, -19.9279, 1.36", "-38.4945, -55.6055, -20.0752, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-17.1719, -53.6268, -0.101602, 0.23", "-17.4435, -56.0388, 0.242289, 0.23", "-17.5435, -57.1579, 0.405246, 0.91", "-17.6291, -58.6672, 0.639026, 0.91", "-17.6878, -60.4315, 0.903992, 0.91", "-17.6999, -62.4021, 1.20264, 0.23", "-17.6603, -64.645, 1.55102, 0.68", "-17.5497, -67.0535, 1.94318, 0.45", "-17.3728, -69.7398, 2.38766, 0.91", "-17.197, -71.8932, 2.73792, 0.68", "-16.9746, -74.3559, 3.11307, 1.59", "-16.5362, -79.4535, 3.88246, 0.45", "-16.3423, -81.6253, 4.19892, 0.45", "-16.2159, -83.0928, 4.40386, 1.59", "-16.135, -84.3074, 4.5581, 1.59", "-16.0425, -87.4566, 4.89754, 0.23", "-16.0788, -89.647, 5.09218, 0.68", "-16.2717, -92.8018, 5.32617, 0.23", "-16.456, -94.7286, 5.45292, 1.36", "-16.8582, -97.9706, 5.6401, 0.45", "-17.5823, -102.491, 5.86658, 0.45", "-18.0084, -104.654, 5.96145, 0.45", "-18.383, -106.285, 6.01376, 1.36", "-18.8677, -108.017, 6.06434, 1.59", "-19.4014, -109.68, 6.12047, 0.23", "-19.929, -111.157, 6.18193, 0.45", "-20.9768, -114.008, 6.32099, 0.23", "-21.3529, -115.087, 6.39399, 0.23", "-22.0286, -117.028, 6.58452, 1.14", "-23.1462, -120.18, 6.98371, 0.23", "-23.8158, -122.048, 7.25885, 1.14", "-24.6251, -124.341, 7.66517, 0.23", "-25.3538, -126.373, 8.06931, 0.45", "-26.0017, -128.267, 8.52484, 0.23", "-26.5317, -129.797, 8.94284, 1.14", "-26.7973, -130.553, 9.17633, 1.14", "-27.4671, -132.375, 9.76719, 0.23", "-27.8608, -133.381, 10.1088, 0.91", "-28.7043, -135.555, 10.804, 0.23", "-29.1661, -136.955, 11.2614, 1.14", "-29.667, -138.728, 11.841, 0.23", "-29.9342, -139.992, 12.223, 0.91", "-30.0221, -140.683, 12.4039, 0.23", "-30.0798, -141.655, 12.6447, 0.68", "-30.1641, -144.057, 13.1624, 0.23", "-30.1934, -145.491, 13.4688, 0.68", "-30.2802, -147.67, 13.8946, 0.23", "-30.379, -149.153, 14.2119, 0.91", "-30.8157, -152.956, 15.0086, 0.23", "-31.0148, -154.461, 15.3242, 0.68", "-31.2641, -155.994, 15.6351, 0.23", "-31.58, -157.581, 15.9831, 0.91", "-32.4153, -160.801, 16.742, 0.23", "-33.1002, -163.011, 17.2794, 0.91" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "28.689, -333.75, 13.5183, 0.23", "29.5012, -334.891, 13.606, 0.23", "30.499, -336.211, 13.6641, 0.91", "31.4529, -337.357, 13.7099, 0.23", "32.5413, -338.687, 13.7159, 0.91", "33.2711, -339.591, 13.707, 0.23", "34.265, -340.823, 13.6521, 0.68", "35.0828, -341.835, 13.5439, 0.23", "36.0488, -342.974, 13.3493, 0.91", "37.0485, -344.06, 13.0819, 0.23", "37.8823, -344.947, 12.797, 0.91", "39.0521, -346.274, 12.3225, 0.23", "40.0706, -347.46, 11.8615, 1.14", "41.4813, -349.176, 11.1682, 0.23", "42.5214, -350.457, 10.6082, 0.68", "43.5217, -351.622, 10.0764, 0.23", "44.675, -353.006, 9.38908, 1.14" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "28.689, -333.75, 13.5183, 0.23", "29.2548, -334.564, 13.4383, 0.23", "29.9536, -335.568, 13.3394, 0.68", "30.2936, -336.056, 13.2912, 0.23", "31.1883, -337.342, 13.1646, 0.91" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_3", "dend_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_3", "dend_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L5_SBC_f02100dc02_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: dend_24
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_3
create dend_21
public dend_21
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_4
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_6
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.49999929751125366)
    connect dend_3(0), soma_0(0.49999929751125366)
    connect dend_0(0), soma_0(0.49999929751125366)
    connect axon_0(0), soma_0(1.0)
    connect dend_34(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.0539, -10.2039, 0.0, 4.14336 ) }
    soma_0 { pt3dadd( -1.01121, -9.20625, 0.0, 7.24872 ) }
    soma_0 { pt3dadd( -0.968511, -8.20857, 0.0, 9.44401 ) }
    soma_0 { pt3dadd( -0.925815, -7.2109, 0.0, 10.5422 ) }
    soma_0 { pt3dadd( -0.88312, -6.21322, 0.0, 11.4092 ) }
    soma_0 { pt3dadd( -0.840424, -5.21554, 0.0, 11.9642 ) }
    soma_0 { pt3dadd( -0.797728, -4.21787, 0.0, 12.4342 ) }
    soma_0 { pt3dadd( -0.755032, -3.22019, 0.0, 12.6614 ) }
    soma_0 { pt3dadd( -0.712337, -2.22251, 0.0, 12.6364 ) }
    soma_0 { pt3dadd( -0.669641, -1.22484, 0.0, 12.5104 ) }
    soma_0 { pt3dadd( -0.626945, -0.227159, 0.0, 12.2671 ) }
    soma_0 { pt3dadd( -0.584249, 0.770517, 0.0, 12.0239 ) }
    soma_0 { pt3dadd( -0.541554, 1.76819, 0.0, 11.4645 ) }
    soma_0 { pt3dadd( -0.498858, 2.76587, 0.0, 10.6882 ) }
    soma_0 { pt3dadd( -0.456162, 3.76355, 0.0, 9.91399 ) }
    soma_0 { pt3dadd( -0.413466, 4.76122, 0.0, 9.47101 ) }
    soma_0 { pt3dadd( -0.370771, 5.7589, 0.0, 9.20688 ) }
    soma_0 { pt3dadd( -0.328075, 6.75658, 0.0, 8.75449 ) }
    soma_0 { pt3dadd( -0.285379, 7.75425, 0.0, 8.25522 ) }
    soma_0 { pt3dadd( -0.242683, 8.75193, 0.0, 6.57349 ) }
    soma_0 { pt3dadd( -0.199988, 9.74961, 0.0, 3.81 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.284736, 7.14994, 0.16, 6.82 ) }
    dend_24 { pt3dadd( 0.791615, 8.84031, 0.527359, 6.82 ) }
    dend_24 { pt3dadd( 1.59696, 11.526, 1.11103, 6.59 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 24/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.66527, -9.6493, 1.27, 5.68 ) }
    dend_3 { pt3dadd( -3.36419, -11.9145, 0.668817, 3.64 ) }
    dend_3 { pt3dadd( -4.04361, -14.1164, 0.0844088, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.30527, 7.10119, 0.0100002, 1.59 ) }
    dend_0 { pt3dadd( -5.02992, 7.69779, -0.0240922, 1.59 ) }
    dend_0 { pt3dadd( -7.74067, 8.6355, -0.0776773, 1.36 ) }
    dend_0 { pt3dadd( -9.16799, 9.12924, -0.105892, 1.36 ) }
    dend_0 { pt3dadd( -12.4851, 10.2767, -0.171463, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.199988, 9.74961, 0.0, 0.483274 ) }
    axon_0 { pt3dadd( 0.441352, 24.7359, 0.0, 0.483274 ) }
    axon_0 { pt3dadd( 1.08269, 39.7222, 0.0, 0.483274 ) }
    // Section: dend_34, id: dend_34, parent: dend_24 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 1.59696, 11.526, 1.11103, 1.14 ) }
    dend_34 { pt3dadd( -0.0836726, 16.0407, -0.257514, 1.14 ) }
    dend_34 { pt3dadd( -0.837611, 18.066, -0.871449, 1.14 ) }
    dend_34 { pt3dadd( -1.32536, 19.3762, -1.26862, 1.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 39/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.59696, 11.526, 1.11103, 0.91 ) }
    dend_25 { pt3dadd( 4.48376, 12.2916, 0.763479, 0.91 ) }
    dend_25 { pt3dadd( 5.82689, 12.6478, 0.601774, 0.91 ) }
    // Section: dend_21, id: dend_21, parent: dend_3 (entry count 42/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.04361, -14.1164, 0.0844088, 0.91 ) }
    dend_21 { pt3dadd( -5.76842, -14.3298, -0.039156, 0.91 ) }
    dend_21 { pt3dadd( -7.88008, -14.3627, -0.0794573, 0.91 ) }
    dend_21 { pt3dadd( -9.78826, -14.3018, -0.0950774, 1.14 ) }
    dend_21 { pt3dadd( -11.1799, -14.2483, -0.123403, 0.91 ) }
    dend_21 { pt3dadd( -13.7139, -14.1923, -0.168124, 0.68 ) }
    dend_21 { pt3dadd( -14.9839, -14.205, -0.186364, 0.91 ) }
    dend_21 { pt3dadd( -17.382, -14.2203, -0.193865, 1.36 ) }
    dend_21 { pt3dadd( -19.5954, -14.2593, -0.142914, 0.68 ) }
    dend_21 { pt3dadd( -21.1246, -14.3558, -0.0899512, 0.68 ) }
    dend_21 { pt3dadd( -23.0709, -14.6056, -0.00286518, 1.59 ) }
    dend_21 { pt3dadd( -25.6228, -15.0803, 0.139905, 1.14 ) }
    dend_21 { pt3dadd( -26.7388, -15.3092, 0.220457, 0.68 ) }
    dend_21 { pt3dadd( -29.0734, -15.8065, 0.397287, 1.14 ) }
    dend_21 { pt3dadd( -30.939, -16.2065, 0.542099, 0.23 ) }
    dend_21 { pt3dadd( -32.4347, -16.5276, 0.650375, 1.14 ) }
    dend_21 { pt3dadd( -34.2975, -16.9569, 0.742752, 0.91 ) }
    dend_21 { pt3dadd( -37.449, -17.788, 0.841511, 0.23 ) }
    dend_21 { pt3dadd( -38.9962, -18.2918, 0.854533, 0.91 ) }
    dend_21 { pt3dadd( -40.363, -18.8674, 0.820476, 0.91 ) }
    dend_21 { pt3dadd( -41.2674, -19.4007, 0.767009, 1.14 ) }
    dend_21 { pt3dadd( -42.4892, -20.5317, 0.655777, 0.45 ) }
    dend_21 { pt3dadd( -43.1836, -21.5115, 0.572809, 0.45 ) }
    dend_21 { pt3dadd( -43.8348, -22.734, 0.485339, 0.91 ) }
    dend_21 { pt3dadd( -44.4061, -24.0162, 0.421105, 0.45 ) }
    dend_21 { pt3dadd( -44.9138, -25.3287, 0.379803, 1.59 ) }
    dend_21 { pt3dadd( -45.8004, -27.9122, 0.313719, 0.45 ) }
    dend_21 { pt3dadd( -46.4352, -30.0528, 0.27236, 1.82 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.04361, -14.1164, 0.0844088, 2.95 ) }
    dend_4 { pt3dadd( -4.82359, -19.4863, 0.299874, 2.95 ) }
    dend_4 { pt3dadd( -5.61889, -24.9618, 0.519573, 2.95 ) }
    dend_4 { pt3dadd( -5.95803, -27.2968, 0.61326, 3.41 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -12.4851, 10.2767, -0.171463, 1.14 ) }
    dend_2 { pt3dadd( -14.2591, 8.65631, 0.219756, 1.14 ) }
    dend_2 { pt3dadd( -15.4462, 7.38393, 0.459898, 0.45 ) }
    dend_2 { pt3dadd( -16.5357, 6.14747, 0.679954, 1.59 ) }
    dend_2 { pt3dadd( -18.7349, 3.7111, 1.11554, 0.45 ) }
    dend_2 { pt3dadd( -20.3793, 1.96795, 1.37666, 0.91 ) }
    dend_2 { pt3dadd( -21.1808, 1.16542, 1.48096, 1.59 ) }
    dend_2 { pt3dadd( -23.1139, -0.844285, 1.71403, 0.23 ) }
    dend_2 { pt3dadd( -23.9199, -1.61043, 1.74837, 0.23 ) }
    dend_2 { pt3dadd( -24.8216, -2.24326, 1.62855, 0.23 ) }
    dend_2 { pt3dadd( -26.6133, -2.55977, 1.12786, 0.68 ) }
    dend_2 { pt3dadd( -28.3717, -2.56797, 0.73774, 0.68 ) }
    dend_2 { pt3dadd( -29.6765, -2.60467, 0.571018, 0.68 ) }
    dend_2 { pt3dadd( -31.7742, -2.76331, 0.510403, 1.59 ) }
    dend_2 { pt3dadd( -33.3988, -3.0581, 0.608472, 1.59 ) }
    dend_2 { pt3dadd( -35.7023, -3.61618, 0.910246, 0.23 ) }
    dend_2 { pt3dadd( -37.7641, -4.20498, 1.29834, 0.91 ) }
    dend_2 { pt3dadd( -39.7036, -4.75769, 1.72051, 0.91 ) }
    dend_2 { pt3dadd( -41.3538, -5.18048, 2.13152, 0.91 ) }
    dend_2 { pt3dadd( -43.46, -5.63526, 2.66442, 0.23 ) }
    dend_2 { pt3dadd( -46.4371, -6.1866, 3.37355, 0.68 ) }
    dend_2 { pt3dadd( -48.1347, -6.43023, 3.74382, 0.68 ) }
    dend_2 { pt3dadd( -50.3985, -6.67181, 4.18487, 0.23 ) }
    dend_2 { pt3dadd( -52.4956, -6.83025, 4.54924, 0.45 ) }
    dend_2 { pt3dadd( -55.1379, -6.99206, 4.9703, 0.45 ) }
    dend_2 { pt3dadd( -56.8246, -7.06841, 5.22201, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_2 { pt3dadd( -58.5123, -7.13137, 5.46836, 0.23 ) }
    dend_2 { pt3dadd( -60.9448, -7.19911, 5.82053, 1.36 ) }
    dend_2 { pt3dadd( -63.0722, -7.28511, 6.12873, 0.45 ) }
    dend_2 { pt3dadd( -65.9043, -7.40414, 6.54797, 0.91 ) }
    dend_2 { pt3dadd( -67.6441, -7.51679, 6.84651, 0.91 ) }
    dend_2 { pt3dadd( -69.0665, -7.61894, 7.10547, 1.36 ) }
    dend_2 { pt3dadd( -71.1582, -7.7779, 7.51, 0.23 ) }
    dend_2 { pt3dadd( -73.5451, -7.95403, 7.99346, 0.23 ) }
    dend_2 { pt3dadd( -74.7435, -8.06242, 8.23481, 0.91 ) }
    dend_2 { pt3dadd( -77.9359, -8.52936, 8.91362, 0.23 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -12.4851, 10.2767, -0.171463, 0.23 ) }
    dend_1 { pt3dadd( -13.8123, 10.5621, 0.125896, 0.23 ) }
    dend_1 { pt3dadd( -15.1783, 10.8485, 0.469189, 0.68 ) }
    dend_1 { pt3dadd( -16.4228, 11.1013, 0.842304, 0.23 ) }
    dend_1 { pt3dadd( -16.969, 11.2065, 1.01617, 0.45 ) }
    dend_1 { pt3dadd( -18.1118, 11.4288, 1.42445, 0.91 ) }
    dend_1 { pt3dadd( -19.3036, 11.6775, 1.87313, 0.23 ) }
    dend_1 { pt3dadd( -19.8243, 11.7772, 2.11117, 0.68 ) }
    dend_1 { pt3dadd( -20.5502, 11.9704, 2.53787, 0.23 ) }
    dend_1 { pt3dadd( -20.9201, 12.0965, 2.80388, 0.68 ) }
    dend_1 { pt3dadd( -21.7409, 12.4278, 3.42768, 0.23 ) }
    dend_1 { pt3dadd( -22.1693, 12.5985, 3.75137, 0.68 ) }
    dend_1 { pt3dadd( -23.0859, 12.9092, 4.41932, 0.23 ) }
    dend_1 { pt3dadd( -24.0319, 13.1643, 5.05211, 0.68 ) }
    dend_1 { pt3dadd( -25.7067, 13.5393, 6.07981, 0.23 ) }
    dend_1 { pt3dadd( -26.5033, 13.6844, 6.51442, 0.45 ) }
    dend_1 { pt3dadd( -27.8507, 13.8493, 7.10464, 0.23 ) }
    dend_1 { pt3dadd( -28.7686, 13.9198, 7.39884, 0.23 ) }
    dend_1 { pt3dadd( -29.6448, 13.9968, 7.55743, 0.23 ) }
    dend_1 { pt3dadd( -30.4473, 14.0979, 7.6284, 0.23 ) }
    dend_1 { pt3dadd( -31.3053, 14.3021, 7.65444, 0.23 ) }
    dend_1 { pt3dadd( -32.2861, 14.6495, 7.67521, 0.23 ) }
    dend_1 { pt3dadd( -33.7278, 15.3197, 7.70859, 0.45 ) }
    dend_1 { pt3dadd( -35.2761, 16.1292, 7.77188, 0.23 ) }
    dend_1 { pt3dadd( -36.158, 16.5986, 7.82149, 0.68 ) }
    dend_1 { pt3dadd( -37.5063, 17.2642, 7.90682, 0.23 ) }
    dend_1 { pt3dadd( -38.9151, 17.931, 8.02032, 0.23 ) }
    dend_1 { pt3dadd( -40.3978, 18.6094, 8.13441, 0.23 ) }
    dend_1 { pt3dadd( -41.8523, 19.2492, 8.24885, 0.23 ) }
    dend_1 { pt3dadd( -43.4336, 19.8681, 8.36245, 0.23 ) }
    dend_1 { pt3dadd( -45.3488, 20.5225, 8.4684, 0.45 ) }
    dend_1 { pt3dadd( -45.8756, 20.6762, 8.48038, 0.23 ) }
    dend_1 { pt3dadd( -46.6906, 20.8748, 8.48779, 0.68 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.08269, 39.7222, 0.0, 0.483274 ) }
    axon_1 { pt3dadd( 1.72403, 54.7085, 0.0, 0.483274 ) }
    axon_1 { pt3dadd( 2.36537, 69.6947, 0.0, 0.483274 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 46/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -1.32536, 19.3762, -1.26862, 0.23 ) }
    dend_40 { pt3dadd( -1.84531, 19.2952, 0.495104, 0.23 ) }
    dend_40 { pt3dadd( -1.84389, 18.6653, 1.51009, 0.91 ) }
    dend_40 { pt3dadd( -1.79562, 17.2597, 3.067, 0.23 ) }
    dend_40 { pt3dadd( -1.96119, 16.1651, 4.38378, 0.23 ) }
    dend_40 { pt3dadd( -2.30489, 15.4631, 5.70001, 0.23 ) }
    dend_40 { pt3dadd( -2.66492, 15.0752, 6.71712, 0.91 ) }
    dend_40 { pt3dadd( -3.47004, 14.5071, 8.02734, 0.23 ) }
    dend_40 { pt3dadd( -3.9503, 14.3293, 8.56511, 0.23 ) }
    dend_40 { pt3dadd( -5.26474, 13.9533, 9.89465, 0.91 ) }
    dend_40 { pt3dadd( -6.85026, 13.6466, 11.4607, 0.23 ) }
    dend_40 { pt3dadd( -8.64873, 13.4306, 13.0703, 0.23 ) }
    dend_40 { pt3dadd( -10.5812, 13.346, 14.7348, 0.68 ) }
    dend_40 { pt3dadd( -13.809, 13.3278, 17.4079, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 60/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.32536, 19.3762, -1.26862, 0.68 ) }
    dend_35 { pt3dadd( -0.94154, 22.1203, -1.47563, 0.68 ) }
    dend_35 { pt3dadd( -0.682067, 24.0512, -1.57696, 0.68 ) }
    dend_35 { pt3dadd( -0.549437, 25.1482, -1.62081, 1.36 ) }
    dend_35 { pt3dadd( -0.180416, 28.2188, -1.71803, 0.68 ) }
    dend_35 { pt3dadd( -0.0604722, 29.3482, -1.76504, 0.68 ) }
    dend_35 { pt3dadd( 0.104145, 31.6679, -1.89432, 1.59 ) }
    dend_35 { pt3dadd( 0.139447, 32.7722, -1.93593, 1.59 ) }
    dend_35 { pt3dadd( 0.0730365, 35.5686, -1.99197, 0.23 ) }
    dend_35 { pt3dadd( -0.093187, 37.0164, -2.02305, 0.23 ) }
    dend_35 { pt3dadd( -0.462847, 38.7514, -2.07416, 1.14 ) }
    dend_35 { pt3dadd( -0.97863, 40.6982, -2.14273, 0.91 ) }
    dend_35 { pt3dadd( -1.40571, 42.0971, -2.20375, 0.91 ) }
    dend_35 { pt3dadd( -1.95593, 43.8365, -2.27304, 1.36 ) }
    dend_35 { pt3dadd( -2.59341, 45.6489, -2.33219, 0.68 ) }
    dend_35 { pt3dadd( -3.26357, 47.4835, -2.37516, 1.14 ) }
    dend_35 { pt3dadd( -3.90768, 49.349, -2.38136, 0.45 ) }
    dend_35 { pt3dadd( -4.29892, 50.6762, -2.39042, 1.59 ) }
    dend_35 { pt3dadd( -4.77581, 52.5652, -2.48376, 2.27 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 79/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.82689, 12.6478, 0.601774, 0.91 ) }
    dend_33 { pt3dadd( 6.47775, 12.4894, -0.346982, 0.91 ) }
    dend_33 { pt3dadd( 7.40101, 11.9382, -1.71013, 0.91 ) }
    dend_33 { pt3dadd( 8.93819, 10.893, -3.70679, 0.68 ) }
    dend_33 { pt3dadd( 9.65508, 10.3609, -4.54922, 0.68 ) }
    dend_33 { pt3dadd( 10.4136, 9.72593, -5.36866, 1.14 ) }
    dend_33 { pt3dadd( 11.6072, 8.59669, -6.55119, 0.68 ) }
    dend_33 { pt3dadd( 12.9398, 7.0149, -7.69392, 0.23 ) }
    dend_33 { pt3dadd( 13.5793, 5.98136, -8.16135, 0.23 ) }
    dend_33 { pt3dadd( 13.8999, 5.29873, -8.36557, 0.23 ) }
    dend_33 { pt3dadd( 14.3956, 3.96305, -8.68506, 1.14 ) }
    dend_33 { pt3dadd( 14.8663, 2.65365, -8.94841, 1.82 ) }
    dend_33 { pt3dadd( 15.3237, 1.2434, -9.16175, 0.68 ) }
    dend_33 { pt3dadd( 15.7216, -0.541241, -9.34552, 1.14 ) }
    dend_33 { pt3dadd( 15.9256, -1.94313, -9.51065, 0.45 ) }
    dend_33 { pt3dadd( 16.0427, -3.08789, -9.65373, 0.45 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.82689, 12.6478, 0.601774, 1.14 ) }
    dend_26 { pt3dadd( 8.42534, 12.8469, 0.851055, 1.14 ) }
    dend_26 { pt3dadd( 9.88709, 12.9589, 0.991286, 1.59 ) }
    dend_26 { pt3dadd( 12.5054, 13.1596, 1.24247, 1.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -46.4352, -30.0528, 0.27236, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( -48.6668, -30.7846, 0.851721, 0.23 ) }
    dend_23 { pt3dadd( -50.2151, -31.408, 1.23684, 0.68 ) }
    dend_23 { pt3dadd( -52.1476, -32.3295, 1.74182, 0.23 ) }
    dend_23 { pt3dadd( -52.9549, -32.7676, 1.96023, 0.23 ) }
    dend_23 { pt3dadd( -54.674, -33.7742, 2.42715, 0.23 ) }
    dend_23 { pt3dadd( -56.4731, -34.9126, 2.91599, 0.91 ) }
    dend_23 { pt3dadd( -57.6997, -35.8008, 3.24114, 0.23 ) }
    dend_23 { pt3dadd( -58.8414, -36.7214, 3.56175, 0.91 ) }
    dend_23 { pt3dadd( -59.8027, -37.5156, 3.84382, 0.23 ) }
    dend_23 { pt3dadd( -60.9983, -38.4692, 4.19548, 1.59 ) }
    dend_23 { pt3dadd( -62.7199, -39.7388, 4.68304, 0.23 ) }
    dend_23 { pt3dadd( -63.8475, -40.4921, 4.99342, 0.23 ) }
    dend_23 { pt3dadd( -65.9463, -41.7204, 5.52925, 0.23 ) }
    dend_23 { pt3dadd( -67.1822, -42.3516, 5.81662, 1.59 ) }
    dend_23 { pt3dadd( -67.9464, -42.7009, 5.98477, 0.23 ) }
    dend_23 { pt3dadd( -69.5953, -43.367, 6.31773, 0.68 ) }
    dend_23 { pt3dadd( -71.3771, -44.0055, 6.62009, 0.23 ) }
    dend_23 { pt3dadd( -72.6915, -44.4674, 6.77754, 1.14 ) }
    dend_23 { pt3dadd( -73.2522, -44.675, 6.82127, 1.14 ) }
    dend_23 { pt3dadd( -74.2853, -45.0929, 6.8757, 0.23 ) }
    dend_23 { pt3dadd( -75.9418, -45.8327, 6.98307, 0.68 ) }
    dend_23 { pt3dadd( -77.6017, -46.6351, 7.10798, 0.23 ) }
    dend_23 { pt3dadd( -79.5757, -47.6045, 7.32764, 1.14 ) }
    dend_23 { pt3dadd( -82.1093, -48.8856, 7.70097, 0.23 ) }
    dend_23 { pt3dadd( -83.57, -49.6456, 7.97168, 0.91 ) }
    dend_23 { pt3dadd( -86.3586, -51.1585, 8.58091, 0.23 ) }
    dend_23 { pt3dadd( -87.1548, -51.6212, 8.78392, 0.91 ) }
    dend_23 { pt3dadd( -90.0338, -53.3954, 9.63594, 0.23 ) }
    dend_23 { pt3dadd( -92.3283, -54.9113, 10.4575, 1.14 ) }
    dend_23 { pt3dadd( -94.3254, -56.2605, 11.2309, 0.45 ) }
    dend_23 { pt3dadd( -95.6606, -57.2056, 11.7628, 1.14 ) }
    dend_23 { pt3dadd( -96.718, -57.9941, 12.1799, 1.14 ) }
    dend_23 { pt3dadd( -98.0011, -59.0333, 12.7077, 0.23 ) }
    dend_23 { pt3dadd( -98.8853, -59.948, 13.1022, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -46.4352, -30.0528, 0.27236, 0.45 ) }
    dend_22 { pt3dadd( -48.5335, -32.3058, 0.207771, 0.45 ) }
    dend_22 { pt3dadd( -50.0313, -33.9141, 0.161666, 1.14 ) }
    dend_22 { pt3dadd( -50.9697, -34.9216, 0.13278, 0.23 ) }
    dend_22 { pt3dadd( -52.2025, -36.2453, 0.0948308, 1.36 ) }
    dend_22 { pt3dadd( -53.4513, -37.5862, 0.056391, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_4 (entry count 40/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -5.95803, -27.2968, 0.61326, 0.23 ) }
    dend_20 { pt3dadd( -5.49967, -28.8783, 1.312, 0.23 ) }
    dend_20 { pt3dadd( -4.95157, -30.772, 2.11809, 0.23 ) }
    dend_20 { pt3dadd( -4.35478, -32.7534, 2.98107, 1.14 ) }
    dend_20 { pt3dadd( -3.72621, -34.7277, 3.86012, 0.23 ) }
    dend_20 { pt3dadd( -3.26715, -36.1008, 4.47773, 0.91 ) }
    dend_20 { pt3dadd( -2.90807, -37.1479, 4.94681, 0.91 ) }
    dend_20 { pt3dadd( -2.03797, -39.6966, 6.05609, 0.23 ) }
    dend_20 { pt3dadd( -1.37703, -41.5636, 6.87081, 1.14 ) }
    dend_20 { pt3dadd( -0.915235, -42.8428, 7.42088, 1.14 ) }
    dend_20 { pt3dadd( -0.0663262, -45.2023, 8.39897, 0.45 ) }
    dend_20 { pt3dadd( 0.768749, -47.497, 9.32507, 0.45 ) }
    dend_20 { pt3dadd( 1.18412, -48.7006, 9.79589, 0.91 ) }
    dend_20 { pt3dadd( 1.87875, -50.7575, 10.587, 0.23 ) }
    dend_20 { pt3dadd( 2.49113, -52.7181, 11.34, 0.23 ) }
    dend_20 { pt3dadd( 3.1577, -55.0084, 12.2324, 0.68 ) }
    dend_20 { pt3dadd( 3.90988, -57.649, 13.2915, 0.23 ) }
    dend_20 { pt3dadd( 4.39554, -59.3897, 14.0236, 0.91 ) }
    dend_20 { pt3dadd( 5.03145, -61.7845, 15.0944, 1.14 ) }
    dend_20 { pt3dadd( 5.98109, -65.7964, 17.0431, 0.23 ) }
    dend_20 { pt3dadd( 6.24351, -67.0806, 17.7197, 0.23 ) }
    dend_20 { pt3dadd( 6.54948, -68.9225, 18.7336, 0.68 ) }
    dend_20 { pt3dadd( 6.85329, -71.24, 20.0558, 0.23 ) }
    dend_20 { pt3dadd( 7.14862, -74.1154, 21.7775, 1.36 ) }
    dend_20 { pt3dadd( 7.30058, -76.1528, 23.0384, 0.68 ) }
    dend_20 { pt3dadd( 7.43578, -78.7308, 24.5983, 0.23 ) }
    dend_20 { pt3dadd( 7.46484, -79.5487, 25.0715, 0.91 ) }
    dend_20 { pt3dadd( 7.52431, -81.9435, 26.4149, 0.23 ) }
    dend_20 { pt3dadd( 7.57395, -83.5661, 27.2801, 0.91 ) }
    dend_20 { pt3dadd( 7.69038, -85.8992, 28.4436, 1.14 ) }
    dend_20 { pt3dadd( 7.89738, -88.7318, 29.784, 0.23 ) }
    dend_20 { pt3dadd( 8.01462, -90.1578, 30.4427, 0.91 ) }
    dend_20 { pt3dadd( 8.22306, -92.4863, 31.5053, 0.23 ) }
    dend_20 { pt3dadd( 8.33066, -93.3361, 31.8753, 0.91 ) }
    dend_20 { pt3dadd( 8.52255, -94.5007, 32.3643, 0.91 ) }
    dend_20 { pt3dadd( 9.08199, -97.1752, 33.5439, 0.23 ) }
    dend_20 { pt3dadd( 9.59633, -99.1795, 34.463, 2.05 ) }
    dend_20 { pt3dadd( 9.83727, -100.043, 34.853, 2.05 ) }
    dend_20 { pt3dadd( 11.3214, -104.977, 37.05, 0.23 ) }
    dend_20 { pt3dadd( 11.8395, -106.635, 37.7893, 0.91 ) }
    dend_20 { pt3dadd( 13.2505, -110.977, 39.6936, 0.23 ) }
    dend_20 { pt3dadd( 13.6851, -112.252, 40.2408, 0.23 ) }
    dend_20 { pt3dadd( 14.0766, -113.346, 40.7169, 1.14 ) }
    dend_20 { pt3dadd( 14.4623, -114.38, 41.1745, 1.14 ) }
    dend_20 { pt3dadd( 15.829, -117.957, 42.8108, 0.23 ) }
    dend_20 { pt3dadd( 16.4462, -119.509, 43.5669, 0.23 ) }
    dend_20 { pt3dadd( 16.9061, -120.648, 44.153, 0.91 ) }
    dend_20 { pt3dadd( 17.4369, -121.926, 44.8488, 0.91 ) }
    dend_20 { pt3dadd( 18.664, -124.647, 46.4474, 0.23 ) }
    dend_20 { pt3dadd( 19.3083, -126.01, 47.2994, 1.14 ) }
    dend_20 { pt3dadd( 20.7985, -128.889, 49.2577, 0.23 ) }
    dend_20 { pt3dadd( 21.6728, -130.514, 50.4095, 0.23 ) }
    dend_20 { pt3dadd( 22.1132, -131.306, 50.9779, 0.91 ) }
    dend_20 { pt3dadd( 22.7111, -132.314, 51.7632, 0.91 ) }
    dend_20 { pt3dadd( 23.6337, -133.714, 52.9511, 0.23 ) }
    dend_20 { pt3dadd( 24.2151, -134.515, 53.6632, 0.68 ) }
    dend_20 { pt3dadd( 25.0004, -135.539, 54.6278, 0.23 ) }
    dend_20 { pt3dadd( 25.9299, -136.71, 55.7498, 0.91 ) }
    dend_20 { pt3dadd( 28.5805, -139.899, 58.8737, 0.23 ) }
    dend_20 { pt3dadd( 29.2183, -140.632, 59.6133, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 30.077, -141.54, 60.5703, 1.14 ) }
    dend_20 { pt3dadd( 32.113, -143.676, 62.9167, 0.23 ) }
    dend_20 { pt3dadd( 32.7718, -144.398, 63.7641, 0.23 ) }
    dend_20 { pt3dadd( 33.8975, -145.746, 65.3751, 0.68 ) }
    dend_20 { pt3dadd( 34.616, -146.881, 66.6845, 0.23 ) }
    dend_20 { pt3dadd( 35.2295, -148.293, 68.2061, 0.91 ) }
    dend_20 { pt3dadd( 35.5158, -149.459, 69.4175, 0.23 ) }
    dend_20 { pt3dadd( 35.741, -151.23, 71.296, 0.23 ) }
    dend_20 { pt3dadd( 35.8714, -152.295, 72.4461, 0.68 ) }
    dend_20 { pt3dadd( 36.1585, -154.392, 74.6794, 0.23 ) }
    dend_20 { pt3dadd( 36.4715, -156.097, 76.5722, 0.68 ) }
    dend_20 { pt3dadd( 37.1677, -158.994, 79.8992, 0.23 ) }
    dend_20 { pt3dadd( 38.2607, -162.188, 83.6389, 0.23 ) }
    dend_20 { pt3dadd( 38.9488, -163.903, 85.6867, 0.23 ) }
    dend_20 { pt3dadd( 39.5012, -165.106, 87.2107, 0.68 ) }
    dend_20 { pt3dadd( 40.7465, -167.368, 90.2505, 0.23 ) }
    dend_20 { pt3dadd( 41.9053, -169.265, 92.975, 0.23 ) }
    dend_20 { pt3dadd( 42.9198, -170.738, 95.0695, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.95803, -27.2968, 0.61326, 2.27 ) }
    dend_5 { pt3dadd( -7.37414, -30.7203, 0.0989146, 2.27 ) }
    dend_5 { pt3dadd( -8.04423, -32.3403, -0.144468, 2.73 ) }
    dend_5 { pt3dadd( -8.761, -34.0731, -0.404807, 3.64 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.77581, 52.5652, -2.48376, 0.23 ) }
    dend_39 { pt3dadd( -2.48763, 54.2982, -0.0141625, 0.23 ) }
    dend_39 { pt3dadd( -0.701811, 55.134, 1.58805, 0.91 ) }
    dend_39 { pt3dadd( 1.06169, 55.8893, 3.03538, 0.23 ) }
    dend_39 { pt3dadd( 2.60904, 56.5779, 4.33135, 0.23 ) }
    dend_39 { pt3dadd( 4.00721, 57.1718, 5.47208, 0.91 ) }
    dend_39 { pt3dadd( 5.8406, 57.98, 6.89687, 0.23 ) }
    dend_39 { pt3dadd( 6.82175, 58.3379, 7.60987, 0.23 ) }
    dend_39 { pt3dadd( 7.71079, 58.7507, 8.25399, 0.23 ) }
    dend_39 { pt3dadd( 9.15744, 59.6787, 9.26006, 0.23 ) }
    dend_39 { pt3dadd( 10.3746, 60.7835, 10.094, 1.36 ) }
    dend_39 { pt3dadd( 11.4061, 61.8704, 10.7917, 1.36 ) }
    dend_39 { pt3dadd( 13.6006, 64.497, 12.1687, 0.23 ) }
    dend_39 { pt3dadd( 14.9748, 66.118, 12.9518, 0.23 ) }
    dend_39 { pt3dadd( 16.1376, 67.4689, 13.5194, 0.23 ) }
    dend_39 { pt3dadd( 17.7943, 69.4916, 14.1846, 0.23 ) }
    dend_39 { pt3dadd( 19.7725, 72.0152, 14.8724, 1.14 ) }
    dend_39 { pt3dadd( 21.6783, 74.5441, 15.5007, 0.23 ) }
    dend_39 { pt3dadd( 23.1029, 76.4583, 15.8817, 0.23 ) }
    dend_39 { pt3dadd( 25.0421, 79.1404, 16.3824, 0.45 ) }
    dend_39 { pt3dadd( 26.7944, 81.8151, 16.8087, 0.23 ) }
    dend_39 { pt3dadd( 27.8387, 83.6295, 17.0321, 0.68 ) }
    dend_39 { pt3dadd( 29.1733, 86.5508, 17.2727, 0.23 ) }
    dend_39 { pt3dadd( 29.6738, 87.9244, 17.4094, 0.23 ) }
    dend_39 { pt3dadd( 30.1949, 89.7097, 17.6019, 0.91 ) }
    dend_39 { pt3dadd( 30.5292, 90.916, 17.7479, 0.91 ) }
    dend_39 { pt3dadd( 30.9094, 92.1084, 17.9022, 0.23 ) }
    dend_39 { pt3dadd( 31.9744, 95.1405, 18.4264, 0.68 ) }
    dend_39 { pt3dadd( 33.5055, 99.0188, 19.17, 0.23 ) }
    dend_39 { pt3dadd( 34.0133, 100.287, 19.4603, 0.91 ) }
    dend_39 { pt3dadd( 35.1695, 103.143, 20.1375, 0.23 ) }
    dend_39 { pt3dadd( 36.4649, 106.328, 20.9382, 0.68 ) }
    dend_39 { pt3dadd( 37.8489, 109.751, 21.8603, 0.23 ) }
    dend_39 { pt3dadd( 39.2496, 113.499, 22.8709, 0.68 ) }
    dend_39 { pt3dadd( 40.0107, 115.863, 23.4862, 0.23 ) }
    dend_39 { pt3dadd( 40.7021, 118.686, 24.2234, 0.68 ) }
    dend_39 { pt3dadd( 41.0091, 120.667, 24.755, 0.23 ) }
    dend_39 { pt3dadd( 41.1098, 122.301, 25.2194, 0.23 ) }
    dend_39 { pt3dadd( 41.1653, 124.46, 25.8008, 0.23 ) }
    dend_39 { pt3dadd( 41.13, 127.025, 26.5469, 0.68 ) }
    dend_39 { pt3dadd( 41.0304, 130.757, 27.6393, 0.23 ) }
    dend_39 { pt3dadd( 40.8371, 133.918, 28.6228, 0.68 ) }
    dend_39 { pt3dadd( 40.4955, 137.18, 29.586, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 65/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -4.77581, 52.5652, -2.48376, 0.23 ) }
    dend_36 { pt3dadd( -5.55742, 54.237, -2.81092, 0.23 ) }
    dend_36 { pt3dadd( -6.27119, 55.6277, -3.09503, 0.91 ) }
    dend_36 { pt3dadd( -7.75308, 58.3258, -3.67811, 0.23 ) }
    dend_36 { pt3dadd( -8.29521, 59.2258, -3.89533, 0.91 ) }
    dend_36 { pt3dadd( -8.87039, 60.14, -4.13019, 0.91 ) }
    dend_36 { pt3dadd( -9.76177, 61.5875, -4.49851, 0.23 ) }
    dend_36 { pt3dadd( -10.8311, 63.3111, -4.92027, 0.23 ) }
    dend_36 { pt3dadd( -11.8486, 64.9952, -5.35802, 0.23 ) }
    dend_36 { pt3dadd( -12.6005, 66.369, -5.71468, 0.68 ) }
    dend_36 { pt3dadd( -13.0658, 67.3141, -5.9506, 0.23 ) }
    dend_36 { pt3dadd( -13.5076, 68.3618, -6.18704, 0.23 ) }
    dend_36 { pt3dadd( -13.729, 68.9663, -6.3041, 0.23 ) }
    dend_36 { pt3dadd( -14.2324, 70.4724, -6.53631, 1.59 ) }
    dend_36 { pt3dadd( -14.8505, 72.4026, -6.78318, 0.68 ) }
    dend_36 { pt3dadd( -15.2648, 73.6622, -6.94069, 0.23 ) }
    dend_36 { pt3dadd( -15.5484, 74.3896, -7.04857, 0.91 ) }
    dend_36 { pt3dadd( -16.0578, 75.4875, -7.24746, 0.23 ) }
    dend_36 { pt3dadd( -16.3334, 76.024, -7.35847, 0.91 ) }
    dend_36 { pt3dadd( -16.8466, 76.9475, -7.55444, 0.23 ) }
    dend_36 { pt3dadd( -17.3188, 77.7647, -7.75111, 1.14 ) }
    dend_36 { pt3dadd( -17.7639, 78.5291, -7.95996, 1.14 ) }
    dend_36 { pt3dadd( -18.2961, 79.3691, -8.21581, 0.23 ) }
    dend_36 { pt3dadd( -19.0325, 80.4247, -8.5561, 0.23 ) }
    dend_36 { pt3dadd( -19.9581, 81.6225, -8.92588, 0.91 ) }
    dend_36 { pt3dadd( -20.663, 82.4471, -9.17718, 0.23 ) }
    dend_36 { pt3dadd( -21.6214, 83.4433, -9.46919, 0.23 ) }
    dend_36 { pt3dadd( -22.3634, 84.1297, -9.67004, 0.91 ) }
    dend_36 { pt3dadd( -23.6395, 85.172, -9.95943, 0.23 ) }
    dend_36 { pt3dadd( -24.7488, 86.0287, -10.1814, 0.68 ) }
    dend_36 { pt3dadd( -25.223, 86.4093, -10.2757, 0.68 ) }
    dend_36 { pt3dadd( -26.0879, 87.129, -10.4399, 0.23 ) }
    dend_36 { pt3dadd( -27.0245, 87.9592, -10.641, 0.68 ) }
    dend_36 { pt3dadd( -27.8759, 88.7249, -10.871, 0.23 ) }
    dend_36 { pt3dadd( -28.7961, 89.4911, -11.1536, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -30.2337, 90.6006, -11.6708, 0.91 ) }
    dend_36 { pt3dadd( -31.3361, 91.3748, -12.1372, 0.23 ) }
    dend_36 { pt3dadd( -32.7692, 92.3185, -12.8401, 0.23 ) }
    dend_36 { pt3dadd( -34.4177, 93.3479, -13.7243, 0.91 ) }
    dend_36 { pt3dadd( -35.7223, 94.1183, -14.4786, 0.23 ) }
    dend_36 { pt3dadd( -36.7918, 94.6926, -15.1101, 0.91 ) }
    dend_36 { pt3dadd( -37.8798, 95.2675, -15.7824, 0.23 ) }
    dend_36 { pt3dadd( -39.5792, 96.2325, -16.8899, 0.23 ) }
    dend_36 { pt3dadd( -40.7024, 96.9114, -17.6402, 0.91 ) }
    dend_36 { pt3dadd( -41.7941, 97.6653, -18.3933, 0.23 ) }
    dend_36 { pt3dadd( -42.3606, 98.0945, -18.7879, 0.68 ) }
    dend_36 { pt3dadd( -43.3997, 98.8586, -19.4513, 0.23 ) }
    dend_36 { pt3dadd( -44.2274, 99.451, -19.9217, 0.91 ) }
    dend_36 { pt3dadd( -45.0797, 100.025, -20.356, 0.23 ) }
    dend_36 { pt3dadd( -45.8478, 100.542, -20.7066, 0.68 ) }
    dend_36 { pt3dadd( -46.6175, 101.051, -21.0271, 0.23 ) }
    dend_36 { pt3dadd( -48.1969, 102.083, -21.6508, 0.91 ) }
    dend_36 { pt3dadd( -49.9291, 103.199, -22.301, 0.23 ) }
    dend_36 { pt3dadd( -51.5353, 104.269, -22.8975, 0.23 ) }
    dend_36 { pt3dadd( -52.7253, 105.115, -23.3433, 0.91 ) }
    dend_36 { pt3dadd( -53.6887, 105.866, -23.7112, 0.23 ) }
    dend_36 { pt3dadd( -54.1256, 106.252, -23.8953, 0.68 ) }
    dend_36 { pt3dadd( -54.7791, 106.947, -24.2097, 0.23 ) }
    dend_36 { pt3dadd( -55.3569, 107.707, -24.5439, 0.91 ) }
    dend_36 { pt3dadd( -56.1679, 109.03, -25.1287, 0.23 ) }
    dend_36 { pt3dadd( -56.5982, 109.841, -25.497, 0.91 ) }
    dend_36 { pt3dadd( -57.1301, 110.955, -25.9955, 0.23 ) }
    dend_36 { pt3dadd( -57.5122, 111.781, -26.3828, 1.14 ) }
    dend_36 { pt3dadd( -58.2806, 113.483, -27.2532, 0.23 ) }
    dend_36 { pt3dadd( -59.0146, 115.074, -28.1253, 0.91 ) }
    dend_36 { pt3dadd( -59.6183, 116.33, -28.8677, 0.23 ) }
    dend_36 { pt3dadd( -60.1493, 117.357, -29.516, 0.91 ) }
    dend_36 { pt3dadd( -60.8594, 118.688, -30.3896, 0.23 ) }
    dend_36 { pt3dadd( -61.3902, 119.629, -31.061, 0.23 ) }
    dend_36 { pt3dadd( -61.9839, 120.597, -31.8111, 0.91 ) }
    dend_36 { pt3dadd( -62.7587, 121.813, -32.7782, 0.23 ) }
    dend_36 { pt3dadd( -63.1612, 122.423, -33.2732, 0.23 ) }
    dend_36 { pt3dadd( -63.569, 123.014, -33.7611, 0.68 ) }
    dend_36 { pt3dadd( -63.8583, 123.394, -34.0763, 0.23 ) }
    dend_36 { pt3dadd( -64.5699, 124.283, -34.8115, 0.68 ) }
    dend_36 { pt3dadd( -65.3747, 125.227, -35.626, 0.23 ) }
    dend_36 { pt3dadd( -66.0108, 125.934, -36.2118, 0.23 ) }
    dend_36 { pt3dadd( -66.4431, 126.415, -36.5957, 0.68 ) }
    dend_36 { pt3dadd( -66.999, 127.017, -37.0617, 0.23 ) }
    dend_36 { pt3dadd( -67.5041, 127.582, -37.4724, 0.23 ) }
    dend_36 { pt3dadd( -68.0245, 128.158, -37.8776, 0.45 ) }
    dend_36 { pt3dadd( -69.1181, 129.372, -38.72, 0.23 ) }
    dend_36 { pt3dadd( -69.8846, 130.282, -39.3268, 1.82 ) }
    dend_36 { pt3dadd( -70.4404, 130.964, -39.7681, 0.68 ) }
    dend_36 { pt3dadd( -71.5627, 132.401, -40.6562, 0.23 ) }
    dend_36 { pt3dadd( -72.4704, 133.515, -41.3221, 0.91 ) }
    dend_36 { pt3dadd( -73.3301, 134.585, -41.9566, 0.23 ) }
    dend_36 { pt3dadd( -74.0294, 135.439, -42.4665, 0.23 ) }
    dend_36 { pt3dadd( -74.4562, 135.96, -42.7628, 0.91 ) }
    dend_36 { pt3dadd( -75.0469, 136.706, -43.173, 0.23 ) }
    dend_36 { pt3dadd( -75.6975, 137.53, -43.5989, 1.36 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 56/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 12.5054, 13.1596, 1.24247, 0.68 ) }
    dend_30 { pt3dadd( 14.5888, 11.8885, 1.26913, 0.68 ) }
    dend_30 { pt3dadd( 16.8151, 10.5351, 1.42758, 0.68 ) }
    dend_30 { pt3dadd( 18.7262, 9.31989, 1.63419, 0.68 ) }
    dend_30 { pt3dadd( 20.5877, 7.96274, 1.90472, 1.14 ) }
    dend_30 { pt3dadd( 22.8118, 6.2786, 2.21015, 1.59 ) }
    dend_30 { pt3dadd( 25.9322, 3.89261, 2.62153, 0.68 ) }
    dend_30 { pt3dadd( 28.555, 1.87965, 3.01068, 1.82 ) }
    dend_30 { pt3dadd( 31.324, -0.257817, 3.41703, 0.91 ) }
    dend_30 { pt3dadd( 36.0345, -3.95969, 4.03067, 0.68 ) }
    dend_30 { pt3dadd( 38.4569, -5.87013, 4.27335, 0.68 ) }
    dend_30 { pt3dadd( 40.9978, -7.89905, 4.44909, 1.14 ) }
    dend_30 { pt3dadd( 42.7403, -9.30305, 4.52368, 1.14 ) }
    dend_30 { pt3dadd( 46.5316, -12.3647, 4.60123, 1.82 ) }
    dend_30 { pt3dadd( 49.6208, -14.7807, 4.60433, 0.23 ) }
    dend_30 { pt3dadd( 51.9511, -16.5263, 4.56607, 0.91 ) }
    dend_30 { pt3dadd( 54.6073, -18.6313, 4.55347, 1.14 ) }
    dend_30 { pt3dadd( 56.3809, -20.1285, 4.51451, 2.05 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 74/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 12.5054, 13.1596, 1.24247, 0.45 ) }
    dend_27 { pt3dadd( 13.9997, 13.2664, 1.38879, 0.45 ) }
    dend_27 { pt3dadd( 16.3931, 13.4351, 1.6466, 0.91 ) }
    dend_27 { pt3dadd( 18.3738, 13.6043, 1.87413, 0.45 ) }
    dend_27 { pt3dadd( 20.7419, 13.8215, 2.16474, 1.14 ) }
    dend_27 { pt3dadd( 23.792, 14.2135, 2.58208, 0.68 ) }
    dend_27 { pt3dadd( 27.0046, 14.7264, 3.05163, 0.45 ) }
    dend_27 { pt3dadd( 28.8469, 15.0906, 3.34098, 0.91 ) }
    dend_27 { pt3dadd( 30.2958, 15.4617, 3.58568, 0.91 ) }
    dend_27 { pt3dadd( 32.944, 16.2672, 4.06991, 2.05 ) }
    dend_27 { pt3dadd( 36.8148, 17.5465, 4.81947, 0.68 ) }
    dend_27 { pt3dadd( 39.1253, 18.377, 5.27593, 1.14 ) }
    dend_27 { pt3dadd( 41.1384, 19.1852, 5.68431, 0.68 ) }
    dend_27 { pt3dadd( 42.129, 19.6204, 5.88775, 1.59 ) }
    dend_27 { pt3dadd( 44.2743, 20.6074, 6.33104, 1.59 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 89/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -8.761, -34.0731, -0.404807, 0.68 ) }
    dend_17 { pt3dadd( -13.0785, -35.4966, -1.91309, 0.68 ) }
    dend_17 { pt3dadd( -17.4126, -36.8142, -3.27784, 0.68 ) }
    dend_17 { pt3dadd( -19.8826, -37.5199, -4.01048, 1.14 ) }
    dend_17 { pt3dadd( -24.6947, -38.7202, -5.46003, 0.68 ) }
    dend_17 { pt3dadd( -28.1575, -39.4783, -6.51286, 1.36 ) }
    dend_17 { pt3dadd( -31.257, -40.0833, -7.48517, 0.45 ) }
    dend_17 { pt3dadd( -34.8979, -40.5773, -8.63993, 1.14 ) }
    dend_17 { pt3dadd( -38.4259, -40.8929, -9.75466, 0.23 ) }
    dend_17 { pt3dadd( -41.5403, -41.2347, -10.7506, 0.45 ) }
    dend_17 { pt3dadd( -43.0446, -41.4721, -11.2681, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_17 { pt3dadd( -46.4934, -42.2694, -12.5607, 1.14 ) }
    dend_17 { pt3dadd( -49.2718, -43.1732, -13.6773, 0.23 ) }
    dend_17 { pt3dadd( -51.7157, -44.2594, -14.7073, 0.91 ) }
    dend_17 { pt3dadd( -55.0708, -46.0617, -16.0343, 0.45 ) }
    dend_17 { pt3dadd( -57.0892, -47.2811, -16.7676, 1.14 ) }
    dend_17 { pt3dadd( -59.9683, -49.0899, -17.7474, 0.23 ) }
    dend_17 { pt3dadd( -62.5094, -50.7051, -18.5411, 0.91 ) }
    dend_17 { pt3dadd( -65.4397, -52.5118, -19.3781, 0.68 ) }
    dend_17 { pt3dadd( -68.2005, -54.0983, -20.0927, 0.23 ) }
    dend_17 { pt3dadd( -70.21, -55.127, -20.5343, 0.91 ) }
    dend_17 { pt3dadd( -73.101, -56.4008, -21.0667, 0.23 ) }
    dend_17 { pt3dadd( -76.742, -57.8617, -21.6661, 0.91 ) }
    dend_17 { pt3dadd( -78.7656, -58.663, -21.9864, 0.68 ) }
    dend_17 { pt3dadd( -81.9082, -59.9639, -22.4754, 0.68 ) }
    dend_17 { pt3dadd( -85.5615, -61.6167, -23.0436, 1.36 ) }
    dend_17 { pt3dadd( -88.7037, -63.1292, -23.5186, 0.23 ) }
    dend_17 { pt3dadd( -90.0836, -63.8354, -23.7305, 0.23 ) }
    dend_17 { pt3dadd( -92.7153, -65.2585, -24.1675, 1.36 ) }
    dend_17 { pt3dadd( -94.4151, -66.2885, -24.4566, 1.36 ) }
    dend_17 { pt3dadd( -96.2817, -67.5665, -24.7744, 0.23 ) }
    dend_17 { pt3dadd( -98.8285, -69.562, -25.2898, 0.91 ) }
    dend_17 { pt3dadd( -101.149, -71.624, -25.8499, 0.91 ) }
    dend_17 { pt3dadd( -103.401, -73.7677, -26.4476, 0.23 ) }
    dend_17 { pt3dadd( -105.655, -76.0526, -27.0987, 0.91 ) }
    dend_17 { pt3dadd( -107.42, -77.9391, -27.6727, 0.23 ) }
    dend_17 { pt3dadd( -109.359, -80.2215, -28.3714, 0.23 ) }
    dend_17 { pt3dadd( -110.768, -82.1647, -28.9142, 0.23 ) }
    dend_17 { pt3dadd( -111.665, -83.5154, -29.2469, 1.14 ) }
    dend_17 { pt3dadd( -112.633, -85.0102, -29.5629, 0.45 ) }
    dend_17 { pt3dadd( -113.662, -86.5938, -29.8595, 1.59 ) }
    dend_17 { pt3dadd( -116.391, -90.8179, -30.4893, 0.68 ) }
    dend_17 { pt3dadd( -119.33, -95.291, -30.9666, 0.68 ) }
    dend_17 { pt3dadd( -121.282, -98.1004, -31.2003, 0.23 ) }
    dend_17 { pt3dadd( -123.154, -100.649, -31.386, 0.91 ) }
    dend_17 { pt3dadd( -124.457, -102.284, -31.4976, 0.91 ) }
    dend_17 { pt3dadd( -125.502, -103.427, -31.5815, 0.23 ) }
    dend_17 { pt3dadd( -127.111, -104.982, -31.711, 0.91 ) }
    dend_17 { pt3dadd( -129.478, -107.097, -31.936, 0.23 ) }
    dend_17 { pt3dadd( -131.31, -108.702, -32.1668, 0.45 ) }
    dend_17 { pt3dadd( -133.235, -110.381, -32.4553, 1.14 ) }
    dend_17 { pt3dadd( -134.995, -111.915, -32.7405, 0.23 ) }
    dend_17 { pt3dadd( -137.549, -114.144, -33.1891, 0.91 ) }
    dend_17 { pt3dadd( -140.224, -116.448, -33.6731, 0.91 ) }
    dend_17 { pt3dadd( -141.912, -117.879, -33.9852, 0.23 ) }
    dend_17 { pt3dadd( -144.226, -119.791, -34.3959, 0.68 ) }
    dend_17 { pt3dadd( -146.089, -121.31, -34.6814, 0.23 ) }
    dend_17 { pt3dadd( -146.987, -121.996, -34.7956, 0.23 ) }
    dend_17 { pt3dadd( -149.543, -123.776, -35.0978, 0.91 ) }
    dend_17 { pt3dadd( -152.179, -125.516, -35.3414, 2.05 ) }
    dend_17 { pt3dadd( -155.688, -127.864, -35.5982, 0.68 ) }
    dend_17 { pt3dadd( -158.538, -129.789, -35.7378, 1.36 ) }
    dend_17 { pt3dadd( -161.457, -131.794, -35.8422, 0.45 ) }
    dend_17 { pt3dadd( -163.7, -133.37, -35.8948, 0.45 ) }
    dend_17 { pt3dadd( -166.283, -135.217, -35.9425, 0.23 ) }
    dend_17 { pt3dadd( -167.786, -136.294, -35.9614, 0.91 ) }
    dend_17 { pt3dadd( -169.575, -137.557, -36.0051, 0.23 ) }
    dend_17 { pt3dadd( -170.873, -138.445, -36.0735, 0.23 ) }
    dend_17 { pt3dadd( -173.567, -140.281, -36.285, 1.14 ) }
    dend_17 { pt3dadd( -175.042, -141.252, -36.4309, 1.14 ) }
    dend_17 { pt3dadd( -178.468, -143.367, -36.85, 0.23 ) }
    dend_17 { pt3dadd( -179.501, -143.955, -36.9932, 0.91 ) }
    dend_17 { pt3dadd( -181.718, -145.188, -37.3465, 1.59 ) }
    dend_17 { pt3dadd( -183.455, -146.16, -37.5856, 0.45 ) }
    dend_17 { pt3dadd( -184.447, -146.707, -37.7037, 1.14 ) }
    dend_17 { pt3dadd( -187.77, -148.499, -38.0346, 0.23 ) }
    dend_17 { pt3dadd( -189.387, -149.364, -38.1838, 1.36 ) }
    dend_17 { pt3dadd( -191.144, -150.318, -38.2996, 1.36 ) }
    dend_17 { pt3dadd( -196.048, -153.059, -38.5319, 0.23 ) }
    dend_17 { pt3dadd( -198.147, -154.284, -38.6133, 1.36 ) }
    dend_17 { pt3dadd( -198.874, -154.747, -38.6387, 2.27 ) }
    dend_17 { pt3dadd( -201.854, -156.887, -38.7538, 0.23 ) }
    dend_17 { pt3dadd( -203.975, -158.458, -38.8229, 0.68 ) }
    dend_17 { pt3dadd( -205.379, -159.545, -38.8737, 0.23 ) }
    dend_17 { pt3dadd( -206.96, -160.92, -38.9843, 0.91 ) }
    dend_17 { pt3dadd( -208.263, -162.219, -39.0761, 0.23 ) }
    dend_17 { pt3dadd( -209.776, -163.957, -39.1604, 1.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.761, -34.0731, -0.404807, 2.27 ) }
    dend_6 { pt3dadd( -8.86914, -36.4609, -0.203068, 2.27 ) }
    dend_6 { pt3dadd( -8.89629, -37.0604, -0.152418, 2.27 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 79/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -75.6975, 137.53, -43.5989, 0.23 ) }
    dend_38 { pt3dadd( -80.5077, 139.237, -46.4219, 0.23 ) }
    dend_38 { pt3dadd( -83.0981, 140.098, -47.9358, 0.91 ) }
    dend_38 { pt3dadd( -86.9194, 141.249, -50.1642, 0.23 ) }
    dend_38 { pt3dadd( -89.4814, 141.921, -51.5887, 0.91 ) }
    dend_38 { pt3dadd( -91.337, 142.37, -52.5944, 0.23 ) }
    dend_38 { pt3dadd( -94.3031, 143.089, -54.2441, 0.23 ) }
    dend_38 { pt3dadd( -95.7371, 143.367, -55.0335, 0.23 ) }
    dend_38 { pt3dadd( -97.729, 143.788, -56.2209, 0.91 ) }
    dend_38 { pt3dadd( -100.939, 144.409, -58.3095, 0.23 ) }
    dend_38 { pt3dadd( -102.1, 144.611, -59.074, 0.68 ) }
    dend_38 { pt3dadd( -104.184, 144.954, -60.4484, 0.23 ) }
    dend_38 { pt3dadd( -105.099, 145.111, -61.0335, 1.14 ) }
    dend_38 { pt3dadd( -107.888, 145.553, -62.7492, 0.23 ) }
    dend_38 { pt3dadd( -111.423, 146.076, -64.8023, 1.14 ) }
    dend_38 { pt3dadd( -113.953, 146.437, -66.2097, 0.23 ) }
    dend_38 { pt3dadd( -116.772, 146.81, -67.6295, 0.68 ) }
    dend_38 { pt3dadd( -118.381, 147.013, -68.345, 0.23 ) }
    dend_38 { pt3dadd( -121.789, 147.517, -69.755, 0.91 ) }
    dend_38 { pt3dadd( -126.292, 148.301, -71.4908, 0.23 ) }
    dend_38 { pt3dadd( -129.572, 149.06, -72.7632, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_38 { pt3dadd( -131.378, 149.528, -73.4971, 0.91 ) }
    dend_38 { pt3dadd( -134.024, 150.334, -74.6003, 0.23 ) }
    dend_38 { pt3dadd( -136.095, 151.075, -75.5205, 0.68 ) }
    dend_38 { pt3dadd( -138.501, 152.053, -76.6221, 0.23 ) }
    dend_38 { pt3dadd( -140.613, 152.939, -77.6927, 0.23 ) }
    dend_38 { pt3dadd( -142.32, 153.558, -78.6448, 0.68 ) }
    dend_38 { pt3dadd( -144.36, 154.291, -79.8746, 0.23 ) }
    dend_38 { pt3dadd( -147.097, 155.211, -81.6329, 0.23 ) }
    dend_38 { pt3dadd( -149.04, 155.751, -82.9074, 0.68 ) }
    dend_38 { pt3dadd( -150.65, 156.116, -83.9937, 0.23 ) }
    dend_38 { pt3dadd( -153.224, 156.447, -85.7906, 0.91 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -75.6975, 137.53, -43.5989, 0.23 ) }
    dend_37 { pt3dadd( -77.8017, 139.845, -44.1849, 0.23 ) }
    dend_37 { pt3dadd( -78.2963, 140.48, -44.3212, 0.68 ) }
    dend_37 { pt3dadd( -79.6855, 142.377, -44.6707, 0.23 ) }
    dend_37 { pt3dadd( -81.0331, 144.43, -45.1788, 0.23 ) }
    dend_37 { pt3dadd( -81.93, 145.865, -45.6038, 0.68 ) }
    dend_37 { pt3dadd( -83.0358, 147.671, -46.1861, 0.23 ) }
    dend_37 { pt3dadd( -83.8201, 149.038, -46.6244, 0.68 ) }
    dend_37 { pt3dadd( -85.4298, 151.87, -47.6494, 0.23 ) }
    dend_37 { pt3dadd( -86.8488, 154.374, -48.6701, 0.91 ) }
    dend_37 { pt3dadd( -88.653, 157.494, -50.0004, 0.23 ) }
    dend_37 { pt3dadd( -89.7255, 159.29, -50.8094, 0.23 ) }
    dend_37 { pt3dadd( -91.0301, 161.372, -51.8169, 0.91 ) }
    dend_37 { pt3dadd( -92.5054, 163.667, -52.9736, 0.23 ) }
    dend_37 { pt3dadd( -93.6433, 165.406, -53.8714, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 26/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 56.3809, -20.1285, 4.51451, 0.45 ) }
    dend_32 { pt3dadd( 57.0965, -22.0835, 4.51583, 0.45 ) }
    dend_32 { pt3dadd( 57.4821, -23.0477, 4.55615, 0.91 ) }
    dend_32 { pt3dadd( 57.8943, -23.8277, 4.62948, 0.23 ) }
    dend_32 { pt3dadd( 58.2436, -24.4118, 4.69234, 0.91 ) }
    dend_32 { pt3dadd( 58.625, -24.9843, 4.76349, 0.91 ) }
    dend_32 { pt3dadd( 59.7223, -26.4892, 4.98267, 0.23 ) }
    dend_32 { pt3dadd( 60.4603, -27.385, 5.13602, 1.59 ) }
    dend_32 { pt3dadd( 62.0875, -29.2474, 5.44009, 0.45 ) }
    dend_32 { pt3dadd( 62.9933, -30.2358, 5.59276, 0.45 ) }
    dend_32 { pt3dadd( 64.1261, -31.4355, 5.76018, 1.36 ) }
    dend_32 { pt3dadd( 66.3049, -33.6632, 6.05268, 0.68 ) }
    dend_32 { pt3dadd( 67.753, -35.0868, 6.20541, 0.68 ) }
    dend_32 { pt3dadd( 68.9872, -36.2569, 6.31085, 1.14 ) }
    dend_32 { pt3dadd( 71.3897, -38.4304, 6.48213, 0.45 ) }
    dend_32 { pt3dadd( 71.9772, -38.9263, 6.5211, 1.14 ) }
    dend_32 { pt3dadd( 73.1715, -39.9038, 6.58595, 0.23 ) }
    dend_32 { pt3dadd( 74.4889, -40.9629, 6.64458, 1.36 ) }
    dend_32 { pt3dadd( 74.9335, -41.3238, 6.67019, 2.05 ) }
    dend_32 { pt3dadd( 76.3743, -42.555, 6.77682, 0.23 ) }
    dend_32 { pt3dadd( 77.804, -43.9024, 6.89666, 0.23 ) }
    dend_32 { pt3dadd( 78.9744, -45.0623, 7.01203, 1.14 ) }
    dend_32 { pt3dadd( 80.1556, -46.3283, 7.14094, 0.23 ) }
    dend_32 { pt3dadd( 80.8935, -47.1965, 7.24503, 1.36 ) }
    dend_32 { pt3dadd( 81.762, -48.3229, 7.36628, 1.59 ) }
    dend_32 { pt3dadd( 82.7309, -49.8204, 7.50336, 0.45 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 52/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 56.3809, -20.1285, 4.51451, 0.68 ) }
    dend_31 { pt3dadd( 58.3236, -20.5088, 4.89844, 0.68 ) }
    dend_31 { pt3dadd( 59.2219, -20.6795, 5.06148, 0.23 ) }
    dend_31 { pt3dadd( 59.8182, -20.7863, 5.14775, 0.68 ) }
    dend_31 { pt3dadd( 60.5968, -20.9295, 5.25166, 0.23 ) }
    dend_31 { pt3dadd( 61.3048, -21.0853, 5.3443, 0.91 ) }
    dend_31 { pt3dadd( 62.6357, -21.4142, 5.52112, 0.23 ) }
    dend_31 { pt3dadd( 63.7459, -21.7082, 5.68828, 1.14 ) }
    dend_31 { pt3dadd( 65.9331, -22.274, 6.05787, 0.45 ) }
    dend_31 { pt3dadd( 66.593, -22.4312, 6.18354, 0.91 ) }
    dend_31 { pt3dadd( 68.1611, -22.7456, 6.50935, 0.23 ) }
    dend_31 { pt3dadd( 69.6978, -22.9861, 6.84861, 0.91 ) }
    dend_31 { pt3dadd( 71.0724, -23.1282, 7.17252, 0.23 ) }
    dend_31 { pt3dadd( 72.8003, -23.1907, 7.59524, 0.91 ) }
    dend_31 { pt3dadd( 74.6044, -23.1056, 8.04473, 0.23 ) }
    dend_31 { pt3dadd( 76.0519, -22.8971, 8.38384, 0.68 ) }
    dend_31 { pt3dadd( 76.8775, -22.678, 8.56151, 0.23 ) }
    dend_31 { pt3dadd( 77.6858, -22.3924, 8.70432, 1.14 ) }
    dend_31 { pt3dadd( 78.5139, -22.0553, 8.81155, 0.23 ) }
    dend_31 { pt3dadd( 79.735, -21.5101, 8.93107, 0.91 ) }
    dend_31 { pt3dadd( 80.7784, -21.0327, 8.99779, 0.23 ) }
    dend_31 { pt3dadd( 81.6636, -20.6281, 9.03921, 1.14 ) }
    dend_31 { pt3dadd( 82.5, -20.2599, 9.081, 0.23 ) }
    dend_31 { pt3dadd( 83.6307, -19.7727, 9.12401, 1.82 ) }
    dend_31 { pt3dadd( 84.2117, -19.5327, 9.14059, 2.27 ) }
    dend_31 { pt3dadd( 85.9204, -18.8389, 9.14178, 0.23 ) }
    dend_31 { pt3dadd( 86.2934, -18.7079, 9.14017, 0.23 ) }
    dend_31 { pt3dadd( 87.6545, -18.2811, 9.14025, 0.68 ) }
    dend_31 { pt3dadd( 88.8547, -17.9638, 9.16345, 0.23 ) }
    dend_31 { pt3dadd( 89.7894, -17.7723, 9.19426, 1.36 ) }
    dend_31 { pt3dadd( 91.2745, -17.5994, 9.27928, 0.23 ) }
    dend_31 { pt3dadd( 92.7739, -17.5638, 9.40972, 0.23 ) }
    dend_31 { pt3dadd( 93.3826, -17.5883, 9.47127, 1.14 ) }
    dend_31 { pt3dadd( 94.8667, -17.7614, 9.65444, 0.23 ) }
    dend_31 { pt3dadd( 95.6029, -17.8837, 9.77214, 0.68 ) }
    dend_31 { pt3dadd( 96.8046, -18.107, 9.99084, 0.23 ) }
    dend_31 { pt3dadd( 97.1235, -18.1731, 10.0528, 1.59 ) }
    dend_31 { pt3dadd( 97.6175, -18.2788, 10.1487, 0.23 ) }
    dend_31 { pt3dadd( 98.6038, -18.4919, 10.3402, 1.36 ) }
    dend_31 { pt3dadd( 100.017, -18.7721, 10.6151, 0.23 ) }
    dend_31 { pt3dadd( 101.325, -18.9761, 10.8699, 0.91 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 93/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 44.2743, 20.6074, 6.33104, 0.23 ) }
    dend_29 { pt3dadd( 47.0822, 21.3765, 6.71534, 0.23 ) }
    dend_29 { pt3dadd( 48.9203, 21.9471, 7.01311, 0.23 ) }
    dend_29 { pt3dadd( 50.3501, 22.3919, 7.26968, 1.36 ) }
    dend_29 { pt3dadd( 52.3336, 23.0036, 7.59741, 1.36 ) }
    dend_29 { pt3dadd( 55.0538, 23.827, 8.03108, 0.23 ) }
    dend_29 { pt3dadd( 56.3325, 24.1986, 8.23413, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_29 { pt3dadd( 58.8993, 24.9493, 8.6394, 0.91 ) }
    dend_29 { pt3dadd( 61.7101, 25.6701, 9.09144, 0.23 ) }
    dend_29 { pt3dadd( 63.9265, 26.1413, 9.46343, 1.59 ) }
    dend_29 { pt3dadd( 64.7433, 26.2759, 9.60272, 1.59 ) }
    dend_29 { pt3dadd( 67.6114, 26.6159, 10.1066, 0.45 ) }
    dend_29 { pt3dadd( 69.0775, 26.7276, 10.3342, 0.45 ) }
    dend_29 { pt3dadd( 71.4141, 26.8284, 10.6901, 0.23 ) }
    dend_29 { pt3dadd( 72.7522, 26.8572, 10.9027, 1.14 ) }
    dend_29 { pt3dadd( 74.684, 26.8786, 11.2581, 0.23 ) }
    dend_29 { pt3dadd( 75.9411, 26.8865, 11.4988, 0.68 ) }
    dend_29 { pt3dadd( 78.2592, 26.9305, 11.9583, 0.23 ) }
    dend_29 { pt3dadd( 80.9525, 27.0559, 12.5088, 1.14 ) }
    dend_29 { pt3dadd( 84.0531, 27.3417, 13.116, 0.23 ) }
    dend_29 { pt3dadd( 85.9715, 27.6039, 13.4731, 0.23 ) }
    dend_29 { pt3dadd( 87.0239, 27.8114, 13.6599, 1.59 ) }
    dend_29 { pt3dadd( 89.3435, 28.3887, 14.0417, 0.23 ) }
    dend_29 { pt3dadd( 90.4434, 28.7415, 14.1978, 0.23 ) }
    dend_29 { pt3dadd( 91.562, 29.1895, 14.3124, 0.68 ) }
    dend_29 { pt3dadd( 92.7888, 29.7525, 14.3501, 0.68 ) }
    dend_29 { pt3dadd( 95.3424, 30.934, 14.3077, 0.23 ) }
    dend_29 { pt3dadd( 96.482, 31.4101, 14.2685, 0.23 ) }
    dend_29 { pt3dadd( 97.511, 31.7902, 14.2185, 1.82 ) }
    dend_29 { pt3dadd( 98.109, 31.9743, 14.1978, 1.82 ) }
    dend_29 { pt3dadd( 100.16, 32.4782, 14.1886, 0.23 ) }
    dend_29 { pt3dadd( 101.88, 32.8246, 14.2159, 0.68 ) }
    dend_29 { pt3dadd( 104.426, 33.2463, 14.3276, 0.23 ) }
    dend_29 { pt3dadd( 105.431, 33.416, 14.3964, 0.91 ) }
    dend_29 { pt3dadd( 107.094, 33.7107, 14.5308, 0.23 ) }
    dend_29 { pt3dadd( 108.921, 34.0814, 14.6873, 1.14 ) }
    dend_29 { pt3dadd( 111.404, 34.6582, 14.9374, 0.23 ) }
    dend_29 { pt3dadd( 113.233, 35.1252, 15.0927, 1.14 ) }
    dend_29 { pt3dadd( 115.047, 35.6482, 15.2366, 0.23 ) }
    dend_29 { pt3dadd( 116.344, 36.04, 15.337, 0.91 ) }
    dend_29 { pt3dadd( 118.099, 36.6125, 15.4525, 0.23 ) }
    dend_29 { pt3dadd( 119.939, 37.246, 15.5624, 1.36 ) }
    dend_29 { pt3dadd( 121.414, 37.7556, 15.6536, 0.23 ) }
    dend_29 { pt3dadd( 123.192, 38.3974, 15.7651, 0.91 ) }
    dend_29 { pt3dadd( 126.132, 39.5174, 15.9413, 0.23 ) }
    dend_29 { pt3dadd( 127.792, 40.1578, 16.0513, 1.14 ) }
    dend_29 { pt3dadd( 128.705, 40.5098, 16.112, 0.23 ) }
    dend_29 { pt3dadd( 129.677, 40.8963, 16.1751, 1.14 ) }
    dend_29 { pt3dadd( 131.542, 41.6706, 16.3238, 0.23 ) }
    dend_29 { pt3dadd( 132.973, 42.3282, 16.3827, 1.36 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 43/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 44.2743, 20.6074, 6.33104, 0.23 ) }
    dend_28 { pt3dadd( 46.5564, 22.0206, 6.22024, 0.23 ) }
    dend_28 { pt3dadd( 47.7726, 22.7894, 6.1686, 0.91 ) }
    dend_28 { pt3dadd( 49.6579, 23.9427, 6.12841, 0.23 ) }
    dend_28 { pt3dadd( 51.5745, 25.0173, 6.13884, 0.68 ) }
    dend_28 { pt3dadd( 53.5552, 26.0046, 6.23955, 0.68 ) }
    dend_28 { pt3dadd( 56.8799, 27.6159, 6.4987, 0.23 ) }
    dend_28 { pt3dadd( 58.512, 28.3574, 6.64195, 0.91 ) }
    dend_28 { pt3dadd( 60.3059, 29.1866, 6.8149, 0.91 ) }
    dend_28 { pt3dadd( 63.6581, 30.768, 7.16669, 0.23 ) }
    dend_28 { pt3dadd( 66.9045, 32.3782, 7.4996, 0.68 ) }
    dend_28 { pt3dadd( 70.0201, 33.9544, 7.75697, 0.23 ) }
    dend_28 { pt3dadd( 72.1152, 35.0483, 7.87765, 0.91 ) }
    dend_28 { pt3dadd( 74.4069, 36.3078, 7.941, 0.91 ) }
    dend_28 { pt3dadd( 76.4928, 37.5727, 7.8781, 0.23 ) }
    dend_28 { pt3dadd( 79.1202, 39.3948, 7.56871, 1.14 ) }
    dend_28 { pt3dadd( 81.5905, 41.3108, 7.0807, 0.23 ) }
    dend_28 { pt3dadd( 82.9958, 42.5165, 6.73997, 0.23 ) }
    dend_28 { pt3dadd( 84.0308, 43.5633, 6.46647, 0.23 ) }
    dend_28 { pt3dadd( 86.2362, 46.0844, 5.85211, 0.91 ) }
    dend_28 { pt3dadd( 88.6574, 49.1577, 5.18684, 0.45 ) }
    dend_28 { pt3dadd( 89.5099, 50.36, 4.95859, 0.45 ) }
    dend_28 { pt3dadd( 91.4129, 53.2822, 4.43537, 1.59 ) }
    dend_28 { pt3dadd( 94.1123, 57.4528, 3.79204, 0.45 ) }
    dend_28 { pt3dadd( 95.0621, 58.8968, 3.60492, 0.68 ) }
    dend_28 { pt3dadd( 95.7954, 60.0023, 3.50564, 0.23 ) }
    dend_28 { pt3dadd( 97.1815, 61.9347, 3.36516, 0.91 ) }
    dend_28 { pt3dadd( 99.3347, 64.6893, 3.13793, 0.23 ) }
    dend_28 { pt3dadd( 100.605, 66.1637, 3.00853, 0.23 ) }
    dend_28 { pt3dadd( 101.338, 66.9471, 2.93564, 1.36 ) }
    dend_28 { pt3dadd( 102.21, 67.9297, 2.84413, 1.36 ) }
    dend_28 { pt3dadd( 103.976, 69.998, 2.65633, 0.23 ) }
    dend_28 { pt3dadd( 105.837, 72.2818, 2.46623, 0.68 ) }
    dend_28 { pt3dadd( 107.437, 74.3163, 2.31487, 0.23 ) }
    dend_28 { pt3dadd( 109.854, 77.4342, 2.09621, 1.14 ) }
    dend_28 { pt3dadd( 112.301, 80.659, 1.8659, 0.23 ) }
    dend_28 { pt3dadd( 114.064, 83.0499, 1.69875, 0.91 ) }
    dend_28 { pt3dadd( 115.176, 84.6053, 1.60627, 1.59 ) }
    dend_28 { pt3dadd( 116.312, 86.204, 1.50414, 0.91 ) }
    dend_28 { pt3dadd( 118.018, 88.6797, 1.33395, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 83/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -209.776, -163.957, -39.1604, 0.23 ) }
    dend_19 { pt3dadd( -213.636, -164.176, -38.2564, 0.23 ) }
    dend_19 { pt3dadd( -214.837, -164.28, -37.9841, 1.14 ) }
    dend_19 { pt3dadd( -219.005, -164.633, -37.0868, 0.23 ) }
    dend_19 { pt3dadd( -220.594, -164.794, -36.7345, 0.91 ) }
    dend_19 { pt3dadd( -225.713, -165.582, -35.6246, 0.23 ) }
    dend_19 { pt3dadd( -228.266, -166.022, -35.0385, 0.91 ) }
    dend_19 { pt3dadd( -233.582, -167.164, -33.8233, 0.23 ) }
    dend_19 { pt3dadd( -236.938, -167.918, -33.0404, 0.91 ) }
    dend_19 { pt3dadd( -240.007, -168.661, -32.3523, 0.23 ) }
    dend_19 { pt3dadd( -243.828, -169.54, -31.461, 1.14 ) }
    dend_19 { pt3dadd( -248.962, -170.772, -30.251, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -209.776, -163.957, -39.1604, 0.23 ) }
    dend_18 { pt3dadd( -210.862, -166.439, -40.25, 0.23 ) }
    dend_18 { pt3dadd( -211.592, -168.185, -41.0564, 1.59 ) }
    dend_18 { pt3dadd( -212.647, -170.789, -42.3264, 0.23 ) }
    dend_18 { pt3dadd( -213.365, -172.44, -43.2545, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( -213.958, -173.633, -43.9947, 0.23 ) }
    dend_18 { pt3dadd( -214.582, -174.713, -44.7163, 0.23 ) }
    dend_18 { pt3dadd( -215.462, -175.786, -45.568, 1.36 ) }
    dend_18 { pt3dadd( -216.65, -176.839, -46.5798, 2.27 ) }
    dend_18 { pt3dadd( -218.047, -177.754, -47.6107, 0.23 ) }
    dend_18 { pt3dadd( -219.332, -178.363, -48.3875, 1.14 ) }
    dend_18 { pt3dadd( -220.644, -178.821, -49.0507, 0.23 ) }
    dend_18 { pt3dadd( -222.221, -179.242, -49.6896, 1.14 ) }
    dend_18 { pt3dadd( -222.867, -179.339, -49.8667, 1.14 ) }
    dend_18 { pt3dadd( -224.193, -179.435, -50.1219, 0.23 ) }
    dend_18 { pt3dadd( -224.813, -179.442, -50.2122, 0.23 ) }
    dend_18 { pt3dadd( -225.637, -179.323, -50.2976, 1.36 ) }
    dend_18 { pt3dadd( -226.216, -179.114, -50.2986, 1.36 ) }
    dend_18 { pt3dadd( -228.557, -177.988, -50.1364, 0.23 ) }
    dend_18 { pt3dadd( -229.037, -177.732, -50.0867, 0.23 ) }
    dend_18 { pt3dadd( -230.515, -176.856, -49.9002, 0.23 ) }
    dend_18 { pt3dadd( -232.329, -175.735, -49.6881, 1.14 ) }
    dend_18 { pt3dadd( -233.705, -174.915, -49.5472, 0.23 ) }
    dend_18 { pt3dadd( -235.879, -173.874, -49.3987, 0.23 ) }
    dend_18 { pt3dadd( -237.124, -173.477, -49.4121, 1.36 ) }
    dend_18 { pt3dadd( -239.051, -172.964, -49.4661, 0.23 ) }
    dend_18 { pt3dadd( -240.714, -172.637, -49.5662, 1.14 ) }
    dend_18 { pt3dadd( -241.97, -172.445, -49.7536, 1.14 ) }
    dend_18 { pt3dadd( -244.889, -172.164, -50.4053, 0.23 ) }
    dend_18 { pt3dadd( -247.37, -172.255, -51.1153, 1.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_6 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -8.89629, -37.0604, -0.152418, 0.23 ) }
    dend_16 { pt3dadd( -9.07273, -38.4555, 0.900069, 0.23 ) }
    dend_16 { pt3dadd( -9.15411, -38.8283, 1.13882, 0.23 ) }
    dend_16 { pt3dadd( -9.34982, -39.597, 1.61937, 0.23 ) }
    dend_16 { pt3dadd( -9.49023, -40.176, 1.9545, 1.14 ) }
    dend_16 { pt3dadd( -9.70634, -41.0867, 2.44263, 0.23 ) }
    dend_16 { pt3dadd( -9.8791, -41.8145, 2.81671, 1.14 ) }
    dend_16 { pt3dadd( -10.1521, -42.9559, 3.31457, 0.23 ) }
    dend_16 { pt3dadd( -10.4214, -44.1193, 3.80514, 0.23 ) }
    dend_16 { pt3dadd( -10.6247, -45.0873, 4.19978, 1.36 ) }
    dend_16 { pt3dadd( -11.0431, -47.02, 4.94967, 0.23 ) }
    dend_16 { pt3dadd( -11.1759, -47.6269, 5.16459, 0.23 ) }
    dend_16 { pt3dadd( -11.3531, -48.492, 5.4595, 0.91 ) }
    dend_16 { pt3dadd( -11.4308, -48.9226, 5.6011, 0.91 ) }
    dend_16 { pt3dadd( -11.6293, -50.0736, 5.96004, 0.23 ) }
    dend_16 { pt3dadd( -11.7861, -50.9725, 6.24926, 0.23 ) }
    dend_16 { pt3dadd( -11.9209, -51.9739, 6.58038, 0.68 ) }
    dend_16 { pt3dadd( -12.1226, -53.8694, 7.24992, 0.23 ) }
    dend_16 { pt3dadd( -12.1627, -54.4357, 7.47135, 1.36 ) }
    dend_16 { pt3dadd( -12.1851, -54.9119, 7.66797, 1.36 ) }
    dend_16 { pt3dadd( -12.1923, -56.1211, 8.18484, 0.45 ) }
    dend_16 { pt3dadd( -12.1357, -57.1313, 8.62528, 1.14 ) }
    dend_16 { pt3dadd( -12.0219, -58.288, 9.16312, 0.23 ) }
    dend_16 { pt3dadd( -11.8958, -59.1406, 9.56159, 0.45 ) }
    dend_16 { pt3dadd( -11.6978, -60.4049, 10.1679, 0.23 ) }
    dend_16 { pt3dadd( -11.5332, -61.3865, 10.636, 0.23 ) }
    dend_16 { pt3dadd( -11.392, -62.249, 11.0564, 0.91 ) }
    dend_16 { pt3dadd( -11.2606, -63.5008, 11.6694, 0.23 ) }
    dend_16 { pt3dadd( -11.1638, -64.7604, 12.2774, 0.91 ) }
    dend_16 { pt3dadd( -11.1275, -65.4264, 12.5899, 0.23 ) }
    dend_16 { pt3dadd( -11.0994, -66.4137, 13.0565, 1.14 ) }
    dend_16 { pt3dadd( -11.1781, -67.6189, 13.618, 0.23 ) }
    dend_16 { pt3dadd( -11.3294, -68.6338, 14.0555, 0.91 ) }
    dend_16 { pt3dadd( -11.5206, -69.336, 14.327, 0.23 ) }
    dend_16 { pt3dadd( -11.9399, -70.6364, 14.8232, 0.23 ) }
    dend_16 { pt3dadd( -12.1264, -71.1604, 15.0137, 0.91 ) }
    dend_16 { pt3dadd( -12.8305, -72.9143, 15.6258, 0.23 ) }
    dend_16 { pt3dadd( -13.1925, -73.7823, 15.8991, 1.14 ) }
    dend_16 { pt3dadd( -14.0191, -75.6176, 16.4707, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 64/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.89629, -37.0604, -0.152418, 1.59 ) }
    dend_7 { pt3dadd( -8.98691, -38.7589, -0.18635, 1.59 ) }
    dend_7 { pt3dadd( -9.12623, -41.3703, -0.238516, 2.27 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 67/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -9.12623, -41.3703, -0.238516, 0.23 ) }
    dend_11 { pt3dadd( -8.6024, -44.6567, 0.174762, 0.23 ) }
    dend_11 { pt3dadd( -8.20241, -46.9614, 0.452668, 0.45 ) }
    dend_11 { pt3dadd( -7.83927, -48.6433, 0.640986, 1.36 ) }
    dend_11 { pt3dadd( -7.29009, -50.8519, 0.815928, 1.36 ) }
    dend_11 { pt3dadd( -6.63017, -53.3422, 0.968639, 0.91 ) }
    dend_11 { pt3dadd( -5.93811, -55.8368, 1.07411, 1.14 ) }
    dend_11 { pt3dadd( -5.51773, -57.3613, 1.09718, 1.14 ) }
    dend_11 { pt3dadd( -4.45743, -61.1768, 1.06102, 0.91 ) }
    dend_11 { pt3dadd( -3.76639, -63.68, 0.980293, 1.14 ) }
    dend_11 { pt3dadd( -3.32843, -65.3421, 0.89918, 1.14 ) }
    dend_11 { pt3dadd( -2.8164, -67.3891, 0.779398, 0.23 ) }
    dend_11 { pt3dadd( -2.25338, -69.9286, 0.624861, 0.23 ) }
    dend_11 { pt3dadd( -1.99866, -71.3264, 0.550769, 0.23 ) }
    dend_11 { pt3dadd( -1.75465, -73.0843, 0.483102, 2.05 ) }
    dend_11 { pt3dadd( -1.40809, -75.9076, 0.44471, 1.59 ) }
    dend_11 { pt3dadd( -1.19634, -77.6783, 0.435615, 1.59 ) }
    dend_11 { pt3dadd( -0.951478, -79.667, 0.451258, 0.45 ) }
    dend_11 { pt3dadd( -0.671477, -81.6396, 0.496778, 1.14 ) }
    dend_11 { pt3dadd( -0.378697, -83.6232, 0.568347, 1.14 ) }
    dend_11 { pt3dadd( 0.012901, -86.4492, 0.681716, 1.59 ) }
    dend_11 { pt3dadd( 0.277942, -88.4237, 0.737681, 1.14 ) }
    dend_11 { pt3dadd( 0.673276, -91.8336, 0.797853, 0.68 ) }
    dend_11 { pt3dadd( 0.872284, -93.733, 0.815241, 1.14 ) }
    dend_11 { pt3dadd( 1.11062, -96.2962, 0.821434, 0.23 ) }
    dend_11 { pt3dadd( 1.29846, -98.6956, 0.815946, 1.59 ) }
    dend_11 { pt3dadd( 1.39589, -100.816, 0.804044, 0.68 ) }
    dend_11 { pt3dadd( 1.44435, -102.39, 0.79194, 0.91 ) }
    dend_11 { pt3dadd( 1.4887, -104.672, 0.772046, 0.91 ) }
    dend_11 { pt3dadd( 1.56084, -108.093, 0.749273, 1.36 ) }
    dend_11 { pt3dadd( 1.68473, -111.523, 0.764171, 0.91 ) }
    dend_11 { pt3dadd( 1.96112, -116.161, 0.83702, 1.14 ) }
    dend_11 { pt3dadd( 2.12596, -118.449, 0.911093, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( 2.31178, -120.712, 1.00314, 1.14 ) }
    dend_11 { pt3dadd( 2.4991, -123.567, 1.13173, 0.23 ) }
    dend_11 { pt3dadd( 2.60534, -125.885, 1.24326, 0.68 ) }
    dend_11 { pt3dadd( 2.66405, -128.493, 1.37202, 0.45 ) }
    dend_11 { pt3dadd( 2.66994, -130.12, 1.44143, 2.05 ) }
    dend_11 { pt3dadd( 2.57343, -134.195, 1.58189, 0.91 ) }
    dend_11 { pt3dadd( 2.37307, -138.955, 1.7085, 0.45 ) }
    dend_11 { pt3dadd( 2.25924, -140.794, 1.74169, 0.91 ) }
    dend_11 { pt3dadd( 2.06702, -143.104, 1.75644, 0.91 ) }
    dend_11 { pt3dadd( 1.80989, -145.705, 1.74219, 0.23 ) }
    dend_11 { pt3dadd( 1.6764, -147.129, 1.72093, 0.91 ) }
    dend_11 { pt3dadd( 1.47004, -149.976, 1.6938, 0.45 ) }
    dend_11 { pt3dadd( 1.35078, -152.577, 1.71278, 1.36 ) }
    dend_11 { pt3dadd( 1.27398, -154.843, 1.76656, 0.68 ) }
    dend_11 { pt3dadd( 1.24721, -155.82, 1.80665, 1.14 ) }
    dend_11 { pt3dadd( 1.21797, -157.847, 1.92486, 0.23 ) }
    dend_11 { pt3dadd( 1.26734, -159.57, 2.04292, 0.68 ) }
    dend_11 { pt3dadd( 1.43292, -161.598, 2.19384, 0.23 ) }
    dend_11 { pt3dadd( 1.59688, -163.025, 2.30105, 0.91 ) }
    dend_11 { pt3dadd( 1.83684, -164.727, 2.42744, 0.91 ) }
    dend_11 { pt3dadd( 2.38331, -168.657, 2.68531, 0.23 ) }
    dend_11 { pt3dadd( 2.71021, -171.372, 2.83019, 1.36 ) }
    dend_11 { pt3dadd( 3.15117, -175.634, 3.05551, 0.23 ) }
    dend_11 { pt3dadd( 3.33873, -177.678, 3.15781, 1.14 ) }
    dend_11 { pt3dadd( 3.4053, -178.559, 3.20354, 1.14 ) }
    dend_11 { pt3dadd( 3.56813, -181.202, 3.36844, 0.23 ) }
    dend_11 { pt3dadd( 3.65987, -183.579, 3.53744, 0.91 ) }
    dend_11 { pt3dadd( 3.68382, -185.069, 3.64991, 1.82 ) }
    dend_11 { pt3dadd( 3.68888, -186.485, 3.77833, 1.82 ) }
    dend_11 { pt3dadd( 3.74826, -190.179, 4.14756, 0.45 ) }
    dend_11 { pt3dadd( 3.80029, -192.023, 4.35741, 1.14 ) }
    dend_11 { pt3dadd( 3.86032, -193.176, 4.51081, 1.14 ) }
    dend_11 { pt3dadd( 4.00086, -195.144, 4.78808, 0.23 ) }
    dend_11 { pt3dadd( 4.26698, -198.08, 5.19921, 0.23 ) }
    dend_11 { pt3dadd( 4.39129, -199.227, 5.36258, 1.36 ) }
    dend_11 { pt3dadd( 4.58605, -200.726, 5.55825, 1.36 ) }
    dend_11 { pt3dadd( 4.94692, -203.29, 5.83431, 0.23 ) }
    dend_11 { pt3dadd( 5.28319, -205.538, 6.06937, 0.91 ) }
    dend_11 { pt3dadd( 5.54385, -207.097, 6.22286, 0.91 ) }
    dend_11 { pt3dadd( 6.1151, -210.173, 6.49185, 0.23 ) }
    dend_11 { pt3dadd( 6.51281, -212.26, 6.65703, 0.45 ) }
    dend_11 { pt3dadd( 7.00145, -214.773, 6.83745, 0.91 ) }
    dend_11 { pt3dadd( 7.47441, -217.08, 7.00121, 0.45 ) }
    dend_11 { pt3dadd( 7.81198, -218.884, 7.13316, 1.14 ) }
    dend_11 { pt3dadd( 8.03122, -220.304, 7.25247, 1.14 ) }
    dend_11 { pt3dadd( 8.34238, -222.6, 7.48316, 0.23 ) }
    dend_11 { pt3dadd( 8.4451, -223.487, 7.5839, 1.14 ) }
    dend_11 { pt3dadd( 8.63897, -225.226, 7.79395, 1.14 ) }
    dend_11 { pt3dadd( 9.04668, -228.946, 8.2415, 0.23 ) }
    dend_11 { pt3dadd( 9.39774, -232.134, 8.64243, 0.68 ) }
    dend_11 { pt3dadd( 9.60802, -233.864, 8.86144, 1.59 ) }
    dend_11 { pt3dadd( 9.77266, -234.975, 9.00299, 2.05 ) }
    dend_11 { pt3dadd( 10.5271, -238.959, 9.49049, 0.23 ) }
    dend_11 { pt3dadd( 10.8665, -240.352, 9.665, 1.14 ) }
    dend_11 { pt3dadd( 11.2013, -241.388, 9.79548, 1.59 ) }
    dend_11 { pt3dadd( 12.1649, -243.767, 10.0688, 0.45 ) }
    dend_11 { pt3dadd( 13.0616, -245.762, 10.3274, 0.91 ) }
    dend_11 { pt3dadd( 14.2111, -248.139, 10.7043, 0.23 ) }
    dend_11 { pt3dadd( 15.2206, -250.092, 11.058, 1.14 ) }
    dend_11 { pt3dadd( 15.8533, -251.231, 11.2887, 1.14 ) }
    dend_11 { pt3dadd( 17.9696, -254.848, 12.0741, 0.23 ) }
    dend_11 { pt3dadd( 19.3328, -257.02, 12.5738, 0.23 ) }
    dend_11 { pt3dadd( 20.2726, -258.484, 12.9089, 0.68 ) }
    dend_11 { pt3dadd( 20.7967, -259.289, 13.0834, 0.68 ) }
    dend_11 { pt3dadd( 22.0142, -261.234, 13.4539, 0.23 ) }
    dend_11 { pt3dadd( 23.2984, -263.301, 13.828, 1.36 ) }
    dend_11 { pt3dadd( 24.9055, -265.905, 14.2371, 0.45 ) }
    dend_11 { pt3dadd( 26.0246, -267.704, 14.434, 1.14 ) }
    dend_11 { pt3dadd( 26.816, -269.014, 14.5374, 0.23 ) }
    dend_11 { pt3dadd( 27.7998, -270.757, 14.6635, 2.5 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 70/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.12623, -41.3703, -0.238516, 0.91 ) }
    dend_8 { pt3dadd( -11.4554, -44.9185, -0.198879, 0.91 ) }
    dend_8 { pt3dadd( -13.2503, -47.6527, -0.168337, 0.91 ) }
    dend_8 { pt3dadd( -14.847, -50.0852, -0.141163, 0.68 ) }
    dend_8 { pt3dadd( -15.789, -51.5201, -0.125134, 1.36 ) }
    dend_8 { pt3dadd( -17.1719, -53.6268, -0.101602, 1.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 76/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 27.7998, -270.757, 14.6635, 0.23 ) }
    dend_15 { pt3dadd( 30.0526, -270.741, 14.6518, 0.23 ) }
    dend_15 { pt3dadd( 31.6221, -270.735, 14.6614, 0.91 ) }
    dend_15 { pt3dadd( 33.7317, -270.745, 14.694, 0.23 ) }
    dend_15 { pt3dadd( 35.6116, -270.754, 14.7231, 1.14 ) }
    dend_15 { pt3dadd( 37.6718, -270.764, 14.7549, 0.23 ) }
    dend_15 { pt3dadd( 38.2261, -270.767, 14.7635, 0.68 ) }
    dend_15 { pt3dadd( 39.2432, -270.681, 14.8244, 0.23 ) }
    dend_15 { pt3dadd( 39.6643, -270.625, 14.8447, 0.68 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 27.7998, -270.757, 14.6635, 0.23 ) }
    dend_12 { pt3dadd( 26.9055, -274.24, 14.6743, 0.23 ) }
    dend_12 { pt3dadd( 26.6576, -275.329, 14.6997, 0.91 ) }
    dend_12 { pt3dadd( 26.3541, -276.755, 14.7771, 0.45 ) }
    dend_12 { pt3dadd( 26.1758, -277.589, 14.8396, 1.36 ) }
    dend_12 { pt3dadd( 25.7235, -279.474, 14.9792, 0.23 ) }
    dend_12 { pt3dadd( 25.4411, -280.627, 15.0811, 1.14 ) }
    dend_12 { pt3dadd( 24.7137, -283.593, 15.408, 0.23 ) }
    dend_12 { pt3dadd( 24.1823, -285.555, 15.6844, 0.23 ) }
    dend_12 { pt3dadd( 23.7127, -287.286, 15.9619, 1.59 ) }
    dend_12 { pt3dadd( 23.1345, -289.635, 16.3378, 0.91 ) }
    dend_12 { pt3dadd( 22.6682, -291.892, 16.6955, 0.23 ) }
    dend_12 { pt3dadd( 22.388, -293.697, 17.0109, 1.14 ) }
    dend_12 { pt3dadd( 22.1276, -296.412, 17.509, 0.23 ) }
    dend_12 { pt3dadd( 22.0541, -298.315, 17.8525, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 22.0883, -300.744, 18.2827, 0.23 ) }
    dend_12 { pt3dadd( 22.1932, -302.694, 18.6107, 1.14 ) }
    dend_12 { pt3dadd( 22.3551, -304.935, 18.9191, 0.23 ) }
    dend_12 { pt3dadd( 22.5328, -306.837, 19.1385, 1.36 ) }
    dend_12 { pt3dadd( 22.5876, -307.38, 19.1839, 1.36 ) }
    dend_12 { pt3dadd( 22.9004, -311.007, 19.3917, 0.23 ) }
    dend_12 { pt3dadd( 23.0249, -312.963, 19.3953, 0.91 ) }
    dend_12 { pt3dadd( 23.1462, -315.233, 19.2394, 0.23 ) }
    dend_12 { pt3dadd( 23.2625, -317.139, 18.9854, 1.36 ) }
    dend_12 { pt3dadd( 23.3792, -318.21, 18.7896, 1.36 ) }
    dend_12 { pt3dadd( 24.0337, -321.93, 17.9213, 0.23 ) }
    dend_12 { pt3dadd( 24.7313, -324.68, 17.1301, 1.14 ) }
    dend_12 { pt3dadd( 25.3601, -326.64, 16.4763, 0.23 ) }
    dend_12 { pt3dadd( 25.8042, -327.893, 16.0152, 1.36 ) }
    dend_12 { pt3dadd( 26.8016, -330.42, 14.9917, 0.23 ) }
    dend_12 { pt3dadd( 27.717, -332.409, 14.1244, 1.82 ) }
    dend_12 { pt3dadd( 28.0626, -332.968, 13.8563, 1.82 ) }
    dend_12 { pt3dadd( 28.689, -333.75, 13.5183, 0.45 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 18/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -17.1719, -53.6268, -0.101602, 0.68 ) }
    dend_10 { pt3dadd( -18.8368, -54.0607, -1.47614, 0.68 ) }
    dend_10 { pt3dadd( -20.4997, -54.3831, -2.96222, 1.14 ) }
    dend_10 { pt3dadd( -22.3587, -54.7657, -4.6508, 0.23 ) }
    dend_10 { pt3dadd( -23.5236, -55.0714, -5.72722, 0.23 ) }
    dend_10 { pt3dadd( -24.7184, -55.53, -6.76063, 1.14 ) }
    dend_10 { pt3dadd( -25.6916, -55.9396, -7.50825, 0.23 ) }
    dend_10 { pt3dadd( -26.8502, -56.4121, -8.27875, 0.45 ) }
    dend_10 { pt3dadd( -27.6901, -56.7665, -8.7679, 0.45 ) }
    dend_10 { pt3dadd( -28.9307, -57.2688, -9.4501, 1.14 ) }
    dend_10 { pt3dadd( -31.6607, -58.3378, -10.914, 0.23 ) }
    dend_10 { pt3dadd( -33.6788, -59.0177, -11.9805, 0.91 ) }
    dend_10 { pt3dadd( -34.9787, -59.2928, -12.6785, 0.91 ) }
    dend_10 { pt3dadd( -36.3215, -59.3139, -13.4552, 0.45 ) }
    dend_10 { pt3dadd( -37.7909, -59.0494, -14.4204, 0.45 ) }
    dend_10 { pt3dadd( -38.8544, -58.5603, -15.2577, 0.45 ) }
    dend_10 { pt3dadd( -39.752, -57.6796, -16.2468, 0.91 ) }
    dend_10 { pt3dadd( -40.6306, -56.1582, -17.7093, 0.45 ) }
    dend_10 { pt3dadd( -41.0293, -55.0361, -18.6163, 0.45 ) }
    dend_10 { pt3dadd( -41.2259, -54.007, -19.2874, 0.45 ) }
    dend_10 { pt3dadd( -41.4039, -52.8544, -19.8129, 0.45 ) }
    dend_10 { pt3dadd( -40.7327, -53.7755, -19.7548, 1.36 ) }
    dend_10 { pt3dadd( -39.6619, -54.5972, -19.9279, 1.36 ) }
    dend_10 { pt3dadd( -38.4945, -55.6055, -20.0752, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 42/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -17.1719, -53.6268, -0.101602, 0.23 ) }
    dend_9 { pt3dadd( -17.4435, -56.0388, 0.242289, 0.23 ) }
    dend_9 { pt3dadd( -17.5435, -57.1579, 0.405246, 0.91 ) }
    dend_9 { pt3dadd( -17.6291, -58.6672, 0.639026, 0.91 ) }
    dend_9 { pt3dadd( -17.6878, -60.4315, 0.903992, 0.91 ) }
    dend_9 { pt3dadd( -17.6999, -62.4021, 1.20264, 0.23 ) }
    dend_9 { pt3dadd( -17.6603, -64.645, 1.55102, 0.68 ) }
    dend_9 { pt3dadd( -17.5497, -67.0535, 1.94318, 0.45 ) }
    dend_9 { pt3dadd( -17.3728, -69.7398, 2.38766, 0.91 ) }
    dend_9 { pt3dadd( -17.197, -71.8932, 2.73792, 0.68 ) }
    dend_9 { pt3dadd( -16.9746, -74.3559, 3.11307, 1.59 ) }
    dend_9 { pt3dadd( -16.5362, -79.4535, 3.88246, 0.45 ) }
    dend_9 { pt3dadd( -16.3423, -81.6253, 4.19892, 0.45 ) }
    dend_9 { pt3dadd( -16.2159, -83.0928, 4.40386, 1.59 ) }
    dend_9 { pt3dadd( -16.135, -84.3074, 4.5581, 1.59 ) }
    dend_9 { pt3dadd( -16.0425, -87.4566, 4.89754, 0.23 ) }
    dend_9 { pt3dadd( -16.0788, -89.647, 5.09218, 0.68 ) }
    dend_9 { pt3dadd( -16.2717, -92.8018, 5.32617, 0.23 ) }
    dend_9 { pt3dadd( -16.456, -94.7286, 5.45292, 1.36 ) }
    dend_9 { pt3dadd( -16.8582, -97.9706, 5.6401, 0.45 ) }
    dend_9 { pt3dadd( -17.5823, -102.491, 5.86658, 0.45 ) }
    dend_9 { pt3dadd( -18.0084, -104.654, 5.96145, 0.45 ) }
    dend_9 { pt3dadd( -18.383, -106.285, 6.01376, 1.36 ) }
    dend_9 { pt3dadd( -18.8677, -108.017, 6.06434, 1.59 ) }
    dend_9 { pt3dadd( -19.4014, -109.68, 6.12047, 0.23 ) }
    dend_9 { pt3dadd( -19.929, -111.157, 6.18193, 0.45 ) }
    dend_9 { pt3dadd( -20.9768, -114.008, 6.32099, 0.23 ) }
    dend_9 { pt3dadd( -21.3529, -115.087, 6.39399, 0.23 ) }
    dend_9 { pt3dadd( -22.0286, -117.028, 6.58452, 1.14 ) }
    dend_9 { pt3dadd( -23.1462, -120.18, 6.98371, 0.23 ) }
    dend_9 { pt3dadd( -23.8158, -122.048, 7.25885, 1.14 ) }
    dend_9 { pt3dadd( -24.6251, -124.341, 7.66517, 0.23 ) }
    dend_9 { pt3dadd( -25.3538, -126.373, 8.06931, 0.45 ) }
    dend_9 { pt3dadd( -26.0017, -128.267, 8.52484, 0.23 ) }
    dend_9 { pt3dadd( -26.5317, -129.797, 8.94284, 1.14 ) }
    dend_9 { pt3dadd( -26.7973, -130.553, 9.17633, 1.14 ) }
    dend_9 { pt3dadd( -27.4671, -132.375, 9.76719, 0.23 ) }
    dend_9 { pt3dadd( -27.8608, -133.381, 10.1088, 0.91 ) }
    dend_9 { pt3dadd( -28.7043, -135.555, 10.804, 0.23 ) }
    dend_9 { pt3dadd( -29.1661, -136.955, 11.2614, 1.14 ) }
    dend_9 { pt3dadd( -29.667, -138.728, 11.841, 0.23 ) }
    dend_9 { pt3dadd( -29.9342, -139.992, 12.223, 0.91 ) }
    dend_9 { pt3dadd( -30.0221, -140.683, 12.4039, 0.23 ) }
    dend_9 { pt3dadd( -30.0798, -141.655, 12.6447, 0.68 ) }
    dend_9 { pt3dadd( -30.1641, -144.057, 13.1624, 0.23 ) }
    dend_9 { pt3dadd( -30.1934, -145.491, 13.4688, 0.68 ) }
    dend_9 { pt3dadd( -30.2802, -147.67, 13.8946, 0.23 ) }
    dend_9 { pt3dadd( -30.379, -149.153, 14.2119, 0.91 ) }
    dend_9 { pt3dadd( -30.8157, -152.956, 15.0086, 0.23 ) }
    dend_9 { pt3dadd( -31.0148, -154.461, 15.3242, 0.68 ) }
    dend_9 { pt3dadd( -31.2641, -155.994, 15.6351, 0.23 ) }
    dend_9 { pt3dadd( -31.58, -157.581, 15.9831, 0.91 ) }
    dend_9 { pt3dadd( -32.4153, -160.801, 16.742, 0.23 ) }
    dend_9 { pt3dadd( -33.1002, -163.011, 17.2794, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 28.689, -333.75, 13.5183, 0.23 ) }
    dend_14 { pt3dadd( 29.5012, -334.891, 13.606, 0.23 ) }
    dend_14 { pt3dadd( 30.499, -336.211, 13.6641, 0.91 ) }
    dend_14 { pt3dadd( 31.4529, -337.357, 13.7099, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_14 { pt3dadd( 32.5413, -338.687, 13.7159, 0.91 ) }
    dend_14 { pt3dadd( 33.2711, -339.591, 13.707, 0.23 ) }
    dend_14 { pt3dadd( 34.265, -340.823, 13.6521, 0.68 ) }
    dend_14 { pt3dadd( 35.0828, -341.835, 13.5439, 0.23 ) }
    dend_14 { pt3dadd( 36.0488, -342.974, 13.3493, 0.91 ) }
    dend_14 { pt3dadd( 37.0485, -344.06, 13.0819, 0.23 ) }
    dend_14 { pt3dadd( 37.8823, -344.947, 12.797, 0.91 ) }
    dend_14 { pt3dadd( 39.0521, -346.274, 12.3225, 0.23 ) }
    dend_14 { pt3dadd( 40.0706, -347.46, 11.8615, 1.14 ) }
    dend_14 { pt3dadd( 41.4813, -349.176, 11.1682, 0.23 ) }
    dend_14 { pt3dadd( 42.5214, -350.457, 10.6082, 0.68 ) }
    dend_14 { pt3dadd( 43.5217, -351.622, 10.0764, 0.23 ) }
    dend_14 { pt3dadd( 44.675, -353.006, 9.38908, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 28.689, -333.75, 13.5183, 0.23 ) }
    dend_13 { pt3dadd( 29.2548, -334.564, 13.4383, 0.23 ) }
    dend_13 { pt3dadd( 29.9536, -335.568, 13.3394, 0.68 ) }
    dend_13 { pt3dadd( 30.2936, -336.056, 13.2912, 0.23 ) }
    dend_13 { pt3dadd( 31.1883, -337.342, 13.1646, 0.91 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_39 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_36 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_28 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_9 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_3 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_25 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_34 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_4 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_5 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_6 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_35 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_13 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 3
    dend_2 nseg = 3
    dend_23 nseg = 3
    dend_20 nseg = 9
    dend_39 nseg = 5
    dend_36 nseg = 7
    dend_30 nseg = 3
    dend_17 nseg = 13
    dend_38 nseg = 5
    dend_32 nseg = 3
    dend_31 nseg = 3
    dend_29 nseg = 5
    dend_28 nseg = 5
    dend_19 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 3
    dend_11 nseg = 11
    dend_12 nseg = 3
    dend_9 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L5_SBC_f02100dc02_0_0


