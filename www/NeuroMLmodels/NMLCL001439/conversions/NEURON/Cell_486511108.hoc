// Cell: Cell_486511108
/*
{
  "id" : "Cell_486511108",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "420.649, 430.602, 26.32, 9.6094", "425.454, 430.602, 26.32, 9.6094", "430.258, 430.602, 26.32, 9.6094" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "425.453, 430.602, 26.32, 1.0", "431.295, 444.418, 26.32, 1.0", "437.136, 458.234, 26.32, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000520345509436
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "428.784, 428.493, 29.3941, 0.9152", "429.661, 427.85, 29.8981, 0.5884", "430.446, 427.024, 30.1165, 0.4878", "431.207, 426.22, 30.3456, 0.3994", "432.02, 425.639, 30.5379, 0.4468", "433.101, 425.764, 30.6704, 0.4246", "433.834, 425.379, 30.7745, 0.4594", "434.665, 424.599, 30.8504, 0.6118", "435.42, 423.79, 30.9042, 0.6984", "436.322, 423.497, 30.9604, 0.6652", "437.37, 423.259, 31.0268, 0.6286", "438.071, 422.432, 31.0976, 0.6688", "439.03, 421.81, 31.1438, 0.6762" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000520345509436
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "422.363, 433.219, 29.9247, 0.6864", "422.475, 433.781, 31.2528, 0.724", "422.756, 434.495, 31.8408, 0.6476", "423.614, 434.872, 32.5038, 0.4548", "424.478, 435.589, 33.1537, 0.345", "424.346, 436.425, 33.7274, 0.312", "423.764, 437.359, 34.1746, 0.3396", "424.543, 437.955, 34.491, 0.4154" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000520345509436
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "423.285, 434.141, 27.3493, 0.6864", "423.749, 435.06, 27.5686, 0.9998", "424.306, 435.742, 27.6618, 1.1084", "424.986, 436.485, 27.7475, 0.8686", "425.222, 437.463, 27.8489, 0.7348", "425.222, 438.509, 27.9644, 0.5798", "425.313, 439.643, 28.0762, 0.5268", "425.506, 440.766, 28.1733, 0.4352", "425.702, 441.869, 28.2537, 0.461", "426.003, 442.881, 28.2932, 0.4742", "426.526, 443.742, 28.2766, 0.4378", "426.594, 444.856, 28.2299, 0.437", "426.544, 445.609, 28.224, 0.5694", "426.404, 446.588, 28.2733, 0.624", "426.63, 447.696, 28.3581, 0.5062", "426.823, 448.807, 28.4561, 0.4364", "426.797, 449.947, 28.5421, 0.5014", "426.599, 451.063, 28.5877, 0.5932", "426.823, 452.13, 28.5723, 0.6742", "426.679, 453.222, 28.5219, 0.7994", "426.659, 454.332, 28.4446, 0.9246", "426.943, 455.424, 28.3559, 0.9896", "427.511, 456.363, 28.2772, 0.7764" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000520345509436
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "422.225, 433.185, 29.7044, 0.6864", "421.35, 433.68, 31.1646, 0.6534", "421.331, 434.28, 31.7965, 0.6354", "421.707, 433.92, 32.5735, 0.5422", "421.724, 433.258, 33.4292, 0.4304", "420.847, 432.655, 34.2563, 0.3862", "419.942, 432.48, 34.9588, 0.4272", "418.853, 432.279, 35.5099, 0.5928", "417.9, 432.138, 35.9458, 0.6932" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000520345509436
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "428.058, 426.648, 26.9727, 0.2288", "428.685, 425.696, 27.0157, 0.3526", "429.249, 424.709, 27.0382, 0.4156", "430.13, 424.076, 27.0421, 0.553", "431.118, 423.583, 27.0217, 0.7092", "431.947, 423.097, 27.0074, 0.7902", "432.485, 422.152, 26.9841, 0.8088", "433.305, 421.356, 26.9544, 0.7966", "434.198, 420.641, 26.924, 0.7708", "434.885, 419.726, 26.896, 0.7386" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000520345509436
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "425.711, 435.228, 24.8483, 0.6864", "425.917, 436.33, 24.9716, 0.974", "426.55, 437.154, 25.0276, 0.8648", "427.338, 437.983, 25.0944, 0.6796", "427.847, 438.687, 25.1868, 0.7116", "428.446, 439.457, 25.2588, 0.7788", "428.778, 440.48, 25.2733, 0.8644", "428.883, 441.61, 25.2302, 0.755", "429.253, 442.595, 25.1235, 0.71", "429.671, 443.595, 24.9725, 0.775", "430.593, 443.875, 24.8112, 0.8622", "431.006, 444.665, 24.6285, 0.9562", "431.63, 445.532, 24.4472, 1.001" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000520345509436
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "428.771, 428.51, 23.2498, 0.2288", "429.749, 428.159, 22.6572, 0.3866", "430.318, 427.689, 22.3913, 0.358", "431.248, 428.294, 22.0967, 0.346" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000520345509436
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "421.226, 429.119, 26.3299, 4.1698", "419.313, 428.0, 26.3057, 2.2084", "417.131, 427.438, 26.1422, 1.3884", "414.942, 426.977, 25.8628, 1.5254", "412.707, 426.489, 25.542, 1.5134", "410.486, 426.17, 25.211, 1.4102", "409.442, 425.765, 24.9382, 1.3816" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000520345509436
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "437.136, 458.234, 26.32, 1.0", "442.977, 472.05, 26.32, 1.0", "448.819, 485.866, 26.32, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "439.03, 421.81, 31.1438, 0.6762", "440.251, 421.815, 32.2711, 0.2288", "441.011, 422.274, 32.4184, 0.5154", "442.108, 421.969, 32.4778, 0.4986", "443.194, 421.61, 32.5567, 0.3968", "444.237, 421.144, 32.6586, 0.3224", "445.328, 421.048, 32.7944, 0.3158", "445.834, 420.464, 32.9854, 0.3518", "446.522, 420.115, 33.185, 0.4146", "447.066, 419.426, 33.4244, 0.5506", "448.009, 419.011, 33.6798, 0.7062", "448.774, 418.339, 33.9536, 0.7772", "449.315, 417.712, 34.272, 0.8206", "450.103, 417.002, 34.6128, 0.6432", "450.844, 416.264, 34.9908, 0.6506", "451.03, 415.223, 35.4088, 0.6332", "451.29, 414.328, 35.8809, 0.524", "451.439, 413.504, 36.398, 0.4654", "451.686, 412.744, 36.8903, 0.5748", "452.191, 411.786, 37.3467, 0.634", "453.051, 411.047, 37.7588, 0.5246", "454.068, 410.928, 38.148, 0.4722", "454.875, 410.28, 38.5305, 0.5588", "455.626, 409.417, 38.9116, 0.7434", "456.552, 408.749, 39.3067, 0.7392", "457.649, 408.453, 39.7188, 0.5836", "458.525, 407.793, 40.161, 0.5542", "459.078, 406.954, 40.6526, 0.6152", "459.4, 405.912, 41.1933, 0.6248", "459.977, 405.065, 41.7824, 0.4598", "460.601, 404.113, 42.4068, 0.3542", "461.268, 403.207, 43.0601, 0.33", "461.994, 402.364, 43.7402, 0.3668", "462.867, 401.702, 44.4478, 0.4976", "463.813, 401.129, 45.187, 0.435", "464.796, 400.689, 45.9626, 0.4284", "465.745, 400.359, 46.7768, 0.3416", "466.649, 400.14, 47.6266, 0.3142", "467.567, 399.866, 48.4935, 0.3008", "468.495, 399.575, 49.3531, 0.3238", "469.577, 399.239, 50.1511, 0.3626", "470.684, 399.273, 50.846, 0.4528", "471.808, 399.341, 51.4472, 0.5322", "472.892, 399.214, 51.9806, 0.4198", "473.903, 398.754, 52.4798, 0.3276", "474.887, 398.215, 52.9752, 0.2788", "475.786, 397.562, 53.4951, 0.2822", "476.588, 396.793, 54.0523, 0.2888", "477.292, 395.922, 54.6431, 0.3006", "477.773, 394.917, 55.2614, 0.325", "478.081, 393.852, 55.8986, 0.3576", "478.443, 392.858, 56.5474, 0.4796", "479.367, 392.513, 57.2015, 0.4068", "479.857, 392.384, 57.8908, 0.3504", "480.867, 392.789, 58.5858, 0.3228", "481.834, 392.373, 59.2449, 0.3536", "482.656, 391.596, 59.8472, 0.4722", "483.43, 390.758, 60.3753, 0.3932", "484.388, 390.223, 60.83, 0.3254", "485.456, 389.833, 61.2105, 0.2746", "486.518, 389.428, 61.5376, 0.2746", "487.56, 388.999, 61.8383, 0.2746", "488.584, 388.528, 62.1267, 0.2746", "489.602, 388.029, 62.4078, 0.2746", "490.617, 387.512, 62.6791, 0.2746", "491.697, 387.166, 62.9401, 0.2746", "492.745, 386.729, 63.1834, 0.2746", "493.742, 386.176, 63.3996, 0.2746", "494.671, 385.507, 63.5874, 0.2746", "495.576, 384.85, 63.7619, 0.2746", "496.381, 384.065, 63.9223, 0.2746", "497.148, 383.23, 64.073, 0.2746", "497.948, 382.414, 64.2314, 0.2746", "498.776, 381.633, 64.4196, 0.2744", "499.73, 381.023, 64.6492, 0.2744", "500.724, 380.461, 64.9314, 0.2742", "501.694, 379.859, 65.2845, 0.274", "502.637, 379.213, 65.7168, 0.2736", "503.608, 378.662, 66.2379, 0.2728", "504.689, 378.534, 66.8917, 0.2712", "505.698, 378.59, 67.6589, 0.2684", "506.558, 378.674, 68.5157, 0.2626", "507.515, 378.757, 69.4148, 0.2542", "508.556, 378.918, 70.2988, 0.2288", "509.534, 379.015, 72.5449, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "439.03, 421.81, 31.1438, 0.6762", "439.435, 421.522, 31.1528, 0.558", "440.304, 420.8, 31.113, 0.5228", "441.067, 420.062, 31.0036, 0.7076", "441.925, 419.42, 30.8258, 0.7522", "442.87, 418.79, 30.6088, 0.6796", "443.594, 418.108, 30.3932, 0.6132", "444.557, 417.84, 30.1792, 0.6166", "445.627, 417.469, 29.9978, 0.6944", "446.605, 416.88, 29.8572, 0.7212", "447.621, 416.394, 29.7472, 0.6536", "448.635, 415.905, 29.6685, 0.6406", "449.698, 415.574, 29.615, 0.5292", "450.813, 415.315, 29.5789, 0.5166", "451.858, 414.904, 29.5462, 0.696", "452.794, 414.247, 29.5081, 0.7308", "453.763, 413.643, 29.4574, 0.639", "454.73, 413.111, 29.3975, 0.5422", "455.79, 412.794, 29.3303, 0.4634", "456.484, 412.461, 29.2093, 0.5142", "457.557, 412.461, 29.0332, 0.5696", "458.606, 412.461, 28.8369, 0.6312", "459.59, 412.461, 28.6574, 0.7164", "460.681, 412.216, 28.4917, 0.7852", "461.671, 411.795, 28.3349, 0.6594", "462.278, 410.866, 28.2036, 0.5132", "462.591, 409.766, 28.1064, 0.5062", "463.016, 408.765, 28.056, 0.5834", "463.473, 407.762, 28.044, 0.5176", "463.952, 406.748, 28.0596, 0.4942", "464.693, 405.908, 28.1159, 0.6584", "465.501, 405.124, 28.2122, 0.6418", "466.39, 404.434, 28.3307, 0.5692", "467.449, 404.221, 28.4754, 0.6362", "468.559, 404.187, 28.6639, 0.6966", "469.455, 403.616, 28.8954, 0.6618", "470.254, 402.961, 29.1718, 0.6224", "471.324, 402.599, 29.4748, 0.6574", "472.352, 402.124, 29.7884, 0.6552", "473.293, 401.502, 30.0891, 0.5182", "474.177, 400.78, 30.3568, 0.4532", "475.045, 400.064, 30.5858, 0.5584", "475.906, 399.351, 30.7745, 0.573", "476.956, 398.951, 30.9019, 0.5612", "478.01, 398.564, 30.9602, 0.499", "479.113, 398.339, 30.9728, 0.5784", "480.215, 398.114, 30.9557, 0.697", "481.291, 397.964, 30.8913, 0.8272", "482.368, 397.815, 30.777, 0.5872", "483.491, 397.665, 30.6494, 0.4214", "484.615, 397.515, 30.5276, 0.36", "485.739, 397.444, 30.403, 0.4246", "486.862, 397.378, 30.273, 0.593", "487.987, 397.259, 30.1529, 0.67", "489.111, 397.109, 30.0499, 0.5812", "490.239, 397.153, 29.9533, 0.6264", "491.37, 397.327, 29.8525, 0.6058", "492.505, 397.353, 29.7352, 0.6176", "493.641, 397.353, 29.5893, 0.6246", "494.78, 397.353, 29.4073, 0.7106", "495.923, 397.353, 29.1894, 0.7446", "497.065, 397.353, 28.9414, 0.7286", "498.164, 397.134, 28.6619, 0.6262", "499.258, 396.886, 28.355, 0.5606", "500.373, 396.692, 28.0283, 0.5224", "501.494, 396.509, 27.689, 0.5036", "502.583, 396.19, 27.3449, 0.4454", "503.654, 395.786, 27.0018, 0.4512", "504.74, 395.449, 26.6578, 0.5966", "505.845, 395.186, 26.304, 0.6688", "506.952, 394.922, 25.9328, 0.6172", "508.059, 394.661, 25.5399, 0.5066", "509.104, 394.626, 25.1096, 0.6026", "510.133, 394.651, 24.6373, 0.4636", "511.171, 394.976, 24.1461, 0.3716", "512.215, 395.419, 23.665, 0.3126", "513.302, 395.691, 23.2153, 0.3474", "514.401, 395.911, 22.8141, 0.399", "515.521, 395.853, 22.4821, 0.557", "516.65, 395.664, 22.2288, 0.5478", "517.768, 395.61, 22.0495, 0.6238", "518.859, 395.958, 21.9341, 0.7704", "519.937, 396.326, 21.8702, 0.7856", "520.823, 397.047, 21.8455, 0.6878", "521.719, 397.753, 21.8425, 0.6592", "522.625, 398.446, 21.8453, 0.5524", "523.641, 398.93, 21.8475, 0.6142", "524.734, 399.271, 21.8467, 0.613", "525.84, 399.543, 21.8426, 0.4846", "526.901, 399.802, 21.8434, 0.4028", "527.844, 400.359, 21.855, 0.408", "528.903, 400.508, 21.853, 0.57", "529.956, 400.232, 21.8245, 0.5896", "531.091, 400.168, 21.7722, 0.6164", "532.228, 400.105, 21.7026, 0.4822", "533.335, 399.879, 21.6381, 0.44", "534.443, 399.643, 21.5966, 0.5034", "535.573, 399.454, 21.5826, 0.6198", "536.7, 399.266, 21.5926, 0.611", "537.838, 399.175, 21.618, 0.542", "538.981, 399.156, 21.6489, 0.6702", "540.125, 399.138, 21.6766, 0.5796", "541.216, 398.828, 21.6988, 0.633", "542.349, 398.864, 21.7188, 0.5712", "543.438, 399.197, 21.7406, 0.5514", "544.262, 399.879, 21.7557, 0.5126", "545.125, 400.562, 21.7876, 0.4498", "546.267, 400.608, 21.8424, 0.5184", "547.344, 400.987, 21.9223, 0.4328", "548.406, 401.411, 22.03, 0.3932", "549.372, 401.994, 22.1652, 0.428", "550.176, 402.699, 22.3126, 0.4244", "550.901, 403.114, 22.5108, 0.52", "551.885, 403.552, 22.7599, 0.4294", "552.964, 403.763, 23.0436, 0.418", "554.104, 403.754, 23.3302, 0.322", "555.15, 403.289, 23.5925, 0.2796", "556.178, 402.79, 23.8121, 0.2288", "557.172, 402.228, 24.1296, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "424.543, 437.955, 34.491, 0.4154", "425.403, 437.898, 35.2372, 0.4576", "426.465, 437.634, 35.4278, 0.6464", "427.437, 437.049, 35.5057, 0.5744", "428.539, 436.824, 35.6065, 0.6618", "429.671, 436.968, 35.7322, 0.6672", "430.8, 437.156, 35.8826, 0.7518", "431.914, 437.375, 36.0598, 0.7748", "432.982, 437.709, 36.272, 0.7804", "434.058, 437.98, 36.517, 0.7416", "435.202, 437.98, 36.7814, 0.6802", "436.276, 437.959, 37.0712, 0.516", "437.399, 437.811, 37.3677, 0.455", "438.53, 437.752, 37.6617, 0.5322", "439.661, 437.812, 37.9462, 0.6686", "440.778, 438.001, 38.2138, 0.7254", "441.668, 438.006, 38.4409, 0.6382", "442.678, 437.98, 38.6747, 0.724", "443.714, 437.98, 38.9404, 0.8266", "444.836, 437.864, 39.2224, 0.8336", "445.586, 437.808, 39.5354, 0.592", "446.546, 438.289, 39.8387, 0.4644", "447.599, 438.733, 40.0868, 0.5022", "448.676, 439.117, 40.2396, 0.6132", "449.785, 439.354, 40.2909, 0.6208" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "424.543, 437.955, 34.491, 0.4154", "425.376, 438.467, 34.6878, 0.4374", "425.559, 439.317, 34.8272, 0.368", "424.745, 440.037, 34.9238, 0.316", "425.161, 440.867, 35.0084, 0.3052", "424.56, 441.669, 35.1058, 0.3262", "424.437, 442.798, 35.2142, 0.3958", "424.087, 443.881, 35.3318, 0.3752", "423.866, 445.002, 35.4497, 0.377", "423.451, 446.066, 35.567, 0.415", "422.976, 447.104, 35.6768, 0.5468", "422.811, 448.206, 35.7711, 0.7212", "422.678, 449.321, 35.8599, 0.6974" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "427.511, 456.363, 28.2772, 0.7764", "427.203, 457.128, 28.492, 0.2288", "426.083, 457.249, 28.2024, 0.3322", "425.152, 457.862, 28.0876, 0.4068", "424.49, 458.78, 27.9465, 0.3964", "424.121, 459.828, 27.766, 0.4124", "423.864, 460.924, 27.5478, 0.499", "423.606, 462.011, 27.308, 0.6136", "423.534, 463.136, 27.035, 0.5908", "423.372, 464.252, 26.7224, 0.547", "423.365, 465.391, 26.3777, 0.4724", "423.496, 466.395, 25.9898, 0.5306", "423.584, 467.469, 25.5813, 0.6012", "423.414, 468.497, 25.1486, 0.6834", "423.805, 469.525, 24.7156, 0.8444", "424.465, 470.421, 24.298, 0.8724", "424.764, 471.29, 23.8845, 0.864", "424.747, 472.375, 23.4863, 0.913", "425.236, 473.617, 23.0698, 0.6894", "425.839, 474.432, 22.7588, 0.657", "426.273, 475.445, 22.5409, 0.573", "426.839, 476.107, 22.398, 0.5324", "427.569, 476.656, 22.3114, 0.5856", "428.56, 476.968, 22.2294, 0.7472", "429.325, 477.692, 22.1388, 0.74", "430.239, 478.325, 22.0206, 0.6154", "430.934, 478.978, 21.8685, 0.4676", "431.943, 479.399, 21.6857, 0.475", "432.693, 480.156, 21.5021, 0.495", "433.194, 480.622, 21.3264, 0.5014", "434.052, 481.309, 21.1585, 0.4338", "434.791, 482.125, 21.0142, 0.4648", "435.598, 482.791, 20.9002, 0.4514", "436.608, 482.547, 20.7856, 0.5402", "436.436, 483.126, 20.6436, 0.6124", "436.936, 484.101, 20.4958, 0.7362", "437.721, 484.93, 20.3403, 0.7856", "438.526, 485.713, 20.1633, 0.8362", "439.342, 486.507, 19.972, 0.672", "440.282, 487.12, 19.7669, 0.7058", "441.083, 487.901, 19.546, 0.7274", "441.98, 488.602, 19.3158, 0.7376", "442.781, 489.386, 19.0844, 0.6738", "443.463, 490.121, 18.8391, 0.498", "444.198, 490.906, 18.5695, 0.4522", "444.633, 491.914, 18.2926, 0.3802", "445.28, 492.712, 17.9848, 0.4114", "446.299, 493.147, 17.6572, 0.358", "447.051, 493.557, 17.2851, 0.3396", "448.133, 493.358, 16.8885, 0.3736", "449.125, 493.544, 16.4896, 0.334", "449.903, 494.24, 16.0866, 0.3004", "451.03, 494.273, 15.7044, 0.2752", "452.174, 494.273, 15.3558, 0.2756", "453.318, 494.273, 15.0476, 0.2766", "454.455, 494.321, 14.7695, 0.2782", "455.532, 494.484, 14.5106, 0.2816", "456.496, 494.225, 14.2332, 0.2872", "457.565, 494.039, 13.9371, 0.2992", "458.684, 493.976, 13.6047, 0.315", "459.63, 494.193, 13.2354, 0.3752", "460.54, 494.853, 12.8263, 0.337", "461.4, 495.449, 12.3585, 0.3058", "462.412, 495.752, 11.8383, 0.2852", "463.048, 496.493, 11.247, 0.2954", "463.063, 497.522, 10.6158, 0.3078", "463.152, 498.648, 9.9925, 0.3616", "463.341, 499.767, 9.4193, 0.3136", "463.669, 500.85, 8.9267, 0.2542", "463.976, 501.887, 7.8893, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "427.511, 456.363, 28.2772, 0.7764", "428.02, 456.908, 28.2005, 0.6286", "428.524, 457.911, 28.1142, 0.5254", "428.794, 459.012, 28.0053, 0.6504", "428.769, 460.121, 27.8668, 0.7176", "428.666, 461.247, 27.699, 0.7258", "428.612, 462.38, 27.5087, 0.62", "428.747, 463.479, 27.3034, 0.554", "428.085, 464.118, 27.104, 0.4866", "428.533, 465.101, 26.9122, 0.552", "429.29, 465.694, 26.7023, 0.6652", "429.428, 466.65, 26.4557, 0.6834", "429.968, 467.441, 26.211, 0.734", "430.485, 468.366, 25.9697, 0.746", "430.485, 469.385, 25.7229, 0.7072", "430.538, 470.526, 25.4953, 0.7022", "430.696, 471.655, 25.3058, 0.8266", "431.175, 472.616, 25.156, 0.8654", "431.422, 473.583, 25.0642, 0.7246", "431.775, 474.651, 25.0093, 0.581", "432.205, 475.694, 24.9661, 0.6594", "432.651, 476.74, 24.9159, 0.7344", "432.931, 477.701, 24.8375, 0.7578", "433.457, 478.702, 24.7392, 0.675", "433.888, 479.543, 24.6032, 0.6764", "434.401, 480.32, 24.4689, 0.6138", "434.766, 481.361, 24.3246, 0.5846", "435.332, 482.286, 24.1594, 0.5676", "435.467, 483.334, 23.9737, 0.5846", "435.591, 484.431, 23.7796, 0.6092", "436.175, 485.366, 23.5794, 0.688", "436.872, 486.254, 23.3876, 0.6724", "437.659, 487.04, 23.2058, 0.7434", "438.353, 487.911, 23.0472, 0.6184", "438.724, 488.987, 22.911, 0.4878", "439.267, 489.806, 22.7812, 0.4418", "439.695, 490.847, 22.6673, 0.548", "440.207, 491.87, 22.5626, 0.731", "440.723, 492.89, 22.4637, 0.6794", "441.501, 493.695, 22.3544, 0.6522", "442.258, 494.526, 22.2328, 0.4964", "442.957, 495.431, 22.1103, 0.491", "443.555, 496.39, 21.9936, 0.4778", "443.896, 497.481, 21.8917, 0.4684", "444.243, 498.571, 21.811, 0.3782", "444.697, 499.621, 21.7545, 0.3346", "445.15, 500.672, 21.7192, 0.3408", "445.94, 501.49, 21.6982, 0.3878", "446.763, 502.285, 21.6861, 0.5302", "447.136, 503.357, 21.6782, 0.5274", "447.478, 504.449, 21.6714, 0.4446", "447.858, 505.527, 21.6637, 0.4376", "448.254, 506.6, 21.654, 0.4004", "448.801, 507.592, 21.6418, 0.4498", "449.487, 508.507, 21.6263, 0.4242", "450.188, 509.411, 21.6069, 0.4874", "450.903, 510.304, 21.5827, 0.5256", "451.512, 511.265, 21.5537, 0.5224", "452.024, 512.288, 21.5215, 0.6454", "452.446, 513.334, 21.4844, 0.707", "452.754, 514.411, 21.4388, 0.7124", "452.923, 515.517, 21.3938, 0.5656", "452.923, 516.661, 21.3662, 0.5968", "452.583, 517.66, 21.3731, 0.5544", "451.873, 518.509, 21.4278, 0.5044", "451.537, 519.592, 21.5263, 0.502", "451.539, 520.712, 21.6585, 0.7454", "451.735, 521.814, 21.8054, 0.6792", "452.11, 522.882, 21.9436, 0.5532", "452.48, 523.943, 22.0392, 0.5638", "452.874, 524.994, 22.0772, 0.5424", "453.355, 526.029, 22.0679, 0.4726", "453.847, 527.061, 22.0275, 0.49", "454.409, 528.057, 21.9756, 0.4944", "455.071, 528.975, 21.9304, 0.639", "455.214, 530.11, 21.9063, 0.7028", "455.118, 530.871, 21.9088, 0.6674", "454.817, 531.967, 21.9366, 0.6626", "454.615, 533.093, 21.9866, 0.587", "454.308, 534.194, 22.0541, 0.5414", "454.618, 535.283, 22.1369, 0.456", "455.066, 536.249, 22.2438, 0.53", "455.409, 537.322, 22.3596, 0.4552", "455.678, 538.422, 22.4682, 0.4296", "456.184, 539.441, 22.5465, 0.52", "456.688, 540.459, 22.5734, 0.4758", "457.107, 541.507, 22.5326, 0.5072", "457.711, 542.4, 22.4195, 0.4716", "458.569, 543.081, 22.2443, 0.6332", "459.207, 543.986, 22.037, 0.515", "459.752, 544.988, 21.832, 0.4934", "460.4, 545.93, 21.6609, 0.4092", "461.013, 546.893, 21.5452, 0.4674", "461.523, 547.912, 21.4961, 0.45", "462.125, 548.875, 21.5116, 0.5688", "462.818, 549.782, 21.5797, 0.514", "463.422, 550.748, 21.6835, 0.6022", "463.963, 551.756, 21.8073, 0.5312", "464.43, 552.797, 21.9496, 0.623", "464.83, 553.869, 22.0983, 0.6242", "465.207, 554.944, 22.2523, 0.531", "465.604, 556.005, 22.4131, 0.3644", "466.06, 557.032, 22.5824, 0.2542", "466.554, 558.05, 23.1022, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "417.9, 432.138, 35.9458, 0.6932", "418.018, 431.731, 38.3379, 1.3728", "417.048, 431.726, 40.1708, 0.7754", "416.208, 431.905, 40.8864, 0.5332", "415.162, 431.965, 41.6086, 0.5738", "414.028, 432.01, 42.3024, 0.5604", "412.993, 432.203, 42.9654, 0.7372", "412.16, 432.744, 43.5904, 0.5434", "411.838, 433.118, 44.1944, 0.4294", "410.885, 433.232, 44.8148, 0.3988", "409.851, 433.118, 45.4474, 0.3804", "408.953, 433.576, 46.1062, 0.388", "408.279, 433.323, 46.8199, 0.4292", "407.173, 433.118, 47.5611, 0.6024", "406.183, 432.947, 48.326, 0.6826", "405.468, 432.37, 49.1224, 0.629", "404.537, 432.035, 49.9512, 0.5954", "403.415, 432.116, 50.7816, 0.4424", "402.661, 432.485, 51.62, 0.3702", "401.844, 432.383, 52.4894, 0.3532", "400.876, 432.417, 53.3823, 0.442", "399.964, 432.489, 54.2856, 0.4812", "399.118, 432.318, 55.1659, 0.4746", "398.286, 431.91, 56.0076, 0.3898", "397.852, 432.103, 56.8198, 0.356", "396.799, 431.994, 57.5574, 0.3814", "396.056, 431.574, 58.9697, 0.4576" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "417.9, 432.138, 35.9458, 0.6932", "417.602, 431.034, 36.3961, 0.5096", "416.892, 430.158, 36.7774, 0.3624", "416.033, 429.401, 37.0975, 0.2962", "415.409, 429.625, 37.3352, 0.3142", "414.542, 429.468, 37.4769, 0.3502", "413.875, 429.164, 37.5679, 0.405", "412.798, 428.792, 37.6309, 0.563", "411.768, 428.406, 37.7121, 0.5838", "410.828, 427.851, 37.8339, 0.5698", "409.965, 427.178, 37.9924, 0.5702", "408.908, 426.997, 38.1646, 0.443", "407.78, 426.997, 38.3443, 0.3716", "406.857, 427.139, 38.5493, 0.3548", "405.831, 427.444, 38.7537, 0.4498", "404.89, 426.965, 38.9502, 0.4708", "404.624, 425.927, 39.1516, 0.577", "404.624, 424.805, 39.3518, 0.6768", "404.035, 423.907, 39.5556, 0.8738", "403.171, 423.287, 39.7788, 0.9524", "402.089, 422.935, 40.0299, 0.8888", "401.043, 422.677, 40.3231, 0.8726", "400.469, 422.106, 40.6728, 0.5766", "399.605, 421.371, 41.0511, 0.403", "398.892, 420.487, 41.4338, 0.319", "398.19, 419.585, 41.8079, 0.3826", "397.411, 418.749, 42.1739, 0.3508", "396.52, 418.035, 42.5384, 0.3312", "395.68, 417.26, 42.9198, 0.3322", "395.045, 416.338, 43.3457, 0.3832", "394.574, 415.712, 43.8668, 0.4672", "394.281, 414.763, 44.501, 0.6748", "393.24, 414.397, 45.2362, 0.8082", "392.534, 413.954, 46.086, 0.9026", "391.554, 413.522, 47.0254, 0.9058" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "434.885, 419.726, 26.896, 0.7386", "435.419, 419.239, 26.8675, 0.6026", "435.939, 418.291, 26.8303, 0.7214", "436.92, 417.76, 26.7849, 0.513", "437.76, 416.997, 26.7431, 0.3784", "438.563, 416.185, 26.7077, 0.2786", "439.314, 415.367, 26.6705, 0.282", "440.032, 414.666, 26.6235, 0.2882", "440.9, 414.412, 26.6022, 0.3", "441.795, 414.359, 26.6403, 0.3212", "442.485, 413.722, 26.7242, 0.363", "443.583, 413.432, 26.8426, 0.429", "444.592, 412.909, 26.9849, 0.6084", "445.649, 412.481, 27.1379, 0.6622", "446.142, 411.57, 27.2962, 0.7428", "447.166, 411.131, 27.4473, 0.7574", "447.941, 410.341, 27.5954, 0.7532", "448.819, 409.678, 27.7383, 0.6666", "449.331, 408.719, 27.896, 0.661", "449.949, 407.921, 28.0574, 0.5846", "450.179, 407.341, 28.2657, 0.534", "450.727, 406.384, 28.5099, 0.456", "451.426, 405.48, 28.7658, 0.4634", "452.237, 404.688, 29.0161, 0.6546", "452.646, 403.642, 29.2533, 0.6052", "452.847, 402.55, 29.4599, 0.6442", "452.985, 401.499, 29.6332, 0.7686", "453.809, 400.707, 29.7847, 0.7462", "454.75, 400.097, 29.9247, 0.7902", "455.403, 399.707, 30.0958, 0.6838", "456.265, 399.262, 30.2949, 0.4844", "457.173, 398.641, 30.4895, 0.3542", "457.704, 398.407, 30.6172, 0.3226", "458.052, 397.372, 30.7048, 0.3892", "458.824, 396.571, 30.7574, 0.3628", "459.414, 395.613, 30.7896, 0.3558", "460.019, 394.646, 30.8336, 0.3676", "460.697, 393.772, 30.9285, 0.4982", "461.411, 392.954, 31.1004, 0.441", "461.844, 391.971, 31.3278, 0.416", "462.359, 391.365, 31.6193, 0.4324", "463.058, 390.767, 31.9158, 0.6154", "463.823, 389.954, 32.1936, 0.6738", "464.522, 389.08, 32.4615, 0.771", "465.046, 388.164, 32.7205, 0.7758", "465.498, 387.185, 32.9888, 0.9512", "466.221, 386.475, 33.2987, 0.9254", "466.94, 385.737, 33.6739, 0.7514", "467.73, 385.284, 34.076, 0.5836", "468.609, 384.961, 34.5184, 0.6642", "469.721, 384.688, 34.9754, 0.7432", "470.836, 384.566, 35.4348, 0.774", "471.748, 384.206, 35.9055, 0.7062", "472.702, 383.825, 36.3728, 0.7288", "473.582, 383.167, 36.8192, 0.7378", "474.618, 382.833, 37.2445, 0.685", "475.741, 382.794, 37.6519, 0.6958", "476.826, 382.516, 38.0416, 0.6458", "477.836, 382.01, 38.4096, 0.6632", "478.699, 381.46, 38.7685, 0.6194", "479.399, 380.923, 39.1098, 0.4498", "480.488, 380.839, 39.4086, 0.3362", "481.347, 380.256, 39.6836, 0.2944", "481.933, 379.374, 39.9462, 0.3126", "482.82, 378.686, 40.2038, 0.3394", "483.715, 378.01, 40.4594, 0.4226", "484.688, 377.411, 40.7086, 0.4144", "485.72, 376.935, 40.9447, 0.5002", "486.48, 376.289, 41.1603, 0.398", "486.94, 375.251, 41.3529, 0.3344", "487.481, 374.246, 41.5299, 0.2908", "488.043, 373.26, 41.7074, 0.3058", "488.352, 372.176, 41.8908, 0.3272", "488.809, 371.159, 42.0949, 0.3988", "489.101, 370.059, 42.3203, 0.3756", "489.561, 369.042, 42.5695, 0.4028", "489.972, 368.002, 42.8389, 0.3412", "490.248, 366.932, 43.1169, 0.3134", "490.884, 366.048, 43.3742, 0.3008", "491.632, 365.427, 43.6229, 0.3178", "492.296, 364.586, 43.8444, 0.3802", "492.51, 363.484, 44.0331, 0.3464", "492.737, 362.376, 44.1966, 0.3242", "493.573, 361.781, 44.3472, 0.3142", "494.58, 361.399, 44.5108, 0.3734", "495.344, 360.593, 44.6844, 0.3338", "495.495, 359.536, 44.8801, 0.3", "496.184, 358.781, 45.1002, 0.2746", "496.711, 357.898, 45.3424, 0.2746", "497.723, 357.375, 45.5969, 0.2746", "498.774, 356.93, 45.8576, 0.2746", "499.719, 356.814, 46.1412, 0.2746", "500.702, 356.253, 46.4341, 0.2746", "501.501, 355.535, 46.7463, 0.2746", "502.253, 354.769, 47.0834, 0.2746", "503.261, 354.24, 47.4365, 0.2746", "504.274, 353.721, 47.7954, 0.2746", "505.184, 353.064, 48.1536, 0.2746", "506.027, 352.315, 48.5094, 0.2746", "506.87, 351.566, 48.8586, 0.2746", "507.739, 350.837, 49.196, 0.2746", "508.641, 350.135, 49.516, 0.2746", "509.543, 349.432, 49.8193, 0.2746", "510.436, 348.745, 50.1217, 0.2746", "511.327, 348.057, 50.4336, 0.2744", "512.265, 347.439, 50.762, 0.2744", "513.242, 346.885, 51.109, 0.2742", "514.221, 346.331, 51.4707, 0.274", "515.13, 345.661, 51.8358, 0.2736", "516.037, 344.989, 52.1898, 0.2728", "516.911, 344.271, 52.5221, 0.2712", "517.74, 343.491, 52.8195, 0.2684", "518.57, 342.71, 53.0748, 0.2626", "519.319, 341.855, 53.282, 0.2542", "520.012, 340.944, 53.4394, 0.2288", "520.719, 340.045, 53.6665, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "434.885, 419.726, 26.896, 0.7386", "434.948, 419.108, 26.0033, 0.2288", "435.564, 418.53, 25.4548, 0.5026", "436.38, 417.914, 25.2189, 0.6276", "437.208, 417.192, 24.9622, 0.5816", "437.922, 416.553, 24.7037, 0.6998", "438.498, 415.706, 24.4601, 0.618", "438.419, 414.804, 24.2538, 0.554", "438.812, 413.976, 24.0796, 0.4684" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "431.63, 445.532, 24.4472, 1.001", "432.076, 445.842, 25.6768, 0.4576", "432.978, 446.477, 25.9209, 0.8006", "433.844, 447.224, 26.0193, 0.7986", "434.568, 448.091, 26.1126, 0.6908", "435.221, 449.018, 26.1909, 0.7676", "435.848, 449.933, 26.2556, 0.9402", "436.512, 450.796, 26.3174, 0.8838" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "431.63, 445.532, 24.4472, 1.001", "431.401, 446.658, 24.1967, 0.7982", "431.859, 447.417, 23.9533, 0.6656", "432.142, 448.365, 23.6908, 0.6118", "432.571, 449.397, 23.4126, 0.7228" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "431.248, 428.294, 22.0967, 0.346", "432.29, 428.062, 21.8106, 0.3542", "432.865, 427.295, 21.5414, 0.45", "433.601, 426.576, 21.3036, 0.4654", "434.367, 426.476, 21.1435, 0.5954", "435.473, 426.211, 21.0359, 0.5718", "436.353, 425.519, 20.9427, 0.6688", "437.246, 424.85, 20.8467, 0.851", "437.976, 424.254, 20.7144, 0.95", "438.714, 423.598, 20.5595, 0.9202", "439.444, 423.111, 20.4204, 0.7552", "439.796, 422.083, 20.3116, 0.5248", "439.857, 421.12, 20.2174, 0.4174", "439.763, 420.359, 20.1076, 0.4972", "440.313, 419.541, 19.9861, 0.4342", "440.671, 418.698, 19.8885, 0.427", "441.485, 417.927, 19.8066, 0.3392", "441.799, 416.958, 19.7529, 0.3096", "442.246, 415.994, 19.6995, 0.2926", "442.867, 415.398, 19.6031, 0.308", "443.668, 414.703, 19.4645, 0.336", "443.934, 413.593, 19.2987, 0.391", "444.283, 412.504, 19.1302, 0.4778", "444.705, 411.443, 18.9823, 0.7122", "445.187, 410.415, 18.873, 0.7902", "445.731, 409.426, 18.8129, 0.607", "446.316, 408.447, 18.7826, 0.4862", "446.924, 407.481, 18.7678, 0.5726", "447.398, 406.446, 18.7557, 0.5992", "447.943, 405.457, 18.7274, 0.6102", "448.472, 404.453, 18.6773, 0.5874", "449.171, 403.573, 18.6119, 0.7546", "449.771, 402.696, 18.5337, 0.963", "450.71, 402.207, 18.4565, 0.9282", "451.59, 401.765, 18.3584, 0.8476", "452.299, 400.938, 18.254, 0.778", "453.24, 400.307, 18.1401, 0.7194", "453.594, 399.263, 18.0201, 0.7244", "454.318, 398.405, 17.8973, 0.87", "454.932, 397.475, 17.7876, 0.9356", "455.531, 396.541, 17.6915, 0.9046", "456.359, 395.753, 17.6115, 0.6722", "457.059, 394.862, 17.5505, 0.6334", "457.58, 393.844, 17.5079, 0.7182", "458.09, 392.821, 17.479, 0.8004", "458.64, 391.818, 17.4556, 0.8586", "459.421, 391.1, 17.4323, 0.7384", "459.639, 390.18, 17.419, 0.7076", "460.165, 389.666, 17.4138, 0.632", "460.743, 389.24, 17.3567, 0.5834", "461.506, 388.706, 17.2474, 0.7354", "462.271, 388.025, 17.1129, 0.7552", "462.845, 387.059, 16.9646, 0.6926", "463.614, 386.258, 16.7956, 0.6012", "464.525, 385.677, 16.6044, 0.7694", "465.534, 385.201, 16.416, 0.8154", "466.491, 384.605, 16.2418, 0.8168", "467.448, 383.976, 16.0764, 0.7702", "468.222, 383.183, 15.9183, 0.693", "468.933, 382.331, 15.7603, 0.7346", "469.744, 381.546, 15.5957, 0.6018", "470.645, 380.954, 15.426, 0.4586", "471.138, 380.235, 15.2252, 0.3794", "471.792, 379.368, 15.0153, 0.4728", "472.322, 378.379, 14.7999, 0.3942", "472.826, 377.364, 14.5925, 0.3272", "473.305, 376.329, 14.4079, 0.2778", "473.894, 375.357, 14.2578, 0.2808", "474.581, 374.441, 14.1523, 0.286", "475.358, 373.63, 14.0943, 0.2958", "476.219, 372.914, 14.0885, 0.3136", "476.919, 372.051, 14.1116, 0.349", "477.57, 371.14, 14.1404, 0.403", "478.366, 370.319, 14.1742, 0.5594", "479.162, 369.499, 14.2127, 0.576", "479.969, 368.723, 14.2674, 0.5616", "480.802, 367.966, 14.3408, 0.524", "481.708, 367.269, 14.4262, 0.5076", "482.581, 366.532, 14.5141, 0.4478", "483.376, 365.711, 14.5907, 0.4792", "484.136, 364.858, 14.6464, 0.534", "484.823, 363.943, 14.6748, 0.4232", "485.518, 363.036, 14.6761, 0.334", "486.233, 362.142, 14.6541, 0.2902", "487.039, 361.353, 14.613, 0.3044", "488.041, 360.804, 14.5579, 0.3248", "488.899, 360.098, 14.4878, 0.3932", "489.094, 359.055, 14.3956, 0.3702", "489.843, 358.254, 14.2952, 0.3694", "490.775, 357.606, 14.1987, 0.394", "491.664, 356.95, 14.1212, 0.5416", "492.245, 356.023, 14.07, 0.548", "492.828, 355.096, 14.0324, 0.484", "493.722, 354.383, 13.9901, 0.5062", "494.579, 353.641, 13.9179, 0.549", "495.385, 352.865, 13.7916, 0.6204", "496.193, 352.067, 13.6071, 0.5626", "497.002, 351.258, 13.3737, 0.4642", "497.702, 350.379, 13.0985, 0.467", "498.356, 349.469, 12.7884, 0.4882", "498.873, 348.512, 12.451, 0.4512", "499.528, 347.767, 12.1031, 0.5226", "499.664, 346.67, 11.7731, 0.434", "499.883, 345.673, 11.4495, 0.4268", "500.396, 344.845, 11.115, 0.3384", "501.331, 344.203, 10.7807, 0.3082", "502.003, 343.367, 10.4572, 0.291", "502.241, 342.304, 10.1604, 0.2994", "502.177, 341.183, 9.9054, 0.3474", "502.484, 340.216, 9.6904, 0.2796", "503.214, 339.396, 9.1647, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "431.248, 428.294, 22.0967, 0.346", "431.701, 428.451, 21.3189, 0.4576", "432.542, 429.038, 21.2978, 0.6228", "433.597, 429.056, 21.3017, 0.5434", "434.569, 429.448, 21.2849, 0.5424", "435.655, 429.757, 21.2375, 0.746", "436.529, 430.316, 21.1438, 0.8132", "437.188, 431.182, 20.9997, 0.8426", "437.906, 432.04, 20.8196, 0.6728", "438.561, 432.833, 20.6055, 0.5316", "439.297, 433.696, 20.3789, 0.5708", "439.637, 434.768, 20.1714, 0.5554", "439.639, 435.885, 19.9819, 0.4964", "439.903, 436.973, 19.8166, 0.5352", "440.51, 437.903, 19.6767, 0.5738", "440.83, 438.801, 19.5279, 0.8064", "441.433, 439.69, 19.3789, 0.9146", "442.176, 440.392, 19.2389, 0.8532", "442.84, 440.941, 19.0727, 0.8678", "443.579, 441.625, 18.8573, 0.9568", "444.375, 442.312, 18.6029, 1.0502", "445.219, 443.03, 18.348, 0.885", "445.926, 443.91, 18.1027, 0.8472", "446.692, 444.714, 17.8767, 0.8476", "447.478, 445.062, 17.6419, 0.964", "448.155, 445.893, 17.3935, 0.8466", "449.018, 446.599, 17.1441, 0.645", "450.077, 446.817, 16.9162, 0.65", "450.762, 447.583, 16.7109, 0.6518", "451.451, 448.432, 16.5211, 0.6912", "452.102, 449.124, 16.3735, 0.8184", "452.906, 449.872, 16.2551, 0.7906", "453.58, 450.755, 16.1611, 0.8756", "454.381, 451.432, 16.0688, 0.8272", "455.086, 452.325, 15.9865, 0.822", "455.841, 453.117, 15.9205, 0.6324", "456.64, 453.931, 15.8568, 0.467", "457.437, 454.707, 15.7795, 0.4006", "458.34, 455.382, 15.6969, 0.4834", "459.174, 456.151, 15.6104, 0.554", "460.152, 456.725, 15.5054, 0.6298", "461.158, 457.249, 15.377, 0.5798", "462.239, 457.599, 15.2325, 0.497", "463.285, 457.881, 15.0665, 0.5244", "464.216, 458.108, 14.9021, 0.6124", "465.236, 457.931, 14.731, 0.5948", "466.039, 458.507, 14.5396, 0.5244", "466.921, 459.198, 14.3499, 0.5758", "468.017, 459.491, 14.159, 0.7046", "469.118, 459.711, 13.9639, 0.7816", "470.109, 460.217, 13.784, 0.7928", "471.192, 460.504, 13.6125, 0.7656", "472.202, 460.978, 13.4459, 0.7206", "473.196, 461.488, 13.2956, 0.6098", "474.218, 461.745, 13.1622, 0.5366", "475.267, 461.498, 13.0358, 0.4472", "476.374, 461.539, 12.9069, 0.5136", "477.46, 461.726, 12.7721, 0.4238", "478.44, 462.247, 12.6426, 0.377", "479.327, 462.941, 12.5219, 0.3958", "480.377, 463.282, 12.3992, 0.3764", "481.305, 463.795, 12.2781, 0.3732", "481.914, 464.747, 12.1549, 0.4366", "482.735, 465.538, 12.032, 0.4478", "483.787, 465.963, 11.9021, 0.5272", "484.628, 466.625, 11.7601, 0.6186", "485.545, 467.214, 11.6056, 0.601", "486.335, 467.775, 11.4316, 0.5608", "486.951, 468.675, 11.2663, 0.5238", "487.714, 469.509, 11.1168, 0.5012", "488.756, 469.783, 11.0044, 0.4646", "489.676, 469.308, 10.9395, 0.371", "490.751, 469.178, 10.9078, 0.3218", "491.322, 470.09, 10.9009, 0.3148", "492.075, 470.936, 10.8938, 0.351", "492.652, 471.898, 10.8597, 0.4078", "493.172, 472.844, 10.7738, 0.562", "494.237, 473.036, 10.6371, 0.611", "495.183, 473.584, 10.4795, 0.4804", "495.846, 474.33, 10.3111, 0.396", "496.969, 474.457, 10.1335, 0.3898", "497.668, 475.191, 9.9435, 0.565", "498.435, 475.901, 9.7558, 0.4406", "498.853, 476.942, 9.57, 0.3304", "499.143, 478.026, 9.3909, 0.2288", "499.143, 479.17, 8.9944, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "409.442, 425.765, 24.9382, 1.3816", "408.743, 426.221, 24.901, 0.9152", "407.787, 426.847, 24.9431, 0.8862", "406.887, 427.544, 24.9602, 0.7832", "406.065, 428.339, 24.9691, 0.8212", "405.188, 429.055, 24.9675, 0.9238", "404.239, 429.666, 24.9557, 0.9584", "403.439, 430.454, 24.9152, 0.8626", "402.682, 431.295, 24.8299, 0.7744", "402.19, 432.322, 24.7002, 0.6356", "401.71, 433.358, 24.5279, 0.7162", "401.434, 434.458, 24.3115, 0.8258", "401.17, 435.561, 24.0511, 0.7654", "400.894, 436.65, 23.7666, 0.7898", "400.617, 437.734, 23.4696, 0.6294", "400.178, 438.714, 23.1437, 0.6436", "399.801, 439.47, 22.7465, 0.759" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "409.442, 425.765, 24.9382, 1.3816", "407.679, 425.281, 24.7348, 0.9964", "406.778, 424.611, 24.6019, 0.9792", "405.919, 423.859, 24.5199, 0.9962", "405.425, 422.865, 24.4817, 1.0184", "404.974, 421.843, 24.4751, 1.106", "404.737, 420.723, 24.4747, 1.0428", "404.5, 419.604, 24.4689, 1.1066", "404.164, 418.513, 24.4488, 1.0316", "403.871, 417.547, 24.3872, 0.9154" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "449.785, 439.354, 40.2909, 0.6208", "450.194, 439.715, 42.7414, 0.6864", "451.147, 440.295, 43.5386, 0.5554", "452.195, 440.693, 43.8595, 0.409", "453.107, 441.339, 44.2221, 0.3396", "453.535, 442.35, 44.6228, 0.3736", "454.285, 443.207, 45.0668, 0.3342", "455.292, 443.702, 45.5669, 0.3006", "456.401, 443.724, 46.1303, 0.2756", "457.381, 444.017, 46.7684, 0.2764", "458.273, 444.506, 47.5146, 0.278", "458.269, 444.766, 48.3977, 0.2808", "458.179, 445.068, 49.4312, 0.286", "458.227, 445.918, 50.5238, 0.297", "457.846, 446.741, 51.7196, 0.3108", "457.648, 447.311, 52.9998, 0.3672", "457.591, 447.37, 54.3298, 0.322", "458.265, 447.005, 55.6553, 0.2796", "458.053, 447.066, 56.9344, 0.2288", "457.155, 447.524, 60.1065, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "449.785, 439.354, 40.2909, 0.6208", "450.293, 439.125, 40.147, 0.4524", "451.138, 438.659, 39.8919, 0.341", "452.266, 438.47, 39.601, 0.3032", "453.402, 438.539, 39.3341, 0.3298", "454.53, 438.723, 39.1339, 0.3662", "455.635, 439.009, 39.0281, 0.4964", "456.707, 439.32, 39.0334, 0.4328", "457.747, 439.576, 39.1364, 0.4242", "458.797, 440.021, 39.2988, 0.3338", "459.645, 440.748, 39.4999, 0.3", "460.57, 441.384, 39.7163, 0.2746", "461.587, 441.893, 39.9244, 0.2746", "462.653, 442.286, 40.103, 0.2746", "463.787, 442.442, 40.2422, 0.2746", "464.93, 442.468, 40.3421, 0.2746", "466.073, 442.498, 40.404, 0.2748", "467.214, 442.555, 40.4351, 0.2748", "468.35, 442.697, 40.4446, 0.2752", "469.484, 442.849, 40.4415, 0.2758", "470.611, 443.037, 40.4326, 0.2766", "471.708, 443.358, 40.4205, 0.2786", "472.755, 443.816, 40.4082, 0.2818", "473.777, 444.327, 40.3962, 0.2882", "474.773, 444.89, 40.3827, 0.2994", "475.691, 445.572, 40.3656, 0.3228", "476.697, 446.102, 40.3421, 0.3536", "477.713, 446.621, 40.308, 0.4722", "478.682, 447.228, 40.2592, 0.3932", "479.607, 447.9, 40.1948, 0.3254", "480.532, 448.574, 40.1114, 0.2746", "481.393, 449.317, 40.003, 0.2746", "482.225, 450.094, 39.8653, 0.2746", "483.1, 450.826, 39.699, 0.2746", "483.878, 451.664, 39.5142, 0.2746", "484.564, 452.429, 39.2949, 0.2746", "485.412, 453.113, 39.0564, 0.2746", "486.448, 453.573, 38.8256, 0.2746", "487.535, 453.928, 38.6212, 0.2746", "488.578, 454.381, 38.4532, 0.2746", "489.588, 454.909, 38.3253, 0.2746", "490.665, 455.291, 38.2371, 0.2746", "491.752, 455.648, 38.1769, 0.2746", "492.787, 456.125, 38.1315, 0.2746", "493.645, 456.879, 38.0904, 0.2746", "494.357, 457.775, 38.0456, 0.2746", "495.034, 458.697, 37.9921, 0.2746", "495.606, 459.685, 37.9246, 0.2746", "496.187, 460.669, 37.8406, 0.2746", "496.8, 461.63, 37.7381, 0.2746", "497.401, 462.578, 37.6107, 0.2746", "497.992, 463.544, 37.464, 0.2746", "498.576, 464.527, 37.3097, 0.2746", "499.037, 465.569, 37.1638, 0.2746", "499.571, 466.57, 37.0339, 0.2746", "500.19, 467.522, 36.9186, 0.2746", "500.689, 468.529, 36.8161, 0.2746", "501.252, 469.515, 36.7307, 0.2744", "501.823, 470.502, 36.6716, 0.2744", "502.412, 471.478, 36.654, 0.2742", "503.054, 472.424, 36.6976, 0.274", "503.826, 473.267, 36.8169, 0.2736", "504.59, 474.104, 37.014, 0.2728", "505.273, 475.014, 37.3397, 0.2712", "505.947, 475.937, 37.7712, 0.2684", "506.713, 476.732, 38.2978, 0.2626", "507.44, 477.275, 38.918, 0.2542", "508.034, 477.546, 39.6228, 0.2288", "508.659, 477.557, 42.009, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "422.678, 449.321, 35.8599, 0.6974", "422.475, 450.318, 36.0122, 0.5096", "422.475, 451.462, 36.1584, 0.4014", "422.466, 452.587, 36.2768, 0.4072", "422.275, 453.5, 36.351, 0.561", "422.246, 454.635, 36.3782, 0.6088", "422.246, 455.778, 36.3661, 0.4782", "422.246, 456.922, 36.3314, 0.3834", "422.246, 458.066, 36.3026, 0.4074", "422.338, 459.204, 36.295, 0.3976", "422.455, 460.339, 36.3166, 0.4146", "422.475, 461.48, 36.3698, 0.5034", "422.475, 462.604, 36.4554, 0.6204", "423.004, 463.577, 36.5613, 0.6104", "423.619, 464.512, 36.6862, 0.5486", "424.337, 465.368, 36.8108, 0.645", "425.215, 466.032, 36.9463, 0.7138", "425.426, 467.083, 37.0796, 0.6888", "425.311, 468.217, 37.2098, 0.6968", "425.584, 469.319, 37.3453, 0.6764", "426.348, 469.984, 37.5094, 0.5818", "426.907, 470.835, 37.7126, 0.4524", "427.321, 471.794, 37.9243, 0.4458", "427.511, 472.911, 38.1307, 0.4468", "427.575, 474.026, 38.3256, 0.3848", "427.769, 475.124, 38.4964, 0.3494", "427.927, 476.241, 38.621, 0.3556", "427.774, 477.372, 38.6932, 0.4758", "427.957, 478.493, 38.7139, 0.3996", "428.332, 479.557, 38.6854, 0.3374", "428.493, 480.634, 38.6086, 0.2964", "428.903, 481.697, 38.5134, 0.3162", "429.278, 482.774, 38.4325, 0.3474", "429.474, 483.756, 38.4017, 0.43", "429.859, 484.769, 38.4062, 0.464", "430.663, 485.514, 38.4401, 0.418", "431.029, 486.536, 38.5059, 0.4056", "431.498, 487.373, 38.6145, 0.4852", "431.996, 488.37, 38.7489, 0.5932", "432.329, 489.331, 38.9077, 0.5284", "433.164, 489.959, 39.062, 0.5512", "433.757, 490.938, 39.2022, 0.5858", "434.297, 491.938, 39.3173, 0.6858", "434.624, 492.995, 39.4013, 0.698", "434.768, 494.073, 39.4744, 0.6464", "435.296, 494.984, 39.5458, 0.4526", "435.627, 496.069, 39.632, 0.3412", "436.096, 497.105, 39.7379, 0.305", "436.821, 497.972, 39.8616, 0.3256", "437.625, 498.785, 39.998, 0.3948", "438.235, 499.702, 40.1313, 0.3732", "438.996, 500.342, 40.2909, 0.375", "439.491, 501.3, 40.4608, 0.404", "439.906, 502.354, 40.6549, 0.561", "440.412, 503.378, 40.8794, 0.58", "440.753, 504.47, 41.1351, 0.5626", "441.144, 505.373, 41.4414, 0.557", "442.019, 506.026, 41.7824, 0.4186", "442.848, 506.744, 42.1705, 0.3256", "443.471, 507.681, 42.5995, 0.2748", "443.81, 508.769, 43.0685, 0.275", "444.012, 509.893, 43.5837, 0.2754", "444.445, 510.953, 44.1546, 0.2762", "444.538, 511.386, 44.8129, 0.2776", "444.66, 512.307, 45.5899, 0.2802", "444.373, 513.217, 46.4954, 0.285", "443.71, 513.771, 47.5266, 0.2938", "442.896, 514.332, 48.6531, 0.31", "442.053, 514.914, 49.8347, 0.3422", "441.209, 515.496, 51.0325, 0.3902", "440.333, 516.151, 52.2077, 0.536", "439.451, 516.823, 53.34, 0.5316", "438.677, 517.544, 54.432, 0.4836", "437.936, 518.28, 55.4966, 0.3592", "437.246, 519.043, 56.5477, 0.3", "436.575, 519.813, 57.5929, 0.2746", "435.935, 520.604, 58.6345, 0.2746", "435.542, 521.536, 59.6655, 0.2744", "435.163, 522.489, 60.6696, 0.2744", "434.879, 523.47, 61.6283, 0.2742", "434.955, 524.563, 62.5176, 0.274", "435.03, 525.655, 63.3217, 0.2736", "434.903, 526.741, 64.0296, 0.2728", "434.634, 527.822, 64.6394, 0.2712", "434.239, 528.855, 65.1473, 0.2684", "433.577, 529.789, 65.5483, 0.2626", "432.916, 530.722, 65.8496, 0.2542", "432.059, 531.452, 66.064, 0.2288", "431.103, 532.08, 66.3463, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "422.678, 449.321, 35.8599, 0.6974", "421.561, 449.879, 35.5639, 0.2288", "420.803, 450.574, 36.0041, 0.5926", "420.0, 451.381, 36.1875, 0.6632", "419.099, 452.044, 36.4182, 0.5984", "418.195, 452.608, 36.6764, 0.5132", "417.073, 452.626, 36.9698, 0.4148", "415.93, 452.585, 37.2898, 0.3998", "414.804, 452.428, 37.6303, 0.4744", "413.811, 452.273, 38.0195, 0.573", "413.549, 451.553, 38.479, 0.4912", "412.679, 451.171, 38.976, 0.48", "411.672, 450.796, 39.4691, 0.4638", "410.601, 450.872, 39.9557, 0.4116", "410.497, 451.051, 40.4768, 0.4236", "409.458, 451.318, 40.9842, 0.3744", "408.397, 451.689, 41.461, 0.4006", "407.456, 452.308, 41.9012, 0.3372", "406.368, 452.563, 42.2988, 0.306", "405.246, 452.638, 42.6664, 0.2858", "404.145, 452.856, 43.0175, 0.2954", "403.029, 453.047, 43.3681, 0.3124", "402.11, 453.233, 43.7438, 0.3482", "401.361, 452.928, 44.1636, 0.3952", "400.371, 453.385, 44.5936, 0.5748", "399.295, 453.558, 45.0321, 0.4594", "398.221, 453.62, 45.4748, 0.3634", "397.141, 453.546, 45.9074, 0.299", "396.05, 453.205, 46.3025, 0.3148", "394.952, 452.905, 46.6502, 0.3746", "393.81, 452.968, 46.9549, 0.336", "392.668, 453.031, 47.2198, 0.3038", "391.539, 453.05, 47.4628, 0.2818", "390.415, 453.05, 47.7047, 0.2876", "389.283, 453.09, 47.957, 0.2998", "388.145, 453.166, 48.2202, 0.316", "387.048, 453.414, 48.4932, 0.377", "385.993, 453.826, 48.7752, 0.3408", "385.053, 454.433, 49.0585, 0.3124", "384.049, 454.937, 49.3366, 0.2988", "382.982, 455.313, 49.6194, 0.3142", "381.888, 455.565, 49.9108, 0.3734", "380.95, 456.206, 50.2158, 0.3338", "379.892, 456.599, 50.5431, 0.3", "378.918, 457.087, 50.9183, 0.2746", "377.954, 457.589, 51.3548, 0.2746", "376.99, 458.062, 51.8546, 0.2746", "375.979, 458.514, 52.4051, 0.2746", "375.023, 459.064, 52.9883, 0.2746", "374.037, 459.577, 53.5839, 0.2746", "373.044, 460.107, 54.1691, 0.2746", "372.033, 460.616, 54.7263, 0.2746", "371.074, 461.178, 55.2535, 0.2746", "370.114, 461.737, 55.753, 0.2746", "369.154, 462.295, 56.2276, 0.2746", "368.133, 462.796, 56.67, 0.2746", "367.101, 463.289, 57.0769, 0.2746", "366.1, 463.827, 57.4518, 0.2746", "365.134, 464.416, 57.801, 0.2746", "364.167, 465.005, 58.1305, 0.2746", "363.192, 465.582, 58.4455, 0.2746", "362.213, 466.157, 58.7507, 0.2746", "361.224, 466.713, 59.0467, 0.2746", "360.195, 467.207, 59.3289, 0.2746", "359.167, 467.702, 59.5944, 0.2746", "358.148, 468.215, 59.8433, 0.2746", "357.159, 468.78, 60.0782, 0.2746", "356.17, 469.347, 60.303, 0.2746", "355.182, 469.919, 60.5209, 0.2746", "354.199, 470.501, 60.732, 0.2746", "353.214, 471.083, 60.9378, 0.2746", "352.217, 471.608, 61.1433, 0.2744", "351.298, 472.212, 61.36, 0.2744", "350.38, 472.816, 61.5885, 0.2742", "349.49, 473.486, 61.8153, 0.274", "348.641, 474.254, 62.0169, 0.2736", "347.793, 475.022, 62.1746, 0.2728", "346.911, 475.75, 62.2692, 0.2712", "346.001, 476.44, 62.3011, 0.2684", "345.098, 477.142, 62.2793, 0.2626", "344.308, 477.961, 62.2129, 0.2542", "343.517, 478.779, 62.1166, 0.2288", "342.736, 479.576, 61.7224, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "391.554, 413.522, 47.0254, 0.9058", "391.606, 412.221, 48.1606, 0.6008", "391.452, 411.261, 49.2979, 0.401", "390.919, 410.41, 50.4202, 0.3152", "390.205, 409.616, 51.5038, 0.3756", "389.462, 408.835, 52.5308, 0.3378", "388.722, 408.058, 53.492, 0.3074", "387.952, 407.292, 54.3766, 0.2882", "387.234, 406.492, 55.2026, 0.2996", "386.521, 405.693, 55.9689, 0.323", "385.607, 405.06, 56.6706, 0.354", "384.779, 404.336, 57.3096, 0.4728", "383.983, 403.552, 57.8698, 0.394", "383.453, 402.55, 58.3601, 0.327", "383.221, 401.472, 58.7978, 0.2776", "383.154, 400.354, 59.1996, 0.2802", "383.136, 399.214, 59.5736, 0.285", "383.298, 398.101, 59.934, 0.2938", "383.512, 396.996, 60.2904, 0.3112", "383.834, 395.903, 60.6404, 0.3382", "384.11, 394.801, 60.9829, 0.4128", "384.4, 393.703, 61.3141, 0.4326", "384.646, 392.596, 61.6344, 0.359", "384.854, 391.487, 61.95, 0.2994", "385.337, 390.464, 62.267, 0.2736", "385.78, 389.427, 62.5887, 0.2728", "386.203, 388.379, 62.9219, 0.2712", "386.646, 387.338, 63.2565, 0.2684", "387.138, 386.317, 63.5796, 0.2626", "387.626, 385.295, 63.8795, 0.2542", "388.119, 384.275, 64.146, 0.2288", "388.676, 383.284, 64.6822, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "391.554, 413.522, 47.0254, 0.9058", "390.551, 413.562, 47.1022, 0.4576", "389.673, 413.448, 48.377, 0.4894", "388.966, 412.879, 48.8916, 0.6178", "387.969, 412.581, 49.4516, 0.4916", "386.931, 412.291, 50.022, 0.4252", "386.127, 411.699, 50.559, 0.4028", "385.017, 411.445, 51.0294, 0.5602", "383.905, 411.569, 51.4223, 0.5712", "382.82, 411.665, 51.7656, 0.5824", "381.685, 411.634, 52.0612, 0.4186", "380.95, 410.834, 52.3191, 0.3256", "379.96, 410.336, 52.542, 0.2748", "378.962, 409.824, 52.7559, 0.275", "378.181, 409.39, 52.9841, 0.2754", "377.155, 409.354, 53.2224, 0.276", "376.248, 409.014, 53.4612, 0.2772", "375.316, 408.559, 53.6903, 0.2794", "374.211, 408.462, 53.8922, 0.2834", "373.262, 408.444, 54.0299, 0.291", "372.658, 407.671, 54.0943, 0.305", "371.619, 407.35, 54.1296, 0.3304", "370.564, 407.011, 54.1713, 0.3814", "369.633, 406.86, 54.5913, 0.4576" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "438.812, 413.976, 24.0796, 0.4684", "438.809, 413.657, 22.9278, 0.6864", "438.01, 412.939, 22.3151, 0.786", "436.957, 412.979, 22.0542, 0.753", "436.155, 413.666, 21.7362, 0.6962", "435.233, 413.763, 21.3666, 0.5704", "434.499, 412.906, 20.9693, 0.4364", "434.099, 411.884, 20.5604, 0.3928", "433.227, 411.628, 20.1157, 0.4616", "432.583, 410.747, 19.6448, 0.5484", "432.958, 409.718, 19.1684, 0.45", "433.804, 409.245, 18.6991, 0.383", "433.638, 408.407, 18.2157, 0.3846", "432.645, 407.861, 17.7168, 0.4632", "431.716, 407.267, 17.1977, 0.6988", "430.798, 407.113, 16.6291, 0.6988", "430.355, 406.193, 16.0127, 0.7612", "429.977, 405.149, 15.3673, 0.5744", "430.07, 404.14, 14.7105, 0.552", "429.241, 403.405, 14.0633, 0.5386", "428.274, 402.83, 13.4486, 0.6076", "427.655, 401.925, 12.8724, 0.5068", "427.492, 400.956, 12.3196, 0.5162", "428.13, 400.135, 11.7917, 0.496", "429.072, 399.768, 11.3107, 0.6418", "429.538, 400.661, 10.8619, 0.708", "430.235, 400.975, 10.4613, 0.678", "430.894, 400.491, 10.0925, 0.678", "431.602, 401.079, 9.7602, 0.6356", "432.082, 402.085, 9.4911, 0.5338", "432.655, 403.072, 9.0437, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "438.812, 413.976, 24.0796, 0.4684", "439.088, 413.406, 23.9243, 0.3784", "439.554, 412.367, 23.7775, 0.335", "439.913, 411.286, 23.6315, 0.3416", "440.336, 410.329, 23.4503, 0.388", "440.587, 409.297, 23.2221, 0.5378", "440.914, 408.24, 22.9618, 0.5052", "441.634, 407.391, 22.69, 0.5788", "442.145, 406.422, 22.4152, 0.522", "441.982, 405.316, 22.151, 0.4396", "442.234, 404.215, 21.9125, 0.405", "442.545, 403.711, 21.7, 0.4542", "443.37, 402.955, 21.5059, 0.681", "444.33, 402.365, 21.3144, 0.6714", "445.139, 401.888, 21.1102, 0.6832", "445.871, 401.013, 20.9029, 0.562", "446.605, 400.15, 20.6954, 0.5722", "447.292, 399.262, 20.4913, 0.8254", "447.733, 398.21, 20.3078, 0.8426", "447.822, 397.072, 20.1595, 0.7822", "448.307, 396.052, 20.0615, 0.6612", "449.133, 395.319, 19.9984, 0.4808", "449.933, 394.501, 19.9687, 0.3894", "450.698, 393.651, 19.9679, 0.4136", "451.25, 392.653, 19.9846, 0.434", "452.028, 391.885, 20.0186, 0.3614", "452.911, 391.258, 20.0638, 0.304", "453.937, 390.793, 20.1, 0.282", "454.646, 390.002, 20.0972, 0.2884", "454.756, 388.96, 20.024, 0.3002", "454.756, 388.177, 19.8394, 0.3218", "454.446, 387.155, 19.5669, 0.3634", "454.22, 386.118, 19.2659, 0.4322", "454.198, 385.07, 18.9519, 0.602", "454.287, 383.955, 18.6546, 0.7104", "454.345, 382.816, 18.4011, 0.5414", "455.153, 382.089, 18.2109, 0.4232", "456.074, 381.514, 18.0704, 0.399", "456.668, 380.601, 17.9451, 0.5524", "457.337, 379.706, 17.8187, 0.5618", "457.991, 378.781, 17.6942, 0.5404", "458.552, 377.872, 17.5825, 0.46", "458.971, 376.955, 17.4573, 0.509", "459.365, 376.338, 17.2913, 0.5542", "459.11, 375.647, 17.1326, 0.6298", "458.872, 374.819, 16.9623, 0.5814", "459.524, 373.971, 16.7889, 0.4924", "460.255, 373.161, 16.6299, 0.5518", "460.79, 372.22, 16.4775, 0.4888", "461.216, 371.199, 16.3159, 0.525", "461.579, 370.125, 16.1389, 0.5354", "461.921, 369.034, 15.9562, 0.6018", "462.188, 367.925, 15.7668, 0.4972", "462.386, 366.8, 15.5704, 0.4924", "462.665, 365.707, 15.3724, 0.4804", "463.236, 364.73, 15.1736, 0.473", "463.748, 363.729, 14.9737, 0.3878", "464.148, 362.687, 14.7743, 0.3476", "464.548, 361.631, 14.5881, 0.3884", "464.945, 360.558, 14.4327, 0.3614", "465.326, 359.486, 14.3221, 0.3518", "465.664, 358.42, 14.2703, 0.3664", "466.128, 357.414, 14.2722, 0.466", "466.633, 356.473, 14.295, 0.5278", "467.081, 355.466, 14.3229, 0.5504", "468.023, 354.973, 14.3609, 0.5826", "468.953, 354.309, 14.3895, 0.4608", "469.91, 353.681, 14.3959, 0.4292", "470.831, 353.004, 14.3764, 0.343", "471.685, 352.245, 14.3321, 0.3166", "472.164, 351.238, 14.2523, 0.3066", "472.383, 350.168, 14.1271, 0.3288", "472.503, 349.061, 13.9775, 0.4", "472.389, 347.922, 13.8184, 0.3854", "472.421, 346.799, 13.6597, 0.385", "472.762, 345.708, 13.5075, 0.4832", "473.074, 344.611, 13.3654, 0.4134", "473.074, 343.468, 13.2296, 0.3638", "473.306, 342.443, 13.0764, 0.3404", "474.106, 341.626, 12.9128, 0.423", "474.897, 340.801, 12.7478, 0.4216", "475.625, 339.919, 12.5876, 0.484", "476.34, 339.026, 12.4359, 0.5114", "476.706, 337.953, 12.2954, 0.534", "476.865, 336.821, 12.1661, 0.484", "477.55, 335.974, 12.0319, 0.608", "478.384, 335.281, 11.8804, 0.4734", "479.078, 334.374, 11.7253, 0.3906", "479.735, 333.438, 11.5787, 0.3426", "479.98, 332.39, 11.4371, 0.4286", "480.44, 331.381, 11.3077, 0.4254", "481.216, 330.677, 11.224, 0.522", "482.182, 330.101, 11.1848, 0.433", "482.634, 329.059, 11.1745, 0.4248", "483.059, 327.997, 11.1788, 0.3348", "483.734, 327.086, 11.1857, 0.3016", "484.476, 326.216, 11.1811, 0.2778", "485.034, 325.223, 11.1514, 0.2804", "485.546, 324.2, 11.092, 0.2856", "485.839, 323.104, 10.9808, 0.2944", "486.19, 322.103, 10.8434, 0.3136", "486.347, 320.977, 10.6801, 0.3362", "486.684, 319.993, 10.4743, 0.4406", "486.606, 319.193, 10.2073, 0.3304", "486.356, 318.158, 9.135, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "436.512, 450.796, 26.3174, 0.8838", "436.665, 451.276, 26.3766, 0.7766", "436.929, 452.358, 26.4467, 0.591", "437.033, 453.453, 26.5209, 0.6396", "436.964, 454.556, 26.5933, 0.655", "437.37, 455.568, 26.6628, 0.5882", "437.752, 456.494, 26.7041, 0.4694", "438.383, 457.425, 26.7328, 0.4534", "439.382, 457.661, 26.7801, 0.577", "440.193, 458.148, 26.8608, 0.7484", "440.978, 458.896, 26.9579, 0.8886", "441.835, 459.592, 27.0835, 0.867", "442.628, 460.397, 27.2334, 0.8198", "443.354, 461.255, 27.4031, 0.7682", "444.12, 462.092, 27.5826, 0.7254", "444.838, 462.955, 27.7749, 0.6204", "445.637, 463.764, 27.9742, 0.5484", "446.46, 464.559, 28.1686, 0.506", "447.343, 465.285, 28.3528, 0.4428", "448.177, 465.944, 28.5432, 0.4804", "448.924, 466.805, 28.7302, 0.484", "449.607, 467.69, 28.8943, 0.584", "450.205, 468.657, 29.0427, 0.774", "450.685, 469.683, 29.1824, 0.6458", "451.193, 470.69, 29.3149, 0.4532", "451.754, 471.686, 29.4314, 0.3338", "452.235, 472.719, 29.5341, 0.3322", "452.589, 473.805, 29.6187, 0.4068", "452.96, 474.881, 29.6814, 0.3964", "453.542, 475.863, 29.7242, 0.4126", "454.055, 476.874, 29.7472, 0.4994", "454.287, 477.977, 29.7531, 0.6144", "454.287, 479.114, 29.7492, 0.5922", "454.325, 480.237, 29.7486, 0.5492", "454.663, 481.234, 29.7422, 0.479", "455.143, 481.959, 29.7696, 0.5312", "455.551, 482.844, 29.8522, 0.6572", "455.989, 483.87, 29.9905, 0.5222", "456.555, 484.859, 30.1706, 0.4584", "456.421, 485.976, 30.3909, 0.35", "456.382, 487.098, 30.6468, 0.3298", "456.452, 488.223, 30.9226, 0.3304", "456.528, 489.348, 31.208, 0.3748", "456.736, 490.452, 31.4933, 0.4766", "457.243, 491.386, 31.7696, 0.5712", "457.49, 492.386, 32.0421, 0.5174", "457.594, 493.389, 32.2795, 0.3848", "457.971, 494.385, 32.5013, 0.3", "458.427, 495.397, 32.7368, 0.2746", "458.95, 496.394, 33.0, 0.2746", "459.38, 497.444, 33.2993, 0.2746", "459.712, 498.515, 33.6431, 0.2746", "459.949, 499.593, 34.0396, 0.2746", "460.23, 500.693, 34.47, 0.2746", "460.449, 501.781, 34.923, 0.2746", "460.562, 502.89, 35.3878, 0.2746", "460.641, 504.009, 35.8498, 0.2746", "460.832, 505.097, 36.3006, 0.2746", "461.097, 506.182, 36.7284, 0.2746", "461.15, 507.278, 37.1232, 0.2746", "461.04, 508.389, 37.473, 0.2746", "461.291, 509.506, 37.7664, 0.2746", "461.619, 510.6, 38.0038, 0.2746", "462.057, 511.651, 38.1942, 0.2748", "462.619, 512.647, 38.3519, 0.275", "463.205, 513.609, 38.484, 0.2752", "463.773, 514.596, 38.6114, 0.2758", "464.354, 515.518, 38.7682, 0.2768", "464.881, 516.467, 38.974, 0.2786", "465.342, 517.507, 39.2266, 0.2822", "465.855, 518.524, 39.5164, 0.2888", "466.502, 519.458, 39.8367, 0.3004", "467.117, 520.419, 40.1708, 0.3248", "467.797, 521.289, 40.5112, 0.357", "468.559, 522.056, 40.8618, 0.4786", "469.277, 522.92, 41.2168, 0.405", "470.003, 523.796, 41.5652, 0.3472", "470.798, 524.613, 41.8942, 0.3158", "471.58, 525.445, 42.2083, 0.3464", "472.295, 526.337, 42.4978, 0.4294", "473.105, 527.144, 42.7591, 0.4576", "473.909, 527.947, 42.9979, 0.4322", "474.727, 528.708, 43.2253, 0.305", "475.571, 529.408, 43.9107, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "436.512, 450.796, 26.3174, 0.8838", "437.246, 451.753, 25.6152, 0.2288", "438.148, 452.452, 25.2654, 0.3474", "438.779, 453.4, 25.1176, 0.3988", "439.558, 454.153, 24.9374, 0.5578", "440.507, 454.721, 24.7206, 0.543", "441.287, 455.549, 24.4837, 0.6448", "442.046, 456.369, 24.245, 0.6646", "442.806, 457.042, 23.9906, 0.607", "443.617, 457.682, 23.7243, 0.4998", "444.562, 457.927, 23.4478, 0.5306", "445.653, 458.234, 23.1853, 0.6188", "446.582, 458.872, 22.9481, 0.6314" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "432.571, 449.397, 23.4126, 0.7228", "433.455, 450.595, 21.4052, 0.2288", "433.664, 451.405, 19.758, 0.3304", "434.241, 452.215, 19.0637, 0.3796", "435.059, 452.08, 18.1904, 0.463", "435.628, 451.342, 17.1408, 0.6538", "436.159, 450.664, 15.9837, 0.8332", "436.629, 449.797, 14.8058, 0.6384", "437.072, 448.852, 13.6912, 0.5508", "437.402, 447.846, 12.6904, 0.4322", "437.782, 446.843, 10.5484, 0.6864" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "432.571, 449.397, 23.4126, 0.7228", "431.69, 450.557, 23.0966, 0.5926", "431.624, 451.669, 22.8092, 0.609", "431.745, 452.796, 22.5588, 0.5318", "431.364, 453.716, 22.3509, 0.453", "430.827, 454.588, 22.1661, 0.4528", "430.182, 455.423, 21.9857, 0.431", "429.479, 456.292, 21.8241, 0.4948", "428.681, 457.03, 21.6913, 0.564", "427.856, 457.645, 21.5671, 0.4734", "426.896, 457.988, 21.4668, 0.452", "426.027, 458.64, 21.4018, 0.3876", "425.217, 459.444, 21.3761, 0.389", "424.639, 460.386, 21.3905, 0.4908", "423.766, 461.108, 21.4316, 0.4276", "422.907, 461.854, 21.491, 0.3888", "422.099, 462.662, 21.5471, 0.3938", "421.565, 463.561, 21.5787, 0.4868", "421.069, 464.399, 21.5949, 0.7112", "420.27, 465.205, 21.5962, 0.874", "419.564, 466.096, 21.5764, 1.0332", "418.749, 466.887, 21.5358, 1.1052", "418.025, 467.735, 21.4697, 1.179", "417.186, 468.47, 21.3861, 1.1466", "416.336, 469.164, 21.3073, 0.9942", "415.525, 469.753, 21.2186, 0.7018", "415.169, 470.799, 21.1487, 0.6646", "415.353, 471.675, 21.1226, 0.6614", "415.154, 472.575, 21.1308, 0.5654", "414.768, 473.037, 21.1219, 0.5956", "414.239, 473.872, 21.1168, 0.5554", "413.723, 474.848, 21.1138, 0.4914", "412.926, 475.608, 21.095, 0.55", "412.322, 476.502, 21.057, 0.4854", "411.765, 477.49, 21.035, 0.5188", "411.177, 478.46, 21.0516, 0.524", "410.602, 479.421, 21.1104, 0.5798", "409.875, 480.231, 21.2175, 0.4604", "409.078, 480.911, 21.3528, 0.4044", "408.972, 482.031, 21.4883, 0.4128", "408.704, 483.126, 21.6035, 0.5712", "408.105, 484.001, 21.6798, 0.6288", "407.692, 485.057, 21.7305, 0.5088", "407.328, 486.12, 21.7646, 0.472", "406.939, 487.172, 21.7901, 0.418", "406.299, 488.108, 21.8238, 0.4772", "405.557, 488.975, 21.8754, 0.5006", "405.025, 489.963, 21.9541, 0.5052", "404.674, 491.025, 22.065, 0.472", "404.337, 492.097, 22.2047, 0.386", "403.995, 493.177, 22.3607, 0.3444", "403.666, 494.27, 22.51, 0.3822", "403.225, 495.314, 22.6343, 0.3504", "402.728, 496.342, 22.7228, 0.3302", "402.19, 497.34, 22.7724, 0.3326", "401.545, 498.273, 22.7835, 0.3718", "401.234, 499.32, 22.7604, 0.5056", "401.048, 500.426, 22.7213, 0.4572", "400.5, 501.413, 22.6895, 0.4332", "399.928, 502.39, 22.6767, 0.5264", "399.443, 503.423, 22.6903, 0.4892", "399.131, 504.461, 22.7258, 0.5242", "399.049, 505.445, 22.7969, 0.5418", "398.344, 506.336, 22.9011, 0.5764", "397.818, 507.323, 23.0411, 0.6302", "397.373, 508.352, 23.22, 0.5508", "396.682, 509.23, 23.4155, 0.5872", "395.826, 509.968, 23.6325, 0.6784", "394.872, 510.58, 23.8649, 0.7324", "394.149, 511.465, 24.1072, 0.7046", "393.645, 512.344, 24.3711, 0.5874", "393.485, 513.396, 24.6449, 0.4614", "393.002, 514.373, 24.9384, 0.4696", "392.575, 515.389, 25.2445, 0.4556", "392.143, 516.404, 25.5527, 0.5714", "391.351, 517.228, 25.8323, 0.5562", "390.647, 518.121, 26.0648, 0.5002", "390.038, 519.088, 26.2465, 0.5314", "389.349, 519.996, 26.378, 0.6202", "388.579, 520.843, 26.4688, 0.634", "387.863, 521.712, 26.5391, 0.4762", "387.2, 522.606, 26.6133, 0.3872", "386.657, 523.577, 26.6836, 0.3784", "386.158, 524.574, 26.7383, 0.5192", "385.464, 525.477, 26.7851, 0.4748", "384.749, 526.37, 26.8306, 0.5038", "383.81, 526.964, 26.8907, 0.473", "382.835, 527.503, 26.9735, 0.5984", "381.743, 527.845, 27.0722, 0.6318", "380.651, 528.186, 27.1781, 0.5156", "379.576, 528.575, 27.28, 0.478", "378.503, 528.972, 27.3699, 0.4602", "377.622, 529.664, 27.4433, 0.405", "376.826, 530.485, 27.5043, 0.4102", "375.93, 531.19, 27.5639, 0.355", "374.993, 531.847, 27.6336, 0.3388", "374.165, 532.542, 27.708, 0.3482", "373.395, 533.356, 27.7984, 0.4026", "372.434, 533.834, 27.934, 0.5526", "371.663, 534.276, 28.1414, 0.5934", "370.723, 534.874, 28.4054, 0.4486", "369.851, 535.566, 28.7034, 0.3336", "368.972, 536.267, 28.9982, 0.291", "367.961, 536.757, 29.2547, 0.2994", "367.133, 537.532, 29.4619, 0.3474", "366.371, 538.386, 29.6128, 0.2796", "365.615, 539.243, 29.8393, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "399.801, 439.47, 22.7465, 0.759", "398.917, 440.831, 23.711, 0.2288", "398.747, 441.949, 24.2408, 0.5984", "398.173, 442.86, 24.475, 0.8142", "397.537, 443.707, 24.745, 0.8844", "396.861, 444.543, 25.0434, 0.7846", "396.378, 445.44, 25.3713, 0.5728", "395.968, 446.486, 25.7097, 0.5378", "395.29, 447.388, 26.0351, 0.5664", "394.494, 448.209, 26.3383, 0.6252", "393.691, 449.02, 26.6209, 0.7042", "392.778, 449.647, 26.8953, 0.7692", "392.162, 450.491, 27.1662, 0.5986", "392.015, 451.61, 27.4315, 0.55", "392.015, 452.754, 27.6939, 0.5348", "391.874, 453.873, 27.9611, 0.5996", "391.658, 454.978, 28.2388, 0.498", "391.533, 456.105, 28.523, 0.4702", "391.337, 457.215, 28.8109, 0.555", "390.769, 458.194, 29.1038, 0.7368", "389.849, 458.695, 29.4168, 0.7258", "389.155, 459.508, 29.7545, 0.5642", "388.809, 460.55, 30.1162, 0.4926", "388.809, 461.682, 30.5049, 0.6254", "388.404, 462.681, 30.9327, 0.7264", "387.765, 463.585, 31.3928, 0.7046", "386.83, 464.134, 31.8856, 0.763", "385.977, 464.861, 32.3985, 0.6206", "385.29, 465.73, 32.9288, 0.6572", "384.857, 466.694, 33.4877, 0.6404", "384.687, 467.731, 34.076, 0.5612", "384.382, 468.768, 34.687, 0.4186" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "399.801, 439.47, 22.7465, 0.759", "399.996, 440.066, 22.2705, 0.769", "400.465, 441.049, 21.7443, 0.635", "400.082, 442.091, 21.2059, 0.6686", "399.653, 443.138, 20.6897, 0.7342", "399.634, 444.224, 20.2193, 0.6114", "400.038, 444.675, 19.7868, 0.4272", "399.824, 445.454, 19.394, 0.3314", "399.818, 446.287, 19.0969, 0.3334", "399.818, 447.148, 18.9321, 0.3806", "399.903, 448.066, 18.868, 0.4862" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "403.871, 417.547, 24.3872, 0.9154", "403.948, 416.862, 23.1252, 0.6864", "404.239, 415.789, 23.7899, 0.859", "403.966, 414.753, 24.0501, 0.7326", "403.921, 413.818, 24.3758, 0.7286", "403.957, 412.683, 24.7462, 0.5182", "404.015, 411.541, 25.1382, 0.4274", "404.073, 410.399, 25.5335, 0.408", "404.559, 409.375, 25.9263, 0.5626", "404.858, 408.385, 26.3317, 0.6118", "404.991, 407.425, 26.7598, 0.4826" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "403.871, 417.547, 24.3872, 0.9154", "402.631, 416.851, 24.2446, 0.8186", "401.611, 416.568, 24.116, 0.7484", "400.728, 416.284, 24.0403, 0.7742", "399.771, 415.675, 24.0105, 0.9816", "398.884, 415.055, 23.998, 1.0492" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "446.582, 458.872, 22.9481, 0.6314", "447.199, 459.025, 22.7516, 0.4714", "448.25, 459.431, 22.6098, 0.3782", "449.281, 459.91, 22.5395, 0.362", "450.368, 460.251, 22.5461, 0.488", "451.483, 460.457, 22.628, 0.4218", "452.523, 460.908, 22.7747, 0.3806", "453.632, 461.13, 22.9731, 0.3664", "454.683, 461.53, 23.2094, 0.4956", "455.702, 461.944, 23.4763, 0.4376", "456.759, 462.234, 23.7586, 0.402", "457.884, 462.301, 24.0426, 0.4442", "459.01, 462.359, 24.3154, 0.4556", "460.151, 462.359, 24.5545, 0.5716", "461.293, 462.359, 24.7484, 0.556", "462.429, 462.483, 24.9016, 0.5012", "463.564, 462.608, 25.0235, 0.5258", "464.62, 462.981, 25.124, 0.646", "465.612, 463.551, 25.2127, 0.5064", "466.676, 463.906, 25.3, 0.4044", "467.81, 464.046, 25.3908, 0.3708", "468.946, 464.188, 25.486, 0.4678", "470.04, 464.436, 25.5965, 0.561", "471.133, 464.685, 25.7255, 0.4678", "472.25, 464.923, 25.8582, 0.4422", "473.37, 465.16, 25.9826, 0.3668", "474.424, 465.573, 26.0905, 0.3628", "475.433, 466.114, 26.1769, 0.3816", "476.335, 466.788, 26.2382, 0.5188", "477.033, 467.682, 26.2721, 0.5048", "477.913, 468.38, 26.2989, 0.4094", "478.785, 469.098, 26.3251, 0.3406", "479.802, 469.556, 26.3478, 0.3754", "480.943, 469.633, 26.3608, 0.3376", "481.831, 469.992, 26.3357, 0.3068", "482.821, 470.459, 26.2886, 0.287", "483.601, 471.276, 26.2319, 0.2988", "484.532, 471.941, 26.1774, 0.3142", "485.445, 472.629, 26.1376, 0.3734", "486.384, 473.281, 26.122, 0.3338", "487.352, 473.889, 26.1348, 0.3", "488.341, 474.466, 26.1664, 0.2746", "489.338, 474.999, 26.2167, 0.2746", "490.333, 475.549, 26.2756, 0.2746", "491.324, 476.118, 26.3319, 0.2746", "492.309, 476.7, 26.3829, 0.2746", "493.271, 477.31, 26.4237, 0.2746", "494.244, 477.907, 26.4588, 0.2746", "495.225, 478.491, 26.4968, 0.2746", "496.201, 479.083, 26.5422, 0.2746", "496.982, 479.903, 26.6077, 0.2746", "497.706, 480.784, 26.7002, 0.2746", "498.394, 481.697, 26.8192, 0.2746", "499.159, 482.529, 26.9661, 0.2744", "499.895, 483.379, 27.1377, 0.2744", "500.576, 484.27, 27.3266, 0.2742", "501.324, 485.134, 27.5114, 0.274", "502.088, 485.985, 27.6749, 0.2736", "502.887, 486.801, 27.807, 0.2728", "503.778, 487.518, 27.9073, 0.2712", "504.609, 488.293, 27.9717, 0.2684", "505.423, 489.091, 28.0062, 0.2626", "506.213, 489.915, 28.0252, 0.2542", "506.916, 490.803, 28.0479, 0.2288", "507.682, 491.647, 28.1876, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "446.582, 458.872, 22.9481, 0.6314", "447.072, 459.806, 21.751, 0.6864", "447.547, 460.824, 20.9272, 0.6338", "447.707, 461.895, 20.5982, 0.6046", "448.722, 462.379, 20.2272, 0.4594", "449.834, 462.638, 19.8227, 0.4018", "450.669, 462.904, 19.3644, 0.4128", "451.445, 463.648, 18.8682, 0.5472", "451.983, 464.598, 18.3437, 0.7", "452.504, 465.615, 17.7986, 0.766", "453.219, 466.433, 17.2369, 0.7988", "454.073, 466.876, 16.6433, 0.6078", "455.062, 466.784, 16.0278, 0.5606", "455.908, 467.41, 15.4168, 0.5854", "456.631, 468.243, 14.8215, 0.544", "457.08, 469.057, 14.2214, 0.4344", "457.866, 469.848, 13.6364, 0.389", "458.725, 470.599, 13.0794, 0.4548", "459.38, 471.463, 12.535, 0.5356", "459.975, 472.358, 11.9937, 0.4262", "460.71, 473.193, 11.4666, 0.3392", "460.758, 473.457, 10.9723, 0.3012", "460.923, 474.522, 10.5038, 0.3186", "461.125, 475.484, 10.056, 0.3818", "461.526, 476.468, 9.6674, 0.3492", "462.549, 476.841, 9.3454, 0.3296", "463.682, 476.94, 9.0985, 0.324", "464.334, 477.654, 8.9286, 0.3918", "464.53, 478.623, 8.8369, 0.3686", "465.011, 479.574, 8.8085, 0.3604", "465.632, 480.402, 8.8094, 0.4068", "465.997, 481.343, 8.8457, 0.4208", "466.299, 482.404, 8.8868, 0.339", "466.225, 483.396, 8.9029, 0.2542", "466.646, 484.205, 8.9944, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "384.382, 468.768, 34.687, 0.4186", "384.446, 469.79, 35.3016, 0.3634", "384.518, 470.93, 35.9097, 0.3888", "384.68, 471.935, 36.5207, 0.5034", "384.966, 472.882, 37.1361, 0.6154", "385.701, 473.623, 37.7423, 0.6252", "386.228, 474.463, 38.3351, 0.4604", "386.533, 475.528, 38.8954, 0.3568", "386.685, 476.627, 39.3982, 0.3272", "387.446, 477.48, 39.8314, 0.3988", "388.104, 478.416, 40.1968, 0.3756", "388.779, 479.338, 40.5084, 0.4028", "389.45, 480.265, 40.7826, 0.3414", "389.785, 481.01, 41.0726, 0.3138", "390.364, 481.949, 41.3792, 0.3004", "391.24, 482.667, 41.6836, 0.322", "391.734, 483.548, 41.9647, 0.364", "392.51, 484.354, 42.2383, 0.4332", "393.362, 485.087, 42.5071, 0.6038", "394.133, 485.895, 42.772, 0.7148", "394.621, 486.853, 43.0573, 0.5444", "394.761, 487.988, 43.3602, 0.4522", "394.814, 489.126, 43.6786, 0.3386", "395.076, 490.241, 44.0073, 0.309", "395.338, 491.354, 44.3489, 0.291", "395.72, 492.406, 44.718, 0.306", "396.122, 493.449, 45.1234, 0.3278", "396.355, 494.444, 45.5834, 0.3984", "396.512, 495.457, 46.0947, 0.3822", "396.322, 496.569, 46.6273, 0.379", "396.131, 497.68, 47.1517, 0.4722", "395.857, 498.746, 47.6473, 0.3932", "395.497, 499.795, 48.0925, 0.3254", "394.976, 500.811, 48.4627, 0.2746", "394.756, 501.899, 48.755, 0.2746", "394.771, 503.043, 48.9798, 0.2746", "394.736, 504.153, 49.1632, 0.2746", "394.717, 505.272, 49.3214, 0.2746", "394.743, 506.409, 49.4589, 0.2746", "394.803, 507.552, 49.5732, 0.2746", "394.851, 508.692, 49.6563, 0.2746", "394.745, 509.82, 49.7118, 0.2746", "394.808, 510.916, 49.7255, 0.2746", "394.973, 511.993, 49.6888, 0.2746", "395.137, 513.069, 49.6098, 0.2746", "395.206, 514.178, 49.5236, 0.2746", "395.219, 515.306, 49.467, 0.2746", "395.229, 516.434, 49.4609, 0.2746", "394.935, 517.533, 49.5127, 0.2746", "394.641, 518.631, 49.6171, 0.2746", "394.334, 519.728, 49.7566, 0.2748", "393.987, 520.817, 49.9041, 0.275", "393.639, 521.908, 50.0396, 0.2752", "393.28, 522.993, 50.1567, 0.2758", "392.912, 524.077, 50.2524, 0.2768", "392.542, 525.159, 50.328, 0.2796", "392.243, 526.262, 50.3891, 0.2796", "392.02, 527.384, 50.4386, 0.305", "391.736, 528.483, 50.5711, 0.2288" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "384.382, 468.768, 34.687, 0.4186", "383.551, 469.318, 35.0823, 0.6864", "382.834, 470.161, 35.831, 0.732", "382.152, 471.079, 36.1228, 0.6262", "381.283, 471.698, 36.4619, 0.5904", "380.579, 472.498, 36.8418, 0.4332", "380.039, 473.482, 37.2445, 0.3534", "379.537, 474.487, 37.6505, 0.3214", "379.035, 475.491, 38.0422, 0.3868", "378.483, 476.467, 38.4042, 0.3586", "377.792, 477.292, 38.7139, 0.347", "377.216, 478.213, 38.9981, 0.3564", "376.321, 478.652, 39.2885, 0.4522", "375.384, 479.286, 39.5906, 0.4776", "374.473, 479.946, 39.9109, 0.5772", "373.587, 480.632, 40.2536, 0.7366", "372.787, 481.426, 40.602, 0.6968", "371.967, 482.123, 40.9282, 0.6496", "370.983, 482.573, 41.2541, 0.6614", "369.918, 482.921, 41.5934, 0.6582", "368.795, 483.136, 41.9563, 0.547", "367.671, 483.353, 42.3534, 0.3924", "366.572, 483.395, 42.8064, 0.3142", "365.502, 483.379, 43.33, 0.3006", "364.603, 483.417, 43.937, 0.325", "363.775, 483.923, 44.6172, 0.3576", "363.188, 484.822, 45.3208, 0.4796", "362.732, 485.758, 46.0188, 0.4068", "361.938, 486.388, 46.7267, 0.3502", "361.294, 486.827, 47.469, 0.3228", "360.271, 487.043, 48.2474, 0.3536", "359.424, 487.476, 49.0703, 0.4722", "358.586, 488.148, 49.9257, 0.393", "357.768, 488.848, 50.7892, 0.3248", "356.996, 489.569, 51.6323, 0.2736", "356.18, 490.331, 52.4224, 0.2728", "355.331, 491.067, 53.1644, 0.2712", "354.355, 491.653, 53.8373, 0.2684", "353.613, 492.473, 54.4326, 0.2626", "353.098, 493.491, 54.95, 0.2542", "352.845, 494.518, 55.4112, 0.2288", "352.99, 495.466, 56.6518, 0.2288" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "399.903, 448.066, 18.868, 0.4862", "400.313, 449.263, 18.9102, 0.5946", "400.573, 450.333, 18.9814, 0.5322", "400.716, 451.293, 19.0071, 0.5518", "400.852, 452.359, 18.9625, 0.6172", "401.036, 453.488, 18.8603, 0.597", "401.394, 454.559, 18.7187, 0.5602", "401.904, 455.579, 18.5534, 0.49", "402.183, 456.686, 18.3921, 0.5968", "402.444, 457.799, 18.2519, 0.5608", "402.613, 458.922, 18.1332, 0.7146", "402.981, 459.993, 18.0295, 0.6156", "403.528, 460.969, 17.9294, 0.6944", "404.367, 461.697, 17.8312, 0.7126", "404.841, 462.722, 17.7429, 0.679", "405.181, 463.77, 17.6711, 0.7148", "405.906, 464.545, 17.6336, 0.535", "406.411, 465.456, 17.6347, 0.4818", "407.176, 466.196, 17.628, 0.3946", "407.948, 467.03, 17.5918, 0.4078", "408.784, 467.789, 17.5076, 0.4968", "409.631, 468.362, 17.3842, 0.5784", "410.257, 469.27, 17.2145, 0.6774", "411.064, 469.93, 17.0105, 0.6562", "411.888, 470.672, 16.7917, 0.6958", "412.745, 471.123, 16.567, 0.615", "413.788, 471.389, 16.3778, 0.7564", "414.657, 472.081, 16.2351, 0.7486", "415.43, 472.906, 16.142, 0.673", "416.192, 473.702, 16.0805, 0.6", "416.521, 474.742, 16.033, 0.5958", "416.158, 475.735, 15.9748, 0.6374", "416.504, 476.724, 15.9103, 0.7044", "417.39, 477.391, 15.8242, 0.8784", "418.15, 478.243, 15.7259, 0.9598", "418.623, 479.258, 15.6174, 0.907", "419.219, 480.231, 15.5112, 0.8838", "419.516, 481.32, 15.4113, 0.7076", "420.184, 482.225, 15.3336, 0.7978", "421.118, 482.875, 15.2844, 0.772", "421.878, 483.715, 15.2596, 0.7466", "422.569, 484.624, 15.2535, 0.5892", "423.149, 485.604, 15.2606, 0.6046", "423.471, 486.701, 15.2729, 0.7428", "424.16, 487.586, 15.2888, 0.6962", "424.946, 488.405, 15.3024, 0.708", "425.536, 489.355, 15.3058, 0.4802", "426.155, 490.28, 15.2804, 0.3552", "426.859, 491.142, 15.2118, 0.2826", "427.643, 491.882, 15.0947, 0.2892", "428.545, 492.53, 14.9386, 0.3028", "428.91, 493.504, 14.7907, 0.3216", "429.642, 494.382, 14.6639, 0.387", "430.356, 495.274, 14.5648, 0.3602", "430.948, 496.196, 14.4805, 0.3434", "431.764, 496.936, 14.4095, 0.3806", "432.869, 497.163, 14.3533, 0.347", "434.011, 497.222, 14.2955, 0.3252", "435.146, 497.317, 14.2347, 0.3162", "436.245, 497.567, 14.1714, 0.3774", "437.121, 498.291, 14.1038, 0.3412", "437.809, 498.959, 14.0036, 0.3132", "438.923, 498.942, 13.886, 0.3002", "440.044, 498.724, 13.7627, 0.3166", "441.173, 498.65, 13.6435, 0.3782", "442.297, 498.862, 13.5379, 0.3426", "443.337, 499.328, 13.4499, 0.3164", "443.901, 500.317, 13.3779, 0.3048", "444.394, 501.32, 13.3088, 0.3312", "445.094, 502.11, 13.2451, 0.3764", "446.229, 502.064, 13.1708, 0.478", "447.12, 502.658, 13.061, 0.581", "447.994, 503.375, 12.9172, 0.4998", "448.858, 504.12, 12.7515, 0.527", "449.737, 504.837, 12.5744, 0.4002", "450.53, 505.635, 12.4002, 0.3382", "451.237, 506.528, 12.2494, 0.2994", "452.112, 507.191, 12.1133, 0.3154", "453.131, 507.544, 12.0076, 0.3758", "454.242, 507.739, 11.9319, 0.3384", "455.352, 507.964, 11.8702, 0.3084", "455.956, 508.781, 11.7989, 0.2902", "456.102, 509.816, 11.7086, 0.3036", "457.193, 509.889, 11.6039, 0.3292", "457.869, 510.681, 11.4633, 0.3714", "458.696, 511.397, 11.2702, 0.4762", "459.313, 512.332, 11.0345, 0.5406", "459.733, 513.149, 10.7544, 0.6048", "460.039, 514.082, 10.4435, 0.5338", "461.073, 514.504, 10.1396, 0.4096", "461.956, 515.151, 9.8913, 0.3728", "462.755, 515.941, 9.7228, 0.2796", "463.543, 516.752, 9.6908, 0.2288" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "399.903, 448.066, 18.868, 0.4862", "399.203, 447.51, 19.5829, 0.4576", "398.344, 446.758, 18.7519, 0.4082", "397.632, 445.93, 18.4363, 0.3942", "396.921, 445.761, 18.0426, 0.433", "396.068, 445.967, 17.5554, 0.6468", "395.936, 447.015, 17.0132, 0.5828", "395.606, 447.895, 16.4279, 0.6406", "395.012, 448.756, 15.8256, 0.5788", "394.726, 449.725, 15.1973, 0.5966", "394.326, 450.769, 14.5742, 0.4448", "393.623, 450.658, 13.9897, 0.375", "393.143, 449.833, 13.4065, 0.3606", "392.853, 450.499, 12.8175, 0.4632", "392.907, 451.605, 12.2553, 0.483", "392.69, 452.676, 11.7392, 0.661", "391.922, 452.598, 11.2631, 0.5338", "391.795, 451.481, 10.2346, 0.6864" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "404.991, 407.425, 26.7598, 0.4826", "404.849, 406.906, 29.3168, 0.6864", "404.838, 405.916, 30.2442, 0.8364", "404.851, 404.824, 30.6026, 0.7032", "405.067, 403.762, 31.0027, 0.6134", "404.805, 402.717, 31.4373, 0.5986", "404.412, 401.664, 31.8945, 0.5212", "404.131, 400.681, 32.3742, 0.3914", "403.871, 399.663, 32.8583, 0.3126", "403.673, 398.539, 33.3348, 0.2976", "403.474, 397.414, 33.7795, 0.3184", "403.166, 396.312, 34.1796, 0.3516", "402.689, 395.278, 34.5332, 0.4376", "402.549, 394.143, 34.8463, 0.478", "402.876, 393.058, 35.1386, 0.445", "402.877, 392.022, 35.4449, 0.4504", "402.646, 390.946, 35.7798, 0.595", "402.32, 389.872, 36.1365, 0.6662", "401.923, 388.799, 36.4991, 0.6112", "401.496, 387.744, 36.8589, 0.5016", "401.02, 386.717, 37.2142, 0.5634", "401.093, 385.593, 37.5651, 0.5354", "401.147, 384.454, 37.9086, 0.4906", "401.021, 383.335, 38.2567, 0.3722", "400.726, 382.262, 38.6218, 0.3238", "400.238, 381.268, 39.0071, 0.3196", "399.93, 380.251, 39.3957, 0.354", "399.85, 379.139, 39.8051, 0.4416", "399.779, 378.029, 40.2469, 0.4878", "399.741, 376.917, 40.7257, 0.451", "399.703, 375.803, 41.2415, 0.521", "399.51, 374.703, 41.7931, 0.4372", "399.098, 373.64, 42.3702, 0.4028", "398.568, 372.783, 42.9775, 0.4394", "397.774, 372.126, 43.6097, 0.4764", "396.826, 371.627, 44.2705, 0.4656", "395.824, 371.102, 44.9512, 0.3732", "394.904, 370.484, 45.656, 0.3252", "393.973, 369.903, 46.3929, 0.3236", "393.222, 369.076, 47.1582, 0.3548", "392.471, 368.294, 47.9534, 0.4746", "391.71, 367.715, 48.832, 0.3974", "391.396, 366.724, 49.7571, 0.3334", "391.18, 365.634, 50.6848, 0.2882", "390.764, 364.679, 51.5724, 0.305", "391.045, 363.949, 52.4196, 0.305", "391.455, 363.325, 54.6832, 0.4576" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "404.991, 407.425, 26.7598, 0.4826", "405.229, 407.153, 27.1895, 0.3978", "406.033, 406.352, 27.6069, 0.404", "406.915, 405.624, 27.9973, 0.5386", "407.706, 404.817, 28.3539, 0.6468", "408.052, 403.869, 28.6692, 0.8478", "408.563, 403.386, 28.9845, 0.7608", "408.747, 402.536, 29.2942, 0.5436", "408.885, 401.545, 29.6307, 0.4114", "409.218, 400.471, 29.9902, 0.454", "410.125, 399.802, 30.3674, 0.5106", "410.988, 399.716, 30.7938, 0.4944", "411.674, 399.032, 31.2379, 0.5958", "412.634, 398.851, 31.6912, 0.6036", "413.532, 397.741, 32.202, 0.5778", "414.091, 397.004, 32.7449, 0.724", "415.066, 396.807, 33.3304, 0.7408", "416.0, 396.876, 33.9668, 0.6336", "416.671, 396.522, 34.6391, 0.6482", "417.479, 395.845, 35.2965, 0.7824", "417.987, 394.885, 35.9178, 0.971", "418.67, 394.046, 36.4764, 0.9248", "419.068, 393.233, 36.9774, 0.702", "419.477, 392.345, 37.429, 0.4968", "419.925, 391.443, 37.8098, 0.4802", "420.338, 390.376, 38.1388, 0.5128", "420.769, 389.317, 38.4328, 0.4966", "421.167, 388.261, 38.7122, 0.608", "421.535, 387.521, 39.02, 0.5852", "421.985, 386.542, 39.3604, 0.7424", "422.511, 385.679, 39.7141, 0.7524", "422.707, 384.842, 40.0859, 0.5348", "422.709, 384.056, 40.4664, 0.362", "423.382, 383.194, 40.8262, 0.2954", "423.857, 382.359, 41.1359, 0.3128", "424.393, 381.351, 41.3918, 0.3476", "424.846, 380.311, 41.5996, 0.3992", "424.993, 379.188, 41.7598, 0.5584", "425.056, 378.055, 41.8832, 0.5444", "425.403, 376.966, 41.9908, 0.6474", "425.845, 375.914, 42.1039, 0.6692", "426.137, 374.818, 42.2386, 0.6156", "426.068, 373.691, 42.3889, 0.5158", "425.704, 372.669, 42.5704, 0.5612", "426.132, 371.766, 42.7879, 0.67", "426.831, 370.883, 43.0433, 0.7528", "427.225, 369.925, 43.3381, 0.5688", "427.082, 368.8, 43.6629, 0.4922", "427.286, 367.682, 44.0135, 0.4384", "427.391, 366.548, 44.3766, 0.3698", "427.722, 365.499, 44.7555, 0.3192", "428.327, 364.683, 45.1578, 0.3112", "429.042, 363.832, 45.5706, 0.337", "429.597, 362.85, 45.9712, 0.4168", "429.808, 361.777, 46.3501, 0.41", "430.136, 360.709, 46.6942, 0.4626", "430.865, 359.849, 47.0028, 0.4722", "431.432, 358.885, 47.2819, 0.4582", "431.735, 357.842, 47.5432, 0.3594", "432.704, 357.411, 47.7974, 0.3", "433.299, 356.498, 48.0287, 0.2746", "433.597, 355.412, 48.246, 0.2746", "433.986, 354.347, 48.4501, 0.2746", "434.451, 353.306, 48.6363, 0.2746", "434.913, 352.262, 48.8009, 0.2746", "435.411, 351.249, 48.9437, 0.2746", "436.222, 350.443, 49.07, 0.2746", "436.949, 349.561, 49.1834, 0.2746", "437.643, 348.651, 49.2904, 0.2746", "438.127, 347.643, 49.4015, 0.2746", "438.248, 346.548, 49.5247, 0.2746", "438.081, 345.435, 49.6614, 0.2746", "438.387, 344.339, 49.803, 0.2746", "439.022, 343.401, 49.9346, 0.2746", "439.769, 342.539, 50.0422, 0.2746", "440.603, 341.777, 50.12, 0.2746", "441.508, 341.105, 50.1743, 0.2746", "442.257, 340.241, 50.2015, 0.2746", "442.976, 339.37, 50.2116, 0.2746", "443.623, 338.499, 50.1914, 0.2746", "444.271, 337.634, 50.1337, 0.2746", "445.038, 336.79, 50.0542, 0.2746", "445.809, 335.946, 49.9702, 0.2746", "446.574, 335.099, 49.9027, 0.2746", "447.366, 334.294, 49.8663, 0.2746", "447.992, 333.389, 49.8722, 0.2746", "448.584, 332.453, 49.9125, 0.2746", "449.345, 331.599, 49.9556, 0.2746", "450.141, 330.796, 49.968, 0.2746", "450.868, 330.038, 49.9156, 0.2746", "451.639, 329.24, 49.8016, 0.2746", "452.428, 328.413, 49.6451, 0.2746", "453.202, 327.573, 49.4682, 0.2746", "454.002, 326.757, 49.2979, 0.2746", "454.851, 326.017, 49.1484, 0.2746", "455.733, 325.3, 49.033, 0.2746", "456.631, 324.592, 48.9566, 0.2746", "457.409, 324.049, 48.925, 0.2746", "457.852, 323.774, 48.9507, 0.2746", "458.717, 323.039, 48.9978, 0.2746", "459.529, 322.243, 49.0386, 0.2746", "460.228, 321.379, 49.0655, 0.2748", "460.848, 320.453, 49.0689, 0.2748", "461.452, 319.491, 49.0274, 0.275", "462.174, 318.614, 48.9342, 0.2756", "462.891, 317.736, 48.7964, 0.2764", "463.604, 316.855, 48.622, 0.278", "464.331, 315.974, 48.4232, 0.2808", "465.161, 315.194, 48.2202, 0.2862", "465.962, 314.418, 48.0211, 0.2962", "466.712, 313.621, 47.8218, 0.3154", "467.576, 312.895, 47.6308, 0.346", "468.506, 312.239, 47.4639, 0.4274", "469.493, 311.904, 47.3371, 0.4594", "470.519, 311.406, 47.2578, 0.4094", "471.429, 310.734, 47.217, 0.3898", "472.351, 310.114, 47.215, 0.456", "473.377, 309.731, 47.2567, 0.538", "474.39, 309.319, 47.3175, 0.4302", "475.385, 308.879, 47.376, 0.3474", "476.371, 308.307, 47.4345, 0.3136", "477.297, 307.637, 47.4925, 0.356", "478.281, 307.066, 47.5541, 0.3814", "479.289, 306.551, 47.796, 0.6864" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "398.884, 415.055, 23.998, 1.0492", "398.668, 414.139, 24.8755, 0.9152", "398.595, 413.12, 25.6825, 0.73", "399.186, 412.156, 26.0062, 0.6518", "399.114, 411.136, 26.3789, 0.496", "399.106, 410.115, 26.8152, 0.4892" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "398.884, 415.055, 23.998, 1.0492", "397.282, 414.721, 23.9527, 0.8818", "396.189, 414.534, 23.9043, 0.6208", "395.487, 413.938, 23.8786, 0.5822", "394.737, 413.224, 23.8681, 0.6368", "394.307, 412.278, 23.8568, 0.812", "393.319, 411.738, 23.8344, 0.778", "392.415, 411.552, 23.76, 0.8562", "391.457, 411.015, 23.6288, 0.7718", "390.589, 410.291, 23.4555, 0.814", "390.016, 409.316, 23.27, 0.844", "389.685, 408.229, 23.0975, 0.904", "389.244, 407.224, 22.9541, 0.9938", "388.43, 406.42, 22.8488, 1.0364", "387.452, 405.849, 22.7732, 1.0298", "386.379, 405.453, 22.7152, 0.976", "385.306, 405.056, 22.6634, 0.8484", "384.47, 404.283, 22.6098, 0.7474", "383.649, 403.487, 22.5499, 0.5894", "382.604, 403.068, 22.472, 0.6106", "381.565, 402.639, 22.3743, 0.7276", "380.687, 401.917, 22.2753, 0.7956", "379.728, 401.337, 22.1787, 0.959", "378.672, 400.925, 22.0784, 1.0798", "377.632, 400.465, 21.9747, 1.045", "376.625, 400.021, 21.8832, 0.8632", "375.661, 399.468, 21.8049, 0.8664", "375.015, 398.59, 21.7059, 0.8216", "374.516, 397.595, 21.5769, 0.757", "373.888, 396.664, 21.4191, 0.7766", "373.036, 395.918, 21.229, 0.8218", "372.183, 395.172, 21.0081, 0.8636", "371.254, 394.531, 20.7707, 0.9168", "370.232, 394.02, 20.5389, 0.9024", "369.294, 393.41, 20.3183, 0.7398", "368.507, 392.624, 20.1038, 0.6404", "367.73, 391.801, 19.904, 0.6184", "366.96, 390.954, 19.7293, 0.7054", "366.135, 390.168, 19.581, 0.704", "365.276, 389.417, 19.4574, 0.804", "364.644, 388.483, 19.3647, 0.7212", "364.043, 387.528, 19.3043, 0.7248", "363.149, 386.814, 19.2654, 0.6562", "362.267, 386.086, 19.2381, 0.665", "361.446, 385.29, 19.2161, 0.7082", "360.687, 384.455, 19.1928, 0.8852", "360.222, 383.441, 19.1535, 0.9722", "359.725, 382.44, 19.1024, 0.9324", "359.169, 381.467, 19.0623, 0.918", "358.489, 380.576, 19.0394, 0.833", "357.68, 379.767, 19.0283, 0.7298", "356.878, 378.951, 19.0217, 0.7314", "356.08, 378.13, 19.0113, 0.7128", "355.377, 377.236, 18.984, 0.784", "354.744, 376.287, 18.9295, 0.8606", "354.13, 375.332, 18.8454, 0.8132", "353.527, 374.374, 18.7358, 0.7304", "352.682, 373.627, 18.6153, 0.5506", "351.766, 372.941, 18.4982, 0.575", "350.924, 372.169, 18.3939, 0.485", "350.102, 371.373, 18.3058, 0.5168", "349.552, 370.387, 18.2348, 0.527", "349.071, 369.352, 18.1763, 0.554", "348.254, 368.585, 18.1184, 0.5642", "347.359, 367.883, 18.0491, 0.5482", "346.543, 367.127, 17.9511, 0.6876", "345.672, 366.421, 17.8228, 0.8124", "344.723, 365.788, 17.6745, 0.7768", "343.818, 365.097, 17.5218, 0.6348", "342.959, 364.347, 17.3821, 0.5108", "342.305, 363.437, 17.2596, 0.5198", "341.795, 362.418, 17.1517, 0.7498", "341.474, 361.321, 17.0558, 0.8274", "340.835, 360.393, 16.9662, 0.834", "339.839, 359.833, 16.8778, 0.8256", "338.809, 359.37, 16.7828, 0.6808", "337.958, 358.652, 16.6774, 0.5838", "337.147, 357.864, 16.5655, 0.4868", "336.489, 356.928, 16.4609, 0.5906", "335.835, 355.99, 16.3743, 0.5496", "335.5, 354.904, 16.3135, 0.6926", "334.616, 354.235, 16.2954, 0.5802", "333.663, 353.783, 16.306, 0.6032", "332.678, 353.247, 16.3323, 0.6664", "331.703, 352.647, 16.3714, 0.6852", "330.728, 352.055, 16.4237, 0.7382", "329.75, 351.485, 16.4961, 0.7488", "328.778, 350.899, 16.5863, 0.736", "327.816, 350.288, 16.686, 0.6412", "326.963, 349.553, 16.7953, 0.582", "326.182, 348.739, 16.9131, 0.5926", "325.58, 347.802, 17.0359, 0.4868", "324.969, 346.864, 17.1514, 0.441", "324.307, 345.935, 17.2359, 0.5406", "323.625, 345.025, 17.2747, 0.5166", "322.898, 344.159, 17.258, 0.5704", "322.038, 343.458, 17.1884, 0.6512", "321.026, 342.952, 17.0794, 0.6626", "320.048, 342.375, 16.9538, 0.6702", "319.098, 341.742, 16.8367, 0.749", "318.216, 341.033, 16.7525, 0.8094", "317.375, 340.277, 16.7173, 0.8816", "316.551, 339.491, 16.7289, 0.7504", "315.732, 338.697, 16.7753, 0.8778", "315.215, 337.681, 16.8373, 0.9164", "314.687, 336.667, 16.8971, 1.0328", "314.16, 335.651, 16.9404, 1.0316", "313.633, 334.636, 16.9598, 1.1664", "312.858, 333.825, 16.9515, 1.2098", "311.975, 333.103, 16.916, 1.1486", "311.091, 332.381, 16.8591, 1.0354", "310.208, 331.658, 16.7878, 1.0534", "309.403, 330.848, 16.7136, 1.124", "308.607, 330.026, 16.6457, 1.0744", "307.81, 329.204, 16.5901, 0.9444", "307.014, 328.383, 16.5491, 0.8874", "306.454, 327.389, 16.5218, 0.8048", "305.913, 326.381, 16.5052, 0.5378", "305.371, 325.373, 16.4952, 0.3676", "304.83, 324.365, 16.4883, 0.306", "303.996, 323.609, 16.4823, 0.3324", "303.081, 322.923, 16.4755, 0.3836", "302.166, 322.236, 16.4667, 0.4676", "301.251, 321.55, 16.4552, 0.676", "300.263, 320.977, 16.4401, 0.808", "299.256, 320.435, 16.4202, 0.914", "298.248, 319.896, 16.3943, 0.8686", "297.239, 319.354, 16.3607, 0.815", "296.399, 318.605, 16.3176, 0.797", "295.657, 317.736, 16.2624, 0.5972", "294.914, 316.865, 16.1918, 0.5768", "294.172, 315.995, 16.1028, 0.4404", "293.269, 315.315, 15.9938, 0.4382", "292.283, 314.735, 15.8658, 0.3608", "291.242, 314.454, 15.7053, 0.3446", "290.274, 314.066, 15.5118, 0.3826", "289.502, 313.276, 15.3031, 0.3512", "288.587, 312.59, 15.1123, 0.3314", "287.671, 311.904, 14.9644, 0.335", "286.756, 311.217, 14.8756, 0.3764", "285.859, 310.522, 14.8561, 0.514", "285.017, 309.796, 14.9096, 0.4724", "284.177, 309.072, 15.0205, 0.4638", "283.335, 308.347, 15.163, 0.5716", "282.625, 307.472, 15.2973, 0.6284", "281.962, 306.543, 15.389, 0.513", "281.298, 305.615, 15.4175, 0.4562", "280.635, 304.686, 15.3754, 0.5032", "279.943, 303.793, 15.2654, 0.766", "279.246, 302.901, 15.1014, 0.8572", "278.549, 302.011, 14.905, 0.8902", "277.801, 301.169, 14.6983, 0.926", "276.886, 300.483, 14.5048, 0.8866", "275.971, 299.797, 14.3385, 0.869", "275.055, 299.11, 14.2062, 0.7958", "274.199, 298.368, 14.1072, 1.086", "273.536, 297.441, 14.0336, 1.1594", "272.875, 296.514, 13.979, 1.0328", "272.174, 295.625, 13.9404, 0.9306", "271.268, 294.931, 13.926, 0.7832", "270.361, 294.238, 13.94, 0.764", "269.455, 293.546, 13.9839, 0.8662", "268.545, 292.855, 14.0547, 1.0748", "267.63, 292.168, 14.1445, 1.1394", "266.715, 291.482, 14.2464, 0.9918", "265.799, 290.796, 14.3554, 0.8732", "264.909, 290.079, 14.4722, 0.8154", "264.071, 289.302, 14.6018, 0.8372", "263.042, 288.95, 14.7516, 0.7094", "261.903, 288.851, 14.9286, 0.6014", "260.839, 289.097, 15.1431, 0.692", "259.831, 289.6, 15.4029, 0.8192", "258.926, 290.124, 15.7183, 0.7952", "257.978, 289.986, 16.0707, 0.64", "257.02, 289.384, 16.4289, 0.6604", "256.613, 288.469, 16.7857, 0.8048", "256.122, 287.492, 17.1104, 1.0124", "255.61, 286.469, 17.3603, 1.0034", "255.245, 285.389, 17.5083, 0.8382", "254.915, 284.295, 17.5469, 0.7966", "254.895, 283.22, 17.4654, 0.806", "254.888, 282.145, 17.2694, 0.8616", "254.398, 281.242, 17.0013, 0.7794", "253.395, 280.758, 16.7056, 0.6114", "252.29, 280.568, 16.4007, 0.6052", "251.391, 279.928, 16.1042, 0.712", "250.926, 278.908, 15.8298, 0.795", "250.787, 277.787, 15.581, 0.8192", "250.479, 276.687, 15.3624, 0.808", "249.853, 275.75, 15.1734, 0.8296", "249.265, 275.027, 15.0217, 0.6656", "248.563, 274.149, 14.8842, 0.6644", "247.86, 273.273, 14.7451, 0.7938", "247.133, 272.417, 14.5974, 0.852", "246.239, 271.702, 14.4479, 0.6978", "245.346, 270.988, 14.3032, 0.5416", "244.452, 270.273, 14.1694, 0.5362", "243.609, 269.517, 14.0542, 0.749", "243.061, 268.518, 13.9545, 0.9772", "242.513, 267.52, 13.8661, 1.0646", "241.965, 266.521, 13.7834, 1.2532", "241.087, 265.795, 13.7127, 1.2468", "240.203, 265.072, 13.6554, 1.1318", "239.32, 264.35, 13.6084, 0.9612", "238.473, 263.592, 13.5638, 0.896", "237.786, 262.678, 13.5065, 0.93", "237.099, 261.763, 13.4219, 0.9264", "236.412, 260.848, 13.298, 0.785", "235.71, 259.968, 13.1256, 0.7208", "234.931, 259.26, 12.8852, 0.784", "234.015, 258.647, 12.5853, 0.9312", "233.027, 258.115, 12.2449, 0.8314", "231.914, 257.851, 11.8903, 0.6232", "230.801, 257.586, 11.5425, 0.5802", "229.675, 257.501, 11.2111, 0.6646", "228.58, 257.219, 10.9046, 0.7118", "227.74, 256.794, 10.5992, 0.6424", "226.951, 256.001, 10.3151, 0.5892", "226.713, 254.891, 10.0747, 0.5824", "226.572, 253.756, 9.8882, 0.5814", "226.405, 252.625, 9.7618, 0.7514", "226.179, 251.504, 9.6965, 0.9184", "225.658, 250.489, 9.6896, 1.0322", "225.116, 249.48, 9.7264, 0.8226", "224.575, 248.472, 9.795, 0.8734", "224.034, 247.464, 9.8888, 0.8928", "223.323, 246.603, 10.0128, 0.8358", "222.548, 245.793, 10.166, 0.7228", "221.678, 245.057, 10.332, 0.5488", "220.586, 244.755, 10.506, 0.5118", "219.483, 244.615, 10.688, 0.6576", "218.394, 244.274, 10.8596, 0.8032", "217.412, 243.774, 11.0057, 0.764", "216.726, 242.865, 11.1198, 0.5892", "216.002, 241.988, 11.1962, 0.5324", "215.26, 241.117, 11.2268, 0.7314", "214.517, 240.248, 11.2103, 0.7674", "213.775, 239.377, 11.1536, 0.8488", "213.121, 238.529, 11.0485, 0.928", "212.453, 237.68, 10.9, 0.9658", "211.727, 236.821, 10.7308, 0.878", "211.17, 235.841, 10.5791, 0.7968", "210.651, 234.837, 10.4729, 0.7064", "210.392, 233.753, 10.4233, 0.7044", "210.329, 232.612, 10.4309, 0.8132", "210.164, 231.485, 10.4832, 0.9262", "209.926, 230.367, 10.5605, 1.1076", "209.631, 229.271, 10.6468, 1.1234", "209.073, 228.277, 10.7393, 1.1074", "208.383, 227.4, 10.842, 1.0684", "207.566, 226.639, 10.9609, 1.0408", "206.613, 226.035, 11.0813, 1.002", "205.941, 225.159, 11.1875, 0.8694", "206.177, 224.141, 11.2866, 0.9194", "206.562, 223.109, 11.3796, 0.9476", "206.787, 221.989, 11.4612, 0.8562", "207.087, 220.886, 11.5324, 0.9252", "207.102, 219.797, 11.6053, 0.8124", "206.468, 218.845, 11.6782, 0.6274", "205.833, 217.893, 11.7464, 0.625", "205.123, 217.01, 11.8097, 0.5684", "204.231, 216.295, 11.87, 0.7164", "203.673, 215.357, 11.9293, 0.6786", "203.038, 214.41, 11.9902, 0.5228", "202.379, 213.474, 12.0583, 0.4212", "201.722, 212.538, 12.1379, 0.467", "201.064, 211.602, 12.2304, 0.5586", "200.499, 210.633, 12.3448, 0.4684", "199.943, 209.661, 12.482, 0.4186", "199.387, 208.689, 12.6361, 0.4436", "198.889, 207.692, 12.7923, 0.6064", "198.573, 206.614, 12.9224, 0.8", "198.259, 205.537, 13.0136, 0.9984", "197.943, 204.459, 13.0653, 1.0014", "197.585, 203.401, 13.0969, 0.7192", "197.153, 202.372, 13.1438, 0.4482", "196.719, 201.345, 13.2292, 0.3236", "196.287, 200.318, 13.3632, 0.318", "195.824, 199.285, 13.5321, 0.3568", "195.342, 198.247, 13.7114, 0.4186", "194.859, 197.21, 13.8783, 0.5832", "194.376, 196.173, 14.0165, 0.645", "193.774, 195.217, 14.1219, 0.5692", "192.979, 194.395, 14.1989, 0.4356", "192.183, 193.574, 14.2585, 0.384", "191.387, 192.753, 14.3123, 0.4814", "190.562, 191.961, 14.3699, 0.41", "189.695, 191.215, 14.4387, 0.3564", "188.829, 190.468, 14.5237, 0.333", "187.962, 189.721, 14.6267, 0.3784" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "399.106, 410.115, 26.8152, 0.4892", "399.127, 409.514, 27.1628, 0.6864", "398.932, 408.597, 28.7577, 0.773", "399.637, 408.229, 29.3986, 0.6682", "400.02, 407.338, 30.1017, 0.8338", "399.703, 406.389, 30.8596, 0.7668", "398.991, 405.653, 31.6658, 0.6268", "399.169, 404.68, 32.4789, 0.4456", "399.313, 403.715, 33.3088, 0.4146", "399.285, 402.817, 34.2098, 0.4788", "398.952, 401.86, 35.1879, 0.6928", "398.865, 400.837, 36.2334, 0.8578", "398.463, 400.557, 37.3512, 0.9168", "397.403, 400.303, 38.5081, 0.6224", "396.838, 399.617, 39.674, 0.4348", "397.919, 399.393, 40.8304, 0.408", "398.403, 398.603, 41.9874, 0.4002", "397.822, 397.934, 43.1676, 0.4122", "397.562, 397.288, 44.3839, 0.5356", "397.645, 396.528, 45.6501, 0.5012", "397.942, 395.596, 46.9792, 0.5716", "397.438, 395.205, 48.3409, 0.5084", "397.072, 394.555, 49.6796, 0.4152", "396.523, 393.874, 50.9376, 0.356", "395.555, 393.634, 52.0668, 0.3814", "394.554, 393.359, 54.5289, 0.4576" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "399.106, 410.115, 26.8152, 0.4892", "399.921, 409.594, 27.4263, 0.4792", "400.679, 409.148, 28.0916, 0.4476", "401.627, 408.863, 28.7764, 0.4536", "402.584, 408.242, 29.4381, 0.6082", "403.6, 407.941, 30.0362, 0.656", "404.486, 407.378, 30.5477, 0.761", "405.406, 407.044, 30.9772, 0.647", "405.433, 406.369, 31.3608, 0.5606", "405.699, 405.675, 31.7148, 0.4802", "406.39, 405.148, 32.0446, 0.401", "407.244, 404.443, 32.3467, 0.3722", "407.826, 403.736, 32.5928, 0.4338", "408.528, 403.199, 32.7734, 0.4474", "409.423, 402.683, 32.9202, 0.5024", "409.665, 401.784, 33.0823, 0.6896", "410.13, 400.936, 33.2601, 0.8516", "410.796, 400.274, 33.4446, 0.9054", "411.111, 399.224, 33.6521, 0.6004", "411.257, 398.099, 33.8834, 0.399", "411.705, 397.064, 34.1323, 0.3168", "412.174, 396.045, 34.3935, 0.3532", "412.636, 395.1, 34.676, 0.418", "413.342, 394.277, 34.9908, 0.5526", "413.889, 393.372, 35.331, 0.732", "414.334, 392.39, 35.6832, 0.717", "415.046, 391.551, 36.0268, 0.5482", "415.762, 390.709, 36.3314, 0.4614", "415.925, 389.87, 36.5442, 0.5748", "416.322, 389.012, 36.6856, 0.5982", "416.946, 388.469, 36.7727, 0.6336", "417.314, 387.489, 36.8102, 0.5092", "418.138, 386.714, 36.8332, 0.5134", "419.036, 386.06, 36.8833, 0.525", "420.043, 386.063, 36.9729, 0.5292", "421.016, 386.102, 37.1112, 0.6202", "422.035, 385.754, 37.2915, 0.843", "422.363, 384.797, 37.5063, 0.765", "423.358, 384.405, 37.7381, 0.7152", "423.745, 383.533, 37.982, 0.6214", "423.713, 382.438, 38.2203, 0.4534", "423.985, 381.524, 38.4325, 0.343", "424.787, 380.939, 38.6114, 0.3068", "425.423, 380.197, 38.7545, 0.3356", "426.102, 379.699, 38.8486, 0.3818", "426.56, 378.738, 38.9166, 0.5014", "426.594, 377.606, 38.9791, 0.5586", "426.807, 376.503, 39.0564, 0.778", "427.104, 375.405, 39.1443, 0.8636", "427.568, 374.373, 39.2395, 0.7508", "428.061, 373.376, 39.3526, 0.715", "428.873, 372.573, 39.4752, 0.4934", "429.758, 371.854, 39.6054, 0.3794", "430.556, 371.06, 39.7398, 0.3284", "431.024, 370.037, 39.8835, 0.371", "431.403, 369.009, 40.0445, 0.4686", "432.341, 368.4, 40.215, 0.561", "433.076, 367.971, 40.4222, 0.4754", "433.923, 367.323, 40.6406, 0.42", "434.427, 366.382, 40.8332, 0.5022", "435.229, 365.704, 40.983, 0.4434", "436.014, 365.148, 41.1244, 0.4442", "436.943, 364.703, 41.2636, 0.3704", "437.943, 364.199, 41.4114, 0.3696", "439.05, 363.913, 41.5738, 0.394", "440.153, 363.782, 41.7427, 0.5428", "441.097, 363.227, 41.9325, 0.544", "442.188, 363.157, 42.1459, 0.5078", "443.147, 362.592, 42.3716, 0.3988", "443.799, 361.705, 42.5872, 0.3988", "444.322, 360.739, 42.8067, 0.3338", "444.916, 359.793, 43.0282, 0.3", "445.558, 358.853, 43.2368, 0.2746", "446.169, 357.887, 43.4196, 0.2746", "446.758, 356.906, 43.5728, 0.2746", "447.409, 355.969, 43.6937, 0.2746", "448.154, 355.106, 43.7777, 0.2746", "449.021, 354.359, 43.829, 0.2746", "449.862, 353.584, 43.8558, 0.2746", "450.696, 352.802, 43.8668, 0.2746", "451.521, 352.01, 43.8693, 0.2746", "452.306, 351.178, 43.8704, 0.2746", "453.017, 350.292, 43.8813, 0.2746", "453.665, 349.355, 43.9071, 0.2746", "454.281, 348.392, 43.9466, 0.2746", "454.896, 347.426, 44.0006, 0.2746", "455.669, 346.604, 44.0642, 0.2744", "456.485, 345.824, 44.1344, 0.2744", "457.014, 344.819, 44.2221, 0.2742", "457.195, 343.741, 44.3425, 0.274", "457.657, 342.745, 44.4914, 0.2736", "458.4, 341.904, 44.6541, 0.2728", "459.248, 341.18, 44.8115, 0.2712", "459.667, 340.157, 44.959, 0.2684", "460.315, 339.218, 45.073, 0.2626", "461.025, 338.331, 45.1405, 0.2542", "461.919, 337.632, 45.159, 0.2288", "462.896, 337.048, 45.0041, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "187.962, 189.721, 14.6267, 0.3784", "187.871, 188.896, 14.756, 0.4894", "187.75, 187.78, 14.9161, 0.5646", "187.268, 186.784, 15.1015, 0.6506", "186.718, 185.798, 15.303, 0.6132", "186.406, 184.755, 15.4961, 0.5846", "185.769, 183.932, 15.6842, 0.5616", "184.82, 183.32, 15.8683, 0.6016", "183.715, 183.101, 16.0444, 0.5044", "182.785, 182.577, 16.2156, 0.4684", "182.345, 181.548, 16.3871, 0.6176", "182.16, 180.421, 16.5639, 0.5328", "181.63, 179.527, 16.7579, 0.5276", "180.556, 179.444, 16.9747, 0.4674", "179.58, 179.001, 17.2101, 0.6006", "178.609, 178.395, 17.4395, 0.5752", "177.678, 177.733, 17.6444, 0.7052", "176.925, 177.161, 17.7883, 0.7732", "175.844, 176.19, 17.9016, 0.8244", "175.147, 175.332, 18.008, 0.8248", "174.594, 174.33, 18.1137, 0.826", "173.91, 173.413, 18.2253, 0.8278", "173.224, 172.498, 18.3465, 0.8322", "172.403, 171.701, 18.4741, 0.8344", "171.582, 170.904, 18.6018, 0.8684" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "187.962, 189.721, 14.6267, 0.3784", "186.907, 189.53, 14.0672, 0.2288", "185.862, 189.159, 14.1049, 0.6218", "185.321, 188.393, 14.1341, 0.718", "184.67, 187.566, 14.1488, 0.6968", "183.8, 186.879, 14.1369, 0.7102", "182.819, 186.56, 14.1183, 0.7094", "181.75, 186.943, 14.0967, 0.6018", "180.87, 186.361, 14.0792, 0.6904", "180.212, 185.434, 14.0603, 0.5994", "179.196, 185.085, 14.0287, 0.525", "178.145, 184.712, 13.9851, 0.3886", "177.366, 183.979, 13.9148, 0.3556" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "171.582, 170.904, 18.6018, 0.8684", "169.765, 169.928, 18.7518, 0.7858", "169.03, 169.08, 18.9141, 0.6528", "168.351, 168.171, 19.0933, 0.5378", "167.715, 167.233, 19.2775, 0.6016", "167.069, 166.303, 19.4669, 0.7468", "166.403, 165.388, 19.6707, 0.8858", "165.696, 164.498, 19.8879, 0.861", "165.015, 163.833, 20.1398, 0.8134", "164.26, 163.133, 20.4213, 0.7322", "163.949, 162.073, 20.6989, 0.7776", "164.232, 161.042, 20.9343, 0.824", "163.976, 159.995, 21.1322, 0.8664", "163.213, 159.233, 21.3101, 0.927", "162.358, 158.516, 21.4608, 0.8984", "161.415, 158.077, 21.5805, 0.8428", "160.833, 157.178, 21.7064, 0.9822", "160.744, 156.09, 21.8579, 0.9774", "160.591, 155.033, 22.0389, 0.8744", "160.591, 153.889, 22.2323, 0.6814", "160.485, 152.785, 22.4248, 0.7914", "160.464, 151.753, 22.5961, 0.7844", "160.673, 150.682, 22.7582, 0.88", "160.148, 149.738, 22.9264, 0.9876", "159.582, 148.745, 23.1034, 1.0668", "159.37, 147.72, 23.3097, 1.112", "159.141, 146.673, 23.5287, 1.0026", "158.251, 146.083, 23.7795, 0.8232" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "171.582, 170.904, 18.6018, 0.8684", "170.48, 170.717, 19.3234, 0.6864", "169.443, 170.915, 19.5691, 0.4962", "168.582, 171.37, 19.6734, 0.4476", "167.962, 170.736, 19.7795, 0.3768", "167.131, 170.25, 19.8415, 0.3816", "166.572, 169.937, 19.8008, 0.4164", "165.544, 169.826, 19.6527, 0.584", "164.77, 169.137, 19.4322, 0.6222", "163.843, 168.475, 19.1913, 0.643", "162.899, 167.839, 18.9674, 0.6968", "161.922, 167.268, 18.7947, 0.723", "160.94, 166.73, 18.678, 0.6702", "159.866, 166.576, 18.587, 0.6068", "158.855, 166.098, 18.5027, 0.7796", "158.172, 165.278, 18.4314, 0.8352", "157.447, 164.413, 18.3763, 0.8498", "156.695, 163.554, 18.3356, 0.8486", "155.859, 162.781, 18.299, 0.7558", "154.934, 162.144, 18.2645, 0.5652", "153.906, 161.669, 18.2307, 0.5302", "153.031, 161.019, 18.1928, 0.5228", "152.112, 160.486, 18.1155, 0.686", "151.134, 160.471, 17.9877, 0.817", "150.224, 161.128, 17.8338, 0.7488", "149.22, 161.536, 17.6756, 0.7594", "148.118, 161.751, 17.5216, 0.5708", "147.081, 161.962, 17.3953, 0.5454", "146.148, 161.839, 17.3429, 0.5264", "145.06, 161.597, 17.3508, 0.5838", "144.062, 161.193, 17.3729, 0.4704", "143.025, 161.139, 17.3708, 0.4108", "142.076, 161.139, 17.3745, 0.484", "141.312, 160.74, 17.3992, 0.4148", "140.624, 160.099, 17.3821, 0.3664", "139.782, 159.589, 17.3093, 0.3464", "138.797, 159.096, 17.2195, 0.428", "137.726, 158.749, 17.1238, 0.4606", "136.836, 158.177, 17.0332, 0.4104", "135.859, 157.671, 16.9343, 0.3966", "134.909, 157.593, 16.8131, 0.445", "133.868, 157.932, 16.6799, 0.6328", "132.884, 157.509, 16.5416, 0.7332", "132.038, 156.857, 16.3877, 0.7494", "131.288, 156.003, 16.2326, 0.6896", "130.386, 155.311, 16.0942, 0.5582", "129.538, 154.567, 15.976, 0.4128", "128.461, 154.272, 15.869, 0.3526", "127.43, 154.056, 15.7696, 0.3692", "126.501, 153.453, 15.6948, 0.465", "125.636, 152.811, 15.6221, 0.5546", "124.666, 152.234, 15.5597, 0.462", "123.686, 151.661, 15.5055, 0.4016", "122.694, 151.09, 15.4493, 0.4372", "121.689, 150.546, 15.3806, 0.4724", "120.641, 150.159, 15.2834, 0.4584", "119.601, 150.01, 15.1448, 0.3598", "118.528, 149.613, 14.9753, 0.3008", "117.459, 149.207, 14.7867, 0.2762", "116.409, 148.759, 14.5876, 0.2776", "115.347, 148.369, 14.3855, 0.2802", "114.211, 148.349, 14.1846, 0.285", "113.074, 148.329, 13.9859, 0.2938", "111.942, 148.44, 13.7902, 0.3112", "110.814, 148.627, 13.6004, 0.337", "109.687, 148.742, 13.4169, 0.4172", "108.566, 148.56, 13.2328, 0.409", "107.446, 148.377, 13.036, 0.468", "106.332, 148.115, 12.8368, 0.4464", "105.342, 147.577, 12.6428, 0.5848", "104.437, 146.879, 12.4589, 0.4322", "103.475, 146.681, 12.2696, 0.305", "102.331, 146.67, 11.776, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "177.366, 183.979, 13.9148, 0.3556", "176.623, 183.809, 14.0202, 0.4576", "175.554, 183.532, 13.8681, 0.5846", "174.487, 183.189, 13.8079, 0.6392", "173.435, 182.771, 13.7387, 0.5984", "172.449, 182.378, 13.6791, 0.525", "171.535, 182.152, 13.6095, 0.607", "170.596, 181.772, 13.5368, 0.6168", "169.677, 181.181, 13.4608, 0.638", "168.556, 180.974, 13.3767, 0.6634", "167.478, 180.604, 13.2843, 0.7766", "166.523, 179.992, 13.1816, 0.8952", "165.514, 179.507, 13.0667, 0.8722", "164.537, 178.936, 12.94, 0.865", "163.467, 178.584, 12.8052, 0.678", "162.366, 178.287, 12.6702, 0.7174", "161.281, 178.131, 12.5369, 0.7474", "160.209, 178.258, 12.4311, 0.7818", "159.136, 177.955, 12.357, 0.7206", "158.331, 177.447, 12.2795, 0.7564", "157.305, 177.291, 12.2112, 0.7836", "156.682, 176.759, 12.1688, 0.797", "155.828, 176.319, 12.132, 0.7718", "155.147, 175.54, 12.1179, 0.7382", "154.183, 175.124, 12.1104, 0.614", "153.142, 174.834, 12.13, 0.6832", "152.031, 174.826, 12.1528, 0.7302", "150.934, 174.628, 12.1835, 0.7548", "150.059, 174.025, 12.2374, 0.646", "149.27, 173.488, 12.2865, 0.737", "148.163, 173.489, 12.3289, 0.8578", "147.103, 173.842, 12.3634, 0.8574", "146.08, 173.831, 12.4073, 0.7996", "145.018, 173.536, 12.4534, 0.7426", "144.138, 173.453, 12.5096, 0.6222", "143.316, 173.076, 12.5416, 0.698", "142.206, 172.8, 12.5535, 0.7596", "141.077, 172.631, 12.5481, 0.7994", "139.94, 172.618, 12.5289, 0.7778", "138.811, 172.793, 12.5053, 0.743", "137.707, 172.996, 12.493, 0.6528", "136.668, 172.833, 12.4945, 0.6104", "135.681, 172.496, 12.4956, 0.6118", "134.842, 171.756, 12.5097, 0.684", "133.88, 171.201, 12.5481, 0.7082", "132.766, 171.19, 12.6166, 0.5996", "131.701, 171.034, 12.7052, 0.6852", "130.703, 170.708, 12.8248, 0.5948", "129.778, 170.956, 12.9635, 0.4926", "128.845, 171.51, 13.1079, 0.4442", "127.924, 171.236, 13.282, 0.5836", "126.988, 170.936, 13.5036, 0.6454", "125.916, 170.79, 13.772, 0.5708", "125.162, 170.124, 14.0846, 0.4362", "124.366, 169.874, 14.4049, 0.3968", "123.599, 170.415, 14.7344, 0.4468", "122.804, 171.098, 15.0528, 0.6286", "121.772, 171.123, 15.3711, 0.762", "120.633, 171.129, 15.6772, 0.6264", "119.514, 171.121, 15.9763, 0.6318", "118.438, 170.947, 16.281, 0.5392", "117.486, 170.441, 16.5705, 0.6364", "116.465, 170.688, 16.8371, 0.6564", "115.48, 171.173, 17.0995, 0.5546", "114.42, 171.49, 17.3755, 0.5826", "113.527, 172.012, 17.6738, 0.4988", "112.403, 172.113, 17.9845, 0.5434", "111.357, 171.895, 18.3031, 0.572", "110.293, 171.672, 18.6019, 0.6576", "109.169, 171.738, 18.8824, 0.6574", "108.045, 171.805, 19.1487, 0.5148", "106.997, 172.209, 19.3983, 0.4826", "106.106, 172.897, 19.636, 0.439", "105.318, 172.368, 19.8801, 0.5102", "104.382, 171.916, 20.1049, 0.5908", "103.376, 171.667, 20.3417, 0.5314", "102.374, 171.667, 20.5719, 0.5198", "101.308, 171.667, 20.7777, 0.7062", "100.324, 172.086, 20.9688, 0.7288", "99.8485, 173.013, 21.1598, 0.7372", "100.191, 174.059, 21.6955, 0.9152" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "177.366, 183.979, 13.9148, 0.3556", "177.136, 183.428, 13.806, 0.3718", "176.738, 182.378, 13.6491, 0.4832", "176.524, 181.275, 13.4464, 0.5228", "176.292, 180.171, 13.2128, 0.7222", "176.014, 179.061, 12.971, 0.7074", "175.857, 178.049, 12.7284, 0.717", "175.657, 177.127, 12.4835, 0.7832", "174.967, 176.373, 12.2798, 0.901", "174.094, 174.658, 12.1823, 0.9136", "173.914, 173.53, 12.146, 0.7914", "173.49, 172.488, 12.1496, 0.5862", "172.59, 171.801, 12.1728, 0.5588", "172.198, 170.773, 12.1899, 0.624", "172.65, 169.837, 12.1647, 0.6412" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "158.251, 146.083, 23.7795, 0.8232", "158.282, 144.66, 24.0904, 0.6054", "158.393, 143.546, 24.4107, 0.5586", "158.867, 142.518, 24.7364, 0.7982", "159.3, 141.48, 25.0633, 0.8012", "159.612, 140.411, 25.3888, 0.6622", "159.836, 139.32, 25.7039, 0.6486", "159.862, 138.177, 25.9941, 0.8116", "160.05, 137.107, 26.2537, 0.886", "160.595, 136.146, 26.4772, 0.7564", "160.74, 135.112, 26.703, 0.672", "160.749, 134.062, 26.9625, 0.6732", "161.129, 133.0, 27.2443, 0.8248", "161.658, 131.997, 27.5528, 0.8398", "162.251, 131.117, 27.9099, 0.7848", "162.572, 130.037, 28.308, 0.8556", "162.0, 129.24, 28.754, 0.836", "161.194, 128.62, 29.2463, 0.8452", "160.724, 127.593, 29.7699, 0.6418", "160.223, 126.584, 30.3055, 0.6482", "159.638, 125.623, 30.8364, 0.6284", "159.416, 124.528, 31.3513, 0.5156", "159.284, 123.4, 31.8413, 0.4486", "159.218, 122.271, 32.3086, 0.5488", "159.218, 121.14, 32.7628, 0.5616", "159.218, 120.019, 33.2136, 0.5084", "159.24, 118.905, 33.6683, 0.554", "159.61, 117.83, 34.125, 0.626", "160.018, 116.78, 34.5839, 0.8206", "160.484, 115.765, 35.0484, 0.6558", "160.838, 114.702, 35.5152, 0.6132", "161.103, 113.598, 35.9792, 0.6302", "161.647, 112.688, 36.4381, 0.6536", "162.434, 111.897, 36.8942, 0.508", "162.068, 110.917, 37.3534, 0.469", "161.937, 109.911, 37.8132, 0.42", "162.766, 109.403, 38.2508, 0.444", "163.72, 108.933, 38.67, 0.6178", "164.626, 108.385, 39.0886, 0.541", "164.873, 107.379, 39.5018, 0.505", "165.156, 106.305, 39.9031, 0.608", "165.731, 105.346, 40.2945, 0.6616", "166.094, 104.282, 40.6854, 0.7416", "166.571, 103.273, 41.0754, 0.7548", "167.306, 102.4, 41.4616, 0.7488", "168.13, 101.617, 41.8566, 0.6572", "169.018, 100.924, 42.2587, 0.6498", "169.726, 100.065, 42.6857, 0.5328", "170.25, 99.2285, 43.1715, 0.5892", "171.083, 98.5827, 43.7256, 0.511", "171.987, 97.9377, 44.3388, 0.567", "172.644, 97.0534, 44.996, 0.6104", "173.055, 96.0333, 45.6823, 0.7546", "173.404, 94.9927, 46.403, 0.7128", "174.15, 94.2011, 47.133, 0.5338", "174.325, 93.1671, 47.8626, 0.466", "174.18, 92.1387, 48.5839, 0.4322", "173.71, 91.2736, 49.2878, 0.3814", "173.17, 90.4631, 51.2103, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "158.251, 146.083, 23.7795, 0.8232", "157.256, 146.402, 25.3383, 0.4576", "156.224, 146.263, 26.3785, 0.6808", "155.297, 145.599, 26.8147, 0.6702", "154.571, 144.783, 27.3414, 0.6844", "153.8, 144.054, 27.9378, 0.776", "152.841, 143.646, 28.581, 0.8566", "151.857, 143.261, 29.2379, 0.983", "150.849, 142.897, 29.8752, 0.8704", "149.927, 142.323, 30.4755, 0.7448", "148.863, 141.921, 31.01, 0.5664", "147.721, 141.912, 31.4678, 0.428", "146.711, 141.912, 31.8335, 0.3818", "145.78, 141.346, 32.1283, 0.4178", "144.864, 141.017, 32.417, 0.581", "144.428, 140.536, 32.7698, 0.6452", "143.602, 139.954, 33.2038, 0.5476", "142.769, 139.364, 33.7086, 0.5036", "141.846, 138.829, 34.2334, 0.6712", "140.984, 138.116, 34.7558, 0.689", "140.256, 137.267, 35.2439, 0.5416", "139.628, 136.314, 35.6768, 0.4574", "138.86, 135.49, 36.071, 0.5288", "138.081, 134.695, 36.4501, 0.699", "137.271, 133.975, 36.8393, 0.6032", "136.518, 133.219, 37.2232, 0.5922", "135.584, 132.617, 37.5995, 0.677", "134.587, 132.241, 37.987, 0.5536", "133.662, 131.722, 38.3768, 0.5424", "132.814, 131.035, 38.7565, 0.3814", "131.975, 130.319, 39.1121, 0.305", "131.056, 129.677, 39.415, 0.2288", "130.158, 128.999, 39.851, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "172.65, 169.837, 12.1647, 0.6412", "171.976, 168.826, 12.1125, 0.4896", "171.443, 167.837, 12.0693, 0.412", "170.961, 166.8, 12.0316, 0.4252", "170.331, 165.862, 11.9983, 0.6014", "169.661, 164.961, 11.9608, 0.6494", "169.079, 164.332, 11.8856, 0.718", "168.987, 163.288, 11.8094, 0.7166", "168.792, 162.164, 11.753, 0.6512", "168.593, 161.04, 11.735, 0.6064", "168.181, 159.984, 11.7645, 0.609", "167.668, 158.961, 11.8436, 0.6568", "167.241, 157.919, 11.9752, 0.765", "166.872, 156.864, 12.1469, 0.871", "166.581, 155.769, 12.3423, 0.84", "166.331, 154.655, 12.5436, 0.743", "165.869, 153.648, 12.7381, 0.756", "165.124, 152.785, 12.9158, 0.7578", "164.449, 151.866, 13.0672, 0.8694", "163.838, 150.906, 13.1883, 1.0092", "163.433, 149.837, 13.2786, 1.136", "163.026, 148.768, 13.3409, 1.098", "162.339, 147.883, 13.3659, 0.9806", "161.717, 146.962, 13.3605, 0.9922", "161.305, 145.917, 13.3524, 0.8148", "160.763, 144.951, 13.3514, 0.766", "160.006, 144.111, 13.351, 0.6876", "159.462, 143.14, 13.3499, 0.7126", "158.99, 142.197, 13.373, 0.8472", "158.075, 141.542, 13.4119, 0.898", "157.066, 141.093, 13.4532, 0.812", "156.351, 140.199, 13.4903, 0.6122", "156.141, 139.106, 13.5192, 0.6676", "155.803, 138.027, 13.5353, 0.5318", "155.407, 136.954, 13.5335, 0.524", "154.963, 135.911, 13.5153, 0.468", "154.349, 134.976, 13.4752, 0.5654", "153.683, 134.142, 13.4333, 0.6854", "152.849, 133.403, 13.4055, 0.7452", "151.871, 132.88, 13.3818, 0.7296", "150.786, 132.683, 13.3584, 0.6284", "149.713, 132.32, 13.3544, 0.563", "148.662, 131.894, 13.3815, 0.5342", "147.652, 131.361, 13.4337, 0.4908", "146.704, 130.744, 13.5071, 0.5902", "145.981, 129.862, 13.6025, 0.5872", "145.242, 129.002, 13.7159, 0.5758", "144.464, 128.197, 13.843, 0.5824", "143.811, 127.299, 13.9671, 0.4604", "143.266, 126.322, 14.0694, 0.4286", "142.47, 125.524, 14.1509, 0.3418", "141.6, 124.782, 14.2183, 0.3146", "140.63, 124.229, 14.2883, 0.3026", "139.632, 123.73, 14.3727, 0.3214", "138.8, 122.951, 14.4645, 0.387", "137.979, 122.156, 14.5542, 0.3588", "137.201, 121.351, 14.6403, 0.3484", "136.52, 120.509, 14.7068, 0.3536", "135.851, 119.697, 14.7259, 0.4722", "134.846, 119.166, 14.7029, 0.3932", "133.742, 118.962, 14.6486, 0.3254", "132.645, 118.81, 14.5704, 0.2744", "131.548, 118.658, 14.4842, 0.2744", "130.449, 118.506, 14.4145, 0.2742", "129.903, 117.915, 14.414, 0.274", "129.897, 116.898, 14.5168, 0.2736", "129.3, 115.976, 14.7097, 0.2728", "128.531, 115.147, 14.9981, 0.2712", "127.675, 114.406, 15.3453, 0.2684", "126.742, 113.777, 15.7031, 0.2626", "125.993, 112.969, 16.0541, 0.2542", "125.27, 112.132, 16.3912, 0.2288", "124.799, 111.271, 17.4258, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "172.65, 169.837, 12.1647, 0.6412", "173.519, 168.833, 11.3663, 0.2288", "173.567, 167.737, 10.937, 0.6016", "173.563, 166.632, 10.7579, 0.6796", "173.472, 165.755, 10.5076, 0.6298", "173.285, 164.638, 10.2156, 0.5658", "174.045, 163.876, 9.9168, 0.5388", "174.519, 162.93, 9.6397, 0.5006", "174.782, 161.816, 9.4074, 0.6024", "174.95, 160.692, 9.2287, 0.6396", "174.975, 159.55, 9.1019, 0.5286", "175.044, 158.413, 9.0068, 0.5098", "175.218, 157.284, 8.9194, 0.483", "175.39, 156.155, 8.824, 0.6218", "175.609, 155.054, 8.7053, 0.6514", "175.828, 153.954, 8.5593, 0.6682", "176.042, 152.833, 8.401, 0.8838", "176.255, 151.709, 8.2461, 1.0746", "176.637, 150.648, 8.107, 1.0698", "177.207, 149.656, 7.9903, 0.9704", "177.599, 148.605, 7.8971, 0.7678", "177.688, 147.488, 7.8147, 0.7102", "177.423, 146.493, 7.7414, 0.6604", "176.662, 145.668, 7.6772, 0.5214", "176.038, 144.742, 7.614, 0.489", "175.618, 143.733, 7.5586, 0.4806", "175.055, 143.053, 7.4725, 0.4434", "174.772, 142.074, 7.3468, 0.4774", "174.438, 140.99, 7.204, 0.4998", "174.165, 139.901, 7.0658, 0.5086", "173.682, 138.863, 6.9441, 0.4558", "173.2, 137.826, 6.8477, 0.4644", "173.139, 136.699, 6.7822, 0.6504", "173.116, 135.564, 6.7394, 0.627", "173.388, 134.482, 6.7176, 0.5396", "173.8, 133.427, 6.7194, 0.5932", "174.531, 132.589, 6.7393, 0.5592", "175.398, 131.841, 6.8513, 0.6864" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_126",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_127",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_22", "dend_17", "dend_12", "dend_3", "dend_0", "apic_0", "dend_34", "dend_33", "dend_29", "dend_26", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_13", "dend_7", "dend_4", "dend_2", "dend_1", "apic_20", "apic_1", "dend_31", "dend_30", "dend_28", "dend_27", "dend_20", "dend_19", "dend_15", "dend_14", "dend_11", "dend_8", "dend_6", "dend_5", "apic_24", "apic_21", "apic_17", "apic_2", "dend_10", "dend_9", "apic_26", "apic_25", "apic_23", "apic_22", "apic_19", "apic_18", "apic_14", "apic_3", "apic_16", "apic_15", "apic_9", "apic_4", "apic_11", "apic_10", "apic_8", "apic_5", "apic_13", "apic_12", "apic_7", "apic_6" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_20", "apic_1", "apic_24", "apic_21", "apic_17", "apic_2", "apic_26", "apic_25", "apic_23", "apic_22", "apic_19", "apic_18", "apic_14", "apic_3", "apic_16", "apic_15", "apic_9", "apic_4", "apic_11", "apic_10", "apic_8", "apic_5", "apic_13", "apic_12", "apic_7", "apic_6" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_22", "dend_17", "dend_12", "dend_3", "dend_0", "dend_34", "dend_33", "dend_29", "dend_26", "dend_24", "dend_23", "dend_21", "dend_18", "dend_16", "dend_13", "dend_7", "dend_4", "dend_2", "dend_1", "dend_31", "dend_30", "dend_28", "dend_27", "dend_20", "dend_19", "dend_15", "dend_14", "dend_11", "dend_8", "dend_6", "dend_5", "dend_10", "dend_9" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4713",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.2652001"
  }, {
    "group" : "apic",
    "value" : "2.2652001"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "21.698812"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.9216471E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.500827E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "2.4274654",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.002411464",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.04741228",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.019017689",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.002418456",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.32143903",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "7.5222744E-4",
    "erev" : "-87.97099"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "5.691669E-4",
    "erev" : "-87.97099"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.8055185E-5",
    "erev" : "-87.97099"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.4198862E-7",
    "erev" : "-87.97099"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "4.1902193E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0037941348",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_486511108",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_486511108

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_20, id: apic_20, parent: apic_0
create apic_20
public apic_20
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_24, id: apic_24, parent: apic_20
create apic_24
public apic_24
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_17, id: apic_17, parent: apic_1
create apic_17
public apic_17
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: apic_26, id: apic_26, parent: apic_24
create apic_26
public apic_26
// Section: apic_25, id: apic_25, parent: apic_24
create apic_25
public apic_25
// Section: apic_23, id: apic_23, parent: apic_21
create apic_23
public apic_23
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_14, id: apic_14, parent: apic_2
create apic_14
public apic_14
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_9, id: apic_9, parent: apic_3
create apic_9
public apic_9
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_126, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_126
// Group: {name=ModelViewParmSubset_127, groups=[], sections=[dend_32, dend_25, dend_22, dend_17, dend_12, dend_3, dend_0, apic_0, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_21, dend_18, dend_16, dend_13, dend_7, dend_4, dend_2, dend_1, apic_20, apic_1, dend_31, dend_30, dend_28, dend_27, dend_20, dend_19, dend_15, dend_14, dend_11, dend_8, dend_6, dend_5, apic_24, apic_21, apic_17, apic_2, dend_10, dend_9, apic_26, apic_25, apic_23, apic_22, apic_19, apic_18, apic_14, apic_3, apic_16, apic_15, apic_9, apic_4, apic_11, apic_10, apic_8, apic_5, apic_13, apic_12, apic_7, apic_6]}
objref ModelViewParmSubset_127
// Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_24, apic_21, apic_17, apic_2, apic_26, apic_25, apic_23, apic_22, apic_19, apic_18, apic_14, apic_3, apic_16, apic_15, apic_9, apic_4, apic_11, apic_10, apic_8, apic_5, apic_13, apic_12, apic_7, apic_6]}
objref apic
// Group: {name=dend, groups=[], sections=[dend_32, dend_25, dend_22, dend_17, dend_12, dend_3, dend_0, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_21, dend_18, dend_16, dend_13, dend_7, dend_4, dend_2, dend_1, dend_31, dend_30, dend_28, dend_27, dend_20, dend_19, dend_15, dend_14, dend_11, dend_8, dend_6, dend_5, dend_10, dend_9]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_4713, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_4713
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_2, apic_2, apic_2, apic_2, apic_2, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_14, apic_14, apic_14, apic_14, apic_14, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_486511108
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000520345509436)
    connect dend_32(0), soma_0(0.5000520345509436)
    connect dend_25(0), soma_0(0.5000520345509436)
    connect dend_22(0), soma_0(0.5000520345509436)
    connect dend_17(0), soma_0(0.5000520345509436)
    connect dend_12(0), soma_0(0.5000520345509436)
    connect dend_3(0), soma_0(0.5000520345509436)
    connect dend_0(0), soma_0(0.5000520345509436)
    connect apic_0(0), soma_0(0.5000520345509436)
    connect axon_1(0), axon_0(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_20(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_24(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_17(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect apic_26(0), apic_24(1.0)
    connect apic_25(0), apic_24(1.0)
    connect apic_23(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_14(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_9(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 420.649, 430.602, 26.32, 9.6094 ) }
    soma_0 { pt3dadd( 425.454, 430.602, 26.32, 9.6094 ) }
    soma_0 { pt3dadd( 430.258, 430.602, 26.32, 9.6094 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 425.453, 430.602, 26.32, 1.0 ) }
    axon_0 { pt3dadd( 431.295, 444.418, 26.32, 1.0 ) }
    axon_0 { pt3dadd( 437.136, 458.234, 26.32, 1.0 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 6/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 428.784, 428.493, 29.3941, 0.9152 ) }
    dend_32 { pt3dadd( 429.661, 427.85, 29.8981, 0.5884 ) }
    dend_32 { pt3dadd( 430.446, 427.024, 30.1165, 0.4878 ) }
    dend_32 { pt3dadd( 431.207, 426.22, 30.3456, 0.3994 ) }
    dend_32 { pt3dadd( 432.02, 425.639, 30.5379, 0.4468 ) }
    dend_32 { pt3dadd( 433.101, 425.764, 30.6704, 0.4246 ) }
    dend_32 { pt3dadd( 433.834, 425.379, 30.7745, 0.4594 ) }
    dend_32 { pt3dadd( 434.665, 424.599, 30.8504, 0.6118 ) }
    dend_32 { pt3dadd( 435.42, 423.79, 30.9042, 0.6984 ) }
    dend_32 { pt3dadd( 436.322, 423.497, 30.9604, 0.6652 ) }
    dend_32 { pt3dadd( 437.37, 423.259, 31.0268, 0.6286 ) }
    dend_32 { pt3dadd( 438.071, 422.432, 31.0976, 0.6688 ) }
    dend_32 { pt3dadd( 439.03, 421.81, 31.1438, 0.6762 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 19/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 422.363, 433.219, 29.9247, 0.6864 ) }
    dend_25 { pt3dadd( 422.475, 433.781, 31.2528, 0.724 ) }
    dend_25 { pt3dadd( 422.756, 434.495, 31.8408, 0.6476 ) }
    dend_25 { pt3dadd( 423.614, 434.872, 32.5038, 0.4548 ) }
    dend_25 { pt3dadd( 424.478, 435.589, 33.1537, 0.345 ) }
    dend_25 { pt3dadd( 424.346, 436.425, 33.7274, 0.312 ) }
    dend_25 { pt3dadd( 423.764, 437.359, 34.1746, 0.3396 ) }
    dend_25 { pt3dadd( 424.543, 437.955, 34.491, 0.4154 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 27/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 423.285, 434.141, 27.3493, 0.6864 ) }
    dend_22 { pt3dadd( 423.749, 435.06, 27.5686, 0.9998 ) }
    dend_22 { pt3dadd( 424.306, 435.742, 27.6618, 1.1084 ) }
    dend_22 { pt3dadd( 424.986, 436.485, 27.7475, 0.8686 ) }
    dend_22 { pt3dadd( 425.222, 437.463, 27.8489, 0.7348 ) }
    dend_22 { pt3dadd( 425.222, 438.509, 27.9644, 0.5798 ) }
    dend_22 { pt3dadd( 425.313, 439.643, 28.0762, 0.5268 ) }
    dend_22 { pt3dadd( 425.506, 440.766, 28.1733, 0.4352 ) }
    dend_22 { pt3dadd( 425.702, 441.869, 28.2537, 0.461 ) }
    dend_22 { pt3dadd( 426.003, 442.881, 28.2932, 0.4742 ) }
    dend_22 { pt3dadd( 426.526, 443.742, 28.2766, 0.4378 ) }
    dend_22 { pt3dadd( 426.594, 444.856, 28.2299, 0.437 ) }
    dend_22 { pt3dadd( 426.544, 445.609, 28.224, 0.5694 ) }
    dend_22 { pt3dadd( 426.404, 446.588, 28.2733, 0.624 ) }
    dend_22 { pt3dadd( 426.63, 447.696, 28.3581, 0.5062 ) }
    dend_22 { pt3dadd( 426.823, 448.807, 28.4561, 0.4364 ) }
    dend_22 { pt3dadd( 426.797, 449.947, 28.5421, 0.5014 ) }
    dend_22 { pt3dadd( 426.599, 451.063, 28.5877, 0.5932 ) }
    dend_22 { pt3dadd( 426.823, 452.13, 28.5723, 0.6742 ) }
    dend_22 { pt3dadd( 426.679, 453.222, 28.5219, 0.7994 ) }
    dend_22 { pt3dadd( 426.659, 454.332, 28.4446, 0.9246 ) }
    dend_22 { pt3dadd( 426.943, 455.424, 28.3559, 0.9896 ) }
    dend_22 { pt3dadd( 427.511, 456.363, 28.2772, 0.7764 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 50/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 422.225, 433.185, 29.7044, 0.6864 ) }
    dend_17 { pt3dadd( 421.35, 433.68, 31.1646, 0.6534 ) }
    dend_17 { pt3dadd( 421.331, 434.28, 31.7965, 0.6354 ) }
    dend_17 { pt3dadd( 421.707, 433.92, 32.5735, 0.5422 ) }
    dend_17 { pt3dadd( 421.724, 433.258, 33.4292, 0.4304 ) }
    dend_17 { pt3dadd( 420.847, 432.655, 34.2563, 0.3862 ) }
    dend_17 { pt3dadd( 419.942, 432.48, 34.9588, 0.4272 ) }
    dend_17 { pt3dadd( 418.853, 432.279, 35.5099, 0.5928 ) }
    dend_17 { pt3dadd( 417.9, 432.138, 35.9458, 0.6932 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 59/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 428.058, 426.648, 26.9727, 0.2288 ) }
    dend_12 { pt3dadd( 428.685, 425.696, 27.0157, 0.3526 ) }
    dend_12 { pt3dadd( 429.249, 424.709, 27.0382, 0.4156 ) }
    dend_12 { pt3dadd( 430.13, 424.076, 27.0421, 0.553 ) }
    dend_12 { pt3dadd( 431.118, 423.583, 27.0217, 0.7092 ) }
    dend_12 { pt3dadd( 431.947, 423.097, 27.0074, 0.7902 ) }
    dend_12 { pt3dadd( 432.485, 422.152, 26.9841, 0.8088 ) }
    dend_12 { pt3dadd( 433.305, 421.356, 26.9544, 0.7966 ) }
    dend_12 { pt3dadd( 434.198, 420.641, 26.924, 0.7708 ) }
    dend_12 { pt3dadd( 434.885, 419.726, 26.896, 0.7386 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 69/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 425.711, 435.228, 24.8483, 0.6864 ) }
    dend_3 { pt3dadd( 425.917, 436.33, 24.9716, 0.974 ) }
    dend_3 { pt3dadd( 426.55, 437.154, 25.0276, 0.8648 ) }
    dend_3 { pt3dadd( 427.338, 437.983, 25.0944, 0.6796 ) }
    dend_3 { pt3dadd( 427.847, 438.687, 25.1868, 0.7116 ) }
    dend_3 { pt3dadd( 428.446, 439.457, 25.2588, 0.7788 ) }
    dend_3 { pt3dadd( 428.778, 440.48, 25.2733, 0.8644 ) }
    dend_3 { pt3dadd( 428.883, 441.61, 25.2302, 0.755 ) }
    dend_3 { pt3dadd( 429.253, 442.595, 25.1235, 0.71 ) }
    dend_3 { pt3dadd( 429.671, 443.595, 24.9725, 0.775 ) }
    dend_3 { pt3dadd( 430.593, 443.875, 24.8112, 0.8622 ) }
    dend_3 { pt3dadd( 431.006, 444.665, 24.6285, 0.9562 ) }
    dend_3 { pt3dadd( 431.63, 445.532, 24.4472, 1.001 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 82/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 428.771, 428.51, 23.2498, 0.2288 ) }
    dend_0 { pt3dadd( 429.749, 428.159, 22.6572, 0.3866 ) }
    dend_0 { pt3dadd( 430.318, 427.689, 22.3913, 0.358 ) }
    dend_0 { pt3dadd( 431.248, 428.294, 22.0967, 0.346 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 86/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 421.226, 429.119, 26.3299, 4.1698 ) }
    apic_0 { pt3dadd( 419.313, 428.0, 26.3057, 2.2084 ) }
    apic_0 { pt3dadd( 417.131, 427.438, 26.1422, 1.3884 ) }
    apic_0 { pt3dadd( 414.942, 426.977, 25.8628, 1.5254 ) }
    apic_0 { pt3dadd( 412.707, 426.489, 25.542, 1.5134 ) }
    apic_0 { pt3dadd( 410.486, 426.17, 25.211, 1.4102 ) }
    apic_0 { pt3dadd( 409.442, 425.765, 24.9382, 1.3816 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 93/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 437.136, 458.234, 26.32, 1.0 ) }
    axon_1 { pt3dadd( 442.977, 472.05, 26.32, 1.0 ) }
    axon_1 { pt3dadd( 448.819, 485.866, 26.32, 1.0 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 96/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 439.03, 421.81, 31.1438, 0.6762 ) }
    dend_34 { pt3dadd( 440.251, 421.815, 32.2711, 0.2288 ) }
    dend_34 { pt3dadd( 441.011, 422.274, 32.4184, 0.5154 ) }
    dend_34 { pt3dadd( 442.108, 421.969, 32.4778, 0.4986 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_34 { pt3dadd( 443.194, 421.61, 32.5567, 0.3968 ) }
    dend_34 { pt3dadd( 444.237, 421.144, 32.6586, 0.3224 ) }
    dend_34 { pt3dadd( 445.328, 421.048, 32.7944, 0.3158 ) }
    dend_34 { pt3dadd( 445.834, 420.464, 32.9854, 0.3518 ) }
    dend_34 { pt3dadd( 446.522, 420.115, 33.185, 0.4146 ) }
    dend_34 { pt3dadd( 447.066, 419.426, 33.4244, 0.5506 ) }
    dend_34 { pt3dadd( 448.009, 419.011, 33.6798, 0.7062 ) }
    dend_34 { pt3dadd( 448.774, 418.339, 33.9536, 0.7772 ) }
    dend_34 { pt3dadd( 449.315, 417.712, 34.272, 0.8206 ) }
    dend_34 { pt3dadd( 450.103, 417.002, 34.6128, 0.6432 ) }
    dend_34 { pt3dadd( 450.844, 416.264, 34.9908, 0.6506 ) }
    dend_34 { pt3dadd( 451.03, 415.223, 35.4088, 0.6332 ) }
    dend_34 { pt3dadd( 451.29, 414.328, 35.8809, 0.524 ) }
    dend_34 { pt3dadd( 451.439, 413.504, 36.398, 0.4654 ) }
    dend_34 { pt3dadd( 451.686, 412.744, 36.8903, 0.5748 ) }
    dend_34 { pt3dadd( 452.191, 411.786, 37.3467, 0.634 ) }
    dend_34 { pt3dadd( 453.051, 411.047, 37.7588, 0.5246 ) }
    dend_34 { pt3dadd( 454.068, 410.928, 38.148, 0.4722 ) }
    dend_34 { pt3dadd( 454.875, 410.28, 38.5305, 0.5588 ) }
    dend_34 { pt3dadd( 455.626, 409.417, 38.9116, 0.7434 ) }
    dend_34 { pt3dadd( 456.552, 408.749, 39.3067, 0.7392 ) }
    dend_34 { pt3dadd( 457.649, 408.453, 39.7188, 0.5836 ) }
    dend_34 { pt3dadd( 458.525, 407.793, 40.161, 0.5542 ) }
    dend_34 { pt3dadd( 459.078, 406.954, 40.6526, 0.6152 ) }
    dend_34 { pt3dadd( 459.4, 405.912, 41.1933, 0.6248 ) }
    dend_34 { pt3dadd( 459.977, 405.065, 41.7824, 0.4598 ) }
    dend_34 { pt3dadd( 460.601, 404.113, 42.4068, 0.3542 ) }
    dend_34 { pt3dadd( 461.268, 403.207, 43.0601, 0.33 ) }
    dend_34 { pt3dadd( 461.994, 402.364, 43.7402, 0.3668 ) }
    dend_34 { pt3dadd( 462.867, 401.702, 44.4478, 0.4976 ) }
    dend_34 { pt3dadd( 463.813, 401.129, 45.187, 0.435 ) }
    dend_34 { pt3dadd( 464.796, 400.689, 45.9626, 0.4284 ) }
    dend_34 { pt3dadd( 465.745, 400.359, 46.7768, 0.3416 ) }
    dend_34 { pt3dadd( 466.649, 400.14, 47.6266, 0.3142 ) }
    dend_34 { pt3dadd( 467.567, 399.866, 48.4935, 0.3008 ) }
    dend_34 { pt3dadd( 468.495, 399.575, 49.3531, 0.3238 ) }
    dend_34 { pt3dadd( 469.577, 399.239, 50.1511, 0.3626 ) }
    dend_34 { pt3dadd( 470.684, 399.273, 50.846, 0.4528 ) }
    dend_34 { pt3dadd( 471.808, 399.341, 51.4472, 0.5322 ) }
    dend_34 { pt3dadd( 472.892, 399.214, 51.9806, 0.4198 ) }
    dend_34 { pt3dadd( 473.903, 398.754, 52.4798, 0.3276 ) }
    dend_34 { pt3dadd( 474.887, 398.215, 52.9752, 0.2788 ) }
    dend_34 { pt3dadd( 475.786, 397.562, 53.4951, 0.2822 ) }
    dend_34 { pt3dadd( 476.588, 396.793, 54.0523, 0.2888 ) }
    dend_34 { pt3dadd( 477.292, 395.922, 54.6431, 0.3006 ) }
    dend_34 { pt3dadd( 477.773, 394.917, 55.2614, 0.325 ) }
    dend_34 { pt3dadd( 478.081, 393.852, 55.8986, 0.3576 ) }
    dend_34 { pt3dadd( 478.443, 392.858, 56.5474, 0.4796 ) }
    dend_34 { pt3dadd( 479.367, 392.513, 57.2015, 0.4068 ) }
    dend_34 { pt3dadd( 479.857, 392.384, 57.8908, 0.3504 ) }
    dend_34 { pt3dadd( 480.867, 392.789, 58.5858, 0.3228 ) }
    dend_34 { pt3dadd( 481.834, 392.373, 59.2449, 0.3536 ) }
    dend_34 { pt3dadd( 482.656, 391.596, 59.8472, 0.4722 ) }
    dend_34 { pt3dadd( 483.43, 390.758, 60.3753, 0.3932 ) }
    dend_34 { pt3dadd( 484.388, 390.223, 60.83, 0.3254 ) }
    dend_34 { pt3dadd( 485.456, 389.833, 61.2105, 0.2746 ) }
    dend_34 { pt3dadd( 486.518, 389.428, 61.5376, 0.2746 ) }
    dend_34 { pt3dadd( 487.56, 388.999, 61.8383, 0.2746 ) }
    dend_34 { pt3dadd( 488.584, 388.528, 62.1267, 0.2746 ) }
    dend_34 { pt3dadd( 489.602, 388.029, 62.4078, 0.2746 ) }
    dend_34 { pt3dadd( 490.617, 387.512, 62.6791, 0.2746 ) }
    dend_34 { pt3dadd( 491.697, 387.166, 62.9401, 0.2746 ) }
    dend_34 { pt3dadd( 492.745, 386.729, 63.1834, 0.2746 ) }
    dend_34 { pt3dadd( 493.742, 386.176, 63.3996, 0.2746 ) }
    dend_34 { pt3dadd( 494.671, 385.507, 63.5874, 0.2746 ) }
    dend_34 { pt3dadd( 495.576, 384.85, 63.7619, 0.2746 ) }
    dend_34 { pt3dadd( 496.381, 384.065, 63.9223, 0.2746 ) }
    dend_34 { pt3dadd( 497.148, 383.23, 64.073, 0.2746 ) }
    dend_34 { pt3dadd( 497.948, 382.414, 64.2314, 0.2746 ) }
    dend_34 { pt3dadd( 498.776, 381.633, 64.4196, 0.2744 ) }
    dend_34 { pt3dadd( 499.73, 381.023, 64.6492, 0.2744 ) }
    dend_34 { pt3dadd( 500.724, 380.461, 64.9314, 0.2742 ) }
    dend_34 { pt3dadd( 501.694, 379.859, 65.2845, 0.274 ) }
    dend_34 { pt3dadd( 502.637, 379.213, 65.7168, 0.2736 ) }
    dend_34 { pt3dadd( 503.608, 378.662, 66.2379, 0.2728 ) }
    dend_34 { pt3dadd( 504.689, 378.534, 66.8917, 0.2712 ) }
    dend_34 { pt3dadd( 505.698, 378.59, 67.6589, 0.2684 ) }
    dend_34 { pt3dadd( 506.558, 378.674, 68.5157, 0.2626 ) }
    dend_34 { pt3dadd( 507.515, 378.757, 69.4148, 0.2542 ) }
    dend_34 { pt3dadd( 508.556, 378.918, 70.2988, 0.2288 ) }
    dend_34 { pt3dadd( 509.534, 379.015, 72.5449, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 81/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 439.03, 421.81, 31.1438, 0.6762 ) }
    dend_33 { pt3dadd( 439.435, 421.522, 31.1528, 0.558 ) }
    dend_33 { pt3dadd( 440.304, 420.8, 31.113, 0.5228 ) }
    dend_33 { pt3dadd( 441.067, 420.062, 31.0036, 0.7076 ) }
    dend_33 { pt3dadd( 441.925, 419.42, 30.8258, 0.7522 ) }
    dend_33 { pt3dadd( 442.87, 418.79, 30.6088, 0.6796 ) }
    dend_33 { pt3dadd( 443.594, 418.108, 30.3932, 0.6132 ) }
    dend_33 { pt3dadd( 444.557, 417.84, 30.1792, 0.6166 ) }
    dend_33 { pt3dadd( 445.627, 417.469, 29.9978, 0.6944 ) }
    dend_33 { pt3dadd( 446.605, 416.88, 29.8572, 0.7212 ) }
    dend_33 { pt3dadd( 447.621, 416.394, 29.7472, 0.6536 ) }
    dend_33 { pt3dadd( 448.635, 415.905, 29.6685, 0.6406 ) }
    dend_33 { pt3dadd( 449.698, 415.574, 29.615, 0.5292 ) }
    dend_33 { pt3dadd( 450.813, 415.315, 29.5789, 0.5166 ) }
    dend_33 { pt3dadd( 451.858, 414.904, 29.5462, 0.696 ) }
    dend_33 { pt3dadd( 452.794, 414.247, 29.5081, 0.7308 ) }
    dend_33 { pt3dadd( 453.763, 413.643, 29.4574, 0.639 ) }
    dend_33 { pt3dadd( 454.73, 413.111, 29.3975, 0.5422 ) }
    dend_33 { pt3dadd( 455.79, 412.794, 29.3303, 0.4634 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_33 { pt3dadd( 456.484, 412.461, 29.2093, 0.5142 ) }
    dend_33 { pt3dadd( 457.557, 412.461, 29.0332, 0.5696 ) }
    dend_33 { pt3dadd( 458.606, 412.461, 28.8369, 0.6312 ) }
    dend_33 { pt3dadd( 459.59, 412.461, 28.6574, 0.7164 ) }
    dend_33 { pt3dadd( 460.681, 412.216, 28.4917, 0.7852 ) }
    dend_33 { pt3dadd( 461.671, 411.795, 28.3349, 0.6594 ) }
    dend_33 { pt3dadd( 462.278, 410.866, 28.2036, 0.5132 ) }
    dend_33 { pt3dadd( 462.591, 409.766, 28.1064, 0.5062 ) }
    dend_33 { pt3dadd( 463.016, 408.765, 28.056, 0.5834 ) }
    dend_33 { pt3dadd( 463.473, 407.762, 28.044, 0.5176 ) }
    dend_33 { pt3dadd( 463.952, 406.748, 28.0596, 0.4942 ) }
    dend_33 { pt3dadd( 464.693, 405.908, 28.1159, 0.6584 ) }
    dend_33 { pt3dadd( 465.501, 405.124, 28.2122, 0.6418 ) }
    dend_33 { pt3dadd( 466.39, 404.434, 28.3307, 0.5692 ) }
    dend_33 { pt3dadd( 467.449, 404.221, 28.4754, 0.6362 ) }
    dend_33 { pt3dadd( 468.559, 404.187, 28.6639, 0.6966 ) }
    dend_33 { pt3dadd( 469.455, 403.616, 28.8954, 0.6618 ) }
    dend_33 { pt3dadd( 470.254, 402.961, 29.1718, 0.6224 ) }
    dend_33 { pt3dadd( 471.324, 402.599, 29.4748, 0.6574 ) }
    dend_33 { pt3dadd( 472.352, 402.124, 29.7884, 0.6552 ) }
    dend_33 { pt3dadd( 473.293, 401.502, 30.0891, 0.5182 ) }
    dend_33 { pt3dadd( 474.177, 400.78, 30.3568, 0.4532 ) }
    dend_33 { pt3dadd( 475.045, 400.064, 30.5858, 0.5584 ) }
    dend_33 { pt3dadd( 475.906, 399.351, 30.7745, 0.573 ) }
    dend_33 { pt3dadd( 476.956, 398.951, 30.9019, 0.5612 ) }
    dend_33 { pt3dadd( 478.01, 398.564, 30.9602, 0.499 ) }
    dend_33 { pt3dadd( 479.113, 398.339, 30.9728, 0.5784 ) }
    dend_33 { pt3dadd( 480.215, 398.114, 30.9557, 0.697 ) }
    dend_33 { pt3dadd( 481.291, 397.964, 30.8913, 0.8272 ) }
    dend_33 { pt3dadd( 482.368, 397.815, 30.777, 0.5872 ) }
    dend_33 { pt3dadd( 483.491, 397.665, 30.6494, 0.4214 ) }
    dend_33 { pt3dadd( 484.615, 397.515, 30.5276, 0.36 ) }
    dend_33 { pt3dadd( 485.739, 397.444, 30.403, 0.4246 ) }
    dend_33 { pt3dadd( 486.862, 397.378, 30.273, 0.593 ) }
    dend_33 { pt3dadd( 487.987, 397.259, 30.1529, 0.67 ) }
    dend_33 { pt3dadd( 489.111, 397.109, 30.0499, 0.5812 ) }
    dend_33 { pt3dadd( 490.239, 397.153, 29.9533, 0.6264 ) }
    dend_33 { pt3dadd( 491.37, 397.327, 29.8525, 0.6058 ) }
    dend_33 { pt3dadd( 492.505, 397.353, 29.7352, 0.6176 ) }
    dend_33 { pt3dadd( 493.641, 397.353, 29.5893, 0.6246 ) }
    dend_33 { pt3dadd( 494.78, 397.353, 29.4073, 0.7106 ) }
    dend_33 { pt3dadd( 495.923, 397.353, 29.1894, 0.7446 ) }
    dend_33 { pt3dadd( 497.065, 397.353, 28.9414, 0.7286 ) }
    dend_33 { pt3dadd( 498.164, 397.134, 28.6619, 0.6262 ) }
    dend_33 { pt3dadd( 499.258, 396.886, 28.355, 0.5606 ) }
    dend_33 { pt3dadd( 500.373, 396.692, 28.0283, 0.5224 ) }
    dend_33 { pt3dadd( 501.494, 396.509, 27.689, 0.5036 ) }
    dend_33 { pt3dadd( 502.583, 396.19, 27.3449, 0.4454 ) }
    dend_33 { pt3dadd( 503.654, 395.786, 27.0018, 0.4512 ) }
    dend_33 { pt3dadd( 504.74, 395.449, 26.6578, 0.5966 ) }
    dend_33 { pt3dadd( 505.845, 395.186, 26.304, 0.6688 ) }
    dend_33 { pt3dadd( 506.952, 394.922, 25.9328, 0.6172 ) }
    dend_33 { pt3dadd( 508.059, 394.661, 25.5399, 0.5066 ) }
    dend_33 { pt3dadd( 509.104, 394.626, 25.1096, 0.6026 ) }
    dend_33 { pt3dadd( 510.133, 394.651, 24.6373, 0.4636 ) }
    dend_33 { pt3dadd( 511.171, 394.976, 24.1461, 0.3716 ) }
    dend_33 { pt3dadd( 512.215, 395.419, 23.665, 0.3126 ) }
    dend_33 { pt3dadd( 513.302, 395.691, 23.2153, 0.3474 ) }
    dend_33 { pt3dadd( 514.401, 395.911, 22.8141, 0.399 ) }
    dend_33 { pt3dadd( 515.521, 395.853, 22.4821, 0.557 ) }
    dend_33 { pt3dadd( 516.65, 395.664, 22.2288, 0.5478 ) }
    dend_33 { pt3dadd( 517.768, 395.61, 22.0495, 0.6238 ) }
    dend_33 { pt3dadd( 518.859, 395.958, 21.9341, 0.7704 ) }
    dend_33 { pt3dadd( 519.937, 396.326, 21.8702, 0.7856 ) }
    dend_33 { pt3dadd( 520.823, 397.047, 21.8455, 0.6878 ) }
    dend_33 { pt3dadd( 521.719, 397.753, 21.8425, 0.6592 ) }
    dend_33 { pt3dadd( 522.625, 398.446, 21.8453, 0.5524 ) }
    dend_33 { pt3dadd( 523.641, 398.93, 21.8475, 0.6142 ) }
    dend_33 { pt3dadd( 524.734, 399.271, 21.8467, 0.613 ) }
    dend_33 { pt3dadd( 525.84, 399.543, 21.8426, 0.4846 ) }
    dend_33 { pt3dadd( 526.901, 399.802, 21.8434, 0.4028 ) }
    dend_33 { pt3dadd( 527.844, 400.359, 21.855, 0.408 ) }
    dend_33 { pt3dadd( 528.903, 400.508, 21.853, 0.57 ) }
    dend_33 { pt3dadd( 529.956, 400.232, 21.8245, 0.5896 ) }
    dend_33 { pt3dadd( 531.091, 400.168, 21.7722, 0.6164 ) }
    dend_33 { pt3dadd( 532.228, 400.105, 21.7026, 0.4822 ) }
    dend_33 { pt3dadd( 533.335, 399.879, 21.6381, 0.44 ) }
    dend_33 { pt3dadd( 534.443, 399.643, 21.5966, 0.5034 ) }
    dend_33 { pt3dadd( 535.573, 399.454, 21.5826, 0.6198 ) }
    dend_33 { pt3dadd( 536.7, 399.266, 21.5926, 0.611 ) }
    dend_33 { pt3dadd( 537.838, 399.175, 21.618, 0.542 ) }
    dend_33 { pt3dadd( 538.981, 399.156, 21.6489, 0.6702 ) }
    dend_33 { pt3dadd( 540.125, 399.138, 21.6766, 0.5796 ) }
    dend_33 { pt3dadd( 541.216, 398.828, 21.6988, 0.633 ) }
    dend_33 { pt3dadd( 542.349, 398.864, 21.7188, 0.5712 ) }
    dend_33 { pt3dadd( 543.438, 399.197, 21.7406, 0.5514 ) }
    dend_33 { pt3dadd( 544.262, 399.879, 21.7557, 0.5126 ) }
    dend_33 { pt3dadd( 545.125, 400.562, 21.7876, 0.4498 ) }
    dend_33 { pt3dadd( 546.267, 400.608, 21.8424, 0.5184 ) }
    dend_33 { pt3dadd( 547.344, 400.987, 21.9223, 0.4328 ) }
    dend_33 { pt3dadd( 548.406, 401.411, 22.03, 0.3932 ) }
    dend_33 { pt3dadd( 549.372, 401.994, 22.1652, 0.428 ) }
    dend_33 { pt3dadd( 550.176, 402.699, 22.3126, 0.4244 ) }
    dend_33 { pt3dadd( 550.901, 403.114, 22.5108, 0.52 ) }
    dend_33 { pt3dadd( 551.885, 403.552, 22.7599, 0.4294 ) }
    dend_33 { pt3dadd( 552.964, 403.763, 23.0436, 0.418 ) }
    dend_33 { pt3dadd( 554.104, 403.754, 23.3302, 0.322 ) }
    dend_33 { pt3dadd( 555.15, 403.289, 23.5925, 0.2796 ) }
    dend_33 { pt3dadd( 556.178, 402.79, 23.8121, 0.2288 ) }
    dend_33 { pt3dadd( 557.172, 402.228, 24.1296, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 0/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 424.543, 437.955, 34.491, 0.4154 ) }
    dend_29 { pt3dadd( 425.403, 437.898, 35.2372, 0.4576 ) }
    dend_29 { pt3dadd( 426.465, 437.634, 35.4278, 0.6464 ) }
    dend_29 { pt3dadd( 427.437, 437.049, 35.5057, 0.5744 ) }
    dend_29 { pt3dadd( 428.539, 436.824, 35.6065, 0.6618 ) }
    dend_29 { pt3dadd( 429.671, 436.968, 35.7322, 0.6672 ) }
    dend_29 { pt3dadd( 430.8, 437.156, 35.8826, 0.7518 ) }
    dend_29 { pt3dadd( 431.914, 437.375, 36.0598, 0.7748 ) }
    dend_29 { pt3dadd( 432.982, 437.709, 36.272, 0.7804 ) }
    dend_29 { pt3dadd( 434.058, 437.98, 36.517, 0.7416 ) }
    dend_29 { pt3dadd( 435.202, 437.98, 36.7814, 0.6802 ) }
    dend_29 { pt3dadd( 436.276, 437.959, 37.0712, 0.516 ) }
    dend_29 { pt3dadd( 437.399, 437.811, 37.3677, 0.455 ) }
    dend_29 { pt3dadd( 438.53, 437.752, 37.6617, 0.5322 ) }
    dend_29 { pt3dadd( 439.661, 437.812, 37.9462, 0.6686 ) }
    dend_29 { pt3dadd( 440.778, 438.001, 38.2138, 0.7254 ) }
    dend_29 { pt3dadd( 441.668, 438.006, 38.4409, 0.6382 ) }
    dend_29 { pt3dadd( 442.678, 437.98, 38.6747, 0.724 ) }
    dend_29 { pt3dadd( 443.714, 437.98, 38.9404, 0.8266 ) }
    dend_29 { pt3dadd( 444.836, 437.864, 39.2224, 0.8336 ) }
    dend_29 { pt3dadd( 445.586, 437.808, 39.5354, 0.592 ) }
    dend_29 { pt3dadd( 446.546, 438.289, 39.8387, 0.4644 ) }
    dend_29 { pt3dadd( 447.599, 438.733, 40.0868, 0.5022 ) }
    dend_29 { pt3dadd( 448.676, 439.117, 40.2396, 0.6132 ) }
    dend_29 { pt3dadd( 449.785, 439.354, 40.2909, 0.6208 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 424.543, 437.955, 34.491, 0.4154 ) }
    dend_26 { pt3dadd( 425.376, 438.467, 34.6878, 0.4374 ) }
    dend_26 { pt3dadd( 425.559, 439.317, 34.8272, 0.368 ) }
    dend_26 { pt3dadd( 424.745, 440.037, 34.9238, 0.316 ) }
    dend_26 { pt3dadd( 425.161, 440.867, 35.0084, 0.3052 ) }
    dend_26 { pt3dadd( 424.56, 441.669, 35.1058, 0.3262 ) }
    dend_26 { pt3dadd( 424.437, 442.798, 35.2142, 0.3958 ) }
    dend_26 { pt3dadd( 424.087, 443.881, 35.3318, 0.3752 ) }
    dend_26 { pt3dadd( 423.866, 445.002, 35.4497, 0.377 ) }
    dend_26 { pt3dadd( 423.451, 446.066, 35.567, 0.415 ) }
    dend_26 { pt3dadd( 422.976, 447.104, 35.6768, 0.5468 ) }
    dend_26 { pt3dadd( 422.811, 448.206, 35.7711, 0.7212 ) }
    dend_26 { pt3dadd( 422.678, 449.321, 35.8599, 0.6974 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 38/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 427.511, 456.363, 28.2772, 0.7764 ) }
    dend_24 { pt3dadd( 427.203, 457.128, 28.492, 0.2288 ) }
    dend_24 { pt3dadd( 426.083, 457.249, 28.2024, 0.3322 ) }
    dend_24 { pt3dadd( 425.152, 457.862, 28.0876, 0.4068 ) }
    dend_24 { pt3dadd( 424.49, 458.78, 27.9465, 0.3964 ) }
    dend_24 { pt3dadd( 424.121, 459.828, 27.766, 0.4124 ) }
    dend_24 { pt3dadd( 423.864, 460.924, 27.5478, 0.499 ) }
    dend_24 { pt3dadd( 423.606, 462.011, 27.308, 0.6136 ) }
    dend_24 { pt3dadd( 423.534, 463.136, 27.035, 0.5908 ) }
    dend_24 { pt3dadd( 423.372, 464.252, 26.7224, 0.547 ) }
    dend_24 { pt3dadd( 423.365, 465.391, 26.3777, 0.4724 ) }
    dend_24 { pt3dadd( 423.496, 466.395, 25.9898, 0.5306 ) }
    dend_24 { pt3dadd( 423.584, 467.469, 25.5813, 0.6012 ) }
    dend_24 { pt3dadd( 423.414, 468.497, 25.1486, 0.6834 ) }
    dend_24 { pt3dadd( 423.805, 469.525, 24.7156, 0.8444 ) }
    dend_24 { pt3dadd( 424.465, 470.421, 24.298, 0.8724 ) }
    dend_24 { pt3dadd( 424.764, 471.29, 23.8845, 0.864 ) }
    dend_24 { pt3dadd( 424.747, 472.375, 23.4863, 0.913 ) }
    dend_24 { pt3dadd( 425.236, 473.617, 23.0698, 0.6894 ) }
    dend_24 { pt3dadd( 425.839, 474.432, 22.7588, 0.657 ) }
    dend_24 { pt3dadd( 426.273, 475.445, 22.5409, 0.573 ) }
    dend_24 { pt3dadd( 426.839, 476.107, 22.398, 0.5324 ) }
    dend_24 { pt3dadd( 427.569, 476.656, 22.3114, 0.5856 ) }
    dend_24 { pt3dadd( 428.56, 476.968, 22.2294, 0.7472 ) }
    dend_24 { pt3dadd( 429.325, 477.692, 22.1388, 0.74 ) }
    dend_24 { pt3dadd( 430.239, 478.325, 22.0206, 0.6154 ) }
    dend_24 { pt3dadd( 430.934, 478.978, 21.8685, 0.4676 ) }
    dend_24 { pt3dadd( 431.943, 479.399, 21.6857, 0.475 ) }
    dend_24 { pt3dadd( 432.693, 480.156, 21.5021, 0.495 ) }
    dend_24 { pt3dadd( 433.194, 480.622, 21.3264, 0.5014 ) }
    dend_24 { pt3dadd( 434.052, 481.309, 21.1585, 0.4338 ) }
    dend_24 { pt3dadd( 434.791, 482.125, 21.0142, 0.4648 ) }
    dend_24 { pt3dadd( 435.598, 482.791, 20.9002, 0.4514 ) }
    dend_24 { pt3dadd( 436.608, 482.547, 20.7856, 0.5402 ) }
    dend_24 { pt3dadd( 436.436, 483.126, 20.6436, 0.6124 ) }
    dend_24 { pt3dadd( 436.936, 484.101, 20.4958, 0.7362 ) }
    dend_24 { pt3dadd( 437.721, 484.93, 20.3403, 0.7856 ) }
    dend_24 { pt3dadd( 438.526, 485.713, 20.1633, 0.8362 ) }
    dend_24 { pt3dadd( 439.342, 486.507, 19.972, 0.672 ) }
    dend_24 { pt3dadd( 440.282, 487.12, 19.7669, 0.7058 ) }
    dend_24 { pt3dadd( 441.083, 487.901, 19.546, 0.7274 ) }
    dend_24 { pt3dadd( 441.98, 488.602, 19.3158, 0.7376 ) }
    dend_24 { pt3dadd( 442.781, 489.386, 19.0844, 0.6738 ) }
    dend_24 { pt3dadd( 443.463, 490.121, 18.8391, 0.498 ) }
    dend_24 { pt3dadd( 444.198, 490.906, 18.5695, 0.4522 ) }
    dend_24 { pt3dadd( 444.633, 491.914, 18.2926, 0.3802 ) }
    dend_24 { pt3dadd( 445.28, 492.712, 17.9848, 0.4114 ) }
    dend_24 { pt3dadd( 446.299, 493.147, 17.6572, 0.358 ) }
    dend_24 { pt3dadd( 447.051, 493.557, 17.2851, 0.3396 ) }
    dend_24 { pt3dadd( 448.133, 493.358, 16.8885, 0.3736 ) }
    dend_24 { pt3dadd( 449.125, 493.544, 16.4896, 0.334 ) }
    dend_24 { pt3dadd( 449.903, 494.24, 16.0866, 0.3004 ) }
    dend_24 { pt3dadd( 451.03, 494.273, 15.7044, 0.2752 ) }
    dend_24 { pt3dadd( 452.174, 494.273, 15.3558, 0.2756 ) }
    dend_24 { pt3dadd( 453.318, 494.273, 15.0476, 0.2766 ) }
    dend_24 { pt3dadd( 454.455, 494.321, 14.7695, 0.2782 ) }
    dend_24 { pt3dadd( 455.532, 494.484, 14.5106, 0.2816 ) }
    dend_24 { pt3dadd( 456.496, 494.225, 14.2332, 0.2872 ) }
    dend_24 { pt3dadd( 457.565, 494.039, 13.9371, 0.2992 ) }
    dend_24 { pt3dadd( 458.684, 493.976, 13.6047, 0.315 ) }
    dend_24 { pt3dadd( 459.63, 494.193, 13.2354, 0.3752 ) }
    dend_24 { pt3dadd( 460.54, 494.853, 12.8263, 0.337 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_24 { pt3dadd( 461.4, 495.449, 12.3585, 0.3058 ) }
    dend_24 { pt3dadd( 462.412, 495.752, 11.8383, 0.2852 ) }
    dend_24 { pt3dadd( 463.048, 496.493, 11.247, 0.2954 ) }
    dend_24 { pt3dadd( 463.063, 497.522, 10.6158, 0.3078 ) }
    dend_24 { pt3dadd( 463.152, 498.648, 9.9925, 0.3616 ) }
    dend_24 { pt3dadd( 463.341, 499.767, 9.4193, 0.3136 ) }
    dend_24 { pt3dadd( 463.669, 500.85, 8.9267, 0.2542 ) }
    dend_24 { pt3dadd( 463.976, 501.887, 7.8893, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 8/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 427.511, 456.363, 28.2772, 0.7764 ) }
    dend_23 { pt3dadd( 428.02, 456.908, 28.2005, 0.6286 ) }
    dend_23 { pt3dadd( 428.524, 457.911, 28.1142, 0.5254 ) }
    dend_23 { pt3dadd( 428.794, 459.012, 28.0053, 0.6504 ) }
    dend_23 { pt3dadd( 428.769, 460.121, 27.8668, 0.7176 ) }
    dend_23 { pt3dadd( 428.666, 461.247, 27.699, 0.7258 ) }
    dend_23 { pt3dadd( 428.612, 462.38, 27.5087, 0.62 ) }
    dend_23 { pt3dadd( 428.747, 463.479, 27.3034, 0.554 ) }
    dend_23 { pt3dadd( 428.085, 464.118, 27.104, 0.4866 ) }
    dend_23 { pt3dadd( 428.533, 465.101, 26.9122, 0.552 ) }
    dend_23 { pt3dadd( 429.29, 465.694, 26.7023, 0.6652 ) }
    dend_23 { pt3dadd( 429.428, 466.65, 26.4557, 0.6834 ) }
    dend_23 { pt3dadd( 429.968, 467.441, 26.211, 0.734 ) }
    dend_23 { pt3dadd( 430.485, 468.366, 25.9697, 0.746 ) }
    dend_23 { pt3dadd( 430.485, 469.385, 25.7229, 0.7072 ) }
    dend_23 { pt3dadd( 430.538, 470.526, 25.4953, 0.7022 ) }
    dend_23 { pt3dadd( 430.696, 471.655, 25.3058, 0.8266 ) }
    dend_23 { pt3dadd( 431.175, 472.616, 25.156, 0.8654 ) }
    dend_23 { pt3dadd( 431.422, 473.583, 25.0642, 0.7246 ) }
    dend_23 { pt3dadd( 431.775, 474.651, 25.0093, 0.581 ) }
    dend_23 { pt3dadd( 432.205, 475.694, 24.9661, 0.6594 ) }
    dend_23 { pt3dadd( 432.651, 476.74, 24.9159, 0.7344 ) }
    dend_23 { pt3dadd( 432.931, 477.701, 24.8375, 0.7578 ) }
    dend_23 { pt3dadd( 433.457, 478.702, 24.7392, 0.675 ) }
    dend_23 { pt3dadd( 433.888, 479.543, 24.6032, 0.6764 ) }
    dend_23 { pt3dadd( 434.401, 480.32, 24.4689, 0.6138 ) }
    dend_23 { pt3dadd( 434.766, 481.361, 24.3246, 0.5846 ) }
    dend_23 { pt3dadd( 435.332, 482.286, 24.1594, 0.5676 ) }
    dend_23 { pt3dadd( 435.467, 483.334, 23.9737, 0.5846 ) }
    dend_23 { pt3dadd( 435.591, 484.431, 23.7796, 0.6092 ) }
    dend_23 { pt3dadd( 436.175, 485.366, 23.5794, 0.688 ) }
    dend_23 { pt3dadd( 436.872, 486.254, 23.3876, 0.6724 ) }
    dend_23 { pt3dadd( 437.659, 487.04, 23.2058, 0.7434 ) }
    dend_23 { pt3dadd( 438.353, 487.911, 23.0472, 0.6184 ) }
    dend_23 { pt3dadd( 438.724, 488.987, 22.911, 0.4878 ) }
    dend_23 { pt3dadd( 439.267, 489.806, 22.7812, 0.4418 ) }
    dend_23 { pt3dadd( 439.695, 490.847, 22.6673, 0.548 ) }
    dend_23 { pt3dadd( 440.207, 491.87, 22.5626, 0.731 ) }
    dend_23 { pt3dadd( 440.723, 492.89, 22.4637, 0.6794 ) }
    dend_23 { pt3dadd( 441.501, 493.695, 22.3544, 0.6522 ) }
    dend_23 { pt3dadd( 442.258, 494.526, 22.2328, 0.4964 ) }
    dend_23 { pt3dadd( 442.957, 495.431, 22.1103, 0.491 ) }
    dend_23 { pt3dadd( 443.555, 496.39, 21.9936, 0.4778 ) }
    dend_23 { pt3dadd( 443.896, 497.481, 21.8917, 0.4684 ) }
    dend_23 { pt3dadd( 444.243, 498.571, 21.811, 0.3782 ) }
    dend_23 { pt3dadd( 444.697, 499.621, 21.7545, 0.3346 ) }
    dend_23 { pt3dadd( 445.15, 500.672, 21.7192, 0.3408 ) }
    dend_23 { pt3dadd( 445.94, 501.49, 21.6982, 0.3878 ) }
    dend_23 { pt3dadd( 446.763, 502.285, 21.6861, 0.5302 ) }
    dend_23 { pt3dadd( 447.136, 503.357, 21.6782, 0.5274 ) }
    dend_23 { pt3dadd( 447.478, 504.449, 21.6714, 0.4446 ) }
    dend_23 { pt3dadd( 447.858, 505.527, 21.6637, 0.4376 ) }
    dend_23 { pt3dadd( 448.254, 506.6, 21.654, 0.4004 ) }
    dend_23 { pt3dadd( 448.801, 507.592, 21.6418, 0.4498 ) }
    dend_23 { pt3dadd( 449.487, 508.507, 21.6263, 0.4242 ) }
    dend_23 { pt3dadd( 450.188, 509.411, 21.6069, 0.4874 ) }
    dend_23 { pt3dadd( 450.903, 510.304, 21.5827, 0.5256 ) }
    dend_23 { pt3dadd( 451.512, 511.265, 21.5537, 0.5224 ) }
    dend_23 { pt3dadd( 452.024, 512.288, 21.5215, 0.6454 ) }
    dend_23 { pt3dadd( 452.446, 513.334, 21.4844, 0.707 ) }
    dend_23 { pt3dadd( 452.754, 514.411, 21.4388, 0.7124 ) }
    dend_23 { pt3dadd( 452.923, 515.517, 21.3938, 0.5656 ) }
    dend_23 { pt3dadd( 452.923, 516.661, 21.3662, 0.5968 ) }
    dend_23 { pt3dadd( 452.583, 517.66, 21.3731, 0.5544 ) }
    dend_23 { pt3dadd( 451.873, 518.509, 21.4278, 0.5044 ) }
    dend_23 { pt3dadd( 451.537, 519.592, 21.5263, 0.502 ) }
    dend_23 { pt3dadd( 451.539, 520.712, 21.6585, 0.7454 ) }
    dend_23 { pt3dadd( 451.735, 521.814, 21.8054, 0.6792 ) }
    dend_23 { pt3dadd( 452.11, 522.882, 21.9436, 0.5532 ) }
    dend_23 { pt3dadd( 452.48, 523.943, 22.0392, 0.5638 ) }
    dend_23 { pt3dadd( 452.874, 524.994, 22.0772, 0.5424 ) }
    dend_23 { pt3dadd( 453.355, 526.029, 22.0679, 0.4726 ) }
    dend_23 { pt3dadd( 453.847, 527.061, 22.0275, 0.49 ) }
    dend_23 { pt3dadd( 454.409, 528.057, 21.9756, 0.4944 ) }
    dend_23 { pt3dadd( 455.071, 528.975, 21.9304, 0.639 ) }
    dend_23 { pt3dadd( 455.214, 530.11, 21.9063, 0.7028 ) }
    dend_23 { pt3dadd( 455.118, 530.871, 21.9088, 0.6674 ) }
    dend_23 { pt3dadd( 454.817, 531.967, 21.9366, 0.6626 ) }
    dend_23 { pt3dadd( 454.615, 533.093, 21.9866, 0.587 ) }
    dend_23 { pt3dadd( 454.308, 534.194, 22.0541, 0.5414 ) }
    dend_23 { pt3dadd( 454.618, 535.283, 22.1369, 0.456 ) }
    dend_23 { pt3dadd( 455.066, 536.249, 22.2438, 0.53 ) }
    dend_23 { pt3dadd( 455.409, 537.322, 22.3596, 0.4552 ) }
    dend_23 { pt3dadd( 455.678, 538.422, 22.4682, 0.4296 ) }
    dend_23 { pt3dadd( 456.184, 539.441, 22.5465, 0.52 ) }
    dend_23 { pt3dadd( 456.688, 540.459, 22.5734, 0.4758 ) }
    dend_23 { pt3dadd( 457.107, 541.507, 22.5326, 0.5072 ) }
    dend_23 { pt3dadd( 457.711, 542.4, 22.4195, 0.4716 ) }
    dend_23 { pt3dadd( 458.569, 543.081, 22.2443, 0.6332 ) }
    dend_23 { pt3dadd( 459.207, 543.986, 22.037, 0.515 ) }
    dend_23 { pt3dadd( 459.752, 544.988, 21.832, 0.4934 ) }
    dend_23 { pt3dadd( 460.4, 545.93, 21.6609, 0.4092 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_23 { pt3dadd( 461.013, 546.893, 21.5452, 0.4674 ) }
    dend_23 { pt3dadd( 461.523, 547.912, 21.4961, 0.45 ) }
    dend_23 { pt3dadd( 462.125, 548.875, 21.5116, 0.5688 ) }
    dend_23 { pt3dadd( 462.818, 549.782, 21.5797, 0.514 ) }
    dend_23 { pt3dadd( 463.422, 550.748, 21.6835, 0.6022 ) }
    dend_23 { pt3dadd( 463.963, 551.756, 21.8073, 0.5312 ) }
    dend_23 { pt3dadd( 464.43, 552.797, 21.9496, 0.623 ) }
    dend_23 { pt3dadd( 464.83, 553.869, 22.0983, 0.6242 ) }
    dend_23 { pt3dadd( 465.207, 554.944, 22.2523, 0.531 ) }
    dend_23 { pt3dadd( 465.604, 556.005, 22.4131, 0.3644 ) }
    dend_23 { pt3dadd( 466.06, 557.032, 22.5824, 0.2542 ) }
    dend_23 { pt3dadd( 466.554, 558.05, 23.1022, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 12/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 417.9, 432.138, 35.9458, 0.6932 ) }
    dend_21 { pt3dadd( 418.018, 431.731, 38.3379, 1.3728 ) }
    dend_21 { pt3dadd( 417.048, 431.726, 40.1708, 0.7754 ) }
    dend_21 { pt3dadd( 416.208, 431.905, 40.8864, 0.5332 ) }
    dend_21 { pt3dadd( 415.162, 431.965, 41.6086, 0.5738 ) }
    dend_21 { pt3dadd( 414.028, 432.01, 42.3024, 0.5604 ) }
    dend_21 { pt3dadd( 412.993, 432.203, 42.9654, 0.7372 ) }
    dend_21 { pt3dadd( 412.16, 432.744, 43.5904, 0.5434 ) }
    dend_21 { pt3dadd( 411.838, 433.118, 44.1944, 0.4294 ) }
    dend_21 { pt3dadd( 410.885, 433.232, 44.8148, 0.3988 ) }
    dend_21 { pt3dadd( 409.851, 433.118, 45.4474, 0.3804 ) }
    dend_21 { pt3dadd( 408.953, 433.576, 46.1062, 0.388 ) }
    dend_21 { pt3dadd( 408.279, 433.323, 46.8199, 0.4292 ) }
    dend_21 { pt3dadd( 407.173, 433.118, 47.5611, 0.6024 ) }
    dend_21 { pt3dadd( 406.183, 432.947, 48.326, 0.6826 ) }
    dend_21 { pt3dadd( 405.468, 432.37, 49.1224, 0.629 ) }
    dend_21 { pt3dadd( 404.537, 432.035, 49.9512, 0.5954 ) }
    dend_21 { pt3dadd( 403.415, 432.116, 50.7816, 0.4424 ) }
    dend_21 { pt3dadd( 402.661, 432.485, 51.62, 0.3702 ) }
    dend_21 { pt3dadd( 401.844, 432.383, 52.4894, 0.3532 ) }
    dend_21 { pt3dadd( 400.876, 432.417, 53.3823, 0.442 ) }
    dend_21 { pt3dadd( 399.964, 432.489, 54.2856, 0.4812 ) }
    dend_21 { pt3dadd( 399.118, 432.318, 55.1659, 0.4746 ) }
    dend_21 { pt3dadd( 398.286, 431.91, 56.0076, 0.3898 ) }
    dend_21 { pt3dadd( 397.852, 432.103, 56.8198, 0.356 ) }
    dend_21 { pt3dadd( 396.799, 431.994, 57.5574, 0.3814 ) }
    dend_21 { pt3dadd( 396.056, 431.574, 58.9697, 0.4576 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 39/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 417.9, 432.138, 35.9458, 0.6932 ) }
    dend_18 { pt3dadd( 417.602, 431.034, 36.3961, 0.5096 ) }
    dend_18 { pt3dadd( 416.892, 430.158, 36.7774, 0.3624 ) }
    dend_18 { pt3dadd( 416.033, 429.401, 37.0975, 0.2962 ) }
    dend_18 { pt3dadd( 415.409, 429.625, 37.3352, 0.3142 ) }
    dend_18 { pt3dadd( 414.542, 429.468, 37.4769, 0.3502 ) }
    dend_18 { pt3dadd( 413.875, 429.164, 37.5679, 0.405 ) }
    dend_18 { pt3dadd( 412.798, 428.792, 37.6309, 0.563 ) }
    dend_18 { pt3dadd( 411.768, 428.406, 37.7121, 0.5838 ) }
    dend_18 { pt3dadd( 410.828, 427.851, 37.8339, 0.5698 ) }
    dend_18 { pt3dadd( 409.965, 427.178, 37.9924, 0.5702 ) }
    dend_18 { pt3dadd( 408.908, 426.997, 38.1646, 0.443 ) }
    dend_18 { pt3dadd( 407.78, 426.997, 38.3443, 0.3716 ) }
    dend_18 { pt3dadd( 406.857, 427.139, 38.5493, 0.3548 ) }
    dend_18 { pt3dadd( 405.831, 427.444, 38.7537, 0.4498 ) }
    dend_18 { pt3dadd( 404.89, 426.965, 38.9502, 0.4708 ) }
    dend_18 { pt3dadd( 404.624, 425.927, 39.1516, 0.577 ) }
    dend_18 { pt3dadd( 404.624, 424.805, 39.3518, 0.6768 ) }
    dend_18 { pt3dadd( 404.035, 423.907, 39.5556, 0.8738 ) }
    dend_18 { pt3dadd( 403.171, 423.287, 39.7788, 0.9524 ) }
    dend_18 { pt3dadd( 402.089, 422.935, 40.0299, 0.8888 ) }
    dend_18 { pt3dadd( 401.043, 422.677, 40.3231, 0.8726 ) }
    dend_18 { pt3dadd( 400.469, 422.106, 40.6728, 0.5766 ) }
    dend_18 { pt3dadd( 399.605, 421.371, 41.0511, 0.403 ) }
    dend_18 { pt3dadd( 398.892, 420.487, 41.4338, 0.319 ) }
    dend_18 { pt3dadd( 398.19, 419.585, 41.8079, 0.3826 ) }
    dend_18 { pt3dadd( 397.411, 418.749, 42.1739, 0.3508 ) }
    dend_18 { pt3dadd( 396.52, 418.035, 42.5384, 0.3312 ) }
    dend_18 { pt3dadd( 395.68, 417.26, 42.9198, 0.3322 ) }
    dend_18 { pt3dadd( 395.045, 416.338, 43.3457, 0.3832 ) }
    dend_18 { pt3dadd( 394.574, 415.712, 43.8668, 0.4672 ) }
    dend_18 { pt3dadd( 394.281, 414.763, 44.501, 0.6748 ) }
    dend_18 { pt3dadd( 393.24, 414.397, 45.2362, 0.8082 ) }
    dend_18 { pt3dadd( 392.534, 413.954, 46.086, 0.9026 ) }
    dend_18 { pt3dadd( 391.554, 413.522, 47.0254, 0.9058 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 74/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 434.885, 419.726, 26.896, 0.7386 ) }
    dend_16 { pt3dadd( 435.419, 419.239, 26.8675, 0.6026 ) }
    dend_16 { pt3dadd( 435.939, 418.291, 26.8303, 0.7214 ) }
    dend_16 { pt3dadd( 436.92, 417.76, 26.7849, 0.513 ) }
    dend_16 { pt3dadd( 437.76, 416.997, 26.7431, 0.3784 ) }
    dend_16 { pt3dadd( 438.563, 416.185, 26.7077, 0.2786 ) }
    dend_16 { pt3dadd( 439.314, 415.367, 26.6705, 0.282 ) }
    dend_16 { pt3dadd( 440.032, 414.666, 26.6235, 0.2882 ) }
    dend_16 { pt3dadd( 440.9, 414.412, 26.6022, 0.3 ) }
    dend_16 { pt3dadd( 441.795, 414.359, 26.6403, 0.3212 ) }
    dend_16 { pt3dadd( 442.485, 413.722, 26.7242, 0.363 ) }
    dend_16 { pt3dadd( 443.583, 413.432, 26.8426, 0.429 ) }
    dend_16 { pt3dadd( 444.592, 412.909, 26.9849, 0.6084 ) }
    dend_16 { pt3dadd( 445.649, 412.481, 27.1379, 0.6622 ) }
    dend_16 { pt3dadd( 446.142, 411.57, 27.2962, 0.7428 ) }
    dend_16 { pt3dadd( 447.166, 411.131, 27.4473, 0.7574 ) }
    dend_16 { pt3dadd( 447.941, 410.341, 27.5954, 0.7532 ) }
    dend_16 { pt3dadd( 448.819, 409.678, 27.7383, 0.6666 ) }
    dend_16 { pt3dadd( 449.331, 408.719, 27.896, 0.661 ) }
    dend_16 { pt3dadd( 449.949, 407.921, 28.0574, 0.5846 ) }
    dend_16 { pt3dadd( 450.179, 407.341, 28.2657, 0.534 ) }
    dend_16 { pt3dadd( 450.727, 406.384, 28.5099, 0.456 ) }
    dend_16 { pt3dadd( 451.426, 405.48, 28.7658, 0.4634 ) }
    dend_16 { pt3dadd( 452.237, 404.688, 29.0161, 0.6546 ) }
    dend_16 { pt3dadd( 452.646, 403.642, 29.2533, 0.6052 ) }
    dend_16 { pt3dadd( 452.847, 402.55, 29.4599, 0.6442 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_16 { pt3dadd( 452.985, 401.499, 29.6332, 0.7686 ) }
    dend_16 { pt3dadd( 453.809, 400.707, 29.7847, 0.7462 ) }
    dend_16 { pt3dadd( 454.75, 400.097, 29.9247, 0.7902 ) }
    dend_16 { pt3dadd( 455.403, 399.707, 30.0958, 0.6838 ) }
    dend_16 { pt3dadd( 456.265, 399.262, 30.2949, 0.4844 ) }
    dend_16 { pt3dadd( 457.173, 398.641, 30.4895, 0.3542 ) }
    dend_16 { pt3dadd( 457.704, 398.407, 30.6172, 0.3226 ) }
    dend_16 { pt3dadd( 458.052, 397.372, 30.7048, 0.3892 ) }
    dend_16 { pt3dadd( 458.824, 396.571, 30.7574, 0.3628 ) }
    dend_16 { pt3dadd( 459.414, 395.613, 30.7896, 0.3558 ) }
    dend_16 { pt3dadd( 460.019, 394.646, 30.8336, 0.3676 ) }
    dend_16 { pt3dadd( 460.697, 393.772, 30.9285, 0.4982 ) }
    dend_16 { pt3dadd( 461.411, 392.954, 31.1004, 0.441 ) }
    dend_16 { pt3dadd( 461.844, 391.971, 31.3278, 0.416 ) }
    dend_16 { pt3dadd( 462.359, 391.365, 31.6193, 0.4324 ) }
    dend_16 { pt3dadd( 463.058, 390.767, 31.9158, 0.6154 ) }
    dend_16 { pt3dadd( 463.823, 389.954, 32.1936, 0.6738 ) }
    dend_16 { pt3dadd( 464.522, 389.08, 32.4615, 0.771 ) }
    dend_16 { pt3dadd( 465.046, 388.164, 32.7205, 0.7758 ) }
    dend_16 { pt3dadd( 465.498, 387.185, 32.9888, 0.9512 ) }
    dend_16 { pt3dadd( 466.221, 386.475, 33.2987, 0.9254 ) }
    dend_16 { pt3dadd( 466.94, 385.737, 33.6739, 0.7514 ) }
    dend_16 { pt3dadd( 467.73, 385.284, 34.076, 0.5836 ) }
    dend_16 { pt3dadd( 468.609, 384.961, 34.5184, 0.6642 ) }
    dend_16 { pt3dadd( 469.721, 384.688, 34.9754, 0.7432 ) }
    dend_16 { pt3dadd( 470.836, 384.566, 35.4348, 0.774 ) }
    dend_16 { pt3dadd( 471.748, 384.206, 35.9055, 0.7062 ) }
    dend_16 { pt3dadd( 472.702, 383.825, 36.3728, 0.7288 ) }
    dend_16 { pt3dadd( 473.582, 383.167, 36.8192, 0.7378 ) }
    dend_16 { pt3dadd( 474.618, 382.833, 37.2445, 0.685 ) }
    dend_16 { pt3dadd( 475.741, 382.794, 37.6519, 0.6958 ) }
    dend_16 { pt3dadd( 476.826, 382.516, 38.0416, 0.6458 ) }
    dend_16 { pt3dadd( 477.836, 382.01, 38.4096, 0.6632 ) }
    dend_16 { pt3dadd( 478.699, 381.46, 38.7685, 0.6194 ) }
    dend_16 { pt3dadd( 479.399, 380.923, 39.1098, 0.4498 ) }
    dend_16 { pt3dadd( 480.488, 380.839, 39.4086, 0.3362 ) }
    dend_16 { pt3dadd( 481.347, 380.256, 39.6836, 0.2944 ) }
    dend_16 { pt3dadd( 481.933, 379.374, 39.9462, 0.3126 ) }
    dend_16 { pt3dadd( 482.82, 378.686, 40.2038, 0.3394 ) }
    dend_16 { pt3dadd( 483.715, 378.01, 40.4594, 0.4226 ) }
    dend_16 { pt3dadd( 484.688, 377.411, 40.7086, 0.4144 ) }
    dend_16 { pt3dadd( 485.72, 376.935, 40.9447, 0.5002 ) }
    dend_16 { pt3dadd( 486.48, 376.289, 41.1603, 0.398 ) }
    dend_16 { pt3dadd( 486.94, 375.251, 41.3529, 0.3344 ) }
    dend_16 { pt3dadd( 487.481, 374.246, 41.5299, 0.2908 ) }
    dend_16 { pt3dadd( 488.043, 373.26, 41.7074, 0.3058 ) }
    dend_16 { pt3dadd( 488.352, 372.176, 41.8908, 0.3272 ) }
    dend_16 { pt3dadd( 488.809, 371.159, 42.0949, 0.3988 ) }
    dend_16 { pt3dadd( 489.101, 370.059, 42.3203, 0.3756 ) }
    dend_16 { pt3dadd( 489.561, 369.042, 42.5695, 0.4028 ) }
    dend_16 { pt3dadd( 489.972, 368.002, 42.8389, 0.3412 ) }
    dend_16 { pt3dadd( 490.248, 366.932, 43.1169, 0.3134 ) }
    dend_16 { pt3dadd( 490.884, 366.048, 43.3742, 0.3008 ) }
    dend_16 { pt3dadd( 491.632, 365.427, 43.6229, 0.3178 ) }
    dend_16 { pt3dadd( 492.296, 364.586, 43.8444, 0.3802 ) }
    dend_16 { pt3dadd( 492.51, 363.484, 44.0331, 0.3464 ) }
    dend_16 { pt3dadd( 492.737, 362.376, 44.1966, 0.3242 ) }
    dend_16 { pt3dadd( 493.573, 361.781, 44.3472, 0.3142 ) }
    dend_16 { pt3dadd( 494.58, 361.399, 44.5108, 0.3734 ) }
    dend_16 { pt3dadd( 495.344, 360.593, 44.6844, 0.3338 ) }
    dend_16 { pt3dadd( 495.495, 359.536, 44.8801, 0.3 ) }
    dend_16 { pt3dadd( 496.184, 358.781, 45.1002, 0.2746 ) }
    dend_16 { pt3dadd( 496.711, 357.898, 45.3424, 0.2746 ) }
    dend_16 { pt3dadd( 497.723, 357.375, 45.5969, 0.2746 ) }
    dend_16 { pt3dadd( 498.774, 356.93, 45.8576, 0.2746 ) }
    dend_16 { pt3dadd( 499.719, 356.814, 46.1412, 0.2746 ) }
    dend_16 { pt3dadd( 500.702, 356.253, 46.4341, 0.2746 ) }
    dend_16 { pt3dadd( 501.501, 355.535, 46.7463, 0.2746 ) }
    dend_16 { pt3dadd( 502.253, 354.769, 47.0834, 0.2746 ) }
    dend_16 { pt3dadd( 503.261, 354.24, 47.4365, 0.2746 ) }
    dend_16 { pt3dadd( 504.274, 353.721, 47.7954, 0.2746 ) }
    dend_16 { pt3dadd( 505.184, 353.064, 48.1536, 0.2746 ) }
    dend_16 { pt3dadd( 506.027, 352.315, 48.5094, 0.2746 ) }
    dend_16 { pt3dadd( 506.87, 351.566, 48.8586, 0.2746 ) }
    dend_16 { pt3dadd( 507.739, 350.837, 49.196, 0.2746 ) }
    dend_16 { pt3dadd( 508.641, 350.135, 49.516, 0.2746 ) }
    dend_16 { pt3dadd( 509.543, 349.432, 49.8193, 0.2746 ) }
    dend_16 { pt3dadd( 510.436, 348.745, 50.1217, 0.2746 ) }
    dend_16 { pt3dadd( 511.327, 348.057, 50.4336, 0.2744 ) }
    dend_16 { pt3dadd( 512.265, 347.439, 50.762, 0.2744 ) }
    dend_16 { pt3dadd( 513.242, 346.885, 51.109, 0.2742 ) }
    dend_16 { pt3dadd( 514.221, 346.331, 51.4707, 0.274 ) }
    dend_16 { pt3dadd( 515.13, 345.661, 51.8358, 0.2736 ) }
    dend_16 { pt3dadd( 516.037, 344.989, 52.1898, 0.2728 ) }
    dend_16 { pt3dadd( 516.911, 344.271, 52.5221, 0.2712 ) }
    dend_16 { pt3dadd( 517.74, 343.491, 52.8195, 0.2684 ) }
    dend_16 { pt3dadd( 518.57, 342.71, 53.0748, 0.2626 ) }
    dend_16 { pt3dadd( 519.319, 341.855, 53.282, 0.2542 ) }
    dend_16 { pt3dadd( 520.012, 340.944, 53.4394, 0.2288 ) }
    dend_16 { pt3dadd( 520.719, 340.045, 53.6665, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 90/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 434.885, 419.726, 26.896, 0.7386 ) }
    dend_13 { pt3dadd( 434.948, 419.108, 26.0033, 0.2288 ) }
    dend_13 { pt3dadd( 435.564, 418.53, 25.4548, 0.5026 ) }
    dend_13 { pt3dadd( 436.38, 417.914, 25.2189, 0.6276 ) }
    dend_13 { pt3dadd( 437.208, 417.192, 24.9622, 0.5816 ) }
    dend_13 { pt3dadd( 437.922, 416.553, 24.7037, 0.6998 ) }
    dend_13 { pt3dadd( 438.498, 415.706, 24.4601, 0.618 ) }
    dend_13 { pt3dadd( 438.419, 414.804, 24.2538, 0.554 ) }
    dend_13 { pt3dadd( 438.812, 413.976, 24.0796, 0.4684 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 99/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 431.63, 445.532, 24.4472, 1.001 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_7 { pt3dadd( 432.076, 445.842, 25.6768, 0.4576 ) }
    dend_7 { pt3dadd( 432.978, 446.477, 25.9209, 0.8006 ) }
    dend_7 { pt3dadd( 433.844, 447.224, 26.0193, 0.7986 ) }
    dend_7 { pt3dadd( 434.568, 448.091, 26.1126, 0.6908 ) }
    dend_7 { pt3dadd( 435.221, 449.018, 26.1909, 0.7676 ) }
    dend_7 { pt3dadd( 435.848, 449.933, 26.2556, 0.9402 ) }
    dend_7 { pt3dadd( 436.512, 450.796, 26.3174, 0.8838 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 7/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 431.63, 445.532, 24.4472, 1.001 ) }
    dend_4 { pt3dadd( 431.401, 446.658, 24.1967, 0.7982 ) }
    dend_4 { pt3dadd( 431.859, 447.417, 23.9533, 0.6656 ) }
    dend_4 { pt3dadd( 432.142, 448.365, 23.6908, 0.6118 ) }
    dend_4 { pt3dadd( 432.571, 449.397, 23.4126, 0.7228 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 431.248, 428.294, 22.0967, 0.346 ) }
    dend_2 { pt3dadd( 432.29, 428.062, 21.8106, 0.3542 ) }
    dend_2 { pt3dadd( 432.865, 427.295, 21.5414, 0.45 ) }
    dend_2 { pt3dadd( 433.601, 426.576, 21.3036, 0.4654 ) }
    dend_2 { pt3dadd( 434.367, 426.476, 21.1435, 0.5954 ) }
    dend_2 { pt3dadd( 435.473, 426.211, 21.0359, 0.5718 ) }
    dend_2 { pt3dadd( 436.353, 425.519, 20.9427, 0.6688 ) }
    dend_2 { pt3dadd( 437.246, 424.85, 20.8467, 0.851 ) }
    dend_2 { pt3dadd( 437.976, 424.254, 20.7144, 0.95 ) }
    dend_2 { pt3dadd( 438.714, 423.598, 20.5595, 0.9202 ) }
    dend_2 { pt3dadd( 439.444, 423.111, 20.4204, 0.7552 ) }
    dend_2 { pt3dadd( 439.796, 422.083, 20.3116, 0.5248 ) }
    dend_2 { pt3dadd( 439.857, 421.12, 20.2174, 0.4174 ) }
    dend_2 { pt3dadd( 439.763, 420.359, 20.1076, 0.4972 ) }
    dend_2 { pt3dadd( 440.313, 419.541, 19.9861, 0.4342 ) }
    dend_2 { pt3dadd( 440.671, 418.698, 19.8885, 0.427 ) }
    dend_2 { pt3dadd( 441.485, 417.927, 19.8066, 0.3392 ) }
    dend_2 { pt3dadd( 441.799, 416.958, 19.7529, 0.3096 ) }
    dend_2 { pt3dadd( 442.246, 415.994, 19.6995, 0.2926 ) }
    dend_2 { pt3dadd( 442.867, 415.398, 19.6031, 0.308 ) }
    dend_2 { pt3dadd( 443.668, 414.703, 19.4645, 0.336 ) }
    dend_2 { pt3dadd( 443.934, 413.593, 19.2987, 0.391 ) }
    dend_2 { pt3dadd( 444.283, 412.504, 19.1302, 0.4778 ) }
    dend_2 { pt3dadd( 444.705, 411.443, 18.9823, 0.7122 ) }
    dend_2 { pt3dadd( 445.187, 410.415, 18.873, 0.7902 ) }
    dend_2 { pt3dadd( 445.731, 409.426, 18.8129, 0.607 ) }
    dend_2 { pt3dadd( 446.316, 408.447, 18.7826, 0.4862 ) }
    dend_2 { pt3dadd( 446.924, 407.481, 18.7678, 0.5726 ) }
    dend_2 { pt3dadd( 447.398, 406.446, 18.7557, 0.5992 ) }
    dend_2 { pt3dadd( 447.943, 405.457, 18.7274, 0.6102 ) }
    dend_2 { pt3dadd( 448.472, 404.453, 18.6773, 0.5874 ) }
    dend_2 { pt3dadd( 449.171, 403.573, 18.6119, 0.7546 ) }
    dend_2 { pt3dadd( 449.771, 402.696, 18.5337, 0.963 ) }
    dend_2 { pt3dadd( 450.71, 402.207, 18.4565, 0.9282 ) }
    dend_2 { pt3dadd( 451.59, 401.765, 18.3584, 0.8476 ) }
    dend_2 { pt3dadd( 452.299, 400.938, 18.254, 0.778 ) }
    dend_2 { pt3dadd( 453.24, 400.307, 18.1401, 0.7194 ) }
    dend_2 { pt3dadd( 453.594, 399.263, 18.0201, 0.7244 ) }
    dend_2 { pt3dadd( 454.318, 398.405, 17.8973, 0.87 ) }
    dend_2 { pt3dadd( 454.932, 397.475, 17.7876, 0.9356 ) }
    dend_2 { pt3dadd( 455.531, 396.541, 17.6915, 0.9046 ) }
    dend_2 { pt3dadd( 456.359, 395.753, 17.6115, 0.6722 ) }
    dend_2 { pt3dadd( 457.059, 394.862, 17.5505, 0.6334 ) }
    dend_2 { pt3dadd( 457.58, 393.844, 17.5079, 0.7182 ) }
    dend_2 { pt3dadd( 458.09, 392.821, 17.479, 0.8004 ) }
    dend_2 { pt3dadd( 458.64, 391.818, 17.4556, 0.8586 ) }
    dend_2 { pt3dadd( 459.421, 391.1, 17.4323, 0.7384 ) }
    dend_2 { pt3dadd( 459.639, 390.18, 17.419, 0.7076 ) }
    dend_2 { pt3dadd( 460.165, 389.666, 17.4138, 0.632 ) }
    dend_2 { pt3dadd( 460.743, 389.24, 17.3567, 0.5834 ) }
    dend_2 { pt3dadd( 461.506, 388.706, 17.2474, 0.7354 ) }
    dend_2 { pt3dadd( 462.271, 388.025, 17.1129, 0.7552 ) }
    dend_2 { pt3dadd( 462.845, 387.059, 16.9646, 0.6926 ) }
    dend_2 { pt3dadd( 463.614, 386.258, 16.7956, 0.6012 ) }
    dend_2 { pt3dadd( 464.525, 385.677, 16.6044, 0.7694 ) }
    dend_2 { pt3dadd( 465.534, 385.201, 16.416, 0.8154 ) }
    dend_2 { pt3dadd( 466.491, 384.605, 16.2418, 0.8168 ) }
    dend_2 { pt3dadd( 467.448, 383.976, 16.0764, 0.7702 ) }
    dend_2 { pt3dadd( 468.222, 383.183, 15.9183, 0.693 ) }
    dend_2 { pt3dadd( 468.933, 382.331, 15.7603, 0.7346 ) }
    dend_2 { pt3dadd( 469.744, 381.546, 15.5957, 0.6018 ) }
    dend_2 { pt3dadd( 470.645, 380.954, 15.426, 0.4586 ) }
    dend_2 { pt3dadd( 471.138, 380.235, 15.2252, 0.3794 ) }
    dend_2 { pt3dadd( 471.792, 379.368, 15.0153, 0.4728 ) }
    dend_2 { pt3dadd( 472.322, 378.379, 14.7999, 0.3942 ) }
    dend_2 { pt3dadd( 472.826, 377.364, 14.5925, 0.3272 ) }
    dend_2 { pt3dadd( 473.305, 376.329, 14.4079, 0.2778 ) }
    dend_2 { pt3dadd( 473.894, 375.357, 14.2578, 0.2808 ) }
    dend_2 { pt3dadd( 474.581, 374.441, 14.1523, 0.286 ) }
    dend_2 { pt3dadd( 475.358, 373.63, 14.0943, 0.2958 ) }
    dend_2 { pt3dadd( 476.219, 372.914, 14.0885, 0.3136 ) }
    dend_2 { pt3dadd( 476.919, 372.051, 14.1116, 0.349 ) }
    dend_2 { pt3dadd( 477.57, 371.14, 14.1404, 0.403 ) }
    dend_2 { pt3dadd( 478.366, 370.319, 14.1742, 0.5594 ) }
    dend_2 { pt3dadd( 479.162, 369.499, 14.2127, 0.576 ) }
    dend_2 { pt3dadd( 479.969, 368.723, 14.2674, 0.5616 ) }
    dend_2 { pt3dadd( 480.802, 367.966, 14.3408, 0.524 ) }
    dend_2 { pt3dadd( 481.708, 367.269, 14.4262, 0.5076 ) }
    dend_2 { pt3dadd( 482.581, 366.532, 14.5141, 0.4478 ) }
    dend_2 { pt3dadd( 483.376, 365.711, 14.5907, 0.4792 ) }
    dend_2 { pt3dadd( 484.136, 364.858, 14.6464, 0.534 ) }
    dend_2 { pt3dadd( 484.823, 363.943, 14.6748, 0.4232 ) }
    dend_2 { pt3dadd( 485.518, 363.036, 14.6761, 0.334 ) }
    dend_2 { pt3dadd( 486.233, 362.142, 14.6541, 0.2902 ) }
    dend_2 { pt3dadd( 487.039, 361.353, 14.613, 0.3044 ) }
    dend_2 { pt3dadd( 488.041, 360.804, 14.5579, 0.3248 ) }
    dend_2 { pt3dadd( 488.899, 360.098, 14.4878, 0.3932 ) }
    dend_2 { pt3dadd( 489.094, 359.055, 14.3956, 0.3702 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_2 { pt3dadd( 489.843, 358.254, 14.2952, 0.3694 ) }
    dend_2 { pt3dadd( 490.775, 357.606, 14.1987, 0.394 ) }
    dend_2 { pt3dadd( 491.664, 356.95, 14.1212, 0.5416 ) }
    dend_2 { pt3dadd( 492.245, 356.023, 14.07, 0.548 ) }
    dend_2 { pt3dadd( 492.828, 355.096, 14.0324, 0.484 ) }
    dend_2 { pt3dadd( 493.722, 354.383, 13.9901, 0.5062 ) }
    dend_2 { pt3dadd( 494.579, 353.641, 13.9179, 0.549 ) }
    dend_2 { pt3dadd( 495.385, 352.865, 13.7916, 0.6204 ) }
    dend_2 { pt3dadd( 496.193, 352.067, 13.6071, 0.5626 ) }
    dend_2 { pt3dadd( 497.002, 351.258, 13.3737, 0.4642 ) }
    dend_2 { pt3dadd( 497.702, 350.379, 13.0985, 0.467 ) }
    dend_2 { pt3dadd( 498.356, 349.469, 12.7884, 0.4882 ) }
    dend_2 { pt3dadd( 498.873, 348.512, 12.451, 0.4512 ) }
    dend_2 { pt3dadd( 499.528, 347.767, 12.1031, 0.5226 ) }
    dend_2 { pt3dadd( 499.664, 346.67, 11.7731, 0.434 ) }
    dend_2 { pt3dadd( 499.883, 345.673, 11.4495, 0.4268 ) }
    dend_2 { pt3dadd( 500.396, 344.845, 11.115, 0.3384 ) }
    dend_2 { pt3dadd( 501.331, 344.203, 10.7807, 0.3082 ) }
    dend_2 { pt3dadd( 502.003, 343.367, 10.4572, 0.291 ) }
    dend_2 { pt3dadd( 502.241, 342.304, 10.1604, 0.2994 ) }
    dend_2 { pt3dadd( 502.177, 341.183, 9.9054, 0.3474 ) }
    dend_2 { pt3dadd( 502.484, 340.216, 9.6904, 0.2796 ) }
    dend_2 { pt3dadd( 503.214, 339.396, 9.1647, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 23/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 431.248, 428.294, 22.0967, 0.346 ) }
    dend_1 { pt3dadd( 431.701, 428.451, 21.3189, 0.4576 ) }
    dend_1 { pt3dadd( 432.542, 429.038, 21.2978, 0.6228 ) }
    dend_1 { pt3dadd( 433.597, 429.056, 21.3017, 0.5434 ) }
    dend_1 { pt3dadd( 434.569, 429.448, 21.2849, 0.5424 ) }
    dend_1 { pt3dadd( 435.655, 429.757, 21.2375, 0.746 ) }
    dend_1 { pt3dadd( 436.529, 430.316, 21.1438, 0.8132 ) }
    dend_1 { pt3dadd( 437.188, 431.182, 20.9997, 0.8426 ) }
    dend_1 { pt3dadd( 437.906, 432.04, 20.8196, 0.6728 ) }
    dend_1 { pt3dadd( 438.561, 432.833, 20.6055, 0.5316 ) }
    dend_1 { pt3dadd( 439.297, 433.696, 20.3789, 0.5708 ) }
    dend_1 { pt3dadd( 439.637, 434.768, 20.1714, 0.5554 ) }
    dend_1 { pt3dadd( 439.639, 435.885, 19.9819, 0.4964 ) }
    dend_1 { pt3dadd( 439.903, 436.973, 19.8166, 0.5352 ) }
    dend_1 { pt3dadd( 440.51, 437.903, 19.6767, 0.5738 ) }
    dend_1 { pt3dadd( 440.83, 438.801, 19.5279, 0.8064 ) }
    dend_1 { pt3dadd( 441.433, 439.69, 19.3789, 0.9146 ) }
    dend_1 { pt3dadd( 442.176, 440.392, 19.2389, 0.8532 ) }
    dend_1 { pt3dadd( 442.84, 440.941, 19.0727, 0.8678 ) }
    dend_1 { pt3dadd( 443.579, 441.625, 18.8573, 0.9568 ) }
    dend_1 { pt3dadd( 444.375, 442.312, 18.6029, 1.0502 ) }
    dend_1 { pt3dadd( 445.219, 443.03, 18.348, 0.885 ) }
    dend_1 { pt3dadd( 445.926, 443.91, 18.1027, 0.8472 ) }
    dend_1 { pt3dadd( 446.692, 444.714, 17.8767, 0.8476 ) }
    dend_1 { pt3dadd( 447.478, 445.062, 17.6419, 0.964 ) }
    dend_1 { pt3dadd( 448.155, 445.893, 17.3935, 0.8466 ) }
    dend_1 { pt3dadd( 449.018, 446.599, 17.1441, 0.645 ) }
    dend_1 { pt3dadd( 450.077, 446.817, 16.9162, 0.65 ) }
    dend_1 { pt3dadd( 450.762, 447.583, 16.7109, 0.6518 ) }
    dend_1 { pt3dadd( 451.451, 448.432, 16.5211, 0.6912 ) }
    dend_1 { pt3dadd( 452.102, 449.124, 16.3735, 0.8184 ) }
    dend_1 { pt3dadd( 452.906, 449.872, 16.2551, 0.7906 ) }
    dend_1 { pt3dadd( 453.58, 450.755, 16.1611, 0.8756 ) }
    dend_1 { pt3dadd( 454.381, 451.432, 16.0688, 0.8272 ) }
    dend_1 { pt3dadd( 455.086, 452.325, 15.9865, 0.822 ) }
    dend_1 { pt3dadd( 455.841, 453.117, 15.9205, 0.6324 ) }
    dend_1 { pt3dadd( 456.64, 453.931, 15.8568, 0.467 ) }
    dend_1 { pt3dadd( 457.437, 454.707, 15.7795, 0.4006 ) }
    dend_1 { pt3dadd( 458.34, 455.382, 15.6969, 0.4834 ) }
    dend_1 { pt3dadd( 459.174, 456.151, 15.6104, 0.554 ) }
    dend_1 { pt3dadd( 460.152, 456.725, 15.5054, 0.6298 ) }
    dend_1 { pt3dadd( 461.158, 457.249, 15.377, 0.5798 ) }
    dend_1 { pt3dadd( 462.239, 457.599, 15.2325, 0.497 ) }
    dend_1 { pt3dadd( 463.285, 457.881, 15.0665, 0.5244 ) }
    dend_1 { pt3dadd( 464.216, 458.108, 14.9021, 0.6124 ) }
    dend_1 { pt3dadd( 465.236, 457.931, 14.731, 0.5948 ) }
    dend_1 { pt3dadd( 466.039, 458.507, 14.5396, 0.5244 ) }
    dend_1 { pt3dadd( 466.921, 459.198, 14.3499, 0.5758 ) }
    dend_1 { pt3dadd( 468.017, 459.491, 14.159, 0.7046 ) }
    dend_1 { pt3dadd( 469.118, 459.711, 13.9639, 0.7816 ) }
    dend_1 { pt3dadd( 470.109, 460.217, 13.784, 0.7928 ) }
    dend_1 { pt3dadd( 471.192, 460.504, 13.6125, 0.7656 ) }
    dend_1 { pt3dadd( 472.202, 460.978, 13.4459, 0.7206 ) }
    dend_1 { pt3dadd( 473.196, 461.488, 13.2956, 0.6098 ) }
    dend_1 { pt3dadd( 474.218, 461.745, 13.1622, 0.5366 ) }
    dend_1 { pt3dadd( 475.267, 461.498, 13.0358, 0.4472 ) }
    dend_1 { pt3dadd( 476.374, 461.539, 12.9069, 0.5136 ) }
    dend_1 { pt3dadd( 477.46, 461.726, 12.7721, 0.4238 ) }
    dend_1 { pt3dadd( 478.44, 462.247, 12.6426, 0.377 ) }
    dend_1 { pt3dadd( 479.327, 462.941, 12.5219, 0.3958 ) }
    dend_1 { pt3dadd( 480.377, 463.282, 12.3992, 0.3764 ) }
    dend_1 { pt3dadd( 481.305, 463.795, 12.2781, 0.3732 ) }
    dend_1 { pt3dadd( 481.914, 464.747, 12.1549, 0.4366 ) }
    dend_1 { pt3dadd( 482.735, 465.538, 12.032, 0.4478 ) }
    dend_1 { pt3dadd( 483.787, 465.963, 11.9021, 0.5272 ) }
    dend_1 { pt3dadd( 484.628, 466.625, 11.7601, 0.6186 ) }
    dend_1 { pt3dadd( 485.545, 467.214, 11.6056, 0.601 ) }
    dend_1 { pt3dadd( 486.335, 467.775, 11.4316, 0.5608 ) }
    dend_1 { pt3dadd( 486.951, 468.675, 11.2663, 0.5238 ) }
    dend_1 { pt3dadd( 487.714, 469.509, 11.1168, 0.5012 ) }
    dend_1 { pt3dadd( 488.756, 469.783, 11.0044, 0.4646 ) }
    dend_1 { pt3dadd( 489.676, 469.308, 10.9395, 0.371 ) }
    dend_1 { pt3dadd( 490.751, 469.178, 10.9078, 0.3218 ) }
    dend_1 { pt3dadd( 491.322, 470.09, 10.9009, 0.3148 ) }
    dend_1 { pt3dadd( 492.075, 470.936, 10.8938, 0.351 ) }
    dend_1 { pt3dadd( 492.652, 471.898, 10.8597, 0.4078 ) }
    dend_1 { pt3dadd( 493.172, 472.844, 10.7738, 0.562 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_1 { pt3dadd( 494.237, 473.036, 10.6371, 0.611 ) }
    dend_1 { pt3dadd( 495.183, 473.584, 10.4795, 0.4804 ) }
    dend_1 { pt3dadd( 495.846, 474.33, 10.3111, 0.396 ) }
    dend_1 { pt3dadd( 496.969, 474.457, 10.1335, 0.3898 ) }
    dend_1 { pt3dadd( 497.668, 475.191, 9.9435, 0.565 ) }
    dend_1 { pt3dadd( 498.435, 475.901, 9.7558, 0.4406 ) }
    dend_1 { pt3dadd( 498.853, 476.942, 9.57, 0.3304 ) }
    dend_1 { pt3dadd( 499.143, 478.026, 9.3909, 0.2288 ) }
    dend_1 { pt3dadd( 499.143, 479.17, 8.9944, 0.2288 ) }
    // Section: apic_20, id: apic_20, parent: apic_0 (entry count 9/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 409.442, 425.765, 24.9382, 1.3816 ) }
    apic_20 { pt3dadd( 408.743, 426.221, 24.901, 0.9152 ) }
    apic_20 { pt3dadd( 407.787, 426.847, 24.9431, 0.8862 ) }
    apic_20 { pt3dadd( 406.887, 427.544, 24.9602, 0.7832 ) }
    apic_20 { pt3dadd( 406.065, 428.339, 24.9691, 0.8212 ) }
    apic_20 { pt3dadd( 405.188, 429.055, 24.9675, 0.9238 ) }
    apic_20 { pt3dadd( 404.239, 429.666, 24.9557, 0.9584 ) }
    apic_20 { pt3dadd( 403.439, 430.454, 24.9152, 0.8626 ) }
    apic_20 { pt3dadd( 402.682, 431.295, 24.8299, 0.7744 ) }
    apic_20 { pt3dadd( 402.19, 432.322, 24.7002, 0.6356 ) }
    apic_20 { pt3dadd( 401.71, 433.358, 24.5279, 0.7162 ) }
    apic_20 { pt3dadd( 401.434, 434.458, 24.3115, 0.8258 ) }
    apic_20 { pt3dadd( 401.17, 435.561, 24.0511, 0.7654 ) }
    apic_20 { pt3dadd( 400.894, 436.65, 23.7666, 0.7898 ) }
    apic_20 { pt3dadd( 400.617, 437.734, 23.4696, 0.6294 ) }
    apic_20 { pt3dadd( 400.178, 438.714, 23.1437, 0.6436 ) }
    apic_20 { pt3dadd( 399.801, 439.47, 22.7465, 0.759 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 26/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 409.442, 425.765, 24.9382, 1.3816 ) }
    apic_1 { pt3dadd( 407.679, 425.281, 24.7348, 0.9964 ) }
    apic_1 { pt3dadd( 406.778, 424.611, 24.6019, 0.9792 ) }
    apic_1 { pt3dadd( 405.919, 423.859, 24.5199, 0.9962 ) }
    apic_1 { pt3dadd( 405.425, 422.865, 24.4817, 1.0184 ) }
    apic_1 { pt3dadd( 404.974, 421.843, 24.4751, 1.106 ) }
    apic_1 { pt3dadd( 404.737, 420.723, 24.4747, 1.0428 ) }
    apic_1 { pt3dadd( 404.5, 419.604, 24.4689, 1.1066 ) }
    apic_1 { pt3dadd( 404.164, 418.513, 24.4488, 1.0316 ) }
    apic_1 { pt3dadd( 403.871, 417.547, 24.3872, 0.9154 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 36/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 449.785, 439.354, 40.2909, 0.6208 ) }
    dend_31 { pt3dadd( 450.194, 439.715, 42.7414, 0.6864 ) }
    dend_31 { pt3dadd( 451.147, 440.295, 43.5386, 0.5554 ) }
    dend_31 { pt3dadd( 452.195, 440.693, 43.8595, 0.409 ) }
    dend_31 { pt3dadd( 453.107, 441.339, 44.2221, 0.3396 ) }
    dend_31 { pt3dadd( 453.535, 442.35, 44.6228, 0.3736 ) }
    dend_31 { pt3dadd( 454.285, 443.207, 45.0668, 0.3342 ) }
    dend_31 { pt3dadd( 455.292, 443.702, 45.5669, 0.3006 ) }
    dend_31 { pt3dadd( 456.401, 443.724, 46.1303, 0.2756 ) }
    dend_31 { pt3dadd( 457.381, 444.017, 46.7684, 0.2764 ) }
    dend_31 { pt3dadd( 458.273, 444.506, 47.5146, 0.278 ) }
    dend_31 { pt3dadd( 458.269, 444.766, 48.3977, 0.2808 ) }
    dend_31 { pt3dadd( 458.179, 445.068, 49.4312, 0.286 ) }
    dend_31 { pt3dadd( 458.227, 445.918, 50.5238, 0.297 ) }
    dend_31 { pt3dadd( 457.846, 446.741, 51.7196, 0.3108 ) }
    dend_31 { pt3dadd( 457.648, 447.311, 52.9998, 0.3672 ) }
    dend_31 { pt3dadd( 457.591, 447.37, 54.3298, 0.322 ) }
    dend_31 { pt3dadd( 458.265, 447.005, 55.6553, 0.2796 ) }
    dend_31 { pt3dadd( 458.053, 447.066, 56.9344, 0.2288 ) }
    dend_31 { pt3dadd( 457.155, 447.524, 60.1065, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 56/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 449.785, 439.354, 40.2909, 0.6208 ) }
    dend_30 { pt3dadd( 450.293, 439.125, 40.147, 0.4524 ) }
    dend_30 { pt3dadd( 451.138, 438.659, 39.8919, 0.341 ) }
    dend_30 { pt3dadd( 452.266, 438.47, 39.601, 0.3032 ) }
    dend_30 { pt3dadd( 453.402, 438.539, 39.3341, 0.3298 ) }
    dend_30 { pt3dadd( 454.53, 438.723, 39.1339, 0.3662 ) }
    dend_30 { pt3dadd( 455.635, 439.009, 39.0281, 0.4964 ) }
    dend_30 { pt3dadd( 456.707, 439.32, 39.0334, 0.4328 ) }
    dend_30 { pt3dadd( 457.747, 439.576, 39.1364, 0.4242 ) }
    dend_30 { pt3dadd( 458.797, 440.021, 39.2988, 0.3338 ) }
    dend_30 { pt3dadd( 459.645, 440.748, 39.4999, 0.3 ) }
    dend_30 { pt3dadd( 460.57, 441.384, 39.7163, 0.2746 ) }
    dend_30 { pt3dadd( 461.587, 441.893, 39.9244, 0.2746 ) }
    dend_30 { pt3dadd( 462.653, 442.286, 40.103, 0.2746 ) }
    dend_30 { pt3dadd( 463.787, 442.442, 40.2422, 0.2746 ) }
    dend_30 { pt3dadd( 464.93, 442.468, 40.3421, 0.2746 ) }
    dend_30 { pt3dadd( 466.073, 442.498, 40.404, 0.2748 ) }
    dend_30 { pt3dadd( 467.214, 442.555, 40.4351, 0.2748 ) }
    dend_30 { pt3dadd( 468.35, 442.697, 40.4446, 0.2752 ) }
    dend_30 { pt3dadd( 469.484, 442.849, 40.4415, 0.2758 ) }
    dend_30 { pt3dadd( 470.611, 443.037, 40.4326, 0.2766 ) }
    dend_30 { pt3dadd( 471.708, 443.358, 40.4205, 0.2786 ) }
    dend_30 { pt3dadd( 472.755, 443.816, 40.4082, 0.2818 ) }
    dend_30 { pt3dadd( 473.777, 444.327, 40.3962, 0.2882 ) }
    dend_30 { pt3dadd( 474.773, 444.89, 40.3827, 0.2994 ) }
    dend_30 { pt3dadd( 475.691, 445.572, 40.3656, 0.3228 ) }
    dend_30 { pt3dadd( 476.697, 446.102, 40.3421, 0.3536 ) }
    dend_30 { pt3dadd( 477.713, 446.621, 40.308, 0.4722 ) }
    dend_30 { pt3dadd( 478.682, 447.228, 40.2592, 0.3932 ) }
    dend_30 { pt3dadd( 479.607, 447.9, 40.1948, 0.3254 ) }
    dend_30 { pt3dadd( 480.532, 448.574, 40.1114, 0.2746 ) }
    dend_30 { pt3dadd( 481.393, 449.317, 40.003, 0.2746 ) }
    dend_30 { pt3dadd( 482.225, 450.094, 39.8653, 0.2746 ) }
    dend_30 { pt3dadd( 483.1, 450.826, 39.699, 0.2746 ) }
    dend_30 { pt3dadd( 483.878, 451.664, 39.5142, 0.2746 ) }
    dend_30 { pt3dadd( 484.564, 452.429, 39.2949, 0.2746 ) }
    dend_30 { pt3dadd( 485.412, 453.113, 39.0564, 0.2746 ) }
    dend_30 { pt3dadd( 486.448, 453.573, 38.8256, 0.2746 ) }
    dend_30 { pt3dadd( 487.535, 453.928, 38.6212, 0.2746 ) }
    dend_30 { pt3dadd( 488.578, 454.381, 38.4532, 0.2746 ) }
    dend_30 { pt3dadd( 489.588, 454.909, 38.3253, 0.2746 ) }
    dend_30 { pt3dadd( 490.665, 455.291, 38.2371, 0.2746 ) }
    dend_30 { pt3dadd( 491.752, 455.648, 38.1769, 0.2746 ) }
    dend_30 { pt3dadd( 492.787, 456.125, 38.1315, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_30 { pt3dadd( 493.645, 456.879, 38.0904, 0.2746 ) }
    dend_30 { pt3dadd( 494.357, 457.775, 38.0456, 0.2746 ) }
    dend_30 { pt3dadd( 495.034, 458.697, 37.9921, 0.2746 ) }
    dend_30 { pt3dadd( 495.606, 459.685, 37.9246, 0.2746 ) }
    dend_30 { pt3dadd( 496.187, 460.669, 37.8406, 0.2746 ) }
    dend_30 { pt3dadd( 496.8, 461.63, 37.7381, 0.2746 ) }
    dend_30 { pt3dadd( 497.401, 462.578, 37.6107, 0.2746 ) }
    dend_30 { pt3dadd( 497.992, 463.544, 37.464, 0.2746 ) }
    dend_30 { pt3dadd( 498.576, 464.527, 37.3097, 0.2746 ) }
    dend_30 { pt3dadd( 499.037, 465.569, 37.1638, 0.2746 ) }
    dend_30 { pt3dadd( 499.571, 466.57, 37.0339, 0.2746 ) }
    dend_30 { pt3dadd( 500.19, 467.522, 36.9186, 0.2746 ) }
    dend_30 { pt3dadd( 500.689, 468.529, 36.8161, 0.2746 ) }
    dend_30 { pt3dadd( 501.252, 469.515, 36.7307, 0.2744 ) }
    dend_30 { pt3dadd( 501.823, 470.502, 36.6716, 0.2744 ) }
    dend_30 { pt3dadd( 502.412, 471.478, 36.654, 0.2742 ) }
    dend_30 { pt3dadd( 503.054, 472.424, 36.6976, 0.274 ) }
    dend_30 { pt3dadd( 503.826, 473.267, 36.8169, 0.2736 ) }
    dend_30 { pt3dadd( 504.59, 474.104, 37.014, 0.2728 ) }
    dend_30 { pt3dadd( 505.273, 475.014, 37.3397, 0.2712 ) }
    dend_30 { pt3dadd( 505.947, 475.937, 37.7712, 0.2684 ) }
    dend_30 { pt3dadd( 506.713, 476.732, 38.2978, 0.2626 ) }
    dend_30 { pt3dadd( 507.44, 477.275, 38.918, 0.2542 ) }
    dend_30 { pt3dadd( 508.034, 477.546, 39.6228, 0.2288 ) }
    dend_30 { pt3dadd( 508.659, 477.557, 42.009, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 25/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 422.678, 449.321, 35.8599, 0.6974 ) }
    dend_28 { pt3dadd( 422.475, 450.318, 36.0122, 0.5096 ) }
    dend_28 { pt3dadd( 422.475, 451.462, 36.1584, 0.4014 ) }
    dend_28 { pt3dadd( 422.466, 452.587, 36.2768, 0.4072 ) }
    dend_28 { pt3dadd( 422.275, 453.5, 36.351, 0.561 ) }
    dend_28 { pt3dadd( 422.246, 454.635, 36.3782, 0.6088 ) }
    dend_28 { pt3dadd( 422.246, 455.778, 36.3661, 0.4782 ) }
    dend_28 { pt3dadd( 422.246, 456.922, 36.3314, 0.3834 ) }
    dend_28 { pt3dadd( 422.246, 458.066, 36.3026, 0.4074 ) }
    dend_28 { pt3dadd( 422.338, 459.204, 36.295, 0.3976 ) }
    dend_28 { pt3dadd( 422.455, 460.339, 36.3166, 0.4146 ) }
    dend_28 { pt3dadd( 422.475, 461.48, 36.3698, 0.5034 ) }
    dend_28 { pt3dadd( 422.475, 462.604, 36.4554, 0.6204 ) }
    dend_28 { pt3dadd( 423.004, 463.577, 36.5613, 0.6104 ) }
    dend_28 { pt3dadd( 423.619, 464.512, 36.6862, 0.5486 ) }
    dend_28 { pt3dadd( 424.337, 465.368, 36.8108, 0.645 ) }
    dend_28 { pt3dadd( 425.215, 466.032, 36.9463, 0.7138 ) }
    dend_28 { pt3dadd( 425.426, 467.083, 37.0796, 0.6888 ) }
    dend_28 { pt3dadd( 425.311, 468.217, 37.2098, 0.6968 ) }
    dend_28 { pt3dadd( 425.584, 469.319, 37.3453, 0.6764 ) }
    dend_28 { pt3dadd( 426.348, 469.984, 37.5094, 0.5818 ) }
    dend_28 { pt3dadd( 426.907, 470.835, 37.7126, 0.4524 ) }
    dend_28 { pt3dadd( 427.321, 471.794, 37.9243, 0.4458 ) }
    dend_28 { pt3dadd( 427.511, 472.911, 38.1307, 0.4468 ) }
    dend_28 { pt3dadd( 427.575, 474.026, 38.3256, 0.3848 ) }
    dend_28 { pt3dadd( 427.769, 475.124, 38.4964, 0.3494 ) }
    dend_28 { pt3dadd( 427.927, 476.241, 38.621, 0.3556 ) }
    dend_28 { pt3dadd( 427.774, 477.372, 38.6932, 0.4758 ) }
    dend_28 { pt3dadd( 427.957, 478.493, 38.7139, 0.3996 ) }
    dend_28 { pt3dadd( 428.332, 479.557, 38.6854, 0.3374 ) }
    dend_28 { pt3dadd( 428.493, 480.634, 38.6086, 0.2964 ) }
    dend_28 { pt3dadd( 428.903, 481.697, 38.5134, 0.3162 ) }
    dend_28 { pt3dadd( 429.278, 482.774, 38.4325, 0.3474 ) }
    dend_28 { pt3dadd( 429.474, 483.756, 38.4017, 0.43 ) }
    dend_28 { pt3dadd( 429.859, 484.769, 38.4062, 0.464 ) }
    dend_28 { pt3dadd( 430.663, 485.514, 38.4401, 0.418 ) }
    dend_28 { pt3dadd( 431.029, 486.536, 38.5059, 0.4056 ) }
    dend_28 { pt3dadd( 431.498, 487.373, 38.6145, 0.4852 ) }
    dend_28 { pt3dadd( 431.996, 488.37, 38.7489, 0.5932 ) }
    dend_28 { pt3dadd( 432.329, 489.331, 38.9077, 0.5284 ) }
    dend_28 { pt3dadd( 433.164, 489.959, 39.062, 0.5512 ) }
    dend_28 { pt3dadd( 433.757, 490.938, 39.2022, 0.5858 ) }
    dend_28 { pt3dadd( 434.297, 491.938, 39.3173, 0.6858 ) }
    dend_28 { pt3dadd( 434.624, 492.995, 39.4013, 0.698 ) }
    dend_28 { pt3dadd( 434.768, 494.073, 39.4744, 0.6464 ) }
    dend_28 { pt3dadd( 435.296, 494.984, 39.5458, 0.4526 ) }
    dend_28 { pt3dadd( 435.627, 496.069, 39.632, 0.3412 ) }
    dend_28 { pt3dadd( 436.096, 497.105, 39.7379, 0.305 ) }
    dend_28 { pt3dadd( 436.821, 497.972, 39.8616, 0.3256 ) }
    dend_28 { pt3dadd( 437.625, 498.785, 39.998, 0.3948 ) }
    dend_28 { pt3dadd( 438.235, 499.702, 40.1313, 0.3732 ) }
    dend_28 { pt3dadd( 438.996, 500.342, 40.2909, 0.375 ) }
    dend_28 { pt3dadd( 439.491, 501.3, 40.4608, 0.404 ) }
    dend_28 { pt3dadd( 439.906, 502.354, 40.6549, 0.561 ) }
    dend_28 { pt3dadd( 440.412, 503.378, 40.8794, 0.58 ) }
    dend_28 { pt3dadd( 440.753, 504.47, 41.1351, 0.5626 ) }
    dend_28 { pt3dadd( 441.144, 505.373, 41.4414, 0.557 ) }
    dend_28 { pt3dadd( 442.019, 506.026, 41.7824, 0.4186 ) }
    dend_28 { pt3dadd( 442.848, 506.744, 42.1705, 0.3256 ) }
    dend_28 { pt3dadd( 443.471, 507.681, 42.5995, 0.2748 ) }
    dend_28 { pt3dadd( 443.81, 508.769, 43.0685, 0.275 ) }
    dend_28 { pt3dadd( 444.012, 509.893, 43.5837, 0.2754 ) }
    dend_28 { pt3dadd( 444.445, 510.953, 44.1546, 0.2762 ) }
    dend_28 { pt3dadd( 444.538, 511.386, 44.8129, 0.2776 ) }
    dend_28 { pt3dadd( 444.66, 512.307, 45.5899, 0.2802 ) }
    dend_28 { pt3dadd( 444.373, 513.217, 46.4954, 0.285 ) }
    dend_28 { pt3dadd( 443.71, 513.771, 47.5266, 0.2938 ) }
    dend_28 { pt3dadd( 442.896, 514.332, 48.6531, 0.31 ) }
    dend_28 { pt3dadd( 442.053, 514.914, 49.8347, 0.3422 ) }
    dend_28 { pt3dadd( 441.209, 515.496, 51.0325, 0.3902 ) }
    dend_28 { pt3dadd( 440.333, 516.151, 52.2077, 0.536 ) }
    dend_28 { pt3dadd( 439.451, 516.823, 53.34, 0.5316 ) }
    dend_28 { pt3dadd( 438.677, 517.544, 54.432, 0.4836 ) }
    dend_28 { pt3dadd( 437.936, 518.28, 55.4966, 0.3592 ) }
    dend_28 { pt3dadd( 437.246, 519.043, 56.5477, 0.3 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( 436.575, 519.813, 57.5929, 0.2746 ) }
    dend_28 { pt3dadd( 435.935, 520.604, 58.6345, 0.2746 ) }
    dend_28 { pt3dadd( 435.542, 521.536, 59.6655, 0.2744 ) }
    dend_28 { pt3dadd( 435.163, 522.489, 60.6696, 0.2744 ) }
    dend_28 { pt3dadd( 434.879, 523.47, 61.6283, 0.2742 ) }
    dend_28 { pt3dadd( 434.955, 524.563, 62.5176, 0.274 ) }
    dend_28 { pt3dadd( 435.03, 525.655, 63.3217, 0.2736 ) }
    dend_28 { pt3dadd( 434.903, 526.741, 64.0296, 0.2728 ) }
    dend_28 { pt3dadd( 434.634, 527.822, 64.6394, 0.2712 ) }
    dend_28 { pt3dadd( 434.239, 528.855, 65.1473, 0.2684 ) }
    dend_28 { pt3dadd( 433.577, 529.789, 65.5483, 0.2626 ) }
    dend_28 { pt3dadd( 432.916, 530.722, 65.8496, 0.2542 ) }
    dend_28 { pt3dadd( 432.059, 531.452, 66.064, 0.2288 ) }
    dend_28 { pt3dadd( 431.103, 532.08, 66.3463, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 14/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 422.678, 449.321, 35.8599, 0.6974 ) }
    dend_27 { pt3dadd( 421.561, 449.879, 35.5639, 0.2288 ) }
    dend_27 { pt3dadd( 420.803, 450.574, 36.0041, 0.5926 ) }
    dend_27 { pt3dadd( 420.0, 451.381, 36.1875, 0.6632 ) }
    dend_27 { pt3dadd( 419.099, 452.044, 36.4182, 0.5984 ) }
    dend_27 { pt3dadd( 418.195, 452.608, 36.6764, 0.5132 ) }
    dend_27 { pt3dadd( 417.073, 452.626, 36.9698, 0.4148 ) }
    dend_27 { pt3dadd( 415.93, 452.585, 37.2898, 0.3998 ) }
    dend_27 { pt3dadd( 414.804, 452.428, 37.6303, 0.4744 ) }
    dend_27 { pt3dadd( 413.811, 452.273, 38.0195, 0.573 ) }
    dend_27 { pt3dadd( 413.549, 451.553, 38.479, 0.4912 ) }
    dend_27 { pt3dadd( 412.679, 451.171, 38.976, 0.48 ) }
    dend_27 { pt3dadd( 411.672, 450.796, 39.4691, 0.4638 ) }
    dend_27 { pt3dadd( 410.601, 450.872, 39.9557, 0.4116 ) }
    dend_27 { pt3dadd( 410.497, 451.051, 40.4768, 0.4236 ) }
    dend_27 { pt3dadd( 409.458, 451.318, 40.9842, 0.3744 ) }
    dend_27 { pt3dadd( 408.397, 451.689, 41.461, 0.4006 ) }
    dend_27 { pt3dadd( 407.456, 452.308, 41.9012, 0.3372 ) }
    dend_27 { pt3dadd( 406.368, 452.563, 42.2988, 0.306 ) }
    dend_27 { pt3dadd( 405.246, 452.638, 42.6664, 0.2858 ) }
    dend_27 { pt3dadd( 404.145, 452.856, 43.0175, 0.2954 ) }
    dend_27 { pt3dadd( 403.029, 453.047, 43.3681, 0.3124 ) }
    dend_27 { pt3dadd( 402.11, 453.233, 43.7438, 0.3482 ) }
    dend_27 { pt3dadd( 401.361, 452.928, 44.1636, 0.3952 ) }
    dend_27 { pt3dadd( 400.371, 453.385, 44.5936, 0.5748 ) }
    dend_27 { pt3dadd( 399.295, 453.558, 45.0321, 0.4594 ) }
    dend_27 { pt3dadd( 398.221, 453.62, 45.4748, 0.3634 ) }
    dend_27 { pt3dadd( 397.141, 453.546, 45.9074, 0.299 ) }
    dend_27 { pt3dadd( 396.05, 453.205, 46.3025, 0.3148 ) }
    dend_27 { pt3dadd( 394.952, 452.905, 46.6502, 0.3746 ) }
    dend_27 { pt3dadd( 393.81, 452.968, 46.9549, 0.336 ) }
    dend_27 { pt3dadd( 392.668, 453.031, 47.2198, 0.3038 ) }
    dend_27 { pt3dadd( 391.539, 453.05, 47.4628, 0.2818 ) }
    dend_27 { pt3dadd( 390.415, 453.05, 47.7047, 0.2876 ) }
    dend_27 { pt3dadd( 389.283, 453.09, 47.957, 0.2998 ) }
    dend_27 { pt3dadd( 388.145, 453.166, 48.2202, 0.316 ) }
    dend_27 { pt3dadd( 387.048, 453.414, 48.4932, 0.377 ) }
    dend_27 { pt3dadd( 385.993, 453.826, 48.7752, 0.3408 ) }
    dend_27 { pt3dadd( 385.053, 454.433, 49.0585, 0.3124 ) }
    dend_27 { pt3dadd( 384.049, 454.937, 49.3366, 0.2988 ) }
    dend_27 { pt3dadd( 382.982, 455.313, 49.6194, 0.3142 ) }
    dend_27 { pt3dadd( 381.888, 455.565, 49.9108, 0.3734 ) }
    dend_27 { pt3dadd( 380.95, 456.206, 50.2158, 0.3338 ) }
    dend_27 { pt3dadd( 379.892, 456.599, 50.5431, 0.3 ) }
    dend_27 { pt3dadd( 378.918, 457.087, 50.9183, 0.2746 ) }
    dend_27 { pt3dadd( 377.954, 457.589, 51.3548, 0.2746 ) }
    dend_27 { pt3dadd( 376.99, 458.062, 51.8546, 0.2746 ) }
    dend_27 { pt3dadd( 375.979, 458.514, 52.4051, 0.2746 ) }
    dend_27 { pt3dadd( 375.023, 459.064, 52.9883, 0.2746 ) }
    dend_27 { pt3dadd( 374.037, 459.577, 53.5839, 0.2746 ) }
    dend_27 { pt3dadd( 373.044, 460.107, 54.1691, 0.2746 ) }
    dend_27 { pt3dadd( 372.033, 460.616, 54.7263, 0.2746 ) }
    dend_27 { pt3dadd( 371.074, 461.178, 55.2535, 0.2746 ) }
    dend_27 { pt3dadd( 370.114, 461.737, 55.753, 0.2746 ) }
    dend_27 { pt3dadd( 369.154, 462.295, 56.2276, 0.2746 ) }
    dend_27 { pt3dadd( 368.133, 462.796, 56.67, 0.2746 ) }
    dend_27 { pt3dadd( 367.101, 463.289, 57.0769, 0.2746 ) }
    dend_27 { pt3dadd( 366.1, 463.827, 57.4518, 0.2746 ) }
    dend_27 { pt3dadd( 365.134, 464.416, 57.801, 0.2746 ) }
    dend_27 { pt3dadd( 364.167, 465.005, 58.1305, 0.2746 ) }
    dend_27 { pt3dadd( 363.192, 465.582, 58.4455, 0.2746 ) }
    dend_27 { pt3dadd( 362.213, 466.157, 58.7507, 0.2746 ) }
    dend_27 { pt3dadd( 361.224, 466.713, 59.0467, 0.2746 ) }
    dend_27 { pt3dadd( 360.195, 467.207, 59.3289, 0.2746 ) }
    dend_27 { pt3dadd( 359.167, 467.702, 59.5944, 0.2746 ) }
    dend_27 { pt3dadd( 358.148, 468.215, 59.8433, 0.2746 ) }
    dend_27 { pt3dadd( 357.159, 468.78, 60.0782, 0.2746 ) }
    dend_27 { pt3dadd( 356.17, 469.347, 60.303, 0.2746 ) }
    dend_27 { pt3dadd( 355.182, 469.919, 60.5209, 0.2746 ) }
    dend_27 { pt3dadd( 354.199, 470.501, 60.732, 0.2746 ) }
    dend_27 { pt3dadd( 353.214, 471.083, 60.9378, 0.2746 ) }
    dend_27 { pt3dadd( 352.217, 471.608, 61.1433, 0.2744 ) }
    dend_27 { pt3dadd( 351.298, 472.212, 61.36, 0.2744 ) }
    dend_27 { pt3dadd( 350.38, 472.816, 61.5885, 0.2742 ) }
    dend_27 { pt3dadd( 349.49, 473.486, 61.8153, 0.274 ) }
    dend_27 { pt3dadd( 348.641, 474.254, 62.0169, 0.2736 ) }
    dend_27 { pt3dadd( 347.793, 475.022, 62.1746, 0.2728 ) }
    dend_27 { pt3dadd( 346.911, 475.75, 62.2692, 0.2712 ) }
    dend_27 { pt3dadd( 346.001, 476.44, 62.3011, 0.2684 ) }
    dend_27 { pt3dadd( 345.098, 477.142, 62.2793, 0.2626 ) }
    dend_27 { pt3dadd( 344.308, 477.961, 62.2129, 0.2542 ) }
    dend_27 { pt3dadd( 343.517, 478.779, 62.1166, 0.2288 ) }
    dend_27 { pt3dadd( 342.736, 479.576, 61.7224, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 97/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 391.554, 413.522, 47.0254, 0.9058 ) }
    dend_20 { pt3dadd( 391.606, 412.221, 48.1606, 0.6008 ) }
    dend_20 { pt3dadd( 391.452, 411.261, 49.2979, 0.401 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_20 { pt3dadd( 390.919, 410.41, 50.4202, 0.3152 ) }
    dend_20 { pt3dadd( 390.205, 409.616, 51.5038, 0.3756 ) }
    dend_20 { pt3dadd( 389.462, 408.835, 52.5308, 0.3378 ) }
    dend_20 { pt3dadd( 388.722, 408.058, 53.492, 0.3074 ) }
    dend_20 { pt3dadd( 387.952, 407.292, 54.3766, 0.2882 ) }
    dend_20 { pt3dadd( 387.234, 406.492, 55.2026, 0.2996 ) }
    dend_20 { pt3dadd( 386.521, 405.693, 55.9689, 0.323 ) }
    dend_20 { pt3dadd( 385.607, 405.06, 56.6706, 0.354 ) }
    dend_20 { pt3dadd( 384.779, 404.336, 57.3096, 0.4728 ) }
    dend_20 { pt3dadd( 383.983, 403.552, 57.8698, 0.394 ) }
    dend_20 { pt3dadd( 383.453, 402.55, 58.3601, 0.327 ) }
    dend_20 { pt3dadd( 383.221, 401.472, 58.7978, 0.2776 ) }
    dend_20 { pt3dadd( 383.154, 400.354, 59.1996, 0.2802 ) }
    dend_20 { pt3dadd( 383.136, 399.214, 59.5736, 0.285 ) }
    dend_20 { pt3dadd( 383.298, 398.101, 59.934, 0.2938 ) }
    dend_20 { pt3dadd( 383.512, 396.996, 60.2904, 0.3112 ) }
    dend_20 { pt3dadd( 383.834, 395.903, 60.6404, 0.3382 ) }
    dend_20 { pt3dadd( 384.11, 394.801, 60.9829, 0.4128 ) }
    dend_20 { pt3dadd( 384.4, 393.703, 61.3141, 0.4326 ) }
    dend_20 { pt3dadd( 384.646, 392.596, 61.6344, 0.359 ) }
    dend_20 { pt3dadd( 384.854, 391.487, 61.95, 0.2994 ) }
    dend_20 { pt3dadd( 385.337, 390.464, 62.267, 0.2736 ) }
    dend_20 { pt3dadd( 385.78, 389.427, 62.5887, 0.2728 ) }
    dend_20 { pt3dadd( 386.203, 388.379, 62.9219, 0.2712 ) }
    dend_20 { pt3dadd( 386.646, 387.338, 63.2565, 0.2684 ) }
    dend_20 { pt3dadd( 387.138, 386.317, 63.5796, 0.2626 ) }
    dend_20 { pt3dadd( 387.626, 385.295, 63.8795, 0.2542 ) }
    dend_20 { pt3dadd( 388.119, 384.275, 64.146, 0.2288 ) }
    dend_20 { pt3dadd( 388.676, 383.284, 64.6822, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 29/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 391.554, 413.522, 47.0254, 0.9058 ) }
    dend_19 { pt3dadd( 390.551, 413.562, 47.1022, 0.4576 ) }
    dend_19 { pt3dadd( 389.673, 413.448, 48.377, 0.4894 ) }
    dend_19 { pt3dadd( 388.966, 412.879, 48.8916, 0.6178 ) }
    dend_19 { pt3dadd( 387.969, 412.581, 49.4516, 0.4916 ) }
    dend_19 { pt3dadd( 386.931, 412.291, 50.022, 0.4252 ) }
    dend_19 { pt3dadd( 386.127, 411.699, 50.559, 0.4028 ) }
    dend_19 { pt3dadd( 385.017, 411.445, 51.0294, 0.5602 ) }
    dend_19 { pt3dadd( 383.905, 411.569, 51.4223, 0.5712 ) }
    dend_19 { pt3dadd( 382.82, 411.665, 51.7656, 0.5824 ) }
    dend_19 { pt3dadd( 381.685, 411.634, 52.0612, 0.4186 ) }
    dend_19 { pt3dadd( 380.95, 410.834, 52.3191, 0.3256 ) }
    dend_19 { pt3dadd( 379.96, 410.336, 52.542, 0.2748 ) }
    dend_19 { pt3dadd( 378.962, 409.824, 52.7559, 0.275 ) }
    dend_19 { pt3dadd( 378.181, 409.39, 52.9841, 0.2754 ) }
    dend_19 { pt3dadd( 377.155, 409.354, 53.2224, 0.276 ) }
    dend_19 { pt3dadd( 376.248, 409.014, 53.4612, 0.2772 ) }
    dend_19 { pt3dadd( 375.316, 408.559, 53.6903, 0.2794 ) }
    dend_19 { pt3dadd( 374.211, 408.462, 53.8922, 0.2834 ) }
    dend_19 { pt3dadd( 373.262, 408.444, 54.0299, 0.291 ) }
    dend_19 { pt3dadd( 372.658, 407.671, 54.0943, 0.305 ) }
    dend_19 { pt3dadd( 371.619, 407.35, 54.1296, 0.3304 ) }
    dend_19 { pt3dadd( 370.564, 407.011, 54.1713, 0.3814 ) }
    dend_19 { pt3dadd( 369.633, 406.86, 54.5913, 0.4576 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 53/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 438.812, 413.976, 24.0796, 0.4684 ) }
    dend_15 { pt3dadd( 438.809, 413.657, 22.9278, 0.6864 ) }
    dend_15 { pt3dadd( 438.01, 412.939, 22.3151, 0.786 ) }
    dend_15 { pt3dadd( 436.957, 412.979, 22.0542, 0.753 ) }
    dend_15 { pt3dadd( 436.155, 413.666, 21.7362, 0.6962 ) }
    dend_15 { pt3dadd( 435.233, 413.763, 21.3666, 0.5704 ) }
    dend_15 { pt3dadd( 434.499, 412.906, 20.9693, 0.4364 ) }
    dend_15 { pt3dadd( 434.099, 411.884, 20.5604, 0.3928 ) }
    dend_15 { pt3dadd( 433.227, 411.628, 20.1157, 0.4616 ) }
    dend_15 { pt3dadd( 432.583, 410.747, 19.6448, 0.5484 ) }
    dend_15 { pt3dadd( 432.958, 409.718, 19.1684, 0.45 ) }
    dend_15 { pt3dadd( 433.804, 409.245, 18.6991, 0.383 ) }
    dend_15 { pt3dadd( 433.638, 408.407, 18.2157, 0.3846 ) }
    dend_15 { pt3dadd( 432.645, 407.861, 17.7168, 0.4632 ) }
    dend_15 { pt3dadd( 431.716, 407.267, 17.1977, 0.6988 ) }
    dend_15 { pt3dadd( 430.798, 407.113, 16.6291, 0.6988 ) }
    dend_15 { pt3dadd( 430.355, 406.193, 16.0127, 0.7612 ) }
    dend_15 { pt3dadd( 429.977, 405.149, 15.3673, 0.5744 ) }
    dend_15 { pt3dadd( 430.07, 404.14, 14.7105, 0.552 ) }
    dend_15 { pt3dadd( 429.241, 403.405, 14.0633, 0.5386 ) }
    dend_15 { pt3dadd( 428.274, 402.83, 13.4486, 0.6076 ) }
    dend_15 { pt3dadd( 427.655, 401.925, 12.8724, 0.5068 ) }
    dend_15 { pt3dadd( 427.492, 400.956, 12.3196, 0.5162 ) }
    dend_15 { pt3dadd( 428.13, 400.135, 11.7917, 0.496 ) }
    dend_15 { pt3dadd( 429.072, 399.768, 11.3107, 0.6418 ) }
    dend_15 { pt3dadd( 429.538, 400.661, 10.8619, 0.708 ) }
    dend_15 { pt3dadd( 430.235, 400.975, 10.4613, 0.678 ) }
    dend_15 { pt3dadd( 430.894, 400.491, 10.0925, 0.678 ) }
    dend_15 { pt3dadd( 431.602, 401.079, 9.7602, 0.6356 ) }
    dend_15 { pt3dadd( 432.082, 402.085, 9.4911, 0.5338 ) }
    dend_15 { pt3dadd( 432.655, 403.072, 9.0437, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 84/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 438.812, 413.976, 24.0796, 0.4684 ) }
    dend_14 { pt3dadd( 439.088, 413.406, 23.9243, 0.3784 ) }
    dend_14 { pt3dadd( 439.554, 412.367, 23.7775, 0.335 ) }
    dend_14 { pt3dadd( 439.913, 411.286, 23.6315, 0.3416 ) }
    dend_14 { pt3dadd( 440.336, 410.329, 23.4503, 0.388 ) }
    dend_14 { pt3dadd( 440.587, 409.297, 23.2221, 0.5378 ) }
    dend_14 { pt3dadd( 440.914, 408.24, 22.9618, 0.5052 ) }
    dend_14 { pt3dadd( 441.634, 407.391, 22.69, 0.5788 ) }
    dend_14 { pt3dadd( 442.145, 406.422, 22.4152, 0.522 ) }
    dend_14 { pt3dadd( 441.982, 405.316, 22.151, 0.4396 ) }
    dend_14 { pt3dadd( 442.234, 404.215, 21.9125, 0.405 ) }
    dend_14 { pt3dadd( 442.545, 403.711, 21.7, 0.4542 ) }
    dend_14 { pt3dadd( 443.37, 402.955, 21.5059, 0.681 ) }
    dend_14 { pt3dadd( 444.33, 402.365, 21.3144, 0.6714 ) }
    dend_14 { pt3dadd( 445.139, 401.888, 21.1102, 0.6832 ) }
    dend_14 { pt3dadd( 445.871, 401.013, 20.9029, 0.562 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_14 { pt3dadd( 446.605, 400.15, 20.6954, 0.5722 ) }
    dend_14 { pt3dadd( 447.292, 399.262, 20.4913, 0.8254 ) }
    dend_14 { pt3dadd( 447.733, 398.21, 20.3078, 0.8426 ) }
    dend_14 { pt3dadd( 447.822, 397.072, 20.1595, 0.7822 ) }
    dend_14 { pt3dadd( 448.307, 396.052, 20.0615, 0.6612 ) }
    dend_14 { pt3dadd( 449.133, 395.319, 19.9984, 0.4808 ) }
    dend_14 { pt3dadd( 449.933, 394.501, 19.9687, 0.3894 ) }
    dend_14 { pt3dadd( 450.698, 393.651, 19.9679, 0.4136 ) }
    dend_14 { pt3dadd( 451.25, 392.653, 19.9846, 0.434 ) }
    dend_14 { pt3dadd( 452.028, 391.885, 20.0186, 0.3614 ) }
    dend_14 { pt3dadd( 452.911, 391.258, 20.0638, 0.304 ) }
    dend_14 { pt3dadd( 453.937, 390.793, 20.1, 0.282 ) }
    dend_14 { pt3dadd( 454.646, 390.002, 20.0972, 0.2884 ) }
    dend_14 { pt3dadd( 454.756, 388.96, 20.024, 0.3002 ) }
    dend_14 { pt3dadd( 454.756, 388.177, 19.8394, 0.3218 ) }
    dend_14 { pt3dadd( 454.446, 387.155, 19.5669, 0.3634 ) }
    dend_14 { pt3dadd( 454.22, 386.118, 19.2659, 0.4322 ) }
    dend_14 { pt3dadd( 454.198, 385.07, 18.9519, 0.602 ) }
    dend_14 { pt3dadd( 454.287, 383.955, 18.6546, 0.7104 ) }
    dend_14 { pt3dadd( 454.345, 382.816, 18.4011, 0.5414 ) }
    dend_14 { pt3dadd( 455.153, 382.089, 18.2109, 0.4232 ) }
    dend_14 { pt3dadd( 456.074, 381.514, 18.0704, 0.399 ) }
    dend_14 { pt3dadd( 456.668, 380.601, 17.9451, 0.5524 ) }
    dend_14 { pt3dadd( 457.337, 379.706, 17.8187, 0.5618 ) }
    dend_14 { pt3dadd( 457.991, 378.781, 17.6942, 0.5404 ) }
    dend_14 { pt3dadd( 458.552, 377.872, 17.5825, 0.46 ) }
    dend_14 { pt3dadd( 458.971, 376.955, 17.4573, 0.509 ) }
    dend_14 { pt3dadd( 459.365, 376.338, 17.2913, 0.5542 ) }
    dend_14 { pt3dadd( 459.11, 375.647, 17.1326, 0.6298 ) }
    dend_14 { pt3dadd( 458.872, 374.819, 16.9623, 0.5814 ) }
    dend_14 { pt3dadd( 459.524, 373.971, 16.7889, 0.4924 ) }
    dend_14 { pt3dadd( 460.255, 373.161, 16.6299, 0.5518 ) }
    dend_14 { pt3dadd( 460.79, 372.22, 16.4775, 0.4888 ) }
    dend_14 { pt3dadd( 461.216, 371.199, 16.3159, 0.525 ) }
    dend_14 { pt3dadd( 461.579, 370.125, 16.1389, 0.5354 ) }
    dend_14 { pt3dadd( 461.921, 369.034, 15.9562, 0.6018 ) }
    dend_14 { pt3dadd( 462.188, 367.925, 15.7668, 0.4972 ) }
    dend_14 { pt3dadd( 462.386, 366.8, 15.5704, 0.4924 ) }
    dend_14 { pt3dadd( 462.665, 365.707, 15.3724, 0.4804 ) }
    dend_14 { pt3dadd( 463.236, 364.73, 15.1736, 0.473 ) }
    dend_14 { pt3dadd( 463.748, 363.729, 14.9737, 0.3878 ) }
    dend_14 { pt3dadd( 464.148, 362.687, 14.7743, 0.3476 ) }
    dend_14 { pt3dadd( 464.548, 361.631, 14.5881, 0.3884 ) }
    dend_14 { pt3dadd( 464.945, 360.558, 14.4327, 0.3614 ) }
    dend_14 { pt3dadd( 465.326, 359.486, 14.3221, 0.3518 ) }
    dend_14 { pt3dadd( 465.664, 358.42, 14.2703, 0.3664 ) }
    dend_14 { pt3dadd( 466.128, 357.414, 14.2722, 0.466 ) }
    dend_14 { pt3dadd( 466.633, 356.473, 14.295, 0.5278 ) }
    dend_14 { pt3dadd( 467.081, 355.466, 14.3229, 0.5504 ) }
    dend_14 { pt3dadd( 468.023, 354.973, 14.3609, 0.5826 ) }
    dend_14 { pt3dadd( 468.953, 354.309, 14.3895, 0.4608 ) }
    dend_14 { pt3dadd( 469.91, 353.681, 14.3959, 0.4292 ) }
    dend_14 { pt3dadd( 470.831, 353.004, 14.3764, 0.343 ) }
    dend_14 { pt3dadd( 471.685, 352.245, 14.3321, 0.3166 ) }
    dend_14 { pt3dadd( 472.164, 351.238, 14.2523, 0.3066 ) }
    dend_14 { pt3dadd( 472.383, 350.168, 14.1271, 0.3288 ) }
    dend_14 { pt3dadd( 472.503, 349.061, 13.9775, 0.4 ) }
    dend_14 { pt3dadd( 472.389, 347.922, 13.8184, 0.3854 ) }
    dend_14 { pt3dadd( 472.421, 346.799, 13.6597, 0.385 ) }
    dend_14 { pt3dadd( 472.762, 345.708, 13.5075, 0.4832 ) }
    dend_14 { pt3dadd( 473.074, 344.611, 13.3654, 0.4134 ) }
    dend_14 { pt3dadd( 473.074, 343.468, 13.2296, 0.3638 ) }
    dend_14 { pt3dadd( 473.306, 342.443, 13.0764, 0.3404 ) }
    dend_14 { pt3dadd( 474.106, 341.626, 12.9128, 0.423 ) }
    dend_14 { pt3dadd( 474.897, 340.801, 12.7478, 0.4216 ) }
    dend_14 { pt3dadd( 475.625, 339.919, 12.5876, 0.484 ) }
    dend_14 { pt3dadd( 476.34, 339.026, 12.4359, 0.5114 ) }
    dend_14 { pt3dadd( 476.706, 337.953, 12.2954, 0.534 ) }
    dend_14 { pt3dadd( 476.865, 336.821, 12.1661, 0.484 ) }
    dend_14 { pt3dadd( 477.55, 335.974, 12.0319, 0.608 ) }
    dend_14 { pt3dadd( 478.384, 335.281, 11.8804, 0.4734 ) }
    dend_14 { pt3dadd( 479.078, 334.374, 11.7253, 0.3906 ) }
    dend_14 { pt3dadd( 479.735, 333.438, 11.5787, 0.3426 ) }
    dend_14 { pt3dadd( 479.98, 332.39, 11.4371, 0.4286 ) }
    dend_14 { pt3dadd( 480.44, 331.381, 11.3077, 0.4254 ) }
    dend_14 { pt3dadd( 481.216, 330.677, 11.224, 0.522 ) }
    dend_14 { pt3dadd( 482.182, 330.101, 11.1848, 0.433 ) }
    dend_14 { pt3dadd( 482.634, 329.059, 11.1745, 0.4248 ) }
    dend_14 { pt3dadd( 483.059, 327.997, 11.1788, 0.3348 ) }
    dend_14 { pt3dadd( 483.734, 327.086, 11.1857, 0.3016 ) }
    dend_14 { pt3dadd( 484.476, 326.216, 11.1811, 0.2778 ) }
    dend_14 { pt3dadd( 485.034, 325.223, 11.1514, 0.2804 ) }
    dend_14 { pt3dadd( 485.546, 324.2, 11.092, 0.2856 ) }
    dend_14 { pt3dadd( 485.839, 323.104, 10.9808, 0.2944 ) }
    dend_14 { pt3dadd( 486.19, 322.103, 10.8434, 0.3136 ) }
    dend_14 { pt3dadd( 486.347, 320.977, 10.6801, 0.3362 ) }
    dend_14 { pt3dadd( 486.684, 319.993, 10.4743, 0.4406 ) }
    dend_14 { pt3dadd( 486.606, 319.193, 10.2073, 0.3304 ) }
    dend_14 { pt3dadd( 486.356, 318.158, 9.135, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 89/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 436.512, 450.796, 26.3174, 0.8838 ) }
    dend_11 { pt3dadd( 436.665, 451.276, 26.3766, 0.7766 ) }
    dend_11 { pt3dadd( 436.929, 452.358, 26.4467, 0.591 ) }
    dend_11 { pt3dadd( 437.033, 453.453, 26.5209, 0.6396 ) }
    dend_11 { pt3dadd( 436.964, 454.556, 26.5933, 0.655 ) }
    dend_11 { pt3dadd( 437.37, 455.568, 26.6628, 0.5882 ) }
    dend_11 { pt3dadd( 437.752, 456.494, 26.7041, 0.4694 ) }
    dend_11 { pt3dadd( 438.383, 457.425, 26.7328, 0.4534 ) }
    dend_11 { pt3dadd( 439.382, 457.661, 26.7801, 0.577 ) }
    dend_11 { pt3dadd( 440.193, 458.148, 26.8608, 0.7484 ) }
    dend_11 { pt3dadd( 440.978, 458.896, 26.9579, 0.8886 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 441.835, 459.592, 27.0835, 0.867 ) }
    dend_11 { pt3dadd( 442.628, 460.397, 27.2334, 0.8198 ) }
    dend_11 { pt3dadd( 443.354, 461.255, 27.4031, 0.7682 ) }
    dend_11 { pt3dadd( 444.12, 462.092, 27.5826, 0.7254 ) }
    dend_11 { pt3dadd( 444.838, 462.955, 27.7749, 0.6204 ) }
    dend_11 { pt3dadd( 445.637, 463.764, 27.9742, 0.5484 ) }
    dend_11 { pt3dadd( 446.46, 464.559, 28.1686, 0.506 ) }
    dend_11 { pt3dadd( 447.343, 465.285, 28.3528, 0.4428 ) }
    dend_11 { pt3dadd( 448.177, 465.944, 28.5432, 0.4804 ) }
    dend_11 { pt3dadd( 448.924, 466.805, 28.7302, 0.484 ) }
    dend_11 { pt3dadd( 449.607, 467.69, 28.8943, 0.584 ) }
    dend_11 { pt3dadd( 450.205, 468.657, 29.0427, 0.774 ) }
    dend_11 { pt3dadd( 450.685, 469.683, 29.1824, 0.6458 ) }
    dend_11 { pt3dadd( 451.193, 470.69, 29.3149, 0.4532 ) }
    dend_11 { pt3dadd( 451.754, 471.686, 29.4314, 0.3338 ) }
    dend_11 { pt3dadd( 452.235, 472.719, 29.5341, 0.3322 ) }
    dend_11 { pt3dadd( 452.589, 473.805, 29.6187, 0.4068 ) }
    dend_11 { pt3dadd( 452.96, 474.881, 29.6814, 0.3964 ) }
    dend_11 { pt3dadd( 453.542, 475.863, 29.7242, 0.4126 ) }
    dend_11 { pt3dadd( 454.055, 476.874, 29.7472, 0.4994 ) }
    dend_11 { pt3dadd( 454.287, 477.977, 29.7531, 0.6144 ) }
    dend_11 { pt3dadd( 454.287, 479.114, 29.7492, 0.5922 ) }
    dend_11 { pt3dadd( 454.325, 480.237, 29.7486, 0.5492 ) }
    dend_11 { pt3dadd( 454.663, 481.234, 29.7422, 0.479 ) }
    dend_11 { pt3dadd( 455.143, 481.959, 29.7696, 0.5312 ) }
    dend_11 { pt3dadd( 455.551, 482.844, 29.8522, 0.6572 ) }
    dend_11 { pt3dadd( 455.989, 483.87, 29.9905, 0.5222 ) }
    dend_11 { pt3dadd( 456.555, 484.859, 30.1706, 0.4584 ) }
    dend_11 { pt3dadd( 456.421, 485.976, 30.3909, 0.35 ) }
    dend_11 { pt3dadd( 456.382, 487.098, 30.6468, 0.3298 ) }
    dend_11 { pt3dadd( 456.452, 488.223, 30.9226, 0.3304 ) }
    dend_11 { pt3dadd( 456.528, 489.348, 31.208, 0.3748 ) }
    dend_11 { pt3dadd( 456.736, 490.452, 31.4933, 0.4766 ) }
    dend_11 { pt3dadd( 457.243, 491.386, 31.7696, 0.5712 ) }
    dend_11 { pt3dadd( 457.49, 492.386, 32.0421, 0.5174 ) }
    dend_11 { pt3dadd( 457.594, 493.389, 32.2795, 0.3848 ) }
    dend_11 { pt3dadd( 457.971, 494.385, 32.5013, 0.3 ) }
    dend_11 { pt3dadd( 458.427, 495.397, 32.7368, 0.2746 ) }
    dend_11 { pt3dadd( 458.95, 496.394, 33.0, 0.2746 ) }
    dend_11 { pt3dadd( 459.38, 497.444, 33.2993, 0.2746 ) }
    dend_11 { pt3dadd( 459.712, 498.515, 33.6431, 0.2746 ) }
    dend_11 { pt3dadd( 459.949, 499.593, 34.0396, 0.2746 ) }
    dend_11 { pt3dadd( 460.23, 500.693, 34.47, 0.2746 ) }
    dend_11 { pt3dadd( 460.449, 501.781, 34.923, 0.2746 ) }
    dend_11 { pt3dadd( 460.562, 502.89, 35.3878, 0.2746 ) }
    dend_11 { pt3dadd( 460.641, 504.009, 35.8498, 0.2746 ) }
    dend_11 { pt3dadd( 460.832, 505.097, 36.3006, 0.2746 ) }
    dend_11 { pt3dadd( 461.097, 506.182, 36.7284, 0.2746 ) }
    dend_11 { pt3dadd( 461.15, 507.278, 37.1232, 0.2746 ) }
    dend_11 { pt3dadd( 461.04, 508.389, 37.473, 0.2746 ) }
    dend_11 { pt3dadd( 461.291, 509.506, 37.7664, 0.2746 ) }
    dend_11 { pt3dadd( 461.619, 510.6, 38.0038, 0.2746 ) }
    dend_11 { pt3dadd( 462.057, 511.651, 38.1942, 0.2748 ) }
    dend_11 { pt3dadd( 462.619, 512.647, 38.3519, 0.275 ) }
    dend_11 { pt3dadd( 463.205, 513.609, 38.484, 0.2752 ) }
    dend_11 { pt3dadd( 463.773, 514.596, 38.6114, 0.2758 ) }
    dend_11 { pt3dadd( 464.354, 515.518, 38.7682, 0.2768 ) }
    dend_11 { pt3dadd( 464.881, 516.467, 38.974, 0.2786 ) }
    dend_11 { pt3dadd( 465.342, 517.507, 39.2266, 0.2822 ) }
    dend_11 { pt3dadd( 465.855, 518.524, 39.5164, 0.2888 ) }
    dend_11 { pt3dadd( 466.502, 519.458, 39.8367, 0.3004 ) }
    dend_11 { pt3dadd( 467.117, 520.419, 40.1708, 0.3248 ) }
    dend_11 { pt3dadd( 467.797, 521.289, 40.5112, 0.357 ) }
    dend_11 { pt3dadd( 468.559, 522.056, 40.8618, 0.4786 ) }
    dend_11 { pt3dadd( 469.277, 522.92, 41.2168, 0.405 ) }
    dend_11 { pt3dadd( 470.003, 523.796, 41.5652, 0.3472 ) }
    dend_11 { pt3dadd( 470.798, 524.613, 41.8942, 0.3158 ) }
    dend_11 { pt3dadd( 471.58, 525.445, 42.2083, 0.3464 ) }
    dend_11 { pt3dadd( 472.295, 526.337, 42.4978, 0.4294 ) }
    dend_11 { pt3dadd( 473.105, 527.144, 42.7591, 0.4576 ) }
    dend_11 { pt3dadd( 473.909, 527.947, 42.9979, 0.4322 ) }
    dend_11 { pt3dadd( 474.727, 528.708, 43.2253, 0.305 ) }
    dend_11 { pt3dadd( 475.571, 529.408, 43.9107, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 73/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 436.512, 450.796, 26.3174, 0.8838 ) }
    dend_8 { pt3dadd( 437.246, 451.753, 25.6152, 0.2288 ) }
    dend_8 { pt3dadd( 438.148, 452.452, 25.2654, 0.3474 ) }
    dend_8 { pt3dadd( 438.779, 453.4, 25.1176, 0.3988 ) }
    dend_8 { pt3dadd( 439.558, 454.153, 24.9374, 0.5578 ) }
    dend_8 { pt3dadd( 440.507, 454.721, 24.7206, 0.543 ) }
    dend_8 { pt3dadd( 441.287, 455.549, 24.4837, 0.6448 ) }
    dend_8 { pt3dadd( 442.046, 456.369, 24.245, 0.6646 ) }
    dend_8 { pt3dadd( 442.806, 457.042, 23.9906, 0.607 ) }
    dend_8 { pt3dadd( 443.617, 457.682, 23.7243, 0.4998 ) }
    dend_8 { pt3dadd( 444.562, 457.927, 23.4478, 0.5306 ) }
    dend_8 { pt3dadd( 445.653, 458.234, 23.1853, 0.6188 ) }
    dend_8 { pt3dadd( 446.582, 458.872, 22.9481, 0.6314 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 86/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 432.571, 449.397, 23.4126, 0.7228 ) }
    dend_6 { pt3dadd( 433.455, 450.595, 21.4052, 0.2288 ) }
    dend_6 { pt3dadd( 433.664, 451.405, 19.758, 0.3304 ) }
    dend_6 { pt3dadd( 434.241, 452.215, 19.0637, 0.3796 ) }
    dend_6 { pt3dadd( 435.059, 452.08, 18.1904, 0.463 ) }
    dend_6 { pt3dadd( 435.628, 451.342, 17.1408, 0.6538 ) }
    dend_6 { pt3dadd( 436.159, 450.664, 15.9837, 0.8332 ) }
    dend_6 { pt3dadd( 436.629, 449.797, 14.8058, 0.6384 ) }
    dend_6 { pt3dadd( 437.072, 448.852, 13.6912, 0.5508 ) }
    dend_6 { pt3dadd( 437.402, 447.846, 12.6904, 0.4322 ) }
    dend_6 { pt3dadd( 437.782, 446.843, 10.5484, 0.6864 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 97/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 432.571, 449.397, 23.4126, 0.7228 ) }
    dend_5 { pt3dadd( 431.69, 450.557, 23.0966, 0.5926 ) }
    dend_5 { pt3dadd( 431.624, 451.669, 22.8092, 0.609 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( 431.745, 452.796, 22.5588, 0.5318 ) }
    dend_5 { pt3dadd( 431.364, 453.716, 22.3509, 0.453 ) }
    dend_5 { pt3dadd( 430.827, 454.588, 22.1661, 0.4528 ) }
    dend_5 { pt3dadd( 430.182, 455.423, 21.9857, 0.431 ) }
    dend_5 { pt3dadd( 429.479, 456.292, 21.8241, 0.4948 ) }
    dend_5 { pt3dadd( 428.681, 457.03, 21.6913, 0.564 ) }
    dend_5 { pt3dadd( 427.856, 457.645, 21.5671, 0.4734 ) }
    dend_5 { pt3dadd( 426.896, 457.988, 21.4668, 0.452 ) }
    dend_5 { pt3dadd( 426.027, 458.64, 21.4018, 0.3876 ) }
    dend_5 { pt3dadd( 425.217, 459.444, 21.3761, 0.389 ) }
    dend_5 { pt3dadd( 424.639, 460.386, 21.3905, 0.4908 ) }
    dend_5 { pt3dadd( 423.766, 461.108, 21.4316, 0.4276 ) }
    dend_5 { pt3dadd( 422.907, 461.854, 21.491, 0.3888 ) }
    dend_5 { pt3dadd( 422.099, 462.662, 21.5471, 0.3938 ) }
    dend_5 { pt3dadd( 421.565, 463.561, 21.5787, 0.4868 ) }
    dend_5 { pt3dadd( 421.069, 464.399, 21.5949, 0.7112 ) }
    dend_5 { pt3dadd( 420.27, 465.205, 21.5962, 0.874 ) }
    dend_5 { pt3dadd( 419.564, 466.096, 21.5764, 1.0332 ) }
    dend_5 { pt3dadd( 418.749, 466.887, 21.5358, 1.1052 ) }
    dend_5 { pt3dadd( 418.025, 467.735, 21.4697, 1.179 ) }
    dend_5 { pt3dadd( 417.186, 468.47, 21.3861, 1.1466 ) }
    dend_5 { pt3dadd( 416.336, 469.164, 21.3073, 0.9942 ) }
    dend_5 { pt3dadd( 415.525, 469.753, 21.2186, 0.7018 ) }
    dend_5 { pt3dadd( 415.169, 470.799, 21.1487, 0.6646 ) }
    dend_5 { pt3dadd( 415.353, 471.675, 21.1226, 0.6614 ) }
    dend_5 { pt3dadd( 415.154, 472.575, 21.1308, 0.5654 ) }
    dend_5 { pt3dadd( 414.768, 473.037, 21.1219, 0.5956 ) }
    dend_5 { pt3dadd( 414.239, 473.872, 21.1168, 0.5554 ) }
    dend_5 { pt3dadd( 413.723, 474.848, 21.1138, 0.4914 ) }
    dend_5 { pt3dadd( 412.926, 475.608, 21.095, 0.55 ) }
    dend_5 { pt3dadd( 412.322, 476.502, 21.057, 0.4854 ) }
    dend_5 { pt3dadd( 411.765, 477.49, 21.035, 0.5188 ) }
    dend_5 { pt3dadd( 411.177, 478.46, 21.0516, 0.524 ) }
    dend_5 { pt3dadd( 410.602, 479.421, 21.1104, 0.5798 ) }
    dend_5 { pt3dadd( 409.875, 480.231, 21.2175, 0.4604 ) }
    dend_5 { pt3dadd( 409.078, 480.911, 21.3528, 0.4044 ) }
    dend_5 { pt3dadd( 408.972, 482.031, 21.4883, 0.4128 ) }
    dend_5 { pt3dadd( 408.704, 483.126, 21.6035, 0.5712 ) }
    dend_5 { pt3dadd( 408.105, 484.001, 21.6798, 0.6288 ) }
    dend_5 { pt3dadd( 407.692, 485.057, 21.7305, 0.5088 ) }
    dend_5 { pt3dadd( 407.328, 486.12, 21.7646, 0.472 ) }
    dend_5 { pt3dadd( 406.939, 487.172, 21.7901, 0.418 ) }
    dend_5 { pt3dadd( 406.299, 488.108, 21.8238, 0.4772 ) }
    dend_5 { pt3dadd( 405.557, 488.975, 21.8754, 0.5006 ) }
    dend_5 { pt3dadd( 405.025, 489.963, 21.9541, 0.5052 ) }
    dend_5 { pt3dadd( 404.674, 491.025, 22.065, 0.472 ) }
    dend_5 { pt3dadd( 404.337, 492.097, 22.2047, 0.386 ) }
    dend_5 { pt3dadd( 403.995, 493.177, 22.3607, 0.3444 ) }
    dend_5 { pt3dadd( 403.666, 494.27, 22.51, 0.3822 ) }
    dend_5 { pt3dadd( 403.225, 495.314, 22.6343, 0.3504 ) }
    dend_5 { pt3dadd( 402.728, 496.342, 22.7228, 0.3302 ) }
    dend_5 { pt3dadd( 402.19, 497.34, 22.7724, 0.3326 ) }
    dend_5 { pt3dadd( 401.545, 498.273, 22.7835, 0.3718 ) }
    dend_5 { pt3dadd( 401.234, 499.32, 22.7604, 0.5056 ) }
    dend_5 { pt3dadd( 401.048, 500.426, 22.7213, 0.4572 ) }
    dend_5 { pt3dadd( 400.5, 501.413, 22.6895, 0.4332 ) }
    dend_5 { pt3dadd( 399.928, 502.39, 22.6767, 0.5264 ) }
    dend_5 { pt3dadd( 399.443, 503.423, 22.6903, 0.4892 ) }
    dend_5 { pt3dadd( 399.131, 504.461, 22.7258, 0.5242 ) }
    dend_5 { pt3dadd( 399.049, 505.445, 22.7969, 0.5418 ) }
    dend_5 { pt3dadd( 398.344, 506.336, 22.9011, 0.5764 ) }
    dend_5 { pt3dadd( 397.818, 507.323, 23.0411, 0.6302 ) }
    dend_5 { pt3dadd( 397.373, 508.352, 23.22, 0.5508 ) }
    dend_5 { pt3dadd( 396.682, 509.23, 23.4155, 0.5872 ) }
    dend_5 { pt3dadd( 395.826, 509.968, 23.6325, 0.6784 ) }
    dend_5 { pt3dadd( 394.872, 510.58, 23.8649, 0.7324 ) }
    dend_5 { pt3dadd( 394.149, 511.465, 24.1072, 0.7046 ) }
    dend_5 { pt3dadd( 393.645, 512.344, 24.3711, 0.5874 ) }
    dend_5 { pt3dadd( 393.485, 513.396, 24.6449, 0.4614 ) }
    dend_5 { pt3dadd( 393.002, 514.373, 24.9384, 0.4696 ) }
    dend_5 { pt3dadd( 392.575, 515.389, 25.2445, 0.4556 ) }
    dend_5 { pt3dadd( 392.143, 516.404, 25.5527, 0.5714 ) }
    dend_5 { pt3dadd( 391.351, 517.228, 25.8323, 0.5562 ) }
    dend_5 { pt3dadd( 390.647, 518.121, 26.0648, 0.5002 ) }
    dend_5 { pt3dadd( 390.038, 519.088, 26.2465, 0.5314 ) }
    dend_5 { pt3dadd( 389.349, 519.996, 26.378, 0.6202 ) }
    dend_5 { pt3dadd( 388.579, 520.843, 26.4688, 0.634 ) }
    dend_5 { pt3dadd( 387.863, 521.712, 26.5391, 0.4762 ) }
    dend_5 { pt3dadd( 387.2, 522.606, 26.6133, 0.3872 ) }
    dend_5 { pt3dadd( 386.657, 523.577, 26.6836, 0.3784 ) }
    dend_5 { pt3dadd( 386.158, 524.574, 26.7383, 0.5192 ) }
    dend_5 { pt3dadd( 385.464, 525.477, 26.7851, 0.4748 ) }
    dend_5 { pt3dadd( 384.749, 526.37, 26.8306, 0.5038 ) }
    dend_5 { pt3dadd( 383.81, 526.964, 26.8907, 0.473 ) }
    dend_5 { pt3dadd( 382.835, 527.503, 26.9735, 0.5984 ) }
    dend_5 { pt3dadd( 381.743, 527.845, 27.0722, 0.6318 ) }
    dend_5 { pt3dadd( 380.651, 528.186, 27.1781, 0.5156 ) }
    dend_5 { pt3dadd( 379.576, 528.575, 27.28, 0.478 ) }
    dend_5 { pt3dadd( 378.503, 528.972, 27.3699, 0.4602 ) }
    dend_5 { pt3dadd( 377.622, 529.664, 27.4433, 0.405 ) }
    dend_5 { pt3dadd( 376.826, 530.485, 27.5043, 0.4102 ) }
    dend_5 { pt3dadd( 375.93, 531.19, 27.5639, 0.355 ) }
    dend_5 { pt3dadd( 374.993, 531.847, 27.6336, 0.3388 ) }
    dend_5 { pt3dadd( 374.165, 532.542, 27.708, 0.3482 ) }
    dend_5 { pt3dadd( 373.395, 533.356, 27.7984, 0.4026 ) }
    dend_5 { pt3dadd( 372.434, 533.834, 27.934, 0.5526 ) }
    dend_5 { pt3dadd( 371.663, 534.276, 28.1414, 0.5934 ) }
    dend_5 { pt3dadd( 370.723, 534.874, 28.4054, 0.4486 ) }
    dend_5 { pt3dadd( 369.851, 535.566, 28.7034, 0.3336 ) }
    dend_5 { pt3dadd( 368.972, 536.267, 28.9982, 0.291 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_5 { pt3dadd( 367.961, 536.757, 29.2547, 0.2994 ) }
    dend_5 { pt3dadd( 367.133, 537.532, 29.4619, 0.3474 ) }
    dend_5 { pt3dadd( 366.371, 538.386, 29.6128, 0.2796 ) }
    dend_5 { pt3dadd( 365.615, 539.243, 29.8393, 0.2288 ) }
    // Section: apic_24, id: apic_24, parent: apic_20 (entry count 4/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 399.801, 439.47, 22.7465, 0.759 ) }
    apic_24 { pt3dadd( 398.917, 440.831, 23.711, 0.2288 ) }
    apic_24 { pt3dadd( 398.747, 441.949, 24.2408, 0.5984 ) }
    apic_24 { pt3dadd( 398.173, 442.86, 24.475, 0.8142 ) }
    apic_24 { pt3dadd( 397.537, 443.707, 24.745, 0.8844 ) }
    apic_24 { pt3dadd( 396.861, 444.543, 25.0434, 0.7846 ) }
    apic_24 { pt3dadd( 396.378, 445.44, 25.3713, 0.5728 ) }
    apic_24 { pt3dadd( 395.968, 446.486, 25.7097, 0.5378 ) }
    apic_24 { pt3dadd( 395.29, 447.388, 26.0351, 0.5664 ) }
    apic_24 { pt3dadd( 394.494, 448.209, 26.3383, 0.6252 ) }
    apic_24 { pt3dadd( 393.691, 449.02, 26.6209, 0.7042 ) }
    apic_24 { pt3dadd( 392.778, 449.647, 26.8953, 0.7692 ) }
    apic_24 { pt3dadd( 392.162, 450.491, 27.1662, 0.5986 ) }
    apic_24 { pt3dadd( 392.015, 451.61, 27.4315, 0.55 ) }
    apic_24 { pt3dadd( 392.015, 452.754, 27.6939, 0.5348 ) }
    apic_24 { pt3dadd( 391.874, 453.873, 27.9611, 0.5996 ) }
    apic_24 { pt3dadd( 391.658, 454.978, 28.2388, 0.498 ) }
    apic_24 { pt3dadd( 391.533, 456.105, 28.523, 0.4702 ) }
    apic_24 { pt3dadd( 391.337, 457.215, 28.8109, 0.555 ) }
    apic_24 { pt3dadd( 390.769, 458.194, 29.1038, 0.7368 ) }
    apic_24 { pt3dadd( 389.849, 458.695, 29.4168, 0.7258 ) }
    apic_24 { pt3dadd( 389.155, 459.508, 29.7545, 0.5642 ) }
    apic_24 { pt3dadd( 388.809, 460.55, 30.1162, 0.4926 ) }
    apic_24 { pt3dadd( 388.809, 461.682, 30.5049, 0.6254 ) }
    apic_24 { pt3dadd( 388.404, 462.681, 30.9327, 0.7264 ) }
    apic_24 { pt3dadd( 387.765, 463.585, 31.3928, 0.7046 ) }
    apic_24 { pt3dadd( 386.83, 464.134, 31.8856, 0.763 ) }
    apic_24 { pt3dadd( 385.977, 464.861, 32.3985, 0.6206 ) }
    apic_24 { pt3dadd( 385.29, 465.73, 32.9288, 0.6572 ) }
    apic_24 { pt3dadd( 384.857, 466.694, 33.4877, 0.6404 ) }
    apic_24 { pt3dadd( 384.687, 467.731, 34.076, 0.5612 ) }
    apic_24 { pt3dadd( 384.382, 468.768, 34.687, 0.4186 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 36/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 399.801, 439.47, 22.7465, 0.759 ) }
    apic_21 { pt3dadd( 399.996, 440.066, 22.2705, 0.769 ) }
    apic_21 { pt3dadd( 400.465, 441.049, 21.7443, 0.635 ) }
    apic_21 { pt3dadd( 400.082, 442.091, 21.2059, 0.6686 ) }
    apic_21 { pt3dadd( 399.653, 443.138, 20.6897, 0.7342 ) }
    apic_21 { pt3dadd( 399.634, 444.224, 20.2193, 0.6114 ) }
    apic_21 { pt3dadd( 400.038, 444.675, 19.7868, 0.4272 ) }
    apic_21 { pt3dadd( 399.824, 445.454, 19.394, 0.3314 ) }
    apic_21 { pt3dadd( 399.818, 446.287, 19.0969, 0.3334 ) }
    apic_21 { pt3dadd( 399.818, 447.148, 18.9321, 0.3806 ) }
    apic_21 { pt3dadd( 399.903, 448.066, 18.868, 0.4862 ) }
    // Section: apic_17, id: apic_17, parent: apic_1 (entry count 47/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 403.871, 417.547, 24.3872, 0.9154 ) }
    apic_17 { pt3dadd( 403.948, 416.862, 23.1252, 0.6864 ) }
    apic_17 { pt3dadd( 404.239, 415.789, 23.7899, 0.859 ) }
    apic_17 { pt3dadd( 403.966, 414.753, 24.0501, 0.7326 ) }
    apic_17 { pt3dadd( 403.921, 413.818, 24.3758, 0.7286 ) }
    apic_17 { pt3dadd( 403.957, 412.683, 24.7462, 0.5182 ) }
    apic_17 { pt3dadd( 404.015, 411.541, 25.1382, 0.4274 ) }
    apic_17 { pt3dadd( 404.073, 410.399, 25.5335, 0.408 ) }
    apic_17 { pt3dadd( 404.559, 409.375, 25.9263, 0.5626 ) }
    apic_17 { pt3dadd( 404.858, 408.385, 26.3317, 0.6118 ) }
    apic_17 { pt3dadd( 404.991, 407.425, 26.7598, 0.4826 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 58/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 403.871, 417.547, 24.3872, 0.9154 ) }
    apic_2 { pt3dadd( 402.631, 416.851, 24.2446, 0.8186 ) }
    apic_2 { pt3dadd( 401.611, 416.568, 24.116, 0.7484 ) }
    apic_2 { pt3dadd( 400.728, 416.284, 24.0403, 0.7742 ) }
    apic_2 { pt3dadd( 399.771, 415.675, 24.0105, 0.9816 ) }
    apic_2 { pt3dadd( 398.884, 415.055, 23.998, 1.0492 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 446.582, 458.872, 22.9481, 0.6314 ) }
    dend_10 { pt3dadd( 447.199, 459.025, 22.7516, 0.4714 ) }
    dend_10 { pt3dadd( 448.25, 459.431, 22.6098, 0.3782 ) }
    dend_10 { pt3dadd( 449.281, 459.91, 22.5395, 0.362 ) }
    dend_10 { pt3dadd( 450.368, 460.251, 22.5461, 0.488 ) }
    dend_10 { pt3dadd( 451.483, 460.457, 22.628, 0.4218 ) }
    dend_10 { pt3dadd( 452.523, 460.908, 22.7747, 0.3806 ) }
    dend_10 { pt3dadd( 453.632, 461.13, 22.9731, 0.3664 ) }
    dend_10 { pt3dadd( 454.683, 461.53, 23.2094, 0.4956 ) }
    dend_10 { pt3dadd( 455.702, 461.944, 23.4763, 0.4376 ) }
    dend_10 { pt3dadd( 456.759, 462.234, 23.7586, 0.402 ) }
    dend_10 { pt3dadd( 457.884, 462.301, 24.0426, 0.4442 ) }
    dend_10 { pt3dadd( 459.01, 462.359, 24.3154, 0.4556 ) }
    dend_10 { pt3dadd( 460.151, 462.359, 24.5545, 0.5716 ) }
    dend_10 { pt3dadd( 461.293, 462.359, 24.7484, 0.556 ) }
    dend_10 { pt3dadd( 462.429, 462.483, 24.9016, 0.5012 ) }
    dend_10 { pt3dadd( 463.564, 462.608, 25.0235, 0.5258 ) }
    dend_10 { pt3dadd( 464.62, 462.981, 25.124, 0.646 ) }
    dend_10 { pt3dadd( 465.612, 463.551, 25.2127, 0.5064 ) }
    dend_10 { pt3dadd( 466.676, 463.906, 25.3, 0.4044 ) }
    dend_10 { pt3dadd( 467.81, 464.046, 25.3908, 0.3708 ) }
    dend_10 { pt3dadd( 468.946, 464.188, 25.486, 0.4678 ) }
    dend_10 { pt3dadd( 470.04, 464.436, 25.5965, 0.561 ) }
    dend_10 { pt3dadd( 471.133, 464.685, 25.7255, 0.4678 ) }
    dend_10 { pt3dadd( 472.25, 464.923, 25.8582, 0.4422 ) }
    dend_10 { pt3dadd( 473.37, 465.16, 25.9826, 0.3668 ) }
    dend_10 { pt3dadd( 474.424, 465.573, 26.0905, 0.3628 ) }
    dend_10 { pt3dadd( 475.433, 466.114, 26.1769, 0.3816 ) }
    dend_10 { pt3dadd( 476.335, 466.788, 26.2382, 0.5188 ) }
    dend_10 { pt3dadd( 477.033, 467.682, 26.2721, 0.5048 ) }
    dend_10 { pt3dadd( 477.913, 468.38, 26.2989, 0.4094 ) }
    dend_10 { pt3dadd( 478.785, 469.098, 26.3251, 0.3406 ) }
    dend_10 { pt3dadd( 479.802, 469.556, 26.3478, 0.3754 ) }
    dend_10 { pt3dadd( 480.943, 469.633, 26.3608, 0.3376 ) }
    dend_10 { pt3dadd( 481.831, 469.992, 26.3357, 0.3068 ) }
    dend_10 { pt3dadd( 482.821, 470.459, 26.2886, 0.287 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_10 { pt3dadd( 483.601, 471.276, 26.2319, 0.2988 ) }
    dend_10 { pt3dadd( 484.532, 471.941, 26.1774, 0.3142 ) }
    dend_10 { pt3dadd( 485.445, 472.629, 26.1376, 0.3734 ) }
    dend_10 { pt3dadd( 486.384, 473.281, 26.122, 0.3338 ) }
    dend_10 { pt3dadd( 487.352, 473.889, 26.1348, 0.3 ) }
    dend_10 { pt3dadd( 488.341, 474.466, 26.1664, 0.2746 ) }
    dend_10 { pt3dadd( 489.338, 474.999, 26.2167, 0.2746 ) }
    dend_10 { pt3dadd( 490.333, 475.549, 26.2756, 0.2746 ) }
    dend_10 { pt3dadd( 491.324, 476.118, 26.3319, 0.2746 ) }
    dend_10 { pt3dadd( 492.309, 476.7, 26.3829, 0.2746 ) }
    dend_10 { pt3dadd( 493.271, 477.31, 26.4237, 0.2746 ) }
    dend_10 { pt3dadd( 494.244, 477.907, 26.4588, 0.2746 ) }
    dend_10 { pt3dadd( 495.225, 478.491, 26.4968, 0.2746 ) }
    dend_10 { pt3dadd( 496.201, 479.083, 26.5422, 0.2746 ) }
    dend_10 { pt3dadd( 496.982, 479.903, 26.6077, 0.2746 ) }
    dend_10 { pt3dadd( 497.706, 480.784, 26.7002, 0.2746 ) }
    dend_10 { pt3dadd( 498.394, 481.697, 26.8192, 0.2746 ) }
    dend_10 { pt3dadd( 499.159, 482.529, 26.9661, 0.2744 ) }
    dend_10 { pt3dadd( 499.895, 483.379, 27.1377, 0.2744 ) }
    dend_10 { pt3dadd( 500.576, 484.27, 27.3266, 0.2742 ) }
    dend_10 { pt3dadd( 501.324, 485.134, 27.5114, 0.274 ) }
    dend_10 { pt3dadd( 502.088, 485.985, 27.6749, 0.2736 ) }
    dend_10 { pt3dadd( 502.887, 486.801, 27.807, 0.2728 ) }
    dend_10 { pt3dadd( 503.778, 487.518, 27.9073, 0.2712 ) }
    dend_10 { pt3dadd( 504.609, 488.293, 27.9717, 0.2684 ) }
    dend_10 { pt3dadd( 505.423, 489.091, 28.0062, 0.2626 ) }
    dend_10 { pt3dadd( 506.213, 489.915, 28.0252, 0.2542 ) }
    dend_10 { pt3dadd( 506.916, 490.803, 28.0479, 0.2288 ) }
    dend_10 { pt3dadd( 507.682, 491.647, 28.1876, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 29/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 446.582, 458.872, 22.9481, 0.6314 ) }
    dend_9 { pt3dadd( 447.072, 459.806, 21.751, 0.6864 ) }
    dend_9 { pt3dadd( 447.547, 460.824, 20.9272, 0.6338 ) }
    dend_9 { pt3dadd( 447.707, 461.895, 20.5982, 0.6046 ) }
    dend_9 { pt3dadd( 448.722, 462.379, 20.2272, 0.4594 ) }
    dend_9 { pt3dadd( 449.834, 462.638, 19.8227, 0.4018 ) }
    dend_9 { pt3dadd( 450.669, 462.904, 19.3644, 0.4128 ) }
    dend_9 { pt3dadd( 451.445, 463.648, 18.8682, 0.5472 ) }
    dend_9 { pt3dadd( 451.983, 464.598, 18.3437, 0.7 ) }
    dend_9 { pt3dadd( 452.504, 465.615, 17.7986, 0.766 ) }
    dend_9 { pt3dadd( 453.219, 466.433, 17.2369, 0.7988 ) }
    dend_9 { pt3dadd( 454.073, 466.876, 16.6433, 0.6078 ) }
    dend_9 { pt3dadd( 455.062, 466.784, 16.0278, 0.5606 ) }
    dend_9 { pt3dadd( 455.908, 467.41, 15.4168, 0.5854 ) }
    dend_9 { pt3dadd( 456.631, 468.243, 14.8215, 0.544 ) }
    dend_9 { pt3dadd( 457.08, 469.057, 14.2214, 0.4344 ) }
    dend_9 { pt3dadd( 457.866, 469.848, 13.6364, 0.389 ) }
    dend_9 { pt3dadd( 458.725, 470.599, 13.0794, 0.4548 ) }
    dend_9 { pt3dadd( 459.38, 471.463, 12.535, 0.5356 ) }
    dend_9 { pt3dadd( 459.975, 472.358, 11.9937, 0.4262 ) }
    dend_9 { pt3dadd( 460.71, 473.193, 11.4666, 0.3392 ) }
    dend_9 { pt3dadd( 460.758, 473.457, 10.9723, 0.3012 ) }
    dend_9 { pt3dadd( 460.923, 474.522, 10.5038, 0.3186 ) }
    dend_9 { pt3dadd( 461.125, 475.484, 10.056, 0.3818 ) }
    dend_9 { pt3dadd( 461.526, 476.468, 9.6674, 0.3492 ) }
    dend_9 { pt3dadd( 462.549, 476.841, 9.3454, 0.3296 ) }
    dend_9 { pt3dadd( 463.682, 476.94, 9.0985, 0.324 ) }
    dend_9 { pt3dadd( 464.334, 477.654, 8.9286, 0.3918 ) }
    dend_9 { pt3dadd( 464.53, 478.623, 8.8369, 0.3686 ) }
    dend_9 { pt3dadd( 465.011, 479.574, 8.8085, 0.3604 ) }
    dend_9 { pt3dadd( 465.632, 480.402, 8.8094, 0.4068 ) }
    dend_9 { pt3dadd( 465.997, 481.343, 8.8457, 0.4208 ) }
    dend_9 { pt3dadd( 466.299, 482.404, 8.8868, 0.339 ) }
    dend_9 { pt3dadd( 466.225, 483.396, 8.9029, 0.2542 ) }
    dend_9 { pt3dadd( 466.646, 484.205, 8.9944, 0.2288 ) }
    // Section: apic_26, id: apic_26, parent: apic_24 (entry count 64/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 384.382, 468.768, 34.687, 0.4186 ) }
    apic_26 { pt3dadd( 384.446, 469.79, 35.3016, 0.3634 ) }
    apic_26 { pt3dadd( 384.518, 470.93, 35.9097, 0.3888 ) }
    apic_26 { pt3dadd( 384.68, 471.935, 36.5207, 0.5034 ) }
    apic_26 { pt3dadd( 384.966, 472.882, 37.1361, 0.6154 ) }
    apic_26 { pt3dadd( 385.701, 473.623, 37.7423, 0.6252 ) }
    apic_26 { pt3dadd( 386.228, 474.463, 38.3351, 0.4604 ) }
    apic_26 { pt3dadd( 386.533, 475.528, 38.8954, 0.3568 ) }
    apic_26 { pt3dadd( 386.685, 476.627, 39.3982, 0.3272 ) }
    apic_26 { pt3dadd( 387.446, 477.48, 39.8314, 0.3988 ) }
    apic_26 { pt3dadd( 388.104, 478.416, 40.1968, 0.3756 ) }
    apic_26 { pt3dadd( 388.779, 479.338, 40.5084, 0.4028 ) }
    apic_26 { pt3dadd( 389.45, 480.265, 40.7826, 0.3414 ) }
    apic_26 { pt3dadd( 389.785, 481.01, 41.0726, 0.3138 ) }
    apic_26 { pt3dadd( 390.364, 481.949, 41.3792, 0.3004 ) }
    apic_26 { pt3dadd( 391.24, 482.667, 41.6836, 0.322 ) }
    apic_26 { pt3dadd( 391.734, 483.548, 41.9647, 0.364 ) }
    apic_26 { pt3dadd( 392.51, 484.354, 42.2383, 0.4332 ) }
    apic_26 { pt3dadd( 393.362, 485.087, 42.5071, 0.6038 ) }
    apic_26 { pt3dadd( 394.133, 485.895, 42.772, 0.7148 ) }
    apic_26 { pt3dadd( 394.621, 486.853, 43.0573, 0.5444 ) }
    apic_26 { pt3dadd( 394.761, 487.988, 43.3602, 0.4522 ) }
    apic_26 { pt3dadd( 394.814, 489.126, 43.6786, 0.3386 ) }
    apic_26 { pt3dadd( 395.076, 490.241, 44.0073, 0.309 ) }
    apic_26 { pt3dadd( 395.338, 491.354, 44.3489, 0.291 ) }
    apic_26 { pt3dadd( 395.72, 492.406, 44.718, 0.306 ) }
    apic_26 { pt3dadd( 396.122, 493.449, 45.1234, 0.3278 ) }
    apic_26 { pt3dadd( 396.355, 494.444, 45.5834, 0.3984 ) }
    apic_26 { pt3dadd( 396.512, 495.457, 46.0947, 0.3822 ) }
    apic_26 { pt3dadd( 396.322, 496.569, 46.6273, 0.379 ) }
    apic_26 { pt3dadd( 396.131, 497.68, 47.1517, 0.4722 ) }
    apic_26 { pt3dadd( 395.857, 498.746, 47.6473, 0.3932 ) }
    apic_26 { pt3dadd( 395.497, 499.795, 48.0925, 0.3254 ) }
    apic_26 { pt3dadd( 394.976, 500.811, 48.4627, 0.2746 ) }
    apic_26 { pt3dadd( 394.756, 501.899, 48.755, 0.2746 ) }
    apic_26 { pt3dadd( 394.771, 503.043, 48.9798, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_26 { pt3dadd( 394.736, 504.153, 49.1632, 0.2746 ) }
    apic_26 { pt3dadd( 394.717, 505.272, 49.3214, 0.2746 ) }
    apic_26 { pt3dadd( 394.743, 506.409, 49.4589, 0.2746 ) }
    apic_26 { pt3dadd( 394.803, 507.552, 49.5732, 0.2746 ) }
    apic_26 { pt3dadd( 394.851, 508.692, 49.6563, 0.2746 ) }
    apic_26 { pt3dadd( 394.745, 509.82, 49.7118, 0.2746 ) }
    apic_26 { pt3dadd( 394.808, 510.916, 49.7255, 0.2746 ) }
    apic_26 { pt3dadd( 394.973, 511.993, 49.6888, 0.2746 ) }
    apic_26 { pt3dadd( 395.137, 513.069, 49.6098, 0.2746 ) }
    apic_26 { pt3dadd( 395.206, 514.178, 49.5236, 0.2746 ) }
    apic_26 { pt3dadd( 395.219, 515.306, 49.467, 0.2746 ) }
    apic_26 { pt3dadd( 395.229, 516.434, 49.4609, 0.2746 ) }
    apic_26 { pt3dadd( 394.935, 517.533, 49.5127, 0.2746 ) }
    apic_26 { pt3dadd( 394.641, 518.631, 49.6171, 0.2746 ) }
    apic_26 { pt3dadd( 394.334, 519.728, 49.7566, 0.2748 ) }
    apic_26 { pt3dadd( 393.987, 520.817, 49.9041, 0.275 ) }
    apic_26 { pt3dadd( 393.639, 521.908, 50.0396, 0.2752 ) }
    apic_26 { pt3dadd( 393.28, 522.993, 50.1567, 0.2758 ) }
    apic_26 { pt3dadd( 392.912, 524.077, 50.2524, 0.2768 ) }
    apic_26 { pt3dadd( 392.542, 525.159, 50.328, 0.2796 ) }
    apic_26 { pt3dadd( 392.243, 526.262, 50.3891, 0.2796 ) }
    apic_26 { pt3dadd( 392.02, 527.384, 50.4386, 0.305 ) }
    apic_26 { pt3dadd( 391.736, 528.483, 50.5711, 0.2288 ) }
    // Section: apic_25, id: apic_25, parent: apic_24 (entry count 23/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 384.382, 468.768, 34.687, 0.4186 ) }
    apic_25 { pt3dadd( 383.551, 469.318, 35.0823, 0.6864 ) }
    apic_25 { pt3dadd( 382.834, 470.161, 35.831, 0.732 ) }
    apic_25 { pt3dadd( 382.152, 471.079, 36.1228, 0.6262 ) }
    apic_25 { pt3dadd( 381.283, 471.698, 36.4619, 0.5904 ) }
    apic_25 { pt3dadd( 380.579, 472.498, 36.8418, 0.4332 ) }
    apic_25 { pt3dadd( 380.039, 473.482, 37.2445, 0.3534 ) }
    apic_25 { pt3dadd( 379.537, 474.487, 37.6505, 0.3214 ) }
    apic_25 { pt3dadd( 379.035, 475.491, 38.0422, 0.3868 ) }
    apic_25 { pt3dadd( 378.483, 476.467, 38.4042, 0.3586 ) }
    apic_25 { pt3dadd( 377.792, 477.292, 38.7139, 0.347 ) }
    apic_25 { pt3dadd( 377.216, 478.213, 38.9981, 0.3564 ) }
    apic_25 { pt3dadd( 376.321, 478.652, 39.2885, 0.4522 ) }
    apic_25 { pt3dadd( 375.384, 479.286, 39.5906, 0.4776 ) }
    apic_25 { pt3dadd( 374.473, 479.946, 39.9109, 0.5772 ) }
    apic_25 { pt3dadd( 373.587, 480.632, 40.2536, 0.7366 ) }
    apic_25 { pt3dadd( 372.787, 481.426, 40.602, 0.6968 ) }
    apic_25 { pt3dadd( 371.967, 482.123, 40.9282, 0.6496 ) }
    apic_25 { pt3dadd( 370.983, 482.573, 41.2541, 0.6614 ) }
    apic_25 { pt3dadd( 369.918, 482.921, 41.5934, 0.6582 ) }
    apic_25 { pt3dadd( 368.795, 483.136, 41.9563, 0.547 ) }
    apic_25 { pt3dadd( 367.671, 483.353, 42.3534, 0.3924 ) }
    apic_25 { pt3dadd( 366.572, 483.395, 42.8064, 0.3142 ) }
    apic_25 { pt3dadd( 365.502, 483.379, 43.33, 0.3006 ) }
    apic_25 { pt3dadd( 364.603, 483.417, 43.937, 0.325 ) }
    apic_25 { pt3dadd( 363.775, 483.923, 44.6172, 0.3576 ) }
    apic_25 { pt3dadd( 363.188, 484.822, 45.3208, 0.4796 ) }
    apic_25 { pt3dadd( 362.732, 485.758, 46.0188, 0.4068 ) }
    apic_25 { pt3dadd( 361.938, 486.388, 46.7267, 0.3502 ) }
    apic_25 { pt3dadd( 361.294, 486.827, 47.469, 0.3228 ) }
    apic_25 { pt3dadd( 360.271, 487.043, 48.2474, 0.3536 ) }
    apic_25 { pt3dadd( 359.424, 487.476, 49.0703, 0.4722 ) }
    apic_25 { pt3dadd( 358.586, 488.148, 49.9257, 0.393 ) }
    apic_25 { pt3dadd( 357.768, 488.848, 50.7892, 0.3248 ) }
    apic_25 { pt3dadd( 356.996, 489.569, 51.6323, 0.2736 ) }
    apic_25 { pt3dadd( 356.18, 490.331, 52.4224, 0.2728 ) }
    apic_25 { pt3dadd( 355.331, 491.067, 53.1644, 0.2712 ) }
    apic_25 { pt3dadd( 354.355, 491.653, 53.8373, 0.2684 ) }
    apic_25 { pt3dadd( 353.613, 492.473, 54.4326, 0.2626 ) }
    apic_25 { pt3dadd( 353.098, 493.491, 54.95, 0.2542 ) }
    apic_25 { pt3dadd( 352.845, 494.518, 55.4112, 0.2288 ) }
    apic_25 { pt3dadd( 352.99, 495.466, 56.6518, 0.2288 ) }
    // Section: apic_23, id: apic_23, parent: apic_21 (entry count 65/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 399.903, 448.066, 18.868, 0.4862 ) }
    apic_23 { pt3dadd( 400.313, 449.263, 18.9102, 0.5946 ) }
    apic_23 { pt3dadd( 400.573, 450.333, 18.9814, 0.5322 ) }
    apic_23 { pt3dadd( 400.716, 451.293, 19.0071, 0.5518 ) }
    apic_23 { pt3dadd( 400.852, 452.359, 18.9625, 0.6172 ) }
    apic_23 { pt3dadd( 401.036, 453.488, 18.8603, 0.597 ) }
    apic_23 { pt3dadd( 401.394, 454.559, 18.7187, 0.5602 ) }
    apic_23 { pt3dadd( 401.904, 455.579, 18.5534, 0.49 ) }
    apic_23 { pt3dadd( 402.183, 456.686, 18.3921, 0.5968 ) }
    apic_23 { pt3dadd( 402.444, 457.799, 18.2519, 0.5608 ) }
    apic_23 { pt3dadd( 402.613, 458.922, 18.1332, 0.7146 ) }
    apic_23 { pt3dadd( 402.981, 459.993, 18.0295, 0.6156 ) }
    apic_23 { pt3dadd( 403.528, 460.969, 17.9294, 0.6944 ) }
    apic_23 { pt3dadd( 404.367, 461.697, 17.8312, 0.7126 ) }
    apic_23 { pt3dadd( 404.841, 462.722, 17.7429, 0.679 ) }
    apic_23 { pt3dadd( 405.181, 463.77, 17.6711, 0.7148 ) }
    apic_23 { pt3dadd( 405.906, 464.545, 17.6336, 0.535 ) }
    apic_23 { pt3dadd( 406.411, 465.456, 17.6347, 0.4818 ) }
    apic_23 { pt3dadd( 407.176, 466.196, 17.628, 0.3946 ) }
    apic_23 { pt3dadd( 407.948, 467.03, 17.5918, 0.4078 ) }
    apic_23 { pt3dadd( 408.784, 467.789, 17.5076, 0.4968 ) }
    apic_23 { pt3dadd( 409.631, 468.362, 17.3842, 0.5784 ) }
    apic_23 { pt3dadd( 410.257, 469.27, 17.2145, 0.6774 ) }
    apic_23 { pt3dadd( 411.064, 469.93, 17.0105, 0.6562 ) }
    apic_23 { pt3dadd( 411.888, 470.672, 16.7917, 0.6958 ) }
    apic_23 { pt3dadd( 412.745, 471.123, 16.567, 0.615 ) }
    apic_23 { pt3dadd( 413.788, 471.389, 16.3778, 0.7564 ) }
    apic_23 { pt3dadd( 414.657, 472.081, 16.2351, 0.7486 ) }
    apic_23 { pt3dadd( 415.43, 472.906, 16.142, 0.673 ) }
    apic_23 { pt3dadd( 416.192, 473.702, 16.0805, 0.6 ) }
    apic_23 { pt3dadd( 416.521, 474.742, 16.033, 0.5958 ) }
    apic_23 { pt3dadd( 416.158, 475.735, 15.9748, 0.6374 ) }
    apic_23 { pt3dadd( 416.504, 476.724, 15.9103, 0.7044 ) }
    apic_23 { pt3dadd( 417.39, 477.391, 15.8242, 0.8784 ) }
    apic_23 { pt3dadd( 418.15, 478.243, 15.7259, 0.9598 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_23 { pt3dadd( 418.623, 479.258, 15.6174, 0.907 ) }
    apic_23 { pt3dadd( 419.219, 480.231, 15.5112, 0.8838 ) }
    apic_23 { pt3dadd( 419.516, 481.32, 15.4113, 0.7076 ) }
    apic_23 { pt3dadd( 420.184, 482.225, 15.3336, 0.7978 ) }
    apic_23 { pt3dadd( 421.118, 482.875, 15.2844, 0.772 ) }
    apic_23 { pt3dadd( 421.878, 483.715, 15.2596, 0.7466 ) }
    apic_23 { pt3dadd( 422.569, 484.624, 15.2535, 0.5892 ) }
    apic_23 { pt3dadd( 423.149, 485.604, 15.2606, 0.6046 ) }
    apic_23 { pt3dadd( 423.471, 486.701, 15.2729, 0.7428 ) }
    apic_23 { pt3dadd( 424.16, 487.586, 15.2888, 0.6962 ) }
    apic_23 { pt3dadd( 424.946, 488.405, 15.3024, 0.708 ) }
    apic_23 { pt3dadd( 425.536, 489.355, 15.3058, 0.4802 ) }
    apic_23 { pt3dadd( 426.155, 490.28, 15.2804, 0.3552 ) }
    apic_23 { pt3dadd( 426.859, 491.142, 15.2118, 0.2826 ) }
    apic_23 { pt3dadd( 427.643, 491.882, 15.0947, 0.2892 ) }
    apic_23 { pt3dadd( 428.545, 492.53, 14.9386, 0.3028 ) }
    apic_23 { pt3dadd( 428.91, 493.504, 14.7907, 0.3216 ) }
    apic_23 { pt3dadd( 429.642, 494.382, 14.6639, 0.387 ) }
    apic_23 { pt3dadd( 430.356, 495.274, 14.5648, 0.3602 ) }
    apic_23 { pt3dadd( 430.948, 496.196, 14.4805, 0.3434 ) }
    apic_23 { pt3dadd( 431.764, 496.936, 14.4095, 0.3806 ) }
    apic_23 { pt3dadd( 432.869, 497.163, 14.3533, 0.347 ) }
    apic_23 { pt3dadd( 434.011, 497.222, 14.2955, 0.3252 ) }
    apic_23 { pt3dadd( 435.146, 497.317, 14.2347, 0.3162 ) }
    apic_23 { pt3dadd( 436.245, 497.567, 14.1714, 0.3774 ) }
    apic_23 { pt3dadd( 437.121, 498.291, 14.1038, 0.3412 ) }
    apic_23 { pt3dadd( 437.809, 498.959, 14.0036, 0.3132 ) }
    apic_23 { pt3dadd( 438.923, 498.942, 13.886, 0.3002 ) }
    apic_23 { pt3dadd( 440.044, 498.724, 13.7627, 0.3166 ) }
    apic_23 { pt3dadd( 441.173, 498.65, 13.6435, 0.3782 ) }
    apic_23 { pt3dadd( 442.297, 498.862, 13.5379, 0.3426 ) }
    apic_23 { pt3dadd( 443.337, 499.328, 13.4499, 0.3164 ) }
    apic_23 { pt3dadd( 443.901, 500.317, 13.3779, 0.3048 ) }
    apic_23 { pt3dadd( 444.394, 501.32, 13.3088, 0.3312 ) }
    apic_23 { pt3dadd( 445.094, 502.11, 13.2451, 0.3764 ) }
    apic_23 { pt3dadd( 446.229, 502.064, 13.1708, 0.478 ) }
    apic_23 { pt3dadd( 447.12, 502.658, 13.061, 0.581 ) }
    apic_23 { pt3dadd( 447.994, 503.375, 12.9172, 0.4998 ) }
    apic_23 { pt3dadd( 448.858, 504.12, 12.7515, 0.527 ) }
    apic_23 { pt3dadd( 449.737, 504.837, 12.5744, 0.4002 ) }
    apic_23 { pt3dadd( 450.53, 505.635, 12.4002, 0.3382 ) }
    apic_23 { pt3dadd( 451.237, 506.528, 12.2494, 0.2994 ) }
    apic_23 { pt3dadd( 452.112, 507.191, 12.1133, 0.3154 ) }
    apic_23 { pt3dadd( 453.131, 507.544, 12.0076, 0.3758 ) }
    apic_23 { pt3dadd( 454.242, 507.739, 11.9319, 0.3384 ) }
    apic_23 { pt3dadd( 455.352, 507.964, 11.8702, 0.3084 ) }
    apic_23 { pt3dadd( 455.956, 508.781, 11.7989, 0.2902 ) }
    apic_23 { pt3dadd( 456.102, 509.816, 11.7086, 0.3036 ) }
    apic_23 { pt3dadd( 457.193, 509.889, 11.6039, 0.3292 ) }
    apic_23 { pt3dadd( 457.869, 510.681, 11.4633, 0.3714 ) }
    apic_23 { pt3dadd( 458.696, 511.397, 11.2702, 0.4762 ) }
    apic_23 { pt3dadd( 459.313, 512.332, 11.0345, 0.5406 ) }
    apic_23 { pt3dadd( 459.733, 513.149, 10.7544, 0.6048 ) }
    apic_23 { pt3dadd( 460.039, 514.082, 10.4435, 0.5338 ) }
    apic_23 { pt3dadd( 461.073, 514.504, 10.1396, 0.4096 ) }
    apic_23 { pt3dadd( 461.956, 515.151, 9.8913, 0.3728 ) }
    apic_23 { pt3dadd( 462.755, 515.941, 9.7228, 0.2796 ) }
    apic_23 { pt3dadd( 463.543, 516.752, 9.6908, 0.2288 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 58/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 399.903, 448.066, 18.868, 0.4862 ) }
    apic_22 { pt3dadd( 399.203, 447.51, 19.5829, 0.4576 ) }
    apic_22 { pt3dadd( 398.344, 446.758, 18.7519, 0.4082 ) }
    apic_22 { pt3dadd( 397.632, 445.93, 18.4363, 0.3942 ) }
    apic_22 { pt3dadd( 396.921, 445.761, 18.0426, 0.433 ) }
    apic_22 { pt3dadd( 396.068, 445.967, 17.5554, 0.6468 ) }
    apic_22 { pt3dadd( 395.936, 447.015, 17.0132, 0.5828 ) }
    apic_22 { pt3dadd( 395.606, 447.895, 16.4279, 0.6406 ) }
    apic_22 { pt3dadd( 395.012, 448.756, 15.8256, 0.5788 ) }
    apic_22 { pt3dadd( 394.726, 449.725, 15.1973, 0.5966 ) }
    apic_22 { pt3dadd( 394.326, 450.769, 14.5742, 0.4448 ) }
    apic_22 { pt3dadd( 393.623, 450.658, 13.9897, 0.375 ) }
    apic_22 { pt3dadd( 393.143, 449.833, 13.4065, 0.3606 ) }
    apic_22 { pt3dadd( 392.853, 450.499, 12.8175, 0.4632 ) }
    apic_22 { pt3dadd( 392.907, 451.605, 12.2553, 0.483 ) }
    apic_22 { pt3dadd( 392.69, 452.676, 11.7392, 0.661 ) }
    apic_22 { pt3dadd( 391.922, 452.598, 11.2631, 0.5338 ) }
    apic_22 { pt3dadd( 391.795, 451.481, 10.2346, 0.6864 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 76/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 404.991, 407.425, 26.7598, 0.4826 ) }
    apic_19 { pt3dadd( 404.849, 406.906, 29.3168, 0.6864 ) }
    apic_19 { pt3dadd( 404.838, 405.916, 30.2442, 0.8364 ) }
    apic_19 { pt3dadd( 404.851, 404.824, 30.6026, 0.7032 ) }
    apic_19 { pt3dadd( 405.067, 403.762, 31.0027, 0.6134 ) }
    apic_19 { pt3dadd( 404.805, 402.717, 31.4373, 0.5986 ) }
    apic_19 { pt3dadd( 404.412, 401.664, 31.8945, 0.5212 ) }
    apic_19 { pt3dadd( 404.131, 400.681, 32.3742, 0.3914 ) }
    apic_19 { pt3dadd( 403.871, 399.663, 32.8583, 0.3126 ) }
    apic_19 { pt3dadd( 403.673, 398.539, 33.3348, 0.2976 ) }
    apic_19 { pt3dadd( 403.474, 397.414, 33.7795, 0.3184 ) }
    apic_19 { pt3dadd( 403.166, 396.312, 34.1796, 0.3516 ) }
    apic_19 { pt3dadd( 402.689, 395.278, 34.5332, 0.4376 ) }
    apic_19 { pt3dadd( 402.549, 394.143, 34.8463, 0.478 ) }
    apic_19 { pt3dadd( 402.876, 393.058, 35.1386, 0.445 ) }
    apic_19 { pt3dadd( 402.877, 392.022, 35.4449, 0.4504 ) }
    apic_19 { pt3dadd( 402.646, 390.946, 35.7798, 0.595 ) }
    apic_19 { pt3dadd( 402.32, 389.872, 36.1365, 0.6662 ) }
    apic_19 { pt3dadd( 401.923, 388.799, 36.4991, 0.6112 ) }
    apic_19 { pt3dadd( 401.496, 387.744, 36.8589, 0.5016 ) }
    apic_19 { pt3dadd( 401.02, 386.717, 37.2142, 0.5634 ) }
    apic_19 { pt3dadd( 401.093, 385.593, 37.5651, 0.5354 ) }
    apic_19 { pt3dadd( 401.147, 384.454, 37.9086, 0.4906 ) }
    apic_19 { pt3dadd( 401.021, 383.335, 38.2567, 0.3722 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_19 { pt3dadd( 400.726, 382.262, 38.6218, 0.3238 ) }
    apic_19 { pt3dadd( 400.238, 381.268, 39.0071, 0.3196 ) }
    apic_19 { pt3dadd( 399.93, 380.251, 39.3957, 0.354 ) }
    apic_19 { pt3dadd( 399.85, 379.139, 39.8051, 0.4416 ) }
    apic_19 { pt3dadd( 399.779, 378.029, 40.2469, 0.4878 ) }
    apic_19 { pt3dadd( 399.741, 376.917, 40.7257, 0.451 ) }
    apic_19 { pt3dadd( 399.703, 375.803, 41.2415, 0.521 ) }
    apic_19 { pt3dadd( 399.51, 374.703, 41.7931, 0.4372 ) }
    apic_19 { pt3dadd( 399.098, 373.64, 42.3702, 0.4028 ) }
    apic_19 { pt3dadd( 398.568, 372.783, 42.9775, 0.4394 ) }
    apic_19 { pt3dadd( 397.774, 372.126, 43.6097, 0.4764 ) }
    apic_19 { pt3dadd( 396.826, 371.627, 44.2705, 0.4656 ) }
    apic_19 { pt3dadd( 395.824, 371.102, 44.9512, 0.3732 ) }
    apic_19 { pt3dadd( 394.904, 370.484, 45.656, 0.3252 ) }
    apic_19 { pt3dadd( 393.973, 369.903, 46.3929, 0.3236 ) }
    apic_19 { pt3dadd( 393.222, 369.076, 47.1582, 0.3548 ) }
    apic_19 { pt3dadd( 392.471, 368.294, 47.9534, 0.4746 ) }
    apic_19 { pt3dadd( 391.71, 367.715, 48.832, 0.3974 ) }
    apic_19 { pt3dadd( 391.396, 366.724, 49.7571, 0.3334 ) }
    apic_19 { pt3dadd( 391.18, 365.634, 50.6848, 0.2882 ) }
    apic_19 { pt3dadd( 390.764, 364.679, 51.5724, 0.305 ) }
    apic_19 { pt3dadd( 391.045, 363.949, 52.4196, 0.305 ) }
    apic_19 { pt3dadd( 391.455, 363.325, 54.6832, 0.4576 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 23/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 404.991, 407.425, 26.7598, 0.4826 ) }
    apic_18 { pt3dadd( 405.229, 407.153, 27.1895, 0.3978 ) }
    apic_18 { pt3dadd( 406.033, 406.352, 27.6069, 0.404 ) }
    apic_18 { pt3dadd( 406.915, 405.624, 27.9973, 0.5386 ) }
    apic_18 { pt3dadd( 407.706, 404.817, 28.3539, 0.6468 ) }
    apic_18 { pt3dadd( 408.052, 403.869, 28.6692, 0.8478 ) }
    apic_18 { pt3dadd( 408.563, 403.386, 28.9845, 0.7608 ) }
    apic_18 { pt3dadd( 408.747, 402.536, 29.2942, 0.5436 ) }
    apic_18 { pt3dadd( 408.885, 401.545, 29.6307, 0.4114 ) }
    apic_18 { pt3dadd( 409.218, 400.471, 29.9902, 0.454 ) }
    apic_18 { pt3dadd( 410.125, 399.802, 30.3674, 0.5106 ) }
    apic_18 { pt3dadd( 410.988, 399.716, 30.7938, 0.4944 ) }
    apic_18 { pt3dadd( 411.674, 399.032, 31.2379, 0.5958 ) }
    apic_18 { pt3dadd( 412.634, 398.851, 31.6912, 0.6036 ) }
    apic_18 { pt3dadd( 413.532, 397.741, 32.202, 0.5778 ) }
    apic_18 { pt3dadd( 414.091, 397.004, 32.7449, 0.724 ) }
    apic_18 { pt3dadd( 415.066, 396.807, 33.3304, 0.7408 ) }
    apic_18 { pt3dadd( 416.0, 396.876, 33.9668, 0.6336 ) }
    apic_18 { pt3dadd( 416.671, 396.522, 34.6391, 0.6482 ) }
    apic_18 { pt3dadd( 417.479, 395.845, 35.2965, 0.7824 ) }
    apic_18 { pt3dadd( 417.987, 394.885, 35.9178, 0.971 ) }
    apic_18 { pt3dadd( 418.67, 394.046, 36.4764, 0.9248 ) }
    apic_18 { pt3dadd( 419.068, 393.233, 36.9774, 0.702 ) }
    apic_18 { pt3dadd( 419.477, 392.345, 37.429, 0.4968 ) }
    apic_18 { pt3dadd( 419.925, 391.443, 37.8098, 0.4802 ) }
    apic_18 { pt3dadd( 420.338, 390.376, 38.1388, 0.5128 ) }
    apic_18 { pt3dadd( 420.769, 389.317, 38.4328, 0.4966 ) }
    apic_18 { pt3dadd( 421.167, 388.261, 38.7122, 0.608 ) }
    apic_18 { pt3dadd( 421.535, 387.521, 39.02, 0.5852 ) }
    apic_18 { pt3dadd( 421.985, 386.542, 39.3604, 0.7424 ) }
    apic_18 { pt3dadd( 422.511, 385.679, 39.7141, 0.7524 ) }
    apic_18 { pt3dadd( 422.707, 384.842, 40.0859, 0.5348 ) }
    apic_18 { pt3dadd( 422.709, 384.056, 40.4664, 0.362 ) }
    apic_18 { pt3dadd( 423.382, 383.194, 40.8262, 0.2954 ) }
    apic_18 { pt3dadd( 423.857, 382.359, 41.1359, 0.3128 ) }
    apic_18 { pt3dadd( 424.393, 381.351, 41.3918, 0.3476 ) }
    apic_18 { pt3dadd( 424.846, 380.311, 41.5996, 0.3992 ) }
    apic_18 { pt3dadd( 424.993, 379.188, 41.7598, 0.5584 ) }
    apic_18 { pt3dadd( 425.056, 378.055, 41.8832, 0.5444 ) }
    apic_18 { pt3dadd( 425.403, 376.966, 41.9908, 0.6474 ) }
    apic_18 { pt3dadd( 425.845, 375.914, 42.1039, 0.6692 ) }
    apic_18 { pt3dadd( 426.137, 374.818, 42.2386, 0.6156 ) }
    apic_18 { pt3dadd( 426.068, 373.691, 42.3889, 0.5158 ) }
    apic_18 { pt3dadd( 425.704, 372.669, 42.5704, 0.5612 ) }
    apic_18 { pt3dadd( 426.132, 371.766, 42.7879, 0.67 ) }
    apic_18 { pt3dadd( 426.831, 370.883, 43.0433, 0.7528 ) }
    apic_18 { pt3dadd( 427.225, 369.925, 43.3381, 0.5688 ) }
    apic_18 { pt3dadd( 427.082, 368.8, 43.6629, 0.4922 ) }
    apic_18 { pt3dadd( 427.286, 367.682, 44.0135, 0.4384 ) }
    apic_18 { pt3dadd( 427.391, 366.548, 44.3766, 0.3698 ) }
    apic_18 { pt3dadd( 427.722, 365.499, 44.7555, 0.3192 ) }
    apic_18 { pt3dadd( 428.327, 364.683, 45.1578, 0.3112 ) }
    apic_18 { pt3dadd( 429.042, 363.832, 45.5706, 0.337 ) }
    apic_18 { pt3dadd( 429.597, 362.85, 45.9712, 0.4168 ) }
    apic_18 { pt3dadd( 429.808, 361.777, 46.3501, 0.41 ) }
    apic_18 { pt3dadd( 430.136, 360.709, 46.6942, 0.4626 ) }
    apic_18 { pt3dadd( 430.865, 359.849, 47.0028, 0.4722 ) }
    apic_18 { pt3dadd( 431.432, 358.885, 47.2819, 0.4582 ) }
    apic_18 { pt3dadd( 431.735, 357.842, 47.5432, 0.3594 ) }
    apic_18 { pt3dadd( 432.704, 357.411, 47.7974, 0.3 ) }
    apic_18 { pt3dadd( 433.299, 356.498, 48.0287, 0.2746 ) }
    apic_18 { pt3dadd( 433.597, 355.412, 48.246, 0.2746 ) }
    apic_18 { pt3dadd( 433.986, 354.347, 48.4501, 0.2746 ) }
    apic_18 { pt3dadd( 434.451, 353.306, 48.6363, 0.2746 ) }
    apic_18 { pt3dadd( 434.913, 352.262, 48.8009, 0.2746 ) }
    apic_18 { pt3dadd( 435.411, 351.249, 48.9437, 0.2746 ) }
    apic_18 { pt3dadd( 436.222, 350.443, 49.07, 0.2746 ) }
    apic_18 { pt3dadd( 436.949, 349.561, 49.1834, 0.2746 ) }
    apic_18 { pt3dadd( 437.643, 348.651, 49.2904, 0.2746 ) }
    apic_18 { pt3dadd( 438.127, 347.643, 49.4015, 0.2746 ) }
    apic_18 { pt3dadd( 438.248, 346.548, 49.5247, 0.2746 ) }
    apic_18 { pt3dadd( 438.081, 345.435, 49.6614, 0.2746 ) }
    apic_18 { pt3dadd( 438.387, 344.339, 49.803, 0.2746 ) }
    apic_18 { pt3dadd( 439.022, 343.401, 49.9346, 0.2746 ) }
    apic_18 { pt3dadd( 439.769, 342.539, 50.0422, 0.2746 ) }
    apic_18 { pt3dadd( 440.603, 341.777, 50.12, 0.2746 ) }
    apic_18 { pt3dadd( 441.508, 341.105, 50.1743, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_18 { pt3dadd( 442.257, 340.241, 50.2015, 0.2746 ) }
    apic_18 { pt3dadd( 442.976, 339.37, 50.2116, 0.2746 ) }
    apic_18 { pt3dadd( 443.623, 338.499, 50.1914, 0.2746 ) }
    apic_18 { pt3dadd( 444.271, 337.634, 50.1337, 0.2746 ) }
    apic_18 { pt3dadd( 445.038, 336.79, 50.0542, 0.2746 ) }
    apic_18 { pt3dadd( 445.809, 335.946, 49.9702, 0.2746 ) }
    apic_18 { pt3dadd( 446.574, 335.099, 49.9027, 0.2746 ) }
    apic_18 { pt3dadd( 447.366, 334.294, 49.8663, 0.2746 ) }
    apic_18 { pt3dadd( 447.992, 333.389, 49.8722, 0.2746 ) }
    apic_18 { pt3dadd( 448.584, 332.453, 49.9125, 0.2746 ) }
    apic_18 { pt3dadd( 449.345, 331.599, 49.9556, 0.2746 ) }
    apic_18 { pt3dadd( 450.141, 330.796, 49.968, 0.2746 ) }
    apic_18 { pt3dadd( 450.868, 330.038, 49.9156, 0.2746 ) }
    apic_18 { pt3dadd( 451.639, 329.24, 49.8016, 0.2746 ) }
    apic_18 { pt3dadd( 452.428, 328.413, 49.6451, 0.2746 ) }
    apic_18 { pt3dadd( 453.202, 327.573, 49.4682, 0.2746 ) }
    apic_18 { pt3dadd( 454.002, 326.757, 49.2979, 0.2746 ) }
    apic_18 { pt3dadd( 454.851, 326.017, 49.1484, 0.2746 ) }
    apic_18 { pt3dadd( 455.733, 325.3, 49.033, 0.2746 ) }
    apic_18 { pt3dadd( 456.631, 324.592, 48.9566, 0.2746 ) }
    apic_18 { pt3dadd( 457.409, 324.049, 48.925, 0.2746 ) }
    apic_18 { pt3dadd( 457.852, 323.774, 48.9507, 0.2746 ) }
    apic_18 { pt3dadd( 458.717, 323.039, 48.9978, 0.2746 ) }
    apic_18 { pt3dadd( 459.529, 322.243, 49.0386, 0.2746 ) }
    apic_18 { pt3dadd( 460.228, 321.379, 49.0655, 0.2748 ) }
    apic_18 { pt3dadd( 460.848, 320.453, 49.0689, 0.2748 ) }
    apic_18 { pt3dadd( 461.452, 319.491, 49.0274, 0.275 ) }
    apic_18 { pt3dadd( 462.174, 318.614, 48.9342, 0.2756 ) }
    apic_18 { pt3dadd( 462.891, 317.736, 48.7964, 0.2764 ) }
    apic_18 { pt3dadd( 463.604, 316.855, 48.622, 0.278 ) }
    apic_18 { pt3dadd( 464.331, 315.974, 48.4232, 0.2808 ) }
    apic_18 { pt3dadd( 465.161, 315.194, 48.2202, 0.2862 ) }
    apic_18 { pt3dadd( 465.962, 314.418, 48.0211, 0.2962 ) }
    apic_18 { pt3dadd( 466.712, 313.621, 47.8218, 0.3154 ) }
    apic_18 { pt3dadd( 467.576, 312.895, 47.6308, 0.346 ) }
    apic_18 { pt3dadd( 468.506, 312.239, 47.4639, 0.4274 ) }
    apic_18 { pt3dadd( 469.493, 311.904, 47.3371, 0.4594 ) }
    apic_18 { pt3dadd( 470.519, 311.406, 47.2578, 0.4094 ) }
    apic_18 { pt3dadd( 471.429, 310.734, 47.217, 0.3898 ) }
    apic_18 { pt3dadd( 472.351, 310.114, 47.215, 0.456 ) }
    apic_18 { pt3dadd( 473.377, 309.731, 47.2567, 0.538 ) }
    apic_18 { pt3dadd( 474.39, 309.319, 47.3175, 0.4302 ) }
    apic_18 { pt3dadd( 475.385, 308.879, 47.376, 0.3474 ) }
    apic_18 { pt3dadd( 476.371, 308.307, 47.4345, 0.3136 ) }
    apic_18 { pt3dadd( 477.297, 307.637, 47.4925, 0.356 ) }
    apic_18 { pt3dadd( 478.281, 307.066, 47.5541, 0.3814 ) }
    apic_18 { pt3dadd( 479.289, 306.551, 47.796, 0.6864 ) }
    // Section: apic_14, id: apic_14, parent: apic_2 (entry count 47/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 398.884, 415.055, 23.998, 1.0492 ) }
    apic_14 { pt3dadd( 398.668, 414.139, 24.8755, 0.9152 ) }
    apic_14 { pt3dadd( 398.595, 413.12, 25.6825, 0.73 ) }
    apic_14 { pt3dadd( 399.186, 412.156, 26.0062, 0.6518 ) }
    apic_14 { pt3dadd( 399.114, 411.136, 26.3789, 0.496 ) }
    apic_14 { pt3dadd( 399.106, 410.115, 26.8152, 0.4892 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 53/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 398.884, 415.055, 23.998, 1.0492 ) }
    apic_3 { pt3dadd( 397.282, 414.721, 23.9527, 0.8818 ) }
    apic_3 { pt3dadd( 396.189, 414.534, 23.9043, 0.6208 ) }
    apic_3 { pt3dadd( 395.487, 413.938, 23.8786, 0.5822 ) }
    apic_3 { pt3dadd( 394.737, 413.224, 23.8681, 0.6368 ) }
    apic_3 { pt3dadd( 394.307, 412.278, 23.8568, 0.812 ) }
    apic_3 { pt3dadd( 393.319, 411.738, 23.8344, 0.778 ) }
    apic_3 { pt3dadd( 392.415, 411.552, 23.76, 0.8562 ) }
    apic_3 { pt3dadd( 391.457, 411.015, 23.6288, 0.7718 ) }
    apic_3 { pt3dadd( 390.589, 410.291, 23.4555, 0.814 ) }
    apic_3 { pt3dadd( 390.016, 409.316, 23.27, 0.844 ) }
    apic_3 { pt3dadd( 389.685, 408.229, 23.0975, 0.904 ) }
    apic_3 { pt3dadd( 389.244, 407.224, 22.9541, 0.9938 ) }
    apic_3 { pt3dadd( 388.43, 406.42, 22.8488, 1.0364 ) }
    apic_3 { pt3dadd( 387.452, 405.849, 22.7732, 1.0298 ) }
    apic_3 { pt3dadd( 386.379, 405.453, 22.7152, 0.976 ) }
    apic_3 { pt3dadd( 385.306, 405.056, 22.6634, 0.8484 ) }
    apic_3 { pt3dadd( 384.47, 404.283, 22.6098, 0.7474 ) }
    apic_3 { pt3dadd( 383.649, 403.487, 22.5499, 0.5894 ) }
    apic_3 { pt3dadd( 382.604, 403.068, 22.472, 0.6106 ) }
    apic_3 { pt3dadd( 381.565, 402.639, 22.3743, 0.7276 ) }
    apic_3 { pt3dadd( 380.687, 401.917, 22.2753, 0.7956 ) }
    apic_3 { pt3dadd( 379.728, 401.337, 22.1787, 0.959 ) }
    apic_3 { pt3dadd( 378.672, 400.925, 22.0784, 1.0798 ) }
    apic_3 { pt3dadd( 377.632, 400.465, 21.9747, 1.045 ) }
    apic_3 { pt3dadd( 376.625, 400.021, 21.8832, 0.8632 ) }
    apic_3 { pt3dadd( 375.661, 399.468, 21.8049, 0.8664 ) }
    apic_3 { pt3dadd( 375.015, 398.59, 21.7059, 0.8216 ) }
    apic_3 { pt3dadd( 374.516, 397.595, 21.5769, 0.757 ) }
    apic_3 { pt3dadd( 373.888, 396.664, 21.4191, 0.7766 ) }
    apic_3 { pt3dadd( 373.036, 395.918, 21.229, 0.8218 ) }
    apic_3 { pt3dadd( 372.183, 395.172, 21.0081, 0.8636 ) }
    apic_3 { pt3dadd( 371.254, 394.531, 20.7707, 0.9168 ) }
    apic_3 { pt3dadd( 370.232, 394.02, 20.5389, 0.9024 ) }
    apic_3 { pt3dadd( 369.294, 393.41, 20.3183, 0.7398 ) }
    apic_3 { pt3dadd( 368.507, 392.624, 20.1038, 0.6404 ) }
    apic_3 { pt3dadd( 367.73, 391.801, 19.904, 0.6184 ) }
    apic_3 { pt3dadd( 366.96, 390.954, 19.7293, 0.7054 ) }
    apic_3 { pt3dadd( 366.135, 390.168, 19.581, 0.704 ) }
    apic_3 { pt3dadd( 365.276, 389.417, 19.4574, 0.804 ) }
    apic_3 { pt3dadd( 364.644, 388.483, 19.3647, 0.7212 ) }
    apic_3 { pt3dadd( 364.043, 387.528, 19.3043, 0.7248 ) }
    apic_3 { pt3dadd( 363.149, 386.814, 19.2654, 0.6562 ) }
    apic_3 { pt3dadd( 362.267, 386.086, 19.2381, 0.665 ) }
    apic_3 { pt3dadd( 361.446, 385.29, 19.2161, 0.7082 ) }
    apic_3 { pt3dadd( 360.687, 384.455, 19.1928, 0.8852 ) }
    apic_3 { pt3dadd( 360.222, 383.441, 19.1535, 0.9722 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_3 { pt3dadd( 359.725, 382.44, 19.1024, 0.9324 ) }
    apic_3 { pt3dadd( 359.169, 381.467, 19.0623, 0.918 ) }
    apic_3 { pt3dadd( 358.489, 380.576, 19.0394, 0.833 ) }
    apic_3 { pt3dadd( 357.68, 379.767, 19.0283, 0.7298 ) }
    apic_3 { pt3dadd( 356.878, 378.951, 19.0217, 0.7314 ) }
    apic_3 { pt3dadd( 356.08, 378.13, 19.0113, 0.7128 ) }
    apic_3 { pt3dadd( 355.377, 377.236, 18.984, 0.784 ) }
    apic_3 { pt3dadd( 354.744, 376.287, 18.9295, 0.8606 ) }
    apic_3 { pt3dadd( 354.13, 375.332, 18.8454, 0.8132 ) }
    apic_3 { pt3dadd( 353.527, 374.374, 18.7358, 0.7304 ) }
    apic_3 { pt3dadd( 352.682, 373.627, 18.6153, 0.5506 ) }
    apic_3 { pt3dadd( 351.766, 372.941, 18.4982, 0.575 ) }
    apic_3 { pt3dadd( 350.924, 372.169, 18.3939, 0.485 ) }
    apic_3 { pt3dadd( 350.102, 371.373, 18.3058, 0.5168 ) }
    apic_3 { pt3dadd( 349.552, 370.387, 18.2348, 0.527 ) }
    apic_3 { pt3dadd( 349.071, 369.352, 18.1763, 0.554 ) }
    apic_3 { pt3dadd( 348.254, 368.585, 18.1184, 0.5642 ) }
    apic_3 { pt3dadd( 347.359, 367.883, 18.0491, 0.5482 ) }
    apic_3 { pt3dadd( 346.543, 367.127, 17.9511, 0.6876 ) }
    apic_3 { pt3dadd( 345.672, 366.421, 17.8228, 0.8124 ) }
    apic_3 { pt3dadd( 344.723, 365.788, 17.6745, 0.7768 ) }
    apic_3 { pt3dadd( 343.818, 365.097, 17.5218, 0.6348 ) }
    apic_3 { pt3dadd( 342.959, 364.347, 17.3821, 0.5108 ) }
    apic_3 { pt3dadd( 342.305, 363.437, 17.2596, 0.5198 ) }
    apic_3 { pt3dadd( 341.795, 362.418, 17.1517, 0.7498 ) }
    apic_3 { pt3dadd( 341.474, 361.321, 17.0558, 0.8274 ) }
    apic_3 { pt3dadd( 340.835, 360.393, 16.9662, 0.834 ) }
    apic_3 { pt3dadd( 339.839, 359.833, 16.8778, 0.8256 ) }
    apic_3 { pt3dadd( 338.809, 359.37, 16.7828, 0.6808 ) }
    apic_3 { pt3dadd( 337.958, 358.652, 16.6774, 0.5838 ) }
    apic_3 { pt3dadd( 337.147, 357.864, 16.5655, 0.4868 ) }
    apic_3 { pt3dadd( 336.489, 356.928, 16.4609, 0.5906 ) }
    apic_3 { pt3dadd( 335.835, 355.99, 16.3743, 0.5496 ) }
    apic_3 { pt3dadd( 335.5, 354.904, 16.3135, 0.6926 ) }
    apic_3 { pt3dadd( 334.616, 354.235, 16.2954, 0.5802 ) }
    apic_3 { pt3dadd( 333.663, 353.783, 16.306, 0.6032 ) }
    apic_3 { pt3dadd( 332.678, 353.247, 16.3323, 0.6664 ) }
    apic_3 { pt3dadd( 331.703, 352.647, 16.3714, 0.6852 ) }
    apic_3 { pt3dadd( 330.728, 352.055, 16.4237, 0.7382 ) }
    apic_3 { pt3dadd( 329.75, 351.485, 16.4961, 0.7488 ) }
    apic_3 { pt3dadd( 328.778, 350.899, 16.5863, 0.736 ) }
    apic_3 { pt3dadd( 327.816, 350.288, 16.686, 0.6412 ) }
    apic_3 { pt3dadd( 326.963, 349.553, 16.7953, 0.582 ) }
    apic_3 { pt3dadd( 326.182, 348.739, 16.9131, 0.5926 ) }
    apic_3 { pt3dadd( 325.58, 347.802, 17.0359, 0.4868 ) }
    apic_3 { pt3dadd( 324.969, 346.864, 17.1514, 0.441 ) }
    apic_3 { pt3dadd( 324.307, 345.935, 17.2359, 0.5406 ) }
    apic_3 { pt3dadd( 323.625, 345.025, 17.2747, 0.5166 ) }
    apic_3 { pt3dadd( 322.898, 344.159, 17.258, 0.5704 ) }
    apic_3 { pt3dadd( 322.038, 343.458, 17.1884, 0.6512 ) }
    apic_3 { pt3dadd( 321.026, 342.952, 17.0794, 0.6626 ) }
    apic_3 { pt3dadd( 320.048, 342.375, 16.9538, 0.6702 ) }
    apic_3 { pt3dadd( 319.098, 341.742, 16.8367, 0.749 ) }
    apic_3 { pt3dadd( 318.216, 341.033, 16.7525, 0.8094 ) }
    apic_3 { pt3dadd( 317.375, 340.277, 16.7173, 0.8816 ) }
    apic_3 { pt3dadd( 316.551, 339.491, 16.7289, 0.7504 ) }
    apic_3 { pt3dadd( 315.732, 338.697, 16.7753, 0.8778 ) }
    apic_3 { pt3dadd( 315.215, 337.681, 16.8373, 0.9164 ) }
    apic_3 { pt3dadd( 314.687, 336.667, 16.8971, 1.0328 ) }
    apic_3 { pt3dadd( 314.16, 335.651, 16.9404, 1.0316 ) }
    apic_3 { pt3dadd( 313.633, 334.636, 16.9598, 1.1664 ) }
    apic_3 { pt3dadd( 312.858, 333.825, 16.9515, 1.2098 ) }
    apic_3 { pt3dadd( 311.975, 333.103, 16.916, 1.1486 ) }
    apic_3 { pt3dadd( 311.091, 332.381, 16.8591, 1.0354 ) }
    apic_3 { pt3dadd( 310.208, 331.658, 16.7878, 1.0534 ) }
    apic_3 { pt3dadd( 309.403, 330.848, 16.7136, 1.124 ) }
    apic_3 { pt3dadd( 308.607, 330.026, 16.6457, 1.0744 ) }
    apic_3 { pt3dadd( 307.81, 329.204, 16.5901, 0.9444 ) }
    apic_3 { pt3dadd( 307.014, 328.383, 16.5491, 0.8874 ) }
    apic_3 { pt3dadd( 306.454, 327.389, 16.5218, 0.8048 ) }
    apic_3 { pt3dadd( 305.913, 326.381, 16.5052, 0.5378 ) }
    apic_3 { pt3dadd( 305.371, 325.373, 16.4952, 0.3676 ) }
    apic_3 { pt3dadd( 304.83, 324.365, 16.4883, 0.306 ) }
    apic_3 { pt3dadd( 303.996, 323.609, 16.4823, 0.3324 ) }
    apic_3 { pt3dadd( 303.081, 322.923, 16.4755, 0.3836 ) }
    apic_3 { pt3dadd( 302.166, 322.236, 16.4667, 0.4676 ) }
    apic_3 { pt3dadd( 301.251, 321.55, 16.4552, 0.676 ) }
    apic_3 { pt3dadd( 300.263, 320.977, 16.4401, 0.808 ) }
    apic_3 { pt3dadd( 299.256, 320.435, 16.4202, 0.914 ) }
    apic_3 { pt3dadd( 298.248, 319.896, 16.3943, 0.8686 ) }
    apic_3 { pt3dadd( 297.239, 319.354, 16.3607, 0.815 ) }
    apic_3 { pt3dadd( 296.399, 318.605, 16.3176, 0.797 ) }
    apic_3 { pt3dadd( 295.657, 317.736, 16.2624, 0.5972 ) }
    apic_3 { pt3dadd( 294.914, 316.865, 16.1918, 0.5768 ) }
    apic_3 { pt3dadd( 294.172, 315.995, 16.1028, 0.4404 ) }
    apic_3 { pt3dadd( 293.269, 315.315, 15.9938, 0.4382 ) }
    apic_3 { pt3dadd( 292.283, 314.735, 15.8658, 0.3608 ) }
    apic_3 { pt3dadd( 291.242, 314.454, 15.7053, 0.3446 ) }
    apic_3 { pt3dadd( 290.274, 314.066, 15.5118, 0.3826 ) }
    apic_3 { pt3dadd( 289.502, 313.276, 15.3031, 0.3512 ) }
    apic_3 { pt3dadd( 288.587, 312.59, 15.1123, 0.3314 ) }
    apic_3 { pt3dadd( 287.671, 311.904, 14.9644, 0.335 ) }
    apic_3 { pt3dadd( 286.756, 311.217, 14.8756, 0.3764 ) }
    apic_3 { pt3dadd( 285.859, 310.522, 14.8561, 0.514 ) }
    apic_3 { pt3dadd( 285.017, 309.796, 14.9096, 0.4724 ) }
    apic_3 { pt3dadd( 284.177, 309.072, 15.0205, 0.4638 ) }
    apic_3 { pt3dadd( 283.335, 308.347, 15.163, 0.5716 ) }
    apic_3 { pt3dadd( 282.625, 307.472, 15.2973, 0.6284 ) }
    apic_3 { pt3dadd( 281.962, 306.543, 15.389, 0.513 ) }
    apic_3 { pt3dadd( 281.298, 305.615, 15.4175, 0.4562 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_3 { pt3dadd( 280.635, 304.686, 15.3754, 0.5032 ) }
    apic_3 { pt3dadd( 279.943, 303.793, 15.2654, 0.766 ) }
    apic_3 { pt3dadd( 279.246, 302.901, 15.1014, 0.8572 ) }
    apic_3 { pt3dadd( 278.549, 302.011, 14.905, 0.8902 ) }
    apic_3 { pt3dadd( 277.801, 301.169, 14.6983, 0.926 ) }
    apic_3 { pt3dadd( 276.886, 300.483, 14.5048, 0.8866 ) }
    apic_3 { pt3dadd( 275.971, 299.797, 14.3385, 0.869 ) }
    apic_3 { pt3dadd( 275.055, 299.11, 14.2062, 0.7958 ) }
    apic_3 { pt3dadd( 274.199, 298.368, 14.1072, 1.086 ) }
    apic_3 { pt3dadd( 273.536, 297.441, 14.0336, 1.1594 ) }
    apic_3 { pt3dadd( 272.875, 296.514, 13.979, 1.0328 ) }
    apic_3 { pt3dadd( 272.174, 295.625, 13.9404, 0.9306 ) }
    apic_3 { pt3dadd( 271.268, 294.931, 13.926, 0.7832 ) }
    apic_3 { pt3dadd( 270.361, 294.238, 13.94, 0.764 ) }
    apic_3 { pt3dadd( 269.455, 293.546, 13.9839, 0.8662 ) }
    apic_3 { pt3dadd( 268.545, 292.855, 14.0547, 1.0748 ) }
    apic_3 { pt3dadd( 267.63, 292.168, 14.1445, 1.1394 ) }
    apic_3 { pt3dadd( 266.715, 291.482, 14.2464, 0.9918 ) }
    apic_3 { pt3dadd( 265.799, 290.796, 14.3554, 0.8732 ) }
    apic_3 { pt3dadd( 264.909, 290.079, 14.4722, 0.8154 ) }
    apic_3 { pt3dadd( 264.071, 289.302, 14.6018, 0.8372 ) }
    apic_3 { pt3dadd( 263.042, 288.95, 14.7516, 0.7094 ) }
    apic_3 { pt3dadd( 261.903, 288.851, 14.9286, 0.6014 ) }
    apic_3 { pt3dadd( 260.839, 289.097, 15.1431, 0.692 ) }
    apic_3 { pt3dadd( 259.831, 289.6, 15.4029, 0.8192 ) }
    apic_3 { pt3dadd( 258.926, 290.124, 15.7183, 0.7952 ) }
    apic_3 { pt3dadd( 257.978, 289.986, 16.0707, 0.64 ) }
    apic_3 { pt3dadd( 257.02, 289.384, 16.4289, 0.6604 ) }
    apic_3 { pt3dadd( 256.613, 288.469, 16.7857, 0.8048 ) }
    apic_3 { pt3dadd( 256.122, 287.492, 17.1104, 1.0124 ) }
    apic_3 { pt3dadd( 255.61, 286.469, 17.3603, 1.0034 ) }
    apic_3 { pt3dadd( 255.245, 285.389, 17.5083, 0.8382 ) }
    apic_3 { pt3dadd( 254.915, 284.295, 17.5469, 0.7966 ) }
    apic_3 { pt3dadd( 254.895, 283.22, 17.4654, 0.806 ) }
    apic_3 { pt3dadd( 254.888, 282.145, 17.2694, 0.8616 ) }
    apic_3 { pt3dadd( 254.398, 281.242, 17.0013, 0.7794 ) }
    apic_3 { pt3dadd( 253.395, 280.758, 16.7056, 0.6114 ) }
    apic_3 { pt3dadd( 252.29, 280.568, 16.4007, 0.6052 ) }
    apic_3 { pt3dadd( 251.391, 279.928, 16.1042, 0.712 ) }
    apic_3 { pt3dadd( 250.926, 278.908, 15.8298, 0.795 ) }
    apic_3 { pt3dadd( 250.787, 277.787, 15.581, 0.8192 ) }
    apic_3 { pt3dadd( 250.479, 276.687, 15.3624, 0.808 ) }
    apic_3 { pt3dadd( 249.853, 275.75, 15.1734, 0.8296 ) }
    apic_3 { pt3dadd( 249.265, 275.027, 15.0217, 0.6656 ) }
    apic_3 { pt3dadd( 248.563, 274.149, 14.8842, 0.6644 ) }
    apic_3 { pt3dadd( 247.86, 273.273, 14.7451, 0.7938 ) }
    apic_3 { pt3dadd( 247.133, 272.417, 14.5974, 0.852 ) }
    apic_3 { pt3dadd( 246.239, 271.702, 14.4479, 0.6978 ) }
    apic_3 { pt3dadd( 245.346, 270.988, 14.3032, 0.5416 ) }
    apic_3 { pt3dadd( 244.452, 270.273, 14.1694, 0.5362 ) }
    apic_3 { pt3dadd( 243.609, 269.517, 14.0542, 0.749 ) }
    apic_3 { pt3dadd( 243.061, 268.518, 13.9545, 0.9772 ) }
    apic_3 { pt3dadd( 242.513, 267.52, 13.8661, 1.0646 ) }
    apic_3 { pt3dadd( 241.965, 266.521, 13.7834, 1.2532 ) }
    apic_3 { pt3dadd( 241.087, 265.795, 13.7127, 1.2468 ) }
    apic_3 { pt3dadd( 240.203, 265.072, 13.6554, 1.1318 ) }
    apic_3 { pt3dadd( 239.32, 264.35, 13.6084, 0.9612 ) }
    apic_3 { pt3dadd( 238.473, 263.592, 13.5638, 0.896 ) }
    apic_3 { pt3dadd( 237.786, 262.678, 13.5065, 0.93 ) }
    apic_3 { pt3dadd( 237.099, 261.763, 13.4219, 0.9264 ) }
    apic_3 { pt3dadd( 236.412, 260.848, 13.298, 0.785 ) }
    apic_3 { pt3dadd( 235.71, 259.968, 13.1256, 0.7208 ) }
    apic_3 { pt3dadd( 234.931, 259.26, 12.8852, 0.784 ) }
    apic_3 { pt3dadd( 234.015, 258.647, 12.5853, 0.9312 ) }
    apic_3 { pt3dadd( 233.027, 258.115, 12.2449, 0.8314 ) }
    apic_3 { pt3dadd( 231.914, 257.851, 11.8903, 0.6232 ) }
    apic_3 { pt3dadd( 230.801, 257.586, 11.5425, 0.5802 ) }
    apic_3 { pt3dadd( 229.675, 257.501, 11.2111, 0.6646 ) }
    apic_3 { pt3dadd( 228.58, 257.219, 10.9046, 0.7118 ) }
    apic_3 { pt3dadd( 227.74, 256.794, 10.5992, 0.6424 ) }
    apic_3 { pt3dadd( 226.951, 256.001, 10.3151, 0.5892 ) }
    apic_3 { pt3dadd( 226.713, 254.891, 10.0747, 0.5824 ) }
    apic_3 { pt3dadd( 226.572, 253.756, 9.8882, 0.5814 ) }
    apic_3 { pt3dadd( 226.405, 252.625, 9.7618, 0.7514 ) }
    apic_3 { pt3dadd( 226.179, 251.504, 9.6965, 0.9184 ) }
    apic_3 { pt3dadd( 225.658, 250.489, 9.6896, 1.0322 ) }
    apic_3 { pt3dadd( 225.116, 249.48, 9.7264, 0.8226 ) }
    apic_3 { pt3dadd( 224.575, 248.472, 9.795, 0.8734 ) }
    apic_3 { pt3dadd( 224.034, 247.464, 9.8888, 0.8928 ) }
    apic_3 { pt3dadd( 223.323, 246.603, 10.0128, 0.8358 ) }
    apic_3 { pt3dadd( 222.548, 245.793, 10.166, 0.7228 ) }
    apic_3 { pt3dadd( 221.678, 245.057, 10.332, 0.5488 ) }
    apic_3 { pt3dadd( 220.586, 244.755, 10.506, 0.5118 ) }
    apic_3 { pt3dadd( 219.483, 244.615, 10.688, 0.6576 ) }
    apic_3 { pt3dadd( 218.394, 244.274, 10.8596, 0.8032 ) }
    apic_3 { pt3dadd( 217.412, 243.774, 11.0057, 0.764 ) }
    apic_3 { pt3dadd( 216.726, 242.865, 11.1198, 0.5892 ) }
    apic_3 { pt3dadd( 216.002, 241.988, 11.1962, 0.5324 ) }
    apic_3 { pt3dadd( 215.26, 241.117, 11.2268, 0.7314 ) }
    apic_3 { pt3dadd( 214.517, 240.248, 11.2103, 0.7674 ) }
    apic_3 { pt3dadd( 213.775, 239.377, 11.1536, 0.8488 ) }
    apic_3 { pt3dadd( 213.121, 238.529, 11.0485, 0.928 ) }
    apic_3 { pt3dadd( 212.453, 237.68, 10.9, 0.9658 ) }
    apic_3 { pt3dadd( 211.727, 236.821, 10.7308, 0.878 ) }
    apic_3 { pt3dadd( 211.17, 235.841, 10.5791, 0.7968 ) }
    apic_3 { pt3dadd( 210.651, 234.837, 10.4729, 0.7064 ) }
    apic_3 { pt3dadd( 210.392, 233.753, 10.4233, 0.7044 ) }
    apic_3 { pt3dadd( 210.329, 232.612, 10.4309, 0.8132 ) }
    apic_3 { pt3dadd( 210.164, 231.485, 10.4832, 0.9262 ) }
    apic_3 { pt3dadd( 209.926, 230.367, 10.5605, 1.1076 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_3 { pt3dadd( 209.631, 229.271, 10.6468, 1.1234 ) }
    apic_3 { pt3dadd( 209.073, 228.277, 10.7393, 1.1074 ) }
    apic_3 { pt3dadd( 208.383, 227.4, 10.842, 1.0684 ) }
    apic_3 { pt3dadd( 207.566, 226.639, 10.9609, 1.0408 ) }
    apic_3 { pt3dadd( 206.613, 226.035, 11.0813, 1.002 ) }
    apic_3 { pt3dadd( 205.941, 225.159, 11.1875, 0.8694 ) }
    apic_3 { pt3dadd( 206.177, 224.141, 11.2866, 0.9194 ) }
    apic_3 { pt3dadd( 206.562, 223.109, 11.3796, 0.9476 ) }
    apic_3 { pt3dadd( 206.787, 221.989, 11.4612, 0.8562 ) }
    apic_3 { pt3dadd( 207.087, 220.886, 11.5324, 0.9252 ) }
    apic_3 { pt3dadd( 207.102, 219.797, 11.6053, 0.8124 ) }
    apic_3 { pt3dadd( 206.468, 218.845, 11.6782, 0.6274 ) }
    apic_3 { pt3dadd( 205.833, 217.893, 11.7464, 0.625 ) }
    apic_3 { pt3dadd( 205.123, 217.01, 11.8097, 0.5684 ) }
    apic_3 { pt3dadd( 204.231, 216.295, 11.87, 0.7164 ) }
    apic_3 { pt3dadd( 203.673, 215.357, 11.9293, 0.6786 ) }
    apic_3 { pt3dadd( 203.038, 214.41, 11.9902, 0.5228 ) }
    apic_3 { pt3dadd( 202.379, 213.474, 12.0583, 0.4212 ) }
    apic_3 { pt3dadd( 201.722, 212.538, 12.1379, 0.467 ) }
    apic_3 { pt3dadd( 201.064, 211.602, 12.2304, 0.5586 ) }
    apic_3 { pt3dadd( 200.499, 210.633, 12.3448, 0.4684 ) }
    apic_3 { pt3dadd( 199.943, 209.661, 12.482, 0.4186 ) }
    apic_3 { pt3dadd( 199.387, 208.689, 12.6361, 0.4436 ) }
    apic_3 { pt3dadd( 198.889, 207.692, 12.7923, 0.6064 ) }
    apic_3 { pt3dadd( 198.573, 206.614, 12.9224, 0.8 ) }
    apic_3 { pt3dadd( 198.259, 205.537, 13.0136, 0.9984 ) }
    apic_3 { pt3dadd( 197.943, 204.459, 13.0653, 1.0014 ) }
    apic_3 { pt3dadd( 197.585, 203.401, 13.0969, 0.7192 ) }
    apic_3 { pt3dadd( 197.153, 202.372, 13.1438, 0.4482 ) }
    apic_3 { pt3dadd( 196.719, 201.345, 13.2292, 0.3236 ) }
    apic_3 { pt3dadd( 196.287, 200.318, 13.3632, 0.318 ) }
    apic_3 { pt3dadd( 195.824, 199.285, 13.5321, 0.3568 ) }
    apic_3 { pt3dadd( 195.342, 198.247, 13.7114, 0.4186 ) }
    apic_3 { pt3dadd( 194.859, 197.21, 13.8783, 0.5832 ) }
    apic_3 { pt3dadd( 194.376, 196.173, 14.0165, 0.645 ) }
    apic_3 { pt3dadd( 193.774, 195.217, 14.1219, 0.5692 ) }
    apic_3 { pt3dadd( 192.979, 194.395, 14.1989, 0.4356 ) }
    apic_3 { pt3dadd( 192.183, 193.574, 14.2585, 0.384 ) }
    apic_3 { pt3dadd( 191.387, 192.753, 14.3123, 0.4814 ) }
    apic_3 { pt3dadd( 190.562, 191.961, 14.3699, 0.41 ) }
    apic_3 { pt3dadd( 189.695, 191.215, 14.4387, 0.3564 ) }
    apic_3 { pt3dadd( 188.829, 190.468, 14.5237, 0.333 ) }
    apic_3 { pt3dadd( 187.962, 189.721, 14.6267, 0.3784 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 43/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 399.106, 410.115, 26.8152, 0.4892 ) }
    apic_16 { pt3dadd( 399.127, 409.514, 27.1628, 0.6864 ) }
    apic_16 { pt3dadd( 398.932, 408.597, 28.7577, 0.773 ) }
    apic_16 { pt3dadd( 399.637, 408.229, 29.3986, 0.6682 ) }
    apic_16 { pt3dadd( 400.02, 407.338, 30.1017, 0.8338 ) }
    apic_16 { pt3dadd( 399.703, 406.389, 30.8596, 0.7668 ) }
    apic_16 { pt3dadd( 398.991, 405.653, 31.6658, 0.6268 ) }
    apic_16 { pt3dadd( 399.169, 404.68, 32.4789, 0.4456 ) }
    apic_16 { pt3dadd( 399.313, 403.715, 33.3088, 0.4146 ) }
    apic_16 { pt3dadd( 399.285, 402.817, 34.2098, 0.4788 ) }
    apic_16 { pt3dadd( 398.952, 401.86, 35.1879, 0.6928 ) }
    apic_16 { pt3dadd( 398.865, 400.837, 36.2334, 0.8578 ) }
    apic_16 { pt3dadd( 398.463, 400.557, 37.3512, 0.9168 ) }
    apic_16 { pt3dadd( 397.403, 400.303, 38.5081, 0.6224 ) }
    apic_16 { pt3dadd( 396.838, 399.617, 39.674, 0.4348 ) }
    apic_16 { pt3dadd( 397.919, 399.393, 40.8304, 0.408 ) }
    apic_16 { pt3dadd( 398.403, 398.603, 41.9874, 0.4002 ) }
    apic_16 { pt3dadd( 397.822, 397.934, 43.1676, 0.4122 ) }
    apic_16 { pt3dadd( 397.562, 397.288, 44.3839, 0.5356 ) }
    apic_16 { pt3dadd( 397.645, 396.528, 45.6501, 0.5012 ) }
    apic_16 { pt3dadd( 397.942, 395.596, 46.9792, 0.5716 ) }
    apic_16 { pt3dadd( 397.438, 395.205, 48.3409, 0.5084 ) }
    apic_16 { pt3dadd( 397.072, 394.555, 49.6796, 0.4152 ) }
    apic_16 { pt3dadd( 396.523, 393.874, 50.9376, 0.356 ) }
    apic_16 { pt3dadd( 395.555, 393.634, 52.0668, 0.3814 ) }
    apic_16 { pt3dadd( 394.554, 393.359, 54.5289, 0.4576 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 69/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 399.106, 410.115, 26.8152, 0.4892 ) }
    apic_15 { pt3dadd( 399.921, 409.594, 27.4263, 0.4792 ) }
    apic_15 { pt3dadd( 400.679, 409.148, 28.0916, 0.4476 ) }
    apic_15 { pt3dadd( 401.627, 408.863, 28.7764, 0.4536 ) }
    apic_15 { pt3dadd( 402.584, 408.242, 29.4381, 0.6082 ) }
    apic_15 { pt3dadd( 403.6, 407.941, 30.0362, 0.656 ) }
    apic_15 { pt3dadd( 404.486, 407.378, 30.5477, 0.761 ) }
    apic_15 { pt3dadd( 405.406, 407.044, 30.9772, 0.647 ) }
    apic_15 { pt3dadd( 405.433, 406.369, 31.3608, 0.5606 ) }
    apic_15 { pt3dadd( 405.699, 405.675, 31.7148, 0.4802 ) }
    apic_15 { pt3dadd( 406.39, 405.148, 32.0446, 0.401 ) }
    apic_15 { pt3dadd( 407.244, 404.443, 32.3467, 0.3722 ) }
    apic_15 { pt3dadd( 407.826, 403.736, 32.5928, 0.4338 ) }
    apic_15 { pt3dadd( 408.528, 403.199, 32.7734, 0.4474 ) }
    apic_15 { pt3dadd( 409.423, 402.683, 32.9202, 0.5024 ) }
    apic_15 { pt3dadd( 409.665, 401.784, 33.0823, 0.6896 ) }
    apic_15 { pt3dadd( 410.13, 400.936, 33.2601, 0.8516 ) }
    apic_15 { pt3dadd( 410.796, 400.274, 33.4446, 0.9054 ) }
    apic_15 { pt3dadd( 411.111, 399.224, 33.6521, 0.6004 ) }
    apic_15 { pt3dadd( 411.257, 398.099, 33.8834, 0.399 ) }
    apic_15 { pt3dadd( 411.705, 397.064, 34.1323, 0.3168 ) }
    apic_15 { pt3dadd( 412.174, 396.045, 34.3935, 0.3532 ) }
    apic_15 { pt3dadd( 412.636, 395.1, 34.676, 0.418 ) }
    apic_15 { pt3dadd( 413.342, 394.277, 34.9908, 0.5526 ) }
    apic_15 { pt3dadd( 413.889, 393.372, 35.331, 0.732 ) }
    apic_15 { pt3dadd( 414.334, 392.39, 35.6832, 0.717 ) }
    apic_15 { pt3dadd( 415.046, 391.551, 36.0268, 0.5482 ) }
    apic_15 { pt3dadd( 415.762, 390.709, 36.3314, 0.4614 ) }
    apic_15 { pt3dadd( 415.925, 389.87, 36.5442, 0.5748 ) }
    apic_15 { pt3dadd( 416.322, 389.012, 36.6856, 0.5982 ) }
    apic_15 { pt3dadd( 416.946, 388.469, 36.7727, 0.6336 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_15 { pt3dadd( 417.314, 387.489, 36.8102, 0.5092 ) }
    apic_15 { pt3dadd( 418.138, 386.714, 36.8332, 0.5134 ) }
    apic_15 { pt3dadd( 419.036, 386.06, 36.8833, 0.525 ) }
    apic_15 { pt3dadd( 420.043, 386.063, 36.9729, 0.5292 ) }
    apic_15 { pt3dadd( 421.016, 386.102, 37.1112, 0.6202 ) }
    apic_15 { pt3dadd( 422.035, 385.754, 37.2915, 0.843 ) }
    apic_15 { pt3dadd( 422.363, 384.797, 37.5063, 0.765 ) }
    apic_15 { pt3dadd( 423.358, 384.405, 37.7381, 0.7152 ) }
    apic_15 { pt3dadd( 423.745, 383.533, 37.982, 0.6214 ) }
    apic_15 { pt3dadd( 423.713, 382.438, 38.2203, 0.4534 ) }
    apic_15 { pt3dadd( 423.985, 381.524, 38.4325, 0.343 ) }
    apic_15 { pt3dadd( 424.787, 380.939, 38.6114, 0.3068 ) }
    apic_15 { pt3dadd( 425.423, 380.197, 38.7545, 0.3356 ) }
    apic_15 { pt3dadd( 426.102, 379.699, 38.8486, 0.3818 ) }
    apic_15 { pt3dadd( 426.56, 378.738, 38.9166, 0.5014 ) }
    apic_15 { pt3dadd( 426.594, 377.606, 38.9791, 0.5586 ) }
    apic_15 { pt3dadd( 426.807, 376.503, 39.0564, 0.778 ) }
    apic_15 { pt3dadd( 427.104, 375.405, 39.1443, 0.8636 ) }
    apic_15 { pt3dadd( 427.568, 374.373, 39.2395, 0.7508 ) }
    apic_15 { pt3dadd( 428.061, 373.376, 39.3526, 0.715 ) }
    apic_15 { pt3dadd( 428.873, 372.573, 39.4752, 0.4934 ) }
    apic_15 { pt3dadd( 429.758, 371.854, 39.6054, 0.3794 ) }
    apic_15 { pt3dadd( 430.556, 371.06, 39.7398, 0.3284 ) }
    apic_15 { pt3dadd( 431.024, 370.037, 39.8835, 0.371 ) }
    apic_15 { pt3dadd( 431.403, 369.009, 40.0445, 0.4686 ) }
    apic_15 { pt3dadd( 432.341, 368.4, 40.215, 0.561 ) }
    apic_15 { pt3dadd( 433.076, 367.971, 40.4222, 0.4754 ) }
    apic_15 { pt3dadd( 433.923, 367.323, 40.6406, 0.42 ) }
    apic_15 { pt3dadd( 434.427, 366.382, 40.8332, 0.5022 ) }
    apic_15 { pt3dadd( 435.229, 365.704, 40.983, 0.4434 ) }
    apic_15 { pt3dadd( 436.014, 365.148, 41.1244, 0.4442 ) }
    apic_15 { pt3dadd( 436.943, 364.703, 41.2636, 0.3704 ) }
    apic_15 { pt3dadd( 437.943, 364.199, 41.4114, 0.3696 ) }
    apic_15 { pt3dadd( 439.05, 363.913, 41.5738, 0.394 ) }
    apic_15 { pt3dadd( 440.153, 363.782, 41.7427, 0.5428 ) }
    apic_15 { pt3dadd( 441.097, 363.227, 41.9325, 0.544 ) }
    apic_15 { pt3dadd( 442.188, 363.157, 42.1459, 0.5078 ) }
    apic_15 { pt3dadd( 443.147, 362.592, 42.3716, 0.3988 ) }
    apic_15 { pt3dadd( 443.799, 361.705, 42.5872, 0.3988 ) }
    apic_15 { pt3dadd( 444.322, 360.739, 42.8067, 0.3338 ) }
    apic_15 { pt3dadd( 444.916, 359.793, 43.0282, 0.3 ) }
    apic_15 { pt3dadd( 445.558, 358.853, 43.2368, 0.2746 ) }
    apic_15 { pt3dadd( 446.169, 357.887, 43.4196, 0.2746 ) }
    apic_15 { pt3dadd( 446.758, 356.906, 43.5728, 0.2746 ) }
    apic_15 { pt3dadd( 447.409, 355.969, 43.6937, 0.2746 ) }
    apic_15 { pt3dadd( 448.154, 355.106, 43.7777, 0.2746 ) }
    apic_15 { pt3dadd( 449.021, 354.359, 43.829, 0.2746 ) }
    apic_15 { pt3dadd( 449.862, 353.584, 43.8558, 0.2746 ) }
    apic_15 { pt3dadd( 450.696, 352.802, 43.8668, 0.2746 ) }
    apic_15 { pt3dadd( 451.521, 352.01, 43.8693, 0.2746 ) }
    apic_15 { pt3dadd( 452.306, 351.178, 43.8704, 0.2746 ) }
    apic_15 { pt3dadd( 453.017, 350.292, 43.8813, 0.2746 ) }
    apic_15 { pt3dadd( 453.665, 349.355, 43.9071, 0.2746 ) }
    apic_15 { pt3dadd( 454.281, 348.392, 43.9466, 0.2746 ) }
    apic_15 { pt3dadd( 454.896, 347.426, 44.0006, 0.2746 ) }
    apic_15 { pt3dadd( 455.669, 346.604, 44.0642, 0.2744 ) }
    apic_15 { pt3dadd( 456.485, 345.824, 44.1344, 0.2744 ) }
    apic_15 { pt3dadd( 457.014, 344.819, 44.2221, 0.2742 ) }
    apic_15 { pt3dadd( 457.195, 343.741, 44.3425, 0.274 ) }
    apic_15 { pt3dadd( 457.657, 342.745, 44.4914, 0.2736 ) }
    apic_15 { pt3dadd( 458.4, 341.904, 44.6541, 0.2728 ) }
    apic_15 { pt3dadd( 459.248, 341.18, 44.8115, 0.2712 ) }
    apic_15 { pt3dadd( 459.667, 340.157, 44.959, 0.2684 ) }
    apic_15 { pt3dadd( 460.315, 339.218, 45.073, 0.2626 ) }
    apic_15 { pt3dadd( 461.025, 338.331, 45.1405, 0.2542 ) }
    apic_15 { pt3dadd( 461.919, 337.632, 45.159, 0.2288 ) }
    apic_15 { pt3dadd( 462.896, 337.048, 45.0041, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_3 (entry count 67/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 187.962, 189.721, 14.6267, 0.3784 ) }
    apic_9 { pt3dadd( 187.871, 188.896, 14.756, 0.4894 ) }
    apic_9 { pt3dadd( 187.75, 187.78, 14.9161, 0.5646 ) }
    apic_9 { pt3dadd( 187.268, 186.784, 15.1015, 0.6506 ) }
    apic_9 { pt3dadd( 186.718, 185.798, 15.303, 0.6132 ) }
    apic_9 { pt3dadd( 186.406, 184.755, 15.4961, 0.5846 ) }
    apic_9 { pt3dadd( 185.769, 183.932, 15.6842, 0.5616 ) }
    apic_9 { pt3dadd( 184.82, 183.32, 15.8683, 0.6016 ) }
    apic_9 { pt3dadd( 183.715, 183.101, 16.0444, 0.5044 ) }
    apic_9 { pt3dadd( 182.785, 182.577, 16.2156, 0.4684 ) }
    apic_9 { pt3dadd( 182.345, 181.548, 16.3871, 0.6176 ) }
    apic_9 { pt3dadd( 182.16, 180.421, 16.5639, 0.5328 ) }
    apic_9 { pt3dadd( 181.63, 179.527, 16.7579, 0.5276 ) }
    apic_9 { pt3dadd( 180.556, 179.444, 16.9747, 0.4674 ) }
    apic_9 { pt3dadd( 179.58, 179.001, 17.2101, 0.6006 ) }
    apic_9 { pt3dadd( 178.609, 178.395, 17.4395, 0.5752 ) }
    apic_9 { pt3dadd( 177.678, 177.733, 17.6444, 0.7052 ) }
    apic_9 { pt3dadd( 176.925, 177.161, 17.7883, 0.7732 ) }
    apic_9 { pt3dadd( 175.844, 176.19, 17.9016, 0.8244 ) }
    apic_9 { pt3dadd( 175.147, 175.332, 18.008, 0.8248 ) }
    apic_9 { pt3dadd( 174.594, 174.33, 18.1137, 0.826 ) }
    apic_9 { pt3dadd( 173.91, 173.413, 18.2253, 0.8278 ) }
    apic_9 { pt3dadd( 173.224, 172.498, 18.3465, 0.8322 ) }
    apic_9 { pt3dadd( 172.403, 171.701, 18.4741, 0.8344 ) }
    apic_9 { pt3dadd( 171.582, 170.904, 18.6018, 0.8684 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 92/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 187.962, 189.721, 14.6267, 0.3784 ) }
    apic_4 { pt3dadd( 186.907, 189.53, 14.0672, 0.2288 ) }
    apic_4 { pt3dadd( 185.862, 189.159, 14.1049, 0.6218 ) }
    apic_4 { pt3dadd( 185.321, 188.393, 14.1341, 0.718 ) }
    apic_4 { pt3dadd( 184.67, 187.566, 14.1488, 0.6968 ) }
    apic_4 { pt3dadd( 183.8, 186.879, 14.1369, 0.7102 ) }
    apic_4 { pt3dadd( 182.819, 186.56, 14.1183, 0.7094 ) }
    apic_4 { pt3dadd( 181.75, 186.943, 14.0967, 0.6018 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_4 { pt3dadd( 180.87, 186.361, 14.0792, 0.6904 ) }
    apic_4 { pt3dadd( 180.212, 185.434, 14.0603, 0.5994 ) }
    apic_4 { pt3dadd( 179.196, 185.085, 14.0287, 0.525 ) }
    apic_4 { pt3dadd( 178.145, 184.712, 13.9851, 0.3886 ) }
    apic_4 { pt3dadd( 177.366, 183.979, 13.9148, 0.3556 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 5/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 171.582, 170.904, 18.6018, 0.8684 ) }
    apic_11 { pt3dadd( 169.765, 169.928, 18.7518, 0.7858 ) }
    apic_11 { pt3dadd( 169.03, 169.08, 18.9141, 0.6528 ) }
    apic_11 { pt3dadd( 168.351, 168.171, 19.0933, 0.5378 ) }
    apic_11 { pt3dadd( 167.715, 167.233, 19.2775, 0.6016 ) }
    apic_11 { pt3dadd( 167.069, 166.303, 19.4669, 0.7468 ) }
    apic_11 { pt3dadd( 166.403, 165.388, 19.6707, 0.8858 ) }
    apic_11 { pt3dadd( 165.696, 164.498, 19.8879, 0.861 ) }
    apic_11 { pt3dadd( 165.015, 163.833, 20.1398, 0.8134 ) }
    apic_11 { pt3dadd( 164.26, 163.133, 20.4213, 0.7322 ) }
    apic_11 { pt3dadd( 163.949, 162.073, 20.6989, 0.7776 ) }
    apic_11 { pt3dadd( 164.232, 161.042, 20.9343, 0.824 ) }
    apic_11 { pt3dadd( 163.976, 159.995, 21.1322, 0.8664 ) }
    apic_11 { pt3dadd( 163.213, 159.233, 21.3101, 0.927 ) }
    apic_11 { pt3dadd( 162.358, 158.516, 21.4608, 0.8984 ) }
    apic_11 { pt3dadd( 161.415, 158.077, 21.5805, 0.8428 ) }
    apic_11 { pt3dadd( 160.833, 157.178, 21.7064, 0.9822 ) }
    apic_11 { pt3dadd( 160.744, 156.09, 21.8579, 0.9774 ) }
    apic_11 { pt3dadd( 160.591, 155.033, 22.0389, 0.8744 ) }
    apic_11 { pt3dadd( 160.591, 153.889, 22.2323, 0.6814 ) }
    apic_11 { pt3dadd( 160.485, 152.785, 22.4248, 0.7914 ) }
    apic_11 { pt3dadd( 160.464, 151.753, 22.5961, 0.7844 ) }
    apic_11 { pt3dadd( 160.673, 150.682, 22.7582, 0.88 ) }
    apic_11 { pt3dadd( 160.148, 149.738, 22.9264, 0.9876 ) }
    apic_11 { pt3dadd( 159.582, 148.745, 23.1034, 1.0668 ) }
    apic_11 { pt3dadd( 159.37, 147.72, 23.3097, 1.112 ) }
    apic_11 { pt3dadd( 159.141, 146.673, 23.5287, 1.0026 ) }
    apic_11 { pt3dadd( 158.251, 146.083, 23.7795, 0.8232 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 33/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 171.582, 170.904, 18.6018, 0.8684 ) }
    apic_10 { pt3dadd( 170.48, 170.717, 19.3234, 0.6864 ) }
    apic_10 { pt3dadd( 169.443, 170.915, 19.5691, 0.4962 ) }
    apic_10 { pt3dadd( 168.582, 171.37, 19.6734, 0.4476 ) }
    apic_10 { pt3dadd( 167.962, 170.736, 19.7795, 0.3768 ) }
    apic_10 { pt3dadd( 167.131, 170.25, 19.8415, 0.3816 ) }
    apic_10 { pt3dadd( 166.572, 169.937, 19.8008, 0.4164 ) }
    apic_10 { pt3dadd( 165.544, 169.826, 19.6527, 0.584 ) }
    apic_10 { pt3dadd( 164.77, 169.137, 19.4322, 0.6222 ) }
    apic_10 { pt3dadd( 163.843, 168.475, 19.1913, 0.643 ) }
    apic_10 { pt3dadd( 162.899, 167.839, 18.9674, 0.6968 ) }
    apic_10 { pt3dadd( 161.922, 167.268, 18.7947, 0.723 ) }
    apic_10 { pt3dadd( 160.94, 166.73, 18.678, 0.6702 ) }
    apic_10 { pt3dadd( 159.866, 166.576, 18.587, 0.6068 ) }
    apic_10 { pt3dadd( 158.855, 166.098, 18.5027, 0.7796 ) }
    apic_10 { pt3dadd( 158.172, 165.278, 18.4314, 0.8352 ) }
    apic_10 { pt3dadd( 157.447, 164.413, 18.3763, 0.8498 ) }
    apic_10 { pt3dadd( 156.695, 163.554, 18.3356, 0.8486 ) }
    apic_10 { pt3dadd( 155.859, 162.781, 18.299, 0.7558 ) }
    apic_10 { pt3dadd( 154.934, 162.144, 18.2645, 0.5652 ) }
    apic_10 { pt3dadd( 153.906, 161.669, 18.2307, 0.5302 ) }
    apic_10 { pt3dadd( 153.031, 161.019, 18.1928, 0.5228 ) }
    apic_10 { pt3dadd( 152.112, 160.486, 18.1155, 0.686 ) }
    apic_10 { pt3dadd( 151.134, 160.471, 17.9877, 0.817 ) }
    apic_10 { pt3dadd( 150.224, 161.128, 17.8338, 0.7488 ) }
    apic_10 { pt3dadd( 149.22, 161.536, 17.6756, 0.7594 ) }
    apic_10 { pt3dadd( 148.118, 161.751, 17.5216, 0.5708 ) }
    apic_10 { pt3dadd( 147.081, 161.962, 17.3953, 0.5454 ) }
    apic_10 { pt3dadd( 146.148, 161.839, 17.3429, 0.5264 ) }
    apic_10 { pt3dadd( 145.06, 161.597, 17.3508, 0.5838 ) }
    apic_10 { pt3dadd( 144.062, 161.193, 17.3729, 0.4704 ) }
    apic_10 { pt3dadd( 143.025, 161.139, 17.3708, 0.4108 ) }
    apic_10 { pt3dadd( 142.076, 161.139, 17.3745, 0.484 ) }
    apic_10 { pt3dadd( 141.312, 160.74, 17.3992, 0.4148 ) }
    apic_10 { pt3dadd( 140.624, 160.099, 17.3821, 0.3664 ) }
    apic_10 { pt3dadd( 139.782, 159.589, 17.3093, 0.3464 ) }
    apic_10 { pt3dadd( 138.797, 159.096, 17.2195, 0.428 ) }
    apic_10 { pt3dadd( 137.726, 158.749, 17.1238, 0.4606 ) }
    apic_10 { pt3dadd( 136.836, 158.177, 17.0332, 0.4104 ) }
    apic_10 { pt3dadd( 135.859, 157.671, 16.9343, 0.3966 ) }
    apic_10 { pt3dadd( 134.909, 157.593, 16.8131, 0.445 ) }
    apic_10 { pt3dadd( 133.868, 157.932, 16.6799, 0.6328 ) }
    apic_10 { pt3dadd( 132.884, 157.509, 16.5416, 0.7332 ) }
    apic_10 { pt3dadd( 132.038, 156.857, 16.3877, 0.7494 ) }
    apic_10 { pt3dadd( 131.288, 156.003, 16.2326, 0.6896 ) }
    apic_10 { pt3dadd( 130.386, 155.311, 16.0942, 0.5582 ) }
    apic_10 { pt3dadd( 129.538, 154.567, 15.976, 0.4128 ) }
    apic_10 { pt3dadd( 128.461, 154.272, 15.869, 0.3526 ) }
    apic_10 { pt3dadd( 127.43, 154.056, 15.7696, 0.3692 ) }
    apic_10 { pt3dadd( 126.501, 153.453, 15.6948, 0.465 ) }
    apic_10 { pt3dadd( 125.636, 152.811, 15.6221, 0.5546 ) }
    apic_10 { pt3dadd( 124.666, 152.234, 15.5597, 0.462 ) }
    apic_10 { pt3dadd( 123.686, 151.661, 15.5055, 0.4016 ) }
    apic_10 { pt3dadd( 122.694, 151.09, 15.4493, 0.4372 ) }
    apic_10 { pt3dadd( 121.689, 150.546, 15.3806, 0.4724 ) }
    apic_10 { pt3dadd( 120.641, 150.159, 15.2834, 0.4584 ) }
    apic_10 { pt3dadd( 119.601, 150.01, 15.1448, 0.3598 ) }
    apic_10 { pt3dadd( 118.528, 149.613, 14.9753, 0.3008 ) }
    apic_10 { pt3dadd( 117.459, 149.207, 14.7867, 0.2762 ) }
    apic_10 { pt3dadd( 116.409, 148.759, 14.5876, 0.2776 ) }
    apic_10 { pt3dadd( 115.347, 148.369, 14.3855, 0.2802 ) }
    apic_10 { pt3dadd( 114.211, 148.349, 14.1846, 0.285 ) }
    apic_10 { pt3dadd( 113.074, 148.329, 13.9859, 0.2938 ) }
    apic_10 { pt3dadd( 111.942, 148.44, 13.7902, 0.3112 ) }
    apic_10 { pt3dadd( 110.814, 148.627, 13.6004, 0.337 ) }
    apic_10 { pt3dadd( 109.687, 148.742, 13.4169, 0.4172 ) }
    apic_10 { pt3dadd( 108.566, 148.56, 13.2328, 0.409 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_10 { pt3dadd( 107.446, 148.377, 13.036, 0.468 ) }
    apic_10 { pt3dadd( 106.332, 148.115, 12.8368, 0.4464 ) }
    apic_10 { pt3dadd( 105.342, 147.577, 12.6428, 0.5848 ) }
    apic_10 { pt3dadd( 104.437, 146.879, 12.4589, 0.4322 ) }
    apic_10 { pt3dadd( 103.475, 146.681, 12.2696, 0.305 ) }
    apic_10 { pt3dadd( 102.331, 146.67, 11.776, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 6/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 177.366, 183.979, 13.9148, 0.3556 ) }
    apic_8 { pt3dadd( 176.623, 183.809, 14.0202, 0.4576 ) }
    apic_8 { pt3dadd( 175.554, 183.532, 13.8681, 0.5846 ) }
    apic_8 { pt3dadd( 174.487, 183.189, 13.8079, 0.6392 ) }
    apic_8 { pt3dadd( 173.435, 182.771, 13.7387, 0.5984 ) }
    apic_8 { pt3dadd( 172.449, 182.378, 13.6791, 0.525 ) }
    apic_8 { pt3dadd( 171.535, 182.152, 13.6095, 0.607 ) }
    apic_8 { pt3dadd( 170.596, 181.772, 13.5368, 0.6168 ) }
    apic_8 { pt3dadd( 169.677, 181.181, 13.4608, 0.638 ) }
    apic_8 { pt3dadd( 168.556, 180.974, 13.3767, 0.6634 ) }
    apic_8 { pt3dadd( 167.478, 180.604, 13.2843, 0.7766 ) }
    apic_8 { pt3dadd( 166.523, 179.992, 13.1816, 0.8952 ) }
    apic_8 { pt3dadd( 165.514, 179.507, 13.0667, 0.8722 ) }
    apic_8 { pt3dadd( 164.537, 178.936, 12.94, 0.865 ) }
    apic_8 { pt3dadd( 163.467, 178.584, 12.8052, 0.678 ) }
    apic_8 { pt3dadd( 162.366, 178.287, 12.6702, 0.7174 ) }
    apic_8 { pt3dadd( 161.281, 178.131, 12.5369, 0.7474 ) }
    apic_8 { pt3dadd( 160.209, 178.258, 12.4311, 0.7818 ) }
    apic_8 { pt3dadd( 159.136, 177.955, 12.357, 0.7206 ) }
    apic_8 { pt3dadd( 158.331, 177.447, 12.2795, 0.7564 ) }
    apic_8 { pt3dadd( 157.305, 177.291, 12.2112, 0.7836 ) }
    apic_8 { pt3dadd( 156.682, 176.759, 12.1688, 0.797 ) }
    apic_8 { pt3dadd( 155.828, 176.319, 12.132, 0.7718 ) }
    apic_8 { pt3dadd( 155.147, 175.54, 12.1179, 0.7382 ) }
    apic_8 { pt3dadd( 154.183, 175.124, 12.1104, 0.614 ) }
    apic_8 { pt3dadd( 153.142, 174.834, 12.13, 0.6832 ) }
    apic_8 { pt3dadd( 152.031, 174.826, 12.1528, 0.7302 ) }
    apic_8 { pt3dadd( 150.934, 174.628, 12.1835, 0.7548 ) }
    apic_8 { pt3dadd( 150.059, 174.025, 12.2374, 0.646 ) }
    apic_8 { pt3dadd( 149.27, 173.488, 12.2865, 0.737 ) }
    apic_8 { pt3dadd( 148.163, 173.489, 12.3289, 0.8578 ) }
    apic_8 { pt3dadd( 147.103, 173.842, 12.3634, 0.8574 ) }
    apic_8 { pt3dadd( 146.08, 173.831, 12.4073, 0.7996 ) }
    apic_8 { pt3dadd( 145.018, 173.536, 12.4534, 0.7426 ) }
    apic_8 { pt3dadd( 144.138, 173.453, 12.5096, 0.6222 ) }
    apic_8 { pt3dadd( 143.316, 173.076, 12.5416, 0.698 ) }
    apic_8 { pt3dadd( 142.206, 172.8, 12.5535, 0.7596 ) }
    apic_8 { pt3dadd( 141.077, 172.631, 12.5481, 0.7994 ) }
    apic_8 { pt3dadd( 139.94, 172.618, 12.5289, 0.7778 ) }
    apic_8 { pt3dadd( 138.811, 172.793, 12.5053, 0.743 ) }
    apic_8 { pt3dadd( 137.707, 172.996, 12.493, 0.6528 ) }
    apic_8 { pt3dadd( 136.668, 172.833, 12.4945, 0.6104 ) }
    apic_8 { pt3dadd( 135.681, 172.496, 12.4956, 0.6118 ) }
    apic_8 { pt3dadd( 134.842, 171.756, 12.5097, 0.684 ) }
    apic_8 { pt3dadd( 133.88, 171.201, 12.5481, 0.7082 ) }
    apic_8 { pt3dadd( 132.766, 171.19, 12.6166, 0.5996 ) }
    apic_8 { pt3dadd( 131.701, 171.034, 12.7052, 0.6852 ) }
    apic_8 { pt3dadd( 130.703, 170.708, 12.8248, 0.5948 ) }
    apic_8 { pt3dadd( 129.778, 170.956, 12.9635, 0.4926 ) }
    apic_8 { pt3dadd( 128.845, 171.51, 13.1079, 0.4442 ) }
    apic_8 { pt3dadd( 127.924, 171.236, 13.282, 0.5836 ) }
    apic_8 { pt3dadd( 126.988, 170.936, 13.5036, 0.6454 ) }
    apic_8 { pt3dadd( 125.916, 170.79, 13.772, 0.5708 ) }
    apic_8 { pt3dadd( 125.162, 170.124, 14.0846, 0.4362 ) }
    apic_8 { pt3dadd( 124.366, 169.874, 14.4049, 0.3968 ) }
    apic_8 { pt3dadd( 123.599, 170.415, 14.7344, 0.4468 ) }
    apic_8 { pt3dadd( 122.804, 171.098, 15.0528, 0.6286 ) }
    apic_8 { pt3dadd( 121.772, 171.123, 15.3711, 0.762 ) }
    apic_8 { pt3dadd( 120.633, 171.129, 15.6772, 0.6264 ) }
    apic_8 { pt3dadd( 119.514, 171.121, 15.9763, 0.6318 ) }
    apic_8 { pt3dadd( 118.438, 170.947, 16.281, 0.5392 ) }
    apic_8 { pt3dadd( 117.486, 170.441, 16.5705, 0.6364 ) }
    apic_8 { pt3dadd( 116.465, 170.688, 16.8371, 0.6564 ) }
    apic_8 { pt3dadd( 115.48, 171.173, 17.0995, 0.5546 ) }
    apic_8 { pt3dadd( 114.42, 171.49, 17.3755, 0.5826 ) }
    apic_8 { pt3dadd( 113.527, 172.012, 17.6738, 0.4988 ) }
    apic_8 { pt3dadd( 112.403, 172.113, 17.9845, 0.5434 ) }
    apic_8 { pt3dadd( 111.357, 171.895, 18.3031, 0.572 ) }
    apic_8 { pt3dadd( 110.293, 171.672, 18.6019, 0.6576 ) }
    apic_8 { pt3dadd( 109.169, 171.738, 18.8824, 0.6574 ) }
    apic_8 { pt3dadd( 108.045, 171.805, 19.1487, 0.5148 ) }
    apic_8 { pt3dadd( 106.997, 172.209, 19.3983, 0.4826 ) }
    apic_8 { pt3dadd( 106.106, 172.897, 19.636, 0.439 ) }
    apic_8 { pt3dadd( 105.318, 172.368, 19.8801, 0.5102 ) }
    apic_8 { pt3dadd( 104.382, 171.916, 20.1049, 0.5908 ) }
    apic_8 { pt3dadd( 103.376, 171.667, 20.3417, 0.5314 ) }
    apic_8 { pt3dadd( 102.374, 171.667, 20.5719, 0.5198 ) }
    apic_8 { pt3dadd( 101.308, 171.667, 20.7777, 0.7062 ) }
    apic_8 { pt3dadd( 100.324, 172.086, 20.9688, 0.7288 ) }
    apic_8 { pt3dadd( 99.8485, 173.013, 21.1598, 0.7372 ) }
    apic_8 { pt3dadd( 100.191, 174.059, 21.6955, 0.9152 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 87/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 177.366, 183.979, 13.9148, 0.3556 ) }
    apic_5 { pt3dadd( 177.136, 183.428, 13.806, 0.3718 ) }
    apic_5 { pt3dadd( 176.738, 182.378, 13.6491, 0.4832 ) }
    apic_5 { pt3dadd( 176.524, 181.275, 13.4464, 0.5228 ) }
    apic_5 { pt3dadd( 176.292, 180.171, 13.2128, 0.7222 ) }
    apic_5 { pt3dadd( 176.014, 179.061, 12.971, 0.7074 ) }
    apic_5 { pt3dadd( 175.857, 178.049, 12.7284, 0.717 ) }
    apic_5 { pt3dadd( 175.657, 177.127, 12.4835, 0.7832 ) }
    apic_5 { pt3dadd( 174.967, 176.373, 12.2798, 0.901 ) }
    apic_5 { pt3dadd( 174.094, 174.658, 12.1823, 0.9136 ) }
    apic_5 { pt3dadd( 173.914, 173.53, 12.146, 0.7914 ) }
    apic_5 { pt3dadd( 173.49, 172.488, 12.1496, 0.5862 ) }
    apic_5 { pt3dadd( 172.59, 171.801, 12.1728, 0.5588 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_5 { pt3dadd( 172.198, 170.773, 12.1899, 0.624 ) }
    apic_5 { pt3dadd( 172.65, 169.837, 12.1647, 0.6412 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 2/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 158.251, 146.083, 23.7795, 0.8232 ) }
    apic_13 { pt3dadd( 158.282, 144.66, 24.0904, 0.6054 ) }
    apic_13 { pt3dadd( 158.393, 143.546, 24.4107, 0.5586 ) }
    apic_13 { pt3dadd( 158.867, 142.518, 24.7364, 0.7982 ) }
    apic_13 { pt3dadd( 159.3, 141.48, 25.0633, 0.8012 ) }
    apic_13 { pt3dadd( 159.612, 140.411, 25.3888, 0.6622 ) }
    apic_13 { pt3dadd( 159.836, 139.32, 25.7039, 0.6486 ) }
    apic_13 { pt3dadd( 159.862, 138.177, 25.9941, 0.8116 ) }
    apic_13 { pt3dadd( 160.05, 137.107, 26.2537, 0.886 ) }
    apic_13 { pt3dadd( 160.595, 136.146, 26.4772, 0.7564 ) }
    apic_13 { pt3dadd( 160.74, 135.112, 26.703, 0.672 ) }
    apic_13 { pt3dadd( 160.749, 134.062, 26.9625, 0.6732 ) }
    apic_13 { pt3dadd( 161.129, 133.0, 27.2443, 0.8248 ) }
    apic_13 { pt3dadd( 161.658, 131.997, 27.5528, 0.8398 ) }
    apic_13 { pt3dadd( 162.251, 131.117, 27.9099, 0.7848 ) }
    apic_13 { pt3dadd( 162.572, 130.037, 28.308, 0.8556 ) }
    apic_13 { pt3dadd( 162.0, 129.24, 28.754, 0.836 ) }
    apic_13 { pt3dadd( 161.194, 128.62, 29.2463, 0.8452 ) }
    apic_13 { pt3dadd( 160.724, 127.593, 29.7699, 0.6418 ) }
    apic_13 { pt3dadd( 160.223, 126.584, 30.3055, 0.6482 ) }
    apic_13 { pt3dadd( 159.638, 125.623, 30.8364, 0.6284 ) }
    apic_13 { pt3dadd( 159.416, 124.528, 31.3513, 0.5156 ) }
    apic_13 { pt3dadd( 159.284, 123.4, 31.8413, 0.4486 ) }
    apic_13 { pt3dadd( 159.218, 122.271, 32.3086, 0.5488 ) }
    apic_13 { pt3dadd( 159.218, 121.14, 32.7628, 0.5616 ) }
    apic_13 { pt3dadd( 159.218, 120.019, 33.2136, 0.5084 ) }
    apic_13 { pt3dadd( 159.24, 118.905, 33.6683, 0.554 ) }
    apic_13 { pt3dadd( 159.61, 117.83, 34.125, 0.626 ) }
    apic_13 { pt3dadd( 160.018, 116.78, 34.5839, 0.8206 ) }
    apic_13 { pt3dadd( 160.484, 115.765, 35.0484, 0.6558 ) }
    apic_13 { pt3dadd( 160.838, 114.702, 35.5152, 0.6132 ) }
    apic_13 { pt3dadd( 161.103, 113.598, 35.9792, 0.6302 ) }
    apic_13 { pt3dadd( 161.647, 112.688, 36.4381, 0.6536 ) }
    apic_13 { pt3dadd( 162.434, 111.897, 36.8942, 0.508 ) }
    apic_13 { pt3dadd( 162.068, 110.917, 37.3534, 0.469 ) }
    apic_13 { pt3dadd( 161.937, 109.911, 37.8132, 0.42 ) }
    apic_13 { pt3dadd( 162.766, 109.403, 38.2508, 0.444 ) }
    apic_13 { pt3dadd( 163.72, 108.933, 38.67, 0.6178 ) }
    apic_13 { pt3dadd( 164.626, 108.385, 39.0886, 0.541 ) }
    apic_13 { pt3dadd( 164.873, 107.379, 39.5018, 0.505 ) }
    apic_13 { pt3dadd( 165.156, 106.305, 39.9031, 0.608 ) }
    apic_13 { pt3dadd( 165.731, 105.346, 40.2945, 0.6616 ) }
    apic_13 { pt3dadd( 166.094, 104.282, 40.6854, 0.7416 ) }
    apic_13 { pt3dadd( 166.571, 103.273, 41.0754, 0.7548 ) }
    apic_13 { pt3dadd( 167.306, 102.4, 41.4616, 0.7488 ) }
    apic_13 { pt3dadd( 168.13, 101.617, 41.8566, 0.6572 ) }
    apic_13 { pt3dadd( 169.018, 100.924, 42.2587, 0.6498 ) }
    apic_13 { pt3dadd( 169.726, 100.065, 42.6857, 0.5328 ) }
    apic_13 { pt3dadd( 170.25, 99.2285, 43.1715, 0.5892 ) }
    apic_13 { pt3dadd( 171.083, 98.5827, 43.7256, 0.511 ) }
    apic_13 { pt3dadd( 171.987, 97.9377, 44.3388, 0.567 ) }
    apic_13 { pt3dadd( 172.644, 97.0534, 44.996, 0.6104 ) }
    apic_13 { pt3dadd( 173.055, 96.0333, 45.6823, 0.7546 ) }
    apic_13 { pt3dadd( 173.404, 94.9927, 46.403, 0.7128 ) }
    apic_13 { pt3dadd( 174.15, 94.2011, 47.133, 0.5338 ) }
    apic_13 { pt3dadd( 174.325, 93.1671, 47.8626, 0.466 ) }
    apic_13 { pt3dadd( 174.18, 92.1387, 48.5839, 0.4322 ) }
    apic_13 { pt3dadd( 173.71, 91.2736, 49.2878, 0.3814 ) }
    apic_13 { pt3dadd( 173.17, 90.4631, 51.2103, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 61/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 158.251, 146.083, 23.7795, 0.8232 ) }
    apic_12 { pt3dadd( 157.256, 146.402, 25.3383, 0.4576 ) }
    apic_12 { pt3dadd( 156.224, 146.263, 26.3785, 0.6808 ) }
    apic_12 { pt3dadd( 155.297, 145.599, 26.8147, 0.6702 ) }
    apic_12 { pt3dadd( 154.571, 144.783, 27.3414, 0.6844 ) }
    apic_12 { pt3dadd( 153.8, 144.054, 27.9378, 0.776 ) }
    apic_12 { pt3dadd( 152.841, 143.646, 28.581, 0.8566 ) }
    apic_12 { pt3dadd( 151.857, 143.261, 29.2379, 0.983 ) }
    apic_12 { pt3dadd( 150.849, 142.897, 29.8752, 0.8704 ) }
    apic_12 { pt3dadd( 149.927, 142.323, 30.4755, 0.7448 ) }
    apic_12 { pt3dadd( 148.863, 141.921, 31.01, 0.5664 ) }
    apic_12 { pt3dadd( 147.721, 141.912, 31.4678, 0.428 ) }
    apic_12 { pt3dadd( 146.711, 141.912, 31.8335, 0.3818 ) }
    apic_12 { pt3dadd( 145.78, 141.346, 32.1283, 0.4178 ) }
    apic_12 { pt3dadd( 144.864, 141.017, 32.417, 0.581 ) }
    apic_12 { pt3dadd( 144.428, 140.536, 32.7698, 0.6452 ) }
    apic_12 { pt3dadd( 143.602, 139.954, 33.2038, 0.5476 ) }
    apic_12 { pt3dadd( 142.769, 139.364, 33.7086, 0.5036 ) }
    apic_12 { pt3dadd( 141.846, 138.829, 34.2334, 0.6712 ) }
    apic_12 { pt3dadd( 140.984, 138.116, 34.7558, 0.689 ) }
    apic_12 { pt3dadd( 140.256, 137.267, 35.2439, 0.5416 ) }
    apic_12 { pt3dadd( 139.628, 136.314, 35.6768, 0.4574 ) }
    apic_12 { pt3dadd( 138.86, 135.49, 36.071, 0.5288 ) }
    apic_12 { pt3dadd( 138.081, 134.695, 36.4501, 0.699 ) }
    apic_12 { pt3dadd( 137.271, 133.975, 36.8393, 0.6032 ) }
    apic_12 { pt3dadd( 136.518, 133.219, 37.2232, 0.5922 ) }
    apic_12 { pt3dadd( 135.584, 132.617, 37.5995, 0.677 ) }
    apic_12 { pt3dadd( 134.587, 132.241, 37.987, 0.5536 ) }
    apic_12 { pt3dadd( 133.662, 131.722, 38.3768, 0.5424 ) }
    apic_12 { pt3dadd( 132.814, 131.035, 38.7565, 0.3814 ) }
    apic_12 { pt3dadd( 131.975, 130.319, 39.1121, 0.305 ) }
    apic_12 { pt3dadd( 131.056, 129.677, 39.415, 0.2288 ) }
    apic_12 { pt3dadd( 130.158, 128.999, 39.851, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 94/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 172.65, 169.837, 12.1647, 0.6412 ) }
    apic_7 { pt3dadd( 171.976, 168.826, 12.1125, 0.4896 ) }
    apic_7 { pt3dadd( 171.443, 167.837, 12.0693, 0.412 ) }
    apic_7 { pt3dadd( 170.961, 166.8, 12.0316, 0.4252 ) }
    apic_7 { pt3dadd( 170.331, 165.862, 11.9983, 0.6014 ) }
    apic_7 { pt3dadd( 169.661, 164.961, 11.9608, 0.6494 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    apic_7 { pt3dadd( 169.079, 164.332, 11.8856, 0.718 ) }
    apic_7 { pt3dadd( 168.987, 163.288, 11.8094, 0.7166 ) }
    apic_7 { pt3dadd( 168.792, 162.164, 11.753, 0.6512 ) }
    apic_7 { pt3dadd( 168.593, 161.04, 11.735, 0.6064 ) }
    apic_7 { pt3dadd( 168.181, 159.984, 11.7645, 0.609 ) }
    apic_7 { pt3dadd( 167.668, 158.961, 11.8436, 0.6568 ) }
    apic_7 { pt3dadd( 167.241, 157.919, 11.9752, 0.765 ) }
    apic_7 { pt3dadd( 166.872, 156.864, 12.1469, 0.871 ) }
    apic_7 { pt3dadd( 166.581, 155.769, 12.3423, 0.84 ) }
    apic_7 { pt3dadd( 166.331, 154.655, 12.5436, 0.743 ) }
    apic_7 { pt3dadd( 165.869, 153.648, 12.7381, 0.756 ) }
    apic_7 { pt3dadd( 165.124, 152.785, 12.9158, 0.7578 ) }
    apic_7 { pt3dadd( 164.449, 151.866, 13.0672, 0.8694 ) }
    apic_7 { pt3dadd( 163.838, 150.906, 13.1883, 1.0092 ) }
    apic_7 { pt3dadd( 163.433, 149.837, 13.2786, 1.136 ) }
    apic_7 { pt3dadd( 163.026, 148.768, 13.3409, 1.098 ) }
    apic_7 { pt3dadd( 162.339, 147.883, 13.3659, 0.9806 ) }
    apic_7 { pt3dadd( 161.717, 146.962, 13.3605, 0.9922 ) }
    apic_7 { pt3dadd( 161.305, 145.917, 13.3524, 0.8148 ) }
    apic_7 { pt3dadd( 160.763, 144.951, 13.3514, 0.766 ) }
    apic_7 { pt3dadd( 160.006, 144.111, 13.351, 0.6876 ) }
    apic_7 { pt3dadd( 159.462, 143.14, 13.3499, 0.7126 ) }
    apic_7 { pt3dadd( 158.99, 142.197, 13.373, 0.8472 ) }
    apic_7 { pt3dadd( 158.075, 141.542, 13.4119, 0.898 ) }
    apic_7 { pt3dadd( 157.066, 141.093, 13.4532, 0.812 ) }
    apic_7 { pt3dadd( 156.351, 140.199, 13.4903, 0.6122 ) }
    apic_7 { pt3dadd( 156.141, 139.106, 13.5192, 0.6676 ) }
    apic_7 { pt3dadd( 155.803, 138.027, 13.5353, 0.5318 ) }
    apic_7 { pt3dadd( 155.407, 136.954, 13.5335, 0.524 ) }
    apic_7 { pt3dadd( 154.963, 135.911, 13.5153, 0.468 ) }
    apic_7 { pt3dadd( 154.349, 134.976, 13.4752, 0.5654 ) }
    apic_7 { pt3dadd( 153.683, 134.142, 13.4333, 0.6854 ) }
    apic_7 { pt3dadd( 152.849, 133.403, 13.4055, 0.7452 ) }
    apic_7 { pt3dadd( 151.871, 132.88, 13.3818, 0.7296 ) }
    apic_7 { pt3dadd( 150.786, 132.683, 13.3584, 0.6284 ) }
    apic_7 { pt3dadd( 149.713, 132.32, 13.3544, 0.563 ) }
    apic_7 { pt3dadd( 148.662, 131.894, 13.3815, 0.5342 ) }
    apic_7 { pt3dadd( 147.652, 131.361, 13.4337, 0.4908 ) }
    apic_7 { pt3dadd( 146.704, 130.744, 13.5071, 0.5902 ) }
    apic_7 { pt3dadd( 145.981, 129.862, 13.6025, 0.5872 ) }
    apic_7 { pt3dadd( 145.242, 129.002, 13.7159, 0.5758 ) }
    apic_7 { pt3dadd( 144.464, 128.197, 13.843, 0.5824 ) }
    apic_7 { pt3dadd( 143.811, 127.299, 13.9671, 0.4604 ) }
    apic_7 { pt3dadd( 143.266, 126.322, 14.0694, 0.4286 ) }
    apic_7 { pt3dadd( 142.47, 125.524, 14.1509, 0.3418 ) }
    apic_7 { pt3dadd( 141.6, 124.782, 14.2183, 0.3146 ) }
    apic_7 { pt3dadd( 140.63, 124.229, 14.2883, 0.3026 ) }
    apic_7 { pt3dadd( 139.632, 123.73, 14.3727, 0.3214 ) }
    apic_7 { pt3dadd( 138.8, 122.951, 14.4645, 0.387 ) }
    apic_7 { pt3dadd( 137.979, 122.156, 14.5542, 0.3588 ) }
    apic_7 { pt3dadd( 137.201, 121.351, 14.6403, 0.3484 ) }
    apic_7 { pt3dadd( 136.52, 120.509, 14.7068, 0.3536 ) }
    apic_7 { pt3dadd( 135.851, 119.697, 14.7259, 0.4722 ) }
    apic_7 { pt3dadd( 134.846, 119.166, 14.7029, 0.3932 ) }
    apic_7 { pt3dadd( 133.742, 118.962, 14.6486, 0.3254 ) }
    apic_7 { pt3dadd( 132.645, 118.81, 14.5704, 0.2744 ) }
    apic_7 { pt3dadd( 131.548, 118.658, 14.4842, 0.2744 ) }
    apic_7 { pt3dadd( 130.449, 118.506, 14.4145, 0.2742 ) }
    apic_7 { pt3dadd( 129.903, 117.915, 14.414, 0.274 ) }
    apic_7 { pt3dadd( 129.897, 116.898, 14.5168, 0.2736 ) }
    apic_7 { pt3dadd( 129.3, 115.976, 14.7097, 0.2728 ) }
    apic_7 { pt3dadd( 128.531, 115.147, 14.9981, 0.2712 ) }
    apic_7 { pt3dadd( 127.675, 114.406, 15.3453, 0.2684 ) }
    apic_7 { pt3dadd( 126.742, 113.777, 15.7031, 0.2626 ) }
    apic_7 { pt3dadd( 125.993, 112.969, 16.0541, 0.2542 ) }
    apic_7 { pt3dadd( 125.27, 112.132, 16.3912, 0.2288 ) }
    apic_7 { pt3dadd( 124.799, 111.271, 17.4258, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 67/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 172.65, 169.837, 12.1647, 0.6412 ) }
    apic_6 { pt3dadd( 173.519, 168.833, 11.3663, 0.2288 ) }
    apic_6 { pt3dadd( 173.567, 167.737, 10.937, 0.6016 ) }
    apic_6 { pt3dadd( 173.563, 166.632, 10.7579, 0.6796 ) }
    apic_6 { pt3dadd( 173.472, 165.755, 10.5076, 0.6298 ) }
    apic_6 { pt3dadd( 173.285, 164.638, 10.2156, 0.5658 ) }
    apic_6 { pt3dadd( 174.045, 163.876, 9.9168, 0.5388 ) }
    apic_6 { pt3dadd( 174.519, 162.93, 9.6397, 0.5006 ) }
    apic_6 { pt3dadd( 174.782, 161.816, 9.4074, 0.6024 ) }
    apic_6 { pt3dadd( 174.95, 160.692, 9.2287, 0.6396 ) }
    apic_6 { pt3dadd( 174.975, 159.55, 9.1019, 0.5286 ) }
    apic_6 { pt3dadd( 175.044, 158.413, 9.0068, 0.5098 ) }
    apic_6 { pt3dadd( 175.218, 157.284, 8.9194, 0.483 ) }
    apic_6 { pt3dadd( 175.39, 156.155, 8.824, 0.6218 ) }
    apic_6 { pt3dadd( 175.609, 155.054, 8.7053, 0.6514 ) }
    apic_6 { pt3dadd( 175.828, 153.954, 8.5593, 0.6682 ) }
    apic_6 { pt3dadd( 176.042, 152.833, 8.401, 0.8838 ) }
    apic_6 { pt3dadd( 176.255, 151.709, 8.2461, 1.0746 ) }
    apic_6 { pt3dadd( 176.637, 150.648, 8.107, 1.0698 ) }
    apic_6 { pt3dadd( 177.207, 149.656, 7.9903, 0.9704 ) }
    apic_6 { pt3dadd( 177.599, 148.605, 7.8971, 0.7678 ) }
    apic_6 { pt3dadd( 177.688, 147.488, 7.8147, 0.7102 ) }
    apic_6 { pt3dadd( 177.423, 146.493, 7.7414, 0.6604 ) }
    apic_6 { pt3dadd( 176.662, 145.668, 7.6772, 0.5214 ) }
    apic_6 { pt3dadd( 176.038, 144.742, 7.614, 0.489 ) }
    apic_6 { pt3dadd( 175.618, 143.733, 7.5586, 0.4806 ) }
    apic_6 { pt3dadd( 175.055, 143.053, 7.4725, 0.4434 ) }
    apic_6 { pt3dadd( 174.772, 142.074, 7.3468, 0.4774 ) }
    apic_6 { pt3dadd( 174.438, 140.99, 7.204, 0.4998 ) }
    apic_6 { pt3dadd( 174.165, 139.901, 7.0658, 0.5086 ) }
    apic_6 { pt3dadd( 173.682, 138.863, 6.9441, 0.4558 ) }
    apic_6 { pt3dadd( 173.2, 137.826, 6.8477, 0.4644 ) }
    apic_6 { pt3dadd( 173.139, 136.699, 6.7822, 0.6504 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    apic_6 { pt3dadd( 173.116, 135.564, 6.7394, 0.627 ) }
    apic_6 { pt3dadd( 173.388, 134.482, 6.7176, 0.5396 ) }
    apic_6 { pt3dadd( 173.8, 133.427, 6.7194, 0.5932 ) }
    apic_6 { pt3dadd( 174.531, 132.589, 6.7393, 0.5592 ) }
    apic_6 { pt3dadd( 175.398, 131.841, 6.8513, 0.6864 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_126, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_126 = new SectionList()
    soma_0 ModelViewParmSubset_126.append()
    axon_0 ModelViewParmSubset_126.append()
    axon_1 ModelViewParmSubset_126.append()

    // Group: {name=ModelViewParmSubset_127, groups=[], sections=[dend_32, dend_25, dend_22, dend_17, dend_12, dend_3, dend_0, apic_0, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_21, dend_18, dend_16, dend_13, dend_7, dend_4, dend_2, dend_1, apic_20, apic_1, dend_31, dend_30, dend_28, dend_27, dend_20, dend_19, dend_15, dend_14, dend_11, dend_8, dend_6, dend_5, apic_24, apic_21, apic_17, apic_2, dend_10, dend_9, apic_26, apic_25, apic_23, apic_22, apic_19, apic_18, apic_14, apic_3, apic_16, apic_15, apic_9, apic_4, apic_11, apic_10, apic_8, apic_5, apic_13, apic_12, apic_7, apic_6]}
    ModelViewParmSubset_127 = new SectionList()
    dend_32 ModelViewParmSubset_127.append()
    dend_25 ModelViewParmSubset_127.append()
    dend_22 ModelViewParmSubset_127.append()
    dend_17 ModelViewParmSubset_127.append()
    dend_12 ModelViewParmSubset_127.append()
    dend_3 ModelViewParmSubset_127.append()
    dend_0 ModelViewParmSubset_127.append()
    apic_0 ModelViewParmSubset_127.append()
    dend_34 ModelViewParmSubset_127.append()
    dend_33 ModelViewParmSubset_127.append()
    dend_29 ModelViewParmSubset_127.append()
    dend_26 ModelViewParmSubset_127.append()
    dend_24 ModelViewParmSubset_127.append()
    dend_23 ModelViewParmSubset_127.append()
    dend_21 ModelViewParmSubset_127.append()
    dend_18 ModelViewParmSubset_127.append()
    dend_16 ModelViewParmSubset_127.append()
    dend_13 ModelViewParmSubset_127.append()
    dend_7 ModelViewParmSubset_127.append()
    dend_4 ModelViewParmSubset_127.append()
    dend_2 ModelViewParmSubset_127.append()
    dend_1 ModelViewParmSubset_127.append()
    apic_20 ModelViewParmSubset_127.append()
    apic_1 ModelViewParmSubset_127.append()
    dend_31 ModelViewParmSubset_127.append()
    dend_30 ModelViewParmSubset_127.append()
    dend_28 ModelViewParmSubset_127.append()
    dend_27 ModelViewParmSubset_127.append()
    dend_20 ModelViewParmSubset_127.append()
    dend_19 ModelViewParmSubset_127.append()
    dend_15 ModelViewParmSubset_127.append()
    dend_14 ModelViewParmSubset_127.append()
    dend_11 ModelViewParmSubset_127.append()
    dend_8 ModelViewParmSubset_127.append()
    dend_6 ModelViewParmSubset_127.append()
    dend_5 ModelViewParmSubset_127.append()
    apic_24 ModelViewParmSubset_127.append()
    apic_21 ModelViewParmSubset_127.append()
    apic_17 ModelViewParmSubset_127.append()
    apic_2 ModelViewParmSubset_127.append()
    dend_10 ModelViewParmSubset_127.append()
    dend_9 ModelViewParmSubset_127.append()
    apic_26 ModelViewParmSubset_127.append()
    apic_25 ModelViewParmSubset_127.append()
    apic_23 ModelViewParmSubset_127.append()
    apic_22 ModelViewParmSubset_127.append()
    apic_19 ModelViewParmSubset_127.append()
    apic_18 ModelViewParmSubset_127.append()
    apic_14 ModelViewParmSubset_127.append()
    apic_3 ModelViewParmSubset_127.append()
    apic_16 ModelViewParmSubset_127.append()
    apic_15 ModelViewParmSubset_127.append()
    apic_9 ModelViewParmSubset_127.append()
    apic_4 ModelViewParmSubset_127.append()
    apic_11 ModelViewParmSubset_127.append()
    apic_10 ModelViewParmSubset_127.append()
    apic_8 ModelViewParmSubset_127.append()
    apic_5 ModelViewParmSubset_127.append()
    apic_13 ModelViewParmSubset_127.append()
    apic_12 ModelViewParmSubset_127.append()
    apic_7 ModelViewParmSubset_127.append()
    apic_6 ModelViewParmSubset_127.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_24, apic_21, apic_17, apic_2, apic_26, apic_25, apic_23, apic_22, apic_19, apic_18, apic_14, apic_3, apic_16, apic_15, apic_9, apic_4, apic_11, apic_10, apic_8, apic_5, apic_13, apic_12, apic_7, apic_6]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_20 apic.append()
    apic_1 apic.append()
    apic_24 apic.append()
    apic_21 apic.append()
    apic_17 apic.append()
    apic_2 apic.append()
    apic_26 apic.append()
    apic_25 apic.append()
    apic_23 apic.append()
    apic_22 apic.append()
    apic_19 apic.append()
    apic_18 apic.append()
    apic_14 apic.append()
    apic_3 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_9 apic.append()
    apic_4 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()
    apic_8 apic.append()
    apic_5 apic.append()
    apic_13 apic.append()
    apic_12 apic.append()
    apic_7 apic.append()
    apic_6 apic.append()

    // Group: {name=dend, groups=[], sections=[dend_32, dend_25, dend_22, dend_17, dend_12, dend_3, dend_0, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_21, dend_18, dend_16, dend_13, dend_7, dend_4, dend_2, dend_1, dend_31, dend_30, dend_28, dend_27, dend_20, dend_19, dend_15, dend_14, dend_11, dend_8, dend_6, dend_5, dend_10, dend_9]}
    dend = new SectionList()
    dend_32 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()
    dend_17 dend.append()
    dend_12 dend.append()
    dend_3 dend.append()
    dend_0 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_34 dend.append()
    dend_33 dend.append()
    dend_29 dend.append()
    dend_26 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_21 dend.append()
    dend_18 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_7 dend.append()
    dend_4 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_4713, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_4713 = new SectionList()
    soma_0 OneSecGrp_SectionRef_4713.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_2, apic_2, apic_2, apic_2, apic_2, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_14, apic_14, apic_14, apic_14, apic_14, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.2652001  // units: uF/cm2
    forsec apic cm = 2.2652001  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 21.698812  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 2.9216471E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 4.500827E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 2.4274654  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.002411464  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.04741228  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.019017689  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.002418456  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.32143903  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 7.5222744E-4  // units: S cm-2
        e_pas_nml2 = -87.97099  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 5.691669E-4  // units: S cm-2
        e_pas_nml2 = -87.97099  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.8055185E-5  // units: S cm-2
        e_pas_nml2 = -87.97099  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.4198862E-7  // units: S cm-2
        e_pas_nml2 = -87.97099  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 4.1902193E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0037941348  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_486511108
    forsec soma {
        insert CaDynamics_486511108
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_34 nseg = 5
    dend_33 nseg = 7
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_16 nseg = 7
    dend_2 nseg = 5
    dend_1 nseg = 5
    dend_30 nseg = 3
    dend_28 nseg = 5
    dend_27 nseg = 5
    dend_14 nseg = 5
    dend_11 nseg = 5
    dend_5 nseg = 5
    dend_10 nseg = 3
    apic_26 nseg = 3
    apic_25 nseg = 3
    apic_23 nseg = 5
    apic_19 nseg = 3
    apic_18 nseg = 7
    apic_3 nseg = 17
    apic_15 nseg = 5
    apic_10 nseg = 3
    apic_8 nseg = 5
    apic_13 nseg = 3
    apic_7 nseg = 5
    apic_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_486511108


