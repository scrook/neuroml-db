// Cell: Cell_473863035
/*
{
  "id" : "Cell_473863035",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "408.374, 408.522, 15.12, 12.8812", "414.814, 408.522, 15.12, 12.8812", "421.255, 408.522, 15.12, 12.8812" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "414.815, 408.522, 15.12, 1.0", "420.656, 422.338, 15.12, 1.0", "426.497, 436.154, 15.12, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996118313795607
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "420.001, 408.755, 10.0285, 0.6102", "421.091, 408.628, 9.3506, 0.7372", "422.138, 408.212, 9.3579, 0.839", "423.088, 407.587, 9.5656, 0.788", "424.057, 406.995, 9.8697, 0.6864", "425.115, 406.583, 9.9075, 0.5592", "426.208, 406.268, 9.6527, 0.4322", "427.333, 406.24, 9.4366, 0.356", "428.452, 406.428, 9.1146, 0.3304", "429.334, 406.677, 10.3457, 0.356", "430.009, 407.107, 12.3208, 0.356", "430.93, 407.169, 13.7455, 0.356", "431.766, 406.499, 13.9502, 0.3814", "432.464, 405.603, 13.6391, 0.483", "433.375, 404.924, 13.7175, 0.5338", "434.194, 404.156, 14.2106, 0.5338", "435.066, 403.491, 14.9923, 0.4322", "435.865, 403.374, 13.16, 0.3304" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996118313795607
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "417.884, 404.244, 16.2112, 0.3814", "418.663, 403.416, 16.5152, 0.5338", "419.55, 402.721, 16.996, 0.6356", "420.419, 401.991, 17.3516, 0.6864", "421.254, 401.215, 17.5703, 0.7626", "422.073, 400.442, 18.0701, 0.8644", "422.888, 399.652, 18.4279, 0.9914", "423.822, 398.994, 18.471, 0.9914", "424.79, 398.384, 18.4444, 0.966", "425.639, 397.619, 18.3282, 0.9152", "426.328, 396.725, 17.8595, 0.9152", "426.955, 395.786, 17.4224, 0.9406", "427.589, 394.839, 17.183, 0.9406", "428.154, 393.874, 16.6026, 0.9406", "428.516, 392.84, 15.7884, 0.9152", "428.827, 391.76, 15.258, 0.966", "429.21, 390.684, 15.122, 1.0424", "429.738, 389.669, 15.1203, 1.0932", "430.44, 388.767, 15.122, 1.0424", "431.22, 387.93, 15.1276, 0.966", "431.88, 386.996, 15.1556, 0.9152", "432.494, 386.031, 15.3023, 0.966", "432.869, 384.994, 16.0384, 0.966", "433.188, 383.938, 16.7815, 0.9406", "433.466, 382.829, 16.9322, 0.7626", "433.247, 381.792, 15.8844, 0.6102" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996118313795607
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "409.577, 406.411, 15.2239, 0.7626", "408.596, 405.85, 15.6554, 0.966", "407.542, 405.424, 15.9838, 1.0168", "406.529, 404.915, 15.6111, 0.9406", "405.564, 404.34, 16.1291, 0.8898", "404.594, 403.735, 16.2364, 0.8898", "403.592, 403.183, 16.24, 0.8898", "402.449, 403.142, 16.2403, 0.788", "401.42, 403.644, 16.2414, 0.661", "400.585, 404.426, 16.245, 0.6102", "399.743, 405.2, 16.2607, 0.661" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996118313795607
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "415.769, 414.058, 14.8882, 0.7372", "415.651, 414.976, 16.5147, 1.0678", "415.367, 416.074, 16.8563, 1.322", "415.643, 417.176, 16.515, 1.3982", "416.188, 418.137, 17.2357, 1.4236", "416.84, 419.076, 17.3597, 1.449", "417.59, 419.941, 17.36, 1.5254", "418.476, 420.663, 17.36, 1.6016" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996118313795607
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "426.497, 436.154, 15.12, 1.0", "432.338, 449.97, 15.12, 1.0", "438.18, 463.786, 15.12, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "433.247, 381.792, 15.8844, 0.6102", "433.496, 381.624, 18.1658, 0.5848", "434.124, 381.467, 20.2387, 0.4068", "435.108, 381.463, 21.6325, 0.3304", "436.168, 381.659, 22.4507, 0.356", "436.692, 382.468, 22.3471, 0.4576", "436.709, 383.598, 22.1788, 0.5084", "436.637, 384.72, 22.5845, 0.5084", "436.643, 385.845, 23.0667, 0.483", "436.694, 386.977, 22.9566, 0.4068", "437.022, 388.029, 22.3874, 0.4068", "437.455, 389.077, 22.2429, 0.4068", "438.031, 390.042, 21.9145, 0.5084", "438.606, 391.018, 22.008, 0.5338", "439.217, 391.981, 22.1278, 0.5848", "440.189, 392.495, 22.0937, 0.5338", "441.296, 392.782, 22.1236, 0.5338", "442.206, 393.432, 22.2919, 0.5084", "442.664, 394.45, 22.0623, 0.5848", "442.869, 395.571, 21.9512, 0.6356", "443.069, 396.696, 21.7955, 0.6864", "443.579, 397.698, 22.1746, 0.6356", "444.176, 398.471, 20.8544, 0.5848", "444.823, 399.409, 20.6668, 0.5592", "445.525, 400.235, 21.56, 0.661" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "433.247, 381.792, 15.8844, 0.6102", "433.221, 380.694, 15.3969, 0.5592" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "399.743, 405.2, 16.2607, 0.661", "399.209, 405.169, 15.1729, 0.7372", "398.367, 404.698, 13.6867, 0.7626", "397.452, 404.054, 13.1463, 0.788", "396.486, 403.472, 13.587, 0.839", "395.387, 403.205, 13.9765, 0.9152", "394.263, 403.402, 14.0958, 0.9914", "393.133, 403.503, 14.4547, 1.0168", "392.023, 403.615, 15.0685, 0.966", "390.955, 404.007, 15.3448, 0.839", "390.017, 404.626, 15.869, 0.7626", "389.104, 405.296, 16.2551, 0.7372", "388.145, 405.913, 16.4914, 0.7626", "387.123, 406.372, 17.0419, 0.7626", "386.02, 406.65, 17.3426, 0.7626", "384.876, 406.629, 17.3457, 0.7372", "383.747, 406.447, 17.2712, 0.6864", "382.63, 406.239, 16.9361, 0.5848", "381.514, 406.178, 16.3453, 0.5338", "380.395, 405.938, 16.3184, 0.5084", "379.404, 405.375, 16.5628, 0.5848", "378.374, 404.915, 17.0313, 0.5848", "377.251, 404.745, 17.3519, 0.5848", "376.129, 404.523, 17.3239, 0.483" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "399.743, 405.2, 16.2607, 0.661", "399.368, 405.556, 16.3604, 0.4322", "398.849, 406.424, 17.099, 0.3304", "398.746, 407.382, 18.6099, 0.2796", "398.057, 407.979, 19.626, 0.2288", "397.033, 407.893, 20.6665, 0.2288", "396.093, 407.812, 22.2194, 0.2288", "395.12, 407.359, 22.9026, 0.2288", "394.236, 406.643, 23.0966, 0.2288", "393.155, 406.594, 23.6499, 0.2796", "392.435, 407.405, 24.2712, 0.356", "392.403, 408.463, 25.2109, 0.4322", "393.059, 409.359, 25.7667, 0.4576", "393.527, 410.4, 25.8499, 0.5338", "393.394, 411.501, 26.4844, 0.661", "393.02, 412.476, 27.6315, 0.839", "392.847, 413.452, 29.0256, 0.8644", "392.744, 414.568, 29.5529, 0.788", "392.385, 415.643, 29.3213, 0.6356", "391.49, 416.274, 29.0363, 0.5338", "390.365, 416.19, 29.4423, 0.5848", "389.296, 416.138, 30.2716, 0.5848", "388.364, 416.595, 31.4154, 0.6864", "387.488, 417.167, 32.4727, 0.5848", "386.456, 417.592, 33.0504, 0.5848", "385.613, 418.251, 33.469, 0.4322", "385.205, 419.299, 33.9811, 0.4576", "384.497, 419.984, 34.3353, 0.4576", "383.444, 419.79, 34.8989, 0.5848", "382.421, 419.365, 35.6017, 0.6356", "381.332, 419.152, 36.1362, 0.7118", "380.204, 419.233, 36.3675, 0.7372", "379.081, 419.449, 36.4428, 0.6864", "377.958, 419.648, 36.6411, 0.6102", "376.892, 419.534, 37.3674, 0.5338", "375.994, 419.067, 38.5983, 0.5338", "375.08, 418.524, 39.5914, 0.5338", "374.028, 418.197, 40.2475, 0.5338", "372.93, 417.981, 40.8201, 0.5848", "371.886, 417.595, 41.3899, 0.5848", "370.81, 417.266, 41.8452, 0.6102", "369.768, 417.545, 42.2145, 0.5848", "369.227, 418.476, 42.5466, 0.661", "368.597, 419.384, 43.1525, 0.6356", "368.052, 420.073, 44.8381, 0.661", "367.827, 420.69, 47.0974, 0.661", "367.616, 421.556, 48.7878, 0.7626", "367.185, 422.539, 49.6588, 0.7372", "366.63, 423.522, 50.0685, 0.6864", "366.039, 424.449, 50.8158, 0.6102", "365.658, 425.489, 51.4326, 0.5848", "365.274, 426.496, 52.3561, 0.5338", "364.654, 427.372, 53.2714, 0.4576", "363.986, 428.134, 54.5538, 0.4322", "363.29, 428.699, 56.2691, 0.4068", "362.586, 429.495, 57.195, 0.4322", "361.766, 430.086, 58.45, 0.4068", "360.943, 430.756, 59.4804, 0.4322", "360.465, 431.76, 59.9995, 0.4068", "359.956, 432.576, 61.4709, 0.4068", "358.988, 432.89, 62.72, 0.3304" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "418.476, 420.663, 17.36, 1.6016", "420.375, 420.927, 17.3779, 0.9406", "421.515, 420.857, 17.5042, 0.966", "422.657, 420.824, 17.5941, 0.966", "423.782, 420.669, 17.2483, 0.9406", "424.883, 420.361, 17.3186, 0.9914", "426.026, 420.357, 17.4199, 0.966" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "418.476, 420.663, 17.36, 1.6016", "419.496, 422.413, 17.3135, 1.0932", "420.193, 423.317, 17.1464, 1.0424", "420.614, 424.339, 16.4335, 0.9914", "421.136, 425.337, 15.9295, 0.9914", "421.356, 426.458, 16.0826, 0.8898", "421.658, 427.561, 16.0269, 0.7118" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "445.525, 400.235, 21.56, 0.661", "445.462, 401.679, 21.9845, 0.5848", "445.167, 402.773, 21.7115, 0.5848", "445.195, 403.855, 21.4799, 0.6102", "445.772, 404.807, 21.3013, 0.6102", "446.27, 405.762, 21.8425, 0.5848", "446.382, 406.851, 21.9724, 0.5848", "446.291, 407.979, 21.6037, 0.5338", "445.942, 409.051, 21.4144, 0.5084", "445.543, 410.059, 22.0562, 0.5084", "445.063, 411.06, 22.4006, 0.6102", "444.834, 412.151, 22.5826, 0.7372", "444.959, 413.279, 22.7581, 0.7372", "444.905, 414.409, 22.9611, 0.6356", "444.802, 415.547, 22.9653, 0.483", "444.654, 416.671, 23.2529, 0.4576", "444.714, 417.799, 23.1344, 0.5338", "445.192, 418.815, 22.8724, 0.6102", "445.665, 419.826, 23.3646, 0.6102", "446.003, 420.895, 23.0208, 0.5338", "446.385, 421.913, 22.1598, 0.5084", "446.847, 422.916, 22.7094, 0.483", "447.219, 423.986, 22.678, 0.483", "447.275, 425.117, 22.5464, 0.4576", "447.379, 426.213, 23.0896, 0.4322", "447.034, 427.284, 23.5656, 0.4068", "446.686, 428.331, 24.3158, 0.3814", "446.385, 429.398, 24.9298, 0.4068", "446.27, 430.501, 24.7372, 0.4068", "446.426, 431.557, 23.8924, 0.3814", "446.765, 432.646, 23.868, 0.356", "446.942, 433.745, 24.3768, 0.356", "446.886, 434.856, 24.2586, 0.4322", "446.954, 435.908, 25.2084, 0.483", "446.855, 436.971, 26.1985, 0.5592", "446.616, 438.067, 26.7252, 0.5848", "446.628, 439.174, 26.0543, 0.6356", "446.698, 440.302, 25.655, 0.661", "446.724, 441.399, 26.4359, 0.6356", "446.68, 442.54, 26.4902, 0.5338", "446.554, 443.651, 26.9503, 0.4576", "446.588, 444.703, 27.4691, 0.4322", "446.754, 445.775, 26.7058, 0.483", "446.834, 446.883, 26.2136, 0.483", "446.965, 447.953, 25.7807, 0.5338", "447.043, 449.057, 26.4443, 0.5338", "446.874, 450.118, 27.3179, 0.5848", "446.779, 451.184, 28.2324, 0.5338", "446.589, 452.253, 27.8597, 0.5592", "446.679, 453.362, 27.8678, 0.5592", "447.289, 454.266, 27.3767, 0.6102", "447.8, 455.247, 27.7934, 0.5848", "447.968, 456.349, 27.4842, 0.5592", "447.974, 457.353, 26.3096, 0.5592", "448.312, 458.422, 26.8122, 0.5848", "448.735, 459.477, 26.8652, 0.6102", "448.974, 460.586, 26.6375, 0.6102", "449.228, 461.641, 25.8059, 0.5592", "449.397, 462.677, 25.9274, 0.4576", "449.769, 463.703, 26.2332, 0.3304", "450.006, 464.798, 25.9854, 0.305", "450.099, 465.91, 26.3864, 0.3814", "450.12, 467.0, 25.9826, 0.483", "450.188, 468.128, 25.6676, 0.5084", "450.292, 468.672, 23.4268, 0.483" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "445.525, 400.235, 21.56, 0.661", "446.248, 400.783, 21.866, 0.483", "447.246, 401.097, 22.9942, 0.5084", "448.308, 401.447, 22.468, 0.483", "449.345, 401.871, 22.9359, 0.4068", "450.451, 401.874, 23.4702, 0.3304", "451.471, 401.798, 22.7223, 0.305", "452.355, 401.224, 22.8262, 0.356", "453.363, 401.1, 23.6088, 0.4068", "454.309, 401.569, 24.2589, 0.483", "455.157, 402.249, 25.0524, 0.5338", "456.077, 402.883, 24.876, 0.6102", "457.008, 403.473, 24.1343, 0.6864", "457.864, 404.164, 23.4262, 0.6864", "458.815, 404.685, 23.5626, 0.661", "459.649, 405.198, 24.885, 0.5848", "460.492, 405.637, 26.4256, 0.5338", "461.311, 406.335, 27.1762, 0.4322", "462.1, 407.074, 28.0036, 0.3304", "462.791, 407.813, 27.83, 0.2796", "462.72, 408.939, 27.9446, 0.2796", "462.673, 410.045, 27.6965, 0.3304", "462.71, 411.14, 28.5046, 0.356", "462.859, 412.213, 29.0987, 0.4068", "463.191, 413.185, 29.6456, 0.4322", "463.231, 413.943, 31.7198, 0.4322", "463.534, 414.702, 31.9715, 0.4322", "463.824, 415.471, 33.2511, 0.4576", "463.893, 414.865, 35.1758, 0.5338", "464.351, 414.684, 37.4198, 0.5592", "464.497, 415.722, 38.4462, 0.5592", "465.275, 416.441, 39.0706, 0.5084", "466.351, 416.819, 38.8654, 0.4576", "467.277, 417.386, 38.7335, 0.356", "468.051, 417.871, 39.6371, 0.3304", "469.125, 417.736, 40.3908, 0.3304", "470.086, 417.947, 41.4809, 0.4322", "471.004, 418.361, 42.7941, 0.5084", "472.068, 418.685, 43.1575, 0.6356", "473.15, 419.049, 43.0648, 0.661", "474.253, 419.305, 43.3112, 0.6102", "475.334, 419.064, 43.7108, 0.4576", "476.323, 418.523, 44.1465, 0.3814", "477.342, 418.858, 44.2198, 0.3814", "478.469, 418.943, 44.093, 0.4576", "479.566, 419.038, 44.7714, 0.5592", "480.613, 419.387, 45.4728, 0.6356", "481.628, 419.906, 45.5703, 0.7372", "482.751, 420.102, 45.7131, 0.7626", "483.799, 420.534, 45.36, 0.7372" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "433.221, 380.694, 15.3969, 0.5592", "432.786, 379.586, 15.1883, 0.7626", "432.38, 378.519, 15.2043, 0.661", "431.955, 377.464, 15.4969, 0.5848", "431.584, 376.404, 16.0068, 0.5338", "431.213, 375.327, 16.1736, 0.5338", "430.86, 374.244, 15.9807, 0.5338", "430.44, 373.2, 15.5008, 0.483", "429.735, 372.327, 15.1698, 0.4576", "428.781, 371.719, 15.0592, 0.4322", "427.683, 371.443, 14.9531, 0.4576", "426.577, 371.164, 15.073, 0.4068", "425.744, 370.506, 15.8942, 0.3814", "424.998, 369.662, 16.2106, 0.4068", "424.28, 368.772, 16.24, 0.5592", "423.554, 367.886, 16.2397, 0.6864", "422.765, 367.059, 16.238, 0.7626", "421.949, 366.257, 16.2327, 0.7372", "421.106, 365.484, 16.2064, 0.6864", "420.166, 364.84, 16.0611, 0.6102", "419.123, 364.435, 15.573, 0.5338", "418.212, 363.847, 14.747, 0.5338", "417.601, 362.927, 14.1554, 0.5592", "416.975, 361.974, 14.0112, 0.6102", "416.333, 361.027, 14.0, 0.5848", "415.543, 360.206, 14.0, 0.5848", "414.593, 359.573, 14.0, 0.6356", "413.713, 358.846, 14.0, 0.7118", "412.948, 357.996, 14.0008, 0.7118", "412.289, 357.063, 14.0042, 0.5848", "411.764, 356.048, 14.0263, 0.4322", "411.329, 354.992, 14.1529, 0.3814", "410.763, 354.01, 14.4917, 0.4322", "410.079, 353.097, 14.6748, 0.5084", "409.474, 352.14, 14.3363, 0.5084", "408.958, 351.126, 14.065, 0.483", "408.568, 350.053, 14.0045, 0.4322", "408.22, 348.962, 14.0022, 0.3814", "408.015, 347.838, 14.0148, 0.305", "408.1, 346.702, 14.0997, 0.2542", "408.348, 345.586, 14.2066, 0.2288", "408.654, 344.485, 14.11, 0.2288", "409.185, 343.475, 14.1131, 0.2796", "409.379, 342.364, 14.2369, 0.356", "408.807, 341.379, 13.9762, 0.4576", "408.207, 340.429, 13.4532, 0.483", "407.633, 339.441, 13.2989, 0.5084", "407.045, 338.46, 13.2255, 0.483", "406.405, 337.522, 12.9178, 0.5084", "405.716, 336.608, 12.8803, 0.5084", "405.038, 335.687, 12.8822, 0.5592", "404.367, 334.761, 12.8909, 0.5592", "403.714, 333.823, 12.9338, 0.5338", "402.983, 332.946, 13.1244, 0.4576", "402.192, 332.141, 13.5626, 0.4068", "401.585, 331.187, 13.7536, 0.3814", "401.339, 330.082, 13.3683, 0.4068", "401.156, 328.963, 13.0029, 0.4068", "400.92, 327.844, 12.9514, 0.4068", "400.633, 326.742, 13.1916, 0.3814", "400.224, 325.693, 13.6335, 0.3814", "399.585, 324.759, 13.9412, 0.356", "398.729, 324.003, 13.9969, 0.3304", "397.795, 323.344, 13.9838, 0.356", "396.8, 322.781, 13.9121, 0.4322", "395.754, 322.34, 13.627, 0.483", "394.726, 321.94, 13.1566, 0.4576", "393.966, 321.123, 13.4946, 0.483", "393.44, 320.108, 13.5055, 0.5848", "392.868, 319.137, 13.1827, 0.7118", "392.252, 318.208, 12.773, 0.6864", "391.713, 317.205, 13.0141, 0.5848", "391.211, 316.196, 13.1648, 0.4576", "390.768, 315.185, 13.3658, 0.4068", "390.211, 314.24, 14.1053, 0.356", "389.748, 313.207, 14.2864, 0.356", "389.424, 312.166, 13.65, 0.3814", "389.268, 311.128, 12.5566, 0.4576", "389.081, 310.056, 11.7642, 0.5084", "388.874, 308.957, 11.2566, 0.483", "388.479, 307.941, 10.9614, 0.4576", "387.745, 307.066, 10.8175, 0.4576", "387.413, 306.034, 10.2435, 0.5592", "386.696, 305.233, 10.4885, 0.661", "386.061, 304.307, 10.2015, 0.7118", "385.551, 303.336, 9.4259, 0.7118", "385.197, 302.302, 8.6097, 0.6356", "384.801, 301.293, 9.3607, 0.5848", "384.126, 300.451, 10.2819, 0.5338", "383.241, 299.728, 10.36, 0.5084" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "433.221, 380.694, 15.3969, 0.5592", "433.484, 380.289, 15.9138, 0.4322", "434.422, 379.665, 16.3817, 0.4576", "435.237, 378.919, 17.113, 0.5084", "435.997, 378.083, 17.5501, 0.5338", "436.598, 377.151, 18.2277, 0.5338", "437.121, 376.139, 18.5153, 0.5592", "437.171, 375.009, 18.9188, 0.5848", "436.962, 373.913, 19.5294, 0.5848", "437.311, 372.824, 19.5992, 0.5338", "438.081, 371.977, 19.6, 0.5084", "438.873, 371.151, 19.6003, 0.5338", "439.592, 370.263, 19.6011, 0.5848", "440.34, 369.397, 19.6056, 0.6356", "441.356, 368.871, 19.6291, 0.6102" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "376.129, 404.523, 17.3239, 0.483", "375.882, 404.152, 15.6237, 0.483", "375.78, 403.195, 14.4864, 0.4322", "375.735, 402.052, 14.436, 0.3814", "375.559, 400.934, 14.3072, 0.4322", "374.991, 400.025, 14.6616, 0.5592", "374.13, 399.34, 14.8022, 0.6356", "373.166, 398.769, 14.8904, 0.5848", "372.142, 398.385, 14.4376, 0.5338", "371.266, 397.77, 13.6167, 0.5084", "370.627, 396.847, 13.512, 0.5338", "370.019, 395.91, 13.0158, 0.5084", "369.258, 395.071, 12.8288, 0.4576", "368.497, 394.393, 13.9574, 0.4576", "367.812, 393.721, 12.8106, 0.5084", "367.17, 392.802, 12.4958, 0.6102", "366.636, 391.793, 12.3592, 0.6356", "365.966, 390.877, 12.6658, 0.6356", "365.051, 390.333, 13.6578, 0.5848" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "376.129, 404.523, 17.3239, 0.483", "374.994, 404.92, 17.5249, 0.5338", "373.913, 405.199, 18.123, 0.661", "372.784, 405.297, 18.4041, 0.7372", "371.641, 405.288, 18.3369, 0.7626", "370.531, 405.124, 17.836, 0.788", "369.433, 404.847, 17.4611, 0.788", "368.371, 404.425, 17.367, 0.7372", "367.417, 403.799, 17.3606, 0.6102", "366.357, 403.382, 17.3653, 0.483", "365.326, 403.798, 17.3992, 0.4322", "364.376, 404.429, 17.591, 0.4068", "363.289, 404.737, 17.9687, 0.4322", "362.164, 404.577, 17.7646, 0.4068", "361.15, 404.062, 17.4952, 0.4322", "360.097, 403.643, 17.8475, 0.4068", "359.024, 403.547, 18.7821, 0.4576", "357.906, 403.731, 19.1559, 0.5084", "356.9, 404.185, 18.433, 0.5848", "355.818, 404.38, 17.6593, 0.5592", "354.68, 404.381, 17.3958, 0.5084", "353.543, 404.26, 17.4079, 0.483", "352.534, 403.724, 17.5888, 0.5592", "351.599, 403.122, 18.2414, 0.6356", "350.707, 402.412, 18.461, 0.661", "349.724, 401.827, 18.4772, 0.6356", "348.683, 401.352, 18.4643, 0.6102", "347.594, 401.005, 18.3775, 0.6356", "346.5, 400.757, 17.8147, 0.6356", "345.371, 400.701, 17.3886, 0.6102", "344.255, 400.455, 17.3345, 0.5338", "343.182, 400.064, 17.1786, 0.5084", "342.353, 399.344, 16.3825, 0.483", "341.581, 398.502, 16.242, 0.5084", "340.552, 398.003, 16.24, 0.483", "339.492, 397.573, 16.2403, 0.5338", "338.537, 396.943, 16.2408, 0.5848", "337.726, 396.136, 16.2431, 0.6864" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "426.026, 420.357, 17.4199, 0.966", "427.29, 420.001, 17.3099, 0.788", "428.35, 419.59, 17.4538, 0.8136", "429.458, 419.377, 17.2584, 0.8136", "430.405, 418.972, 17.9315, 0.8136", "431.371, 418.419, 17.5484, 0.7118", "432.418, 418.123, 17.8377, 0.6102", "433.038, 417.593, 18.9356, 0.5084", "433.936, 417.172, 17.841, 0.5592", "434.607, 416.395, 18.3996, 0.6102", "434.897, 415.444, 19.4362, 0.6864", "434.298, 414.642, 20.0684, 0.661", "435.004, 414.039, 19.9548, 0.661", "436.092, 414.087, 19.8374, 0.7372", "437.074, 414.534, 20.1942, 0.8644", "438.126, 414.772, 20.6618, 0.9152", "439.048, 414.938, 21.8781, 0.8136", "440.054, 415.248, 22.1024, 0.661", "440.668, 415.043, 24.1704, 0.5848", "441.702, 414.591, 24.3342, 0.5848", "442.827, 414.642, 24.7117, 0.6102", "443.928, 414.874, 24.9343, 0.6102", "445.063, 414.763, 25.0275, 0.6356", "446.152, 414.542, 24.9743, 0.6864", "447.236, 414.333, 24.6036, 0.7372", "448.342, 414.559, 24.4367, 0.788", "449.289, 415.182, 24.5176, 0.788", "450.292, 415.696, 24.5574, 0.8136", "451.26, 416.105, 25.0919, 0.788", "452.001, 416.797, 23.9562, 0.7372", "452.874, 417.384, 23.0236, 0.6356", "453.972, 417.651, 22.7388, 0.5592", "455.029, 417.584, 23.6062, 0.6102", "455.932, 418.281, 23.4024, 0.7118", "456.877, 418.898, 23.3906, 0.8136", "457.751, 419.533, 23.1232, 0.8136", "458.487, 420.347, 22.3608, 0.788", "459.259, 421.055, 22.9684, 0.788", "460.223, 421.353, 24.11, 0.788", "461.335, 421.37, 24.5809, 0.7626", "462.403, 421.462, 23.8568, 0.6864", "463.406, 421.915, 23.952, 0.6356", "464.386, 422.195, 25.1952, 0.5592", "464.962, 423.171, 25.412, 0.5084", "465.704, 423.944, 25.158, 0.4576", "466.731, 423.75, 25.1826, 0.4576", "467.771, 424.137, 25.6264, 0.4576", "468.829, 424.5, 25.1902, 0.4576", "469.884, 424.664, 25.0802, 0.483", "470.864, 424.891, 24.1368, 0.4576", "471.375, 425.748, 25.2694, 0.4576", "472.118, 425.777, 25.8978, 0.4322", "473.138, 425.293, 25.4814, 0.4576", "474.239, 425.133, 25.8182, 0.4068", "475.347, 425.157, 25.7858, 0.3814", "476.393, 425.374, 25.8454, 0.4068", "477.345, 425.975, 26.0151, 0.5084", "478.027, 426.71, 27.1309, 0.5592", "479.006, 427.188, 27.4504, 0.5084", "479.965, 427.04, 26.4505, 0.4322", "480.908, 427.064, 26.7333, 0.3814", "481.99, 426.953, 26.8579, 0.4068", "483.011, 426.778, 25.6889, 0.4322", "484.111, 426.483, 25.482, 0.4322", "485.193, 426.615, 26.1064, 0.4322", "486.101, 427.112, 27.27, 0.4068", "486.978, 427.713, 28.2114, 0.4322", "487.956, 428.229, 28.0375, 0.4068", "488.91, 428.021, 28.2551, 0.4322", "490.006, 427.954, 28.5113, 0.4322", "491.031, 428.425, 28.3074, 0.483", "492.039, 428.696, 29.3762, 0.483", "493.055, 429.15, 29.5904, 0.483", "494.06, 429.454, 30.2117, 0.4322", "495.135, 429.333, 29.6738, 0.4068", "496.175, 429.126, 29.6136, 0.4068", "497.269, 429.119, 30.333, 0.4322", "498.23, 428.946, 31.3855, 0.5084", "498.478, 427.989, 32.7664, 0.5338", "498.8, 426.985, 32.975, 0.5338", "499.363, 426.238, 33.4216, 0.4576", "500.387, 426.14, 32.76, 0.4068" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "426.026, 420.357, 17.4199, 0.966", "427.264, 421.025, 16.7042, 0.9152", "428.112, 421.666, 15.6918, 0.8898", "429.099, 422.216, 15.4381, 0.8136", "429.84, 422.995, 16.2999, 0.7626", "430.423, 423.916, 17.1332, 0.7118", "430.961, 424.897, 17.7167, 0.6356", "431.695, 425.753, 17.3169, 0.5848", "432.062, 426.833, 17.3177, 0.483", "432.193, 427.966, 17.0853, 0.5338", "432.7, 428.987, 16.8622, 0.6356" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "421.658, 427.561, 16.0269, 0.7118", "421.758, 429.151, 15.1718, 0.966", "421.925, 430.265, 14.6978, 0.839", "422.067, 431.384, 14.2232, 0.661", "422.121, 432.502, 14.6902, 0.5592", "422.198, 433.621, 15.2452, 0.6864", "422.142, 434.754, 14.9027, 0.7626", "421.883, 435.839, 14.28, 0.788" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "421.658, 427.561, 16.0269, 0.7118", "421.543, 428.518, 17.4675, 0.5338", "421.472, 429.65, 17.4583, 0.5848", "421.413, 430.749, 17.8839, 0.6864", "420.921, 431.766, 17.7391, 0.7372", "420.175, 432.612, 17.9446, 0.7372", "419.372, 433.38, 17.7316, 0.6864", "419.002, 434.356, 16.9249, 0.7118", "418.722, 435.324, 15.9732, 0.7372", "418.421, 436.421, 16.0723, 0.7626", "418.186, 437.496, 16.7093, 0.788", "417.766, 438.496, 17.4961, 0.788", "417.181, 439.128, 16.5441, 0.7626", "416.544, 439.733, 16.4973, 0.6864", "415.82, 440.251, 18.1639, 0.6356", "414.846, 440.601, 18.958, 0.6102", "413.725, 440.608, 18.9213, 0.5592", "412.621, 440.804, 19.0162, 0.5592", "412.119, 441.699, 19.4015, 0.6102", "412.286, 442.775, 20.083, 0.788", "412.818, 443.729, 20.869, 0.8898", "413.511, 444.632, 21.0196, 0.9914", "413.557, 445.759, 21.2654, 1.0424" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "441.356, 368.871, 19.6291, 0.6102", "441.833, 368.342, 19.6039, 0.5084", "442.638, 367.528, 19.544, 0.5084", "443.084, 366.506, 19.3245, 0.5848", "443.159, 365.375, 19.1517, 0.6356", "443.078, 364.247, 19.4793, 0.6864", "443.049, 363.11, 19.7378, 0.6864", "443.399, 362.051, 20.1359, 0.661", "444.022, 361.115, 20.5783, 0.6356", "444.83, 360.315, 20.7105, 0.6102", "445.666, 359.533, 20.7248, 0.6102", "446.392, 358.652, 20.7438, 0.6102", "446.997, 357.684, 20.8429, 0.6102", "447.395, 356.628, 21.219, 0.6102", "447.643, 355.534, 21.7412, 0.6102", "447.784, 354.412, 22.1581, 0.6102", "447.962, 353.3, 22.6436, 0.6356", "448.329, 352.227, 22.923, 0.6102", "448.922, 351.256, 22.9928, 0.5592", "449.727, 350.452, 23.1165, 0.4322", "450.401, 349.552, 23.5231, 0.356", "451.089, 348.652, 23.903, 0.305", "452.007, 347.99, 23.8246, 0.356", "452.792, 347.202, 23.2515, 0.4068", "453.16, 346.157, 22.685, 0.4576", "453.23, 345.022, 22.6797, 0.4576", "453.153, 343.885, 22.9085, 0.4576", "452.988, 342.758, 23.1518, 0.4322", "452.945, 341.629, 23.5712, 0.356", "453.152, 340.517, 23.9464, 0.2796", "453.463, 339.418, 24.0705, 0.2796", "453.773, 338.317, 24.08, 0.3304", "454.113, 337.225, 24.08, 0.4068", "454.531, 336.16, 24.08, 0.4322", "454.932, 335.089, 24.08, 0.5084", "455.224, 333.984, 24.0806, 0.5592", "455.553, 332.888, 24.0828, 0.5848", "456.01, 331.84, 24.1035, 0.5084", "456.54, 330.829, 24.2483, 0.4576", "457.069, 329.827, 24.6336, 0.4576", "457.656, 328.861, 25.0659, 0.5338", "458.313, 327.938, 25.4556, 0.5848", "458.989, 327.036, 25.9392, 0.6102", "459.677, 326.137, 26.3222, 0.6102", "460.371, 325.243, 26.7294, 0.5848", "461.024, 324.323, 27.1984, 0.5338", "461.468, 323.273, 27.358, 0.483", "461.721, 322.168, 27.0301, 0.483", "461.927, 321.058, 26.5815, 0.5592", "462.187, 319.946, 26.6837, 0.6356", "462.585, 318.912, 27.3666, 0.6864", "463.035, 317.892, 28.0092, 0.661", "463.441, 316.824, 27.9706, 0.661", "463.7, 315.714, 28.194, 0.661", "463.782, 314.639, 29.1231, 0.7372", "463.842, 313.518, 29.6447, 0.8136", "464.094, 312.404, 29.7604, 0.8898", "464.542, 311.359, 30.0947, 0.9152", "465.069, 310.364, 30.5673, 0.9152", "465.715, 309.424, 30.7661, 0.966", "466.466, 308.561, 30.7104, 0.9914", "467.203, 307.695, 30.42, 1.0168", "467.894, 306.8, 29.9897, 0.9914", "468.61, 305.911, 29.8724, 1.0168", "469.238, 304.974, 30.2957, 1.0168", "469.603, 303.909, 30.7555, 0.9914", "469.654, 302.781, 31.1441, 0.9152", "469.461, 301.674, 31.663, 0.8898", "469.313, 300.548, 31.9911, 0.8644", "469.361, 299.418, 32.3327, 0.839", "469.719, 298.358, 32.695, 0.788", "470.481, 297.513, 32.48, 0.788", "471.356, 296.794, 32.1591, 0.839", "472.2, 296.023, 32.2675, 0.839", "472.97, 295.182, 32.3302, 0.788", "473.575, 294.221, 32.233, 0.6864", "473.961, 293.174, 32.7496, 0.661", "474.085, 292.08, 33.5017, 0.661", "474.199, 290.966, 33.9948, 0.6864", "474.561, 289.888, 34.1505, 0.6864", "475.147, 288.908, 34.1827, 0.6864", "475.836, 287.995, 34.263, 0.6864", "476.503, 287.079, 34.5394, 0.6864", "477.012, 286.074, 35.0193, 0.6864", "477.505, 285.048, 35.2526, 0.6864", "478.053, 284.044, 35.3237, 0.661", "478.625, 283.06, 35.5208, 0.5848", "479.118, 282.064, 36.1455, 0.5084", "479.472, 281.034, 36.9673, 0.5084", "479.701, 279.929, 37.3386, 0.6356", "480.034, 278.842, 37.1398, 0.7118", "480.45, 277.797, 36.6484, 0.6864", "480.968, 276.783, 36.5, 0.5338", "481.571, 275.817, 36.717, 0.5084", "482.199, 274.888, 37.2655, 0.5848", "482.857, 273.979, 37.7818, 0.7626", "483.401, 273.01, 38.4014, 0.839", "483.802, 271.964, 38.9617, 0.8644", "484.303, 270.976, 39.5587, 0.8136", "485.025, 270.095, 39.825, 0.8136", "485.738, 269.216, 40.1181, 0.788", "486.285, 268.241, 40.6526, 0.788", "486.756, 267.204, 40.8607, 0.7626", "487.364, 266.237, 40.9116, 0.7118", "488.054, 265.329, 41.0572, 0.6864", "488.821, 264.5, 41.4809, 0.6356", "489.6, 263.683, 41.9115, 0.6864", "490.337, 262.812, 41.9958, 0.6864", "490.955, 261.851, 42.0022, 0.7372", "491.481, 260.838, 42.0137, 0.7372", "491.864, 259.761, 42.082, 0.7372", "492.182, 258.674, 42.3987, 0.6356", "492.405, 257.59, 43.0895, 0.5338", "492.665, 256.516, 43.6268, 0.483", "493.325, 255.618, 43.8295, 0.5084", "494.199, 254.908, 43.573, 0.5084", "494.959, 254.078, 43.9765, 0.483", "495.569, 253.117, 44.2299, 0.5338", "496.13, 252.12, 44.24, 0.661", "496.629, 251.093, 44.24, 0.788", "497.181, 250.094, 44.2408, 0.8136", "497.666, 249.059, 44.2439, 0.7626", "498.258, 248.081, 44.2593, 0.7372", "498.839, 247.103, 44.3408, 0.7118", "499.275, 246.057, 44.6631, 0.6864", "499.751, 245.045, 45.2012, 0.5592", "500.186, 243.99, 45.3611, 0.4322", "500.666, 242.951, 45.3718, 0.305", "501.064, 241.882, 45.4443, 0.2796", "501.433, 240.82, 45.7716, 0.3304", "502.033, 239.881, 46.3943, 0.4322", "502.72, 238.99, 46.8552, 0.5084", "503.514, 238.189, 47.2749, 0.483", "504.372, 237.438, 47.2114, 0.4576", "505.212, 236.683, 46.9571, 0.4576", "505.881, 235.777, 47.2982, 0.5084", "506.26, 234.748, 47.948, 0.483", "506.294, 233.628, 48.4722, 0.3814", "506.366, 232.526, 48.743, 0.3304", "506.889, 231.511, 48.8684, 0.356", "507.48, 230.545, 49.2282, 0.483", "508.062, 229.576, 49.6283, 0.5084", "508.623, 228.58, 49.6605, 0.5084", "509.183, 227.585, 49.5485, 0.4322", "509.73, 226.582, 49.672, 0.4068", "510.23, 225.56, 49.9223, 0.3814", "510.574, 224.481, 50.2026, 0.4068", "510.887, 223.41, 50.673, 0.4576", "511.496, 222.456, 50.9477, 0.5338", "512.265, 221.611, 50.9793, 0.5848", "513.063, 220.793, 51.0577, 0.5848", "513.864, 219.986, 51.3369, 0.5084", "514.63, 219.158, 51.7818, 0.3814", "515.349, 218.275, 52.015, 0.356", "516.061, 217.383, 51.9126, 0.4068", "516.698, 216.448, 51.5704, 0.6102", "517.209, 215.438, 51.2333, 0.7372", "517.701, 214.41, 51.3204, 0.9152", "518.203, 213.403, 51.8064, 0.9406", "518.732, 212.421, 52.4367, 0.9914", "519.334, 211.491, 53.1143, 0.966", "520.029, 210.621, 53.7541, 0.966", "520.732, 209.739, 54.1464, 0.8898", "521.318, 208.765, 54.122, 0.7118", "521.777, 207.726, 53.7816, 0.6102", "522.286, 206.719, 53.5161, 0.5592", "522.967, 205.809, 53.7121, 0.6864", "523.724, 204.967, 54.0977, 0.7372", "524.479, 204.111, 54.2895, 0.839", "525.218, 203.238, 54.322, 0.8644", "525.993, 202.399, 54.3284, 0.9152", "526.792, 201.581, 54.3528, 0.8644", "527.577, 200.75, 54.467, 0.7626", "528.315, 199.888, 54.7912, 0.6356", "529.024, 199.015, 55.2992, 0.5338", "529.766, 198.165, 55.7519, 0.483", "530.508, 197.309, 55.7522, 0.5084", "531.128, 196.374, 55.2608, 0.6102", "531.628, 195.364, 55.1004, 0.7372", "532.149, 194.375, 55.6396, 0.788", "532.792, 193.471, 56.2724, 0.7372", "533.598, 192.685, 56.6656, 0.661", "534.516, 192.025, 57.0497, 0.6102", "535.397, 191.325, 57.4538, 0.7118", "536.102, 190.439, 57.6503, 0.839", "536.625, 189.425, 57.6764, 0.966", "537.055, 188.365, 57.664, 0.8644", "537.443, 187.29, 57.575, 0.6864", "537.737, 186.195, 57.265, 0.483", "538.083, 185.127, 56.8378, 0.4576", "538.613, 184.121, 56.6625, 0.483", "539.193, 183.152, 56.9904, 0.5338", "539.697, 182.224, 57.9933, 0.483", "540.073, 181.239, 59.0075, 0.483", "540.573, 180.245, 59.5022, 0.4576", "541.389, 179.49, 59.9348, 0.5084", "542.234, 178.734, 60.121, 0.483", "542.743, 177.739, 60.305, 0.5338", "543.167, 176.692, 60.7309, 0.6356", "543.751, 175.722, 61.0112, 0.7626", "544.438, 174.809, 61.1341, 0.8644", "545.134, 173.909, 61.4228, 0.8136", "545.761, 172.971, 61.8517, 0.7626", "546.419, 172.04, 62.0718, 0.661", "547.188, 171.2, 61.9791, 0.6864", "548.026, 170.442, 61.5717, 0.7118", "548.786, 169.604, 61.1999, 0.788", "549.394, 168.642, 61.2209, 0.788", "549.974, 167.675, 61.6641, 0.7626", "550.617, 166.746, 62.0886, 0.6356", "551.331, 165.858, 62.3258, 0.483", "552.162, 165.096, 62.7326, 0.3814", "553.047, 164.388, 63.1151, 0.356", "553.711, 163.471, 63.1481, 0.4322", "554.208, 162.45, 62.8586, 0.4322", "555.069, 161.736, 63.0011, 0.4576", "556.18, 161.519, 63.2559, 0.4576", "557.156, 160.94, 63.3847, 0.5592", "557.944, 160.127, 63.7448, 0.6102", "558.708, 159.308, 64.3082, 0.5592", "559.51, 158.518, 64.832, 0.4322", "560.396, 157.829, 65.3447, 0.3814", "560.886, 156.805, 65.2392, 0.4576", "561.92, 156.323, 65.4396, 0.5338", "562.839, 155.665, 65.0538, 0.5338", "563.891, 155.22, 65.2123, 0.4322", "564.816, 154.604, 65.5908, 0.4068", "565.384, 153.671, 66.3491, 0.3814", "566.23, 152.921, 66.5487, 0.4322", "567.264, 152.444, 66.6935, 0.3814", "568.349, 152.15, 67.1779, 0.3814", "569.427, 151.895, 67.664, 0.3304", "570.274, 151.209, 68.3402, 0.3304", "570.857, 150.28, 69.1054, 0.2796", "571.572, 149.426, 69.7385, 0.2542", "572.234, 148.528, 70.3492, 0.2288", "572.916, 147.641, 70.7935, 0.2288", "573.742, 146.853, 70.8347, 0.2288", "574.352, 145.91, 70.784, 0.2288", "574.693, 144.82, 70.6577, 0.2288", "575.22, 143.831, 70.56, 0.2288", "576.052, 143.056, 70.7482, 0.2288", "576.946, 142.542, 71.6853, 0.2288", "577.936, 142.179, 72.4679, 0.2542", "578.818, 141.499, 72.6986, 0.305", "579.508, 140.595, 72.9848, 0.356", "580.35, 139.964, 73.619, 0.356", "581.302, 139.419, 74.2899, 0.305", "582.164, 138.681, 74.5898, 0.2796", "583.083, 138.033, 74.9073, 0.2796", "584.068, 137.462, 75.1097, 0.305", "585.112, 137.018, 75.2102, 0.305", "586.182, 136.63, 75.4656, 0.305", "587.177, 136.151, 76.1211, 0.305", "588.185, 135.734, 76.9266, 0.2796", "589.249, 135.349, 77.2178, 0.2542", "590.092, 134.663, 77.9108, 0.2288", "590.764, 133.749, 78.1071, 0.2288", "591.694, 133.104, 78.12, 0.2288", "592.203, 132.102, 78.12, 0.2288", "592.255, 130.963, 78.12, 0.2288", "593.129, 130.252, 78.12, 0.2796", "594.079, 129.615, 78.12, 0.3814" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "441.356, 368.871, 19.6291, 0.6102", "441.824, 368.961, 19.7282, 0.483", "442.944, 369.066, 20.1312, 0.483", "444.054, 368.913, 20.5503, 0.4068", "445.171, 368.692, 20.706, 0.356", "446.302, 368.726, 20.7203, 0.3814", "447.422, 368.953, 20.722, 0.4576", "448.554, 369.07, 20.734, 0.5338", "449.687, 368.958, 20.8177, 0.5848", "450.809, 368.782, 21.1067, 0.5848", "451.939, 368.641, 21.336, 0.5338", "453.034, 368.447, 20.8888, 0.483", "454.107, 368.299, 20.011, 0.4576", "455.22, 368.281, 19.8976, 0.483", "456.283, 368.346, 20.8253, 0.5338", "457.367, 368.398, 21.6591, 0.6356", "458.489, 368.326, 22.1435, 0.7118", "459.614, 368.258, 22.6036, 0.7626", "460.752, 368.214, 22.7035, 0.7118", "461.881, 368.089, 22.4378, 0.6102", "463.009, 367.918, 22.3107, 0.5084", "464.143, 367.925, 22.4608, 0.4322", "465.272, 368.075, 22.7388, 0.4322", "466.407, 368.165, 22.8004, 0.3814", "467.538, 368.108, 22.4792, 0.3814", "468.594, 367.742, 22.0679, 0.356", "469.51, 367.078, 21.9904, 0.3814", "470.359, 366.361, 22.5686, 0.3814", "471.191, 365.769, 23.7899, 0.3814", "472.143, 365.314, 24.8046, 0.3814", "473.143, 364.812, 25.3397, 0.356", "474.064, 364.149, 25.3364, 0.305", "474.817, 363.296, 25.2274, 0.2796", "475.5, 362.379, 25.1012, 0.3304", "476.043, 361.384, 24.8108, 0.4068", "476.569, 360.386, 25.1084, 0.483", "477.264, 359.502, 25.5441, 0.483", "477.782, 358.525, 26.1691, 0.5338", "478.283, 357.519, 26.6826, 0.5084", "478.986, 356.77, 27.816, 0.483", "479.901, 356.125, 28.0294, 0.356", "480.619, 355.258, 28.3545, 0.305", "481.429, 354.457, 28.5085, 0.2796", "482.465, 354.021, 28.1747, 0.356", "483.57, 354.229, 27.7522, 0.3814", "484.536, 354.809, 28.1806, 0.4322", "485.4, 355.555, 28.0, 0.4068" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "365.051, 390.333, 13.6578, 0.5848", "365.273, 389.513, 12.3609, 0.4576", "365.31, 388.397, 12.7406, 0.4322", "365.315, 387.316, 13.4971, 0.4322", "365.195, 386.204, 13.685, 0.4576", "364.897, 385.194, 13.5094, 0.483", "364.645, 384.215, 12.4432, 0.5338", "363.935, 383.458, 11.8628, 0.5848", "363.021, 383.071, 12.2265, 0.5592", "362.126, 382.717, 13.7298, 0.483", "361.075, 382.497, 14.5516, 0.4068", "359.987, 382.268, 14.2708, 0.4322", "359.21, 382.254, 15.6988, 0.483", "358.115, 382.344, 16.3769, 0.5592", "356.982, 382.242, 16.13, 0.5338", "355.881, 382.065, 15.5753, 0.5084", "354.745, 382.04, 15.8438, 0.4576", "353.658, 381.738, 15.9004, 0.5084", "352.783, 381.017, 15.9564, 0.5338", "351.906, 380.435, 17.0274, 0.5592", "351.012, 380.024, 18.3036, 0.483", "349.897, 379.983, 18.2804, 0.4576", "349.013, 380.218, 18.3271, 0.3814", "348.255, 380.426, 20.2182, 0.4068", "347.133, 380.471, 19.9973, 0.3814", "346.282, 379.727, 20.4064, 0.4068", "345.5, 378.961, 21.1781, 0.3304", "344.694, 378.165, 20.8482, 0.3304", "343.829, 377.501, 20.3529, 0.4068", "343.36, 376.611, 19.1307, 0.5338", "342.677, 375.749, 19.1097, 0.6102", "341.851, 375.078, 20.0525, 0.5338", "340.896, 374.65, 20.244, 0.4576", "339.833, 374.405, 20.5884, 0.3304", "338.718, 374.278, 20.8376, 0.2796", "337.629, 374.461, 20.3302, 0.2542", "336.625, 374.626, 19.1103, 0.2796", "335.759, 375.004, 17.5806, 0.305", "335.278, 375.326, 15.2032, 0.2796", "334.794, 375.94, 13.1737, 0.2796", "333.935, 376.605, 12.32, 0.305" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "365.051, 390.333, 13.6578, 0.5848", "364.73, 389.859, 12.4785, 0.356", "363.709, 389.549, 12.574, 0.3814", "362.672, 389.087, 12.4261, 0.3814", "361.815, 388.37, 12.899, 0.4322", "361.035, 387.603, 13.5598, 0.483", "360.268, 387.086, 11.9347, 0.5338", "359.26, 386.749, 11.1958, 0.483", "358.162, 386.523, 11.6124, 0.4322", "357.149, 386.232, 12.1327, 0.356", "356.145, 386.098, 12.7039, 0.356", "355.049, 385.919, 12.0369, 0.356", "354.165, 385.28, 11.6301, 0.4322", "353.888, 384.227, 12.1526, 0.4576", "353.515, 383.277, 13.3756, 0.5084", "352.624, 382.613, 13.2958, 0.5084", "351.788, 382.297, 11.6094, 0.5848", "350.711, 381.982, 12.0772, 0.6102", "349.577, 381.87, 12.3161, 0.6102", "348.566, 381.419, 12.8344, 0.5338", "348.304, 380.331, 12.5871, 0.4576", "347.599, 379.634, 11.2823, 0.4068", "346.634, 379.177, 10.5073, 0.3814", "345.82, 378.403, 10.8609, 0.4322", "344.884, 377.813, 11.5433, 0.4576", "343.869, 377.366, 12.0226, 0.483", "342.767, 377.324, 12.6683, 0.4068", "341.747, 377.11, 12.794, 0.3814", "340.903, 376.47, 11.9188, 0.3304", "340.078, 375.915, 10.5459, 0.356", "339.12, 375.397, 10.9444, 0.3304", "338.114, 375.126, 10.0523, 0.3304", "337.435, 374.471, 9.6838, 0.305", "337.198, 373.731, 9.2943, 0.3304", "336.303, 373.134, 10.0537, 0.3814", "335.397, 372.437, 10.1556, 0.4322", "334.543, 371.687, 10.3236, 0.4576", "333.747, 370.966, 9.9005, 0.4322", "332.902, 370.416, 10.1909, 0.3814", "332.041, 369.899, 9.548, 0.305", "331.448, 369.094, 8.2648, 0.2796", "330.858, 368.132, 8.6489, 0.3304", "330.045, 367.338, 8.96, 0.4322" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "337.726, 396.136, 16.2431, 0.6864", "336.525, 395.454, 15.8169, 0.4322", "335.469, 395.625, 15.9572, 0.4068", "334.43, 395.973, 16.354, 0.4576", "333.557, 396.661, 16.0087, 0.4576", "332.721, 397.424, 15.6758, 0.4322", "331.822, 398.066, 15.0637, 0.356", "331.082, 398.872, 14.4516, 0.356", "330.139, 399.486, 14.7476, 0.3304", "329.281, 400.144, 15.3667, 0.3814", "328.281, 400.66, 15.0948, 0.4068", "327.178, 400.948, 15.2197, 0.5084", "326.113, 401.263, 14.9369, 0.5338", "325.167, 401.735, 14.8296, 0.5338", "324.238, 402.262, 15.2429, 0.4322", "323.306, 402.918, 15.1519, 0.356", "322.456, 403.659, 15.398, 0.3304", "321.468, 404.108, 15.5344, 0.4322", "320.407, 404.435, 15.0167, 0.5338", "319.369, 404.767, 15.3252, 0.6356", "318.341, 405.206, 15.8337, 0.6102", "317.455, 405.873, 15.416, 0.6102", "316.56, 406.572, 15.2048, 0.5848", "315.502, 406.928, 15.5529, 0.6102", "314.434, 407.223, 16.2375, 0.5848", "313.45, 407.766, 16.6023, 0.5592", "312.576, 408.497, 16.525, 0.5338", "311.533, 408.932, 16.5108, 0.5084", "310.606, 409.496, 15.7114, 0.483", "309.796, 409.895, 14.0, 0.4576" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "337.726, 396.136, 16.2431, 0.6864", "336.878, 394.798, 16.329, 0.5338", "336.438, 393.751, 16.6387, 0.5848", "335.925, 392.747, 17.0901, 0.6102", "335.343, 391.768, 17.3471, 0.5338", "334.745, 390.795, 17.4815, 0.483", "334.327, 389.744, 17.8139, 0.4576", "334.288, 388.625, 18.2487, 0.5084", "334.328, 387.485, 18.438, 0.5084", "334.044, 386.385, 18.4033, 0.4576", "333.456, 385.416, 18.1544, 0.4068", "332.785, 384.506, 17.733, 0.3814", "332.084, 383.607, 17.5101, 0.356", "331.422, 382.681, 17.7206, 0.3814", "330.795, 381.729, 17.9698, 0.4576", "330.052, 380.87, 17.7192, 0.6102", "329.143, 380.189, 17.4381, 0.6864", "328.144, 379.635, 17.3648, 0.6356", "327.219, 378.963, 17.36, 0.483", "326.535, 378.052, 17.36, 0.3304", "326.017, 377.033, 17.3589, 0.2542", "325.46, 376.034, 17.3541, 0.2796", "324.664, 375.217, 17.3278, 0.356", "323.691, 374.623, 17.1699, 0.4576", "322.687, 374.103, 16.7479, 0.483", "321.705, 373.537, 16.3685, 0.4576", "320.781, 372.865, 16.2784, 0.4068", "319.925, 372.108, 16.3951, 0.4068", "319.037, 371.395, 16.6676, 0.4322", "318.08, 370.794, 17.0937, 0.483", "317.135, 370.218, 17.7873, 0.483", "316.362, 369.387, 18.086, 0.5338", "315.661, 368.488, 17.8794, 0.5592", "314.904, 367.642, 17.533, 0.661", "314.061, 366.873, 17.3799, 0.661", "313.188, 366.133, 17.3597, 0.661", "312.344, 365.36, 17.3541, 0.5338", "311.637, 364.462, 17.323, 0.5084", "310.84, 363.646, 17.1573, 0.4322", "309.84, 363.229, 16.2884, 0.4576", "308.795, 362.852, 15.6125, 0.3814", "307.901, 362.179, 16.1476, 0.3814", "307.012, 361.533, 16.9168, 0.356", "306.195, 360.909, 18.1496, 0.3814", "305.456, 360.047, 18.4584, 0.3814", "304.521, 359.387, 18.4741, 0.3814", "303.418, 359.084, 18.443, 0.4068", "302.293, 358.901, 18.244, 0.4576", "301.248, 358.599, 17.3774, 0.5084", "300.632, 357.707, 16.4881, 0.5084", "300.187, 356.814, 15.12, 0.4576" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "432.7, 428.987, 16.8622, 0.6356", "432.724, 429.112, 17.598, 0.3304", "433.429, 429.49, 18.6074, 0.4322", "434.445, 429.79, 17.736, 0.5338", "435.486, 430.17, 17.8595, 0.6102", "436.343, 430.39, 19.5054, 0.661", "437.358, 430.724, 20.4061, 0.6356", "438.406, 431.177, 20.5887, 0.5338", "439.275, 431.883, 21.1495, 0.4068", "440.11, 432.661, 20.9689, 0.3304" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "432.7, 428.987, 16.8622, 0.6356", "432.83, 429.699, 16.4027, 0.5084", "433.106, 430.641, 15.0086, 0.661", "433.439, 431.68, 15.3588, 0.7626", "433.463, 432.661, 16.8, 0.839" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "421.883, 435.839, 14.28, 0.788", "421.55, 436.459, 14.488, 0.9406", "421.821, 437.522, 13.7939, 0.8136", "422.066, 438.594, 13.0189, 0.7372", "422.294, 439.706, 13.3171, 0.7118", "422.271, 440.835, 13.734, 0.7372", "422.183, 441.974, 13.6581, 0.788", "422.274, 443.09, 13.221, 0.7626", "422.824, 443.996, 12.1755, 0.7372", "423.465, 444.831, 11.0984, 0.6356", "424.219, 445.448, 9.6359, 0.5848", "424.971, 446.123, 8.7802, 0.5084", "425.576, 446.713, 10.1234, 0.483", "426.313, 447.462, 9.7479, 0.483", "427.092, 448.155, 10.7674, 0.5338", "427.745, 449.065, 10.9533, 0.5592", "428.525, 449.838, 10.7607, 0.5592", "429.488, 450.392, 11.4128, 0.483", "430.083, 451.233, 12.0772, 0.4576", "430.55, 452.225, 11.9157, 0.3814", "431.364, 452.98, 11.7505, 0.3814", "432.354, 453.549, 11.7524, 0.356", "432.978, 454.456, 11.5486, 0.4068", "433.367, 455.532, 11.5206, 0.4068", "433.923, 456.3, 10.0691, 0.4068", "434.705, 456.986, 9.4102, 0.3814", "434.999, 457.845, 11.1104, 0.3814", "435.406, 458.723, 12.5023, 0.3814", "436.034, 459.627, 12.6302, 0.3814", "436.543, 460.508, 11.4363, 0.3814", "437.27, 461.299, 11.0706, 0.4068", "437.799, 462.263, 11.3011, 0.4068", "438.306, 463.255, 10.8296, 0.4322", "438.918, 464.207, 10.6515, 0.4322", "439.425, 465.227, 10.5636, 0.483", "439.785, 466.29, 10.7484, 0.483", "440.211, 467.329, 11.062, 0.4576", "440.771, 468.289, 10.5963, 0.4068", "441.585, 469.007, 10.0509, 0.4068", "442.523, 469.653, 9.9355, 0.4322", "443.337, 470.405, 9.3864, 0.4576", "444.189, 471.143, 9.3254, 0.4576", "445.113, 471.814, 9.3856, 0.4576", "446.029, 472.487, 9.1188, 0.4322", "446.734, 473.359, 9.3332, 0.4068", "447.442, 474.245, 9.205, 0.356", "448.212, 475.09, 9.2305, 0.3304", "448.78, 476.077, 9.1448, 0.356", "449.364, 477.048, 9.52, 0.483" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "421.883, 435.839, 14.28, 0.788", "420.831, 436.958, 13.186, 0.7372", "420.079, 437.617, 11.8448, 0.661", "419.879, 438.525, 12.0445, 0.5084", "419.544, 439.358, 13.6772, 0.4322", "419.182, 440.368, 13.2686, 0.483", "418.845, 441.456, 13.2356, 0.5848", "418.465, 442.534, 13.3319, 0.6356", "417.889, 443.513, 13.5985, 0.661", "417.487, 444.577, 13.8382, 0.7118", "417.426, 445.716, 14.0258, 0.839", "417.131, 446.815, 14.273, 0.8898", "416.587, 447.804, 13.8558, 0.839", "416.295, 448.701, 12.376, 0.7118", "415.761, 449.669, 13.0239, 0.6356", "414.938, 450.432, 12.8534, 0.5848", "413.902, 450.849, 13.2983, 0.5592", "412.918, 451.396, 12.8517, 0.5084", "411.897, 451.872, 12.549, 0.4576", "411.037, 452.611, 12.2189, 0.3814", "410.194, 453.348, 11.7572, 0.356", "409.532, 454.267, 11.6967, 0.3814", "408.996, 455.266, 11.655, 0.4576", "408.33, 456.116, 12.3222, 0.5338", "407.601, 456.755, 13.6881, 0.6102", "406.723, 457.315, 13.9454, 0.661", "405.985, 458.07, 12.8789, 0.6864", "405.399, 458.968, 12.0534, 0.661", "404.927, 460.0, 11.8423, 0.6356", "404.455, 461.031, 11.6248, 0.5592", "404.008, 462.073, 11.3347, 0.5084", "403.505, 463.083, 11.6222, 0.4322", "402.951, 464.03, 12.3953, 0.4068", "402.448, 464.999, 13.2031, 0.3814", "402.208, 466.052, 13.0155, 0.3814", "402.046, 467.158, 12.6353, 0.3814", "401.818, 468.279, 12.644, 0.3814", "401.472, 469.363, 12.7716, 0.356", "400.853, 470.299, 13.1191, 0.3304", "400.112, 471.145, 13.6234, 0.2796", "399.712, 472.179, 13.8687, 0.2542", "399.312, 473.233, 13.4935, 0.2542", "398.652, 474.148, 13.701, 0.305", "398.261, 475.178, 14.3612, 0.4068", "398.273, 476.261, 15.1833, 0.5084", "397.842, 477.292, 15.3742, 0.5848", "397.35, 478.286, 14.7389, 0.5848", "397.224, 479.396, 15.0836, 0.5338", "397.28, 480.531, 14.9005, 0.5084", "397.176, 481.669, 14.9134, 0.5084", "397.047, 482.751, 15.7142, 0.5084", "396.741, 483.824, 15.141, 0.4576", "396.309, 484.865, 15.4974, 0.4068", "396.292, 485.999, 15.5518, 0.4322", "396.566, 487.099, 15.3952, 0.483", "396.964, 488.154, 15.8682, 0.5084", "397.276, 489.212, 16.3523, 0.4576", "397.095, 490.314, 16.4032, 0.4068", "396.754, 491.346, 15.7492, 0.3814", "396.281, 492.379, 16.0202, 0.3814", "395.703, 493.363, 16.1857, 0.4068", "395.134, 494.342, 16.1364, 0.4322", "394.513, 495.274, 15.7651, 0.4576", "393.837, 496.176, 16.1616, 0.4068", "393.183, 497.084, 16.5472, 0.356", "392.662, 498.095, 16.4119, 0.2796", "392.386, 499.188, 16.1297, 0.2796", "392.396, 500.316, 15.8334, 0.3304", "392.559, 501.438, 16.0118, 0.4068", "392.666, 502.563, 16.3489, 0.4576", "392.531, 503.656, 15.9905, 0.4322", "392.85, 504.606, 15.703, 0.4322", "393.68, 505.371, 15.9558, 0.4322", "394.595, 506.048, 15.9706, 0.483", "395.583, 506.603, 15.6699, 0.483", "396.623, 507.071, 15.5168, 0.4576", "397.709, 507.389, 15.7598, 0.356", "398.807, 507.357, 16.3929, 0.2796", "399.783, 507.856, 16.4368, 0.2796", "400.708, 508.521, 16.1647, 0.356", "401.515, 509.324, 15.9827, 0.5084", "401.774, 510.224, 14.56, 0.6864" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "413.557, 445.759, 21.2654, 1.0424", "413.893, 446.53, 21.2332, 0.661", "414.073, 447.621, 21.6059, 0.6102", "413.922, 448.731, 21.5765, 0.5592", "413.877, 449.846, 21.0935, 0.5084", "413.848, 450.98, 20.9381, 0.3814", "413.282, 451.917, 21.294, 0.3304", "412.35, 452.517, 21.782, 0.356", "411.291, 452.862, 22.3804, 0.4576", "410.322, 453.2, 23.5788, 0.5084", "409.219, 453.299, 24.0853, 0.5592", "408.51, 454.065, 24.8021, 0.5592", "408.412, 455.151, 25.4965, 0.5592", "408.619, 456.14, 26.7708, 0.5338", "409.019, 457.133, 27.7544, 0.5592", "409.396, 458.155, 28.5242, 0.5338", "408.98, 458.897, 30.2677, 0.5084", "407.953, 459.356, 30.3562, 0.4322", "407.208, 460.176, 29.6979, 0.4322", "406.688, 461.168, 29.3798, 0.4322", "406.48, 462.285, 29.687, 0.4576", "406.424, 463.383, 30.3103, 0.4576", "406.535, 464.418, 31.3561, 0.4322", "406.299, 465.481, 32.097, 0.4322", "406.03, 466.471, 33.1758, 0.4576", "406.025, 467.574, 33.2567, 0.5338", "406.204, 468.611, 32.58, 0.6102", "406.752, 469.606, 32.415, 0.6102", "407.286, 470.6, 32.1434, 0.5338", "407.646, 471.559, 32.5606, 0.4322", "407.204, 472.337, 33.9486, 0.3814", "406.475, 473.149, 34.613, 0.4068", "405.92, 473.99, 35.7904, 0.4068", "405.07, 474.594, 35.7104, 0.4322", "404.066, 474.711, 36.834, 0.4322", "403.909, 475.835, 36.5403, 0.483", "403.479, 476.867, 37.0034, 0.5084", "402.823, 477.46, 38.7218, 0.5084", "401.896, 477.699, 39.7194, 0.4576", "401.812, 478.77, 39.459, 0.4322", "402.323, 479.76, 39.1384, 0.4576", "402.563, 480.827, 39.7446, 0.483", "402.658, 481.817, 41.1012, 0.483", "402.402, 482.825, 41.4795, 0.4322", "402.071, 483.739, 42.0918, 0.4068", "401.956, 484.716, 43.3311, 0.356", "402.22, 485.747, 43.3927, 0.356", "402.62, 486.778, 43.4686, 0.356", "402.49, 487.773, 44.448, 0.3814", "401.884, 488.593, 45.6378, 0.4068", "401.141, 489.399, 46.3901, 0.483", "400.311, 490.168, 46.5377, 0.5592", "399.527, 490.993, 46.478, 0.6102", "398.896, 491.913, 46.9462, 0.5848", "398.35, 492.884, 47.5555, 0.5338", "397.905, 493.92, 48.0208, 0.483", "397.419, 494.942, 48.3753, 0.483", "396.74, 495.824, 48.909, 0.5084", "396.166, 496.79, 49.1725, 0.483", "395.973, 497.896, 49.2988, 0.4322", "395.949, 498.855, 50.664, 0.3814", "396.306, 499.876, 51.3192, 0.3814", "396.597, 500.934, 52.0904, 0.356", "396.269, 502.01, 52.1452, 0.4068", "396.168, 503.131, 52.64, 0.5592" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "413.557, 445.759, 21.2654, 1.0424", "413.144, 447.074, 19.6034, 0.8644", "412.618, 448.081, 19.8881, 0.788", "412.057, 449.014, 20.657, 0.6864", "411.516, 449.926, 21.4312, 0.6102", "410.886, 450.874, 21.2789, 0.5848", "410.23, 451.806, 21.1624, 0.5084", "409.671, 452.793, 20.9762, 0.4068", "409.258, 453.829, 20.4523, 0.356", "409.071, 454.944, 20.1698, 0.356", "409.181, 456.034, 20.5537, 0.3814", "409.16, 457.021, 21.546, 0.4068", "408.742, 458.014, 22.437, 0.4322", "408.489, 459.105, 22.78, 0.4322", "408.491, 460.243, 22.8189, 0.4068", "408.673, 461.371, 22.8502, 0.3814", "408.999, 462.462, 22.8077, 0.4068", "409.305, 463.535, 23.119, 0.4322", "409.221, 464.63, 23.3598, 0.4576", "408.666, 465.598, 23.214, 0.4322", "408.191, 466.602, 23.0574, 0.356", "407.795, 467.658, 22.6853, 0.2796", "407.111, 468.546, 22.4742, 0.2542", "406.193, 469.069, 23.1949, 0.305", "405.214, 469.441, 24.3166, 0.356", "404.406, 470.087, 25.3742, 0.356", "403.55, 470.787, 25.4982, 0.356", "402.666, 471.476, 25.8037, 0.3814", "401.689, 472.04, 26.0574, 0.483", "400.954, 472.824, 26.6879, 0.5084", "400.498, 473.847, 26.6627, 0.483", "400.194, 474.947, 26.6081, 0.4068", "399.694, 475.809, 27.7763, 0.4322", "398.919, 476.601, 27.4254, 0.5338", "397.957, 477.121, 26.6462, 0.6102", "396.906, 477.526, 26.1811, 0.6102", "395.927, 478.075, 25.664, 0.5338", "395.037, 478.762, 26.1218, 0.483", "394.281, 479.588, 26.6865, 0.483", "394.299, 480.463, 28.3556, 0.5084", "393.995, 481.468, 28.3256, 0.5338", "393.166, 482.203, 28.7921, 0.5084", "392.306, 482.95, 28.8492, 0.4576", "391.47, 483.609, 29.6657, 0.4322", "390.485, 483.926, 30.6312, 0.483", "389.507, 484.372, 30.3834, 0.5848", "388.62, 485.059, 29.8824, 0.661", "387.641, 485.631, 29.7548, 0.661", "386.745, 486.318, 29.9541, 0.6102", "385.832, 486.925, 29.412, 0.5084", "385.044, 487.729, 29.0755, 0.4576", "385.071, 488.831, 29.4, 0.4576" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "440.11, 432.661, 20.9689, 0.3304", "441.324, 433.19, 20.1667, 0.5084", "442.241, 433.86, 20.3403, 0.6102", "443.183, 434.447, 20.9404, 0.661", "444.123, 435.069, 20.8468, 0.6864", "445.123, 435.5, 20.0567, 0.661", "446.012, 435.986, 18.7603, 0.6102", "446.86, 436.535, 18.7345, 0.5592", "447.717, 437.215, 19.0733, 0.5592", "448.698, 437.767, 19.1786, 0.5848", "449.523, 438.509, 19.3158, 0.5592", "450.443, 438.557, 20.4137, 0.483", "451.509, 438.311, 21.1462, 0.4068", "452.362, 438.896, 21.7308, 0.4068", "453.044, 439.794, 21.3662, 0.4068", "453.842, 440.534, 22.2113, 0.4322", "454.532, 441.44, 22.3289, 0.4322", "455.305, 442.154, 21.4315, 0.4576", "456.38, 442.387, 21.957, 0.4576", "457.394, 442.536, 23.1087, 0.4576", "458.188, 443.17, 23.6748, 0.5084", "458.843, 444.054, 23.5735, 0.5592", "459.806, 444.602, 24.1324, 0.6102", "460.88, 444.918, 24.5162, 0.5848", "461.964, 445.13, 24.019, 0.5084", "463.029, 445.307, 23.1059, 0.4322", "464.123, 445.448, 23.0653, 0.3814", "465.175, 445.76, 23.2148, 0.3814", "465.909, 446.52, 23.5253, 0.356", "466.612, 447.379, 23.8479, 0.305", "467.612, 447.865, 23.7622, 0.2796", "468.713, 448.173, 23.683, 0.305", "469.661, 448.763, 23.4368, 0.3814", "470.627, 449.285, 22.7704, 0.4068", "471.649, 449.761, 22.4644, 0.4068", "472.701, 450.204, 22.6173, 0.4068", "473.755, 450.623, 22.9592, 0.4576", "474.824, 451.006, 22.8547, 0.483", "475.931, 451.27, 22.64, 0.4576", "476.987, 451.498, 23.3814, 0.3814", "478.092, 451.682, 23.4783, 0.3304", "478.765, 452.452, 24.36, 0.305" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "440.11, 432.661, 20.9689, 0.3304", "440.233, 433.378, 22.388, 0.356", "440.443, 434.418, 23.273, 0.4322", "440.786, 435.389, 24.3858, 0.5084", "441.158, 436.326, 23.8218, 0.5084", "441.04, 437.279, 24.7338, 0.4576", "441.198, 438.358, 25.4083, 0.4068", "441.785, 439.288, 26.0859, 0.4068", "441.82, 440.37, 26.9472, 0.4576", "441.677, 441.465, 27.5293, 0.5084", "441.975, 442.538, 27.7606, 0.5338", "442.357, 443.54, 27.0626, 0.5592", "442.75, 444.57, 27.2101, 0.6102", "443.23, 445.548, 26.7375, 0.6356", "443.515, 446.636, 26.4919, 0.6356", "443.884, 447.473, 27.8149, 0.5848", "444.024, 448.407, 29.1508, 0.5592", "443.816, 449.488, 28.9282, 0.483", "443.895, 450.526, 27.8975, 0.483", "444.274, 451.575, 27.5937, 0.483", "444.595, 452.379, 29.1805, 0.5592", "445.364, 452.911, 30.6872, 0.5338", "445.997, 453.815, 31.3488, 0.483", "446.104, 454.938, 31.717, 0.4068", "445.633, 455.961, 32.1457, 0.4068", "444.914, 456.701, 33.3357, 0.4322", "444.341, 457.606, 34.2574, 0.4576", "443.459, 458.328, 34.2227, 0.4576", "442.602, 458.99, 33.3934, 0.5084", "441.654, 459.613, 33.5616, 0.5338", "440.578, 459.857, 33.6389, 0.5338", "439.584, 459.735, 34.6735, 0.4576", "438.762, 460.412, 35.0826, 0.4322", "438.375, 461.478, 35.4404, 0.4322", "438.021, 462.551, 35.87, 0.4322", "437.598, 463.58, 36.3653, 0.3814", "436.821, 464.239, 37.3173, 0.3304", "435.76, 464.498, 37.8434, 0.3304", "434.634, 464.655, 38.0481, 0.4068", "433.6, 465.052, 38.3827, 0.483", "432.885, 465.637, 39.6301, 0.5592", "432.681, 466.292, 41.8065, 0.5338", "432.441, 467.223, 43.2524, 0.483", "432.14, 468.322, 43.3936, 0.356", "431.289, 469.04, 43.96, 0.305" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "433.463, 432.661, 16.8, 0.839", "433.948, 433.031, 16.2554, 0.305", "434.596, 433.648, 14.5919, 0.3304", "435.697, 433.726, 13.9961, 0.3814", "436.709, 434.195, 13.8625, 0.4322", "437.832, 434.107, 14.2601, 0.4576", "438.937, 434.205, 14.8229, 0.4576", "440.014, 433.93, 14.9223, 0.4576", "441.023, 433.631, 14.1876, 0.483", "442.146, 433.734, 14.5827, 0.5338", "443.239, 434.033, 14.7224, 0.6102", "444.326, 434.368, 14.5113, 0.6356", "445.389, 434.773, 14.4337, 0.6102", "446.447, 435.09, 13.8989, 0.5338", "447.473, 435.436, 13.7329, 0.5084", "448.46, 435.997, 13.7931, 0.5592", "449.512, 436.367, 13.314, 0.661", "450.603, 436.535, 12.6112, 0.7626", "451.725, 436.589, 12.444, 0.7626", "452.811, 436.85, 12.7361, 0.7118", "453.603, 437.363, 11.7267, 0.6102", "454.521, 437.65, 11.5307, 0.5848", "455.503, 437.896, 12.7725, 0.5848", "456.503, 438.31, 13.4848, 0.5848", "457.544, 438.707, 13.0687, 0.5592", "458.571, 439.127, 12.3973, 0.5592", "459.574, 439.572, 11.611, 0.5592", "460.665, 439.826, 11.6886, 0.5592", "461.793, 439.767, 12.0036, 0.5084", "462.803, 439.711, 10.8951, 0.5338", "463.916, 439.799, 10.5633, 0.5084", "464.967, 439.992, 11.4733, 0.5084", "466.074, 439.914, 11.1432, 0.4322", "467.127, 439.503, 10.7456, 0.4068", "468.251, 439.692, 10.6529, 0.3814", "469.27, 440.211, 10.64, 0.4068" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "433.463, 432.661, 16.8, 0.839", "433.244, 433.221, 17.6039, 0.4322", "433.225, 434.277, 18.4173, 0.483", "433.441, 435.389, 18.4122, 0.5084", "433.874, 436.411, 17.8545, 0.5592", "434.464, 437.329, 17.0316, 0.5338", "434.998, 438.317, 16.613, 0.483", "435.804, 439.068, 16.8876, 0.4322", "436.863, 439.471, 16.7415, 0.483", "437.877, 439.988, 16.5043, 0.5848", "438.808, 440.57, 17.2301, 0.6864", "439.124, 441.601, 18.0578, 0.7118", "439.216, 442.719, 17.5605, 0.6864", "439.242, 443.862, 17.6568, 0.6102", "439.297, 444.963, 17.185, 0.5592", "439.242, 446.003, 16.83, 0.5338", "438.886, 446.929, 18.1132, 0.5084", "438.724, 447.882, 19.2805, 0.5084", "439.003, 448.928, 19.0991, 0.483", "439.417, 449.959, 18.7183, 0.5084", "439.875, 450.999, 18.935, 0.483", "440.346, 451.961, 19.7576, 0.483", "440.963, 452.836, 20.4445, 0.4576", "441.472, 453.804, 20.921, 0.483", "442.084, 454.686, 20.7435, 0.5338", "442.833, 455.519, 20.7046, 0.5592", "443.423, 456.474, 21.1523, 0.5848", "443.921, 457.418, 20.5523, 0.6102", "444.559, 458.323, 20.1698, 0.661", "444.923, 459.375, 20.3045, 0.661", "445.373, 460.409, 20.1572, 0.6356", "445.778, 461.423, 20.7444, 0.6102", "446.142, 462.467, 21.4645, 0.5848", "446.67, 463.468, 21.6219, 0.5592", "447.277, 464.411, 22.0833, 0.5084", "447.831, 465.401, 22.3874, 0.5084", "448.153, 466.491, 22.4692, 0.5084", "448.663, 467.484, 22.9284, 0.5592", "449.209, 468.475, 23.3388, 0.5592", "449.876, 469.393, 23.1501, 0.5592", "450.674, 470.155, 22.4619, 0.5338", "451.535, 470.882, 22.6814, 0.5592", "452.193, 471.783, 23.238, 0.6102", "452.805, 472.743, 23.1594, 0.7118", "453.249, 473.792, 22.9827, 0.788", "453.352, 474.921, 23.1829, 0.788", "453.407, 476.062, 23.3503, 0.6864", "453.451, 477.196, 23.6936, 0.5592", "453.375, 478.324, 24.1259, 0.5084", "453.814, 479.361, 24.3421, 0.5338", "454.671, 480.093, 23.9915, 0.5592", "455.431, 480.822, 23.4203, 0.5338", "456.468, 481.216, 24.0178, 0.483", "457.563, 481.528, 24.2298, 0.4576", "458.608, 481.942, 24.6854, 0.4322", "459.601, 482.482, 24.7352, 0.3814", "460.562, 483.022, 24.0943, 0.3814", "461.402, 483.751, 23.4559, 0.4576", "462.397, 484.211, 23.0728, 0.5338", "463.407, 484.636, 23.4788, 0.5084", "464.047, 485.486, 23.5088, 0.4322", "464.358, 486.465, 22.3975, 0.4068", "464.902, 487.349, 22.2583, 0.4576", "465.531, 488.273, 22.1032, 0.4576", "465.945, 489.324, 22.1194, 0.4322", "466.299, 490.411, 22.1878, 0.3814", "466.621, 491.501, 22.451, 0.4068", "467.191, 492.444, 22.0301, 0.4576", "467.507, 493.526, 21.9974, 0.5338", "467.95, 494.52, 22.5758, 0.6102", "468.182, 495.598, 22.0374, 0.6102", "468.796, 496.546, 21.8355, 0.5338", "469.478, 497.411, 22.2468, 0.3814", "470.471, 497.951, 21.9666, 0.2796", "471.501, 498.243, 21.3632, 0.2542", "472.61, 498.214, 21.3332, 0.2796", "473.631, 498.689, 21.2612, 0.305", "474.541, 499.255, 21.2744, 0.2796", "475.463, 499.777, 21.9915, 0.305", "476.057, 500.645, 21.2089, 0.356", "476.42, 501.61, 21.8036, 0.4576", "477.19, 502.375, 22.2925, 0.483", "478.137, 503.005, 22.1418, 0.4576", "479.07, 503.66, 22.2667, 0.4068", "479.803, 504.523, 22.4787, 0.356", "480.449, 505.404, 21.7697, 0.356", "481.061, 506.357, 21.7974, 0.3304", "481.824, 507.205, 21.9271, 0.3304", "482.396, 508.122, 21.0613, 0.305", "483.227, 508.737, 19.88, 0.3814" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_330",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_331",
    "groups" : [ ],
    "sections" : [ "dend_26", "apic_0", "dend_17", "dend_0", "apic_6", "apic_1", "dend_19", "dend_18", "dend_8", "dend_1", "apic_8", "apic_7", "apic_5", "apic_2", "dend_23", "dend_20", "dend_16", "dend_9", "dend_5", "dend_2", "apic_4", "apic_3", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_10", "dend_7", "dend_6", "dend_4", "dend_3", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_6", "apic_1", "apic_8", "apic_7", "apic_5", "apic_2", "apic_4", "apic_3" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_17", "dend_0", "dend_19", "dend_18", "dend_8", "dend_1", "dend_23", "dend_20", "dend_16", "dend_9", "dend_5", "dend_2", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_10", "dend_7", "dend_6", "dend_4", "dend_3", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15161",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_1", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "2.28"
  }, {
    "group" : "dend",
    "value" : "2.28"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "122.880005"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0020488997",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.7269252E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.6092708",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "6.216187E-5",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.018147424",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.5582833E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.1743167E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.12468487",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "5.458915E-4",
    "erev" : "-89.4614"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.1542162E-4",
    "erev" : "-89.4614"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "6.282725E-6",
    "erev" : "-89.4614"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "5.9318995E-6",
    "erev" : "-89.4614"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "9.7272184E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0066296505",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473863035

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_6, id: apic_6, parent: apic_0
create apic_6
public apic_6
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_8, id: apic_8, parent: apic_6
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_5, id: apic_5, parent: apic_1
create apic_5
public apic_5
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_330, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_330
// Group: {name=ModelViewParmSubset_331, groups=[], sections=[dend_26, apic_0, dend_17, dend_0, apic_6, apic_1, dend_19, dend_18, dend_8, dend_1, apic_8, apic_7, apic_5, apic_2, dend_23, dend_20, dend_16, dend_9, dend_5, dend_2, apic_4, apic_3, dend_25, dend_24, dend_22, dend_21, dend_13, dend_10, dend_7, dend_6, dend_4, dend_3, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_331
// Group: {name=apic, groups=[], sections=[apic_0, apic_6, apic_1, apic_8, apic_7, apic_5, apic_2, apic_4, apic_3]}
objref apic
// Group: {name=dend, groups=[], sections=[dend_26, dend_17, dend_0, dend_19, dend_18, dend_8, dend_1, dend_23, dend_20, dend_16, dend_9, dend_5, dend_2, dend_25, dend_24, dend_22, dend_21, dend_13, dend_10, dend_7, dend_6, dend_4, dend_3, dend_15, dend_14, dend_12, dend_11]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_15161, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_15161
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_1, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49996118313795607)
    connect dend_26(0), soma_0(0.49996118313795607)
    connect apic_0(0), soma_0(0.49996118313795607)
    connect dend_17(0), soma_0(0.49996118313795607)
    connect dend_0(0), soma_0(0.49996118313795607)
    connect axon_1(0), axon_0(1.0)
    connect apic_6(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_8(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_5(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 408.374, 408.522, 15.12, 12.8812 ) }
    soma_0 { pt3dadd( 414.814, 408.522, 15.12, 12.8812 ) }
    soma_0 { pt3dadd( 421.255, 408.522, 15.12, 12.8812 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 414.815, 408.522, 15.12, 1.0 ) }
    axon_0 { pt3dadd( 420.656, 422.338, 15.12, 1.0 ) }
    axon_0 { pt3dadd( 426.497, 436.154, 15.12, 1.0 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 6/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 420.001, 408.755, 10.0285, 0.6102 ) }
    dend_26 { pt3dadd( 421.091, 408.628, 9.3506, 0.7372 ) }
    dend_26 { pt3dadd( 422.138, 408.212, 9.3579, 0.839 ) }
    dend_26 { pt3dadd( 423.088, 407.587, 9.5656, 0.788 ) }
    dend_26 { pt3dadd( 424.057, 406.995, 9.8697, 0.6864 ) }
    dend_26 { pt3dadd( 425.115, 406.583, 9.9075, 0.5592 ) }
    dend_26 { pt3dadd( 426.208, 406.268, 9.6527, 0.4322 ) }
    dend_26 { pt3dadd( 427.333, 406.24, 9.4366, 0.356 ) }
    dend_26 { pt3dadd( 428.452, 406.428, 9.1146, 0.3304 ) }
    dend_26 { pt3dadd( 429.334, 406.677, 10.3457, 0.356 ) }
    dend_26 { pt3dadd( 430.009, 407.107, 12.3208, 0.356 ) }
    dend_26 { pt3dadd( 430.93, 407.169, 13.7455, 0.356 ) }
    dend_26 { pt3dadd( 431.766, 406.499, 13.9502, 0.3814 ) }
    dend_26 { pt3dadd( 432.464, 405.603, 13.6391, 0.483 ) }
    dend_26 { pt3dadd( 433.375, 404.924, 13.7175, 0.5338 ) }
    dend_26 { pt3dadd( 434.194, 404.156, 14.2106, 0.5338 ) }
    dend_26 { pt3dadd( 435.066, 403.491, 14.9923, 0.4322 ) }
    dend_26 { pt3dadd( 435.865, 403.374, 13.16, 0.3304 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 24/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 417.884, 404.244, 16.2112, 0.3814 ) }
    apic_0 { pt3dadd( 418.663, 403.416, 16.5152, 0.5338 ) }
    apic_0 { pt3dadd( 419.55, 402.721, 16.996, 0.6356 ) }
    apic_0 { pt3dadd( 420.419, 401.991, 17.3516, 0.6864 ) }
    apic_0 { pt3dadd( 421.254, 401.215, 17.5703, 0.7626 ) }
    apic_0 { pt3dadd( 422.073, 400.442, 18.0701, 0.8644 ) }
    apic_0 { pt3dadd( 422.888, 399.652, 18.4279, 0.9914 ) }
    apic_0 { pt3dadd( 423.822, 398.994, 18.471, 0.9914 ) }
    apic_0 { pt3dadd( 424.79, 398.384, 18.4444, 0.966 ) }
    apic_0 { pt3dadd( 425.639, 397.619, 18.3282, 0.9152 ) }
    apic_0 { pt3dadd( 426.328, 396.725, 17.8595, 0.9152 ) }
    apic_0 { pt3dadd( 426.955, 395.786, 17.4224, 0.9406 ) }
    apic_0 { pt3dadd( 427.589, 394.839, 17.183, 0.9406 ) }
    apic_0 { pt3dadd( 428.154, 393.874, 16.6026, 0.9406 ) }
    apic_0 { pt3dadd( 428.516, 392.84, 15.7884, 0.9152 ) }
    apic_0 { pt3dadd( 428.827, 391.76, 15.258, 0.966 ) }
    apic_0 { pt3dadd( 429.21, 390.684, 15.122, 1.0424 ) }
    apic_0 { pt3dadd( 429.738, 389.669, 15.1203, 1.0932 ) }
    apic_0 { pt3dadd( 430.44, 388.767, 15.122, 1.0424 ) }
    apic_0 { pt3dadd( 431.22, 387.93, 15.1276, 0.966 ) }
    apic_0 { pt3dadd( 431.88, 386.996, 15.1556, 0.9152 ) }
    apic_0 { pt3dadd( 432.494, 386.031, 15.3023, 0.966 ) }
    apic_0 { pt3dadd( 432.869, 384.994, 16.0384, 0.966 ) }
    apic_0 { pt3dadd( 433.188, 383.938, 16.7815, 0.9406 ) }
    apic_0 { pt3dadd( 433.466, 382.829, 16.9322, 0.7626 ) }
    apic_0 { pt3dadd( 433.247, 381.792, 15.8844, 0.6102 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 50/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 409.577, 406.411, 15.2239, 0.7626 ) }
    dend_17 { pt3dadd( 408.596, 405.85, 15.6554, 0.966 ) }
    dend_17 { pt3dadd( 407.542, 405.424, 15.9838, 1.0168 ) }
    dend_17 { pt3dadd( 406.529, 404.915, 15.6111, 0.9406 ) }
    dend_17 { pt3dadd( 405.564, 404.34, 16.1291, 0.8898 ) }
    dend_17 { pt3dadd( 404.594, 403.735, 16.2364, 0.8898 ) }
    dend_17 { pt3dadd( 403.592, 403.183, 16.24, 0.8898 ) }
    dend_17 { pt3dadd( 402.449, 403.142, 16.2403, 0.788 ) }
    dend_17 { pt3dadd( 401.42, 403.644, 16.2414, 0.661 ) }
    dend_17 { pt3dadd( 400.585, 404.426, 16.245, 0.6102 ) }
    dend_17 { pt3dadd( 399.743, 405.2, 16.2607, 0.661 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 415.769, 414.058, 14.8882, 0.7372 ) }
    dend_0 { pt3dadd( 415.651, 414.976, 16.5147, 1.0678 ) }
    dend_0 { pt3dadd( 415.367, 416.074, 16.8563, 1.322 ) }
    dend_0 { pt3dadd( 415.643, 417.176, 16.515, 1.3982 ) }
    dend_0 { pt3dadd( 416.188, 418.137, 17.2357, 1.4236 ) }
    dend_0 { pt3dadd( 416.84, 419.076, 17.3597, 1.449 ) }
    dend_0 { pt3dadd( 417.59, 419.941, 17.36, 1.5254 ) }
    dend_0 { pt3dadd( 418.476, 420.663, 17.36, 1.6016 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 426.497, 436.154, 15.12, 1.0 ) }
    axon_1 { pt3dadd( 432.338, 449.97, 15.12, 1.0 ) }
    axon_1 { pt3dadd( 438.18, 463.786, 15.12, 1.0 ) }
    // Section: apic_6, id: apic_6, parent: apic_0 (entry count 72/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 433.247, 381.792, 15.8844, 0.6102 ) }
    apic_6 { pt3dadd( 433.496, 381.624, 18.1658, 0.5848 ) }
    apic_6 { pt3dadd( 434.124, 381.467, 20.2387, 0.4068 ) }
    apic_6 { pt3dadd( 435.108, 381.463, 21.6325, 0.3304 ) }
    apic_6 { pt3dadd( 436.168, 381.659, 22.4507, 0.356 ) }
    apic_6 { pt3dadd( 436.692, 382.468, 22.3471, 0.4576 ) }
    apic_6 { pt3dadd( 436.709, 383.598, 22.1788, 0.5084 ) }
    apic_6 { pt3dadd( 436.637, 384.72, 22.5845, 0.5084 ) }
    apic_6 { pt3dadd( 436.643, 385.845, 23.0667, 0.483 ) }
    apic_6 { pt3dadd( 436.694, 386.977, 22.9566, 0.4068 ) }
    apic_6 { pt3dadd( 437.022, 388.029, 22.3874, 0.4068 ) }
    apic_6 { pt3dadd( 437.455, 389.077, 22.2429, 0.4068 ) }
    apic_6 { pt3dadd( 438.031, 390.042, 21.9145, 0.5084 ) }
    apic_6 { pt3dadd( 438.606, 391.018, 22.008, 0.5338 ) }
    apic_6 { pt3dadd( 439.217, 391.981, 22.1278, 0.5848 ) }
    apic_6 { pt3dadd( 440.189, 392.495, 22.0937, 0.5338 ) }
    apic_6 { pt3dadd( 441.296, 392.782, 22.1236, 0.5338 ) }
    apic_6 { pt3dadd( 442.206, 393.432, 22.2919, 0.5084 ) }
    apic_6 { pt3dadd( 442.664, 394.45, 22.0623, 0.5848 ) }
    apic_6 { pt3dadd( 442.869, 395.571, 21.9512, 0.6356 ) }
    apic_6 { pt3dadd( 443.069, 396.696, 21.7955, 0.6864 ) }
    apic_6 { pt3dadd( 443.579, 397.698, 22.1746, 0.6356 ) }
    apic_6 { pt3dadd( 444.176, 398.471, 20.8544, 0.5848 ) }
    apic_6 { pt3dadd( 444.823, 399.409, 20.6668, 0.5592 ) }
    apic_6 { pt3dadd( 445.525, 400.235, 21.56, 0.661 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 97/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 433.247, 381.792, 15.8844, 0.6102 ) }
    apic_1 { pt3dadd( 433.221, 380.694, 15.3969, 0.5592 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 99/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 399.743, 405.2, 16.2607, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_19 { pt3dadd( 399.209, 405.169, 15.1729, 0.7372 ) }
    dend_19 { pt3dadd( 398.367, 404.698, 13.6867, 0.7626 ) }
    dend_19 { pt3dadd( 397.452, 404.054, 13.1463, 0.788 ) }
    dend_19 { pt3dadd( 396.486, 403.472, 13.587, 0.839 ) }
    dend_19 { pt3dadd( 395.387, 403.205, 13.9765, 0.9152 ) }
    dend_19 { pt3dadd( 394.263, 403.402, 14.0958, 0.9914 ) }
    dend_19 { pt3dadd( 393.133, 403.503, 14.4547, 1.0168 ) }
    dend_19 { pt3dadd( 392.023, 403.615, 15.0685, 0.966 ) }
    dend_19 { pt3dadd( 390.955, 404.007, 15.3448, 0.839 ) }
    dend_19 { pt3dadd( 390.017, 404.626, 15.869, 0.7626 ) }
    dend_19 { pt3dadd( 389.104, 405.296, 16.2551, 0.7372 ) }
    dend_19 { pt3dadd( 388.145, 405.913, 16.4914, 0.7626 ) }
    dend_19 { pt3dadd( 387.123, 406.372, 17.0419, 0.7626 ) }
    dend_19 { pt3dadd( 386.02, 406.65, 17.3426, 0.7626 ) }
    dend_19 { pt3dadd( 384.876, 406.629, 17.3457, 0.7372 ) }
    dend_19 { pt3dadd( 383.747, 406.447, 17.2712, 0.6864 ) }
    dend_19 { pt3dadd( 382.63, 406.239, 16.9361, 0.5848 ) }
    dend_19 { pt3dadd( 381.514, 406.178, 16.3453, 0.5338 ) }
    dend_19 { pt3dadd( 380.395, 405.938, 16.3184, 0.5084 ) }
    dend_19 { pt3dadd( 379.404, 405.375, 16.5628, 0.5848 ) }
    dend_19 { pt3dadd( 378.374, 404.915, 17.0313, 0.5848 ) }
    dend_19 { pt3dadd( 377.251, 404.745, 17.3519, 0.5848 ) }
    dend_19 { pt3dadd( 376.129, 404.523, 17.3239, 0.483 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 399.743, 405.2, 16.2607, 0.661 ) }
    dend_18 { pt3dadd( 399.368, 405.556, 16.3604, 0.4322 ) }
    dend_18 { pt3dadd( 398.849, 406.424, 17.099, 0.3304 ) }
    dend_18 { pt3dadd( 398.746, 407.382, 18.6099, 0.2796 ) }
    dend_18 { pt3dadd( 398.057, 407.979, 19.626, 0.2288 ) }
    dend_18 { pt3dadd( 397.033, 407.893, 20.6665, 0.2288 ) }
    dend_18 { pt3dadd( 396.093, 407.812, 22.2194, 0.2288 ) }
    dend_18 { pt3dadd( 395.12, 407.359, 22.9026, 0.2288 ) }
    dend_18 { pt3dadd( 394.236, 406.643, 23.0966, 0.2288 ) }
    dend_18 { pt3dadd( 393.155, 406.594, 23.6499, 0.2796 ) }
    dend_18 { pt3dadd( 392.435, 407.405, 24.2712, 0.356 ) }
    dend_18 { pt3dadd( 392.403, 408.463, 25.2109, 0.4322 ) }
    dend_18 { pt3dadd( 393.059, 409.359, 25.7667, 0.4576 ) }
    dend_18 { pt3dadd( 393.527, 410.4, 25.8499, 0.5338 ) }
    dend_18 { pt3dadd( 393.394, 411.501, 26.4844, 0.661 ) }
    dend_18 { pt3dadd( 393.02, 412.476, 27.6315, 0.839 ) }
    dend_18 { pt3dadd( 392.847, 413.452, 29.0256, 0.8644 ) }
    dend_18 { pt3dadd( 392.744, 414.568, 29.5529, 0.788 ) }
    dend_18 { pt3dadd( 392.385, 415.643, 29.3213, 0.6356 ) }
    dend_18 { pt3dadd( 391.49, 416.274, 29.0363, 0.5338 ) }
    dend_18 { pt3dadd( 390.365, 416.19, 29.4423, 0.5848 ) }
    dend_18 { pt3dadd( 389.296, 416.138, 30.2716, 0.5848 ) }
    dend_18 { pt3dadd( 388.364, 416.595, 31.4154, 0.6864 ) }
    dend_18 { pt3dadd( 387.488, 417.167, 32.4727, 0.5848 ) }
    dend_18 { pt3dadd( 386.456, 417.592, 33.0504, 0.5848 ) }
    dend_18 { pt3dadd( 385.613, 418.251, 33.469, 0.4322 ) }
    dend_18 { pt3dadd( 385.205, 419.299, 33.9811, 0.4576 ) }
    dend_18 { pt3dadd( 384.497, 419.984, 34.3353, 0.4576 ) }
    dend_18 { pt3dadd( 383.444, 419.79, 34.8989, 0.5848 ) }
    dend_18 { pt3dadd( 382.421, 419.365, 35.6017, 0.6356 ) }
    dend_18 { pt3dadd( 381.332, 419.152, 36.1362, 0.7118 ) }
    dend_18 { pt3dadd( 380.204, 419.233, 36.3675, 0.7372 ) }
    dend_18 { pt3dadd( 379.081, 419.449, 36.4428, 0.6864 ) }
    dend_18 { pt3dadd( 377.958, 419.648, 36.6411, 0.6102 ) }
    dend_18 { pt3dadd( 376.892, 419.534, 37.3674, 0.5338 ) }
    dend_18 { pt3dadd( 375.994, 419.067, 38.5983, 0.5338 ) }
    dend_18 { pt3dadd( 375.08, 418.524, 39.5914, 0.5338 ) }
    dend_18 { pt3dadd( 374.028, 418.197, 40.2475, 0.5338 ) }
    dend_18 { pt3dadd( 372.93, 417.981, 40.8201, 0.5848 ) }
    dend_18 { pt3dadd( 371.886, 417.595, 41.3899, 0.5848 ) }
    dend_18 { pt3dadd( 370.81, 417.266, 41.8452, 0.6102 ) }
    dend_18 { pt3dadd( 369.768, 417.545, 42.2145, 0.5848 ) }
    dend_18 { pt3dadd( 369.227, 418.476, 42.5466, 0.661 ) }
    dend_18 { pt3dadd( 368.597, 419.384, 43.1525, 0.6356 ) }
    dend_18 { pt3dadd( 368.052, 420.073, 44.8381, 0.661 ) }
    dend_18 { pt3dadd( 367.827, 420.69, 47.0974, 0.661 ) }
    dend_18 { pt3dadd( 367.616, 421.556, 48.7878, 0.7626 ) }
    dend_18 { pt3dadd( 367.185, 422.539, 49.6588, 0.7372 ) }
    dend_18 { pt3dadd( 366.63, 423.522, 50.0685, 0.6864 ) }
    dend_18 { pt3dadd( 366.039, 424.449, 50.8158, 0.6102 ) }
    dend_18 { pt3dadd( 365.658, 425.489, 51.4326, 0.5848 ) }
    dend_18 { pt3dadd( 365.274, 426.496, 52.3561, 0.5338 ) }
    dend_18 { pt3dadd( 364.654, 427.372, 53.2714, 0.4576 ) }
    dend_18 { pt3dadd( 363.986, 428.134, 54.5538, 0.4322 ) }
    dend_18 { pt3dadd( 363.29, 428.699, 56.2691, 0.4068 ) }
    dend_18 { pt3dadd( 362.586, 429.495, 57.195, 0.4322 ) }
    dend_18 { pt3dadd( 361.766, 430.086, 58.45, 0.4068 ) }
    dend_18 { pt3dadd( 360.943, 430.756, 59.4804, 0.4322 ) }
    dend_18 { pt3dadd( 360.465, 431.76, 59.9995, 0.4068 ) }
    dend_18 { pt3dadd( 359.956, 432.576, 61.4709, 0.4068 ) }
    dend_18 { pt3dadd( 358.988, 432.89, 62.72, 0.3304 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 84/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 418.476, 420.663, 17.36, 1.6016 ) }
    dend_8 { pt3dadd( 420.375, 420.927, 17.3779, 0.9406 ) }
    dend_8 { pt3dadd( 421.515, 420.857, 17.5042, 0.966 ) }
    dend_8 { pt3dadd( 422.657, 420.824, 17.5941, 0.966 ) }
    dend_8 { pt3dadd( 423.782, 420.669, 17.2483, 0.9406 ) }
    dend_8 { pt3dadd( 424.883, 420.361, 17.3186, 0.9914 ) }
    dend_8 { pt3dadd( 426.026, 420.357, 17.4199, 0.966 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 91/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 418.476, 420.663, 17.36, 1.6016 ) }
    dend_1 { pt3dadd( 419.496, 422.413, 17.3135, 1.0932 ) }
    dend_1 { pt3dadd( 420.193, 423.317, 17.1464, 1.0424 ) }
    dend_1 { pt3dadd( 420.614, 424.339, 16.4335, 0.9914 ) }
    dend_1 { pt3dadd( 421.136, 425.337, 15.9295, 0.9914 ) }
    dend_1 { pt3dadd( 421.356, 426.458, 16.0826, 0.8898 ) }
    dend_1 { pt3dadd( 421.658, 427.561, 16.0269, 0.7118 ) }
    // Section: apic_8, id: apic_8, parent: apic_6 (entry count 98/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 445.525, 400.235, 21.56, 0.661 ) }
    apic_8 { pt3dadd( 445.462, 401.679, 21.9845, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_8 { pt3dadd( 445.167, 402.773, 21.7115, 0.5848 ) }
    apic_8 { pt3dadd( 445.195, 403.855, 21.4799, 0.6102 ) }
    apic_8 { pt3dadd( 445.772, 404.807, 21.3013, 0.6102 ) }
    apic_8 { pt3dadd( 446.27, 405.762, 21.8425, 0.5848 ) }
    apic_8 { pt3dadd( 446.382, 406.851, 21.9724, 0.5848 ) }
    apic_8 { pt3dadd( 446.291, 407.979, 21.6037, 0.5338 ) }
    apic_8 { pt3dadd( 445.942, 409.051, 21.4144, 0.5084 ) }
    apic_8 { pt3dadd( 445.543, 410.059, 22.0562, 0.5084 ) }
    apic_8 { pt3dadd( 445.063, 411.06, 22.4006, 0.6102 ) }
    apic_8 { pt3dadd( 444.834, 412.151, 22.5826, 0.7372 ) }
    apic_8 { pt3dadd( 444.959, 413.279, 22.7581, 0.7372 ) }
    apic_8 { pt3dadd( 444.905, 414.409, 22.9611, 0.6356 ) }
    apic_8 { pt3dadd( 444.802, 415.547, 22.9653, 0.483 ) }
    apic_8 { pt3dadd( 444.654, 416.671, 23.2529, 0.4576 ) }
    apic_8 { pt3dadd( 444.714, 417.799, 23.1344, 0.5338 ) }
    apic_8 { pt3dadd( 445.192, 418.815, 22.8724, 0.6102 ) }
    apic_8 { pt3dadd( 445.665, 419.826, 23.3646, 0.6102 ) }
    apic_8 { pt3dadd( 446.003, 420.895, 23.0208, 0.5338 ) }
    apic_8 { pt3dadd( 446.385, 421.913, 22.1598, 0.5084 ) }
    apic_8 { pt3dadd( 446.847, 422.916, 22.7094, 0.483 ) }
    apic_8 { pt3dadd( 447.219, 423.986, 22.678, 0.483 ) }
    apic_8 { pt3dadd( 447.275, 425.117, 22.5464, 0.4576 ) }
    apic_8 { pt3dadd( 447.379, 426.213, 23.0896, 0.4322 ) }
    apic_8 { pt3dadd( 447.034, 427.284, 23.5656, 0.4068 ) }
    apic_8 { pt3dadd( 446.686, 428.331, 24.3158, 0.3814 ) }
    apic_8 { pt3dadd( 446.385, 429.398, 24.9298, 0.4068 ) }
    apic_8 { pt3dadd( 446.27, 430.501, 24.7372, 0.4068 ) }
    apic_8 { pt3dadd( 446.426, 431.557, 23.8924, 0.3814 ) }
    apic_8 { pt3dadd( 446.765, 432.646, 23.868, 0.356 ) }
    apic_8 { pt3dadd( 446.942, 433.745, 24.3768, 0.356 ) }
    apic_8 { pt3dadd( 446.886, 434.856, 24.2586, 0.4322 ) }
    apic_8 { pt3dadd( 446.954, 435.908, 25.2084, 0.483 ) }
    apic_8 { pt3dadd( 446.855, 436.971, 26.1985, 0.5592 ) }
    apic_8 { pt3dadd( 446.616, 438.067, 26.7252, 0.5848 ) }
    apic_8 { pt3dadd( 446.628, 439.174, 26.0543, 0.6356 ) }
    apic_8 { pt3dadd( 446.698, 440.302, 25.655, 0.661 ) }
    apic_8 { pt3dadd( 446.724, 441.399, 26.4359, 0.6356 ) }
    apic_8 { pt3dadd( 446.68, 442.54, 26.4902, 0.5338 ) }
    apic_8 { pt3dadd( 446.554, 443.651, 26.9503, 0.4576 ) }
    apic_8 { pt3dadd( 446.588, 444.703, 27.4691, 0.4322 ) }
    apic_8 { pt3dadd( 446.754, 445.775, 26.7058, 0.483 ) }
    apic_8 { pt3dadd( 446.834, 446.883, 26.2136, 0.483 ) }
    apic_8 { pt3dadd( 446.965, 447.953, 25.7807, 0.5338 ) }
    apic_8 { pt3dadd( 447.043, 449.057, 26.4443, 0.5338 ) }
    apic_8 { pt3dadd( 446.874, 450.118, 27.3179, 0.5848 ) }
    apic_8 { pt3dadd( 446.779, 451.184, 28.2324, 0.5338 ) }
    apic_8 { pt3dadd( 446.589, 452.253, 27.8597, 0.5592 ) }
    apic_8 { pt3dadd( 446.679, 453.362, 27.8678, 0.5592 ) }
    apic_8 { pt3dadd( 447.289, 454.266, 27.3767, 0.6102 ) }
    apic_8 { pt3dadd( 447.8, 455.247, 27.7934, 0.5848 ) }
    apic_8 { pt3dadd( 447.968, 456.349, 27.4842, 0.5592 ) }
    apic_8 { pt3dadd( 447.974, 457.353, 26.3096, 0.5592 ) }
    apic_8 { pt3dadd( 448.312, 458.422, 26.8122, 0.5848 ) }
    apic_8 { pt3dadd( 448.735, 459.477, 26.8652, 0.6102 ) }
    apic_8 { pt3dadd( 448.974, 460.586, 26.6375, 0.6102 ) }
    apic_8 { pt3dadd( 449.228, 461.641, 25.8059, 0.5592 ) }
    apic_8 { pt3dadd( 449.397, 462.677, 25.9274, 0.4576 ) }
    apic_8 { pt3dadd( 449.769, 463.703, 26.2332, 0.3304 ) }
    apic_8 { pt3dadd( 450.006, 464.798, 25.9854, 0.305 ) }
    apic_8 { pt3dadd( 450.099, 465.91, 26.3864, 0.3814 ) }
    apic_8 { pt3dadd( 450.12, 467.0, 25.9826, 0.483 ) }
    apic_8 { pt3dadd( 450.188, 468.128, 25.6676, 0.5084 ) }
    apic_8 { pt3dadd( 450.292, 468.672, 23.4268, 0.483 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 63/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 445.525, 400.235, 21.56, 0.661 ) }
    apic_7 { pt3dadd( 446.248, 400.783, 21.866, 0.483 ) }
    apic_7 { pt3dadd( 447.246, 401.097, 22.9942, 0.5084 ) }
    apic_7 { pt3dadd( 448.308, 401.447, 22.468, 0.483 ) }
    apic_7 { pt3dadd( 449.345, 401.871, 22.9359, 0.4068 ) }
    apic_7 { pt3dadd( 450.451, 401.874, 23.4702, 0.3304 ) }
    apic_7 { pt3dadd( 451.471, 401.798, 22.7223, 0.305 ) }
    apic_7 { pt3dadd( 452.355, 401.224, 22.8262, 0.356 ) }
    apic_7 { pt3dadd( 453.363, 401.1, 23.6088, 0.4068 ) }
    apic_7 { pt3dadd( 454.309, 401.569, 24.2589, 0.483 ) }
    apic_7 { pt3dadd( 455.157, 402.249, 25.0524, 0.5338 ) }
    apic_7 { pt3dadd( 456.077, 402.883, 24.876, 0.6102 ) }
    apic_7 { pt3dadd( 457.008, 403.473, 24.1343, 0.6864 ) }
    apic_7 { pt3dadd( 457.864, 404.164, 23.4262, 0.6864 ) }
    apic_7 { pt3dadd( 458.815, 404.685, 23.5626, 0.661 ) }
    apic_7 { pt3dadd( 459.649, 405.198, 24.885, 0.5848 ) }
    apic_7 { pt3dadd( 460.492, 405.637, 26.4256, 0.5338 ) }
    apic_7 { pt3dadd( 461.311, 406.335, 27.1762, 0.4322 ) }
    apic_7 { pt3dadd( 462.1, 407.074, 28.0036, 0.3304 ) }
    apic_7 { pt3dadd( 462.791, 407.813, 27.83, 0.2796 ) }
    apic_7 { pt3dadd( 462.72, 408.939, 27.9446, 0.2796 ) }
    apic_7 { pt3dadd( 462.673, 410.045, 27.6965, 0.3304 ) }
    apic_7 { pt3dadd( 462.71, 411.14, 28.5046, 0.356 ) }
    apic_7 { pt3dadd( 462.859, 412.213, 29.0987, 0.4068 ) }
    apic_7 { pt3dadd( 463.191, 413.185, 29.6456, 0.4322 ) }
    apic_7 { pt3dadd( 463.231, 413.943, 31.7198, 0.4322 ) }
    apic_7 { pt3dadd( 463.534, 414.702, 31.9715, 0.4322 ) }
    apic_7 { pt3dadd( 463.824, 415.471, 33.2511, 0.4576 ) }
    apic_7 { pt3dadd( 463.893, 414.865, 35.1758, 0.5338 ) }
    apic_7 { pt3dadd( 464.351, 414.684, 37.4198, 0.5592 ) }
    apic_7 { pt3dadd( 464.497, 415.722, 38.4462, 0.5592 ) }
    apic_7 { pt3dadd( 465.275, 416.441, 39.0706, 0.5084 ) }
    apic_7 { pt3dadd( 466.351, 416.819, 38.8654, 0.4576 ) }
    apic_7 { pt3dadd( 467.277, 417.386, 38.7335, 0.356 ) }
    apic_7 { pt3dadd( 468.051, 417.871, 39.6371, 0.3304 ) }
    apic_7 { pt3dadd( 469.125, 417.736, 40.3908, 0.3304 ) }
    apic_7 { pt3dadd( 470.086, 417.947, 41.4809, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_7 { pt3dadd( 471.004, 418.361, 42.7941, 0.5084 ) }
    apic_7 { pt3dadd( 472.068, 418.685, 43.1575, 0.6356 ) }
    apic_7 { pt3dadd( 473.15, 419.049, 43.0648, 0.661 ) }
    apic_7 { pt3dadd( 474.253, 419.305, 43.3112, 0.6102 ) }
    apic_7 { pt3dadd( 475.334, 419.064, 43.7108, 0.4576 ) }
    apic_7 { pt3dadd( 476.323, 418.523, 44.1465, 0.3814 ) }
    apic_7 { pt3dadd( 477.342, 418.858, 44.2198, 0.3814 ) }
    apic_7 { pt3dadd( 478.469, 418.943, 44.093, 0.4576 ) }
    apic_7 { pt3dadd( 479.566, 419.038, 44.7714, 0.5592 ) }
    apic_7 { pt3dadd( 480.613, 419.387, 45.4728, 0.6356 ) }
    apic_7 { pt3dadd( 481.628, 419.906, 45.5703, 0.7372 ) }
    apic_7 { pt3dadd( 482.751, 420.102, 45.7131, 0.7626 ) }
    apic_7 { pt3dadd( 483.799, 420.534, 45.36, 0.7372 ) }
    // Section: apic_5, id: apic_5, parent: apic_1 (entry count 13/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 433.221, 380.694, 15.3969, 0.5592 ) }
    apic_5 { pt3dadd( 432.786, 379.586, 15.1883, 0.7626 ) }
    apic_5 { pt3dadd( 432.38, 378.519, 15.2043, 0.661 ) }
    apic_5 { pt3dadd( 431.955, 377.464, 15.4969, 0.5848 ) }
    apic_5 { pt3dadd( 431.584, 376.404, 16.0068, 0.5338 ) }
    apic_5 { pt3dadd( 431.213, 375.327, 16.1736, 0.5338 ) }
    apic_5 { pt3dadd( 430.86, 374.244, 15.9807, 0.5338 ) }
    apic_5 { pt3dadd( 430.44, 373.2, 15.5008, 0.483 ) }
    apic_5 { pt3dadd( 429.735, 372.327, 15.1698, 0.4576 ) }
    apic_5 { pt3dadd( 428.781, 371.719, 15.0592, 0.4322 ) }
    apic_5 { pt3dadd( 427.683, 371.443, 14.9531, 0.4576 ) }
    apic_5 { pt3dadd( 426.577, 371.164, 15.073, 0.4068 ) }
    apic_5 { pt3dadd( 425.744, 370.506, 15.8942, 0.3814 ) }
    apic_5 { pt3dadd( 424.998, 369.662, 16.2106, 0.4068 ) }
    apic_5 { pt3dadd( 424.28, 368.772, 16.24, 0.5592 ) }
    apic_5 { pt3dadd( 423.554, 367.886, 16.2397, 0.6864 ) }
    apic_5 { pt3dadd( 422.765, 367.059, 16.238, 0.7626 ) }
    apic_5 { pt3dadd( 421.949, 366.257, 16.2327, 0.7372 ) }
    apic_5 { pt3dadd( 421.106, 365.484, 16.2064, 0.6864 ) }
    apic_5 { pt3dadd( 420.166, 364.84, 16.0611, 0.6102 ) }
    apic_5 { pt3dadd( 419.123, 364.435, 15.573, 0.5338 ) }
    apic_5 { pt3dadd( 418.212, 363.847, 14.747, 0.5338 ) }
    apic_5 { pt3dadd( 417.601, 362.927, 14.1554, 0.5592 ) }
    apic_5 { pt3dadd( 416.975, 361.974, 14.0112, 0.6102 ) }
    apic_5 { pt3dadd( 416.333, 361.027, 14.0, 0.5848 ) }
    apic_5 { pt3dadd( 415.543, 360.206, 14.0, 0.5848 ) }
    apic_5 { pt3dadd( 414.593, 359.573, 14.0, 0.6356 ) }
    apic_5 { pt3dadd( 413.713, 358.846, 14.0, 0.7118 ) }
    apic_5 { pt3dadd( 412.948, 357.996, 14.0008, 0.7118 ) }
    apic_5 { pt3dadd( 412.289, 357.063, 14.0042, 0.5848 ) }
    apic_5 { pt3dadd( 411.764, 356.048, 14.0263, 0.4322 ) }
    apic_5 { pt3dadd( 411.329, 354.992, 14.1529, 0.3814 ) }
    apic_5 { pt3dadd( 410.763, 354.01, 14.4917, 0.4322 ) }
    apic_5 { pt3dadd( 410.079, 353.097, 14.6748, 0.5084 ) }
    apic_5 { pt3dadd( 409.474, 352.14, 14.3363, 0.5084 ) }
    apic_5 { pt3dadd( 408.958, 351.126, 14.065, 0.483 ) }
    apic_5 { pt3dadd( 408.568, 350.053, 14.0045, 0.4322 ) }
    apic_5 { pt3dadd( 408.22, 348.962, 14.0022, 0.3814 ) }
    apic_5 { pt3dadd( 408.015, 347.838, 14.0148, 0.305 ) }
    apic_5 { pt3dadd( 408.1, 346.702, 14.0997, 0.2542 ) }
    apic_5 { pt3dadd( 408.348, 345.586, 14.2066, 0.2288 ) }
    apic_5 { pt3dadd( 408.654, 344.485, 14.11, 0.2288 ) }
    apic_5 { pt3dadd( 409.185, 343.475, 14.1131, 0.2796 ) }
    apic_5 { pt3dadd( 409.379, 342.364, 14.2369, 0.356 ) }
    apic_5 { pt3dadd( 408.807, 341.379, 13.9762, 0.4576 ) }
    apic_5 { pt3dadd( 408.207, 340.429, 13.4532, 0.483 ) }
    apic_5 { pt3dadd( 407.633, 339.441, 13.2989, 0.5084 ) }
    apic_5 { pt3dadd( 407.045, 338.46, 13.2255, 0.483 ) }
    apic_5 { pt3dadd( 406.405, 337.522, 12.9178, 0.5084 ) }
    apic_5 { pt3dadd( 405.716, 336.608, 12.8803, 0.5084 ) }
    apic_5 { pt3dadd( 405.038, 335.687, 12.8822, 0.5592 ) }
    apic_5 { pt3dadd( 404.367, 334.761, 12.8909, 0.5592 ) }
    apic_5 { pt3dadd( 403.714, 333.823, 12.9338, 0.5338 ) }
    apic_5 { pt3dadd( 402.983, 332.946, 13.1244, 0.4576 ) }
    apic_5 { pt3dadd( 402.192, 332.141, 13.5626, 0.4068 ) }
    apic_5 { pt3dadd( 401.585, 331.187, 13.7536, 0.3814 ) }
    apic_5 { pt3dadd( 401.339, 330.082, 13.3683, 0.4068 ) }
    apic_5 { pt3dadd( 401.156, 328.963, 13.0029, 0.4068 ) }
    apic_5 { pt3dadd( 400.92, 327.844, 12.9514, 0.4068 ) }
    apic_5 { pt3dadd( 400.633, 326.742, 13.1916, 0.3814 ) }
    apic_5 { pt3dadd( 400.224, 325.693, 13.6335, 0.3814 ) }
    apic_5 { pt3dadd( 399.585, 324.759, 13.9412, 0.356 ) }
    apic_5 { pt3dadd( 398.729, 324.003, 13.9969, 0.3304 ) }
    apic_5 { pt3dadd( 397.795, 323.344, 13.9838, 0.356 ) }
    apic_5 { pt3dadd( 396.8, 322.781, 13.9121, 0.4322 ) }
    apic_5 { pt3dadd( 395.754, 322.34, 13.627, 0.483 ) }
    apic_5 { pt3dadd( 394.726, 321.94, 13.1566, 0.4576 ) }
    apic_5 { pt3dadd( 393.966, 321.123, 13.4946, 0.483 ) }
    apic_5 { pt3dadd( 393.44, 320.108, 13.5055, 0.5848 ) }
    apic_5 { pt3dadd( 392.868, 319.137, 13.1827, 0.7118 ) }
    apic_5 { pt3dadd( 392.252, 318.208, 12.773, 0.6864 ) }
    apic_5 { pt3dadd( 391.713, 317.205, 13.0141, 0.5848 ) }
    apic_5 { pt3dadd( 391.211, 316.196, 13.1648, 0.4576 ) }
    apic_5 { pt3dadd( 390.768, 315.185, 13.3658, 0.4068 ) }
    apic_5 { pt3dadd( 390.211, 314.24, 14.1053, 0.356 ) }
    apic_5 { pt3dadd( 389.748, 313.207, 14.2864, 0.356 ) }
    apic_5 { pt3dadd( 389.424, 312.166, 13.65, 0.3814 ) }
    apic_5 { pt3dadd( 389.268, 311.128, 12.5566, 0.4576 ) }
    apic_5 { pt3dadd( 389.081, 310.056, 11.7642, 0.5084 ) }
    apic_5 { pt3dadd( 388.874, 308.957, 11.2566, 0.483 ) }
    apic_5 { pt3dadd( 388.479, 307.941, 10.9614, 0.4576 ) }
    apic_5 { pt3dadd( 387.745, 307.066, 10.8175, 0.4576 ) }
    apic_5 { pt3dadd( 387.413, 306.034, 10.2435, 0.5592 ) }
    apic_5 { pt3dadd( 386.696, 305.233, 10.4885, 0.661 ) }
    apic_5 { pt3dadd( 386.061, 304.307, 10.2015, 0.7118 ) }
    apic_5 { pt3dadd( 385.551, 303.336, 9.4259, 0.7118 ) }
    apic_5 { pt3dadd( 385.197, 302.302, 8.6097, 0.6356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_5 { pt3dadd( 384.801, 301.293, 9.3607, 0.5848 ) }
    apic_5 { pt3dadd( 384.126, 300.451, 10.2819, 0.5338 ) }
    apic_5 { pt3dadd( 383.241, 299.728, 10.36, 0.5084 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 3/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 433.221, 380.694, 15.3969, 0.5592 ) }
    apic_2 { pt3dadd( 433.484, 380.289, 15.9138, 0.4322 ) }
    apic_2 { pt3dadd( 434.422, 379.665, 16.3817, 0.4576 ) }
    apic_2 { pt3dadd( 435.237, 378.919, 17.113, 0.5084 ) }
    apic_2 { pt3dadd( 435.997, 378.083, 17.5501, 0.5338 ) }
    apic_2 { pt3dadd( 436.598, 377.151, 18.2277, 0.5338 ) }
    apic_2 { pt3dadd( 437.121, 376.139, 18.5153, 0.5592 ) }
    apic_2 { pt3dadd( 437.171, 375.009, 18.9188, 0.5848 ) }
    apic_2 { pt3dadd( 436.962, 373.913, 19.5294, 0.5848 ) }
    apic_2 { pt3dadd( 437.311, 372.824, 19.5992, 0.5338 ) }
    apic_2 { pt3dadd( 438.081, 371.977, 19.6, 0.5084 ) }
    apic_2 { pt3dadd( 438.873, 371.151, 19.6003, 0.5338 ) }
    apic_2 { pt3dadd( 439.592, 370.263, 19.6011, 0.5848 ) }
    apic_2 { pt3dadd( 440.34, 369.397, 19.6056, 0.6356 ) }
    apic_2 { pt3dadd( 441.356, 368.871, 19.6291, 0.6102 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 18/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 376.129, 404.523, 17.3239, 0.483 ) }
    dend_23 { pt3dadd( 375.882, 404.152, 15.6237, 0.483 ) }
    dend_23 { pt3dadd( 375.78, 403.195, 14.4864, 0.4322 ) }
    dend_23 { pt3dadd( 375.735, 402.052, 14.436, 0.3814 ) }
    dend_23 { pt3dadd( 375.559, 400.934, 14.3072, 0.4322 ) }
    dend_23 { pt3dadd( 374.991, 400.025, 14.6616, 0.5592 ) }
    dend_23 { pt3dadd( 374.13, 399.34, 14.8022, 0.6356 ) }
    dend_23 { pt3dadd( 373.166, 398.769, 14.8904, 0.5848 ) }
    dend_23 { pt3dadd( 372.142, 398.385, 14.4376, 0.5338 ) }
    dend_23 { pt3dadd( 371.266, 397.77, 13.6167, 0.5084 ) }
    dend_23 { pt3dadd( 370.627, 396.847, 13.512, 0.5338 ) }
    dend_23 { pt3dadd( 370.019, 395.91, 13.0158, 0.5084 ) }
    dend_23 { pt3dadd( 369.258, 395.071, 12.8288, 0.4576 ) }
    dend_23 { pt3dadd( 368.497, 394.393, 13.9574, 0.4576 ) }
    dend_23 { pt3dadd( 367.812, 393.721, 12.8106, 0.5084 ) }
    dend_23 { pt3dadd( 367.17, 392.802, 12.4958, 0.6102 ) }
    dend_23 { pt3dadd( 366.636, 391.793, 12.3592, 0.6356 ) }
    dend_23 { pt3dadd( 365.966, 390.877, 12.6658, 0.6356 ) }
    dend_23 { pt3dadd( 365.051, 390.333, 13.6578, 0.5848 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 37/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 376.129, 404.523, 17.3239, 0.483 ) }
    dend_20 { pt3dadd( 374.994, 404.92, 17.5249, 0.5338 ) }
    dend_20 { pt3dadd( 373.913, 405.199, 18.123, 0.661 ) }
    dend_20 { pt3dadd( 372.784, 405.297, 18.4041, 0.7372 ) }
    dend_20 { pt3dadd( 371.641, 405.288, 18.3369, 0.7626 ) }
    dend_20 { pt3dadd( 370.531, 405.124, 17.836, 0.788 ) }
    dend_20 { pt3dadd( 369.433, 404.847, 17.4611, 0.788 ) }
    dend_20 { pt3dadd( 368.371, 404.425, 17.367, 0.7372 ) }
    dend_20 { pt3dadd( 367.417, 403.799, 17.3606, 0.6102 ) }
    dend_20 { pt3dadd( 366.357, 403.382, 17.3653, 0.483 ) }
    dend_20 { pt3dadd( 365.326, 403.798, 17.3992, 0.4322 ) }
    dend_20 { pt3dadd( 364.376, 404.429, 17.591, 0.4068 ) }
    dend_20 { pt3dadd( 363.289, 404.737, 17.9687, 0.4322 ) }
    dend_20 { pt3dadd( 362.164, 404.577, 17.7646, 0.4068 ) }
    dend_20 { pt3dadd( 361.15, 404.062, 17.4952, 0.4322 ) }
    dend_20 { pt3dadd( 360.097, 403.643, 17.8475, 0.4068 ) }
    dend_20 { pt3dadd( 359.024, 403.547, 18.7821, 0.4576 ) }
    dend_20 { pt3dadd( 357.906, 403.731, 19.1559, 0.5084 ) }
    dend_20 { pt3dadd( 356.9, 404.185, 18.433, 0.5848 ) }
    dend_20 { pt3dadd( 355.818, 404.38, 17.6593, 0.5592 ) }
    dend_20 { pt3dadd( 354.68, 404.381, 17.3958, 0.5084 ) }
    dend_20 { pt3dadd( 353.543, 404.26, 17.4079, 0.483 ) }
    dend_20 { pt3dadd( 352.534, 403.724, 17.5888, 0.5592 ) }
    dend_20 { pt3dadd( 351.599, 403.122, 18.2414, 0.6356 ) }
    dend_20 { pt3dadd( 350.707, 402.412, 18.461, 0.661 ) }
    dend_20 { pt3dadd( 349.724, 401.827, 18.4772, 0.6356 ) }
    dend_20 { pt3dadd( 348.683, 401.352, 18.4643, 0.6102 ) }
    dend_20 { pt3dadd( 347.594, 401.005, 18.3775, 0.6356 ) }
    dend_20 { pt3dadd( 346.5, 400.757, 17.8147, 0.6356 ) }
    dend_20 { pt3dadd( 345.371, 400.701, 17.3886, 0.6102 ) }
    dend_20 { pt3dadd( 344.255, 400.455, 17.3345, 0.5338 ) }
    dend_20 { pt3dadd( 343.182, 400.064, 17.1786, 0.5084 ) }
    dend_20 { pt3dadd( 342.353, 399.344, 16.3825, 0.483 ) }
    dend_20 { pt3dadd( 341.581, 398.502, 16.242, 0.5084 ) }
    dend_20 { pt3dadd( 340.552, 398.003, 16.24, 0.483 ) }
    dend_20 { pt3dadd( 339.492, 397.573, 16.2403, 0.5338 ) }
    dend_20 { pt3dadd( 338.537, 396.943, 16.2408, 0.5848 ) }
    dend_20 { pt3dadd( 337.726, 396.136, 16.2431, 0.6864 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 75/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 426.026, 420.357, 17.4199, 0.966 ) }
    dend_16 { pt3dadd( 427.29, 420.001, 17.3099, 0.788 ) }
    dend_16 { pt3dadd( 428.35, 419.59, 17.4538, 0.8136 ) }
    dend_16 { pt3dadd( 429.458, 419.377, 17.2584, 0.8136 ) }
    dend_16 { pt3dadd( 430.405, 418.972, 17.9315, 0.8136 ) }
    dend_16 { pt3dadd( 431.371, 418.419, 17.5484, 0.7118 ) }
    dend_16 { pt3dadd( 432.418, 418.123, 17.8377, 0.6102 ) }
    dend_16 { pt3dadd( 433.038, 417.593, 18.9356, 0.5084 ) }
    dend_16 { pt3dadd( 433.936, 417.172, 17.841, 0.5592 ) }
    dend_16 { pt3dadd( 434.607, 416.395, 18.3996, 0.6102 ) }
    dend_16 { pt3dadd( 434.897, 415.444, 19.4362, 0.6864 ) }
    dend_16 { pt3dadd( 434.298, 414.642, 20.0684, 0.661 ) }
    dend_16 { pt3dadd( 435.004, 414.039, 19.9548, 0.661 ) }
    dend_16 { pt3dadd( 436.092, 414.087, 19.8374, 0.7372 ) }
    dend_16 { pt3dadd( 437.074, 414.534, 20.1942, 0.8644 ) }
    dend_16 { pt3dadd( 438.126, 414.772, 20.6618, 0.9152 ) }
    dend_16 { pt3dadd( 439.048, 414.938, 21.8781, 0.8136 ) }
    dend_16 { pt3dadd( 440.054, 415.248, 22.1024, 0.661 ) }
    dend_16 { pt3dadd( 440.668, 415.043, 24.1704, 0.5848 ) }
    dend_16 { pt3dadd( 441.702, 414.591, 24.3342, 0.5848 ) }
    dend_16 { pt3dadd( 442.827, 414.642, 24.7117, 0.6102 ) }
    dend_16 { pt3dadd( 443.928, 414.874, 24.9343, 0.6102 ) }
    dend_16 { pt3dadd( 445.063, 414.763, 25.0275, 0.6356 ) }
    dend_16 { pt3dadd( 446.152, 414.542, 24.9743, 0.6864 ) }
    dend_16 { pt3dadd( 447.236, 414.333, 24.6036, 0.7372 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_16 { pt3dadd( 448.342, 414.559, 24.4367, 0.788 ) }
    dend_16 { pt3dadd( 449.289, 415.182, 24.5176, 0.788 ) }
    dend_16 { pt3dadd( 450.292, 415.696, 24.5574, 0.8136 ) }
    dend_16 { pt3dadd( 451.26, 416.105, 25.0919, 0.788 ) }
    dend_16 { pt3dadd( 452.001, 416.797, 23.9562, 0.7372 ) }
    dend_16 { pt3dadd( 452.874, 417.384, 23.0236, 0.6356 ) }
    dend_16 { pt3dadd( 453.972, 417.651, 22.7388, 0.5592 ) }
    dend_16 { pt3dadd( 455.029, 417.584, 23.6062, 0.6102 ) }
    dend_16 { pt3dadd( 455.932, 418.281, 23.4024, 0.7118 ) }
    dend_16 { pt3dadd( 456.877, 418.898, 23.3906, 0.8136 ) }
    dend_16 { pt3dadd( 457.751, 419.533, 23.1232, 0.8136 ) }
    dend_16 { pt3dadd( 458.487, 420.347, 22.3608, 0.788 ) }
    dend_16 { pt3dadd( 459.259, 421.055, 22.9684, 0.788 ) }
    dend_16 { pt3dadd( 460.223, 421.353, 24.11, 0.788 ) }
    dend_16 { pt3dadd( 461.335, 421.37, 24.5809, 0.7626 ) }
    dend_16 { pt3dadd( 462.403, 421.462, 23.8568, 0.6864 ) }
    dend_16 { pt3dadd( 463.406, 421.915, 23.952, 0.6356 ) }
    dend_16 { pt3dadd( 464.386, 422.195, 25.1952, 0.5592 ) }
    dend_16 { pt3dadd( 464.962, 423.171, 25.412, 0.5084 ) }
    dend_16 { pt3dadd( 465.704, 423.944, 25.158, 0.4576 ) }
    dend_16 { pt3dadd( 466.731, 423.75, 25.1826, 0.4576 ) }
    dend_16 { pt3dadd( 467.771, 424.137, 25.6264, 0.4576 ) }
    dend_16 { pt3dadd( 468.829, 424.5, 25.1902, 0.4576 ) }
    dend_16 { pt3dadd( 469.884, 424.664, 25.0802, 0.483 ) }
    dend_16 { pt3dadd( 470.864, 424.891, 24.1368, 0.4576 ) }
    dend_16 { pt3dadd( 471.375, 425.748, 25.2694, 0.4576 ) }
    dend_16 { pt3dadd( 472.118, 425.777, 25.8978, 0.4322 ) }
    dend_16 { pt3dadd( 473.138, 425.293, 25.4814, 0.4576 ) }
    dend_16 { pt3dadd( 474.239, 425.133, 25.8182, 0.4068 ) }
    dend_16 { pt3dadd( 475.347, 425.157, 25.7858, 0.3814 ) }
    dend_16 { pt3dadd( 476.393, 425.374, 25.8454, 0.4068 ) }
    dend_16 { pt3dadd( 477.345, 425.975, 26.0151, 0.5084 ) }
    dend_16 { pt3dadd( 478.027, 426.71, 27.1309, 0.5592 ) }
    dend_16 { pt3dadd( 479.006, 427.188, 27.4504, 0.5084 ) }
    dend_16 { pt3dadd( 479.965, 427.04, 26.4505, 0.4322 ) }
    dend_16 { pt3dadd( 480.908, 427.064, 26.7333, 0.3814 ) }
    dend_16 { pt3dadd( 481.99, 426.953, 26.8579, 0.4068 ) }
    dend_16 { pt3dadd( 483.011, 426.778, 25.6889, 0.4322 ) }
    dend_16 { pt3dadd( 484.111, 426.483, 25.482, 0.4322 ) }
    dend_16 { pt3dadd( 485.193, 426.615, 26.1064, 0.4322 ) }
    dend_16 { pt3dadd( 486.101, 427.112, 27.27, 0.4068 ) }
    dend_16 { pt3dadd( 486.978, 427.713, 28.2114, 0.4322 ) }
    dend_16 { pt3dadd( 487.956, 428.229, 28.0375, 0.4068 ) }
    dend_16 { pt3dadd( 488.91, 428.021, 28.2551, 0.4322 ) }
    dend_16 { pt3dadd( 490.006, 427.954, 28.5113, 0.4322 ) }
    dend_16 { pt3dadd( 491.031, 428.425, 28.3074, 0.483 ) }
    dend_16 { pt3dadd( 492.039, 428.696, 29.3762, 0.483 ) }
    dend_16 { pt3dadd( 493.055, 429.15, 29.5904, 0.483 ) }
    dend_16 { pt3dadd( 494.06, 429.454, 30.2117, 0.4322 ) }
    dend_16 { pt3dadd( 495.135, 429.333, 29.6738, 0.4068 ) }
    dend_16 { pt3dadd( 496.175, 429.126, 29.6136, 0.4068 ) }
    dend_16 { pt3dadd( 497.269, 429.119, 30.333, 0.4322 ) }
    dend_16 { pt3dadd( 498.23, 428.946, 31.3855, 0.5084 ) }
    dend_16 { pt3dadd( 498.478, 427.989, 32.7664, 0.5338 ) }
    dend_16 { pt3dadd( 498.8, 426.985, 32.975, 0.5338 ) }
    dend_16 { pt3dadd( 499.363, 426.238, 33.4216, 0.4576 ) }
    dend_16 { pt3dadd( 500.387, 426.14, 32.76, 0.4068 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 57/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 426.026, 420.357, 17.4199, 0.966 ) }
    dend_9 { pt3dadd( 427.264, 421.025, 16.7042, 0.9152 ) }
    dend_9 { pt3dadd( 428.112, 421.666, 15.6918, 0.8898 ) }
    dend_9 { pt3dadd( 429.099, 422.216, 15.4381, 0.8136 ) }
    dend_9 { pt3dadd( 429.84, 422.995, 16.2999, 0.7626 ) }
    dend_9 { pt3dadd( 430.423, 423.916, 17.1332, 0.7118 ) }
    dend_9 { pt3dadd( 430.961, 424.897, 17.7167, 0.6356 ) }
    dend_9 { pt3dadd( 431.695, 425.753, 17.3169, 0.5848 ) }
    dend_9 { pt3dadd( 432.062, 426.833, 17.3177, 0.483 ) }
    dend_9 { pt3dadd( 432.193, 427.966, 17.0853, 0.5338 ) }
    dend_9 { pt3dadd( 432.7, 428.987, 16.8622, 0.6356 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 68/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 421.658, 427.561, 16.0269, 0.7118 ) }
    dend_5 { pt3dadd( 421.758, 429.151, 15.1718, 0.966 ) }
    dend_5 { pt3dadd( 421.925, 430.265, 14.6978, 0.839 ) }
    dend_5 { pt3dadd( 422.067, 431.384, 14.2232, 0.661 ) }
    dend_5 { pt3dadd( 422.121, 432.502, 14.6902, 0.5592 ) }
    dend_5 { pt3dadd( 422.198, 433.621, 15.2452, 0.6864 ) }
    dend_5 { pt3dadd( 422.142, 434.754, 14.9027, 0.7626 ) }
    dend_5 { pt3dadd( 421.883, 435.839, 14.28, 0.788 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 76/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 421.658, 427.561, 16.0269, 0.7118 ) }
    dend_2 { pt3dadd( 421.543, 428.518, 17.4675, 0.5338 ) }
    dend_2 { pt3dadd( 421.472, 429.65, 17.4583, 0.5848 ) }
    dend_2 { pt3dadd( 421.413, 430.749, 17.8839, 0.6864 ) }
    dend_2 { pt3dadd( 420.921, 431.766, 17.7391, 0.7372 ) }
    dend_2 { pt3dadd( 420.175, 432.612, 17.9446, 0.7372 ) }
    dend_2 { pt3dadd( 419.372, 433.38, 17.7316, 0.6864 ) }
    dend_2 { pt3dadd( 419.002, 434.356, 16.9249, 0.7118 ) }
    dend_2 { pt3dadd( 418.722, 435.324, 15.9732, 0.7372 ) }
    dend_2 { pt3dadd( 418.421, 436.421, 16.0723, 0.7626 ) }
    dend_2 { pt3dadd( 418.186, 437.496, 16.7093, 0.788 ) }
    dend_2 { pt3dadd( 417.766, 438.496, 17.4961, 0.788 ) }
    dend_2 { pt3dadd( 417.181, 439.128, 16.5441, 0.7626 ) }
    dend_2 { pt3dadd( 416.544, 439.733, 16.4973, 0.6864 ) }
    dend_2 { pt3dadd( 415.82, 440.251, 18.1639, 0.6356 ) }
    dend_2 { pt3dadd( 414.846, 440.601, 18.958, 0.6102 ) }
    dend_2 { pt3dadd( 413.725, 440.608, 18.9213, 0.5592 ) }
    dend_2 { pt3dadd( 412.621, 440.804, 19.0162, 0.5592 ) }
    dend_2 { pt3dadd( 412.119, 441.699, 19.4015, 0.6102 ) }
    dend_2 { pt3dadd( 412.286, 442.775, 20.083, 0.788 ) }
    dend_2 { pt3dadd( 412.818, 443.729, 20.869, 0.8898 ) }
    dend_2 { pt3dadd( 413.511, 444.632, 21.0196, 0.9914 ) }
    dend_2 { pt3dadd( 413.557, 445.759, 21.2654, 1.0424 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 99/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 441.356, 368.871, 19.6291, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_4 { pt3dadd( 441.833, 368.342, 19.6039, 0.5084 ) }
    apic_4 { pt3dadd( 442.638, 367.528, 19.544, 0.5084 ) }
    apic_4 { pt3dadd( 443.084, 366.506, 19.3245, 0.5848 ) }
    apic_4 { pt3dadd( 443.159, 365.375, 19.1517, 0.6356 ) }
    apic_4 { pt3dadd( 443.078, 364.247, 19.4793, 0.6864 ) }
    apic_4 { pt3dadd( 443.049, 363.11, 19.7378, 0.6864 ) }
    apic_4 { pt3dadd( 443.399, 362.051, 20.1359, 0.661 ) }
    apic_4 { pt3dadd( 444.022, 361.115, 20.5783, 0.6356 ) }
    apic_4 { pt3dadd( 444.83, 360.315, 20.7105, 0.6102 ) }
    apic_4 { pt3dadd( 445.666, 359.533, 20.7248, 0.6102 ) }
    apic_4 { pt3dadd( 446.392, 358.652, 20.7438, 0.6102 ) }
    apic_4 { pt3dadd( 446.997, 357.684, 20.8429, 0.6102 ) }
    apic_4 { pt3dadd( 447.395, 356.628, 21.219, 0.6102 ) }
    apic_4 { pt3dadd( 447.643, 355.534, 21.7412, 0.6102 ) }
    apic_4 { pt3dadd( 447.784, 354.412, 22.1581, 0.6102 ) }
    apic_4 { pt3dadd( 447.962, 353.3, 22.6436, 0.6356 ) }
    apic_4 { pt3dadd( 448.329, 352.227, 22.923, 0.6102 ) }
    apic_4 { pt3dadd( 448.922, 351.256, 22.9928, 0.5592 ) }
    apic_4 { pt3dadd( 449.727, 350.452, 23.1165, 0.4322 ) }
    apic_4 { pt3dadd( 450.401, 349.552, 23.5231, 0.356 ) }
    apic_4 { pt3dadd( 451.089, 348.652, 23.903, 0.305 ) }
    apic_4 { pt3dadd( 452.007, 347.99, 23.8246, 0.356 ) }
    apic_4 { pt3dadd( 452.792, 347.202, 23.2515, 0.4068 ) }
    apic_4 { pt3dadd( 453.16, 346.157, 22.685, 0.4576 ) }
    apic_4 { pt3dadd( 453.23, 345.022, 22.6797, 0.4576 ) }
    apic_4 { pt3dadd( 453.153, 343.885, 22.9085, 0.4576 ) }
    apic_4 { pt3dadd( 452.988, 342.758, 23.1518, 0.4322 ) }
    apic_4 { pt3dadd( 452.945, 341.629, 23.5712, 0.356 ) }
    apic_4 { pt3dadd( 453.152, 340.517, 23.9464, 0.2796 ) }
    apic_4 { pt3dadd( 453.463, 339.418, 24.0705, 0.2796 ) }
    apic_4 { pt3dadd( 453.773, 338.317, 24.08, 0.3304 ) }
    apic_4 { pt3dadd( 454.113, 337.225, 24.08, 0.4068 ) }
    apic_4 { pt3dadd( 454.531, 336.16, 24.08, 0.4322 ) }
    apic_4 { pt3dadd( 454.932, 335.089, 24.08, 0.5084 ) }
    apic_4 { pt3dadd( 455.224, 333.984, 24.0806, 0.5592 ) }
    apic_4 { pt3dadd( 455.553, 332.888, 24.0828, 0.5848 ) }
    apic_4 { pt3dadd( 456.01, 331.84, 24.1035, 0.5084 ) }
    apic_4 { pt3dadd( 456.54, 330.829, 24.2483, 0.4576 ) }
    apic_4 { pt3dadd( 457.069, 329.827, 24.6336, 0.4576 ) }
    apic_4 { pt3dadd( 457.656, 328.861, 25.0659, 0.5338 ) }
    apic_4 { pt3dadd( 458.313, 327.938, 25.4556, 0.5848 ) }
    apic_4 { pt3dadd( 458.989, 327.036, 25.9392, 0.6102 ) }
    apic_4 { pt3dadd( 459.677, 326.137, 26.3222, 0.6102 ) }
    apic_4 { pt3dadd( 460.371, 325.243, 26.7294, 0.5848 ) }
    apic_4 { pt3dadd( 461.024, 324.323, 27.1984, 0.5338 ) }
    apic_4 { pt3dadd( 461.468, 323.273, 27.358, 0.483 ) }
    apic_4 { pt3dadd( 461.721, 322.168, 27.0301, 0.483 ) }
    apic_4 { pt3dadd( 461.927, 321.058, 26.5815, 0.5592 ) }
    apic_4 { pt3dadd( 462.187, 319.946, 26.6837, 0.6356 ) }
    apic_4 { pt3dadd( 462.585, 318.912, 27.3666, 0.6864 ) }
    apic_4 { pt3dadd( 463.035, 317.892, 28.0092, 0.661 ) }
    apic_4 { pt3dadd( 463.441, 316.824, 27.9706, 0.661 ) }
    apic_4 { pt3dadd( 463.7, 315.714, 28.194, 0.661 ) }
    apic_4 { pt3dadd( 463.782, 314.639, 29.1231, 0.7372 ) }
    apic_4 { pt3dadd( 463.842, 313.518, 29.6447, 0.8136 ) }
    apic_4 { pt3dadd( 464.094, 312.404, 29.7604, 0.8898 ) }
    apic_4 { pt3dadd( 464.542, 311.359, 30.0947, 0.9152 ) }
    apic_4 { pt3dadd( 465.069, 310.364, 30.5673, 0.9152 ) }
    apic_4 { pt3dadd( 465.715, 309.424, 30.7661, 0.966 ) }
    apic_4 { pt3dadd( 466.466, 308.561, 30.7104, 0.9914 ) }
    apic_4 { pt3dadd( 467.203, 307.695, 30.42, 1.0168 ) }
    apic_4 { pt3dadd( 467.894, 306.8, 29.9897, 0.9914 ) }
    apic_4 { pt3dadd( 468.61, 305.911, 29.8724, 1.0168 ) }
    apic_4 { pt3dadd( 469.238, 304.974, 30.2957, 1.0168 ) }
    apic_4 { pt3dadd( 469.603, 303.909, 30.7555, 0.9914 ) }
    apic_4 { pt3dadd( 469.654, 302.781, 31.1441, 0.9152 ) }
    apic_4 { pt3dadd( 469.461, 301.674, 31.663, 0.8898 ) }
    apic_4 { pt3dadd( 469.313, 300.548, 31.9911, 0.8644 ) }
    apic_4 { pt3dadd( 469.361, 299.418, 32.3327, 0.839 ) }
    apic_4 { pt3dadd( 469.719, 298.358, 32.695, 0.788 ) }
    apic_4 { pt3dadd( 470.481, 297.513, 32.48, 0.788 ) }
    apic_4 { pt3dadd( 471.356, 296.794, 32.1591, 0.839 ) }
    apic_4 { pt3dadd( 472.2, 296.023, 32.2675, 0.839 ) }
    apic_4 { pt3dadd( 472.97, 295.182, 32.3302, 0.788 ) }
    apic_4 { pt3dadd( 473.575, 294.221, 32.233, 0.6864 ) }
    apic_4 { pt3dadd( 473.961, 293.174, 32.7496, 0.661 ) }
    apic_4 { pt3dadd( 474.085, 292.08, 33.5017, 0.661 ) }
    apic_4 { pt3dadd( 474.199, 290.966, 33.9948, 0.6864 ) }
    apic_4 { pt3dadd( 474.561, 289.888, 34.1505, 0.6864 ) }
    apic_4 { pt3dadd( 475.147, 288.908, 34.1827, 0.6864 ) }
    apic_4 { pt3dadd( 475.836, 287.995, 34.263, 0.6864 ) }
    apic_4 { pt3dadd( 476.503, 287.079, 34.5394, 0.6864 ) }
    apic_4 { pt3dadd( 477.012, 286.074, 35.0193, 0.6864 ) }
    apic_4 { pt3dadd( 477.505, 285.048, 35.2526, 0.6864 ) }
    apic_4 { pt3dadd( 478.053, 284.044, 35.3237, 0.661 ) }
    apic_4 { pt3dadd( 478.625, 283.06, 35.5208, 0.5848 ) }
    apic_4 { pt3dadd( 479.118, 282.064, 36.1455, 0.5084 ) }
    apic_4 { pt3dadd( 479.472, 281.034, 36.9673, 0.5084 ) }
    apic_4 { pt3dadd( 479.701, 279.929, 37.3386, 0.6356 ) }
    apic_4 { pt3dadd( 480.034, 278.842, 37.1398, 0.7118 ) }
    apic_4 { pt3dadd( 480.45, 277.797, 36.6484, 0.6864 ) }
    apic_4 { pt3dadd( 480.968, 276.783, 36.5, 0.5338 ) }
    apic_4 { pt3dadd( 481.571, 275.817, 36.717, 0.5084 ) }
    apic_4 { pt3dadd( 482.199, 274.888, 37.2655, 0.5848 ) }
    apic_4 { pt3dadd( 482.857, 273.979, 37.7818, 0.7626 ) }
    apic_4 { pt3dadd( 483.401, 273.01, 38.4014, 0.839 ) }
    apic_4 { pt3dadd( 483.802, 271.964, 38.9617, 0.8644 ) }
    apic_4 { pt3dadd( 484.303, 270.976, 39.5587, 0.8136 ) }
    apic_4 { pt3dadd( 485.025, 270.095, 39.825, 0.8136 ) }
    apic_4 { pt3dadd( 485.738, 269.216, 40.1181, 0.788 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_4 { pt3dadd( 486.285, 268.241, 40.6526, 0.788 ) }
    apic_4 { pt3dadd( 486.756, 267.204, 40.8607, 0.7626 ) }
    apic_4 { pt3dadd( 487.364, 266.237, 40.9116, 0.7118 ) }
    apic_4 { pt3dadd( 488.054, 265.329, 41.0572, 0.6864 ) }
    apic_4 { pt3dadd( 488.821, 264.5, 41.4809, 0.6356 ) }
    apic_4 { pt3dadd( 489.6, 263.683, 41.9115, 0.6864 ) }
    apic_4 { pt3dadd( 490.337, 262.812, 41.9958, 0.6864 ) }
    apic_4 { pt3dadd( 490.955, 261.851, 42.0022, 0.7372 ) }
    apic_4 { pt3dadd( 491.481, 260.838, 42.0137, 0.7372 ) }
    apic_4 { pt3dadd( 491.864, 259.761, 42.082, 0.7372 ) }
    apic_4 { pt3dadd( 492.182, 258.674, 42.3987, 0.6356 ) }
    apic_4 { pt3dadd( 492.405, 257.59, 43.0895, 0.5338 ) }
    apic_4 { pt3dadd( 492.665, 256.516, 43.6268, 0.483 ) }
    apic_4 { pt3dadd( 493.325, 255.618, 43.8295, 0.5084 ) }
    apic_4 { pt3dadd( 494.199, 254.908, 43.573, 0.5084 ) }
    apic_4 { pt3dadd( 494.959, 254.078, 43.9765, 0.483 ) }
    apic_4 { pt3dadd( 495.569, 253.117, 44.2299, 0.5338 ) }
    apic_4 { pt3dadd( 496.13, 252.12, 44.24, 0.661 ) }
    apic_4 { pt3dadd( 496.629, 251.093, 44.24, 0.788 ) }
    apic_4 { pt3dadd( 497.181, 250.094, 44.2408, 0.8136 ) }
    apic_4 { pt3dadd( 497.666, 249.059, 44.2439, 0.7626 ) }
    apic_4 { pt3dadd( 498.258, 248.081, 44.2593, 0.7372 ) }
    apic_4 { pt3dadd( 498.839, 247.103, 44.3408, 0.7118 ) }
    apic_4 { pt3dadd( 499.275, 246.057, 44.6631, 0.6864 ) }
    apic_4 { pt3dadd( 499.751, 245.045, 45.2012, 0.5592 ) }
    apic_4 { pt3dadd( 500.186, 243.99, 45.3611, 0.4322 ) }
    apic_4 { pt3dadd( 500.666, 242.951, 45.3718, 0.305 ) }
    apic_4 { pt3dadd( 501.064, 241.882, 45.4443, 0.2796 ) }
    apic_4 { pt3dadd( 501.433, 240.82, 45.7716, 0.3304 ) }
    apic_4 { pt3dadd( 502.033, 239.881, 46.3943, 0.4322 ) }
    apic_4 { pt3dadd( 502.72, 238.99, 46.8552, 0.5084 ) }
    apic_4 { pt3dadd( 503.514, 238.189, 47.2749, 0.483 ) }
    apic_4 { pt3dadd( 504.372, 237.438, 47.2114, 0.4576 ) }
    apic_4 { pt3dadd( 505.212, 236.683, 46.9571, 0.4576 ) }
    apic_4 { pt3dadd( 505.881, 235.777, 47.2982, 0.5084 ) }
    apic_4 { pt3dadd( 506.26, 234.748, 47.948, 0.483 ) }
    apic_4 { pt3dadd( 506.294, 233.628, 48.4722, 0.3814 ) }
    apic_4 { pt3dadd( 506.366, 232.526, 48.743, 0.3304 ) }
    apic_4 { pt3dadd( 506.889, 231.511, 48.8684, 0.356 ) }
    apic_4 { pt3dadd( 507.48, 230.545, 49.2282, 0.483 ) }
    apic_4 { pt3dadd( 508.062, 229.576, 49.6283, 0.5084 ) }
    apic_4 { pt3dadd( 508.623, 228.58, 49.6605, 0.5084 ) }
    apic_4 { pt3dadd( 509.183, 227.585, 49.5485, 0.4322 ) }
    apic_4 { pt3dadd( 509.73, 226.582, 49.672, 0.4068 ) }
    apic_4 { pt3dadd( 510.23, 225.56, 49.9223, 0.3814 ) }
    apic_4 { pt3dadd( 510.574, 224.481, 50.2026, 0.4068 ) }
    apic_4 { pt3dadd( 510.887, 223.41, 50.673, 0.4576 ) }
    apic_4 { pt3dadd( 511.496, 222.456, 50.9477, 0.5338 ) }
    apic_4 { pt3dadd( 512.265, 221.611, 50.9793, 0.5848 ) }
    apic_4 { pt3dadd( 513.063, 220.793, 51.0577, 0.5848 ) }
    apic_4 { pt3dadd( 513.864, 219.986, 51.3369, 0.5084 ) }
    apic_4 { pt3dadd( 514.63, 219.158, 51.7818, 0.3814 ) }
    apic_4 { pt3dadd( 515.349, 218.275, 52.015, 0.356 ) }
    apic_4 { pt3dadd( 516.061, 217.383, 51.9126, 0.4068 ) }
    apic_4 { pt3dadd( 516.698, 216.448, 51.5704, 0.6102 ) }
    apic_4 { pt3dadd( 517.209, 215.438, 51.2333, 0.7372 ) }
    apic_4 { pt3dadd( 517.701, 214.41, 51.3204, 0.9152 ) }
    apic_4 { pt3dadd( 518.203, 213.403, 51.8064, 0.9406 ) }
    apic_4 { pt3dadd( 518.732, 212.421, 52.4367, 0.9914 ) }
    apic_4 { pt3dadd( 519.334, 211.491, 53.1143, 0.966 ) }
    apic_4 { pt3dadd( 520.029, 210.621, 53.7541, 0.966 ) }
    apic_4 { pt3dadd( 520.732, 209.739, 54.1464, 0.8898 ) }
    apic_4 { pt3dadd( 521.318, 208.765, 54.122, 0.7118 ) }
    apic_4 { pt3dadd( 521.777, 207.726, 53.7816, 0.6102 ) }
    apic_4 { pt3dadd( 522.286, 206.719, 53.5161, 0.5592 ) }
    apic_4 { pt3dadd( 522.967, 205.809, 53.7121, 0.6864 ) }
    apic_4 { pt3dadd( 523.724, 204.967, 54.0977, 0.7372 ) }
    apic_4 { pt3dadd( 524.479, 204.111, 54.2895, 0.839 ) }
    apic_4 { pt3dadd( 525.218, 203.238, 54.322, 0.8644 ) }
    apic_4 { pt3dadd( 525.993, 202.399, 54.3284, 0.9152 ) }
    apic_4 { pt3dadd( 526.792, 201.581, 54.3528, 0.8644 ) }
    apic_4 { pt3dadd( 527.577, 200.75, 54.467, 0.7626 ) }
    apic_4 { pt3dadd( 528.315, 199.888, 54.7912, 0.6356 ) }
    apic_4 { pt3dadd( 529.024, 199.015, 55.2992, 0.5338 ) }
    apic_4 { pt3dadd( 529.766, 198.165, 55.7519, 0.483 ) }
    apic_4 { pt3dadd( 530.508, 197.309, 55.7522, 0.5084 ) }
    apic_4 { pt3dadd( 531.128, 196.374, 55.2608, 0.6102 ) }
    apic_4 { pt3dadd( 531.628, 195.364, 55.1004, 0.7372 ) }
    apic_4 { pt3dadd( 532.149, 194.375, 55.6396, 0.788 ) }
    apic_4 { pt3dadd( 532.792, 193.471, 56.2724, 0.7372 ) }
    apic_4 { pt3dadd( 533.598, 192.685, 56.6656, 0.661 ) }
    apic_4 { pt3dadd( 534.516, 192.025, 57.0497, 0.6102 ) }
    apic_4 { pt3dadd( 535.397, 191.325, 57.4538, 0.7118 ) }
    apic_4 { pt3dadd( 536.102, 190.439, 57.6503, 0.839 ) }
    apic_4 { pt3dadd( 536.625, 189.425, 57.6764, 0.966 ) }
    apic_4 { pt3dadd( 537.055, 188.365, 57.664, 0.8644 ) }
    apic_4 { pt3dadd( 537.443, 187.29, 57.575, 0.6864 ) }
    apic_4 { pt3dadd( 537.737, 186.195, 57.265, 0.483 ) }
    apic_4 { pt3dadd( 538.083, 185.127, 56.8378, 0.4576 ) }
    apic_4 { pt3dadd( 538.613, 184.121, 56.6625, 0.483 ) }
    apic_4 { pt3dadd( 539.193, 183.152, 56.9904, 0.5338 ) }
    apic_4 { pt3dadd( 539.697, 182.224, 57.9933, 0.483 ) }
    apic_4 { pt3dadd( 540.073, 181.239, 59.0075, 0.483 ) }
    apic_4 { pt3dadd( 540.573, 180.245, 59.5022, 0.4576 ) }
    apic_4 { pt3dadd( 541.389, 179.49, 59.9348, 0.5084 ) }
    apic_4 { pt3dadd( 542.234, 178.734, 60.121, 0.483 ) }
    apic_4 { pt3dadd( 542.743, 177.739, 60.305, 0.5338 ) }
    apic_4 { pt3dadd( 543.167, 176.692, 60.7309, 0.6356 ) }
    apic_4 { pt3dadd( 543.751, 175.722, 61.0112, 0.7626 ) }
    apic_4 { pt3dadd( 544.438, 174.809, 61.1341, 0.8644 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_4 { pt3dadd( 545.134, 173.909, 61.4228, 0.8136 ) }
    apic_4 { pt3dadd( 545.761, 172.971, 61.8517, 0.7626 ) }
    apic_4 { pt3dadd( 546.419, 172.04, 62.0718, 0.661 ) }
    apic_4 { pt3dadd( 547.188, 171.2, 61.9791, 0.6864 ) }
    apic_4 { pt3dadd( 548.026, 170.442, 61.5717, 0.7118 ) }
    apic_4 { pt3dadd( 548.786, 169.604, 61.1999, 0.788 ) }
    apic_4 { pt3dadd( 549.394, 168.642, 61.2209, 0.788 ) }
    apic_4 { pt3dadd( 549.974, 167.675, 61.6641, 0.7626 ) }
    apic_4 { pt3dadd( 550.617, 166.746, 62.0886, 0.6356 ) }
    apic_4 { pt3dadd( 551.331, 165.858, 62.3258, 0.483 ) }
    apic_4 { pt3dadd( 552.162, 165.096, 62.7326, 0.3814 ) }
    apic_4 { pt3dadd( 553.047, 164.388, 63.1151, 0.356 ) }
    apic_4 { pt3dadd( 553.711, 163.471, 63.1481, 0.4322 ) }
    apic_4 { pt3dadd( 554.208, 162.45, 62.8586, 0.4322 ) }
    apic_4 { pt3dadd( 555.069, 161.736, 63.0011, 0.4576 ) }
    apic_4 { pt3dadd( 556.18, 161.519, 63.2559, 0.4576 ) }
    apic_4 { pt3dadd( 557.156, 160.94, 63.3847, 0.5592 ) }
    apic_4 { pt3dadd( 557.944, 160.127, 63.7448, 0.6102 ) }
    apic_4 { pt3dadd( 558.708, 159.308, 64.3082, 0.5592 ) }
    apic_4 { pt3dadd( 559.51, 158.518, 64.832, 0.4322 ) }
    apic_4 { pt3dadd( 560.396, 157.829, 65.3447, 0.3814 ) }
    apic_4 { pt3dadd( 560.886, 156.805, 65.2392, 0.4576 ) }
    apic_4 { pt3dadd( 561.92, 156.323, 65.4396, 0.5338 ) }
    apic_4 { pt3dadd( 562.839, 155.665, 65.0538, 0.5338 ) }
    apic_4 { pt3dadd( 563.891, 155.22, 65.2123, 0.4322 ) }
    apic_4 { pt3dadd( 564.816, 154.604, 65.5908, 0.4068 ) }
    apic_4 { pt3dadd( 565.384, 153.671, 66.3491, 0.3814 ) }
    apic_4 { pt3dadd( 566.23, 152.921, 66.5487, 0.4322 ) }
    apic_4 { pt3dadd( 567.264, 152.444, 66.6935, 0.3814 ) }
    apic_4 { pt3dadd( 568.349, 152.15, 67.1779, 0.3814 ) }
    apic_4 { pt3dadd( 569.427, 151.895, 67.664, 0.3304 ) }
    apic_4 { pt3dadd( 570.274, 151.209, 68.3402, 0.3304 ) }
    apic_4 { pt3dadd( 570.857, 150.28, 69.1054, 0.2796 ) }
    apic_4 { pt3dadd( 571.572, 149.426, 69.7385, 0.2542 ) }
    apic_4 { pt3dadd( 572.234, 148.528, 70.3492, 0.2288 ) }
    apic_4 { pt3dadd( 572.916, 147.641, 70.7935, 0.2288 ) }
    apic_4 { pt3dadd( 573.742, 146.853, 70.8347, 0.2288 ) }
    apic_4 { pt3dadd( 574.352, 145.91, 70.784, 0.2288 ) }
    apic_4 { pt3dadd( 574.693, 144.82, 70.6577, 0.2288 ) }
    apic_4 { pt3dadd( 575.22, 143.831, 70.56, 0.2288 ) }
    apic_4 { pt3dadd( 576.052, 143.056, 70.7482, 0.2288 ) }
    apic_4 { pt3dadd( 576.946, 142.542, 71.6853, 0.2288 ) }
    apic_4 { pt3dadd( 577.936, 142.179, 72.4679, 0.2542 ) }
    apic_4 { pt3dadd( 578.818, 141.499, 72.6986, 0.305 ) }
    apic_4 { pt3dadd( 579.508, 140.595, 72.9848, 0.356 ) }
    apic_4 { pt3dadd( 580.35, 139.964, 73.619, 0.356 ) }
    apic_4 { pt3dadd( 581.302, 139.419, 74.2899, 0.305 ) }
    apic_4 { pt3dadd( 582.164, 138.681, 74.5898, 0.2796 ) }
    apic_4 { pt3dadd( 583.083, 138.033, 74.9073, 0.2796 ) }
    apic_4 { pt3dadd( 584.068, 137.462, 75.1097, 0.305 ) }
    apic_4 { pt3dadd( 585.112, 137.018, 75.2102, 0.305 ) }
    apic_4 { pt3dadd( 586.182, 136.63, 75.4656, 0.305 ) }
    apic_4 { pt3dadd( 587.177, 136.151, 76.1211, 0.305 ) }
    apic_4 { pt3dadd( 588.185, 135.734, 76.9266, 0.2796 ) }
    apic_4 { pt3dadd( 589.249, 135.349, 77.2178, 0.2542 ) }
    apic_4 { pt3dadd( 590.092, 134.663, 77.9108, 0.2288 ) }
    apic_4 { pt3dadd( 590.764, 133.749, 78.1071, 0.2288 ) }
    apic_4 { pt3dadd( 591.694, 133.104, 78.12, 0.2288 ) }
    apic_4 { pt3dadd( 592.203, 132.102, 78.12, 0.2288 ) }
    apic_4 { pt3dadd( 592.255, 130.963, 78.12, 0.2288 ) }
    apic_4 { pt3dadd( 593.129, 130.252, 78.12, 0.2796 ) }
    apic_4 { pt3dadd( 594.079, 129.615, 78.12, 0.3814 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 62/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 441.356, 368.871, 19.6291, 0.6102 ) }
    apic_3 { pt3dadd( 441.824, 368.961, 19.7282, 0.483 ) }
    apic_3 { pt3dadd( 442.944, 369.066, 20.1312, 0.483 ) }
    apic_3 { pt3dadd( 444.054, 368.913, 20.5503, 0.4068 ) }
    apic_3 { pt3dadd( 445.171, 368.692, 20.706, 0.356 ) }
    apic_3 { pt3dadd( 446.302, 368.726, 20.7203, 0.3814 ) }
    apic_3 { pt3dadd( 447.422, 368.953, 20.722, 0.4576 ) }
    apic_3 { pt3dadd( 448.554, 369.07, 20.734, 0.5338 ) }
    apic_3 { pt3dadd( 449.687, 368.958, 20.8177, 0.5848 ) }
    apic_3 { pt3dadd( 450.809, 368.782, 21.1067, 0.5848 ) }
    apic_3 { pt3dadd( 451.939, 368.641, 21.336, 0.5338 ) }
    apic_3 { pt3dadd( 453.034, 368.447, 20.8888, 0.483 ) }
    apic_3 { pt3dadd( 454.107, 368.299, 20.011, 0.4576 ) }
    apic_3 { pt3dadd( 455.22, 368.281, 19.8976, 0.483 ) }
    apic_3 { pt3dadd( 456.283, 368.346, 20.8253, 0.5338 ) }
    apic_3 { pt3dadd( 457.367, 368.398, 21.6591, 0.6356 ) }
    apic_3 { pt3dadd( 458.489, 368.326, 22.1435, 0.7118 ) }
    apic_3 { pt3dadd( 459.614, 368.258, 22.6036, 0.7626 ) }
    apic_3 { pt3dadd( 460.752, 368.214, 22.7035, 0.7118 ) }
    apic_3 { pt3dadd( 461.881, 368.089, 22.4378, 0.6102 ) }
    apic_3 { pt3dadd( 463.009, 367.918, 22.3107, 0.5084 ) }
    apic_3 { pt3dadd( 464.143, 367.925, 22.4608, 0.4322 ) }
    apic_3 { pt3dadd( 465.272, 368.075, 22.7388, 0.4322 ) }
    apic_3 { pt3dadd( 466.407, 368.165, 22.8004, 0.3814 ) }
    apic_3 { pt3dadd( 467.538, 368.108, 22.4792, 0.3814 ) }
    apic_3 { pt3dadd( 468.594, 367.742, 22.0679, 0.356 ) }
    apic_3 { pt3dadd( 469.51, 367.078, 21.9904, 0.3814 ) }
    apic_3 { pt3dadd( 470.359, 366.361, 22.5686, 0.3814 ) }
    apic_3 { pt3dadd( 471.191, 365.769, 23.7899, 0.3814 ) }
    apic_3 { pt3dadd( 472.143, 365.314, 24.8046, 0.3814 ) }
    apic_3 { pt3dadd( 473.143, 364.812, 25.3397, 0.356 ) }
    apic_3 { pt3dadd( 474.064, 364.149, 25.3364, 0.305 ) }
    apic_3 { pt3dadd( 474.817, 363.296, 25.2274, 0.2796 ) }
    apic_3 { pt3dadd( 475.5, 362.379, 25.1012, 0.3304 ) }
    apic_3 { pt3dadd( 476.043, 361.384, 24.8108, 0.4068 ) }
    apic_3 { pt3dadd( 476.569, 360.386, 25.1084, 0.483 ) }
    apic_3 { pt3dadd( 477.264, 359.502, 25.5441, 0.483 ) }
    apic_3 { pt3dadd( 477.782, 358.525, 26.1691, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_3 { pt3dadd( 478.283, 357.519, 26.6826, 0.5084 ) }
    apic_3 { pt3dadd( 478.986, 356.77, 27.816, 0.483 ) }
    apic_3 { pt3dadd( 479.901, 356.125, 28.0294, 0.356 ) }
    apic_3 { pt3dadd( 480.619, 355.258, 28.3545, 0.305 ) }
    apic_3 { pt3dadd( 481.429, 354.457, 28.5085, 0.2796 ) }
    apic_3 { pt3dadd( 482.465, 354.021, 28.1747, 0.356 ) }
    apic_3 { pt3dadd( 483.57, 354.229, 27.7522, 0.3814 ) }
    apic_3 { pt3dadd( 484.536, 354.809, 28.1806, 0.4322 ) }
    apic_3 { pt3dadd( 485.4, 355.555, 28.0, 0.4068 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 9/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 365.051, 390.333, 13.6578, 0.5848 ) }
    dend_25 { pt3dadd( 365.273, 389.513, 12.3609, 0.4576 ) }
    dend_25 { pt3dadd( 365.31, 388.397, 12.7406, 0.4322 ) }
    dend_25 { pt3dadd( 365.315, 387.316, 13.4971, 0.4322 ) }
    dend_25 { pt3dadd( 365.195, 386.204, 13.685, 0.4576 ) }
    dend_25 { pt3dadd( 364.897, 385.194, 13.5094, 0.483 ) }
    dend_25 { pt3dadd( 364.645, 384.215, 12.4432, 0.5338 ) }
    dend_25 { pt3dadd( 363.935, 383.458, 11.8628, 0.5848 ) }
    dend_25 { pt3dadd( 363.021, 383.071, 12.2265, 0.5592 ) }
    dend_25 { pt3dadd( 362.126, 382.717, 13.7298, 0.483 ) }
    dend_25 { pt3dadd( 361.075, 382.497, 14.5516, 0.4068 ) }
    dend_25 { pt3dadd( 359.987, 382.268, 14.2708, 0.4322 ) }
    dend_25 { pt3dadd( 359.21, 382.254, 15.6988, 0.483 ) }
    dend_25 { pt3dadd( 358.115, 382.344, 16.3769, 0.5592 ) }
    dend_25 { pt3dadd( 356.982, 382.242, 16.13, 0.5338 ) }
    dend_25 { pt3dadd( 355.881, 382.065, 15.5753, 0.5084 ) }
    dend_25 { pt3dadd( 354.745, 382.04, 15.8438, 0.4576 ) }
    dend_25 { pt3dadd( 353.658, 381.738, 15.9004, 0.5084 ) }
    dend_25 { pt3dadd( 352.783, 381.017, 15.9564, 0.5338 ) }
    dend_25 { pt3dadd( 351.906, 380.435, 17.0274, 0.5592 ) }
    dend_25 { pt3dadd( 351.012, 380.024, 18.3036, 0.483 ) }
    dend_25 { pt3dadd( 349.897, 379.983, 18.2804, 0.4576 ) }
    dend_25 { pt3dadd( 349.013, 380.218, 18.3271, 0.3814 ) }
    dend_25 { pt3dadd( 348.255, 380.426, 20.2182, 0.4068 ) }
    dend_25 { pt3dadd( 347.133, 380.471, 19.9973, 0.3814 ) }
    dend_25 { pt3dadd( 346.282, 379.727, 20.4064, 0.4068 ) }
    dend_25 { pt3dadd( 345.5, 378.961, 21.1781, 0.3304 ) }
    dend_25 { pt3dadd( 344.694, 378.165, 20.8482, 0.3304 ) }
    dend_25 { pt3dadd( 343.829, 377.501, 20.3529, 0.4068 ) }
    dend_25 { pt3dadd( 343.36, 376.611, 19.1307, 0.5338 ) }
    dend_25 { pt3dadd( 342.677, 375.749, 19.1097, 0.6102 ) }
    dend_25 { pt3dadd( 341.851, 375.078, 20.0525, 0.5338 ) }
    dend_25 { pt3dadd( 340.896, 374.65, 20.244, 0.4576 ) }
    dend_25 { pt3dadd( 339.833, 374.405, 20.5884, 0.3304 ) }
    dend_25 { pt3dadd( 338.718, 374.278, 20.8376, 0.2796 ) }
    dend_25 { pt3dadd( 337.629, 374.461, 20.3302, 0.2542 ) }
    dend_25 { pt3dadd( 336.625, 374.626, 19.1103, 0.2796 ) }
    dend_25 { pt3dadd( 335.759, 375.004, 17.5806, 0.305 ) }
    dend_25 { pt3dadd( 335.278, 375.326, 15.2032, 0.2796 ) }
    dend_25 { pt3dadd( 334.794, 375.94, 13.1737, 0.2796 ) }
    dend_25 { pt3dadd( 333.935, 376.605, 12.32, 0.305 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 50/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 365.051, 390.333, 13.6578, 0.5848 ) }
    dend_24 { pt3dadd( 364.73, 389.859, 12.4785, 0.356 ) }
    dend_24 { pt3dadd( 363.709, 389.549, 12.574, 0.3814 ) }
    dend_24 { pt3dadd( 362.672, 389.087, 12.4261, 0.3814 ) }
    dend_24 { pt3dadd( 361.815, 388.37, 12.899, 0.4322 ) }
    dend_24 { pt3dadd( 361.035, 387.603, 13.5598, 0.483 ) }
    dend_24 { pt3dadd( 360.268, 387.086, 11.9347, 0.5338 ) }
    dend_24 { pt3dadd( 359.26, 386.749, 11.1958, 0.483 ) }
    dend_24 { pt3dadd( 358.162, 386.523, 11.6124, 0.4322 ) }
    dend_24 { pt3dadd( 357.149, 386.232, 12.1327, 0.356 ) }
    dend_24 { pt3dadd( 356.145, 386.098, 12.7039, 0.356 ) }
    dend_24 { pt3dadd( 355.049, 385.919, 12.0369, 0.356 ) }
    dend_24 { pt3dadd( 354.165, 385.28, 11.6301, 0.4322 ) }
    dend_24 { pt3dadd( 353.888, 384.227, 12.1526, 0.4576 ) }
    dend_24 { pt3dadd( 353.515, 383.277, 13.3756, 0.5084 ) }
    dend_24 { pt3dadd( 352.624, 382.613, 13.2958, 0.5084 ) }
    dend_24 { pt3dadd( 351.788, 382.297, 11.6094, 0.5848 ) }
    dend_24 { pt3dadd( 350.711, 381.982, 12.0772, 0.6102 ) }
    dend_24 { pt3dadd( 349.577, 381.87, 12.3161, 0.6102 ) }
    dend_24 { pt3dadd( 348.566, 381.419, 12.8344, 0.5338 ) }
    dend_24 { pt3dadd( 348.304, 380.331, 12.5871, 0.4576 ) }
    dend_24 { pt3dadd( 347.599, 379.634, 11.2823, 0.4068 ) }
    dend_24 { pt3dadd( 346.634, 379.177, 10.5073, 0.3814 ) }
    dend_24 { pt3dadd( 345.82, 378.403, 10.8609, 0.4322 ) }
    dend_24 { pt3dadd( 344.884, 377.813, 11.5433, 0.4576 ) }
    dend_24 { pt3dadd( 343.869, 377.366, 12.0226, 0.483 ) }
    dend_24 { pt3dadd( 342.767, 377.324, 12.6683, 0.4068 ) }
    dend_24 { pt3dadd( 341.747, 377.11, 12.794, 0.3814 ) }
    dend_24 { pt3dadd( 340.903, 376.47, 11.9188, 0.3304 ) }
    dend_24 { pt3dadd( 340.078, 375.915, 10.5459, 0.356 ) }
    dend_24 { pt3dadd( 339.12, 375.397, 10.9444, 0.3304 ) }
    dend_24 { pt3dadd( 338.114, 375.126, 10.0523, 0.3304 ) }
    dend_24 { pt3dadd( 337.435, 374.471, 9.6838, 0.305 ) }
    dend_24 { pt3dadd( 337.198, 373.731, 9.2943, 0.3304 ) }
    dend_24 { pt3dadd( 336.303, 373.134, 10.0537, 0.3814 ) }
    dend_24 { pt3dadd( 335.397, 372.437, 10.1556, 0.4322 ) }
    dend_24 { pt3dadd( 334.543, 371.687, 10.3236, 0.4576 ) }
    dend_24 { pt3dadd( 333.747, 370.966, 9.9005, 0.4322 ) }
    dend_24 { pt3dadd( 332.902, 370.416, 10.1909, 0.3814 ) }
    dend_24 { pt3dadd( 332.041, 369.899, 9.548, 0.305 ) }
    dend_24 { pt3dadd( 331.448, 369.094, 8.2648, 0.2796 ) }
    dend_24 { pt3dadd( 330.858, 368.132, 8.6489, 0.3304 ) }
    dend_24 { pt3dadd( 330.045, 367.338, 8.96, 0.4322 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 93/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 337.726, 396.136, 16.2431, 0.6864 ) }
    dend_22 { pt3dadd( 336.525, 395.454, 15.8169, 0.4322 ) }
    dend_22 { pt3dadd( 335.469, 395.625, 15.9572, 0.4068 ) }
    dend_22 { pt3dadd( 334.43, 395.973, 16.354, 0.4576 ) }
    dend_22 { pt3dadd( 333.557, 396.661, 16.0087, 0.4576 ) }
    dend_22 { pt3dadd( 332.721, 397.424, 15.6758, 0.4322 ) }
    dend_22 { pt3dadd( 331.822, 398.066, 15.0637, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_22 { pt3dadd( 331.082, 398.872, 14.4516, 0.356 ) }
    dend_22 { pt3dadd( 330.139, 399.486, 14.7476, 0.3304 ) }
    dend_22 { pt3dadd( 329.281, 400.144, 15.3667, 0.3814 ) }
    dend_22 { pt3dadd( 328.281, 400.66, 15.0948, 0.4068 ) }
    dend_22 { pt3dadd( 327.178, 400.948, 15.2197, 0.5084 ) }
    dend_22 { pt3dadd( 326.113, 401.263, 14.9369, 0.5338 ) }
    dend_22 { pt3dadd( 325.167, 401.735, 14.8296, 0.5338 ) }
    dend_22 { pt3dadd( 324.238, 402.262, 15.2429, 0.4322 ) }
    dend_22 { pt3dadd( 323.306, 402.918, 15.1519, 0.356 ) }
    dend_22 { pt3dadd( 322.456, 403.659, 15.398, 0.3304 ) }
    dend_22 { pt3dadd( 321.468, 404.108, 15.5344, 0.4322 ) }
    dend_22 { pt3dadd( 320.407, 404.435, 15.0167, 0.5338 ) }
    dend_22 { pt3dadd( 319.369, 404.767, 15.3252, 0.6356 ) }
    dend_22 { pt3dadd( 318.341, 405.206, 15.8337, 0.6102 ) }
    dend_22 { pt3dadd( 317.455, 405.873, 15.416, 0.6102 ) }
    dend_22 { pt3dadd( 316.56, 406.572, 15.2048, 0.5848 ) }
    dend_22 { pt3dadd( 315.502, 406.928, 15.5529, 0.6102 ) }
    dend_22 { pt3dadd( 314.434, 407.223, 16.2375, 0.5848 ) }
    dend_22 { pt3dadd( 313.45, 407.766, 16.6023, 0.5592 ) }
    dend_22 { pt3dadd( 312.576, 408.497, 16.525, 0.5338 ) }
    dend_22 { pt3dadd( 311.533, 408.932, 16.5108, 0.5084 ) }
    dend_22 { pt3dadd( 310.606, 409.496, 15.7114, 0.483 ) }
    dend_22 { pt3dadd( 309.796, 409.895, 14.0, 0.4576 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 23/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 337.726, 396.136, 16.2431, 0.6864 ) }
    dend_21 { pt3dadd( 336.878, 394.798, 16.329, 0.5338 ) }
    dend_21 { pt3dadd( 336.438, 393.751, 16.6387, 0.5848 ) }
    dend_21 { pt3dadd( 335.925, 392.747, 17.0901, 0.6102 ) }
    dend_21 { pt3dadd( 335.343, 391.768, 17.3471, 0.5338 ) }
    dend_21 { pt3dadd( 334.745, 390.795, 17.4815, 0.483 ) }
    dend_21 { pt3dadd( 334.327, 389.744, 17.8139, 0.4576 ) }
    dend_21 { pt3dadd( 334.288, 388.625, 18.2487, 0.5084 ) }
    dend_21 { pt3dadd( 334.328, 387.485, 18.438, 0.5084 ) }
    dend_21 { pt3dadd( 334.044, 386.385, 18.4033, 0.4576 ) }
    dend_21 { pt3dadd( 333.456, 385.416, 18.1544, 0.4068 ) }
    dend_21 { pt3dadd( 332.785, 384.506, 17.733, 0.3814 ) }
    dend_21 { pt3dadd( 332.084, 383.607, 17.5101, 0.356 ) }
    dend_21 { pt3dadd( 331.422, 382.681, 17.7206, 0.3814 ) }
    dend_21 { pt3dadd( 330.795, 381.729, 17.9698, 0.4576 ) }
    dend_21 { pt3dadd( 330.052, 380.87, 17.7192, 0.6102 ) }
    dend_21 { pt3dadd( 329.143, 380.189, 17.4381, 0.6864 ) }
    dend_21 { pt3dadd( 328.144, 379.635, 17.3648, 0.6356 ) }
    dend_21 { pt3dadd( 327.219, 378.963, 17.36, 0.483 ) }
    dend_21 { pt3dadd( 326.535, 378.052, 17.36, 0.3304 ) }
    dend_21 { pt3dadd( 326.017, 377.033, 17.3589, 0.2542 ) }
    dend_21 { pt3dadd( 325.46, 376.034, 17.3541, 0.2796 ) }
    dend_21 { pt3dadd( 324.664, 375.217, 17.3278, 0.356 ) }
    dend_21 { pt3dadd( 323.691, 374.623, 17.1699, 0.4576 ) }
    dend_21 { pt3dadd( 322.687, 374.103, 16.7479, 0.483 ) }
    dend_21 { pt3dadd( 321.705, 373.537, 16.3685, 0.4576 ) }
    dend_21 { pt3dadd( 320.781, 372.865, 16.2784, 0.4068 ) }
    dend_21 { pt3dadd( 319.925, 372.108, 16.3951, 0.4068 ) }
    dend_21 { pt3dadd( 319.037, 371.395, 16.6676, 0.4322 ) }
    dend_21 { pt3dadd( 318.08, 370.794, 17.0937, 0.483 ) }
    dend_21 { pt3dadd( 317.135, 370.218, 17.7873, 0.483 ) }
    dend_21 { pt3dadd( 316.362, 369.387, 18.086, 0.5338 ) }
    dend_21 { pt3dadd( 315.661, 368.488, 17.8794, 0.5592 ) }
    dend_21 { pt3dadd( 314.904, 367.642, 17.533, 0.661 ) }
    dend_21 { pt3dadd( 314.061, 366.873, 17.3799, 0.661 ) }
    dend_21 { pt3dadd( 313.188, 366.133, 17.3597, 0.661 ) }
    dend_21 { pt3dadd( 312.344, 365.36, 17.3541, 0.5338 ) }
    dend_21 { pt3dadd( 311.637, 364.462, 17.323, 0.5084 ) }
    dend_21 { pt3dadd( 310.84, 363.646, 17.1573, 0.4322 ) }
    dend_21 { pt3dadd( 309.84, 363.229, 16.2884, 0.4576 ) }
    dend_21 { pt3dadd( 308.795, 362.852, 15.6125, 0.3814 ) }
    dend_21 { pt3dadd( 307.901, 362.179, 16.1476, 0.3814 ) }
    dend_21 { pt3dadd( 307.012, 361.533, 16.9168, 0.356 ) }
    dend_21 { pt3dadd( 306.195, 360.909, 18.1496, 0.3814 ) }
    dend_21 { pt3dadd( 305.456, 360.047, 18.4584, 0.3814 ) }
    dend_21 { pt3dadd( 304.521, 359.387, 18.4741, 0.3814 ) }
    dend_21 { pt3dadd( 303.418, 359.084, 18.443, 0.4068 ) }
    dend_21 { pt3dadd( 302.293, 358.901, 18.244, 0.4576 ) }
    dend_21 { pt3dadd( 301.248, 358.599, 17.3774, 0.5084 ) }
    dend_21 { pt3dadd( 300.632, 357.707, 16.4881, 0.5084 ) }
    dend_21 { pt3dadd( 300.187, 356.814, 15.12, 0.4576 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 432.7, 428.987, 16.8622, 0.6356 ) }
    dend_13 { pt3dadd( 432.724, 429.112, 17.598, 0.3304 ) }
    dend_13 { pt3dadd( 433.429, 429.49, 18.6074, 0.4322 ) }
    dend_13 { pt3dadd( 434.445, 429.79, 17.736, 0.5338 ) }
    dend_13 { pt3dadd( 435.486, 430.17, 17.8595, 0.6102 ) }
    dend_13 { pt3dadd( 436.343, 430.39, 19.5054, 0.661 ) }
    dend_13 { pt3dadd( 437.358, 430.724, 20.4061, 0.6356 ) }
    dend_13 { pt3dadd( 438.406, 431.177, 20.5887, 0.5338 ) }
    dend_13 { pt3dadd( 439.275, 431.883, 21.1495, 0.4068 ) }
    dend_13 { pt3dadd( 440.11, 432.661, 20.9689, 0.3304 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 432.7, 428.987, 16.8622, 0.6356 ) }
    dend_10 { pt3dadd( 432.83, 429.699, 16.4027, 0.5084 ) }
    dend_10 { pt3dadd( 433.106, 430.641, 15.0086, 0.661 ) }
    dend_10 { pt3dadd( 433.439, 431.68, 15.3588, 0.7626 ) }
    dend_10 { pt3dadd( 433.463, 432.661, 16.8, 0.839 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 89/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 421.883, 435.839, 14.28, 0.788 ) }
    dend_7 { pt3dadd( 421.55, 436.459, 14.488, 0.9406 ) }
    dend_7 { pt3dadd( 421.821, 437.522, 13.7939, 0.8136 ) }
    dend_7 { pt3dadd( 422.066, 438.594, 13.0189, 0.7372 ) }
    dend_7 { pt3dadd( 422.294, 439.706, 13.3171, 0.7118 ) }
    dend_7 { pt3dadd( 422.271, 440.835, 13.734, 0.7372 ) }
    dend_7 { pt3dadd( 422.183, 441.974, 13.6581, 0.788 ) }
    dend_7 { pt3dadd( 422.274, 443.09, 13.221, 0.7626 ) }
    dend_7 { pt3dadd( 422.824, 443.996, 12.1755, 0.7372 ) }
    dend_7 { pt3dadd( 423.465, 444.831, 11.0984, 0.6356 ) }
    dend_7 { pt3dadd( 424.219, 445.448, 9.6359, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_7 { pt3dadd( 424.971, 446.123, 8.7802, 0.5084 ) }
    dend_7 { pt3dadd( 425.576, 446.713, 10.1234, 0.483 ) }
    dend_7 { pt3dadd( 426.313, 447.462, 9.7479, 0.483 ) }
    dend_7 { pt3dadd( 427.092, 448.155, 10.7674, 0.5338 ) }
    dend_7 { pt3dadd( 427.745, 449.065, 10.9533, 0.5592 ) }
    dend_7 { pt3dadd( 428.525, 449.838, 10.7607, 0.5592 ) }
    dend_7 { pt3dadd( 429.488, 450.392, 11.4128, 0.483 ) }
    dend_7 { pt3dadd( 430.083, 451.233, 12.0772, 0.4576 ) }
    dend_7 { pt3dadd( 430.55, 452.225, 11.9157, 0.3814 ) }
    dend_7 { pt3dadd( 431.364, 452.98, 11.7505, 0.3814 ) }
    dend_7 { pt3dadd( 432.354, 453.549, 11.7524, 0.356 ) }
    dend_7 { pt3dadd( 432.978, 454.456, 11.5486, 0.4068 ) }
    dend_7 { pt3dadd( 433.367, 455.532, 11.5206, 0.4068 ) }
    dend_7 { pt3dadd( 433.923, 456.3, 10.0691, 0.4068 ) }
    dend_7 { pt3dadd( 434.705, 456.986, 9.4102, 0.3814 ) }
    dend_7 { pt3dadd( 434.999, 457.845, 11.1104, 0.3814 ) }
    dend_7 { pt3dadd( 435.406, 458.723, 12.5023, 0.3814 ) }
    dend_7 { pt3dadd( 436.034, 459.627, 12.6302, 0.3814 ) }
    dend_7 { pt3dadd( 436.543, 460.508, 11.4363, 0.3814 ) }
    dend_7 { pt3dadd( 437.27, 461.299, 11.0706, 0.4068 ) }
    dend_7 { pt3dadd( 437.799, 462.263, 11.3011, 0.4068 ) }
    dend_7 { pt3dadd( 438.306, 463.255, 10.8296, 0.4322 ) }
    dend_7 { pt3dadd( 438.918, 464.207, 10.6515, 0.4322 ) }
    dend_7 { pt3dadd( 439.425, 465.227, 10.5636, 0.483 ) }
    dend_7 { pt3dadd( 439.785, 466.29, 10.7484, 0.483 ) }
    dend_7 { pt3dadd( 440.211, 467.329, 11.062, 0.4576 ) }
    dend_7 { pt3dadd( 440.771, 468.289, 10.5963, 0.4068 ) }
    dend_7 { pt3dadd( 441.585, 469.007, 10.0509, 0.4068 ) }
    dend_7 { pt3dadd( 442.523, 469.653, 9.9355, 0.4322 ) }
    dend_7 { pt3dadd( 443.337, 470.405, 9.3864, 0.4576 ) }
    dend_7 { pt3dadd( 444.189, 471.143, 9.3254, 0.4576 ) }
    dend_7 { pt3dadd( 445.113, 471.814, 9.3856, 0.4576 ) }
    dend_7 { pt3dadd( 446.029, 472.487, 9.1188, 0.4322 ) }
    dend_7 { pt3dadd( 446.734, 473.359, 9.3332, 0.4068 ) }
    dend_7 { pt3dadd( 447.442, 474.245, 9.205, 0.356 ) }
    dend_7 { pt3dadd( 448.212, 475.09, 9.2305, 0.3304 ) }
    dend_7 { pt3dadd( 448.78, 476.077, 9.1448, 0.356 ) }
    dend_7 { pt3dadd( 449.364, 477.048, 9.52, 0.483 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 38/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 421.883, 435.839, 14.28, 0.788 ) }
    dend_6 { pt3dadd( 420.831, 436.958, 13.186, 0.7372 ) }
    dend_6 { pt3dadd( 420.079, 437.617, 11.8448, 0.661 ) }
    dend_6 { pt3dadd( 419.879, 438.525, 12.0445, 0.5084 ) }
    dend_6 { pt3dadd( 419.544, 439.358, 13.6772, 0.4322 ) }
    dend_6 { pt3dadd( 419.182, 440.368, 13.2686, 0.483 ) }
    dend_6 { pt3dadd( 418.845, 441.456, 13.2356, 0.5848 ) }
    dend_6 { pt3dadd( 418.465, 442.534, 13.3319, 0.6356 ) }
    dend_6 { pt3dadd( 417.889, 443.513, 13.5985, 0.661 ) }
    dend_6 { pt3dadd( 417.487, 444.577, 13.8382, 0.7118 ) }
    dend_6 { pt3dadd( 417.426, 445.716, 14.0258, 0.839 ) }
    dend_6 { pt3dadd( 417.131, 446.815, 14.273, 0.8898 ) }
    dend_6 { pt3dadd( 416.587, 447.804, 13.8558, 0.839 ) }
    dend_6 { pt3dadd( 416.295, 448.701, 12.376, 0.7118 ) }
    dend_6 { pt3dadd( 415.761, 449.669, 13.0239, 0.6356 ) }
    dend_6 { pt3dadd( 414.938, 450.432, 12.8534, 0.5848 ) }
    dend_6 { pt3dadd( 413.902, 450.849, 13.2983, 0.5592 ) }
    dend_6 { pt3dadd( 412.918, 451.396, 12.8517, 0.5084 ) }
    dend_6 { pt3dadd( 411.897, 451.872, 12.549, 0.4576 ) }
    dend_6 { pt3dadd( 411.037, 452.611, 12.2189, 0.3814 ) }
    dend_6 { pt3dadd( 410.194, 453.348, 11.7572, 0.356 ) }
    dend_6 { pt3dadd( 409.532, 454.267, 11.6967, 0.3814 ) }
    dend_6 { pt3dadd( 408.996, 455.266, 11.655, 0.4576 ) }
    dend_6 { pt3dadd( 408.33, 456.116, 12.3222, 0.5338 ) }
    dend_6 { pt3dadd( 407.601, 456.755, 13.6881, 0.6102 ) }
    dend_6 { pt3dadd( 406.723, 457.315, 13.9454, 0.661 ) }
    dend_6 { pt3dadd( 405.985, 458.07, 12.8789, 0.6864 ) }
    dend_6 { pt3dadd( 405.399, 458.968, 12.0534, 0.661 ) }
    dend_6 { pt3dadd( 404.927, 460.0, 11.8423, 0.6356 ) }
    dend_6 { pt3dadd( 404.455, 461.031, 11.6248, 0.5592 ) }
    dend_6 { pt3dadd( 404.008, 462.073, 11.3347, 0.5084 ) }
    dend_6 { pt3dadd( 403.505, 463.083, 11.6222, 0.4322 ) }
    dend_6 { pt3dadd( 402.951, 464.03, 12.3953, 0.4068 ) }
    dend_6 { pt3dadd( 402.448, 464.999, 13.2031, 0.3814 ) }
    dend_6 { pt3dadd( 402.208, 466.052, 13.0155, 0.3814 ) }
    dend_6 { pt3dadd( 402.046, 467.158, 12.6353, 0.3814 ) }
    dend_6 { pt3dadd( 401.818, 468.279, 12.644, 0.3814 ) }
    dend_6 { pt3dadd( 401.472, 469.363, 12.7716, 0.356 ) }
    dend_6 { pt3dadd( 400.853, 470.299, 13.1191, 0.3304 ) }
    dend_6 { pt3dadd( 400.112, 471.145, 13.6234, 0.2796 ) }
    dend_6 { pt3dadd( 399.712, 472.179, 13.8687, 0.2542 ) }
    dend_6 { pt3dadd( 399.312, 473.233, 13.4935, 0.2542 ) }
    dend_6 { pt3dadd( 398.652, 474.148, 13.701, 0.305 ) }
    dend_6 { pt3dadd( 398.261, 475.178, 14.3612, 0.4068 ) }
    dend_6 { pt3dadd( 398.273, 476.261, 15.1833, 0.5084 ) }
    dend_6 { pt3dadd( 397.842, 477.292, 15.3742, 0.5848 ) }
    dend_6 { pt3dadd( 397.35, 478.286, 14.7389, 0.5848 ) }
    dend_6 { pt3dadd( 397.224, 479.396, 15.0836, 0.5338 ) }
    dend_6 { pt3dadd( 397.28, 480.531, 14.9005, 0.5084 ) }
    dend_6 { pt3dadd( 397.176, 481.669, 14.9134, 0.5084 ) }
    dend_6 { pt3dadd( 397.047, 482.751, 15.7142, 0.5084 ) }
    dend_6 { pt3dadd( 396.741, 483.824, 15.141, 0.4576 ) }
    dend_6 { pt3dadd( 396.309, 484.865, 15.4974, 0.4068 ) }
    dend_6 { pt3dadd( 396.292, 485.999, 15.5518, 0.4322 ) }
    dend_6 { pt3dadd( 396.566, 487.099, 15.3952, 0.483 ) }
    dend_6 { pt3dadd( 396.964, 488.154, 15.8682, 0.5084 ) }
    dend_6 { pt3dadd( 397.276, 489.212, 16.3523, 0.4576 ) }
    dend_6 { pt3dadd( 397.095, 490.314, 16.4032, 0.4068 ) }
    dend_6 { pt3dadd( 396.754, 491.346, 15.7492, 0.3814 ) }
    dend_6 { pt3dadd( 396.281, 492.379, 16.0202, 0.3814 ) }
    dend_6 { pt3dadd( 395.703, 493.363, 16.1857, 0.4068 ) }
    dend_6 { pt3dadd( 395.134, 494.342, 16.1364, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_6 { pt3dadd( 394.513, 495.274, 15.7651, 0.4576 ) }
    dend_6 { pt3dadd( 393.837, 496.176, 16.1616, 0.4068 ) }
    dend_6 { pt3dadd( 393.183, 497.084, 16.5472, 0.356 ) }
    dend_6 { pt3dadd( 392.662, 498.095, 16.4119, 0.2796 ) }
    dend_6 { pt3dadd( 392.386, 499.188, 16.1297, 0.2796 ) }
    dend_6 { pt3dadd( 392.396, 500.316, 15.8334, 0.3304 ) }
    dend_6 { pt3dadd( 392.559, 501.438, 16.0118, 0.4068 ) }
    dend_6 { pt3dadd( 392.666, 502.563, 16.3489, 0.4576 ) }
    dend_6 { pt3dadd( 392.531, 503.656, 15.9905, 0.4322 ) }
    dend_6 { pt3dadd( 392.85, 504.606, 15.703, 0.4322 ) }
    dend_6 { pt3dadd( 393.68, 505.371, 15.9558, 0.4322 ) }
    dend_6 { pt3dadd( 394.595, 506.048, 15.9706, 0.483 ) }
    dend_6 { pt3dadd( 395.583, 506.603, 15.6699, 0.483 ) }
    dend_6 { pt3dadd( 396.623, 507.071, 15.5168, 0.4576 ) }
    dend_6 { pt3dadd( 397.709, 507.389, 15.7598, 0.356 ) }
    dend_6 { pt3dadd( 398.807, 507.357, 16.3929, 0.2796 ) }
    dend_6 { pt3dadd( 399.783, 507.856, 16.4368, 0.2796 ) }
    dend_6 { pt3dadd( 400.708, 508.521, 16.1647, 0.356 ) }
    dend_6 { pt3dadd( 401.515, 509.324, 15.9827, 0.5084 ) }
    dend_6 { pt3dadd( 401.774, 510.224, 14.56, 0.6864 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 20/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 413.557, 445.759, 21.2654, 1.0424 ) }
    dend_4 { pt3dadd( 413.893, 446.53, 21.2332, 0.661 ) }
    dend_4 { pt3dadd( 414.073, 447.621, 21.6059, 0.6102 ) }
    dend_4 { pt3dadd( 413.922, 448.731, 21.5765, 0.5592 ) }
    dend_4 { pt3dadd( 413.877, 449.846, 21.0935, 0.5084 ) }
    dend_4 { pt3dadd( 413.848, 450.98, 20.9381, 0.3814 ) }
    dend_4 { pt3dadd( 413.282, 451.917, 21.294, 0.3304 ) }
    dend_4 { pt3dadd( 412.35, 452.517, 21.782, 0.356 ) }
    dend_4 { pt3dadd( 411.291, 452.862, 22.3804, 0.4576 ) }
    dend_4 { pt3dadd( 410.322, 453.2, 23.5788, 0.5084 ) }
    dend_4 { pt3dadd( 409.219, 453.299, 24.0853, 0.5592 ) }
    dend_4 { pt3dadd( 408.51, 454.065, 24.8021, 0.5592 ) }
    dend_4 { pt3dadd( 408.412, 455.151, 25.4965, 0.5592 ) }
    dend_4 { pt3dadd( 408.619, 456.14, 26.7708, 0.5338 ) }
    dend_4 { pt3dadd( 409.019, 457.133, 27.7544, 0.5592 ) }
    dend_4 { pt3dadd( 409.396, 458.155, 28.5242, 0.5338 ) }
    dend_4 { pt3dadd( 408.98, 458.897, 30.2677, 0.5084 ) }
    dend_4 { pt3dadd( 407.953, 459.356, 30.3562, 0.4322 ) }
    dend_4 { pt3dadd( 407.208, 460.176, 29.6979, 0.4322 ) }
    dend_4 { pt3dadd( 406.688, 461.168, 29.3798, 0.4322 ) }
    dend_4 { pt3dadd( 406.48, 462.285, 29.687, 0.4576 ) }
    dend_4 { pt3dadd( 406.424, 463.383, 30.3103, 0.4576 ) }
    dend_4 { pt3dadd( 406.535, 464.418, 31.3561, 0.4322 ) }
    dend_4 { pt3dadd( 406.299, 465.481, 32.097, 0.4322 ) }
    dend_4 { pt3dadd( 406.03, 466.471, 33.1758, 0.4576 ) }
    dend_4 { pt3dadd( 406.025, 467.574, 33.2567, 0.5338 ) }
    dend_4 { pt3dadd( 406.204, 468.611, 32.58, 0.6102 ) }
    dend_4 { pt3dadd( 406.752, 469.606, 32.415, 0.6102 ) }
    dend_4 { pt3dadd( 407.286, 470.6, 32.1434, 0.5338 ) }
    dend_4 { pt3dadd( 407.646, 471.559, 32.5606, 0.4322 ) }
    dend_4 { pt3dadd( 407.204, 472.337, 33.9486, 0.3814 ) }
    dend_4 { pt3dadd( 406.475, 473.149, 34.613, 0.4068 ) }
    dend_4 { pt3dadd( 405.92, 473.99, 35.7904, 0.4068 ) }
    dend_4 { pt3dadd( 405.07, 474.594, 35.7104, 0.4322 ) }
    dend_4 { pt3dadd( 404.066, 474.711, 36.834, 0.4322 ) }
    dend_4 { pt3dadd( 403.909, 475.835, 36.5403, 0.483 ) }
    dend_4 { pt3dadd( 403.479, 476.867, 37.0034, 0.5084 ) }
    dend_4 { pt3dadd( 402.823, 477.46, 38.7218, 0.5084 ) }
    dend_4 { pt3dadd( 401.896, 477.699, 39.7194, 0.4576 ) }
    dend_4 { pt3dadd( 401.812, 478.77, 39.459, 0.4322 ) }
    dend_4 { pt3dadd( 402.323, 479.76, 39.1384, 0.4576 ) }
    dend_4 { pt3dadd( 402.563, 480.827, 39.7446, 0.483 ) }
    dend_4 { pt3dadd( 402.658, 481.817, 41.1012, 0.483 ) }
    dend_4 { pt3dadd( 402.402, 482.825, 41.4795, 0.4322 ) }
    dend_4 { pt3dadd( 402.071, 483.739, 42.0918, 0.4068 ) }
    dend_4 { pt3dadd( 401.956, 484.716, 43.3311, 0.356 ) }
    dend_4 { pt3dadd( 402.22, 485.747, 43.3927, 0.356 ) }
    dend_4 { pt3dadd( 402.62, 486.778, 43.4686, 0.356 ) }
    dend_4 { pt3dadd( 402.49, 487.773, 44.448, 0.3814 ) }
    dend_4 { pt3dadd( 401.884, 488.593, 45.6378, 0.4068 ) }
    dend_4 { pt3dadd( 401.141, 489.399, 46.3901, 0.483 ) }
    dend_4 { pt3dadd( 400.311, 490.168, 46.5377, 0.5592 ) }
    dend_4 { pt3dadd( 399.527, 490.993, 46.478, 0.6102 ) }
    dend_4 { pt3dadd( 398.896, 491.913, 46.9462, 0.5848 ) }
    dend_4 { pt3dadd( 398.35, 492.884, 47.5555, 0.5338 ) }
    dend_4 { pt3dadd( 397.905, 493.92, 48.0208, 0.483 ) }
    dend_4 { pt3dadd( 397.419, 494.942, 48.3753, 0.483 ) }
    dend_4 { pt3dadd( 396.74, 495.824, 48.909, 0.5084 ) }
    dend_4 { pt3dadd( 396.166, 496.79, 49.1725, 0.483 ) }
    dend_4 { pt3dadd( 395.973, 497.896, 49.2988, 0.4322 ) }
    dend_4 { pt3dadd( 395.949, 498.855, 50.664, 0.3814 ) }
    dend_4 { pt3dadd( 396.306, 499.876, 51.3192, 0.3814 ) }
    dend_4 { pt3dadd( 396.597, 500.934, 52.0904, 0.356 ) }
    dend_4 { pt3dadd( 396.269, 502.01, 52.1452, 0.4068 ) }
    dend_4 { pt3dadd( 396.168, 503.131, 52.64, 0.5592 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 85/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 413.557, 445.759, 21.2654, 1.0424 ) }
    dend_3 { pt3dadd( 413.144, 447.074, 19.6034, 0.8644 ) }
    dend_3 { pt3dadd( 412.618, 448.081, 19.8881, 0.788 ) }
    dend_3 { pt3dadd( 412.057, 449.014, 20.657, 0.6864 ) }
    dend_3 { pt3dadd( 411.516, 449.926, 21.4312, 0.6102 ) }
    dend_3 { pt3dadd( 410.886, 450.874, 21.2789, 0.5848 ) }
    dend_3 { pt3dadd( 410.23, 451.806, 21.1624, 0.5084 ) }
    dend_3 { pt3dadd( 409.671, 452.793, 20.9762, 0.4068 ) }
    dend_3 { pt3dadd( 409.258, 453.829, 20.4523, 0.356 ) }
    dend_3 { pt3dadd( 409.071, 454.944, 20.1698, 0.356 ) }
    dend_3 { pt3dadd( 409.181, 456.034, 20.5537, 0.3814 ) }
    dend_3 { pt3dadd( 409.16, 457.021, 21.546, 0.4068 ) }
    dend_3 { pt3dadd( 408.742, 458.014, 22.437, 0.4322 ) }
    dend_3 { pt3dadd( 408.489, 459.105, 22.78, 0.4322 ) }
    dend_3 { pt3dadd( 408.491, 460.243, 22.8189, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_3 { pt3dadd( 408.673, 461.371, 22.8502, 0.3814 ) }
    dend_3 { pt3dadd( 408.999, 462.462, 22.8077, 0.4068 ) }
    dend_3 { pt3dadd( 409.305, 463.535, 23.119, 0.4322 ) }
    dend_3 { pt3dadd( 409.221, 464.63, 23.3598, 0.4576 ) }
    dend_3 { pt3dadd( 408.666, 465.598, 23.214, 0.4322 ) }
    dend_3 { pt3dadd( 408.191, 466.602, 23.0574, 0.356 ) }
    dend_3 { pt3dadd( 407.795, 467.658, 22.6853, 0.2796 ) }
    dend_3 { pt3dadd( 407.111, 468.546, 22.4742, 0.2542 ) }
    dend_3 { pt3dadd( 406.193, 469.069, 23.1949, 0.305 ) }
    dend_3 { pt3dadd( 405.214, 469.441, 24.3166, 0.356 ) }
    dend_3 { pt3dadd( 404.406, 470.087, 25.3742, 0.356 ) }
    dend_3 { pt3dadd( 403.55, 470.787, 25.4982, 0.356 ) }
    dend_3 { pt3dadd( 402.666, 471.476, 25.8037, 0.3814 ) }
    dend_3 { pt3dadd( 401.689, 472.04, 26.0574, 0.483 ) }
    dend_3 { pt3dadd( 400.954, 472.824, 26.6879, 0.5084 ) }
    dend_3 { pt3dadd( 400.498, 473.847, 26.6627, 0.483 ) }
    dend_3 { pt3dadd( 400.194, 474.947, 26.6081, 0.4068 ) }
    dend_3 { pt3dadd( 399.694, 475.809, 27.7763, 0.4322 ) }
    dend_3 { pt3dadd( 398.919, 476.601, 27.4254, 0.5338 ) }
    dend_3 { pt3dadd( 397.957, 477.121, 26.6462, 0.6102 ) }
    dend_3 { pt3dadd( 396.906, 477.526, 26.1811, 0.6102 ) }
    dend_3 { pt3dadd( 395.927, 478.075, 25.664, 0.5338 ) }
    dend_3 { pt3dadd( 395.037, 478.762, 26.1218, 0.483 ) }
    dend_3 { pt3dadd( 394.281, 479.588, 26.6865, 0.483 ) }
    dend_3 { pt3dadd( 394.299, 480.463, 28.3556, 0.5084 ) }
    dend_3 { pt3dadd( 393.995, 481.468, 28.3256, 0.5338 ) }
    dend_3 { pt3dadd( 393.166, 482.203, 28.7921, 0.5084 ) }
    dend_3 { pt3dadd( 392.306, 482.95, 28.8492, 0.4576 ) }
    dend_3 { pt3dadd( 391.47, 483.609, 29.6657, 0.4322 ) }
    dend_3 { pt3dadd( 390.485, 483.926, 30.6312, 0.483 ) }
    dend_3 { pt3dadd( 389.507, 484.372, 30.3834, 0.5848 ) }
    dend_3 { pt3dadd( 388.62, 485.059, 29.8824, 0.661 ) }
    dend_3 { pt3dadd( 387.641, 485.631, 29.7548, 0.661 ) }
    dend_3 { pt3dadd( 386.745, 486.318, 29.9541, 0.6102 ) }
    dend_3 { pt3dadd( 385.832, 486.925, 29.412, 0.5084 ) }
    dend_3 { pt3dadd( 385.044, 487.729, 29.0755, 0.4576 ) }
    dend_3 { pt3dadd( 385.071, 488.831, 29.4, 0.4576 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 37/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 440.11, 432.661, 20.9689, 0.3304 ) }
    dend_15 { pt3dadd( 441.324, 433.19, 20.1667, 0.5084 ) }
    dend_15 { pt3dadd( 442.241, 433.86, 20.3403, 0.6102 ) }
    dend_15 { pt3dadd( 443.183, 434.447, 20.9404, 0.661 ) }
    dend_15 { pt3dadd( 444.123, 435.069, 20.8468, 0.6864 ) }
    dend_15 { pt3dadd( 445.123, 435.5, 20.0567, 0.661 ) }
    dend_15 { pt3dadd( 446.012, 435.986, 18.7603, 0.6102 ) }
    dend_15 { pt3dadd( 446.86, 436.535, 18.7345, 0.5592 ) }
    dend_15 { pt3dadd( 447.717, 437.215, 19.0733, 0.5592 ) }
    dend_15 { pt3dadd( 448.698, 437.767, 19.1786, 0.5848 ) }
    dend_15 { pt3dadd( 449.523, 438.509, 19.3158, 0.5592 ) }
    dend_15 { pt3dadd( 450.443, 438.557, 20.4137, 0.483 ) }
    dend_15 { pt3dadd( 451.509, 438.311, 21.1462, 0.4068 ) }
    dend_15 { pt3dadd( 452.362, 438.896, 21.7308, 0.4068 ) }
    dend_15 { pt3dadd( 453.044, 439.794, 21.3662, 0.4068 ) }
    dend_15 { pt3dadd( 453.842, 440.534, 22.2113, 0.4322 ) }
    dend_15 { pt3dadd( 454.532, 441.44, 22.3289, 0.4322 ) }
    dend_15 { pt3dadd( 455.305, 442.154, 21.4315, 0.4576 ) }
    dend_15 { pt3dadd( 456.38, 442.387, 21.957, 0.4576 ) }
    dend_15 { pt3dadd( 457.394, 442.536, 23.1087, 0.4576 ) }
    dend_15 { pt3dadd( 458.188, 443.17, 23.6748, 0.5084 ) }
    dend_15 { pt3dadd( 458.843, 444.054, 23.5735, 0.5592 ) }
    dend_15 { pt3dadd( 459.806, 444.602, 24.1324, 0.6102 ) }
    dend_15 { pt3dadd( 460.88, 444.918, 24.5162, 0.5848 ) }
    dend_15 { pt3dadd( 461.964, 445.13, 24.019, 0.5084 ) }
    dend_15 { pt3dadd( 463.029, 445.307, 23.1059, 0.4322 ) }
    dend_15 { pt3dadd( 464.123, 445.448, 23.0653, 0.3814 ) }
    dend_15 { pt3dadd( 465.175, 445.76, 23.2148, 0.3814 ) }
    dend_15 { pt3dadd( 465.909, 446.52, 23.5253, 0.356 ) }
    dend_15 { pt3dadd( 466.612, 447.379, 23.8479, 0.305 ) }
    dend_15 { pt3dadd( 467.612, 447.865, 23.7622, 0.2796 ) }
    dend_15 { pt3dadd( 468.713, 448.173, 23.683, 0.305 ) }
    dend_15 { pt3dadd( 469.661, 448.763, 23.4368, 0.3814 ) }
    dend_15 { pt3dadd( 470.627, 449.285, 22.7704, 0.4068 ) }
    dend_15 { pt3dadd( 471.649, 449.761, 22.4644, 0.4068 ) }
    dend_15 { pt3dadd( 472.701, 450.204, 22.6173, 0.4068 ) }
    dend_15 { pt3dadd( 473.755, 450.623, 22.9592, 0.4576 ) }
    dend_15 { pt3dadd( 474.824, 451.006, 22.8547, 0.483 ) }
    dend_15 { pt3dadd( 475.931, 451.27, 22.64, 0.4576 ) }
    dend_15 { pt3dadd( 476.987, 451.498, 23.3814, 0.3814 ) }
    dend_15 { pt3dadd( 478.092, 451.682, 23.4783, 0.3304 ) }
    dend_15 { pt3dadd( 478.765, 452.452, 24.36, 0.305 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 79/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 440.11, 432.661, 20.9689, 0.3304 ) }
    dend_14 { pt3dadd( 440.233, 433.378, 22.388, 0.356 ) }
    dend_14 { pt3dadd( 440.443, 434.418, 23.273, 0.4322 ) }
    dend_14 { pt3dadd( 440.786, 435.389, 24.3858, 0.5084 ) }
    dend_14 { pt3dadd( 441.158, 436.326, 23.8218, 0.5084 ) }
    dend_14 { pt3dadd( 441.04, 437.279, 24.7338, 0.4576 ) }
    dend_14 { pt3dadd( 441.198, 438.358, 25.4083, 0.4068 ) }
    dend_14 { pt3dadd( 441.785, 439.288, 26.0859, 0.4068 ) }
    dend_14 { pt3dadd( 441.82, 440.37, 26.9472, 0.4576 ) }
    dend_14 { pt3dadd( 441.677, 441.465, 27.5293, 0.5084 ) }
    dend_14 { pt3dadd( 441.975, 442.538, 27.7606, 0.5338 ) }
    dend_14 { pt3dadd( 442.357, 443.54, 27.0626, 0.5592 ) }
    dend_14 { pt3dadd( 442.75, 444.57, 27.2101, 0.6102 ) }
    dend_14 { pt3dadd( 443.23, 445.548, 26.7375, 0.6356 ) }
    dend_14 { pt3dadd( 443.515, 446.636, 26.4919, 0.6356 ) }
    dend_14 { pt3dadd( 443.884, 447.473, 27.8149, 0.5848 ) }
    dend_14 { pt3dadd( 444.024, 448.407, 29.1508, 0.5592 ) }
    dend_14 { pt3dadd( 443.816, 449.488, 28.9282, 0.483 ) }
    dend_14 { pt3dadd( 443.895, 450.526, 27.8975, 0.483 ) }
    dend_14 { pt3dadd( 444.274, 451.575, 27.5937, 0.483 ) }
    dend_14 { pt3dadd( 444.595, 452.379, 29.1805, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_14 { pt3dadd( 445.364, 452.911, 30.6872, 0.5338 ) }
    dend_14 { pt3dadd( 445.997, 453.815, 31.3488, 0.483 ) }
    dend_14 { pt3dadd( 446.104, 454.938, 31.717, 0.4068 ) }
    dend_14 { pt3dadd( 445.633, 455.961, 32.1457, 0.4068 ) }
    dend_14 { pt3dadd( 444.914, 456.701, 33.3357, 0.4322 ) }
    dend_14 { pt3dadd( 444.341, 457.606, 34.2574, 0.4576 ) }
    dend_14 { pt3dadd( 443.459, 458.328, 34.2227, 0.4576 ) }
    dend_14 { pt3dadd( 442.602, 458.99, 33.3934, 0.5084 ) }
    dend_14 { pt3dadd( 441.654, 459.613, 33.5616, 0.5338 ) }
    dend_14 { pt3dadd( 440.578, 459.857, 33.6389, 0.5338 ) }
    dend_14 { pt3dadd( 439.584, 459.735, 34.6735, 0.4576 ) }
    dend_14 { pt3dadd( 438.762, 460.412, 35.0826, 0.4322 ) }
    dend_14 { pt3dadd( 438.375, 461.478, 35.4404, 0.4322 ) }
    dend_14 { pt3dadd( 438.021, 462.551, 35.87, 0.4322 ) }
    dend_14 { pt3dadd( 437.598, 463.58, 36.3653, 0.3814 ) }
    dend_14 { pt3dadd( 436.821, 464.239, 37.3173, 0.3304 ) }
    dend_14 { pt3dadd( 435.76, 464.498, 37.8434, 0.3304 ) }
    dend_14 { pt3dadd( 434.634, 464.655, 38.0481, 0.4068 ) }
    dend_14 { pt3dadd( 433.6, 465.052, 38.3827, 0.483 ) }
    dend_14 { pt3dadd( 432.885, 465.637, 39.6301, 0.5592 ) }
    dend_14 { pt3dadd( 432.681, 466.292, 41.8065, 0.5338 ) }
    dend_14 { pt3dadd( 432.441, 467.223, 43.2524, 0.483 ) }
    dend_14 { pt3dadd( 432.14, 468.322, 43.3936, 0.356 ) }
    dend_14 { pt3dadd( 431.289, 469.04, 43.96, 0.305 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 24/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 433.463, 432.661, 16.8, 0.839 ) }
    dend_12 { pt3dadd( 433.948, 433.031, 16.2554, 0.305 ) }
    dend_12 { pt3dadd( 434.596, 433.648, 14.5919, 0.3304 ) }
    dend_12 { pt3dadd( 435.697, 433.726, 13.9961, 0.3814 ) }
    dend_12 { pt3dadd( 436.709, 434.195, 13.8625, 0.4322 ) }
    dend_12 { pt3dadd( 437.832, 434.107, 14.2601, 0.4576 ) }
    dend_12 { pt3dadd( 438.937, 434.205, 14.8229, 0.4576 ) }
    dend_12 { pt3dadd( 440.014, 433.93, 14.9223, 0.4576 ) }
    dend_12 { pt3dadd( 441.023, 433.631, 14.1876, 0.483 ) }
    dend_12 { pt3dadd( 442.146, 433.734, 14.5827, 0.5338 ) }
    dend_12 { pt3dadd( 443.239, 434.033, 14.7224, 0.6102 ) }
    dend_12 { pt3dadd( 444.326, 434.368, 14.5113, 0.6356 ) }
    dend_12 { pt3dadd( 445.389, 434.773, 14.4337, 0.6102 ) }
    dend_12 { pt3dadd( 446.447, 435.09, 13.8989, 0.5338 ) }
    dend_12 { pt3dadd( 447.473, 435.436, 13.7329, 0.5084 ) }
    dend_12 { pt3dadd( 448.46, 435.997, 13.7931, 0.5592 ) }
    dend_12 { pt3dadd( 449.512, 436.367, 13.314, 0.661 ) }
    dend_12 { pt3dadd( 450.603, 436.535, 12.6112, 0.7626 ) }
    dend_12 { pt3dadd( 451.725, 436.589, 12.444, 0.7626 ) }
    dend_12 { pt3dadd( 452.811, 436.85, 12.7361, 0.7118 ) }
    dend_12 { pt3dadd( 453.603, 437.363, 11.7267, 0.6102 ) }
    dend_12 { pt3dadd( 454.521, 437.65, 11.5307, 0.5848 ) }
    dend_12 { pt3dadd( 455.503, 437.896, 12.7725, 0.5848 ) }
    dend_12 { pt3dadd( 456.503, 438.31, 13.4848, 0.5848 ) }
    dend_12 { pt3dadd( 457.544, 438.707, 13.0687, 0.5592 ) }
    dend_12 { pt3dadd( 458.571, 439.127, 12.3973, 0.5592 ) }
    dend_12 { pt3dadd( 459.574, 439.572, 11.611, 0.5592 ) }
    dend_12 { pt3dadd( 460.665, 439.826, 11.6886, 0.5592 ) }
    dend_12 { pt3dadd( 461.793, 439.767, 12.0036, 0.5084 ) }
    dend_12 { pt3dadd( 462.803, 439.711, 10.8951, 0.5338 ) }
    dend_12 { pt3dadd( 463.916, 439.799, 10.5633, 0.5084 ) }
    dend_12 { pt3dadd( 464.967, 439.992, 11.4733, 0.5084 ) }
    dend_12 { pt3dadd( 466.074, 439.914, 11.1432, 0.4322 ) }
    dend_12 { pt3dadd( 467.127, 439.503, 10.7456, 0.4068 ) }
    dend_12 { pt3dadd( 468.251, 439.692, 10.6529, 0.3814 ) }
    dend_12 { pt3dadd( 469.27, 440.211, 10.64, 0.4068 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 433.463, 432.661, 16.8, 0.839 ) }
    dend_11 { pt3dadd( 433.244, 433.221, 17.6039, 0.4322 ) }
    dend_11 { pt3dadd( 433.225, 434.277, 18.4173, 0.483 ) }
    dend_11 { pt3dadd( 433.441, 435.389, 18.4122, 0.5084 ) }
    dend_11 { pt3dadd( 433.874, 436.411, 17.8545, 0.5592 ) }
    dend_11 { pt3dadd( 434.464, 437.329, 17.0316, 0.5338 ) }
    dend_11 { pt3dadd( 434.998, 438.317, 16.613, 0.483 ) }
    dend_11 { pt3dadd( 435.804, 439.068, 16.8876, 0.4322 ) }
    dend_11 { pt3dadd( 436.863, 439.471, 16.7415, 0.483 ) }
    dend_11 { pt3dadd( 437.877, 439.988, 16.5043, 0.5848 ) }
    dend_11 { pt3dadd( 438.808, 440.57, 17.2301, 0.6864 ) }
    dend_11 { pt3dadd( 439.124, 441.601, 18.0578, 0.7118 ) }
    dend_11 { pt3dadd( 439.216, 442.719, 17.5605, 0.6864 ) }
    dend_11 { pt3dadd( 439.242, 443.862, 17.6568, 0.6102 ) }
    dend_11 { pt3dadd( 439.297, 444.963, 17.185, 0.5592 ) }
    dend_11 { pt3dadd( 439.242, 446.003, 16.83, 0.5338 ) }
    dend_11 { pt3dadd( 438.886, 446.929, 18.1132, 0.5084 ) }
    dend_11 { pt3dadd( 438.724, 447.882, 19.2805, 0.5084 ) }
    dend_11 { pt3dadd( 439.003, 448.928, 19.0991, 0.483 ) }
    dend_11 { pt3dadd( 439.417, 449.959, 18.7183, 0.5084 ) }
    dend_11 { pt3dadd( 439.875, 450.999, 18.935, 0.483 ) }
    dend_11 { pt3dadd( 440.346, 451.961, 19.7576, 0.483 ) }
    dend_11 { pt3dadd( 440.963, 452.836, 20.4445, 0.4576 ) }
    dend_11 { pt3dadd( 441.472, 453.804, 20.921, 0.483 ) }
    dend_11 { pt3dadd( 442.084, 454.686, 20.7435, 0.5338 ) }
    dend_11 { pt3dadd( 442.833, 455.519, 20.7046, 0.5592 ) }
    dend_11 { pt3dadd( 443.423, 456.474, 21.1523, 0.5848 ) }
    dend_11 { pt3dadd( 443.921, 457.418, 20.5523, 0.6102 ) }
    dend_11 { pt3dadd( 444.559, 458.323, 20.1698, 0.661 ) }
    dend_11 { pt3dadd( 444.923, 459.375, 20.3045, 0.661 ) }
    dend_11 { pt3dadd( 445.373, 460.409, 20.1572, 0.6356 ) }
    dend_11 { pt3dadd( 445.778, 461.423, 20.7444, 0.6102 ) }
    dend_11 { pt3dadd( 446.142, 462.467, 21.4645, 0.5848 ) }
    dend_11 { pt3dadd( 446.67, 463.468, 21.6219, 0.5592 ) }
    dend_11 { pt3dadd( 447.277, 464.411, 22.0833, 0.5084 ) }
    dend_11 { pt3dadd( 447.831, 465.401, 22.3874, 0.5084 ) }
    dend_11 { pt3dadd( 448.153, 466.491, 22.4692, 0.5084 ) }
    dend_11 { pt3dadd( 448.663, 467.484, 22.9284, 0.5592 ) }
    dend_11 { pt3dadd( 449.209, 468.475, 23.3388, 0.5592 ) }
    dend_11 { pt3dadd( 449.876, 469.393, 23.1501, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_11 { pt3dadd( 450.674, 470.155, 22.4619, 0.5338 ) }
    dend_11 { pt3dadd( 451.535, 470.882, 22.6814, 0.5592 ) }
    dend_11 { pt3dadd( 452.193, 471.783, 23.238, 0.6102 ) }
    dend_11 { pt3dadd( 452.805, 472.743, 23.1594, 0.7118 ) }
    dend_11 { pt3dadd( 453.249, 473.792, 22.9827, 0.788 ) }
    dend_11 { pt3dadd( 453.352, 474.921, 23.1829, 0.788 ) }
    dend_11 { pt3dadd( 453.407, 476.062, 23.3503, 0.6864 ) }
    dend_11 { pt3dadd( 453.451, 477.196, 23.6936, 0.5592 ) }
    dend_11 { pt3dadd( 453.375, 478.324, 24.1259, 0.5084 ) }
    dend_11 { pt3dadd( 453.814, 479.361, 24.3421, 0.5338 ) }
    dend_11 { pt3dadd( 454.671, 480.093, 23.9915, 0.5592 ) }
    dend_11 { pt3dadd( 455.431, 480.822, 23.4203, 0.5338 ) }
    dend_11 { pt3dadd( 456.468, 481.216, 24.0178, 0.483 ) }
    dend_11 { pt3dadd( 457.563, 481.528, 24.2298, 0.4576 ) }
    dend_11 { pt3dadd( 458.608, 481.942, 24.6854, 0.4322 ) }
    dend_11 { pt3dadd( 459.601, 482.482, 24.7352, 0.3814 ) }
    dend_11 { pt3dadd( 460.562, 483.022, 24.0943, 0.3814 ) }
    dend_11 { pt3dadd( 461.402, 483.751, 23.4559, 0.4576 ) }
    dend_11 { pt3dadd( 462.397, 484.211, 23.0728, 0.5338 ) }
    dend_11 { pt3dadd( 463.407, 484.636, 23.4788, 0.5084 ) }
    dend_11 { pt3dadd( 464.047, 485.486, 23.5088, 0.4322 ) }
    dend_11 { pt3dadd( 464.358, 486.465, 22.3975, 0.4068 ) }
    dend_11 { pt3dadd( 464.902, 487.349, 22.2583, 0.4576 ) }
    dend_11 { pt3dadd( 465.531, 488.273, 22.1032, 0.4576 ) }
    dend_11 { pt3dadd( 465.945, 489.324, 22.1194, 0.4322 ) }
    dend_11 { pt3dadd( 466.299, 490.411, 22.1878, 0.3814 ) }
    dend_11 { pt3dadd( 466.621, 491.501, 22.451, 0.4068 ) }
    dend_11 { pt3dadd( 467.191, 492.444, 22.0301, 0.4576 ) }
    dend_11 { pt3dadd( 467.507, 493.526, 21.9974, 0.5338 ) }
    dend_11 { pt3dadd( 467.95, 494.52, 22.5758, 0.6102 ) }
    dend_11 { pt3dadd( 468.182, 495.598, 22.0374, 0.6102 ) }
    dend_11 { pt3dadd( 468.796, 496.546, 21.8355, 0.5338 ) }
    dend_11 { pt3dadd( 469.478, 497.411, 22.2468, 0.3814 ) }
    dend_11 { pt3dadd( 470.471, 497.951, 21.9666, 0.2796 ) }
    dend_11 { pt3dadd( 471.501, 498.243, 21.3632, 0.2542 ) }
    dend_11 { pt3dadd( 472.61, 498.214, 21.3332, 0.2796 ) }
    dend_11 { pt3dadd( 473.631, 498.689, 21.2612, 0.305 ) }
    dend_11 { pt3dadd( 474.541, 499.255, 21.2744, 0.2796 ) }
    dend_11 { pt3dadd( 475.463, 499.777, 21.9915, 0.305 ) }
    dend_11 { pt3dadd( 476.057, 500.645, 21.2089, 0.356 ) }
    dend_11 { pt3dadd( 476.42, 501.61, 21.8036, 0.4576 ) }
    dend_11 { pt3dadd( 477.19, 502.375, 22.2925, 0.483 ) }
    dend_11 { pt3dadd( 478.137, 503.005, 22.1418, 0.4576 ) }
    dend_11 { pt3dadd( 479.07, 503.66, 22.2667, 0.4068 ) }
    dend_11 { pt3dadd( 479.803, 504.523, 22.4787, 0.356 ) }
    dend_11 { pt3dadd( 480.449, 505.404, 21.7697, 0.356 ) }
    dend_11 { pt3dadd( 481.061, 506.357, 21.7974, 0.3304 ) }
    dend_11 { pt3dadd( 481.824, 507.205, 21.9271, 0.3304 ) }
    dend_11 { pt3dadd( 482.396, 508.122, 21.0613, 0.305 ) }
    dend_11 { pt3dadd( 483.227, 508.737, 19.88, 0.3814 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_330, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_330 = new SectionList()
    soma_0 ModelViewParmSubset_330.append()
    axon_0 ModelViewParmSubset_330.append()
    axon_1 ModelViewParmSubset_330.append()

    // Group: {name=ModelViewParmSubset_331, groups=[], sections=[dend_26, apic_0, dend_17, dend_0, apic_6, apic_1, dend_19, dend_18, dend_8, dend_1, apic_8, apic_7, apic_5, apic_2, dend_23, dend_20, dend_16, dend_9, dend_5, dend_2, apic_4, apic_3, dend_25, dend_24, dend_22, dend_21, dend_13, dend_10, dend_7, dend_6, dend_4, dend_3, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_331 = new SectionList()
    dend_26 ModelViewParmSubset_331.append()
    apic_0 ModelViewParmSubset_331.append()
    dend_17 ModelViewParmSubset_331.append()
    dend_0 ModelViewParmSubset_331.append()
    apic_6 ModelViewParmSubset_331.append()
    apic_1 ModelViewParmSubset_331.append()
    dend_19 ModelViewParmSubset_331.append()
    dend_18 ModelViewParmSubset_331.append()
    dend_8 ModelViewParmSubset_331.append()
    dend_1 ModelViewParmSubset_331.append()
    apic_8 ModelViewParmSubset_331.append()
    apic_7 ModelViewParmSubset_331.append()
    apic_5 ModelViewParmSubset_331.append()
    apic_2 ModelViewParmSubset_331.append()
    dend_23 ModelViewParmSubset_331.append()
    dend_20 ModelViewParmSubset_331.append()
    dend_16 ModelViewParmSubset_331.append()
    dend_9 ModelViewParmSubset_331.append()
    dend_5 ModelViewParmSubset_331.append()
    dend_2 ModelViewParmSubset_331.append()
    apic_4 ModelViewParmSubset_331.append()
    apic_3 ModelViewParmSubset_331.append()
    dend_25 ModelViewParmSubset_331.append()
    dend_24 ModelViewParmSubset_331.append()
    dend_22 ModelViewParmSubset_331.append()
    dend_21 ModelViewParmSubset_331.append()
    dend_13 ModelViewParmSubset_331.append()
    dend_10 ModelViewParmSubset_331.append()
    dend_7 ModelViewParmSubset_331.append()
    dend_6 ModelViewParmSubset_331.append()
    dend_4 ModelViewParmSubset_331.append()
    dend_3 ModelViewParmSubset_331.append()
    dend_15 ModelViewParmSubset_331.append()
    dend_14 ModelViewParmSubset_331.append()
    dend_12 ModelViewParmSubset_331.append()
    dend_11 ModelViewParmSubset_331.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_6, apic_1, apic_8, apic_7, apic_5, apic_2, apic_4, apic_3]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_6 apic.append()
    apic_1 apic.append()
    apic_8 apic.append()
    apic_7 apic.append()
    apic_5 apic.append()
    apic_2 apic.append()
    apic_4 apic.append()
    apic_3 apic.append()

    // Group: {name=dend, groups=[], sections=[dend_26, dend_17, dend_0, dend_19, dend_18, dend_8, dend_1, dend_23, dend_20, dend_16, dend_9, dend_5, dend_2, dend_25, dend_24, dend_22, dend_21, dend_13, dend_10, dend_7, dend_6, dend_4, dend_3, dend_15, dend_14, dend_12, dend_11]}
    dend = new SectionList()
    dend_26 dend.append()
    dend_17 dend.append()
    dend_0 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_8 dend.append()
    dend_1 dend.append()
    dend_23 dend.append()
    dend_20 dend.append()
    dend_16 dend.append()
    dend_9 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_15161, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_15161 = new SectionList()
    soma_0 OneSecGrp_SectionRef_15161.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_1, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_1 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 2.28  // units: uF/cm2
    forsec dend cm = 2.28  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 122.880005  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0020488997  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 3.7269252E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.6092708  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 6.216187E-5  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.018147424  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 5.5582833E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 4.1743167E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.12468487  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 5.458915E-4  // units: S cm-2
        e_pas_nml2 = -89.4614  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.1542162E-4  // units: S cm-2
        e_pas_nml2 = -89.4614  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 6.282725E-6  // units: S cm-2
        e_pas_nml2 = -89.4614  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 5.9318995E-6  // units: S cm-2
        e_pas_nml2 = -89.4614  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 9.7272184E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0066296505  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 5
    apic_8 nseg = 3
    apic_7 nseg = 3
    apic_5 nseg = 5
    dend_20 nseg = 3
    dend_16 nseg = 5
    apic_4 nseg = 15
    apic_3 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 5
    dend_4 nseg = 5
    dend_3 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_12 nseg = 3
    dend_11 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473863035


