// Cell: cNAC187_L5_NBC_d4cc42ae25_0_0
/*
{
  "id" : "cNAC187_L5_NBC_d4cc42ae25_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "5.06383, -8.03547, 0.0, 2.96232", "4.52136, -7.21896, 0.0, 4.65461", "3.9789, -6.40244, 0.0, 6.41887", "3.43643, -5.58592, 0.0, 7.96069", "2.89397, -4.7694, 0.0, 9.55419", "2.35151, -3.95288, 0.0, 10.983", "1.80904, -3.13637, 0.0, 11.7075", "1.26658, -2.31985, 0.0, 12.5906", "0.724116, -1.50333, 0.0, 13.2278", "0.181652, -0.686812, 0.0, 13.8644", "-0.360812, 0.129707, 0.0, 14.2774", "-0.903275, 0.946225, 0.0, 14.5108", "-1.44574, 1.76274, 0.0, 14.4652", "-1.9882, 2.57926, 0.0, 14.3007", "-2.53067, 3.39578, 0.0, 13.9535", "-3.07313, 4.2123, 0.0, 13.2045", "-3.61559, 5.02882, 0.0, 12.1103", "-4.15806, 5.84533, 0.0, 10.6196", "-4.70052, 6.66185, 0.0, 8.93613", "-5.24299, 7.47837, 0.0, 6.69248", "-5.78545, 8.29489, 0.0, 3.86173" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-6.39245, 3.39857, -5.2, 0.8", "-7.42749, 2.90609, -5.59416, 0.8", "-8.24129, 2.55251, -5.88983, 0.8", "-9.05697, 2.21384, -6.16852, 1.24", "-10.3793, 1.6924, -6.59879, 1.46", "-12.386, 0.94518, -7.24424, 1.17", "-13.4836, 0.579068, -7.58563, 0.95", "-14.4038, 0.346621, -7.8528, 0.95", "-15.2887, 0.202846, -8.10094, 0.95", "-15.8523, 0.156032, -8.24755, 0.95", "-16.8757, 0.191531, -8.46367, 0.95", "-18.0287, 0.389765, -8.69129, 1.17", "-18.737, 0.58227, -8.81205, 1.53", "-19.9091, 0.98172, -8.98297, 1.68", "-20.4808, 1.19561, -9.05371, 1.68", "-22.1889, 1.81612, -9.22521, 0.88", "-22.8882, 2.05127, -9.26334, 0.88", "-23.4957, 2.22882, -9.27868, 0.88", "-24.396, 2.45987, -9.27935, 0.88", "-25.3056, 2.65516, -9.27403, 0.88", "-26.7914, 2.93614, -9.25666, 1.09", "-27.9608, 3.12385, -9.2361, 1.68", "-28.9081, 3.26762, -9.21396, 1.9", "-30.0828, 3.44581, -9.17629, 2.12", "-30.7102, 3.55436, -9.15384, 2.12", "-32.072, 3.8267, -9.09948, 1.82", "-32.8332, 4.00736, -9.06585, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-4.28245, 5.64057, -5.85, 0.88", "-4.77454, 5.40758, -6.20013, 0.88", "-5.43132, 5.01594, -6.68369, 0.88", "-5.78715, 4.81478, -6.90721, 0.88", "-6.49036, 4.46344, -7.30835, 0.88", "-7.18499, 4.17665, -7.65876, 0.88", "-8.1933, 3.83671, -8.11534, 0.88", "-8.98489, 3.61866, -8.4291, 0.88", "-10.2253, 3.45164, -8.83266, 1.02", "-11.5668, 3.43251, -9.23608, 0.88", "-12.724, 3.53465, -9.56104, 1.24", "-13.554, 3.6758, -9.81231, 1.24", "-14.2854, 3.84054, -10.0613, 1.24", "-16.2249, 4.27838, -10.8133, 0.8", "-16.9483, 4.41233, -11.1616, 0.8", "-17.5506, 4.45607, -11.5357, 0.8", "-18.3783, 4.25431, -12.2802, 0.8", "-18.9149, 3.93833, -12.9108, 0.8", "-19.4207, 3.47106, -13.633, 0.58", "-19.7646, 2.94386, -14.272, 0.58", "-20.216, 2.03782, -15.2405, 0.8", "-20.6236, 0.94364, -16.2976, 1.17", "-20.6759, 0.75049, -16.4597, 1.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "4.76755, 2.20157, -5.1, 0.44", "5.27556, 2.02752, -5.47291, 0.44", "6.75649, 2.45896, -6.54235, 0.36", "7.38506, 2.96942, -6.94898, 0.36", "7.78283, 3.40756, -7.16702, 0.36", "8.21775, 3.93305, -7.421, 0.36", "8.83569, 4.72729, -7.83186, 0.36", "9.55745, 5.76158, -8.37999, 0.66", "10.0546, 6.49222, -8.74949, 1.09", "10.8332, 7.53267, -9.33577, 0.8", "11.6064, 8.50584, -10.017, 0.51", "12.1483, 9.13449, -10.5261, 0.73", "12.995, 10.0099, -11.3169, 1.24", "13.6271, 10.5731, -11.8317, 1.82", "15.0796, 11.7205, -12.7757, 0.36", "16.2334, 12.5872, -13.2579, 0.36", "16.7552, 12.9763, -13.2335, 0.36", "17.3604, 13.4314, -12.8672, 0.36", "18.7593, 14.4672, -11.5022, 0.58", "19.6334, 15.1017, -10.4273, 0.29", "20.5459, 15.7782, -9.14137, 0.51", "21.5803, 16.5967, -7.62141, 0.73", "22.4301, 17.3332, -6.3874, 0.73", "22.7842, 17.6964, -5.86681, 0.73", "23.4534, 18.5471, -4.89179, 0.36", "23.9239, 19.2166, -4.2217, 0.36", "24.4675, 20.0646, -3.46909, 0.58", "24.9561, 21.0368, -2.73297, 0.58", "25.4903, 22.3832, -1.74688, 0.58", "25.7374, 23.1354, -1.15975, 0.58", "25.9114, 23.7373, -0.643061, 0.58", "26.2276, 23.5099, -0.2903, 0.58", "26.7417, 23.1507, 0.0779955, 0.58", "27.6372, 22.5967, 0.691297, 0.58", "28.898, 21.8994, 1.50614, 0.36", "29.9388, 21.4698, 2.18821, 0.36", "31.1031, 21.2329, 2.92764, 0.36", "32.1757, 21.3391, 3.64236, 0.66", "33.2803, 22.0741, 4.50785, 0.29", "33.5704, 22.4899, 4.78414, 0.44", "33.9739, 23.3346, 5.24581, 0.44", "34.363, 24.3002, 5.70419, 0.95", "34.7722, 25.3221, 6.19375, 0.44", "35.1524, 26.1074, 6.60888, 0.44", "35.8186, 27.2013, 7.20615, 0.29", "36.1117, 27.6308, 7.45025, 0.51", "37.0164, 28.8178, 8.09995, 0.29", "37.9034, 29.8962, 8.73, 0.73", "38.9314, 31.1793, 9.50312, 1.61", "39.1827, 31.5445, 9.74198, 1.61", "39.607, 32.2022, 10.1778, 1.61", "40.4249, 33.603, 11.0923, 0.95", "41.033, 34.8482, 11.9046, 0.66", "41.5073, 36.0602, 12.6262, 0.29", "41.875, 37.4644, 13.4616, 0.29", "48.2192, 46.9537, 17.8461, 0.29", "54.4497, 55.4493, 24.2109, 0.29", "59.9355, 63.1657, 32.1578, 0.29", "64.8122, 71.6869, 39.5775, 0.29", "69.9356, 78.495, 48.6027, 0.29", "74.8959, 83.3873, 58.9703, 0.29", "79.4811, 89.2307, 68.9692, 0.29", "82.3472, 95.9825, 78.9797, 0.29", "83.3029, 102.256, 89.6653, 0.29", "84.7719, 109.139, 99.8734, 0.29", "87.2195, 115.478, 110.281, 0.29", "91.2876, 121.405, 120.448, 0.29", "96.2605, 126.396, 130.758, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-4.54245, 4.10157, 0.96, 1.24", "-5.81578, 4.63851, 1.2918, 1.24", "-7.29372, 5.19261, 1.59697, 1.09", "-8.51527, 5.60778, 1.75768, 1.24", "-9.87192, 6.06889, 1.93617, 1.39", "-10.9205, 6.42525, 2.07411, 2.12", "-11.9348, 6.77001, 2.20757, 2.34", "-12.9465, 7.04429, 2.24271, 2.04", "-14.2067, 7.31577, 2.17153, 1.75" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.82245, 4.67157, 2.13, 1.46", "-2.43326, 5.3308, 2.52489, 1.46", "-1.75741, 6.22785, 3.25199, 1.68", "-1.25109, 6.87092, 3.84983, 1.68", "-0.859101, 7.34435, 4.37091, 1.68", "-0.244236, 8.0215, 5.30559, 0.44", "0.326898, 8.58742, 6.32891, 0.29", "0.638026, 8.76049, 7.11599, 0.29", "0.770355, 8.7477, 7.68017, 0.22", "0.890348, 8.6197, 8.59164, 0.22", "0.915502, 8.40683, 9.63801, 0.22", "0.832335, 8.27573, 10.2688, 0.22", "0.77716, 8.2851, 10.5146, 0.22", "0.688561, 8.4378, 10.9378, 0.22", "0.525732, 8.89023, 11.8001, 0.22", "0.386047, 9.25426, 12.334, 0.58", "0.139195, 9.78414, 12.9909, 0.22", "-0.083005, 10.1573, 13.446, 0.22", "-0.257356, 10.3897, 13.7608, 0.22", "-0.619481, 10.7203, 14.3063, 0.22", "-0.949651, 10.909, 14.714, 0.22", "-1.17115, 11.0324, 15.0173, 0.22", "-1.28414, 11.29, 15.4795, 0.15", "-1.24668, 11.5072, 15.7869, 0.15", "-1.20387, 11.756, 16.1374, 0.15", "-1.11283, 12.1452, 16.6438, 0.15", "-1.02083, 12.4567, 17.0635, 0.15", "-0.926971, 12.7821, 17.5636, 0.15", "-0.880621, 12.9655, 17.8836, 0.15", "-0.834481, 13.2093, 18.3057, 0.15", "-0.805621, 13.3887, 18.6342, 0.15", "-0.726187, 13.5544, 19.0187, 0.15", "-0.468759, 13.6349, 19.5983, 0.15", "-0.218036, 13.5975, 20.0635, 0.15", "0.155268, 13.4554, 20.9657, 0.15", "0.318059, 13.3798, 21.4719, 0.15", "0.422129, 13.3543, 22.1936, 0.15", "0.368573, 13.5248, 22.6737, 0.15", "0.213449, 13.9429, 23.1346, 0.15", "0.032266, 14.4134, 23.6149, 0.15", "-0.131111, 14.8375, 24.0385, 0.15", "-0.291108, 15.3011, 24.4021, 0.15", "-0.437723, 15.7604, 24.7008, 0.15", "-0.624382, 16.6152, 25.1535, 0.15", "0.99178, 20.8317, 32.1638, 0.15" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.85755, -9.14143, 2.2, 2.63", "3.15525, -10.2605, 2.49848, 2.63", "3.3135, -10.8555, 2.65715, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-5.78545, 8.29489, 0.0, 0.54602", "-14.086, 20.7889, 0.0, 0.54602", "-22.3866, 33.2829, 0.0, 0.54602" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-32.8332, 4.00736, -9.06585, 0.36", "-32.9599, 2.98077, -10.1202, 0.36", "-33.0444, 0.88601, -11.9515, 0.36", "-33.0727, 0.168584, -12.5214, 0.36", "-33.105, -0.350208, -12.8984, 0.58", "-33.1711, -1.08943, -13.393, 0.58", "-33.3597, -2.49, -14.2294, 0.36", "-33.4753, -3.21856, -14.5773, 0.88", "-33.8727, -4.82505, -15.2274, 0.36", "-34.1749, -5.61663, -15.6092, 0.66", "-34.458, -6.12006, -15.9191, 0.66", "-35.1657, -6.92137, -16.6547, 0.22", "-35.8616, -7.30771, -17.3497, 0.22", "-36.531, -7.39138, -18.1121, 0.73", "-37.3314, -7.2933, -19.0563, 0.88", "-38.1494, -7.12064, -20.033, 0.36", "-38.841, -7.02093, -20.8485, 0.36", "-39.2227, -7.02407, -21.2709, 0.36", "-40.1152, -7.27018, -22.2429, 0.36", "-40.6974, -7.5372, -22.845, 0.73", "-41.0333, -7.73946, -23.1888, 0.88", "-42.0639, -8.50447, -24.3109, 0.22", "-42.8751, -9.18544, -25.2492, 1.02", "-44.2322, -10.4995, -27.1489, 0.51", "-44.7283, -11.022, -28.0342, 0.51", "-45.2247, -11.5102, -29.0807, 0.73", "-45.636, -11.8108, -29.955, 0.73", "-45.8125, -11.8853, -30.3247, 0.73", "-46.4242, -12.0275, -31.642, 0.73", "-47.0834, -12.1044, -32.9605, 0.73", "-47.7871, -12.1516, -34.4431, 1.31", "-48.661, -12.1193, -36.2573, 0.07", "-49.3441, -12.0698, -37.7042, 0.58", "-50.7157, -12.009, -40.6794, 0.29", "-51.3544, -12.0375, -42.1411, 1.09", "-52.6592, -12.3364, -45.6866, 0.8", "-53.4095, -12.763, -48.5068, 0.58", "-53.6364, -13.02, -49.6698, 0.58", "-53.7589, -13.2029, -50.3194, 0.58", "-54.153, -13.8271, -52.1072, 0.58", "-54.4648, -14.2095, -53.1099, 0.58", "-55.0935, -14.7476, -54.4728, 0.58", "-55.5228, -15.0118, -55.2533, 0.58", "-56.0751, -15.2436, -56.1702, 0.58", "-56.7681, -15.4195, -57.2559, 0.58", "-57.8479, -15.54, -58.8554, 0.88", "-58.9409, -15.5872, -60.4279, 0.22", "-60.3191, -15.6209, -62.3503, 0.44", "-61.8965, -15.6645, -64.5028, 0.15", "-62.7205, -15.6853, -65.5903, 0.73", "-64.2287, -15.743, -67.5684, 0.07", "-65.1196, -15.8072, -68.7544, 0.29", "-66.4252, -16.0075, -70.5003, 0.58", "-67.3949, -16.2595, -71.7096, 0.07", "-67.7512, -16.4009, -72.1366, 0.07", "-68.6206, -16.8802, -73.2141, 0.07", "-69.5096, -17.4857, -74.3049, 0.58", "-70.656, -18.3705, -75.6813, 0.07", "-71.3222, -18.9639, -76.446, 0.36", "-72.7099, -20.3077, -77.9667, 0.07", "-73.6537, -21.2323, -78.8923, 0.07", "-74.1004, -21.6547, -79.2479, 0.07", "-74.5108, -22.041, -79.5206, 0.29", "-75.4996, -22.9396, -80.0875, 0.07", "-76.8457, -24.1292, -80.9764, 0.07", "-77.8436, -24.9063, -81.5961, 0.88", "-79.2255, -25.9157, -82.5036, 0.07", "-80.908, -27.0943, -83.651, 1.09", "-83.137, -28.6188, -85.2317, 0.22", "-86.0285, -30.5781, -87.3376, 0.22", "-87.6449, -31.6824, -88.513, 1.17", "-89.3864, -32.8871, -89.7779, 0.22", "-90.3204, -33.5326, -90.409, 0.22", "-91.5003, -34.351, -91.0811, 0.22", "-92.6692, -35.1951, -91.6218, 0.36", "-93.5845, -35.839, -91.8964, 0.07", "-94.5554, -36.5018, -92.1804, 0.66", "-95.6712, -37.1844, -92.4939, 0.66", "-98.065, -38.5512, -93.2877, 0.07", "-99.5306, -39.3501, -93.7703, 0.07", "-101.883, -40.5698, -94.5954, 0.66", "-103.777, -41.5108, -95.3428, 0.07", "-105.051, -42.1126, -95.9067, 0.07", "-107.123, -43.0395, -96.9336, 1.61" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-32.8332, 4.00736, -9.06585, 0.44", "-33.2738, 4.66154, -8.58945, 0.44", "-33.7446, 5.0445, -8.16409, 0.44", "-33.9307, 4.85893, -8.1157, 0.44", "-34.22, 4.49692, -8.07727, 0.44", "-34.3909, 4.27727, -8.07604, 0.44", "-34.7856, 3.79745, -8.10857, 0.58", "-35.2154, 3.31746, -8.1624, 0.36", "-36.1407, 2.3835, -8.30674, 0.51", "-36.7237, 1.86152, -8.3638, 0.29", "-37.2371, 1.46815, -8.39048, 0.29", "-37.7583, 1.13229, -8.37955, 0.44", "-38.7741, 0.607298, -8.28153, 0.73", "-39.5933, 0.286509, -8.14305, 0.88", "-40.8176, -0.0433627, -7.84503, 0.58", "-41.9166, -0.231938, -7.52577, 0.51", "-42.7436, -0.289102, -7.2588, 0.51", "-43.5147, -0.227803, -7.0129, 0.36", "-44.0455, -0.0963197, -6.86638, 0.36", "-44.6723, 0.146949, -6.72483, 0.95", "-45.2781, 0.443786, -6.62597, 1.17", "-46.1627, 0.90774, -6.51404, 1.31", "-47.5552, 1.59395, -6.42069, 0.51", "-48.4616, 1.95031, -6.43006, 0.29", "-49.0404, 2.07309, -6.47049, 0.22", "-49.4911, 2.04178, -6.52419, 0.22", "-50.1167, 1.78345, -6.64009, 0.22", "-50.8657, 1.30379, -6.85008, 0.29", "-51.854, 0.59776, -7.16735, 1.09", "-52.6342, 0.0669583, -7.35167, 0.8", "-53.4213, -0.400322, -7.47467, 0.22", "-54.4739, -0.915786, -7.56131, 0.51", "-55.7095, -1.36436, -7.57536, 0.22", "-56.955, -1.66502, -7.50177, 0.51", "-58.6841, -1.89099, -7.37757, 0.29", "-59.7415, -1.95483, -7.35865, 0.29", "-60.2694, -1.97129, -7.37569, 0.95", "-61.1051, -2.00321, -7.44458, 1.53", "-61.87, -2.07399, -7.57199, 1.53", "-63.4984, -2.40443, -8.07116, 0.44", "-64.5692, -2.76308, -8.56482, 0.36", "-65.1888, -3.0519, -8.89591, 0.36", "-65.8466, -3.41732, -9.27589, 0.36", "-66.5314, -3.85458, -9.6991, 0.36", "-67.3346, -4.41108, -10.2118, 0.36", "-67.9035, -4.83809, -10.5496, 0.22", "-68.3318, -5.09829, -10.7538, 0.22", "-68.9918, -5.28908, -10.9919, 0.66", "-69.4561, -5.27867, -11.1001, 0.66", "-70.1302, -5.17632, -11.2293, 0.22", "-70.6538, -5.09819, -11.3148, 0.22", "-71.0267, -5.12043, -11.3792, 0.22", "-71.3629, -5.2574, -11.4808, 0.22", "-71.691, -5.47145, -11.598, 0.22", "-72.3635, -5.98566, -11.8211, 0.22", "-72.8503, -6.36887, -11.9698, 0.73", "-73.62, -6.89043, -12.2132, 1.24", "-74.3495, -7.25901, -12.4321, 1.24", "-74.948, -7.43983, -12.5891, 1.24", "-76.199, -7.63937, -12.8995, 0.29", "-76.827, -7.67831, -13.0484, 0.29", "-78.1663, -7.69901, -13.3973, 0.51", "-79.2329, -7.68901, -13.6751, 0.29", "-80.3938, -7.71292, -13.9786, 0.15", "-80.9528, -7.75662, -14.1452, 0.15", "-81.4559, -7.84419, -14.3145, 0.15", "-82.2195, -8.04694, -14.5882, 0.88", "-82.7057, -8.22021, -14.7555, 0.88", "-83.5406, -8.44033, -15.0633, 0.15", "-83.9852, -8.45438, -15.2112, 0.15", "-84.4048, -8.39353, -15.3183, 0.15", "-85.9141, -8.11693, -15.7136, 0.15", "-86.5761, -7.99866, -15.8753, 0.15", "-87.475, -7.85283, -16.053, 0.15", "-88.134, -7.77216, -16.1566, 1.31", "-89.032, -7.75478, -16.2336, 1.31", "-90.6035, -7.92513, -16.242, 0.66", "-91.8087, -8.2105, -16.1, 0.22", "-92.7347, -8.48701, -15.914, 0.22", "-93.2977, -8.68151, -15.757, 0.22", "-94.2964, -9.0526, -15.4419, 0.22", "-95.02, -9.32374, -15.2149, 0.73", "-96.1833, -9.74476, -14.87, 1.46", "-96.4772, -9.84488, -14.8169, 1.46", "-97.4491, -10.1367, -14.7466, 0.88", "-98.6113, -10.4249, -14.7418, 0.29", "-99.5999, -10.6255, -14.8095, 0.8", "-100.753, -10.8539, -14.9437, 0.51", "-101.737, -11.0595, -15.1045, 0.36", "-102.064, -11.1418, -15.1661, 0.36", "-102.375, -11.2334, -15.2321, 0.36", "-103.102, -11.4797, -15.3852, 0.44", "-104.182, -11.8739, -15.6009, 0.66", "-104.659, -12.0547, -15.6956, 0.66", "-106.025, -12.5473, -15.9126, 0.44", "-106.581, -12.7417, -15.9932, 0.58", "-107.146, -12.9306, -16.0735, 0.8", "-108.14, -13.2224, -16.2097, 1.68", "-108.787, -13.3783, -16.2863, 1.68", "-110.364, -13.6832, -16.4298, 0.22", "-111.111, -13.7949, -16.4689, 0.22", "-111.899, -13.9117, -16.5046, 0.22", "-112.655, -14.0284, -16.5323, 0.22", "-113.502, -14.176, -16.5498, 0.51", "-114.452, -14.3571, -16.5659, 1.68", "-115.219, -14.5362, -16.5936, 1.68", "-117.317, -15.1099, -16.7296, 0.15", "-118.197, -15.405, -16.8113, 0.15", "-119.092, -15.7824, -16.9196, 0.58", "-119.451, -15.963, -16.9716, 0.58", "-120.69, -16.681, -17.1925, 0.15", "-121.557, -17.2363, -17.3846, 0.58", "-122.319, -17.7855, -17.5931, 0.22", "-123.025, -18.327, -17.8041, 0.36", "-123.478, -18.6872, -17.9431, 0.07", "-124.179, -19.2794, -18.1337, 0.51", "-124.755, -19.7825, -18.2691, 0.07", "-125.223, -20.2092, -18.3907, 0.07", "-125.852, -20.7919, -18.576, 1.09", "-125.988, -20.9292, -18.6243, 1.09", "-126.656, -21.665, -18.8805, 0.51", "-127.5, -22.6151, -19.1997, 0.07", "-128.23, -23.4045, -19.4806, 0.88", "-128.385, -23.5546, -19.5443, 0.88", "-129.296, -24.3251, -19.9318, 0.07", "-129.741, -24.6474, -20.114, 0.15", "-130.456, -25.0273, -20.4127, 0.15", "-131.054, -25.2533, -20.6545, 0.15", "-131.823, -25.4559, -20.9722, 0.15", "-132.708, -25.658, -21.3367, 1.53", "-133.24, -25.7514, -21.5503, 1.53", "-134.735, -26.0296, -22.0953, 0.07", "-135.208, -26.1289, -22.2612, 0.07", "-135.839, -26.2588, -22.4644, 0.07", "-136.859, -26.4597, -22.7549, 0.95", "-137.176, -26.5153, -22.8344, 0.95", "-138.762, -26.8112, -23.1619, 0.22", "-139.398, -26.9528, -23.2482, 0.22", "-140.045, -27.1149, -23.3172, 0.51", "-140.795, -27.2975, -23.3772, 0.51", "-141.491, -27.4496, -23.4344, 0.22", "-141.753, -27.5225, -23.4647, 0.22", "-142.184, -27.6754, -23.5186, 0.22", "-142.83, -27.9487, -23.5709, 0.22", "-143.07, -28.0882, -23.6029, 0.22", "-143.595, -28.4248, -23.7184, 0.22", "-144.285, -28.8607, -23.8971, 0.22", "-145.013, -29.2894, -24.0884, 0.58", "-145.522, -29.5231, -24.1992, 0.58", "-146.924, -30.0618, -24.4693, 0.29", "-147.825, -30.3837, -24.6379, 0.88", "-148.068, -30.4696, -24.6831, 1.17", "-148.683, -30.6852, -24.7879, 1.75", "-150.722, -31.3808, -25.1448, 0.22", "-151.333, -31.5924, -25.2668, 0.15", "-151.938, -31.8005, -25.3894, 0.15", "-153.128, -32.2479, -25.6554, 0.66", "-153.543, -32.4177, -25.7629, 1.17", "-154.158, -32.6812, -25.9354, 1.17", "-155.409, -33.2676, -26.3014, 0.15", "-155.924, -33.4923, -26.4406, 0.15", "-156.657, -33.7879, -26.6094, 0.15", "-157.123, -33.9622, -26.7158, 0.15", "-158.31, -34.4007, -26.9847, 0.66", "-158.811, -34.5874, -27.0837, 0.15", "-159.731, -34.9227, -27.1746, 0.58", "-160.5, -35.2085, -27.2166, 0.15", "-160.992, -35.3963, -27.2147, 0.15", "-161.42, -35.5556, -27.1852, 0.15", "-162.337, -35.8683, -27.0729, 0.15", "-163.565, -36.2348, -26.8685, 1.46", "-164.115, -36.3824, -26.7514, 1.46", "-165.364, -36.7107, -26.4769, 0.51", "-166.356, -36.9912, -26.2536, 0.22", "-166.752, -37.1158, -26.171, 0.22", "-167.076, -37.231, -26.1096, 0.22", "-167.704, -37.4757, -26.0158, 0.22", "-169.409, -38.2009, -25.7828, 0.22", "-170.196, -38.5392, -25.6622, 0.22", "-170.908, -38.842, -25.5502, 0.8", "-171.302, -38.9995, -25.4813, 0.8", "-173.095, -39.6466, -25.1446, 0.15", "-173.734, -39.8491, -25.0159, 0.36", "-174.579, -40.0884, -24.8315, 0.15", "-175.121, -40.2498, -24.7106, 0.15", "-175.656, -40.4322, -24.5639, 0.15", "-176.242, -40.6448, -24.3438, 0.15", "-176.683, -40.7971, -24.1566, 0.15", "-177.359, -41.0051, -23.8405, 0.15", "-178.156, -41.2437, -23.4601, 0.15", "-179.315, -41.5954, -22.878, 0.15", "-180.356, -41.9268, -22.3395, 1.61", "-181.808, -42.4026, -21.5305, 0.15", "-182.913, -42.8318, -20.9049, 0.36", "-183.242, -42.9779, -20.7193, 0.36", "-184.118, -43.4182, -20.2479, 0.07", "-184.697, -43.7521, -19.977, 0.07", "-185.64, -44.3534, -19.5905, 0.8", "-187.094, -45.3671, -18.9805, 0.07", "-187.392, -45.5732, -18.8689, 0.88", "-187.763, -45.8095, -18.7346, 0.88", "-188.877, -46.406, -18.3733, 0.07", "-189.386, -46.6176, -18.2404, 0.07", "-190.038, -46.8256, -18.1175, 0.07", "-190.609, -46.9494, -18.0194, 0.07", "-191.179, -47.0528, -17.9338, 0.07", "-192.005, -47.1938, -17.817, 0.58", "-192.906, -47.3315, -17.7092, 0.22", "-193.174, -47.3663, -17.6847, 0.22", "-193.747, -47.4098, -17.6631, 0.51", "-194.778, -47.4423, -17.6315, 0.07" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-20.6759, 0.75049, -16.4597, 0.58", "-20.2989, 0.8895, -17.8918, 0.58", "-19.8048, 1.33992, -20.32, 0.58", "-19.462, 1.83087, -22.2554, 0.58", "-19.152, 2.33018, -23.8084, 0.73", "-18.7351, 2.96384, -25.5725, 0.88", "-18.1127, 3.7662, -27.9632, 0.58", "-17.3485, 4.55515, -30.4475, 0.66", "-16.9235, 4.88946, -31.7416, 0.66", "-16.3421, 5.20824, -33.8118, 0.66", "-15.9228, 5.26679, -35.4959, 0.51", "-15.3469, 5.10423, -37.8393, 0.73", "-14.663, 4.75546, -40.3935, 0.44", "-14.0246, 4.34599, -42.5446, 0.44", "-13.0655, 3.62083, -45.6201, 0.44", "-12.2943, 2.9828, -48.0154, 0.44", "-11.2785, 2.14812, -51.1922, 0.44", "-10.8995, 1.88558, -52.3141, 0.66", "-10.0126, 1.37844, -54.7206, 0.44", "-8.88402, 0.81968, -57.241, 0.29", "-7.70212, 0.247325, -59.3329, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-20.6759, 0.75049, -16.4597, 2.63", "-21.2252, 0.83325, -16.6138, 2.63", "-23.5905, 1.35583, -17.4114, 0.44", "-24.3221, 1.55958, -17.6709, 0.88", "-25.4389, 1.94611, -18.0378, 0.73", "-26.215, 2.25135, -18.2974, 0.51", "-27.2651, 2.68761, -18.6679, 0.51", "-28.1981, 3.12033, -19.0223, 1.02", "-28.9678, 3.49531, -19.3267, 1.02", "-30.2343, 3.9839, -19.8341, 0.29", "-30.8202, 4.1341, -20.0669, 0.29", "-31.9019, 4.27821, -20.483, 0.29", "-32.7695, 4.26963, -20.8037, 0.88", "-33.8362, 4.0807, -21.1711, 0.36", "-34.7872, 3.78731, -21.5187, 0.22", "-35.1059, 3.66335, -21.6553, 0.22", "-35.4831, 3.52605, -21.8231, 0.22", "-35.9818, 3.36659, -22.0597, 0.22", "-36.7963, 3.18339, -22.4924, 2.12", "-37.5422, 3.13668, -22.9624, 2.48", "-38.6781, 3.22592, -23.7475, 1.46", "-39.7141, 3.37064, -24.523, 0.29", "-40.1056, 3.4366, -24.8331, 0.29", "-40.4199, 3.47841, -25.0995, 0.29", "-41.3546, 3.53471, -25.9147, 0.29", "-41.7818, 3.51585, -26.2339, 0.29", "-42.4073, 3.4166, -26.6104, 0.8", "-42.8554, 3.3252, -26.8644, 0.8", "-43.7494, 3.19217, -27.3407, 0.22", "-44.1447, 3.15361, -27.5279, 0.22", "-44.5236, 3.13579, -27.6875, 0.22", "-45.1139, 3.14766, -27.9956, 0.22", "-45.7147, 3.1946, -28.3709, 0.22", "-46.4586, 3.2706, -28.8943, 0.22", "-47.1191, 3.33758, -29.3705, 1.61", "-47.9179, 3.38479, -29.9346, 1.61", "-49.352, 3.39325, -30.8864, 0.36", "-50.1727, 3.3763, -31.4119, 0.15", "-51.2907, 3.34364, -32.0759, 0.15", "-51.7952, 3.33898, -32.3469, 1.24", "-52.4577, 3.36369, -32.6912, 1.24", "-53.5647, 3.49971, -33.2498, 0.07", "-54.2403, 3.63574, -33.5688, 0.58", "-54.8097, 3.81024, -33.841, 0.8", "-56.0364, 4.31864, -34.4554, 0.44", "-56.8812, 4.77327, -34.9813, 0.73", "-57.7031, 5.31993, -35.5848, 1.75", "-57.891, 5.46599, -35.7363, 1.75", "-58.9396, 6.3964, -36.6837, 0.22", "-59.5912, 7.09288, -37.378, 1.75", "-60.6502, 8.43777, -38.6532, 0.29", "-61.0829, 9.02456, -39.1866, 0.95", "-61.2684, 9.29778, -39.4399, 0.95", "-61.753, 10.0608, -40.1452, 0.44", "-62.1971, 10.7922, -40.8581, 0.73", "-62.3734, 11.0903, -41.1558, 0.73", "-62.865, 11.8539, -42.0607, 0.36", "-63.1578, 12.3047, -42.7162, 0.36", "-63.4972, 12.8552, -43.6307, 1.75", "-64.1682, 14.1305, -46.0202, 0.15", "-64.3325, 14.561, -46.9305, 1.53", "-64.602, 15.6393, -49.3702, 0.15", "-64.7005, 16.3125, -50.9806, 0.07", "-64.7371, 16.6403, -51.7947, 0.29", "-64.834, 17.4325, -53.8375, 0.29", "-64.9186, 17.9474, -55.1897, 0.07", "-65.1549, 18.6991, -56.8834, 0.07", "-65.3512, 19.0942, -57.5827, 0.07", "-65.695, 19.5759, -58.3142, 0.36", "-66.4534, 20.4811, -59.5202, 0.07", "-66.998, 21.0987, -60.234, 0.58", "-68.0044, 22.2927, -61.4446, 0.07", "-68.4135, 22.8404, -61.9605, 0.29", "-69.022, 23.7443, -62.8139, 0.07", "-69.767, 24.9286, -63.9115, 0.73", "-70.1548, 25.5376, -64.4504, 0.36", "-70.3927, 25.8849, -64.7504, 0.58", "-70.9959, 26.6688, -65.4937, 0.15", "-71.8628, 27.6616, -66.5378, 0.73", "-72.524, 28.3126, -67.2199, 0.07", "-72.9128, 28.6367, -67.561, 0.07", "-74.4886, 29.8455, -68.8441, 0.36", "-75.8464, 30.8134, -69.858, 0.07", "-77.5148, 31.9201, -71.0003, 0.58", "-78.6221, 32.6175, -71.725, 0.07", "-79.4101, 33.0841, -72.2319, 0.66", "-80.6077, 33.7399, -72.9893, 0.22", "-81.5223, 34.1954, -73.5298, 0.44", "-82.4879, 34.6529, -74.0611, 0.15", "-83.1255, 34.9354, -74.4019, 0.66", "-83.4968, 35.0966, -74.6221, 0.66", "-85.1356, 35.8182, -75.6956, 0.07", "-86.1185, 36.2558, -76.3837, 0.36", "-86.8385, 36.5995, -76.9338, 0.66", "-88.0009, 37.1716, -77.8155, 0.07", "-89.1412, 37.7549, -78.6538, 1.24", "-90.7648, 38.6165, -79.8107, 0.36", "-91.4354, 38.9823, -80.2789, 0.36", "-92.2178, 39.4053, -80.8218, 0.95", "-92.8556, 39.7524, -81.2484, 0.95", "-94.0639, 40.3665, -81.9461, 0.07", "-94.4769, 40.551, -82.1322, 0.36", "-95.8959, 41.1306, -82.6061, 0.07", "-96.3081, 41.2955, -82.7482, 0.07", "-97.1014, 41.618, -83.0336, 0.88", "-97.8856, 41.9105, -83.3485, 0.88", "-99.2296, 42.3196, -83.9567, 0.07", "-99.859, 42.4737, -84.3191, 1.24", "-101.685, 42.7926, -85.4806, 0.07", "-102.328, 42.8651, -85.9111, 0.66", "-103.493, 42.9349, -86.7036, 0.07", "-104.801, 42.943, -87.5767, 1.31", "-107.122, 42.8311, -89.0013, 0.22", "-108.02, 42.7517, -89.514, 0.51", "-109.255, 42.5767, -90.1572, 0.15", "-110.051, 42.4418, -90.5508, 1.09", "-110.678, 42.3342, -90.818, 1.68", "-112.544, 42.0292, -91.4438, 0.15", "-113.515, 41.8812, -91.678, 0.15", "-114.454, 41.785, -91.902, 0.44", "-115.109, 41.7565, -92.0502, 0.22", "-115.697, 41.7654, -92.1677, 0.22", "-116.507, 41.835, -92.2869, 0.51", "-117.126, 41.9125, -92.3304, 0.51", "-118.373, 42.0963, -92.3886, 0.15", "-118.909, 42.1776, -92.4093, 0.15", "-119.883, 42.3242, -92.4915, 0.73", "-120.414, 42.3809, -92.5571, 0.73", "-121.426, 42.4429, -92.7089, 0.07", "-122.058, 42.4696, -92.7823, 1.24", "-122.821, 42.515, -92.8284, 1.24", "-124.202, 42.655, -92.8142, 0.15", "-125.047, 42.815, -92.7248, 0.15", "-125.459, 42.9251, -92.6524, 0.15", "-126.423, 43.265, -92.4101, 0.15", "-127.043, 43.5109, -92.2118, 0.88", "-127.4, 43.668, -92.093, 0.88", "-128.391, 44.1292, -91.814, 0.22", "-128.865, 44.3537, -91.7352, 0.51", "-129.436, 44.6021, -91.762, 0.51", "-129.784, 44.7376, -91.838, 0.51", "-130.63, 45.0216, -92.0887, 0.15", "-131.568, 45.2906, -92.4054, 0.73", "-132.15, 45.426, -92.6206, 1.09", "-133.649, 45.7225, -93.153, 0.22", "-134.77, 45.9016, -93.5233, 1.31", "-135.098, 45.9447, -93.6302, 1.17", "-135.693, 46.001, -93.8168, 1.17", "-137.289, 46.0873, -94.2986, 0.22", "-138.176, 46.1068, -94.5682, 1.24", "-138.945, 46.0949, -94.7849, 1.24", "-140.231, 46.0578, -95.1722, 0.07", "-140.755, 46.0634, -95.3497, 0.07", "-140.991, 46.0723, -95.4378, 0.07", "-141.24, 46.0873, -95.5306, 0.07", "-141.651, 46.1319, -95.6436, 0.07", "-142.169, 46.2104, -95.7272, 0.07", "-143.258, 46.373, -95.8174, 0.36", "-143.877, 46.4594, -95.8627, 0.95", "-144.687, 46.5629, -95.9367, 1.24", "-146.621, 46.7569, -96.1295, 0.07", "-147.911, 46.8547, -96.2831, 0.29", "-149.003, 46.8921, -96.4312, 0.07", "-149.495, 46.878, -96.4799, 0.95", "-151.054, 46.7646, -96.6623, 0.22", "-151.727, 46.6724, -96.7882, 0.22", "-152.26, 46.5674, -96.9255, 0.22", "-153.417, 46.267, -97.2946, 0.51", "-155.043, 45.737, -97.8796, 0.29", "-156.209, 45.3049, -98.3231, 1.39", "-158.362, 44.4547, -99.2388, 0.29", "-158.762, 44.3023, -99.4256, 0.29", "-159.506, 44.0402, -99.8318, 0.88", "-160.279, 43.7729, -100.376, 0.29", "-160.568, 43.6641, -100.648, 0.29", "-161.229, 43.3114, -101.438, 0.66", "-161.603, 43.0853, -101.955, 0.66", "-162.284, 42.6714, -102.959, 0.36", "-162.916, 42.2778, -104.0, 0.36", "-163.385, 41.9336, -104.921, 0.95", "-163.976, 41.3076, -106.319, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-14.2067, 7.31577, 2.17153, 0.58", "-14.9168, 7.36144, 2.61436, 0.58", "-16.0097, 7.43174, 3.29598, 0.58", "-17.0449, 7.49832, 3.94156, 0.58", "-18.2526, 7.576, 4.69471, 1.17", "-19.0032, 7.62428, 5.16281, 1.02" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-14.2067, 7.31577, 2.17153, 0.88", "-14.6554, 8.11506, 1.36319, 0.88", "-15.3325, 9.32128, 0.143299, 0.95", "-15.8674, 10.274, -0.820259, 1.61" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.99178, 20.8317, 32.1638, 0.07", "2.4233, 25.7825, 39.8844, 0.07", "5.71322, 30.2623, 47.3773, 0.07", "6.76267, 35.7646, 54.7342, 0.07", "7.99425, 42.3422, 61.0225, 0.07", "10.2201, 50.0956, 65.2797, 0.07", "10.8846, 58.1382, 69.3984, 0.07", "11.3156, 65.8046, 74.2539, 0.07", "11.9191, 72.5381, 80.4334, 0.07", "13.3258, 79.3593, 86.398, 0.07", "14.4821, 85.9884, 92.639, 0.07", "16.505, 92.0761, 99.2743, 0.07", "19.281, 98.5829, 105.184, 0.07", "21.3459, 104.722, 111.755, 0.07", "23.5546, 110.498, 118.635, 0.07", "26.1626, 117.197, 124.38, 0.07", "27.8784, 123.685, 130.671, 0.07", "29.7524, 130.858, 136.042, 0.07", "32.0148, 137.206, 142.331, 0.07" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.99178, 20.8317, 32.1638, 0.07", "1.47868, 24.788, 40.4388, 0.07", "2.36455, 26.9651, 49.3832, 0.07", "1.77804, 28.2083, 58.55, 0.07", "2.70364, 30.3732, 67.4936, 0.07", "2.72562, 31.1505, 76.7347, 0.07", "2.65389, 31.1166, 86.0116, 0.07", "3.44595, 32.7453, 95.0935, 0.07", "5.64865, 36.0595, 103.395, 0.07", "7.70088, 39.3327, 111.754, 0.07", "9.99387, 42.5073, 120.091, 0.07", "13.0782, 43.8614, 128.718, 0.07", "17.3113, 46.1398, 136.605, 0.07", "23.2047, 47.0836, 143.691, 0.07", "29.0236, 47.9446, 150.85, 0.07", "33.2248, 48.3986, 159.105, 0.07", "35.9103, 49.9396, 167.83, 0.07", "38.3851, 51.302, 176.652, 0.07", "39.435, 54.2373, 185.334, 0.07", "41.1292, 56.9817, 193.981, 0.07", "41.7188, 58.9822, 202.996, 0.07", "41.0269, 61.9366, 211.712, 0.07" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "3.3135, -10.8555, 2.65715, 2.77", "4.28886, -11.2366, 2.55155, 2.77" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.3135, -10.8555, 2.65715, 2.63", "3.10104, -12.2697, 2.60435, 2.63", "2.87424, -13.7793, 2.54799, 2.34", "2.50151, -16.2604, 2.45536, 2.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-22.3866, 33.2829, 0.0, 0.1532", "-30.6871, 45.777, 0.0, 0.1532", "-38.9877, 58.271, 0.0, 0.1532" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-107.123, -43.0395, -96.9336, 0.07", "-108.7, -43.6953, -97.1445, 0.07", "-110.161, -44.2706, -97.4084, 0.51", "-111.67, -44.8388, -97.7457, 0.22", "-113.278, -45.4226, -98.1998, 0.07", "-114.734, -45.953, -98.6817, 0.29", "-115.51, -46.229, -98.9468, 0.07", "-116.884, -46.6726, -99.4361, 1.02", "-118.518, -47.1999, -100.073, 0.07", "-119.894, -47.6972, -100.612, 0.51", "-121.459, -48.3442, -101.238, 0.15", "-122.507, -48.8329, -101.611, 0.36", "-123.783, -49.5176, -102.014, 0.07", "-124.896, -50.1988, -102.291, 0.51", "-126.578, -51.3774, -102.595, 0.07", "-127.447, -52.0659, -102.68, 0.73", "-128.861, -53.3143, -102.72, 0.07", "-129.345, -53.7712, -102.725, 0.22", "-129.782, -54.1856, -102.735, 0.07", "-130.18, -54.5538, -102.713, 0.36", "-130.671, -54.9914, -102.674, 0.07", "-131.303, -55.5309, -102.655, 0.44", "-132.224, -56.1963, -102.676, 0.15", "-133.197, -56.7521, -102.817, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-107.123, -43.0395, -96.9336, 0.07", "-108.027, -43.6585, -97.729, 0.07", "-108.744, -44.2168, -98.503, 0.51", "-109.011, -44.4498, -98.8166, 0.15", "-109.63, -45.0416, -99.608, 0.44", "-110.106, -45.5031, -100.27, 0.07", "-111.022, -46.4067, -101.722, 0.07", "-111.241, -46.6433, -102.173, 0.51", "-111.393, -46.8133, -102.521, 0.36", "-111.774, -47.2517, -103.462, 0.66", "-112.181, -47.7279, -104.587, 0.36", "-112.545, -48.1548, -105.589, 0.07", "-112.752, -48.387, -106.142, 0.36", "-113.118, -48.7806, -107.098, 0.36", "-113.315, -48.9886, -107.614, 0.51", "-114.117, -49.9257, -109.756, 0.07", "-114.511, -50.4727, -110.777, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-19.0032, 7.62428, 5.16281, 0.22", "-18.3118, 6.65351, 5.56412, 0.22", "-17.4234, 4.75963, 6.20073, 0.22", "-17.0129, 3.62651, 6.52513, 0.22", "-16.7168, 2.64512, 6.77738, 0.22", "-16.3839, 1.38462, 7.08567, 0.22", "-16.1359, 0.265523, 7.36694, 0.44", "-15.9581, -1.53303, 7.7403, 0.07", "-16.0259, -2.25923, 7.92086, 0.07", "-16.1837, -2.88187, 8.1462, 0.22", "-16.3373, -3.33179, 8.33781, 0.07", "-16.5869, -3.93679, 8.66739, 0.07", "-16.7698, -4.31027, 8.94095, 0.07", "-17.5587, -5.66982, 10.2373, 0.22", "-17.9669, -6.21268, 10.8417, 0.22", "-16.4593, -17.0696, 13.229, 0.22", "-14.5346, -27.7732, 16.0096, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-19.0032, 7.62428, 5.16281, 0.15", "-19.3977, 8.71485, 5.94215, 0.15", "-19.5449, 10.0142, 7.10126, 0.29", "-19.3639, 10.6233, 7.85358, 0.29", "-18.6781, 11.324, 9.2809, 0.29", "-18.3556, 11.4823, 9.85824, 0.22", "-17.8212, 11.5551, 10.7986, 0.22", "-16.9579, 11.4251, 12.2145, 0.22", "-16.0929, 11.1009, 13.6612, 0.22", "-15.3029, 10.6655, 14.9511, 0.22", "-14.671, 10.1943, 15.9916, 0.22", "-13.9052, 9.45292, 17.4595, 0.51", "-13.6104, 9.03215, 18.1666, 0.95", "-13.3935, 8.26935, 19.2234, 1.17" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-15.8674, 10.274, -0.820259, 0.88", "-16.2847, 11.639, -0.235479, 0.88", "-16.7659, 13.226, 0.417992, 0.88", "-16.9792, 13.8826, 0.674392, 0.88", "-17.3983, 15.0858, 1.0915, 0.73", "-17.7258, 16.0258, 1.41738, 0.73", "-18.0382, 16.9225, 1.72821, 1.61", "-18.1856, 17.313, 1.83539, 1.97", "-18.4715, 18.0221, 2.00612, 1.46", "-18.9372, 19.1785, 2.26428, 0.8" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-15.8674, 10.274, -0.820259, 0.36", "-17.066, 11.081, -0.540013, 0.36", "-17.6492, 11.4269, -0.344307, 0.8", "-18.4756, 11.8665, -0.0197912, 0.8", "-19.6117, 12.4039, 0.454345, 0.66", "-20.6161, 12.7842, 0.880286, 0.8", "-21.468, 13.0595, 1.22402, 0.95", "-22.179, 13.219, 1.50296, 1.09", "-22.9463, 13.3316, 1.74377, 1.53", "-23.8997, 13.4188, 1.90546, 1.09", "-25.4441, 13.5461, 1.87979, 0.73", "-25.9705, 13.607, 1.78906, 0.73", "-27.4281, 13.8811, 1.34789, 0.73", "-28.0194, 14.0639, 1.0926, 0.73", "-29.0574, 14.5002, 0.536674, 0.73", "-29.8196, 14.9094, 0.0727829, 1.17", "-30.5509, 15.3732, -0.397549, 1.61", "-31.2453, 15.8598, -0.853095, 1.61", "-32.3419, 16.7201, -1.56652, 1.02", "-33.2193, 17.4224, -2.1161, 1.02", "-34.1161, 18.1591, -2.63914, 1.02", "-35.0807, 18.9624, -3.14796, 1.02", "-35.9788, 19.7098, -3.56673, 1.02", "-36.9586, 20.5094, -3.98138, 0.95", "-37.5511, 20.9959, -4.19558, 0.95", "-38.1246, 21.4983, -4.37089, 1.46", "-38.843, 22.1562, -4.52038, 1.82", "-39.4563, 22.7364, -4.54255, 1.82" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.28886, -11.2366, 2.55155, 0.51", "4.48907, -11.239, 2.64314, 0.51", "5.3352, -11.0953, 3.09701, 0.29", "5.74786, -10.9363, 3.41512, 0.29", "6.03796, -10.7541, 3.70988, 0.15", "6.34191, -10.4534, 4.1171, 0.15", "6.50027, -10.2368, 4.40245, 0.44", "6.68889, -9.8262, 4.87551, 0.66", "6.87004, -9.22509, 5.5093, 0.15", "6.93713, -9.04477, 5.69879, 0.15", "7.07216, -8.79443, 5.94391, 0.36", "7.47353, -8.3431, 6.3285, 0.36", "7.81336, -8.11689, 6.49634, 0.8", "8.44901, -7.84342, 6.64968, 0.8", "9.24964, -7.59192, 6.78787, 0.15", "9.99418, -7.42829, 6.89334, 0.15", "10.2918, -7.39293, 6.9193, 0.15", "10.6486, -7.39376, 6.94908, 0.15", "10.8567, -7.44414, 7.01068, 0.15", "11.3568, -7.74679, 7.24572, 0.15", "11.6092, -7.87396, 7.34709, 0.15", "11.7947, -7.99072, 7.46245, 0.15", "12.4994, -8.4092, 7.90522, 0.15", "12.8021, -8.51668, 8.03157, 0.15", "13.5148, -8.59202, 8.11762, 0.15", "14.8848, -8.60103, 8.08932, 0.15", "20.371, -6.94463, 11.5832, 0.15", "25.7264, -4.31106, 14.5787, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.28886, -11.2366, 2.55155, 0.51", "4.09584, -10.7005, 3.22625, 0.51", "3.3764, -9.49491, 4.80057, 0.73", "2.77419, -8.73604, 5.8909, 0.73", "2.25056, -8.19899, 6.72012, 0.73", "1.55629, -7.59694, 7.69046, 0.73", "0.531413, -6.85735, 8.97348, 0.73", "-0.414231, -6.37021, 9.94926, 0.73", "-1.37052, -6.04442, 10.8042, 0.73", "-2.36057, -5.84818, 11.6946, 0.73", "-3.04394, -5.77503, 12.3136, 0.73", "-4.01788, -5.76243, 13.2138, 0.73", "-4.61493, -5.8285, 13.7301, 0.73", "-3.84526, -5.80961, 13.698, 0.73", "-2.94734, -5.81553, 13.9608, 0.73", "-1.25957, -5.83654, 14.4992, 0.58", "-0.420519, -5.85938, 14.7358, 0.88", "0.51909, -5.87397, 14.9486, 0.88", "1.49369, -5.85108, 15.1459, 0.22", "2.02423, -5.81249, 15.2484, 0.22", "3.07767, -5.72481, 15.4303, 0.22", "3.99926, -5.65663, 15.6052, 0.22", "4.68033, -5.6414, 15.7311, 0.22", "5.75586, -5.69567, 15.9502, 0.22", "6.45055, -5.77058, 16.0952, 0.22", "6.60438, -2.03361, 25.8223, 0.22", "8.9337, 0.572145, 35.6804, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.50151, -16.2604, 2.45536, 1.9", "3.26331, -17.5203, 3.81971, 1.9", "3.76727, -18.7654, 4.97479, 0.88", "3.84294, -19.1262, 5.2963, 0.8", "3.87032, -19.5721, 5.68504, 0.8", "3.83751, -19.891, 5.97212, 0.8", "3.65863, -20.5071, 6.55794, 0.73", "3.07844, -20.5707, 6.80538, 0.58", "2.3221, -20.3873, 7.10523, 0.58", "2.06793, -20.2753, 7.19458, 0.58", "1.11665, -19.7846, 7.54256, 1.17", "0.474282, -19.4446, 7.8198, 1.17", "-0.821451, -18.8049, 8.50592, 1.17", "-1.64251, -18.446, 9.01344, 0.8", "-2.54383, -18.1579, 9.66866, 0.51", "-3.53903, -17.9621, 10.459, 0.51", "-4.45857, -17.9194, 11.257, 0.51", "-5.58024, -18.0382, 12.3425, 1.39", "-5.99166, -18.1595, 12.8044, 1.39", "-6.91847, -18.6374, 14.0586, 1.39", "-7.37169, -19.0263, 14.8874, 1.09", "-7.58206, -19.4039, 15.5534, 0.88", "-7.68382, -19.9593, 16.4168, 0.66", "-7.32496, -20.7358, 17.3539, 0.36", "-6.65604, -21.4912, 18.0681, 0.29", "-6.23205, -21.849, 18.3501, 0.29", "-5.56708, -22.3355, 18.7125, 0.29", "-8.99807, -25.8416, 27.4312, 0.29", "-10.5517, -27.6124, 37.2095, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.50151, -16.2604, 2.45536, 1.53", "2.34184, -17.4271, 1.98029, 1.53", "2.2044, -18.4314, 1.57135, 1.53", "2.07096, -19.4064, 1.1743, 1.97", "1.94998, -20.2904, 0.814331, 2.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-14.5346, -27.7732, 16.0096, 0.07", "-13.2295, -34.9736, 18.4488, 0.07", "-11.3914, -42.0339, 21.0001, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-14.5346, -27.7732, 16.0096, 0.07", "-13.2779, -37.9123, 19.1414, 0.07", "-13.5591, -48.1122, 22.3406, 0.07", "-13.4038, -57.7965, 26.8962, 0.07", "-15.4785, -67.7898, 30.2047, 0.07", "-19.215, -77.6483, 32.4805, 0.07", "-21.2532, -87.4685, 36.2995, 0.07", "-24.7207, -96.5754, 40.9377, 0.07", "-26.5263, -106.513, 44.5427, 0.07", "-27.5624, -116.282, 48.8211, 0.07", "-27.4797, -126.283, 52.6051, 0.07", "-27.5463, -136.486, 55.799, 0.07", "-29.0507, -147.065, 56.7741, 0.07", "-30.9177, -157.406, 58.9142, 0.07", "-32.2678, -167.269, 62.8827, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-13.3935, 8.26935, 19.2234, 0.44", "-13.2591, 9.5977, 19.3849, 0.44", "-13.1494, 11.322, 19.5112, 0.58", "-13.1148, 12.2028, 19.5289, 0.44", "-13.094, 13.1191, 19.4989, 0.22", "-13.0904, 13.8516, 19.4442, 0.22", "-13.0855, 14.8628, 19.3688, 0.22", "-13.095, 15.5482, 19.2686, 0.22", "-13.1446, 16.7153, 19.0141, 1.02", "-13.2341, 18.0432, 18.7244, 0.36", "-13.3426, 19.2689, 18.4458, 0.15", "-13.7708, 30.6622, 18.3109, 0.15" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-13.3935, 8.26935, 19.2234, 0.15", "-14.0814, 8.82522, 19.1491, 0.15", "-15.0217, 9.90024, 19.2023, 0.15", "-15.3907, 10.5306, 19.2844, 0.15", "-15.7827, 11.3585, 19.4334, 0.15", "-16.3497, 12.5524, 19.7719, 0.15", "-16.7401, 13.2809, 20.0229, 0.15", "-16.9754, 13.7335, 20.242, 0.15", "-17.3946, 14.4225, 20.6817, 0.44", "-17.9837, 15.0405, 21.2411, 0.29", "-18.9541, 15.4462, 21.974, 0.15", "-19.6471, 15.4682, 22.371, 0.15", "-20.3774, 15.398, 22.7268, 0.15", "-21.6502, 15.2255, 23.2819, 0.15", "-22.3698, 15.1099, 23.5805, 0.15", "-23.0049, 15.0098, 23.8252, 0.15", "-23.5854, 14.9826, 24.0177, 0.15", "-24.3129, 15.1399, 24.2902, 0.15", "-24.985, 15.5268, 24.5501, 0.15", "-25.5142, 15.9666, 24.7515, 0.15", "-26.0128, 16.4058, 24.9066, 0.15", "-26.3553, 16.7142, 24.9951, 0.15", "-27.0861, 17.3373, 25.1612, 0.22", "-27.535, 17.6736, 25.2565, 0.22", "-28.1288, 18.0487, 25.3895, 0.22", "-29.0478, 18.5526, 25.6204, 0.15", "-30.1858, 19.1409, 25.9817, 0.15", "-30.8668, 19.5151, 26.2497, 0.15", "-31.4497, 19.8803, 26.5142, 0.36", "-32.1964, 20.3615, 26.8844, 0.15", "-32.9895, 20.8347, 27.2703, 0.15", "-33.9088, 21.3055, 27.6721, 0.15", "-34.5905, 21.5958, 27.934, 0.15", "-35.2231, 21.7944, 28.1496, 0.15", "-36.3354, 22.1292, 28.4959, 0.15", "-38.1627, 22.637, 28.9708, 0.15", "-39.6271, 22.9889, 29.2767, 1.09", "-40.9084, 23.214, 29.4854, 1.09", "-42.5618, 23.3867, 29.737, 0.22", "-51.4742, 28.9228, 32.3493, 0.22", "-59.623, 35.7228, 33.9188, 0.22", "-68.8958, 41.2236, 33.6332, 0.22", "-76.393, 48.777, 34.3437, 0.22", "-83.8112, 56.234, 36.2466, 0.22", "-91.1438, 63.9475, 36.1444, 0.22", "-96.3484, 73.0974, 36.5282, 0.22", "-101.713, 82.1418, 37.381, 0.22", "-107.053, 91.1938, 38.3119, 0.22", "-111.64, 100.636, 38.1715, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-18.9372, 19.1785, 2.26428, 0.29", "-18.5288, 19.7414, 2.71462, 0.29", "-18.1285, 20.1374, 3.06235, 0.29", "-17.827, 20.3856, 3.29931, 0.73", "-17.5221, 20.6358, 3.51934, 1.17", "-17.3056, 20.8214, 3.67239, 1.17", "-16.738, 21.3608, 4.07627, 0.36", "-16.3108, 21.7864, 4.3382, 0.58", "-16.049, 22.1012, 4.52532, 0.36", "-15.7911, 22.6005, 4.8178, 0.22", "-15.7295, 22.9536, 5.01175, 0.22", "-15.7691, 23.4156, 5.22856, 0.22", "-15.8663, 23.8277, 5.39302, 0.22", "-16.0404, 24.518, 5.65291, 0.66", "-16.2007, 25.2312, 5.93425, 0.22", "-16.2746, 25.6871, 6.12954, 0.22", "-16.331, 26.2545, 6.39498, 0.22", "-16.3558, 26.8109, 6.6702, 0.22", "-16.365, 27.4864, 7.00489, 0.07", "-16.3344, 27.999, 7.25522, 0.44", "-16.2645, 28.5239, 7.53522, 0.22", "-16.1864, 29.0349, 7.82479, 0.07", "-16.1408, 29.432, 8.07968, 0.51", "-16.149, 29.8094, 8.33379, 0.15", "-15.6224, 34.5128, 12.2011, 0.15", "-14.1872, 39.3602, 15.613, 0.15", "-12.3584, 44.6389, 17.9648, 0.15", "-10.3712, 49.5516, 20.972, 0.15", "-9.04874, 54.4181, 24.3996, 0.15", "-8.6173, 59.4704, 27.7589, 0.15", "-7.30067, 64.138, 31.482, 0.15", "-5.90357, 68.7684, 35.2269, 0.15", "-4.0031, 73.4951, 38.5982, 0.15", "-3.08832, 78.6414, 41.6913, 0.15", "-2.53482, 83.6109, 45.167, 0.15", "-1.73651, 88.1884, 49.1527, 0.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-18.9372, 19.1785, 2.26428, 0.44", "-19.6232, 19.5142, 2.61758, 0.44", "-20.153, 19.8984, 3.00111, 0.44", "-20.4811, 20.2052, 3.26889, 0.44", "-20.8891, 20.645, 3.60633, 0.44", "-21.2942, 21.0926, 3.89658, 0.44", "-21.889, 21.7591, 4.29374, 0.66", "-22.2488, 22.2167, 4.55323, 0.88", "-22.5524, 22.6042, 4.75659, 1.09", "-22.8518, 22.9553, 4.91837, 1.24", "-23.6063, 23.6973, 5.2127, 0.36", "-24.1299, 24.0882, 5.35018, 0.22", "-24.5605, 24.3114, 5.42617, 0.22", "-25.1877, 24.5304, 5.50685, 0.22", "-25.6367, 24.6454, 5.53834, 0.22", "-26.1787, 24.7682, 5.54485, 0.22", "-26.8483, 24.9387, 5.50506, 0.66", "-27.2781, 25.0863, 5.449, 0.88", "-27.8645, 25.4051, 5.37133, 0.44", "-28.3071, 25.8085, 5.3575, 0.29", "-28.6764, 26.3074, 5.40502, 0.29", "-29.0298, 26.9075, 5.52013, 0.66", "-29.1864, 27.209, 5.60532, 0.66", "-29.4817, 27.8168, 5.83575, 0.36", "-29.826, 28.5459, 6.17468, 0.22", "-29.9448, 28.7898, 6.30356, 0.22", "-30.2126, 29.2745, 6.58336, 0.22", "-30.5956, 29.838, 6.91977, 0.22", "-30.9513, 30.2099, 7.16041, 0.22", "-31.3213, 30.5341, 7.35749, 0.15", "-31.5673, 30.7173, 7.46157, 0.15", "-31.9467, 30.9651, 7.61643, 0.51", "-32.6529, 31.341, 7.90159, 0.29", "-33.5808, 31.5821, 8.24566, 0.07", "-40.1488, 35.2486, 10.246, 0.07", "-46.7154, 39.028, 12.0062, 0.07", "-53.2653, 43.1465, 12.638, 0.07", "-60.2262, 46.469, 13.8125, 0.07", "-67.3549, 49.6504, 14.0596, 0.07", "-74.0987, 53.5184, 13.7927, 0.07", "-80.4793, 57.8937, 14.2217, 0.07", "-86.989, 62.0362, 13.3464, 0.07", "-92.5731, 66.9216, 11.2011, 0.07", "-98.3037, 71.8006, 9.47026, 0.07", "-103.802, 76.7926, 7.37709, 0.07", "-110.263, 81.035, 6.68745, 0.07", "-116.449, 85.3617, 4.90301, 0.07", "-121.469, 91.0577, 3.88009, 0.07", "-126.774, 96.4844, 2.68734, 0.07", "-130.675, 102.99, 2.67044, 0.07", "-133.755, 109.856, 2.00899, 0.07", "-135.391, 117.158, 1.41591, 0.07" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-39.4563, 22.7364, -4.54255, 0.51", "-40.4377, 22.8547, -3.59798, 0.51", "-41.1665, 22.945, -3.01029, 0.51", "-42.5025, 23.1994, -2.03425, 0.51", "-43.0764, 23.3521, -1.62944, 0.51", "-44.2628, 23.767, -0.83804, 0.66", "-45.0455, 24.1356, -0.385379, 0.58", "-45.9646, 24.6659, -0.0506042, 0.51", "-46.7146, 25.2047, 0.117303, 0.51", "-47.3538, 25.7402, 0.184343, 0.51", "-48.0597, 26.4116, 0.225031, 0.51", "-49.4696, 27.8207, 0.176733, 0.51", "-50.5148, 28.8023, 0.0329246, 0.51", "-51.0315, 29.2246, -0.0790628, 0.51", "-51.7747, 29.7063, -0.27182, 0.88", "-52.1022, 29.8623, -0.358224, 1.09", "-53.7055, 30.3225, -0.668908, 0.51", "-54.6764, 30.4403, -0.730625, 0.51", "-55.2588, 30.4707, -0.703181, 0.51", "-55.9751, 30.5101, -0.650942, 0.51", "-57.0019, 30.6167, -0.568911, 0.51", "-58.1578, 30.8245, -0.478058, 0.66", "-59.6132, 31.2624, -0.346066, 1.02", "-61.0339, 31.9091, -0.235341, 0.66", "-62.1209, 32.573, -0.201711, 0.51", "-63.3906, 33.5615, -0.246356, 0.44", "-64.2191, 34.3285, -0.342625, 0.88", "-65.0856, 35.2083, -0.506649, 0.66", "-65.9657, 36.1416, -0.699955, 0.51", "-66.5506, 36.7301, -0.831348, 0.51", "-67.2411, 37.3195, -0.985833, 0.36", "-68.0597, 37.833, -1.19139, 0.58", "-69.2022, 38.2735, -1.53205, 0.95", "-70.0553, 38.4615, -1.81113, 1.17", "-71.5202, 38.6495, -2.27259, 0.51", "-72.139, 38.7058, -2.44664, 0.51", "-73.1502, 38.7845, -2.68904, 0.44", "-74.229, 38.8996, -2.87822, 0.44", "-74.8451, 39.0012, -2.92107, 0.44", "-75.8674, 39.2492, -2.88353, 0.44", "-77.2795, 39.7029, -2.68131, 0.51", "-78.0153, 39.9763, -2.52789, 0.51", "-79.021, 40.3985, -2.26985, 1.61", "-79.8773, 40.7704, -2.03107, 2.12", "-80.7387, 41.1417, -1.7897, 2.12", "-82.0421, 41.6945, -1.44687, 0.88", "-82.7663, 42.0012, -1.25121, 0.58", "-83.1457, 42.153, -1.15684, 0.73", "-84.6481, 42.7, -0.808085, 0.51", "-85.6853, 43.047, -0.57799, 0.8", "-86.3214, 43.247, -0.425831, 1.02", "-87.1557, 43.5023, -0.214107, 0.73", "-88.34, 43.8542, 0.0531077, 0.51", "-89.5748, 44.2131, 0.295132, 0.44", "-90.405, 44.4562, 0.427717, 0.8", "-91.3758, 44.7434, 0.59533, 1.02", "-92.9401, 45.2298, 0.915711, 0.51", "-94.0642, 45.6062, 1.21077, 0.66", "-94.8859, 45.9201, 1.5266, 0.44", "-95.5554, 46.2275, 1.91235, 0.44", "-96.5929, 46.8501, 2.83859, 0.22", "-97.0149, 47.2678, 3.49681, 0.15", "-97.3474, 47.8798, 4.45885, 0.15", "-97.5184, 48.4099, 5.2055, 0.15", "-97.5829, 48.818, 5.68836, 0.36", "-97.6342, 49.2973, 6.20045, 0.36", "-97.744, 50.0732, 6.83761, 0.07", "-97.8753, 50.5977, 7.19556, 0.07", "-98.0528, 51.2058, 7.49634, 0.36", "-98.2705, 52.0187, 7.81493, 0.07", "-105.746, 55.9579, 10.6732, 0.07", "-113.454, 58.9434, 14.1235, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-39.4563, 22.7364, -4.54255, 0.44", "-40.0694, 23.3605, -4.14637, 0.44", "-40.5491, 23.9015, -3.86546, 0.44", "-41.2818, 24.9272, -3.42514, 0.44", "-41.8189, 25.8605, -3.08146, 0.44", "-42.2577, 26.9287, -2.78619, 0.88", "-42.5353, 27.8402, -2.57243, 0.88", "-42.734, 29.0848, -2.41512, 0.36", "-42.8085, 30.3698, -2.37917, 0.36", "-42.7741, 31.2063, -2.48056, 0.36", "-42.6098, 32.8468, -2.91177, 0.36", "-42.5222, 33.5459, -3.21989, 0.36", "-42.4566, 34.5369, -3.86709, 0.36", "-42.5258, 35.1544, -4.3742, 0.58", "-42.7805, 36.1073, -5.1943, 0.58", "-43.0033, 36.8452, -5.71535, 0.29", "-43.1242, 37.2657, -5.93307, 0.29", "-43.3346, 38.1931, -6.21986, 0.29", "-43.6351, 39.9197, -6.437, 0.29", "-43.8273, 41.1672, -6.47401, 0.29", "-44.0645, 42.5101, -6.44736, 1.09", "-44.1926, 43.1349, -6.4361, 1.09", "-44.4969, 44.2571, -6.43381, 0.22", "-44.7646, 44.9314, -6.45702, 0.22", "-45.1073, 45.5243, -6.52815, 0.22", "-45.7412, 46.3851, -6.71687, 0.22", "-46.4064, 47.2082, -6.99468, 0.51", "-47.0426, 47.9882, -7.27675, 1.02", "-47.7292, 48.8811, -7.59319, 1.24", "-48.268, 49.6367, -7.83155, 1.24", "-49.4686, 51.5629, -8.33014, 0.22", "-50.2422, 53.1685, -8.61348, 0.22", "-50.6, 54.128, -8.70224, 0.36", "-50.8912, 55.0676, -8.74487, 0.66", "-51.0586, 55.6896, -8.75565, 0.88", "-51.2822, 56.5498, -8.7291, 0.88", "-51.7005, 57.9911, -8.61425, 0.15", "-52.034, 58.6071, -8.57647, 0.58", "-53.1246, 59.8678, -8.4748, 0.15", "-54.2925, 60.8558, -8.38779, 0.66", "-54.9378, 61.3119, -8.34246, 1.68", "-56.2179, 62.1088, -8.23767, 2.41", "-58.5879, 63.4949, -8.02347, 0.58", "-60.2238, 64.4863, -7.8347, 0.36", "-61.1366, 65.112, -7.65864, 0.15", "-61.4613, 65.3665, -7.58303, 0.15", "-62.0294, 65.885, -7.43175, 0.15", "-62.7585, 66.7364, -7.20235, 0.73", "-63.1612, 67.3439, -7.05357, 0.73", "-63.8974, 68.4827, -6.81004, 0.29", "-64.3627, 69.1508, -6.63384, 0.29", "-65.3186, 70.3774, -6.33612, 1.02", "-65.9263, 71.1051, -6.21214, 1.17", "-67.2029, 72.5018, -6.06897, 0.15", "-67.7594, 73.074, -6.0632, 0.36", "-68.1219, 73.4481, -6.12312, 0.36", "-69.1017, 74.5479, -6.42473, 0.07", "-69.8738, 75.5757, -6.81406, 0.66", "-70.301, 76.1903, -7.07839, 1.24", "-70.5666, 76.5825, -7.26671, 1.24", "-71.3278, 77.6213, -7.81222, 0.15", "-71.6338, 77.9992, -8.04004, 0.15", "-72.1162, 78.514, -8.36294, 0.15", "-72.6699, 78.9757, -8.67518, 0.15", "-73.2603, 79.4048, -9.04106, 0.15", "-74.1724, 80.0092, -9.62451, 0.66", "-75.1858, 80.6305, -10.2677, 1.53", "-75.7913, 81.0084, -10.661, 2.04", "-77.0385, 81.8407, -11.4873, 1.61", "-78.593, 83.0104, -12.4916, 0.15", "-78.9292, 83.3155, -12.6639, 0.15", "-79.264, 83.6833, -12.7665, 0.15", "-79.7652, 84.3386, -12.8185, 0.15", "-80.2756, 85.1544, -12.813, 0.95", "-80.6242, 85.8103, -12.7573, 1.09", "-81.4866, 87.4435, -12.4969, 0.22", "-81.6988, 87.8121, -12.4602, 0.22", "-81.9058, 88.1101, -12.4596, 0.22", "-82.4277, 88.6111, -12.6047, 0.22", "-83.0529, 88.869, -13.071, 0.44", "-83.5615, 88.9734, -13.5952, 0.44", "-84.2139, 89.2031, -14.3928, 0.15", "-84.4448, 89.3443, -14.6149, 0.15", "-84.8215, 89.6269, -14.8999, 0.15", "-85.2965, 90.0757, -15.1977, 0.44", "-85.8877, 90.7946, -15.5815, 0.22", "-86.7274, 92.0051, -16.1067, 0.73", "-87.3634, 93.0088, -16.4581, 1.53", "-87.6345, 93.4482, -16.6007, 1.53", "-88.5583, 94.9256, -17.022, 0.07", "-89.1877, 95.9137, -17.278, 0.07", "-89.5476, 96.4888, -17.4011, 0.88", "-90.0875, 97.3314, -17.4898, 1.46", "-90.552, 98.1012, -17.533, 1.46", "-91.658, 99.8984, -17.5409, 0.15", "-92.2045, 100.672, -17.4976, 0.15", "-92.8388, 101.504, -17.4539, 0.66", "-93.8258, 102.81, -17.402, 0.07", "-94.7654, 104.257, -17.3375, 0.36", "-94.9909, 104.674, -17.3215, 0.36", "-95.6546, 106.051, -17.2882, 0.07", "-96.1124, 106.949, -17.2883, 0.58", "-96.6019, 107.887, -17.3607, 0.88", "-97.3728, 109.306, -17.5694, 0.07", "-97.8267, 110.07, -17.6858, 0.73", "-98.0275, 110.377, -17.7391, 0.73", "-99.0522, 111.827, -18.1019, 0.07", "-99.991, 112.899, -18.4782, 1.02", "-100.619, 113.484, -18.7662, 1.61", "-101.023, 113.787, -18.9624, 1.61", "-102.058, 114.458, -19.4813, 0.73", "-103.354, 115.31, -20.2538, 0.07", "-104.105, 115.811, -20.7545, 0.07", "-104.42, 116.012, -20.9593, 0.07", "-104.851, 116.319, -21.2639, 0.58", "-105.388, 116.733, -21.6429, 0.8", "-106.796, 117.876, -22.5825, 0.29", "-107.55, 118.518, -23.0564, 0.51", "-107.973, 118.917, -23.343, 0.51", "-109.06, 119.951, -24.0865, 0.07", "-109.726, 120.565, -24.5422, 0.8", "-110.181, 120.964, -24.8766, 0.8", "-111.693, 122.241, -26.0582, 0.07", "-112.829, 123.241, -26.971, 0.66", "-113.446, 123.814, -27.4758, 1.46", "-113.763, 124.112, -27.7411, 1.46", "-114.923, 125.252, -28.8118, 0.29", "-115.606, 125.93, -29.4449, 0.29", "-116.576, 126.927, -30.2984, 0.07", "-117.366, 127.773, -30.9591, 0.66", "-118.149, 128.709, -31.614, 1.82", "-119.24, 130.174, -32.5275, 0.29", "-119.842, 131.04, -32.9964, 0.8", "-120.867, 132.522, -33.8223, 0.15", "-121.204, 133.008, -34.1062, 0.36", "-121.84, 133.857, -34.581, 0.73", "-122.461, 134.625, -34.9871, 0.07", "-123.004, 135.193, -35.301, 0.88", "-124.131, 136.09, -35.9172, 0.07", "-124.845, 136.467, -36.2073, 0.29", "-125.966, 136.981, -36.6143, 0.07", "-126.502, 137.242, -36.7934, 0.66", "-127.115, 137.587, -36.9623, 0.95", "-128.351, 138.392, -37.2554, 0.07", "-129.448, 139.214, -37.4456, 0.07", "-131.054, 140.624, -37.6961, 0.07", "-132.334, 141.941, -37.8771, 0.07", "-133.389, 143.232, -38.0496, 0.44", "-133.75, 143.753, -38.101, 0.29", "-134.127, 144.375, -38.1441, 1.09", "-134.602, 145.242, -38.163, 1.09", "-135.496, 146.96, -38.0467, 0.07", "-136.546, 149.012, -37.8247, 0.07", "-137.145, 150.252, -37.6806, 1.17", "-137.375, 150.736, -37.6219, 0.95", "-138.089, 152.185, -37.4274, 0.22", "-138.395, 152.769, -37.3292, 0.07", "-138.582, 153.075, -37.2456, 0.07", "-139.05, 153.713, -37.0182, 0.29", "-139.693, 154.515, -36.7397, 0.07", "-140.147, 155.138, -36.5981, 0.51", "-140.453, 155.613, -36.5388, 0.51", "-141.168, 157.022, -36.5197, 0.07", "-141.521, 157.91, -36.6048, 0.95", "-141.683, 158.41, -36.7194, 1.17", "-142.478, 161.181, -37.6638, 0.07", "-142.739, 162.164, -38.1114, 0.88", "-143.22, 164.178, -39.1409, 0.22", "-143.576, 165.913, -40.1451, 0.44", "-143.904, 167.568, -41.1989, 0.44", "-144.039, 168.326, -41.7509, 1.09", "-144.148, 168.98, -42.402, 1.09" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "25.7264, -4.31106, 14.5787, 0.07", "34.344, -1.60354, 19.1684, 0.07", "42.4808, 1.80178, 24.1061, 0.07", "51.0765, 4.95972, 28.4093, 0.07", "59.9301, 8.14541, 32.129, 0.07", "69.0292, 11.8261, 34.5157, 0.07", "78.8525, 14.2252, 35.3148, 0.07", "88.7575, 15.8102, 36.926, 0.07", "98.7988, 17.361, 36.8218, 0.07", "108.24, 20.4885, 34.9249, 0.07", "117.33, 24.6183, 33.4854, 0.07", "125.862, 29.2759, 30.8764, 0.07", "133.593, 34.1869, 26.7309, 0.07", "141.765, 39.5956, 24.6188, 0.07", "149.006, 46.3877, 24.3951, 0.07", "156.362, 52.9898, 25.4655, 0.07", "164.558, 58.7099, 25.0556, 0.07", "173.783, 62.5871, 26.3892, 0.07", "182.579, 67.2895, 27.6798, 0.07", "191.772, 71.1557, 29.2454, 0.07", "200.869, 75.4426, 29.8913, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "25.7264, -4.31106, 14.5787, 0.07", "32.4033, -2.08595, 18.9599, 0.07", "38.8859, -0.897694, 24.0259, 0.07", "45.9669, 1.94382, 27.2284, 0.07", "53.1927, 4.04627, 30.7227, 0.07", "60.1721, 5.82141, 34.8554, 0.07", "66.8395, 7.65783, 39.4453, 0.07", "72.9958, 9.92264, 44.5076, 0.07", "77.9083, 13.6805, 49.9204, 0.07", "83.179, 17.433, 54.994, 0.07", "89.0313, 21.2281, 59.3536, 0.07", "94.664, 24.1539, 64.6398, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.9337, 0.572145, 35.6804, 0.07", "11.7571, 4.42484, 45.8286, 0.07", "13.304, 6.62652, 56.7738, 0.07" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "8.9337, 0.572145, 35.6804, 0.07", "10.7161, 2.95395, 41.7745, 0.07", "12.0372, 4.71169, 48.2151, 0.07", "14.1667, 6.19477, 54.5029, 0.07", "15.4518, 7.73523, 61.011, 0.07", "16.8523, 8.37765, 67.656, 0.07", "18.8979, 7.104, 74.0335, 0.07", "20.791, 6.42129, 80.552, 0.07", "22.4466, 4.5663, 86.886, 0.07", "23.7878, 2.05515, 93.0428, 0.07", "24.9956, -1.74829, 98.4646, 0.07", "27.341, -5.47503, 103.596, 0.07", "29.7554, -9.98862, 107.97, 0.07", "32.9037, -14.4278, 111.971, 0.07" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.5517, -27.6124, 37.2095, 0.07", "-12.1456, -30.7917, 47.2388, 0.07" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.5517, -27.6124, 37.2095, 0.07", "-13.6227, -30.0531, 44.6142, 0.07", "-16.8256, -31.1056, 52.3255, 0.07", "-18.6308, -33.3462, 60.2064, 0.07", "-19.6063, -34.5807, 68.4742, 0.07", "-19.0675, -36.5491, 76.6258, 0.07", "-18.2492, -38.3851, 84.789, 0.07", "-17.8588, -39.5172, 93.1232, 0.07", "-16.9083, -39.5192, 101.498, 0.07", "-16.9146, -38.9852, 109.908, 0.07", "-16.7162, -39.8593, 118.283, 0.07" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.94998, -20.2904, 0.814331, 0.88", "1.80058, -21.8018, -0.283592, 0.88", "1.74999, -22.4951, -0.849192, 0.88", "1.62009, -23.722, -2.04858, 0.73", "1.45065, -24.6547, -3.1278, 0.73", "1.25402, -25.3848, -4.04713, 0.73", "1.18521, -25.5991, -4.31571, 0.73", "1.05129, -25.9147, -4.73573, 0.73", "0.857212, -26.6764, -5.60644, 0.73", "0.845375, -27.3017, -6.07369, 0.73", "0.988829, -28.0753, -6.39395, 0.73", "1.29423, -29.1075, -6.57698, 0.73", "1.8484, -30.6811, -6.57679, 0.73", "2.32549, -31.9828, -6.42416, 0.73", "2.70863, -33.0339, -6.20271, 0.73", "3.14158, -34.3438, -5.82034, 0.88", "3.42695, -35.3769, -5.42725, 0.66", "3.65849, -36.6153, -4.85685, 0.66", "3.69519, -37.3216, -4.51116, 0.66", "3.65744, -38.204, -4.13039, 0.51", "3.5896, -39.4636, -3.71594, 0.66", "3.57644, -40.3691, -3.50635, 0.66", "3.61406, -40.9149, -3.41935, 0.66", "3.87274, -42.3963, -3.26872, 0.66", "4.51796, -44.449, -3.04918, 0.58", "5.16454, -45.8213, -2.90853, 0.58", "5.82177, -46.8716, -2.80296, 0.58", "6.19974, -47.3718, -2.75058, 0.88", "6.7183, -47.9335, -2.65996, 0.88", "7.81515, -48.8094, -2.41418, 0.88", "8.52042, -49.2155, -2.18898, 0.88", "8.82648, -49.4392, -2.03977, 0.88", "9.18908, -49.9645, -1.76707, 0.88", "9.35581, -50.4862, -1.55587, 0.88", "9.47443, -51.199, -1.34148, 0.88", "9.57599, -52.22, -1.08716, 0.88", "9.69772, -53.9981, -0.754792, 0.58", "9.76368, -55.2762, -0.595934, 0.95", "9.81585, -56.3858, -0.47428, 1.09", "9.88579, -58.3242, -0.249754, 0.88", "9.88834, -59.4369, -0.0661257, 0.88", "9.82919, -60.8547, 0.230982, 0.88", "9.63066, -63.353, 0.954458, 0.66", "9.45732, -64.7107, 1.47811, 0.88", "9.30375, -65.5215, 1.89703, 1.24", "8.81163, -67.1732, 3.06213, 0.66", "8.56941, -67.8296, 3.67178, 0.66", "8.21118, -68.7686, 4.76472, 0.51", "8.01199, -69.3787, 5.59353, 0.51", "7.93947, -69.9492, 6.29242, 0.51", "8.17238, -70.3784, 6.5671, 0.51", "9.05716, -71.1556, 6.75525, 0.51", "10.3566, -72.1716, 6.91701, 0.29", "11.6866, -73.1727, 6.99034, 0.51", "13.0863, -74.3038, 7.03644, 0.44", "14.2537, -75.3292, 7.12763, 0.44", "15.4865, -76.4603, 7.36289, 0.66", "15.8837, -76.8462, 7.48079, 0.88", "16.4765, -77.4328, 7.7543, 0.88", "17.6699, -78.6232, 8.51098, 0.36", "18.8043, -79.6969, 9.3915, 0.36", "19.8907, -80.7756, 10.3589, 0.22", "20.0704, -80.945, 10.5164, 0.22", "20.9268, -81.64, 11.299, 0.29", "21.498, -81.9404, 11.8391, 0.07", "22.2897, -81.7527, 12.3348, 0.15", "27.029, -91.168, 14.5659, 0.15", "31.8363, -100.332, 17.6344, 0.15", "38.0953, -108.291, 21.6571, 0.15", "44.6249, -116.626, 24.1339, 0.15", "52.9477, -123.266, 26.8973, 0.15", "61.2919, -129.636, 30.2333, 0.15", "68.9557, -136.708, 33.6286, 0.15", "76.9341, -142.981, 37.9129, 0.15", "83.8354, -149.811, 43.0275, 0.15", "91.2266, -156.325, 47.9145, 0.15", "97.4962, -163.957, 52.5667, 0.15", "102.364, -171.599, 58.6369, 0.15", "107.449, -179.318, 64.4167, 0.15", "110.338, -187.694, 70.6591, 0.15", "111.91, -196.223, 77.1267, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "1.94998, -20.2904, 0.814331, 1.53", "1.12118, -20.8766, 0.5543, 1.53", "-0.081504, -21.6743, 0.218271, 1.24", "-1.15936, -22.3892, -0.0828805, 1.09", "-2.14982, -23.0461, -0.359612, 0.88", "-3.35568, -23.846, -0.696529, 1.09", "-3.9694, -24.253, -0.868001, 1.31", "-4.76788, -24.7928, -1.12324, 1.68" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-11.3914, -42.0339, 21.0001, 0.07", "-8.806, -46.7265, 26.2401, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-11.3914, -42.0339, 21.0001, 0.07", "-10.4251, -49.0772, 22.8209, 0.07", "-9.0728, -56.1449, 24.267, 0.07", "-6.75752, -62.8795, 26.1687, 0.07", "-5.88352, -69.7325, 28.6855, 0.07", "-4.52057, -76.4215, 31.4573, 0.07", "-4.79246, -83.4091, 33.6874, 0.07", "-4.16175, -90.5745, 35.0925, 0.07", "-2.3986, -97.674, 35.7369, 0.07", "-1.67466, -104.918, 36.5543, 0.07", "-0.354887, -112.134, 36.3564, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-13.7708, 30.6622, 18.3109, 0.07", "-14.1685, 36.8726, 17.7272, 0.07", "-14.9101, 43.072, 17.3602, 0.07", "-15.1218, 49.3251, 17.2243, 0.07", "-15.7813, 55.5477, 17.1096, 0.07", "-15.8929, 61.6248, 15.6718, 0.07", "-15.2573, 67.831, 15.1555, 0.07", "-13.6262, 73.9057, 15.51, 0.07", "-11.0982, 79.7038, 15.6394, 0.07", "-8.35057, 85.258, 14.3914, 0.07", "-6.33744, 90.8925, 12.4401, 0.07", "-4.69304, 96.3597, 9.79615, 0.07", "-2.41855, 101.742, 7.41713, 0.07", "1.09747, 106.578, 5.22172, 0.07", "5.51964, 110.685, 3.00864, 0.07", "10.4237, 114.141, 0.591514, 0.07" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-13.7708, 30.6622, 18.3109, 0.07", "-12.5447, 39.7102, 19.4415, 0.07", "-12.6575, 48.819, 20.7163, 0.07", "-12.3218, 57.7013, 23.2463, 0.07", "-12.1549, 66.7186, 25.1528, 0.07", "-11.7192, 75.859, 25.9567, 0.07", "-13.0036, 84.8997, 27.1114, 0.07", "-12.5103, 93.9735, 28.5763, 0.07", "-10.9465, 102.995, 29.4492, 0.07", "-8.78984, 111.925, 29.2711, 0.07", "-8.09682, 120.907, 27.6264, 0.07", "-6.22923, 129.901, 27.7252, 0.07", "-3.96578, 138.78, 27.0772, 0.07", "-1.17546, 147.512, 28.1444, 0.07", "3.24946, 155.654, 28.2877, 0.07", "6.87018, 164.113, 27.6183, 0.07", "11.2879, 172.257, 27.9439, 0.07", "14.1154, 180.934, 26.8085, 0.07", "15.3445, 189.539, 23.8788, 0.07", "14.7574, 198.512, 22.1428, 0.07", "12.6951, 207.196, 19.9854, 0.07" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-111.64, 100.636, 38.1715, 0.07", "-119.151, 107.988, 39.7725, 0.07", "-125.622, 116.257, 40.8549, 0.07" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-111.64, 100.636, 38.1715, 0.07", "-119.626, 108.204, 39.6453, 0.07" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-113.454, 58.9434, 14.1235, 0.07", "-123.124, 63.6936, 16.6027, 0.07", "-133.17, 67.3296, 19.5958, 0.07", "-143.64, 68.9412, 23.0581, 0.07", "-154.71, 69.4763, 24.3785, 0.07", "-165.71, 68.7265, 26.0905, 0.07", "-176.501, 66.9602, 28.2536, 0.07", "-187.497, 67.3772, 30.1193, 0.07", "-198.387, 69.0071, 31.8848, 0.07", "-209.223, 69.6336, 34.4785, 0.07" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-113.454, 58.9434, 14.1235, 0.07", "-124.247, 63.7915, 16.691, 0.07", "-134.733, 68.0237, 21.0564, 0.07" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-144.148, 168.98, -42.402, 0.36", "-143.956, 169.354, -42.7656, 0.36", "-143.732, 169.872, -43.3528, 0.36", "-143.587, 170.297, -43.796, 0.58", "-143.295, 171.178, -44.6372, 0.58", "-142.997, 171.977, -45.4078, 0.36", "-142.659, 172.895, -46.3006, 0.36", "-142.312, 174.03, -47.4002, 0.36", "-142.136, 174.805, -48.1074, 0.51", "-142.052, 175.415, -48.5915, 0.36", "-142.048, 176.161, -49.0563, 0.58", "-142.23, 177.312, -49.6067, 0.36", "-142.465, 178.176, -49.9425, 0.88", "-142.897, 179.428, -50.3725, 0.22", "-143.182, 180.095, -50.5998, 0.73", "-143.654, 181.024, -50.894, 0.07", "-143.988, 181.619, -51.0506, 0.29", "-144.867, 183.067, -51.3944, 0.07" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-144.148, 168.98, -42.402, 0.07", "-143.04, 168.736, -44.4292, 0.07", "-142.165, 168.48, -45.8026, 0.73", "-141.044, 168.132, -47.4148, 0.15", "-140.475, 167.934, -48.21, 0.15", "-139.719, 167.651, -49.2825, 0.36", "-138.872, 167.332, -50.5087, 0.07", "-137.864, 166.917, -51.9353, 0.8", "-137.044, 166.569, -53.0564, 0.15", "-136.696, 166.432, -53.5627, 0.44", "-135.358, 165.903, -55.7274, 0.15", "-134.569, 165.564, -57.1239, 0.44", "-133.614, 165.096, -58.9529, 0.15", "-132.771, 164.587, -60.7079, 0.29", "-132.081, 164.143, -62.2004, 0.07", "-131.581, 163.809, -63.2985, 0.07", "-131.306, 163.583, -63.9383, 0.29", "-130.675, 162.909, -65.5409, 0.07", "-130.342, 162.406, -66.5316, 0.51" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "94.664, 24.1539, 64.6398, 0.07", "102.68, 27.4617, 70.3423, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "94.664, 24.1539, 64.6398, 0.07", "104.59, 28.2651, 72.0094, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.7162, -39.8593, 118.283, 0.07", "-21.2419, -36.679, 132.773, 0.07" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-16.7162, -39.8593, 118.283, 0.07", "-15.3141, -42.6168, 124.332, 0.07", "-14.8903, -44.0476, 130.99, 0.07" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.76788, -24.7928, -1.12324, 0.22", "-5.82397, -26.4022, -1.39427, 0.22", "-6.48866, -27.4452, -1.49902, 0.88", "-7.24806, -28.6819, -1.43107, 0.44", "-7.65718, -29.3572, -1.33875, 0.44", "-8.249, -30.4199, -1.09332, 0.44", "-8.90344, -31.6273, -0.730539, 0.22", "-9.35884, -32.5804, -0.363622, 0.22", "-10.0369, -33.9866, 0.26425, 1.09", "-10.2492, -34.4399, 0.508304, 1.31", "-10.8073, -35.8303, 1.294, 0.22", "-11.0578, -36.6082, 1.73139, 0.22", "-11.3188, -37.7125, 2.29909, 0.22", "-11.4297, -38.3904, 2.57362, 0.44", "-11.5387, -39.4724, 2.90785, 0.22", "-11.568, -40.4126, 3.1571, 0.22", "-11.5459, -41.1697, 3.31427, 0.22", "-11.4198, -42.792, 3.60125, 0.15", "-11.2907, -44.0146, 3.80824, 0.15", "-11.1674, -45.1747, 4.00729, 0.15", "-11.0629, -46.4007, 4.2187, 0.15", "-10.9353, -48.0091, 4.48453, 0.15", "-10.8155, -49.1627, 4.64805, 0.22", "-12.9824, -58.7238, 8.38769, 0.22", "-16.4445, -68.0303, 11.84, 0.22", "-20.1182, -77.5479, 14.3164, 0.22", "-23.8418, -87.1183, 16.4823, 0.22", "-28.8499, -96.3873, 16.3873, 0.22", "-32.536, -106.086, 14.6813, 0.22", "-34.9966, -116.152, 13.0868, 0.22", "-36.4702, -126.41, 11.5922, 0.22", "-36.5116, -136.522, 8.74584, 0.22", "-37.4229, -146.804, 6.97499, 0.22", "-39.9294, -156.875, 5.49384, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.76788, -24.7928, -1.12324, 0.73", "-5.15941, -26.9039, -2.87225, 0.73", "-5.20143, -27.9348, -3.6906, 0.73", "-5.23714, -28.7368, -4.27347, 0.73", "-5.30545, -29.5957, -4.84614, 0.73", "-5.39294, -30.3178, -5.29913, 0.73", "-5.49984, -30.9714, -5.70306, 0.73", "-5.6103, -31.8341, -6.1053, 0.73", "-5.85101, -33.2121, -6.76022, 0.73", "-6.03264, -33.7229, -7.11874, 0.73", "-6.20229, -33.9964, -7.44124, 0.73", "-6.39399, -34.1432, -7.84449, 0.73", "-6.63564, -34.184, -8.35556, 0.73", "-6.86077, -34.0992, -8.79856, 0.73", "-7.24592, -33.7981, -9.84373, 0.73", "-7.5468, -33.5023, -10.8404, 0.73", "-7.78454, -33.2482, -11.7571, 0.58", "-8.00671, -33.0372, -12.5906, 0.58", "-8.39274, -32.7895, -13.6571, 0.44" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-0.354887, -112.134, 36.3564, 0.07", "1.6558, -124.601, 39.2111, 0.07", "5.86623, -136.558, 42.0768, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-0.354887, -112.134, 36.3564, 0.07", "0.533519, -117.436, 37.5752, 0.07", "2.15355, -122.678, 38.2187, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_52", "dend_51", "dend_24", "dend_21", "dend_0", "dend_57", "dend_56", "dend_54", "dend_53", "dend_36", "dend_25", "dend_23", "dend_22", "dend_12", "dend_1", "dend_59", "dend_58", "dend_44", "dend_37", "dend_33", "dend_26", "dend_16", "dend_13", "dend_7", "dend_2", "dend_46", "dend_45", "dend_41", "dend_38", "dend_35", "dend_34", "dend_30", "dend_27", "dend_20", "dend_17", "dend_15", "dend_14", "dend_11", "dend_8", "dend_6", "dend_3", "dend_50", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_10", "dend_9", "dend_5", "dend_4", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_52", "dend_51", "dend_24", "dend_21", "dend_0", "dend_57", "dend_56", "dend_54", "dend_53", "dend_36", "dend_25", "dend_23", "dend_22", "dend_12", "dend_1", "dend_59", "dend_58", "dend_44", "dend_37", "dend_33", "dend_26", "dend_16", "dend_13", "dend_7", "dend_2", "dend_46", "dend_45", "dend_41", "dend_38", "dend_35", "dend_34", "dend_30", "dend_27", "dend_20", "dend_17", "dend_15", "dend_14", "dend_11", "dend_8", "dend_6", "dend_3", "dend_50", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_10", "dend_9", "dend_5", "dend_4", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_12", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_39", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_18", "dend_10", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_49", "dend_49", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_NBC_d4cc42ae25_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_18, dend_10, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_49, dend_49, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.4999999289980176)
    connect dend_52(0), soma_0(0.4999999289980176)
    connect dend_51(0), soma_0(0.4999999289980176)
    connect dend_24(0), soma_0(0.4999999289980176)
    connect dend_21(0), soma_0(0.4999999289980176)
    connect dend_0(0), soma_0(0.4999999289980176)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 5.06383, -8.03547, 0.0, 2.96232 ) }
    soma_0 { pt3dadd( 4.52136, -7.21896, 0.0, 4.65461 ) }
    soma_0 { pt3dadd( 3.9789, -6.40244, 0.0, 6.41887 ) }
    soma_0 { pt3dadd( 3.43643, -5.58592, 0.0, 7.96069 ) }
    soma_0 { pt3dadd( 2.89397, -4.7694, 0.0, 9.55419 ) }
    soma_0 { pt3dadd( 2.35151, -3.95288, 0.0, 10.983 ) }
    soma_0 { pt3dadd( 1.80904, -3.13637, 0.0, 11.7075 ) }
    soma_0 { pt3dadd( 1.26658, -2.31985, 0.0, 12.5906 ) }
    soma_0 { pt3dadd( 0.724116, -1.50333, 0.0, 13.2278 ) }
    soma_0 { pt3dadd( 0.181652, -0.686812, 0.0, 13.8644 ) }
    soma_0 { pt3dadd( -0.360812, 0.129707, 0.0, 14.2774 ) }
    soma_0 { pt3dadd( -0.903275, 0.946225, 0.0, 14.5108 ) }
    soma_0 { pt3dadd( -1.44574, 1.76274, 0.0, 14.4652 ) }
    soma_0 { pt3dadd( -1.9882, 2.57926, 0.0, 14.3007 ) }
    soma_0 { pt3dadd( -2.53067, 3.39578, 0.0, 13.9535 ) }
    soma_0 { pt3dadd( -3.07313, 4.2123, 0.0, 13.2045 ) }
    soma_0 { pt3dadd( -3.61559, 5.02882, 0.0, 12.1103 ) }
    soma_0 { pt3dadd( -4.15806, 5.84533, 0.0, 10.6196 ) }
    soma_0 { pt3dadd( -4.70052, 6.66185, 0.0, 8.93613 ) }
    soma_0 { pt3dadd( -5.24299, 7.47837, 0.0, 6.69248 ) }
    soma_0 { pt3dadd( -5.78545, 8.29489, 0.0, 3.86173 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -6.39245, 3.39857, -5.2, 0.8 ) }
    dend_55 { pt3dadd( -7.42749, 2.90609, -5.59416, 0.8 ) }
    dend_55 { pt3dadd( -8.24129, 2.55251, -5.88983, 0.8 ) }
    dend_55 { pt3dadd( -9.05697, 2.21384, -6.16852, 1.24 ) }
    dend_55 { pt3dadd( -10.3793, 1.6924, -6.59879, 1.46 ) }
    dend_55 { pt3dadd( -12.386, 0.94518, -7.24424, 1.17 ) }
    dend_55 { pt3dadd( -13.4836, 0.579068, -7.58563, 0.95 ) }
    dend_55 { pt3dadd( -14.4038, 0.346621, -7.8528, 0.95 ) }
    dend_55 { pt3dadd( -15.2887, 0.202846, -8.10094, 0.95 ) }
    dend_55 { pt3dadd( -15.8523, 0.156032, -8.24755, 0.95 ) }
    dend_55 { pt3dadd( -16.8757, 0.191531, -8.46367, 0.95 ) }
    dend_55 { pt3dadd( -18.0287, 0.389765, -8.69129, 1.17 ) }
    dend_55 { pt3dadd( -18.737, 0.58227, -8.81205, 1.53 ) }
    dend_55 { pt3dadd( -19.9091, 0.98172, -8.98297, 1.68 ) }
    dend_55 { pt3dadd( -20.4808, 1.19561, -9.05371, 1.68 ) }
    dend_55 { pt3dadd( -22.1889, 1.81612, -9.22521, 0.88 ) }
    dend_55 { pt3dadd( -22.8882, 2.05127, -9.26334, 0.88 ) }
    dend_55 { pt3dadd( -23.4957, 2.22882, -9.27868, 0.88 ) }
    dend_55 { pt3dadd( -24.396, 2.45987, -9.27935, 0.88 ) }
    dend_55 { pt3dadd( -25.3056, 2.65516, -9.27403, 0.88 ) }
    dend_55 { pt3dadd( -26.7914, 2.93614, -9.25666, 1.09 ) }
    dend_55 { pt3dadd( -27.9608, 3.12385, -9.2361, 1.68 ) }
    dend_55 { pt3dadd( -28.9081, 3.26762, -9.21396, 1.9 ) }
    dend_55 { pt3dadd( -30.0828, 3.44581, -9.17629, 2.12 ) }
    dend_55 { pt3dadd( -30.7102, 3.55436, -9.15384, 2.12 ) }
    dend_55 { pt3dadd( -32.072, 3.8267, -9.09948, 1.82 ) }
    dend_55 { pt3dadd( -32.8332, 4.00736, -9.06585, 1.68 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 48/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -4.28245, 5.64057, -5.85, 0.88 ) }
    dend_52 { pt3dadd( -4.77454, 5.40758, -6.20013, 0.88 ) }
    dend_52 { pt3dadd( -5.43132, 5.01594, -6.68369, 0.88 ) }
    dend_52 { pt3dadd( -5.78715, 4.81478, -6.90721, 0.88 ) }
    dend_52 { pt3dadd( -6.49036, 4.46344, -7.30835, 0.88 ) }
    dend_52 { pt3dadd( -7.18499, 4.17665, -7.65876, 0.88 ) }
    dend_52 { pt3dadd( -8.1933, 3.83671, -8.11534, 0.88 ) }
    dend_52 { pt3dadd( -8.98489, 3.61866, -8.4291, 0.88 ) }
    dend_52 { pt3dadd( -10.2253, 3.45164, -8.83266, 1.02 ) }
    dend_52 { pt3dadd( -11.5668, 3.43251, -9.23608, 0.88 ) }
    dend_52 { pt3dadd( -12.724, 3.53465, -9.56104, 1.24 ) }
    dend_52 { pt3dadd( -13.554, 3.6758, -9.81231, 1.24 ) }
    dend_52 { pt3dadd( -14.2854, 3.84054, -10.0613, 1.24 ) }
    dend_52 { pt3dadd( -16.2249, 4.27838, -10.8133, 0.8 ) }
    dend_52 { pt3dadd( -16.9483, 4.41233, -11.1616, 0.8 ) }
    dend_52 { pt3dadd( -17.5506, 4.45607, -11.5357, 0.8 ) }
    dend_52 { pt3dadd( -18.3783, 4.25431, -12.2802, 0.8 ) }
    dend_52 { pt3dadd( -18.9149, 3.93833, -12.9108, 0.8 ) }
    dend_52 { pt3dadd( -19.4207, 3.47106, -13.633, 0.58 ) }
    dend_52 { pt3dadd( -19.7646, 2.94386, -14.272, 0.58 ) }
    dend_52 { pt3dadd( -20.216, 2.03782, -15.2405, 0.8 ) }
    dend_52 { pt3dadd( -20.6236, 0.94364, -16.2976, 1.17 ) }
    dend_52 { pt3dadd( -20.6759, 0.75049, -16.4597, 1.17 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 71/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 4.76755, 2.20157, -5.1, 0.44 ) }
    dend_51 { pt3dadd( 5.27556, 2.02752, -5.47291, 0.44 ) }
    dend_51 { pt3dadd( 6.75649, 2.45896, -6.54235, 0.36 ) }
    dend_51 { pt3dadd( 7.38506, 2.96942, -6.94898, 0.36 ) }
    dend_51 { pt3dadd( 7.78283, 3.40756, -7.16702, 0.36 ) }
    dend_51 { pt3dadd( 8.21775, 3.93305, -7.421, 0.36 ) }
    dend_51 { pt3dadd( 8.83569, 4.72729, -7.83186, 0.36 ) }
    dend_51 { pt3dadd( 9.55745, 5.76158, -8.37999, 0.66 ) }
    dend_51 { pt3dadd( 10.0546, 6.49222, -8.74949, 1.09 ) }
    dend_51 { pt3dadd( 10.8332, 7.53267, -9.33577, 0.8 ) }
    dend_51 { pt3dadd( 11.6064, 8.50584, -10.017, 0.51 ) }
    dend_51 { pt3dadd( 12.1483, 9.13449, -10.5261, 0.73 ) }
    dend_51 { pt3dadd( 12.995, 10.0099, -11.3169, 1.24 ) }
    dend_51 { pt3dadd( 13.6271, 10.5731, -11.8317, 1.82 ) }
    dend_51 { pt3dadd( 15.0796, 11.7205, -12.7757, 0.36 ) }
    dend_51 { pt3dadd( 16.2334, 12.5872, -13.2579, 0.36 ) }
    dend_51 { pt3dadd( 16.7552, 12.9763, -13.2335, 0.36 ) }
    dend_51 { pt3dadd( 17.3604, 13.4314, -12.8672, 0.36 ) }
    dend_51 { pt3dadd( 18.7593, 14.4672, -11.5022, 0.58 ) }
    dend_51 { pt3dadd( 19.6334, 15.1017, -10.4273, 0.29 ) }
    dend_51 { pt3dadd( 20.5459, 15.7782, -9.14137, 0.51 ) }
    dend_51 { pt3dadd( 21.5803, 16.5967, -7.62141, 0.73 ) }
    dend_51 { pt3dadd( 22.4301, 17.3332, -6.3874, 0.73 ) }
    dend_51 { pt3dadd( 22.7842, 17.6964, -5.86681, 0.73 ) }
    dend_51 { pt3dadd( 23.4534, 18.5471, -4.89179, 0.36 ) }
    dend_51 { pt3dadd( 23.9239, 19.2166, -4.2217, 0.36 ) }
    dend_51 { pt3dadd( 24.4675, 20.0646, -3.46909, 0.58 ) }
    dend_51 { pt3dadd( 24.9561, 21.0368, -2.73297, 0.58 ) }
    dend_51 { pt3dadd( 25.4903, 22.3832, -1.74688, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_51 { pt3dadd( 25.7374, 23.1354, -1.15975, 0.58 ) }
    dend_51 { pt3dadd( 25.9114, 23.7373, -0.643061, 0.58 ) }
    dend_51 { pt3dadd( 26.2276, 23.5099, -0.2903, 0.58 ) }
    dend_51 { pt3dadd( 26.7417, 23.1507, 0.0779955, 0.58 ) }
    dend_51 { pt3dadd( 27.6372, 22.5967, 0.691297, 0.58 ) }
    dend_51 { pt3dadd( 28.898, 21.8994, 1.50614, 0.36 ) }
    dend_51 { pt3dadd( 29.9388, 21.4698, 2.18821, 0.36 ) }
    dend_51 { pt3dadd( 31.1031, 21.2329, 2.92764, 0.36 ) }
    dend_51 { pt3dadd( 32.1757, 21.3391, 3.64236, 0.66 ) }
    dend_51 { pt3dadd( 33.2803, 22.0741, 4.50785, 0.29 ) }
    dend_51 { pt3dadd( 33.5704, 22.4899, 4.78414, 0.44 ) }
    dend_51 { pt3dadd( 33.9739, 23.3346, 5.24581, 0.44 ) }
    dend_51 { pt3dadd( 34.363, 24.3002, 5.70419, 0.95 ) }
    dend_51 { pt3dadd( 34.7722, 25.3221, 6.19375, 0.44 ) }
    dend_51 { pt3dadd( 35.1524, 26.1074, 6.60888, 0.44 ) }
    dend_51 { pt3dadd( 35.8186, 27.2013, 7.20615, 0.29 ) }
    dend_51 { pt3dadd( 36.1117, 27.6308, 7.45025, 0.51 ) }
    dend_51 { pt3dadd( 37.0164, 28.8178, 8.09995, 0.29 ) }
    dend_51 { pt3dadd( 37.9034, 29.8962, 8.73, 0.73 ) }
    dend_51 { pt3dadd( 38.9314, 31.1793, 9.50312, 1.61 ) }
    dend_51 { pt3dadd( 39.1827, 31.5445, 9.74198, 1.61 ) }
    dend_51 { pt3dadd( 39.607, 32.2022, 10.1778, 1.61 ) }
    dend_51 { pt3dadd( 40.4249, 33.603, 11.0923, 0.95 ) }
    dend_51 { pt3dadd( 41.033, 34.8482, 11.9046, 0.66 ) }
    dend_51 { pt3dadd( 41.5073, 36.0602, 12.6262, 0.29 ) }
    dend_51 { pt3dadd( 41.875, 37.4644, 13.4616, 0.29 ) }
    dend_51 { pt3dadd( 48.2192, 46.9537, 17.8461, 0.29 ) }
    dend_51 { pt3dadd( 54.4497, 55.4493, 24.2109, 0.29 ) }
    dend_51 { pt3dadd( 59.9355, 63.1657, 32.1578, 0.29 ) }
    dend_51 { pt3dadd( 64.8122, 71.6869, 39.5775, 0.29 ) }
    dend_51 { pt3dadd( 69.9356, 78.495, 48.6027, 0.29 ) }
    dend_51 { pt3dadd( 74.8959, 83.3873, 58.9703, 0.29 ) }
    dend_51 { pt3dadd( 79.4811, 89.2307, 68.9692, 0.29 ) }
    dend_51 { pt3dadd( 82.3472, 95.9825, 78.9797, 0.29 ) }
    dend_51 { pt3dadd( 83.3029, 102.256, 89.6653, 0.29 ) }
    dend_51 { pt3dadd( 84.7719, 109.139, 99.8734, 0.29 ) }
    dend_51 { pt3dadd( 87.2195, 115.478, 110.281, 0.29 ) }
    dend_51 { pt3dadd( 91.2876, 121.405, 120.448, 0.29 ) }
    dend_51 { pt3dadd( 96.2605, 126.396, 130.758, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 39/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -4.54245, 4.10157, 0.96, 1.24 ) }
    dend_24 { pt3dadd( -5.81578, 4.63851, 1.2918, 1.24 ) }
    dend_24 { pt3dadd( -7.29372, 5.19261, 1.59697, 1.09 ) }
    dend_24 { pt3dadd( -8.51527, 5.60778, 1.75768, 1.24 ) }
    dend_24 { pt3dadd( -9.87192, 6.06889, 1.93617, 1.39 ) }
    dend_24 { pt3dadd( -10.9205, 6.42525, 2.07411, 2.12 ) }
    dend_24 { pt3dadd( -11.9348, 6.77001, 2.20757, 2.34 ) }
    dend_24 { pt3dadd( -12.9465, 7.04429, 2.24271, 2.04 ) }
    dend_24 { pt3dadd( -14.2067, 7.31577, 2.17153, 1.75 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 48/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.82245, 4.67157, 2.13, 1.46 ) }
    dend_21 { pt3dadd( -2.43326, 5.3308, 2.52489, 1.46 ) }
    dend_21 { pt3dadd( -1.75741, 6.22785, 3.25199, 1.68 ) }
    dend_21 { pt3dadd( -1.25109, 6.87092, 3.84983, 1.68 ) }
    dend_21 { pt3dadd( -0.859101, 7.34435, 4.37091, 1.68 ) }
    dend_21 { pt3dadd( -0.244236, 8.0215, 5.30559, 0.44 ) }
    dend_21 { pt3dadd( 0.326898, 8.58742, 6.32891, 0.29 ) }
    dend_21 { pt3dadd( 0.638026, 8.76049, 7.11599, 0.29 ) }
    dend_21 { pt3dadd( 0.770355, 8.7477, 7.68017, 0.22 ) }
    dend_21 { pt3dadd( 0.890348, 8.6197, 8.59164, 0.22 ) }
    dend_21 { pt3dadd( 0.915502, 8.40683, 9.63801, 0.22 ) }
    dend_21 { pt3dadd( 0.832335, 8.27573, 10.2688, 0.22 ) }
    dend_21 { pt3dadd( 0.77716, 8.2851, 10.5146, 0.22 ) }
    dend_21 { pt3dadd( 0.688561, 8.4378, 10.9378, 0.22 ) }
    dend_21 { pt3dadd( 0.525732, 8.89023, 11.8001, 0.22 ) }
    dend_21 { pt3dadd( 0.386047, 9.25426, 12.334, 0.58 ) }
    dend_21 { pt3dadd( 0.139195, 9.78414, 12.9909, 0.22 ) }
    dend_21 { pt3dadd( -0.083005, 10.1573, 13.446, 0.22 ) }
    dend_21 { pt3dadd( -0.257356, 10.3897, 13.7608, 0.22 ) }
    dend_21 { pt3dadd( -0.619481, 10.7203, 14.3063, 0.22 ) }
    dend_21 { pt3dadd( -0.949651, 10.909, 14.714, 0.22 ) }
    dend_21 { pt3dadd( -1.17115, 11.0324, 15.0173, 0.22 ) }
    dend_21 { pt3dadd( -1.28414, 11.29, 15.4795, 0.15 ) }
    dend_21 { pt3dadd( -1.24668, 11.5072, 15.7869, 0.15 ) }
    dend_21 { pt3dadd( -1.20387, 11.756, 16.1374, 0.15 ) }
    dend_21 { pt3dadd( -1.11283, 12.1452, 16.6438, 0.15 ) }
    dend_21 { pt3dadd( -1.02083, 12.4567, 17.0635, 0.15 ) }
    dend_21 { pt3dadd( -0.926971, 12.7821, 17.5636, 0.15 ) }
    dend_21 { pt3dadd( -0.880621, 12.9655, 17.8836, 0.15 ) }
    dend_21 { pt3dadd( -0.834481, 13.2093, 18.3057, 0.15 ) }
    dend_21 { pt3dadd( -0.805621, 13.3887, 18.6342, 0.15 ) }
    dend_21 { pt3dadd( -0.726187, 13.5544, 19.0187, 0.15 ) }
    dend_21 { pt3dadd( -0.468759, 13.6349, 19.5983, 0.15 ) }
    dend_21 { pt3dadd( -0.218036, 13.5975, 20.0635, 0.15 ) }
    dend_21 { pt3dadd( 0.155268, 13.4554, 20.9657, 0.15 ) }
    dend_21 { pt3dadd( 0.318059, 13.3798, 21.4719, 0.15 ) }
    dend_21 { pt3dadd( 0.422129, 13.3543, 22.1936, 0.15 ) }
    dend_21 { pt3dadd( 0.368573, 13.5248, 22.6737, 0.15 ) }
    dend_21 { pt3dadd( 0.213449, 13.9429, 23.1346, 0.15 ) }
    dend_21 { pt3dadd( 0.032266, 14.4134, 23.6149, 0.15 ) }
    dend_21 { pt3dadd( -0.131111, 14.8375, 24.0385, 0.15 ) }
    dend_21 { pt3dadd( -0.291108, 15.3011, 24.4021, 0.15 ) }
    dend_21 { pt3dadd( -0.437723, 15.7604, 24.7008, 0.15 ) }
    dend_21 { pt3dadd( -0.624382, 16.6152, 25.1535, 0.15 ) }
    dend_21 { pt3dadd( 0.99178, 20.8317, 32.1638, 0.15 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 93/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.85755, -9.14143, 2.2, 2.63 ) }
    dend_0 { pt3dadd( 3.15525, -10.2605, 2.49848, 2.63 ) }
    dend_0 { pt3dadd( 3.3135, -10.8555, 2.65715, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 96/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -5.78545, 8.29489, 0.0, 0.54602 ) }
    axon_0 { pt3dadd( -14.086, 20.7889, 0.0, 0.54602 ) }
    axon_0 { pt3dadd( -22.3866, 33.2829, 0.0, 0.54602 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 99/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -32.8332, 4.00736, -9.06585, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_57 { pt3dadd( -32.9599, 2.98077, -10.1202, 0.36 ) }
    dend_57 { pt3dadd( -33.0444, 0.88601, -11.9515, 0.36 ) }
    dend_57 { pt3dadd( -33.0727, 0.168584, -12.5214, 0.36 ) }
    dend_57 { pt3dadd( -33.105, -0.350208, -12.8984, 0.58 ) }
    dend_57 { pt3dadd( -33.1711, -1.08943, -13.393, 0.58 ) }
    dend_57 { pt3dadd( -33.3597, -2.49, -14.2294, 0.36 ) }
    dend_57 { pt3dadd( -33.4753, -3.21856, -14.5773, 0.88 ) }
    dend_57 { pt3dadd( -33.8727, -4.82505, -15.2274, 0.36 ) }
    dend_57 { pt3dadd( -34.1749, -5.61663, -15.6092, 0.66 ) }
    dend_57 { pt3dadd( -34.458, -6.12006, -15.9191, 0.66 ) }
    dend_57 { pt3dadd( -35.1657, -6.92137, -16.6547, 0.22 ) }
    dend_57 { pt3dadd( -35.8616, -7.30771, -17.3497, 0.22 ) }
    dend_57 { pt3dadd( -36.531, -7.39138, -18.1121, 0.73 ) }
    dend_57 { pt3dadd( -37.3314, -7.2933, -19.0563, 0.88 ) }
    dend_57 { pt3dadd( -38.1494, -7.12064, -20.033, 0.36 ) }
    dend_57 { pt3dadd( -38.841, -7.02093, -20.8485, 0.36 ) }
    dend_57 { pt3dadd( -39.2227, -7.02407, -21.2709, 0.36 ) }
    dend_57 { pt3dadd( -40.1152, -7.27018, -22.2429, 0.36 ) }
    dend_57 { pt3dadd( -40.6974, -7.5372, -22.845, 0.73 ) }
    dend_57 { pt3dadd( -41.0333, -7.73946, -23.1888, 0.88 ) }
    dend_57 { pt3dadd( -42.0639, -8.50447, -24.3109, 0.22 ) }
    dend_57 { pt3dadd( -42.8751, -9.18544, -25.2492, 1.02 ) }
    dend_57 { pt3dadd( -44.2322, -10.4995, -27.1489, 0.51 ) }
    dend_57 { pt3dadd( -44.7283, -11.022, -28.0342, 0.51 ) }
    dend_57 { pt3dadd( -45.2247, -11.5102, -29.0807, 0.73 ) }
    dend_57 { pt3dadd( -45.636, -11.8108, -29.955, 0.73 ) }
    dend_57 { pt3dadd( -45.8125, -11.8853, -30.3247, 0.73 ) }
    dend_57 { pt3dadd( -46.4242, -12.0275, -31.642, 0.73 ) }
    dend_57 { pt3dadd( -47.0834, -12.1044, -32.9605, 0.73 ) }
    dend_57 { pt3dadd( -47.7871, -12.1516, -34.4431, 1.31 ) }
    dend_57 { pt3dadd( -48.661, -12.1193, -36.2573, 0.07 ) }
    dend_57 { pt3dadd( -49.3441, -12.0698, -37.7042, 0.58 ) }
    dend_57 { pt3dadd( -50.7157, -12.009, -40.6794, 0.29 ) }
    dend_57 { pt3dadd( -51.3544, -12.0375, -42.1411, 1.09 ) }
    dend_57 { pt3dadd( -52.6592, -12.3364, -45.6866, 0.8 ) }
    dend_57 { pt3dadd( -53.4095, -12.763, -48.5068, 0.58 ) }
    dend_57 { pt3dadd( -53.6364, -13.02, -49.6698, 0.58 ) }
    dend_57 { pt3dadd( -53.7589, -13.2029, -50.3194, 0.58 ) }
    dend_57 { pt3dadd( -54.153, -13.8271, -52.1072, 0.58 ) }
    dend_57 { pt3dadd( -54.4648, -14.2095, -53.1099, 0.58 ) }
    dend_57 { pt3dadd( -55.0935, -14.7476, -54.4728, 0.58 ) }
    dend_57 { pt3dadd( -55.5228, -15.0118, -55.2533, 0.58 ) }
    dend_57 { pt3dadd( -56.0751, -15.2436, -56.1702, 0.58 ) }
    dend_57 { pt3dadd( -56.7681, -15.4195, -57.2559, 0.58 ) }
    dend_57 { pt3dadd( -57.8479, -15.54, -58.8554, 0.88 ) }
    dend_57 { pt3dadd( -58.9409, -15.5872, -60.4279, 0.22 ) }
    dend_57 { pt3dadd( -60.3191, -15.6209, -62.3503, 0.44 ) }
    dend_57 { pt3dadd( -61.8965, -15.6645, -64.5028, 0.15 ) }
    dend_57 { pt3dadd( -62.7205, -15.6853, -65.5903, 0.73 ) }
    dend_57 { pt3dadd( -64.2287, -15.743, -67.5684, 0.07 ) }
    dend_57 { pt3dadd( -65.1196, -15.8072, -68.7544, 0.29 ) }
    dend_57 { pt3dadd( -66.4252, -16.0075, -70.5003, 0.58 ) }
    dend_57 { pt3dadd( -67.3949, -16.2595, -71.7096, 0.07 ) }
    dend_57 { pt3dadd( -67.7512, -16.4009, -72.1366, 0.07 ) }
    dend_57 { pt3dadd( -68.6206, -16.8802, -73.2141, 0.07 ) }
    dend_57 { pt3dadd( -69.5096, -17.4857, -74.3049, 0.58 ) }
    dend_57 { pt3dadd( -70.656, -18.3705, -75.6813, 0.07 ) }
    dend_57 { pt3dadd( -71.3222, -18.9639, -76.446, 0.36 ) }
    dend_57 { pt3dadd( -72.7099, -20.3077, -77.9667, 0.07 ) }
    dend_57 { pt3dadd( -73.6537, -21.2323, -78.8923, 0.07 ) }
    dend_57 { pt3dadd( -74.1004, -21.6547, -79.2479, 0.07 ) }
    dend_57 { pt3dadd( -74.5108, -22.041, -79.5206, 0.29 ) }
    dend_57 { pt3dadd( -75.4996, -22.9396, -80.0875, 0.07 ) }
    dend_57 { pt3dadd( -76.8457, -24.1292, -80.9764, 0.07 ) }
    dend_57 { pt3dadd( -77.8436, -24.9063, -81.5961, 0.88 ) }
    dend_57 { pt3dadd( -79.2255, -25.9157, -82.5036, 0.07 ) }
    dend_57 { pt3dadd( -80.908, -27.0943, -83.651, 1.09 ) }
    dend_57 { pt3dadd( -83.137, -28.6188, -85.2317, 0.22 ) }
    dend_57 { pt3dadd( -86.0285, -30.5781, -87.3376, 0.22 ) }
    dend_57 { pt3dadd( -87.6449, -31.6824, -88.513, 1.17 ) }
    dend_57 { pt3dadd( -89.3864, -32.8871, -89.7779, 0.22 ) }
    dend_57 { pt3dadd( -90.3204, -33.5326, -90.409, 0.22 ) }
    dend_57 { pt3dadd( -91.5003, -34.351, -91.0811, 0.22 ) }
    dend_57 { pt3dadd( -92.6692, -35.1951, -91.6218, 0.36 ) }
    dend_57 { pt3dadd( -93.5845, -35.839, -91.8964, 0.07 ) }
    dend_57 { pt3dadd( -94.5554, -36.5018, -92.1804, 0.66 ) }
    dend_57 { pt3dadd( -95.6712, -37.1844, -92.4939, 0.66 ) }
    dend_57 { pt3dadd( -98.065, -38.5512, -93.2877, 0.07 ) }
    dend_57 { pt3dadd( -99.5306, -39.3501, -93.7703, 0.07 ) }
    dend_57 { pt3dadd( -101.883, -40.5698, -94.5954, 0.66 ) }
    dend_57 { pt3dadd( -103.777, -41.5108, -95.3428, 0.07 ) }
    dend_57 { pt3dadd( -105.051, -42.1126, -95.9067, 0.07 ) }
    dend_57 { pt3dadd( -107.123, -43.0395, -96.9336, 1.61 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -32.8332, 4.00736, -9.06585, 0.44 ) }
    dend_56 { pt3dadd( -33.2738, 4.66154, -8.58945, 0.44 ) }
    dend_56 { pt3dadd( -33.7446, 5.0445, -8.16409, 0.44 ) }
    dend_56 { pt3dadd( -33.9307, 4.85893, -8.1157, 0.44 ) }
    dend_56 { pt3dadd( -34.22, 4.49692, -8.07727, 0.44 ) }
    dend_56 { pt3dadd( -34.3909, 4.27727, -8.07604, 0.44 ) }
    dend_56 { pt3dadd( -34.7856, 3.79745, -8.10857, 0.58 ) }
    dend_56 { pt3dadd( -35.2154, 3.31746, -8.1624, 0.36 ) }
    dend_56 { pt3dadd( -36.1407, 2.3835, -8.30674, 0.51 ) }
    dend_56 { pt3dadd( -36.7237, 1.86152, -8.3638, 0.29 ) }
    dend_56 { pt3dadd( -37.2371, 1.46815, -8.39048, 0.29 ) }
    dend_56 { pt3dadd( -37.7583, 1.13229, -8.37955, 0.44 ) }
    dend_56 { pt3dadd( -38.7741, 0.607298, -8.28153, 0.73 ) }
    dend_56 { pt3dadd( -39.5933, 0.286509, -8.14305, 0.88 ) }
    dend_56 { pt3dadd( -40.8176, -0.0433627, -7.84503, 0.58 ) }
    dend_56 { pt3dadd( -41.9166, -0.231938, -7.52577, 0.51 ) }
    dend_56 { pt3dadd( -42.7436, -0.289102, -7.2588, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_56 { pt3dadd( -43.5147, -0.227803, -7.0129, 0.36 ) }
    dend_56 { pt3dadd( -44.0455, -0.0963197, -6.86638, 0.36 ) }
    dend_56 { pt3dadd( -44.6723, 0.146949, -6.72483, 0.95 ) }
    dend_56 { pt3dadd( -45.2781, 0.443786, -6.62597, 1.17 ) }
    dend_56 { pt3dadd( -46.1627, 0.90774, -6.51404, 1.31 ) }
    dend_56 { pt3dadd( -47.5552, 1.59395, -6.42069, 0.51 ) }
    dend_56 { pt3dadd( -48.4616, 1.95031, -6.43006, 0.29 ) }
    dend_56 { pt3dadd( -49.0404, 2.07309, -6.47049, 0.22 ) }
    dend_56 { pt3dadd( -49.4911, 2.04178, -6.52419, 0.22 ) }
    dend_56 { pt3dadd( -50.1167, 1.78345, -6.64009, 0.22 ) }
    dend_56 { pt3dadd( -50.8657, 1.30379, -6.85008, 0.29 ) }
    dend_56 { pt3dadd( -51.854, 0.59776, -7.16735, 1.09 ) }
    dend_56 { pt3dadd( -52.6342, 0.0669583, -7.35167, 0.8 ) }
    dend_56 { pt3dadd( -53.4213, -0.400322, -7.47467, 0.22 ) }
    dend_56 { pt3dadd( -54.4739, -0.915786, -7.56131, 0.51 ) }
    dend_56 { pt3dadd( -55.7095, -1.36436, -7.57536, 0.22 ) }
    dend_56 { pt3dadd( -56.955, -1.66502, -7.50177, 0.51 ) }
    dend_56 { pt3dadd( -58.6841, -1.89099, -7.37757, 0.29 ) }
    dend_56 { pt3dadd( -59.7415, -1.95483, -7.35865, 0.29 ) }
    dend_56 { pt3dadd( -60.2694, -1.97129, -7.37569, 0.95 ) }
    dend_56 { pt3dadd( -61.1051, -2.00321, -7.44458, 1.53 ) }
    dend_56 { pt3dadd( -61.87, -2.07399, -7.57199, 1.53 ) }
    dend_56 { pt3dadd( -63.4984, -2.40443, -8.07116, 0.44 ) }
    dend_56 { pt3dadd( -64.5692, -2.76308, -8.56482, 0.36 ) }
    dend_56 { pt3dadd( -65.1888, -3.0519, -8.89591, 0.36 ) }
    dend_56 { pt3dadd( -65.8466, -3.41732, -9.27589, 0.36 ) }
    dend_56 { pt3dadd( -66.5314, -3.85458, -9.6991, 0.36 ) }
    dend_56 { pt3dadd( -67.3346, -4.41108, -10.2118, 0.36 ) }
    dend_56 { pt3dadd( -67.9035, -4.83809, -10.5496, 0.22 ) }
    dend_56 { pt3dadd( -68.3318, -5.09829, -10.7538, 0.22 ) }
    dend_56 { pt3dadd( -68.9918, -5.28908, -10.9919, 0.66 ) }
    dend_56 { pt3dadd( -69.4561, -5.27867, -11.1001, 0.66 ) }
    dend_56 { pt3dadd( -70.1302, -5.17632, -11.2293, 0.22 ) }
    dend_56 { pt3dadd( -70.6538, -5.09819, -11.3148, 0.22 ) }
    dend_56 { pt3dadd( -71.0267, -5.12043, -11.3792, 0.22 ) }
    dend_56 { pt3dadd( -71.3629, -5.2574, -11.4808, 0.22 ) }
    dend_56 { pt3dadd( -71.691, -5.47145, -11.598, 0.22 ) }
    dend_56 { pt3dadd( -72.3635, -5.98566, -11.8211, 0.22 ) }
    dend_56 { pt3dadd( -72.8503, -6.36887, -11.9698, 0.73 ) }
    dend_56 { pt3dadd( -73.62, -6.89043, -12.2132, 1.24 ) }
    dend_56 { pt3dadd( -74.3495, -7.25901, -12.4321, 1.24 ) }
    dend_56 { pt3dadd( -74.948, -7.43983, -12.5891, 1.24 ) }
    dend_56 { pt3dadd( -76.199, -7.63937, -12.8995, 0.29 ) }
    dend_56 { pt3dadd( -76.827, -7.67831, -13.0484, 0.29 ) }
    dend_56 { pt3dadd( -78.1663, -7.69901, -13.3973, 0.51 ) }
    dend_56 { pt3dadd( -79.2329, -7.68901, -13.6751, 0.29 ) }
    dend_56 { pt3dadd( -80.3938, -7.71292, -13.9786, 0.15 ) }
    dend_56 { pt3dadd( -80.9528, -7.75662, -14.1452, 0.15 ) }
    dend_56 { pt3dadd( -81.4559, -7.84419, -14.3145, 0.15 ) }
    dend_56 { pt3dadd( -82.2195, -8.04694, -14.5882, 0.88 ) }
    dend_56 { pt3dadd( -82.7057, -8.22021, -14.7555, 0.88 ) }
    dend_56 { pt3dadd( -83.5406, -8.44033, -15.0633, 0.15 ) }
    dend_56 { pt3dadd( -83.9852, -8.45438, -15.2112, 0.15 ) }
    dend_56 { pt3dadd( -84.4048, -8.39353, -15.3183, 0.15 ) }
    dend_56 { pt3dadd( -85.9141, -8.11693, -15.7136, 0.15 ) }
    dend_56 { pt3dadd( -86.5761, -7.99866, -15.8753, 0.15 ) }
    dend_56 { pt3dadd( -87.475, -7.85283, -16.053, 0.15 ) }
    dend_56 { pt3dadd( -88.134, -7.77216, -16.1566, 1.31 ) }
    dend_56 { pt3dadd( -89.032, -7.75478, -16.2336, 1.31 ) }
    dend_56 { pt3dadd( -90.6035, -7.92513, -16.242, 0.66 ) }
    dend_56 { pt3dadd( -91.8087, -8.2105, -16.1, 0.22 ) }
    dend_56 { pt3dadd( -92.7347, -8.48701, -15.914, 0.22 ) }
    dend_56 { pt3dadd( -93.2977, -8.68151, -15.757, 0.22 ) }
    dend_56 { pt3dadd( -94.2964, -9.0526, -15.4419, 0.22 ) }
    dend_56 { pt3dadd( -95.02, -9.32374, -15.2149, 0.73 ) }
    dend_56 { pt3dadd( -96.1833, -9.74476, -14.87, 1.46 ) }
    dend_56 { pt3dadd( -96.4772, -9.84488, -14.8169, 1.46 ) }
    dend_56 { pt3dadd( -97.4491, -10.1367, -14.7466, 0.88 ) }
    dend_56 { pt3dadd( -98.6113, -10.4249, -14.7418, 0.29 ) }
    dend_56 { pt3dadd( -99.5999, -10.6255, -14.8095, 0.8 ) }
    dend_56 { pt3dadd( -100.753, -10.8539, -14.9437, 0.51 ) }
    dend_56 { pt3dadd( -101.737, -11.0595, -15.1045, 0.36 ) }
    dend_56 { pt3dadd( -102.064, -11.1418, -15.1661, 0.36 ) }
    dend_56 { pt3dadd( -102.375, -11.2334, -15.2321, 0.36 ) }
    dend_56 { pt3dadd( -103.102, -11.4797, -15.3852, 0.44 ) }
    dend_56 { pt3dadd( -104.182, -11.8739, -15.6009, 0.66 ) }
    dend_56 { pt3dadd( -104.659, -12.0547, -15.6956, 0.66 ) }
    dend_56 { pt3dadd( -106.025, -12.5473, -15.9126, 0.44 ) }
    dend_56 { pt3dadd( -106.581, -12.7417, -15.9932, 0.58 ) }
    dend_56 { pt3dadd( -107.146, -12.9306, -16.0735, 0.8 ) }
    dend_56 { pt3dadd( -108.14, -13.2224, -16.2097, 1.68 ) }
    dend_56 { pt3dadd( -108.787, -13.3783, -16.2863, 1.68 ) }
    dend_56 { pt3dadd( -110.364, -13.6832, -16.4298, 0.22 ) }
    dend_56 { pt3dadd( -111.111, -13.7949, -16.4689, 0.22 ) }
    dend_56 { pt3dadd( -111.899, -13.9117, -16.5046, 0.22 ) }
    dend_56 { pt3dadd( -112.655, -14.0284, -16.5323, 0.22 ) }
    dend_56 { pt3dadd( -113.502, -14.176, -16.5498, 0.51 ) }
    dend_56 { pt3dadd( -114.452, -14.3571, -16.5659, 1.68 ) }
    dend_56 { pt3dadd( -115.219, -14.5362, -16.5936, 1.68 ) }
    dend_56 { pt3dadd( -117.317, -15.1099, -16.7296, 0.15 ) }
    dend_56 { pt3dadd( -118.197, -15.405, -16.8113, 0.15 ) }
    dend_56 { pt3dadd( -119.092, -15.7824, -16.9196, 0.58 ) }
    dend_56 { pt3dadd( -119.451, -15.963, -16.9716, 0.58 ) }
    dend_56 { pt3dadd( -120.69, -16.681, -17.1925, 0.15 ) }
    dend_56 { pt3dadd( -121.557, -17.2363, -17.3846, 0.58 ) }
    dend_56 { pt3dadd( -122.319, -17.7855, -17.5931, 0.22 ) }
    dend_56 { pt3dadd( -123.025, -18.327, -17.8041, 0.36 ) }
    dend_56 { pt3dadd( -123.478, -18.6872, -17.9431, 0.07 ) }
    dend_56 { pt3dadd( -124.179, -19.2794, -18.1337, 0.51 ) }
    dend_56 { pt3dadd( -124.755, -19.7825, -18.2691, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_56 { pt3dadd( -125.223, -20.2092, -18.3907, 0.07 ) }
    dend_56 { pt3dadd( -125.852, -20.7919, -18.576, 1.09 ) }
    dend_56 { pt3dadd( -125.988, -20.9292, -18.6243, 1.09 ) }
    dend_56 { pt3dadd( -126.656, -21.665, -18.8805, 0.51 ) }
    dend_56 { pt3dadd( -127.5, -22.6151, -19.1997, 0.07 ) }
    dend_56 { pt3dadd( -128.23, -23.4045, -19.4806, 0.88 ) }
    dend_56 { pt3dadd( -128.385, -23.5546, -19.5443, 0.88 ) }
    dend_56 { pt3dadd( -129.296, -24.3251, -19.9318, 0.07 ) }
    dend_56 { pt3dadd( -129.741, -24.6474, -20.114, 0.15 ) }
    dend_56 { pt3dadd( -130.456, -25.0273, -20.4127, 0.15 ) }
    dend_56 { pt3dadd( -131.054, -25.2533, -20.6545, 0.15 ) }
    dend_56 { pt3dadd( -131.823, -25.4559, -20.9722, 0.15 ) }
    dend_56 { pt3dadd( -132.708, -25.658, -21.3367, 1.53 ) }
    dend_56 { pt3dadd( -133.24, -25.7514, -21.5503, 1.53 ) }
    dend_56 { pt3dadd( -134.735, -26.0296, -22.0953, 0.07 ) }
    dend_56 { pt3dadd( -135.208, -26.1289, -22.2612, 0.07 ) }
    dend_56 { pt3dadd( -135.839, -26.2588, -22.4644, 0.07 ) }
    dend_56 { pt3dadd( -136.859, -26.4597, -22.7549, 0.95 ) }
    dend_56 { pt3dadd( -137.176, -26.5153, -22.8344, 0.95 ) }
    dend_56 { pt3dadd( -138.762, -26.8112, -23.1619, 0.22 ) }
    dend_56 { pt3dadd( -139.398, -26.9528, -23.2482, 0.22 ) }
    dend_56 { pt3dadd( -140.045, -27.1149, -23.3172, 0.51 ) }
    dend_56 { pt3dadd( -140.795, -27.2975, -23.3772, 0.51 ) }
    dend_56 { pt3dadd( -141.491, -27.4496, -23.4344, 0.22 ) }
    dend_56 { pt3dadd( -141.753, -27.5225, -23.4647, 0.22 ) }
    dend_56 { pt3dadd( -142.184, -27.6754, -23.5186, 0.22 ) }
    dend_56 { pt3dadd( -142.83, -27.9487, -23.5709, 0.22 ) }
    dend_56 { pt3dadd( -143.07, -28.0882, -23.6029, 0.22 ) }
    dend_56 { pt3dadd( -143.595, -28.4248, -23.7184, 0.22 ) }
    dend_56 { pt3dadd( -144.285, -28.8607, -23.8971, 0.22 ) }
    dend_56 { pt3dadd( -145.013, -29.2894, -24.0884, 0.58 ) }
    dend_56 { pt3dadd( -145.522, -29.5231, -24.1992, 0.58 ) }
    dend_56 { pt3dadd( -146.924, -30.0618, -24.4693, 0.29 ) }
    dend_56 { pt3dadd( -147.825, -30.3837, -24.6379, 0.88 ) }
    dend_56 { pt3dadd( -148.068, -30.4696, -24.6831, 1.17 ) }
    dend_56 { pt3dadd( -148.683, -30.6852, -24.7879, 1.75 ) }
    dend_56 { pt3dadd( -150.722, -31.3808, -25.1448, 0.22 ) }
    dend_56 { pt3dadd( -151.333, -31.5924, -25.2668, 0.15 ) }
    dend_56 { pt3dadd( -151.938, -31.8005, -25.3894, 0.15 ) }
    dend_56 { pt3dadd( -153.128, -32.2479, -25.6554, 0.66 ) }
    dend_56 { pt3dadd( -153.543, -32.4177, -25.7629, 1.17 ) }
    dend_56 { pt3dadd( -154.158, -32.6812, -25.9354, 1.17 ) }
    dend_56 { pt3dadd( -155.409, -33.2676, -26.3014, 0.15 ) }
    dend_56 { pt3dadd( -155.924, -33.4923, -26.4406, 0.15 ) }
    dend_56 { pt3dadd( -156.657, -33.7879, -26.6094, 0.15 ) }
    dend_56 { pt3dadd( -157.123, -33.9622, -26.7158, 0.15 ) }
    dend_56 { pt3dadd( -158.31, -34.4007, -26.9847, 0.66 ) }
    dend_56 { pt3dadd( -158.811, -34.5874, -27.0837, 0.15 ) }
    dend_56 { pt3dadd( -159.731, -34.9227, -27.1746, 0.58 ) }
    dend_56 { pt3dadd( -160.5, -35.2085, -27.2166, 0.15 ) }
    dend_56 { pt3dadd( -160.992, -35.3963, -27.2147, 0.15 ) }
    dend_56 { pt3dadd( -161.42, -35.5556, -27.1852, 0.15 ) }
    dend_56 { pt3dadd( -162.337, -35.8683, -27.0729, 0.15 ) }
    dend_56 { pt3dadd( -163.565, -36.2348, -26.8685, 1.46 ) }
    dend_56 { pt3dadd( -164.115, -36.3824, -26.7514, 1.46 ) }
    dend_56 { pt3dadd( -165.364, -36.7107, -26.4769, 0.51 ) }
    dend_56 { pt3dadd( -166.356, -36.9912, -26.2536, 0.22 ) }
    dend_56 { pt3dadd( -166.752, -37.1158, -26.171, 0.22 ) }
    dend_56 { pt3dadd( -167.076, -37.231, -26.1096, 0.22 ) }
    dend_56 { pt3dadd( -167.704, -37.4757, -26.0158, 0.22 ) }
    dend_56 { pt3dadd( -169.409, -38.2009, -25.7828, 0.22 ) }
    dend_56 { pt3dadd( -170.196, -38.5392, -25.6622, 0.22 ) }
    dend_56 { pt3dadd( -170.908, -38.842, -25.5502, 0.8 ) }
    dend_56 { pt3dadd( -171.302, -38.9995, -25.4813, 0.8 ) }
    dend_56 { pt3dadd( -173.095, -39.6466, -25.1446, 0.15 ) }
    dend_56 { pt3dadd( -173.734, -39.8491, -25.0159, 0.36 ) }
    dend_56 { pt3dadd( -174.579, -40.0884, -24.8315, 0.15 ) }
    dend_56 { pt3dadd( -175.121, -40.2498, -24.7106, 0.15 ) }
    dend_56 { pt3dadd( -175.656, -40.4322, -24.5639, 0.15 ) }
    dend_56 { pt3dadd( -176.242, -40.6448, -24.3438, 0.15 ) }
    dend_56 { pt3dadd( -176.683, -40.7971, -24.1566, 0.15 ) }
    dend_56 { pt3dadd( -177.359, -41.0051, -23.8405, 0.15 ) }
    dend_56 { pt3dadd( -178.156, -41.2437, -23.4601, 0.15 ) }
    dend_56 { pt3dadd( -179.315, -41.5954, -22.878, 0.15 ) }
    dend_56 { pt3dadd( -180.356, -41.9268, -22.3395, 1.61 ) }
    dend_56 { pt3dadd( -181.808, -42.4026, -21.5305, 0.15 ) }
    dend_56 { pt3dadd( -182.913, -42.8318, -20.9049, 0.36 ) }
    dend_56 { pt3dadd( -183.242, -42.9779, -20.7193, 0.36 ) }
    dend_56 { pt3dadd( -184.118, -43.4182, -20.2479, 0.07 ) }
    dend_56 { pt3dadd( -184.697, -43.7521, -19.977, 0.07 ) }
    dend_56 { pt3dadd( -185.64, -44.3534, -19.5905, 0.8 ) }
    dend_56 { pt3dadd( -187.094, -45.3671, -18.9805, 0.07 ) }
    dend_56 { pt3dadd( -187.392, -45.5732, -18.8689, 0.88 ) }
    dend_56 { pt3dadd( -187.763, -45.8095, -18.7346, 0.88 ) }
    dend_56 { pt3dadd( -188.877, -46.406, -18.3733, 0.07 ) }
    dend_56 { pt3dadd( -189.386, -46.6176, -18.2404, 0.07 ) }
    dend_56 { pt3dadd( -190.038, -46.8256, -18.1175, 0.07 ) }
    dend_56 { pt3dadd( -190.609, -46.9494, -18.0194, 0.07 ) }
    dend_56 { pt3dadd( -191.179, -47.0528, -17.9338, 0.07 ) }
    dend_56 { pt3dadd( -192.005, -47.1938, -17.817, 0.58 ) }
    dend_56 { pt3dadd( -192.906, -47.3315, -17.7092, 0.22 ) }
    dend_56 { pt3dadd( -193.174, -47.3663, -17.6847, 0.22 ) }
    dend_56 { pt3dadd( -193.747, -47.4098, -17.6631, 0.51 ) }
    dend_56 { pt3dadd( -194.778, -47.4423, -17.6315, 0.07 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -20.6759, 0.75049, -16.4597, 0.58 ) }
    dend_54 { pt3dadd( -20.2989, 0.8895, -17.8918, 0.58 ) }
    dend_54 { pt3dadd( -19.8048, 1.33992, -20.32, 0.58 ) }
    dend_54 { pt3dadd( -19.462, 1.83087, -22.2554, 0.58 ) }
    dend_54 { pt3dadd( -19.152, 2.33018, -23.8084, 0.73 ) }
    dend_54 { pt3dadd( -18.7351, 2.96384, -25.5725, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( -18.1127, 3.7662, -27.9632, 0.58 ) }
    dend_54 { pt3dadd( -17.3485, 4.55515, -30.4475, 0.66 ) }
    dend_54 { pt3dadd( -16.9235, 4.88946, -31.7416, 0.66 ) }
    dend_54 { pt3dadd( -16.3421, 5.20824, -33.8118, 0.66 ) }
    dend_54 { pt3dadd( -15.9228, 5.26679, -35.4959, 0.51 ) }
    dend_54 { pt3dadd( -15.3469, 5.10423, -37.8393, 0.73 ) }
    dend_54 { pt3dadd( -14.663, 4.75546, -40.3935, 0.44 ) }
    dend_54 { pt3dadd( -14.0246, 4.34599, -42.5446, 0.44 ) }
    dend_54 { pt3dadd( -13.0655, 3.62083, -45.6201, 0.44 ) }
    dend_54 { pt3dadd( -12.2943, 2.9828, -48.0154, 0.44 ) }
    dend_54 { pt3dadd( -11.2785, 2.14812, -51.1922, 0.44 ) }
    dend_54 { pt3dadd( -10.8995, 1.88558, -52.3141, 0.66 ) }
    dend_54 { pt3dadd( -10.0126, 1.37844, -54.7206, 0.44 ) }
    dend_54 { pt3dadd( -8.88402, 0.81968, -57.241, 0.29 ) }
    dend_54 { pt3dadd( -7.70212, 0.247325, -59.3329, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 15/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -20.6759, 0.75049, -16.4597, 2.63 ) }
    dend_53 { pt3dadd( -21.2252, 0.83325, -16.6138, 2.63 ) }
    dend_53 { pt3dadd( -23.5905, 1.35583, -17.4114, 0.44 ) }
    dend_53 { pt3dadd( -24.3221, 1.55958, -17.6709, 0.88 ) }
    dend_53 { pt3dadd( -25.4389, 1.94611, -18.0378, 0.73 ) }
    dend_53 { pt3dadd( -26.215, 2.25135, -18.2974, 0.51 ) }
    dend_53 { pt3dadd( -27.2651, 2.68761, -18.6679, 0.51 ) }
    dend_53 { pt3dadd( -28.1981, 3.12033, -19.0223, 1.02 ) }
    dend_53 { pt3dadd( -28.9678, 3.49531, -19.3267, 1.02 ) }
    dend_53 { pt3dadd( -30.2343, 3.9839, -19.8341, 0.29 ) }
    dend_53 { pt3dadd( -30.8202, 4.1341, -20.0669, 0.29 ) }
    dend_53 { pt3dadd( -31.9019, 4.27821, -20.483, 0.29 ) }
    dend_53 { pt3dadd( -32.7695, 4.26963, -20.8037, 0.88 ) }
    dend_53 { pt3dadd( -33.8362, 4.0807, -21.1711, 0.36 ) }
    dend_53 { pt3dadd( -34.7872, 3.78731, -21.5187, 0.22 ) }
    dend_53 { pt3dadd( -35.1059, 3.66335, -21.6553, 0.22 ) }
    dend_53 { pt3dadd( -35.4831, 3.52605, -21.8231, 0.22 ) }
    dend_53 { pt3dadd( -35.9818, 3.36659, -22.0597, 0.22 ) }
    dend_53 { pt3dadd( -36.7963, 3.18339, -22.4924, 2.12 ) }
    dend_53 { pt3dadd( -37.5422, 3.13668, -22.9624, 2.48 ) }
    dend_53 { pt3dadd( -38.6781, 3.22592, -23.7475, 1.46 ) }
    dend_53 { pt3dadd( -39.7141, 3.37064, -24.523, 0.29 ) }
    dend_53 { pt3dadd( -40.1056, 3.4366, -24.8331, 0.29 ) }
    dend_53 { pt3dadd( -40.4199, 3.47841, -25.0995, 0.29 ) }
    dend_53 { pt3dadd( -41.3546, 3.53471, -25.9147, 0.29 ) }
    dend_53 { pt3dadd( -41.7818, 3.51585, -26.2339, 0.29 ) }
    dend_53 { pt3dadd( -42.4073, 3.4166, -26.6104, 0.8 ) }
    dend_53 { pt3dadd( -42.8554, 3.3252, -26.8644, 0.8 ) }
    dend_53 { pt3dadd( -43.7494, 3.19217, -27.3407, 0.22 ) }
    dend_53 { pt3dadd( -44.1447, 3.15361, -27.5279, 0.22 ) }
    dend_53 { pt3dadd( -44.5236, 3.13579, -27.6875, 0.22 ) }
    dend_53 { pt3dadd( -45.1139, 3.14766, -27.9956, 0.22 ) }
    dend_53 { pt3dadd( -45.7147, 3.1946, -28.3709, 0.22 ) }
    dend_53 { pt3dadd( -46.4586, 3.2706, -28.8943, 0.22 ) }
    dend_53 { pt3dadd( -47.1191, 3.33758, -29.3705, 1.61 ) }
    dend_53 { pt3dadd( -47.9179, 3.38479, -29.9346, 1.61 ) }
    dend_53 { pt3dadd( -49.352, 3.39325, -30.8864, 0.36 ) }
    dend_53 { pt3dadd( -50.1727, 3.3763, -31.4119, 0.15 ) }
    dend_53 { pt3dadd( -51.2907, 3.34364, -32.0759, 0.15 ) }
    dend_53 { pt3dadd( -51.7952, 3.33898, -32.3469, 1.24 ) }
    dend_53 { pt3dadd( -52.4577, 3.36369, -32.6912, 1.24 ) }
    dend_53 { pt3dadd( -53.5647, 3.49971, -33.2498, 0.07 ) }
    dend_53 { pt3dadd( -54.2403, 3.63574, -33.5688, 0.58 ) }
    dend_53 { pt3dadd( -54.8097, 3.81024, -33.841, 0.8 ) }
    dend_53 { pt3dadd( -56.0364, 4.31864, -34.4554, 0.44 ) }
    dend_53 { pt3dadd( -56.8812, 4.77327, -34.9813, 0.73 ) }
    dend_53 { pt3dadd( -57.7031, 5.31993, -35.5848, 1.75 ) }
    dend_53 { pt3dadd( -57.891, 5.46599, -35.7363, 1.75 ) }
    dend_53 { pt3dadd( -58.9396, 6.3964, -36.6837, 0.22 ) }
    dend_53 { pt3dadd( -59.5912, 7.09288, -37.378, 1.75 ) }
    dend_53 { pt3dadd( -60.6502, 8.43777, -38.6532, 0.29 ) }
    dend_53 { pt3dadd( -61.0829, 9.02456, -39.1866, 0.95 ) }
    dend_53 { pt3dadd( -61.2684, 9.29778, -39.4399, 0.95 ) }
    dend_53 { pt3dadd( -61.753, 10.0608, -40.1452, 0.44 ) }
    dend_53 { pt3dadd( -62.1971, 10.7922, -40.8581, 0.73 ) }
    dend_53 { pt3dadd( -62.3734, 11.0903, -41.1558, 0.73 ) }
    dend_53 { pt3dadd( -62.865, 11.8539, -42.0607, 0.36 ) }
    dend_53 { pt3dadd( -63.1578, 12.3047, -42.7162, 0.36 ) }
    dend_53 { pt3dadd( -63.4972, 12.8552, -43.6307, 1.75 ) }
    dend_53 { pt3dadd( -64.1682, 14.1305, -46.0202, 0.15 ) }
    dend_53 { pt3dadd( -64.3325, 14.561, -46.9305, 1.53 ) }
    dend_53 { pt3dadd( -64.602, 15.6393, -49.3702, 0.15 ) }
    dend_53 { pt3dadd( -64.7005, 16.3125, -50.9806, 0.07 ) }
    dend_53 { pt3dadd( -64.7371, 16.6403, -51.7947, 0.29 ) }
    dend_53 { pt3dadd( -64.834, 17.4325, -53.8375, 0.29 ) }
    dend_53 { pt3dadd( -64.9186, 17.9474, -55.1897, 0.07 ) }
    dend_53 { pt3dadd( -65.1549, 18.6991, -56.8834, 0.07 ) }
    dend_53 { pt3dadd( -65.3512, 19.0942, -57.5827, 0.07 ) }
    dend_53 { pt3dadd( -65.695, 19.5759, -58.3142, 0.36 ) }
    dend_53 { pt3dadd( -66.4534, 20.4811, -59.5202, 0.07 ) }
    dend_53 { pt3dadd( -66.998, 21.0987, -60.234, 0.58 ) }
    dend_53 { pt3dadd( -68.0044, 22.2927, -61.4446, 0.07 ) }
    dend_53 { pt3dadd( -68.4135, 22.8404, -61.9605, 0.29 ) }
    dend_53 { pt3dadd( -69.022, 23.7443, -62.8139, 0.07 ) }
    dend_53 { pt3dadd( -69.767, 24.9286, -63.9115, 0.73 ) }
    dend_53 { pt3dadd( -70.1548, 25.5376, -64.4504, 0.36 ) }
    dend_53 { pt3dadd( -70.3927, 25.8849, -64.7504, 0.58 ) }
    dend_53 { pt3dadd( -70.9959, 26.6688, -65.4937, 0.15 ) }
    dend_53 { pt3dadd( -71.8628, 27.6616, -66.5378, 0.73 ) }
    dend_53 { pt3dadd( -72.524, 28.3126, -67.2199, 0.07 ) }
    dend_53 { pt3dadd( -72.9128, 28.6367, -67.561, 0.07 ) }
    dend_53 { pt3dadd( -74.4886, 29.8455, -68.8441, 0.36 ) }
    dend_53 { pt3dadd( -75.8464, 30.8134, -69.858, 0.07 ) }
    dend_53 { pt3dadd( -77.5148, 31.9201, -71.0003, 0.58 ) }
    dend_53 { pt3dadd( -78.6221, 32.6175, -71.725, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -79.4101, 33.0841, -72.2319, 0.66 ) }
    dend_53 { pt3dadd( -80.6077, 33.7399, -72.9893, 0.22 ) }
    dend_53 { pt3dadd( -81.5223, 34.1954, -73.5298, 0.44 ) }
    dend_53 { pt3dadd( -82.4879, 34.6529, -74.0611, 0.15 ) }
    dend_53 { pt3dadd( -83.1255, 34.9354, -74.4019, 0.66 ) }
    dend_53 { pt3dadd( -83.4968, 35.0966, -74.6221, 0.66 ) }
    dend_53 { pt3dadd( -85.1356, 35.8182, -75.6956, 0.07 ) }
    dend_53 { pt3dadd( -86.1185, 36.2558, -76.3837, 0.36 ) }
    dend_53 { pt3dadd( -86.8385, 36.5995, -76.9338, 0.66 ) }
    dend_53 { pt3dadd( -88.0009, 37.1716, -77.8155, 0.07 ) }
    dend_53 { pt3dadd( -89.1412, 37.7549, -78.6538, 1.24 ) }
    dend_53 { pt3dadd( -90.7648, 38.6165, -79.8107, 0.36 ) }
    dend_53 { pt3dadd( -91.4354, 38.9823, -80.2789, 0.36 ) }
    dend_53 { pt3dadd( -92.2178, 39.4053, -80.8218, 0.95 ) }
    dend_53 { pt3dadd( -92.8556, 39.7524, -81.2484, 0.95 ) }
    dend_53 { pt3dadd( -94.0639, 40.3665, -81.9461, 0.07 ) }
    dend_53 { pt3dadd( -94.4769, 40.551, -82.1322, 0.36 ) }
    dend_53 { pt3dadd( -95.8959, 41.1306, -82.6061, 0.07 ) }
    dend_53 { pt3dadd( -96.3081, 41.2955, -82.7482, 0.07 ) }
    dend_53 { pt3dadd( -97.1014, 41.618, -83.0336, 0.88 ) }
    dend_53 { pt3dadd( -97.8856, 41.9105, -83.3485, 0.88 ) }
    dend_53 { pt3dadd( -99.2296, 42.3196, -83.9567, 0.07 ) }
    dend_53 { pt3dadd( -99.859, 42.4737, -84.3191, 1.24 ) }
    dend_53 { pt3dadd( -101.685, 42.7926, -85.4806, 0.07 ) }
    dend_53 { pt3dadd( -102.328, 42.8651, -85.9111, 0.66 ) }
    dend_53 { pt3dadd( -103.493, 42.9349, -86.7036, 0.07 ) }
    dend_53 { pt3dadd( -104.801, 42.943, -87.5767, 1.31 ) }
    dend_53 { pt3dadd( -107.122, 42.8311, -89.0013, 0.22 ) }
    dend_53 { pt3dadd( -108.02, 42.7517, -89.514, 0.51 ) }
    dend_53 { pt3dadd( -109.255, 42.5767, -90.1572, 0.15 ) }
    dend_53 { pt3dadd( -110.051, 42.4418, -90.5508, 1.09 ) }
    dend_53 { pt3dadd( -110.678, 42.3342, -90.818, 1.68 ) }
    dend_53 { pt3dadd( -112.544, 42.0292, -91.4438, 0.15 ) }
    dend_53 { pt3dadd( -113.515, 41.8812, -91.678, 0.15 ) }
    dend_53 { pt3dadd( -114.454, 41.785, -91.902, 0.44 ) }
    dend_53 { pt3dadd( -115.109, 41.7565, -92.0502, 0.22 ) }
    dend_53 { pt3dadd( -115.697, 41.7654, -92.1677, 0.22 ) }
    dend_53 { pt3dadd( -116.507, 41.835, -92.2869, 0.51 ) }
    dend_53 { pt3dadd( -117.126, 41.9125, -92.3304, 0.51 ) }
    dend_53 { pt3dadd( -118.373, 42.0963, -92.3886, 0.15 ) }
    dend_53 { pt3dadd( -118.909, 42.1776, -92.4093, 0.15 ) }
    dend_53 { pt3dadd( -119.883, 42.3242, -92.4915, 0.73 ) }
    dend_53 { pt3dadd( -120.414, 42.3809, -92.5571, 0.73 ) }
    dend_53 { pt3dadd( -121.426, 42.4429, -92.7089, 0.07 ) }
    dend_53 { pt3dadd( -122.058, 42.4696, -92.7823, 1.24 ) }
    dend_53 { pt3dadd( -122.821, 42.515, -92.8284, 1.24 ) }
    dend_53 { pt3dadd( -124.202, 42.655, -92.8142, 0.15 ) }
    dend_53 { pt3dadd( -125.047, 42.815, -92.7248, 0.15 ) }
    dend_53 { pt3dadd( -125.459, 42.9251, -92.6524, 0.15 ) }
    dend_53 { pt3dadd( -126.423, 43.265, -92.4101, 0.15 ) }
    dend_53 { pt3dadd( -127.043, 43.5109, -92.2118, 0.88 ) }
    dend_53 { pt3dadd( -127.4, 43.668, -92.093, 0.88 ) }
    dend_53 { pt3dadd( -128.391, 44.1292, -91.814, 0.22 ) }
    dend_53 { pt3dadd( -128.865, 44.3537, -91.7352, 0.51 ) }
    dend_53 { pt3dadd( -129.436, 44.6021, -91.762, 0.51 ) }
    dend_53 { pt3dadd( -129.784, 44.7376, -91.838, 0.51 ) }
    dend_53 { pt3dadd( -130.63, 45.0216, -92.0887, 0.15 ) }
    dend_53 { pt3dadd( -131.568, 45.2906, -92.4054, 0.73 ) }
    dend_53 { pt3dadd( -132.15, 45.426, -92.6206, 1.09 ) }
    dend_53 { pt3dadd( -133.649, 45.7225, -93.153, 0.22 ) }
    dend_53 { pt3dadd( -134.77, 45.9016, -93.5233, 1.31 ) }
    dend_53 { pt3dadd( -135.098, 45.9447, -93.6302, 1.17 ) }
    dend_53 { pt3dadd( -135.693, 46.001, -93.8168, 1.17 ) }
    dend_53 { pt3dadd( -137.289, 46.0873, -94.2986, 0.22 ) }
    dend_53 { pt3dadd( -138.176, 46.1068, -94.5682, 1.24 ) }
    dend_53 { pt3dadd( -138.945, 46.0949, -94.7849, 1.24 ) }
    dend_53 { pt3dadd( -140.231, 46.0578, -95.1722, 0.07 ) }
    dend_53 { pt3dadd( -140.755, 46.0634, -95.3497, 0.07 ) }
    dend_53 { pt3dadd( -140.991, 46.0723, -95.4378, 0.07 ) }
    dend_53 { pt3dadd( -141.24, 46.0873, -95.5306, 0.07 ) }
    dend_53 { pt3dadd( -141.651, 46.1319, -95.6436, 0.07 ) }
    dend_53 { pt3dadd( -142.169, 46.2104, -95.7272, 0.07 ) }
    dend_53 { pt3dadd( -143.258, 46.373, -95.8174, 0.36 ) }
    dend_53 { pt3dadd( -143.877, 46.4594, -95.8627, 0.95 ) }
    dend_53 { pt3dadd( -144.687, 46.5629, -95.9367, 1.24 ) }
    dend_53 { pt3dadd( -146.621, 46.7569, -96.1295, 0.07 ) }
    dend_53 { pt3dadd( -147.911, 46.8547, -96.2831, 0.29 ) }
    dend_53 { pt3dadd( -149.003, 46.8921, -96.4312, 0.07 ) }
    dend_53 { pt3dadd( -149.495, 46.878, -96.4799, 0.95 ) }
    dend_53 { pt3dadd( -151.054, 46.7646, -96.6623, 0.22 ) }
    dend_53 { pt3dadd( -151.727, 46.6724, -96.7882, 0.22 ) }
    dend_53 { pt3dadd( -152.26, 46.5674, -96.9255, 0.22 ) }
    dend_53 { pt3dadd( -153.417, 46.267, -97.2946, 0.51 ) }
    dend_53 { pt3dadd( -155.043, 45.737, -97.8796, 0.29 ) }
    dend_53 { pt3dadd( -156.209, 45.3049, -98.3231, 1.39 ) }
    dend_53 { pt3dadd( -158.362, 44.4547, -99.2388, 0.29 ) }
    dend_53 { pt3dadd( -158.762, 44.3023, -99.4256, 0.29 ) }
    dend_53 { pt3dadd( -159.506, 44.0402, -99.8318, 0.88 ) }
    dend_53 { pt3dadd( -160.279, 43.7729, -100.376, 0.29 ) }
    dend_53 { pt3dadd( -160.568, 43.6641, -100.648, 0.29 ) }
    dend_53 { pt3dadd( -161.229, 43.3114, -101.438, 0.66 ) }
    dend_53 { pt3dadd( -161.603, 43.0853, -101.955, 0.66 ) }
    dend_53 { pt3dadd( -162.284, 42.6714, -102.959, 0.36 ) }
    dend_53 { pt3dadd( -162.916, 42.2778, -104.0, 0.36 ) }
    dend_53 { pt3dadd( -163.385, 41.9336, -104.921, 0.95 ) }
    dend_53 { pt3dadd( -163.976, 41.3076, -106.319, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 96/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -14.2067, 7.31577, 2.17153, 0.58 ) }
    dend_36 { pt3dadd( -14.9168, 7.36144, 2.61436, 0.58 ) }
    dend_36 { pt3dadd( -16.0097, 7.43174, 3.29598, 0.58 ) }
    dend_36 { pt3dadd( -17.0449, 7.49832, 3.94156, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( -18.2526, 7.576, 4.69471, 1.17 ) }
    dend_36 { pt3dadd( -19.0032, 7.62428, 5.16281, 1.02 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -14.2067, 7.31577, 2.17153, 0.88 ) }
    dend_25 { pt3dadd( -14.6554, 8.11506, 1.36319, 0.88 ) }
    dend_25 { pt3dadd( -15.3325, 9.32128, 0.143299, 0.95 ) }
    dend_25 { pt3dadd( -15.8674, 10.274, -0.820259, 1.61 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 6/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.99178, 20.8317, 32.1638, 0.07 ) }
    dend_23 { pt3dadd( 2.4233, 25.7825, 39.8844, 0.07 ) }
    dend_23 { pt3dadd( 5.71322, 30.2623, 47.3773, 0.07 ) }
    dend_23 { pt3dadd( 6.76267, 35.7646, 54.7342, 0.07 ) }
    dend_23 { pt3dadd( 7.99425, 42.3422, 61.0225, 0.07 ) }
    dend_23 { pt3dadd( 10.2201, 50.0956, 65.2797, 0.07 ) }
    dend_23 { pt3dadd( 10.8846, 58.1382, 69.3984, 0.07 ) }
    dend_23 { pt3dadd( 11.3156, 65.8046, 74.2539, 0.07 ) }
    dend_23 { pt3dadd( 11.9191, 72.5381, 80.4334, 0.07 ) }
    dend_23 { pt3dadd( 13.3258, 79.3593, 86.398, 0.07 ) }
    dend_23 { pt3dadd( 14.4821, 85.9884, 92.639, 0.07 ) }
    dend_23 { pt3dadd( 16.505, 92.0761, 99.2743, 0.07 ) }
    dend_23 { pt3dadd( 19.281, 98.5829, 105.184, 0.07 ) }
    dend_23 { pt3dadd( 21.3459, 104.722, 111.755, 0.07 ) }
    dend_23 { pt3dadd( 23.5546, 110.498, 118.635, 0.07 ) }
    dend_23 { pt3dadd( 26.1626, 117.197, 124.38, 0.07 ) }
    dend_23 { pt3dadd( 27.8784, 123.685, 130.671, 0.07 ) }
    dend_23 { pt3dadd( 29.7524, 130.858, 136.042, 0.07 ) }
    dend_23 { pt3dadd( 32.0148, 137.206, 142.331, 0.07 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 25/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.99178, 20.8317, 32.1638, 0.07 ) }
    dend_22 { pt3dadd( 1.47868, 24.788, 40.4388, 0.07 ) }
    dend_22 { pt3dadd( 2.36455, 26.9651, 49.3832, 0.07 ) }
    dend_22 { pt3dadd( 1.77804, 28.2083, 58.55, 0.07 ) }
    dend_22 { pt3dadd( 2.70364, 30.3732, 67.4936, 0.07 ) }
    dend_22 { pt3dadd( 2.72562, 31.1505, 76.7347, 0.07 ) }
    dend_22 { pt3dadd( 2.65389, 31.1166, 86.0116, 0.07 ) }
    dend_22 { pt3dadd( 3.44595, 32.7453, 95.0935, 0.07 ) }
    dend_22 { pt3dadd( 5.64865, 36.0595, 103.395, 0.07 ) }
    dend_22 { pt3dadd( 7.70088, 39.3327, 111.754, 0.07 ) }
    dend_22 { pt3dadd( 9.99387, 42.5073, 120.091, 0.07 ) }
    dend_22 { pt3dadd( 13.0782, 43.8614, 128.718, 0.07 ) }
    dend_22 { pt3dadd( 17.3113, 46.1398, 136.605, 0.07 ) }
    dend_22 { pt3dadd( 23.2047, 47.0836, 143.691, 0.07 ) }
    dend_22 { pt3dadd( 29.0236, 47.9446, 150.85, 0.07 ) }
    dend_22 { pt3dadd( 33.2248, 48.3986, 159.105, 0.07 ) }
    dend_22 { pt3dadd( 35.9103, 49.9396, 167.83, 0.07 ) }
    dend_22 { pt3dadd( 38.3851, 51.302, 176.652, 0.07 ) }
    dend_22 { pt3dadd( 39.435, 54.2373, 185.334, 0.07 ) }
    dend_22 { pt3dadd( 41.1292, 56.9817, 193.981, 0.07 ) }
    dend_22 { pt3dadd( 41.7188, 58.9822, 202.996, 0.07 ) }
    dend_22 { pt3dadd( 41.0269, 61.9366, 211.712, 0.07 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 47/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 3.3135, -10.8555, 2.65715, 2.77 ) }
    dend_12 { pt3dadd( 4.28886, -11.2366, 2.55155, 2.77 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 49/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.3135, -10.8555, 2.65715, 2.63 ) }
    dend_1 { pt3dadd( 3.10104, -12.2697, 2.60435, 2.63 ) }
    dend_1 { pt3dadd( 2.87424, -13.7793, 2.54799, 2.34 ) }
    dend_1 { pt3dadd( 2.50151, -16.2604, 2.45536, 2.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 53/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -22.3866, 33.2829, 0.0, 0.1532 ) }
    axon_1 { pt3dadd( -30.6871, 45.777, 0.0, 0.1532 ) }
    axon_1 { pt3dadd( -38.9877, 58.271, 0.0, 0.1532 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 56/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -107.123, -43.0395, -96.9336, 0.07 ) }
    dend_59 { pt3dadd( -108.7, -43.6953, -97.1445, 0.07 ) }
    dend_59 { pt3dadd( -110.161, -44.2706, -97.4084, 0.51 ) }
    dend_59 { pt3dadd( -111.67, -44.8388, -97.7457, 0.22 ) }
    dend_59 { pt3dadd( -113.278, -45.4226, -98.1998, 0.07 ) }
    dend_59 { pt3dadd( -114.734, -45.953, -98.6817, 0.29 ) }
    dend_59 { pt3dadd( -115.51, -46.229, -98.9468, 0.07 ) }
    dend_59 { pt3dadd( -116.884, -46.6726, -99.4361, 1.02 ) }
    dend_59 { pt3dadd( -118.518, -47.1999, -100.073, 0.07 ) }
    dend_59 { pt3dadd( -119.894, -47.6972, -100.612, 0.51 ) }
    dend_59 { pt3dadd( -121.459, -48.3442, -101.238, 0.15 ) }
    dend_59 { pt3dadd( -122.507, -48.8329, -101.611, 0.36 ) }
    dend_59 { pt3dadd( -123.783, -49.5176, -102.014, 0.07 ) }
    dend_59 { pt3dadd( -124.896, -50.1988, -102.291, 0.51 ) }
    dend_59 { pt3dadd( -126.578, -51.3774, -102.595, 0.07 ) }
    dend_59 { pt3dadd( -127.447, -52.0659, -102.68, 0.73 ) }
    dend_59 { pt3dadd( -128.861, -53.3143, -102.72, 0.07 ) }
    dend_59 { pt3dadd( -129.345, -53.7712, -102.725, 0.22 ) }
    dend_59 { pt3dadd( -129.782, -54.1856, -102.735, 0.07 ) }
    dend_59 { pt3dadd( -130.18, -54.5538, -102.713, 0.36 ) }
    dend_59 { pt3dadd( -130.671, -54.9914, -102.674, 0.07 ) }
    dend_59 { pt3dadd( -131.303, -55.5309, -102.655, 0.44 ) }
    dend_59 { pt3dadd( -132.224, -56.1963, -102.676, 0.15 ) }
    dend_59 { pt3dadd( -133.197, -56.7521, -102.817, 0.88 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -107.123, -43.0395, -96.9336, 0.07 ) }
    dend_58 { pt3dadd( -108.027, -43.6585, -97.729, 0.07 ) }
    dend_58 { pt3dadd( -108.744, -44.2168, -98.503, 0.51 ) }
    dend_58 { pt3dadd( -109.011, -44.4498, -98.8166, 0.15 ) }
    dend_58 { pt3dadd( -109.63, -45.0416, -99.608, 0.44 ) }
    dend_58 { pt3dadd( -110.106, -45.5031, -100.27, 0.07 ) }
    dend_58 { pt3dadd( -111.022, -46.4067, -101.722, 0.07 ) }
    dend_58 { pt3dadd( -111.241, -46.6433, -102.173, 0.51 ) }
    dend_58 { pt3dadd( -111.393, -46.8133, -102.521, 0.36 ) }
    dend_58 { pt3dadd( -111.774, -47.2517, -103.462, 0.66 ) }
    dend_58 { pt3dadd( -112.181, -47.7279, -104.587, 0.36 ) }
    dend_58 { pt3dadd( -112.545, -48.1548, -105.589, 0.07 ) }
    dend_58 { pt3dadd( -112.752, -48.387, -106.142, 0.36 ) }
    dend_58 { pt3dadd( -113.118, -48.7806, -107.098, 0.36 ) }
    dend_58 { pt3dadd( -113.315, -48.9886, -107.614, 0.51 ) }
    dend_58 { pt3dadd( -114.117, -49.9257, -109.756, 0.07 ) }
    dend_58 { pt3dadd( -114.511, -50.4727, -110.777, 0.07 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 97/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -19.0032, 7.62428, 5.16281, 0.22 ) }
    dend_44 { pt3dadd( -18.3118, 6.65351, 5.56412, 0.22 ) }
    dend_44 { pt3dadd( -17.4234, 4.75963, 6.20073, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_44 { pt3dadd( -17.0129, 3.62651, 6.52513, 0.22 ) }
    dend_44 { pt3dadd( -16.7168, 2.64512, 6.77738, 0.22 ) }
    dend_44 { pt3dadd( -16.3839, 1.38462, 7.08567, 0.22 ) }
    dend_44 { pt3dadd( -16.1359, 0.265523, 7.36694, 0.44 ) }
    dend_44 { pt3dadd( -15.9581, -1.53303, 7.7403, 0.07 ) }
    dend_44 { pt3dadd( -16.0259, -2.25923, 7.92086, 0.07 ) }
    dend_44 { pt3dadd( -16.1837, -2.88187, 8.1462, 0.22 ) }
    dend_44 { pt3dadd( -16.3373, -3.33179, 8.33781, 0.07 ) }
    dend_44 { pt3dadd( -16.5869, -3.93679, 8.66739, 0.07 ) }
    dend_44 { pt3dadd( -16.7698, -4.31027, 8.94095, 0.07 ) }
    dend_44 { pt3dadd( -17.5587, -5.66982, 10.2373, 0.22 ) }
    dend_44 { pt3dadd( -17.9669, -6.21268, 10.8417, 0.22 ) }
    dend_44 { pt3dadd( -16.4593, -17.0696, 13.229, 0.22 ) }
    dend_44 { pt3dadd( -14.5346, -27.7732, 16.0096, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 14/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -19.0032, 7.62428, 5.16281, 0.15 ) }
    dend_37 { pt3dadd( -19.3977, 8.71485, 5.94215, 0.15 ) }
    dend_37 { pt3dadd( -19.5449, 10.0142, 7.10126, 0.29 ) }
    dend_37 { pt3dadd( -19.3639, 10.6233, 7.85358, 0.29 ) }
    dend_37 { pt3dadd( -18.6781, 11.324, 9.2809, 0.29 ) }
    dend_37 { pt3dadd( -18.3556, 11.4823, 9.85824, 0.22 ) }
    dend_37 { pt3dadd( -17.8212, 11.5551, 10.7986, 0.22 ) }
    dend_37 { pt3dadd( -16.9579, 11.4251, 12.2145, 0.22 ) }
    dend_37 { pt3dadd( -16.0929, 11.1009, 13.6612, 0.22 ) }
    dend_37 { pt3dadd( -15.3029, 10.6655, 14.9511, 0.22 ) }
    dend_37 { pt3dadd( -14.671, 10.1943, 15.9916, 0.22 ) }
    dend_37 { pt3dadd( -13.9052, 9.45292, 17.4595, 0.51 ) }
    dend_37 { pt3dadd( -13.6104, 9.03215, 18.1666, 0.95 ) }
    dend_37 { pt3dadd( -13.3935, 8.26935, 19.2234, 1.17 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 28/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -15.8674, 10.274, -0.820259, 0.88 ) }
    dend_33 { pt3dadd( -16.2847, 11.639, -0.235479, 0.88 ) }
    dend_33 { pt3dadd( -16.7659, 13.226, 0.417992, 0.88 ) }
    dend_33 { pt3dadd( -16.9792, 13.8826, 0.674392, 0.88 ) }
    dend_33 { pt3dadd( -17.3983, 15.0858, 1.0915, 0.73 ) }
    dend_33 { pt3dadd( -17.7258, 16.0258, 1.41738, 0.73 ) }
    dend_33 { pt3dadd( -18.0382, 16.9225, 1.72821, 1.61 ) }
    dend_33 { pt3dadd( -18.1856, 17.313, 1.83539, 1.97 ) }
    dend_33 { pt3dadd( -18.4715, 18.0221, 2.00612, 1.46 ) }
    dend_33 { pt3dadd( -18.9372, 19.1785, 2.26428, 0.8 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 38/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -15.8674, 10.274, -0.820259, 0.36 ) }
    dend_26 { pt3dadd( -17.066, 11.081, -0.540013, 0.36 ) }
    dend_26 { pt3dadd( -17.6492, 11.4269, -0.344307, 0.8 ) }
    dend_26 { pt3dadd( -18.4756, 11.8665, -0.0197912, 0.8 ) }
    dend_26 { pt3dadd( -19.6117, 12.4039, 0.454345, 0.66 ) }
    dend_26 { pt3dadd( -20.6161, 12.7842, 0.880286, 0.8 ) }
    dend_26 { pt3dadd( -21.468, 13.0595, 1.22402, 0.95 ) }
    dend_26 { pt3dadd( -22.179, 13.219, 1.50296, 1.09 ) }
    dend_26 { pt3dadd( -22.9463, 13.3316, 1.74377, 1.53 ) }
    dend_26 { pt3dadd( -23.8997, 13.4188, 1.90546, 1.09 ) }
    dend_26 { pt3dadd( -25.4441, 13.5461, 1.87979, 0.73 ) }
    dend_26 { pt3dadd( -25.9705, 13.607, 1.78906, 0.73 ) }
    dend_26 { pt3dadd( -27.4281, 13.8811, 1.34789, 0.73 ) }
    dend_26 { pt3dadd( -28.0194, 14.0639, 1.0926, 0.73 ) }
    dend_26 { pt3dadd( -29.0574, 14.5002, 0.536674, 0.73 ) }
    dend_26 { pt3dadd( -29.8196, 14.9094, 0.0727829, 1.17 ) }
    dend_26 { pt3dadd( -30.5509, 15.3732, -0.397549, 1.61 ) }
    dend_26 { pt3dadd( -31.2453, 15.8598, -0.853095, 1.61 ) }
    dend_26 { pt3dadd( -32.3419, 16.7201, -1.56652, 1.02 ) }
    dend_26 { pt3dadd( -33.2193, 17.4224, -2.1161, 1.02 ) }
    dend_26 { pt3dadd( -34.1161, 18.1591, -2.63914, 1.02 ) }
    dend_26 { pt3dadd( -35.0807, 18.9624, -3.14796, 1.02 ) }
    dend_26 { pt3dadd( -35.9788, 19.7098, -3.56673, 1.02 ) }
    dend_26 { pt3dadd( -36.9586, 20.5094, -3.98138, 0.95 ) }
    dend_26 { pt3dadd( -37.5511, 20.9959, -4.19558, 0.95 ) }
    dend_26 { pt3dadd( -38.1246, 21.4983, -4.37089, 1.46 ) }
    dend_26 { pt3dadd( -38.843, 22.1562, -4.52038, 1.82 ) }
    dend_26 { pt3dadd( -39.4563, 22.7364, -4.54255, 1.82 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.28886, -11.2366, 2.55155, 0.51 ) }
    dend_16 { pt3dadd( 4.48907, -11.239, 2.64314, 0.51 ) }
    dend_16 { pt3dadd( 5.3352, -11.0953, 3.09701, 0.29 ) }
    dend_16 { pt3dadd( 5.74786, -10.9363, 3.41512, 0.29 ) }
    dend_16 { pt3dadd( 6.03796, -10.7541, 3.70988, 0.15 ) }
    dend_16 { pt3dadd( 6.34191, -10.4534, 4.1171, 0.15 ) }
    dend_16 { pt3dadd( 6.50027, -10.2368, 4.40245, 0.44 ) }
    dend_16 { pt3dadd( 6.68889, -9.8262, 4.87551, 0.66 ) }
    dend_16 { pt3dadd( 6.87004, -9.22509, 5.5093, 0.15 ) }
    dend_16 { pt3dadd( 6.93713, -9.04477, 5.69879, 0.15 ) }
    dend_16 { pt3dadd( 7.07216, -8.79443, 5.94391, 0.36 ) }
    dend_16 { pt3dadd( 7.47353, -8.3431, 6.3285, 0.36 ) }
    dend_16 { pt3dadd( 7.81336, -8.11689, 6.49634, 0.8 ) }
    dend_16 { pt3dadd( 8.44901, -7.84342, 6.64968, 0.8 ) }
    dend_16 { pt3dadd( 9.24964, -7.59192, 6.78787, 0.15 ) }
    dend_16 { pt3dadd( 9.99418, -7.42829, 6.89334, 0.15 ) }
    dend_16 { pt3dadd( 10.2918, -7.39293, 6.9193, 0.15 ) }
    dend_16 { pt3dadd( 10.6486, -7.39376, 6.94908, 0.15 ) }
    dend_16 { pt3dadd( 10.8567, -7.44414, 7.01068, 0.15 ) }
    dend_16 { pt3dadd( 11.3568, -7.74679, 7.24572, 0.15 ) }
    dend_16 { pt3dadd( 11.6092, -7.87396, 7.34709, 0.15 ) }
    dend_16 { pt3dadd( 11.7947, -7.99072, 7.46245, 0.15 ) }
    dend_16 { pt3dadd( 12.4994, -8.4092, 7.90522, 0.15 ) }
    dend_16 { pt3dadd( 12.8021, -8.51668, 8.03157, 0.15 ) }
    dend_16 { pt3dadd( 13.5148, -8.59202, 8.11762, 0.15 ) }
    dend_16 { pt3dadd( 14.8848, -8.60103, 8.08932, 0.15 ) }
    dend_16 { pt3dadd( 20.371, -6.94463, 11.5832, 0.15 ) }
    dend_16 { pt3dadd( 25.7264, -4.31106, 14.5787, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 94/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.28886, -11.2366, 2.55155, 0.51 ) }
    dend_13 { pt3dadd( 4.09584, -10.7005, 3.22625, 0.51 ) }
    dend_13 { pt3dadd( 3.3764, -9.49491, 4.80057, 0.73 ) }
    dend_13 { pt3dadd( 2.77419, -8.73604, 5.8909, 0.73 ) }
    dend_13 { pt3dadd( 2.25056, -8.19899, 6.72012, 0.73 ) }
    dend_13 { pt3dadd( 1.55629, -7.59694, 7.69046, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 0.531413, -6.85735, 8.97348, 0.73 ) }
    dend_13 { pt3dadd( -0.414231, -6.37021, 9.94926, 0.73 ) }
    dend_13 { pt3dadd( -1.37052, -6.04442, 10.8042, 0.73 ) }
    dend_13 { pt3dadd( -2.36057, -5.84818, 11.6946, 0.73 ) }
    dend_13 { pt3dadd( -3.04394, -5.77503, 12.3136, 0.73 ) }
    dend_13 { pt3dadd( -4.01788, -5.76243, 13.2138, 0.73 ) }
    dend_13 { pt3dadd( -4.61493, -5.8285, 13.7301, 0.73 ) }
    dend_13 { pt3dadd( -3.84526, -5.80961, 13.698, 0.73 ) }
    dend_13 { pt3dadd( -2.94734, -5.81553, 13.9608, 0.73 ) }
    dend_13 { pt3dadd( -1.25957, -5.83654, 14.4992, 0.58 ) }
    dend_13 { pt3dadd( -0.420519, -5.85938, 14.7358, 0.88 ) }
    dend_13 { pt3dadd( 0.51909, -5.87397, 14.9486, 0.88 ) }
    dend_13 { pt3dadd( 1.49369, -5.85108, 15.1459, 0.22 ) }
    dend_13 { pt3dadd( 2.02423, -5.81249, 15.2484, 0.22 ) }
    dend_13 { pt3dadd( 3.07767, -5.72481, 15.4303, 0.22 ) }
    dend_13 { pt3dadd( 3.99926, -5.65663, 15.6052, 0.22 ) }
    dend_13 { pt3dadd( 4.68033, -5.6414, 15.7311, 0.22 ) }
    dend_13 { pt3dadd( 5.75586, -5.69567, 15.9502, 0.22 ) }
    dend_13 { pt3dadd( 6.45055, -5.77058, 16.0952, 0.22 ) }
    dend_13 { pt3dadd( 6.60438, -2.03361, 25.8223, 0.22 ) }
    dend_13 { pt3dadd( 8.9337, 0.572145, 35.6804, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.50151, -16.2604, 2.45536, 1.9 ) }
    dend_7 { pt3dadd( 3.26331, -17.5203, 3.81971, 1.9 ) }
    dend_7 { pt3dadd( 3.76727, -18.7654, 4.97479, 0.88 ) }
    dend_7 { pt3dadd( 3.84294, -19.1262, 5.2963, 0.8 ) }
    dend_7 { pt3dadd( 3.87032, -19.5721, 5.68504, 0.8 ) }
    dend_7 { pt3dadd( 3.83751, -19.891, 5.97212, 0.8 ) }
    dend_7 { pt3dadd( 3.65863, -20.5071, 6.55794, 0.73 ) }
    dend_7 { pt3dadd( 3.07844, -20.5707, 6.80538, 0.58 ) }
    dend_7 { pt3dadd( 2.3221, -20.3873, 7.10523, 0.58 ) }
    dend_7 { pt3dadd( 2.06793, -20.2753, 7.19458, 0.58 ) }
    dend_7 { pt3dadd( 1.11665, -19.7846, 7.54256, 1.17 ) }
    dend_7 { pt3dadd( 0.474282, -19.4446, 7.8198, 1.17 ) }
    dend_7 { pt3dadd( -0.821451, -18.8049, 8.50592, 1.17 ) }
    dend_7 { pt3dadd( -1.64251, -18.446, 9.01344, 0.8 ) }
    dend_7 { pt3dadd( -2.54383, -18.1579, 9.66866, 0.51 ) }
    dend_7 { pt3dadd( -3.53903, -17.9621, 10.459, 0.51 ) }
    dend_7 { pt3dadd( -4.45857, -17.9194, 11.257, 0.51 ) }
    dend_7 { pt3dadd( -5.58024, -18.0382, 12.3425, 1.39 ) }
    dend_7 { pt3dadd( -5.99166, -18.1595, 12.8044, 1.39 ) }
    dend_7 { pt3dadd( -6.91847, -18.6374, 14.0586, 1.39 ) }
    dend_7 { pt3dadd( -7.37169, -19.0263, 14.8874, 1.09 ) }
    dend_7 { pt3dadd( -7.58206, -19.4039, 15.5534, 0.88 ) }
    dend_7 { pt3dadd( -7.68382, -19.9593, 16.4168, 0.66 ) }
    dend_7 { pt3dadd( -7.32496, -20.7358, 17.3539, 0.36 ) }
    dend_7 { pt3dadd( -6.65604, -21.4912, 18.0681, 0.29 ) }
    dend_7 { pt3dadd( -6.23205, -21.849, 18.3501, 0.29 ) }
    dend_7 { pt3dadd( -5.56708, -22.3355, 18.7125, 0.29 ) }
    dend_7 { pt3dadd( -8.99807, -25.8416, 27.4312, 0.29 ) }
    dend_7 { pt3dadd( -10.5517, -27.6124, 37.2095, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 50/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.50151, -16.2604, 2.45536, 1.53 ) }
    dend_2 { pt3dadd( 2.34184, -17.4271, 1.98029, 1.53 ) }
    dend_2 { pt3dadd( 2.2044, -18.4314, 1.57135, 1.53 ) }
    dend_2 { pt3dadd( 2.07096, -19.4064, 1.1743, 1.97 ) }
    dend_2 { pt3dadd( 1.94998, -20.2904, 0.814331, 2.48 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 55/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -14.5346, -27.7732, 16.0096, 0.07 ) }
    dend_46 { pt3dadd( -13.2295, -34.9736, 18.4488, 0.07 ) }
    dend_46 { pt3dadd( -11.3914, -42.0339, 21.0001, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 58/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -14.5346, -27.7732, 16.0096, 0.07 ) }
    dend_45 { pt3dadd( -13.2779, -37.9123, 19.1414, 0.07 ) }
    dend_45 { pt3dadd( -13.5591, -48.1122, 22.3406, 0.07 ) }
    dend_45 { pt3dadd( -13.4038, -57.7965, 26.8962, 0.07 ) }
    dend_45 { pt3dadd( -15.4785, -67.7898, 30.2047, 0.07 ) }
    dend_45 { pt3dadd( -19.215, -77.6483, 32.4805, 0.07 ) }
    dend_45 { pt3dadd( -21.2532, -87.4685, 36.2995, 0.07 ) }
    dend_45 { pt3dadd( -24.7207, -96.5754, 40.9377, 0.07 ) }
    dend_45 { pt3dadd( -26.5263, -106.513, 44.5427, 0.07 ) }
    dend_45 { pt3dadd( -27.5624, -116.282, 48.8211, 0.07 ) }
    dend_45 { pt3dadd( -27.4797, -126.283, 52.6051, 0.07 ) }
    dend_45 { pt3dadd( -27.5463, -136.486, 55.799, 0.07 ) }
    dend_45 { pt3dadd( -29.0507, -147.065, 56.7741, 0.07 ) }
    dend_45 { pt3dadd( -30.9177, -157.406, 58.9142, 0.07 ) }
    dend_45 { pt3dadd( -32.2678, -167.269, 62.8827, 0.07 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 73/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -13.3935, 8.26935, 19.2234, 0.44 ) }
    dend_41 { pt3dadd( -13.2591, 9.5977, 19.3849, 0.44 ) }
    dend_41 { pt3dadd( -13.1494, 11.322, 19.5112, 0.58 ) }
    dend_41 { pt3dadd( -13.1148, 12.2028, 19.5289, 0.44 ) }
    dend_41 { pt3dadd( -13.094, 13.1191, 19.4989, 0.22 ) }
    dend_41 { pt3dadd( -13.0904, 13.8516, 19.4442, 0.22 ) }
    dend_41 { pt3dadd( -13.0855, 14.8628, 19.3688, 0.22 ) }
    dend_41 { pt3dadd( -13.095, 15.5482, 19.2686, 0.22 ) }
    dend_41 { pt3dadd( -13.1446, 16.7153, 19.0141, 1.02 ) }
    dend_41 { pt3dadd( -13.2341, 18.0432, 18.7244, 0.36 ) }
    dend_41 { pt3dadd( -13.3426, 19.2689, 18.4458, 0.15 ) }
    dend_41 { pt3dadd( -13.7708, 30.6622, 18.3109, 0.15 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 85/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -13.3935, 8.26935, 19.2234, 0.15 ) }
    dend_38 { pt3dadd( -14.0814, 8.82522, 19.1491, 0.15 ) }
    dend_38 { pt3dadd( -15.0217, 9.90024, 19.2023, 0.15 ) }
    dend_38 { pt3dadd( -15.3907, 10.5306, 19.2844, 0.15 ) }
    dend_38 { pt3dadd( -15.7827, 11.3585, 19.4334, 0.15 ) }
    dend_38 { pt3dadd( -16.3497, 12.5524, 19.7719, 0.15 ) }
    dend_38 { pt3dadd( -16.7401, 13.2809, 20.0229, 0.15 ) }
    dend_38 { pt3dadd( -16.9754, 13.7335, 20.242, 0.15 ) }
    dend_38 { pt3dadd( -17.3946, 14.4225, 20.6817, 0.44 ) }
    dend_38 { pt3dadd( -17.9837, 15.0405, 21.2411, 0.29 ) }
    dend_38 { pt3dadd( -18.9541, 15.4462, 21.974, 0.15 ) }
    dend_38 { pt3dadd( -19.6471, 15.4682, 22.371, 0.15 ) }
    dend_38 { pt3dadd( -20.3774, 15.398, 22.7268, 0.15 ) }
    dend_38 { pt3dadd( -21.6502, 15.2255, 23.2819, 0.15 ) }
    dend_38 { pt3dadd( -22.3698, 15.1099, 23.5805, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( -23.0049, 15.0098, 23.8252, 0.15 ) }
    dend_38 { pt3dadd( -23.5854, 14.9826, 24.0177, 0.15 ) }
    dend_38 { pt3dadd( -24.3129, 15.1399, 24.2902, 0.15 ) }
    dend_38 { pt3dadd( -24.985, 15.5268, 24.5501, 0.15 ) }
    dend_38 { pt3dadd( -25.5142, 15.9666, 24.7515, 0.15 ) }
    dend_38 { pt3dadd( -26.0128, 16.4058, 24.9066, 0.15 ) }
    dend_38 { pt3dadd( -26.3553, 16.7142, 24.9951, 0.15 ) }
    dend_38 { pt3dadd( -27.0861, 17.3373, 25.1612, 0.22 ) }
    dend_38 { pt3dadd( -27.535, 17.6736, 25.2565, 0.22 ) }
    dend_38 { pt3dadd( -28.1288, 18.0487, 25.3895, 0.22 ) }
    dend_38 { pt3dadd( -29.0478, 18.5526, 25.6204, 0.15 ) }
    dend_38 { pt3dadd( -30.1858, 19.1409, 25.9817, 0.15 ) }
    dend_38 { pt3dadd( -30.8668, 19.5151, 26.2497, 0.15 ) }
    dend_38 { pt3dadd( -31.4497, 19.8803, 26.5142, 0.36 ) }
    dend_38 { pt3dadd( -32.1964, 20.3615, 26.8844, 0.15 ) }
    dend_38 { pt3dadd( -32.9895, 20.8347, 27.2703, 0.15 ) }
    dend_38 { pt3dadd( -33.9088, 21.3055, 27.6721, 0.15 ) }
    dend_38 { pt3dadd( -34.5905, 21.5958, 27.934, 0.15 ) }
    dend_38 { pt3dadd( -35.2231, 21.7944, 28.1496, 0.15 ) }
    dend_38 { pt3dadd( -36.3354, 22.1292, 28.4959, 0.15 ) }
    dend_38 { pt3dadd( -38.1627, 22.637, 28.9708, 0.15 ) }
    dend_38 { pt3dadd( -39.6271, 22.9889, 29.2767, 1.09 ) }
    dend_38 { pt3dadd( -40.9084, 23.214, 29.4854, 1.09 ) }
    dend_38 { pt3dadd( -42.5618, 23.3867, 29.737, 0.22 ) }
    dend_38 { pt3dadd( -51.4742, 28.9228, 32.3493, 0.22 ) }
    dend_38 { pt3dadd( -59.623, 35.7228, 33.9188, 0.22 ) }
    dend_38 { pt3dadd( -68.8958, 41.2236, 33.6332, 0.22 ) }
    dend_38 { pt3dadd( -76.393, 48.777, 34.3437, 0.22 ) }
    dend_38 { pt3dadd( -83.8112, 56.234, 36.2466, 0.22 ) }
    dend_38 { pt3dadd( -91.1438, 63.9475, 36.1444, 0.22 ) }
    dend_38 { pt3dadd( -96.3484, 73.0974, 36.5282, 0.22 ) }
    dend_38 { pt3dadd( -101.713, 82.1418, 37.381, 0.22 ) }
    dend_38 { pt3dadd( -107.053, 91.1938, 38.3119, 0.22 ) }
    dend_38 { pt3dadd( -111.64, 100.636, 38.1715, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 34/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -18.9372, 19.1785, 2.26428, 0.29 ) }
    dend_35 { pt3dadd( -18.5288, 19.7414, 2.71462, 0.29 ) }
    dend_35 { pt3dadd( -18.1285, 20.1374, 3.06235, 0.29 ) }
    dend_35 { pt3dadd( -17.827, 20.3856, 3.29931, 0.73 ) }
    dend_35 { pt3dadd( -17.5221, 20.6358, 3.51934, 1.17 ) }
    dend_35 { pt3dadd( -17.3056, 20.8214, 3.67239, 1.17 ) }
    dend_35 { pt3dadd( -16.738, 21.3608, 4.07627, 0.36 ) }
    dend_35 { pt3dadd( -16.3108, 21.7864, 4.3382, 0.58 ) }
    dend_35 { pt3dadd( -16.049, 22.1012, 4.52532, 0.36 ) }
    dend_35 { pt3dadd( -15.7911, 22.6005, 4.8178, 0.22 ) }
    dend_35 { pt3dadd( -15.7295, 22.9536, 5.01175, 0.22 ) }
    dend_35 { pt3dadd( -15.7691, 23.4156, 5.22856, 0.22 ) }
    dend_35 { pt3dadd( -15.8663, 23.8277, 5.39302, 0.22 ) }
    dend_35 { pt3dadd( -16.0404, 24.518, 5.65291, 0.66 ) }
    dend_35 { pt3dadd( -16.2007, 25.2312, 5.93425, 0.22 ) }
    dend_35 { pt3dadd( -16.2746, 25.6871, 6.12954, 0.22 ) }
    dend_35 { pt3dadd( -16.331, 26.2545, 6.39498, 0.22 ) }
    dend_35 { pt3dadd( -16.3558, 26.8109, 6.6702, 0.22 ) }
    dend_35 { pt3dadd( -16.365, 27.4864, 7.00489, 0.07 ) }
    dend_35 { pt3dadd( -16.3344, 27.999, 7.25522, 0.44 ) }
    dend_35 { pt3dadd( -16.2645, 28.5239, 7.53522, 0.22 ) }
    dend_35 { pt3dadd( -16.1864, 29.0349, 7.82479, 0.07 ) }
    dend_35 { pt3dadd( -16.1408, 29.432, 8.07968, 0.51 ) }
    dend_35 { pt3dadd( -16.149, 29.8094, 8.33379, 0.15 ) }
    dend_35 { pt3dadd( -15.6224, 34.5128, 12.2011, 0.15 ) }
    dend_35 { pt3dadd( -14.1872, 39.3602, 15.613, 0.15 ) }
    dend_35 { pt3dadd( -12.3584, 44.6389, 17.9648, 0.15 ) }
    dend_35 { pt3dadd( -10.3712, 49.5516, 20.972, 0.15 ) }
    dend_35 { pt3dadd( -9.04874, 54.4181, 24.3996, 0.15 ) }
    dend_35 { pt3dadd( -8.6173, 59.4704, 27.7589, 0.15 ) }
    dend_35 { pt3dadd( -7.30067, 64.138, 31.482, 0.15 ) }
    dend_35 { pt3dadd( -5.90357, 68.7684, 35.2269, 0.15 ) }
    dend_35 { pt3dadd( -4.0031, 73.4951, 38.5982, 0.15 ) }
    dend_35 { pt3dadd( -3.08832, 78.6414, 41.6913, 0.15 ) }
    dend_35 { pt3dadd( -2.53482, 83.6109, 45.167, 0.15 ) }
    dend_35 { pt3dadd( -1.73651, 88.1884, 49.1527, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 70/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -18.9372, 19.1785, 2.26428, 0.44 ) }
    dend_34 { pt3dadd( -19.6232, 19.5142, 2.61758, 0.44 ) }
    dend_34 { pt3dadd( -20.153, 19.8984, 3.00111, 0.44 ) }
    dend_34 { pt3dadd( -20.4811, 20.2052, 3.26889, 0.44 ) }
    dend_34 { pt3dadd( -20.8891, 20.645, 3.60633, 0.44 ) }
    dend_34 { pt3dadd( -21.2942, 21.0926, 3.89658, 0.44 ) }
    dend_34 { pt3dadd( -21.889, 21.7591, 4.29374, 0.66 ) }
    dend_34 { pt3dadd( -22.2488, 22.2167, 4.55323, 0.88 ) }
    dend_34 { pt3dadd( -22.5524, 22.6042, 4.75659, 1.09 ) }
    dend_34 { pt3dadd( -22.8518, 22.9553, 4.91837, 1.24 ) }
    dend_34 { pt3dadd( -23.6063, 23.6973, 5.2127, 0.36 ) }
    dend_34 { pt3dadd( -24.1299, 24.0882, 5.35018, 0.22 ) }
    dend_34 { pt3dadd( -24.5605, 24.3114, 5.42617, 0.22 ) }
    dend_34 { pt3dadd( -25.1877, 24.5304, 5.50685, 0.22 ) }
    dend_34 { pt3dadd( -25.6367, 24.6454, 5.53834, 0.22 ) }
    dend_34 { pt3dadd( -26.1787, 24.7682, 5.54485, 0.22 ) }
    dend_34 { pt3dadd( -26.8483, 24.9387, 5.50506, 0.66 ) }
    dend_34 { pt3dadd( -27.2781, 25.0863, 5.449, 0.88 ) }
    dend_34 { pt3dadd( -27.8645, 25.4051, 5.37133, 0.44 ) }
    dend_34 { pt3dadd( -28.3071, 25.8085, 5.3575, 0.29 ) }
    dend_34 { pt3dadd( -28.6764, 26.3074, 5.40502, 0.29 ) }
    dend_34 { pt3dadd( -29.0298, 26.9075, 5.52013, 0.66 ) }
    dend_34 { pt3dadd( -29.1864, 27.209, 5.60532, 0.66 ) }
    dend_34 { pt3dadd( -29.4817, 27.8168, 5.83575, 0.36 ) }
    dend_34 { pt3dadd( -29.826, 28.5459, 6.17468, 0.22 ) }
    dend_34 { pt3dadd( -29.9448, 28.7898, 6.30356, 0.22 ) }
    dend_34 { pt3dadd( -30.2126, 29.2745, 6.58336, 0.22 ) }
    dend_34 { pt3dadd( -30.5956, 29.838, 6.91977, 0.22 ) }
    dend_34 { pt3dadd( -30.9513, 30.2099, 7.16041, 0.22 ) }
    dend_34 { pt3dadd( -31.3213, 30.5341, 7.35749, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -31.5673, 30.7173, 7.46157, 0.15 ) }
    dend_34 { pt3dadd( -31.9467, 30.9651, 7.61643, 0.51 ) }
    dend_34 { pt3dadd( -32.6529, 31.341, 7.90159, 0.29 ) }
    dend_34 { pt3dadd( -33.5808, 31.5821, 8.24566, 0.07 ) }
    dend_34 { pt3dadd( -40.1488, 35.2486, 10.246, 0.07 ) }
    dend_34 { pt3dadd( -46.7154, 39.028, 12.0062, 0.07 ) }
    dend_34 { pt3dadd( -53.2653, 43.1465, 12.638, 0.07 ) }
    dend_34 { pt3dadd( -60.2262, 46.469, 13.8125, 0.07 ) }
    dend_34 { pt3dadd( -67.3549, 49.6504, 14.0596, 0.07 ) }
    dend_34 { pt3dadd( -74.0987, 53.5184, 13.7927, 0.07 ) }
    dend_34 { pt3dadd( -80.4793, 57.8937, 14.2217, 0.07 ) }
    dend_34 { pt3dadd( -86.989, 62.0362, 13.3464, 0.07 ) }
    dend_34 { pt3dadd( -92.5731, 66.9216, 11.2011, 0.07 ) }
    dend_34 { pt3dadd( -98.3037, 71.8006, 9.47026, 0.07 ) }
    dend_34 { pt3dadd( -103.802, 76.7926, 7.37709, 0.07 ) }
    dend_34 { pt3dadd( -110.263, 81.035, 6.68745, 0.07 ) }
    dend_34 { pt3dadd( -116.449, 85.3617, 4.90301, 0.07 ) }
    dend_34 { pt3dadd( -121.469, 91.0577, 3.88009, 0.07 ) }
    dend_34 { pt3dadd( -126.774, 96.4844, 2.68734, 0.07 ) }
    dend_34 { pt3dadd( -130.675, 102.99, 2.67044, 0.07 ) }
    dend_34 { pt3dadd( -133.755, 109.856, 2.00899, 0.07 ) }
    dend_34 { pt3dadd( -135.391, 117.158, 1.41591, 0.07 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 22/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -39.4563, 22.7364, -4.54255, 0.51 ) }
    dend_30 { pt3dadd( -40.4377, 22.8547, -3.59798, 0.51 ) }
    dend_30 { pt3dadd( -41.1665, 22.945, -3.01029, 0.51 ) }
    dend_30 { pt3dadd( -42.5025, 23.1994, -2.03425, 0.51 ) }
    dend_30 { pt3dadd( -43.0764, 23.3521, -1.62944, 0.51 ) }
    dend_30 { pt3dadd( -44.2628, 23.767, -0.83804, 0.66 ) }
    dend_30 { pt3dadd( -45.0455, 24.1356, -0.385379, 0.58 ) }
    dend_30 { pt3dadd( -45.9646, 24.6659, -0.0506042, 0.51 ) }
    dend_30 { pt3dadd( -46.7146, 25.2047, 0.117303, 0.51 ) }
    dend_30 { pt3dadd( -47.3538, 25.7402, 0.184343, 0.51 ) }
    dend_30 { pt3dadd( -48.0597, 26.4116, 0.225031, 0.51 ) }
    dend_30 { pt3dadd( -49.4696, 27.8207, 0.176733, 0.51 ) }
    dend_30 { pt3dadd( -50.5148, 28.8023, 0.0329246, 0.51 ) }
    dend_30 { pt3dadd( -51.0315, 29.2246, -0.0790628, 0.51 ) }
    dend_30 { pt3dadd( -51.7747, 29.7063, -0.27182, 0.88 ) }
    dend_30 { pt3dadd( -52.1022, 29.8623, -0.358224, 1.09 ) }
    dend_30 { pt3dadd( -53.7055, 30.3225, -0.668908, 0.51 ) }
    dend_30 { pt3dadd( -54.6764, 30.4403, -0.730625, 0.51 ) }
    dend_30 { pt3dadd( -55.2588, 30.4707, -0.703181, 0.51 ) }
    dend_30 { pt3dadd( -55.9751, 30.5101, -0.650942, 0.51 ) }
    dend_30 { pt3dadd( -57.0019, 30.6167, -0.568911, 0.51 ) }
    dend_30 { pt3dadd( -58.1578, 30.8245, -0.478058, 0.66 ) }
    dend_30 { pt3dadd( -59.6132, 31.2624, -0.346066, 1.02 ) }
    dend_30 { pt3dadd( -61.0339, 31.9091, -0.235341, 0.66 ) }
    dend_30 { pt3dadd( -62.1209, 32.573, -0.201711, 0.51 ) }
    dend_30 { pt3dadd( -63.3906, 33.5615, -0.246356, 0.44 ) }
    dend_30 { pt3dadd( -64.2191, 34.3285, -0.342625, 0.88 ) }
    dend_30 { pt3dadd( -65.0856, 35.2083, -0.506649, 0.66 ) }
    dend_30 { pt3dadd( -65.9657, 36.1416, -0.699955, 0.51 ) }
    dend_30 { pt3dadd( -66.5506, 36.7301, -0.831348, 0.51 ) }
    dend_30 { pt3dadd( -67.2411, 37.3195, -0.985833, 0.36 ) }
    dend_30 { pt3dadd( -68.0597, 37.833, -1.19139, 0.58 ) }
    dend_30 { pt3dadd( -69.2022, 38.2735, -1.53205, 0.95 ) }
    dend_30 { pt3dadd( -70.0553, 38.4615, -1.81113, 1.17 ) }
    dend_30 { pt3dadd( -71.5202, 38.6495, -2.27259, 0.51 ) }
    dend_30 { pt3dadd( -72.139, 38.7058, -2.44664, 0.51 ) }
    dend_30 { pt3dadd( -73.1502, 38.7845, -2.68904, 0.44 ) }
    dend_30 { pt3dadd( -74.229, 38.8996, -2.87822, 0.44 ) }
    dend_30 { pt3dadd( -74.8451, 39.0012, -2.92107, 0.44 ) }
    dend_30 { pt3dadd( -75.8674, 39.2492, -2.88353, 0.44 ) }
    dend_30 { pt3dadd( -77.2795, 39.7029, -2.68131, 0.51 ) }
    dend_30 { pt3dadd( -78.0153, 39.9763, -2.52789, 0.51 ) }
    dend_30 { pt3dadd( -79.021, 40.3985, -2.26985, 1.61 ) }
    dend_30 { pt3dadd( -79.8773, 40.7704, -2.03107, 2.12 ) }
    dend_30 { pt3dadd( -80.7387, 41.1417, -1.7897, 2.12 ) }
    dend_30 { pt3dadd( -82.0421, 41.6945, -1.44687, 0.88 ) }
    dend_30 { pt3dadd( -82.7663, 42.0012, -1.25121, 0.58 ) }
    dend_30 { pt3dadd( -83.1457, 42.153, -1.15684, 0.73 ) }
    dend_30 { pt3dadd( -84.6481, 42.7, -0.808085, 0.51 ) }
    dend_30 { pt3dadd( -85.6853, 43.047, -0.57799, 0.8 ) }
    dend_30 { pt3dadd( -86.3214, 43.247, -0.425831, 1.02 ) }
    dend_30 { pt3dadd( -87.1557, 43.5023, -0.214107, 0.73 ) }
    dend_30 { pt3dadd( -88.34, 43.8542, 0.0531077, 0.51 ) }
    dend_30 { pt3dadd( -89.5748, 44.2131, 0.295132, 0.44 ) }
    dend_30 { pt3dadd( -90.405, 44.4562, 0.427717, 0.8 ) }
    dend_30 { pt3dadd( -91.3758, 44.7434, 0.59533, 1.02 ) }
    dend_30 { pt3dadd( -92.9401, 45.2298, 0.915711, 0.51 ) }
    dend_30 { pt3dadd( -94.0642, 45.6062, 1.21077, 0.66 ) }
    dend_30 { pt3dadd( -94.8859, 45.9201, 1.5266, 0.44 ) }
    dend_30 { pt3dadd( -95.5554, 46.2275, 1.91235, 0.44 ) }
    dend_30 { pt3dadd( -96.5929, 46.8501, 2.83859, 0.22 ) }
    dend_30 { pt3dadd( -97.0149, 47.2678, 3.49681, 0.15 ) }
    dend_30 { pt3dadd( -97.3474, 47.8798, 4.45885, 0.15 ) }
    dend_30 { pt3dadd( -97.5184, 48.4099, 5.2055, 0.15 ) }
    dend_30 { pt3dadd( -97.5829, 48.818, 5.68836, 0.36 ) }
    dend_30 { pt3dadd( -97.6342, 49.2973, 6.20045, 0.36 ) }
    dend_30 { pt3dadd( -97.744, 50.0732, 6.83761, 0.07 ) }
    dend_30 { pt3dadd( -97.8753, 50.5977, 7.19556, 0.07 ) }
    dend_30 { pt3dadd( -98.0528, 51.2058, 7.49634, 0.36 ) }
    dend_30 { pt3dadd( -98.2705, 52.0187, 7.81493, 0.07 ) }
    dend_30 { pt3dadd( -105.746, 55.9579, 10.6732, 0.07 ) }
    dend_30 { pt3dadd( -113.454, 58.9434, 14.1235, 0.07 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 94/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -39.4563, 22.7364, -4.54255, 0.44 ) }
    dend_27 { pt3dadd( -40.0694, 23.3605, -4.14637, 0.44 ) }
    dend_27 { pt3dadd( -40.5491, 23.9015, -3.86546, 0.44 ) }
    dend_27 { pt3dadd( -41.2818, 24.9272, -3.42514, 0.44 ) }
    dend_27 { pt3dadd( -41.8189, 25.8605, -3.08146, 0.44 ) }
    dend_27 { pt3dadd( -42.2577, 26.9287, -2.78619, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -42.5353, 27.8402, -2.57243, 0.88 ) }
    dend_27 { pt3dadd( -42.734, 29.0848, -2.41512, 0.36 ) }
    dend_27 { pt3dadd( -42.8085, 30.3698, -2.37917, 0.36 ) }
    dend_27 { pt3dadd( -42.7741, 31.2063, -2.48056, 0.36 ) }
    dend_27 { pt3dadd( -42.6098, 32.8468, -2.91177, 0.36 ) }
    dend_27 { pt3dadd( -42.5222, 33.5459, -3.21989, 0.36 ) }
    dend_27 { pt3dadd( -42.4566, 34.5369, -3.86709, 0.36 ) }
    dend_27 { pt3dadd( -42.5258, 35.1544, -4.3742, 0.58 ) }
    dend_27 { pt3dadd( -42.7805, 36.1073, -5.1943, 0.58 ) }
    dend_27 { pt3dadd( -43.0033, 36.8452, -5.71535, 0.29 ) }
    dend_27 { pt3dadd( -43.1242, 37.2657, -5.93307, 0.29 ) }
    dend_27 { pt3dadd( -43.3346, 38.1931, -6.21986, 0.29 ) }
    dend_27 { pt3dadd( -43.6351, 39.9197, -6.437, 0.29 ) }
    dend_27 { pt3dadd( -43.8273, 41.1672, -6.47401, 0.29 ) }
    dend_27 { pt3dadd( -44.0645, 42.5101, -6.44736, 1.09 ) }
    dend_27 { pt3dadd( -44.1926, 43.1349, -6.4361, 1.09 ) }
    dend_27 { pt3dadd( -44.4969, 44.2571, -6.43381, 0.22 ) }
    dend_27 { pt3dadd( -44.7646, 44.9314, -6.45702, 0.22 ) }
    dend_27 { pt3dadd( -45.1073, 45.5243, -6.52815, 0.22 ) }
    dend_27 { pt3dadd( -45.7412, 46.3851, -6.71687, 0.22 ) }
    dend_27 { pt3dadd( -46.4064, 47.2082, -6.99468, 0.51 ) }
    dend_27 { pt3dadd( -47.0426, 47.9882, -7.27675, 1.02 ) }
    dend_27 { pt3dadd( -47.7292, 48.8811, -7.59319, 1.24 ) }
    dend_27 { pt3dadd( -48.268, 49.6367, -7.83155, 1.24 ) }
    dend_27 { pt3dadd( -49.4686, 51.5629, -8.33014, 0.22 ) }
    dend_27 { pt3dadd( -50.2422, 53.1685, -8.61348, 0.22 ) }
    dend_27 { pt3dadd( -50.6, 54.128, -8.70224, 0.36 ) }
    dend_27 { pt3dadd( -50.8912, 55.0676, -8.74487, 0.66 ) }
    dend_27 { pt3dadd( -51.0586, 55.6896, -8.75565, 0.88 ) }
    dend_27 { pt3dadd( -51.2822, 56.5498, -8.7291, 0.88 ) }
    dend_27 { pt3dadd( -51.7005, 57.9911, -8.61425, 0.15 ) }
    dend_27 { pt3dadd( -52.034, 58.6071, -8.57647, 0.58 ) }
    dend_27 { pt3dadd( -53.1246, 59.8678, -8.4748, 0.15 ) }
    dend_27 { pt3dadd( -54.2925, 60.8558, -8.38779, 0.66 ) }
    dend_27 { pt3dadd( -54.9378, 61.3119, -8.34246, 1.68 ) }
    dend_27 { pt3dadd( -56.2179, 62.1088, -8.23767, 2.41 ) }
    dend_27 { pt3dadd( -58.5879, 63.4949, -8.02347, 0.58 ) }
    dend_27 { pt3dadd( -60.2238, 64.4863, -7.8347, 0.36 ) }
    dend_27 { pt3dadd( -61.1366, 65.112, -7.65864, 0.15 ) }
    dend_27 { pt3dadd( -61.4613, 65.3665, -7.58303, 0.15 ) }
    dend_27 { pt3dadd( -62.0294, 65.885, -7.43175, 0.15 ) }
    dend_27 { pt3dadd( -62.7585, 66.7364, -7.20235, 0.73 ) }
    dend_27 { pt3dadd( -63.1612, 67.3439, -7.05357, 0.73 ) }
    dend_27 { pt3dadd( -63.8974, 68.4827, -6.81004, 0.29 ) }
    dend_27 { pt3dadd( -64.3627, 69.1508, -6.63384, 0.29 ) }
    dend_27 { pt3dadd( -65.3186, 70.3774, -6.33612, 1.02 ) }
    dend_27 { pt3dadd( -65.9263, 71.1051, -6.21214, 1.17 ) }
    dend_27 { pt3dadd( -67.2029, 72.5018, -6.06897, 0.15 ) }
    dend_27 { pt3dadd( -67.7594, 73.074, -6.0632, 0.36 ) }
    dend_27 { pt3dadd( -68.1219, 73.4481, -6.12312, 0.36 ) }
    dend_27 { pt3dadd( -69.1017, 74.5479, -6.42473, 0.07 ) }
    dend_27 { pt3dadd( -69.8738, 75.5757, -6.81406, 0.66 ) }
    dend_27 { pt3dadd( -70.301, 76.1903, -7.07839, 1.24 ) }
    dend_27 { pt3dadd( -70.5666, 76.5825, -7.26671, 1.24 ) }
    dend_27 { pt3dadd( -71.3278, 77.6213, -7.81222, 0.15 ) }
    dend_27 { pt3dadd( -71.6338, 77.9992, -8.04004, 0.15 ) }
    dend_27 { pt3dadd( -72.1162, 78.514, -8.36294, 0.15 ) }
    dend_27 { pt3dadd( -72.6699, 78.9757, -8.67518, 0.15 ) }
    dend_27 { pt3dadd( -73.2603, 79.4048, -9.04106, 0.15 ) }
    dend_27 { pt3dadd( -74.1724, 80.0092, -9.62451, 0.66 ) }
    dend_27 { pt3dadd( -75.1858, 80.6305, -10.2677, 1.53 ) }
    dend_27 { pt3dadd( -75.7913, 81.0084, -10.661, 2.04 ) }
    dend_27 { pt3dadd( -77.0385, 81.8407, -11.4873, 1.61 ) }
    dend_27 { pt3dadd( -78.593, 83.0104, -12.4916, 0.15 ) }
    dend_27 { pt3dadd( -78.9292, 83.3155, -12.6639, 0.15 ) }
    dend_27 { pt3dadd( -79.264, 83.6833, -12.7665, 0.15 ) }
    dend_27 { pt3dadd( -79.7652, 84.3386, -12.8185, 0.15 ) }
    dend_27 { pt3dadd( -80.2756, 85.1544, -12.813, 0.95 ) }
    dend_27 { pt3dadd( -80.6242, 85.8103, -12.7573, 1.09 ) }
    dend_27 { pt3dadd( -81.4866, 87.4435, -12.4969, 0.22 ) }
    dend_27 { pt3dadd( -81.6988, 87.8121, -12.4602, 0.22 ) }
    dend_27 { pt3dadd( -81.9058, 88.1101, -12.4596, 0.22 ) }
    dend_27 { pt3dadd( -82.4277, 88.6111, -12.6047, 0.22 ) }
    dend_27 { pt3dadd( -83.0529, 88.869, -13.071, 0.44 ) }
    dend_27 { pt3dadd( -83.5615, 88.9734, -13.5952, 0.44 ) }
    dend_27 { pt3dadd( -84.2139, 89.2031, -14.3928, 0.15 ) }
    dend_27 { pt3dadd( -84.4448, 89.3443, -14.6149, 0.15 ) }
    dend_27 { pt3dadd( -84.8215, 89.6269, -14.8999, 0.15 ) }
    dend_27 { pt3dadd( -85.2965, 90.0757, -15.1977, 0.44 ) }
    dend_27 { pt3dadd( -85.8877, 90.7946, -15.5815, 0.22 ) }
    dend_27 { pt3dadd( -86.7274, 92.0051, -16.1067, 0.73 ) }
    dend_27 { pt3dadd( -87.3634, 93.0088, -16.4581, 1.53 ) }
    dend_27 { pt3dadd( -87.6345, 93.4482, -16.6007, 1.53 ) }
    dend_27 { pt3dadd( -88.5583, 94.9256, -17.022, 0.07 ) }
    dend_27 { pt3dadd( -89.1877, 95.9137, -17.278, 0.07 ) }
    dend_27 { pt3dadd( -89.5476, 96.4888, -17.4011, 0.88 ) }
    dend_27 { pt3dadd( -90.0875, 97.3314, -17.4898, 1.46 ) }
    dend_27 { pt3dadd( -90.552, 98.1012, -17.533, 1.46 ) }
    dend_27 { pt3dadd( -91.658, 99.8984, -17.5409, 0.15 ) }
    dend_27 { pt3dadd( -92.2045, 100.672, -17.4976, 0.15 ) }
    dend_27 { pt3dadd( -92.8388, 101.504, -17.4539, 0.66 ) }
    dend_27 { pt3dadd( -93.8258, 102.81, -17.402, 0.07 ) }
    dend_27 { pt3dadd( -94.7654, 104.257, -17.3375, 0.36 ) }
    dend_27 { pt3dadd( -94.9909, 104.674, -17.3215, 0.36 ) }
    dend_27 { pt3dadd( -95.6546, 106.051, -17.2882, 0.07 ) }
    dend_27 { pt3dadd( -96.1124, 106.949, -17.2883, 0.58 ) }
    dend_27 { pt3dadd( -96.6019, 107.887, -17.3607, 0.88 ) }
    dend_27 { pt3dadd( -97.3728, 109.306, -17.5694, 0.07 ) }
    dend_27 { pt3dadd( -97.8267, 110.07, -17.6858, 0.73 ) }
    dend_27 { pt3dadd( -98.0275, 110.377, -17.7391, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_27 { pt3dadd( -99.0522, 111.827, -18.1019, 0.07 ) }
    dend_27 { pt3dadd( -99.991, 112.899, -18.4782, 1.02 ) }
    dend_27 { pt3dadd( -100.619, 113.484, -18.7662, 1.61 ) }
    dend_27 { pt3dadd( -101.023, 113.787, -18.9624, 1.61 ) }
    dend_27 { pt3dadd( -102.058, 114.458, -19.4813, 0.73 ) }
    dend_27 { pt3dadd( -103.354, 115.31, -20.2538, 0.07 ) }
    dend_27 { pt3dadd( -104.105, 115.811, -20.7545, 0.07 ) }
    dend_27 { pt3dadd( -104.42, 116.012, -20.9593, 0.07 ) }
    dend_27 { pt3dadd( -104.851, 116.319, -21.2639, 0.58 ) }
    dend_27 { pt3dadd( -105.388, 116.733, -21.6429, 0.8 ) }
    dend_27 { pt3dadd( -106.796, 117.876, -22.5825, 0.29 ) }
    dend_27 { pt3dadd( -107.55, 118.518, -23.0564, 0.51 ) }
    dend_27 { pt3dadd( -107.973, 118.917, -23.343, 0.51 ) }
    dend_27 { pt3dadd( -109.06, 119.951, -24.0865, 0.07 ) }
    dend_27 { pt3dadd( -109.726, 120.565, -24.5422, 0.8 ) }
    dend_27 { pt3dadd( -110.181, 120.964, -24.8766, 0.8 ) }
    dend_27 { pt3dadd( -111.693, 122.241, -26.0582, 0.07 ) }
    dend_27 { pt3dadd( -112.829, 123.241, -26.971, 0.66 ) }
    dend_27 { pt3dadd( -113.446, 123.814, -27.4758, 1.46 ) }
    dend_27 { pt3dadd( -113.763, 124.112, -27.7411, 1.46 ) }
    dend_27 { pt3dadd( -114.923, 125.252, -28.8118, 0.29 ) }
    dend_27 { pt3dadd( -115.606, 125.93, -29.4449, 0.29 ) }
    dend_27 { pt3dadd( -116.576, 126.927, -30.2984, 0.07 ) }
    dend_27 { pt3dadd( -117.366, 127.773, -30.9591, 0.66 ) }
    dend_27 { pt3dadd( -118.149, 128.709, -31.614, 1.82 ) }
    dend_27 { pt3dadd( -119.24, 130.174, -32.5275, 0.29 ) }
    dend_27 { pt3dadd( -119.842, 131.04, -32.9964, 0.8 ) }
    dend_27 { pt3dadd( -120.867, 132.522, -33.8223, 0.15 ) }
    dend_27 { pt3dadd( -121.204, 133.008, -34.1062, 0.36 ) }
    dend_27 { pt3dadd( -121.84, 133.857, -34.581, 0.73 ) }
    dend_27 { pt3dadd( -122.461, 134.625, -34.9871, 0.07 ) }
    dend_27 { pt3dadd( -123.004, 135.193, -35.301, 0.88 ) }
    dend_27 { pt3dadd( -124.131, 136.09, -35.9172, 0.07 ) }
    dend_27 { pt3dadd( -124.845, 136.467, -36.2073, 0.29 ) }
    dend_27 { pt3dadd( -125.966, 136.981, -36.6143, 0.07 ) }
    dend_27 { pt3dadd( -126.502, 137.242, -36.7934, 0.66 ) }
    dend_27 { pt3dadd( -127.115, 137.587, -36.9623, 0.95 ) }
    dend_27 { pt3dadd( -128.351, 138.392, -37.2554, 0.07 ) }
    dend_27 { pt3dadd( -129.448, 139.214, -37.4456, 0.07 ) }
    dend_27 { pt3dadd( -131.054, 140.624, -37.6961, 0.07 ) }
    dend_27 { pt3dadd( -132.334, 141.941, -37.8771, 0.07 ) }
    dend_27 { pt3dadd( -133.389, 143.232, -38.0496, 0.44 ) }
    dend_27 { pt3dadd( -133.75, 143.753, -38.101, 0.29 ) }
    dend_27 { pt3dadd( -134.127, 144.375, -38.1441, 1.09 ) }
    dend_27 { pt3dadd( -134.602, 145.242, -38.163, 1.09 ) }
    dend_27 { pt3dadd( -135.496, 146.96, -38.0467, 0.07 ) }
    dend_27 { pt3dadd( -136.546, 149.012, -37.8247, 0.07 ) }
    dend_27 { pt3dadd( -137.145, 150.252, -37.6806, 1.17 ) }
    dend_27 { pt3dadd( -137.375, 150.736, -37.6219, 0.95 ) }
    dend_27 { pt3dadd( -138.089, 152.185, -37.4274, 0.22 ) }
    dend_27 { pt3dadd( -138.395, 152.769, -37.3292, 0.07 ) }
    dend_27 { pt3dadd( -138.582, 153.075, -37.2456, 0.07 ) }
    dend_27 { pt3dadd( -139.05, 153.713, -37.0182, 0.29 ) }
    dend_27 { pt3dadd( -139.693, 154.515, -36.7397, 0.07 ) }
    dend_27 { pt3dadd( -140.147, 155.138, -36.5981, 0.51 ) }
    dend_27 { pt3dadd( -140.453, 155.613, -36.5388, 0.51 ) }
    dend_27 { pt3dadd( -141.168, 157.022, -36.5197, 0.07 ) }
    dend_27 { pt3dadd( -141.521, 157.91, -36.6048, 0.95 ) }
    dend_27 { pt3dadd( -141.683, 158.41, -36.7194, 1.17 ) }
    dend_27 { pt3dadd( -142.478, 161.181, -37.6638, 0.07 ) }
    dend_27 { pt3dadd( -142.739, 162.164, -38.1114, 0.88 ) }
    dend_27 { pt3dadd( -143.22, 164.178, -39.1409, 0.22 ) }
    dend_27 { pt3dadd( -143.576, 165.913, -40.1451, 0.44 ) }
    dend_27 { pt3dadd( -143.904, 167.568, -41.1989, 0.44 ) }
    dend_27 { pt3dadd( -144.039, 168.326, -41.7509, 1.09 ) }
    dend_27 { pt3dadd( -144.148, 168.98, -42.402, 1.09 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 66/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 25.7264, -4.31106, 14.5787, 0.07 ) }
    dend_20 { pt3dadd( 34.344, -1.60354, 19.1684, 0.07 ) }
    dend_20 { pt3dadd( 42.4808, 1.80178, 24.1061, 0.07 ) }
    dend_20 { pt3dadd( 51.0765, 4.95972, 28.4093, 0.07 ) }
    dend_20 { pt3dadd( 59.9301, 8.14541, 32.129, 0.07 ) }
    dend_20 { pt3dadd( 69.0292, 11.8261, 34.5157, 0.07 ) }
    dend_20 { pt3dadd( 78.8525, 14.2252, 35.3148, 0.07 ) }
    dend_20 { pt3dadd( 88.7575, 15.8102, 36.926, 0.07 ) }
    dend_20 { pt3dadd( 98.7988, 17.361, 36.8218, 0.07 ) }
    dend_20 { pt3dadd( 108.24, 20.4885, 34.9249, 0.07 ) }
    dend_20 { pt3dadd( 117.33, 24.6183, 33.4854, 0.07 ) }
    dend_20 { pt3dadd( 125.862, 29.2759, 30.8764, 0.07 ) }
    dend_20 { pt3dadd( 133.593, 34.1869, 26.7309, 0.07 ) }
    dend_20 { pt3dadd( 141.765, 39.5956, 24.6188, 0.07 ) }
    dend_20 { pt3dadd( 149.006, 46.3877, 24.3951, 0.07 ) }
    dend_20 { pt3dadd( 156.362, 52.9898, 25.4655, 0.07 ) }
    dend_20 { pt3dadd( 164.558, 58.7099, 25.0556, 0.07 ) }
    dend_20 { pt3dadd( 173.783, 62.5871, 26.3892, 0.07 ) }
    dend_20 { pt3dadd( 182.579, 67.2895, 27.6798, 0.07 ) }
    dend_20 { pt3dadd( 191.772, 71.1557, 29.2454, 0.07 ) }
    dend_20 { pt3dadd( 200.869, 75.4426, 29.8913, 0.07 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 87/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 25.7264, -4.31106, 14.5787, 0.07 ) }
    dend_17 { pt3dadd( 32.4033, -2.08595, 18.9599, 0.07 ) }
    dend_17 { pt3dadd( 38.8859, -0.897694, 24.0259, 0.07 ) }
    dend_17 { pt3dadd( 45.9669, 1.94382, 27.2284, 0.07 ) }
    dend_17 { pt3dadd( 53.1927, 4.04627, 30.7227, 0.07 ) }
    dend_17 { pt3dadd( 60.1721, 5.82141, 34.8554, 0.07 ) }
    dend_17 { pt3dadd( 66.8395, 7.65783, 39.4453, 0.07 ) }
    dend_17 { pt3dadd( 72.9958, 9.92264, 44.5076, 0.07 ) }
    dend_17 { pt3dadd( 77.9083, 13.6805, 49.9204, 0.07 ) }
    dend_17 { pt3dadd( 83.179, 17.433, 54.994, 0.07 ) }
    dend_17 { pt3dadd( 89.0313, 21.2281, 59.3536, 0.07 ) }
    dend_17 { pt3dadd( 94.664, 24.1539, 64.6398, 0.07 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.9337, 0.572145, 35.6804, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( 11.7571, 4.42484, 45.8286, 0.07 ) }
    dend_15 { pt3dadd( 13.304, 6.62652, 56.7738, 0.07 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 2/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 8.9337, 0.572145, 35.6804, 0.07 ) }
    dend_14 { pt3dadd( 10.7161, 2.95395, 41.7745, 0.07 ) }
    dend_14 { pt3dadd( 12.0372, 4.71169, 48.2151, 0.07 ) }
    dend_14 { pt3dadd( 14.1667, 6.19477, 54.5029, 0.07 ) }
    dend_14 { pt3dadd( 15.4518, 7.73523, 61.011, 0.07 ) }
    dend_14 { pt3dadd( 16.8523, 8.37765, 67.656, 0.07 ) }
    dend_14 { pt3dadd( 18.8979, 7.104, 74.0335, 0.07 ) }
    dend_14 { pt3dadd( 20.791, 6.42129, 80.552, 0.07 ) }
    dend_14 { pt3dadd( 22.4466, 4.5663, 86.886, 0.07 ) }
    dend_14 { pt3dadd( 23.7878, 2.05515, 93.0428, 0.07 ) }
    dend_14 { pt3dadd( 24.9956, -1.74829, 98.4646, 0.07 ) }
    dend_14 { pt3dadd( 27.341, -5.47503, 103.596, 0.07 ) }
    dend_14 { pt3dadd( 29.7554, -9.98862, 107.97, 0.07 ) }
    dend_14 { pt3dadd( 32.9037, -14.4278, 111.971, 0.07 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.5517, -27.6124, 37.2095, 0.07 ) }
    dend_11 { pt3dadd( -12.1456, -30.7917, 47.2388, 0.07 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 18/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.5517, -27.6124, 37.2095, 0.07 ) }
    dend_8 { pt3dadd( -13.6227, -30.0531, 44.6142, 0.07 ) }
    dend_8 { pt3dadd( -16.8256, -31.1056, 52.3255, 0.07 ) }
    dend_8 { pt3dadd( -18.6308, -33.3462, 60.2064, 0.07 ) }
    dend_8 { pt3dadd( -19.6063, -34.5807, 68.4742, 0.07 ) }
    dend_8 { pt3dadd( -19.0675, -36.5491, 76.6258, 0.07 ) }
    dend_8 { pt3dadd( -18.2492, -38.3851, 84.789, 0.07 ) }
    dend_8 { pt3dadd( -17.8588, -39.5172, 93.1232, 0.07 ) }
    dend_8 { pt3dadd( -16.9083, -39.5192, 101.498, 0.07 ) }
    dend_8 { pt3dadd( -16.9146, -38.9852, 109.908, 0.07 ) }
    dend_8 { pt3dadd( -16.7162, -39.8593, 118.283, 0.07 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 29/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.94998, -20.2904, 0.814331, 0.88 ) }
    dend_6 { pt3dadd( 1.80058, -21.8018, -0.283592, 0.88 ) }
    dend_6 { pt3dadd( 1.74999, -22.4951, -0.849192, 0.88 ) }
    dend_6 { pt3dadd( 1.62009, -23.722, -2.04858, 0.73 ) }
    dend_6 { pt3dadd( 1.45065, -24.6547, -3.1278, 0.73 ) }
    dend_6 { pt3dadd( 1.25402, -25.3848, -4.04713, 0.73 ) }
    dend_6 { pt3dadd( 1.18521, -25.5991, -4.31571, 0.73 ) }
    dend_6 { pt3dadd( 1.05129, -25.9147, -4.73573, 0.73 ) }
    dend_6 { pt3dadd( 0.857212, -26.6764, -5.60644, 0.73 ) }
    dend_6 { pt3dadd( 0.845375, -27.3017, -6.07369, 0.73 ) }
    dend_6 { pt3dadd( 0.988829, -28.0753, -6.39395, 0.73 ) }
    dend_6 { pt3dadd( 1.29423, -29.1075, -6.57698, 0.73 ) }
    dend_6 { pt3dadd( 1.8484, -30.6811, -6.57679, 0.73 ) }
    dend_6 { pt3dadd( 2.32549, -31.9828, -6.42416, 0.73 ) }
    dend_6 { pt3dadd( 2.70863, -33.0339, -6.20271, 0.73 ) }
    dend_6 { pt3dadd( 3.14158, -34.3438, -5.82034, 0.88 ) }
    dend_6 { pt3dadd( 3.42695, -35.3769, -5.42725, 0.66 ) }
    dend_6 { pt3dadd( 3.65849, -36.6153, -4.85685, 0.66 ) }
    dend_6 { pt3dadd( 3.69519, -37.3216, -4.51116, 0.66 ) }
    dend_6 { pt3dadd( 3.65744, -38.204, -4.13039, 0.51 ) }
    dend_6 { pt3dadd( 3.5896, -39.4636, -3.71594, 0.66 ) }
    dend_6 { pt3dadd( 3.57644, -40.3691, -3.50635, 0.66 ) }
    dend_6 { pt3dadd( 3.61406, -40.9149, -3.41935, 0.66 ) }
    dend_6 { pt3dadd( 3.87274, -42.3963, -3.26872, 0.66 ) }
    dend_6 { pt3dadd( 4.51796, -44.449, -3.04918, 0.58 ) }
    dend_6 { pt3dadd( 5.16454, -45.8213, -2.90853, 0.58 ) }
    dend_6 { pt3dadd( 5.82177, -46.8716, -2.80296, 0.58 ) }
    dend_6 { pt3dadd( 6.19974, -47.3718, -2.75058, 0.88 ) }
    dend_6 { pt3dadd( 6.7183, -47.9335, -2.65996, 0.88 ) }
    dend_6 { pt3dadd( 7.81515, -48.8094, -2.41418, 0.88 ) }
    dend_6 { pt3dadd( 8.52042, -49.2155, -2.18898, 0.88 ) }
    dend_6 { pt3dadd( 8.82648, -49.4392, -2.03977, 0.88 ) }
    dend_6 { pt3dadd( 9.18908, -49.9645, -1.76707, 0.88 ) }
    dend_6 { pt3dadd( 9.35581, -50.4862, -1.55587, 0.88 ) }
    dend_6 { pt3dadd( 9.47443, -51.199, -1.34148, 0.88 ) }
    dend_6 { pt3dadd( 9.57599, -52.22, -1.08716, 0.88 ) }
    dend_6 { pt3dadd( 9.69772, -53.9981, -0.754792, 0.58 ) }
    dend_6 { pt3dadd( 9.76368, -55.2762, -0.595934, 0.95 ) }
    dend_6 { pt3dadd( 9.81585, -56.3858, -0.47428, 1.09 ) }
    dend_6 { pt3dadd( 9.88579, -58.3242, -0.249754, 0.88 ) }
    dend_6 { pt3dadd( 9.88834, -59.4369, -0.0661257, 0.88 ) }
    dend_6 { pt3dadd( 9.82919, -60.8547, 0.230982, 0.88 ) }
    dend_6 { pt3dadd( 9.63066, -63.353, 0.954458, 0.66 ) }
    dend_6 { pt3dadd( 9.45732, -64.7107, 1.47811, 0.88 ) }
    dend_6 { pt3dadd( 9.30375, -65.5215, 1.89703, 1.24 ) }
    dend_6 { pt3dadd( 8.81163, -67.1732, 3.06213, 0.66 ) }
    dend_6 { pt3dadd( 8.56941, -67.8296, 3.67178, 0.66 ) }
    dend_6 { pt3dadd( 8.21118, -68.7686, 4.76472, 0.51 ) }
    dend_6 { pt3dadd( 8.01199, -69.3787, 5.59353, 0.51 ) }
    dend_6 { pt3dadd( 7.93947, -69.9492, 6.29242, 0.51 ) }
    dend_6 { pt3dadd( 8.17238, -70.3784, 6.5671, 0.51 ) }
    dend_6 { pt3dadd( 9.05716, -71.1556, 6.75525, 0.51 ) }
    dend_6 { pt3dadd( 10.3566, -72.1716, 6.91701, 0.29 ) }
    dend_6 { pt3dadd( 11.6866, -73.1727, 6.99034, 0.51 ) }
    dend_6 { pt3dadd( 13.0863, -74.3038, 7.03644, 0.44 ) }
    dend_6 { pt3dadd( 14.2537, -75.3292, 7.12763, 0.44 ) }
    dend_6 { pt3dadd( 15.4865, -76.4603, 7.36289, 0.66 ) }
    dend_6 { pt3dadd( 15.8837, -76.8462, 7.48079, 0.88 ) }
    dend_6 { pt3dadd( 16.4765, -77.4328, 7.7543, 0.88 ) }
    dend_6 { pt3dadd( 17.6699, -78.6232, 8.51098, 0.36 ) }
    dend_6 { pt3dadd( 18.8043, -79.6969, 9.3915, 0.36 ) }
    dend_6 { pt3dadd( 19.8907, -80.7756, 10.3589, 0.22 ) }
    dend_6 { pt3dadd( 20.0704, -80.945, 10.5164, 0.22 ) }
    dend_6 { pt3dadd( 20.9268, -81.64, 11.299, 0.29 ) }
    dend_6 { pt3dadd( 21.498, -81.9404, 11.8391, 0.07 ) }
    dend_6 { pt3dadd( 22.2897, -81.7527, 12.3348, 0.15 ) }
    dend_6 { pt3dadd( 27.029, -91.168, 14.5659, 0.15 ) }
    dend_6 { pt3dadd( 31.8363, -100.332, 17.6344, 0.15 ) }
    dend_6 { pt3dadd( 38.0953, -108.291, 21.6571, 0.15 ) }
    dend_6 { pt3dadd( 44.6249, -116.626, 24.1339, 0.15 ) }
    dend_6 { pt3dadd( 52.9477, -123.266, 26.8973, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_6 { pt3dadd( 61.2919, -129.636, 30.2333, 0.15 ) }
    dend_6 { pt3dadd( 68.9557, -136.708, 33.6286, 0.15 ) }
    dend_6 { pt3dadd( 76.9341, -142.981, 37.9129, 0.15 ) }
    dend_6 { pt3dadd( 83.8354, -149.811, 43.0275, 0.15 ) }
    dend_6 { pt3dadd( 91.2266, -156.325, 47.9145, 0.15 ) }
    dend_6 { pt3dadd( 97.4962, -163.957, 52.5667, 0.15 ) }
    dend_6 { pt3dadd( 102.364, -171.599, 58.6369, 0.15 ) }
    dend_6 { pt3dadd( 107.449, -179.318, 64.4167, 0.15 ) }
    dend_6 { pt3dadd( 110.338, -187.694, 70.6591, 0.15 ) }
    dend_6 { pt3dadd( 111.91, -196.223, 77.1267, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 10/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 1.94998, -20.2904, 0.814331, 1.53 ) }
    dend_3 { pt3dadd( 1.12118, -20.8766, 0.5543, 1.53 ) }
    dend_3 { pt3dadd( -0.081504, -21.6743, 0.218271, 1.24 ) }
    dend_3 { pt3dadd( -1.15936, -22.3892, -0.0828805, 1.09 ) }
    dend_3 { pt3dadd( -2.14982, -23.0461, -0.359612, 0.88 ) }
    dend_3 { pt3dadd( -3.35568, -23.846, -0.696529, 1.09 ) }
    dend_3 { pt3dadd( -3.9694, -24.253, -0.868001, 1.31 ) }
    dend_3 { pt3dadd( -4.76788, -24.7928, -1.12324, 1.68 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 18/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -11.3914, -42.0339, 21.0001, 0.07 ) }
    dend_50 { pt3dadd( -8.806, -46.7265, 26.2401, 0.07 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -11.3914, -42.0339, 21.0001, 0.07 ) }
    dend_47 { pt3dadd( -10.4251, -49.0772, 22.8209, 0.07 ) }
    dend_47 { pt3dadd( -9.0728, -56.1449, 24.267, 0.07 ) }
    dend_47 { pt3dadd( -6.75752, -62.8795, 26.1687, 0.07 ) }
    dend_47 { pt3dadd( -5.88352, -69.7325, 28.6855, 0.07 ) }
    dend_47 { pt3dadd( -4.52057, -76.4215, 31.4573, 0.07 ) }
    dend_47 { pt3dadd( -4.79246, -83.4091, 33.6874, 0.07 ) }
    dend_47 { pt3dadd( -4.16175, -90.5745, 35.0925, 0.07 ) }
    dend_47 { pt3dadd( -2.3986, -97.674, 35.7369, 0.07 ) }
    dend_47 { pt3dadd( -1.67466, -104.918, 36.5543, 0.07 ) }
    dend_47 { pt3dadd( -0.354887, -112.134, 36.3564, 0.07 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 31/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -13.7708, 30.6622, 18.3109, 0.07 ) }
    dend_43 { pt3dadd( -14.1685, 36.8726, 17.7272, 0.07 ) }
    dend_43 { pt3dadd( -14.9101, 43.072, 17.3602, 0.07 ) }
    dend_43 { pt3dadd( -15.1218, 49.3251, 17.2243, 0.07 ) }
    dend_43 { pt3dadd( -15.7813, 55.5477, 17.1096, 0.07 ) }
    dend_43 { pt3dadd( -15.8929, 61.6248, 15.6718, 0.07 ) }
    dend_43 { pt3dadd( -15.2573, 67.831, 15.1555, 0.07 ) }
    dend_43 { pt3dadd( -13.6262, 73.9057, 15.51, 0.07 ) }
    dend_43 { pt3dadd( -11.0982, 79.7038, 15.6394, 0.07 ) }
    dend_43 { pt3dadd( -8.35057, 85.258, 14.3914, 0.07 ) }
    dend_43 { pt3dadd( -6.33744, 90.8925, 12.4401, 0.07 ) }
    dend_43 { pt3dadd( -4.69304, 96.3597, 9.79615, 0.07 ) }
    dend_43 { pt3dadd( -2.41855, 101.742, 7.41713, 0.07 ) }
    dend_43 { pt3dadd( 1.09747, 106.578, 5.22172, 0.07 ) }
    dend_43 { pt3dadd( 5.51964, 110.685, 3.00864, 0.07 ) }
    dend_43 { pt3dadd( 10.4237, 114.141, 0.591514, 0.07 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 47/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -13.7708, 30.6622, 18.3109, 0.07 ) }
    dend_42 { pt3dadd( -12.5447, 39.7102, 19.4415, 0.07 ) }
    dend_42 { pt3dadd( -12.6575, 48.819, 20.7163, 0.07 ) }
    dend_42 { pt3dadd( -12.3218, 57.7013, 23.2463, 0.07 ) }
    dend_42 { pt3dadd( -12.1549, 66.7186, 25.1528, 0.07 ) }
    dend_42 { pt3dadd( -11.7192, 75.859, 25.9567, 0.07 ) }
    dend_42 { pt3dadd( -13.0036, 84.8997, 27.1114, 0.07 ) }
    dend_42 { pt3dadd( -12.5103, 93.9735, 28.5763, 0.07 ) }
    dend_42 { pt3dadd( -10.9465, 102.995, 29.4492, 0.07 ) }
    dend_42 { pt3dadd( -8.78984, 111.925, 29.2711, 0.07 ) }
    dend_42 { pt3dadd( -8.09682, 120.907, 27.6264, 0.07 ) }
    dend_42 { pt3dadd( -6.22923, 129.901, 27.7252, 0.07 ) }
    dend_42 { pt3dadd( -3.96578, 138.78, 27.0772, 0.07 ) }
    dend_42 { pt3dadd( -1.17546, 147.512, 28.1444, 0.07 ) }
    dend_42 { pt3dadd( 3.24946, 155.654, 28.2877, 0.07 ) }
    dend_42 { pt3dadd( 6.87018, 164.113, 27.6183, 0.07 ) }
    dend_42 { pt3dadd( 11.2879, 172.257, 27.9439, 0.07 ) }
    dend_42 { pt3dadd( 14.1154, 180.934, 26.8085, 0.07 ) }
    dend_42 { pt3dadd( 15.3445, 189.539, 23.8788, 0.07 ) }
    dend_42 { pt3dadd( 14.7574, 198.512, 22.1428, 0.07 ) }
    dend_42 { pt3dadd( 12.6951, 207.196, 19.9854, 0.07 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 68/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -111.64, 100.636, 38.1715, 0.07 ) }
    dend_40 { pt3dadd( -119.151, 107.988, 39.7725, 0.07 ) }
    dend_40 { pt3dadd( -125.622, 116.257, 40.8549, 0.07 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -111.64, 100.636, 38.1715, 0.07 ) }
    dend_39 { pt3dadd( -119.626, 108.204, 39.6453, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -113.454, 58.9434, 14.1235, 0.07 ) }
    dend_32 { pt3dadd( -123.124, 63.6936, 16.6027, 0.07 ) }
    dend_32 { pt3dadd( -133.17, 67.3296, 19.5958, 0.07 ) }
    dend_32 { pt3dadd( -143.64, 68.9412, 23.0581, 0.07 ) }
    dend_32 { pt3dadd( -154.71, 69.4763, 24.3785, 0.07 ) }
    dend_32 { pt3dadd( -165.71, 68.7265, 26.0905, 0.07 ) }
    dend_32 { pt3dadd( -176.501, 66.9602, 28.2536, 0.07 ) }
    dend_32 { pt3dadd( -187.497, 67.3772, 30.1193, 0.07 ) }
    dend_32 { pt3dadd( -198.387, 69.0071, 31.8848, 0.07 ) }
    dend_32 { pt3dadd( -209.223, 69.6336, 34.4785, 0.07 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -113.454, 58.9434, 14.1235, 0.07 ) }
    dend_31 { pt3dadd( -124.247, 63.7915, 16.691, 0.07 ) }
    dend_31 { pt3dadd( -134.733, 68.0237, 21.0564, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 86/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -144.148, 168.98, -42.402, 0.36 ) }
    dend_29 { pt3dadd( -143.956, 169.354, -42.7656, 0.36 ) }
    dend_29 { pt3dadd( -143.732, 169.872, -43.3528, 0.36 ) }
    dend_29 { pt3dadd( -143.587, 170.297, -43.796, 0.58 ) }
    dend_29 { pt3dadd( -143.295, 171.178, -44.6372, 0.58 ) }
    dend_29 { pt3dadd( -142.997, 171.977, -45.4078, 0.36 ) }
    dend_29 { pt3dadd( -142.659, 172.895, -46.3006, 0.36 ) }
    dend_29 { pt3dadd( -142.312, 174.03, -47.4002, 0.36 ) }
    dend_29 { pt3dadd( -142.136, 174.805, -48.1074, 0.51 ) }
    dend_29 { pt3dadd( -142.052, 175.415, -48.5915, 0.36 ) }
    dend_29 { pt3dadd( -142.048, 176.161, -49.0563, 0.58 ) }
    dend_29 { pt3dadd( -142.23, 177.312, -49.6067, 0.36 ) }
    dend_29 { pt3dadd( -142.465, 178.176, -49.9425, 0.88 ) }
    dend_29 { pt3dadd( -142.897, 179.428, -50.3725, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_29 { pt3dadd( -143.182, 180.095, -50.5998, 0.73 ) }
    dend_29 { pt3dadd( -143.654, 181.024, -50.894, 0.07 ) }
    dend_29 { pt3dadd( -143.988, 181.619, -51.0506, 0.29 ) }
    dend_29 { pt3dadd( -144.867, 183.067, -51.3944, 0.07 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 4/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -144.148, 168.98, -42.402, 0.07 ) }
    dend_28 { pt3dadd( -143.04, 168.736, -44.4292, 0.07 ) }
    dend_28 { pt3dadd( -142.165, 168.48, -45.8026, 0.73 ) }
    dend_28 { pt3dadd( -141.044, 168.132, -47.4148, 0.15 ) }
    dend_28 { pt3dadd( -140.475, 167.934, -48.21, 0.15 ) }
    dend_28 { pt3dadd( -139.719, 167.651, -49.2825, 0.36 ) }
    dend_28 { pt3dadd( -138.872, 167.332, -50.5087, 0.07 ) }
    dend_28 { pt3dadd( -137.864, 166.917, -51.9353, 0.8 ) }
    dend_28 { pt3dadd( -137.044, 166.569, -53.0564, 0.15 ) }
    dend_28 { pt3dadd( -136.696, 166.432, -53.5627, 0.44 ) }
    dend_28 { pt3dadd( -135.358, 165.903, -55.7274, 0.15 ) }
    dend_28 { pt3dadd( -134.569, 165.564, -57.1239, 0.44 ) }
    dend_28 { pt3dadd( -133.614, 165.096, -58.9529, 0.15 ) }
    dend_28 { pt3dadd( -132.771, 164.587, -60.7079, 0.29 ) }
    dend_28 { pt3dadd( -132.081, 164.143, -62.2004, 0.07 ) }
    dend_28 { pt3dadd( -131.581, 163.809, -63.2985, 0.07 ) }
    dend_28 { pt3dadd( -131.306, 163.583, -63.9383, 0.29 ) }
    dend_28 { pt3dadd( -130.675, 162.909, -65.5409, 0.07 ) }
    dend_28 { pt3dadd( -130.342, 162.406, -66.5316, 0.51 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 23/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 94.664, 24.1539, 64.6398, 0.07 ) }
    dend_19 { pt3dadd( 102.68, 27.4617, 70.3423, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 25/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 94.664, 24.1539, 64.6398, 0.07 ) }
    dend_18 { pt3dadd( 104.59, 28.2651, 72.0094, 0.07 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 27/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.7162, -39.8593, 118.283, 0.07 ) }
    dend_10 { pt3dadd( -21.2419, -36.679, 132.773, 0.07 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 29/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -16.7162, -39.8593, 118.283, 0.07 ) }
    dend_9 { pt3dadd( -15.3141, -42.6168, 124.332, 0.07 ) }
    dend_9 { pt3dadd( -14.8903, -44.0476, 130.99, 0.07 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.76788, -24.7928, -1.12324, 0.22 ) }
    dend_5 { pt3dadd( -5.82397, -26.4022, -1.39427, 0.22 ) }
    dend_5 { pt3dadd( -6.48866, -27.4452, -1.49902, 0.88 ) }
    dend_5 { pt3dadd( -7.24806, -28.6819, -1.43107, 0.44 ) }
    dend_5 { pt3dadd( -7.65718, -29.3572, -1.33875, 0.44 ) }
    dend_5 { pt3dadd( -8.249, -30.4199, -1.09332, 0.44 ) }
    dend_5 { pt3dadd( -8.90344, -31.6273, -0.730539, 0.22 ) }
    dend_5 { pt3dadd( -9.35884, -32.5804, -0.363622, 0.22 ) }
    dend_5 { pt3dadd( -10.0369, -33.9866, 0.26425, 1.09 ) }
    dend_5 { pt3dadd( -10.2492, -34.4399, 0.508304, 1.31 ) }
    dend_5 { pt3dadd( -10.8073, -35.8303, 1.294, 0.22 ) }
    dend_5 { pt3dadd( -11.0578, -36.6082, 1.73139, 0.22 ) }
    dend_5 { pt3dadd( -11.3188, -37.7125, 2.29909, 0.22 ) }
    dend_5 { pt3dadd( -11.4297, -38.3904, 2.57362, 0.44 ) }
    dend_5 { pt3dadd( -11.5387, -39.4724, 2.90785, 0.22 ) }
    dend_5 { pt3dadd( -11.568, -40.4126, 3.1571, 0.22 ) }
    dend_5 { pt3dadd( -11.5459, -41.1697, 3.31427, 0.22 ) }
    dend_5 { pt3dadd( -11.4198, -42.792, 3.60125, 0.15 ) }
    dend_5 { pt3dadd( -11.2907, -44.0146, 3.80824, 0.15 ) }
    dend_5 { pt3dadd( -11.1674, -45.1747, 4.00729, 0.15 ) }
    dend_5 { pt3dadd( -11.0629, -46.4007, 4.2187, 0.15 ) }
    dend_5 { pt3dadd( -10.9353, -48.0091, 4.48453, 0.15 ) }
    dend_5 { pt3dadd( -10.8155, -49.1627, 4.64805, 0.22 ) }
    dend_5 { pt3dadd( -12.9824, -58.7238, 8.38769, 0.22 ) }
    dend_5 { pt3dadd( -16.4445, -68.0303, 11.84, 0.22 ) }
    dend_5 { pt3dadd( -20.1182, -77.5479, 14.3164, 0.22 ) }
    dend_5 { pt3dadd( -23.8418, -87.1183, 16.4823, 0.22 ) }
    dend_5 { pt3dadd( -28.8499, -96.3873, 16.3873, 0.22 ) }
    dend_5 { pt3dadd( -32.536, -106.086, 14.6813, 0.22 ) }
    dend_5 { pt3dadd( -34.9966, -116.152, 13.0868, 0.22 ) }
    dend_5 { pt3dadd( -36.4702, -126.41, 11.5922, 0.22 ) }
    dend_5 { pt3dadd( -36.5116, -136.522, 8.74584, 0.22 ) }
    dend_5 { pt3dadd( -37.4229, -146.804, 6.97499, 0.22 ) }
    dend_5 { pt3dadd( -39.9294, -156.875, 5.49384, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 66/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.76788, -24.7928, -1.12324, 0.73 ) }
    dend_4 { pt3dadd( -5.15941, -26.9039, -2.87225, 0.73 ) }
    dend_4 { pt3dadd( -5.20143, -27.9348, -3.6906, 0.73 ) }
    dend_4 { pt3dadd( -5.23714, -28.7368, -4.27347, 0.73 ) }
    dend_4 { pt3dadd( -5.30545, -29.5957, -4.84614, 0.73 ) }
    dend_4 { pt3dadd( -5.39294, -30.3178, -5.29913, 0.73 ) }
    dend_4 { pt3dadd( -5.49984, -30.9714, -5.70306, 0.73 ) }
    dend_4 { pt3dadd( -5.6103, -31.8341, -6.1053, 0.73 ) }
    dend_4 { pt3dadd( -5.85101, -33.2121, -6.76022, 0.73 ) }
    dend_4 { pt3dadd( -6.03264, -33.7229, -7.11874, 0.73 ) }
    dend_4 { pt3dadd( -6.20229, -33.9964, -7.44124, 0.73 ) }
    dend_4 { pt3dadd( -6.39399, -34.1432, -7.84449, 0.73 ) }
    dend_4 { pt3dadd( -6.63564, -34.184, -8.35556, 0.73 ) }
    dend_4 { pt3dadd( -6.86077, -34.0992, -8.79856, 0.73 ) }
    dend_4 { pt3dadd( -7.24592, -33.7981, -9.84373, 0.73 ) }
    dend_4 { pt3dadd( -7.5468, -33.5023, -10.8404, 0.73 ) }
    dend_4 { pt3dadd( -7.78454, -33.2482, -11.7571, 0.58 ) }
    dend_4 { pt3dadd( -8.00671, -33.0372, -12.5906, 0.58 ) }
    dend_4 { pt3dadd( -8.39274, -32.7895, -13.6571, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 85/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -0.354887, -112.134, 36.3564, 0.07 ) }
    dend_49 { pt3dadd( 1.6558, -124.601, 39.2111, 0.07 ) }
    dend_49 { pt3dadd( 5.86623, -136.558, 42.0768, 0.07 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 88/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -0.354887, -112.134, 36.3564, 0.07 ) }
    dend_48 { pt3dadd( 0.533519, -117.436, 37.5752, 0.07 ) }
    dend_48 { pt3dadd( 2.15355, -122.678, 38.2187, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_51 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_57 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_56 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_54 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_53 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_45 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_38 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_35 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_30 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_17 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_47 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_43 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_42 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_32 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_5 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_12 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_25 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_52 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_16 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_37 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_21 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_4 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_44 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_11 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_15 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_50 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_19 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_18 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_10 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_48 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_49 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_39 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_59 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_40 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_29 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_18, dend_10, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_49, dend_49, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_51 nseg = 11
    dend_57 nseg = 7
    dend_56 nseg = 9
    dend_54 nseg = 3
    dend_53 nseg = 9
    dend_23 nseg = 9
    dend_22 nseg = 9
    dend_13 nseg = 3
    dend_7 nseg = 3
    dend_45 nseg = 7
    dend_38 nseg = 7
    dend_35 nseg = 5
    dend_34 nseg = 9
    dend_30 nseg = 5
    dend_27 nseg = 9
    dend_20 nseg = 11
    dend_17 nseg = 5
    dend_14 nseg = 5
    dend_8 nseg = 5
    dend_6 nseg = 13
    dend_47 nseg = 3
    dend_43 nseg = 5
    dend_42 nseg = 9
    dend_32 nseg = 5
    dend_5 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_NBC_d4cc42ae25_0_0


