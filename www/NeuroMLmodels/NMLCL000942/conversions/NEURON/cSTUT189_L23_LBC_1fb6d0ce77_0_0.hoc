// Cell: cSTUT189_L23_LBC_1fb6d0ce77_0_0
/*
{
  "id" : "cSTUT189_L23_LBC_1fb6d0ce77_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.72658, 3.16085, 0.0, 3.1586", "-7.90511, 2.85139, 0.0, 5.52942", "-7.08363, 2.54192, 0.0, 7.77229", "-6.26215, 2.23245, 0.0, 8.87312", "-5.44068, 1.92299, 0.0, 9.713", "-4.6192, 1.61352, 0.0, 10.2371", "-3.79772, 1.30405, 0.0, 10.754", "-2.97625, 0.994587, 0.0, 10.995", "-2.15477, 0.685121, 0.0, 11.088", "-1.3333, 0.375654, 0.0, 11.1386", "-0.51182, 0.0661874, 0.0, 10.9306", "0.309656, -0.243279, 0.0, 10.6953", "1.13113, -0.552746, 0.0, 10.3378", "1.95261, -0.862212, 0.0, 9.82409", "2.77408, -1.17168, 0.0, 9.14264", "3.59556, -1.48115, 0.0, 8.29626", "4.41704, -1.79061, 0.0, 7.19767", "5.23851, -2.10008, 0.0, 5.89828", "6.05999, -2.40955, 0.0, 4.7086", "6.88147, -2.71901, 0.0, 3.67147", "7.70294, -3.02848, 0.0, 2.2679" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-6.2198, -1.18093, 6.66, 1.03", "-6.68652, -1.5704, 6.87698, 0.74", "-7.46094, -2.12056, 7.29566, 0.52", "-7.91283, -2.42351, 7.57252, 0.52", "-8.50719, -2.84596, 7.98004, 0.44", "-9.09573, -3.28683, 8.46819, 0.44", "-9.70527, -3.73694, 9.05398, 0.66", "-10.1184, -3.97938, 9.58019, 0.88", "-10.4541, -4.09484, 10.1613, 0.96", "-10.713, -4.14322, 10.7065, 0.29", "-11.0629, -4.20952, 11.6689, 0.29", "-11.2259, -4.27077, 12.2167, 0.29", "-11.5074, -4.4391, 13.1764, 0.29", "-11.8221, -4.63233, 14.1892, 0.29", "-12.0949, -4.78845, 14.9891, 0.29", "-12.3842, -4.95608, 15.6757, 0.29", "-12.6862, -5.13352, 16.2629, 0.29", "-13.0494, -5.35069, 16.917, 0.52", "-13.5997, -5.63958, 17.829, 0.52", "-14.1506, -5.83186, 18.7075, 0.52", "-14.6592, -5.91426, 19.5243, 0.66", "-15.1148, -5.91009, 20.2701, 0.29", "-15.3803, -5.87915, 20.7626, 0.29", "-15.5841, -5.84958, 21.2082, 0.29", "-15.7223, -5.87542, 21.6089, 0.29", "-15.7801, -5.94108, 21.9553, 0.29", "-15.7936, -6.07149, 22.3848, 0.29", "-15.7942, -6.43863, 23.3365, 0.29", "-15.8204, -6.58321, 23.6952, 0.29", "-15.9908, -6.85535, 24.5124, 0.29", "-16.1902, -6.92681, 25.0749, 0.29", "-16.4635, -6.90639, 25.6574, 0.29", "-16.7244, -6.84137, 26.1109, 0.66", "-17.1774, -6.69513, 26.7991, 0.74", "-17.8916, -6.45478, 27.7848, 0.37", "-18.9405, -6.03489, 29.1538, 0.22", "-19.5293, -5.75241, 29.9232, 0.29", "-19.9596, -5.52292, 30.5102, 0.44", "-20.4833, -5.2383, 31.2618, 0.37", "-20.906, -5.01293, 31.8832, 0.88", "-21.5137, -4.69741, 32.7643, 0.37", "-22.1733, -4.32799, 33.7224, 0.22", "-22.6205, -4.01617, 34.4745, 0.22", "-22.9551, -3.71322, 35.1704, 0.22", "-23.1915, -3.43163, 35.8082, 0.59", "-23.407, -3.12262, 36.5343, 0.74", "-23.7393, -2.65913, 37.6921, 0.22", "-24.1116, -2.14594, 38.9943, 0.22", "-24.2971, -1.84823, 39.689, 0.44", "-24.5333, -1.33046, 40.7975, 0.44", "-24.6076, -1.05491, 41.3555, 0.66", "-24.662, -0.631971, 42.2438, 0.29", "-24.6674, -0.203053, 43.2, 0.29", "-24.6533, 0.122246, 43.9689, 0.29", "-24.6455, 0.392405, 44.6923, 0.29", "-24.6125, 0.627507, 45.4562, 0.29", "-24.5658, 0.79796, 46.1751, 0.29", "-24.5396, 0.887926, 46.6255, 0.29", "-24.543, 1.04224, 47.466, 0.29", "-24.5931, 1.13809, 48.0272, 0.29", "-24.7651, 1.34766, 49.1561, 0.29", "-25.0225, 1.5902, 50.3664, 0.29", "-25.3044, 1.81572, 51.4606, 0.29", "-25.5091, 1.96777, 52.1715, 0.44", "-25.8678, 2.231, 53.3499, 0.22", "-26.183, 2.4677, 54.4095, 0.22", "-26.4936, 2.69888, 55.4846, 0.29", "-26.8223, 2.94584, 56.7142, 0.29", "-27.0389, 3.11179, 57.6886, 0.29", "-27.1415, 3.1984, 58.2993, 0.29", "-27.255, 3.31598, 59.3271, 0.29", "-27.2991, 3.38697, 60.0725, 0.29", "-27.3013, 3.44639, 60.5924, 0.29", "-27.2889, 3.53063, 61.2222, 0.29", "-27.2816, 3.63453, 62.0398, 0.29", "-27.261, 3.74676, 62.8241, 0.29", "-27.2259, 3.91871, 63.7272, 0.29", "-27.2104, 4.04566, 64.2531, 0.29", "-27.1889, 4.40522, 65.6307, 0.29", "-27.2255, 4.73522, 66.9486, 0.29", "-27.2767, 4.90954, 67.846, 0.29", "-27.3282, 5.06346, 69.1231, 0.29", "-27.3516, 5.09835, 69.7868, 0.29", "-27.3892, 5.09123, 71.0548, 0.37", "-27.4514, 4.95062, 73.2912, 0.22", "-27.5154, 4.76267, 75.0483, 0.22", "-27.6563, 4.38844, 77.7488, 0.22", "-27.7223, 4.18079, 79.0469, 0.22", "-27.7576, 4.00495, 80.1616, 0.22", "-27.7615, 3.81764, 81.4593, 0.29", "-27.7451, 3.70993, 82.2404, 0.29", "-27.7596, 3.6233, 83.1128, 0.29", "-27.8095, 3.59733, 83.672, 0.29", "-27.9866, 3.6398, 85.168, 0.29", "-28.1236, 3.72928, 86.1656, 0.29", "-28.199, 3.80398, 86.7456, 0.29", "-28.3194, 3.97052, 87.8285, 0.29", "-28.4223, 4.15547, 88.9545, 0.29", "-28.5016, 4.36091, 90.2237, 0.29", "-28.534, 4.48999, 90.9428, 0.29", "-28.5609, 4.80649, 92.6683, 0.29", "-28.5175, 5.13378, 94.4832, 0.29", "-28.4446, 5.32702, 95.7047, 0.29", "-28.1005, 5.85645, 99.7446, 0.29", "-28.0568, 5.90253, 100.189, 0.29", "-27.9054, 6.04755, 101.884, 0.29", "-27.8568, 6.09742, 102.547, 0.29", "-27.8119, 6.17755, 103.702, 0.29", "-27.828, 6.31394, 105.449, 0.29", "-27.9429, 6.45189, 107.424, 0.29", "-28.0791, 6.5401, 108.761, 0.29", "-28.309, 6.66423, 110.327, 0.29", "-28.7226, 6.88428, 112.625, 0.29", "-29.107, 7.10409, 114.52, 0.29", "-29.3741, 7.26633, 115.769, 0.29", "-29.6564, 7.45232, 117.054, 0.29", "-29.8659, 7.60676, 118.076, 0.15", "-30.2233, 7.8872, 119.986, 0.15", "-30.3036, 7.95985, 120.49, 0.37", "-30.5527, 8.24278, 122.374, 0.37", "-30.5967, 8.32279, 122.891, 0.37", "-30.6278, 8.43395, 123.677, 0.37", "-30.6052, 8.56243, 124.67, 0.37", "-30.5413, 8.66211, 125.48, 0.37", "-30.5061, 8.70672, 125.875, 0.37", "-30.2802, 8.94919, 128.109, 0.37", "-30.1923, 9.03828, 128.949, 0.37", "-30.0467, 9.25223, 130.475, 0.22", "-29.85, 9.6046, 132.297, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "8.4102, -1.61143, 1.46, 1.18", "8.4102, -1.61143, 1.46, 1.18", "9.12734, -2.07348, 1.87957, 0.66", "10.0274, -2.65337, 2.40614, 0.59", "11.1933, -3.40457, 3.08826, 0.66", "11.7224, -3.74545, 3.3978, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-2.1698, -3.64843, 10.31, 1.62", "-2.1698, -3.64843, 10.31, 1.62", "-2.41606, -4.78839, 10.6828, 1.03", "-2.74251, -6.55845, 11.2368, 0.44", "-2.8823, -7.24935, 11.4366, 0.44", "-3.18445, -8.31334, 11.7781, 0.59", "-3.35135, -8.8112, 11.9695, 0.59", "-3.76035, -9.8719, 12.4408, 0.59", "-3.92348, -10.2796, 12.6521, 0.59", "-4.33736, -11.3275, 13.2626, 0.52", "-4.8814, -12.7294, 14.1192, 0.37", "-5.22764, -13.6505, 14.6845, 0.37", "-5.41629, -14.2157, 15.0382, 0.88", "-5.77233, -15.5047, 15.8952, 0.44", "-5.89216, -16.1205, 16.3123, 0.44", "-5.98139, -16.8523, 16.8079, 0.81", "-6.08166, -17.9016, 17.4581, 0.59", "-6.20321, -18.9619, 18.1351, 0.44", "-6.32224, -19.974, 18.8029, 0.44", "-6.44535, -21.0669, 19.5327, 0.66", "-6.55628, -22.1341, 20.263, 1.03", "-6.66818, -23.2052, 21.0193, 1.03", "-6.82748, -24.6267, 22.019, 0.52", "-6.98763, -25.968, 22.9083, 0.52", "-7.17433, -27.6076, 23.9153, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "4.5002, 3.89058, 1.07, 0.96", "4.5002, 3.89058, 1.07, 0.96", "4.67677, 4.75177, 1.10648, 0.52", "4.85142, 5.55707, 1.11665, 0.15", "4.98812, 6.30518, 1.09715, 0.15", "5.15852, 7.24905, 1.06247, 0.22", "5.29751, 7.97221, 1.03317, 0.22", "5.42779, 8.59653, 0.992148, 0.22", "5.66003, 9.73044, 0.903004, 0.22", "5.87553, 10.7417, 0.820263, 0.22", "6.0869, 11.7493, 0.761327, 0.29", "6.17164, 12.2155, 0.729921, 0.22", "6.26368, 12.8964, 0.678426, 0.22", "6.35129, 13.6903, 0.628271, 0.15", "6.484, 14.6935, 0.585962, 0.22", "6.61991, 15.5801, 0.545671, 0.29", "6.75697, 16.6171, 0.469059, 0.22", "6.8404, 17.497, 0.376692, 0.22", "6.90379, 18.5214, 0.255011, 0.74", "6.97775, 19.7607, 0.0820978, 0.29", "7.02328, 20.5339, -0.0204416, 0.15", "7.09023, 21.5719, -0.154234, 0.22", "7.17497, 22.6441, -0.270353, 0.15", "7.2565, 23.637, -0.359926, 0.22", "7.31905, 24.6087, -0.433474, 0.15", "7.34979, 25.3108, -0.478216, 0.44", "7.37507, 25.7556, -0.490608, 0.44", "7.43368, 26.5228, -0.480447, 0.15", "7.53228, 27.6205, -0.427298, 0.15", "7.59451, 28.4345, -0.382523, 0.29", "7.65206, 29.0785, -0.313914, 0.29", "7.72997, 29.7668, -0.203043, 0.52", "7.88146, 30.7787, 0.0221226, 0.15", "8.11153, 31.9364, 0.370037, 0.15", "8.35917, 32.9099, 0.723531, 0.15", "8.76642, 34.2034, 1.2767, 0.15", "8.95675, 34.7008, 1.528, 0.15", "9.2711, 35.3487, 1.90718, 0.22", "9.73912, 36.0797, 2.41237, 0.22", "10.1259, 36.5502, 2.80798, 0.44", "10.4907, 36.9077, 3.17757, 0.44", "10.847, 37.207, 3.54098, 0.44", "11.3245, 37.5582, 4.05901, 0.22", "11.8703, 37.9202, 4.72934, 0.07", "12.142, 38.1095, 5.12597, 0.07", "12.4503, 38.3539, 5.68607, 0.15", "12.7364, 38.6108, 6.29652, 0.15", "12.9573, 38.8653, 6.87079, 0.15", "13.1037, 39.077, 7.33666, 0.22", "13.2826, 39.3585, 7.95385, 0.37", "13.4929, 39.6634, 8.58913, 0.07", "13.7652, 40.0315, 9.33116, 0.07", "13.9601, 40.2914, 9.80761, 0.22", "14.2517, 40.663, 10.4274, 0.22", "14.5783, 41.0694, 11.0624, 0.22", "14.9322, 41.5261, 11.7121, 0.29", "15.1864, 41.911, 12.1865, 0.29", "15.6174, 42.7018, 13.0202, 0.15", "15.9187, 43.336, 13.5868, 0.15", "16.1426, 43.9205, 13.9754, 0.15", "16.285, 44.4042, 14.2133, 0.22", "16.4715, 45.2694, 14.5094, 0.59", "16.6678, 46.4536, 14.8177, 0.22", "16.782, 47.3451, 14.9785, 0.07", "16.9298, 48.5991, 15.1351, 0.15", "17.1014, 49.7784, 15.2494, 0.15", "17.337, 51.1262, 15.3489, 0.15", "17.5716, 52.2576, 15.3956, 0.22", "17.7834, 53.1611, 15.4096, 0.37", "18.0133, 53.9778, 15.4218, 0.22", "18.4522, 55.2078, 15.4606, 0.15", "18.8443, 56.1073, 15.4961, 0.15", "19.1739, 56.7686, 15.5356, 0.22", "19.5809, 57.573, 15.5971, 0.15", "20.0432, 58.5214, 15.7239, 0.22", "20.6045, 59.8057, 15.9692, 0.07", "20.8964, 60.5441, 16.1483, 0.07", "21.1226, 61.1361, 16.3281, 0.44", "21.4364, 61.9932, 16.6246, 0.22", "21.7126, 62.8049, 16.945, 0.15", "21.9901, 63.7742, 17.3455, 0.15", "22.1042, 64.2567, 17.5397, 0.15", "22.2274, 64.7649, 17.7363, 0.22", "22.4329, 65.5823, 18.0524, 0.15", "22.669, 66.5163, 18.4055, 0.29", "22.7957, 67.0674, 18.6026, 0.29", "22.9773, 67.9687, 18.8901, 0.29", "23.1927, 69.1987, 19.2531, 0.15", "23.285, 69.7518, 19.4005, 0.52", "23.3855, 70.329, 19.5485, 0.52", "23.5647, 71.1999, 19.7531, 0.22", "23.7692, 71.9766, 19.9324, 0.37", "24.0174, 72.7924, 20.1122, 0.22", "24.3509, 73.8057, 20.3251, 0.07", "24.6211, 74.6016, 20.4803, 0.07", "24.8783, 75.3124, 20.613, 0.59", "25.3147, 76.4296, 20.831, 0.07", "25.7978, 77.6551, 21.0882, 0.15", "25.8971, 77.9275, 21.15, 0.15", "26.3534, 79.3782, 21.5019, 0.22", "26.6128, 80.2708, 21.7575, 0.07", "26.8093, 81.0142, 22.0215, 0.07", "26.9019, 81.4192, 22.1939, 0.37", "27.0469, 82.1208, 22.5174, 0.37", "27.2252, 83.0321, 22.9553, 0.07", "27.3818, 83.9135, 23.3899, 0.07", "27.4957, 84.7764, 23.8254, 0.29", "27.5832, 85.7698, 24.3088, 0.22", "27.6284, 86.4713, 24.6511, 0.22", "27.6656, 87.5037, 25.1457, 0.22", "27.6711, 88.2435, 25.4935, 0.59", "27.6255, 89.306, 26.0095, 0.15", "27.5168, 90.5221, 26.6669, 0.22", "27.4296, 91.1375, 27.0282, 0.22", "27.3271, 91.6178, 27.3254, 0.07", "27.1249, 92.3477, 27.7717, 0.22", "26.8111, 93.4779, 28.4741, 0.15", "26.7285, 93.8259, 28.6863, 0.29", "26.6612, 94.1722, 28.9031, 0.29", "26.5363, 95.0063, 29.403, 0.07", "26.4806, 95.5839, 29.7356, 0.22", "26.4571, 96.2671, 30.0955, 0.22", "26.4733, 97.0374, 30.4558, 0.22", "26.5284, 98.0441, 30.8945, 0.15", "26.5934, 98.8102, 31.202, 0.15", "26.7482, 100.267, 31.8315, 0.15", "26.8544, 101.378, 32.3689, 0.22", "26.9007, 102.043, 32.7136, 0.15", "26.9296, 102.513, 32.9779, 0.37", "26.9809, 103.274, 33.46, 0.59", "27.0255, 104.505, 34.3417, 0.07", "27.0078, 105.168, 34.862, 0.07", "26.9583, 105.787, 35.3583, 0.07", "26.8992, 106.371, 35.815, 0.15", "26.7995, 107.239, 36.4695, 0.15", "26.7255, 107.778, 36.8476, 0.15", "26.629, 108.585, 37.332, 0.15", "26.5295, 109.849, 38.0798, 0.07", "26.5244, 110.262, 38.3232, 0.22", "26.536, 110.51, 38.462, 0.22", "26.6023, 111.26, 38.8279, 0.07", "26.6976, 111.973, 39.1339, 0.15", "26.8861, 113.031, 39.4948, 0.07", "27.1771, 114.374, 39.8421, 0.07", "27.4804, 115.652, 40.0987, 0.07", "27.7204, 116.48, 40.2299, 0.07", "28.0574, 117.459, 40.3414, 0.22", "28.3967, 118.355, 40.4327, 0.07", "28.616, 118.901, 40.489, 0.07", "28.842, 119.447, 40.571, 0.07", "29.2906, 120.492, 40.7899, 0.07", "29.6989, 121.438, 41.0645, 0.07", "29.9974, 122.174, 41.3193, 0.07", "30.2283, 122.866, 41.5914, 0.07", "30.3718, 123.422, 41.8156, 0.29", "30.4869, 124.05, 42.0647, 0.15", "30.5812, 124.908, 42.388, 0.15", "30.6181, 125.399, 42.5534, 0.15", "30.6553, 126.285, 42.8184, 0.22", "30.689, 127.761, 43.2214, 0.07", "30.6792, 128.71, 43.4657, 0.22", "30.5921, 130.01, 43.7917, 0.07", "30.4801, 130.935, 44.0161, 0.07", "30.3564, 131.803, 44.2175, 0.29", "30.1559, 133.234, 44.5583, 0.07", "30.0081, 134.31, 44.8292, 0.07", "29.8924, 135.256, 45.111, 0.22", "29.7955, 136.042, 45.3726, 0.07", "29.752, 136.481, 45.5423, 0.07", "29.6866, 137.52, 45.9763, 0.15", "29.6769, 138.106, 46.2652, 0.07", "29.7723, 138.768, 46.6412, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.1902, -4.17343, -1.0, 1.33", "7.1902, -4.17343, -1.0, 1.33", "7.80281, -5.07117, -1.39626, 0.66", "8.29456, -5.8299, -1.70363, 0.59", "8.71393, -6.53097, -1.97297, 0.59", "9.17569, -7.33128, -2.25764, 0.81", "9.71217, -8.2455, -2.5609, 0.74", "10.3394, -9.2967, -2.88832, 0.74", "10.7921, -10.0445, -3.1067, 0.66", "11.3879, -11.0402, -3.36742, 0.66", "11.8825, -11.8403, -3.56158, 0.52", "12.3723, -12.5758, -3.72696, 0.96", "12.8724, -13.2802, -3.86045, 1.11", "13.6153, -14.2353, -4.0292, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "7.8102, 0.310071, 1.64, 1.25", "7.8102, 0.310071, 1.64, 1.25", "9.03484, 2.13721, 1.19834, 0.59", "9.83719, 3.3343, 0.908975, 0.52", "10.2555, 3.95841, 0.758114, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.7098, -0.498429, -8.54, 0.37", "-4.93183, -0.72447, -9.09214, 0.37", "-5.1543, -0.982905, -9.60326, 0.37", "-5.44802, -1.29616, -10.1432, 0.37", "-5.60798, -1.44704, -10.4027, 0.37", "-5.79662, -1.60867, -10.7086, 0.37", "-6.02824, -1.78807, -11.0592, 0.22", "-6.24199, -1.94145, -11.3384, 0.22", "-6.57193, -2.19652, -11.747, 0.29", "-6.82361, -2.418, -12.0631, 0.29", "-7.20688, -2.77388, -12.597, 0.44", "-7.3797, -2.92372, -12.8749, 0.44", "-7.59647, -3.07594, -13.2678, 0.44", "-7.77436, -3.18511, -13.595, 0.44", "-7.90227, -3.22499, -13.7797, 0.44", "-8.11916, -3.23027, -13.9979, 0.44", "-8.36967, -3.1756, -14.2095, 0.44", "-8.55627, -3.1064, -14.4024, 0.66", "-8.79937, -2.95686, -14.6971, 0.66", "-9.27069, -2.58329, -15.3093, 0.22", "-9.48527, -2.39539, -15.6503, 0.22", "-9.59827, -2.28794, -15.8815, 0.22", "-9.79327, -2.07759, -16.3493, 0.22", "-9.96667, -1.84773, -16.8303, 0.22", "-10.0972, -1.63731, -17.2497, 0.22", "-10.2518, -1.36314, -17.8006, 0.22", "-10.3939, -1.13992, -18.1874, 0.22", "-10.6264, -0.839604, -18.6992, 0.15", "-10.7837, -0.686548, -18.9721, 0.37", "-11.0555, -0.466206, -19.3813, 0.74", "-11.3277, -0.244314, -19.7669, 0.74", "-11.7024, 0.078863, -20.2657, 0.22", "-11.9659, 0.31577, -20.6236, 0.22", "-12.3681, 0.682066, -21.1986, 0.15", "-12.6103, 0.901496, -21.5466, 0.15", "-12.6838, 0.968526, -21.6499, 0.15", "-12.89, 1.1664, -21.9398, 0.15", "-12.9899, 1.28305, -22.1033, 0.15", "-13.0829, 1.43086, -22.2841, 0.15", "-13.2402, 1.7187, -22.6488, 0.15", "-13.3877, 1.9427, -22.9951, 0.15", "-13.6023, 2.21335, -23.497, 0.07", "-13.7111, 2.35816, -23.7939, 0.07", "-13.8296, 2.52824, -24.1614, 0.29", "-13.9656, 2.75487, -24.654, 0.29", "-14.0849, 2.99604, -25.1604, 0.29", "-14.2196, 3.33235, -25.813, 0.29", "-14.3142, 3.68598, -26.4359, 0.07", "-14.3538, 3.94956, -26.8357, 0.07", "-14.3637, 4.21679, -27.2039, 0.07", "-14.3565, 4.40952, -27.4315, 0.07", "-14.3328, 4.77682, -27.8373, 0.96", "-14.3141, 5.20379, -28.2895, 0.37", "-14.3073, 5.66738, -28.7691, 0.15", "-14.2714, 6.02117, -29.1375, 0.15", "-14.2316, 6.22049, -29.3437, 0.15", "-14.0978, 6.60773, -29.7255, 0.22", "-13.9735, 6.87908, -29.9889, 0.07", "-13.8171, 7.20405, -30.2956, 0.07", "-13.5356, 7.73549, -30.7683, 0.07", "-13.3341, 8.07551, -31.0458, 0.66", "-12.9798, 8.59002, -31.4561, 0.15", "-12.7208, 8.91861, -31.6931, 0.15", "-12.6155, 9.03433, -31.7785, 0.15", "-13.6639, 11.5645, -38.0427, 0.15", "-14.3316, 14.965, -43.9853, 0.15", "-15.0227, 17.9642, -50.117, 0.15", "-14.8325, 20.681, -56.4146, 0.15", "-15.5138, 23.5593, -62.5994, 0.15", "-15.6257, 25.851, -69.0427, 0.15", "-16.4988, 27.8712, -75.4985, 0.15", "-18.408, 29.8555, -81.7246, 0.15", "-20.3938, 31.7299, -87.9565, 0.15", "-23.3994, 34.153, -93.564, 0.15" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.3698, 1.10807, -6.25, 0.66", "-9.24535, 1.27317, -6.58511, 0.59", "-10.0127, 1.41786, -6.87882, 0.59", "-10.5051, 1.5107, -7.06726, 0.66", "-11.2217, 1.64583, -7.34155, 0.66", "-11.9552, 1.78412, -7.62228, 0.88", "-12.7093, 1.92633, -7.91092, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.7598, 6.52607, -2.29, 0.96", "-4.48005, 6.97485, -2.54032, 0.96", "-3.9655, 7.80738, -3.05266, 0.59", "-3.48532, 8.61642, -3.58347, 0.37", "-3.04729, 9.43458, -4.11601, 0.59", "-2.695, 10.1416, -4.56844, 0.88", "-2.27775, 11.0026, -5.14124, 0.59", "-1.89615, 11.8135, -5.69015, 0.44", "-1.59945, 12.4471, -6.146, 0.52", "-1.25124, 13.2918, -6.75376, 0.52", "-0.97954, 14.0725, -7.29599, 0.37", "-0.73465, 14.9249, -7.87733, 0.66", "-0.54376, 15.7264, -8.40249, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995180632084
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.70294, -3.02848, 0.0, 0.601357", "21.7399, -8.31649, 0.0, 0.601357", "35.7769, -13.6045, 0.0, 0.601357" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "11.7224, -3.74545, 3.3978, 0.15", "11.9873, -3.56136, 3.84026, 0.15", "12.1093, -3.48522, 4.0378, 0.29", "12.3188, -3.38253, 4.34952, 0.29", "12.547, -3.29319, 4.65401, 0.15", "12.7668, -3.23578, 4.91322, 0.22", "12.9018, -3.20557, 5.05761, 0.22", "13.0145, -3.18766, 5.16664, 0.29", "13.2121, -3.14988, 5.34949, 0.44", "13.3981, -3.10982, 5.51702, 0.22", "13.7288, -3.05659, 5.81439, 0.29", "13.9521, -3.02874, 6.01252, 0.22", "14.2931, -2.99903, 6.31049, 0.15", "14.6232, -2.98424, 6.59422, 0.15", "14.9656, -2.98198, 6.90042, 0.22", "15.1927, -2.99056, 7.11639, 0.22", "15.3748, -3.00381, 7.31617, 0.22", "15.5486, -3.01951, 7.55076, 0.22", "15.6664, -3.02852, 7.7623, 0.29", "15.8148, -3.03696, 8.16377, 0.66", "15.9218, -3.03738, 8.62441, 0.74", "15.9956, -3.02667, 9.12804, 0.66", "16.0447, -3.00641, 9.66339, 0.29", "16.0602, -2.98716, 10.055, 0.29", "16.0609, -2.96967, 10.3728, 0.29", "16.0519, -2.94598, 10.7155, 0.29", "16.0443, -2.914, 11.1286, 0.29", "16.0514, -2.89958, 11.3064, 0.29", "16.0913, -2.86849, 11.8007, 0.29", "16.1319, -2.84529, 12.1608, 0.29", "16.1521, -2.82492, 12.4142, 0.29", "16.1569, -2.80149, 12.8152, 0.29", "16.1586, -2.80247, 12.9669, 0.29", "16.1771, -2.83285, 13.3636, 0.29", "16.1922, -2.85562, 13.5097, 0.29", "16.2271, -2.91396, 13.7768, 0.29", "16.2665, -2.99227, 14.0985, 0.29", "16.2961, -3.06845, 14.5788, 0.22", "16.3028, -3.09341, 15.0406, 0.22", "16.3013, -3.08625, 15.1748, 0.22", "16.2668, -3.0172, 15.6111, 0.22", "16.2411, -2.9776, 15.7625, 0.22", "16.094, -2.77522, 16.307, 0.15", "15.985, -2.61581, 16.6292, 0.15", "15.9186, -2.50738, 16.7984, 0.29", "15.7901, -2.27661, 17.1152, 0.59", "15.6719, -2.0437, 17.4192, 0.22", "15.5606, -1.8294, 17.7222, 0.22", "15.4419, -1.62077, 18.044, 0.22", "15.2395, -1.30134, 18.5924, 0.07", "15.1146, -1.11366, 18.9549, 0.37", "14.9716, -0.895876, 19.4264, 0.22", "14.8301, -0.689416, 19.9129, 0.22", "14.7698, -0.61376, 20.1157, 0.22", "14.6145, -0.439833, 20.6423, 0.22", "14.5777, -0.392319, 20.8043, 0.22", "14.5448, -0.323964, 21.0325, 0.22", "14.5379, -0.257418, 21.2304, 0.29", "14.5715, -0.107631, 21.6362, 0.29", "14.6174, -0.00721988, 21.8859, 0.22", "14.7217, 0.176191, 22.2849, 0.15", "14.8614, 0.412993, 22.7927, 0.15", "14.9198, 0.520365, 23.0169, 0.15", "14.9833, 0.637979, 23.266, 0.15", "15.0381, 0.760345, 23.5097, 0.22", "15.0771, 0.906936, 23.8175, 0.15", "15.0743, 1.02122, 24.0327, 0.15", "15.0301, 1.20305, 24.3646, 0.29", "14.9838, 1.36309, 24.6349, 0.29", "14.9411, 1.50579, 24.8759, 0.29", "14.8659, 1.72944, 25.2334, 0.29", "14.8067, 1.90817, 25.5082, 0.52", "14.7307, 2.16916, 25.8982, 0.52", "14.6644, 2.44715, 26.3037, 0.15", "14.5858, 2.81598, 26.8172, 0.15", "14.5183, 3.12108, 27.2322, 0.15", "14.4733, 3.28299, 27.4443, 0.22", "14.4008, 3.46903, 27.7139, 0.22", "14.3573, 3.55611, 27.8474, 0.22", "14.273, 3.69585, 28.0824, 0.44", "14.1766, 3.86871, 28.3796, 0.59", "14.096, 4.03926, 28.6934, 0.07", "14.0067, 4.24918, 29.091, 0.07", "13.9532, 4.37765, 29.3557, 0.07", "13.8908, 4.51787, 29.6593, 0.07", "13.8331, 4.66462, 29.9759, 0.07", "13.8146, 4.73539, 30.1215, 0.29", "13.7856, 4.94757, 30.5115, 0.29", "13.7702, 5.10135, 30.7523, 0.29", "13.7401, 5.3676, 31.1122, 0.22", "13.7045, 5.69342, 31.4928, 0.07", "13.6853, 5.89976, 31.7058, 0.07", "13.6728, 6.11712, 31.9063, 0.07", "13.6706, 6.32158, 32.0596, 0.22", "13.6748, 6.62678, 32.2771, 0.22", "13.6969, 7.0444, 32.5675, 0.07", "13.7093, 7.31039, 32.757, 0.29", "13.7117, 7.49729, 32.8891, 0.66", "13.7209, 8.01271, 33.2785, 0.22", "13.7355, 8.33822, 33.5353, 0.22", "13.7672, 8.74724, 33.8569, 0.29", "13.8005, 9.0948, 34.1331, 0.29", "13.8629, 9.63176, 34.5783, 0.15", "13.9242, 10.073, 34.9604, 0.15", "13.9614, 10.3066, 35.1527, 0.29", "14.0338, 10.7491, 35.4944, 0.52", "14.1267, 11.3554, 35.9362, 0.15", "14.1885, 11.7412, 36.211, 0.15", "14.2239, 11.9547, 36.3608, 0.15", "14.2985, 12.499, 36.7391, 0.15", "14.377, 13.198, 37.2315, 0.15", "14.4527, 13.9979, 37.7941, 0.15", "14.4913, 14.4481, 38.1024, 0.15", "14.5317, 14.8362, 38.3712, 0.15", "14.6021, 15.3313, 38.7453, 0.15", "14.6473, 15.5665, 38.9415, 0.15", "14.7134, 15.8107, 39.1399, 0.44", "14.7731, 15.9762, 39.2745, 0.44", "14.9611, 16.4543, 39.6489, 0.15", "15.147, 16.8912, 40.0044, 0.15", "15.2192, 17.0593, 40.1413, 0.15", "15.3507, 17.3925, 40.4192, 0.07", "15.4253, 17.6344, 40.6309, 0.22", "15.5335, 18.1437, 41.0854, 0.07", "15.5571, 18.4094, 41.3184, 0.29", "15.5597, 18.7175, 41.5819, 0.37", "15.5582, 19.0219, 41.8519, 0.15", "15.5632, 19.4064, 42.2174, 0.15", "15.5729, 19.5839, 42.3961, 0.15", "15.5966, 19.8572, 42.6804, 0.37", "15.6098, 19.9606, 42.7982, 0.37", "15.6893, 20.3662, 43.3472, 0.15", "15.7756, 20.6523, 43.8087, 0.15", "15.8703, 20.8628, 44.2436, 0.66", "15.9827, 21.0632, 44.7639, 0.22", "16.0802, 21.2127, 45.2324, 0.22", "16.2089, 21.3918, 45.915, 0.29", "16.2821, 21.4806, 46.3375, 0.52", "16.4351, 21.6428, 47.2422, 0.15", "16.4904, 21.7096, 47.5933, 0.15", "16.535, 21.7866, 47.9418, 0.22", "16.5658, 21.9415, 48.448, 0.22", "16.5554, 22.0478, 48.7143, 0.37", "16.528, 22.1732, 48.9898, 0.37", "16.453, 22.5051, 49.6271, 0.07", "16.4085, 22.72, 50.047, 0.07", "16.3824, 22.897, 50.3681, 0.37", "16.3605, 23.3325, 51.0764, 0.07", "16.3704, 23.6371, 51.55, 0.07", "16.3987, 23.8409, 51.8512, 0.22", "16.5004, 24.2142, 52.3936, 0.22", "16.611, 24.5301, 52.8451, 0.07", "16.7234, 24.7962, 53.2493, 0.07", "16.8001, 24.9667, 53.4946, 0.07", "16.8731, 25.1311, 53.7668, 0.22", "16.9449, 25.2791, 54.041, 0.22", "17.1347, 25.6367, 54.7345, 0.15", "17.2784, 25.8788, 55.2421, 0.15", "17.3727, 26.02, 55.5274, 0.29", "17.6302, 26.3751, 56.2167, 0.07", "17.8755, 26.6962, 56.7977, 0.07", "17.9852, 26.8426, 57.0327, 0.22", "18.2869, 27.2719, 57.6352, 0.07", "18.5059, 27.6046, 58.0604, 0.15", "18.6929, 27.8969, 58.4204, 0.07", "18.8979, 28.2329, 58.8021, 0.22", "19.2446, 28.83, 59.5061, 0.07", "19.4058, 29.1205, 59.8502, 0.07", "19.4905, 29.2806, 60.0267, 0.22", "19.6182, 29.5209, 60.2829, 0.22", "19.8811, 29.9846, 60.7508, 0.07", "20.088, 30.3103, 61.0787, 0.07", "20.2951, 30.6023, 61.3831, 0.07", "20.6836, 31.1054, 61.9161, 0.07", "20.8544, 31.3192, 62.1478, 0.22", "21.0095, 31.5136, 62.366, 0.22", "21.4021, 32.0507, 62.9055, 0.07", "21.7114, 32.5193, 63.3397, 0.07", "22.026, 33.0637, 63.8275, 0.07", "22.2751, 33.5548, 64.2629, 0.07", "22.4721, 34.0168, 64.6676, 0.07", "22.7308, 34.8062, 65.357, 0.07", "22.8067, 35.1672, 65.6663, 0.07", "22.8847, 35.7655, 66.1797, 0.29", "22.8935, 35.9261, 66.3289, 0.29", "22.8906, 36.4891, 66.8866, 0.07", "22.8805, 36.8129, 67.2118, 0.07", "22.8521, 37.1339, 67.5411, 0.07", "22.8057, 37.4502, 67.8283, 0.22", "22.7225, 37.9041, 68.1958, 0.22", "22.6053, 38.5333, 68.6574, 0.07", "22.4798, 39.2734, 69.1562, 0.07", "22.3787, 39.8987, 69.5598, 0.07", "22.3291, 40.2102, 69.7512, 0.29", "22.2815, 40.4825, 69.9108, 0.29", "22.1128, 41.4183, 70.4183, 0.07", "22.0356, 41.8954, 70.6775, 0.07" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "11.7224, -3.74545, 3.3978, 0.29", "12.0321, -4.10953, 3.60514, 0.29", "12.4111, -4.55237, 3.88607, 0.37", "12.6393, -4.89534, 4.0907, 0.37", "12.9082, -5.36729, 4.31825, 0.37", "13.1123, -5.76321, 4.49238, 0.29", "13.3204, -6.18658, 4.67441, 0.37", "13.5289, -6.62425, 4.88488, 0.52", "13.923, -7.4489, 5.30203, 0.29", "14.1643, -7.97632, 5.58358, 0.44", "14.4472, -8.59974, 5.90046, 0.29", "14.659, -9.06196, 6.13589, 0.37", "14.9676, -9.66976, 6.46202, 0.22", "15.1772, -10.0549, 6.70204, 0.29", "15.4442, -10.556, 7.06804, 0.44", "15.6573, -11.0301, 7.45558, 0.81", "15.8375, -11.5198, 7.84904, 0.74", "16.0315, -12.1653, 8.34955, 0.37", "16.1878, -12.9006, 8.90665, 0.37", "16.2909, -13.5203, 9.37762, 0.22", "16.3799, -14.1101, 9.8251, 0.59", "16.467, -14.6901, 10.2548, 0.59", "16.5658, -15.3143, 10.6806, 0.37", "16.6952, -16.1383, 11.1816, 0.44", "16.8024, -16.7943, 11.5163, 0.29", "16.876, -17.2318, 11.7109, 0.29", "16.9359, -17.6848, 11.877, 0.29", "16.9872, -18.1984, 12.0547, 0.29", "17.0213, -18.6712, 12.1939, 0.22", "17.0605, -19.4304, 12.3641, 0.37", "17.0401, -20.011, 12.4774, 0.37", "16.9485, -20.8862, 12.6515, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-7.17433, -27.6076, 23.9153, 0.29", "-6.32108, -28.4657, 23.8506, 0.29", "-5.481, -29.4125, 23.8073, 0.29", "-4.82396, -30.2885, 23.7846, 0.22", "-4.53481, -30.739, 23.7808, 0.37", "-4.29863, -31.1546, 23.783, 0.74", "-3.80075, -32.1327, 23.8305, 0.52", "-3.49058, -32.9313, 23.9238, 0.37", "-3.23812, -33.8585, 24.093, 0.37", "-3.12935, -34.5126, 24.2527, 0.52", "-3.07782, -35.1002, 24.4238, 0.52", "-3.08101, -36.0614, 24.7481, 0.52", "-3.1663, -36.9432, 25.0966, 0.22", "-3.3028, -37.7552, 25.4402, 0.15", "-3.51546, -38.6831, 25.8359, 0.29", "-3.68615, -39.1967, 26.0414, 0.29", "-4.0685, -40.0246, 26.3442, 0.22", "-4.46342, -40.71, 26.5564, 0.74", "-5.24745, -41.8899, 26.8712, 0.22", "-5.57905, -42.3487, 26.9772, 0.22", "-6.26245, -43.2459, 27.148, 0.29", "-6.9814, -44.135, 27.3181, 0.22", "-7.38424, -44.6132, 27.399, 0.15", "-7.74226, -45.0645, 27.4732, 0.22", "-8.15502, -45.652, 27.593, 0.44", "-8.38128, -46.0593, 27.692, 0.44", "-8.692, -46.8759, 27.9082, 0.44", "-8.88276, -47.5684, 28.0984, 0.44", "-9.11946, -48.6065, 28.398, 0.37", "-9.27369, -49.3568, 28.6393, 0.44", "-9.39675, -49.9336, 28.842, 0.59", "-9.62687, -50.89, 29.2205, 0.29", "-9.90987, -51.9508, 29.6585, 0.37", "-10.1877, -52.8924, 30.0634, 0.29", "-10.4607, -53.7573, 30.4237, 0.22", "-10.7219, -54.5989, 30.7514, 0.22", "-10.8869, -55.132, 30.947, 0.22", "-11.1821, -56.0843, 31.2669, 0.66", "-11.4453, -56.9878, 31.5475, 0.66", "-11.6835, -57.8989, 31.8035, 0.29", "-12.0177, -59.2074, 32.139, 0.22", "-12.2396, -60.0785, 32.3691, 0.44", "-12.4113, -60.7094, 32.5617, 0.59", "-12.8009, -61.9956, 33.0564, 0.22", "-13.0556, -62.7924, 33.4033, 0.37", "-13.3109, -63.5748, 33.7661, 0.29", "-13.5771, -64.389, 34.1418, 0.66", "-13.8518, -65.3039, 34.5506, 0.29", "-14.0653, -66.1128, 34.8917, 0.29", "-14.2644, -66.9977, 35.2412, 0.29", "-14.4628, -68.0124, 35.6319, 0.22", "-14.6071, -68.8449, 35.9431, 0.66", "-14.8767, -70.3434, 36.4949, 0.22", "-15.1232, -71.5977, 36.9662, 0.22", "-15.2609, -72.2374, 37.2196, 0.37", "-15.3935, -72.8156, 37.4823, 0.37", "-15.5717, -73.566, 37.8516, 0.22", "-15.7923, -74.4942, 38.3242, 0.22", "-15.9514, -75.0959, 38.6282, 0.22", "-16.1448, -75.777, 38.9549, 0.29", "-16.3397, -76.4496, 39.241, 0.66", "-16.6789, -77.5731, 39.6789, 0.22", "-16.9975, -78.6137, 40.0508, 0.15", "-17.1394, -79.0727, 40.2021, 0.15", "-17.2824, -79.5384, 40.3459, 0.15", "-17.5674, -80.484, 40.6462, 0.29", "-17.8995, -81.6054, 40.9894, 0.15", "-18.0686, -82.2084, 41.1658, 0.15", "-18.2248, -82.8372, 41.3478, 0.59", "-18.3786, -83.6972, 41.5967, 0.22", "-18.4762, -84.4715, 41.8187, 0.22", "-18.5634, -85.205, 42.0313, 0.74", "-18.6828, -86.065, 42.2691, 0.22", "-18.8687, -87.1519, 42.5785, 0.44", "-19.0867, -88.2323, 42.9001, 0.22", "-19.3146, -89.2541, 43.2132, 0.22", "-19.5387, -90.1603, 43.4845, 0.22", "-19.6803, -90.7094, 43.6642, 0.22", "-19.8779, -91.456, 43.9385, 0.15", "-20.0523, -92.1802, 44.2183, 0.44", "-20.138, -92.6685, 44.4157, 0.44", "-20.1971, -93.5083, 44.7436, 0.22", "-20.1851, -94.5939, 45.1612, 0.29", "-20.1555, -95.4441, 45.4721, 0.22", "-20.1427, -96.245, 45.7388, 0.29", "-20.1586, -97.0126, 45.97, 0.29", "-20.2036, -98.1204, 46.2699, 0.22", "-20.2572, -99.0666, 46.4872, 0.22", "-20.3249, -99.8918, 46.6337, 0.37", "-20.4182, -100.787, 46.7758, 0.52", "-20.5796, -102.126, 46.9868, 0.22", "-20.6715, -102.792, 47.0972, 0.22", "-20.7954, -103.688, 47.2448, 0.37", "-20.8324, -103.989, 47.2909, 0.37", "-20.98, -105.243, 47.5144, 0.22", "-21.1262, -106.255, 47.7217, 0.22", "-21.2812, -107.067, 47.8989, 0.22", "-21.4703, -107.87, 48.0828, 0.37", "-21.6406, -108.536, 48.2361, 0.37", "-21.9085, -109.503, 48.4564, 0.22", "-22.2585, -110.637, 48.7019, 0.59", "-22.5334, -111.512, 48.8837, 0.59", "-22.8538, -112.659, 49.1141, 0.22", "-23.0555, -113.433, 49.2644, 0.29", "-23.1844, -113.99, 49.3555, 0.59", "-23.2948, -114.561, 49.4321, 0.59", "-23.4566, -115.515, 49.5699, 0.29", "-23.6027, -116.454, 49.7353, 0.22", "-23.7231, -117.27, 49.8909, 0.22", "-23.8776, -118.365, 50.1242, 0.15", "-23.9946, -119.295, 50.3345, 0.15", "-24.1045, -120.171, 50.5473, 0.59", "-24.3394, -121.794, 50.9927, 0.22", "-24.5504, -123.025, 51.3466, 0.15", "-24.6918, -123.818, 51.5859, 0.22", "-24.8367, -124.61, 51.8265, 0.44", "-24.9523, -125.236, 52.0068, 0.22", "-25.1352, -126.33, 52.2861, 0.15", "-25.2496, -127.079, 52.4494, 0.15", "-25.3371, -127.741, 52.5664, 0.22", "-25.4121, -128.434, 52.6636, 0.29", "-25.5182, -129.647, 52.8059, 0.29", "-25.6056, -131.06, 52.9345, 0.22", "-25.6478, -131.967, 52.9927, 0.22", "-25.7193, -133.187, 53.0953, 0.15", "-25.7806, -134.049, 53.1766, 0.52", "-25.8281, -134.722, 53.2525, 0.59", "-25.8818, -135.912, 53.4043, 0.66", "-25.9111, -137.321, 53.6534, 0.29", "-25.9001, -138.711, 53.9543, 0.29", "-25.8683, -139.454, 54.1291, 0.15", "-25.8297, -140.192, 54.3064, 0.15", "-25.7574, -141.257, 54.5824, 0.29", "-25.6406, -142.477, 54.9189, 0.44", "-25.4806, -143.781, 55.2785, 0.15", "-25.4112, -144.266, 55.4096, 0.15", "-25.3519, -144.769, 55.557, 0.15", "-25.2722, -145.576, 55.7968, 0.15", "-25.2155, -146.149, 55.9903, 0.15", "-25.1347, -146.715, 56.1968, 0.29", "-24.9611, -147.626, 56.5412, 0.15", "-24.8478, -148.185, 56.7683, 0.15", "-24.6954, -148.891, 57.0649, 0.81", "-24.4865, -149.964, 57.5126, 0.22", "-24.3752, -150.812, 57.8716, 0.22", "-24.2613, -152.151, 58.4615, 0.15", "-24.2362, -152.919, 58.8127, 0.15", "-24.2486, -153.392, 59.0391, 0.59", "-24.2999, -153.876, 59.2795, 0.59", "-24.6217, -155.361, 60.0663, 0.22", "-24.939, -156.373, 60.6697, 0.22", "-25.2675, -157.207, 61.2343, 0.22", "-25.5125, -157.764, 61.6484, 0.15", "-25.8108, -158.323, 62.1231, 0.29", "-26.3841, -159.216, 62.9943, 0.22", "-26.8121, -159.773, 63.6121, 0.37", "-27.3107, -160.336, 64.293, 0.52", "-27.7466, -160.822, 64.8979, 0.44", "-28.2417, -161.439, 65.6351, 0.22", "-28.6736, -162.062, 66.3043, 0.66", "-29.0057, -162.65, 66.8508, 0.74", "-29.5732, -163.879, 67.8771, 0.22", "-29.8129, -164.549, 68.3934, 0.22", "-30.0338, -165.43, 69.0083, 0.15", "-30.1601, -166.267, 69.5563, 0.22", "-30.2588, -167.176, 70.1133, 0.22", "-30.349, -168.175, 70.6975, 0.15", "-30.3903, -168.839, 71.0747, 0.52", "-30.4358, -169.429, 71.4413, 0.59", "-30.5255, -170.273, 72.0019, 0.15", "-30.631, -171.207, 72.6408, 0.22", "-30.7594, -172.195, 73.2755, 0.15", "-30.8603, -172.897, 73.696, 0.37", "-30.9771, -173.65, 74.1357, 0.37", "-31.1121, -174.543, 74.6551, 0.15", "-31.2138, -175.357, 75.1093, 0.22", "-31.3224, -176.502, 75.7496, 0.15", "-31.4257, -177.679, 76.3916, 0.15", "-31.4608, -178.114, 76.6254, 0.37", "-31.498, -178.835, 76.9877, 0.37", "-31.5135, -179.764, 77.4656, 0.15", "-31.5133, -180.322, 77.7622, 0.15", "-31.5055, -180.829, 78.0455, 0.37", "-31.5041, -181.525, 78.4294, 0.37", "-31.5319, -182.911, 79.1621, 0.07", "-31.5783, -183.633, 79.5127, 0.22", "-31.6908, -184.657, 79.9382, 0.07", "-31.7412, -185.007, 80.0639, 0.07", "-31.8766, -185.856, 80.3277, 0.29", "-31.9868, -186.507, 80.4709, 0.15", "-32.1154, -187.306, 80.5938, 0.29", "-32.2639, -188.593, 80.6912, 0.07", "-32.3157, -189.351, 80.7054, 0.07", "-32.3391, -190.337, 80.6948, 0.59", "-32.3145, -191.693, 80.6371, 0.15", "-32.2853, -192.408, 80.589, 0.22", "-32.2125, -193.569, 80.4968, 0.07", "-32.1692, -194.249, 80.4362, 0.07", "-32.1275, -195.143, 80.3458, 0.29", "-32.1133, -196.38, 80.2315, 0.07", "-32.1212, -196.929, 80.193, 0.59", "-32.131, -197.306, 80.1702, 0.59", "-32.1604, -198.575, 80.1134, 0.07", "-32.1704, -199.422, 80.0847, 0.07", "-32.173, -200.13, 80.0657, 0.29", "-32.1639, -200.539, 80.051, 0.29", "-32.1285, -201.829, 79.9819, 0.07", "-32.1129, -202.735, 79.9213, 0.07", "-32.1038, -203.263, 79.8821, 0.66", "-32.0911, -203.951, 79.8302, 0.07", "-32.076, -204.836, 79.7529, 0.07", "-32.0845, -205.991, 79.633, 0.07", "-32.1104, -206.625, 79.5503, 0.07", "-32.1564, -207.448, 79.4347, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-7.17433, -27.6076, 23.9153, 0.15", "-7.7177, -28.0205, 24.2214, 0.15", "-8.33534, -28.4215, 24.5637, 0.15", "-8.97484, -28.7882, 24.9024, 0.15", "-9.377, -29.0148, 25.1083, 0.15", "-9.77817, -29.255, 25.301, 0.29", "-10.5558, -29.7432, 25.6582, 0.15", "-11.0354, -30.0459, 25.8427, 0.22", "-11.6384, -30.4167, 26.024, 0.52", "-12.1331, -30.7498, 26.1537, 0.29", "-12.8654, -31.3145, 26.2896, 0.15", "-13.3032, -31.7243, 26.297, 0.15", "-13.7817, -32.2663, 26.1868, 0.37", "-14.0176, -32.576, 26.0834, 0.74", "-14.5172, -33.326, 25.7803, 0.22", "-14.9093, -33.9815, 25.4906, 0.22", "-15.4087, -34.9728, 25.0511, 0.29", "-15.6797, -35.6582, 24.7842, 0.22", "-15.9279, -36.3711, 24.5602, 0.22", "-16.1549, -37.0534, 24.384, 0.22", "-16.3224, -37.5396, 24.2899, 0.22", "-16.5763, -38.3019, 24.2049, 0.52", "-17.0137, -39.6571, 24.1306, 0.22", "-17.3596, -40.7428, 24.0886, 0.22", "-17.5931, -41.4647, 24.0633, 0.22", "-17.8736, -42.3401, 24.0215, 0.22", "-18.1416, -43.2032, 23.9723, 0.22", "-18.3866, -44.0498, 23.917, 0.22", "-18.5495, -44.7026, 23.8614, 0.15", "-18.6479, -45.2052, 23.808, 0.22", "-18.828, -46.2009, 23.7021, 0.22", "-18.9608, -46.9867, 23.6366, 0.15", "-19.0585, -47.5314, 23.6097, 0.44", "-19.139, -47.9754, 23.6068, 0.44", "-19.259, -48.5866, 23.6269, 0.22", "-19.4475, -49.4851, 23.6905, 0.07", "-19.5899, -50.0977, 23.7591, 0.07", "-19.8266, -51.0301, 23.8581, 0.07", "-20.0162, -51.7236, 23.9123, 0.07", "-20.1838, -52.2856, 23.9368, 0.22", "-20.375, -52.8965, 23.9168, 0.22", "-20.5543, -53.3956, 23.8576, 0.15", "-20.7292, -53.8065, 23.7807, 0.52", "-20.9937, -54.3165, 23.6593, 0.52", "-21.4252, -55.0672, 23.4561, 0.15", "-21.762, -55.5623, 23.3175, 0.15", "-22.1322, -56.0032, 23.1985, 0.22", "-22.3883, -56.2614, 23.1356, 0.22", "-23.153, -56.9306, 23.0057, 0.15", "-23.6146, -57.2963, 22.952, 0.29", "-24.1707, -57.6962, 22.938, 0.29", "-24.964, -58.2342, 22.9981, 0.07", "-25.5553, -58.6155, 23.0836, 0.07", "-26.0853, -58.9307, 23.1901, 0.29", "-26.8893, -59.4075, 23.4323, 0.29", "-27.7477, -59.9565, 23.7503, 0.07", "-28.1843, -60.2957, 23.9594, 0.07", "-28.7577, -60.8349, 24.2998, 0.22", "-29.1988, -61.3239, 24.5958, 0.29", "-29.794, -62.0569, 25.0101, 0.07", "-30.1665, -62.5444, 25.2688, 0.22", "-30.758, -63.3958, 25.6545, 0.07", "-31.0006, -63.7712, 25.8151, 0.07", "-31.3692, -64.3677, 26.0785, 0.29", "-31.6622, -64.8325, 26.2915, 0.29", "-32.2065, -65.625, 26.666, 0.07", "-32.7531, -66.3528, 27.065, 0.07", "-33.4097, -67.1813, 27.5707, 0.07", "-33.8314, -67.7138, 27.9101, 0.07", "-34.0853, -68.0415, 28.1254, 0.22", "-34.4159, -68.4777, 28.4077, 0.59", "-34.9323, -69.1665, 28.8378, 0.07", "-35.5636, -70.0105, 29.3627, 0.07", "-35.8503, -70.4048, 29.6098, 0.07", "-36.1153, -70.7821, 29.8356, 0.22", "-36.4294, -71.2248, 30.0965, 0.29", "-36.6788, -71.5574, 30.3023, 0.29", "-37.1209, -72.1267, 30.6731, 0.07", "-37.4868, -72.5424, 30.9797, 0.07", "-37.6965, -72.7671, 31.1703, 0.29", "-37.9301, -73.0162, 31.3907, 0.44", "-38.4385, -73.5665, 31.8798, 0.22", "-38.9443, -74.1335, 32.3771, 0.15", "-39.3463, -74.615, 32.7727, 0.29", "-39.6845, -75.0645, 33.1145, 0.29", "-40.1538, -75.753, 33.6035, 0.15", "-40.4127, -76.1717, 33.8718, 0.22", "-40.7719, -76.8243, 34.2229, 0.22", "-41.1129, -77.5377, 34.5347, 0.07", "-41.395, -78.2106, 34.771, 0.07", "-41.5498, -78.6367, 34.8838, 0.44", "-41.711, -79.1646, 34.9913, 0.44", "-41.9769, -80.1708, 35.1476, 0.15", "-42.1983, -81.1229, 35.2504, 0.22", "-42.3872, -82.064, 35.3277, 0.07", "-42.5246, -82.7631, 35.3674, 0.07", "-42.5865, -83.0747, 35.3821, 0.07", "-42.6903, -83.5176, 35.3969, 0.29", "-42.8421, -84.0332, 35.4128, 0.37", "-42.9045, -84.2105, 35.4176, 0.37", "-43.3418, -85.355, 35.4465, 0.07", "-43.594, -85.9485, 35.4641, 0.22", "-44.1372, -87.1438, 35.4862, 0.07", "-44.6149, -88.1234, 35.4911, 0.07", "-44.7675, -88.4086, 35.4889, 0.29", "-44.9047, -88.6444, 35.4839, 0.52", "-45.2143, -89.1318, 35.4657, 0.22", "-45.901, -90.1298, 35.3905, 0.07", "-46.3309, -90.7239, 35.3231, 0.07", "-46.6887, -91.203, 35.2443, 0.29", "-47.1898, -91.8657, 35.1202, 0.15", "-47.4202, -92.1717, 35.0595, 0.29", "-48.1178, -93.1043, 34.8623, 0.07", "-48.3963, -93.4907, 34.7768, 0.37", "-48.9954, -94.3234, 34.5948, 0.07", "-49.2682, -94.6969, 34.5148, 0.07", "-49.6771, -95.228, 34.4053, 0.74", "-50.3517, -96.075, 34.2459, 0.07", "-51.0382, -96.9339, 34.1104, 0.22", "-51.8656, -98.0017, 33.9498, 0.07", "-52.3136, -98.6025, 33.8697, 0.07", "-52.6268, -99.0372, 33.8123, 0.22", "-52.8565, -99.3726, 33.7712, 0.22", "-53.4764, -100.359, 33.6712, 0.07", "-53.8328, -100.953, 33.617, 0.07", "-54.09, -101.439, 33.5712, 0.22", "-54.2558, -101.773, 33.5396, 0.22", "-54.627, -102.57, 33.4621, 0.07", "-54.9127, -103.183, 33.4049, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "13.6153, -14.2353, -4.0292, 0.52", "14.0977, -15.1038, -3.61938, 0.52", "14.2497, -15.518, -3.44118, 0.52", "14.3891, -16.0805, -3.21394, 0.59", "14.4842, -16.5435, -3.02658, 0.59", "14.6424, -17.2803, -2.74285, 0.44", "14.8212, -18.0338, -2.46146, 0.66", "15.0864, -19.2081, -2.06023, 0.52", "15.3354, -20.1963, -1.74055, 0.37", "15.5521, -20.9467, -1.50536, 0.37", "15.84, -21.8917, -1.21788, 0.66", "16.056, -22.5441, -1.00612, 0.81", "16.2471, -23.0567, -0.82964, 0.81", "16.6359, -23.9321, -0.482279, 0.59", "17.0217, -24.7216, -0.145931, 0.66", "17.5894, -25.8272, 0.349891, 0.44", "18.0013, -26.5781, 0.694816, 0.37", "18.3782, -27.2185, 0.998479, 0.37", "18.7192, -27.7688, 1.27641, 0.37", "19.2111, -28.5166, 1.67837, 0.44", "19.7163, -29.2701, 2.09273, 0.37", "20.3303, -30.1272, 2.56264, 0.37", "20.8341, -30.8373, 2.93535, 0.44", "21.2226, -31.4221, 3.23921, 0.59", "21.7067, -32.2082, 3.65663, 0.59", "22.2834, -33.2063, 4.27213, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "13.6153, -14.2353, -4.0292, 0.22", "13.4508, -14.8958, -5.3853, 0.22", "13.2817, -15.3365, -6.36853, 0.22", "13.0847, -15.7901, -7.51815, 0.59", "12.9686, -16.0635, -8.28584, 0.59", "12.8493, -16.373, -9.29094, 0.29", "12.6912, -16.7815, -10.6192, 0.22", "12.6626, -16.8315, -10.8325, 0.22", "12.5613, -16.9885, -11.515, 0.22", "12.5105, -17.0919, -11.925, 0.22", "12.3933, -17.464, -12.869, 0.22", "12.27, -17.9908, -13.7747, 0.15", "12.2057, -18.3397, -14.2951, 0.15", "12.1367, -18.6406, -14.7095, 0.15", "12.0646, -18.8599, -14.9914, 0.15", "11.6951, -19.7957, -16.2094, 0.07", "11.3998, -20.5366, -17.209, 0.07", "11.1581, -21.1944, -18.1425, 0.07", "11.013, -21.644, -18.7512, 0.07", "10.8775, -22.1567, -19.4575, 0.29", "10.8005, -22.5184, -19.9887, 0.29", "10.7262, -23.3316, -21.4082, 0.07", "10.7131, -23.5656, -21.8423, 0.07", "10.661, -24.1619, -22.9933, 0.07", "10.5938, -24.722, -24.1516, 0.22", "10.5173, -25.1717, -25.1589, 0.22", "10.1195, -26.3259, -27.8724, 0.07", "9.97414, -26.5465, -28.4494, 0.07", "9.68335, -26.8237, -29.2668, 0.22", "9.39265, -27.0304, -29.9593, 0.22", "9.13653, -27.1795, -30.4454, 0.22", "8.56753, -27.453, -31.2812, 0.15", "7.66289, -27.7531, -32.1556, 0.07", "6.66875, -28.0754, -33.1073, 0.07", "3.81835, -31.0977, -44.5443, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "10.2555, 3.95841, 0.758114, 0.22", "10.7168, 3.91418, 1.88538, 0.22", "11.7545, 4.06688, 4.72983, 0.22", "12.1277, 4.20164, 5.87359, 0.29", "12.4819, 4.46567, 7.17833, 0.59", "12.7963, 4.79422, 8.48213, 0.44", "13.0879, 5.1533, 9.7849, 0.44", "13.3033, 5.6284, 11.0122, 0.22", "13.4791, 6.22333, 12.2451, 0.37", "13.811, 7.29179, 14.3218, 0.22", "14.0008, 7.79532, 15.2742, 0.15", "14.1808, 8.19096, 16.0103, 0.15", "14.5414, 8.89614, 17.2388, 0.22", "14.8869, 9.53075, 18.2397, 0.22", "15.1988, 10.1381, 19.0582, 0.15", "15.5424, 10.9082, 19.9293, 0.37", "15.6804, 11.3828, 20.4111, 0.37", "15.8217, 12.1761, 21.2065, 0.22", "15.8891, 12.7524, 21.8069, 0.44", "15.9566, 13.4762, 22.5804, 0.81", "16.0193, 14.0456, 23.2582, 0.59", "16.2054, 14.8844, 24.4771, 0.22", "16.4355, 15.3855, 25.444, 0.22", "16.6731, 15.7363, 26.3162, 0.22", "16.9647, 16.0339, 27.2647, 0.22", "17.2299, 16.2123, 28.0559, 0.22", "17.5538, 16.3621, 28.9561, 0.22", "17.7759, 16.457, 29.6193, 0.22", "18.0161, 16.5637, 30.5714, 0.22", "18.1204, 16.6079, 31.2289, 0.22", "18.2557, 16.6185, 32.4863, 0.22", "18.4339, 16.4964, 34.2809, 0.37", "18.5763, 16.3922, 35.3346, 0.37", "18.7248, 16.324, 36.1289, 0.37", "18.9078, 16.2777, 36.8638, 0.37", "19.1547, 16.3098, 37.7041, 0.37", "19.364, 16.4123, 38.3258, 0.37", "19.7862, 16.7277, 39.5427, 0.22", "20.1989, 16.9665, 40.6603, 0.22", "20.4734, 17.0681, 41.513, 0.22", "20.7344, 17.1212, 42.6895, 0.22", "20.7965, 17.0907, 43.4051, 0.29", "20.7915, 16.9754, 44.3699, 0.29", "20.7206, 16.6541, 46.1555, 0.22", "20.7095, 16.3895, 47.5776, 0.22", "20.7295, 16.2151, 48.7968, 0.22", "20.7899, 16.118, 50.094, 0.37", "20.833, 16.1242, 50.646, 0.37", "20.977, 16.3012, 52.276, 0.07", "21.1085, 16.7196, 54.2316, 0.29", "21.2085, 17.0031, 55.3209, 0.44", "21.42, 17.4043, 56.8872, 0.22", "21.6398, 17.7464, 58.2214, 0.44", "21.8514, 18.033, 59.3581, 0.37", "22.1696, 18.4107, 60.8323, 0.22", "22.5379, 18.7596, 62.1919, 0.15", "22.9957, 19.1437, 63.4183, 0.15", "23.1742, 19.2816, 63.7928, 0.15", "23.6219, 19.618, 64.5481, 0.29", "24.19, 20.0484, 65.4499, 0.37", "24.9922, 20.6907, 66.7552, 0.22", "25.7664, 21.3955, 68.2088, 0.15", "26.1955, 21.8202, 69.072, 0.15", "26.6112, 22.2291, 69.9447, 0.22", "27.1344, 22.7358, 71.1048, 0.22", "27.6475, 23.2248, 72.2713, 0.15", "28.0761, 23.6395, 73.2573, 0.15", "28.466, 23.9232, 74.2451, 0.15", "29.0278, 24.2523, 75.7132, 0.15", "29.3498, 24.4019, 76.4959, 0.44", "29.8206, 24.598, 77.5464, 0.44", "30.3666, 24.8199, 78.6781, 0.22", "32.1585, 25.5139, 82.0802, 0.15", "32.7916, 25.7314, 83.1834, 0.22", "33.8871, 26.0038, 84.9017, 0.07", "34.7684, 26.1819, 86.1955, 0.07", "35.3527, 26.2988, 87.02, 0.29", "35.7458, 26.3743, 87.5772, 0.29", "36.6363, 26.5912, 88.8859, 0.15", "38.0605, 26.7853, 91.3574, 0.22", "38.4787, 26.7665, 92.2007, 0.22", "38.9552, 26.6723, 93.2622, 0.44", "39.4372, 26.518, 94.4591, 0.44", "39.8017, 26.3594, 95.4477, 0.44", "40.534, 25.9576, 97.5034, 0.22", "40.9362, 25.7212, 98.612, 0.22", "41.2275, 25.5346, 99.3434, 0.22", "41.6612, 25.2642, 100.36, 0.22", "42.0796, 25.0888, 101.241, 0.22", "42.2925, 25.0339, 101.645, 0.22", "42.5815, 25.02, 102.136, 0.22", "43.1061, 25.0481, 102.985, 0.22", "43.624, 25.0728, 103.79, 0.29", "44.4426, 25.0993, 105.138, 0.15", "45.1961, 25.0881, 106.446, 0.15", "45.705, 25.0619, 107.311, 0.29", "46.6349, 24.9813, 108.866, 0.29", "47.5999, 24.8762, 110.484, 0.22", "48.7474, 24.7605, 112.453, 0.22", "49.7177, 24.7294, 114.208, 0.22", "50.3299, 24.793, 115.377, 0.07", "50.8292, 24.9595, 116.382, 0.15", "51.4656, 25.407, 117.704, 0.07", "51.8959, 25.8991, 118.642, 0.07", "52.3208, 26.5489, 119.589, 0.07", "52.6459, 27.1128, 120.343, 0.59", "53.5891, 28.7533, 122.423, 0.15", "54.2886, 29.9142, 123.828, 0.15", "54.8738, 30.8125, 124.914, 0.66", "55.6155, 31.8626, 126.231, 0.15", "56.2977, 32.7985, 127.465, 0.15", "57.0266, 33.8382, 128.873, 0.15", "57.3958, 34.4019, 129.636, 0.29", "57.6635, 34.7982, 130.196, 0.29", "58.3943, 35.8135, 131.682, 0.07", "58.7413, 36.2349, 132.347, 0.07", "59.2368, 36.8123, 133.26, 0.44", "59.9597, 37.5497, 134.503, 0.22", "60.6428, 38.1195, 135.48, 0.07", "61.2079, 38.5077, 136.177, 0.29", "62.621, 39.3168, 137.687, 0.15", "63.3234, 39.6351, 138.376, 0.44", "63.9783, 39.8453, 139.002, 0.44", "65.3267, 40.1661, 140.263, 0.15", "66.4573, 40.349, 141.353, 0.15", "67.0888, 40.3756, 141.957, 0.81", "68.7359, 40.2604, 143.556, 0.07", "69.7507, 40.0658, 144.598, 0.07", "70.4059, 39.8772, 145.314, 0.07", "71.2741, 39.5628, 146.287, 0.22", "72.6519, 38.9759, 147.869, 0.07", "73.5602, 38.5353, 148.959, 0.22", "74.5641, 38.0141, 150.208, 0.22", "74.9315, 37.812, 150.679, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "10.2555, 3.95841, 0.758114, 0.66", "10.3519, 4.14109, 0.683115, 0.66", "10.7528, 5.02691, 0.405316, 0.44", "10.9432, 5.52486, 0.270966, 0.44", "11.1761, 6.13549, 0.101608, 0.59", "11.5643, 7.07209, -0.15068, 0.37", "11.8095, 7.62615, -0.29103, 0.37", "12.1476, 8.38303, -0.467138, 0.52", "12.4404, 9.04159, -0.603907, 0.29", "12.7976, 9.82944, -0.780138, 0.22", "13.1109, 10.4604, -0.929743, 0.29", "13.6554, 11.4719, -1.18193, 0.22", "14.0081, 12.1117, -1.34657, 0.37", "14.2431, 12.5142, -1.4513, 0.74", "14.6018, 13.1479, -1.60685, 1.03", "15.0537, 14.0256, -1.80314, 0.52", "15.4023, 14.7414, -1.95543, 0.22", "15.7766, 15.5201, -2.11546, 0.29", "16.1448, 16.2841, -2.25711, 0.22", "16.6214, 17.1756, -2.41864, 0.15", "16.9287, 17.7058, -2.52194, 0.29", "17.2286, 18.2036, -2.63161, 0.44", "17.4685, 18.5655, -2.70837, 0.59", "17.8481, 19.094, -2.82454, 0.74", "18.7682, 20.3225, -3.07547, 0.15", "19.1389, 20.7829, -3.14049, 0.15", "19.469, 21.1864, -3.18397, 0.22", "19.7103, 21.4716, -3.19857, 0.44", "20.2806, 22.1023, -3.18756, 0.66", "21.0109, 22.8839, -3.15619, 0.07", "21.7335, 23.6682, -3.11366, 0.07", "22.2051, 24.1698, -3.08768, 0.44", "22.6916, 24.6547, -3.0881, 0.44", "23.3155, 25.2137, -3.12356, 0.29", "24.0141, 25.759, -3.18887, 0.15", "24.4701, 26.0881, -3.2456, 0.15", "24.8277, 26.3344, -3.29833, 0.15", "25.5818, 26.866, -3.39266, 0.15", "26.1706, 27.3164, -3.47547, 0.22", "26.7676, 27.7922, -3.57513, 0.29", "27.1716, 28.1241, -3.65189, 0.29", "27.5332, 28.4392, -3.74141, 0.52", "27.8868, 28.7744, -3.85362, 0.59", "28.4281, 29.3638, -4.09378, 0.15", "28.9676, 29.9896, -4.42875, 0.15", "29.3105, 30.3816, -4.69678, 0.15", "29.6703, 30.7617, -4.99581, 0.15", "29.9219, 31.0131, -5.20951, 0.59", "30.4861, 31.5606, -5.68949, 0.07", "31.1032, 32.1614, -6.1938, 0.07", "31.5763, 32.6662, -6.56641, 0.07", "31.8004, 32.9197, -6.74363, 0.07", "32.2302, 33.4513, -7.08819, 0.07", "32.425, 33.719, -7.23819, 0.22", "32.679, 34.0909, -7.40367, 0.29", "33.169, 34.8563, -7.66375, 0.07", "33.4587, 35.2896, -7.77378, 0.07", "33.6273, 35.517, -7.81669, 0.22", "33.8657, 35.8111, -7.84945, 0.22", "34.0852, 36.0593, -7.86933, 0.22", "34.6641, 36.6851, -7.89271, 0.07", "35.3174, 37.4027, -7.89856, 0.22", "35.94, 38.1474, -7.90801, 0.07", "36.3591, 38.6863, -7.92266, 0.22", "36.5807, 38.9831, -7.93829, 0.22", "37.0261, 39.5965, -7.97615, 0.37", "37.4954, 40.2373, -8.01751, 0.29", "37.7404, 40.5645, -8.04816, 0.29", "38.353, 41.3457, -8.12872, 0.07", "38.9378, 42.0291, -8.2071, 0.07", "39.4533, 42.5966, -8.23608, 0.07", "39.9432, 43.1016, -8.24159, 0.15", "40.236, 43.3864, -8.23052, 0.37", "40.6615, 43.7901, -8.19814, 0.66", "41.4297, 44.5272, -8.11219, 0.15", "42.1225, 45.227, -8.02201, 0.15", "42.7511, 45.8992, -7.94122, 0.22", "42.9552, 46.1223, -7.91562, 0.15", "43.2596, 46.4541, -7.87448, 0.22", "43.587, 46.81, -7.83566, 0.15", "43.954, 47.2165, -7.80023, 0.15", "44.329, 47.6314, -7.82739, 0.37", "44.6487, 47.9929, -7.84659, 0.52", "49.6625, 54.5159, -9.71834, 0.52", "54.7794, 60.648, -12.3309, 0.52", "58.5211, 67.1531, -16.1185, 0.52", "62.4458, 73.6003, -19.8144, 0.52", "67.2072, 80.1266, -22.2189, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.7093, 1.92633, -7.91092, 0.74", "-12.3476, 1.00453, -8.60696, 0.74", "-11.9503, 0.040033, -9.51261, 0.37", "-11.6442, -0.78414, -10.4766, 0.22", "-11.4768, -1.30313, -11.1814, 0.22", "-11.387, -1.62557, -11.674, 0.22", "-11.3354, -1.83414, -12.0123, 0.22", "-11.2651, -2.21892, -12.8933, 0.22", "-11.3104, -2.55378, -13.7801, 0.22", "-11.4095, -2.7461, -14.2703, 0.29", "-11.5921, -3.04098, -14.9259, 0.29", "-11.6167, -3.08009, -15.0014, 0.29", "-11.861, -3.50948, -15.7224, 0.29", "-12.1871, -4.1483, -16.6898, 0.22", "-12.4452, -4.64864, -17.458, 0.22", "-12.6054, -4.91442, -17.8934, 0.22", "-12.741, -5.13636, -18.2697, 0.22", "-12.8954, -5.40799, -18.7493, 0.22", "-13.0733, -5.77402, -19.4233, 0.44", "-13.2041, -6.10897, -20.0735, 0.44", "-13.4579, -6.79945, -21.4112, 0.15", "-13.5867, -7.18345, -22.1001, 0.15", "-13.6631, -7.4447, -22.4972, 0.29", "-13.7455, -7.79313, -22.9345, 0.29", "-13.7657, -7.91898, -23.0679, 0.29", "-13.8122, -8.59766, -23.6988, 0.29", "-13.7915, -9.46102, -24.4357, 0.07", "-13.783, -10.4181, -25.212, 0.07", "-13.7858, -11.1173, -25.753, 0.07", "-13.7938, -11.9338, -26.3569, 0.07", "-13.7877, -12.4374, -26.7181, 0.52", "-13.7363, -13.1104, -27.146, 0.66", "-15.4568, -20.5064, -35.9627, 0.66", "-17.5901, -28.0724, -44.5566, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-12.7093, 1.92633, -7.91092, 0.37", "-13.1477, 2.6031, -8.36226, 0.37", "-13.5986, 3.12765, -8.83654, 0.37", "-13.8437, 3.35106, -9.06209, 0.37", "-14.195, 3.61526, -9.35449, 0.59", "-14.5901, 3.87513, -9.65661, 0.59", "-15.3354, 4.32369, -10.1831, 0.29", "-16.2934, 4.8493, -10.848, 0.22", "-17.1757, 5.27117, -11.4232, 0.22", "-17.9938, 5.61258, -11.9375, 0.37", "-18.5033, 5.79632, -12.2453, 0.96", "-19.1863, 6.01412, -12.6229, 1.47" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.54376, 15.7264, -8.40249, 0.29", "-0.74559, 17.0687, -8.32615, 0.29", "-0.94062, 18.1416, -8.21404, 0.15", "-1.1168, 19.0649, -8.06994, 0.15", "-1.28369, 19.8621, -7.92019, 0.37", "-1.39598, 20.3938, -7.79678, 0.37", "-1.55175, 21.0965, -7.62134, 0.22", "-1.76343, 21.9622, -7.37228, 0.22", "-1.91385, 22.5367, -7.20006, 0.22", "-2.09635, 23.2772, -6.97049, 0.22", "-2.2837, 24.0816, -6.70386, 0.22", "-2.46435, 24.7995, -6.47011, 0.22", "-2.75261, 25.7576, -6.15866, 0.22", "-2.89572, 26.1211, -6.05726, 0.22", "-3.11252, 26.5794, -5.96288, 0.22", "-3.4097, 27.1313, -5.882, 0.22", "-3.82726, 27.9178, -5.84652, 0.22", "-4.15623, 28.6383, -5.88215, 0.22", "-4.60745, 29.7594, -6.05192, 0.29", "-4.90764, 30.614, -6.24147, 0.29", "-5.19387, 31.5199, -6.49075, 0.88", "-5.68562, 33.0268, -7.00293, 0.44", "-6.21514, 34.5773, -7.61916, 0.22", "-6.50204, 35.3583, -7.98081, 0.22", "-6.65508, 35.7227, -8.17138, 0.29", "-7.18344, 36.7313, -8.74225, 0.37", "-7.89683, 37.7113, -9.39732, 0.22", "-8.56531, 38.3373, -9.87916, 0.22", "-9.05134, 38.6963, -10.1616, 0.22", "-9.82237, 39.2246, -10.5471, 0.22", "-10.5226, 39.6672, -10.8717, 0.22", "-11.4404, 40.2269, -11.2563, 0.22", "-12.1226, 40.6534, -11.5063, 0.37", "-13.019, 41.228, -11.8536, 0.37", "-13.8236, 41.7738, -12.1876, 0.22", "-15.0475, 42.6555, -12.7576, 0.22", "-15.8077, 43.2862, -13.1743, 0.52", "-16.2132, 43.689, -13.4495, 0.59", "-17.0478, 44.7158, -14.1448, 0.22", "-17.3025, 45.128, -14.4182, 0.15", "-17.6538, 45.8838, -14.925, 0.15", "-17.8829, 46.5605, -15.3705, 0.22", "-18.0875, 47.3229, -15.8841, 0.29", "-18.3033, 48.3641, -16.5764, 0.44", "-18.4294, 49.297, -17.2123, 0.22", "-18.504, 50.8055, -18.3485, 0.07", "-18.4898, 51.127, -18.626, 0.07", "-18.4379, 51.648, -19.1325, 0.07", "-18.4003, 52.0554, -19.5426, 0.15", "-18.3839, 52.7754, -20.3416, 0.22", "-18.4169, 53.2796, -20.8741, 0.37", "-18.5369, 54.0646, -21.6176, 0.52", "-18.6303, 54.4814, -21.9859, 0.52", "-18.887, 55.4008, -22.7086, 0.22", "-19.2437, 56.4559, -23.4851, 0.15", "-19.556, 57.2464, -24.0425, 0.29", "-20.153, 58.6671, -25.0713, 0.15", "-20.4663, 59.4104, -25.6198, 0.15", "-20.7257, 60.0524, -26.129, 0.29", "-21.0352, 60.8651, -26.7878, 0.29", "-21.4414, 61.8535, -27.5312, 0.15", "-21.6726, 62.299, -27.8554, 0.15", "-21.9485, 62.692, -28.1194, 0.29", "-22.4998, 63.3763, -28.542, 0.52", "-22.991, 63.9918, -28.8989, 0.22", "-23.763, 65.0238, -29.4215, 0.15", "-24.2864, 65.7675, -29.7804, 0.15", "-24.902, 66.6637, -30.2158, 0.15", "-25.4689, 67.5738, -30.6905, 0.15", "-25.8461, 68.2477, -31.0579, 0.15", "-26.1833, 68.9293, -31.459, 0.15", "-26.5879, 69.782, -31.9903, 0.15", "-26.8077, 70.2399, -32.2876, 0.15", "-27.4356, 71.4854, -33.1044, 0.15", "-27.7537, 72.0614, -33.4795, 0.15", "-28.1141, 72.6679, -33.8557, 0.29", "-28.7394, 73.6756, -34.4637, 0.07", "-29.2695, 74.5036, -34.962, 0.07", "-29.5021, 74.874, -35.1867, 0.07", "-29.8477, 75.4573, -35.5589, 0.37", "-30.0316, 75.8548, -35.8047, 0.37", "-30.294, 76.6048, -36.2631, 0.15", "-30.5615, 77.5834, -36.8284, 0.15", "-30.703, 78.1022, -37.1093, 0.29", "-30.9488, 79.0239, -37.5924, 0.29", "-31.3167, 80.6339, -38.3522, 0.07", "-31.4642, 81.3178, -38.6263, 0.07", "-31.6614, 82.1798, -38.9404, 0.22", "-31.8981, 82.9838, -39.2056, 0.37", "-32.0764, 83.4338, -39.3484, 0.15", "-32.6038, 84.4934, -39.6915, 0.15", "-33.1241, 85.3886, -40.0092, 0.15", "-33.6675, 86.2687, -40.3522, 0.15", "-34.046, 86.8839, -40.6117, 0.15", "-34.3589, 87.4414, -40.852, 0.37", "-34.6762, 88.0643, -41.1063, 0.37", "-34.9442, 88.6582, -41.3384, 0.07", "-35.2859, 89.5927, -41.6753, 0.07", "-35.6396, 90.7139, -42.0536, 0.15", "-35.9013, 91.6333, -42.3793, 0.15", "-36.1315, 92.5398, -42.6917, 0.15", "-36.2642, 93.1107, -42.8723, 0.37", "-36.3915, 93.7253, -43.0585, 0.37", "-36.5848, 94.7955, -43.3595, 0.07", "-36.7792, 96.0101, -43.6622, 0.07", "-36.9324, 97.0519, -43.8661, 0.07", "-37.0679, 98.0973, -44.0301, 0.07", "-37.1702, 99.0642, -44.1423, 0.29", "-37.194, 99.3368, -44.1648, 0.29", "-37.3349, 101.321, -44.2537, 0.07", "-37.4544, 102.883, -44.2859, 0.07", "-37.5419, 103.76, -44.3081, 0.07", "-37.6429, 104.714, -44.3367, 0.22", "-42.85, 115.37, -49.2458, 0.22", "-49.0086, 125.024, -54.8823, 0.22", "-54.1535, 135.216, -60.6684, 0.22", "-58.8075, 144.941, -67.4995, 0.22", "-61.2787, 154.849, -75.1666, 0.22", "-64.1977, 162.944, -84.4393, 0.22", "-65.6828, 170.873, -94.166, 0.22", "-67.4888, 178.623, -103.97, 0.22", "-68.6532, 184.492, -114.98, 0.22", "-68.9101, 190.663, -125.896, 0.22", "-70.8132, 197.385, -136.348, 0.22", "-73.105, 204.189, -146.675, 0.22", "-74.3018, 211.125, -157.103, 0.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.54376, 15.7264, -8.40249, 0.22", "-0.0594689, 15.5502, -9.27281, 0.22", "0.399524, 15.4473, -9.99815, 0.22", "1.26243, 15.3558, -11.1961, 0.22", "1.87402, 15.3573, -11.9963, 0.22", "2.53973, 15.4244, -12.8555, 0.15", "3.07099, 15.5111, -13.547, 0.15", "3.55402, 15.6649, -14.1981, 0.52", "4.15059, 15.9228, -14.9754, 0.22", "4.63458, 16.1865, -15.5907, 0.22", "4.95857, 16.3517, -16.0442, 0.22", "5.08504, 16.4087, -16.2566, 0.22", "5.3674, 16.5479, -16.8831, 0.22", "5.5057, 16.6477, -17.2782, 0.22", "5.77714, 16.8822, -18.1218, 0.22", "6.24641, 17.2445, -19.3893, 0.22", "6.49813, 17.4177, -20.0013, 0.22", "6.8551, 17.6114, -20.8322, 0.22", "7.16928, 17.7446, -21.5567, 0.22", "7.47855, 17.8194, -22.274, 0.22", "7.84835, 17.8143, -23.1041, 0.15", "8.26804, 17.7036, -23.8395, 0.15", "8.95935, 17.4483, -24.8288, 0.15", "9.27317, 17.3322, -25.2086, 0.15", "9.85476, 17.1452, -25.872, 0.15", "10.3008, 17.0815, -26.3168, 0.15", "10.9393, 17.0938, -26.9041, 0.15", "11.3479, 17.1484, -27.2582, 0.29", "11.9304, 17.2637, -27.7716, 0.59", "12.6174, 17.3824, -28.4068, 0.44", "13.374, 17.4466, -29.2095, 0.07", "13.8417, 17.3932, -29.8058, 0.07", "14.1096, 17.2988, -30.2038, 0.22", "14.5317, 17.0834, -30.8907, 0.44", "14.7903, 16.9309, -31.3355, 0.22", "15.2536, 16.6627, -32.1039, 0.52", "15.8935, 16.3274, -33.1567, 0.15", "16.6361, 16.0235, -34.3175, 0.15", "16.9648, 15.9257, -34.7574, 0.22", "17.5251, 15.8383, -35.3797, 0.29", "18.656, 15.8199, -36.4295, 0.07", "19.2042, 15.878, -36.8487, 0.07", "19.6506, 15.9694, -37.1217, 0.07", "20.9037, 16.3286, -37.7872, 0.15", "22.2933, 16.7607, -38.4773, 0.15", "23.2612, 17.0978, -38.9325, 0.15", "24.2186, 17.505, -39.365, 0.15", "25.2805, 17.9851, -39.8485, 0.15", "25.7831, 18.2332, -40.1016, 0.15", "32.7469, 17.737, -49.5384, 0.15", "38.4559, 16.4591, -59.7224, 0.15", "45.2571, 13.9864, -68.997, 0.15", "52.2691, 9.30852, -77.2948, 0.15", "59.4268, 4.69843, -85.5024, 0.15", "67.727, 1.76213, -93.3205, 0.15", "76.4695, -2.87993, -99.7941, 0.15", "86.9924, -5.28754, -104.468, 0.15", "97.4522, -6.58295, -109.651, 0.15", "108.793, -5.6305, -112.528, 0.15", "119.897, -6.33716, -116.274, 0.15", "131.392, -7.26993, -118.478, 0.15", "142.765, -9.86443, -120.028, 0.15", "153.832, -13.8817, -120.898, 0.15", "165.126, -16.3218, -123.102, 0.15", "175.619, -20.2878, -126.777, 0.15", "186.908, -22.6263, -129.105, 0.15", "198.455, -23.1182, -131.164, 0.15", "210.07, -22.8551, -132.83, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "35.7769, -13.6045, 0.0, 0.15", "49.8139, -18.8925, 0.0, 0.15", "63.8509, -24.1805, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "16.9485, -20.8862, 12.6515, 0.44", "17.5863, -22.3415, 11.951, 0.44", "18.1706, -23.7405, 11.3558, 0.15", "18.5528, -24.693, 10.9869, 0.29", "19.0673, -26.0384, 10.5017, 0.29", "19.4816, -27.1195, 10.1312, 0.22", "19.7924, -27.9143, 9.86998, 0.22", "20.2668, -29.132, 9.53495, 0.29", "20.7172, -30.2421, 9.25975, 0.29", "21.1984, -31.407, 8.98471, 0.29", "21.5324, -32.1967, 8.79673, 0.22", "21.9455, -33.1394, 8.57718, 0.22", "22.2326, -33.7396, 8.44025, 0.22", "22.5789, -34.4247, 8.28404, 0.22", "22.9277, -35.0868, 8.14033, 0.22", "23.1295, -35.4325, 8.06969, 0.22", "23.572, -36.1347, 7.93712, 0.29", "24.1343, -36.9757, 7.81341, 0.29", "24.7804, -37.8825, 7.73974, 0.22", "25.1151, -38.3249, 7.7622, 0.22", "25.804, -39.1762, 7.94072, 0.29", "26.5555, -40.0623, 8.27364, 0.29", "26.9736, -40.5375, 8.50587, 0.29", "27.5655, -41.2179, 8.90385, 0.22", "28.4658, -42.2813, 9.55223, 0.37", "29.1892, -43.1581, 10.0897, 0.22", "30.0075, -44.1982, 10.7161, 0.15", "30.634, -45.0207, 11.1748, 0.22", "31.3003, -45.9251, 11.6, 0.22", "31.8637, -46.7511, 11.9235, 0.15", "32.404, -47.5761, 12.1857, 0.15", "32.8603, -48.2776, 12.3909, 0.15", "33.5231, -49.3285, 12.6894, 0.22", "34.0729, -50.2045, 12.9569, 0.22", "34.816, -51.3504, 13.3151, 0.15", "35.6019, -52.5692, 13.7307, 0.15", "36.2352, -53.5935, 14.0636, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "16.9485, -20.8862, 12.6515, 0.22", "16.5793, -21.5755, 12.9523, 0.22", "16.2443, -22.2354, 13.2118, 0.22", "15.9996, -22.8252, 13.4497, 0.22", "15.8954, -23.1503, 13.5779, 0.29", "15.6269, -24.154, 13.9646, 0.22", "15.3851, -25.2001, 14.3266, 0.29", "15.2132, -26.1989, 14.6621, 0.22", "15.1134, -27.0717, 14.9017, 0.22", "15.0651, -27.7666, 15.0847, 0.22", "15.0528, -27.9825, 15.1457, 0.22", "15.0047, -29.0303, 15.4757, 0.15", "14.9705, -29.8135, 15.7696, 0.15", "14.9165, -30.5109, 16.0798, 0.59", "14.793, -31.7252, 16.7369, 0.22", "14.7192, -32.4159, 17.2143, 0.22", "14.6646, -33.0558, 17.72, 0.22", "14.6298, -33.5874, 18.2003, 0.37", "14.6034, -34.2909, 18.8837, 0.37", "14.623, -34.9266, 19.5432, 0.15", "14.7196, -35.8605, 20.5361, 0.15", "14.7692, -36.1966, 20.8958, 0.15", "14.8263, -36.6658, 21.3701, 0.15", "14.8587, -37.0783, 21.7566, 0.15", "14.8603, -37.6752, 22.245, 0.22", "14.7882, -38.455, 22.8133, 0.22", "14.7172, -38.8938, 23.1376, 0.22", "14.6113, -39.4862, 23.5971, 0.22", "14.4901, -40.2359, 24.2238, 0.22", "14.4381, -40.6221, 24.562, 0.29", "14.3508, -41.3585, 25.2518, 0.22", "14.306, -42.2838, 26.1724, 0.22", "14.3127, -42.7168, 26.6305, 0.07", "14.3819, -43.4758, 27.4308, 0.07", "14.4662, -44.2214, 28.1786, 0.07", "14.5653, -44.834, 28.7967, 0.15", "14.7165, -45.5456, 29.4787, 0.15", "14.8207, -45.9975, 29.8734, 0.15", "15.0007, -46.8079, 30.557, 0.07", "15.1901, -47.6538, 31.2059, 0.44", "15.45, -48.7898, 32.0604, 0.15", "15.6411, -49.5909, 32.67, 0.15", "15.7475, -50.118, 33.0789, 0.59", "15.8596, -50.8389, 33.6612, 0.59", "15.9147, -51.3981, 34.1328, 0.22", "15.9515, -52.1469, 34.759, 0.22", "15.9351, -53.1595, 35.583, 0.22", "15.8961, -53.8735, 36.1804, 0.22", "15.8737, -54.1463, 36.4134, 0.22", "15.8092, -54.8276, 36.9935, 0.15", "15.7472, -55.4404, 37.5202, 0.29", "15.7072, -55.9718, 37.968, 0.29", "15.6953, -56.2946, 38.2478, 0.29", "15.7037, -56.6714, 38.602, 0.29", "15.7337, -57.1642, 39.0721, 0.44", "15.7507, -57.6529, 39.5815, 0.59", "15.7567, -58.2288, 40.2021, 0.22", "15.7594, -58.9637, 40.9948, 0.22", "15.7542, -59.37, 41.4491, 0.22", "15.7404, -59.6668, 41.782, 0.22", "15.6286, -60.6162, 42.8441, 0.22", "15.5553, -61.0056, 43.2815, 0.22", "15.4642, -61.3558, 43.6639, 0.37", "15.1106, -62.4336, 44.8365, 0.15", "14.7391, -63.3718, 45.9296, 0.22", "14.395, -64.0788, 46.8156, 0.22", "14.117, -64.5809, 47.4873, 0.22", "13.9011, -64.9197, 47.9979, 0.22", "13.6833, -65.2197, 48.5144, 0.22", "12.81, -66.2938, 50.6224, 0.15", "12.5746, -66.5614, 51.2474, 0.15", "12.4334, -66.733, 51.6982, 0.22", "12.2689, -66.9886, 52.401, 0.22", "12.1716, -67.2175, 52.9541, 0.22", "12.1413, -67.3285, 53.1691, 0.22", "12.0175, -67.9659, 54.0735, 0.22", "11.9205, -68.5587, 54.7692, 0.22", "11.7001, -69.8448, 56.0678, 0.07", "11.5128, -70.9089, 56.9933, 0.07", "11.4011, -71.5597, 57.4859, 0.22", "11.1153, -73.3252, 58.6332, 0.15", "11.0219, -73.9699, 58.961, 0.29", "10.9637, -74.3914, 59.1184, 0.29", "10.8136, -75.4831, 59.4159, 0.15", "10.695, -76.2887, 59.5925, 0.15", "10.5877, -76.9761, 59.7127, 0.37", "10.4312, -77.9321, 59.8342, 0.44", "10.2353, -79.0505, 59.9764, 0.15", "10.0437, -80.1186, 60.1202, 0.15", "9.8744, -81.0363, 60.2832, 0.15", "9.72862, -81.7834, 60.4705, 0.22", "9.57383, -82.5942, 60.7327, 0.22", "9.37438, -83.7195, 61.1568, 0.15", "9.29191, -84.2451, 61.3721, 0.22", "9.13967, -85.4865, 61.9515, 0.07", "9.0434, -86.6982, 62.5507, 0.07", "9.00286, -87.6556, 63.0144, 0.07", "9.00525, -87.8126, 63.081, 0.07", "9.06706, -88.5208, 63.3337, 0.15", "9.37629, -90.4843, 63.88, 0.15", "9.57526, -91.3856, 64.069, 0.15", "9.75955, -92.0841, 64.1843, 0.59", "10.0934, -93.2422, 64.3851, 0.07", "10.2862, -93.8878, 64.5111, 0.22", "10.6587, -94.9923, 64.7524, 0.07", "10.9484, -95.7394, 64.9283, 0.07", "11.3076, -96.565, 65.1774, 0.22", "11.856, -97.696, 65.5846, 0.07", "12.2002, -98.374, 65.8617, 0.07", "12.5795, -99.0967, 66.1558, 0.15", "13.0028, -99.8809, 66.465, 0.07", "13.3996, -100.636, 66.79, 0.22", "14.0349, -101.824, 67.3275, 0.07", "14.6299, -102.95, 67.8238, 0.07", "14.9992, -103.676, 68.1273, 0.07", "15.4756, -104.679, 68.5234, 0.15", "16.0015, -105.848, 68.964, 0.15", "16.5669, -107.199, 69.4406, 0.07", "17.025, -108.323, 69.7762, 0.07", "17.3227, -109.113, 69.9613, 0.07", "17.4506, -109.49, 70.0289, 0.29", "17.766, -110.465, 70.1504, 0.29", "18.1438, -111.711, 70.2515, 0.07", "18.5024, -112.94, 70.3483, 0.07", "18.8947, -114.232, 70.4453, 0.07", "19.251, -115.375, 70.526, 0.07", "19.6097, -116.495, 70.5075, 0.07", "19.7732, -116.998, 70.4581, 0.66", "20.3691, -118.839, 70.1475, 0.07", "20.7389, -120.086, 69.8183, 0.07", "21.1051, -121.618, 69.2186, 0.07", "21.4963, -123.838, 68.0858, 0.07", "21.5539, -124.312, 67.7978, 0.07", "21.5906, -124.78, 67.4776, 0.29", "21.6112, -126.063, 66.5111, 0.07", "21.6053, -127.53, 65.3788, 0.07", "21.6042, -127.932, 65.0962, 0.07", "21.6132, -128.611, 64.7046, 0.22", "21.6221, -128.971, 64.5026, 0.22", "21.6911, -130.538, 63.6779, 0.07", "21.7729, -131.641, 63.1782, 0.07", "21.9461, -133.329, 62.4698, 0.07", "22.0352, -134.184, 62.1066, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "22.2834, -33.2063, 4.27213, 0.22", "22.2621, -33.6425, 5.54451, 0.22", "22.2704, -33.9508, 6.64225, 0.22", "22.2614, -34.1852, 7.80171, 0.22", "22.2248, -34.2827, 8.39354, 0.22", "22.2061, -34.3469, 8.73705, 0.22", "22.1729, -34.5376, 9.60382, 0.22", "22.1668, -34.6172, 9.94222, 0.22", "22.1652, -34.8765, 10.8178, 0.22", "22.1284, -35.4975, 12.5215, 0.22", "22.0535, -35.8986, 13.466, 0.22", "21.9506, -36.2448, 14.196, 0.22", "21.8734, -36.4896, 14.6528, 0.22", "21.7395, -37.004, 15.5369, 0.22", "21.6699, -37.4341, 16.1946, 0.22", "21.6556, -37.9505, 16.9351, 0.22", "21.6566, -38.2202, 17.3827, 0.22", "21.6646, -38.4075, 17.747, 0.22", "21.682, -38.6291, 18.2207, 0.22", "21.6928, -38.9556, 18.9039, 0.22", "21.7342, -39.4778, 19.8872, 0.29", "21.8259, -39.9676, 20.693, 0.29", "21.905, -40.3219, 21.2205, 0.29", "21.9655, -40.6462, 21.6419, 0.22", "22.0606, -41.2195, 22.3053, 0.22", "22.1804, -41.7441, 22.8657, 0.15", "22.4431, -42.5711, 23.6649, 0.22", "22.849, -43.5143, 24.4779, 0.15", "23.2065, -44.2101, 25.0275, 0.22", "23.6244, -44.997, 25.5829, 0.22", "24.0896, -45.9241, 26.1392, 0.22", "24.2723, -46.3361, 26.3523, 0.22", "24.5484, -47.026, 26.6356, 0.22", "24.8071, -47.6811, 26.8778, 0.22", "25.233, -48.7639, 27.2823, 0.15", "25.533, -49.5883, 27.5919, 0.29", "25.8601, -50.6862, 28.0295, 0.22", "26.1626, -51.8768, 28.5806, 0.22", "26.3419, -52.7052, 29.0289, 0.22", "26.4466, -53.3361, 29.4562, 0.29", "26.521, -53.9897, 29.9594, 0.29", "26.5483, -54.9037, 30.7246, 0.15", "26.5023, -55.6082, 31.3536, 0.29", "26.3893, -56.3967, 32.0799, 0.52", "26.0995, -57.9384, 33.5229, 0.22", "25.9423, -58.6542, 34.2354, 0.15", "25.8299, -59.1279, 34.7417, 0.22", "25.676, -59.9099, 35.67, 0.15", "25.6003, -60.4293, 36.3425, 0.44", "25.5368, -61.3149, 37.562, 0.15", "25.549, -61.8365, 38.3006, 0.29", "25.5975, -62.347, 39.0504, 0.29", "25.7454, -63.2107, 40.2553, 0.15", "25.8033, -63.4765, 40.6121, 0.15", "25.8972, -63.8395, 41.0957, 0.22", "26.1241, -64.6627, 42.1139, 0.15", "26.3364, -65.3702, 42.9481, 0.15", "26.4881, -65.899, 43.5427, 0.15", "26.6473, -66.5189, 44.2224, 0.15", "26.7976, -67.0087, 44.7929, 0.37", "26.9902, -67.5094, 45.4321, 0.74", "27.3551, -68.1929, 46.417, 0.22", "27.6083, -68.5769, 47.0792, 0.22", "27.9836, -69.0934, 48.2052, 0.15", "28.1889, -69.3567, 48.8924, 0.15", "28.3363, -69.5345, 49.4429, 0.29", "28.5311, -69.7399, 50.342, 0.44", "28.8285, -70.0006, 51.8682, 0.29", "29.0904, -70.2153, 53.2305, 0.29", "29.2628, -70.3655, 54.0836, 0.29", "29.3648, -70.4893, 54.5809, 0.29", "29.649, -70.9237, 55.803, 0.29", "29.8576, -71.266, 56.5203, 0.22", "30.1534, -71.7065, 57.2545, 0.22", "30.5516, -72.2598, 58.0453, 0.22", "30.9982, -72.9088, 58.8983, 0.22", "31.3944, -73.5002, 59.6358, 0.37", "32.031, -74.4348, 60.7711, 0.22", "32.3896, -74.9647, 61.4569, 0.15", "32.5985, -75.2614, 61.8604, 0.22", "33.0458, -75.9736, 62.855, 0.07", "33.3771, -76.5397, 63.6635, 0.07", "33.7041, -77.1769, 64.5673, 0.07", "33.9556, -77.8309, 65.4336, 0.07", "34.0738, -78.3168, 66.0574, 0.88", "34.2297, -79.4371, 67.5085, 0.07", "34.2751, -80.0521, 68.2847, 0.07", "34.2818, -80.3945, 68.7185, 0.22", "34.3275, -81.5189, 70.1798, 0.07", "34.4126, -82.3865, 71.3633, 0.07", "34.537, -83.2636, 72.5973, 0.22", "34.6423, -83.6886, 73.2053, 0.66", "34.9484, -84.5666, 74.4841, 0.07", "35.3597, -85.4605, 75.8024, 0.07", "35.7591, -86.1321, 76.7587, 0.07", "36.01, -86.4744, 77.2415, 0.59", "36.6789, -87.2846, 78.3727, 0.07", "37.2866, -87.9446, 79.3886, 0.07", "37.8089, -88.452, 80.227, 0.07", "38.1965, -88.816, 80.8963, 0.22", "38.6542, -89.2194, 81.7404, 0.37", "39.0517, -89.5412, 82.5463, 0.22", "39.631, -89.9592, 83.9199, 0.22", "39.8785, -90.1241, 84.5663, 0.37", "40.3738, -90.5124, 86.0012, 0.15", "40.7892, -90.9204, 87.3197, 0.15", "41.1396, -91.3724, 88.5111, 0.15", "41.5309, -91.9773, 89.8052, 0.15", "41.8989, -92.587, 90.9073, 0.22", "42.3333, -93.2976, 92.0643, 0.07", "42.5573, -93.6701, 92.5883, 0.29", "42.8463, -94.1936, 93.1964, 0.29", "43.4096, -95.2018, 94.2225, 0.07", "43.9352, -96.1126, 95.0779, 0.07", "44.1857, -96.516, 95.4938, 0.44", "44.5632, -97.0744, 96.131, 0.52", "45.3149, -98.184, 97.5022, 0.07", "45.8186, -98.9495, 98.4818, 0.22", "46.5599, -100.152, 100.023, 0.07", "47.1419, -101.218, 101.292, 0.29", "47.8511, -102.686, 102.993, 0.07", "48.235, -103.552, 103.953, 0.07", "48.4257, -104.059, 104.474, 0.29", "48.6131, -104.696, 105.035, 0.66", "49.0876, -106.903, 106.639, 0.07", "49.3253, -108.329, 107.499, 0.15", "49.4203, -109.094, 107.907, 0.37", "49.5153, -110.04, 108.364, 0.59", "49.6351, -111.503, 109.04, 0.07", "49.7382, -113.274, 109.876, 0.15", "49.7722, -113.898, 110.167, 0.29", "49.8579, -114.786, 110.594, 0.74", "50.0949, -116.468, 111.472, 0.07", "50.3334, -117.633, 112.132, 0.22", "50.5677, -118.543, 112.699, 0.22", "50.9613, -119.914, 113.546, 0.07", "51.3744, -121.366, 114.46, 0.07", "51.5723, -122.004, 114.866, 0.07", "51.7533, -122.566, 115.248, 0.29", "52.0386, -123.534, 115.931, 0.44", "52.3088, -124.662, 116.785, 0.07", "52.4736, -126.056, 117.858, 0.07", "52.5157, -126.97, 118.545, 0.07", "52.5015, -128.119, 119.374, 0.07", "52.3941, -129.246, 120.16, 0.15", "52.1773, -130.573, 121.143, 0.37", "51.7558, -132.535, 122.701, 0.07", "51.5649, -133.271, 123.291, 0.07", "51.3649, -133.936, 123.857, 0.15", "50.9594, -135.142, 124.911, 0.07", "50.2192, -137.097, 126.702, 0.07", "49.8497, -137.976, 127.589, 0.07", "49.529, -138.653, 128.418, 0.07", "49.2376, -139.24, 129.162, 0.07", "49.0297, -139.677, 129.721, 0.22", "48.7522, -140.287, 130.429, 0.37", "48.2971, -141.308, 131.339, 0.07", "47.8312, -142.497, 132.243, 0.22", "47.5513, -143.357, 132.815, 0.07", "47.2397, -144.601, 133.533, 0.22", "46.9616, -146.252, 134.341, 0.07", "46.6703, -148.902, 135.47, 0.07", "46.5655, -150.402, 136.003, 0.07", "46.5319, -151.254, 136.261, 0.07", "46.5131, -152.146, 136.508, 0.22", "46.4771, -154.568, 137.146, 0.07", "46.4457, -156.066, 137.571, 0.07", "46.3841, -157.294, 137.948, 0.07", "46.2747, -158.331, 138.289, 0.22", "46.1034, -159.363, 138.678, 0.22", "45.7717, -160.846, 139.288, 0.07", "45.5209, -161.74, 139.693, 0.07", "45.2308, -162.658, 140.122, 0.29", "44.9067, -163.591, 140.605, 0.07", "44.5574, -164.518, 141.114, 0.07", "44.1265, -165.635, 141.71, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "22.2834, -33.2063, 4.27213, 0.29", "22.4644, -33.8148, 4.37159, 0.29", "22.6642, -34.62, 4.55849, 0.22", "22.8572, -35.4207, 4.76016, 0.22", "23.0411, -36.095, 4.92883, 0.22", "23.356, -37.1694, 5.19358, 0.37", "23.6618, -38.1519, 5.43028, 0.22", "24.0255, -39.2542, 5.71107, 0.22", "24.2752, -39.9471, 5.8852, 0.29", "24.6423, -40.872, 6.11726, 0.29", "24.7827, -41.1762, 6.19988, 0.52", "25.0098, -41.5699, 6.32198, 0.81", "25.5517, -42.3652, 6.57656, 1.03", "26.3536, -43.4439, 6.91411, 0.44", "27.2369, -44.6243, 7.28929, 0.59", "27.9322, -45.6059, 7.59827, 0.37", "28.8608, -46.9556, 8.00047, 0.29", "29.505, -47.9164, 8.27577, 0.29", "30.0119, -48.6665, 8.48767, 0.29", "30.6577, -49.6005, 8.77399, 0.44", "31.5881, -50.8951, 9.17506, 0.59", "32.2312, -51.7833, 9.44552, 0.59", "33.0952, -53.0013, 9.83232, 0.37", "33.9426, -54.1889, 10.2415, 0.44", "34.6678, -55.176, 10.5903, 0.37", "35.4045, -56.1063, 10.9016, 0.59", "36.2472, -57.0895, 11.1973, 0.29", "36.9705, -57.9005, 11.358, 0.59", "37.2994, -58.2555, 11.3885, 0.59", "38.2233, -59.2478, 11.4082, 0.37", "39.0662, -60.1025, 11.4056, 0.44", "39.6904, -60.6878, 11.4212, 0.44", "41.0256, -61.7918, 11.4755, 0.29", "41.7664, -62.335, 11.5124, 0.22", "42.6248, -62.9331, 11.5806, 0.37", "43.8533, -63.7705, 11.717, 0.29", "44.7323, -64.3781, 11.8376, 0.29", "45.6712, -64.9972, 11.9678, 0.66", "46.5665, -65.5216, 12.0899, 0.66", "47.6669, -66.0785, 12.181, 0.37", "48.8124, -66.5545, 12.2385, 0.37", "50.1282, -67.0217, 12.3038, 0.29", "51.2834, -67.4103, 12.3834, 0.22", "52.0937, -67.6988, 12.488, 0.22", "52.6587, -67.9336, 12.6074, 0.29", "53.8571, -68.5339, 12.9884, 0.59", "54.709, -69.076, 13.326, 0.44", "55.4201, -69.6235, 13.632, 0.29", "56.4039, -70.4489, 13.996, 0.44", "57.3653, -71.2716, 14.2421, 0.29", "58.773, -72.4519, 14.4071, 0.29", "59.8175, -73.2693, 14.3203, 0.52", "60.7309, -73.8856, 14.0734, 0.52", "61.9726, -74.5855, 13.5861, 0.29", "63.1229, -75.1235, 13.0296, 0.59", "63.9462, -75.457, 12.57, 0.29", "65.1447, -75.8973, 11.8242, 0.44", "66.2124, -76.2771, 11.1433, 0.66", "67.9785, -76.9696, 10.026, 0.59", "69.1858, -77.5197, 9.32356, 0.29", "69.7568, -77.8186, 9.03111, 0.29", "70.1332, -78.0581, 8.86184, 0.29", "70.6406, -78.4375, 8.65891, 0.37", "71.3612, -79.0789, 8.37973, 0.37", "72.0972, -79.8943, 8.1085, 0.29", "72.9597, -81.0142, 7.80675, 0.37", "74.153, -82.6691, 7.37698, 0.29", "74.7927, -83.5786, 7.12732, 0.29", "75.1383, -84.0886, 6.97023, 0.29", "75.8364, -85.2019, 6.59842, 0.37", "76.3713, -86.1774, 6.26311, 0.52", "76.978, -87.348, 5.88128, 0.81", "77.4833, -88.2759, 5.65042, 0.29", "77.988, -89.0969, 5.53606, 0.22", "78.4914, -89.8011, 5.51995, 0.22", "79.2028, -90.6811, 5.60197, 0.29", "80.1764, -91.8627, 5.80814, 0.44", "81.2813, -93.262, 6.10931, 0.44", "82.1687, -94.3996, 6.3407, 0.59", "83.1216, -95.5988, 6.56015, 0.59", "83.9951, -96.6777, 6.70804, 0.44", "85.2758, -98.2197, 6.8122, 0.44", "86.3383, -99.5127, 6.79702, 0.22", "86.9672, -100.277, 6.7462, 0.22", "87.2735, -100.638, 6.71621, 0.52", "87.9642, -101.415, 6.617, 0.88", "89.3903, -102.918, 6.34415, 0.29", "90.1705, -103.653, 6.14885, 0.29", "91.1151, -104.469, 5.83632, 0.29", "91.686, -104.961, 5.60056, 0.29", "92.3245, -105.533, 5.26868, 0.29", "92.7844, -105.992, 4.97657, 0.37", "93.3697, -106.68, 4.54632, 0.52", "94.0351, -107.532, 4.06901, 0.44", "94.5628, -108.252, 3.73093, 0.37", "94.9972, -108.83, 3.51761, 0.37", "95.85, -109.904, 3.18794, 0.29", "96.665, -110.849, 2.92963, 0.29", "97.2843, -111.457, 2.77675, 0.22", "97.8061, -111.859, 2.63243, 0.22", "98.7967, -112.475, 2.32608, 0.29", "99.6434, -112.97, 2.01545, 0.29", "100.246, -113.352, 1.7668, 0.44", "100.856, -113.848, 1.47816, 0.52", "101.852, -114.98, 0.973342, 0.29", "102.351, -115.761, 0.697088, 0.37", "102.922, -116.852, 0.387777, 0.66", "103.494, -118.058, 0.0734, 0.29", "103.909, -118.976, -0.162682, 0.37", "104.423, -120.119, -0.449067, 0.59", "105.245, -121.852, -0.834467, 0.22", "106.049, -123.435, -1.22593, 0.29", "106.638, -124.503, -1.5152, 0.59", "106.953, -125.04, -1.67499, 0.96", "107.119, -125.32, -1.75487, 0.96", "107.532, -126.016, -1.95944, 0.66" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "3.81835, -31.0977, -44.5443, 0.22", "2.21189, -33.9308, -51.8141, 0.22", "1.27258, -38.8235, -58.1586, 0.22", "1.54428, -43.8004, -64.4965, 0.22", "2.07982, -48.7932, -70.8036, 0.22", "4.1296, -52.9476, -77.3316, 0.22", "6.39843, -57.5379, -83.5107, 0.22", "8.94621, -61.2238, -90.1129, 0.22", "12.1995, -64.1651, -96.7372, 0.22", "14.3542, -66.7014, -103.943, 0.22", "18.2165, -68.7651, -110.535, 0.22", "23.5366, -69.36, -116.326, 0.22", "29.0224, -71.3139, -121.67, 0.22", "33.4942, -72.6208, -128.045, 0.22" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "3.81835, -31.0977, -44.5443, 0.15", "3.67113, -33.8103, -55.5789, 0.22", "6.20279, -35.0956, -66.5258, 0.22", "9.18921, -36.9897, -77.2767, 0.22" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-17.5901, -28.0724, -44.5566, 0.22", "-19.4544, -35.6847, -52.3802, 0.22", "-21.2761, -42.726, -60.6903, 0.22", "-24.5024, -48.7748, -69.3289, 0.22", "-27.2503, -55.209, -77.8627, 0.22", "-30.7113, -62.5574, -85.4303, 0.22", "-33.1975, -69.6233, -93.5678, 0.22", "-38.5273, -77.1277, -99.9001, 0.22", "-44.712, -85.2963, -104.568, 0.22", "-50.98, -92.26, -110.65, 0.22", "-56.3943, -100.244, -116.363, 0.22", "-60.8119, -107.749, -123.31, 0.22", "-65.3032, -113.925, -131.318, 0.22" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-17.5901, -28.0724, -44.5566, 0.66", "-18.6964, -35.695, -54.4817, 0.22", "-21.1998, -43.4046, -64.0777, 0.22", "-25.9099, -49.7341, -73.7513, 0.22", "-31.7454, -55.5159, -83.1146, 0.22", "-37.3633, -61.9086, -92.2459, 0.22", "-42.8145, -65.984, -102.611, 0.22", "-48.6928, -69.7422, -112.851, 0.22", "-52.7958, -73.9206, -123.789, 0.22", "-55.4678, -79.9029, -134.406, 0.22", "-56.9253, -86.9015, -144.694, 0.22", "-59.7735, -94.8925, -153.977, 0.22", "-62.0295, -101.032, -164.611, 0.22" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-19.1863, 6.01412, -12.6229, 0.66", "-19.3431, 6.8875, -13.3489, 0.66", "-19.4575, 8.05658, -14.2577, 0.22", "-19.4919, 8.64024, -14.6747, 0.22", "-19.5399, 9.24942, -15.1069, 0.22", "-19.5965, 9.72817, -15.4562, 0.22", "-19.6537, 10.0474, -15.7016, 0.52", "-19.7566, 10.5197, -16.0971, 0.81", "-20.0312, 11.3275, -16.8117, 0.22", "-20.2835, 11.8273, -17.2461, 0.22", "-20.5107, 12.1807, -17.5461, 0.22", "-20.8494, 12.6482, -17.9498, 0.22", "-21.1761, 13.0544, -18.299, 0.37", "-21.8003, 13.7655, -18.8945, 0.66", "-22.361, 14.3601, -19.3521, 0.22", "-23.145, 15.2108, -19.9155, 0.15", "-23.6012, 15.7173, -20.2081, 0.52", "-23.894, 16.036, -20.3709, 0.52", "-24.3156, 16.4614, -20.5623, 0.37", "-25.0623, 17.151, -20.8509, 0.15", "-25.4695, 17.4943, -20.9815, 0.22", "-25.7409, 17.7191, -21.0444, 0.15", "-26.4502, 18.315, -21.1416, 0.29", "-26.9666, 18.772, -21.1555, 0.29", "-27.2711, 19.0506, -21.1193, 0.29", "-27.8912, 19.6448, -20.9736, 0.52", "-28.4778, 20.1963, -20.7964, 0.22", "-29.3009, 20.9785, -20.5075, 0.22", "-29.983, 21.6268, -20.2317, 0.29", "-30.4843, 22.0934, -20.0396, 0.29", "-31.0731, 22.621, -19.8366, 0.37", "-32.0225, 23.4378, -19.5764, 0.22", "-32.4921, 23.8261, -19.4939, 0.15", "-32.8649, 24.1654, -19.476, 0.15", "-33.3211, 24.6408, -19.5309, 0.15", "-33.6916, 25.1042, -19.6336, 0.29", "-34.0719, 25.7123, -19.7867, 0.88", "-34.211, 26.025, -19.8664, 0.88", "-34.5972, 27.1527, -20.1339, 0.44", "-34.8128, 27.8362, -20.3118, 0.22", "-35.0832, 28.6989, -20.524, 0.22", "-35.3076, 29.417, -20.7027, 0.15", "-35.6058, 30.3248, -20.9208, 0.15", "-35.862, 31.0605, -21.0838, 0.22", "-36.3125, 32.2925, -21.2966, 0.15", "-36.8009, 33.6151, -21.4603, 0.22", "-36.9643, 34.0692, -21.4971, 0.22", "-37.282, 34.9351, -21.5188, 0.52", "-37.5603, 35.6782, -21.4965, 0.22", "-37.8413, 36.4507, -21.4377, 0.22", "-38.1391, 37.3367, -21.3174, 0.22", "-38.4983, 38.4022, -21.1548, 0.15", "-38.8876, 39.5246, -20.9815, 0.29", "-39.1305, 40.2254, -20.8785, 0.29", "-39.5796, 41.4794, -20.7014, 0.15", "-39.8804, 42.3016, -20.6004, 0.15", "-40.062, 42.7913, -20.5412, 0.15", "-40.365, 43.5459, -20.459, 0.29", "-40.7944, 44.5304, -20.3807, 0.15", "-40.9313, 44.8496, -20.3674, 0.15", "-41.2264, 45.5786, -20.3733, 0.44", "-41.4494, 46.2152, -20.4144, 0.44", "-41.6591, 46.9094, -20.4977, 0.22", "-41.8395, 47.6115, -20.6106, 0.22", "-42.1235, 48.8869, -20.8551, 0.15", "-42.3148, 49.916, -21.0648, 0.15", "-42.5359, 51.2526, -21.3379, 0.07", "-42.6699, 52.1209, -21.5129, 0.15", "-42.7666, 52.7642, -21.638, 0.52", "-42.8131, 53.0306, -21.6848, 0.52", "-43.0886, 54.166, -21.8459, 0.15", "-43.3458, 54.9697, -21.9381, 0.15", "-43.5041, 55.3598, -21.97, 0.29", "-43.6666, 55.7241, -21.9918, 0.29", "-44.2042, 56.8715, -22.0698, 0.07", "-44.5397, 57.5794, -22.1218, 0.07", "-44.8879, 58.2826, -22.1676, 0.15", "-45.2293, 58.9723, -22.2042, 0.15", "-45.5976, 59.7237, -22.2357, 0.37", "-45.6975, 59.939, -22.2423, 0.37", "-46.0014, 60.6523, -22.2543, 0.07", "-46.2948, 61.4133, -22.2427, 0.07", "-46.625, 62.3246, -22.2195, 0.07", "-46.7847, 62.7696, -22.2046, 0.07", "-47.0178, 63.369, -22.1988, 0.15", "-47.4115, 64.3092, -22.217, 0.07", "-47.6658, 64.8861, -22.2526, 0.15", "-47.9391, 65.4919, -22.3123, 0.29", "-48.2581, 66.1807, -22.3945, 0.29", "-48.8702, 67.4337, -22.5638, 0.22", "-49.1927, 68.0698, -22.657, 0.07", "-49.5906, 68.8574, -22.7787, 0.07", "-49.7508, 69.1664, -22.8252, 0.29", "-50.0735, 69.7484, -22.8756, 0.59", "-50.3358, 70.1878, -22.8902, 0.44", "-50.8935, 71.0856, -22.8653, 0.15", "-51.2023, 71.5818, -22.8368, 0.15", "-51.7831, 72.5025, -22.7624, 0.22", "-52.2888, 73.2847, -22.6977, 0.07", "-52.5914, 73.7463, -22.6691, 0.22", "-52.957, 74.3671, -22.648, 0.29", "-53.3158, 75.0244, -22.6431, 0.29", "-53.6644, 75.733, -22.658, 0.07", "-53.9333, 76.3589, -22.6914, 0.15", "-54.2898, 77.3461, -22.7715, 0.59", "-54.721, 78.7271, -22.8843, 0.15", "-54.9549, 79.6442, -22.9562, 0.15", "-55.1834, 80.7613, -23.0342, 0.15", "-55.2434, 81.1889, -23.0601, 0.29", "-55.3054, 81.9189, -23.101, 0.29", "-55.324, 82.4829, -23.1366, 0.07", "-55.3221, 83.7766, -23.236, 0.15", "-55.2931, 85.3522, -23.3677, 0.07", "-55.2846, 85.9589, -23.4215, 0.29", "-55.2949, 86.626, -23.4842, 0.29", "-55.3852, 88.1745, -23.6777, 0.22", "-55.4835, 89.2643, -23.8718, 0.07", "-55.5488, 89.8042, -24.004, 0.22", "-55.6353, 90.3513, -24.1736, 0.22", "-55.8759, 91.4964, -24.5867, 0.22", "-56.1699, 92.5505, -25.0238, 0.22", "-56.4221, 93.2237, -25.3591, 0.22", "-56.744, 93.9527, -25.7838, 0.15", "-56.9128, 94.2966, -26.0056, 0.15", "-57.0353, 94.5029, -26.155, 0.15", "-57.317, 94.865, -26.4698, 0.15", "-57.5319, 95.0765, -26.6857, 0.15", "-57.8089, 95.314, -26.9393, 0.15", "-58.2247, 95.6572, -27.3507, 0.22", "-58.5248, 95.9237, -27.7443, 0.22", "-58.8575, 96.2198, -28.2776, 0.22", "-59.3071, 96.6491, -29.0856, 0.37", "-59.5353, 96.8855, -29.5352, 0.22", "-59.7468, 97.1262, -29.9728, 0.22", "-60.1624, 97.7562, -30.9442, 0.22", "-60.3342, 98.1193, -31.3993, 0.22", "-60.5541, 98.771, -32.0503, 0.15", "-60.7303, 99.4628, -32.6015, 0.15", "-60.8178, 99.8784, -32.8791, 0.15", "-61.0015, 100.898, -33.4295, 0.15", "-61.0716, 101.417, -33.6523, 0.15", "-61.1154, 101.884, -33.8339, 0.22", "-61.2148, 102.917, -34.2204, 0.07", "-61.3004, 103.522, -34.4276, 0.15", "-61.4269, 104.23, -34.6907, 0.07", "-61.6054, 104.887, -34.9683, 0.22", "-61.7259, 105.213, -35.1478, 0.22", "-61.9037, 105.637, -35.453, 0.07", "-62.1132, 106.097, -35.8561, 0.22", "-62.3917, 106.715, -36.4613, 0.15", "-62.636, 107.309, -37.0792, 0.29", "-62.827, 107.95, -37.7503, 0.07", "-62.9279, 108.514, -38.3434, 0.07", "-62.9531, 108.81, -38.6326, 0.07", "-62.958, 109.25, -39.0242, 0.22", "-62.9598, 109.645, -39.3141, 0.22", "-62.9604, 110.692, -39.9511, 0.07", "-62.9663, 111.425, -40.3336, 0.07", "-62.9795, 112.034, -40.6139, 0.15", "-63.0006, 112.977, -41.0329, 0.07", "-63.0398, 114.18, -41.5373, 0.07", "-63.0481, 115.113, -41.9526, 0.07", "-63.0471, 115.322, -42.0463, 0.37", "-63.0501, 115.758, -42.243, 0.37", "-63.0459, 116.597, -42.6517, 0.22", "-63.0321, 117.169, -42.9496, 0.22", "-62.908, 118.865, -43.9126, 0.07", "-62.8169, 119.622, -44.3803, 0.07", "-62.7044, 120.342, -44.8735, 0.07", "-62.5164, 121.071, -45.4542, 0.07", "-62.4445, 121.293, -45.6368, 0.07", "-62.2918, 121.653, -45.9618, 0.15", "-61.9654, 122.156, -46.5143, 0.15", "-61.5812, 122.501, -47.0798, 0.15", "-60.9459, 122.857, -47.917, 0.07", "-64.2807, 132.734, -50.3903, 0.07", "-65.6059, 143.288, -52.1123, 0.07", "-68.1052, 153.118, -55.5598, 0.07" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-19.1863, 6.01412, -12.6229, 0.22", "-20.3119, 5.32906, -12.5125, 0.22", "-20.9729, 4.9446, -12.4191, 0.22", "-21.4804, 4.67452, -12.3445, 0.15", "-21.8616, 4.48172, -12.2754, 0.22", "-22.3965, 4.21182, -12.1533, 0.22", "-23.4837, 3.66601, -11.8857, 0.15", "-24.0357, 3.4181, -11.7295, 0.15", "-24.9363, 3.06202, -11.5103, 0.22", "-25.7767, 2.76975, -11.342, 0.15", "-26.6223, 2.46736, -11.1687, 0.15", "-27.0815, 2.30167, -11.0747, 0.15", "-27.8156, 2.06672, -10.941, 0.15", "-29.2112, 1.68392, -10.7942, 0.15", "-29.7826, 1.55549, -10.7813, 0.52", "-37.8278, -0.285953, -10.7369, 0.52", "-46.0065, -0.163621, -11.6608, 0.52", "-54.0408, 0.321041, -13.3895, 0.52", "-62.2545, 0.840076, -13.5831, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "36.2352, -53.5935, 14.0636, 0.22", "36.7193, -54.193, 14.3485, 0.22", "37.1846, -54.8221, 14.683, 0.15", "37.5081, -55.3237, 14.9428, 0.22", "38.1103, -56.4211, 15.488, 0.15", "38.4179, -57.102, 15.8188, 0.29", "38.6464, -57.6722, 16.0924, 0.29", "38.9416, -58.5888, 16.5129, 0.15", "39.1344, -59.2709, 16.8031, 0.22", "39.3443, -59.949, 17.0841, 0.29", "39.7084, -60.9287, 17.5329, 0.15", "39.9878, -61.5004, 17.7791, 0.15", "40.3142, -62.0373, 18.0176, 0.22", "40.9443, -62.8525, 18.4389, 0.15", "41.5487, -63.49, 18.8388, 0.22", "42.3751, -64.2471, 19.3838, 0.22", "43.1933, -64.9255, 19.9496, 0.15", "43.8251, -65.421, 20.4318, 0.22", "44.4869, -65.9311, 21.0247, 0.22", "45.2719, -66.5344, 21.8324, 0.07", "45.8301, -66.99, 22.4965, 0.07", "46.241, -67.3262, 23.0085, 0.15", "46.7454, -67.7274, 23.6492, 0.07", "47.4222, -68.2752, 24.4837, 0.07", "47.7249, -68.5245, 24.8268, 0.22", "48.2538, -68.9861, 25.3951, 0.44", "49.011, -69.6806, 26.1823, 0.22", "49.5487, -70.2031, 26.726, 0.44", "50.6264, -71.3654, 27.8, 0.07", "51.2229, -72.0668, 28.3811, 0.22", "52.0216, -73.1107, 29.168, 0.07", "52.605, -73.9415, 29.7377, 0.22", "52.9262, -74.4576, 30.0546, 0.22", "53.3865, -75.2582, 30.466, 0.07", "53.6348, -75.7475, 30.6475, 0.29", "53.8423, -76.2436, 30.7824, 0.29", "54.2909, -77.4642, 30.94, 0.07", "54.5145, -78.2555, 30.9702, 0.07", "54.6378, -78.8782, 30.9742, 0.07", "54.7582, -79.9618, 30.9749, 0.07", "54.7693, -80.6018, 30.9763, 0.22", "54.7255, -81.1022, 30.9847, 0.22", "54.4478, -82.6605, 31.0389, 0.07", "54.1411, -84.0534, 31.147, 0.07", "53.8917, -85.0794, 31.2771, 0.22", "53.6223, -86.125, 31.4693, 0.37", "53.24, -87.5271, 31.7696, 0.15", "52.8717, -88.8143, 32.0941, 0.29", "52.6683, -89.5041, 32.3028, 0.29", "52.3946, -90.3895, 32.6206, 0.07", "52.1571, -91.1464, 32.9279, 0.07", "51.996, -91.6343, 33.1349, 0.22", "51.5799, -92.857, 33.6517, 0.15", "51.2204, -93.8402, 34.0459, 0.15", "50.9424, -94.5672, 34.3054, 0.22", "50.3584, -96.0519, 34.7936, 0.07", "49.9333, -97.1568, 35.1476, 0.22", "49.5822, -98.121, 35.4519, 0.07", "49.4728, -98.4295, 35.5436, 0.22", "49.1685, -99.3419, 35.8002, 0.66", "48.7519, -100.669, 36.1788, 0.15", "48.4781, -101.63, 36.4143, 0.15", "48.2583, -102.417, 36.57, 0.15", "48.0296, -103.176, 36.6902, 0.22", "47.8269, -103.826, 36.7719, 0.29", "47.5057, -104.805, 36.8749, 0.07", "47.0446, -106.019, 36.9805, 0.07", "46.6706, -106.853, 37.0778, 0.15", "45.8478, -108.436, 37.3507, 0.07", "45.7346, -108.629, 37.393, 0.07", "45.1872, -109.472, 37.6531, 0.15", "44.6172, -110.309, 38.0123, 0.07", "43.7575, -111.529, 38.7052, 0.22", "43.2019, -112.319, 39.233, 0.37", "42.8114, -112.858, 39.6285, 0.37", "42.0626, -113.902, 40.3753, 0.15", "41.2755, -115.053, 41.1472, 0.22", "40.7707, -115.854, 41.6455, 0.22", "40.407, -116.482, 41.995, 0.22", "40.1211, -117.03, 42.255, 0.22", "39.5005, -118.284, 42.7308, 0.07", "38.9651, -119.428, 43.095, 0.07", "38.7725, -119.873, 43.2315, 0.22", "38.4332, -120.749, 43.5113, 0.07", "38.2466, -121.264, 43.6805, 0.07", "37.8831, -122.349, 44.0572, 0.22", "37.2517, -124.344, 44.7969, 0.07", "36.9014, -125.449, 45.1879, 0.07", "36.6204, -126.306, 45.4918, 0.07", "36.304, -127.263, 45.8312, 0.22", "36.083, -127.938, 46.0525, 0.07", "35.9288, -128.408, 46.1846, 0.15", "35.2842, -130.174, 46.574, 0.07", "34.7945, -131.395, 46.8246, 0.07", "34.3686, -132.404, 47.0272, 0.07", "34.1077, -133.05, 47.1498, 0.07", "33.9117, -133.563, 47.2276, 0.07", "33.6778, -134.234, 47.2839, 0.22", "33.265, -135.671, 47.265, 0.07", "33.0216, -136.58, 47.2033, 0.22", "32.7372, -137.702, 47.0887, 0.07", "32.5458, -138.564, 46.9963, 0.07", "32.3431, -139.71, 46.8722, 0.15", "32.1817, -141.042, 46.7087, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "36.2352, -53.5935, 14.0636, 0.15", "36.2428, -54.6952, 14.4753, 0.15", "36.2642, -55.6482, 14.8507, 0.15", "36.2707, -56.2828, 15.1255, 0.15", "36.2724, -56.8963, 15.4127, 0.37", "36.2725, -57.0433, 15.4771, 0.37", "36.2692, -57.7978, 15.8019, 0.15", "36.2582, -58.3817, 16.0643, 0.22", "36.2019, -59.2793, 16.4656, 0.15", "36.1137, -60.0864, 16.8354, 0.15", "36.0022, -60.8362, 17.1595, 0.22", "35.8647, -61.5334, 17.4374, 0.22", "35.6579, -62.4321, 17.7775, 0.15", "35.4608, -63.2158, 18.066, 0.15", "35.2931, -63.8118, 18.2706, 0.15", "35.0969, -64.397, 18.472, 0.81", "34.8962, -64.9022, 18.6736, 0.96" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "107.532, -126.016, -1.95944, 0.22", "107.853, -127.379, -2.57843, 0.22", "108.086, -128.336, -2.9785, 0.22", "108.234, -129.043, -3.23054, 0.29", "108.379, -129.817, -3.47382, 0.29", "108.514, -130.548, -3.67611, 0.22", "108.71, -131.547, -3.91907, 0.22", "108.953, -132.706, -4.12876, 0.29", "109.34, -134.485, -4.35952, 0.22", "109.516, -135.233, -4.41279, 0.44", "109.78, -136.252, -4.4292, 0.52", "110.078, -137.338, -4.40126, 0.37", "110.549, -139.04, -4.30079, 0.22", "110.876, -140.164, -4.2342, 0.29", "111.087, -140.816, -4.20318, 0.74", "111.398, -141.7, -4.19363, 0.81", "111.971, -143.151, -4.23463, 0.37", "112.366, -144.016, -4.30344, 0.37", "112.845, -144.944, -4.43584, 0.29", "113.242, -145.669, -4.57706, 0.29", "113.596, -146.337, -4.72986, 0.29", "113.984, -147.093, -4.90556, 0.22", "114.247, -147.644, -5.01711, 0.22", "114.583, -148.436, -5.15487, 0.22", "114.847, -149.145, -5.28504, 0.22", "115.066, -149.801, -5.42481, 0.22", "115.258, -150.441, -5.58347, 0.22", "115.632, -151.733, -5.95594, 0.22", "115.998, -152.975, -6.34836, 0.44", "116.448, -154.378, -6.82362, 0.22", "116.689, -155.141, -7.08024, 0.29", "116.924, -155.946, -7.35327, 0.52", "117.079, -156.596, -7.55766, 0.29", "117.207, -157.239, -7.75023, 0.22", "117.371, -158.409, -8.04056, 0.22", "117.485, -159.586, -8.26296, 0.29", "117.583, -160.877, -8.46635, 0.29", "117.65, -161.905, -8.61128, 0.66" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "107.532, -126.016, -1.95944, 0.22", "107.86, -126.82, -1.72201, 0.22", "108.079, -127.287, -1.60033, 0.22", "108.231, -127.592, -1.52868, 0.22", "108.439, -127.97, -1.43987, 0.22", "108.814, -128.578, -1.30368, 0.15", "109.041, -128.911, -1.22633, 0.15", "109.157, -129.07, -1.19279, 0.07", "109.428, -129.42, -1.10732, 0.15", "109.809, -129.887, -0.980504, 0.07", "110.061, -130.176, -0.88092, 0.29", "110.403, -130.536, -0.715005, 0.07", "110.689, -130.812, -0.552603, 0.07", "111.07, -131.129, -0.311044, 0.07", "111.273, -131.268, -0.15908, 0.15", "111.531, -131.431, 0.06495, 0.15", "111.818, -131.592, 0.368029, 0.37", "112.072, -131.713, 0.695045, 0.22", "112.333, -131.814, 1.10575, 0.15", "112.671, -131.912, 1.79614, 0.22", "112.86, -131.942, 2.32999, 0.29", "113.009, -131.891, 3.14866, 0.15", "112.99, -131.755, 3.74672, 0.07", "112.904, -131.568, 4.31525, 0.07", "112.774, -131.361, 4.74586, 0.07", "112.56, -131.063, 5.17201, 0.07", "112.239, -130.638, 5.62676, 0.07", "111.956, -130.289, 5.88621, 0.07" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "9.18921, -36.9897, -77.2767, 0.22", "10.51, -38.7619, -87.1244, 0.22", "11.299, -38.975, -97.1577, 0.22", "10.967, -38.5403, -107.205, 0.22", "11.8807, -37.5039, -117.166, 0.22", "13.8192, -35.7682, -126.882, 0.22", "14.8016, -33.7889, -136.694, 0.22", "14.1845, -31.4876, -146.465, 0.22", "14.4064, -31.1802, -156.52, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.18921, -36.9897, -77.2767, 0.15", "12.4024, -39.4012, -89.1843, 0.22", "14.0588, -42.2052, -101.353, 0.22", "13.699, -46.7987, -113.18, 0.22", "11.1473, -50.7161, -125.0, 0.22", "10.9545, -55.0748, -136.907, 0.22", "10.4234, -59.4138, -148.817, 0.22", "7.59725, -64.6612, -160.118, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-62.2545, 0.840076, -13.5831, 0.22", "-67.7515, 0.637616, -13.4133, 0.22", "-73.1269, -0.606175, -13.3234, 0.22", "-78.5244, -1.65896, -13.7197, 0.22", "-83.8611, -3.0784, -13.7021, 0.22", "-89.3032, -3.55627, -13.0172, 0.22", "-94.7809, -3.08392, -12.775, 0.22", "-100.197, -2.31563, -12.1533, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-62.2545, 0.840076, -13.5831, 0.66", "-68.0581, -0.2843, -13.9366, 0.22", "-73.8856, -0.45923, -14.9043, 0.22", "-79.3635, 0.181689, -17.0371, 0.22", "-84.6389, -0.262753, -19.6638, 0.22", "-89.2064, -1.21382, -23.2961, 0.22", "-93.426, -3.1114, -27.003, 0.22", "-97.4777, -4.40234, -31.1156, 0.22", "-101.762, -6.04625, -34.8603, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "117.65, -161.905, -8.61128, 0.07", "118.352, -162.402, -9.34236, 0.07", "118.586, -162.568, -9.57624, 0.22", "118.859, -162.781, -9.84272, 0.22", "119.17, -163.073, -10.1522, 0.22", "119.533, -163.493, -10.5288, 0.22", "119.958, -164.05, -10.9482, 0.15", "120.224, -164.453, -11.2085, 0.29", "120.639, -165.134, -11.5823, 0.07", "120.984, -165.736, -11.8483, 0.15", "121.322, -166.366, -12.0561, 0.15", "121.749, -167.201, -12.2621, 0.07", "122.125, -167.932, -12.3999, 0.07", "122.481, -168.578, -12.4936, 0.07", "122.804, -169.136, -12.5541, 0.22", "123.373, -170.148, -12.6592, 0.15", "123.619, -170.633, -12.7099, 0.15", "123.88, -171.212, -12.7838, 0.15", "124.218, -172.03, -12.8982, 0.15", "124.469, -172.656, -13.0098, 0.15", "124.825, -173.579, -13.2066, 0.15", "125.026, -174.131, -13.3551, 0.15", "125.271, -174.894, -13.6202, 0.15", "125.355, -175.176, -13.7441, 0.15", "125.504, -175.623, -13.9844, 0.29", "125.728, -176.12, -14.2823, 0.29", "126.162, -176.872, -14.7664, 0.15", "126.503, -177.434, -15.1393, 0.15", "126.812, -177.948, -15.47, 0.22", "127.03, -178.301, -15.6871, 0.22", "127.378, -178.815, -15.9921, 0.22", "128.049, -179.705, -16.4844, 0.15", "128.555, -180.333, -16.8067, 0.15", "128.866, -180.727, -17.002, 0.15", "129.306, -181.291, -17.265, 0.37", "129.93, -182.122, -17.6431, 0.07", "130.325, -182.668, -17.9008, 0.07", "130.753, -183.247, -18.1891, 0.07", "131.278, -183.924, -18.5677, 0.15", "136.866, -192.058, -20.6181, 0.15", "141.138, -201.137, -22.1132, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "117.65, -161.905, -8.61128, 0.22", "117.504, -162.817, -8.62595, 0.22", "117.423, -163.952, -8.59174, 0.22", "117.404, -164.423, -8.55948, 0.37", "117.353, -164.894, -8.53097, 0.44", "117.262, -165.46, -8.50523, 0.44", "117.081, -166.466, -8.47166, 0.29", "117.015, -166.884, -8.45426, 0.29", "116.942, -167.544, -8.43107, 0.29", "116.817, -168.774, -8.42936, 0.22", "116.774, -169.247, -8.4456, 0.29", "116.737, -169.668, -8.46913, 0.29", "116.677, -170.528, -8.54745, 0.22", "116.677, -171.152, -8.60557, 0.37", "116.739, -171.837, -8.66779, 0.59", "116.934, -172.981, -8.73731, 0.22", "117.011, -173.436, -8.75212, 0.22", "117.074, -173.889, -8.75384, 0.29", "117.158, -174.661, -8.73292, 0.29", "117.211, -175.182, -8.70959, 0.29", "117.305, -176.232, -8.6405, 0.29", "117.408, -177.468, -8.52908, 0.22", "117.486, -178.389, -8.41669, 0.44", "117.564, -179.357, -8.27254, 0.44", "117.631, -180.322, -8.11557, 0.22", "117.713, -181.646, -7.88457, 0.22", "117.754, -182.231, -7.78177, 0.37", "117.842, -183.171, -7.62192, 0.59", "117.897, -183.748, -7.52709, 0.15", "117.939, -184.422, -7.41953, 0.22", "117.958, -185.353, -7.27253, 0.29", "117.951, -186.158, -7.16182, 0.29", "117.931, -186.982, -7.05449, 0.29", "117.9, -187.859, -6.94733, 0.22", "117.868, -188.799, -6.84939, 0.22", "117.85, -189.403, -6.81398, 0.22", "117.825, -190.156, -6.80741, 0.29", "117.794, -191.148, -6.84281, 0.37", "117.789, -191.894, -6.88914, 0.88", "117.842, -192.864, -6.95497, 0.29", "117.962, -193.835, -7.0156, 0.22", "118.059, -194.421, -7.04606, 0.44", "118.177, -195.045, -7.06775, 0.59", "118.378, -196.046, -7.07742, 0.22", "118.552, -196.81, -7.04772, 0.22", "118.738, -197.506, -6.98932, 0.29", "118.876, -197.966, -6.92719, 0.29", "119.181, -198.834, -6.80468, 0.29", "119.46, -199.586, -6.72647, 0.22", "119.632, -200.04, -6.71348, 0.29", "119.828, -200.554, -6.73708, 0.29", "120.222, -201.538, -6.84869, 0.59", "120.595, -202.403, -7.02224, 0.37", "120.94, -203.119, -7.2452, 0.22", "121.257, -203.739, -7.51685, 0.44", "121.636, -204.427, -7.92438, 0.22", "121.92, -204.911, -8.27184, 0.29", "122.174, -205.341, -8.61391, 0.52", "122.412, -205.751, -8.93721, 0.74", "122.601, -206.071, -9.16232, 0.74", "123.105, -207.017, -9.66057, 0.22", "123.361, -207.603, -9.8431, 0.22", "123.617, -208.367, -9.9319, 0.22", "123.716, -208.755, -9.92061, 0.37", "123.81, -209.209, -9.86487, 0.37", "123.948, -210.014, -9.73516, 0.15", "124.005, -210.533, -9.63998, 0.15", "124.056, -211.183, -9.54233, 0.37", "124.107, -212.039, -9.44607, 0.22", "124.148, -212.832, -9.37783, 1.03", "124.225, -213.987, -9.31819, 0.29", "124.295, -214.749, -9.30852, 0.37", "124.378, -215.445, -9.32088, 0.22", "124.515, -216.329, -9.3696, 0.22", "124.649, -217.035, -9.43681, 0.59", "124.874, -218.107, -9.57809, 0.22", "125.037, -218.826, -9.68696, 0.37", "125.176, -219.429, -9.79022, 0.37", "125.397, -220.47, -9.96546, 0.22", "125.542, -221.261, -10.0984, 0.15", "125.63, -221.914, -10.1972, 0.15", "125.689, -222.473, -10.2636, 0.29", "125.753, -223.021, -10.3017, 0.15", "125.822, -223.483, -10.3096, 0.15", "125.95, -224.087, -10.2707, 0.29", "126.069, -224.543, -10.2096, 0.29", "126.263, -225.219, -10.0793, 0.22", "126.476, -225.972, -9.91977, 0.22", "126.766, -227.016, -9.6886, 0.29", "127.021, -227.961, -9.47298, 0.88", "127.306, -229.03, -9.20443, 0.22", "127.515, -229.782, -8.99779, 0.59", "127.825, -230.784, -8.67875, 0.15", "128.023, -231.318, -8.47773, 0.22", "128.266, -231.86, -8.25469, 0.22", "128.458, -232.219, -8.11043, 0.52", "128.718, -232.615, -7.95764, 0.52", "129.175, -233.217, -7.73377, 0.15", "129.541, -233.654, -7.58535, 0.52", "129.828, -234.007, -7.49425, 0.52", "130.244, -234.557, -7.38959, 0.15", "130.627, -235.137, -7.28836, 0.29", "130.969, -235.71, -7.1762, 0.29", "131.236, -236.221, -7.05599, 0.44", "131.486, -236.767, -6.89518, 0.96", "131.807, -237.574, -6.5972, 0.22", "132.032, -238.304, -6.3009, 0.22", "132.174, -238.868, -6.07332, 0.22", "132.336, -239.561, -5.79266, 0.15", "132.445, -240.012, -5.61774, 0.15", "132.57, -240.49, -5.46322, 0.59", "132.752, -241.134, -5.28845, 0.15", "133.003, -241.889, -5.13441, 0.15", "133.258, -242.591, -5.03545, 0.29", "133.551, -243.31, -4.96656, 0.52", "133.843, -244.003, -4.90972, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "133.843, -244.003, -4.90972, 0.15", "133.067, -244.811, -5.08466, 0.15", "132.685, -245.26, -5.14857, 0.37", "132.247, -245.82, -5.17108, 0.37", "131.461, -246.912, -5.12397, 0.07", "131.142, -247.403, -5.0856, 0.15", "130.593, -248.315, -5.01155, 0.07", "130.337, -248.783, -4.94986, 0.29", "129.818, -249.783, -4.82683, 0.22", "129.296, -250.803, -4.71788, 0.07", "128.662, -251.941, -4.67302, 0.07", "128.293, -252.433, -4.69218, 0.29", "128.063, -252.603, -4.73477, 0.29", "127.094, -253.126, -4.96751, 0.07", "126.599, -253.271, -5.12341, 0.07", "125.383, -253.346, -5.54037, 0.07", "123.858, -253.18, -6.05298, 0.07", "122.137, -252.821, -6.60238, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "133.843, -244.003, -4.90972, 0.15", "134.055, -244.646, -4.97728, 0.15", "134.231, -245.27, -5.00586, 0.22", "134.395, -245.803, -5.00348, 0.37", "134.566, -246.298, -4.98329, 0.37", "134.851, -247.036, -4.93044, 0.15", "134.969, -247.361, -4.91031, 0.22", "135.199, -248.001, -4.8649, 0.29", "135.421, -248.594, -4.81964, 0.29", "135.659, -249.185, -4.76958, 0.81", "135.987, -249.901, -4.70121, 0.15", "136.3, -250.522, -4.64591, 0.15", "136.577, -251.049, -4.61355, 0.15", "136.85, -251.582, -4.60932, 0.22", "137.032, -251.966, -4.62849, 0.52", "137.301, -252.537, -4.67661, 0.88", "137.635, -253.2, -4.75429, 0.22", "137.822, -253.535, -4.7953, 0.15", "138.132, -254.087, -4.88003, 0.22", "138.598, -254.912, -5.02502, 0.15", "138.838, -255.346, -5.11016, 0.59", "139.155, -255.942, -5.23434, 0.15", "139.394, -256.408, -5.33222, 0.22", "139.679, -257.021, -5.44891, 0.15", "139.879, -257.531, -5.53729, 0.37", "140.04, -258.031, -5.61509, 0.22", "140.187, -258.559, -5.69753, 0.74", "140.3, -259.001, -5.76096, 0.81", "140.508, -259.839, -5.87635, 0.15", "140.74, -260.79, -5.9966, 0.22", "140.888, -261.427, -6.07162, 0.15", "140.957, -261.737, -6.10121, 0.29", "141.044, -262.162, -6.136, 0.29", "141.146, -262.719, -6.16375, 0.15", "141.243, -263.372, -6.15613, 0.44", "141.311, -264.237, -6.06696, 0.44", "141.307, -264.656, -5.99534, 0.22", "141.258, -265.158, -5.88091, 0.74", "141.131, -265.824, -5.6778, 0.52", "140.982, -266.417, -5.44669, 0.22", "140.836, -266.959, -5.20908, 0.22", "140.735, -267.328, -5.04175, 0.22", "140.611, -267.798, -4.83556, 0.22", "140.433, -268.503, -4.5406, 0.22", "140.309, -268.975, -4.36411, 0.22", "140.126, -269.659, -4.1392, 1.11", "139.839, -270.752, -3.82923, 0.29", "139.671, -271.434, -3.6478, 0.29", "139.54, -271.977, -3.50623, 0.29", "139.401, -272.501, -3.38563, 0.22", "139.213, -273.11, -3.25484, 0.22", "139.018, -273.737, -3.15078, 0.74", "138.787, -274.595, -3.0739, 0.07", "138.677, -275.115, -3.05972, 0.07", "138.572, -275.846, -3.08394, 0.07", "138.535, -276.5, -3.1689, 0.81", "138.569, -277.341, -3.37915, 0.15", "138.622, -277.824, -3.54752, 0.15", "138.672, -278.125, -3.6773, 0.29", "138.763, -278.569, -3.88645, 0.44", "138.928, -279.289, -4.23363, 0.15", "139.096, -280.108, -4.64916, 0.22", "139.194, -280.746, -4.97217, 0.44", "139.253, -281.215, -5.22674, 0.22", "139.318, -281.741, -5.53274, 0.74", "139.373, -282.12, -5.75794, 0.74", "139.503, -283.025, -6.3061, 0.15", "139.569, -283.484, -6.60238, 0.37", "139.701, -284.256, -7.09953, 0.07", "139.8, -284.709, -7.37183, 0.07", "139.923, -285.151, -7.60777, 0.07", "140.126, -285.786, -7.90056, 0.22", "140.366, -286.447, -8.16108, 0.81", "140.62, -287.145, -8.3736, 0.52", "141.07, -288.324, -8.62913, 0.15", "141.313, -288.975, -8.73822, 0.15", "141.532, -289.578, -8.82038, 0.88", "141.718, -290.108, -8.87165, 0.66", "142.032, -291.071, -8.9352, 0.07", "142.226, -291.745, -8.96597, 0.15", "142.334, -292.197, -8.96532, 0.07", "142.431, -292.642, -8.95707, 0.15", "142.552, -293.247, -8.93986, 0.15", "142.638, -293.705, -8.92384, 0.59", "142.749, -294.299, -8.92263, 0.88", "142.929, -295.355, -8.91367, 0.22", "143.093, -296.104, -8.88111, 1.03" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "143.093, -296.104, -8.88111, 0.07", "143.682, -297.137, -9.02384, 0.07", "144.134, -298.003, -9.09239, 0.22", "144.551, -298.821, -9.12517, 0.07", "144.833, -299.416, -9.10262, 0.07", "145.145, -300.136, -9.01947, 0.07", "145.366, -300.697, -8.90933, 0.29", "145.605, -301.445, -8.69088, 0.07", "145.711, -301.896, -8.51086, 0.66", "145.888, -302.799, -8.07077, 0.07", "145.997, -303.402, -7.73487, 0.59", "146.136, -304.242, -7.21311, 0.07", "146.202, -304.698, -6.91906, 0.15", "146.294, -305.385, -6.49124, 0.07", "146.354, -305.967, -6.12838, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "143.093, -296.104, -8.88111, 0.29", "142.965, -296.68, -9.0091, 0.29", "142.872, -297.302, -9.12998, 0.15", "142.833, -297.613, -9.18869, 0.22", "142.809, -297.895, -9.24797, 0.22", "142.778, -298.591, -9.4029, 0.74", "142.786, -299.597, -9.6602, 0.15", "142.813, -299.931, -9.75036, 0.29", "142.841, -300.145, -9.81153, 0.29", "142.96, -300.755, -9.99835, 0.07", "143.104, -301.323, -10.1776, 0.15", "143.336, -302.08, -10.4327, 0.07", "143.499, -302.578, -10.597, 0.59", "143.699, -303.188, -10.8016, 0.74", "144.02, -304.229, -11.158, 0.07", "144.184, -304.842, -11.3885, 0.07", "144.3, -305.305, -11.5878, 0.29", "144.46, -305.93, -11.8856, 0.07", "144.542, -306.217, -12.0452, 0.37", "144.65, -306.614, -12.3013, 0.66", "144.769, -307.24, -12.7238, 0.22", "144.834, -307.686, -13.016, 0.22", "144.916, -308.391, -13.4359, 0.15", "144.947, -308.677, -13.59, 0.44", "145.011, -309.118, -13.8001, 0.81", "145.156, -309.991, -14.1747, 0.07", "145.236, -310.548, -14.3925, 0.07", "145.29, -311.108, -14.6065, 0.15", "145.325, -311.72, -14.8414, 0.74", "145.413, -312.9, -15.293, 0.07", "145.479, -313.41, -15.4978, 0.37" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "145.479, -313.41, -15.4978, 0.07", "145.344, -313.823, -15.6126, 0.07", "145.127, -314.533, -15.7643, 0.29", "144.88, -315.541, -15.9387, 0.15", "144.74, -316.11, -16.0371, 0.22", "144.469, -317.216, -16.2286, 0.07", "144.201, -318.308, -16.4175, 0.07", "144.111, -318.662, -16.4638, 0.15", "143.918, -319.408, -16.4768, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "145.479, -313.41, -15.4978, 0.22", "145.602, -314.606, -15.4365, 0.22", "145.654, -314.906, -15.4014, 0.07", "145.757, -315.429, -15.3321, 0.44", "146.094, -317.061, -15.0923, 0.07", "146.342, -318.146, -14.9173, 0.07", "146.517, -318.88, -14.7529, 0.15", "146.822, -320.091, -14.3393, 0.07", "146.933, -320.538, -14.1422, 0.15", "147.047, -320.96, -13.9345, 0.07", "147.204, -321.45, -13.6502, 0.22", "147.586, -322.833, -12.7423, 0.15", "147.854, -323.95, -11.9227, 0.07", "147.972, -324.528, -11.449, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_39", "dend_36", "dend_35", "dend_16", "dend_13", "dend_12", "dend_3", "dend_0", "dend_45", "dend_40", "dend_38", "dend_37", "dend_22", "dend_17", "dend_15", "dend_14", "dend_9", "dend_4", "dend_2", "dend_1", "dend_42", "dend_41", "dend_34", "dend_23", "dend_21", "dend_18", "dend_11", "dend_10", "dend_8", "dend_5", "dend_44", "dend_43", "dend_25", "dend_24", "dend_20", "dend_19", "dend_7", "dend_6", "dend_33", "dend_26", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_39", "dend_36", "dend_35", "dend_16", "dend_13", "dend_12", "dend_3", "dend_0", "dend_45", "dend_40", "dend_38", "dend_37", "dend_22", "dend_17", "dend_15", "dend_14", "dend_9", "dend_4", "dend_2", "dend_1", "dend_42", "dend_41", "dend_34", "dend_23", "dend_21", "dend_18", "dend_11", "dend_10", "dend_8", "dend_5", "dend_44", "dend_43", "dend_25", "dend_24", "dend_20", "dend_19", "dend_7", "dend_6", "dend_33", "dend_26", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L23_LBC_1fb6d0ce77_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_22
create dend_34
public dend_34
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_35, dend_16, dend_13, dend_12, dend_3, dend_0, dend_45, dend_40, dend_38, dend_37, dend_22, dend_17, dend_15, dend_14, dend_9, dend_4, dend_2, dend_1, dend_42, dend_41, dend_34, dend_23, dend_21, dend_18, dend_11, dend_10, dend_8, dend_5, dend_44, dend_43, dend_25, dend_24, dend_20, dend_19, dend_7, dend_6, dend_33, dend_26, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_35, dend_16, dend_13, dend_12, dend_3, dend_0, dend_45, dend_40, dend_38, dend_37, dend_22, dend_17, dend_15, dend_14, dend_9, dend_4, dend_2, dend_1, dend_42, dend_41, dend_34, dend_23, dend_21, dend_18, dend_11, dend_10, dend_8, dend_5, dend_44, dend_43, dend_25, dend_24, dend_20, dend_19, dend_7, dend_6, dend_33, dend_26, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_50
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.49999995180632084)
    connect dend_39(0), soma_0(0.49999995180632084)
    connect dend_36(0), soma_0(0.49999995180632084)
    connect dend_35(0), soma_0(0.49999995180632084)
    connect dend_16(0), soma_0(0.49999995180632084)
    connect dend_13(0), soma_0(0.49999995180632084)
    connect dend_12(0), soma_0(0.49999995180632084)
    connect dend_3(0), soma_0(0.49999995180632084)
    connect dend_0(0), soma_0(0.49999995180632084)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.72658, 3.16085, 0.0, 3.1586 ) }
    soma_0 { pt3dadd( -7.90511, 2.85139, 0.0, 5.52942 ) }
    soma_0 { pt3dadd( -7.08363, 2.54192, 0.0, 7.77229 ) }
    soma_0 { pt3dadd( -6.26215, 2.23245, 0.0, 8.87312 ) }
    soma_0 { pt3dadd( -5.44068, 1.92299, 0.0, 9.713 ) }
    soma_0 { pt3dadd( -4.6192, 1.61352, 0.0, 10.2371 ) }
    soma_0 { pt3dadd( -3.79772, 1.30405, 0.0, 10.754 ) }
    soma_0 { pt3dadd( -2.97625, 0.994587, 0.0, 10.995 ) }
    soma_0 { pt3dadd( -2.15477, 0.685121, 0.0, 11.088 ) }
    soma_0 { pt3dadd( -1.3333, 0.375654, 0.0, 11.1386 ) }
    soma_0 { pt3dadd( -0.51182, 0.0661874, 0.0, 10.9306 ) }
    soma_0 { pt3dadd( 0.309656, -0.243279, 0.0, 10.6953 ) }
    soma_0 { pt3dadd( 1.13113, -0.552746, 0.0, 10.3378 ) }
    soma_0 { pt3dadd( 1.95261, -0.862212, 0.0, 9.82409 ) }
    soma_0 { pt3dadd( 2.77408, -1.17168, 0.0, 9.14264 ) }
    soma_0 { pt3dadd( 3.59556, -1.48115, 0.0, 8.29626 ) }
    soma_0 { pt3dadd( 4.41704, -1.79061, 0.0, 7.19767 ) }
    soma_0 { pt3dadd( 5.23851, -2.10008, 0.0, 5.89828 ) }
    soma_0 { pt3dadd( 6.05999, -2.40955, 0.0, 4.7086 ) }
    soma_0 { pt3dadd( 6.88147, -2.71901, 0.0, 3.67147 ) }
    soma_0 { pt3dadd( 7.70294, -3.02848, 0.0, 2.2679 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -6.2198, -1.18093, 6.66, 1.03 ) }
    dend_46 { pt3dadd( -6.68652, -1.5704, 6.87698, 0.74 ) }
    dend_46 { pt3dadd( -7.46094, -2.12056, 7.29566, 0.52 ) }
    dend_46 { pt3dadd( -7.91283, -2.42351, 7.57252, 0.52 ) }
    dend_46 { pt3dadd( -8.50719, -2.84596, 7.98004, 0.44 ) }
    dend_46 { pt3dadd( -9.09573, -3.28683, 8.46819, 0.44 ) }
    dend_46 { pt3dadd( -9.70527, -3.73694, 9.05398, 0.66 ) }
    dend_46 { pt3dadd( -10.1184, -3.97938, 9.58019, 0.88 ) }
    dend_46 { pt3dadd( -10.4541, -4.09484, 10.1613, 0.96 ) }
    dend_46 { pt3dadd( -10.713, -4.14322, 10.7065, 0.29 ) }
    dend_46 { pt3dadd( -11.0629, -4.20952, 11.6689, 0.29 ) }
    dend_46 { pt3dadd( -11.2259, -4.27077, 12.2167, 0.29 ) }
    dend_46 { pt3dadd( -11.5074, -4.4391, 13.1764, 0.29 ) }
    dend_46 { pt3dadd( -11.8221, -4.63233, 14.1892, 0.29 ) }
    dend_46 { pt3dadd( -12.0949, -4.78845, 14.9891, 0.29 ) }
    dend_46 { pt3dadd( -12.3842, -4.95608, 15.6757, 0.29 ) }
    dend_46 { pt3dadd( -12.6862, -5.13352, 16.2629, 0.29 ) }
    dend_46 { pt3dadd( -13.0494, -5.35069, 16.917, 0.52 ) }
    dend_46 { pt3dadd( -13.5997, -5.63958, 17.829, 0.52 ) }
    dend_46 { pt3dadd( -14.1506, -5.83186, 18.7075, 0.52 ) }
    dend_46 { pt3dadd( -14.6592, -5.91426, 19.5243, 0.66 ) }
    dend_46 { pt3dadd( -15.1148, -5.91009, 20.2701, 0.29 ) }
    dend_46 { pt3dadd( -15.3803, -5.87915, 20.7626, 0.29 ) }
    dend_46 { pt3dadd( -15.5841, -5.84958, 21.2082, 0.29 ) }
    dend_46 { pt3dadd( -15.7223, -5.87542, 21.6089, 0.29 ) }
    dend_46 { pt3dadd( -15.7801, -5.94108, 21.9553, 0.29 ) }
    dend_46 { pt3dadd( -15.7936, -6.07149, 22.3848, 0.29 ) }
    dend_46 { pt3dadd( -15.7942, -6.43863, 23.3365, 0.29 ) }
    dend_46 { pt3dadd( -15.8204, -6.58321, 23.6952, 0.29 ) }
    dend_46 { pt3dadd( -15.9908, -6.85535, 24.5124, 0.29 ) }
    dend_46 { pt3dadd( -16.1902, -6.92681, 25.0749, 0.29 ) }
    dend_46 { pt3dadd( -16.4635, -6.90639, 25.6574, 0.29 ) }
    dend_46 { pt3dadd( -16.7244, -6.84137, 26.1109, 0.66 ) }
    dend_46 { pt3dadd( -17.1774, -6.69513, 26.7991, 0.74 ) }
    dend_46 { pt3dadd( -17.8916, -6.45478, 27.7848, 0.37 ) }
    dend_46 { pt3dadd( -18.9405, -6.03489, 29.1538, 0.22 ) }
    dend_46 { pt3dadd( -19.5293, -5.75241, 29.9232, 0.29 ) }
    dend_46 { pt3dadd( -19.9596, -5.52292, 30.5102, 0.44 ) }
    dend_46 { pt3dadd( -20.4833, -5.2383, 31.2618, 0.37 ) }
    dend_46 { pt3dadd( -20.906, -5.01293, 31.8832, 0.88 ) }
    dend_46 { pt3dadd( -21.5137, -4.69741, 32.7643, 0.37 ) }
    dend_46 { pt3dadd( -22.1733, -4.32799, 33.7224, 0.22 ) }
    dend_46 { pt3dadd( -22.6205, -4.01617, 34.4745, 0.22 ) }
    dend_46 { pt3dadd( -22.9551, -3.71322, 35.1704, 0.22 ) }
    dend_46 { pt3dadd( -23.1915, -3.43163, 35.8082, 0.59 ) }
    dend_46 { pt3dadd( -23.407, -3.12262, 36.5343, 0.74 ) }
    dend_46 { pt3dadd( -23.7393, -2.65913, 37.6921, 0.22 ) }
    dend_46 { pt3dadd( -24.1116, -2.14594, 38.9943, 0.22 ) }
    dend_46 { pt3dadd( -24.2971, -1.84823, 39.689, 0.44 ) }
    dend_46 { pt3dadd( -24.5333, -1.33046, 40.7975, 0.44 ) }
    dend_46 { pt3dadd( -24.6076, -1.05491, 41.3555, 0.66 ) }
    dend_46 { pt3dadd( -24.662, -0.631971, 42.2438, 0.29 ) }
    dend_46 { pt3dadd( -24.6674, -0.203053, 43.2, 0.29 ) }
    dend_46 { pt3dadd( -24.6533, 0.122246, 43.9689, 0.29 ) }
    dend_46 { pt3dadd( -24.6455, 0.392405, 44.6923, 0.29 ) }
    dend_46 { pt3dadd( -24.6125, 0.627507, 45.4562, 0.29 ) }
    dend_46 { pt3dadd( -24.5658, 0.79796, 46.1751, 0.29 ) }
    dend_46 { pt3dadd( -24.5396, 0.887926, 46.6255, 0.29 ) }
    dend_46 { pt3dadd( -24.543, 1.04224, 47.466, 0.29 ) }
    dend_46 { pt3dadd( -24.5931, 1.13809, 48.0272, 0.29 ) }
    dend_46 { pt3dadd( -24.7651, 1.34766, 49.1561, 0.29 ) }
    dend_46 { pt3dadd( -25.0225, 1.5902, 50.3664, 0.29 ) }
    dend_46 { pt3dadd( -25.3044, 1.81572, 51.4606, 0.29 ) }
    dend_46 { pt3dadd( -25.5091, 1.96777, 52.1715, 0.44 ) }
    dend_46 { pt3dadd( -25.8678, 2.231, 53.3499, 0.22 ) }
    dend_46 { pt3dadd( -26.183, 2.4677, 54.4095, 0.22 ) }
    dend_46 { pt3dadd( -26.4936, 2.69888, 55.4846, 0.29 ) }
    dend_46 { pt3dadd( -26.8223, 2.94584, 56.7142, 0.29 ) }
    dend_46 { pt3dadd( -27.0389, 3.11179, 57.6886, 0.29 ) }
    dend_46 { pt3dadd( -27.1415, 3.1984, 58.2993, 0.29 ) }
    dend_46 { pt3dadd( -27.255, 3.31598, 59.3271, 0.29 ) }
    dend_46 { pt3dadd( -27.2991, 3.38697, 60.0725, 0.29 ) }
    dend_46 { pt3dadd( -27.3013, 3.44639, 60.5924, 0.29 ) }
    dend_46 { pt3dadd( -27.2889, 3.53063, 61.2222, 0.29 ) }
    dend_46 { pt3dadd( -27.2816, 3.63453, 62.0398, 0.29 ) }
    dend_46 { pt3dadd( -27.261, 3.74676, 62.8241, 0.29 ) }
    dend_46 { pt3dadd( -27.2259, 3.91871, 63.7272, 0.29 ) }
    dend_46 { pt3dadd( -27.2104, 4.04566, 64.2531, 0.29 ) }
    dend_46 { pt3dadd( -27.1889, 4.40522, 65.6307, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_46 { pt3dadd( -27.2255, 4.73522, 66.9486, 0.29 ) }
    dend_46 { pt3dadd( -27.2767, 4.90954, 67.846, 0.29 ) }
    dend_46 { pt3dadd( -27.3282, 5.06346, 69.1231, 0.29 ) }
    dend_46 { pt3dadd( -27.3516, 5.09835, 69.7868, 0.29 ) }
    dend_46 { pt3dadd( -27.3892, 5.09123, 71.0548, 0.37 ) }
    dend_46 { pt3dadd( -27.4514, 4.95062, 73.2912, 0.22 ) }
    dend_46 { pt3dadd( -27.5154, 4.76267, 75.0483, 0.22 ) }
    dend_46 { pt3dadd( -27.6563, 4.38844, 77.7488, 0.22 ) }
    dend_46 { pt3dadd( -27.7223, 4.18079, 79.0469, 0.22 ) }
    dend_46 { pt3dadd( -27.7576, 4.00495, 80.1616, 0.22 ) }
    dend_46 { pt3dadd( -27.7615, 3.81764, 81.4593, 0.29 ) }
    dend_46 { pt3dadd( -27.7451, 3.70993, 82.2404, 0.29 ) }
    dend_46 { pt3dadd( -27.7596, 3.6233, 83.1128, 0.29 ) }
    dend_46 { pt3dadd( -27.8095, 3.59733, 83.672, 0.29 ) }
    dend_46 { pt3dadd( -27.9866, 3.6398, 85.168, 0.29 ) }
    dend_46 { pt3dadd( -28.1236, 3.72928, 86.1656, 0.29 ) }
    dend_46 { pt3dadd( -28.199, 3.80398, 86.7456, 0.29 ) }
    dend_46 { pt3dadd( -28.3194, 3.97052, 87.8285, 0.29 ) }
    dend_46 { pt3dadd( -28.4223, 4.15547, 88.9545, 0.29 ) }
    dend_46 { pt3dadd( -28.5016, 4.36091, 90.2237, 0.29 ) }
    dend_46 { pt3dadd( -28.534, 4.48999, 90.9428, 0.29 ) }
    dend_46 { pt3dadd( -28.5609, 4.80649, 92.6683, 0.29 ) }
    dend_46 { pt3dadd( -28.5175, 5.13378, 94.4832, 0.29 ) }
    dend_46 { pt3dadd( -28.4446, 5.32702, 95.7047, 0.29 ) }
    dend_46 { pt3dadd( -28.1005, 5.85645, 99.7446, 0.29 ) }
    dend_46 { pt3dadd( -28.0568, 5.90253, 100.189, 0.29 ) }
    dend_46 { pt3dadd( -27.9054, 6.04755, 101.884, 0.29 ) }
    dend_46 { pt3dadd( -27.8568, 6.09742, 102.547, 0.29 ) }
    dend_46 { pt3dadd( -27.8119, 6.17755, 103.702, 0.29 ) }
    dend_46 { pt3dadd( -27.828, 6.31394, 105.449, 0.29 ) }
    dend_46 { pt3dadd( -27.9429, 6.45189, 107.424, 0.29 ) }
    dend_46 { pt3dadd( -28.0791, 6.5401, 108.761, 0.29 ) }
    dend_46 { pt3dadd( -28.309, 6.66423, 110.327, 0.29 ) }
    dend_46 { pt3dadd( -28.7226, 6.88428, 112.625, 0.29 ) }
    dend_46 { pt3dadd( -29.107, 7.10409, 114.52, 0.29 ) }
    dend_46 { pt3dadd( -29.3741, 7.26633, 115.769, 0.29 ) }
    dend_46 { pt3dadd( -29.6564, 7.45232, 117.054, 0.29 ) }
    dend_46 { pt3dadd( -29.8659, 7.60676, 118.076, 0.15 ) }
    dend_46 { pt3dadd( -30.2233, 7.8872, 119.986, 0.15 ) }
    dend_46 { pt3dadd( -30.3036, 7.95985, 120.49, 0.37 ) }
    dend_46 { pt3dadd( -30.5527, 8.24278, 122.374, 0.37 ) }
    dend_46 { pt3dadd( -30.5967, 8.32279, 122.891, 0.37 ) }
    dend_46 { pt3dadd( -30.6278, 8.43395, 123.677, 0.37 ) }
    dend_46 { pt3dadd( -30.6052, 8.56243, 124.67, 0.37 ) }
    dend_46 { pt3dadd( -30.5413, 8.66211, 125.48, 0.37 ) }
    dend_46 { pt3dadd( -30.5061, 8.70672, 125.875, 0.37 ) }
    dend_46 { pt3dadd( -30.2802, 8.94919, 128.109, 0.37 ) }
    dend_46 { pt3dadd( -30.1923, 9.03828, 128.949, 0.37 ) }
    dend_46 { pt3dadd( -30.0467, 9.25223, 130.475, 0.22 ) }
    dend_46 { pt3dadd( -29.85, 9.6046, 132.297, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 50/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 8.4102, -1.61143, 1.46, 1.18 ) }
    dend_39 { pt3dadd( 8.4102, -1.61143, 1.46, 1.18 ) }
    dend_39 { pt3dadd( 9.12734, -2.07348, 1.87957, 0.66 ) }
    dend_39 { pt3dadd( 10.0274, -2.65337, 2.40614, 0.59 ) }
    dend_39 { pt3dadd( 11.1933, -3.40457, 3.08826, 0.66 ) }
    dend_39 { pt3dadd( 11.7224, -3.74545, 3.3978, 0.66 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 56/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -2.1698, -3.64843, 10.31, 1.62 ) }
    dend_36 { pt3dadd( -2.1698, -3.64843, 10.31, 1.62 ) }
    dend_36 { pt3dadd( -2.41606, -4.78839, 10.6828, 1.03 ) }
    dend_36 { pt3dadd( -2.74251, -6.55845, 11.2368, 0.44 ) }
    dend_36 { pt3dadd( -2.8823, -7.24935, 11.4366, 0.44 ) }
    dend_36 { pt3dadd( -3.18445, -8.31334, 11.7781, 0.59 ) }
    dend_36 { pt3dadd( -3.35135, -8.8112, 11.9695, 0.59 ) }
    dend_36 { pt3dadd( -3.76035, -9.8719, 12.4408, 0.59 ) }
    dend_36 { pt3dadd( -3.92348, -10.2796, 12.6521, 0.59 ) }
    dend_36 { pt3dadd( -4.33736, -11.3275, 13.2626, 0.52 ) }
    dend_36 { pt3dadd( -4.8814, -12.7294, 14.1192, 0.37 ) }
    dend_36 { pt3dadd( -5.22764, -13.6505, 14.6845, 0.37 ) }
    dend_36 { pt3dadd( -5.41629, -14.2157, 15.0382, 0.88 ) }
    dend_36 { pt3dadd( -5.77233, -15.5047, 15.8952, 0.44 ) }
    dend_36 { pt3dadd( -5.89216, -16.1205, 16.3123, 0.44 ) }
    dend_36 { pt3dadd( -5.98139, -16.8523, 16.8079, 0.81 ) }
    dend_36 { pt3dadd( -6.08166, -17.9016, 17.4581, 0.59 ) }
    dend_36 { pt3dadd( -6.20321, -18.9619, 18.1351, 0.44 ) }
    dend_36 { pt3dadd( -6.32224, -19.974, 18.8029, 0.44 ) }
    dend_36 { pt3dadd( -6.44535, -21.0669, 19.5327, 0.66 ) }
    dend_36 { pt3dadd( -6.55628, -22.1341, 20.263, 1.03 ) }
    dend_36 { pt3dadd( -6.66818, -23.2052, 21.0193, 1.03 ) }
    dend_36 { pt3dadd( -6.82748, -24.6267, 22.019, 0.52 ) }
    dend_36 { pt3dadd( -6.98763, -25.968, 22.9083, 0.52 ) }
    dend_36 { pt3dadd( -7.17433, -27.6076, 23.9153, 0.52 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 81/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 4.5002, 3.89058, 1.07, 0.96 ) }
    dend_35 { pt3dadd( 4.5002, 3.89058, 1.07, 0.96 ) }
    dend_35 { pt3dadd( 4.67677, 4.75177, 1.10648, 0.52 ) }
    dend_35 { pt3dadd( 4.85142, 5.55707, 1.11665, 0.15 ) }
    dend_35 { pt3dadd( 4.98812, 6.30518, 1.09715, 0.15 ) }
    dend_35 { pt3dadd( 5.15852, 7.24905, 1.06247, 0.22 ) }
    dend_35 { pt3dadd( 5.29751, 7.97221, 1.03317, 0.22 ) }
    dend_35 { pt3dadd( 5.42779, 8.59653, 0.992148, 0.22 ) }
    dend_35 { pt3dadd( 5.66003, 9.73044, 0.903004, 0.22 ) }
    dend_35 { pt3dadd( 5.87553, 10.7417, 0.820263, 0.22 ) }
    dend_35 { pt3dadd( 6.0869, 11.7493, 0.761327, 0.29 ) }
    dend_35 { pt3dadd( 6.17164, 12.2155, 0.729921, 0.22 ) }
    dend_35 { pt3dadd( 6.26368, 12.8964, 0.678426, 0.22 ) }
    dend_35 { pt3dadd( 6.35129, 13.6903, 0.628271, 0.15 ) }
    dend_35 { pt3dadd( 6.484, 14.6935, 0.585962, 0.22 ) }
    dend_35 { pt3dadd( 6.61991, 15.5801, 0.545671, 0.29 ) }
    dend_35 { pt3dadd( 6.75697, 16.6171, 0.469059, 0.22 ) }
    dend_35 { pt3dadd( 6.8404, 17.497, 0.376692, 0.22 ) }
    dend_35 { pt3dadd( 6.90379, 18.5214, 0.255011, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_35 { pt3dadd( 6.97775, 19.7607, 0.0820978, 0.29 ) }
    dend_35 { pt3dadd( 7.02328, 20.5339, -0.0204416, 0.15 ) }
    dend_35 { pt3dadd( 7.09023, 21.5719, -0.154234, 0.22 ) }
    dend_35 { pt3dadd( 7.17497, 22.6441, -0.270353, 0.15 ) }
    dend_35 { pt3dadd( 7.2565, 23.637, -0.359926, 0.22 ) }
    dend_35 { pt3dadd( 7.31905, 24.6087, -0.433474, 0.15 ) }
    dend_35 { pt3dadd( 7.34979, 25.3108, -0.478216, 0.44 ) }
    dend_35 { pt3dadd( 7.37507, 25.7556, -0.490608, 0.44 ) }
    dend_35 { pt3dadd( 7.43368, 26.5228, -0.480447, 0.15 ) }
    dend_35 { pt3dadd( 7.53228, 27.6205, -0.427298, 0.15 ) }
    dend_35 { pt3dadd( 7.59451, 28.4345, -0.382523, 0.29 ) }
    dend_35 { pt3dadd( 7.65206, 29.0785, -0.313914, 0.29 ) }
    dend_35 { pt3dadd( 7.72997, 29.7668, -0.203043, 0.52 ) }
    dend_35 { pt3dadd( 7.88146, 30.7787, 0.0221226, 0.15 ) }
    dend_35 { pt3dadd( 8.11153, 31.9364, 0.370037, 0.15 ) }
    dend_35 { pt3dadd( 8.35917, 32.9099, 0.723531, 0.15 ) }
    dend_35 { pt3dadd( 8.76642, 34.2034, 1.2767, 0.15 ) }
    dend_35 { pt3dadd( 8.95675, 34.7008, 1.528, 0.15 ) }
    dend_35 { pt3dadd( 9.2711, 35.3487, 1.90718, 0.22 ) }
    dend_35 { pt3dadd( 9.73912, 36.0797, 2.41237, 0.22 ) }
    dend_35 { pt3dadd( 10.1259, 36.5502, 2.80798, 0.44 ) }
    dend_35 { pt3dadd( 10.4907, 36.9077, 3.17757, 0.44 ) }
    dend_35 { pt3dadd( 10.847, 37.207, 3.54098, 0.44 ) }
    dend_35 { pt3dadd( 11.3245, 37.5582, 4.05901, 0.22 ) }
    dend_35 { pt3dadd( 11.8703, 37.9202, 4.72934, 0.07 ) }
    dend_35 { pt3dadd( 12.142, 38.1095, 5.12597, 0.07 ) }
    dend_35 { pt3dadd( 12.4503, 38.3539, 5.68607, 0.15 ) }
    dend_35 { pt3dadd( 12.7364, 38.6108, 6.29652, 0.15 ) }
    dend_35 { pt3dadd( 12.9573, 38.8653, 6.87079, 0.15 ) }
    dend_35 { pt3dadd( 13.1037, 39.077, 7.33666, 0.22 ) }
    dend_35 { pt3dadd( 13.2826, 39.3585, 7.95385, 0.37 ) }
    dend_35 { pt3dadd( 13.4929, 39.6634, 8.58913, 0.07 ) }
    dend_35 { pt3dadd( 13.7652, 40.0315, 9.33116, 0.07 ) }
    dend_35 { pt3dadd( 13.9601, 40.2914, 9.80761, 0.22 ) }
    dend_35 { pt3dadd( 14.2517, 40.663, 10.4274, 0.22 ) }
    dend_35 { pt3dadd( 14.5783, 41.0694, 11.0624, 0.22 ) }
    dend_35 { pt3dadd( 14.9322, 41.5261, 11.7121, 0.29 ) }
    dend_35 { pt3dadd( 15.1864, 41.911, 12.1865, 0.29 ) }
    dend_35 { pt3dadd( 15.6174, 42.7018, 13.0202, 0.15 ) }
    dend_35 { pt3dadd( 15.9187, 43.336, 13.5868, 0.15 ) }
    dend_35 { pt3dadd( 16.1426, 43.9205, 13.9754, 0.15 ) }
    dend_35 { pt3dadd( 16.285, 44.4042, 14.2133, 0.22 ) }
    dend_35 { pt3dadd( 16.4715, 45.2694, 14.5094, 0.59 ) }
    dend_35 { pt3dadd( 16.6678, 46.4536, 14.8177, 0.22 ) }
    dend_35 { pt3dadd( 16.782, 47.3451, 14.9785, 0.07 ) }
    dend_35 { pt3dadd( 16.9298, 48.5991, 15.1351, 0.15 ) }
    dend_35 { pt3dadd( 17.1014, 49.7784, 15.2494, 0.15 ) }
    dend_35 { pt3dadd( 17.337, 51.1262, 15.3489, 0.15 ) }
    dend_35 { pt3dadd( 17.5716, 52.2576, 15.3956, 0.22 ) }
    dend_35 { pt3dadd( 17.7834, 53.1611, 15.4096, 0.37 ) }
    dend_35 { pt3dadd( 18.0133, 53.9778, 15.4218, 0.22 ) }
    dend_35 { pt3dadd( 18.4522, 55.2078, 15.4606, 0.15 ) }
    dend_35 { pt3dadd( 18.8443, 56.1073, 15.4961, 0.15 ) }
    dend_35 { pt3dadd( 19.1739, 56.7686, 15.5356, 0.22 ) }
    dend_35 { pt3dadd( 19.5809, 57.573, 15.5971, 0.15 ) }
    dend_35 { pt3dadd( 20.0432, 58.5214, 15.7239, 0.22 ) }
    dend_35 { pt3dadd( 20.6045, 59.8057, 15.9692, 0.07 ) }
    dend_35 { pt3dadd( 20.8964, 60.5441, 16.1483, 0.07 ) }
    dend_35 { pt3dadd( 21.1226, 61.1361, 16.3281, 0.44 ) }
    dend_35 { pt3dadd( 21.4364, 61.9932, 16.6246, 0.22 ) }
    dend_35 { pt3dadd( 21.7126, 62.8049, 16.945, 0.15 ) }
    dend_35 { pt3dadd( 21.9901, 63.7742, 17.3455, 0.15 ) }
    dend_35 { pt3dadd( 22.1042, 64.2567, 17.5397, 0.15 ) }
    dend_35 { pt3dadd( 22.2274, 64.7649, 17.7363, 0.22 ) }
    dend_35 { pt3dadd( 22.4329, 65.5823, 18.0524, 0.15 ) }
    dend_35 { pt3dadd( 22.669, 66.5163, 18.4055, 0.29 ) }
    dend_35 { pt3dadd( 22.7957, 67.0674, 18.6026, 0.29 ) }
    dend_35 { pt3dadd( 22.9773, 67.9687, 18.8901, 0.29 ) }
    dend_35 { pt3dadd( 23.1927, 69.1987, 19.2531, 0.15 ) }
    dend_35 { pt3dadd( 23.285, 69.7518, 19.4005, 0.52 ) }
    dend_35 { pt3dadd( 23.3855, 70.329, 19.5485, 0.52 ) }
    dend_35 { pt3dadd( 23.5647, 71.1999, 19.7531, 0.22 ) }
    dend_35 { pt3dadd( 23.7692, 71.9766, 19.9324, 0.37 ) }
    dend_35 { pt3dadd( 24.0174, 72.7924, 20.1122, 0.22 ) }
    dend_35 { pt3dadd( 24.3509, 73.8057, 20.3251, 0.07 ) }
    dend_35 { pt3dadd( 24.6211, 74.6016, 20.4803, 0.07 ) }
    dend_35 { pt3dadd( 24.8783, 75.3124, 20.613, 0.59 ) }
    dend_35 { pt3dadd( 25.3147, 76.4296, 20.831, 0.07 ) }
    dend_35 { pt3dadd( 25.7978, 77.6551, 21.0882, 0.15 ) }
    dend_35 { pt3dadd( 25.8971, 77.9275, 21.15, 0.15 ) }
    dend_35 { pt3dadd( 26.3534, 79.3782, 21.5019, 0.22 ) }
    dend_35 { pt3dadd( 26.6128, 80.2708, 21.7575, 0.07 ) }
    dend_35 { pt3dadd( 26.8093, 81.0142, 22.0215, 0.07 ) }
    dend_35 { pt3dadd( 26.9019, 81.4192, 22.1939, 0.37 ) }
    dend_35 { pt3dadd( 27.0469, 82.1208, 22.5174, 0.37 ) }
    dend_35 { pt3dadd( 27.2252, 83.0321, 22.9553, 0.07 ) }
    dend_35 { pt3dadd( 27.3818, 83.9135, 23.3899, 0.07 ) }
    dend_35 { pt3dadd( 27.4957, 84.7764, 23.8254, 0.29 ) }
    dend_35 { pt3dadd( 27.5832, 85.7698, 24.3088, 0.22 ) }
    dend_35 { pt3dadd( 27.6284, 86.4713, 24.6511, 0.22 ) }
    dend_35 { pt3dadd( 27.6656, 87.5037, 25.1457, 0.22 ) }
    dend_35 { pt3dadd( 27.6711, 88.2435, 25.4935, 0.59 ) }
    dend_35 { pt3dadd( 27.6255, 89.306, 26.0095, 0.15 ) }
    dend_35 { pt3dadd( 27.5168, 90.5221, 26.6669, 0.22 ) }
    dend_35 { pt3dadd( 27.4296, 91.1375, 27.0282, 0.22 ) }
    dend_35 { pt3dadd( 27.3271, 91.6178, 27.3254, 0.07 ) }
    dend_35 { pt3dadd( 27.1249, 92.3477, 27.7717, 0.22 ) }
    dend_35 { pt3dadd( 26.8111, 93.4779, 28.4741, 0.15 ) }
    dend_35 { pt3dadd( 26.7285, 93.8259, 28.6863, 0.29 ) }
    dend_35 { pt3dadd( 26.6612, 94.1722, 28.9031, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_35 { pt3dadd( 26.5363, 95.0063, 29.403, 0.07 ) }
    dend_35 { pt3dadd( 26.4806, 95.5839, 29.7356, 0.22 ) }
    dend_35 { pt3dadd( 26.4571, 96.2671, 30.0955, 0.22 ) }
    dend_35 { pt3dadd( 26.4733, 97.0374, 30.4558, 0.22 ) }
    dend_35 { pt3dadd( 26.5284, 98.0441, 30.8945, 0.15 ) }
    dend_35 { pt3dadd( 26.5934, 98.8102, 31.202, 0.15 ) }
    dend_35 { pt3dadd( 26.7482, 100.267, 31.8315, 0.15 ) }
    dend_35 { pt3dadd( 26.8544, 101.378, 32.3689, 0.22 ) }
    dend_35 { pt3dadd( 26.9007, 102.043, 32.7136, 0.15 ) }
    dend_35 { pt3dadd( 26.9296, 102.513, 32.9779, 0.37 ) }
    dend_35 { pt3dadd( 26.9809, 103.274, 33.46, 0.59 ) }
    dend_35 { pt3dadd( 27.0255, 104.505, 34.3417, 0.07 ) }
    dend_35 { pt3dadd( 27.0078, 105.168, 34.862, 0.07 ) }
    dend_35 { pt3dadd( 26.9583, 105.787, 35.3583, 0.07 ) }
    dend_35 { pt3dadd( 26.8992, 106.371, 35.815, 0.15 ) }
    dend_35 { pt3dadd( 26.7995, 107.239, 36.4695, 0.15 ) }
    dend_35 { pt3dadd( 26.7255, 107.778, 36.8476, 0.15 ) }
    dend_35 { pt3dadd( 26.629, 108.585, 37.332, 0.15 ) }
    dend_35 { pt3dadd( 26.5295, 109.849, 38.0798, 0.07 ) }
    dend_35 { pt3dadd( 26.5244, 110.262, 38.3232, 0.22 ) }
    dend_35 { pt3dadd( 26.536, 110.51, 38.462, 0.22 ) }
    dend_35 { pt3dadd( 26.6023, 111.26, 38.8279, 0.07 ) }
    dend_35 { pt3dadd( 26.6976, 111.973, 39.1339, 0.15 ) }
    dend_35 { pt3dadd( 26.8861, 113.031, 39.4948, 0.07 ) }
    dend_35 { pt3dadd( 27.1771, 114.374, 39.8421, 0.07 ) }
    dend_35 { pt3dadd( 27.4804, 115.652, 40.0987, 0.07 ) }
    dend_35 { pt3dadd( 27.7204, 116.48, 40.2299, 0.07 ) }
    dend_35 { pt3dadd( 28.0574, 117.459, 40.3414, 0.22 ) }
    dend_35 { pt3dadd( 28.3967, 118.355, 40.4327, 0.07 ) }
    dend_35 { pt3dadd( 28.616, 118.901, 40.489, 0.07 ) }
    dend_35 { pt3dadd( 28.842, 119.447, 40.571, 0.07 ) }
    dend_35 { pt3dadd( 29.2906, 120.492, 40.7899, 0.07 ) }
    dend_35 { pt3dadd( 29.6989, 121.438, 41.0645, 0.07 ) }
    dend_35 { pt3dadd( 29.9974, 122.174, 41.3193, 0.07 ) }
    dend_35 { pt3dadd( 30.2283, 122.866, 41.5914, 0.07 ) }
    dend_35 { pt3dadd( 30.3718, 123.422, 41.8156, 0.29 ) }
    dend_35 { pt3dadd( 30.4869, 124.05, 42.0647, 0.15 ) }
    dend_35 { pt3dadd( 30.5812, 124.908, 42.388, 0.15 ) }
    dend_35 { pt3dadd( 30.6181, 125.399, 42.5534, 0.15 ) }
    dend_35 { pt3dadd( 30.6553, 126.285, 42.8184, 0.22 ) }
    dend_35 { pt3dadd( 30.689, 127.761, 43.2214, 0.07 ) }
    dend_35 { pt3dadd( 30.6792, 128.71, 43.4657, 0.22 ) }
    dend_35 { pt3dadd( 30.5921, 130.01, 43.7917, 0.07 ) }
    dend_35 { pt3dadd( 30.4801, 130.935, 44.0161, 0.07 ) }
    dend_35 { pt3dadd( 30.3564, 131.803, 44.2175, 0.29 ) }
    dend_35 { pt3dadd( 30.1559, 133.234, 44.5583, 0.07 ) }
    dend_35 { pt3dadd( 30.0081, 134.31, 44.8292, 0.07 ) }
    dend_35 { pt3dadd( 29.8924, 135.256, 45.111, 0.22 ) }
    dend_35 { pt3dadd( 29.7955, 136.042, 45.3726, 0.07 ) }
    dend_35 { pt3dadd( 29.752, 136.481, 45.5423, 0.07 ) }
    dend_35 { pt3dadd( 29.6866, 137.52, 45.9763, 0.15 ) }
    dend_35 { pt3dadd( 29.6769, 138.106, 46.2652, 0.07 ) }
    dend_35 { pt3dadd( 29.7723, 138.768, 46.6412, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 53/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.1902, -4.17343, -1.0, 1.33 ) }
    dend_16 { pt3dadd( 7.1902, -4.17343, -1.0, 1.33 ) }
    dend_16 { pt3dadd( 7.80281, -5.07117, -1.39626, 0.66 ) }
    dend_16 { pt3dadd( 8.29456, -5.8299, -1.70363, 0.59 ) }
    dend_16 { pt3dadd( 8.71393, -6.53097, -1.97297, 0.59 ) }
    dend_16 { pt3dadd( 9.17569, -7.33128, -2.25764, 0.81 ) }
    dend_16 { pt3dadd( 9.71217, -8.2455, -2.5609, 0.74 ) }
    dend_16 { pt3dadd( 10.3394, -9.2967, -2.88832, 0.74 ) }
    dend_16 { pt3dadd( 10.7921, -10.0445, -3.1067, 0.66 ) }
    dend_16 { pt3dadd( 11.3879, -11.0402, -3.36742, 0.66 ) }
    dend_16 { pt3dadd( 11.8825, -11.8403, -3.56158, 0.52 ) }
    dend_16 { pt3dadd( 12.3723, -12.5758, -3.72696, 0.96 ) }
    dend_16 { pt3dadd( 12.8724, -13.2802, -3.86045, 1.11 ) }
    dend_16 { pt3dadd( 13.6153, -14.2353, -4.0292, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 7.8102, 0.310071, 1.64, 1.25 ) }
    dend_13 { pt3dadd( 7.8102, 0.310071, 1.64, 1.25 ) }
    dend_13 { pt3dadd( 9.03484, 2.13721, 1.19834, 0.59 ) }
    dend_13 { pt3dadd( 9.83719, 3.3343, 0.908975, 0.52 ) }
    dend_13 { pt3dadd( 10.2555, 3.95841, 0.758114, 0.52 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 72/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.7098, -0.498429, -8.54, 0.37 ) }
    dend_12 { pt3dadd( -4.93183, -0.72447, -9.09214, 0.37 ) }
    dend_12 { pt3dadd( -5.1543, -0.982905, -9.60326, 0.37 ) }
    dend_12 { pt3dadd( -5.44802, -1.29616, -10.1432, 0.37 ) }
    dend_12 { pt3dadd( -5.60798, -1.44704, -10.4027, 0.37 ) }
    dend_12 { pt3dadd( -5.79662, -1.60867, -10.7086, 0.37 ) }
    dend_12 { pt3dadd( -6.02824, -1.78807, -11.0592, 0.22 ) }
    dend_12 { pt3dadd( -6.24199, -1.94145, -11.3384, 0.22 ) }
    dend_12 { pt3dadd( -6.57193, -2.19652, -11.747, 0.29 ) }
    dend_12 { pt3dadd( -6.82361, -2.418, -12.0631, 0.29 ) }
    dend_12 { pt3dadd( -7.20688, -2.77388, -12.597, 0.44 ) }
    dend_12 { pt3dadd( -7.3797, -2.92372, -12.8749, 0.44 ) }
    dend_12 { pt3dadd( -7.59647, -3.07594, -13.2678, 0.44 ) }
    dend_12 { pt3dadd( -7.77436, -3.18511, -13.595, 0.44 ) }
    dend_12 { pt3dadd( -7.90227, -3.22499, -13.7797, 0.44 ) }
    dend_12 { pt3dadd( -8.11916, -3.23027, -13.9979, 0.44 ) }
    dend_12 { pt3dadd( -8.36967, -3.1756, -14.2095, 0.44 ) }
    dend_12 { pt3dadd( -8.55627, -3.1064, -14.4024, 0.66 ) }
    dend_12 { pt3dadd( -8.79937, -2.95686, -14.6971, 0.66 ) }
    dend_12 { pt3dadd( -9.27069, -2.58329, -15.3093, 0.22 ) }
    dend_12 { pt3dadd( -9.48527, -2.39539, -15.6503, 0.22 ) }
    dend_12 { pt3dadd( -9.59827, -2.28794, -15.8815, 0.22 ) }
    dend_12 { pt3dadd( -9.79327, -2.07759, -16.3493, 0.22 ) }
    dend_12 { pt3dadd( -9.96667, -1.84773, -16.8303, 0.22 ) }
    dend_12 { pt3dadd( -10.0972, -1.63731, -17.2497, 0.22 ) }
    dend_12 { pt3dadd( -10.2518, -1.36314, -17.8006, 0.22 ) }
    dend_12 { pt3dadd( -10.3939, -1.13992, -18.1874, 0.22 ) }
    dend_12 { pt3dadd( -10.6264, -0.839604, -18.6992, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( -10.7837, -0.686548, -18.9721, 0.37 ) }
    dend_12 { pt3dadd( -11.0555, -0.466206, -19.3813, 0.74 ) }
    dend_12 { pt3dadd( -11.3277, -0.244314, -19.7669, 0.74 ) }
    dend_12 { pt3dadd( -11.7024, 0.078863, -20.2657, 0.22 ) }
    dend_12 { pt3dadd( -11.9659, 0.31577, -20.6236, 0.22 ) }
    dend_12 { pt3dadd( -12.3681, 0.682066, -21.1986, 0.15 ) }
    dend_12 { pt3dadd( -12.6103, 0.901496, -21.5466, 0.15 ) }
    dend_12 { pt3dadd( -12.6838, 0.968526, -21.6499, 0.15 ) }
    dend_12 { pt3dadd( -12.89, 1.1664, -21.9398, 0.15 ) }
    dend_12 { pt3dadd( -12.9899, 1.28305, -22.1033, 0.15 ) }
    dend_12 { pt3dadd( -13.0829, 1.43086, -22.2841, 0.15 ) }
    dend_12 { pt3dadd( -13.2402, 1.7187, -22.6488, 0.15 ) }
    dend_12 { pt3dadd( -13.3877, 1.9427, -22.9951, 0.15 ) }
    dend_12 { pt3dadd( -13.6023, 2.21335, -23.497, 0.07 ) }
    dend_12 { pt3dadd( -13.7111, 2.35816, -23.7939, 0.07 ) }
    dend_12 { pt3dadd( -13.8296, 2.52824, -24.1614, 0.29 ) }
    dend_12 { pt3dadd( -13.9656, 2.75487, -24.654, 0.29 ) }
    dend_12 { pt3dadd( -14.0849, 2.99604, -25.1604, 0.29 ) }
    dend_12 { pt3dadd( -14.2196, 3.33235, -25.813, 0.29 ) }
    dend_12 { pt3dadd( -14.3142, 3.68598, -26.4359, 0.07 ) }
    dend_12 { pt3dadd( -14.3538, 3.94956, -26.8357, 0.07 ) }
    dend_12 { pt3dadd( -14.3637, 4.21679, -27.2039, 0.07 ) }
    dend_12 { pt3dadd( -14.3565, 4.40952, -27.4315, 0.07 ) }
    dend_12 { pt3dadd( -14.3328, 4.77682, -27.8373, 0.96 ) }
    dend_12 { pt3dadd( -14.3141, 5.20379, -28.2895, 0.37 ) }
    dend_12 { pt3dadd( -14.3073, 5.66738, -28.7691, 0.15 ) }
    dend_12 { pt3dadd( -14.2714, 6.02117, -29.1375, 0.15 ) }
    dend_12 { pt3dadd( -14.2316, 6.22049, -29.3437, 0.15 ) }
    dend_12 { pt3dadd( -14.0978, 6.60773, -29.7255, 0.22 ) }
    dend_12 { pt3dadd( -13.9735, 6.87908, -29.9889, 0.07 ) }
    dend_12 { pt3dadd( -13.8171, 7.20405, -30.2956, 0.07 ) }
    dend_12 { pt3dadd( -13.5356, 7.73549, -30.7683, 0.07 ) }
    dend_12 { pt3dadd( -13.3341, 8.07551, -31.0458, 0.66 ) }
    dend_12 { pt3dadd( -12.9798, 8.59002, -31.4561, 0.15 ) }
    dend_12 { pt3dadd( -12.7208, 8.91861, -31.6931, 0.15 ) }
    dend_12 { pt3dadd( -12.6155, 9.03433, -31.7785, 0.15 ) }
    dend_12 { pt3dadd( -13.6639, 11.5645, -38.0427, 0.15 ) }
    dend_12 { pt3dadd( -14.3316, 14.965, -43.9853, 0.15 ) }
    dend_12 { pt3dadd( -15.0227, 17.9642, -50.117, 0.15 ) }
    dend_12 { pt3dadd( -14.8325, 20.681, -56.4146, 0.15 ) }
    dend_12 { pt3dadd( -15.5138, 23.5593, -62.5994, 0.15 ) }
    dend_12 { pt3dadd( -15.6257, 25.851, -69.0427, 0.15 ) }
    dend_12 { pt3dadd( -16.4988, 27.8712, -75.4985, 0.15 ) }
    dend_12 { pt3dadd( -18.408, 29.8555, -81.7246, 0.15 ) }
    dend_12 { pt3dadd( -20.3938, 31.7299, -87.9565, 0.15 ) }
    dend_12 { pt3dadd( -23.3994, 34.153, -93.564, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 46/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.3698, 1.10807, -6.25, 0.66 ) }
    dend_3 { pt3dadd( -9.24535, 1.27317, -6.58511, 0.59 ) }
    dend_3 { pt3dadd( -10.0127, 1.41786, -6.87882, 0.59 ) }
    dend_3 { pt3dadd( -10.5051, 1.5107, -7.06726, 0.66 ) }
    dend_3 { pt3dadd( -11.2217, 1.64583, -7.34155, 0.66 ) }
    dend_3 { pt3dadd( -11.9552, 1.78412, -7.62228, 0.88 ) }
    dend_3 { pt3dadd( -12.7093, 1.92633, -7.91092, 1.18 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 53/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.7598, 6.52607, -2.29, 0.96 ) }
    dend_0 { pt3dadd( -4.48005, 6.97485, -2.54032, 0.96 ) }
    dend_0 { pt3dadd( -3.9655, 7.80738, -3.05266, 0.59 ) }
    dend_0 { pt3dadd( -3.48532, 8.61642, -3.58347, 0.37 ) }
    dend_0 { pt3dadd( -3.04729, 9.43458, -4.11601, 0.59 ) }
    dend_0 { pt3dadd( -2.695, 10.1416, -4.56844, 0.88 ) }
    dend_0 { pt3dadd( -2.27775, 11.0026, -5.14124, 0.59 ) }
    dend_0 { pt3dadd( -1.89615, 11.8135, -5.69015, 0.44 ) }
    dend_0 { pt3dadd( -1.59945, 12.4471, -6.146, 0.52 ) }
    dend_0 { pt3dadd( -1.25124, 13.2918, -6.75376, 0.52 ) }
    dend_0 { pt3dadd( -0.97954, 14.0725, -7.29599, 0.37 ) }
    dend_0 { pt3dadd( -0.73465, 14.9249, -7.87733, 0.66 ) }
    dend_0 { pt3dadd( -0.54376, 15.7264, -8.40249, 0.96 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.70294, -3.02848, 0.0, 0.601357 ) }
    axon_0 { pt3dadd( 21.7399, -8.31649, 0.0, 0.601357 ) }
    axon_0 { pt3dadd( 35.7769, -13.6045, 0.0, 0.601357 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 69/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 11.7224, -3.74545, 3.3978, 0.15 ) }
    dend_45 { pt3dadd( 11.9873, -3.56136, 3.84026, 0.15 ) }
    dend_45 { pt3dadd( 12.1093, -3.48522, 4.0378, 0.29 ) }
    dend_45 { pt3dadd( 12.3188, -3.38253, 4.34952, 0.29 ) }
    dend_45 { pt3dadd( 12.547, -3.29319, 4.65401, 0.15 ) }
    dend_45 { pt3dadd( 12.7668, -3.23578, 4.91322, 0.22 ) }
    dend_45 { pt3dadd( 12.9018, -3.20557, 5.05761, 0.22 ) }
    dend_45 { pt3dadd( 13.0145, -3.18766, 5.16664, 0.29 ) }
    dend_45 { pt3dadd( 13.2121, -3.14988, 5.34949, 0.44 ) }
    dend_45 { pt3dadd( 13.3981, -3.10982, 5.51702, 0.22 ) }
    dend_45 { pt3dadd( 13.7288, -3.05659, 5.81439, 0.29 ) }
    dend_45 { pt3dadd( 13.9521, -3.02874, 6.01252, 0.22 ) }
    dend_45 { pt3dadd( 14.2931, -2.99903, 6.31049, 0.15 ) }
    dend_45 { pt3dadd( 14.6232, -2.98424, 6.59422, 0.15 ) }
    dend_45 { pt3dadd( 14.9656, -2.98198, 6.90042, 0.22 ) }
    dend_45 { pt3dadd( 15.1927, -2.99056, 7.11639, 0.22 ) }
    dend_45 { pt3dadd( 15.3748, -3.00381, 7.31617, 0.22 ) }
    dend_45 { pt3dadd( 15.5486, -3.01951, 7.55076, 0.22 ) }
    dend_45 { pt3dadd( 15.6664, -3.02852, 7.7623, 0.29 ) }
    dend_45 { pt3dadd( 15.8148, -3.03696, 8.16377, 0.66 ) }
    dend_45 { pt3dadd( 15.9218, -3.03738, 8.62441, 0.74 ) }
    dend_45 { pt3dadd( 15.9956, -3.02667, 9.12804, 0.66 ) }
    dend_45 { pt3dadd( 16.0447, -3.00641, 9.66339, 0.29 ) }
    dend_45 { pt3dadd( 16.0602, -2.98716, 10.055, 0.29 ) }
    dend_45 { pt3dadd( 16.0609, -2.96967, 10.3728, 0.29 ) }
    dend_45 { pt3dadd( 16.0519, -2.94598, 10.7155, 0.29 ) }
    dend_45 { pt3dadd( 16.0443, -2.914, 11.1286, 0.29 ) }
    dend_45 { pt3dadd( 16.0514, -2.89958, 11.3064, 0.29 ) }
    dend_45 { pt3dadd( 16.0913, -2.86849, 11.8007, 0.29 ) }
    dend_45 { pt3dadd( 16.1319, -2.84529, 12.1608, 0.29 ) }
    dend_45 { pt3dadd( 16.1521, -2.82492, 12.4142, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_45 { pt3dadd( 16.1569, -2.80149, 12.8152, 0.29 ) }
    dend_45 { pt3dadd( 16.1586, -2.80247, 12.9669, 0.29 ) }
    dend_45 { pt3dadd( 16.1771, -2.83285, 13.3636, 0.29 ) }
    dend_45 { pt3dadd( 16.1922, -2.85562, 13.5097, 0.29 ) }
    dend_45 { pt3dadd( 16.2271, -2.91396, 13.7768, 0.29 ) }
    dend_45 { pt3dadd( 16.2665, -2.99227, 14.0985, 0.29 ) }
    dend_45 { pt3dadd( 16.2961, -3.06845, 14.5788, 0.22 ) }
    dend_45 { pt3dadd( 16.3028, -3.09341, 15.0406, 0.22 ) }
    dend_45 { pt3dadd( 16.3013, -3.08625, 15.1748, 0.22 ) }
    dend_45 { pt3dadd( 16.2668, -3.0172, 15.6111, 0.22 ) }
    dend_45 { pt3dadd( 16.2411, -2.9776, 15.7625, 0.22 ) }
    dend_45 { pt3dadd( 16.094, -2.77522, 16.307, 0.15 ) }
    dend_45 { pt3dadd( 15.985, -2.61581, 16.6292, 0.15 ) }
    dend_45 { pt3dadd( 15.9186, -2.50738, 16.7984, 0.29 ) }
    dend_45 { pt3dadd( 15.7901, -2.27661, 17.1152, 0.59 ) }
    dend_45 { pt3dadd( 15.6719, -2.0437, 17.4192, 0.22 ) }
    dend_45 { pt3dadd( 15.5606, -1.8294, 17.7222, 0.22 ) }
    dend_45 { pt3dadd( 15.4419, -1.62077, 18.044, 0.22 ) }
    dend_45 { pt3dadd( 15.2395, -1.30134, 18.5924, 0.07 ) }
    dend_45 { pt3dadd( 15.1146, -1.11366, 18.9549, 0.37 ) }
    dend_45 { pt3dadd( 14.9716, -0.895876, 19.4264, 0.22 ) }
    dend_45 { pt3dadd( 14.8301, -0.689416, 19.9129, 0.22 ) }
    dend_45 { pt3dadd( 14.7698, -0.61376, 20.1157, 0.22 ) }
    dend_45 { pt3dadd( 14.6145, -0.439833, 20.6423, 0.22 ) }
    dend_45 { pt3dadd( 14.5777, -0.392319, 20.8043, 0.22 ) }
    dend_45 { pt3dadd( 14.5448, -0.323964, 21.0325, 0.22 ) }
    dend_45 { pt3dadd( 14.5379, -0.257418, 21.2304, 0.29 ) }
    dend_45 { pt3dadd( 14.5715, -0.107631, 21.6362, 0.29 ) }
    dend_45 { pt3dadd( 14.6174, -0.00721988, 21.8859, 0.22 ) }
    dend_45 { pt3dadd( 14.7217, 0.176191, 22.2849, 0.15 ) }
    dend_45 { pt3dadd( 14.8614, 0.412993, 22.7927, 0.15 ) }
    dend_45 { pt3dadd( 14.9198, 0.520365, 23.0169, 0.15 ) }
    dend_45 { pt3dadd( 14.9833, 0.637979, 23.266, 0.15 ) }
    dend_45 { pt3dadd( 15.0381, 0.760345, 23.5097, 0.22 ) }
    dend_45 { pt3dadd( 15.0771, 0.906936, 23.8175, 0.15 ) }
    dend_45 { pt3dadd( 15.0743, 1.02122, 24.0327, 0.15 ) }
    dend_45 { pt3dadd( 15.0301, 1.20305, 24.3646, 0.29 ) }
    dend_45 { pt3dadd( 14.9838, 1.36309, 24.6349, 0.29 ) }
    dend_45 { pt3dadd( 14.9411, 1.50579, 24.8759, 0.29 ) }
    dend_45 { pt3dadd( 14.8659, 1.72944, 25.2334, 0.29 ) }
    dend_45 { pt3dadd( 14.8067, 1.90817, 25.5082, 0.52 ) }
    dend_45 { pt3dadd( 14.7307, 2.16916, 25.8982, 0.52 ) }
    dend_45 { pt3dadd( 14.6644, 2.44715, 26.3037, 0.15 ) }
    dend_45 { pt3dadd( 14.5858, 2.81598, 26.8172, 0.15 ) }
    dend_45 { pt3dadd( 14.5183, 3.12108, 27.2322, 0.15 ) }
    dend_45 { pt3dadd( 14.4733, 3.28299, 27.4443, 0.22 ) }
    dend_45 { pt3dadd( 14.4008, 3.46903, 27.7139, 0.22 ) }
    dend_45 { pt3dadd( 14.3573, 3.55611, 27.8474, 0.22 ) }
    dend_45 { pt3dadd( 14.273, 3.69585, 28.0824, 0.44 ) }
    dend_45 { pt3dadd( 14.1766, 3.86871, 28.3796, 0.59 ) }
    dend_45 { pt3dadd( 14.096, 4.03926, 28.6934, 0.07 ) }
    dend_45 { pt3dadd( 14.0067, 4.24918, 29.091, 0.07 ) }
    dend_45 { pt3dadd( 13.9532, 4.37765, 29.3557, 0.07 ) }
    dend_45 { pt3dadd( 13.8908, 4.51787, 29.6593, 0.07 ) }
    dend_45 { pt3dadd( 13.8331, 4.66462, 29.9759, 0.07 ) }
    dend_45 { pt3dadd( 13.8146, 4.73539, 30.1215, 0.29 ) }
    dend_45 { pt3dadd( 13.7856, 4.94757, 30.5115, 0.29 ) }
    dend_45 { pt3dadd( 13.7702, 5.10135, 30.7523, 0.29 ) }
    dend_45 { pt3dadd( 13.7401, 5.3676, 31.1122, 0.22 ) }
    dend_45 { pt3dadd( 13.7045, 5.69342, 31.4928, 0.07 ) }
    dend_45 { pt3dadd( 13.6853, 5.89976, 31.7058, 0.07 ) }
    dend_45 { pt3dadd( 13.6728, 6.11712, 31.9063, 0.07 ) }
    dend_45 { pt3dadd( 13.6706, 6.32158, 32.0596, 0.22 ) }
    dend_45 { pt3dadd( 13.6748, 6.62678, 32.2771, 0.22 ) }
    dend_45 { pt3dadd( 13.6969, 7.0444, 32.5675, 0.07 ) }
    dend_45 { pt3dadd( 13.7093, 7.31039, 32.757, 0.29 ) }
    dend_45 { pt3dadd( 13.7117, 7.49729, 32.8891, 0.66 ) }
    dend_45 { pt3dadd( 13.7209, 8.01271, 33.2785, 0.22 ) }
    dend_45 { pt3dadd( 13.7355, 8.33822, 33.5353, 0.22 ) }
    dend_45 { pt3dadd( 13.7672, 8.74724, 33.8569, 0.29 ) }
    dend_45 { pt3dadd( 13.8005, 9.0948, 34.1331, 0.29 ) }
    dend_45 { pt3dadd( 13.8629, 9.63176, 34.5783, 0.15 ) }
    dend_45 { pt3dadd( 13.9242, 10.073, 34.9604, 0.15 ) }
    dend_45 { pt3dadd( 13.9614, 10.3066, 35.1527, 0.29 ) }
    dend_45 { pt3dadd( 14.0338, 10.7491, 35.4944, 0.52 ) }
    dend_45 { pt3dadd( 14.1267, 11.3554, 35.9362, 0.15 ) }
    dend_45 { pt3dadd( 14.1885, 11.7412, 36.211, 0.15 ) }
    dend_45 { pt3dadd( 14.2239, 11.9547, 36.3608, 0.15 ) }
    dend_45 { pt3dadd( 14.2985, 12.499, 36.7391, 0.15 ) }
    dend_45 { pt3dadd( 14.377, 13.198, 37.2315, 0.15 ) }
    dend_45 { pt3dadd( 14.4527, 13.9979, 37.7941, 0.15 ) }
    dend_45 { pt3dadd( 14.4913, 14.4481, 38.1024, 0.15 ) }
    dend_45 { pt3dadd( 14.5317, 14.8362, 38.3712, 0.15 ) }
    dend_45 { pt3dadd( 14.6021, 15.3313, 38.7453, 0.15 ) }
    dend_45 { pt3dadd( 14.6473, 15.5665, 38.9415, 0.15 ) }
    dend_45 { pt3dadd( 14.7134, 15.8107, 39.1399, 0.44 ) }
    dend_45 { pt3dadd( 14.7731, 15.9762, 39.2745, 0.44 ) }
    dend_45 { pt3dadd( 14.9611, 16.4543, 39.6489, 0.15 ) }
    dend_45 { pt3dadd( 15.147, 16.8912, 40.0044, 0.15 ) }
    dend_45 { pt3dadd( 15.2192, 17.0593, 40.1413, 0.15 ) }
    dend_45 { pt3dadd( 15.3507, 17.3925, 40.4192, 0.07 ) }
    dend_45 { pt3dadd( 15.4253, 17.6344, 40.6309, 0.22 ) }
    dend_45 { pt3dadd( 15.5335, 18.1437, 41.0854, 0.07 ) }
    dend_45 { pt3dadd( 15.5571, 18.4094, 41.3184, 0.29 ) }
    dend_45 { pt3dadd( 15.5597, 18.7175, 41.5819, 0.37 ) }
    dend_45 { pt3dadd( 15.5582, 19.0219, 41.8519, 0.15 ) }
    dend_45 { pt3dadd( 15.5632, 19.4064, 42.2174, 0.15 ) }
    dend_45 { pt3dadd( 15.5729, 19.5839, 42.3961, 0.15 ) }
    dend_45 { pt3dadd( 15.5966, 19.8572, 42.6804, 0.37 ) }
    dend_45 { pt3dadd( 15.6098, 19.9606, 42.7982, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_45 { pt3dadd( 15.6893, 20.3662, 43.3472, 0.15 ) }
    dend_45 { pt3dadd( 15.7756, 20.6523, 43.8087, 0.15 ) }
    dend_45 { pt3dadd( 15.8703, 20.8628, 44.2436, 0.66 ) }
    dend_45 { pt3dadd( 15.9827, 21.0632, 44.7639, 0.22 ) }
    dend_45 { pt3dadd( 16.0802, 21.2127, 45.2324, 0.22 ) }
    dend_45 { pt3dadd( 16.2089, 21.3918, 45.915, 0.29 ) }
    dend_45 { pt3dadd( 16.2821, 21.4806, 46.3375, 0.52 ) }
    dend_45 { pt3dadd( 16.4351, 21.6428, 47.2422, 0.15 ) }
    dend_45 { pt3dadd( 16.4904, 21.7096, 47.5933, 0.15 ) }
    dend_45 { pt3dadd( 16.535, 21.7866, 47.9418, 0.22 ) }
    dend_45 { pt3dadd( 16.5658, 21.9415, 48.448, 0.22 ) }
    dend_45 { pt3dadd( 16.5554, 22.0478, 48.7143, 0.37 ) }
    dend_45 { pt3dadd( 16.528, 22.1732, 48.9898, 0.37 ) }
    dend_45 { pt3dadd( 16.453, 22.5051, 49.6271, 0.07 ) }
    dend_45 { pt3dadd( 16.4085, 22.72, 50.047, 0.07 ) }
    dend_45 { pt3dadd( 16.3824, 22.897, 50.3681, 0.37 ) }
    dend_45 { pt3dadd( 16.3605, 23.3325, 51.0764, 0.07 ) }
    dend_45 { pt3dadd( 16.3704, 23.6371, 51.55, 0.07 ) }
    dend_45 { pt3dadd( 16.3987, 23.8409, 51.8512, 0.22 ) }
    dend_45 { pt3dadd( 16.5004, 24.2142, 52.3936, 0.22 ) }
    dend_45 { pt3dadd( 16.611, 24.5301, 52.8451, 0.07 ) }
    dend_45 { pt3dadd( 16.7234, 24.7962, 53.2493, 0.07 ) }
    dend_45 { pt3dadd( 16.8001, 24.9667, 53.4946, 0.07 ) }
    dend_45 { pt3dadd( 16.8731, 25.1311, 53.7668, 0.22 ) }
    dend_45 { pt3dadd( 16.9449, 25.2791, 54.041, 0.22 ) }
    dend_45 { pt3dadd( 17.1347, 25.6367, 54.7345, 0.15 ) }
    dend_45 { pt3dadd( 17.2784, 25.8788, 55.2421, 0.15 ) }
    dend_45 { pt3dadd( 17.3727, 26.02, 55.5274, 0.29 ) }
    dend_45 { pt3dadd( 17.6302, 26.3751, 56.2167, 0.07 ) }
    dend_45 { pt3dadd( 17.8755, 26.6962, 56.7977, 0.07 ) }
    dend_45 { pt3dadd( 17.9852, 26.8426, 57.0327, 0.22 ) }
    dend_45 { pt3dadd( 18.2869, 27.2719, 57.6352, 0.07 ) }
    dend_45 { pt3dadd( 18.5059, 27.6046, 58.0604, 0.15 ) }
    dend_45 { pt3dadd( 18.6929, 27.8969, 58.4204, 0.07 ) }
    dend_45 { pt3dadd( 18.8979, 28.2329, 58.8021, 0.22 ) }
    dend_45 { pt3dadd( 19.2446, 28.83, 59.5061, 0.07 ) }
    dend_45 { pt3dadd( 19.4058, 29.1205, 59.8502, 0.07 ) }
    dend_45 { pt3dadd( 19.4905, 29.2806, 60.0267, 0.22 ) }
    dend_45 { pt3dadd( 19.6182, 29.5209, 60.2829, 0.22 ) }
    dend_45 { pt3dadd( 19.8811, 29.9846, 60.7508, 0.07 ) }
    dend_45 { pt3dadd( 20.088, 30.3103, 61.0787, 0.07 ) }
    dend_45 { pt3dadd( 20.2951, 30.6023, 61.3831, 0.07 ) }
    dend_45 { pt3dadd( 20.6836, 31.1054, 61.9161, 0.07 ) }
    dend_45 { pt3dadd( 20.8544, 31.3192, 62.1478, 0.22 ) }
    dend_45 { pt3dadd( 21.0095, 31.5136, 62.366, 0.22 ) }
    dend_45 { pt3dadd( 21.4021, 32.0507, 62.9055, 0.07 ) }
    dend_45 { pt3dadd( 21.7114, 32.5193, 63.3397, 0.07 ) }
    dend_45 { pt3dadd( 22.026, 33.0637, 63.8275, 0.07 ) }
    dend_45 { pt3dadd( 22.2751, 33.5548, 64.2629, 0.07 ) }
    dend_45 { pt3dadd( 22.4721, 34.0168, 64.6676, 0.07 ) }
    dend_45 { pt3dadd( 22.7308, 34.8062, 65.357, 0.07 ) }
    dend_45 { pt3dadd( 22.8067, 35.1672, 65.6663, 0.07 ) }
    dend_45 { pt3dadd( 22.8847, 35.7655, 66.1797, 0.29 ) }
    dend_45 { pt3dadd( 22.8935, 35.9261, 66.3289, 0.29 ) }
    dend_45 { pt3dadd( 22.8906, 36.4891, 66.8866, 0.07 ) }
    dend_45 { pt3dadd( 22.8805, 36.8129, 67.2118, 0.07 ) }
    dend_45 { pt3dadd( 22.8521, 37.1339, 67.5411, 0.07 ) }
    dend_45 { pt3dadd( 22.8057, 37.4502, 67.8283, 0.22 ) }
    dend_45 { pt3dadd( 22.7225, 37.9041, 68.1958, 0.22 ) }
    dend_45 { pt3dadd( 22.6053, 38.5333, 68.6574, 0.07 ) }
    dend_45 { pt3dadd( 22.4798, 39.2734, 69.1562, 0.07 ) }
    dend_45 { pt3dadd( 22.3787, 39.8987, 69.5598, 0.07 ) }
    dend_45 { pt3dadd( 22.3291, 40.2102, 69.7512, 0.29 ) }
    dend_45 { pt3dadd( 22.2815, 40.4825, 69.9108, 0.29 ) }
    dend_45 { pt3dadd( 22.1128, 41.4183, 70.4183, 0.07 ) }
    dend_45 { pt3dadd( 22.0356, 41.8954, 70.6775, 0.07 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 11.7224, -3.74545, 3.3978, 0.29 ) }
    dend_40 { pt3dadd( 12.0321, -4.10953, 3.60514, 0.29 ) }
    dend_40 { pt3dadd( 12.4111, -4.55237, 3.88607, 0.37 ) }
    dend_40 { pt3dadd( 12.6393, -4.89534, 4.0907, 0.37 ) }
    dend_40 { pt3dadd( 12.9082, -5.36729, 4.31825, 0.37 ) }
    dend_40 { pt3dadd( 13.1123, -5.76321, 4.49238, 0.29 ) }
    dend_40 { pt3dadd( 13.3204, -6.18658, 4.67441, 0.37 ) }
    dend_40 { pt3dadd( 13.5289, -6.62425, 4.88488, 0.52 ) }
    dend_40 { pt3dadd( 13.923, -7.4489, 5.30203, 0.29 ) }
    dend_40 { pt3dadd( 14.1643, -7.97632, 5.58358, 0.44 ) }
    dend_40 { pt3dadd( 14.4472, -8.59974, 5.90046, 0.29 ) }
    dend_40 { pt3dadd( 14.659, -9.06196, 6.13589, 0.37 ) }
    dend_40 { pt3dadd( 14.9676, -9.66976, 6.46202, 0.22 ) }
    dend_40 { pt3dadd( 15.1772, -10.0549, 6.70204, 0.29 ) }
    dend_40 { pt3dadd( 15.4442, -10.556, 7.06804, 0.44 ) }
    dend_40 { pt3dadd( 15.6573, -11.0301, 7.45558, 0.81 ) }
    dend_40 { pt3dadd( 15.8375, -11.5198, 7.84904, 0.74 ) }
    dend_40 { pt3dadd( 16.0315, -12.1653, 8.34955, 0.37 ) }
    dend_40 { pt3dadd( 16.1878, -12.9006, 8.90665, 0.37 ) }
    dend_40 { pt3dadd( 16.2909, -13.5203, 9.37762, 0.22 ) }
    dend_40 { pt3dadd( 16.3799, -14.1101, 9.8251, 0.59 ) }
    dend_40 { pt3dadd( 16.467, -14.6901, 10.2548, 0.59 ) }
    dend_40 { pt3dadd( 16.5658, -15.3143, 10.6806, 0.37 ) }
    dend_40 { pt3dadd( 16.6952, -16.1383, 11.1816, 0.44 ) }
    dend_40 { pt3dadd( 16.8024, -16.7943, 11.5163, 0.29 ) }
    dend_40 { pt3dadd( 16.876, -17.2318, 11.7109, 0.29 ) }
    dend_40 { pt3dadd( 16.9359, -17.6848, 11.877, 0.29 ) }
    dend_40 { pt3dadd( 16.9872, -18.1984, 12.0547, 0.29 ) }
    dend_40 { pt3dadd( 17.0213, -18.6712, 12.1939, 0.22 ) }
    dend_40 { pt3dadd( 17.0605, -19.4304, 12.3641, 0.37 ) }
    dend_40 { pt3dadd( 17.0401, -20.011, 12.4774, 0.37 ) }
    dend_40 { pt3dadd( 16.9485, -20.8862, 12.6515, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 98/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -7.17433, -27.6076, 23.9153, 0.29 ) }
    dend_38 { pt3dadd( -6.32108, -28.4657, 23.8506, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( -5.481, -29.4125, 23.8073, 0.29 ) }
    dend_38 { pt3dadd( -4.82396, -30.2885, 23.7846, 0.22 ) }
    dend_38 { pt3dadd( -4.53481, -30.739, 23.7808, 0.37 ) }
    dend_38 { pt3dadd( -4.29863, -31.1546, 23.783, 0.74 ) }
    dend_38 { pt3dadd( -3.80075, -32.1327, 23.8305, 0.52 ) }
    dend_38 { pt3dadd( -3.49058, -32.9313, 23.9238, 0.37 ) }
    dend_38 { pt3dadd( -3.23812, -33.8585, 24.093, 0.37 ) }
    dend_38 { pt3dadd( -3.12935, -34.5126, 24.2527, 0.52 ) }
    dend_38 { pt3dadd( -3.07782, -35.1002, 24.4238, 0.52 ) }
    dend_38 { pt3dadd( -3.08101, -36.0614, 24.7481, 0.52 ) }
    dend_38 { pt3dadd( -3.1663, -36.9432, 25.0966, 0.22 ) }
    dend_38 { pt3dadd( -3.3028, -37.7552, 25.4402, 0.15 ) }
    dend_38 { pt3dadd( -3.51546, -38.6831, 25.8359, 0.29 ) }
    dend_38 { pt3dadd( -3.68615, -39.1967, 26.0414, 0.29 ) }
    dend_38 { pt3dadd( -4.0685, -40.0246, 26.3442, 0.22 ) }
    dend_38 { pt3dadd( -4.46342, -40.71, 26.5564, 0.74 ) }
    dend_38 { pt3dadd( -5.24745, -41.8899, 26.8712, 0.22 ) }
    dend_38 { pt3dadd( -5.57905, -42.3487, 26.9772, 0.22 ) }
    dend_38 { pt3dadd( -6.26245, -43.2459, 27.148, 0.29 ) }
    dend_38 { pt3dadd( -6.9814, -44.135, 27.3181, 0.22 ) }
    dend_38 { pt3dadd( -7.38424, -44.6132, 27.399, 0.15 ) }
    dend_38 { pt3dadd( -7.74226, -45.0645, 27.4732, 0.22 ) }
    dend_38 { pt3dadd( -8.15502, -45.652, 27.593, 0.44 ) }
    dend_38 { pt3dadd( -8.38128, -46.0593, 27.692, 0.44 ) }
    dend_38 { pt3dadd( -8.692, -46.8759, 27.9082, 0.44 ) }
    dend_38 { pt3dadd( -8.88276, -47.5684, 28.0984, 0.44 ) }
    dend_38 { pt3dadd( -9.11946, -48.6065, 28.398, 0.37 ) }
    dend_38 { pt3dadd( -9.27369, -49.3568, 28.6393, 0.44 ) }
    dend_38 { pt3dadd( -9.39675, -49.9336, 28.842, 0.59 ) }
    dend_38 { pt3dadd( -9.62687, -50.89, 29.2205, 0.29 ) }
    dend_38 { pt3dadd( -9.90987, -51.9508, 29.6585, 0.37 ) }
    dend_38 { pt3dadd( -10.1877, -52.8924, 30.0634, 0.29 ) }
    dend_38 { pt3dadd( -10.4607, -53.7573, 30.4237, 0.22 ) }
    dend_38 { pt3dadd( -10.7219, -54.5989, 30.7514, 0.22 ) }
    dend_38 { pt3dadd( -10.8869, -55.132, 30.947, 0.22 ) }
    dend_38 { pt3dadd( -11.1821, -56.0843, 31.2669, 0.66 ) }
    dend_38 { pt3dadd( -11.4453, -56.9878, 31.5475, 0.66 ) }
    dend_38 { pt3dadd( -11.6835, -57.8989, 31.8035, 0.29 ) }
    dend_38 { pt3dadd( -12.0177, -59.2074, 32.139, 0.22 ) }
    dend_38 { pt3dadd( -12.2396, -60.0785, 32.3691, 0.44 ) }
    dend_38 { pt3dadd( -12.4113, -60.7094, 32.5617, 0.59 ) }
    dend_38 { pt3dadd( -12.8009, -61.9956, 33.0564, 0.22 ) }
    dend_38 { pt3dadd( -13.0556, -62.7924, 33.4033, 0.37 ) }
    dend_38 { pt3dadd( -13.3109, -63.5748, 33.7661, 0.29 ) }
    dend_38 { pt3dadd( -13.5771, -64.389, 34.1418, 0.66 ) }
    dend_38 { pt3dadd( -13.8518, -65.3039, 34.5506, 0.29 ) }
    dend_38 { pt3dadd( -14.0653, -66.1128, 34.8917, 0.29 ) }
    dend_38 { pt3dadd( -14.2644, -66.9977, 35.2412, 0.29 ) }
    dend_38 { pt3dadd( -14.4628, -68.0124, 35.6319, 0.22 ) }
    dend_38 { pt3dadd( -14.6071, -68.8449, 35.9431, 0.66 ) }
    dend_38 { pt3dadd( -14.8767, -70.3434, 36.4949, 0.22 ) }
    dend_38 { pt3dadd( -15.1232, -71.5977, 36.9662, 0.22 ) }
    dend_38 { pt3dadd( -15.2609, -72.2374, 37.2196, 0.37 ) }
    dend_38 { pt3dadd( -15.3935, -72.8156, 37.4823, 0.37 ) }
    dend_38 { pt3dadd( -15.5717, -73.566, 37.8516, 0.22 ) }
    dend_38 { pt3dadd( -15.7923, -74.4942, 38.3242, 0.22 ) }
    dend_38 { pt3dadd( -15.9514, -75.0959, 38.6282, 0.22 ) }
    dend_38 { pt3dadd( -16.1448, -75.777, 38.9549, 0.29 ) }
    dend_38 { pt3dadd( -16.3397, -76.4496, 39.241, 0.66 ) }
    dend_38 { pt3dadd( -16.6789, -77.5731, 39.6789, 0.22 ) }
    dend_38 { pt3dadd( -16.9975, -78.6137, 40.0508, 0.15 ) }
    dend_38 { pt3dadd( -17.1394, -79.0727, 40.2021, 0.15 ) }
    dend_38 { pt3dadd( -17.2824, -79.5384, 40.3459, 0.15 ) }
    dend_38 { pt3dadd( -17.5674, -80.484, 40.6462, 0.29 ) }
    dend_38 { pt3dadd( -17.8995, -81.6054, 40.9894, 0.15 ) }
    dend_38 { pt3dadd( -18.0686, -82.2084, 41.1658, 0.15 ) }
    dend_38 { pt3dadd( -18.2248, -82.8372, 41.3478, 0.59 ) }
    dend_38 { pt3dadd( -18.3786, -83.6972, 41.5967, 0.22 ) }
    dend_38 { pt3dadd( -18.4762, -84.4715, 41.8187, 0.22 ) }
    dend_38 { pt3dadd( -18.5634, -85.205, 42.0313, 0.74 ) }
    dend_38 { pt3dadd( -18.6828, -86.065, 42.2691, 0.22 ) }
    dend_38 { pt3dadd( -18.8687, -87.1519, 42.5785, 0.44 ) }
    dend_38 { pt3dadd( -19.0867, -88.2323, 42.9001, 0.22 ) }
    dend_38 { pt3dadd( -19.3146, -89.2541, 43.2132, 0.22 ) }
    dend_38 { pt3dadd( -19.5387, -90.1603, 43.4845, 0.22 ) }
    dend_38 { pt3dadd( -19.6803, -90.7094, 43.6642, 0.22 ) }
    dend_38 { pt3dadd( -19.8779, -91.456, 43.9385, 0.15 ) }
    dend_38 { pt3dadd( -20.0523, -92.1802, 44.2183, 0.44 ) }
    dend_38 { pt3dadd( -20.138, -92.6685, 44.4157, 0.44 ) }
    dend_38 { pt3dadd( -20.1971, -93.5083, 44.7436, 0.22 ) }
    dend_38 { pt3dadd( -20.1851, -94.5939, 45.1612, 0.29 ) }
    dend_38 { pt3dadd( -20.1555, -95.4441, 45.4721, 0.22 ) }
    dend_38 { pt3dadd( -20.1427, -96.245, 45.7388, 0.29 ) }
    dend_38 { pt3dadd( -20.1586, -97.0126, 45.97, 0.29 ) }
    dend_38 { pt3dadd( -20.2036, -98.1204, 46.2699, 0.22 ) }
    dend_38 { pt3dadd( -20.2572, -99.0666, 46.4872, 0.22 ) }
    dend_38 { pt3dadd( -20.3249, -99.8918, 46.6337, 0.37 ) }
    dend_38 { pt3dadd( -20.4182, -100.787, 46.7758, 0.52 ) }
    dend_38 { pt3dadd( -20.5796, -102.126, 46.9868, 0.22 ) }
    dend_38 { pt3dadd( -20.6715, -102.792, 47.0972, 0.22 ) }
    dend_38 { pt3dadd( -20.7954, -103.688, 47.2448, 0.37 ) }
    dend_38 { pt3dadd( -20.8324, -103.989, 47.2909, 0.37 ) }
    dend_38 { pt3dadd( -20.98, -105.243, 47.5144, 0.22 ) }
    dend_38 { pt3dadd( -21.1262, -106.255, 47.7217, 0.22 ) }
    dend_38 { pt3dadd( -21.2812, -107.067, 47.8989, 0.22 ) }
    dend_38 { pt3dadd( -21.4703, -107.87, 48.0828, 0.37 ) }
    dend_38 { pt3dadd( -21.6406, -108.536, 48.2361, 0.37 ) }
    dend_38 { pt3dadd( -21.9085, -109.503, 48.4564, 0.22 ) }
    dend_38 { pt3dadd( -22.2585, -110.637, 48.7019, 0.59 ) }
    dend_38 { pt3dadd( -22.5334, -111.512, 48.8837, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -22.8538, -112.659, 49.1141, 0.22 ) }
    dend_38 { pt3dadd( -23.0555, -113.433, 49.2644, 0.29 ) }
    dend_38 { pt3dadd( -23.1844, -113.99, 49.3555, 0.59 ) }
    dend_38 { pt3dadd( -23.2948, -114.561, 49.4321, 0.59 ) }
    dend_38 { pt3dadd( -23.4566, -115.515, 49.5699, 0.29 ) }
    dend_38 { pt3dadd( -23.6027, -116.454, 49.7353, 0.22 ) }
    dend_38 { pt3dadd( -23.7231, -117.27, 49.8909, 0.22 ) }
    dend_38 { pt3dadd( -23.8776, -118.365, 50.1242, 0.15 ) }
    dend_38 { pt3dadd( -23.9946, -119.295, 50.3345, 0.15 ) }
    dend_38 { pt3dadd( -24.1045, -120.171, 50.5473, 0.59 ) }
    dend_38 { pt3dadd( -24.3394, -121.794, 50.9927, 0.22 ) }
    dend_38 { pt3dadd( -24.5504, -123.025, 51.3466, 0.15 ) }
    dend_38 { pt3dadd( -24.6918, -123.818, 51.5859, 0.22 ) }
    dend_38 { pt3dadd( -24.8367, -124.61, 51.8265, 0.44 ) }
    dend_38 { pt3dadd( -24.9523, -125.236, 52.0068, 0.22 ) }
    dend_38 { pt3dadd( -25.1352, -126.33, 52.2861, 0.15 ) }
    dend_38 { pt3dadd( -25.2496, -127.079, 52.4494, 0.15 ) }
    dend_38 { pt3dadd( -25.3371, -127.741, 52.5664, 0.22 ) }
    dend_38 { pt3dadd( -25.4121, -128.434, 52.6636, 0.29 ) }
    dend_38 { pt3dadd( -25.5182, -129.647, 52.8059, 0.29 ) }
    dend_38 { pt3dadd( -25.6056, -131.06, 52.9345, 0.22 ) }
    dend_38 { pt3dadd( -25.6478, -131.967, 52.9927, 0.22 ) }
    dend_38 { pt3dadd( -25.7193, -133.187, 53.0953, 0.15 ) }
    dend_38 { pt3dadd( -25.7806, -134.049, 53.1766, 0.52 ) }
    dend_38 { pt3dadd( -25.8281, -134.722, 53.2525, 0.59 ) }
    dend_38 { pt3dadd( -25.8818, -135.912, 53.4043, 0.66 ) }
    dend_38 { pt3dadd( -25.9111, -137.321, 53.6534, 0.29 ) }
    dend_38 { pt3dadd( -25.9001, -138.711, 53.9543, 0.29 ) }
    dend_38 { pt3dadd( -25.8683, -139.454, 54.1291, 0.15 ) }
    dend_38 { pt3dadd( -25.8297, -140.192, 54.3064, 0.15 ) }
    dend_38 { pt3dadd( -25.7574, -141.257, 54.5824, 0.29 ) }
    dend_38 { pt3dadd( -25.6406, -142.477, 54.9189, 0.44 ) }
    dend_38 { pt3dadd( -25.4806, -143.781, 55.2785, 0.15 ) }
    dend_38 { pt3dadd( -25.4112, -144.266, 55.4096, 0.15 ) }
    dend_38 { pt3dadd( -25.3519, -144.769, 55.557, 0.15 ) }
    dend_38 { pt3dadd( -25.2722, -145.576, 55.7968, 0.15 ) }
    dend_38 { pt3dadd( -25.2155, -146.149, 55.9903, 0.15 ) }
    dend_38 { pt3dadd( -25.1347, -146.715, 56.1968, 0.29 ) }
    dend_38 { pt3dadd( -24.9611, -147.626, 56.5412, 0.15 ) }
    dend_38 { pt3dadd( -24.8478, -148.185, 56.7683, 0.15 ) }
    dend_38 { pt3dadd( -24.6954, -148.891, 57.0649, 0.81 ) }
    dend_38 { pt3dadd( -24.4865, -149.964, 57.5126, 0.22 ) }
    dend_38 { pt3dadd( -24.3752, -150.812, 57.8716, 0.22 ) }
    dend_38 { pt3dadd( -24.2613, -152.151, 58.4615, 0.15 ) }
    dend_38 { pt3dadd( -24.2362, -152.919, 58.8127, 0.15 ) }
    dend_38 { pt3dadd( -24.2486, -153.392, 59.0391, 0.59 ) }
    dend_38 { pt3dadd( -24.2999, -153.876, 59.2795, 0.59 ) }
    dend_38 { pt3dadd( -24.6217, -155.361, 60.0663, 0.22 ) }
    dend_38 { pt3dadd( -24.939, -156.373, 60.6697, 0.22 ) }
    dend_38 { pt3dadd( -25.2675, -157.207, 61.2343, 0.22 ) }
    dend_38 { pt3dadd( -25.5125, -157.764, 61.6484, 0.15 ) }
    dend_38 { pt3dadd( -25.8108, -158.323, 62.1231, 0.29 ) }
    dend_38 { pt3dadd( -26.3841, -159.216, 62.9943, 0.22 ) }
    dend_38 { pt3dadd( -26.8121, -159.773, 63.6121, 0.37 ) }
    dend_38 { pt3dadd( -27.3107, -160.336, 64.293, 0.52 ) }
    dend_38 { pt3dadd( -27.7466, -160.822, 64.8979, 0.44 ) }
    dend_38 { pt3dadd( -28.2417, -161.439, 65.6351, 0.22 ) }
    dend_38 { pt3dadd( -28.6736, -162.062, 66.3043, 0.66 ) }
    dend_38 { pt3dadd( -29.0057, -162.65, 66.8508, 0.74 ) }
    dend_38 { pt3dadd( -29.5732, -163.879, 67.8771, 0.22 ) }
    dend_38 { pt3dadd( -29.8129, -164.549, 68.3934, 0.22 ) }
    dend_38 { pt3dadd( -30.0338, -165.43, 69.0083, 0.15 ) }
    dend_38 { pt3dadd( -30.1601, -166.267, 69.5563, 0.22 ) }
    dend_38 { pt3dadd( -30.2588, -167.176, 70.1133, 0.22 ) }
    dend_38 { pt3dadd( -30.349, -168.175, 70.6975, 0.15 ) }
    dend_38 { pt3dadd( -30.3903, -168.839, 71.0747, 0.52 ) }
    dend_38 { pt3dadd( -30.4358, -169.429, 71.4413, 0.59 ) }
    dend_38 { pt3dadd( -30.5255, -170.273, 72.0019, 0.15 ) }
    dend_38 { pt3dadd( -30.631, -171.207, 72.6408, 0.22 ) }
    dend_38 { pt3dadd( -30.7594, -172.195, 73.2755, 0.15 ) }
    dend_38 { pt3dadd( -30.8603, -172.897, 73.696, 0.37 ) }
    dend_38 { pt3dadd( -30.9771, -173.65, 74.1357, 0.37 ) }
    dend_38 { pt3dadd( -31.1121, -174.543, 74.6551, 0.15 ) }
    dend_38 { pt3dadd( -31.2138, -175.357, 75.1093, 0.22 ) }
    dend_38 { pt3dadd( -31.3224, -176.502, 75.7496, 0.15 ) }
    dend_38 { pt3dadd( -31.4257, -177.679, 76.3916, 0.15 ) }
    dend_38 { pt3dadd( -31.4608, -178.114, 76.6254, 0.37 ) }
    dend_38 { pt3dadd( -31.498, -178.835, 76.9877, 0.37 ) }
    dend_38 { pt3dadd( -31.5135, -179.764, 77.4656, 0.15 ) }
    dend_38 { pt3dadd( -31.5133, -180.322, 77.7622, 0.15 ) }
    dend_38 { pt3dadd( -31.5055, -180.829, 78.0455, 0.37 ) }
    dend_38 { pt3dadd( -31.5041, -181.525, 78.4294, 0.37 ) }
    dend_38 { pt3dadd( -31.5319, -182.911, 79.1621, 0.07 ) }
    dend_38 { pt3dadd( -31.5783, -183.633, 79.5127, 0.22 ) }
    dend_38 { pt3dadd( -31.6908, -184.657, 79.9382, 0.07 ) }
    dend_38 { pt3dadd( -31.7412, -185.007, 80.0639, 0.07 ) }
    dend_38 { pt3dadd( -31.8766, -185.856, 80.3277, 0.29 ) }
    dend_38 { pt3dadd( -31.9868, -186.507, 80.4709, 0.15 ) }
    dend_38 { pt3dadd( -32.1154, -187.306, 80.5938, 0.29 ) }
    dend_38 { pt3dadd( -32.2639, -188.593, 80.6912, 0.07 ) }
    dend_38 { pt3dadd( -32.3157, -189.351, 80.7054, 0.07 ) }
    dend_38 { pt3dadd( -32.3391, -190.337, 80.6948, 0.59 ) }
    dend_38 { pt3dadd( -32.3145, -191.693, 80.6371, 0.15 ) }
    dend_38 { pt3dadd( -32.2853, -192.408, 80.589, 0.22 ) }
    dend_38 { pt3dadd( -32.2125, -193.569, 80.4968, 0.07 ) }
    dend_38 { pt3dadd( -32.1692, -194.249, 80.4362, 0.07 ) }
    dend_38 { pt3dadd( -32.1275, -195.143, 80.3458, 0.29 ) }
    dend_38 { pt3dadd( -32.1133, -196.38, 80.2315, 0.07 ) }
    dend_38 { pt3dadd( -32.1212, -196.929, 80.193, 0.59 ) }
    dend_38 { pt3dadd( -32.131, -197.306, 80.1702, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -32.1604, -198.575, 80.1134, 0.07 ) }
    dend_38 { pt3dadd( -32.1704, -199.422, 80.0847, 0.07 ) }
    dend_38 { pt3dadd( -32.173, -200.13, 80.0657, 0.29 ) }
    dend_38 { pt3dadd( -32.1639, -200.539, 80.051, 0.29 ) }
    dend_38 { pt3dadd( -32.1285, -201.829, 79.9819, 0.07 ) }
    dend_38 { pt3dadd( -32.1129, -202.735, 79.9213, 0.07 ) }
    dend_38 { pt3dadd( -32.1038, -203.263, 79.8821, 0.66 ) }
    dend_38 { pt3dadd( -32.0911, -203.951, 79.8302, 0.07 ) }
    dend_38 { pt3dadd( -32.076, -204.836, 79.7529, 0.07 ) }
    dend_38 { pt3dadd( -32.0845, -205.991, 79.633, 0.07 ) }
    dend_38 { pt3dadd( -32.1104, -206.625, 79.5503, 0.07 ) }
    dend_38 { pt3dadd( -32.1564, -207.448, 79.4347, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 12/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -7.17433, -27.6076, 23.9153, 0.15 ) }
    dend_37 { pt3dadd( -7.7177, -28.0205, 24.2214, 0.15 ) }
    dend_37 { pt3dadd( -8.33534, -28.4215, 24.5637, 0.15 ) }
    dend_37 { pt3dadd( -8.97484, -28.7882, 24.9024, 0.15 ) }
    dend_37 { pt3dadd( -9.377, -29.0148, 25.1083, 0.15 ) }
    dend_37 { pt3dadd( -9.77817, -29.255, 25.301, 0.29 ) }
    dend_37 { pt3dadd( -10.5558, -29.7432, 25.6582, 0.15 ) }
    dend_37 { pt3dadd( -11.0354, -30.0459, 25.8427, 0.22 ) }
    dend_37 { pt3dadd( -11.6384, -30.4167, 26.024, 0.52 ) }
    dend_37 { pt3dadd( -12.1331, -30.7498, 26.1537, 0.29 ) }
    dend_37 { pt3dadd( -12.8654, -31.3145, 26.2896, 0.15 ) }
    dend_37 { pt3dadd( -13.3032, -31.7243, 26.297, 0.15 ) }
    dend_37 { pt3dadd( -13.7817, -32.2663, 26.1868, 0.37 ) }
    dend_37 { pt3dadd( -14.0176, -32.576, 26.0834, 0.74 ) }
    dend_37 { pt3dadd( -14.5172, -33.326, 25.7803, 0.22 ) }
    dend_37 { pt3dadd( -14.9093, -33.9815, 25.4906, 0.22 ) }
    dend_37 { pt3dadd( -15.4087, -34.9728, 25.0511, 0.29 ) }
    dend_37 { pt3dadd( -15.6797, -35.6582, 24.7842, 0.22 ) }
    dend_37 { pt3dadd( -15.9279, -36.3711, 24.5602, 0.22 ) }
    dend_37 { pt3dadd( -16.1549, -37.0534, 24.384, 0.22 ) }
    dend_37 { pt3dadd( -16.3224, -37.5396, 24.2899, 0.22 ) }
    dend_37 { pt3dadd( -16.5763, -38.3019, 24.2049, 0.52 ) }
    dend_37 { pt3dadd( -17.0137, -39.6571, 24.1306, 0.22 ) }
    dend_37 { pt3dadd( -17.3596, -40.7428, 24.0886, 0.22 ) }
    dend_37 { pt3dadd( -17.5931, -41.4647, 24.0633, 0.22 ) }
    dend_37 { pt3dadd( -17.8736, -42.3401, 24.0215, 0.22 ) }
    dend_37 { pt3dadd( -18.1416, -43.2032, 23.9723, 0.22 ) }
    dend_37 { pt3dadd( -18.3866, -44.0498, 23.917, 0.22 ) }
    dend_37 { pt3dadd( -18.5495, -44.7026, 23.8614, 0.15 ) }
    dend_37 { pt3dadd( -18.6479, -45.2052, 23.808, 0.22 ) }
    dend_37 { pt3dadd( -18.828, -46.2009, 23.7021, 0.22 ) }
    dend_37 { pt3dadd( -18.9608, -46.9867, 23.6366, 0.15 ) }
    dend_37 { pt3dadd( -19.0585, -47.5314, 23.6097, 0.44 ) }
    dend_37 { pt3dadd( -19.139, -47.9754, 23.6068, 0.44 ) }
    dend_37 { pt3dadd( -19.259, -48.5866, 23.6269, 0.22 ) }
    dend_37 { pt3dadd( -19.4475, -49.4851, 23.6905, 0.07 ) }
    dend_37 { pt3dadd( -19.5899, -50.0977, 23.7591, 0.07 ) }
    dend_37 { pt3dadd( -19.8266, -51.0301, 23.8581, 0.07 ) }
    dend_37 { pt3dadd( -20.0162, -51.7236, 23.9123, 0.07 ) }
    dend_37 { pt3dadd( -20.1838, -52.2856, 23.9368, 0.22 ) }
    dend_37 { pt3dadd( -20.375, -52.8965, 23.9168, 0.22 ) }
    dend_37 { pt3dadd( -20.5543, -53.3956, 23.8576, 0.15 ) }
    dend_37 { pt3dadd( -20.7292, -53.8065, 23.7807, 0.52 ) }
    dend_37 { pt3dadd( -20.9937, -54.3165, 23.6593, 0.52 ) }
    dend_37 { pt3dadd( -21.4252, -55.0672, 23.4561, 0.15 ) }
    dend_37 { pt3dadd( -21.762, -55.5623, 23.3175, 0.15 ) }
    dend_37 { pt3dadd( -22.1322, -56.0032, 23.1985, 0.22 ) }
    dend_37 { pt3dadd( -22.3883, -56.2614, 23.1356, 0.22 ) }
    dend_37 { pt3dadd( -23.153, -56.9306, 23.0057, 0.15 ) }
    dend_37 { pt3dadd( -23.6146, -57.2963, 22.952, 0.29 ) }
    dend_37 { pt3dadd( -24.1707, -57.6962, 22.938, 0.29 ) }
    dend_37 { pt3dadd( -24.964, -58.2342, 22.9981, 0.07 ) }
    dend_37 { pt3dadd( -25.5553, -58.6155, 23.0836, 0.07 ) }
    dend_37 { pt3dadd( -26.0853, -58.9307, 23.1901, 0.29 ) }
    dend_37 { pt3dadd( -26.8893, -59.4075, 23.4323, 0.29 ) }
    dend_37 { pt3dadd( -27.7477, -59.9565, 23.7503, 0.07 ) }
    dend_37 { pt3dadd( -28.1843, -60.2957, 23.9594, 0.07 ) }
    dend_37 { pt3dadd( -28.7577, -60.8349, 24.2998, 0.22 ) }
    dend_37 { pt3dadd( -29.1988, -61.3239, 24.5958, 0.29 ) }
    dend_37 { pt3dadd( -29.794, -62.0569, 25.0101, 0.07 ) }
    dend_37 { pt3dadd( -30.1665, -62.5444, 25.2688, 0.22 ) }
    dend_37 { pt3dadd( -30.758, -63.3958, 25.6545, 0.07 ) }
    dend_37 { pt3dadd( -31.0006, -63.7712, 25.8151, 0.07 ) }
    dend_37 { pt3dadd( -31.3692, -64.3677, 26.0785, 0.29 ) }
    dend_37 { pt3dadd( -31.6622, -64.8325, 26.2915, 0.29 ) }
    dend_37 { pt3dadd( -32.2065, -65.625, 26.666, 0.07 ) }
    dend_37 { pt3dadd( -32.7531, -66.3528, 27.065, 0.07 ) }
    dend_37 { pt3dadd( -33.4097, -67.1813, 27.5707, 0.07 ) }
    dend_37 { pt3dadd( -33.8314, -67.7138, 27.9101, 0.07 ) }
    dend_37 { pt3dadd( -34.0853, -68.0415, 28.1254, 0.22 ) }
    dend_37 { pt3dadd( -34.4159, -68.4777, 28.4077, 0.59 ) }
    dend_37 { pt3dadd( -34.9323, -69.1665, 28.8378, 0.07 ) }
    dend_37 { pt3dadd( -35.5636, -70.0105, 29.3627, 0.07 ) }
    dend_37 { pt3dadd( -35.8503, -70.4048, 29.6098, 0.07 ) }
    dend_37 { pt3dadd( -36.1153, -70.7821, 29.8356, 0.22 ) }
    dend_37 { pt3dadd( -36.4294, -71.2248, 30.0965, 0.29 ) }
    dend_37 { pt3dadd( -36.6788, -71.5574, 30.3023, 0.29 ) }
    dend_37 { pt3dadd( -37.1209, -72.1267, 30.6731, 0.07 ) }
    dend_37 { pt3dadd( -37.4868, -72.5424, 30.9797, 0.07 ) }
    dend_37 { pt3dadd( -37.6965, -72.7671, 31.1703, 0.29 ) }
    dend_37 { pt3dadd( -37.9301, -73.0162, 31.3907, 0.44 ) }
    dend_37 { pt3dadd( -38.4385, -73.5665, 31.8798, 0.22 ) }
    dend_37 { pt3dadd( -38.9443, -74.1335, 32.3771, 0.15 ) }
    dend_37 { pt3dadd( -39.3463, -74.615, 32.7727, 0.29 ) }
    dend_37 { pt3dadd( -39.6845, -75.0645, 33.1145, 0.29 ) }
    dend_37 { pt3dadd( -40.1538, -75.753, 33.6035, 0.15 ) }
    dend_37 { pt3dadd( -40.4127, -76.1717, 33.8718, 0.22 ) }
    dend_37 { pt3dadd( -40.7719, -76.8243, 34.2229, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_37 { pt3dadd( -41.1129, -77.5377, 34.5347, 0.07 ) }
    dend_37 { pt3dadd( -41.395, -78.2106, 34.771, 0.07 ) }
    dend_37 { pt3dadd( -41.5498, -78.6367, 34.8838, 0.44 ) }
    dend_37 { pt3dadd( -41.711, -79.1646, 34.9913, 0.44 ) }
    dend_37 { pt3dadd( -41.9769, -80.1708, 35.1476, 0.15 ) }
    dend_37 { pt3dadd( -42.1983, -81.1229, 35.2504, 0.22 ) }
    dend_37 { pt3dadd( -42.3872, -82.064, 35.3277, 0.07 ) }
    dend_37 { pt3dadd( -42.5246, -82.7631, 35.3674, 0.07 ) }
    dend_37 { pt3dadd( -42.5865, -83.0747, 35.3821, 0.07 ) }
    dend_37 { pt3dadd( -42.6903, -83.5176, 35.3969, 0.29 ) }
    dend_37 { pt3dadd( -42.8421, -84.0332, 35.4128, 0.37 ) }
    dend_37 { pt3dadd( -42.9045, -84.2105, 35.4176, 0.37 ) }
    dend_37 { pt3dadd( -43.3418, -85.355, 35.4465, 0.07 ) }
    dend_37 { pt3dadd( -43.594, -85.9485, 35.4641, 0.22 ) }
    dend_37 { pt3dadd( -44.1372, -87.1438, 35.4862, 0.07 ) }
    dend_37 { pt3dadd( -44.6149, -88.1234, 35.4911, 0.07 ) }
    dend_37 { pt3dadd( -44.7675, -88.4086, 35.4889, 0.29 ) }
    dend_37 { pt3dadd( -44.9047, -88.6444, 35.4839, 0.52 ) }
    dend_37 { pt3dadd( -45.2143, -89.1318, 35.4657, 0.22 ) }
    dend_37 { pt3dadd( -45.901, -90.1298, 35.3905, 0.07 ) }
    dend_37 { pt3dadd( -46.3309, -90.7239, 35.3231, 0.07 ) }
    dend_37 { pt3dadd( -46.6887, -91.203, 35.2443, 0.29 ) }
    dend_37 { pt3dadd( -47.1898, -91.8657, 35.1202, 0.15 ) }
    dend_37 { pt3dadd( -47.4202, -92.1717, 35.0595, 0.29 ) }
    dend_37 { pt3dadd( -48.1178, -93.1043, 34.8623, 0.07 ) }
    dend_37 { pt3dadd( -48.3963, -93.4907, 34.7768, 0.37 ) }
    dend_37 { pt3dadd( -48.9954, -94.3234, 34.5948, 0.07 ) }
    dend_37 { pt3dadd( -49.2682, -94.6969, 34.5148, 0.07 ) }
    dend_37 { pt3dadd( -49.6771, -95.228, 34.4053, 0.74 ) }
    dend_37 { pt3dadd( -50.3517, -96.075, 34.2459, 0.07 ) }
    dend_37 { pt3dadd( -51.0382, -96.9339, 34.1104, 0.22 ) }
    dend_37 { pt3dadd( -51.8656, -98.0017, 33.9498, 0.07 ) }
    dend_37 { pt3dadd( -52.3136, -98.6025, 33.8697, 0.07 ) }
    dend_37 { pt3dadd( -52.6268, -99.0372, 33.8123, 0.22 ) }
    dend_37 { pt3dadd( -52.8565, -99.3726, 33.7712, 0.22 ) }
    dend_37 { pt3dadd( -53.4764, -100.359, 33.6712, 0.07 ) }
    dend_37 { pt3dadd( -53.8328, -100.953, 33.617, 0.07 ) }
    dend_37 { pt3dadd( -54.09, -101.439, 33.5712, 0.22 ) }
    dend_37 { pt3dadd( -54.2558, -101.773, 33.5396, 0.22 ) }
    dend_37 { pt3dadd( -54.627, -102.57, 33.4621, 0.07 ) }
    dend_37 { pt3dadd( -54.9127, -103.183, 33.4049, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 13.6153, -14.2353, -4.0292, 0.52 ) }
    dend_22 { pt3dadd( 14.0977, -15.1038, -3.61938, 0.52 ) }
    dend_22 { pt3dadd( 14.2497, -15.518, -3.44118, 0.52 ) }
    dend_22 { pt3dadd( 14.3891, -16.0805, -3.21394, 0.59 ) }
    dend_22 { pt3dadd( 14.4842, -16.5435, -3.02658, 0.59 ) }
    dend_22 { pt3dadd( 14.6424, -17.2803, -2.74285, 0.44 ) }
    dend_22 { pt3dadd( 14.8212, -18.0338, -2.46146, 0.66 ) }
    dend_22 { pt3dadd( 15.0864, -19.2081, -2.06023, 0.52 ) }
    dend_22 { pt3dadd( 15.3354, -20.1963, -1.74055, 0.37 ) }
    dend_22 { pt3dadd( 15.5521, -20.9467, -1.50536, 0.37 ) }
    dend_22 { pt3dadd( 15.84, -21.8917, -1.21788, 0.66 ) }
    dend_22 { pt3dadd( 16.056, -22.5441, -1.00612, 0.81 ) }
    dend_22 { pt3dadd( 16.2471, -23.0567, -0.82964, 0.81 ) }
    dend_22 { pt3dadd( 16.6359, -23.9321, -0.482279, 0.59 ) }
    dend_22 { pt3dadd( 17.0217, -24.7216, -0.145931, 0.66 ) }
    dend_22 { pt3dadd( 17.5894, -25.8272, 0.349891, 0.44 ) }
    dend_22 { pt3dadd( 18.0013, -26.5781, 0.694816, 0.37 ) }
    dend_22 { pt3dadd( 18.3782, -27.2185, 0.998479, 0.37 ) }
    dend_22 { pt3dadd( 18.7192, -27.7688, 1.27641, 0.37 ) }
    dend_22 { pt3dadd( 19.2111, -28.5166, 1.67837, 0.44 ) }
    dend_22 { pt3dadd( 19.7163, -29.2701, 2.09273, 0.37 ) }
    dend_22 { pt3dadd( 20.3303, -30.1272, 2.56264, 0.37 ) }
    dend_22 { pt3dadd( 20.8341, -30.8373, 2.93535, 0.44 ) }
    dend_22 { pt3dadd( 21.2226, -31.4221, 3.23921, 0.59 ) }
    dend_22 { pt3dadd( 21.7067, -32.2082, 3.65663, 0.59 ) }
    dend_22 { pt3dadd( 22.2834, -33.2063, 4.27213, 0.52 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 13.6153, -14.2353, -4.0292, 0.22 ) }
    dend_17 { pt3dadd( 13.4508, -14.8958, -5.3853, 0.22 ) }
    dend_17 { pt3dadd( 13.2817, -15.3365, -6.36853, 0.22 ) }
    dend_17 { pt3dadd( 13.0847, -15.7901, -7.51815, 0.59 ) }
    dend_17 { pt3dadd( 12.9686, -16.0635, -8.28584, 0.59 ) }
    dend_17 { pt3dadd( 12.8493, -16.373, -9.29094, 0.29 ) }
    dend_17 { pt3dadd( 12.6912, -16.7815, -10.6192, 0.22 ) }
    dend_17 { pt3dadd( 12.6626, -16.8315, -10.8325, 0.22 ) }
    dend_17 { pt3dadd( 12.5613, -16.9885, -11.515, 0.22 ) }
    dend_17 { pt3dadd( 12.5105, -17.0919, -11.925, 0.22 ) }
    dend_17 { pt3dadd( 12.3933, -17.464, -12.869, 0.22 ) }
    dend_17 { pt3dadd( 12.27, -17.9908, -13.7747, 0.15 ) }
    dend_17 { pt3dadd( 12.2057, -18.3397, -14.2951, 0.15 ) }
    dend_17 { pt3dadd( 12.1367, -18.6406, -14.7095, 0.15 ) }
    dend_17 { pt3dadd( 12.0646, -18.8599, -14.9914, 0.15 ) }
    dend_17 { pt3dadd( 11.6951, -19.7957, -16.2094, 0.07 ) }
    dend_17 { pt3dadd( 11.3998, -20.5366, -17.209, 0.07 ) }
    dend_17 { pt3dadd( 11.1581, -21.1944, -18.1425, 0.07 ) }
    dend_17 { pt3dadd( 11.013, -21.644, -18.7512, 0.07 ) }
    dend_17 { pt3dadd( 10.8775, -22.1567, -19.4575, 0.29 ) }
    dend_17 { pt3dadd( 10.8005, -22.5184, -19.9887, 0.29 ) }
    dend_17 { pt3dadd( 10.7262, -23.3316, -21.4082, 0.07 ) }
    dend_17 { pt3dadd( 10.7131, -23.5656, -21.8423, 0.07 ) }
    dend_17 { pt3dadd( 10.661, -24.1619, -22.9933, 0.07 ) }
    dend_17 { pt3dadd( 10.5938, -24.722, -24.1516, 0.22 ) }
    dend_17 { pt3dadd( 10.5173, -25.1717, -25.1589, 0.22 ) }
    dend_17 { pt3dadd( 10.1195, -26.3259, -27.8724, 0.07 ) }
    dend_17 { pt3dadd( 9.97414, -26.5465, -28.4494, 0.07 ) }
    dend_17 { pt3dadd( 9.68335, -26.8237, -29.2668, 0.22 ) }
    dend_17 { pt3dadd( 9.39265, -27.0304, -29.9593, 0.22 ) }
    dend_17 { pt3dadd( 9.13653, -27.1795, -30.4454, 0.22 ) }
    dend_17 { pt3dadd( 8.56753, -27.453, -31.2812, 0.15 ) }
    dend_17 { pt3dadd( 7.66289, -27.7531, -32.1556, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_17 { pt3dadd( 6.66875, -28.0754, -33.1073, 0.07 ) }
    dend_17 { pt3dadd( 3.81835, -31.0977, -44.5443, 0.07 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 2/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 10.2555, 3.95841, 0.758114, 0.22 ) }
    dend_15 { pt3dadd( 10.7168, 3.91418, 1.88538, 0.22 ) }
    dend_15 { pt3dadd( 11.7545, 4.06688, 4.72983, 0.22 ) }
    dend_15 { pt3dadd( 12.1277, 4.20164, 5.87359, 0.29 ) }
    dend_15 { pt3dadd( 12.4819, 4.46567, 7.17833, 0.59 ) }
    dend_15 { pt3dadd( 12.7963, 4.79422, 8.48213, 0.44 ) }
    dend_15 { pt3dadd( 13.0879, 5.1533, 9.7849, 0.44 ) }
    dend_15 { pt3dadd( 13.3033, 5.6284, 11.0122, 0.22 ) }
    dend_15 { pt3dadd( 13.4791, 6.22333, 12.2451, 0.37 ) }
    dend_15 { pt3dadd( 13.811, 7.29179, 14.3218, 0.22 ) }
    dend_15 { pt3dadd( 14.0008, 7.79532, 15.2742, 0.15 ) }
    dend_15 { pt3dadd( 14.1808, 8.19096, 16.0103, 0.15 ) }
    dend_15 { pt3dadd( 14.5414, 8.89614, 17.2388, 0.22 ) }
    dend_15 { pt3dadd( 14.8869, 9.53075, 18.2397, 0.22 ) }
    dend_15 { pt3dadd( 15.1988, 10.1381, 19.0582, 0.15 ) }
    dend_15 { pt3dadd( 15.5424, 10.9082, 19.9293, 0.37 ) }
    dend_15 { pt3dadd( 15.6804, 11.3828, 20.4111, 0.37 ) }
    dend_15 { pt3dadd( 15.8217, 12.1761, 21.2065, 0.22 ) }
    dend_15 { pt3dadd( 15.8891, 12.7524, 21.8069, 0.44 ) }
    dend_15 { pt3dadd( 15.9566, 13.4762, 22.5804, 0.81 ) }
    dend_15 { pt3dadd( 16.0193, 14.0456, 23.2582, 0.59 ) }
    dend_15 { pt3dadd( 16.2054, 14.8844, 24.4771, 0.22 ) }
    dend_15 { pt3dadd( 16.4355, 15.3855, 25.444, 0.22 ) }
    dend_15 { pt3dadd( 16.6731, 15.7363, 26.3162, 0.22 ) }
    dend_15 { pt3dadd( 16.9647, 16.0339, 27.2647, 0.22 ) }
    dend_15 { pt3dadd( 17.2299, 16.2123, 28.0559, 0.22 ) }
    dend_15 { pt3dadd( 17.5538, 16.3621, 28.9561, 0.22 ) }
    dend_15 { pt3dadd( 17.7759, 16.457, 29.6193, 0.22 ) }
    dend_15 { pt3dadd( 18.0161, 16.5637, 30.5714, 0.22 ) }
    dend_15 { pt3dadd( 18.1204, 16.6079, 31.2289, 0.22 ) }
    dend_15 { pt3dadd( 18.2557, 16.6185, 32.4863, 0.22 ) }
    dend_15 { pt3dadd( 18.4339, 16.4964, 34.2809, 0.37 ) }
    dend_15 { pt3dadd( 18.5763, 16.3922, 35.3346, 0.37 ) }
    dend_15 { pt3dadd( 18.7248, 16.324, 36.1289, 0.37 ) }
    dend_15 { pt3dadd( 18.9078, 16.2777, 36.8638, 0.37 ) }
    dend_15 { pt3dadd( 19.1547, 16.3098, 37.7041, 0.37 ) }
    dend_15 { pt3dadd( 19.364, 16.4123, 38.3258, 0.37 ) }
    dend_15 { pt3dadd( 19.7862, 16.7277, 39.5427, 0.22 ) }
    dend_15 { pt3dadd( 20.1989, 16.9665, 40.6603, 0.22 ) }
    dend_15 { pt3dadd( 20.4734, 17.0681, 41.513, 0.22 ) }
    dend_15 { pt3dadd( 20.7344, 17.1212, 42.6895, 0.22 ) }
    dend_15 { pt3dadd( 20.7965, 17.0907, 43.4051, 0.29 ) }
    dend_15 { pt3dadd( 20.7915, 16.9754, 44.3699, 0.29 ) }
    dend_15 { pt3dadd( 20.7206, 16.6541, 46.1555, 0.22 ) }
    dend_15 { pt3dadd( 20.7095, 16.3895, 47.5776, 0.22 ) }
    dend_15 { pt3dadd( 20.7295, 16.2151, 48.7968, 0.22 ) }
    dend_15 { pt3dadd( 20.7899, 16.118, 50.094, 0.37 ) }
    dend_15 { pt3dadd( 20.833, 16.1242, 50.646, 0.37 ) }
    dend_15 { pt3dadd( 20.977, 16.3012, 52.276, 0.07 ) }
    dend_15 { pt3dadd( 21.1085, 16.7196, 54.2316, 0.29 ) }
    dend_15 { pt3dadd( 21.2085, 17.0031, 55.3209, 0.44 ) }
    dend_15 { pt3dadd( 21.42, 17.4043, 56.8872, 0.22 ) }
    dend_15 { pt3dadd( 21.6398, 17.7464, 58.2214, 0.44 ) }
    dend_15 { pt3dadd( 21.8514, 18.033, 59.3581, 0.37 ) }
    dend_15 { pt3dadd( 22.1696, 18.4107, 60.8323, 0.22 ) }
    dend_15 { pt3dadd( 22.5379, 18.7596, 62.1919, 0.15 ) }
    dend_15 { pt3dadd( 22.9957, 19.1437, 63.4183, 0.15 ) }
    dend_15 { pt3dadd( 23.1742, 19.2816, 63.7928, 0.15 ) }
    dend_15 { pt3dadd( 23.6219, 19.618, 64.5481, 0.29 ) }
    dend_15 { pt3dadd( 24.19, 20.0484, 65.4499, 0.37 ) }
    dend_15 { pt3dadd( 24.9922, 20.6907, 66.7552, 0.22 ) }
    dend_15 { pt3dadd( 25.7664, 21.3955, 68.2088, 0.15 ) }
    dend_15 { pt3dadd( 26.1955, 21.8202, 69.072, 0.15 ) }
    dend_15 { pt3dadd( 26.6112, 22.2291, 69.9447, 0.22 ) }
    dend_15 { pt3dadd( 27.1344, 22.7358, 71.1048, 0.22 ) }
    dend_15 { pt3dadd( 27.6475, 23.2248, 72.2713, 0.15 ) }
    dend_15 { pt3dadd( 28.0761, 23.6395, 73.2573, 0.15 ) }
    dend_15 { pt3dadd( 28.466, 23.9232, 74.2451, 0.15 ) }
    dend_15 { pt3dadd( 29.0278, 24.2523, 75.7132, 0.15 ) }
    dend_15 { pt3dadd( 29.3498, 24.4019, 76.4959, 0.44 ) }
    dend_15 { pt3dadd( 29.8206, 24.598, 77.5464, 0.44 ) }
    dend_15 { pt3dadd( 30.3666, 24.8199, 78.6781, 0.22 ) }
    dend_15 { pt3dadd( 32.1585, 25.5139, 82.0802, 0.15 ) }
    dend_15 { pt3dadd( 32.7916, 25.7314, 83.1834, 0.22 ) }
    dend_15 { pt3dadd( 33.8871, 26.0038, 84.9017, 0.07 ) }
    dend_15 { pt3dadd( 34.7684, 26.1819, 86.1955, 0.07 ) }
    dend_15 { pt3dadd( 35.3527, 26.2988, 87.02, 0.29 ) }
    dend_15 { pt3dadd( 35.7458, 26.3743, 87.5772, 0.29 ) }
    dend_15 { pt3dadd( 36.6363, 26.5912, 88.8859, 0.15 ) }
    dend_15 { pt3dadd( 38.0605, 26.7853, 91.3574, 0.22 ) }
    dend_15 { pt3dadd( 38.4787, 26.7665, 92.2007, 0.22 ) }
    dend_15 { pt3dadd( 38.9552, 26.6723, 93.2622, 0.44 ) }
    dend_15 { pt3dadd( 39.4372, 26.518, 94.4591, 0.44 ) }
    dend_15 { pt3dadd( 39.8017, 26.3594, 95.4477, 0.44 ) }
    dend_15 { pt3dadd( 40.534, 25.9576, 97.5034, 0.22 ) }
    dend_15 { pt3dadd( 40.9362, 25.7212, 98.612, 0.22 ) }
    dend_15 { pt3dadd( 41.2275, 25.5346, 99.3434, 0.22 ) }
    dend_15 { pt3dadd( 41.6612, 25.2642, 100.36, 0.22 ) }
    dend_15 { pt3dadd( 42.0796, 25.0888, 101.241, 0.22 ) }
    dend_15 { pt3dadd( 42.2925, 25.0339, 101.645, 0.22 ) }
    dend_15 { pt3dadd( 42.5815, 25.02, 102.136, 0.22 ) }
    dend_15 { pt3dadd( 43.1061, 25.0481, 102.985, 0.22 ) }
    dend_15 { pt3dadd( 43.624, 25.0728, 103.79, 0.29 ) }
    dend_15 { pt3dadd( 44.4426, 25.0993, 105.138, 0.15 ) }
    dend_15 { pt3dadd( 45.1961, 25.0881, 106.446, 0.15 ) }
    dend_15 { pt3dadd( 45.705, 25.0619, 107.311, 0.29 ) }
    dend_15 { pt3dadd( 46.6349, 24.9813, 108.866, 0.29 ) }
    dend_15 { pt3dadd( 47.5999, 24.8762, 110.484, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_15 { pt3dadd( 48.7474, 24.7605, 112.453, 0.22 ) }
    dend_15 { pt3dadd( 49.7177, 24.7294, 114.208, 0.22 ) }
    dend_15 { pt3dadd( 50.3299, 24.793, 115.377, 0.07 ) }
    dend_15 { pt3dadd( 50.8292, 24.9595, 116.382, 0.15 ) }
    dend_15 { pt3dadd( 51.4656, 25.407, 117.704, 0.07 ) }
    dend_15 { pt3dadd( 51.8959, 25.8991, 118.642, 0.07 ) }
    dend_15 { pt3dadd( 52.3208, 26.5489, 119.589, 0.07 ) }
    dend_15 { pt3dadd( 52.6459, 27.1128, 120.343, 0.59 ) }
    dend_15 { pt3dadd( 53.5891, 28.7533, 122.423, 0.15 ) }
    dend_15 { pt3dadd( 54.2886, 29.9142, 123.828, 0.15 ) }
    dend_15 { pt3dadd( 54.8738, 30.8125, 124.914, 0.66 ) }
    dend_15 { pt3dadd( 55.6155, 31.8626, 126.231, 0.15 ) }
    dend_15 { pt3dadd( 56.2977, 32.7985, 127.465, 0.15 ) }
    dend_15 { pt3dadd( 57.0266, 33.8382, 128.873, 0.15 ) }
    dend_15 { pt3dadd( 57.3958, 34.4019, 129.636, 0.29 ) }
    dend_15 { pt3dadd( 57.6635, 34.7982, 130.196, 0.29 ) }
    dend_15 { pt3dadd( 58.3943, 35.8135, 131.682, 0.07 ) }
    dend_15 { pt3dadd( 58.7413, 36.2349, 132.347, 0.07 ) }
    dend_15 { pt3dadd( 59.2368, 36.8123, 133.26, 0.44 ) }
    dend_15 { pt3dadd( 59.9597, 37.5497, 134.503, 0.22 ) }
    dend_15 { pt3dadd( 60.6428, 38.1195, 135.48, 0.07 ) }
    dend_15 { pt3dadd( 61.2079, 38.5077, 136.177, 0.29 ) }
    dend_15 { pt3dadd( 62.621, 39.3168, 137.687, 0.15 ) }
    dend_15 { pt3dadd( 63.3234, 39.6351, 138.376, 0.44 ) }
    dend_15 { pt3dadd( 63.9783, 39.8453, 139.002, 0.44 ) }
    dend_15 { pt3dadd( 65.3267, 40.1661, 140.263, 0.15 ) }
    dend_15 { pt3dadd( 66.4573, 40.349, 141.353, 0.15 ) }
    dend_15 { pt3dadd( 67.0888, 40.3756, 141.957, 0.81 ) }
    dend_15 { pt3dadd( 68.7359, 40.2604, 143.556, 0.07 ) }
    dend_15 { pt3dadd( 69.7507, 40.0658, 144.598, 0.07 ) }
    dend_15 { pt3dadd( 70.4059, 39.8772, 145.314, 0.07 ) }
    dend_15 { pt3dadd( 71.2741, 39.5628, 146.287, 0.22 ) }
    dend_15 { pt3dadd( 72.6519, 38.9759, 147.869, 0.07 ) }
    dend_15 { pt3dadd( 73.5602, 38.5353, 148.959, 0.22 ) }
    dend_15 { pt3dadd( 74.5641, 38.0141, 150.208, 0.22 ) }
    dend_15 { pt3dadd( 74.9315, 37.812, 150.679, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 36/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 10.2555, 3.95841, 0.758114, 0.66 ) }
    dend_14 { pt3dadd( 10.3519, 4.14109, 0.683115, 0.66 ) }
    dend_14 { pt3dadd( 10.7528, 5.02691, 0.405316, 0.44 ) }
    dend_14 { pt3dadd( 10.9432, 5.52486, 0.270966, 0.44 ) }
    dend_14 { pt3dadd( 11.1761, 6.13549, 0.101608, 0.59 ) }
    dend_14 { pt3dadd( 11.5643, 7.07209, -0.15068, 0.37 ) }
    dend_14 { pt3dadd( 11.8095, 7.62615, -0.29103, 0.37 ) }
    dend_14 { pt3dadd( 12.1476, 8.38303, -0.467138, 0.52 ) }
    dend_14 { pt3dadd( 12.4404, 9.04159, -0.603907, 0.29 ) }
    dend_14 { pt3dadd( 12.7976, 9.82944, -0.780138, 0.22 ) }
    dend_14 { pt3dadd( 13.1109, 10.4604, -0.929743, 0.29 ) }
    dend_14 { pt3dadd( 13.6554, 11.4719, -1.18193, 0.22 ) }
    dend_14 { pt3dadd( 14.0081, 12.1117, -1.34657, 0.37 ) }
    dend_14 { pt3dadd( 14.2431, 12.5142, -1.4513, 0.74 ) }
    dend_14 { pt3dadd( 14.6018, 13.1479, -1.60685, 1.03 ) }
    dend_14 { pt3dadd( 15.0537, 14.0256, -1.80314, 0.52 ) }
    dend_14 { pt3dadd( 15.4023, 14.7414, -1.95543, 0.22 ) }
    dend_14 { pt3dadd( 15.7766, 15.5201, -2.11546, 0.29 ) }
    dend_14 { pt3dadd( 16.1448, 16.2841, -2.25711, 0.22 ) }
    dend_14 { pt3dadd( 16.6214, 17.1756, -2.41864, 0.15 ) }
    dend_14 { pt3dadd( 16.9287, 17.7058, -2.52194, 0.29 ) }
    dend_14 { pt3dadd( 17.2286, 18.2036, -2.63161, 0.44 ) }
    dend_14 { pt3dadd( 17.4685, 18.5655, -2.70837, 0.59 ) }
    dend_14 { pt3dadd( 17.8481, 19.094, -2.82454, 0.74 ) }
    dend_14 { pt3dadd( 18.7682, 20.3225, -3.07547, 0.15 ) }
    dend_14 { pt3dadd( 19.1389, 20.7829, -3.14049, 0.15 ) }
    dend_14 { pt3dadd( 19.469, 21.1864, -3.18397, 0.22 ) }
    dend_14 { pt3dadd( 19.7103, 21.4716, -3.19857, 0.44 ) }
    dend_14 { pt3dadd( 20.2806, 22.1023, -3.18756, 0.66 ) }
    dend_14 { pt3dadd( 21.0109, 22.8839, -3.15619, 0.07 ) }
    dend_14 { pt3dadd( 21.7335, 23.6682, -3.11366, 0.07 ) }
    dend_14 { pt3dadd( 22.2051, 24.1698, -3.08768, 0.44 ) }
    dend_14 { pt3dadd( 22.6916, 24.6547, -3.0881, 0.44 ) }
    dend_14 { pt3dadd( 23.3155, 25.2137, -3.12356, 0.29 ) }
    dend_14 { pt3dadd( 24.0141, 25.759, -3.18887, 0.15 ) }
    dend_14 { pt3dadd( 24.4701, 26.0881, -3.2456, 0.15 ) }
    dend_14 { pt3dadd( 24.8277, 26.3344, -3.29833, 0.15 ) }
    dend_14 { pt3dadd( 25.5818, 26.866, -3.39266, 0.15 ) }
    dend_14 { pt3dadd( 26.1706, 27.3164, -3.47547, 0.22 ) }
    dend_14 { pt3dadd( 26.7676, 27.7922, -3.57513, 0.29 ) }
    dend_14 { pt3dadd( 27.1716, 28.1241, -3.65189, 0.29 ) }
    dend_14 { pt3dadd( 27.5332, 28.4392, -3.74141, 0.52 ) }
    dend_14 { pt3dadd( 27.8868, 28.7744, -3.85362, 0.59 ) }
    dend_14 { pt3dadd( 28.4281, 29.3638, -4.09378, 0.15 ) }
    dend_14 { pt3dadd( 28.9676, 29.9896, -4.42875, 0.15 ) }
    dend_14 { pt3dadd( 29.3105, 30.3816, -4.69678, 0.15 ) }
    dend_14 { pt3dadd( 29.6703, 30.7617, -4.99581, 0.15 ) }
    dend_14 { pt3dadd( 29.9219, 31.0131, -5.20951, 0.59 ) }
    dend_14 { pt3dadd( 30.4861, 31.5606, -5.68949, 0.07 ) }
    dend_14 { pt3dadd( 31.1032, 32.1614, -6.1938, 0.07 ) }
    dend_14 { pt3dadd( 31.5763, 32.6662, -6.56641, 0.07 ) }
    dend_14 { pt3dadd( 31.8004, 32.9197, -6.74363, 0.07 ) }
    dend_14 { pt3dadd( 32.2302, 33.4513, -7.08819, 0.07 ) }
    dend_14 { pt3dadd( 32.425, 33.719, -7.23819, 0.22 ) }
    dend_14 { pt3dadd( 32.679, 34.0909, -7.40367, 0.29 ) }
    dend_14 { pt3dadd( 33.169, 34.8563, -7.66375, 0.07 ) }
    dend_14 { pt3dadd( 33.4587, 35.2896, -7.77378, 0.07 ) }
    dend_14 { pt3dadd( 33.6273, 35.517, -7.81669, 0.22 ) }
    dend_14 { pt3dadd( 33.8657, 35.8111, -7.84945, 0.22 ) }
    dend_14 { pt3dadd( 34.0852, 36.0593, -7.86933, 0.22 ) }
    dend_14 { pt3dadd( 34.6641, 36.6851, -7.89271, 0.07 ) }
    dend_14 { pt3dadd( 35.3174, 37.4027, -7.89856, 0.22 ) }
    dend_14 { pt3dadd( 35.94, 38.1474, -7.90801, 0.07 ) }
    dend_14 { pt3dadd( 36.3591, 38.6863, -7.92266, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_14 { pt3dadd( 36.5807, 38.9831, -7.93829, 0.22 ) }
    dend_14 { pt3dadd( 37.0261, 39.5965, -7.97615, 0.37 ) }
    dend_14 { pt3dadd( 37.4954, 40.2373, -8.01751, 0.29 ) }
    dend_14 { pt3dadd( 37.7404, 40.5645, -8.04816, 0.29 ) }
    dend_14 { pt3dadd( 38.353, 41.3457, -8.12872, 0.07 ) }
    dend_14 { pt3dadd( 38.9378, 42.0291, -8.2071, 0.07 ) }
    dend_14 { pt3dadd( 39.4533, 42.5966, -8.23608, 0.07 ) }
    dend_14 { pt3dadd( 39.9432, 43.1016, -8.24159, 0.15 ) }
    dend_14 { pt3dadd( 40.236, 43.3864, -8.23052, 0.37 ) }
    dend_14 { pt3dadd( 40.6615, 43.7901, -8.19814, 0.66 ) }
    dend_14 { pt3dadd( 41.4297, 44.5272, -8.11219, 0.15 ) }
    dend_14 { pt3dadd( 42.1225, 45.227, -8.02201, 0.15 ) }
    dend_14 { pt3dadd( 42.7511, 45.8992, -7.94122, 0.22 ) }
    dend_14 { pt3dadd( 42.9552, 46.1223, -7.91562, 0.15 ) }
    dend_14 { pt3dadd( 43.2596, 46.4541, -7.87448, 0.22 ) }
    dend_14 { pt3dadd( 43.587, 46.81, -7.83566, 0.15 ) }
    dend_14 { pt3dadd( 43.954, 47.2165, -7.80023, 0.15 ) }
    dend_14 { pt3dadd( 44.329, 47.6314, -7.82739, 0.37 ) }
    dend_14 { pt3dadd( 44.6487, 47.9929, -7.84659, 0.52 ) }
    dend_14 { pt3dadd( 49.6625, 54.5159, -9.71834, 0.52 ) }
    dend_14 { pt3dadd( 54.7794, 60.648, -12.3309, 0.52 ) }
    dend_14 { pt3dadd( 58.5211, 67.1531, -16.1185, 0.52 ) }
    dend_14 { pt3dadd( 62.4458, 73.6003, -19.8144, 0.52 ) }
    dend_14 { pt3dadd( 67.2072, 80.1266, -22.2189, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.7093, 1.92633, -7.91092, 0.74 ) }
    dend_9 { pt3dadd( -12.3476, 1.00453, -8.60696, 0.74 ) }
    dend_9 { pt3dadd( -11.9503, 0.040033, -9.51261, 0.37 ) }
    dend_9 { pt3dadd( -11.6442, -0.78414, -10.4766, 0.22 ) }
    dend_9 { pt3dadd( -11.4768, -1.30313, -11.1814, 0.22 ) }
    dend_9 { pt3dadd( -11.387, -1.62557, -11.674, 0.22 ) }
    dend_9 { pt3dadd( -11.3354, -1.83414, -12.0123, 0.22 ) }
    dend_9 { pt3dadd( -11.2651, -2.21892, -12.8933, 0.22 ) }
    dend_9 { pt3dadd( -11.3104, -2.55378, -13.7801, 0.22 ) }
    dend_9 { pt3dadd( -11.4095, -2.7461, -14.2703, 0.29 ) }
    dend_9 { pt3dadd( -11.5921, -3.04098, -14.9259, 0.29 ) }
    dend_9 { pt3dadd( -11.6167, -3.08009, -15.0014, 0.29 ) }
    dend_9 { pt3dadd( -11.861, -3.50948, -15.7224, 0.29 ) }
    dend_9 { pt3dadd( -12.1871, -4.1483, -16.6898, 0.22 ) }
    dend_9 { pt3dadd( -12.4452, -4.64864, -17.458, 0.22 ) }
    dend_9 { pt3dadd( -12.6054, -4.91442, -17.8934, 0.22 ) }
    dend_9 { pt3dadd( -12.741, -5.13636, -18.2697, 0.22 ) }
    dend_9 { pt3dadd( -12.8954, -5.40799, -18.7493, 0.22 ) }
    dend_9 { pt3dadd( -13.0733, -5.77402, -19.4233, 0.44 ) }
    dend_9 { pt3dadd( -13.2041, -6.10897, -20.0735, 0.44 ) }
    dend_9 { pt3dadd( -13.4579, -6.79945, -21.4112, 0.15 ) }
    dend_9 { pt3dadd( -13.5867, -7.18345, -22.1001, 0.15 ) }
    dend_9 { pt3dadd( -13.6631, -7.4447, -22.4972, 0.29 ) }
    dend_9 { pt3dadd( -13.7455, -7.79313, -22.9345, 0.29 ) }
    dend_9 { pt3dadd( -13.7657, -7.91898, -23.0679, 0.29 ) }
    dend_9 { pt3dadd( -13.8122, -8.59766, -23.6988, 0.29 ) }
    dend_9 { pt3dadd( -13.7915, -9.46102, -24.4357, 0.07 ) }
    dend_9 { pt3dadd( -13.783, -10.4181, -25.212, 0.07 ) }
    dend_9 { pt3dadd( -13.7858, -11.1173, -25.753, 0.07 ) }
    dend_9 { pt3dadd( -13.7938, -11.9338, -26.3569, 0.07 ) }
    dend_9 { pt3dadd( -13.7877, -12.4374, -26.7181, 0.52 ) }
    dend_9 { pt3dadd( -13.7363, -13.1104, -27.146, 0.66 ) }
    dend_9 { pt3dadd( -15.4568, -20.5064, -35.9627, 0.66 ) }
    dend_9 { pt3dadd( -17.5901, -28.0724, -44.5566, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 58/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -12.7093, 1.92633, -7.91092, 0.37 ) }
    dend_4 { pt3dadd( -13.1477, 2.6031, -8.36226, 0.37 ) }
    dend_4 { pt3dadd( -13.5986, 3.12765, -8.83654, 0.37 ) }
    dend_4 { pt3dadd( -13.8437, 3.35106, -9.06209, 0.37 ) }
    dend_4 { pt3dadd( -14.195, 3.61526, -9.35449, 0.59 ) }
    dend_4 { pt3dadd( -14.5901, 3.87513, -9.65661, 0.59 ) }
    dend_4 { pt3dadd( -15.3354, 4.32369, -10.1831, 0.29 ) }
    dend_4 { pt3dadd( -16.2934, 4.8493, -10.848, 0.22 ) }
    dend_4 { pt3dadd( -17.1757, 5.27117, -11.4232, 0.22 ) }
    dend_4 { pt3dadd( -17.9938, 5.61258, -11.9375, 0.37 ) }
    dend_4 { pt3dadd( -18.5033, 5.79632, -12.2453, 0.96 ) }
    dend_4 { pt3dadd( -19.1863, 6.01412, -12.6229, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 70/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.54376, 15.7264, -8.40249, 0.29 ) }
    dend_2 { pt3dadd( -0.74559, 17.0687, -8.32615, 0.29 ) }
    dend_2 { pt3dadd( -0.94062, 18.1416, -8.21404, 0.15 ) }
    dend_2 { pt3dadd( -1.1168, 19.0649, -8.06994, 0.15 ) }
    dend_2 { pt3dadd( -1.28369, 19.8621, -7.92019, 0.37 ) }
    dend_2 { pt3dadd( -1.39598, 20.3938, -7.79678, 0.37 ) }
    dend_2 { pt3dadd( -1.55175, 21.0965, -7.62134, 0.22 ) }
    dend_2 { pt3dadd( -1.76343, 21.9622, -7.37228, 0.22 ) }
    dend_2 { pt3dadd( -1.91385, 22.5367, -7.20006, 0.22 ) }
    dend_2 { pt3dadd( -2.09635, 23.2772, -6.97049, 0.22 ) }
    dend_2 { pt3dadd( -2.2837, 24.0816, -6.70386, 0.22 ) }
    dend_2 { pt3dadd( -2.46435, 24.7995, -6.47011, 0.22 ) }
    dend_2 { pt3dadd( -2.75261, 25.7576, -6.15866, 0.22 ) }
    dend_2 { pt3dadd( -2.89572, 26.1211, -6.05726, 0.22 ) }
    dend_2 { pt3dadd( -3.11252, 26.5794, -5.96288, 0.22 ) }
    dend_2 { pt3dadd( -3.4097, 27.1313, -5.882, 0.22 ) }
    dend_2 { pt3dadd( -3.82726, 27.9178, -5.84652, 0.22 ) }
    dend_2 { pt3dadd( -4.15623, 28.6383, -5.88215, 0.22 ) }
    dend_2 { pt3dadd( -4.60745, 29.7594, -6.05192, 0.29 ) }
    dend_2 { pt3dadd( -4.90764, 30.614, -6.24147, 0.29 ) }
    dend_2 { pt3dadd( -5.19387, 31.5199, -6.49075, 0.88 ) }
    dend_2 { pt3dadd( -5.68562, 33.0268, -7.00293, 0.44 ) }
    dend_2 { pt3dadd( -6.21514, 34.5773, -7.61916, 0.22 ) }
    dend_2 { pt3dadd( -6.50204, 35.3583, -7.98081, 0.22 ) }
    dend_2 { pt3dadd( -6.65508, 35.7227, -8.17138, 0.29 ) }
    dend_2 { pt3dadd( -7.18344, 36.7313, -8.74225, 0.37 ) }
    dend_2 { pt3dadd( -7.89683, 37.7113, -9.39732, 0.22 ) }
    dend_2 { pt3dadd( -8.56531, 38.3373, -9.87916, 0.22 ) }
    dend_2 { pt3dadd( -9.05134, 38.6963, -10.1616, 0.22 ) }
    dend_2 { pt3dadd( -9.82237, 39.2246, -10.5471, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( -10.5226, 39.6672, -10.8717, 0.22 ) }
    dend_2 { pt3dadd( -11.4404, 40.2269, -11.2563, 0.22 ) }
    dend_2 { pt3dadd( -12.1226, 40.6534, -11.5063, 0.37 ) }
    dend_2 { pt3dadd( -13.019, 41.228, -11.8536, 0.37 ) }
    dend_2 { pt3dadd( -13.8236, 41.7738, -12.1876, 0.22 ) }
    dend_2 { pt3dadd( -15.0475, 42.6555, -12.7576, 0.22 ) }
    dend_2 { pt3dadd( -15.8077, 43.2862, -13.1743, 0.52 ) }
    dend_2 { pt3dadd( -16.2132, 43.689, -13.4495, 0.59 ) }
    dend_2 { pt3dadd( -17.0478, 44.7158, -14.1448, 0.22 ) }
    dend_2 { pt3dadd( -17.3025, 45.128, -14.4182, 0.15 ) }
    dend_2 { pt3dadd( -17.6538, 45.8838, -14.925, 0.15 ) }
    dend_2 { pt3dadd( -17.8829, 46.5605, -15.3705, 0.22 ) }
    dend_2 { pt3dadd( -18.0875, 47.3229, -15.8841, 0.29 ) }
    dend_2 { pt3dadd( -18.3033, 48.3641, -16.5764, 0.44 ) }
    dend_2 { pt3dadd( -18.4294, 49.297, -17.2123, 0.22 ) }
    dend_2 { pt3dadd( -18.504, 50.8055, -18.3485, 0.07 ) }
    dend_2 { pt3dadd( -18.4898, 51.127, -18.626, 0.07 ) }
    dend_2 { pt3dadd( -18.4379, 51.648, -19.1325, 0.07 ) }
    dend_2 { pt3dadd( -18.4003, 52.0554, -19.5426, 0.15 ) }
    dend_2 { pt3dadd( -18.3839, 52.7754, -20.3416, 0.22 ) }
    dend_2 { pt3dadd( -18.4169, 53.2796, -20.8741, 0.37 ) }
    dend_2 { pt3dadd( -18.5369, 54.0646, -21.6176, 0.52 ) }
    dend_2 { pt3dadd( -18.6303, 54.4814, -21.9859, 0.52 ) }
    dend_2 { pt3dadd( -18.887, 55.4008, -22.7086, 0.22 ) }
    dend_2 { pt3dadd( -19.2437, 56.4559, -23.4851, 0.15 ) }
    dend_2 { pt3dadd( -19.556, 57.2464, -24.0425, 0.29 ) }
    dend_2 { pt3dadd( -20.153, 58.6671, -25.0713, 0.15 ) }
    dend_2 { pt3dadd( -20.4663, 59.4104, -25.6198, 0.15 ) }
    dend_2 { pt3dadd( -20.7257, 60.0524, -26.129, 0.29 ) }
    dend_2 { pt3dadd( -21.0352, 60.8651, -26.7878, 0.29 ) }
    dend_2 { pt3dadd( -21.4414, 61.8535, -27.5312, 0.15 ) }
    dend_2 { pt3dadd( -21.6726, 62.299, -27.8554, 0.15 ) }
    dend_2 { pt3dadd( -21.9485, 62.692, -28.1194, 0.29 ) }
    dend_2 { pt3dadd( -22.4998, 63.3763, -28.542, 0.52 ) }
    dend_2 { pt3dadd( -22.991, 63.9918, -28.8989, 0.22 ) }
    dend_2 { pt3dadd( -23.763, 65.0238, -29.4215, 0.15 ) }
    dend_2 { pt3dadd( -24.2864, 65.7675, -29.7804, 0.15 ) }
    dend_2 { pt3dadd( -24.902, 66.6637, -30.2158, 0.15 ) }
    dend_2 { pt3dadd( -25.4689, 67.5738, -30.6905, 0.15 ) }
    dend_2 { pt3dadd( -25.8461, 68.2477, -31.0579, 0.15 ) }
    dend_2 { pt3dadd( -26.1833, 68.9293, -31.459, 0.15 ) }
    dend_2 { pt3dadd( -26.5879, 69.782, -31.9903, 0.15 ) }
    dend_2 { pt3dadd( -26.8077, 70.2399, -32.2876, 0.15 ) }
    dend_2 { pt3dadd( -27.4356, 71.4854, -33.1044, 0.15 ) }
    dend_2 { pt3dadd( -27.7537, 72.0614, -33.4795, 0.15 ) }
    dend_2 { pt3dadd( -28.1141, 72.6679, -33.8557, 0.29 ) }
    dend_2 { pt3dadd( -28.7394, 73.6756, -34.4637, 0.07 ) }
    dend_2 { pt3dadd( -29.2695, 74.5036, -34.962, 0.07 ) }
    dend_2 { pt3dadd( -29.5021, 74.874, -35.1867, 0.07 ) }
    dend_2 { pt3dadd( -29.8477, 75.4573, -35.5589, 0.37 ) }
    dend_2 { pt3dadd( -30.0316, 75.8548, -35.8047, 0.37 ) }
    dend_2 { pt3dadd( -30.294, 76.6048, -36.2631, 0.15 ) }
    dend_2 { pt3dadd( -30.5615, 77.5834, -36.8284, 0.15 ) }
    dend_2 { pt3dadd( -30.703, 78.1022, -37.1093, 0.29 ) }
    dend_2 { pt3dadd( -30.9488, 79.0239, -37.5924, 0.29 ) }
    dend_2 { pt3dadd( -31.3167, 80.6339, -38.3522, 0.07 ) }
    dend_2 { pt3dadd( -31.4642, 81.3178, -38.6263, 0.07 ) }
    dend_2 { pt3dadd( -31.6614, 82.1798, -38.9404, 0.22 ) }
    dend_2 { pt3dadd( -31.8981, 82.9838, -39.2056, 0.37 ) }
    dend_2 { pt3dadd( -32.0764, 83.4338, -39.3484, 0.15 ) }
    dend_2 { pt3dadd( -32.6038, 84.4934, -39.6915, 0.15 ) }
    dend_2 { pt3dadd( -33.1241, 85.3886, -40.0092, 0.15 ) }
    dend_2 { pt3dadd( -33.6675, 86.2687, -40.3522, 0.15 ) }
    dend_2 { pt3dadd( -34.046, 86.8839, -40.6117, 0.15 ) }
    dend_2 { pt3dadd( -34.3589, 87.4414, -40.852, 0.37 ) }
    dend_2 { pt3dadd( -34.6762, 88.0643, -41.1063, 0.37 ) }
    dend_2 { pt3dadd( -34.9442, 88.6582, -41.3384, 0.07 ) }
    dend_2 { pt3dadd( -35.2859, 89.5927, -41.6753, 0.07 ) }
    dend_2 { pt3dadd( -35.6396, 90.7139, -42.0536, 0.15 ) }
    dend_2 { pt3dadd( -35.9013, 91.6333, -42.3793, 0.15 ) }
    dend_2 { pt3dadd( -36.1315, 92.5398, -42.6917, 0.15 ) }
    dend_2 { pt3dadd( -36.2642, 93.1107, -42.8723, 0.37 ) }
    dend_2 { pt3dadd( -36.3915, 93.7253, -43.0585, 0.37 ) }
    dend_2 { pt3dadd( -36.5848, 94.7955, -43.3595, 0.07 ) }
    dend_2 { pt3dadd( -36.7792, 96.0101, -43.6622, 0.07 ) }
    dend_2 { pt3dadd( -36.9324, 97.0519, -43.8661, 0.07 ) }
    dend_2 { pt3dadd( -37.0679, 98.0973, -44.0301, 0.07 ) }
    dend_2 { pt3dadd( -37.1702, 99.0642, -44.1423, 0.29 ) }
    dend_2 { pt3dadd( -37.194, 99.3368, -44.1648, 0.29 ) }
    dend_2 { pt3dadd( -37.3349, 101.321, -44.2537, 0.07 ) }
    dend_2 { pt3dadd( -37.4544, 102.883, -44.2859, 0.07 ) }
    dend_2 { pt3dadd( -37.5419, 103.76, -44.3081, 0.07 ) }
    dend_2 { pt3dadd( -37.6429, 104.714, -44.3367, 0.22 ) }
    dend_2 { pt3dadd( -42.85, 115.37, -49.2458, 0.22 ) }
    dend_2 { pt3dadd( -49.0086, 125.024, -54.8823, 0.22 ) }
    dend_2 { pt3dadd( -54.1535, 135.216, -60.6684, 0.22 ) }
    dend_2 { pt3dadd( -58.8075, 144.941, -67.4995, 0.22 ) }
    dend_2 { pt3dadd( -61.2787, 154.849, -75.1666, 0.22 ) }
    dend_2 { pt3dadd( -64.1977, 162.944, -84.4393, 0.22 ) }
    dend_2 { pt3dadd( -65.6828, 170.873, -94.166, 0.22 ) }
    dend_2 { pt3dadd( -67.4888, 178.623, -103.97, 0.22 ) }
    dend_2 { pt3dadd( -68.6532, 184.492, -114.98, 0.22 ) }
    dend_2 { pt3dadd( -68.9101, 190.663, -125.896, 0.22 ) }
    dend_2 { pt3dadd( -70.8132, 197.385, -136.348, 0.22 ) }
    dend_2 { pt3dadd( -73.105, 204.189, -146.675, 0.22 ) }
    dend_2 { pt3dadd( -74.3018, 211.125, -157.103, 0.22 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 96/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.54376, 15.7264, -8.40249, 0.22 ) }
    dend_1 { pt3dadd( -0.0594689, 15.5502, -9.27281, 0.22 ) }
    dend_1 { pt3dadd( 0.399524, 15.4473, -9.99815, 0.22 ) }
    dend_1 { pt3dadd( 1.26243, 15.3558, -11.1961, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_1 { pt3dadd( 1.87402, 15.3573, -11.9963, 0.22 ) }
    dend_1 { pt3dadd( 2.53973, 15.4244, -12.8555, 0.15 ) }
    dend_1 { pt3dadd( 3.07099, 15.5111, -13.547, 0.15 ) }
    dend_1 { pt3dadd( 3.55402, 15.6649, -14.1981, 0.52 ) }
    dend_1 { pt3dadd( 4.15059, 15.9228, -14.9754, 0.22 ) }
    dend_1 { pt3dadd( 4.63458, 16.1865, -15.5907, 0.22 ) }
    dend_1 { pt3dadd( 4.95857, 16.3517, -16.0442, 0.22 ) }
    dend_1 { pt3dadd( 5.08504, 16.4087, -16.2566, 0.22 ) }
    dend_1 { pt3dadd( 5.3674, 16.5479, -16.8831, 0.22 ) }
    dend_1 { pt3dadd( 5.5057, 16.6477, -17.2782, 0.22 ) }
    dend_1 { pt3dadd( 5.77714, 16.8822, -18.1218, 0.22 ) }
    dend_1 { pt3dadd( 6.24641, 17.2445, -19.3893, 0.22 ) }
    dend_1 { pt3dadd( 6.49813, 17.4177, -20.0013, 0.22 ) }
    dend_1 { pt3dadd( 6.8551, 17.6114, -20.8322, 0.22 ) }
    dend_1 { pt3dadd( 7.16928, 17.7446, -21.5567, 0.22 ) }
    dend_1 { pt3dadd( 7.47855, 17.8194, -22.274, 0.22 ) }
    dend_1 { pt3dadd( 7.84835, 17.8143, -23.1041, 0.15 ) }
    dend_1 { pt3dadd( 8.26804, 17.7036, -23.8395, 0.15 ) }
    dend_1 { pt3dadd( 8.95935, 17.4483, -24.8288, 0.15 ) }
    dend_1 { pt3dadd( 9.27317, 17.3322, -25.2086, 0.15 ) }
    dend_1 { pt3dadd( 9.85476, 17.1452, -25.872, 0.15 ) }
    dend_1 { pt3dadd( 10.3008, 17.0815, -26.3168, 0.15 ) }
    dend_1 { pt3dadd( 10.9393, 17.0938, -26.9041, 0.15 ) }
    dend_1 { pt3dadd( 11.3479, 17.1484, -27.2582, 0.29 ) }
    dend_1 { pt3dadd( 11.9304, 17.2637, -27.7716, 0.59 ) }
    dend_1 { pt3dadd( 12.6174, 17.3824, -28.4068, 0.44 ) }
    dend_1 { pt3dadd( 13.374, 17.4466, -29.2095, 0.07 ) }
    dend_1 { pt3dadd( 13.8417, 17.3932, -29.8058, 0.07 ) }
    dend_1 { pt3dadd( 14.1096, 17.2988, -30.2038, 0.22 ) }
    dend_1 { pt3dadd( 14.5317, 17.0834, -30.8907, 0.44 ) }
    dend_1 { pt3dadd( 14.7903, 16.9309, -31.3355, 0.22 ) }
    dend_1 { pt3dadd( 15.2536, 16.6627, -32.1039, 0.52 ) }
    dend_1 { pt3dadd( 15.8935, 16.3274, -33.1567, 0.15 ) }
    dend_1 { pt3dadd( 16.6361, 16.0235, -34.3175, 0.15 ) }
    dend_1 { pt3dadd( 16.9648, 15.9257, -34.7574, 0.22 ) }
    dend_1 { pt3dadd( 17.5251, 15.8383, -35.3797, 0.29 ) }
    dend_1 { pt3dadd( 18.656, 15.8199, -36.4295, 0.07 ) }
    dend_1 { pt3dadd( 19.2042, 15.878, -36.8487, 0.07 ) }
    dend_1 { pt3dadd( 19.6506, 15.9694, -37.1217, 0.07 ) }
    dend_1 { pt3dadd( 20.9037, 16.3286, -37.7872, 0.15 ) }
    dend_1 { pt3dadd( 22.2933, 16.7607, -38.4773, 0.15 ) }
    dend_1 { pt3dadd( 23.2612, 17.0978, -38.9325, 0.15 ) }
    dend_1 { pt3dadd( 24.2186, 17.505, -39.365, 0.15 ) }
    dend_1 { pt3dadd( 25.2805, 17.9851, -39.8485, 0.15 ) }
    dend_1 { pt3dadd( 25.7831, 18.2332, -40.1016, 0.15 ) }
    dend_1 { pt3dadd( 32.7469, 17.737, -49.5384, 0.15 ) }
    dend_1 { pt3dadd( 38.4559, 16.4591, -59.7224, 0.15 ) }
    dend_1 { pt3dadd( 45.2571, 13.9864, -68.997, 0.15 ) }
    dend_1 { pt3dadd( 52.2691, 9.30852, -77.2948, 0.15 ) }
    dend_1 { pt3dadd( 59.4268, 4.69843, -85.5024, 0.15 ) }
    dend_1 { pt3dadd( 67.727, 1.76213, -93.3205, 0.15 ) }
    dend_1 { pt3dadd( 76.4695, -2.87993, -99.7941, 0.15 ) }
    dend_1 { pt3dadd( 86.9924, -5.28754, -104.468, 0.15 ) }
    dend_1 { pt3dadd( 97.4522, -6.58295, -109.651, 0.15 ) }
    dend_1 { pt3dadd( 108.793, -5.6305, -112.528, 0.15 ) }
    dend_1 { pt3dadd( 119.897, -6.33716, -116.274, 0.15 ) }
    dend_1 { pt3dadd( 131.392, -7.26993, -118.478, 0.15 ) }
    dend_1 { pt3dadd( 142.765, -9.86443, -120.028, 0.15 ) }
    dend_1 { pt3dadd( 153.832, -13.8817, -120.898, 0.15 ) }
    dend_1 { pt3dadd( 165.126, -16.3218, -123.102, 0.15 ) }
    dend_1 { pt3dadd( 175.619, -20.2878, -126.777, 0.15 ) }
    dend_1 { pt3dadd( 186.908, -22.6263, -129.105, 0.15 ) }
    dend_1 { pt3dadd( 198.455, -23.1182, -131.164, 0.15 ) }
    dend_1 { pt3dadd( 210.07, -22.8551, -132.83, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 64/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 35.7769, -13.6045, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 49.8139, -18.8925, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 63.8509, -24.1805, 0.0, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 67/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 16.9485, -20.8862, 12.6515, 0.44 ) }
    dend_42 { pt3dadd( 17.5863, -22.3415, 11.951, 0.44 ) }
    dend_42 { pt3dadd( 18.1706, -23.7405, 11.3558, 0.15 ) }
    dend_42 { pt3dadd( 18.5528, -24.693, 10.9869, 0.29 ) }
    dend_42 { pt3dadd( 19.0673, -26.0384, 10.5017, 0.29 ) }
    dend_42 { pt3dadd( 19.4816, -27.1195, 10.1312, 0.22 ) }
    dend_42 { pt3dadd( 19.7924, -27.9143, 9.86998, 0.22 ) }
    dend_42 { pt3dadd( 20.2668, -29.132, 9.53495, 0.29 ) }
    dend_42 { pt3dadd( 20.7172, -30.2421, 9.25975, 0.29 ) }
    dend_42 { pt3dadd( 21.1984, -31.407, 8.98471, 0.29 ) }
    dend_42 { pt3dadd( 21.5324, -32.1967, 8.79673, 0.22 ) }
    dend_42 { pt3dadd( 21.9455, -33.1394, 8.57718, 0.22 ) }
    dend_42 { pt3dadd( 22.2326, -33.7396, 8.44025, 0.22 ) }
    dend_42 { pt3dadd( 22.5789, -34.4247, 8.28404, 0.22 ) }
    dend_42 { pt3dadd( 22.9277, -35.0868, 8.14033, 0.22 ) }
    dend_42 { pt3dadd( 23.1295, -35.4325, 8.06969, 0.22 ) }
    dend_42 { pt3dadd( 23.572, -36.1347, 7.93712, 0.29 ) }
    dend_42 { pt3dadd( 24.1343, -36.9757, 7.81341, 0.29 ) }
    dend_42 { pt3dadd( 24.7804, -37.8825, 7.73974, 0.22 ) }
    dend_42 { pt3dadd( 25.1151, -38.3249, 7.7622, 0.22 ) }
    dend_42 { pt3dadd( 25.804, -39.1762, 7.94072, 0.29 ) }
    dend_42 { pt3dadd( 26.5555, -40.0623, 8.27364, 0.29 ) }
    dend_42 { pt3dadd( 26.9736, -40.5375, 8.50587, 0.29 ) }
    dend_42 { pt3dadd( 27.5655, -41.2179, 8.90385, 0.22 ) }
    dend_42 { pt3dadd( 28.4658, -42.2813, 9.55223, 0.37 ) }
    dend_42 { pt3dadd( 29.1892, -43.1581, 10.0897, 0.22 ) }
    dend_42 { pt3dadd( 30.0075, -44.1982, 10.7161, 0.15 ) }
    dend_42 { pt3dadd( 30.634, -45.0207, 11.1748, 0.22 ) }
    dend_42 { pt3dadd( 31.3003, -45.9251, 11.6, 0.22 ) }
    dend_42 { pt3dadd( 31.8637, -46.7511, 11.9235, 0.15 ) }
    dend_42 { pt3dadd( 32.404, -47.5761, 12.1857, 0.15 ) }
    dend_42 { pt3dadd( 32.8603, -48.2776, 12.3909, 0.15 ) }
    dend_42 { pt3dadd( 33.5231, -49.3285, 12.6894, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_42 { pt3dadd( 34.0729, -50.2045, 12.9569, 0.22 ) }
    dend_42 { pt3dadd( 34.816, -51.3504, 13.3151, 0.15 ) }
    dend_42 { pt3dadd( 35.6019, -52.5692, 13.7307, 0.15 ) }
    dend_42 { pt3dadd( 36.2352, -53.5935, 14.0636, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 16.9485, -20.8862, 12.6515, 0.22 ) }
    dend_41 { pt3dadd( 16.5793, -21.5755, 12.9523, 0.22 ) }
    dend_41 { pt3dadd( 16.2443, -22.2354, 13.2118, 0.22 ) }
    dend_41 { pt3dadd( 15.9996, -22.8252, 13.4497, 0.22 ) }
    dend_41 { pt3dadd( 15.8954, -23.1503, 13.5779, 0.29 ) }
    dend_41 { pt3dadd( 15.6269, -24.154, 13.9646, 0.22 ) }
    dend_41 { pt3dadd( 15.3851, -25.2001, 14.3266, 0.29 ) }
    dend_41 { pt3dadd( 15.2132, -26.1989, 14.6621, 0.22 ) }
    dend_41 { pt3dadd( 15.1134, -27.0717, 14.9017, 0.22 ) }
    dend_41 { pt3dadd( 15.0651, -27.7666, 15.0847, 0.22 ) }
    dend_41 { pt3dadd( 15.0528, -27.9825, 15.1457, 0.22 ) }
    dend_41 { pt3dadd( 15.0047, -29.0303, 15.4757, 0.15 ) }
    dend_41 { pt3dadd( 14.9705, -29.8135, 15.7696, 0.15 ) }
    dend_41 { pt3dadd( 14.9165, -30.5109, 16.0798, 0.59 ) }
    dend_41 { pt3dadd( 14.793, -31.7252, 16.7369, 0.22 ) }
    dend_41 { pt3dadd( 14.7192, -32.4159, 17.2143, 0.22 ) }
    dend_41 { pt3dadd( 14.6646, -33.0558, 17.72, 0.22 ) }
    dend_41 { pt3dadd( 14.6298, -33.5874, 18.2003, 0.37 ) }
    dend_41 { pt3dadd( 14.6034, -34.2909, 18.8837, 0.37 ) }
    dend_41 { pt3dadd( 14.623, -34.9266, 19.5432, 0.15 ) }
    dend_41 { pt3dadd( 14.7196, -35.8605, 20.5361, 0.15 ) }
    dend_41 { pt3dadd( 14.7692, -36.1966, 20.8958, 0.15 ) }
    dend_41 { pt3dadd( 14.8263, -36.6658, 21.3701, 0.15 ) }
    dend_41 { pt3dadd( 14.8587, -37.0783, 21.7566, 0.15 ) }
    dend_41 { pt3dadd( 14.8603, -37.6752, 22.245, 0.22 ) }
    dend_41 { pt3dadd( 14.7882, -38.455, 22.8133, 0.22 ) }
    dend_41 { pt3dadd( 14.7172, -38.8938, 23.1376, 0.22 ) }
    dend_41 { pt3dadd( 14.6113, -39.4862, 23.5971, 0.22 ) }
    dend_41 { pt3dadd( 14.4901, -40.2359, 24.2238, 0.22 ) }
    dend_41 { pt3dadd( 14.4381, -40.6221, 24.562, 0.29 ) }
    dend_41 { pt3dadd( 14.3508, -41.3585, 25.2518, 0.22 ) }
    dend_41 { pt3dadd( 14.306, -42.2838, 26.1724, 0.22 ) }
    dend_41 { pt3dadd( 14.3127, -42.7168, 26.6305, 0.07 ) }
    dend_41 { pt3dadd( 14.3819, -43.4758, 27.4308, 0.07 ) }
    dend_41 { pt3dadd( 14.4662, -44.2214, 28.1786, 0.07 ) }
    dend_41 { pt3dadd( 14.5653, -44.834, 28.7967, 0.15 ) }
    dend_41 { pt3dadd( 14.7165, -45.5456, 29.4787, 0.15 ) }
    dend_41 { pt3dadd( 14.8207, -45.9975, 29.8734, 0.15 ) }
    dend_41 { pt3dadd( 15.0007, -46.8079, 30.557, 0.07 ) }
    dend_41 { pt3dadd( 15.1901, -47.6538, 31.2059, 0.44 ) }
    dend_41 { pt3dadd( 15.45, -48.7898, 32.0604, 0.15 ) }
    dend_41 { pt3dadd( 15.6411, -49.5909, 32.67, 0.15 ) }
    dend_41 { pt3dadd( 15.7475, -50.118, 33.0789, 0.59 ) }
    dend_41 { pt3dadd( 15.8596, -50.8389, 33.6612, 0.59 ) }
    dend_41 { pt3dadd( 15.9147, -51.3981, 34.1328, 0.22 ) }
    dend_41 { pt3dadd( 15.9515, -52.1469, 34.759, 0.22 ) }
    dend_41 { pt3dadd( 15.9351, -53.1595, 35.583, 0.22 ) }
    dend_41 { pt3dadd( 15.8961, -53.8735, 36.1804, 0.22 ) }
    dend_41 { pt3dadd( 15.8737, -54.1463, 36.4134, 0.22 ) }
    dend_41 { pt3dadd( 15.8092, -54.8276, 36.9935, 0.15 ) }
    dend_41 { pt3dadd( 15.7472, -55.4404, 37.5202, 0.29 ) }
    dend_41 { pt3dadd( 15.7072, -55.9718, 37.968, 0.29 ) }
    dend_41 { pt3dadd( 15.6953, -56.2946, 38.2478, 0.29 ) }
    dend_41 { pt3dadd( 15.7037, -56.6714, 38.602, 0.29 ) }
    dend_41 { pt3dadd( 15.7337, -57.1642, 39.0721, 0.44 ) }
    dend_41 { pt3dadd( 15.7507, -57.6529, 39.5815, 0.59 ) }
    dend_41 { pt3dadd( 15.7567, -58.2288, 40.2021, 0.22 ) }
    dend_41 { pt3dadd( 15.7594, -58.9637, 40.9948, 0.22 ) }
    dend_41 { pt3dadd( 15.7542, -59.37, 41.4491, 0.22 ) }
    dend_41 { pt3dadd( 15.7404, -59.6668, 41.782, 0.22 ) }
    dend_41 { pt3dadd( 15.6286, -60.6162, 42.8441, 0.22 ) }
    dend_41 { pt3dadd( 15.5553, -61.0056, 43.2815, 0.22 ) }
    dend_41 { pt3dadd( 15.4642, -61.3558, 43.6639, 0.37 ) }
    dend_41 { pt3dadd( 15.1106, -62.4336, 44.8365, 0.15 ) }
    dend_41 { pt3dadd( 14.7391, -63.3718, 45.9296, 0.22 ) }
    dend_41 { pt3dadd( 14.395, -64.0788, 46.8156, 0.22 ) }
    dend_41 { pt3dadd( 14.117, -64.5809, 47.4873, 0.22 ) }
    dend_41 { pt3dadd( 13.9011, -64.9197, 47.9979, 0.22 ) }
    dend_41 { pt3dadd( 13.6833, -65.2197, 48.5144, 0.22 ) }
    dend_41 { pt3dadd( 12.81, -66.2938, 50.6224, 0.15 ) }
    dend_41 { pt3dadd( 12.5746, -66.5614, 51.2474, 0.15 ) }
    dend_41 { pt3dadd( 12.4334, -66.733, 51.6982, 0.22 ) }
    dend_41 { pt3dadd( 12.2689, -66.9886, 52.401, 0.22 ) }
    dend_41 { pt3dadd( 12.1716, -67.2175, 52.9541, 0.22 ) }
    dend_41 { pt3dadd( 12.1413, -67.3285, 53.1691, 0.22 ) }
    dend_41 { pt3dadd( 12.0175, -67.9659, 54.0735, 0.22 ) }
    dend_41 { pt3dadd( 11.9205, -68.5587, 54.7692, 0.22 ) }
    dend_41 { pt3dadd( 11.7001, -69.8448, 56.0678, 0.07 ) }
    dend_41 { pt3dadd( 11.5128, -70.9089, 56.9933, 0.07 ) }
    dend_41 { pt3dadd( 11.4011, -71.5597, 57.4859, 0.22 ) }
    dend_41 { pt3dadd( 11.1153, -73.3252, 58.6332, 0.15 ) }
    dend_41 { pt3dadd( 11.0219, -73.9699, 58.961, 0.29 ) }
    dend_41 { pt3dadd( 10.9637, -74.3914, 59.1184, 0.29 ) }
    dend_41 { pt3dadd( 10.8136, -75.4831, 59.4159, 0.15 ) }
    dend_41 { pt3dadd( 10.695, -76.2887, 59.5925, 0.15 ) }
    dend_41 { pt3dadd( 10.5877, -76.9761, 59.7127, 0.37 ) }
    dend_41 { pt3dadd( 10.4312, -77.9321, 59.8342, 0.44 ) }
    dend_41 { pt3dadd( 10.2353, -79.0505, 59.9764, 0.15 ) }
    dend_41 { pt3dadd( 10.0437, -80.1186, 60.1202, 0.15 ) }
    dend_41 { pt3dadd( 9.8744, -81.0363, 60.2832, 0.15 ) }
    dend_41 { pt3dadd( 9.72862, -81.7834, 60.4705, 0.22 ) }
    dend_41 { pt3dadd( 9.57383, -82.5942, 60.7327, 0.22 ) }
    dend_41 { pt3dadd( 9.37438, -83.7195, 61.1568, 0.15 ) }
    dend_41 { pt3dadd( 9.29191, -84.2451, 61.3721, 0.22 ) }
    dend_41 { pt3dadd( 9.13967, -85.4865, 61.9515, 0.07 ) }
    dend_41 { pt3dadd( 9.0434, -86.6982, 62.5507, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_41 { pt3dadd( 9.00286, -87.6556, 63.0144, 0.07 ) }
    dend_41 { pt3dadd( 9.00525, -87.8126, 63.081, 0.07 ) }
    dend_41 { pt3dadd( 9.06706, -88.5208, 63.3337, 0.15 ) }
    dend_41 { pt3dadd( 9.37629, -90.4843, 63.88, 0.15 ) }
    dend_41 { pt3dadd( 9.57526, -91.3856, 64.069, 0.15 ) }
    dend_41 { pt3dadd( 9.75955, -92.0841, 64.1843, 0.59 ) }
    dend_41 { pt3dadd( 10.0934, -93.2422, 64.3851, 0.07 ) }
    dend_41 { pt3dadd( 10.2862, -93.8878, 64.5111, 0.22 ) }
    dend_41 { pt3dadd( 10.6587, -94.9923, 64.7524, 0.07 ) }
    dend_41 { pt3dadd( 10.9484, -95.7394, 64.9283, 0.07 ) }
    dend_41 { pt3dadd( 11.3076, -96.565, 65.1774, 0.22 ) }
    dend_41 { pt3dadd( 11.856, -97.696, 65.5846, 0.07 ) }
    dend_41 { pt3dadd( 12.2002, -98.374, 65.8617, 0.07 ) }
    dend_41 { pt3dadd( 12.5795, -99.0967, 66.1558, 0.15 ) }
    dend_41 { pt3dadd( 13.0028, -99.8809, 66.465, 0.07 ) }
    dend_41 { pt3dadd( 13.3996, -100.636, 66.79, 0.22 ) }
    dend_41 { pt3dadd( 14.0349, -101.824, 67.3275, 0.07 ) }
    dend_41 { pt3dadd( 14.6299, -102.95, 67.8238, 0.07 ) }
    dend_41 { pt3dadd( 14.9992, -103.676, 68.1273, 0.07 ) }
    dend_41 { pt3dadd( 15.4756, -104.679, 68.5234, 0.15 ) }
    dend_41 { pt3dadd( 16.0015, -105.848, 68.964, 0.15 ) }
    dend_41 { pt3dadd( 16.5669, -107.199, 69.4406, 0.07 ) }
    dend_41 { pt3dadd( 17.025, -108.323, 69.7762, 0.07 ) }
    dend_41 { pt3dadd( 17.3227, -109.113, 69.9613, 0.07 ) }
    dend_41 { pt3dadd( 17.4506, -109.49, 70.0289, 0.29 ) }
    dend_41 { pt3dadd( 17.766, -110.465, 70.1504, 0.29 ) }
    dend_41 { pt3dadd( 18.1438, -111.711, 70.2515, 0.07 ) }
    dend_41 { pt3dadd( 18.5024, -112.94, 70.3483, 0.07 ) }
    dend_41 { pt3dadd( 18.8947, -114.232, 70.4453, 0.07 ) }
    dend_41 { pt3dadd( 19.251, -115.375, 70.526, 0.07 ) }
    dend_41 { pt3dadd( 19.6097, -116.495, 70.5075, 0.07 ) }
    dend_41 { pt3dadd( 19.7732, -116.998, 70.4581, 0.66 ) }
    dend_41 { pt3dadd( 20.3691, -118.839, 70.1475, 0.07 ) }
    dend_41 { pt3dadd( 20.7389, -120.086, 69.8183, 0.07 ) }
    dend_41 { pt3dadd( 21.1051, -121.618, 69.2186, 0.07 ) }
    dend_41 { pt3dadd( 21.4963, -123.838, 68.0858, 0.07 ) }
    dend_41 { pt3dadd( 21.5539, -124.312, 67.7978, 0.07 ) }
    dend_41 { pt3dadd( 21.5906, -124.78, 67.4776, 0.29 ) }
    dend_41 { pt3dadd( 21.6112, -126.063, 66.5111, 0.07 ) }
    dend_41 { pt3dadd( 21.6053, -127.53, 65.3788, 0.07 ) }
    dend_41 { pt3dadd( 21.6042, -127.932, 65.0962, 0.07 ) }
    dend_41 { pt3dadd( 21.6132, -128.611, 64.7046, 0.22 ) }
    dend_41 { pt3dadd( 21.6221, -128.971, 64.5026, 0.22 ) }
    dend_41 { pt3dadd( 21.6911, -130.538, 63.6779, 0.07 ) }
    dend_41 { pt3dadd( 21.7729, -131.641, 63.1782, 0.07 ) }
    dend_41 { pt3dadd( 21.9461, -133.329, 62.4698, 0.07 ) }
    dend_41 { pt3dadd( 22.0352, -134.184, 62.1066, 0.07 ) }
    // Section: dend_34, id: dend_34, parent: dend_22 (entry count 47/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 22.2834, -33.2063, 4.27213, 0.22 ) }
    dend_34 { pt3dadd( 22.2621, -33.6425, 5.54451, 0.22 ) }
    dend_34 { pt3dadd( 22.2704, -33.9508, 6.64225, 0.22 ) }
    dend_34 { pt3dadd( 22.2614, -34.1852, 7.80171, 0.22 ) }
    dend_34 { pt3dadd( 22.2248, -34.2827, 8.39354, 0.22 ) }
    dend_34 { pt3dadd( 22.2061, -34.3469, 8.73705, 0.22 ) }
    dend_34 { pt3dadd( 22.1729, -34.5376, 9.60382, 0.22 ) }
    dend_34 { pt3dadd( 22.1668, -34.6172, 9.94222, 0.22 ) }
    dend_34 { pt3dadd( 22.1652, -34.8765, 10.8178, 0.22 ) }
    dend_34 { pt3dadd( 22.1284, -35.4975, 12.5215, 0.22 ) }
    dend_34 { pt3dadd( 22.0535, -35.8986, 13.466, 0.22 ) }
    dend_34 { pt3dadd( 21.9506, -36.2448, 14.196, 0.22 ) }
    dend_34 { pt3dadd( 21.8734, -36.4896, 14.6528, 0.22 ) }
    dend_34 { pt3dadd( 21.7395, -37.004, 15.5369, 0.22 ) }
    dend_34 { pt3dadd( 21.6699, -37.4341, 16.1946, 0.22 ) }
    dend_34 { pt3dadd( 21.6556, -37.9505, 16.9351, 0.22 ) }
    dend_34 { pt3dadd( 21.6566, -38.2202, 17.3827, 0.22 ) }
    dend_34 { pt3dadd( 21.6646, -38.4075, 17.747, 0.22 ) }
    dend_34 { pt3dadd( 21.682, -38.6291, 18.2207, 0.22 ) }
    dend_34 { pt3dadd( 21.6928, -38.9556, 18.9039, 0.22 ) }
    dend_34 { pt3dadd( 21.7342, -39.4778, 19.8872, 0.29 ) }
    dend_34 { pt3dadd( 21.8259, -39.9676, 20.693, 0.29 ) }
    dend_34 { pt3dadd( 21.905, -40.3219, 21.2205, 0.29 ) }
    dend_34 { pt3dadd( 21.9655, -40.6462, 21.6419, 0.22 ) }
    dend_34 { pt3dadd( 22.0606, -41.2195, 22.3053, 0.22 ) }
    dend_34 { pt3dadd( 22.1804, -41.7441, 22.8657, 0.15 ) }
    dend_34 { pt3dadd( 22.4431, -42.5711, 23.6649, 0.22 ) }
    dend_34 { pt3dadd( 22.849, -43.5143, 24.4779, 0.15 ) }
    dend_34 { pt3dadd( 23.2065, -44.2101, 25.0275, 0.22 ) }
    dend_34 { pt3dadd( 23.6244, -44.997, 25.5829, 0.22 ) }
    dend_34 { pt3dadd( 24.0896, -45.9241, 26.1392, 0.22 ) }
    dend_34 { pt3dadd( 24.2723, -46.3361, 26.3523, 0.22 ) }
    dend_34 { pt3dadd( 24.5484, -47.026, 26.6356, 0.22 ) }
    dend_34 { pt3dadd( 24.8071, -47.6811, 26.8778, 0.22 ) }
    dend_34 { pt3dadd( 25.233, -48.7639, 27.2823, 0.15 ) }
    dend_34 { pt3dadd( 25.533, -49.5883, 27.5919, 0.29 ) }
    dend_34 { pt3dadd( 25.8601, -50.6862, 28.0295, 0.22 ) }
    dend_34 { pt3dadd( 26.1626, -51.8768, 28.5806, 0.22 ) }
    dend_34 { pt3dadd( 26.3419, -52.7052, 29.0289, 0.22 ) }
    dend_34 { pt3dadd( 26.4466, -53.3361, 29.4562, 0.29 ) }
    dend_34 { pt3dadd( 26.521, -53.9897, 29.9594, 0.29 ) }
    dend_34 { pt3dadd( 26.5483, -54.9037, 30.7246, 0.15 ) }
    dend_34 { pt3dadd( 26.5023, -55.6082, 31.3536, 0.29 ) }
    dend_34 { pt3dadd( 26.3893, -56.3967, 32.0799, 0.52 ) }
    dend_34 { pt3dadd( 26.0995, -57.9384, 33.5229, 0.22 ) }
    dend_34 { pt3dadd( 25.9423, -58.6542, 34.2354, 0.15 ) }
    dend_34 { pt3dadd( 25.8299, -59.1279, 34.7417, 0.22 ) }
    dend_34 { pt3dadd( 25.676, -59.9099, 35.67, 0.15 ) }
    dend_34 { pt3dadd( 25.6003, -60.4293, 36.3425, 0.44 ) }
    dend_34 { pt3dadd( 25.5368, -61.3149, 37.562, 0.15 ) }
    dend_34 { pt3dadd( 25.549, -61.8365, 38.3006, 0.29 ) }
    dend_34 { pt3dadd( 25.5975, -62.347, 39.0504, 0.29 ) }
    dend_34 { pt3dadd( 25.7454, -63.2107, 40.2553, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_34 { pt3dadd( 25.8033, -63.4765, 40.6121, 0.15 ) }
    dend_34 { pt3dadd( 25.8972, -63.8395, 41.0957, 0.22 ) }
    dend_34 { pt3dadd( 26.1241, -64.6627, 42.1139, 0.15 ) }
    dend_34 { pt3dadd( 26.3364, -65.3702, 42.9481, 0.15 ) }
    dend_34 { pt3dadd( 26.4881, -65.899, 43.5427, 0.15 ) }
    dend_34 { pt3dadd( 26.6473, -66.5189, 44.2224, 0.15 ) }
    dend_34 { pt3dadd( 26.7976, -67.0087, 44.7929, 0.37 ) }
    dend_34 { pt3dadd( 26.9902, -67.5094, 45.4321, 0.74 ) }
    dend_34 { pt3dadd( 27.3551, -68.1929, 46.417, 0.22 ) }
    dend_34 { pt3dadd( 27.6083, -68.5769, 47.0792, 0.22 ) }
    dend_34 { pt3dadd( 27.9836, -69.0934, 48.2052, 0.15 ) }
    dend_34 { pt3dadd( 28.1889, -69.3567, 48.8924, 0.15 ) }
    dend_34 { pt3dadd( 28.3363, -69.5345, 49.4429, 0.29 ) }
    dend_34 { pt3dadd( 28.5311, -69.7399, 50.342, 0.44 ) }
    dend_34 { pt3dadd( 28.8285, -70.0006, 51.8682, 0.29 ) }
    dend_34 { pt3dadd( 29.0904, -70.2153, 53.2305, 0.29 ) }
    dend_34 { pt3dadd( 29.2628, -70.3655, 54.0836, 0.29 ) }
    dend_34 { pt3dadd( 29.3648, -70.4893, 54.5809, 0.29 ) }
    dend_34 { pt3dadd( 29.649, -70.9237, 55.803, 0.29 ) }
    dend_34 { pt3dadd( 29.8576, -71.266, 56.5203, 0.22 ) }
    dend_34 { pt3dadd( 30.1534, -71.7065, 57.2545, 0.22 ) }
    dend_34 { pt3dadd( 30.5516, -72.2598, 58.0453, 0.22 ) }
    dend_34 { pt3dadd( 30.9982, -72.9088, 58.8983, 0.22 ) }
    dend_34 { pt3dadd( 31.3944, -73.5002, 59.6358, 0.37 ) }
    dend_34 { pt3dadd( 32.031, -74.4348, 60.7711, 0.22 ) }
    dend_34 { pt3dadd( 32.3896, -74.9647, 61.4569, 0.15 ) }
    dend_34 { pt3dadd( 32.5985, -75.2614, 61.8604, 0.22 ) }
    dend_34 { pt3dadd( 33.0458, -75.9736, 62.855, 0.07 ) }
    dend_34 { pt3dadd( 33.3771, -76.5397, 63.6635, 0.07 ) }
    dend_34 { pt3dadd( 33.7041, -77.1769, 64.5673, 0.07 ) }
    dend_34 { pt3dadd( 33.9556, -77.8309, 65.4336, 0.07 ) }
    dend_34 { pt3dadd( 34.0738, -78.3168, 66.0574, 0.88 ) }
    dend_34 { pt3dadd( 34.2297, -79.4371, 67.5085, 0.07 ) }
    dend_34 { pt3dadd( 34.2751, -80.0521, 68.2847, 0.07 ) }
    dend_34 { pt3dadd( 34.2818, -80.3945, 68.7185, 0.22 ) }
    dend_34 { pt3dadd( 34.3275, -81.5189, 70.1798, 0.07 ) }
    dend_34 { pt3dadd( 34.4126, -82.3865, 71.3633, 0.07 ) }
    dend_34 { pt3dadd( 34.537, -83.2636, 72.5973, 0.22 ) }
    dend_34 { pt3dadd( 34.6423, -83.6886, 73.2053, 0.66 ) }
    dend_34 { pt3dadd( 34.9484, -84.5666, 74.4841, 0.07 ) }
    dend_34 { pt3dadd( 35.3597, -85.4605, 75.8024, 0.07 ) }
    dend_34 { pt3dadd( 35.7591, -86.1321, 76.7587, 0.07 ) }
    dend_34 { pt3dadd( 36.01, -86.4744, 77.2415, 0.59 ) }
    dend_34 { pt3dadd( 36.6789, -87.2846, 78.3727, 0.07 ) }
    dend_34 { pt3dadd( 37.2866, -87.9446, 79.3886, 0.07 ) }
    dend_34 { pt3dadd( 37.8089, -88.452, 80.227, 0.07 ) }
    dend_34 { pt3dadd( 38.1965, -88.816, 80.8963, 0.22 ) }
    dend_34 { pt3dadd( 38.6542, -89.2194, 81.7404, 0.37 ) }
    dend_34 { pt3dadd( 39.0517, -89.5412, 82.5463, 0.22 ) }
    dend_34 { pt3dadd( 39.631, -89.9592, 83.9199, 0.22 ) }
    dend_34 { pt3dadd( 39.8785, -90.1241, 84.5663, 0.37 ) }
    dend_34 { pt3dadd( 40.3738, -90.5124, 86.0012, 0.15 ) }
    dend_34 { pt3dadd( 40.7892, -90.9204, 87.3197, 0.15 ) }
    dend_34 { pt3dadd( 41.1396, -91.3724, 88.5111, 0.15 ) }
    dend_34 { pt3dadd( 41.5309, -91.9773, 89.8052, 0.15 ) }
    dend_34 { pt3dadd( 41.8989, -92.587, 90.9073, 0.22 ) }
    dend_34 { pt3dadd( 42.3333, -93.2976, 92.0643, 0.07 ) }
    dend_34 { pt3dadd( 42.5573, -93.6701, 92.5883, 0.29 ) }
    dend_34 { pt3dadd( 42.8463, -94.1936, 93.1964, 0.29 ) }
    dend_34 { pt3dadd( 43.4096, -95.2018, 94.2225, 0.07 ) }
    dend_34 { pt3dadd( 43.9352, -96.1126, 95.0779, 0.07 ) }
    dend_34 { pt3dadd( 44.1857, -96.516, 95.4938, 0.44 ) }
    dend_34 { pt3dadd( 44.5632, -97.0744, 96.131, 0.52 ) }
    dend_34 { pt3dadd( 45.3149, -98.184, 97.5022, 0.07 ) }
    dend_34 { pt3dadd( 45.8186, -98.9495, 98.4818, 0.22 ) }
    dend_34 { pt3dadd( 46.5599, -100.152, 100.023, 0.07 ) }
    dend_34 { pt3dadd( 47.1419, -101.218, 101.292, 0.29 ) }
    dend_34 { pt3dadd( 47.8511, -102.686, 102.993, 0.07 ) }
    dend_34 { pt3dadd( 48.235, -103.552, 103.953, 0.07 ) }
    dend_34 { pt3dadd( 48.4257, -104.059, 104.474, 0.29 ) }
    dend_34 { pt3dadd( 48.6131, -104.696, 105.035, 0.66 ) }
    dend_34 { pt3dadd( 49.0876, -106.903, 106.639, 0.07 ) }
    dend_34 { pt3dadd( 49.3253, -108.329, 107.499, 0.15 ) }
    dend_34 { pt3dadd( 49.4203, -109.094, 107.907, 0.37 ) }
    dend_34 { pt3dadd( 49.5153, -110.04, 108.364, 0.59 ) }
    dend_34 { pt3dadd( 49.6351, -111.503, 109.04, 0.07 ) }
    dend_34 { pt3dadd( 49.7382, -113.274, 109.876, 0.15 ) }
    dend_34 { pt3dadd( 49.7722, -113.898, 110.167, 0.29 ) }
    dend_34 { pt3dadd( 49.8579, -114.786, 110.594, 0.74 ) }
    dend_34 { pt3dadd( 50.0949, -116.468, 111.472, 0.07 ) }
    dend_34 { pt3dadd( 50.3334, -117.633, 112.132, 0.22 ) }
    dend_34 { pt3dadd( 50.5677, -118.543, 112.699, 0.22 ) }
    dend_34 { pt3dadd( 50.9613, -119.914, 113.546, 0.07 ) }
    dend_34 { pt3dadd( 51.3744, -121.366, 114.46, 0.07 ) }
    dend_34 { pt3dadd( 51.5723, -122.004, 114.866, 0.07 ) }
    dend_34 { pt3dadd( 51.7533, -122.566, 115.248, 0.29 ) }
    dend_34 { pt3dadd( 52.0386, -123.534, 115.931, 0.44 ) }
    dend_34 { pt3dadd( 52.3088, -124.662, 116.785, 0.07 ) }
    dend_34 { pt3dadd( 52.4736, -126.056, 117.858, 0.07 ) }
    dend_34 { pt3dadd( 52.5157, -126.97, 118.545, 0.07 ) }
    dend_34 { pt3dadd( 52.5015, -128.119, 119.374, 0.07 ) }
    dend_34 { pt3dadd( 52.3941, -129.246, 120.16, 0.15 ) }
    dend_34 { pt3dadd( 52.1773, -130.573, 121.143, 0.37 ) }
    dend_34 { pt3dadd( 51.7558, -132.535, 122.701, 0.07 ) }
    dend_34 { pt3dadd( 51.5649, -133.271, 123.291, 0.07 ) }
    dend_34 { pt3dadd( 51.3649, -133.936, 123.857, 0.15 ) }
    dend_34 { pt3dadd( 50.9594, -135.142, 124.911, 0.07 ) }
    dend_34 { pt3dadd( 50.2192, -137.097, 126.702, 0.07 ) }
    dend_34 { pt3dadd( 49.8497, -137.976, 127.589, 0.07 ) }
    dend_34 { pt3dadd( 49.529, -138.653, 128.418, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_34 { pt3dadd( 49.2376, -139.24, 129.162, 0.07 ) }
    dend_34 { pt3dadd( 49.0297, -139.677, 129.721, 0.22 ) }
    dend_34 { pt3dadd( 48.7522, -140.287, 130.429, 0.37 ) }
    dend_34 { pt3dadd( 48.2971, -141.308, 131.339, 0.07 ) }
    dend_34 { pt3dadd( 47.8312, -142.497, 132.243, 0.22 ) }
    dend_34 { pt3dadd( 47.5513, -143.357, 132.815, 0.07 ) }
    dend_34 { pt3dadd( 47.2397, -144.601, 133.533, 0.22 ) }
    dend_34 { pt3dadd( 46.9616, -146.252, 134.341, 0.07 ) }
    dend_34 { pt3dadd( 46.6703, -148.902, 135.47, 0.07 ) }
    dend_34 { pt3dadd( 46.5655, -150.402, 136.003, 0.07 ) }
    dend_34 { pt3dadd( 46.5319, -151.254, 136.261, 0.07 ) }
    dend_34 { pt3dadd( 46.5131, -152.146, 136.508, 0.22 ) }
    dend_34 { pt3dadd( 46.4771, -154.568, 137.146, 0.07 ) }
    dend_34 { pt3dadd( 46.4457, -156.066, 137.571, 0.07 ) }
    dend_34 { pt3dadd( 46.3841, -157.294, 137.948, 0.07 ) }
    dend_34 { pt3dadd( 46.2747, -158.331, 138.289, 0.22 ) }
    dend_34 { pt3dadd( 46.1034, -159.363, 138.678, 0.22 ) }
    dend_34 { pt3dadd( 45.7717, -160.846, 139.288, 0.07 ) }
    dend_34 { pt3dadd( 45.5209, -161.74, 139.693, 0.07 ) }
    dend_34 { pt3dadd( 45.2308, -162.658, 140.122, 0.29 ) }
    dend_34 { pt3dadd( 44.9067, -163.591, 140.605, 0.07 ) }
    dend_34 { pt3dadd( 44.5574, -164.518, 141.114, 0.07 ) }
    dend_34 { pt3dadd( 44.1265, -165.635, 141.71, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 22.2834, -33.2063, 4.27213, 0.29 ) }
    dend_23 { pt3dadd( 22.4644, -33.8148, 4.37159, 0.29 ) }
    dend_23 { pt3dadd( 22.6642, -34.62, 4.55849, 0.22 ) }
    dend_23 { pt3dadd( 22.8572, -35.4207, 4.76016, 0.22 ) }
    dend_23 { pt3dadd( 23.0411, -36.095, 4.92883, 0.22 ) }
    dend_23 { pt3dadd( 23.356, -37.1694, 5.19358, 0.37 ) }
    dend_23 { pt3dadd( 23.6618, -38.1519, 5.43028, 0.22 ) }
    dend_23 { pt3dadd( 24.0255, -39.2542, 5.71107, 0.22 ) }
    dend_23 { pt3dadd( 24.2752, -39.9471, 5.8852, 0.29 ) }
    dend_23 { pt3dadd( 24.6423, -40.872, 6.11726, 0.29 ) }
    dend_23 { pt3dadd( 24.7827, -41.1762, 6.19988, 0.52 ) }
    dend_23 { pt3dadd( 25.0098, -41.5699, 6.32198, 0.81 ) }
    dend_23 { pt3dadd( 25.5517, -42.3652, 6.57656, 1.03 ) }
    dend_23 { pt3dadd( 26.3536, -43.4439, 6.91411, 0.44 ) }
    dend_23 { pt3dadd( 27.2369, -44.6243, 7.28929, 0.59 ) }
    dend_23 { pt3dadd( 27.9322, -45.6059, 7.59827, 0.37 ) }
    dend_23 { pt3dadd( 28.8608, -46.9556, 8.00047, 0.29 ) }
    dend_23 { pt3dadd( 29.505, -47.9164, 8.27577, 0.29 ) }
    dend_23 { pt3dadd( 30.0119, -48.6665, 8.48767, 0.29 ) }
    dend_23 { pt3dadd( 30.6577, -49.6005, 8.77399, 0.44 ) }
    dend_23 { pt3dadd( 31.5881, -50.8951, 9.17506, 0.59 ) }
    dend_23 { pt3dadd( 32.2312, -51.7833, 9.44552, 0.59 ) }
    dend_23 { pt3dadd( 33.0952, -53.0013, 9.83232, 0.37 ) }
    dend_23 { pt3dadd( 33.9426, -54.1889, 10.2415, 0.44 ) }
    dend_23 { pt3dadd( 34.6678, -55.176, 10.5903, 0.37 ) }
    dend_23 { pt3dadd( 35.4045, -56.1063, 10.9016, 0.59 ) }
    dend_23 { pt3dadd( 36.2472, -57.0895, 11.1973, 0.29 ) }
    dend_23 { pt3dadd( 36.9705, -57.9005, 11.358, 0.59 ) }
    dend_23 { pt3dadd( 37.2994, -58.2555, 11.3885, 0.59 ) }
    dend_23 { pt3dadd( 38.2233, -59.2478, 11.4082, 0.37 ) }
    dend_23 { pt3dadd( 39.0662, -60.1025, 11.4056, 0.44 ) }
    dend_23 { pt3dadd( 39.6904, -60.6878, 11.4212, 0.44 ) }
    dend_23 { pt3dadd( 41.0256, -61.7918, 11.4755, 0.29 ) }
    dend_23 { pt3dadd( 41.7664, -62.335, 11.5124, 0.22 ) }
    dend_23 { pt3dadd( 42.6248, -62.9331, 11.5806, 0.37 ) }
    dend_23 { pt3dadd( 43.8533, -63.7705, 11.717, 0.29 ) }
    dend_23 { pt3dadd( 44.7323, -64.3781, 11.8376, 0.29 ) }
    dend_23 { pt3dadd( 45.6712, -64.9972, 11.9678, 0.66 ) }
    dend_23 { pt3dadd( 46.5665, -65.5216, 12.0899, 0.66 ) }
    dend_23 { pt3dadd( 47.6669, -66.0785, 12.181, 0.37 ) }
    dend_23 { pt3dadd( 48.8124, -66.5545, 12.2385, 0.37 ) }
    dend_23 { pt3dadd( 50.1282, -67.0217, 12.3038, 0.29 ) }
    dend_23 { pt3dadd( 51.2834, -67.4103, 12.3834, 0.22 ) }
    dend_23 { pt3dadd( 52.0937, -67.6988, 12.488, 0.22 ) }
    dend_23 { pt3dadd( 52.6587, -67.9336, 12.6074, 0.29 ) }
    dend_23 { pt3dadd( 53.8571, -68.5339, 12.9884, 0.59 ) }
    dend_23 { pt3dadd( 54.709, -69.076, 13.326, 0.44 ) }
    dend_23 { pt3dadd( 55.4201, -69.6235, 13.632, 0.29 ) }
    dend_23 { pt3dadd( 56.4039, -70.4489, 13.996, 0.44 ) }
    dend_23 { pt3dadd( 57.3653, -71.2716, 14.2421, 0.29 ) }
    dend_23 { pt3dadd( 58.773, -72.4519, 14.4071, 0.29 ) }
    dend_23 { pt3dadd( 59.8175, -73.2693, 14.3203, 0.52 ) }
    dend_23 { pt3dadd( 60.7309, -73.8856, 14.0734, 0.52 ) }
    dend_23 { pt3dadd( 61.9726, -74.5855, 13.5861, 0.29 ) }
    dend_23 { pt3dadd( 63.1229, -75.1235, 13.0296, 0.59 ) }
    dend_23 { pt3dadd( 63.9462, -75.457, 12.57, 0.29 ) }
    dend_23 { pt3dadd( 65.1447, -75.8973, 11.8242, 0.44 ) }
    dend_23 { pt3dadd( 66.2124, -76.2771, 11.1433, 0.66 ) }
    dend_23 { pt3dadd( 67.9785, -76.9696, 10.026, 0.59 ) }
    dend_23 { pt3dadd( 69.1858, -77.5197, 9.32356, 0.29 ) }
    dend_23 { pt3dadd( 69.7568, -77.8186, 9.03111, 0.29 ) }
    dend_23 { pt3dadd( 70.1332, -78.0581, 8.86184, 0.29 ) }
    dend_23 { pt3dadd( 70.6406, -78.4375, 8.65891, 0.37 ) }
    dend_23 { pt3dadd( 71.3612, -79.0789, 8.37973, 0.37 ) }
    dend_23 { pt3dadd( 72.0972, -79.8943, 8.1085, 0.29 ) }
    dend_23 { pt3dadd( 72.9597, -81.0142, 7.80675, 0.37 ) }
    dend_23 { pt3dadd( 74.153, -82.6691, 7.37698, 0.29 ) }
    dend_23 { pt3dadd( 74.7927, -83.5786, 7.12732, 0.29 ) }
    dend_23 { pt3dadd( 75.1383, -84.0886, 6.97023, 0.29 ) }
    dend_23 { pt3dadd( 75.8364, -85.2019, 6.59842, 0.37 ) }
    dend_23 { pt3dadd( 76.3713, -86.1774, 6.26311, 0.52 ) }
    dend_23 { pt3dadd( 76.978, -87.348, 5.88128, 0.81 ) }
    dend_23 { pt3dadd( 77.4833, -88.2759, 5.65042, 0.29 ) }
    dend_23 { pt3dadd( 77.988, -89.0969, 5.53606, 0.22 ) }
    dend_23 { pt3dadd( 78.4914, -89.8011, 5.51995, 0.22 ) }
    dend_23 { pt3dadd( 79.2028, -90.6811, 5.60197, 0.29 ) }
    dend_23 { pt3dadd( 80.1764, -91.8627, 5.80814, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_23 { pt3dadd( 81.2813, -93.262, 6.10931, 0.44 ) }
    dend_23 { pt3dadd( 82.1687, -94.3996, 6.3407, 0.59 ) }
    dend_23 { pt3dadd( 83.1216, -95.5988, 6.56015, 0.59 ) }
    dend_23 { pt3dadd( 83.9951, -96.6777, 6.70804, 0.44 ) }
    dend_23 { pt3dadd( 85.2758, -98.2197, 6.8122, 0.44 ) }
    dend_23 { pt3dadd( 86.3383, -99.5127, 6.79702, 0.22 ) }
    dend_23 { pt3dadd( 86.9672, -100.277, 6.7462, 0.22 ) }
    dend_23 { pt3dadd( 87.2735, -100.638, 6.71621, 0.52 ) }
    dend_23 { pt3dadd( 87.9642, -101.415, 6.617, 0.88 ) }
    dend_23 { pt3dadd( 89.3903, -102.918, 6.34415, 0.29 ) }
    dend_23 { pt3dadd( 90.1705, -103.653, 6.14885, 0.29 ) }
    dend_23 { pt3dadd( 91.1151, -104.469, 5.83632, 0.29 ) }
    dend_23 { pt3dadd( 91.686, -104.961, 5.60056, 0.29 ) }
    dend_23 { pt3dadd( 92.3245, -105.533, 5.26868, 0.29 ) }
    dend_23 { pt3dadd( 92.7844, -105.992, 4.97657, 0.37 ) }
    dend_23 { pt3dadd( 93.3697, -106.68, 4.54632, 0.52 ) }
    dend_23 { pt3dadd( 94.0351, -107.532, 4.06901, 0.44 ) }
    dend_23 { pt3dadd( 94.5628, -108.252, 3.73093, 0.37 ) }
    dend_23 { pt3dadd( 94.9972, -108.83, 3.51761, 0.37 ) }
    dend_23 { pt3dadd( 95.85, -109.904, 3.18794, 0.29 ) }
    dend_23 { pt3dadd( 96.665, -110.849, 2.92963, 0.29 ) }
    dend_23 { pt3dadd( 97.2843, -111.457, 2.77675, 0.22 ) }
    dend_23 { pt3dadd( 97.8061, -111.859, 2.63243, 0.22 ) }
    dend_23 { pt3dadd( 98.7967, -112.475, 2.32608, 0.29 ) }
    dend_23 { pt3dadd( 99.6434, -112.97, 2.01545, 0.29 ) }
    dend_23 { pt3dadd( 100.246, -113.352, 1.7668, 0.44 ) }
    dend_23 { pt3dadd( 100.856, -113.848, 1.47816, 0.52 ) }
    dend_23 { pt3dadd( 101.852, -114.98, 0.973342, 0.29 ) }
    dend_23 { pt3dadd( 102.351, -115.761, 0.697088, 0.37 ) }
    dend_23 { pt3dadd( 102.922, -116.852, 0.387777, 0.66 ) }
    dend_23 { pt3dadd( 103.494, -118.058, 0.0734, 0.29 ) }
    dend_23 { pt3dadd( 103.909, -118.976, -0.162682, 0.37 ) }
    dend_23 { pt3dadd( 104.423, -120.119, -0.449067, 0.59 ) }
    dend_23 { pt3dadd( 105.245, -121.852, -0.834467, 0.22 ) }
    dend_23 { pt3dadd( 106.049, -123.435, -1.22593, 0.29 ) }
    dend_23 { pt3dadd( 106.638, -124.503, -1.5152, 0.59 ) }
    dend_23 { pt3dadd( 106.953, -125.04, -1.67499, 0.96 ) }
    dend_23 { pt3dadd( 107.119, -125.32, -1.75487, 0.96 ) }
    dend_23 { pt3dadd( 107.532, -126.016, -1.95944, 0.66 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 39/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 3.81835, -31.0977, -44.5443, 0.22 ) }
    dend_21 { pt3dadd( 2.21189, -33.9308, -51.8141, 0.22 ) }
    dend_21 { pt3dadd( 1.27258, -38.8235, -58.1586, 0.22 ) }
    dend_21 { pt3dadd( 1.54428, -43.8004, -64.4965, 0.22 ) }
    dend_21 { pt3dadd( 2.07982, -48.7932, -70.8036, 0.22 ) }
    dend_21 { pt3dadd( 4.1296, -52.9476, -77.3316, 0.22 ) }
    dend_21 { pt3dadd( 6.39843, -57.5379, -83.5107, 0.22 ) }
    dend_21 { pt3dadd( 8.94621, -61.2238, -90.1129, 0.22 ) }
    dend_21 { pt3dadd( 12.1995, -64.1651, -96.7372, 0.22 ) }
    dend_21 { pt3dadd( 14.3542, -66.7014, -103.943, 0.22 ) }
    dend_21 { pt3dadd( 18.2165, -68.7651, -110.535, 0.22 ) }
    dend_21 { pt3dadd( 23.5366, -69.36, -116.326, 0.22 ) }
    dend_21 { pt3dadd( 29.0224, -71.3139, -121.67, 0.22 ) }
    dend_21 { pt3dadd( 33.4942, -72.6208, -128.045, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 53/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 3.81835, -31.0977, -44.5443, 0.15 ) }
    dend_18 { pt3dadd( 3.67113, -33.8103, -55.5789, 0.22 ) }
    dend_18 { pt3dadd( 6.20279, -35.0956, -66.5258, 0.22 ) }
    dend_18 { pt3dadd( 9.18921, -36.9897, -77.2767, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -17.5901, -28.0724, -44.5566, 0.22 ) }
    dend_11 { pt3dadd( -19.4544, -35.6847, -52.3802, 0.22 ) }
    dend_11 { pt3dadd( -21.2761, -42.726, -60.6903, 0.22 ) }
    dend_11 { pt3dadd( -24.5024, -48.7748, -69.3289, 0.22 ) }
    dend_11 { pt3dadd( -27.2503, -55.209, -77.8627, 0.22 ) }
    dend_11 { pt3dadd( -30.7113, -62.5574, -85.4303, 0.22 ) }
    dend_11 { pt3dadd( -33.1975, -69.6233, -93.5678, 0.22 ) }
    dend_11 { pt3dadd( -38.5273, -77.1277, -99.9001, 0.22 ) }
    dend_11 { pt3dadd( -44.712, -85.2963, -104.568, 0.22 ) }
    dend_11 { pt3dadd( -50.98, -92.26, -110.65, 0.22 ) }
    dend_11 { pt3dadd( -56.3943, -100.244, -116.363, 0.22 ) }
    dend_11 { pt3dadd( -60.8119, -107.749, -123.31, 0.22 ) }
    dend_11 { pt3dadd( -65.3032, -113.925, -131.318, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 70/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -17.5901, -28.0724, -44.5566, 0.66 ) }
    dend_10 { pt3dadd( -18.6964, -35.695, -54.4817, 0.22 ) }
    dend_10 { pt3dadd( -21.1998, -43.4046, -64.0777, 0.22 ) }
    dend_10 { pt3dadd( -25.9099, -49.7341, -73.7513, 0.22 ) }
    dend_10 { pt3dadd( -31.7454, -55.5159, -83.1146, 0.22 ) }
    dend_10 { pt3dadd( -37.3633, -61.9086, -92.2459, 0.22 ) }
    dend_10 { pt3dadd( -42.8145, -65.984, -102.611, 0.22 ) }
    dend_10 { pt3dadd( -48.6928, -69.7422, -112.851, 0.22 ) }
    dend_10 { pt3dadd( -52.7958, -73.9206, -123.789, 0.22 ) }
    dend_10 { pt3dadd( -55.4678, -79.9029, -134.406, 0.22 ) }
    dend_10 { pt3dadd( -56.9253, -86.9015, -144.694, 0.22 ) }
    dend_10 { pt3dadd( -59.7735, -94.8925, -153.977, 0.22 ) }
    dend_10 { pt3dadd( -62.0295, -101.032, -164.611, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 83/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -19.1863, 6.01412, -12.6229, 0.66 ) }
    dend_8 { pt3dadd( -19.3431, 6.8875, -13.3489, 0.66 ) }
    dend_8 { pt3dadd( -19.4575, 8.05658, -14.2577, 0.22 ) }
    dend_8 { pt3dadd( -19.4919, 8.64024, -14.6747, 0.22 ) }
    dend_8 { pt3dadd( -19.5399, 9.24942, -15.1069, 0.22 ) }
    dend_8 { pt3dadd( -19.5965, 9.72817, -15.4562, 0.22 ) }
    dend_8 { pt3dadd( -19.6537, 10.0474, -15.7016, 0.52 ) }
    dend_8 { pt3dadd( -19.7566, 10.5197, -16.0971, 0.81 ) }
    dend_8 { pt3dadd( -20.0312, 11.3275, -16.8117, 0.22 ) }
    dend_8 { pt3dadd( -20.2835, 11.8273, -17.2461, 0.22 ) }
    dend_8 { pt3dadd( -20.5107, 12.1807, -17.5461, 0.22 ) }
    dend_8 { pt3dadd( -20.8494, 12.6482, -17.9498, 0.22 ) }
    dend_8 { pt3dadd( -21.1761, 13.0544, -18.299, 0.37 ) }
    dend_8 { pt3dadd( -21.8003, 13.7655, -18.8945, 0.66 ) }
    dend_8 { pt3dadd( -22.361, 14.3601, -19.3521, 0.22 ) }
    dend_8 { pt3dadd( -23.145, 15.2108, -19.9155, 0.15 ) }
    dend_8 { pt3dadd( -23.6012, 15.7173, -20.2081, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_8 { pt3dadd( -23.894, 16.036, -20.3709, 0.52 ) }
    dend_8 { pt3dadd( -24.3156, 16.4614, -20.5623, 0.37 ) }
    dend_8 { pt3dadd( -25.0623, 17.151, -20.8509, 0.15 ) }
    dend_8 { pt3dadd( -25.4695, 17.4943, -20.9815, 0.22 ) }
    dend_8 { pt3dadd( -25.7409, 17.7191, -21.0444, 0.15 ) }
    dend_8 { pt3dadd( -26.4502, 18.315, -21.1416, 0.29 ) }
    dend_8 { pt3dadd( -26.9666, 18.772, -21.1555, 0.29 ) }
    dend_8 { pt3dadd( -27.2711, 19.0506, -21.1193, 0.29 ) }
    dend_8 { pt3dadd( -27.8912, 19.6448, -20.9736, 0.52 ) }
    dend_8 { pt3dadd( -28.4778, 20.1963, -20.7964, 0.22 ) }
    dend_8 { pt3dadd( -29.3009, 20.9785, -20.5075, 0.22 ) }
    dend_8 { pt3dadd( -29.983, 21.6268, -20.2317, 0.29 ) }
    dend_8 { pt3dadd( -30.4843, 22.0934, -20.0396, 0.29 ) }
    dend_8 { pt3dadd( -31.0731, 22.621, -19.8366, 0.37 ) }
    dend_8 { pt3dadd( -32.0225, 23.4378, -19.5764, 0.22 ) }
    dend_8 { pt3dadd( -32.4921, 23.8261, -19.4939, 0.15 ) }
    dend_8 { pt3dadd( -32.8649, 24.1654, -19.476, 0.15 ) }
    dend_8 { pt3dadd( -33.3211, 24.6408, -19.5309, 0.15 ) }
    dend_8 { pt3dadd( -33.6916, 25.1042, -19.6336, 0.29 ) }
    dend_8 { pt3dadd( -34.0719, 25.7123, -19.7867, 0.88 ) }
    dend_8 { pt3dadd( -34.211, 26.025, -19.8664, 0.88 ) }
    dend_8 { pt3dadd( -34.5972, 27.1527, -20.1339, 0.44 ) }
    dend_8 { pt3dadd( -34.8128, 27.8362, -20.3118, 0.22 ) }
    dend_8 { pt3dadd( -35.0832, 28.6989, -20.524, 0.22 ) }
    dend_8 { pt3dadd( -35.3076, 29.417, -20.7027, 0.15 ) }
    dend_8 { pt3dadd( -35.6058, 30.3248, -20.9208, 0.15 ) }
    dend_8 { pt3dadd( -35.862, 31.0605, -21.0838, 0.22 ) }
    dend_8 { pt3dadd( -36.3125, 32.2925, -21.2966, 0.15 ) }
    dend_8 { pt3dadd( -36.8009, 33.6151, -21.4603, 0.22 ) }
    dend_8 { pt3dadd( -36.9643, 34.0692, -21.4971, 0.22 ) }
    dend_8 { pt3dadd( -37.282, 34.9351, -21.5188, 0.52 ) }
    dend_8 { pt3dadd( -37.5603, 35.6782, -21.4965, 0.22 ) }
    dend_8 { pt3dadd( -37.8413, 36.4507, -21.4377, 0.22 ) }
    dend_8 { pt3dadd( -38.1391, 37.3367, -21.3174, 0.22 ) }
    dend_8 { pt3dadd( -38.4983, 38.4022, -21.1548, 0.15 ) }
    dend_8 { pt3dadd( -38.8876, 39.5246, -20.9815, 0.29 ) }
    dend_8 { pt3dadd( -39.1305, 40.2254, -20.8785, 0.29 ) }
    dend_8 { pt3dadd( -39.5796, 41.4794, -20.7014, 0.15 ) }
    dend_8 { pt3dadd( -39.8804, 42.3016, -20.6004, 0.15 ) }
    dend_8 { pt3dadd( -40.062, 42.7913, -20.5412, 0.15 ) }
    dend_8 { pt3dadd( -40.365, 43.5459, -20.459, 0.29 ) }
    dend_8 { pt3dadd( -40.7944, 44.5304, -20.3807, 0.15 ) }
    dend_8 { pt3dadd( -40.9313, 44.8496, -20.3674, 0.15 ) }
    dend_8 { pt3dadd( -41.2264, 45.5786, -20.3733, 0.44 ) }
    dend_8 { pt3dadd( -41.4494, 46.2152, -20.4144, 0.44 ) }
    dend_8 { pt3dadd( -41.6591, 46.9094, -20.4977, 0.22 ) }
    dend_8 { pt3dadd( -41.8395, 47.6115, -20.6106, 0.22 ) }
    dend_8 { pt3dadd( -42.1235, 48.8869, -20.8551, 0.15 ) }
    dend_8 { pt3dadd( -42.3148, 49.916, -21.0648, 0.15 ) }
    dend_8 { pt3dadd( -42.5359, 51.2526, -21.3379, 0.07 ) }
    dend_8 { pt3dadd( -42.6699, 52.1209, -21.5129, 0.15 ) }
    dend_8 { pt3dadd( -42.7666, 52.7642, -21.638, 0.52 ) }
    dend_8 { pt3dadd( -42.8131, 53.0306, -21.6848, 0.52 ) }
    dend_8 { pt3dadd( -43.0886, 54.166, -21.8459, 0.15 ) }
    dend_8 { pt3dadd( -43.3458, 54.9697, -21.9381, 0.15 ) }
    dend_8 { pt3dadd( -43.5041, 55.3598, -21.97, 0.29 ) }
    dend_8 { pt3dadd( -43.6666, 55.7241, -21.9918, 0.29 ) }
    dend_8 { pt3dadd( -44.2042, 56.8715, -22.0698, 0.07 ) }
    dend_8 { pt3dadd( -44.5397, 57.5794, -22.1218, 0.07 ) }
    dend_8 { pt3dadd( -44.8879, 58.2826, -22.1676, 0.15 ) }
    dend_8 { pt3dadd( -45.2293, 58.9723, -22.2042, 0.15 ) }
    dend_8 { pt3dadd( -45.5976, 59.7237, -22.2357, 0.37 ) }
    dend_8 { pt3dadd( -45.6975, 59.939, -22.2423, 0.37 ) }
    dend_8 { pt3dadd( -46.0014, 60.6523, -22.2543, 0.07 ) }
    dend_8 { pt3dadd( -46.2948, 61.4133, -22.2427, 0.07 ) }
    dend_8 { pt3dadd( -46.625, 62.3246, -22.2195, 0.07 ) }
    dend_8 { pt3dadd( -46.7847, 62.7696, -22.2046, 0.07 ) }
    dend_8 { pt3dadd( -47.0178, 63.369, -22.1988, 0.15 ) }
    dend_8 { pt3dadd( -47.4115, 64.3092, -22.217, 0.07 ) }
    dend_8 { pt3dadd( -47.6658, 64.8861, -22.2526, 0.15 ) }
    dend_8 { pt3dadd( -47.9391, 65.4919, -22.3123, 0.29 ) }
    dend_8 { pt3dadd( -48.2581, 66.1807, -22.3945, 0.29 ) }
    dend_8 { pt3dadd( -48.8702, 67.4337, -22.5638, 0.22 ) }
    dend_8 { pt3dadd( -49.1927, 68.0698, -22.657, 0.07 ) }
    dend_8 { pt3dadd( -49.5906, 68.8574, -22.7787, 0.07 ) }
    dend_8 { pt3dadd( -49.7508, 69.1664, -22.8252, 0.29 ) }
    dend_8 { pt3dadd( -50.0735, 69.7484, -22.8756, 0.59 ) }
    dend_8 { pt3dadd( -50.3358, 70.1878, -22.8902, 0.44 ) }
    dend_8 { pt3dadd( -50.8935, 71.0856, -22.8653, 0.15 ) }
    dend_8 { pt3dadd( -51.2023, 71.5818, -22.8368, 0.15 ) }
    dend_8 { pt3dadd( -51.7831, 72.5025, -22.7624, 0.22 ) }
    dend_8 { pt3dadd( -52.2888, 73.2847, -22.6977, 0.07 ) }
    dend_8 { pt3dadd( -52.5914, 73.7463, -22.6691, 0.22 ) }
    dend_8 { pt3dadd( -52.957, 74.3671, -22.648, 0.29 ) }
    dend_8 { pt3dadd( -53.3158, 75.0244, -22.6431, 0.29 ) }
    dend_8 { pt3dadd( -53.6644, 75.733, -22.658, 0.07 ) }
    dend_8 { pt3dadd( -53.9333, 76.3589, -22.6914, 0.15 ) }
    dend_8 { pt3dadd( -54.2898, 77.3461, -22.7715, 0.59 ) }
    dend_8 { pt3dadd( -54.721, 78.7271, -22.8843, 0.15 ) }
    dend_8 { pt3dadd( -54.9549, 79.6442, -22.9562, 0.15 ) }
    dend_8 { pt3dadd( -55.1834, 80.7613, -23.0342, 0.15 ) }
    dend_8 { pt3dadd( -55.2434, 81.1889, -23.0601, 0.29 ) }
    dend_8 { pt3dadd( -55.3054, 81.9189, -23.101, 0.29 ) }
    dend_8 { pt3dadd( -55.324, 82.4829, -23.1366, 0.07 ) }
    dend_8 { pt3dadd( -55.3221, 83.7766, -23.236, 0.15 ) }
    dend_8 { pt3dadd( -55.2931, 85.3522, -23.3677, 0.07 ) }
    dend_8 { pt3dadd( -55.2846, 85.9589, -23.4215, 0.29 ) }
    dend_8 { pt3dadd( -55.2949, 86.626, -23.4842, 0.29 ) }
    dend_8 { pt3dadd( -55.3852, 88.1745, -23.6777, 0.22 ) }
    dend_8 { pt3dadd( -55.4835, 89.2643, -23.8718, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_8 { pt3dadd( -55.5488, 89.8042, -24.004, 0.22 ) }
    dend_8 { pt3dadd( -55.6353, 90.3513, -24.1736, 0.22 ) }
    dend_8 { pt3dadd( -55.8759, 91.4964, -24.5867, 0.22 ) }
    dend_8 { pt3dadd( -56.1699, 92.5505, -25.0238, 0.22 ) }
    dend_8 { pt3dadd( -56.4221, 93.2237, -25.3591, 0.22 ) }
    dend_8 { pt3dadd( -56.744, 93.9527, -25.7838, 0.15 ) }
    dend_8 { pt3dadd( -56.9128, 94.2966, -26.0056, 0.15 ) }
    dend_8 { pt3dadd( -57.0353, 94.5029, -26.155, 0.15 ) }
    dend_8 { pt3dadd( -57.317, 94.865, -26.4698, 0.15 ) }
    dend_8 { pt3dadd( -57.5319, 95.0765, -26.6857, 0.15 ) }
    dend_8 { pt3dadd( -57.8089, 95.314, -26.9393, 0.15 ) }
    dend_8 { pt3dadd( -58.2247, 95.6572, -27.3507, 0.22 ) }
    dend_8 { pt3dadd( -58.5248, 95.9237, -27.7443, 0.22 ) }
    dend_8 { pt3dadd( -58.8575, 96.2198, -28.2776, 0.22 ) }
    dend_8 { pt3dadd( -59.3071, 96.6491, -29.0856, 0.37 ) }
    dend_8 { pt3dadd( -59.5353, 96.8855, -29.5352, 0.22 ) }
    dend_8 { pt3dadd( -59.7468, 97.1262, -29.9728, 0.22 ) }
    dend_8 { pt3dadd( -60.1624, 97.7562, -30.9442, 0.22 ) }
    dend_8 { pt3dadd( -60.3342, 98.1193, -31.3993, 0.22 ) }
    dend_8 { pt3dadd( -60.5541, 98.771, -32.0503, 0.15 ) }
    dend_8 { pt3dadd( -60.7303, 99.4628, -32.6015, 0.15 ) }
    dend_8 { pt3dadd( -60.8178, 99.8784, -32.8791, 0.15 ) }
    dend_8 { pt3dadd( -61.0015, 100.898, -33.4295, 0.15 ) }
    dend_8 { pt3dadd( -61.0716, 101.417, -33.6523, 0.15 ) }
    dend_8 { pt3dadd( -61.1154, 101.884, -33.8339, 0.22 ) }
    dend_8 { pt3dadd( -61.2148, 102.917, -34.2204, 0.07 ) }
    dend_8 { pt3dadd( -61.3004, 103.522, -34.4276, 0.15 ) }
    dend_8 { pt3dadd( -61.4269, 104.23, -34.6907, 0.07 ) }
    dend_8 { pt3dadd( -61.6054, 104.887, -34.9683, 0.22 ) }
    dend_8 { pt3dadd( -61.7259, 105.213, -35.1478, 0.22 ) }
    dend_8 { pt3dadd( -61.9037, 105.637, -35.453, 0.07 ) }
    dend_8 { pt3dadd( -62.1132, 106.097, -35.8561, 0.22 ) }
    dend_8 { pt3dadd( -62.3917, 106.715, -36.4613, 0.15 ) }
    dend_8 { pt3dadd( -62.636, 107.309, -37.0792, 0.29 ) }
    dend_8 { pt3dadd( -62.827, 107.95, -37.7503, 0.07 ) }
    dend_8 { pt3dadd( -62.9279, 108.514, -38.3434, 0.07 ) }
    dend_8 { pt3dadd( -62.9531, 108.81, -38.6326, 0.07 ) }
    dend_8 { pt3dadd( -62.958, 109.25, -39.0242, 0.22 ) }
    dend_8 { pt3dadd( -62.9598, 109.645, -39.3141, 0.22 ) }
    dend_8 { pt3dadd( -62.9604, 110.692, -39.9511, 0.07 ) }
    dend_8 { pt3dadd( -62.9663, 111.425, -40.3336, 0.07 ) }
    dend_8 { pt3dadd( -62.9795, 112.034, -40.6139, 0.15 ) }
    dend_8 { pt3dadd( -63.0006, 112.977, -41.0329, 0.07 ) }
    dend_8 { pt3dadd( -63.0398, 114.18, -41.5373, 0.07 ) }
    dend_8 { pt3dadd( -63.0481, 115.113, -41.9526, 0.07 ) }
    dend_8 { pt3dadd( -63.0471, 115.322, -42.0463, 0.37 ) }
    dend_8 { pt3dadd( -63.0501, 115.758, -42.243, 0.37 ) }
    dend_8 { pt3dadd( -63.0459, 116.597, -42.6517, 0.22 ) }
    dend_8 { pt3dadd( -63.0321, 117.169, -42.9496, 0.22 ) }
    dend_8 { pt3dadd( -62.908, 118.865, -43.9126, 0.07 ) }
    dend_8 { pt3dadd( -62.8169, 119.622, -44.3803, 0.07 ) }
    dend_8 { pt3dadd( -62.7044, 120.342, -44.8735, 0.07 ) }
    dend_8 { pt3dadd( -62.5164, 121.071, -45.4542, 0.07 ) }
    dend_8 { pt3dadd( -62.4445, 121.293, -45.6368, 0.07 ) }
    dend_8 { pt3dadd( -62.2918, 121.653, -45.9618, 0.15 ) }
    dend_8 { pt3dadd( -61.9654, 122.156, -46.5143, 0.15 ) }
    dend_8 { pt3dadd( -61.5812, 122.501, -47.0798, 0.15 ) }
    dend_8 { pt3dadd( -60.9459, 122.857, -47.917, 0.07 ) }
    dend_8 { pt3dadd( -64.2807, 132.734, -50.3903, 0.07 ) }
    dend_8 { pt3dadd( -65.6059, 143.288, -52.1123, 0.07 ) }
    dend_8 { pt3dadd( -68.1052, 153.118, -55.5598, 0.07 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 61/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -19.1863, 6.01412, -12.6229, 0.22 ) }
    dend_5 { pt3dadd( -20.3119, 5.32906, -12.5125, 0.22 ) }
    dend_5 { pt3dadd( -20.9729, 4.9446, -12.4191, 0.22 ) }
    dend_5 { pt3dadd( -21.4804, 4.67452, -12.3445, 0.15 ) }
    dend_5 { pt3dadd( -21.8616, 4.48172, -12.2754, 0.22 ) }
    dend_5 { pt3dadd( -22.3965, 4.21182, -12.1533, 0.22 ) }
    dend_5 { pt3dadd( -23.4837, 3.66601, -11.8857, 0.15 ) }
    dend_5 { pt3dadd( -24.0357, 3.4181, -11.7295, 0.15 ) }
    dend_5 { pt3dadd( -24.9363, 3.06202, -11.5103, 0.22 ) }
    dend_5 { pt3dadd( -25.7767, 2.76975, -11.342, 0.15 ) }
    dend_5 { pt3dadd( -26.6223, 2.46736, -11.1687, 0.15 ) }
    dend_5 { pt3dadd( -27.0815, 2.30167, -11.0747, 0.15 ) }
    dend_5 { pt3dadd( -27.8156, 2.06672, -10.941, 0.15 ) }
    dend_5 { pt3dadd( -29.2112, 1.68392, -10.7942, 0.15 ) }
    dend_5 { pt3dadd( -29.7826, 1.55549, -10.7813, 0.52 ) }
    dend_5 { pt3dadd( -37.8278, -0.285953, -10.7369, 0.52 ) }
    dend_5 { pt3dadd( -46.0065, -0.163621, -11.6608, 0.52 ) }
    dend_5 { pt3dadd( -54.0408, 0.321041, -13.3895, 0.52 ) }
    dend_5 { pt3dadd( -62.2545, 0.840076, -13.5831, 0.52 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 80/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 36.2352, -53.5935, 14.0636, 0.22 ) }
    dend_44 { pt3dadd( 36.7193, -54.193, 14.3485, 0.22 ) }
    dend_44 { pt3dadd( 37.1846, -54.8221, 14.683, 0.15 ) }
    dend_44 { pt3dadd( 37.5081, -55.3237, 14.9428, 0.22 ) }
    dend_44 { pt3dadd( 38.1103, -56.4211, 15.488, 0.15 ) }
    dend_44 { pt3dadd( 38.4179, -57.102, 15.8188, 0.29 ) }
    dend_44 { pt3dadd( 38.6464, -57.6722, 16.0924, 0.29 ) }
    dend_44 { pt3dadd( 38.9416, -58.5888, 16.5129, 0.15 ) }
    dend_44 { pt3dadd( 39.1344, -59.2709, 16.8031, 0.22 ) }
    dend_44 { pt3dadd( 39.3443, -59.949, 17.0841, 0.29 ) }
    dend_44 { pt3dadd( 39.7084, -60.9287, 17.5329, 0.15 ) }
    dend_44 { pt3dadd( 39.9878, -61.5004, 17.7791, 0.15 ) }
    dend_44 { pt3dadd( 40.3142, -62.0373, 18.0176, 0.22 ) }
    dend_44 { pt3dadd( 40.9443, -62.8525, 18.4389, 0.15 ) }
    dend_44 { pt3dadd( 41.5487, -63.49, 18.8388, 0.22 ) }
    dend_44 { pt3dadd( 42.3751, -64.2471, 19.3838, 0.22 ) }
    dend_44 { pt3dadd( 43.1933, -64.9255, 19.9496, 0.15 ) }
    dend_44 { pt3dadd( 43.8251, -65.421, 20.4318, 0.22 ) }
    dend_44 { pt3dadd( 44.4869, -65.9311, 21.0247, 0.22 ) }
    dend_44 { pt3dadd( 45.2719, -66.5344, 21.8324, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_44 { pt3dadd( 45.8301, -66.99, 22.4965, 0.07 ) }
    dend_44 { pt3dadd( 46.241, -67.3262, 23.0085, 0.15 ) }
    dend_44 { pt3dadd( 46.7454, -67.7274, 23.6492, 0.07 ) }
    dend_44 { pt3dadd( 47.4222, -68.2752, 24.4837, 0.07 ) }
    dend_44 { pt3dadd( 47.7249, -68.5245, 24.8268, 0.22 ) }
    dend_44 { pt3dadd( 48.2538, -68.9861, 25.3951, 0.44 ) }
    dend_44 { pt3dadd( 49.011, -69.6806, 26.1823, 0.22 ) }
    dend_44 { pt3dadd( 49.5487, -70.2031, 26.726, 0.44 ) }
    dend_44 { pt3dadd( 50.6264, -71.3654, 27.8, 0.07 ) }
    dend_44 { pt3dadd( 51.2229, -72.0668, 28.3811, 0.22 ) }
    dend_44 { pt3dadd( 52.0216, -73.1107, 29.168, 0.07 ) }
    dend_44 { pt3dadd( 52.605, -73.9415, 29.7377, 0.22 ) }
    dend_44 { pt3dadd( 52.9262, -74.4576, 30.0546, 0.22 ) }
    dend_44 { pt3dadd( 53.3865, -75.2582, 30.466, 0.07 ) }
    dend_44 { pt3dadd( 53.6348, -75.7475, 30.6475, 0.29 ) }
    dend_44 { pt3dadd( 53.8423, -76.2436, 30.7824, 0.29 ) }
    dend_44 { pt3dadd( 54.2909, -77.4642, 30.94, 0.07 ) }
    dend_44 { pt3dadd( 54.5145, -78.2555, 30.9702, 0.07 ) }
    dend_44 { pt3dadd( 54.6378, -78.8782, 30.9742, 0.07 ) }
    dend_44 { pt3dadd( 54.7582, -79.9618, 30.9749, 0.07 ) }
    dend_44 { pt3dadd( 54.7693, -80.6018, 30.9763, 0.22 ) }
    dend_44 { pt3dadd( 54.7255, -81.1022, 30.9847, 0.22 ) }
    dend_44 { pt3dadd( 54.4478, -82.6605, 31.0389, 0.07 ) }
    dend_44 { pt3dadd( 54.1411, -84.0534, 31.147, 0.07 ) }
    dend_44 { pt3dadd( 53.8917, -85.0794, 31.2771, 0.22 ) }
    dend_44 { pt3dadd( 53.6223, -86.125, 31.4693, 0.37 ) }
    dend_44 { pt3dadd( 53.24, -87.5271, 31.7696, 0.15 ) }
    dend_44 { pt3dadd( 52.8717, -88.8143, 32.0941, 0.29 ) }
    dend_44 { pt3dadd( 52.6683, -89.5041, 32.3028, 0.29 ) }
    dend_44 { pt3dadd( 52.3946, -90.3895, 32.6206, 0.07 ) }
    dend_44 { pt3dadd( 52.1571, -91.1464, 32.9279, 0.07 ) }
    dend_44 { pt3dadd( 51.996, -91.6343, 33.1349, 0.22 ) }
    dend_44 { pt3dadd( 51.5799, -92.857, 33.6517, 0.15 ) }
    dend_44 { pt3dadd( 51.2204, -93.8402, 34.0459, 0.15 ) }
    dend_44 { pt3dadd( 50.9424, -94.5672, 34.3054, 0.22 ) }
    dend_44 { pt3dadd( 50.3584, -96.0519, 34.7936, 0.07 ) }
    dend_44 { pt3dadd( 49.9333, -97.1568, 35.1476, 0.22 ) }
    dend_44 { pt3dadd( 49.5822, -98.121, 35.4519, 0.07 ) }
    dend_44 { pt3dadd( 49.4728, -98.4295, 35.5436, 0.22 ) }
    dend_44 { pt3dadd( 49.1685, -99.3419, 35.8002, 0.66 ) }
    dend_44 { pt3dadd( 48.7519, -100.669, 36.1788, 0.15 ) }
    dend_44 { pt3dadd( 48.4781, -101.63, 36.4143, 0.15 ) }
    dend_44 { pt3dadd( 48.2583, -102.417, 36.57, 0.15 ) }
    dend_44 { pt3dadd( 48.0296, -103.176, 36.6902, 0.22 ) }
    dend_44 { pt3dadd( 47.8269, -103.826, 36.7719, 0.29 ) }
    dend_44 { pt3dadd( 47.5057, -104.805, 36.8749, 0.07 ) }
    dend_44 { pt3dadd( 47.0446, -106.019, 36.9805, 0.07 ) }
    dend_44 { pt3dadd( 46.6706, -106.853, 37.0778, 0.15 ) }
    dend_44 { pt3dadd( 45.8478, -108.436, 37.3507, 0.07 ) }
    dend_44 { pt3dadd( 45.7346, -108.629, 37.393, 0.07 ) }
    dend_44 { pt3dadd( 45.1872, -109.472, 37.6531, 0.15 ) }
    dend_44 { pt3dadd( 44.6172, -110.309, 38.0123, 0.07 ) }
    dend_44 { pt3dadd( 43.7575, -111.529, 38.7052, 0.22 ) }
    dend_44 { pt3dadd( 43.2019, -112.319, 39.233, 0.37 ) }
    dend_44 { pt3dadd( 42.8114, -112.858, 39.6285, 0.37 ) }
    dend_44 { pt3dadd( 42.0626, -113.902, 40.3753, 0.15 ) }
    dend_44 { pt3dadd( 41.2755, -115.053, 41.1472, 0.22 ) }
    dend_44 { pt3dadd( 40.7707, -115.854, 41.6455, 0.22 ) }
    dend_44 { pt3dadd( 40.407, -116.482, 41.995, 0.22 ) }
    dend_44 { pt3dadd( 40.1211, -117.03, 42.255, 0.22 ) }
    dend_44 { pt3dadd( 39.5005, -118.284, 42.7308, 0.07 ) }
    dend_44 { pt3dadd( 38.9651, -119.428, 43.095, 0.07 ) }
    dend_44 { pt3dadd( 38.7725, -119.873, 43.2315, 0.22 ) }
    dend_44 { pt3dadd( 38.4332, -120.749, 43.5113, 0.07 ) }
    dend_44 { pt3dadd( 38.2466, -121.264, 43.6805, 0.07 ) }
    dend_44 { pt3dadd( 37.8831, -122.349, 44.0572, 0.22 ) }
    dend_44 { pt3dadd( 37.2517, -124.344, 44.7969, 0.07 ) }
    dend_44 { pt3dadd( 36.9014, -125.449, 45.1879, 0.07 ) }
    dend_44 { pt3dadd( 36.6204, -126.306, 45.4918, 0.07 ) }
    dend_44 { pt3dadd( 36.304, -127.263, 45.8312, 0.22 ) }
    dend_44 { pt3dadd( 36.083, -127.938, 46.0525, 0.07 ) }
    dend_44 { pt3dadd( 35.9288, -128.408, 46.1846, 0.15 ) }
    dend_44 { pt3dadd( 35.2842, -130.174, 46.574, 0.07 ) }
    dend_44 { pt3dadd( 34.7945, -131.395, 46.8246, 0.07 ) }
    dend_44 { pt3dadd( 34.3686, -132.404, 47.0272, 0.07 ) }
    dend_44 { pt3dadd( 34.1077, -133.05, 47.1498, 0.07 ) }
    dend_44 { pt3dadd( 33.9117, -133.563, 47.2276, 0.07 ) }
    dend_44 { pt3dadd( 33.6778, -134.234, 47.2839, 0.22 ) }
    dend_44 { pt3dadd( 33.265, -135.671, 47.265, 0.07 ) }
    dend_44 { pt3dadd( 33.0216, -136.58, 47.2033, 0.22 ) }
    dend_44 { pt3dadd( 32.7372, -137.702, 47.0887, 0.07 ) }
    dend_44 { pt3dadd( 32.5458, -138.564, 46.9963, 0.07 ) }
    dend_44 { pt3dadd( 32.3431, -139.71, 46.8722, 0.15 ) }
    dend_44 { pt3dadd( 32.1817, -141.042, 46.7087, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 84/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 36.2352, -53.5935, 14.0636, 0.15 ) }
    dend_43 { pt3dadd( 36.2428, -54.6952, 14.4753, 0.15 ) }
    dend_43 { pt3dadd( 36.2642, -55.6482, 14.8507, 0.15 ) }
    dend_43 { pt3dadd( 36.2707, -56.2828, 15.1255, 0.15 ) }
    dend_43 { pt3dadd( 36.2724, -56.8963, 15.4127, 0.37 ) }
    dend_43 { pt3dadd( 36.2725, -57.0433, 15.4771, 0.37 ) }
    dend_43 { pt3dadd( 36.2692, -57.7978, 15.8019, 0.15 ) }
    dend_43 { pt3dadd( 36.2582, -58.3817, 16.0643, 0.22 ) }
    dend_43 { pt3dadd( 36.2019, -59.2793, 16.4656, 0.15 ) }
    dend_43 { pt3dadd( 36.1137, -60.0864, 16.8354, 0.15 ) }
    dend_43 { pt3dadd( 36.0022, -60.8362, 17.1595, 0.22 ) }
    dend_43 { pt3dadd( 35.8647, -61.5334, 17.4374, 0.22 ) }
    dend_43 { pt3dadd( 35.6579, -62.4321, 17.7775, 0.15 ) }
    dend_43 { pt3dadd( 35.4608, -63.2158, 18.066, 0.15 ) }
    dend_43 { pt3dadd( 35.2931, -63.8118, 18.2706, 0.15 ) }
    dend_43 { pt3dadd( 35.0969, -64.397, 18.472, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_43 { pt3dadd( 34.8962, -64.9022, 18.6736, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 1/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 107.532, -126.016, -1.95944, 0.22 ) }
    dend_25 { pt3dadd( 107.853, -127.379, -2.57843, 0.22 ) }
    dend_25 { pt3dadd( 108.086, -128.336, -2.9785, 0.22 ) }
    dend_25 { pt3dadd( 108.234, -129.043, -3.23054, 0.29 ) }
    dend_25 { pt3dadd( 108.379, -129.817, -3.47382, 0.29 ) }
    dend_25 { pt3dadd( 108.514, -130.548, -3.67611, 0.22 ) }
    dend_25 { pt3dadd( 108.71, -131.547, -3.91907, 0.22 ) }
    dend_25 { pt3dadd( 108.953, -132.706, -4.12876, 0.29 ) }
    dend_25 { pt3dadd( 109.34, -134.485, -4.35952, 0.22 ) }
    dend_25 { pt3dadd( 109.516, -135.233, -4.41279, 0.44 ) }
    dend_25 { pt3dadd( 109.78, -136.252, -4.4292, 0.52 ) }
    dend_25 { pt3dadd( 110.078, -137.338, -4.40126, 0.37 ) }
    dend_25 { pt3dadd( 110.549, -139.04, -4.30079, 0.22 ) }
    dend_25 { pt3dadd( 110.876, -140.164, -4.2342, 0.29 ) }
    dend_25 { pt3dadd( 111.087, -140.816, -4.20318, 0.74 ) }
    dend_25 { pt3dadd( 111.398, -141.7, -4.19363, 0.81 ) }
    dend_25 { pt3dadd( 111.971, -143.151, -4.23463, 0.37 ) }
    dend_25 { pt3dadd( 112.366, -144.016, -4.30344, 0.37 ) }
    dend_25 { pt3dadd( 112.845, -144.944, -4.43584, 0.29 ) }
    dend_25 { pt3dadd( 113.242, -145.669, -4.57706, 0.29 ) }
    dend_25 { pt3dadd( 113.596, -146.337, -4.72986, 0.29 ) }
    dend_25 { pt3dadd( 113.984, -147.093, -4.90556, 0.22 ) }
    dend_25 { pt3dadd( 114.247, -147.644, -5.01711, 0.22 ) }
    dend_25 { pt3dadd( 114.583, -148.436, -5.15487, 0.22 ) }
    dend_25 { pt3dadd( 114.847, -149.145, -5.28504, 0.22 ) }
    dend_25 { pt3dadd( 115.066, -149.801, -5.42481, 0.22 ) }
    dend_25 { pt3dadd( 115.258, -150.441, -5.58347, 0.22 ) }
    dend_25 { pt3dadd( 115.632, -151.733, -5.95594, 0.22 ) }
    dend_25 { pt3dadd( 115.998, -152.975, -6.34836, 0.44 ) }
    dend_25 { pt3dadd( 116.448, -154.378, -6.82362, 0.22 ) }
    dend_25 { pt3dadd( 116.689, -155.141, -7.08024, 0.29 ) }
    dend_25 { pt3dadd( 116.924, -155.946, -7.35327, 0.52 ) }
    dend_25 { pt3dadd( 117.079, -156.596, -7.55766, 0.29 ) }
    dend_25 { pt3dadd( 117.207, -157.239, -7.75023, 0.22 ) }
    dend_25 { pt3dadd( 117.371, -158.409, -8.04056, 0.22 ) }
    dend_25 { pt3dadd( 117.485, -159.586, -8.26296, 0.29 ) }
    dend_25 { pt3dadd( 117.583, -160.877, -8.46635, 0.29 ) }
    dend_25 { pt3dadd( 117.65, -161.905, -8.61128, 0.66 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 39/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 107.532, -126.016, -1.95944, 0.22 ) }
    dend_24 { pt3dadd( 107.86, -126.82, -1.72201, 0.22 ) }
    dend_24 { pt3dadd( 108.079, -127.287, -1.60033, 0.22 ) }
    dend_24 { pt3dadd( 108.231, -127.592, -1.52868, 0.22 ) }
    dend_24 { pt3dadd( 108.439, -127.97, -1.43987, 0.22 ) }
    dend_24 { pt3dadd( 108.814, -128.578, -1.30368, 0.15 ) }
    dend_24 { pt3dadd( 109.041, -128.911, -1.22633, 0.15 ) }
    dend_24 { pt3dadd( 109.157, -129.07, -1.19279, 0.07 ) }
    dend_24 { pt3dadd( 109.428, -129.42, -1.10732, 0.15 ) }
    dend_24 { pt3dadd( 109.809, -129.887, -0.980504, 0.07 ) }
    dend_24 { pt3dadd( 110.061, -130.176, -0.88092, 0.29 ) }
    dend_24 { pt3dadd( 110.403, -130.536, -0.715005, 0.07 ) }
    dend_24 { pt3dadd( 110.689, -130.812, -0.552603, 0.07 ) }
    dend_24 { pt3dadd( 111.07, -131.129, -0.311044, 0.07 ) }
    dend_24 { pt3dadd( 111.273, -131.268, -0.15908, 0.15 ) }
    dend_24 { pt3dadd( 111.531, -131.431, 0.06495, 0.15 ) }
    dend_24 { pt3dadd( 111.818, -131.592, 0.368029, 0.37 ) }
    dend_24 { pt3dadd( 112.072, -131.713, 0.695045, 0.22 ) }
    dend_24 { pt3dadd( 112.333, -131.814, 1.10575, 0.15 ) }
    dend_24 { pt3dadd( 112.671, -131.912, 1.79614, 0.22 ) }
    dend_24 { pt3dadd( 112.86, -131.942, 2.32999, 0.29 ) }
    dend_24 { pt3dadd( 113.009, -131.891, 3.14866, 0.15 ) }
    dend_24 { pt3dadd( 112.99, -131.755, 3.74672, 0.07 ) }
    dend_24 { pt3dadd( 112.904, -131.568, 4.31525, 0.07 ) }
    dend_24 { pt3dadd( 112.774, -131.361, 4.74586, 0.07 ) }
    dend_24 { pt3dadd( 112.56, -131.063, 5.17201, 0.07 ) }
    dend_24 { pt3dadd( 112.239, -130.638, 5.62676, 0.07 ) }
    dend_24 { pt3dadd( 111.956, -130.289, 5.88621, 0.07 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 67/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 9.18921, -36.9897, -77.2767, 0.22 ) }
    dend_20 { pt3dadd( 10.51, -38.7619, -87.1244, 0.22 ) }
    dend_20 { pt3dadd( 11.299, -38.975, -97.1577, 0.22 ) }
    dend_20 { pt3dadd( 10.967, -38.5403, -107.205, 0.22 ) }
    dend_20 { pt3dadd( 11.8807, -37.5039, -117.166, 0.22 ) }
    dend_20 { pt3dadd( 13.8192, -35.7682, -126.882, 0.22 ) }
    dend_20 { pt3dadd( 14.8016, -33.7889, -136.694, 0.22 ) }
    dend_20 { pt3dadd( 14.1845, -31.4876, -146.465, 0.22 ) }
    dend_20 { pt3dadd( 14.4064, -31.1802, -156.52, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.18921, -36.9897, -77.2767, 0.15 ) }
    dend_19 { pt3dadd( 12.4024, -39.4012, -89.1843, 0.22 ) }
    dend_19 { pt3dadd( 14.0588, -42.2052, -101.353, 0.22 ) }
    dend_19 { pt3dadd( 13.699, -46.7987, -113.18, 0.22 ) }
    dend_19 { pt3dadd( 11.1473, -50.7161, -125.0, 0.22 ) }
    dend_19 { pt3dadd( 10.9545, -55.0748, -136.907, 0.22 ) }
    dend_19 { pt3dadd( 10.4234, -59.4138, -148.817, 0.22 ) }
    dend_19 { pt3dadd( 7.59725, -64.6612, -160.118, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 84/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -62.2545, 0.840076, -13.5831, 0.22 ) }
    dend_7 { pt3dadd( -67.7515, 0.637616, -13.4133, 0.22 ) }
    dend_7 { pt3dadd( -73.1269, -0.606175, -13.3234, 0.22 ) }
    dend_7 { pt3dadd( -78.5244, -1.65896, -13.7197, 0.22 ) }
    dend_7 { pt3dadd( -83.8611, -3.0784, -13.7021, 0.22 ) }
    dend_7 { pt3dadd( -89.3032, -3.55627, -13.0172, 0.22 ) }
    dend_7 { pt3dadd( -94.7809, -3.08392, -12.775, 0.22 ) }
    dend_7 { pt3dadd( -100.197, -2.31563, -12.1533, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 92/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -62.2545, 0.840076, -13.5831, 0.66 ) }
    dend_6 { pt3dadd( -68.0581, -0.2843, -13.9366, 0.22 ) }
    dend_6 { pt3dadd( -73.8856, -0.45923, -14.9043, 0.22 ) }
    dend_6 { pt3dadd( -79.3635, 0.181689, -17.0371, 0.22 ) }
    dend_6 { pt3dadd( -84.6389, -0.262753, -19.6638, 0.22 ) }
    dend_6 { pt3dadd( -89.2064, -1.21382, -23.2961, 0.22 ) }
    dend_6 { pt3dadd( -93.426, -3.1114, -27.003, 0.22 ) }
    dend_6 { pt3dadd( -97.4777, -4.40234, -31.1156, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_6 { pt3dadd( -101.762, -6.04625, -34.8603, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 1/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 117.65, -161.905, -8.61128, 0.07 ) }
    dend_33 { pt3dadd( 118.352, -162.402, -9.34236, 0.07 ) }
    dend_33 { pt3dadd( 118.586, -162.568, -9.57624, 0.22 ) }
    dend_33 { pt3dadd( 118.859, -162.781, -9.84272, 0.22 ) }
    dend_33 { pt3dadd( 119.17, -163.073, -10.1522, 0.22 ) }
    dend_33 { pt3dadd( 119.533, -163.493, -10.5288, 0.22 ) }
    dend_33 { pt3dadd( 119.958, -164.05, -10.9482, 0.15 ) }
    dend_33 { pt3dadd( 120.224, -164.453, -11.2085, 0.29 ) }
    dend_33 { pt3dadd( 120.639, -165.134, -11.5823, 0.07 ) }
    dend_33 { pt3dadd( 120.984, -165.736, -11.8483, 0.15 ) }
    dend_33 { pt3dadd( 121.322, -166.366, -12.0561, 0.15 ) }
    dend_33 { pt3dadd( 121.749, -167.201, -12.2621, 0.07 ) }
    dend_33 { pt3dadd( 122.125, -167.932, -12.3999, 0.07 ) }
    dend_33 { pt3dadd( 122.481, -168.578, -12.4936, 0.07 ) }
    dend_33 { pt3dadd( 122.804, -169.136, -12.5541, 0.22 ) }
    dend_33 { pt3dadd( 123.373, -170.148, -12.6592, 0.15 ) }
    dend_33 { pt3dadd( 123.619, -170.633, -12.7099, 0.15 ) }
    dend_33 { pt3dadd( 123.88, -171.212, -12.7838, 0.15 ) }
    dend_33 { pt3dadd( 124.218, -172.03, -12.8982, 0.15 ) }
    dend_33 { pt3dadd( 124.469, -172.656, -13.0098, 0.15 ) }
    dend_33 { pt3dadd( 124.825, -173.579, -13.2066, 0.15 ) }
    dend_33 { pt3dadd( 125.026, -174.131, -13.3551, 0.15 ) }
    dend_33 { pt3dadd( 125.271, -174.894, -13.6202, 0.15 ) }
    dend_33 { pt3dadd( 125.355, -175.176, -13.7441, 0.15 ) }
    dend_33 { pt3dadd( 125.504, -175.623, -13.9844, 0.29 ) }
    dend_33 { pt3dadd( 125.728, -176.12, -14.2823, 0.29 ) }
    dend_33 { pt3dadd( 126.162, -176.872, -14.7664, 0.15 ) }
    dend_33 { pt3dadd( 126.503, -177.434, -15.1393, 0.15 ) }
    dend_33 { pt3dadd( 126.812, -177.948, -15.47, 0.22 ) }
    dend_33 { pt3dadd( 127.03, -178.301, -15.6871, 0.22 ) }
    dend_33 { pt3dadd( 127.378, -178.815, -15.9921, 0.22 ) }
    dend_33 { pt3dadd( 128.049, -179.705, -16.4844, 0.15 ) }
    dend_33 { pt3dadd( 128.555, -180.333, -16.8067, 0.15 ) }
    dend_33 { pt3dadd( 128.866, -180.727, -17.002, 0.15 ) }
    dend_33 { pt3dadd( 129.306, -181.291, -17.265, 0.37 ) }
    dend_33 { pt3dadd( 129.93, -182.122, -17.6431, 0.07 ) }
    dend_33 { pt3dadd( 130.325, -182.668, -17.9008, 0.07 ) }
    dend_33 { pt3dadd( 130.753, -183.247, -18.1891, 0.07 ) }
    dend_33 { pt3dadd( 131.278, -183.924, -18.5677, 0.15 ) }
    dend_33 { pt3dadd( 136.866, -192.058, -20.6181, 0.15 ) }
    dend_33 { pt3dadd( 141.138, -201.137, -22.1132, 0.15 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 42/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 117.65, -161.905, -8.61128, 0.22 ) }
    dend_26 { pt3dadd( 117.504, -162.817, -8.62595, 0.22 ) }
    dend_26 { pt3dadd( 117.423, -163.952, -8.59174, 0.22 ) }
    dend_26 { pt3dadd( 117.404, -164.423, -8.55948, 0.37 ) }
    dend_26 { pt3dadd( 117.353, -164.894, -8.53097, 0.44 ) }
    dend_26 { pt3dadd( 117.262, -165.46, -8.50523, 0.44 ) }
    dend_26 { pt3dadd( 117.081, -166.466, -8.47166, 0.29 ) }
    dend_26 { pt3dadd( 117.015, -166.884, -8.45426, 0.29 ) }
    dend_26 { pt3dadd( 116.942, -167.544, -8.43107, 0.29 ) }
    dend_26 { pt3dadd( 116.817, -168.774, -8.42936, 0.22 ) }
    dend_26 { pt3dadd( 116.774, -169.247, -8.4456, 0.29 ) }
    dend_26 { pt3dadd( 116.737, -169.668, -8.46913, 0.29 ) }
    dend_26 { pt3dadd( 116.677, -170.528, -8.54745, 0.22 ) }
    dend_26 { pt3dadd( 116.677, -171.152, -8.60557, 0.37 ) }
    dend_26 { pt3dadd( 116.739, -171.837, -8.66779, 0.59 ) }
    dend_26 { pt3dadd( 116.934, -172.981, -8.73731, 0.22 ) }
    dend_26 { pt3dadd( 117.011, -173.436, -8.75212, 0.22 ) }
    dend_26 { pt3dadd( 117.074, -173.889, -8.75384, 0.29 ) }
    dend_26 { pt3dadd( 117.158, -174.661, -8.73292, 0.29 ) }
    dend_26 { pt3dadd( 117.211, -175.182, -8.70959, 0.29 ) }
    dend_26 { pt3dadd( 117.305, -176.232, -8.6405, 0.29 ) }
    dend_26 { pt3dadd( 117.408, -177.468, -8.52908, 0.22 ) }
    dend_26 { pt3dadd( 117.486, -178.389, -8.41669, 0.44 ) }
    dend_26 { pt3dadd( 117.564, -179.357, -8.27254, 0.44 ) }
    dend_26 { pt3dadd( 117.631, -180.322, -8.11557, 0.22 ) }
    dend_26 { pt3dadd( 117.713, -181.646, -7.88457, 0.22 ) }
    dend_26 { pt3dadd( 117.754, -182.231, -7.78177, 0.37 ) }
    dend_26 { pt3dadd( 117.842, -183.171, -7.62192, 0.59 ) }
    dend_26 { pt3dadd( 117.897, -183.748, -7.52709, 0.15 ) }
    dend_26 { pt3dadd( 117.939, -184.422, -7.41953, 0.22 ) }
    dend_26 { pt3dadd( 117.958, -185.353, -7.27253, 0.29 ) }
    dend_26 { pt3dadd( 117.951, -186.158, -7.16182, 0.29 ) }
    dend_26 { pt3dadd( 117.931, -186.982, -7.05449, 0.29 ) }
    dend_26 { pt3dadd( 117.9, -187.859, -6.94733, 0.22 ) }
    dend_26 { pt3dadd( 117.868, -188.799, -6.84939, 0.22 ) }
    dend_26 { pt3dadd( 117.85, -189.403, -6.81398, 0.22 ) }
    dend_26 { pt3dadd( 117.825, -190.156, -6.80741, 0.29 ) }
    dend_26 { pt3dadd( 117.794, -191.148, -6.84281, 0.37 ) }
    dend_26 { pt3dadd( 117.789, -191.894, -6.88914, 0.88 ) }
    dend_26 { pt3dadd( 117.842, -192.864, -6.95497, 0.29 ) }
    dend_26 { pt3dadd( 117.962, -193.835, -7.0156, 0.22 ) }
    dend_26 { pt3dadd( 118.059, -194.421, -7.04606, 0.44 ) }
    dend_26 { pt3dadd( 118.177, -195.045, -7.06775, 0.59 ) }
    dend_26 { pt3dadd( 118.378, -196.046, -7.07742, 0.22 ) }
    dend_26 { pt3dadd( 118.552, -196.81, -7.04772, 0.22 ) }
    dend_26 { pt3dadd( 118.738, -197.506, -6.98932, 0.29 ) }
    dend_26 { pt3dadd( 118.876, -197.966, -6.92719, 0.29 ) }
    dend_26 { pt3dadd( 119.181, -198.834, -6.80468, 0.29 ) }
    dend_26 { pt3dadd( 119.46, -199.586, -6.72647, 0.22 ) }
    dend_26 { pt3dadd( 119.632, -200.04, -6.71348, 0.29 ) }
    dend_26 { pt3dadd( 119.828, -200.554, -6.73708, 0.29 ) }
    dend_26 { pt3dadd( 120.222, -201.538, -6.84869, 0.59 ) }
    dend_26 { pt3dadd( 120.595, -202.403, -7.02224, 0.37 ) }
    dend_26 { pt3dadd( 120.94, -203.119, -7.2452, 0.22 ) }
    dend_26 { pt3dadd( 121.257, -203.739, -7.51685, 0.44 ) }
    dend_26 { pt3dadd( 121.636, -204.427, -7.92438, 0.22 ) }
    dend_26 { pt3dadd( 121.92, -204.911, -8.27184, 0.29 ) }
    dend_26 { pt3dadd( 122.174, -205.341, -8.61391, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 122.412, -205.751, -8.93721, 0.74 ) }
    dend_26 { pt3dadd( 122.601, -206.071, -9.16232, 0.74 ) }
    dend_26 { pt3dadd( 123.105, -207.017, -9.66057, 0.22 ) }
    dend_26 { pt3dadd( 123.361, -207.603, -9.8431, 0.22 ) }
    dend_26 { pt3dadd( 123.617, -208.367, -9.9319, 0.22 ) }
    dend_26 { pt3dadd( 123.716, -208.755, -9.92061, 0.37 ) }
    dend_26 { pt3dadd( 123.81, -209.209, -9.86487, 0.37 ) }
    dend_26 { pt3dadd( 123.948, -210.014, -9.73516, 0.15 ) }
    dend_26 { pt3dadd( 124.005, -210.533, -9.63998, 0.15 ) }
    dend_26 { pt3dadd( 124.056, -211.183, -9.54233, 0.37 ) }
    dend_26 { pt3dadd( 124.107, -212.039, -9.44607, 0.22 ) }
    dend_26 { pt3dadd( 124.148, -212.832, -9.37783, 1.03 ) }
    dend_26 { pt3dadd( 124.225, -213.987, -9.31819, 0.29 ) }
    dend_26 { pt3dadd( 124.295, -214.749, -9.30852, 0.37 ) }
    dend_26 { pt3dadd( 124.378, -215.445, -9.32088, 0.22 ) }
    dend_26 { pt3dadd( 124.515, -216.329, -9.3696, 0.22 ) }
    dend_26 { pt3dadd( 124.649, -217.035, -9.43681, 0.59 ) }
    dend_26 { pt3dadd( 124.874, -218.107, -9.57809, 0.22 ) }
    dend_26 { pt3dadd( 125.037, -218.826, -9.68696, 0.37 ) }
    dend_26 { pt3dadd( 125.176, -219.429, -9.79022, 0.37 ) }
    dend_26 { pt3dadd( 125.397, -220.47, -9.96546, 0.22 ) }
    dend_26 { pt3dadd( 125.542, -221.261, -10.0984, 0.15 ) }
    dend_26 { pt3dadd( 125.63, -221.914, -10.1972, 0.15 ) }
    dend_26 { pt3dadd( 125.689, -222.473, -10.2636, 0.29 ) }
    dend_26 { pt3dadd( 125.753, -223.021, -10.3017, 0.15 ) }
    dend_26 { pt3dadd( 125.822, -223.483, -10.3096, 0.15 ) }
    dend_26 { pt3dadd( 125.95, -224.087, -10.2707, 0.29 ) }
    dend_26 { pt3dadd( 126.069, -224.543, -10.2096, 0.29 ) }
    dend_26 { pt3dadd( 126.263, -225.219, -10.0793, 0.22 ) }
    dend_26 { pt3dadd( 126.476, -225.972, -9.91977, 0.22 ) }
    dend_26 { pt3dadd( 126.766, -227.016, -9.6886, 0.29 ) }
    dend_26 { pt3dadd( 127.021, -227.961, -9.47298, 0.88 ) }
    dend_26 { pt3dadd( 127.306, -229.03, -9.20443, 0.22 ) }
    dend_26 { pt3dadd( 127.515, -229.782, -8.99779, 0.59 ) }
    dend_26 { pt3dadd( 127.825, -230.784, -8.67875, 0.15 ) }
    dend_26 { pt3dadd( 128.023, -231.318, -8.47773, 0.22 ) }
    dend_26 { pt3dadd( 128.266, -231.86, -8.25469, 0.22 ) }
    dend_26 { pt3dadd( 128.458, -232.219, -8.11043, 0.52 ) }
    dend_26 { pt3dadd( 128.718, -232.615, -7.95764, 0.52 ) }
    dend_26 { pt3dadd( 129.175, -233.217, -7.73377, 0.15 ) }
    dend_26 { pt3dadd( 129.541, -233.654, -7.58535, 0.52 ) }
    dend_26 { pt3dadd( 129.828, -234.007, -7.49425, 0.52 ) }
    dend_26 { pt3dadd( 130.244, -234.557, -7.38959, 0.15 ) }
    dend_26 { pt3dadd( 130.627, -235.137, -7.28836, 0.29 ) }
    dend_26 { pt3dadd( 130.969, -235.71, -7.1762, 0.29 ) }
    dend_26 { pt3dadd( 131.236, -236.221, -7.05599, 0.44 ) }
    dend_26 { pt3dadd( 131.486, -236.767, -6.89518, 0.96 ) }
    dend_26 { pt3dadd( 131.807, -237.574, -6.5972, 0.22 ) }
    dend_26 { pt3dadd( 132.032, -238.304, -6.3009, 0.22 ) }
    dend_26 { pt3dadd( 132.174, -238.868, -6.07332, 0.22 ) }
    dend_26 { pt3dadd( 132.336, -239.561, -5.79266, 0.15 ) }
    dend_26 { pt3dadd( 132.445, -240.012, -5.61774, 0.15 ) }
    dend_26 { pt3dadd( 132.57, -240.49, -5.46322, 0.59 ) }
    dend_26 { pt3dadd( 132.752, -241.134, -5.28845, 0.15 ) }
    dend_26 { pt3dadd( 133.003, -241.889, -5.13441, 0.15 ) }
    dend_26 { pt3dadd( 133.258, -242.591, -5.03545, 0.29 ) }
    dend_26 { pt3dadd( 133.551, -243.31, -4.96656, 0.52 ) }
    dend_26 { pt3dadd( 133.843, -244.003, -4.90972, 0.88 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 58/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 133.843, -244.003, -4.90972, 0.15 ) }
    dend_32 { pt3dadd( 133.067, -244.811, -5.08466, 0.15 ) }
    dend_32 { pt3dadd( 132.685, -245.26, -5.14857, 0.37 ) }
    dend_32 { pt3dadd( 132.247, -245.82, -5.17108, 0.37 ) }
    dend_32 { pt3dadd( 131.461, -246.912, -5.12397, 0.07 ) }
    dend_32 { pt3dadd( 131.142, -247.403, -5.0856, 0.15 ) }
    dend_32 { pt3dadd( 130.593, -248.315, -5.01155, 0.07 ) }
    dend_32 { pt3dadd( 130.337, -248.783, -4.94986, 0.29 ) }
    dend_32 { pt3dadd( 129.818, -249.783, -4.82683, 0.22 ) }
    dend_32 { pt3dadd( 129.296, -250.803, -4.71788, 0.07 ) }
    dend_32 { pt3dadd( 128.662, -251.941, -4.67302, 0.07 ) }
    dend_32 { pt3dadd( 128.293, -252.433, -4.69218, 0.29 ) }
    dend_32 { pt3dadd( 128.063, -252.603, -4.73477, 0.29 ) }
    dend_32 { pt3dadd( 127.094, -253.126, -4.96751, 0.07 ) }
    dend_32 { pt3dadd( 126.599, -253.271, -5.12341, 0.07 ) }
    dend_32 { pt3dadd( 125.383, -253.346, -5.54037, 0.07 ) }
    dend_32 { pt3dadd( 123.858, -253.18, -6.05298, 0.07 ) }
    dend_32 { pt3dadd( 122.137, -252.821, -6.60238, 0.07 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 133.843, -244.003, -4.90972, 0.15 ) }
    dend_27 { pt3dadd( 134.055, -244.646, -4.97728, 0.15 ) }
    dend_27 { pt3dadd( 134.231, -245.27, -5.00586, 0.22 ) }
    dend_27 { pt3dadd( 134.395, -245.803, -5.00348, 0.37 ) }
    dend_27 { pt3dadd( 134.566, -246.298, -4.98329, 0.37 ) }
    dend_27 { pt3dadd( 134.851, -247.036, -4.93044, 0.15 ) }
    dend_27 { pt3dadd( 134.969, -247.361, -4.91031, 0.22 ) }
    dend_27 { pt3dadd( 135.199, -248.001, -4.8649, 0.29 ) }
    dend_27 { pt3dadd( 135.421, -248.594, -4.81964, 0.29 ) }
    dend_27 { pt3dadd( 135.659, -249.185, -4.76958, 0.81 ) }
    dend_27 { pt3dadd( 135.987, -249.901, -4.70121, 0.15 ) }
    dend_27 { pt3dadd( 136.3, -250.522, -4.64591, 0.15 ) }
    dend_27 { pt3dadd( 136.577, -251.049, -4.61355, 0.15 ) }
    dend_27 { pt3dadd( 136.85, -251.582, -4.60932, 0.22 ) }
    dend_27 { pt3dadd( 137.032, -251.966, -4.62849, 0.52 ) }
    dend_27 { pt3dadd( 137.301, -252.537, -4.67661, 0.88 ) }
    dend_27 { pt3dadd( 137.635, -253.2, -4.75429, 0.22 ) }
    dend_27 { pt3dadd( 137.822, -253.535, -4.7953, 0.15 ) }
    dend_27 { pt3dadd( 138.132, -254.087, -4.88003, 0.22 ) }
    dend_27 { pt3dadd( 138.598, -254.912, -5.02502, 0.15 ) }
    dend_27 { pt3dadd( 138.838, -255.346, -5.11016, 0.59 ) }
    dend_27 { pt3dadd( 139.155, -255.942, -5.23434, 0.15 ) }
    dend_27 { pt3dadd( 139.394, -256.408, -5.33222, 0.22 ) }
    dend_27 { pt3dadd( 139.679, -257.021, -5.44891, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_27 { pt3dadd( 139.879, -257.531, -5.53729, 0.37 ) }
    dend_27 { pt3dadd( 140.04, -258.031, -5.61509, 0.22 ) }
    dend_27 { pt3dadd( 140.187, -258.559, -5.69753, 0.74 ) }
    dend_27 { pt3dadd( 140.3, -259.001, -5.76096, 0.81 ) }
    dend_27 { pt3dadd( 140.508, -259.839, -5.87635, 0.15 ) }
    dend_27 { pt3dadd( 140.74, -260.79, -5.9966, 0.22 ) }
    dend_27 { pt3dadd( 140.888, -261.427, -6.07162, 0.15 ) }
    dend_27 { pt3dadd( 140.957, -261.737, -6.10121, 0.29 ) }
    dend_27 { pt3dadd( 141.044, -262.162, -6.136, 0.29 ) }
    dend_27 { pt3dadd( 141.146, -262.719, -6.16375, 0.15 ) }
    dend_27 { pt3dadd( 141.243, -263.372, -6.15613, 0.44 ) }
    dend_27 { pt3dadd( 141.311, -264.237, -6.06696, 0.44 ) }
    dend_27 { pt3dadd( 141.307, -264.656, -5.99534, 0.22 ) }
    dend_27 { pt3dadd( 141.258, -265.158, -5.88091, 0.74 ) }
    dend_27 { pt3dadd( 141.131, -265.824, -5.6778, 0.52 ) }
    dend_27 { pt3dadd( 140.982, -266.417, -5.44669, 0.22 ) }
    dend_27 { pt3dadd( 140.836, -266.959, -5.20908, 0.22 ) }
    dend_27 { pt3dadd( 140.735, -267.328, -5.04175, 0.22 ) }
    dend_27 { pt3dadd( 140.611, -267.798, -4.83556, 0.22 ) }
    dend_27 { pt3dadd( 140.433, -268.503, -4.5406, 0.22 ) }
    dend_27 { pt3dadd( 140.309, -268.975, -4.36411, 0.22 ) }
    dend_27 { pt3dadd( 140.126, -269.659, -4.1392, 1.11 ) }
    dend_27 { pt3dadd( 139.839, -270.752, -3.82923, 0.29 ) }
    dend_27 { pt3dadd( 139.671, -271.434, -3.6478, 0.29 ) }
    dend_27 { pt3dadd( 139.54, -271.977, -3.50623, 0.29 ) }
    dend_27 { pt3dadd( 139.401, -272.501, -3.38563, 0.22 ) }
    dend_27 { pt3dadd( 139.213, -273.11, -3.25484, 0.22 ) }
    dend_27 { pt3dadd( 139.018, -273.737, -3.15078, 0.74 ) }
    dend_27 { pt3dadd( 138.787, -274.595, -3.0739, 0.07 ) }
    dend_27 { pt3dadd( 138.677, -275.115, -3.05972, 0.07 ) }
    dend_27 { pt3dadd( 138.572, -275.846, -3.08394, 0.07 ) }
    dend_27 { pt3dadd( 138.535, -276.5, -3.1689, 0.81 ) }
    dend_27 { pt3dadd( 138.569, -277.341, -3.37915, 0.15 ) }
    dend_27 { pt3dadd( 138.622, -277.824, -3.54752, 0.15 ) }
    dend_27 { pt3dadd( 138.672, -278.125, -3.6773, 0.29 ) }
    dend_27 { pt3dadd( 138.763, -278.569, -3.88645, 0.44 ) }
    dend_27 { pt3dadd( 138.928, -279.289, -4.23363, 0.15 ) }
    dend_27 { pt3dadd( 139.096, -280.108, -4.64916, 0.22 ) }
    dend_27 { pt3dadd( 139.194, -280.746, -4.97217, 0.44 ) }
    dend_27 { pt3dadd( 139.253, -281.215, -5.22674, 0.22 ) }
    dend_27 { pt3dadd( 139.318, -281.741, -5.53274, 0.74 ) }
    dend_27 { pt3dadd( 139.373, -282.12, -5.75794, 0.74 ) }
    dend_27 { pt3dadd( 139.503, -283.025, -6.3061, 0.15 ) }
    dend_27 { pt3dadd( 139.569, -283.484, -6.60238, 0.37 ) }
    dend_27 { pt3dadd( 139.701, -284.256, -7.09953, 0.07 ) }
    dend_27 { pt3dadd( 139.8, -284.709, -7.37183, 0.07 ) }
    dend_27 { pt3dadd( 139.923, -285.151, -7.60777, 0.07 ) }
    dend_27 { pt3dadd( 140.126, -285.786, -7.90056, 0.22 ) }
    dend_27 { pt3dadd( 140.366, -286.447, -8.16108, 0.81 ) }
    dend_27 { pt3dadd( 140.62, -287.145, -8.3736, 0.52 ) }
    dend_27 { pt3dadd( 141.07, -288.324, -8.62913, 0.15 ) }
    dend_27 { pt3dadd( 141.313, -288.975, -8.73822, 0.15 ) }
    dend_27 { pt3dadd( 141.532, -289.578, -8.82038, 0.88 ) }
    dend_27 { pt3dadd( 141.718, -290.108, -8.87165, 0.66 ) }
    dend_27 { pt3dadd( 142.032, -291.071, -8.9352, 0.07 ) }
    dend_27 { pt3dadd( 142.226, -291.745, -8.96597, 0.15 ) }
    dend_27 { pt3dadd( 142.334, -292.197, -8.96532, 0.07 ) }
    dend_27 { pt3dadd( 142.431, -292.642, -8.95707, 0.15 ) }
    dend_27 { pt3dadd( 142.552, -293.247, -8.93986, 0.15 ) }
    dend_27 { pt3dadd( 142.638, -293.705, -8.92384, 0.59 ) }
    dend_27 { pt3dadd( 142.749, -294.299, -8.92263, 0.88 ) }
    dend_27 { pt3dadd( 142.929, -295.355, -8.91367, 0.22 ) }
    dend_27 { pt3dadd( 143.093, -296.104, -8.88111, 1.03 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 63/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 143.093, -296.104, -8.88111, 0.07 ) }
    dend_31 { pt3dadd( 143.682, -297.137, -9.02384, 0.07 ) }
    dend_31 { pt3dadd( 144.134, -298.003, -9.09239, 0.22 ) }
    dend_31 { pt3dadd( 144.551, -298.821, -9.12517, 0.07 ) }
    dend_31 { pt3dadd( 144.833, -299.416, -9.10262, 0.07 ) }
    dend_31 { pt3dadd( 145.145, -300.136, -9.01947, 0.07 ) }
    dend_31 { pt3dadd( 145.366, -300.697, -8.90933, 0.29 ) }
    dend_31 { pt3dadd( 145.605, -301.445, -8.69088, 0.07 ) }
    dend_31 { pt3dadd( 145.711, -301.896, -8.51086, 0.66 ) }
    dend_31 { pt3dadd( 145.888, -302.799, -8.07077, 0.07 ) }
    dend_31 { pt3dadd( 145.997, -303.402, -7.73487, 0.59 ) }
    dend_31 { pt3dadd( 146.136, -304.242, -7.21311, 0.07 ) }
    dend_31 { pt3dadd( 146.202, -304.698, -6.91906, 0.15 ) }
    dend_31 { pt3dadd( 146.294, -305.385, -6.49124, 0.07 ) }
    dend_31 { pt3dadd( 146.354, -305.967, -6.12838, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 78/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 143.093, -296.104, -8.88111, 0.29 ) }
    dend_28 { pt3dadd( 142.965, -296.68, -9.0091, 0.29 ) }
    dend_28 { pt3dadd( 142.872, -297.302, -9.12998, 0.15 ) }
    dend_28 { pt3dadd( 142.833, -297.613, -9.18869, 0.22 ) }
    dend_28 { pt3dadd( 142.809, -297.895, -9.24797, 0.22 ) }
    dend_28 { pt3dadd( 142.778, -298.591, -9.4029, 0.74 ) }
    dend_28 { pt3dadd( 142.786, -299.597, -9.6602, 0.15 ) }
    dend_28 { pt3dadd( 142.813, -299.931, -9.75036, 0.29 ) }
    dend_28 { pt3dadd( 142.841, -300.145, -9.81153, 0.29 ) }
    dend_28 { pt3dadd( 142.96, -300.755, -9.99835, 0.07 ) }
    dend_28 { pt3dadd( 143.104, -301.323, -10.1776, 0.15 ) }
    dend_28 { pt3dadd( 143.336, -302.08, -10.4327, 0.07 ) }
    dend_28 { pt3dadd( 143.499, -302.578, -10.597, 0.59 ) }
    dend_28 { pt3dadd( 143.699, -303.188, -10.8016, 0.74 ) }
    dend_28 { pt3dadd( 144.02, -304.229, -11.158, 0.07 ) }
    dend_28 { pt3dadd( 144.184, -304.842, -11.3885, 0.07 ) }
    dend_28 { pt3dadd( 144.3, -305.305, -11.5878, 0.29 ) }
    dend_28 { pt3dadd( 144.46, -305.93, -11.8856, 0.07 ) }
    dend_28 { pt3dadd( 144.542, -306.217, -12.0452, 0.37 ) }
    dend_28 { pt3dadd( 144.65, -306.614, -12.3013, 0.66 ) }
    dend_28 { pt3dadd( 144.769, -307.24, -12.7238, 0.22 ) }
    dend_28 { pt3dadd( 144.834, -307.686, -13.016, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_28 { pt3dadd( 144.916, -308.391, -13.4359, 0.15 ) }
    dend_28 { pt3dadd( 144.947, -308.677, -13.59, 0.44 ) }
    dend_28 { pt3dadd( 145.011, -309.118, -13.8001, 0.81 ) }
    dend_28 { pt3dadd( 145.156, -309.991, -14.1747, 0.07 ) }
    dend_28 { pt3dadd( 145.236, -310.548, -14.3925, 0.07 ) }
    dend_28 { pt3dadd( 145.29, -311.108, -14.6065, 0.15 ) }
    dend_28 { pt3dadd( 145.325, -311.72, -14.8414, 0.74 ) }
    dend_28 { pt3dadd( 145.413, -312.9, -15.293, 0.07 ) }
    dend_28 { pt3dadd( 145.479, -313.41, -15.4978, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 9/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 145.479, -313.41, -15.4978, 0.07 ) }
    dend_30 { pt3dadd( 145.344, -313.823, -15.6126, 0.07 ) }
    dend_30 { pt3dadd( 145.127, -314.533, -15.7643, 0.29 ) }
    dend_30 { pt3dadd( 144.88, -315.541, -15.9387, 0.15 ) }
    dend_30 { pt3dadd( 144.74, -316.11, -16.0371, 0.22 ) }
    dend_30 { pt3dadd( 144.469, -317.216, -16.2286, 0.07 ) }
    dend_30 { pt3dadd( 144.201, -318.308, -16.4175, 0.07 ) }
    dend_30 { pt3dadd( 144.111, -318.662, -16.4638, 0.15 ) }
    dend_30 { pt3dadd( 143.918, -319.408, -16.4768, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 18/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 145.479, -313.41, -15.4978, 0.22 ) }
    dend_29 { pt3dadd( 145.602, -314.606, -15.4365, 0.22 ) }
    dend_29 { pt3dadd( 145.654, -314.906, -15.4014, 0.07 ) }
    dend_29 { pt3dadd( 145.757, -315.429, -15.3321, 0.44 ) }
    dend_29 { pt3dadd( 146.094, -317.061, -15.0923, 0.07 ) }
    dend_29 { pt3dadd( 146.342, -318.146, -14.9173, 0.07 ) }
    dend_29 { pt3dadd( 146.517, -318.88, -14.7529, 0.15 ) }
    dend_29 { pt3dadd( 146.822, -320.091, -14.3393, 0.07 ) }
    dend_29 { pt3dadd( 146.933, -320.538, -14.1422, 0.15 ) }
    dend_29 { pt3dadd( 147.047, -320.96, -13.9345, 0.07 ) }
    dend_29 { pt3dadd( 147.204, -321.45, -13.6502, 0.22 ) }
    dend_29 { pt3dadd( 147.586, -322.833, -12.7423, 0.15 ) }
    dend_29 { pt3dadd( 147.854, -323.95, -11.9227, 0.07 ) }
    dend_29 { pt3dadd( 147.972, -324.528, -11.449, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_35, dend_16, dend_13, dend_12, dend_3, dend_0, dend_45, dend_40, dend_38, dend_37, dend_22, dend_17, dend_15, dend_14, dend_9, dend_4, dend_2, dend_1, dend_42, dend_41, dend_34, dend_23, dend_21, dend_18, dend_11, dend_10, dend_8, dend_5, dend_44, dend_43, dend_25, dend_24, dend_20, dend_19, dend_7, dend_6, dend_33, dend_26, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_35, dend_16, dend_13, dend_12, dend_3, dend_0, dend_45, dend_40, dend_38, dend_37, dend_22, dend_17, dend_15, dend_14, dend_9, dend_4, dend_2, dend_1, dend_42, dend_41, dend_34, dend_23, dend_21, dend_18, dend_11, dend_10, dend_8, dend_5, dend_44, dend_43, dend_25, dend_24, dend_20, dend_19, dend_7, dend_6, dend_33, dend_26, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_35 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_12 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_45 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_38 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_37 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_17 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_15 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_14 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_9 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_42 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_41 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_23 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_21 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_5 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_44 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_20 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_6 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_33 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_26 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_27 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_13 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_3 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_16 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_4 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_36 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_43 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_24 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_25 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_32 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_31 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_28 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_30 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_29 OneSecGrp_SectionRef_50.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_46 nseg = 7
    dend_35 nseg = 7
    dend_12 nseg = 5
    dend_45 nseg = 5
    dend_38 nseg = 9
    dend_37 nseg = 5
    dend_17 nseg = 3
    dend_15 nseg = 9
    dend_14 nseg = 5
    dend_9 nseg = 3
    dend_2 nseg = 13
    dend_1 nseg = 13
    dend_42 nseg = 3
    dend_41 nseg = 7
    dend_34 nseg = 11
    dend_23 nseg = 7
    dend_21 nseg = 5
    dend_11 nseg = 7
    dend_10 nseg = 7
    dend_8 nseg = 9
    dend_5 nseg = 3
    dend_44 nseg = 5
    dend_20 nseg = 5
    dend_19 nseg = 5
    dend_6 nseg = 3
    dend_33 nseg = 3
    dend_26 nseg = 5
    dend_27 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L23_LBC_1fb6d0ce77_0_0


