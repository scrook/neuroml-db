// Cell: cNAC187_L5_LBC_ebed230edd_0_0
/*
{
  "id" : "cNAC187_L5_LBC_ebed230edd_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.47353, -9.82937, -0.0150783, 3.11345", "-4.06901, -8.79368, -0.0135938, 5.39642", "-3.66449, -7.75799, -0.0121094, 6.72082", "-3.25998, -6.72231, -0.0106249, 7.70122", "-2.85546, -5.68662, -0.00914047, 8.43968", "-2.45095, -4.65093, -0.00765602, 9.25919", "-2.04643, -3.61524, -0.00617157, 10.0787", "-1.64192, -2.57956, -0.00468712, 10.8982", "-1.2374, -1.54387, -0.00320267, 11.7151", "-0.832884, -0.508183, -0.00171822, 12.3073", "-0.428368, 0.527504, -2.33766E-4, 12.0741", "-0.023852, 1.56319, 0.00125068, 11.8342", "0.380664, 2.59888, 0.00273513, 11.5616", "0.78518, 3.63457, 0.00421958, 11.0624", "1.1897, 4.67025, 0.00570403, 10.5822", "1.59421, 5.70594, 0.00718848, 10.0942", "1.99873, 6.74163, 0.00867293, 9.27653", "2.40324, 7.77731, 0.0101574, 7.88308", "2.80776, 8.813, 0.0116418, 6.37032", "3.21227, 9.84869, 0.0131263, 4.97817", "3.61679, 10.8844, 0.0146107, 4.57234" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.0120471, -8.5686, 1.51098, 1.08", "1.64622, -11.6583, 1.26285, 1.08", "2.92792, -14.0815, 1.06823, 1.08", "3.8101, -15.7494, 0.934277, 1.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.41795, -9.3666, -0.0190242, 1.08", "-3.86095, -9.9587, -0.0268769, 1.08", "-0.416738, -13.2439, -0.0881683, 1.08", "1.04012, -14.7362, -0.114138, 1.08", "3.38167, -17.1563, -0.153611, 1.08", "7.40731, -21.5072, -0.218805, 1.08", "10.3754, -24.796, -0.263372, 1.08", "10.5343, -24.9904, -0.26586, 1.08", "15.3771, -32.0087, -0.390031, 1.08", "16.8082, -34.456, -0.481488, 1.08", "17.9716, -36.8759, -0.613106, 1.08", "19.1675, -40.7974, -0.869994, 1.08", "20.1407, -46.061, -1.23488, 1.08", "20.607, -50.6868, -1.57954, 1.08", "20.5612, -52.4676, -1.72121, 1.08", "20.464, -54.7105, -1.88053, 1.08", "20.2685, -60.2987, -2.2392, 1.08", "20.3268, -63.6499, -2.42189, 1.08", "20.6572, -66.5935, -2.67337, 1.08", "21.2271, -70.465, -3.1347, 1.08", "22.1771, -75.6895, -3.85746, 1.08", "22.277, -76.2665, -3.95401, 1.08", "23.0158, -80.0578, -4.69506, 1.08", "24.2087, -84.8428, -5.67789, 1.08", "25.169, -88.5385, -6.38569, 1.08", "26.8656, -94.3067, -7.56928, 1.08", "27.6787, -97.1348, -8.14734, 1.08", "28.091, -98.7211, -8.4459, 1.08", "29.0052, -102.74, -9.16689, 1.08", "30.6061, -108.806, -10.0824, 1.08", "31.7598, -113.341, -10.811, 0.81", "32.2094, -114.922, -11.0801, 0.81", "33.0265, -117.835, -11.6943, 0.81", "33.853, -120.871, -12.3846, 0.81", "34.5203, -123.913, -13.0767, 0.81", "35.5465, -128.948, -14.208, 0.81", "37.4505, -138.172, -16.3284, 0.81", "38.556, -142.452, -17.3812, 0.81", "39.7474, -146.501, -18.3464, 0.81", "41.1332, -150.804, -19.2831, 0.81", "41.2228, -151.046, -19.3375, 0.81", "43.2953, -155.768, -20.4123, 0.81", "44.4869, -158.473, -20.9586, 0.81", "47.963, -165.155, -22.0451, 0.81", "50.4376, -169.477, -22.7606, 0.81", "52.0832, -172.166, -23.2385, 0.81", "52.2119, -172.392, -23.2771, 0.81", "53.6137, -175.292, -23.6999, 0.81", "56.5949, -182.237, -24.8688, 0.81", "56.611, -182.283, -24.8765, 0.81", "57.0701, -184.773, -25.2114, 0.81", "57.2935, -186.534, -25.3838, 0.81", "57.7547, -190.739, -25.7351, 0.81", "57.9087, -191.939, -25.8239, 0.81", "58.6833, -199.157, -26.396, 0.81", "59.1433, -202.784, -26.8435, 0.81", "59.7604, -206.877, -27.4606, 0.81", "60.6594, -212.856, -28.7976, 0.81", "61.2529, -216.464, -29.8406, 0.81", "61.9192, -220.376, -31.2424, 0.81", "62.7831, -225.282, -33.368, 0.81", "62.7927, -225.334, -33.3935, 0.81", "63.5071, -230.645, -36.408, 0.81", "63.7663, -233.422, -38.2377, 0.81", "63.8239, -235.884, -39.9131, 0.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-6.04795, -8.2851, 1.45098, 1.08", "-6.24227, -12.8478, -0.071938, 1.08", "-6.51112, -19.1607, -2.17904, 1.35", "-6.94594, -29.3705, -5.58683, 1.35", "-7.11429, -33.3235, -6.90622, 1.35", "-7.12816, -33.6493, -7.015, 1.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-2.31794, 7.3914, 2.93098, 1.89", "-4.87926, 8.76935, 2.93098, 1.89", "-8.39275, 10.6596, 2.93098, 1.89" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.377952, 9.0294, 1.46098, 1.41", "-3.46974, 10.3766, 2.46015, 1.41", "-6.65401, 11.7642, 3.48921, 1.23", "-9.82785, 13.1471, 4.51488, 1.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.75205, 11.7804, -2.91902, 1.11", "4.85352, 13.8175, -3.02394, 1.11", "5.76742, 19.2727, -3.41126, 1.11", "7.21926, 24.5323, -3.80729, 1.11", "8.51375, 27.51, -4.01647, 1.11", "11.2021, 32.7535, -4.62832, 1.11", "14.3182, 38.7428, -5.558, 1.11", "16.1912, 41.924, -6.14253, 1.11", "20.0067, 47.6578, -7.42497, 1.67", "25.7784, 56.1184, -9.57994, 1.11", "28.2148, 59.6808, -10.5079, 1.11", "30.4815, 63.115, -11.4531, 1.11", "32.8585, 67.0328, -12.5242, 1.11", "36.3178, 72.8855, -13.9806, 1.11", "39.4208, 78.1894, -15.4436, 1.11", "41.8921, 82.5487, -16.649, 1.11", "44.9101, 87.6432, -17.9551, 1.11", "46.0212, 89.5064, -18.4273, 1.11", "50.282, 96.7757, -20.342, 1.11", "53.1962, 101.755, -21.6011, 1.11", "53.9581, 103.085, -21.9373, 1.11", "55.4159, 105.895, -22.6174, 1.11", "58.2958, 111.67, -24.0453, 1.11", "61.5857, 118.459, -25.7332, 1.11", "63.7045, 123.152, -26.9219, 1.11", "66.0321, 127.95, -28.086, 1.11", "68.1542, 132.157, -29.208, 1.11", "69.9914, 135.916, -30.3245, 1.06", "71.008, 138.019, -31.0776, 0.53", "71.7826, 140.053, -31.873, 0.35", "72.8035, 143.425, -33.3823, 0.35", "72.8633, 143.678, -33.5068, 0.35", "73.594, 148.651, -35.8509, 0.35", "73.7485, 150.237, -36.6255, 0.35", "73.99, 152.88, -38.0087, 0.35", "74.3492, 156.455, -39.8617, 0.35", "74.6293, 158.741, -41.0653, 0.35", "75.1873, 161.696, -42.6741, 0.35", "76.0798, 164.916, -44.4432, 0.35", "76.5203, 166.444, -45.2354, 0.35", "77.0593, 168.31, -46.1751, 0.35", "77.7322, 170.943, -47.4244, 0.35", "78.2472, 173.135, -48.4236, 0.35", "78.6582, 174.765, -49.1807, 0.35", "78.8909, 175.879, -49.6119, 1.23", "78.958, 176.235, -49.7719, 1.23", "79.3378, 178.43, -50.9115, 0.18", "79.7108, 179.99, -51.8756, 0.18", "80.1092, 181.151, -52.6414, 0.18", "80.7125, 182.679, -53.7509, 1.23", "81.3671, 183.997, -54.6558, 0.18", "81.6186, 184.446, -54.9046, 0.18", "83.4519, 187.029, -56.0292, 0.18", "83.934, 187.643, -56.2837, 0.88", "84.2534, 188.01, -56.4322, 0.18", "86.0968, 189.99, -57.1439, 0.18", "87.7952, 191.85, -57.6194, 0.18", "90.3522, 194.589, -58.1308, 1.06", "90.6249, 194.868, -58.1549, 1.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999957196365796,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.61679, 10.8844, 0.0146107, 0.81", "9.07397, 24.8565, 0.0146107, 0.81", "14.5311, 38.8286, 0.0146107, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.8101, -15.7494, 0.934277, 1.08", "9.4368, -15.4345, 1.5232, 1.08", "20.2159, -13.6921, 3.30158, 1.08", "31.1698, -13.612, 4.75269, 1.08", "42.1989, -14.2942, 4.95283, 1.08", "53.0337, -14.2045, 7.1206, 1.08", "63.7992, -12.4659, 8.98283, 1.08", "74.0979, -9.3256, 11.6499, 1.08", "84.0468, -7.55769, 16.1567, 1.08", "93.0927, -3.98828, 21.5221, 1.08", "102.287, 0.311301, 26.0894, 1.08", "111.729, 4.88313, 29.8371, 1.08", "120.926, 10.1044, 33.422, 1.08", "131.45, 13.0824, 35.2448, 1.08", "140.998, 17.5909, 38.7858, 1.08", "150.168, 23.2733, 41.7488, 1.08", "159.02, 29.9025, 43.7255, 1.08", "168.604, 34.5498, 46.9964, 1.08", "178.246, 36.8062, 51.9513, 1.08", "188.534, 37.6109, 55.9122, 1.08", "198.062, 38.9353, 61.3662, 1.08", "208.482, 38.2668, 64.9861, 1.08" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.8101, -15.7494, 0.934277, 1.08", "6.48485, -21.5295, 0.881493, 1.08", "9.33879, -27.2466, 0.670546, 1.08", "12.9002, -33.2984, 0.257113, 1.08", "16.0153, -38.1959, -0.162865, 1.08", "20.6868, -45.5405, -0.792688, 0.81", "22.3467, -48.1502, -1.01648, 0.81", "25.0099, -52.0356, -1.44131, 0.81", "28.7472, -57.2468, -2.29087, 0.81", "28.7971, -57.3, -2.30519, 0.81" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "63.8239, -235.884, -39.9131, 0.27", "77.0942, -241.541, -43.346, 0.27", "95.0752, -249.207, -47.9975, 0.27" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "63.8239, -235.884, -39.9131, 0.27", "63.2275, -239.81, -42.6686, 0.27", "62.3613, -245.23, -46.6045, 0.27", "61.5171, -250.47, -50.3547, 0.27", "60.858, -254.562, -53.2828, 0.27", "60.0056, -259.853, -57.0696, 0.27", "58.4739, -269.361, -63.8743, 0.27", "58.432, -269.573, -64.0333, 0.27", "58.1477, -271.294, -65.3069, 0.27" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.12816, -33.6493, -7.015, 1.08", "-9.29011, -36.0291, -7.29592, 1.08", "-12.1861, -39.217, -7.67223, 1.08", "-15.181, -42.5137, -8.06139, 1.08", "-19.6434, -47.4258, -8.64123, 1.08", "-21.8866, -49.8949, -8.93271, 1.08", "-24.3986, -52.6601, -9.25912, 1.08" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.12816, -33.6493, -7.015, 0.27", "-8.40647, -36.9692, -7.27556, 0.27", "-8.77232, -39.7569, -7.67387, 0.54", "-8.78252, -40.3942, -7.75071, 1.08", "-8.77858, -40.6197, -7.77625, 1.08", "-8.77038, -44.0502, -8.17295, 1.08", "-8.78631, -45.6366, -8.35293, 1.08", "-8.77318, -50.8893, -8.95711, 1.08", "-8.79811, -55.7881, -9.62087, 1.08", "-8.79718, -56.0123, -9.65618, 1.08", "-8.64766, -60.1266, -10.4346, 1.08", "-8.45607, -62.3639, -10.9563, 1.08", "-8.37793, -64.0351, -11.3318, 1.08", "-8.40025, -65.6301, -11.6623, 1.08", "-8.28116, -67.7988, -12.1538, 1.08", "-8.04925, -70.3769, -12.7031, 1.08", "-7.90711, -72.1694, -13.0015, 1.08", "-7.6473, -78.0982, -13.818, 1.08", "-7.65032, -79.2354, -13.9834, 1.08", "-7.6535, -84.1741, -14.8591, 1.08", "-7.66365, -84.6725, -14.9535, 1.08", "-7.79932, -90.1176, -16.0762, 1.08", "-7.84655, -93.4594, -16.8371, 1.08", "-7.6728, -96.8592, -17.7449, 1.08", "-7.67333, -102.016, -19.106, 1.08", "-7.67875, -102.226, -19.1639, 1.08", "-7.6935, -103.116, -19.4208, 1.08", "-7.71233, -106.212, -20.3638, 1.08", "-7.73554, -113.235, -22.4051, 1.08", "-7.8575, -118.712, -23.7376, 1.08", "-7.97786, -123.089, -24.6713, 1.08", "-8.02043, -126.35, -25.2887, 1.08", "-8.01943, -126.399, -25.2969, 1.08", "-7.84058, -130.443, -25.8433, 1.08", "-7.30496, -135.89, -26.4406, 1.08", "-6.69327, -140.305, -26.85, 1.08", "-6.20401, -144.061, -27.0991, 0.81", "-5.69387, -147.983, -27.3946, 0.81", "-5.35701, -150.796, -27.6388, 0.81", "-4.30504, -158.765, -28.6744, 0.81", "-3.65907, -163.234, -29.4354, 0.81", "-3.44901, -164.769, -29.7336, 0.81", "-2.85114, -169.342, -30.58, 0.81", "-2.48409, -172.435, -31.0682, 0.81", "-1.57439, -181.555, -32.1584, 0.81", "-1.48079, -184.131, -32.3935, 0.81", "-1.47874, -184.357, -32.4114, 0.81", "-1.62404, -189.366, -32.7206, 0.81", "-1.89465, -193.21, -32.8297, 0.81", "-2.47893, -197.518, -32.8455, 0.81", "-3.37922, -202.449, -32.6705, 0.81", "-3.70845, -204.241, -32.6197, 0.81", "-4.38527, -208.241, -32.5665, 0.81", "-4.91687, -211.389, -32.5756, 0.81", "-5.69287, -215.659, -32.6199, 0.81", "-6.61206, -221.759, -32.6989, 0.81", "-7.25469, -226.469, -32.722, 0.81", "-7.80174, -230.531, -32.8016, 0.81", "-8.52512, -235.84, -32.9013, 0.81", "-8.85987, -238.495, -32.9741, 0.81", "-9.18903, -241.512, -33.1153, 0.81", "-9.65599, -245.52, -33.3831, 0.81", "-9.79865, -249.678, -33.742, 0.81", "-9.71661, -251.222, -33.9027, 0.81", "-9.6773, -251.538, -33.9368, 1.08", "-9.63117, -251.855, -33.9607, 1.08", "-8.9696, -255.867, -34.2868, 0.54", "-7.82894, -261.766, -34.8642, 0.54", "-7.23707, -264.933, -35.2065, 0.54", "-6.66769, -268.211, -35.5924, 0.54", "-6.35726, -270.368, -35.817, 0.54", "-6.01369, -273.484, -36.0803, 0.54", "-5.87152, -275.507, -36.1671, 0.54", "-5.68806, -280.03, -36.2048, 0.54", "-5.64701, -282.181, -36.177, 0.54", "-5.58284, -284.76, -36.1459, 0.54", "-5.65057, -286.517, -36.0936, 0.54", "-5.90034, -290.382, -35.9401, 0.54", "-5.90411, -290.441, -35.9374, 0.54", "-5.96718, -291.371, -35.8733, 0.54", "-6.11032, -294.533, -35.6838, 0.54", "-6.19734, -298.526, -35.4934, 0.54", "-6.36815, -304.17, -35.263, 0.54", "-6.4644, -309.21, -35.1578, 0.54", "-6.50279, -312.007, -35.0985, 0.54", "-6.57696, -315.914, -35.1237, 0.54", "-6.58815, -316.594, -35.148, 0.54", "-6.61212, -320.437, -35.4043, 0.54", "-6.88281, -324.995, -35.8394, 0.54", "-7.23761, -330.169, -36.5209, 0.54", "-7.57147, -334.024, -37.1221, 0.54", "-7.96256, -337.685, -37.7225, 0.54", "-8.0327, -338.351, -37.8409, 0.54", "-8.47151, -342.455, -38.7435, 0.54" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.39275, 10.6596, 2.93098, 0.81", "-9.00508, 12.494, 3.22563, 0.81", "-10.3869, 16.5451, 3.86491, 1.08", "-13.3588, 22.1346, 4.65036, 1.08", "-14.1329, 23.3681, 4.79531, 1.08", "-16.3731, 27.196, 5.15479, 1.08", "-16.4051, 27.2517, 5.15895, 1.08", "-18.7975, 31.0784, 5.3161, 1.08", "-22.391, 36.9257, 5.40686, 1.08", "-23.8624, 39.6947, 5.31117, 1.08", "-26.9323, 45.9266, 4.86634, 1.08", "-29.8349, 52.071, 4.19349, 1.08", "-31.4866, 55.5408, 3.75043, 1.08", "-33.8222, 60.5065, 3.03092, 1.08", "-35.6059, 64.3128, 2.41351, 1.08", "-35.8172, 64.6562, 2.34847, 1.08", "-36.6411, 65.615, 2.13474, 1.08", "-41.0911, 70.0178, 1.1809, 1.08", "-44.6383, 73.0768, 0.558359, 1.08", "-48.2621, 75.683, 0.02633, 1.08", "-51.5122, 77.871, -0.35475, 1.08", "-53.505, 79.1926, -0.5961, 1.08", "-55.2722, 80.6209, -0.815212, 1.08", "-58.1601, 83.3778, -1.14835, 1.08", "-60.5355, 86.112, -1.37263, 1.08", "-60.7088, 86.3271, -1.38997, 1.08", "-63.8531, 90.7173, -1.71424, 1.08", "-68.2364, 97.509, -2.37962, 1.08", "-71.8657, 103.294, -3.00273, 1.08", "-75.0986, 108.706, -3.72957, 1.08", "-78.4074, 114.73, -4.55414, 1.08", "-81.8975, 121.509, -5.45857, 1.08", "-84.995, 128.208, -6.4121, 1.08", "-87.465, 133.636, -7.32035, 1.08", "-88.7486, 136.873, -7.87381, 1.08", "-91.0676, 142.64, -8.8065, 1.08", "-93.2392, 148.759, -9.56069, 1.08", "-95.3605, 154.214, -10.0608, 0.81", "-97.1055, 158.026, -10.2155, 0.81", "-99.3713, 162.633, -10.2855, 0.81", "-101.349, 166.0, -10.2408, 0.81", "-103.089, 168.548, -10.2154, 0.54", "-107.174, 173.956, -9.99898, 0.54", "-111.507, 179.19, -9.53521, 1.08", "-112.269, 180.09, -9.42768, 1.08", "-114.734, 182.861, -9.15628, 1.08", "-120.207, 189.257, -8.86418, 1.08" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.39275, 10.6596, 2.93098, 1.08", "-13.4995, 3.43439, -4.31235, 1.08", "-16.5766, -0.886322, -8.49045, 0.81", "-20.44, -6.99572, -14.5813, 1.08", "-22.5161, -10.5122, -18.0893, 1.08", "-24.6311, -14.0946, -21.6631, 1.08", "-27.6953, -19.2849, -26.8409, 1.08", "-29.1621, -22.2973, -29.4736, 1.08", "-31.4039, -28.134, -34.989, 0.54", "-31.6893, -28.8538, -35.7742, 0.54" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-9.82785, 13.1471, 4.51488, 0.53", "-10.5522, 13.2082, 4.4789, 0.53", "-12.1783, 13.3454, 4.39815, 0.53", "-12.3931, 13.3635, 4.38748, 0.53", "-13.3742, 13.4463, 4.33876, 0.53", "-14.5585, 13.5461, 4.27994, 0.53", "-16.0595, 13.6727, 4.2054, 0.53", "-22.0253, 14.8241, 3.13809, 0.53", "-27.8317, 16.9688, 3.25423, 0.53", "-33.4584, 19.5795, 3.45331, 0.53", "-38.4499, 23.0794, 4.83821, 0.53", "-43.8054, 26.1218, 5.75238, 0.53", "-49.1313, 28.8635, 7.42222, 0.53", "-54.7795, 30.613, 9.24161, 0.53", "-60.4943, 32.471, 10.719, 0.53", "-66.4395, 33.789, 11.7425, 0.53", "-72.5881, 34.1221, 12.0502, 0.53", "-78.5447, 35.404, 13.0493, 0.53", "-84.4781, 36.8623, 13.9591, 0.53", "-90.3438, 38.762, 14.4571, 0.53", "-96.4554, 39.4205, 14.9469, 0.53", "-102.618, 39.5771, 14.8793, 0.53", "-108.661, 40.8108, 15.127, 0.53", "-114.529, 42.7307, 15.5124, 0.53", "-120.188, 45.1664, 16.2283, 0.53", "-125.816, 47.2967, 17.703, 0.53", "-131.573, 48.7557, 19.41, 0.53", "-136.884, 49.7989, 22.3829, 0.53", "-142.155, 49.4967, 25.5662, 0.53", "-147.228, 48.2875, 28.8687, 0.53" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-9.82785, 13.1471, 4.51488, 0.53", "-9.69738, 15.3705, 5.14911, 0.53", "-9.67614, 15.7325, 5.25236, 0.53", "-9.47741, 19.1203, 6.21876, 0.53", "-10.4626, 28.6452, 7.82082, 0.53", "-10.7277, 38.2982, 8.93363, 0.53", "-12.2135, 47.7112, 10.7367, 0.53", "-13.0945, 56.722, 14.1134, 0.53", "-13.7813, 66.2439, 15.8785, 0.53", "-14.0759, 75.8661, 17.205, 0.53", "-13.0527, 85.5203, 16.7133, 0.53", "-11.8459, 95.0516, 15.3088, 0.53", "-10.7105, 104.449, 13.2015, 0.53", "-10.749, 113.441, 9.66914, 0.53", "-10.0924, 122.671, 6.81707, 0.53", "-10.5912, 132.079, 4.51589, 0.53", "-11.591, 141.188, 1.42236, 0.53", "-11.881, 150.096, -2.28822, 0.53", "-13.9445, 159.135, -5.02043, 0.53", "-17.8057, 167.199, -8.47731, 0.53", "-21.0752, 175.289, -12.4494, 0.53", "-23.4976, 183.149, -17.3407, 0.53", "-24.3336, 191.145, -22.5501, 0.53", "-26.5264, 199.679, -26.4198, 0.53" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "90.6249, 194.868, -58.1549, 0.18", "91.3292, 195.306, -58.1195, 0.18", "93.4271, 196.672, -57.9593, 0.18", "97.1663, 199.365, -57.6246, 0.53", "101.503, 202.492, -57.4356, 0.53", "105.186, 205.302, -57.3771, 0.35", "108.675, 207.948, -57.5672, 0.35", "109.151, 208.323, -57.6245, 0.35", "111.905, 210.672, -58.2734, 0.35", "115.453, 213.715, -59.595, 0.35", "118.185, 215.631, -61.4955, 0.35", "121.252, 217.296, -64.2876, 0.35", "121.431, 217.384, -64.4871, 0.35", "123.245, 218.237, -67.0085, 0.18", "125.416, 219.091, -70.3414, 0.18", "129.358, 220.528, -77.0995, 0.18", "129.426, 220.548, -77.2212, 0.18", "131.234, 221.146, -80.4392, 0.53", "134.288, 222.117, -85.938, 0.53" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "90.6249, 194.868, -58.1549, 0.18", "90.6782, 195.626, -58.2788, 0.18", "90.9819, 199.947, -58.9852, 0.18" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.5311, 38.8286, 0.0146107, 0.451935", "19.9883, 52.8007, 0.0146107, 0.451935", "25.4455, 66.7728, 0.0146107, 0.451935" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "208.482, 38.2668, 64.9861, 0.18", "218.791, 41.3151, 64.0756, 0.18", "228.525, 46.1004, 64.151, 0.18", "237.693, 51.5129, 66.3543, 0.18", "245.866, 57.6227, 70.1962, 0.18", "254.037, 62.3617, 75.5111, 0.18" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "208.482, 38.2668, 64.9861, 0.18", "218.132, 40.6569, 70.4565, 0.18", "227.32, 44.4489, 75.9993, 0.18", "234.946, 47.2337, 83.933, 0.18", "242.251, 47.9543, 92.5584, 0.18", "249.309, 50.7736, 100.99, 0.18", "258.004, 53.8208, 107.634, 0.18", "265.435, 58.4396, 114.948, 0.18" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-24.3986, -52.6601, -9.25912, 1.08", "-28.8448, -54.4477, -7.97949, 1.08", "-32.3593, -55.9587, -7.09132, 0.81", "-36.1164, -57.7052, -6.13391, 0.81", "-39.643, -59.3446, -5.23523, 0.81", "-43.7537, -61.2555, -4.1877, 0.81", "-48.7738, -63.5891, -2.90843, 0.81", "-50.7018, -64.5589, -2.51893, 0.81", "-53.8143, -65.9689, -2.05708, 0.81", "-63.9906, -73.2429, 0.492236, 0.81", "-73.9299, -80.5932, 3.69361, 0.81", "-84.2759, -85.7004, 8.91213, 0.81", "-93.4296, -92.4294, 14.6675, 0.81", "-102.179, -99.5358, 20.6365, 0.81", "-110.854, -108.311, 24.237, 0.81", "-117.286, -118.787, 28.3704, 0.81", "-122.892, -129.564, 32.9739, 0.81", "-129.542, -139.698, 37.5182, 0.81", "-136.691, -149.431, 42.0994, 0.81", "-144.065, -158.556, 47.4011, 0.81", "-153.654, -165.115, 52.6001, 0.81", "-163.592, -169.974, 58.7425, 0.81", "-173.621, -176.287, 63.3526, 0.81", "-184.246, -179.591, 69.2718, 0.81", "-195.474, -182.52, 74.166, 0.81", "-206.773, -184.596, 79.2839, 0.81", "-217.489, -184.35, 85.8201, 0.81" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-24.3986, -52.6601, -9.25912, 0.81", "-27.2234, -57.8256, -10.5735, 0.81", "-29.7948, -62.3865, -11.6434, 1.08", "-31.2068, -64.6282, -12.1723, 1.08", "-33.0408, -67.8472, -13.0537, 1.08", "-33.9661, -69.617, -13.5389, 1.08", "-36.8313, -74.9983, -14.9908, 1.08", "-36.9742, -75.2474, -15.0512, 1.08", "-38.9174, -78.5077, -16.0142, 0.81", "-41.9552, -83.9561, -17.6658, 0.54", "-43.8187, -87.8378, -18.7776, 1.08", "-46.6346, -94.776, -20.5409, 1.08", "-47.8039, -98.5135, -21.3611, 1.08", "-48.4464, -101.643, -21.9331, 0.81", "-48.7725, -104.808, -22.2816, 0.81", "-48.8898, -108.183, -22.3625, 1.08", "-48.5241, -114.096, -22.3087, 1.08", "-47.9711, -118.21, -22.1294, 0.81", "-47.2481, -125.055, -21.7651, 0.54", "-47.0676, -128.867, -21.5091, 0.54", "-47.08, -132.342, -21.3118, 0.54", "-47.3352, -136.294, -21.1302, 0.54", "-47.7257, -139.254, -21.0227, 1.08", "-49.0079, -144.996, -20.927, 1.08", "-52.4614, -156.186, -21.0542, 1.08", "-52.5591, -156.465, -21.0678, 1.08", "-54.4632, -161.375, -21.3645, 1.08", "-56.6832, -166.382, -21.6561, 1.08", "-58.7958, -170.932, -21.9646, 1.08", "-59.6602, -172.491, -22.123, 0.81", "-59.8306, -172.726, -22.1611, 0.81", "-60.7453, -174.212, -22.3969, 0.81", "-62.4239, -177.501, -22.9765, 0.81", "-64.4255, -182.045, -23.8071, 0.81", "-66.9465, -188.033, -24.9317, 0.81", "-68.2589, -191.307, -25.5743, 0.81", "-71.0359, -198.425, -26.9747, 0.81", "-72.2607, -201.773, -27.6397, 1.08", "-73.7628, -206.286, -28.5136, 1.08", "-74.8378, -209.624, -29.0752, 1.08", "-75.8063, -212.869, -29.4473, 0.27", "-77.4632, -217.589, -29.8062, 0.27", "-78.2968, -219.54, -29.8267, 0.27", "-79.6293, -222.557, -29.7164, 0.54", "-80.8113, -225.635, -29.5218, 0.54", "-82.4333, -230.393, -29.1911, 0.54", "-82.6348, -230.949, -29.157, 0.54", "-83.7084, -234.437, -28.9235, 0.54", "-85.0168, -239.733, -28.7857, 0.54", "-86.1785, -245.613, -28.833, 0.54", "-87.5191, -252.973, -29.2612, 0.54", "-88.118, -256.502, -29.5726, 0.54", "-88.9405, -261.448, -30.1107, 0.54", "-89.9369, -267.504, -30.8807, 0.54", "-90.969, -273.453, -31.7492, 0.54", "-92.6305, -281.406, -33.1496, 0.54", "-92.9062, -282.716, -33.3935, 0.54", "-94.3162, -288.68, -34.5155, 0.54", "-95.2825, -292.302, -35.1918, 0.54", "-96.3786, -296.368, -35.8447, 0.54", "-97.6611, -301.752, -36.6757, 0.54", "-98.6597, -306.301, -37.3225, 0.54", "-99.8369, -311.619, -38.0811, 0.54", "-100.941, -316.462, -38.9181, 0.54", "-100.951, -316.515, -38.9276, 0.54", "-101.368, -319.752, -39.4614, 0.54" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-120.207, 189.257, -8.86418, 0.81", "-122.736, 192.767, -8.36394, 0.81", "-125.0, 195.386, -7.87754, 0.81", "-127.553, 198.139, -7.22012, 0.81", "-130.717, 200.989, -6.26721, 0.81", "-133.709, 203.788, -5.10412, 0.81", "-133.754, 203.834, -5.08274, 0.81", "-136.982, 207.256, -3.37925, 0.81", "-139.874, 210.157, -1.68039, 0.81", "-143.003, 213.024, 0.326945, 0.81", "-147.305, 216.893, 3.37115, 0.81", "-150.701, 219.853, 5.8129, 0.81", "-157.2, 227.799, 10.7929, 0.81" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-120.207, 189.257, -8.86418, 0.27", "-121.971, 193.496, -7.19019, 0.27", "-124.475, 199.513, -4.81437, 0.27", "-125.778, 202.645, -3.57731, 0.27" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-31.6893, -28.8538, -35.7742, 0.54", "-31.8616, -32.1689, -36.765, 0.54", "-32.1712, -35.2839, -37.6366, 0.54", "-32.6331, -38.2445, -38.4692, 0.54", "-33.9224, -43.6458, -40.0284, 0.54", "-35.4456, -48.7263, -41.6386, 0.54", "-37.6689, -55.0955, -43.9324, 0.54", "-37.7579, -55.3193, -44.0214, 0.54", "-39.4282, -59.158, -45.6155, 0.54", "-42.2875, -65.3652, -48.2391, 0.54", "-44.4499, -69.4362, -49.941, 0.54", "-46.5501, -73.1593, -51.8056, 0.54", "-48.0637, -75.7832, -53.3612, 0.54" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-31.6893, -28.8538, -35.7742, 0.54", "-38.209, -31.1218, -41.5718, 0.54", "-43.2198, -32.8884, -45.3729, 0.81", "-46.6805, -34.2398, -47.7095, 0.81", "-59.0856, -39.6072, -55.5929, 0.81", "-66.1739, -42.8495, -59.6673, 0.81", "-72.4589, -45.9223, -63.2154, 0.81", "-81.446, -50.4172, -67.7384, 0.81", "-86.9893, -53.4183, -70.2452, 0.81", "-93.3935, -57.1777, -73.0107, 0.81", "-101.234, -62.155, -76.1763, 0.81", "-111.802, -69.2145, -80.6747, 0.81", "-111.86, -69.254, -80.6993, 0.81", "-122.029, -76.3108, -85.2125, 0.81", "-122.287, -76.4833, -85.332, 0.81", "-133.89, -84.1319, -90.6295, 0.81" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "265.435, 58.4396, 114.948, 0.27", "272.569, 60.6729, 121.25, 0.27", "279.59, 62.6711, 127.747, 0.27" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "265.435, 58.4396, 114.948, 0.27", "271.435, 59.6545, 120.338, 0.27", "277.886, 59.5008, 125.295, 0.27" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-101.368, -319.752, -39.4614, 0.54", "-102.916, -330.048, -39.4709, 0.54", "-104.631, -341.352, -39.5647, 0.54", "-104.721, -341.97, -39.556, 0.54", "-106.978, -353.613, -39.1844, 0.54", "-108.724, -360.996, -38.9131, 0.54", "-108.844, -361.42, -38.8932, 0.54", "-113.611, -375.109, -38.2045, 0.54", "-117.436, -385.019, -37.5258, 0.54", "-121.671, -395.446, -36.7515, 0.54", "-127.81, -408.658, -35.5286, 0.54", "-132.513, -417.51, -34.7334, 0.54", "-137.682, -426.275, -34.0132, 0.54", "-142.168, -432.818, -33.5713, 0.54", "-148.337, -440.622, -33.322, 0.54", "-155.156, -448.248, -33.4868, 0.54", "-159.383, -452.009, -33.9669, 0.54", "-162.789, -454.527, -34.7391, 0.54", "-165.249, -456.001, -35.5494, 0.54", "-169.963, -458.427, -37.549, 0.54", "-174.65, -460.612, -39.9099, 0.54", "-178.855, -462.775, -42.2223, 0.54", "-182.449, -464.864, -44.0064, 0.54", "-187.27, -467.823, -46.1947, 0.54", "-189.882, -469.712, -47.3814, 0.54", "-192.351, -471.818, -48.5282, 0.54", "-198.014, -477.099, -50.8153, 0.54", "-203.239, -482.302, -52.5202, 0.54", "-208.656, -488.011, -53.7213, 0.54", "-213.536, -493.58, -54.3837, 0.54", "-218.927, -500.423, -54.5942, 0.54", "-223.435, -506.773, -54.2153, 0.54", "-226.665, -511.715, -53.6276, 0.54", "-230.624, -518.175, -52.1335, 0.54", "-232.291, -521.305, -50.8647, 0.54", "-235.441, -527.232, -46.7463, 0.54", "-235.549, -527.62, -46.2984, 0.54" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-101.368, -319.752, -39.4614, 0.54", "-105.546, -324.053, -36.4533, 0.54", "-108.032, -326.612, -34.6636, 0.54" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_20", "dend_13", "dend_6", "dend_3", "dend_0", "dend_25", "dend_24", "dend_22", "dend_21", "dend_15", "dend_14", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "dend_29", "dend_26", "dend_19", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_28", "dend_27", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_20", "dend_13", "dend_6", "dend_3", "dend_0", "dend_25", "dend_24", "dend_22", "dend_21", "dend_15", "dend_14", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "dend_29", "dend_26", "dend_19", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_28", "dend_27", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "axon_1", "axon_1", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_28", "dend_28", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_LBC_ebed230edd_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_20, dend_13, dend_6, dend_3, dend_0, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, dend_29, dend_26, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_28, dend_27, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_20, dend_13, dend_6, dend_3, dend_0, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, dend_29, dend_26, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_28, dend_27, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_33
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, axon_1, axon_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_28, dend_28, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.49999957196365796)
    connect dend_20(0), soma_0(0.49999957196365796)
    connect dend_13(0), soma_0(0.49999957196365796)
    connect dend_6(0), soma_0(0.49999957196365796)
    connect dend_3(0), soma_0(0.49999957196365796)
    connect dend_0(0), soma_0(0.49999957196365796)
    connect axon_0(0), soma_0(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.47353, -9.82937, -0.0150783, 3.11345 ) }
    soma_0 { pt3dadd( -4.06901, -8.79368, -0.0135938, 5.39642 ) }
    soma_0 { pt3dadd( -3.66449, -7.75799, -0.0121094, 6.72082 ) }
    soma_0 { pt3dadd( -3.25998, -6.72231, -0.0106249, 7.70122 ) }
    soma_0 { pt3dadd( -2.85546, -5.68662, -0.00914047, 8.43968 ) }
    soma_0 { pt3dadd( -2.45095, -4.65093, -0.00765602, 9.25919 ) }
    soma_0 { pt3dadd( -2.04643, -3.61524, -0.00617157, 10.0787 ) }
    soma_0 { pt3dadd( -1.64192, -2.57956, -0.00468712, 10.8982 ) }
    soma_0 { pt3dadd( -1.2374, -1.54387, -0.00320267, 11.7151 ) }
    soma_0 { pt3dadd( -0.832884, -0.508183, -0.00171822, 12.3073 ) }
    soma_0 { pt3dadd( -0.428368, 0.527504, -2.33766E-4, 12.0741 ) }
    soma_0 { pt3dadd( -0.023852, 1.56319, 0.00125068, 11.8342 ) }
    soma_0 { pt3dadd( 0.380664, 2.59888, 0.00273513, 11.5616 ) }
    soma_0 { pt3dadd( 0.78518, 3.63457, 0.00421958, 11.0624 ) }
    soma_0 { pt3dadd( 1.1897, 4.67025, 0.00570403, 10.5822 ) }
    soma_0 { pt3dadd( 1.59421, 5.70594, 0.00718848, 10.0942 ) }
    soma_0 { pt3dadd( 1.99873, 6.74163, 0.00867293, 9.27653 ) }
    soma_0 { pt3dadd( 2.40324, 7.77731, 0.0101574, 7.88308 ) }
    soma_0 { pt3dadd( 2.80776, 8.813, 0.0116418, 6.37032 ) }
    soma_0 { pt3dadd( 3.21227, 9.84869, 0.0131263, 4.97817 ) }
    soma_0 { pt3dadd( 3.61679, 10.8844, 0.0146107, 4.57234 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.0120471, -8.5686, 1.51098, 1.08 ) }
    dend_23 { pt3dadd( 1.64622, -11.6583, 1.26285, 1.08 ) }
    dend_23 { pt3dadd( 2.92792, -14.0815, 1.06823, 1.08 ) }
    dend_23 { pt3dadd( 3.8101, -15.7494, 0.934277, 1.08 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 25/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.41795, -9.3666, -0.0190242, 1.08 ) }
    dend_20 { pt3dadd( -3.86095, -9.9587, -0.0268769, 1.08 ) }
    dend_20 { pt3dadd( -0.416738, -13.2439, -0.0881683, 1.08 ) }
    dend_20 { pt3dadd( 1.04012, -14.7362, -0.114138, 1.08 ) }
    dend_20 { pt3dadd( 3.38167, -17.1563, -0.153611, 1.08 ) }
    dend_20 { pt3dadd( 7.40731, -21.5072, -0.218805, 1.08 ) }
    dend_20 { pt3dadd( 10.3754, -24.796, -0.263372, 1.08 ) }
    dend_20 { pt3dadd( 10.5343, -24.9904, -0.26586, 1.08 ) }
    dend_20 { pt3dadd( 15.3771, -32.0087, -0.390031, 1.08 ) }
    dend_20 { pt3dadd( 16.8082, -34.456, -0.481488, 1.08 ) }
    dend_20 { pt3dadd( 17.9716, -36.8759, -0.613106, 1.08 ) }
    dend_20 { pt3dadd( 19.1675, -40.7974, -0.869994, 1.08 ) }
    dend_20 { pt3dadd( 20.1407, -46.061, -1.23488, 1.08 ) }
    dend_20 { pt3dadd( 20.607, -50.6868, -1.57954, 1.08 ) }
    dend_20 { pt3dadd( 20.5612, -52.4676, -1.72121, 1.08 ) }
    dend_20 { pt3dadd( 20.464, -54.7105, -1.88053, 1.08 ) }
    dend_20 { pt3dadd( 20.2685, -60.2987, -2.2392, 1.08 ) }
    dend_20 { pt3dadd( 20.3268, -63.6499, -2.42189, 1.08 ) }
    dend_20 { pt3dadd( 20.6572, -66.5935, -2.67337, 1.08 ) }
    dend_20 { pt3dadd( 21.2271, -70.465, -3.1347, 1.08 ) }
    dend_20 { pt3dadd( 22.1771, -75.6895, -3.85746, 1.08 ) }
    dend_20 { pt3dadd( 22.277, -76.2665, -3.95401, 1.08 ) }
    dend_20 { pt3dadd( 23.0158, -80.0578, -4.69506, 1.08 ) }
    dend_20 { pt3dadd( 24.2087, -84.8428, -5.67789, 1.08 ) }
    dend_20 { pt3dadd( 25.169, -88.5385, -6.38569, 1.08 ) }
    dend_20 { pt3dadd( 26.8656, -94.3067, -7.56928, 1.08 ) }
    dend_20 { pt3dadd( 27.6787, -97.1348, -8.14734, 1.08 ) }
    dend_20 { pt3dadd( 28.091, -98.7211, -8.4459, 1.08 ) }
    dend_20 { pt3dadd( 29.0052, -102.74, -9.16689, 1.08 ) }
    dend_20 { pt3dadd( 30.6061, -108.806, -10.0824, 1.08 ) }
    dend_20 { pt3dadd( 31.7598, -113.341, -10.811, 0.81 ) }
    dend_20 { pt3dadd( 32.2094, -114.922, -11.0801, 0.81 ) }
    dend_20 { pt3dadd( 33.0265, -117.835, -11.6943, 0.81 ) }
    dend_20 { pt3dadd( 33.853, -120.871, -12.3846, 0.81 ) }
    dend_20 { pt3dadd( 34.5203, -123.913, -13.0767, 0.81 ) }
    dend_20 { pt3dadd( 35.5465, -128.948, -14.208, 0.81 ) }
    dend_20 { pt3dadd( 37.4505, -138.172, -16.3284, 0.81 ) }
    dend_20 { pt3dadd( 38.556, -142.452, -17.3812, 0.81 ) }
    dend_20 { pt3dadd( 39.7474, -146.501, -18.3464, 0.81 ) }
    dend_20 { pt3dadd( 41.1332, -150.804, -19.2831, 0.81 ) }
    dend_20 { pt3dadd( 41.2228, -151.046, -19.3375, 0.81 ) }
    dend_20 { pt3dadd( 43.2953, -155.768, -20.4123, 0.81 ) }
    dend_20 { pt3dadd( 44.4869, -158.473, -20.9586, 0.81 ) }
    dend_20 { pt3dadd( 47.963, -165.155, -22.0451, 0.81 ) }
    dend_20 { pt3dadd( 50.4376, -169.477, -22.7606, 0.81 ) }
    dend_20 { pt3dadd( 52.0832, -172.166, -23.2385, 0.81 ) }
    dend_20 { pt3dadd( 52.2119, -172.392, -23.2771, 0.81 ) }
    dend_20 { pt3dadd( 53.6137, -175.292, -23.6999, 0.81 ) }
    dend_20 { pt3dadd( 56.5949, -182.237, -24.8688, 0.81 ) }
    dend_20 { pt3dadd( 56.611, -182.283, -24.8765, 0.81 ) }
    dend_20 { pt3dadd( 57.0701, -184.773, -25.2114, 0.81 ) }
    dend_20 { pt3dadd( 57.2935, -186.534, -25.3838, 0.81 ) }
    dend_20 { pt3dadd( 57.7547, -190.739, -25.7351, 0.81 ) }
    dend_20 { pt3dadd( 57.9087, -191.939, -25.8239, 0.81 ) }
    dend_20 { pt3dadd( 58.6833, -199.157, -26.396, 0.81 ) }
    dend_20 { pt3dadd( 59.1433, -202.784, -26.8435, 0.81 ) }
    dend_20 { pt3dadd( 59.7604, -206.877, -27.4606, 0.81 ) }
    dend_20 { pt3dadd( 60.6594, -212.856, -28.7976, 0.81 ) }
    dend_20 { pt3dadd( 61.2529, -216.464, -29.8406, 0.81 ) }
    dend_20 { pt3dadd( 61.9192, -220.376, -31.2424, 0.81 ) }
    dend_20 { pt3dadd( 62.7831, -225.282, -33.368, 0.81 ) }
    dend_20 { pt3dadd( 62.7927, -225.334, -33.3935, 0.81 ) }
    dend_20 { pt3dadd( 63.5071, -230.645, -36.408, 0.81 ) }
    dend_20 { pt3dadd( 63.7663, -233.422, -38.2377, 0.81 ) }
    dend_20 { pt3dadd( 63.8239, -235.884, -39.9131, 0.27 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 90/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -6.04795, -8.2851, 1.45098, 1.08 ) }
    dend_13 { pt3dadd( -6.24227, -12.8478, -0.071938, 1.08 ) }
    dend_13 { pt3dadd( -6.51112, -19.1607, -2.17904, 1.35 ) }
    dend_13 { pt3dadd( -6.94594, -29.3705, -5.58683, 1.35 ) }
    dend_13 { pt3dadd( -7.11429, -33.3235, -6.90622, 1.35 ) }
    dend_13 { pt3dadd( -7.12816, -33.6493, -7.015, 1.35 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -2.31794, 7.3914, 2.93098, 1.89 ) }
    dend_6 { pt3dadd( -4.87926, 8.76935, 2.93098, 1.89 ) }
    dend_6 { pt3dadd( -8.39275, 10.6596, 2.93098, 1.89 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.377952, 9.0294, 1.46098, 1.41 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( -3.46974, 10.3766, 2.46015, 1.41 ) }
    dend_3 { pt3dadd( -6.65401, 11.7642, 3.48921, 1.23 ) }
    dend_3 { pt3dadd( -9.82785, 13.1471, 4.51488, 1.23 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 3/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.75205, 11.7804, -2.91902, 1.11 ) }
    dend_0 { pt3dadd( 4.85352, 13.8175, -3.02394, 1.11 ) }
    dend_0 { pt3dadd( 5.76742, 19.2727, -3.41126, 1.11 ) }
    dend_0 { pt3dadd( 7.21926, 24.5323, -3.80729, 1.11 ) }
    dend_0 { pt3dadd( 8.51375, 27.51, -4.01647, 1.11 ) }
    dend_0 { pt3dadd( 11.2021, 32.7535, -4.62832, 1.11 ) }
    dend_0 { pt3dadd( 14.3182, 38.7428, -5.558, 1.11 ) }
    dend_0 { pt3dadd( 16.1912, 41.924, -6.14253, 1.11 ) }
    dend_0 { pt3dadd( 20.0067, 47.6578, -7.42497, 1.67 ) }
    dend_0 { pt3dadd( 25.7784, 56.1184, -9.57994, 1.11 ) }
    dend_0 { pt3dadd( 28.2148, 59.6808, -10.5079, 1.11 ) }
    dend_0 { pt3dadd( 30.4815, 63.115, -11.4531, 1.11 ) }
    dend_0 { pt3dadd( 32.8585, 67.0328, -12.5242, 1.11 ) }
    dend_0 { pt3dadd( 36.3178, 72.8855, -13.9806, 1.11 ) }
    dend_0 { pt3dadd( 39.4208, 78.1894, -15.4436, 1.11 ) }
    dend_0 { pt3dadd( 41.8921, 82.5487, -16.649, 1.11 ) }
    dend_0 { pt3dadd( 44.9101, 87.6432, -17.9551, 1.11 ) }
    dend_0 { pt3dadd( 46.0212, 89.5064, -18.4273, 1.11 ) }
    dend_0 { pt3dadd( 50.282, 96.7757, -20.342, 1.11 ) }
    dend_0 { pt3dadd( 53.1962, 101.755, -21.6011, 1.11 ) }
    dend_0 { pt3dadd( 53.9581, 103.085, -21.9373, 1.11 ) }
    dend_0 { pt3dadd( 55.4159, 105.895, -22.6174, 1.11 ) }
    dend_0 { pt3dadd( 58.2958, 111.67, -24.0453, 1.11 ) }
    dend_0 { pt3dadd( 61.5857, 118.459, -25.7332, 1.11 ) }
    dend_0 { pt3dadd( 63.7045, 123.152, -26.9219, 1.11 ) }
    dend_0 { pt3dadd( 66.0321, 127.95, -28.086, 1.11 ) }
    dend_0 { pt3dadd( 68.1542, 132.157, -29.208, 1.11 ) }
    dend_0 { pt3dadd( 69.9914, 135.916, -30.3245, 1.06 ) }
    dend_0 { pt3dadd( 71.008, 138.019, -31.0776, 0.53 ) }
    dend_0 { pt3dadd( 71.7826, 140.053, -31.873, 0.35 ) }
    dend_0 { pt3dadd( 72.8035, 143.425, -33.3823, 0.35 ) }
    dend_0 { pt3dadd( 72.8633, 143.678, -33.5068, 0.35 ) }
    dend_0 { pt3dadd( 73.594, 148.651, -35.8509, 0.35 ) }
    dend_0 { pt3dadd( 73.7485, 150.237, -36.6255, 0.35 ) }
    dend_0 { pt3dadd( 73.99, 152.88, -38.0087, 0.35 ) }
    dend_0 { pt3dadd( 74.3492, 156.455, -39.8617, 0.35 ) }
    dend_0 { pt3dadd( 74.6293, 158.741, -41.0653, 0.35 ) }
    dend_0 { pt3dadd( 75.1873, 161.696, -42.6741, 0.35 ) }
    dend_0 { pt3dadd( 76.0798, 164.916, -44.4432, 0.35 ) }
    dend_0 { pt3dadd( 76.5203, 166.444, -45.2354, 0.35 ) }
    dend_0 { pt3dadd( 77.0593, 168.31, -46.1751, 0.35 ) }
    dend_0 { pt3dadd( 77.7322, 170.943, -47.4244, 0.35 ) }
    dend_0 { pt3dadd( 78.2472, 173.135, -48.4236, 0.35 ) }
    dend_0 { pt3dadd( 78.6582, 174.765, -49.1807, 0.35 ) }
    dend_0 { pt3dadd( 78.8909, 175.879, -49.6119, 1.23 ) }
    dend_0 { pt3dadd( 78.958, 176.235, -49.7719, 1.23 ) }
    dend_0 { pt3dadd( 79.3378, 178.43, -50.9115, 0.18 ) }
    dend_0 { pt3dadd( 79.7108, 179.99, -51.8756, 0.18 ) }
    dend_0 { pt3dadd( 80.1092, 181.151, -52.6414, 0.18 ) }
    dend_0 { pt3dadd( 80.7125, 182.679, -53.7509, 1.23 ) }
    dend_0 { pt3dadd( 81.3671, 183.997, -54.6558, 0.18 ) }
    dend_0 { pt3dadd( 81.6186, 184.446, -54.9046, 0.18 ) }
    dend_0 { pt3dadd( 83.4519, 187.029, -56.0292, 0.18 ) }
    dend_0 { pt3dadd( 83.934, 187.643, -56.2837, 0.88 ) }
    dend_0 { pt3dadd( 84.2534, 188.01, -56.4322, 0.18 ) }
    dend_0 { pt3dadd( 86.0968, 189.99, -57.1439, 0.18 ) }
    dend_0 { pt3dadd( 87.7952, 191.85, -57.6194, 0.18 ) }
    dend_0 { pt3dadd( 90.3522, 194.589, -58.1308, 1.06 ) }
    dend_0 { pt3dadd( 90.6249, 194.868, -58.1549, 1.06 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 62/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.61679, 10.8844, 0.0146107, 0.81 ) }
    axon_0 { pt3dadd( 9.07397, 24.8565, 0.0146107, 0.81 ) }
    axon_0 { pt3dadd( 14.5311, 38.8286, 0.0146107, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 65/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.8101, -15.7494, 0.934277, 1.08 ) }
    dend_25 { pt3dadd( 9.4368, -15.4345, 1.5232, 1.08 ) }
    dend_25 { pt3dadd( 20.2159, -13.6921, 3.30158, 1.08 ) }
    dend_25 { pt3dadd( 31.1698, -13.612, 4.75269, 1.08 ) }
    dend_25 { pt3dadd( 42.1989, -14.2942, 4.95283, 1.08 ) }
    dend_25 { pt3dadd( 53.0337, -14.2045, 7.1206, 1.08 ) }
    dend_25 { pt3dadd( 63.7992, -12.4659, 8.98283, 1.08 ) }
    dend_25 { pt3dadd( 74.0979, -9.3256, 11.6499, 1.08 ) }
    dend_25 { pt3dadd( 84.0468, -7.55769, 16.1567, 1.08 ) }
    dend_25 { pt3dadd( 93.0927, -3.98828, 21.5221, 1.08 ) }
    dend_25 { pt3dadd( 102.287, 0.311301, 26.0894, 1.08 ) }
    dend_25 { pt3dadd( 111.729, 4.88313, 29.8371, 1.08 ) }
    dend_25 { pt3dadd( 120.926, 10.1044, 33.422, 1.08 ) }
    dend_25 { pt3dadd( 131.45, 13.0824, 35.2448, 1.08 ) }
    dend_25 { pt3dadd( 140.998, 17.5909, 38.7858, 1.08 ) }
    dend_25 { pt3dadd( 150.168, 23.2733, 41.7488, 1.08 ) }
    dend_25 { pt3dadd( 159.02, 29.9025, 43.7255, 1.08 ) }
    dend_25 { pt3dadd( 168.604, 34.5498, 46.9964, 1.08 ) }
    dend_25 { pt3dadd( 178.246, 36.8062, 51.9513, 1.08 ) }
    dend_25 { pt3dadd( 188.534, 37.6109, 55.9122, 1.08 ) }
    dend_25 { pt3dadd( 198.062, 38.9353, 61.3662, 1.08 ) }
    dend_25 { pt3dadd( 208.482, 38.2668, 64.9861, 1.08 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 87/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.8101, -15.7494, 0.934277, 1.08 ) }
    dend_24 { pt3dadd( 6.48485, -21.5295, 0.881493, 1.08 ) }
    dend_24 { pt3dadd( 9.33879, -27.2466, 0.670546, 1.08 ) }
    dend_24 { pt3dadd( 12.9002, -33.2984, 0.257113, 1.08 ) }
    dend_24 { pt3dadd( 16.0153, -38.1959, -0.162865, 1.08 ) }
    dend_24 { pt3dadd( 20.6868, -45.5405, -0.792688, 0.81 ) }
    dend_24 { pt3dadd( 22.3467, -48.1502, -1.01648, 0.81 ) }
    dend_24 { pt3dadd( 25.0099, -52.0356, -1.44131, 0.81 ) }
    dend_24 { pt3dadd( 28.7472, -57.2468, -2.29087, 0.81 ) }
    dend_24 { pt3dadd( 28.7971, -57.3, -2.30519, 0.81 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 63.8239, -235.884, -39.9131, 0.27 ) }
    dend_22 { pt3dadd( 77.0942, -241.541, -43.346, 0.27 ) }
    dend_22 { pt3dadd( 95.0752, -249.207, -47.9975, 0.27 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 0/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 63.8239, -235.884, -39.9131, 0.27 ) }
    dend_21 { pt3dadd( 63.2275, -239.81, -42.6686, 0.27 ) }
    dend_21 { pt3dadd( 62.3613, -245.23, -46.6045, 0.27 ) }
    dend_21 { pt3dadd( 61.5171, -250.47, -50.3547, 0.27 ) }
    dend_21 { pt3dadd( 60.858, -254.562, -53.2828, 0.27 ) }
    dend_21 { pt3dadd( 60.0056, -259.853, -57.0696, 0.27 ) }
    dend_21 { pt3dadd( 58.4739, -269.361, -63.8743, 0.27 ) }
    dend_21 { pt3dadd( 58.432, -269.573, -64.0333, 0.27 ) }
    dend_21 { pt3dadd( 58.1477, -271.294, -65.3069, 0.27 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.12816, -33.6493, -7.015, 1.08 ) }
    dend_15 { pt3dadd( -9.29011, -36.0291, -7.29592, 1.08 ) }
    dend_15 { pt3dadd( -12.1861, -39.217, -7.67223, 1.08 ) }
    dend_15 { pt3dadd( -15.181, -42.5137, -8.06139, 1.08 ) }
    dend_15 { pt3dadd( -19.6434, -47.4258, -8.64123, 1.08 ) }
    dend_15 { pt3dadd( -21.8866, -49.8949, -8.93271, 1.08 ) }
    dend_15 { pt3dadd( -24.3986, -52.6601, -9.25912, 1.08 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 16/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.12816, -33.6493, -7.015, 0.27 ) }
    dend_14 { pt3dadd( -8.40647, -36.9692, -7.27556, 0.27 ) }
    dend_14 { pt3dadd( -8.77232, -39.7569, -7.67387, 0.54 ) }
    dend_14 { pt3dadd( -8.78252, -40.3942, -7.75071, 1.08 ) }
    dend_14 { pt3dadd( -8.77858, -40.6197, -7.77625, 1.08 ) }
    dend_14 { pt3dadd( -8.77038, -44.0502, -8.17295, 1.08 ) }
    dend_14 { pt3dadd( -8.78631, -45.6366, -8.35293, 1.08 ) }
    dend_14 { pt3dadd( -8.77318, -50.8893, -8.95711, 1.08 ) }
    dend_14 { pt3dadd( -8.79811, -55.7881, -9.62087, 1.08 ) }
    dend_14 { pt3dadd( -8.79718, -56.0123, -9.65618, 1.08 ) }
    dend_14 { pt3dadd( -8.64766, -60.1266, -10.4346, 1.08 ) }
    dend_14 { pt3dadd( -8.45607, -62.3639, -10.9563, 1.08 ) }
    dend_14 { pt3dadd( -8.37793, -64.0351, -11.3318, 1.08 ) }
    dend_14 { pt3dadd( -8.40025, -65.6301, -11.6623, 1.08 ) }
    dend_14 { pt3dadd( -8.28116, -67.7988, -12.1538, 1.08 ) }
    dend_14 { pt3dadd( -8.04925, -70.3769, -12.7031, 1.08 ) }
    dend_14 { pt3dadd( -7.90711, -72.1694, -13.0015, 1.08 ) }
    dend_14 { pt3dadd( -7.6473, -78.0982, -13.818, 1.08 ) }
    dend_14 { pt3dadd( -7.65032, -79.2354, -13.9834, 1.08 ) }
    dend_14 { pt3dadd( -7.6535, -84.1741, -14.8591, 1.08 ) }
    dend_14 { pt3dadd( -7.66365, -84.6725, -14.9535, 1.08 ) }
    dend_14 { pt3dadd( -7.79932, -90.1176, -16.0762, 1.08 ) }
    dend_14 { pt3dadd( -7.84655, -93.4594, -16.8371, 1.08 ) }
    dend_14 { pt3dadd( -7.6728, -96.8592, -17.7449, 1.08 ) }
    dend_14 { pt3dadd( -7.67333, -102.016, -19.106, 1.08 ) }
    dend_14 { pt3dadd( -7.67875, -102.226, -19.1639, 1.08 ) }
    dend_14 { pt3dadd( -7.6935, -103.116, -19.4208, 1.08 ) }
    dend_14 { pt3dadd( -7.71233, -106.212, -20.3638, 1.08 ) }
    dend_14 { pt3dadd( -7.73554, -113.235, -22.4051, 1.08 ) }
    dend_14 { pt3dadd( -7.8575, -118.712, -23.7376, 1.08 ) }
    dend_14 { pt3dadd( -7.97786, -123.089, -24.6713, 1.08 ) }
    dend_14 { pt3dadd( -8.02043, -126.35, -25.2887, 1.08 ) }
    dend_14 { pt3dadd( -8.01943, -126.399, -25.2969, 1.08 ) }
    dend_14 { pt3dadd( -7.84058, -130.443, -25.8433, 1.08 ) }
    dend_14 { pt3dadd( -7.30496, -135.89, -26.4406, 1.08 ) }
    dend_14 { pt3dadd( -6.69327, -140.305, -26.85, 1.08 ) }
    dend_14 { pt3dadd( -6.20401, -144.061, -27.0991, 0.81 ) }
    dend_14 { pt3dadd( -5.69387, -147.983, -27.3946, 0.81 ) }
    dend_14 { pt3dadd( -5.35701, -150.796, -27.6388, 0.81 ) }
    dend_14 { pt3dadd( -4.30504, -158.765, -28.6744, 0.81 ) }
    dend_14 { pt3dadd( -3.65907, -163.234, -29.4354, 0.81 ) }
    dend_14 { pt3dadd( -3.44901, -164.769, -29.7336, 0.81 ) }
    dend_14 { pt3dadd( -2.85114, -169.342, -30.58, 0.81 ) }
    dend_14 { pt3dadd( -2.48409, -172.435, -31.0682, 0.81 ) }
    dend_14 { pt3dadd( -1.57439, -181.555, -32.1584, 0.81 ) }
    dend_14 { pt3dadd( -1.48079, -184.131, -32.3935, 0.81 ) }
    dend_14 { pt3dadd( -1.47874, -184.357, -32.4114, 0.81 ) }
    dend_14 { pt3dadd( -1.62404, -189.366, -32.7206, 0.81 ) }
    dend_14 { pt3dadd( -1.89465, -193.21, -32.8297, 0.81 ) }
    dend_14 { pt3dadd( -2.47893, -197.518, -32.8455, 0.81 ) }
    dend_14 { pt3dadd( -3.37922, -202.449, -32.6705, 0.81 ) }
    dend_14 { pt3dadd( -3.70845, -204.241, -32.6197, 0.81 ) }
    dend_14 { pt3dadd( -4.38527, -208.241, -32.5665, 0.81 ) }
    dend_14 { pt3dadd( -4.91687, -211.389, -32.5756, 0.81 ) }
    dend_14 { pt3dadd( -5.69287, -215.659, -32.6199, 0.81 ) }
    dend_14 { pt3dadd( -6.61206, -221.759, -32.6989, 0.81 ) }
    dend_14 { pt3dadd( -7.25469, -226.469, -32.722, 0.81 ) }
    dend_14 { pt3dadd( -7.80174, -230.531, -32.8016, 0.81 ) }
    dend_14 { pt3dadd( -8.52512, -235.84, -32.9013, 0.81 ) }
    dend_14 { pt3dadd( -8.85987, -238.495, -32.9741, 0.81 ) }
    dend_14 { pt3dadd( -9.18903, -241.512, -33.1153, 0.81 ) }
    dend_14 { pt3dadd( -9.65599, -245.52, -33.3831, 0.81 ) }
    dend_14 { pt3dadd( -9.79865, -249.678, -33.742, 0.81 ) }
    dend_14 { pt3dadd( -9.71661, -251.222, -33.9027, 0.81 ) }
    dend_14 { pt3dadd( -9.6773, -251.538, -33.9368, 1.08 ) }
    dend_14 { pt3dadd( -9.63117, -251.855, -33.9607, 1.08 ) }
    dend_14 { pt3dadd( -8.9696, -255.867, -34.2868, 0.54 ) }
    dend_14 { pt3dadd( -7.82894, -261.766, -34.8642, 0.54 ) }
    dend_14 { pt3dadd( -7.23707, -264.933, -35.2065, 0.54 ) }
    dend_14 { pt3dadd( -6.66769, -268.211, -35.5924, 0.54 ) }
    dend_14 { pt3dadd( -6.35726, -270.368, -35.817, 0.54 ) }
    dend_14 { pt3dadd( -6.01369, -273.484, -36.0803, 0.54 ) }
    dend_14 { pt3dadd( -5.87152, -275.507, -36.1671, 0.54 ) }
    dend_14 { pt3dadd( -5.68806, -280.03, -36.2048, 0.54 ) }
    dend_14 { pt3dadd( -5.64701, -282.181, -36.177, 0.54 ) }
    dend_14 { pt3dadd( -5.58284, -284.76, -36.1459, 0.54 ) }
    dend_14 { pt3dadd( -5.65057, -286.517, -36.0936, 0.54 ) }
    dend_14 { pt3dadd( -5.90034, -290.382, -35.9401, 0.54 ) }
    dend_14 { pt3dadd( -5.90411, -290.441, -35.9374, 0.54 ) }
    dend_14 { pt3dadd( -5.96718, -291.371, -35.8733, 0.54 ) }
    dend_14 { pt3dadd( -6.11032, -294.533, -35.6838, 0.54 ) }
    dend_14 { pt3dadd( -6.19734, -298.526, -35.4934, 0.54 ) }
    dend_14 { pt3dadd( -6.36815, -304.17, -35.263, 0.54 ) }
    dend_14 { pt3dadd( -6.4644, -309.21, -35.1578, 0.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_14 { pt3dadd( -6.50279, -312.007, -35.0985, 0.54 ) }
    dend_14 { pt3dadd( -6.57696, -315.914, -35.1237, 0.54 ) }
    dend_14 { pt3dadd( -6.58815, -316.594, -35.148, 0.54 ) }
    dend_14 { pt3dadd( -6.61212, -320.437, -35.4043, 0.54 ) }
    dend_14 { pt3dadd( -6.88281, -324.995, -35.8394, 0.54 ) }
    dend_14 { pt3dadd( -7.23761, -330.169, -36.5209, 0.54 ) }
    dend_14 { pt3dadd( -7.57147, -334.024, -37.1221, 0.54 ) }
    dend_14 { pt3dadd( -7.96256, -337.685, -37.7225, 0.54 ) }
    dend_14 { pt3dadd( -8.0327, -338.351, -37.8409, 0.54 ) }
    dend_14 { pt3dadd( -8.47151, -342.455, -38.7435, 0.54 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.39275, 10.6596, 2.93098, 0.81 ) }
    dend_10 { pt3dadd( -9.00508, 12.494, 3.22563, 0.81 ) }
    dend_10 { pt3dadd( -10.3869, 16.5451, 3.86491, 1.08 ) }
    dend_10 { pt3dadd( -13.3588, 22.1346, 4.65036, 1.08 ) }
    dend_10 { pt3dadd( -14.1329, 23.3681, 4.79531, 1.08 ) }
    dend_10 { pt3dadd( -16.3731, 27.196, 5.15479, 1.08 ) }
    dend_10 { pt3dadd( -16.4051, 27.2517, 5.15895, 1.08 ) }
    dend_10 { pt3dadd( -18.7975, 31.0784, 5.3161, 1.08 ) }
    dend_10 { pt3dadd( -22.391, 36.9257, 5.40686, 1.08 ) }
    dend_10 { pt3dadd( -23.8624, 39.6947, 5.31117, 1.08 ) }
    dend_10 { pt3dadd( -26.9323, 45.9266, 4.86634, 1.08 ) }
    dend_10 { pt3dadd( -29.8349, 52.071, 4.19349, 1.08 ) }
    dend_10 { pt3dadd( -31.4866, 55.5408, 3.75043, 1.08 ) }
    dend_10 { pt3dadd( -33.8222, 60.5065, 3.03092, 1.08 ) }
    dend_10 { pt3dadd( -35.6059, 64.3128, 2.41351, 1.08 ) }
    dend_10 { pt3dadd( -35.8172, 64.6562, 2.34847, 1.08 ) }
    dend_10 { pt3dadd( -36.6411, 65.615, 2.13474, 1.08 ) }
    dend_10 { pt3dadd( -41.0911, 70.0178, 1.1809, 1.08 ) }
    dend_10 { pt3dadd( -44.6383, 73.0768, 0.558359, 1.08 ) }
    dend_10 { pt3dadd( -48.2621, 75.683, 0.02633, 1.08 ) }
    dend_10 { pt3dadd( -51.5122, 77.871, -0.35475, 1.08 ) }
    dend_10 { pt3dadd( -53.505, 79.1926, -0.5961, 1.08 ) }
    dend_10 { pt3dadd( -55.2722, 80.6209, -0.815212, 1.08 ) }
    dend_10 { pt3dadd( -58.1601, 83.3778, -1.14835, 1.08 ) }
    dend_10 { pt3dadd( -60.5355, 86.112, -1.37263, 1.08 ) }
    dend_10 { pt3dadd( -60.7088, 86.3271, -1.38997, 1.08 ) }
    dend_10 { pt3dadd( -63.8531, 90.7173, -1.71424, 1.08 ) }
    dend_10 { pt3dadd( -68.2364, 97.509, -2.37962, 1.08 ) }
    dend_10 { pt3dadd( -71.8657, 103.294, -3.00273, 1.08 ) }
    dend_10 { pt3dadd( -75.0986, 108.706, -3.72957, 1.08 ) }
    dend_10 { pt3dadd( -78.4074, 114.73, -4.55414, 1.08 ) }
    dend_10 { pt3dadd( -81.8975, 121.509, -5.45857, 1.08 ) }
    dend_10 { pt3dadd( -84.995, 128.208, -6.4121, 1.08 ) }
    dend_10 { pt3dadd( -87.465, 133.636, -7.32035, 1.08 ) }
    dend_10 { pt3dadd( -88.7486, 136.873, -7.87381, 1.08 ) }
    dend_10 { pt3dadd( -91.0676, 142.64, -8.8065, 1.08 ) }
    dend_10 { pt3dadd( -93.2392, 148.759, -9.56069, 1.08 ) }
    dend_10 { pt3dadd( -95.3605, 154.214, -10.0608, 0.81 ) }
    dend_10 { pt3dadd( -97.1055, 158.026, -10.2155, 0.81 ) }
    dend_10 { pt3dadd( -99.3713, 162.633, -10.2855, 0.81 ) }
    dend_10 { pt3dadd( -101.349, 166.0, -10.2408, 0.81 ) }
    dend_10 { pt3dadd( -103.089, 168.548, -10.2154, 0.54 ) }
    dend_10 { pt3dadd( -107.174, 173.956, -9.99898, 0.54 ) }
    dend_10 { pt3dadd( -111.507, 179.19, -9.53521, 1.08 ) }
    dend_10 { pt3dadd( -112.269, 180.09, -9.42768, 1.08 ) }
    dend_10 { pt3dadd( -114.734, 182.861, -9.15628, 1.08 ) }
    dend_10 { pt3dadd( -120.207, 189.257, -8.86418, 1.08 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 57/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.39275, 10.6596, 2.93098, 1.08 ) }
    dend_7 { pt3dadd( -13.4995, 3.43439, -4.31235, 1.08 ) }
    dend_7 { pt3dadd( -16.5766, -0.886322, -8.49045, 0.81 ) }
    dend_7 { pt3dadd( -20.44, -6.99572, -14.5813, 1.08 ) }
    dend_7 { pt3dadd( -22.5161, -10.5122, -18.0893, 1.08 ) }
    dend_7 { pt3dadd( -24.6311, -14.0946, -21.6631, 1.08 ) }
    dend_7 { pt3dadd( -27.6953, -19.2849, -26.8409, 1.08 ) }
    dend_7 { pt3dadd( -29.1621, -22.2973, -29.4736, 1.08 ) }
    dend_7 { pt3dadd( -31.4039, -28.134, -34.989, 0.54 ) }
    dend_7 { pt3dadd( -31.6893, -28.8538, -35.7742, 0.54 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 67/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -9.82785, 13.1471, 4.51488, 0.53 ) }
    dend_5 { pt3dadd( -10.5522, 13.2082, 4.4789, 0.53 ) }
    dend_5 { pt3dadd( -12.1783, 13.3454, 4.39815, 0.53 ) }
    dend_5 { pt3dadd( -12.3931, 13.3635, 4.38748, 0.53 ) }
    dend_5 { pt3dadd( -13.3742, 13.4463, 4.33876, 0.53 ) }
    dend_5 { pt3dadd( -14.5585, 13.5461, 4.27994, 0.53 ) }
    dend_5 { pt3dadd( -16.0595, 13.6727, 4.2054, 0.53 ) }
    dend_5 { pt3dadd( -22.0253, 14.8241, 3.13809, 0.53 ) }
    dend_5 { pt3dadd( -27.8317, 16.9688, 3.25423, 0.53 ) }
    dend_5 { pt3dadd( -33.4584, 19.5795, 3.45331, 0.53 ) }
    dend_5 { pt3dadd( -38.4499, 23.0794, 4.83821, 0.53 ) }
    dend_5 { pt3dadd( -43.8054, 26.1218, 5.75238, 0.53 ) }
    dend_5 { pt3dadd( -49.1313, 28.8635, 7.42222, 0.53 ) }
    dend_5 { pt3dadd( -54.7795, 30.613, 9.24161, 0.53 ) }
    dend_5 { pt3dadd( -60.4943, 32.471, 10.719, 0.53 ) }
    dend_5 { pt3dadd( -66.4395, 33.789, 11.7425, 0.53 ) }
    dend_5 { pt3dadd( -72.5881, 34.1221, 12.0502, 0.53 ) }
    dend_5 { pt3dadd( -78.5447, 35.404, 13.0493, 0.53 ) }
    dend_5 { pt3dadd( -84.4781, 36.8623, 13.9591, 0.53 ) }
    dend_5 { pt3dadd( -90.3438, 38.762, 14.4571, 0.53 ) }
    dend_5 { pt3dadd( -96.4554, 39.4205, 14.9469, 0.53 ) }
    dend_5 { pt3dadd( -102.618, 39.5771, 14.8793, 0.53 ) }
    dend_5 { pt3dadd( -108.661, 40.8108, 15.127, 0.53 ) }
    dend_5 { pt3dadd( -114.529, 42.7307, 15.5124, 0.53 ) }
    dend_5 { pt3dadd( -120.188, 45.1664, 16.2283, 0.53 ) }
    dend_5 { pt3dadd( -125.816, 47.2967, 17.703, 0.53 ) }
    dend_5 { pt3dadd( -131.573, 48.7557, 19.41, 0.53 ) }
    dend_5 { pt3dadd( -136.884, 49.7989, 22.3829, 0.53 ) }
    dend_5 { pt3dadd( -142.155, 49.4967, 25.5662, 0.53 ) }
    dend_5 { pt3dadd( -147.228, 48.2875, 28.8687, 0.53 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -9.82785, 13.1471, 4.51488, 0.53 ) }
    dend_4 { pt3dadd( -9.69738, 15.3705, 5.14911, 0.53 ) }
    dend_4 { pt3dadd( -9.67614, 15.7325, 5.25236, 0.53 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_4 { pt3dadd( -9.47741, 19.1203, 6.21876, 0.53 ) }
    dend_4 { pt3dadd( -10.4626, 28.6452, 7.82082, 0.53 ) }
    dend_4 { pt3dadd( -10.7277, 38.2982, 8.93363, 0.53 ) }
    dend_4 { pt3dadd( -12.2135, 47.7112, 10.7367, 0.53 ) }
    dend_4 { pt3dadd( -13.0945, 56.722, 14.1134, 0.53 ) }
    dend_4 { pt3dadd( -13.7813, 66.2439, 15.8785, 0.53 ) }
    dend_4 { pt3dadd( -14.0759, 75.8661, 17.205, 0.53 ) }
    dend_4 { pt3dadd( -13.0527, 85.5203, 16.7133, 0.53 ) }
    dend_4 { pt3dadd( -11.8459, 95.0516, 15.3088, 0.53 ) }
    dend_4 { pt3dadd( -10.7105, 104.449, 13.2015, 0.53 ) }
    dend_4 { pt3dadd( -10.749, 113.441, 9.66914, 0.53 ) }
    dend_4 { pt3dadd( -10.0924, 122.671, 6.81707, 0.53 ) }
    dend_4 { pt3dadd( -10.5912, 132.079, 4.51589, 0.53 ) }
    dend_4 { pt3dadd( -11.591, 141.188, 1.42236, 0.53 ) }
    dend_4 { pt3dadd( -11.881, 150.096, -2.28822, 0.53 ) }
    dend_4 { pt3dadd( -13.9445, 159.135, -5.02043, 0.53 ) }
    dend_4 { pt3dadd( -17.8057, 167.199, -8.47731, 0.53 ) }
    dend_4 { pt3dadd( -21.0752, 175.289, -12.4494, 0.53 ) }
    dend_4 { pt3dadd( -23.4976, 183.149, -17.3407, 0.53 ) }
    dend_4 { pt3dadd( -24.3336, 191.145, -22.5501, 0.53 ) }
    dend_4 { pt3dadd( -26.5264, 199.679, -26.4198, 0.53 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 21/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 90.6249, 194.868, -58.1549, 0.18 ) }
    dend_2 { pt3dadd( 91.3292, 195.306, -58.1195, 0.18 ) }
    dend_2 { pt3dadd( 93.4271, 196.672, -57.9593, 0.18 ) }
    dend_2 { pt3dadd( 97.1663, 199.365, -57.6246, 0.53 ) }
    dend_2 { pt3dadd( 101.503, 202.492, -57.4356, 0.53 ) }
    dend_2 { pt3dadd( 105.186, 205.302, -57.3771, 0.35 ) }
    dend_2 { pt3dadd( 108.675, 207.948, -57.5672, 0.35 ) }
    dend_2 { pt3dadd( 109.151, 208.323, -57.6245, 0.35 ) }
    dend_2 { pt3dadd( 111.905, 210.672, -58.2734, 0.35 ) }
    dend_2 { pt3dadd( 115.453, 213.715, -59.595, 0.35 ) }
    dend_2 { pt3dadd( 118.185, 215.631, -61.4955, 0.35 ) }
    dend_2 { pt3dadd( 121.252, 217.296, -64.2876, 0.35 ) }
    dend_2 { pt3dadd( 121.431, 217.384, -64.4871, 0.35 ) }
    dend_2 { pt3dadd( 123.245, 218.237, -67.0085, 0.18 ) }
    dend_2 { pt3dadd( 125.416, 219.091, -70.3414, 0.18 ) }
    dend_2 { pt3dadd( 129.358, 220.528, -77.0995, 0.18 ) }
    dend_2 { pt3dadd( 129.426, 220.548, -77.2212, 0.18 ) }
    dend_2 { pt3dadd( 131.234, 221.146, -80.4392, 0.53 ) }
    dend_2 { pt3dadd( 134.288, 222.117, -85.938, 0.53 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 90.6249, 194.868, -58.1549, 0.18 ) }
    dend_1 { pt3dadd( 90.6782, 195.626, -58.2788, 0.18 ) }
    dend_1 { pt3dadd( 90.9819, 199.947, -58.9852, 0.18 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.5311, 38.8286, 0.0146107, 0.451935 ) }
    axon_1 { pt3dadd( 19.9883, 52.8007, 0.0146107, 0.451935 ) }
    axon_1 { pt3dadd( 25.4455, 66.7728, 0.0146107, 0.451935 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 46/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 208.482, 38.2668, 64.9861, 0.18 ) }
    dend_29 { pt3dadd( 218.791, 41.3151, 64.0756, 0.18 ) }
    dend_29 { pt3dadd( 228.525, 46.1004, 64.151, 0.18 ) }
    dend_29 { pt3dadd( 237.693, 51.5129, 66.3543, 0.18 ) }
    dend_29 { pt3dadd( 245.866, 57.6227, 70.1962, 0.18 ) }
    dend_29 { pt3dadd( 254.037, 62.3617, 75.5111, 0.18 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 52/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 208.482, 38.2668, 64.9861, 0.18 ) }
    dend_26 { pt3dadd( 218.132, 40.6569, 70.4565, 0.18 ) }
    dend_26 { pt3dadd( 227.32, 44.4489, 75.9993, 0.18 ) }
    dend_26 { pt3dadd( 234.946, 47.2337, 83.933, 0.18 ) }
    dend_26 { pt3dadd( 242.251, 47.9543, 92.5584, 0.18 ) }
    dend_26 { pt3dadd( 249.309, 50.7736, 100.99, 0.18 ) }
    dend_26 { pt3dadd( 258.004, 53.8208, 107.634, 0.18 ) }
    dend_26 { pt3dadd( 265.435, 58.4396, 114.948, 0.18 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 60/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -24.3986, -52.6601, -9.25912, 1.08 ) }
    dend_19 { pt3dadd( -28.8448, -54.4477, -7.97949, 1.08 ) }
    dend_19 { pt3dadd( -32.3593, -55.9587, -7.09132, 0.81 ) }
    dend_19 { pt3dadd( -36.1164, -57.7052, -6.13391, 0.81 ) }
    dend_19 { pt3dadd( -39.643, -59.3446, -5.23523, 0.81 ) }
    dend_19 { pt3dadd( -43.7537, -61.2555, -4.1877, 0.81 ) }
    dend_19 { pt3dadd( -48.7738, -63.5891, -2.90843, 0.81 ) }
    dend_19 { pt3dadd( -50.7018, -64.5589, -2.51893, 0.81 ) }
    dend_19 { pt3dadd( -53.8143, -65.9689, -2.05708, 0.81 ) }
    dend_19 { pt3dadd( -63.9906, -73.2429, 0.492236, 0.81 ) }
    dend_19 { pt3dadd( -73.9299, -80.5932, 3.69361, 0.81 ) }
    dend_19 { pt3dadd( -84.2759, -85.7004, 8.91213, 0.81 ) }
    dend_19 { pt3dadd( -93.4296, -92.4294, 14.6675, 0.81 ) }
    dend_19 { pt3dadd( -102.179, -99.5358, 20.6365, 0.81 ) }
    dend_19 { pt3dadd( -110.854, -108.311, 24.237, 0.81 ) }
    dend_19 { pt3dadd( -117.286, -118.787, 28.3704, 0.81 ) }
    dend_19 { pt3dadd( -122.892, -129.564, 32.9739, 0.81 ) }
    dend_19 { pt3dadd( -129.542, -139.698, 37.5182, 0.81 ) }
    dend_19 { pt3dadd( -136.691, -149.431, 42.0994, 0.81 ) }
    dend_19 { pt3dadd( -144.065, -158.556, 47.4011, 0.81 ) }
    dend_19 { pt3dadd( -153.654, -165.115, 52.6001, 0.81 ) }
    dend_19 { pt3dadd( -163.592, -169.974, 58.7425, 0.81 ) }
    dend_19 { pt3dadd( -173.621, -176.287, 63.3526, 0.81 ) }
    dend_19 { pt3dadd( -184.246, -179.591, 69.2718, 0.81 ) }
    dend_19 { pt3dadd( -195.474, -182.52, 74.166, 0.81 ) }
    dend_19 { pt3dadd( -206.773, -184.596, 79.2839, 0.81 ) }
    dend_19 { pt3dadd( -217.489, -184.35, 85.8201, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 87/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -24.3986, -52.6601, -9.25912, 0.81 ) }
    dend_16 { pt3dadd( -27.2234, -57.8256, -10.5735, 0.81 ) }
    dend_16 { pt3dadd( -29.7948, -62.3865, -11.6434, 1.08 ) }
    dend_16 { pt3dadd( -31.2068, -64.6282, -12.1723, 1.08 ) }
    dend_16 { pt3dadd( -33.0408, -67.8472, -13.0537, 1.08 ) }
    dend_16 { pt3dadd( -33.9661, -69.617, -13.5389, 1.08 ) }
    dend_16 { pt3dadd( -36.8313, -74.9983, -14.9908, 1.08 ) }
    dend_16 { pt3dadd( -36.9742, -75.2474, -15.0512, 1.08 ) }
    dend_16 { pt3dadd( -38.9174, -78.5077, -16.0142, 0.81 ) }
    dend_16 { pt3dadd( -41.9552, -83.9561, -17.6658, 0.54 ) }
    dend_16 { pt3dadd( -43.8187, -87.8378, -18.7776, 1.08 ) }
    dend_16 { pt3dadd( -46.6346, -94.776, -20.5409, 1.08 ) }
    dend_16 { pt3dadd( -47.8039, -98.5135, -21.3611, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_16 { pt3dadd( -48.4464, -101.643, -21.9331, 0.81 ) }
    dend_16 { pt3dadd( -48.7725, -104.808, -22.2816, 0.81 ) }
    dend_16 { pt3dadd( -48.8898, -108.183, -22.3625, 1.08 ) }
    dend_16 { pt3dadd( -48.5241, -114.096, -22.3087, 1.08 ) }
    dend_16 { pt3dadd( -47.9711, -118.21, -22.1294, 0.81 ) }
    dend_16 { pt3dadd( -47.2481, -125.055, -21.7651, 0.54 ) }
    dend_16 { pt3dadd( -47.0676, -128.867, -21.5091, 0.54 ) }
    dend_16 { pt3dadd( -47.08, -132.342, -21.3118, 0.54 ) }
    dend_16 { pt3dadd( -47.3352, -136.294, -21.1302, 0.54 ) }
    dend_16 { pt3dadd( -47.7257, -139.254, -21.0227, 1.08 ) }
    dend_16 { pt3dadd( -49.0079, -144.996, -20.927, 1.08 ) }
    dend_16 { pt3dadd( -52.4614, -156.186, -21.0542, 1.08 ) }
    dend_16 { pt3dadd( -52.5591, -156.465, -21.0678, 1.08 ) }
    dend_16 { pt3dadd( -54.4632, -161.375, -21.3645, 1.08 ) }
    dend_16 { pt3dadd( -56.6832, -166.382, -21.6561, 1.08 ) }
    dend_16 { pt3dadd( -58.7958, -170.932, -21.9646, 1.08 ) }
    dend_16 { pt3dadd( -59.6602, -172.491, -22.123, 0.81 ) }
    dend_16 { pt3dadd( -59.8306, -172.726, -22.1611, 0.81 ) }
    dend_16 { pt3dadd( -60.7453, -174.212, -22.3969, 0.81 ) }
    dend_16 { pt3dadd( -62.4239, -177.501, -22.9765, 0.81 ) }
    dend_16 { pt3dadd( -64.4255, -182.045, -23.8071, 0.81 ) }
    dend_16 { pt3dadd( -66.9465, -188.033, -24.9317, 0.81 ) }
    dend_16 { pt3dadd( -68.2589, -191.307, -25.5743, 0.81 ) }
    dend_16 { pt3dadd( -71.0359, -198.425, -26.9747, 0.81 ) }
    dend_16 { pt3dadd( -72.2607, -201.773, -27.6397, 1.08 ) }
    dend_16 { pt3dadd( -73.7628, -206.286, -28.5136, 1.08 ) }
    dend_16 { pt3dadd( -74.8378, -209.624, -29.0752, 1.08 ) }
    dend_16 { pt3dadd( -75.8063, -212.869, -29.4473, 0.27 ) }
    dend_16 { pt3dadd( -77.4632, -217.589, -29.8062, 0.27 ) }
    dend_16 { pt3dadd( -78.2968, -219.54, -29.8267, 0.27 ) }
    dend_16 { pt3dadd( -79.6293, -222.557, -29.7164, 0.54 ) }
    dend_16 { pt3dadd( -80.8113, -225.635, -29.5218, 0.54 ) }
    dend_16 { pt3dadd( -82.4333, -230.393, -29.1911, 0.54 ) }
    dend_16 { pt3dadd( -82.6348, -230.949, -29.157, 0.54 ) }
    dend_16 { pt3dadd( -83.7084, -234.437, -28.9235, 0.54 ) }
    dend_16 { pt3dadd( -85.0168, -239.733, -28.7857, 0.54 ) }
    dend_16 { pt3dadd( -86.1785, -245.613, -28.833, 0.54 ) }
    dend_16 { pt3dadd( -87.5191, -252.973, -29.2612, 0.54 ) }
    dend_16 { pt3dadd( -88.118, -256.502, -29.5726, 0.54 ) }
    dend_16 { pt3dadd( -88.9405, -261.448, -30.1107, 0.54 ) }
    dend_16 { pt3dadd( -89.9369, -267.504, -30.8807, 0.54 ) }
    dend_16 { pt3dadd( -90.969, -273.453, -31.7492, 0.54 ) }
    dend_16 { pt3dadd( -92.6305, -281.406, -33.1496, 0.54 ) }
    dend_16 { pt3dadd( -92.9062, -282.716, -33.3935, 0.54 ) }
    dend_16 { pt3dadd( -94.3162, -288.68, -34.5155, 0.54 ) }
    dend_16 { pt3dadd( -95.2825, -292.302, -35.1918, 0.54 ) }
    dend_16 { pt3dadd( -96.3786, -296.368, -35.8447, 0.54 ) }
    dend_16 { pt3dadd( -97.6611, -301.752, -36.6757, 0.54 ) }
    dend_16 { pt3dadd( -98.6597, -306.301, -37.3225, 0.54 ) }
    dend_16 { pt3dadd( -99.8369, -311.619, -38.0811, 0.54 ) }
    dend_16 { pt3dadd( -100.941, -316.462, -38.9181, 0.54 ) }
    dend_16 { pt3dadd( -100.951, -316.515, -38.9276, 0.54 ) }
    dend_16 { pt3dadd( -101.368, -319.752, -39.4614, 0.54 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -120.207, 189.257, -8.86418, 0.81 ) }
    dend_12 { pt3dadd( -122.736, 192.767, -8.36394, 0.81 ) }
    dend_12 { pt3dadd( -125.0, 195.386, -7.87754, 0.81 ) }
    dend_12 { pt3dadd( -127.553, 198.139, -7.22012, 0.81 ) }
    dend_12 { pt3dadd( -130.717, 200.989, -6.26721, 0.81 ) }
    dend_12 { pt3dadd( -133.709, 203.788, -5.10412, 0.81 ) }
    dend_12 { pt3dadd( -133.754, 203.834, -5.08274, 0.81 ) }
    dend_12 { pt3dadd( -136.982, 207.256, -3.37925, 0.81 ) }
    dend_12 { pt3dadd( -139.874, 210.157, -1.68039, 0.81 ) }
    dend_12 { pt3dadd( -143.003, 213.024, 0.326945, 0.81 ) }
    dend_12 { pt3dadd( -147.305, 216.893, 3.37115, 0.81 ) }
    dend_12 { pt3dadd( -150.701, 219.853, 5.8129, 0.81 ) }
    dend_12 { pt3dadd( -157.2, 227.799, 10.7929, 0.81 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -120.207, 189.257, -8.86418, 0.27 ) }
    dend_11 { pt3dadd( -121.971, 193.496, -7.19019, 0.27 ) }
    dend_11 { pt3dadd( -124.475, 199.513, -4.81437, 0.27 ) }
    dend_11 { pt3dadd( -125.778, 202.645, -3.57731, 0.27 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 70/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -31.6893, -28.8538, -35.7742, 0.54 ) }
    dend_9 { pt3dadd( -31.8616, -32.1689, -36.765, 0.54 ) }
    dend_9 { pt3dadd( -32.1712, -35.2839, -37.6366, 0.54 ) }
    dend_9 { pt3dadd( -32.6331, -38.2445, -38.4692, 0.54 ) }
    dend_9 { pt3dadd( -33.9224, -43.6458, -40.0284, 0.54 ) }
    dend_9 { pt3dadd( -35.4456, -48.7263, -41.6386, 0.54 ) }
    dend_9 { pt3dadd( -37.6689, -55.0955, -43.9324, 0.54 ) }
    dend_9 { pt3dadd( -37.7579, -55.3193, -44.0214, 0.54 ) }
    dend_9 { pt3dadd( -39.4282, -59.158, -45.6155, 0.54 ) }
    dend_9 { pt3dadd( -42.2875, -65.3652, -48.2391, 0.54 ) }
    dend_9 { pt3dadd( -44.4499, -69.4362, -49.941, 0.54 ) }
    dend_9 { pt3dadd( -46.5501, -73.1593, -51.8056, 0.54 ) }
    dend_9 { pt3dadd( -48.0637, -75.7832, -53.3612, 0.54 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 83/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -31.6893, -28.8538, -35.7742, 0.54 ) }
    dend_8 { pt3dadd( -38.209, -31.1218, -41.5718, 0.54 ) }
    dend_8 { pt3dadd( -43.2198, -32.8884, -45.3729, 0.81 ) }
    dend_8 { pt3dadd( -46.6805, -34.2398, -47.7095, 0.81 ) }
    dend_8 { pt3dadd( -59.0856, -39.6072, -55.5929, 0.81 ) }
    dend_8 { pt3dadd( -66.1739, -42.8495, -59.6673, 0.81 ) }
    dend_8 { pt3dadd( -72.4589, -45.9223, -63.2154, 0.81 ) }
    dend_8 { pt3dadd( -81.446, -50.4172, -67.7384, 0.81 ) }
    dend_8 { pt3dadd( -86.9893, -53.4183, -70.2452, 0.81 ) }
    dend_8 { pt3dadd( -93.3935, -57.1777, -73.0107, 0.81 ) }
    dend_8 { pt3dadd( -101.234, -62.155, -76.1763, 0.81 ) }
    dend_8 { pt3dadd( -111.802, -69.2145, -80.6747, 0.81 ) }
    dend_8 { pt3dadd( -111.86, -69.254, -80.6993, 0.81 ) }
    dend_8 { pt3dadd( -122.029, -76.3108, -85.2125, 0.81 ) }
    dend_8 { pt3dadd( -122.287, -76.4833, -85.332, 0.81 ) }
    dend_8 { pt3dadd( -133.89, -84.1319, -90.6295, 0.81 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 265.435, 58.4396, 114.948, 0.27 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_28 { pt3dadd( 272.569, 60.6729, 121.25, 0.27 ) }
    dend_28 { pt3dadd( 279.59, 62.6711, 127.747, 0.27 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 2/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 265.435, 58.4396, 114.948, 0.27 ) }
    dend_27 { pt3dadd( 271.435, 59.6545, 120.338, 0.27 ) }
    dend_27 { pt3dadd( 277.886, 59.5008, 125.295, 0.27 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 5/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -101.368, -319.752, -39.4614, 0.54 ) }
    dend_18 { pt3dadd( -102.916, -330.048, -39.4709, 0.54 ) }
    dend_18 { pt3dadd( -104.631, -341.352, -39.5647, 0.54 ) }
    dend_18 { pt3dadd( -104.721, -341.97, -39.556, 0.54 ) }
    dend_18 { pt3dadd( -106.978, -353.613, -39.1844, 0.54 ) }
    dend_18 { pt3dadd( -108.724, -360.996, -38.9131, 0.54 ) }
    dend_18 { pt3dadd( -108.844, -361.42, -38.8932, 0.54 ) }
    dend_18 { pt3dadd( -113.611, -375.109, -38.2045, 0.54 ) }
    dend_18 { pt3dadd( -117.436, -385.019, -37.5258, 0.54 ) }
    dend_18 { pt3dadd( -121.671, -395.446, -36.7515, 0.54 ) }
    dend_18 { pt3dadd( -127.81, -408.658, -35.5286, 0.54 ) }
    dend_18 { pt3dadd( -132.513, -417.51, -34.7334, 0.54 ) }
    dend_18 { pt3dadd( -137.682, -426.275, -34.0132, 0.54 ) }
    dend_18 { pt3dadd( -142.168, -432.818, -33.5713, 0.54 ) }
    dend_18 { pt3dadd( -148.337, -440.622, -33.322, 0.54 ) }
    dend_18 { pt3dadd( -155.156, -448.248, -33.4868, 0.54 ) }
    dend_18 { pt3dadd( -159.383, -452.009, -33.9669, 0.54 ) }
    dend_18 { pt3dadd( -162.789, -454.527, -34.7391, 0.54 ) }
    dend_18 { pt3dadd( -165.249, -456.001, -35.5494, 0.54 ) }
    dend_18 { pt3dadd( -169.963, -458.427, -37.549, 0.54 ) }
    dend_18 { pt3dadd( -174.65, -460.612, -39.9099, 0.54 ) }
    dend_18 { pt3dadd( -178.855, -462.775, -42.2223, 0.54 ) }
    dend_18 { pt3dadd( -182.449, -464.864, -44.0064, 0.54 ) }
    dend_18 { pt3dadd( -187.27, -467.823, -46.1947, 0.54 ) }
    dend_18 { pt3dadd( -189.882, -469.712, -47.3814, 0.54 ) }
    dend_18 { pt3dadd( -192.351, -471.818, -48.5282, 0.54 ) }
    dend_18 { pt3dadd( -198.014, -477.099, -50.8153, 0.54 ) }
    dend_18 { pt3dadd( -203.239, -482.302, -52.5202, 0.54 ) }
    dend_18 { pt3dadd( -208.656, -488.011, -53.7213, 0.54 ) }
    dend_18 { pt3dadd( -213.536, -493.58, -54.3837, 0.54 ) }
    dend_18 { pt3dadd( -218.927, -500.423, -54.5942, 0.54 ) }
    dend_18 { pt3dadd( -223.435, -506.773, -54.2153, 0.54 ) }
    dend_18 { pt3dadd( -226.665, -511.715, -53.6276, 0.54 ) }
    dend_18 { pt3dadd( -230.624, -518.175, -52.1335, 0.54 ) }
    dend_18 { pt3dadd( -232.291, -521.305, -50.8647, 0.54 ) }
    dend_18 { pt3dadd( -235.441, -527.232, -46.7463, 0.54 ) }
    dend_18 { pt3dadd( -235.549, -527.62, -46.2984, 0.54 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 42/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -101.368, -319.752, -39.4614, 0.54 ) }
    dend_17 { pt3dadd( -105.546, -324.053, -36.4533, 0.54 ) }
    dend_17 { pt3dadd( -108.032, -326.612, -34.6636, 0.54 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_20, dend_13, dend_6, dend_3, dend_0, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, dend_29, dend_26, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_28, dend_27, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_20, dend_13, dend_6, dend_3, dend_0, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, dend_29, dend_26, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_28, dend_27, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_20 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_24 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_21 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_14 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_5 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_29 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_26 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_19 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_16 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_9 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_8 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_18 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_6 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_3 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_13 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_11 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_22 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_28 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_17 OneSecGrp_SectionRef_33.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, axon_1, axon_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_28, dend_28, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_20 nseg = 13
    dend_0 nseg = 11
    dend_25 nseg = 11
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_14 nseg = 15
    dend_10 nseg = 11
    dend_7 nseg = 3
    dend_5 nseg = 7
    dend_4 nseg = 9
    dend_2 nseg = 3
    dend_29 nseg = 3
    dend_26 nseg = 3
    dend_19 nseg = 13
    dend_16 nseg = 15
    dend_12 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 7
    dend_18 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_LBC_ebed230edd_0_0


