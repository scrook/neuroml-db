// Cell: cNAC187_L23_BTC_eb8366ca09_0_0
/*
{
  "id" : "cNAC187_L23_BTC_eb8366ca09_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.701782, -14.5938, 2.84454, 2.73269", "0.624028, -13.2198, 2.58654, 4.41229", "0.546274, -11.8458, 2.32855, 5.84991", "0.46852, -10.4718, 2.07055, 7.31637", "0.390766, -9.09779, 1.81255, 8.68275", "0.313011, -7.72379, 1.55455, 10.1324", "0.235257, -6.34979, 1.29656, 11.1056", "0.157503, -4.97579, 1.03856, 11.7054", "0.0797487, -3.60179, 0.780562, 12.0256", "0.00199453, -2.22779, 0.522565, 12.4948", "-0.0757597, -0.853785, 0.264567, 12.7838", "-0.153514, 0.520216, 0.00657008, 12.9275", "-0.231268, 1.89422, -0.251427, 12.8186", "-0.309022, 3.26822, -0.509424, 12.3668", "-0.386777, 4.64222, -0.767422, 11.8063", "-0.464531, 6.01622, -1.02542, 10.8607", "-0.542285, 7.39022, -1.28342, 9.60756", "-0.620039, 8.76422, -1.54141, 8.32491", "-0.697793, 10.1382, -1.79941, 6.57632", "-0.775548, 11.5122, -2.05741, 4.5422", "-0.853302, 12.8862, -2.3154, 2.90642" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.99768, 4.39237, 12.0608, 1.77", "-4.205, 5.32454, 12.3633, 1.77", "-4.57909, 6.76936, 13.0222, 1.55", "-4.87682, 7.73542, 13.5779, 1.55", "-5.31509, 8.83121, 14.3896, 1.4", "-6.11106, 10.3306, 15.6978, 1.4", "-6.76728, 11.3073, 16.6462, 1.4", "-7.51395, 12.0714, 17.569, 1.69", "-8.16378, 12.5423, 18.24, 1.69", "-9.41152, 13.236, 19.2762, 1.4", "-10.5195, 13.7413, 20.0404, 1.33", "-11.5182, 14.1633, 20.4775, 1.18", "-13.1031, 14.8881, 20.793, 1.18", "-14.2102, 15.4758, 20.8249, 1.18", "-15.3159, 16.1627, 20.8004, 1.33", "-16.7577, 17.2619, 20.6917, 1.4", "-19.2163, 19.6422, 20.4634, 1.62", "-20.1211, 20.7628, 20.3937, 1.69", "-21.0353, 22.1045, 20.3237, 1.33", "-22.1678, 24.0743, 20.2895, 1.62", "-22.6937, 25.2682, 20.3737, 1.62", "-23.0735, 26.5764, 20.7489, 1.84", "-23.2086, 27.2817, 21.2237, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.09232, -14.8961, 2.30081, 3.98", "1.09232, -14.8961, 2.30081, 3.98", "1.19644, -16.2386, 2.30081, 3.98", "1.33004, -17.9611, 2.30081, 3.76", "1.46313, -19.6772, 2.30081, 3.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.877678, 13.3174, -4.94919, 2.58", "-0.877678, 13.3174, -4.94919, 2.58", "-0.287388, 15.2557, -4.5578, 2.14", "0.0383926, 16.3657, -4.32163, 2.14", "0.358554, 17.5496, -4.07434, 1.92", "0.794084, 19.3696, -3.68915, 1.69", "1.03384, 20.5237, -3.46167, 1.69", "1.20822, 21.6334, -3.27109, 1.69", "1.357, 23.276, -3.0535, 1.92", "1.37313, 24.2717, -3.00025, 2.06", "1.29227, 25.7427, -3.12468, 1.99", "1.19484, 26.7081, -3.35443, 1.84", "1.05773, 28.0971, -3.82828, 1.69", "0.927365, 29.2521, -4.29254, 1.77", "0.756125, 30.6898, -4.95773, 1.69", "0.530342, 32.7801, -6.03708, 1.92", "0.384164, 34.4132, -6.98376, 2.14", "0.307517, 35.8476, -7.84275, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500003629291099
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.853302, 12.8862, -2.3154, 0.892431", "-1.70079, 27.8622, -2.3154, 0.892431", "-2.54828, 42.8383, -2.3154, 0.892431" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-23.2086, 27.2817, 21.2237, 0.66", "-24.848, 28.2876, 23.0094, 0.66", "-25.6333, 28.8587, 23.7331, 0.59", "-26.6232, 29.6291, 24.5279, 0.59", "-27.3581, 30.1726, 25.0433, 0.52", "-28.2473, 30.768, 25.5991, 0.66", "-28.8717, 31.1615, 25.9542, 0.52", "-29.4871, 31.5756, 26.2636, 0.52", "-30.2899, 32.0616, 26.75, 0.44", "-30.91, 32.3624, 27.2035, 0.66", "-31.6253, 32.6113, 27.8237, 0.52", "-32.2676, 32.792, 28.4337, 0.74", "-33.9692, 33.1997, 30.1976, 1.03", "-34.9416, 33.4047, 31.3122, 0.66", "-35.7738, 33.5747, 32.3816, 0.59", "-36.3672, 33.7174, 33.2484, 0.74", "-44.633, 37.6804, 39.4175, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-23.2086, 27.2817, 21.2237, 0.88", "-23.4333, 30.0746, 21.9448, 0.88", "-23.5572, 31.0465, 22.1417, 0.88", "-23.7626, 32.2636, 22.3875, 0.88", "-24.0355, 33.6588, 22.6711, 0.88", "-24.2929, 34.9855, 22.962, 0.81", "-24.526, 36.2362, 23.2712, 0.81", "-24.7112, 37.0897, 23.4404, 1.03", "-24.9674, 38.0789, 23.6496, 0.81", "-25.3059, 39.1634, 23.8889, 0.96", "-25.6123, 40.0449, 24.0862, 0.88", "-25.97, 41.0921, 24.3152, 0.74", "-26.2077, 41.8071, 24.4745, 0.66", "-26.4611, 42.6445, 24.6581, 0.74", "-26.71, 43.6331, 24.8482, 0.81", "-26.8672, 44.4028, 24.9932, 0.81", "-27.0031, 45.2912, 25.1722, 0.88", "-27.0818, 46.2406, 25.3814, 1.03", "-27.0945, 47.3371, 25.6569, 0.96", "-27.0338, 48.7015, 26.0112, 1.03", "-26.9773, 49.6738, 26.2502, 1.03", "-26.9124, 51.0989, 26.5901, 1.11", "-26.9141, 52.0101, 26.7592, 0.96", "-26.9842, 53.1547, 26.9082, 0.88", "-27.1659, 54.4389, 27.0491, 0.74", "-27.4115, 55.5289, 27.1656, 0.81", "-27.6435, 56.2733, 27.2696, 0.96", "-28.213, 57.6769, 27.5155, 1.11", "-28.5376, 58.3311, 27.6696, 1.11", "-29.0783, 59.2732, 27.9399, 0.96", "-29.5976, 60.1301, 28.2239, 0.74", "-30.1644, 61.1071, 28.5707, 0.74", "-30.4748, 61.6633, 28.7644, 0.66", "-30.7996, 62.2604, 28.9682, 0.59", "-31.3336, 63.241, 29.2179, 0.81", "-31.6034, 63.7426, 29.3142, 0.96", "-31.9311, 64.3855, 29.4005, 0.96", "-32.3683, 65.3686, 29.4834, 0.59", "-32.8301, 66.6874, 29.5594, 0.59", "-33.0899, 67.7251, 29.5944, 0.66", "-33.2313, 68.8034, 29.6156, 0.96", "-33.2455, 69.6316, 29.6204, 1.03", "-33.1751, 70.5318, 29.6544, 0.81", "-32.9925, 71.6619, 29.7345, 0.52", "-32.8229, 72.4871, 29.8522, 0.37", "-32.7016, 73.265, 30.0509, 0.37", "-32.7125, 73.8107, 30.2599, 0.44", "-32.9615, 74.9593, 30.8789, 0.44", "-33.2106, 75.6311, 31.2536, 0.66", "-33.5746, 76.4837, 31.678, 1.03", "-33.8221, 77.1277, 31.9371, 1.18", "-34.0308, 77.9011, 32.178, 1.25", "-34.0929, 78.7401, 32.3642, 1.4", "-33.9226, 80.066, 32.5461, 1.25", "-33.6706, 80.9122, 32.6171, 1.18", "-33.1782, 82.0558, 32.612, 0.66", "-32.6083, 83.113, 32.5472, 0.66", "-31.8324, 84.3305, 32.4348, 0.66", "-31.3613, 84.9725, 32.3359, 0.81", "-30.7446, 85.733, 32.2041, 0.96", "-30.0565, 86.5981, 32.0555, 0.81", "-29.4731, 87.3833, 31.9154, 0.88", "-29.0239, 88.1185, 31.7998, 0.88", "-28.4343, 89.3975, 31.6903, 0.74", "-28.1775, 90.0958, 31.69, 0.74", "-27.8731, 91.0756, 31.7983, 0.59", "-27.7262, 91.6437, 31.8951, 0.59", "-27.5246, 92.6053, 32.0598, 0.59", "-27.2908, 94.0449, 32.2783, 0.74", "-27.2072, 94.9126, 32.3869, 0.81", "-27.1497, 95.9418, 32.4584, 0.81", "-27.1054, 97.3474, 32.4997, 0.74", "-27.0633, 98.3073, 32.4843, 0.74", "-27.0052, 99.2559, 32.4214, 0.74", "-26.886, 100.83, 32.2605, 0.88", "-26.7246, 102.429, 32.0453, 1.03", "-26.6051, 103.46, 31.8786, 1.03", "-26.4922, 104.229, 31.775, 1.69", "-26.2504, 105.666, 31.6146, 1.4", "-26.0639, 106.751, 31.5205, 0.74", "-25.8613, 107.935, 31.4607, 0.74", "-25.7924, 108.457, 31.4374, 0.88", "-25.7039, 109.616, 31.3829, 1.03", "-25.6778, 110.253, 31.3568, 1.11", "-25.6137, 111.523, 31.3052, 0.66", "-25.5378, 112.356, 31.2503, 0.66", "-25.3146, 113.505, 31.1374, 0.81", "-25.014, 114.531, 30.9365, 1.03", "-24.6892, 115.48, 30.6705, 0.88", "-24.4253, 116.21, 30.44, 0.66", "-24.0978, 117.198, 30.0887, 0.66", "-23.8912, 118.116, 29.7445, 0.88", "-23.8577, 119.2, 29.3852, 0.74", "-24.0298, 120.042, 29.1257, 0.66", "-24.2019, 120.629, 28.9758, 0.66", "-24.4903, 121.651, 28.7479, 0.52", "-24.6103, 122.361, 28.6038, 0.44", "-24.5268, 123.24, 28.446, 0.44", "-24.2479, 123.894, 28.3585, 0.44", "-23.3508, 125.427, 28.0988, 0.52", "-22.7031, 126.415, 27.9209, 0.66", "-21.8974, 127.525, 27.707, 0.59", "-21.4264, 128.157, 27.582, 0.66", "-20.7936, 129.061, 27.4078, 0.74", "-20.1238, 130.228, 27.1763, 0.81", "-19.8523, 130.847, 27.0379, 0.88", "-19.4393, 132.009, 26.7711, 0.74", "-19.2005, 132.783, 26.5672, 0.74", "-18.9144, 133.822, 26.223, 0.81", "-18.6182, 135.049, 25.7461, 0.74", "-18.454, 135.971, 25.379, 0.88", "-18.4054, 136.455, 25.1847, 0.88", "-18.3649, 137.891, 24.5963, 0.96", "-18.3588, 138.848, 24.2091, 1.25", "-18.3515, 139.714, 23.8982, 0.74", "-18.3491, 140.648, 23.6331, 0.74", "-18.3548, 141.524, 23.4537, 1.03", "-18.3543, 142.48, 23.3221, 1.25", "-18.3364, 143.365, 23.2573, 1.03", "-18.2564, 144.451, 23.2205, 0.88", "-18.0557, 145.824, 23.1993, 0.88", "-17.7703, 147.17, 23.1996, 0.88", "-17.3932, 148.599, 23.1914, 0.96", "-17.0335, 149.834, 23.1892, 1.03", "-16.688, 151.005, 23.175, 1.03", "-16.2767, 152.464, 23.1903, 0.88", "-15.9872, 153.546, 23.2309, 0.88", "-15.7453, 154.645, 23.2836, 0.88", "-15.6739, 155.446, 23.3444, 0.66", "-15.8398, 156.352, 23.5049, 0.66", "-16.456, 157.617, 23.8583, 0.74", "-16.7998, 158.109, 24.0278, 0.74", "-17.247, 158.652, 24.2282, 0.74", "-17.9227, 159.46, 24.4876, 0.59", "-18.5632, 160.368, 24.6111, 0.88", "-18.7232, 160.716, 24.5924, 1.03", "-18.8342, 161.38, 24.4359, 0.81", "-18.785, 162.137, 24.2164, 0.66", "-18.5716, 163.298, 23.8755, 0.59", "-18.1914, 164.874, 23.4083, 0.59", "-17.9387, 165.899, 23.1252, 0.66", "-17.6432, 167.199, 22.8315, 0.81", "-17.3912, 168.314, 22.6368, 0.66", "-16.9814, 169.994, 22.4397, 0.81", "-16.6879, 171.154, 22.3497, 0.88", "-16.3759, 172.419, 22.274, 0.96", "-16.1397, 173.529, 22.1821, 0.96", "-15.9732, 174.602, 22.0562, 0.96", "-15.8375, 176.083, 21.8013, 0.74", "-15.8078, 177.164, 21.5624, 0.74", "-15.833, 177.944, 21.3779, 0.74", "-15.8916, 178.875, 21.1564, 0.74", "-16.0017, 180.379, 20.8062, 0.74", "-16.1033, 181.46, 20.6283, 0.88", "-16.2493, 182.976, 20.4817, 0.88", "-16.3713, 184.529, 20.4071, 0.88", "-16.442, 185.797, 20.3775, 0.88", "-16.469, 186.962, 20.3561, 0.81", "-16.4801, 188.346, 20.3335, 0.66", "-16.535, 189.417, 20.2779, 0.59", "-16.6535, 190.163, 20.205, 0.74", "-16.8449, 190.833, 20.1035, 0.74", "-17.1182, 191.7, 19.9244, 0.74", "-17.3012, 192.386, 19.7775, 0.66", "-17.4795, 193.32, 19.578, 0.66", "-17.6294, 194.423, 19.4065, 0.52", "-17.7166, 195.479, 19.2782, 0.52", "-17.7647, 196.614, 19.1328, 0.59", "-17.832, 198.166, 18.8902, 1.11", "-17.8993, 199.036, 18.7172, 1.33", "-17.9969, 199.776, 18.5494, 1.33", "-18.2565, 200.995, 18.257, 0.74", "-18.6193, 202.229, 17.9683, 0.59", "-19.0182, 203.319, 17.7234, 0.66", "-19.4031, 204.34, 17.5119, 0.66", "-19.7837, 205.411, 17.2706, 0.74", "-20.2072, 206.571, 16.9733, 0.81", "-20.5522, 207.415, 16.7522, 0.81", "-20.9371, 208.265, 16.5251, 0.66", "-21.6557, 209.744, 16.0877, 0.66", "-22.3578, 211.013, 15.6423, 0.52", "-22.9713, 211.982, 15.2456, 0.44", "-23.3501, 212.528, 14.9991, 0.59", "-23.7424, 213.027, 14.7703, 0.59", "-24.2656, 213.624, 14.4948, 0.59", "-24.9004, 214.324, 14.1949, 0.66", "-25.2743, 214.798, 14.0441, 0.66", "-25.7499, 215.532, 13.8189, 0.66", "-26.2036, 216.311, 13.5698, 0.59", "-26.6157, 217.071, 13.304, 0.44", "-26.9945, 217.788, 13.0161, 0.44", "-27.3724, 218.48, 12.6904, 0.88", "-27.6826, 219.004, 12.4141, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.46313, -19.6772, 2.30081, 1.47", "1.91401, -20.1549, 1.67393, 1.47", "2.25944, -20.6125, 1.15326, 1.03", "2.63703, -21.1342, 0.555028, 0.44", "2.8059, -21.3499, 0.305661, 0.66", "3.08307, -21.6702, -0.0657919, 0.81", "3.34922, -21.9483, -0.393979, 0.74", "3.70898, -22.3014, -0.798617, 0.81", "4.26214, -22.742, -1.30016, 0.44", "4.64898, -22.9988, -1.60868, 0.81", "5.00515, -23.2014, -1.84729, 1.11", "5.39912, -23.391, -2.06255, 1.11", "5.8727, -23.5753, -2.27152, 0.74", "6.38013, -23.7316, -2.45209, 0.52", "7.26858, -23.9555, -2.70365, 0.52", "7.96482, -24.0973, -2.8818, 0.52", "8.34724, -24.1519, -2.96799, 0.44", "8.98479, -24.1993, -3.09009, 0.66", "9.39297, -24.1962, -3.16017, 1.18", "9.82815, -24.1572, -3.22816, 1.47", "10.3248, -24.0719, -3.29665, 1.03", "10.7889, -23.9742, -3.38115, 0.81", "11.2171, -23.8871, -3.47924, 0.59", "11.7646, -23.7829, -3.65175, 0.81", "12.1741, -23.7061, -3.81224, 0.81", "12.689, -23.603, -4.09534, 0.52", "12.9672, -23.5479, -4.28864, 0.52", "13.407, -23.4704, -4.63969, 0.74", "13.8875, -23.3875, -5.03886, 0.66", "14.2993, -23.3163, -5.39651, 0.66", "14.9815, -23.1865, -6.00141, 0.52", "15.3929, -23.0868, -6.38082, 0.44", "15.8272, -22.9758, -6.76209, 0.44", "16.271, -22.8725, -7.0897, 0.74", "16.5868, -22.8097, -7.27252, 0.88", "16.9701, -22.7485, -7.44658, 0.74", "17.7165, -22.6434, -7.71801, 0.37", "18.0987, -22.5975, -7.88679, 0.37", "18.6903, -22.5699, -8.17384, 0.66", "19.1294, -22.5768, -8.39245, 0.66", "19.5361, -22.5905, -8.58396, 0.81", "19.8219, -22.6021, -8.71173, 0.81", "20.9434, -22.6318, -9.19178, 0.66", "21.6413, -22.6223, -9.51107, 0.66", "22.0831, -22.6094, -9.73753, 0.81", "22.5582, -22.5779, -10.0233, 0.81", "22.9977, -22.5261, -10.3342, 0.66", "23.2637, -22.4706, -10.5478, 0.59", "23.5435, -22.3562, -10.8345, 0.59", "23.9641, -22.1007, -11.4081, 0.59", "24.4455, -21.7676, -12.1568, 0.96", "24.6943, -21.6052, -12.5564, 1.11", "24.9018, -21.478, -12.8686, 1.18", "25.3006, -21.2521, -13.3534, 0.81", "25.8253, -20.9773, -13.8166, 0.52", "26.195, -20.8037, -14.0301, 0.66", "26.6921, -20.604, -14.2054, 0.66", "27.1304, -20.4301, -14.3155, 0.44", "27.7983, -20.1583, -14.4446, 0.44", "28.253, -19.9434, -14.4989, 0.52", "28.658, -19.7008, -14.5352, 0.66", "29.0308, -19.4294, -14.5573, 1.11", "29.2771, -19.2214, -14.563, 1.25", "29.4916, -19.031, -14.5645, 1.25", "29.8577, -18.6943, -14.5689, 1.25", "30.2388, -18.3539, -14.5676, 0.74", "30.797, -17.8898, -14.5808, 0.88", "31.0287, -17.7004, -14.5943, 0.88", "31.2704, -17.5005, -14.6044, 0.88", "31.6818, -17.1392, -14.6512, 0.59", "32.1745, -16.6672, -14.7542, 0.52", "32.4952, -16.3314, -14.8696, 0.52", "32.9456, -15.8798, -15.0709, 0.81", "33.2904, -15.5434, -15.2375, 0.81", "33.9084, -14.9698, -15.5533, 0.96", "34.2147, -14.7032, -15.7175, 1.11", "34.6169, -14.3758, -15.9674, 1.4", "35.3394, -13.8135, -16.4488, 0.81", "35.8255, -13.4449, -16.7964, 0.81", "36.2133, -13.1273, -17.0896, 0.81", "36.4145, -12.9394, -17.2377, 0.81", "36.9161, -12.3802, -17.6336, 0.52", "37.328, -11.7788, -18.0038, 0.66", "37.5466, -11.3374, -18.2502, 0.59", "37.7548, -10.8462, -18.4833, 0.37", "37.9735, -10.2785, -18.7031, 1.03", "38.0818, -10.0, -18.7918, 1.25", "38.2203, -9.68072, -18.8738, 1.25", "38.4966, -9.16275, -19.0078, 1.03", "38.7629, -8.75103, -19.1205, 1.18", "39.1282, -8.23952, -19.2621, 1.03", "39.48, -7.74864, -19.3863, 1.18", "39.7341, -7.38972, -19.466, 1.18", "40.0442, -6.96022, -19.5526, 0.74", "40.291, -6.64025, -19.6157, 0.52", "40.581, -6.30496, -19.6892, 0.52", "41.1091, -5.80144, -19.8239, 0.81", "41.4839, -5.48701, -19.9203, 0.88", "41.7903, -5.2538, -19.9997, 0.81", "42.3228, -4.91546, -20.1376, 0.37", "42.6896, -4.72991, -20.2424, 0.29", "43.2937, -4.47644, -20.4573, 0.59", "43.5124, -4.39098, -20.5529, 0.66", "43.9853, -4.19715, -20.7897, 0.37", "44.5428, -3.94074, -21.1019, 0.59", "45.048, -3.66875, -21.3903, 0.81", "45.7473, -3.26074, -21.7762, 1.99", "46.109, -3.05249, -21.968, 2.65", "46.3712, -2.91183, -22.0978, 2.65", "46.9753, -2.60204, -22.3754, 1.18", "47.6342, -2.27787, -22.6422, 0.44", "48.2097, -2.02705, -22.8238, 0.74", "48.6156, -1.87125, -22.9148, 0.74", "49.0174, -1.7182, -22.9907, 0.81", "49.2843, -1.61738, -23.0367, 0.81", "49.703, -1.46536, -23.098, 0.59", "50.1781, -1.31327, -23.1494, 0.44", "50.6415, -1.1745, -23.1724, 0.37", "51.0646, -1.05862, -23.1776, 0.37", "51.6868, -0.905852, -23.1942, 0.74", "52.0515, -0.830733, -23.2179, 0.88", "52.6068, -0.74778, -23.2943, 0.66", "52.9536, -0.705721, -23.3793, 0.52", "53.3703, -0.663599, -23.5034, 0.52", "53.9474, -0.593027, -23.6882, 0.88", "54.3726, -0.515726, -23.8453, 0.88", "54.9197, -0.377525, -24.066, 0.66", "55.5741, -0.170647, -24.3377, 0.44", "56.0228, -0.00131607, -24.5127, 0.44", "56.4968, 0.19038, -24.6763, 0.66", "56.9898, 0.388486, -24.8229, 0.52", "57.3716, 0.540858, -24.9257, 0.52", "57.8736, 0.737451, -25.049, 0.74", "58.3626, 0.919386, -25.1401, 0.44", "59.0028, 1.16004, -25.2457, 0.44", "59.6004, 1.39183, -25.3265, 0.88", "60.0128, 1.56459, -25.3693, 1.03", "60.5781, 1.82437, -25.4116, 0.74", "61.3436, 2.23072, -25.4479, 0.52", "61.6756, 2.42301, -25.4565, 0.96", "61.9751, 2.61553, -25.4615, 0.96", "62.388, 2.88595, -25.4717, 0.81", "62.9889, 3.24857, -25.5064, 0.52", "63.3932, 3.45742, -25.5474, 0.52", "64.0701, 3.73925, -25.6441, 0.59", "64.4455, 3.8659, -25.7143, 0.81", "64.8694, 3.97995, -25.8113, 0.81", "65.3203, 4.07195, -25.9326, 0.66", "65.6849, 4.12767, -26.0461, 0.59", "66.2495, 4.21205, -26.2354, 0.59", "67.0297, 4.3773, -26.5108, 0.44", "67.4699, 4.48952, -26.6958, 0.74", "67.8159, 4.59204, -26.8568, 0.74", "67.9776, 4.6451, -26.9362, 0.74", "68.4792, 4.82062, -27.2085, 0.44", "69.0273, 5.01697, -27.5247, 0.44", "69.819, 5.32916, -27.9651, 0.74", "70.172, 5.48786, -28.1815, 0.74", "70.5074, 5.66164, -28.4021, 0.74", "70.9238, 5.90658, -28.6896, 0.52", "71.2856, 6.14647, -28.9455, 0.37", "71.6368, 6.40975, -29.1815, 0.66", "71.919, 6.65422, -29.3454, 1.03", "72.1633, 6.86791, -29.4756, 1.18", "72.3397, 7.02042, -29.5744, 1.18", "72.7537, 7.35884, -29.8115, 0.59", "73.087, 7.61152, -30.0153, 0.44", "73.3428, 7.7921, -30.1742, 0.44", "73.7609, 8.08155, -30.4263, 0.81", "74.4558, 8.53721, -30.8514, 1.11", "74.7474, 8.71206, -31.0285, 1.11", "75.027, 8.86596, -31.1966, 0.96", "75.3031, 9.01322, -31.3635, 0.66", "75.7163, 9.23327, -31.6102, 0.37", "76.1993, 9.48453, -31.8899, 0.52", "76.695, 9.72554, -32.1484, 0.59", "77.0606, 9.89993, -32.3341, 0.44", "77.5028, 10.1119, -32.5664, 0.37", "78.0757, 10.3954, -32.8748, 0.66", "78.4306, 10.5804, -33.0642, 0.44", "78.7825, 10.7678, -33.251, 0.44", "79.3305, 11.047, -33.5136, 0.88", "79.6998, 11.2186, -33.6585, 1.03", "80.0421, 11.3625, -33.7576, 1.03", "80.5653, 11.574, -33.85, 0.29", "81.0353, 11.7651, -33.8952, 0.29", "81.5723, 11.9872, -33.9146, 0.29", "82.0415, 12.1793, -33.9095, 0.44", "82.649, 12.4027, -33.8796, 1.11", "83.1448, 12.5663, -33.8547, 1.4", "83.2402, 12.5978, -33.8507, 1.55", "83.673, 12.7568, -33.8415, 0.88", "84.24, 12.9709, -33.869, 0.29", "84.8557, 13.1877, -33.9279, 0.29", "85.3174, 13.3405, -33.9923, 0.52", "85.5828, 13.4275, -34.0403, 0.66", "85.8837, 13.5332, -34.0963, 0.44", "86.3491, 13.7153, -34.1772, 0.29", "86.7093, 13.8769, -34.2382, 0.29", "87.2844, 14.1493, -34.3385, 0.66", "87.5975, 14.279, -34.3907, 1.11", "87.8806, 14.382, -34.4508, 0.81", "88.5479, 14.6293, -34.6326, 0.52", "88.7956, 14.7323, -34.7254, 0.74", "89.2223, 14.9354, -34.9224, 0.74", "89.7752, 15.2379, -35.234, 0.81", "90.323, 15.5631, -35.6112, 0.44", "90.7586, 15.8222, -35.9767, 0.81", "91.2161, 16.1005, -36.4482, 1.33", "91.4637, 16.2534, -36.7438, 1.33", "91.7139, 16.4042, -37.069, 1.11", "92.2676, 16.7028, -37.8088, 0.52", "92.7509, 16.8924, -38.4456, 1.18", "93.1312, 16.9928, -38.9257, 1.33", "93.512, 17.0638, -39.3816, 1.03", "94.0177, 17.136, -39.9507, 0.22", "94.3768, 17.1746, -40.3173, 0.22", "95.3243, 17.2618, -41.1925, 0.88", "95.6805, 17.2915, -41.4773, 1.03", "95.9989, 17.307, -41.697, 1.18", "96.426, 17.3076, -41.9623, 0.96", "96.7694, 17.284, -42.1773, 0.66", "97.3093, 17.1987, -42.5041, 0.44", "97.8776, 17.0707, -42.8201, 0.66", "98.3541, 16.9417, -43.0727, 0.74", "98.6995, 16.8404, -43.2447, 0.74", "99.4644, 16.6075, -43.5962, 0.37", "99.9266, 16.4738, -43.7839, 0.52", "100.51, 16.3175, -43.9784, 0.29", "101.165, 16.1703, -44.1704, 0.81", "101.455, 16.1118, -44.2465, 1.47", "101.734, 16.0468, -44.3174, 1.62", "102.064, 15.9477, -44.4013, 1.62", "102.964, 15.605, -44.7042, 0.37", "103.513, 15.3419, -44.944, 0.29", "104.076, 15.0021, -45.2414, 0.29", "104.549, 14.6678, -45.5091, 0.29", "105.076, 14.2652, -45.8198, 1.47", "105.459, 13.9568, -46.0676, 1.69", "105.655, 13.7914, -46.2187, 1.84", "106.242, 13.3156, -46.7446, 0.52", "106.646, 13.0622, -47.1109, 0.44", "106.962, 12.9262, -47.3829, 0.81", "107.301, 12.826, -47.6625, 0.81", "107.783, 12.7299, -48.0192, 0.81", "108.51, 12.656, -48.5455, 0.29", "109.101, 12.6589, -48.9847, 0.29", "109.388, 12.6755, -49.1878, 0.52", "109.849, 12.7067, -49.4932, 0.66", "110.404, 12.7348, -49.8336, 0.81", "110.868, 12.7564, -50.0991, 0.96", "111.266, 12.7812, -50.3245, 0.74", "111.861, 12.8258, -50.6673, 0.22", "112.424, 12.8836, -50.9765, 0.22", "113.039, 12.9723, -51.2934, 0.22", "113.3, 13.0194, -51.4131, 0.44", "113.72, 13.1014, -51.5796, 0.44", "114.513, 13.2862, -51.8561, 0.29", "115.19, 13.4673, -52.0684, 1.03", "115.569, 13.5817, -52.1696, 1.25", "116.214, 13.8026, -52.3435, 0.22", "116.429, 13.8768, -52.4058, 0.37", "117.033, 14.0935, -52.5937, 0.22", "117.251, 14.1806, -52.6763, 0.52", "117.624, 14.3412, -52.8371, 0.59", "118.432, 14.6963, -53.2298, 0.22", "118.794, 14.8511, -53.4286, 0.59", "119.104, 14.9832, -53.6232, 0.59", "119.814, 15.2804, -54.1344, 0.29", "120.316, 15.4966, -54.5379, 0.22", "120.585, 15.6124, -54.8002, 0.22", "121.148, 15.8102, -55.465, 0.81", "121.516, 15.9134, -55.9499, 1.18", "121.872, 15.9841, -56.4388, 0.74", "122.211, 16.0142, -56.9324, 0.44", "122.747, 16.0927, -57.7877, 0.74", "123.15, 16.2094, -58.497, 0.52", "123.367, 16.3076, -58.9157, 0.52", "123.582, 16.4366, -59.3459, 0.37", "124.016, 16.7608, -60.2427, 0.37", "124.436, 17.1362, -61.1546, 2.5", "125.109, 17.836, -62.6152, 0.29", "125.257, 18.0172, -62.9709, 0.29", "125.48, 18.3354, -63.6069, 0.74", "125.629, 18.5698, -64.0905, 1.18", "125.807, 18.8521, -64.7051, 1.4", "125.92, 19.0141, -65.1124, 1.4", "126.299, 19.5225, -66.4412, 0.29", "126.572, 19.8426, -67.3542, 0.44", "126.885, 20.1874, -68.3729, 0.22", "127.077, 20.3957, -69.0032, 0.22", "127.249, 20.6025, -69.6296, 0.74", "127.346, 20.7356, -70.0091, 0.88", "127.836, 21.4843, -71.9378, 0.29", "128.016, 21.8125, -72.6616, 0.52", "128.236, 22.3227, -73.6275, 0.81", "128.54, 23.1325, -75.0673, 0.81", "128.636, 23.4411, -75.5888, 0.29", "128.694, 23.7137, -76.0152, 0.37", "128.738, 24.221, -76.6136, 0.22", "128.752, 24.4987, -76.885, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "1.46313, -19.6772, 2.30081, 3.68", "1.02331, -21.564, 2.5209, 3.68", "0.495834, -23.7454, 2.75782, 3.32", "-0.12925, -26.0736, 3.01133, 3.17", "-0.897201, -28.7437, 3.32171, 3.09", "-1.52427, -30.8223, 3.5656, 2.8", "-2.08255, -32.6502, 3.80611, 2.73", "-2.61533, -34.3132, 4.04601, 2.65", "-3.095, -35.7531, 4.2783, 2.65", "-3.57761, -37.1968, 4.52103, 2.65", "-4.0958, -38.7106, 4.81572, 2.65", "-4.74947, -40.6054, 5.23523, 2.5", "-5.01061, -41.394, 5.42947, 2.58", "-5.32834, -42.4534, 5.70994, 2.58", "-5.54507, -43.3788, 5.95839, 2.65" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.307517, 35.8476, -7.84275, 1.4", "0.592161, 36.8434, -7.9088, 1.4", "0.96659, 38.5022, -7.9804, 1.11", "1.24299, 39.9643, -8.02689, 0.88", "1.53253, 41.6463, -7.96422, 0.96", "1.85916, 43.2042, -8.01056, 1.11", "2.2395, 44.6756, -8.11426, 0.88", "2.65898, 46.1394, -8.31329, 0.88", "2.95401, 46.8658, -8.54607, 1.11", "3.88965, 48.3704, -9.37434, 1.11", "5.9396, 50.7572, -11.2603, 1.4", "6.53505, 51.3698, -11.8342, 1.62", "7.22265, 52.0727, -12.5183, 1.11", "8.74741, 53.6775, -13.9785, 0.88", "9.54089, 54.601, -14.6822, 1.47", "10.0735, 55.3066, -15.0962, 1.47", "10.8881, 56.5633, -15.4883, 1.18", "11.6215, 57.7615, -15.7384, 1.33", "12.2285, 58.7902, -15.8562, 1.33", "12.8676, 59.9445, -15.9374, 1.18", "13.6938, 61.5395, -16.0608, 1.03", "14.2265, 62.7058, -16.2061, 0.88", "14.7129, 63.9237, -16.4588, 0.88", "15.0889, 65.1985, -16.8648, 1.03", "15.4825, 67.2277, -17.7456, 1.18", "15.6447, 68.4693, -18.3895, 1.11", "15.8201, 70.1917, -19.3606, 1.25", "15.9495, 71.3435, -20.0332, 1.11", "16.1885, 72.7272, -20.8449, 0.96", "16.52, 73.8699, -21.4525, 0.88", "17.1684, 75.2289, -21.9957, 0.88", "17.8467, 76.296, -22.2602, 0.96", "18.4608, 77.124, -22.3269, 1.03", "19.1487, 78.0213, -22.312, 1.03", "19.952, 79.1166, -22.2275, 0.88", "20.3849, 79.8462, -22.1753, 0.74", "20.922, 81.3194, -22.2009, 1.69", "21.0686, 82.1573, -22.2863, 2.28", "21.126, 83.0126, -22.4129, 2.28", "21.1409, 84.1065, -22.5923, 2.06", "21.147, 85.2724, -22.7859, 1.62", "21.2207, 86.7184, -23.0356, 1.18", "21.3228, 87.5968, -23.1947, 1.4", "21.5053, 88.5615, -23.3776, 1.4", "21.8026, 89.7513, -23.6633, 1.18", "22.0936, 90.8037, -23.9587, 1.03", "22.6353, 92.5776, -24.5453, 0.81", "22.9982, 93.6566, -24.9313, 0.81", "23.3112, 94.5403, -25.2506, 0.81", "23.7274, 95.6941, -25.6488, 0.96", "24.0653, 96.6296, -25.9326, 1.33", "24.5142, 97.8931, -26.2276, 1.11", "24.995, 99.2676, -26.4355, 0.96", "25.31, 100.106, -26.5094, 1.18", "25.7137, 101.128, -26.5571, 1.18", "26.1273, 102.165, -26.5698, 1.33", "26.4492, 102.995, -26.5956, 1.18", "26.6759, 103.626, -26.6231, 1.18", "27.0212, 104.565, -26.6991, 0.88", "27.3912, 105.479, -26.7989, 0.74", "27.8129, 106.445, -26.9188, 0.74", "28.4629, 107.787, -27.1241, 0.88", "29.0302, 108.842, -27.2806, 1.11", "29.5739, 109.808, -27.4475, 1.11", "30.0544, 110.648, -27.5846, 0.96", "30.7021, 111.781, -27.722, 1.18", "31.3694, 112.997, -27.7771, 0.96", "31.8562, 113.99, -27.7331, 0.81", "32.5758, 115.619, -27.5133, 0.88", "33.0452, 116.711, -27.2474, 0.88", "33.4543, 117.709, -26.9026, 1.03", "33.8149, 118.623, -26.5285, 1.11", "34.1491, 119.543, -26.1305, 0.88", "34.5228, 120.58, -25.6947, 0.66", "34.8211, 121.387, -25.3497, 0.66", "35.2147, 122.442, -24.9987, 0.66", "35.897, 124.337, -24.5221, 0.96", "36.2692, 125.527, -24.3343, 1.4", "36.5146, 126.455, -24.2495, 1.55", "36.6604, 127.166, -24.1986, 1.84", "36.8582, 128.238, -24.1027, 1.92", "37.0435, 129.134, -23.9771, 1.77", "37.3674, 130.514, -23.679, 1.25", "37.6959, 131.703, -23.3157, 1.18", "38.0597, 132.81, -22.9035, 1.11", "38.4649, 133.885, -22.4272, 1.25", "38.9415, 135.001, -21.8589, 1.33", "39.2252, 135.591, -21.5489, 1.33", "39.7333, 136.553, -21.0412, 1.25", "40.2051, 137.438, -20.6518, 0.74", "40.7603, 138.509, -20.3226, 0.52", "41.1651, 139.349, -20.1779, 0.52", "41.6128, 140.334, -20.0715, 0.81", "42.2154, 141.718, -20.0163, 1.4", "42.7235, 142.91, -20.0739, 1.69", "43.0803, 143.766, -20.1729, 1.84", "43.4011, 144.488, -20.3458, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.307517, 35.8476, -7.84275, 1.4", "-1.18326, 36.646, -7.85564, 1.4", "-2.34095, 37.206, -7.81744, 0.96", "-3.36816, 37.7333, -7.79265, 1.25", "-4.23349, 38.2316, -7.78968, 1.4", "-4.8977, 38.6579, -7.80059, 1.47", "-6.84174, 40.0369, -7.87336, 1.03", "-7.81499, 40.7723, -7.90375, 1.11", "-8.90465, 41.7575, -7.95583, 1.11", "-9.89872, 42.8362, -8.03871, 1.03", "-10.6316, 43.724, -8.15539, 1.03", "-11.54, 44.9136, -8.4118, 1.03", "-12.1306, 45.693, -8.67604, 1.18", "-13.0839, 46.7882, -9.17558, 1.18", "-14.3521, 47.8877, -9.95797, 0.81", "-15.1828, 48.3639, -10.5288, 0.88", "-16.1138, 48.6961, -11.213, 1.11", "-17.2472, 48.956, -12.0671, 0.96", "-17.9969, 49.0858, -12.6288, 0.96", "-19.0759, 49.2593, -13.4159, 0.88", "-20.0473, 49.4763, -14.0852, 0.81", "-21.3567, 49.9308, -14.8731, 1.11", "-21.9763, 50.2137, -15.2102, 1.25", "-22.5897, 50.5594, -15.535, 1.25", "-23.4853, 51.1232, -15.9849, 0.88", "-24.3196, 51.689, -16.3781, 0.88", "-25.1145, 52.2477, -16.7157, 0.96", "-26.0635, 52.9231, -17.0635, 0.96", "-26.8251, 53.4577, -17.3181, 1.03", "-27.6555, 54.0272, -17.57, 1.25", "-28.5346, 54.6108, -17.7961, 1.25", "-29.1128, 54.9891, -17.9281, 1.11", "-29.8311, 55.4455, -18.0622, 1.25", "-30.5371, 55.8853, -18.1487, 1.4", "-31.2431, 56.325, -18.2085, 1.4", "-32.1247, 56.8768, -18.2624, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.54828, 42.8383, -2.3154, 0.72508", "-3.39577, 57.8143, -2.3154, 0.72508", "-4.24326, 72.7904, -2.3154, 0.72508" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-44.633, 37.6804, 39.4175, 0.88", "-45.3346, 38.6161, 46.4486, 0.88", "-46.527, 38.5941, 53.482, 0.88", "-47.2636, 39.5105, 60.5121, 0.88", "-48.2156, 39.8134, 67.5726, 0.88", "-49.7995, 40.0071, 74.5224, 0.88", "-52.5908, 39.5743, 81.0739, 0.88", "-54.5163, 38.6709, 87.8959, 0.88", "-55.2411, 38.605, 94.9943, 0.88", "-57.0282, 38.6395, 101.899, 0.88", "-57.8648, 39.2144, 108.955, 0.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-44.633, 37.6804, 39.4175, 0.22", "-54.3501, 44.7411, 40.1619, 0.88", "-65.2362, 49.64, 39.9108, 0.88", "-75.3951, 55.7671, 41.6725, 0.88", "-84.3541, 63.5983, 43.7741, 0.88", "-93.0923, 71.5882, 46.242, 0.88", "-103.508, 77.5017, 46.505, 0.88", "-114.399, 82.3417, 45.8298, 0.88", "-124.535, 88.7653, 45.7329, 0.88", "-133.876, 96.3978, 45.7345, 0.88", "-142.156, 105.271, 46.0395, 0.88", "-150.52, 113.859, 47.8837, 0.88", "-159.758, 121.136, 50.5292, 0.88", "-167.986, 128.418, 55.5198, 0.88", "-177.076, 133.213, 61.6317, 0.88", "-186.449, 135.667, 68.5323, 0.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-27.6826, 219.004, 12.4141, 0.66", "-28.7952, 221.26, 10.5368, 0.66", "-29.1516, 221.922, 9.95396, 0.66", "-29.4984, 222.527, 9.41844, 0.74", "-29.8349, 223.084, 8.92975, 0.88", "-30.1132, 223.522, 8.56216, 0.88", "-30.5408, 224.172, 8.05054, 0.74", "-30.9492, 224.736, 7.6961, 0.52", "-31.2924, 225.239, 7.37619, 0.96", "-31.6048, 225.711, 7.08429, 0.96", "-32.1305, 226.488, 6.61956, 0.37", "-32.5897, 227.143, 6.24427, 0.37", "-33.1211, 227.852, 5.86181, 0.66", "-33.5233, 228.364, 5.59584, 0.81", "-34.0121, 228.968, 5.28875, 0.81", "-34.4294, 229.475, 5.0443, 0.66", "-34.8537, 229.966, 4.79336, 0.66", "-35.1914, 230.328, 4.59587, 0.66", "-35.5859, 230.727, 4.38133, 0.37", "-35.9181, 231.092, 4.19871, 0.37", "-36.4784, 231.798, 3.87082, 0.74", "-36.798, 232.241, 3.70633, 0.74", "-37.2925, 232.967, 3.48141, 0.29", "-37.6855, 233.561, 3.31067, 0.29", "-38.1302, 234.258, 3.10686, 0.66", "-38.291, 234.52, 3.02505, 0.66", "-38.6911, 235.235, 2.8008, 0.52", "-38.8907, 235.62, 2.68423, 0.37", "-39.0759, 235.981, 2.56042, 0.37", "-39.3675, 236.483, 2.35225, 0.59", "-39.6615, 236.948, 2.12937, 1.11", "-40.0081, 237.521, 1.86361, 1.18", "-40.2693, 237.989, 1.65378, 0.96", "-40.7151, 238.817, 1.33613, 0.74", "-41.078, 239.499, 1.11846, 0.66", "-41.4061, 240.105, 0.960443, 0.37", "-41.789, 240.824, 0.809592, 0.37", "-42.0457, 241.35, 0.733717, 0.52", "-42.2979, 241.959, 0.6471, 0.52", "-42.6403, 242.916, 0.543613, 0.66", "-42.8734, 243.615, 0.496547, 0.81", "-43.1297, 244.341, 0.479026, 0.81", "-43.5989, 245.514, 0.486449, 0.59", "-43.9434, 246.309, 0.527659, 0.52", "-44.2136, 246.927, 0.597058, 0.52", "-44.5839, 247.814, 0.759257, 0.44", "-44.827, 248.431, 0.890278, 0.44", "-45.0458, 249.006, 1.02279, 0.44", "-45.2292, 249.461, 1.10669, 0.44", "-45.407, 249.877, 1.13706, 0.44", "-45.6179, 250.39, 1.0652, 0.44", "-45.8015, 250.917, 0.887196, 0.59", "-45.9477, 251.5, 0.594526, 0.66", "-46.0645, 252.19, 0.223075, 0.52", "-46.1573, 253.037, -0.223432, 0.52", "-46.2031, 253.754, -0.579137, 0.52", "-46.201, 254.684, -1.01377, 0.59", "-46.1514, 255.728, -1.45738, 0.59", "-46.0816, 256.578, -1.79705, 0.52", "-46.0063, 257.406, -2.09975, 0.52", "-45.9674, 257.918, -2.28627, 0.52", "-45.998, 258.745, -2.5815, 0.44", "-46.1153, 259.257, -2.72735, 0.44", "-46.299, 259.738, -2.84823, 0.44", "-46.6902, 260.518, -3.06691, 0.44", "-47.1077, 261.222, -3.26496, 0.44", "-47.5666, 261.962, -3.44946, 0.44", "-47.9996, 262.71, -3.588, 0.52", "-48.2915, 263.344, -3.6672, 0.66", "-48.5114, 263.994, -3.73193, 0.37", "-48.6551, 264.666, -3.777, 0.29", "-48.7485, 265.54, -3.81236, 0.44", "-48.7538, 266.382, -3.82158, 0.74", "-48.69, 267.159, -3.80094, 1.03", "-48.5651, 267.751, -3.77669, 1.03", "-48.3643, 268.386, -3.80014, 0.88", "-48.0408, 269.279, -3.91059, 0.52", "-47.7865, 270.009, -4.08304, 0.52", "-47.6501, 270.397, -4.2508, 0.37", "-47.2546, 271.481, -4.84762, 0.37", "-46.7721, 272.617, -5.58642, 0.37", "-46.5109, 273.123, -5.94877, 0.37", "-46.2198, 273.67, -6.3518, 0.37", "-45.6456, 274.871, -7.19732, 0.37", "-45.4319, 275.419, -7.54916, 0.29", "-45.1917, 276.232, -8.0101, 0.29", "-44.9745, 277.032, -8.42837, 0.29", "-44.7961, 277.844, -8.84659, 0.37", "-44.6982, 278.44, -9.17119, 0.37", "-44.631, 279.202, -9.62808, 0.37", "-44.5367, 280.051, -10.2122, 0.44", "-44.4624, 280.516, -10.5565, 0.59", "-44.3036, 281.088, -11.0339, 0.59", "-43.9033, 282.146, -11.9702, 0.74", "-43.5817, 282.936, -12.6648, 0.88", "-43.1942, 283.891, -13.5047, 0.81", "-42.883, 284.721, -14.2438, 1.03", "-42.2904, 286.474, -15.8506, 0.74", "-42.0585, 287.411, -16.7084, 0.66", "-41.9697, 287.889, -17.1912, 0.74", "-41.8977, 288.528, -17.901, 0.74", "-41.8821, 289.036, -18.5644, 0.59", "-41.9061, 289.54, -19.3566, 0.44", "-42.0147, 290.188, -20.7198, 0.29", "-42.2179, 291.086, -23.1471, 0.74", "-42.2588, 291.268, -23.7311, 1.25", "-42.3459, 291.657, -25.1043, 1.77", "-42.4192, 291.956, -26.1817, 1.92", "-42.532, 292.322, -27.5772, 0.74", "-42.6243, 292.531, -28.4341, 0.52", "-42.8484, 292.835, -29.6353, 0.52", "-43.0299, 293.027, -30.5025, 0.66", "-43.3013, 293.241, -31.503, 0.52", "-43.7165, 293.527, -32.7382, 0.52", "-44.1249, 293.809, -33.7951, 0.52", "-44.5806, 294.138, -34.9482, 0.66", "-44.9143, 294.398, -35.7358, 0.66", "-45.1564, 294.668, -36.4204, 0.81", "-45.3483, 294.989, -37.0961, 0.59", "-45.414, 295.266, -37.7416, 0.59", "-45.3743, 295.938, -39.5778, 0.81", "-45.2447, 296.261, -40.7285, 0.74", "-44.7889, 296.651, -42.9806, 0.88", "-44.3243, 296.701, -44.5709, 1.11", "-42.9974, 296.326, -48.1493, 0.74", "-42.6514, 296.11, -48.8581, 0.88", "-42.0178, 295.46, -49.715, 0.96", "-41.4278, 294.638, -50.1736, 0.74", "-40.5566, 293.032, -50.3698, 0.66", "-39.2588, 290.333, -50.2089, 0.29", "-38.824, 289.183, -49.8812, 0.29", "-38.3614, 287.848, -49.3902, 0.29", "-38.1122, 287.01, -48.9971, 0.66", "-37.9893, 286.48, -48.6939, 0.74" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-27.6826, 219.004, 12.4141, 0.29", "-28.161, 219.798, 12.721, 0.29", "-28.4137, 220.235, 12.878, 0.37", "-28.7024, 220.728, 13.0661, 0.52", "-28.8984, 221.045, 13.1847, 0.66", "-29.2597, 221.573, 13.3743, 0.81", "-29.65, 222.101, 13.55, 1.03", "-30.0035, 222.548, 13.6934, 0.74", "-30.6555, 223.323, 13.8965, 0.29", "-30.9477, 223.651, 13.9595, 0.29", "-31.325, 224.069, 14.0313, 0.37", "-31.7165, 224.52, 14.0948, 0.37", "-32.2039, 225.13, 14.1852, 0.44", "-32.4161, 225.459, 14.2321, 0.66", "-32.6581, 225.955, 14.2911, 0.81", "-32.8763, 226.487, 14.3557, 0.81", "-33.0689, 226.958, 14.4074, 0.52", "-33.3027, 227.531, 14.4616, 0.52", "-33.5601, 228.227, 14.5186, 0.52", "-33.8003, 228.969, 14.5717, 0.44", "-33.9983, 229.701, 14.6012, 0.37", "-34.2235, 230.625, 14.6133, 0.29", "-34.3894, 231.345, 14.6166, 0.44", "-34.5504, 232.122, 14.6091, 0.52", "-34.6601, 232.737, 14.5944, 0.37", "-34.7517, 233.355, 14.5761, 0.37", "-34.8253, 233.865, 14.5603, 0.59", "-34.8821, 234.359, 14.5483, 0.59", "-34.9609, 234.919, 14.5323, 0.59", "-35.0892, 235.654, 14.5044, 0.37", "-35.2577, 236.544, 14.4683, 0.29", "-35.3728, 237.345, 14.4524, 0.29", "-35.4393, 238.154, 14.445, 0.29", "-35.4433, 238.556, 14.4416, 0.29", "-35.4129, 239.151, 14.4359, 0.44", "-35.3678, 239.575, 14.4268, 0.44", "-35.2625, 240.373, 14.3846, 0.59", "-35.207, 240.811, 14.3397, 0.74", "-35.1534, 241.295, 14.2708, 0.74", "-35.0864, 241.738, 14.2019, 0.59", "-34.9281, 242.522, 14.0849, 0.88", "-34.7933, 243.143, 13.9992, 1.18", "-34.6413, 243.969, 13.886, 0.37", "-34.5965, 244.291, 13.8405, 0.37", "-34.5152, 245.014, 13.7384, 0.37", "-34.4038, 245.809, 13.6297, 0.29", "-34.2616, 246.538, 13.5295, 0.37", "-34.0786, 247.251, 13.4413, 0.29", "-33.8375, 247.979, 13.3277, 0.29", "-33.7326, 248.225, 13.2688, 0.29", "-33.3539, 248.873, 13.051, 0.59", "-33.0008, 249.313, 12.8804, 0.74", "-32.7068, 249.611, 12.7558, 0.74", "-32.1883, 250.073, 12.5597, 0.66", "-31.5666, 250.573, 12.3343, 0.44", "-31.162, 250.896, 12.196, 0.44", "-30.5439, 251.358, 12.0047, 0.88", "-30.2668, 251.534, 11.9355, 1.33", "-29.9193, 251.724, 11.8413, 1.69", "-29.3168, 252.028, 11.6789, 1.84", "-28.344, 252.543, 11.4068, 0.29", "-27.7736, 252.907, 11.2308, 0.29", "-27.2117, 253.36, 11.0384, 0.29", "-26.3459, 254.215, 10.7471, 0.59", "-26.005, 254.633, 10.6233, 0.59", "-25.5269, 255.393, 10.4207, 0.44", "-25.1032, 256.326, 10.1842, 0.59", "-24.9042, 256.913, 10.0596, 0.44", "-24.7658, 257.411, 9.98421, 0.29", "-24.5879, 258.058, 9.91848, 0.29", "-24.4842, 258.42, 9.85754, 0.29", "-24.3159, 259.032, 9.74624, 0.52", "-24.2047, 259.422, 9.66633, 0.52", "-24.0682, 259.924, 9.56989, 0.37", "-23.8581, 260.717, 9.429, 0.44", "-23.6243, 261.476, 9.30667, 0.44", "-23.3674, 262.127, 9.20366, 0.74", "-23.0335, 262.863, 9.09592, 0.81", "-22.5612, 263.941, 8.96627, 0.29", "-22.4413, 264.26, 8.93631, 0.29", "-22.2986, 264.695, 8.90026, 0.29", "-22.1108, 265.24, 8.85595, 0.29", "-21.8584, 265.909, 8.77398, 0.37", "-21.5941, 266.529, 8.71234, 0.44", "-21.2408, 267.139, 8.63536, 0.44", "-20.8129, 267.76, 8.52638, 0.44", "-20.456, 268.275, 8.45416, 0.44", "-20.2356, 268.598, 8.41905, 0.66", "-19.9855, 268.939, 8.38408, 0.66", "-19.5879, 269.456, 8.3058, 0.44", "-19.1531, 269.985, 8.02908, 0.29", "-18.7973, 270.467, 7.49266, 0.29", "-18.5918, 270.826, 7.02101, 0.44", "-18.4332, 271.176, 6.52097, 0.59", "-18.2617, 271.588, 5.93959, 0.74", "-17.7891, 272.708, 4.36005, 0.74", "-17.3104, 273.652, 2.9704, 0.37", "-17.0619, 274.091, 2.27809, 0.29", "-16.7943, 274.52, 1.56571, 0.59", "-16.5153, 274.96, 0.842054, 0.52", "-16.3287, 275.29, 0.371284, 0.52", "-16.0245, 275.941, -0.251642, 0.59" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-5.54507, -43.3788, 5.95839, 0.52", "-7.90187, -44.5287, 7.30107, 0.52", "-8.38506, -44.8406, 7.60008, 0.44", "-8.80089, -45.1691, 7.88058, 0.66", "-9.35057, -45.6804, 8.27429, 0.74", "-10.2349, -46.6542, 8.92724, 0.66", "-10.5885, -47.1176, 9.20272, 0.81", "-11.0774, -48.1468, 9.59174, 0.74", "-11.224, -48.655, 9.7338, 0.88", "-11.3764, -49.6558, 10.1027, 0.66", "-11.4476, -50.5337, 10.516, 0.66", "-11.4879, -51.2301, 10.9317, 0.81", "-11.6114, -52.0707, 11.5595, 0.81", "-11.8616, -52.976, 12.3555, 0.88", "-12.7218, -55.3381, 14.5749, 0.96", "-13.0209, -56.0437, 15.2565, 0.74", "-13.2726, -56.5887, 15.7591, 0.59", "-13.7302, -57.5754, 16.537, 0.59", "-14.1205, -58.4533, 17.1074, 0.59", "-14.5252, -59.5031, 17.5795, 0.96", "-14.8014, -60.3578, 17.7671, 1.11", "-15.1227, -61.4101, 17.971, 0.88", "-15.4584, -62.4844, 18.1978, 0.66", "-15.5941, -62.8313, 18.2863, 0.74", "-16.2113, -63.8162, 18.6718, 0.66", "-16.7133, -64.3933, 19.0032, 0.74", "-17.3118, -64.9801, 19.4763, 0.81", "-17.8307, -65.44, 19.9646, 0.88", "-18.4481, -66.0637, 20.7007, 0.66", "-18.8165, -66.5523, 21.2247, 0.66", "-19.2252, -67.2487, 21.8672, 0.59", "-19.5838, -68.0649, 22.4834, 0.66", "-19.7648, -68.5145, 22.7533, 0.81", "-20.2005, -69.5679, 23.2662, 0.59", "-20.5592, -70.4598, 23.6611, 0.74", "-20.9024, -71.2901, 24.0041, 0.88", "-21.1089, -71.7826, 24.1873, 0.88", "-21.4644, -72.7349, 24.6075, 0.66", "-21.6969, -73.4714, 25.052, 0.52", "-21.9609, -74.4922, 25.9939, 0.59", "-22.0581, -74.9637, 26.5736, 0.59", "-22.139, -75.4215, 27.2057, 0.66", "-22.3559, -76.7222, 29.081, 0.66", "-22.4519, -77.3572, 30.0013, 0.96", "-22.6622, -78.2301, 31.247, 1.03", "-22.9191, -78.8739, 32.099, 0.88", "-23.1747, -79.3713, 32.6648, 0.59", "-23.4247, -79.7747, 33.0212, 0.74", "-23.8727, -80.4163, 33.3456, 0.59", "-24.3965, -81.1003, 33.5466, 0.74", "-25.0052, -81.8373, 33.6349, 0.88", "-25.5754, -82.4979, 33.6554, 0.88", "-26.1916, -83.1788, 33.6724, 0.59", "-26.7883, -83.8131, 33.7075, 0.37", "-27.0259, -84.0524, 33.7356, 0.37", "-27.508, -84.5362, 33.8736, 0.44", "-28.0279, -85.05, 34.0883, 0.59", "-28.5232, -85.526, 34.3612, 0.59", "-29.1183, -86.0976, 34.7369, 0.74", "-29.6816, -86.6044, 35.1037, 0.66", "-30.7495, -87.5165, 35.7614, 0.66", "-31.3908, -88.049, 36.1302, 0.59", "-32.3285, -88.865, 36.6379, 0.81", "-32.8638, -89.36, 36.9144, 0.96", "-33.5513, -90.0112, 37.2477, 0.74", "-34.3062, -90.7295, 37.5778, 0.52", "-35.6003, -92.0095, 38.1, 0.59", "-36.2931, -92.7472, 38.3732, 0.66", "-36.7428, -93.2648, 38.5334, 0.66", "-37.3929, -94.0552, 38.7481, 0.44", "-37.8612, -94.6569, 38.9029, 0.44", "-38.4837, -95.4561, 39.1086, 0.37", "-39.2282, -96.4221, 39.3167, 0.29", "-39.5495, -96.8502, 39.398, 0.29", "-40.2249, -97.925, 39.5467, 0.29", "-44.7486, -105.727, 46.7673, 0.29", "-48.6059, -113.716, 54.1876, 0.29", "-53.8703, -121.661, 60.7293, 0.29", "-58.2488, -130.634, 66.6941, 0.29", "-64.5907, -139.174, 71.3083, 0.29", "-72.0707, -146.762, 75.7209, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-5.54507, -43.3788, 5.95839, 2.21", "-5.31528, -44.5106, 5.95293, 2.21", "-5.18287, -45.2246, 5.94161, 2.21", "-4.97879, -46.3249, 5.92417, 2.21", "-4.81123, -47.2284, 5.90985, 2.28", "-4.67801, -47.9467, 5.89847, 2.28", "-4.48609, -48.9815, 5.88207, 2.5", "-4.34732, -49.6879, 5.8135, 2.58" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "43.4011, 144.488, -20.3458, 1.25", "44.2257, 145.198, -20.5708, 1.25", "45.9228, 146.406, -20.8914, 0.81", "46.9597, 147.06, -21.0397, 0.96", "47.938, 147.598, -21.0516, 0.74", "49.5443, 148.411, -20.9548, 0.59", "51.0116, 149.125, -20.8086, 0.52", "51.6435, 149.385, -20.7041, 0.66", "52.5734, 149.726, -20.5036, 0.44", "54.6004, 150.451, -20.0681, 0.66", "55.5297, 150.816, -19.9058, 0.52", "56.4059, 151.233, -19.8294, 0.52", "57.6126, 151.897, -19.8002, 0.88", "58.6632, 152.54, -19.8661, 1.25", "59.086, 152.828, -19.9305, 1.62", "60.3599, 153.769, -20.248, 1.62", "61.4093, 154.557, -20.5274, 1.33", "62.6679, 155.469, -20.8354, 0.88", "63.6174, 156.17, -21.0658, 0.74", "64.3344, 156.692, -21.2246, 0.59", "64.8889, 157.084, -21.3343, 0.59", "66.1488, 157.907, -21.5058, 1.18", "67.278, 158.596, -21.6587, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "43.4011, 144.488, -20.3458, 0.37", "43.4357, 145.531, -16.8576, 0.37", "43.3611, 145.895, -15.9372, 0.37", "43.2681, 146.109, -15.5313, 0.37", "43.0922, 146.428, -15.0557, 0.66", "42.9236, 146.731, -14.6916, 0.66", "42.6919, 147.197, -14.2069, 0.66", "42.4244, 147.726, -13.9473, 0.52", "42.1629, 148.349, -13.6625, 0.52", "42.0387, 148.751, -13.473, 0.52", "41.9786, 149.443, -13.0927, 0.66", "42.0559, 149.892, -12.806, 1.18", "42.1677, 150.196, -12.5742, 1.18", "42.3918, 150.679, -12.1793, 0.66", "42.5961, 151.113, -11.8313, 0.52", "42.8845, 151.8, -11.3187, 0.52", "43.0465, 152.281, -10.9873, 1.11", "43.2083, 153.018, -10.533, 0.96", "43.2658, 153.555, -10.2365, 0.88", "43.2686, 154.3, -9.87432, 0.37", "43.1903, 155.31, -9.44812, 0.29", "43.1147, 155.841, -9.2444, 0.29", "42.9623, 156.552, -8.97798, 0.59", "42.7605, 157.299, -8.71747, 0.74", "42.5504, 157.927, -8.50801, 0.88", "42.3521, 158.442, -8.34177, 1.03", "42.0618, 159.122, -8.13542, 1.11", "41.8064, 159.711, -7.98294, 0.88", "41.5901, 160.216, -7.87572, 0.52", "41.2843, 160.93, -7.74096, 0.88", "41.1417, 161.261, -7.68224, 0.74", "40.8778, 161.88, -7.58196, 0.52", "40.5926, 162.54, -7.46423, 0.52", "40.3147, 163.172, -7.32091, 0.74", "40.0505, 163.741, -7.17227, 0.88", "39.8127, 164.23, -7.04818, 0.88", "39.5595, 164.721, -6.94214, 1.03", "39.2457, 165.302, -6.86267, 0.81", "38.8842, 165.929, -6.80391, 0.59", "38.6519, 166.305, -6.77738, 0.52", "38.2762, 166.899, -6.72337, 0.52", "38.0645, 167.253, -6.67197, 0.52", "37.7465, 167.857, -6.55616, 0.52", "37.3668, 168.716, -6.38004, 0.52", "37.1002, 169.41, -6.21096, 0.88", "36.8412, 170.151, -5.99521, 0.88", "36.6021, 170.874, -5.75227, 0.74", "36.4166, 171.396, -5.58097, 0.37", "36.1996, 171.957, -5.41145, 0.37", "35.9383, 172.506, -5.29603, 0.52", "35.7006, 172.878, -5.24306, 0.52", "35.5138, 173.103, -5.21693, 0.37", "34.9339, 173.696, -5.1246, 0.52", "34.6893, 173.936, -5.08161, 0.74", "34.188, 174.469, -4.98249, 0.74", "33.8101, 174.956, -4.901, 0.59", "33.5017, 175.448, -4.83184, 0.74", "33.1882, 176.047, -4.74652, 0.88", "32.9397, 176.564, -4.66758, 0.88", "32.632, 177.172, -4.58705, 0.88", "32.2293, 177.866, -4.50922, 0.66", "31.9359, 178.249, -4.46633, 0.66", "31.4842, 178.696, -4.41332, 0.52", "30.8798, 179.129, -4.33551, 0.37", "30.4008, 179.364, -4.21132, 0.29", "29.7799, 179.603, -3.97401, 0.29", "29.189, 179.812, -3.70607, 0.66", "28.934, 179.91, -3.57938, 1.03", "28.4023, 180.16, -3.29306, 1.18", "27.1918, 180.874, -2.53873, 0.59", "26.605, 181.328, -2.12748, 0.44", "26.2169, 181.724, -1.82734, 0.52", "25.9269, 182.101, -1.56054, 0.52", "25.6111, 182.584, -1.23639, 0.52", "25.3204, 183.112, -0.912505, 0.59", "25.0579, 183.7, -0.588957, 0.37", "24.8542, 184.195, -0.304831, 0.37", "24.516, 185.091, 0.217101, 0.66", "24.3581, 185.515, 0.451035, 0.74", "24.1589, 185.98, 0.670697, 0.59", "23.9033, 186.479, 0.849488, 0.52", "23.5732, 187.001, 0.987296, 0.44", "23.1059, 187.655, 1.07652, 0.44", "22.7563, 188.134, 1.08794, 0.59", "22.2319, 188.871, 1.07569, 0.59", "21.8887, 189.365, 1.07176, 0.74", "21.5614, 189.835, 1.09652, 0.74", "21.2912, 190.24, 1.19492, 0.74", "20.8561, 190.903, 1.56205, 0.52", "20.6345, 191.261, 1.83802, 0.66", "20.396, 191.641, 2.22349, 0.81", "20.0146, 192.174, 2.85971, 1.03", "19.4711, 192.761, 3.66743, 0.74", "18.9401, 193.256, 4.37457, 0.44", "18.6423, 193.508, 4.70703, 0.29", "18.0331, 193.971, 5.28388, 0.59", "17.6885, 194.201, 5.57033, 0.96", "16.7476, 194.815, 6.29439, 0.29", "16.2771, 195.126, 6.65863, 0.29", "15.6938, 195.547, 7.10801, 0.96", "15.13, 195.971, 7.5299, 1.18", "14.2199, 196.727, 8.19455, 0.96", "13.8313, 197.032, 8.51986, 0.59", "13.4856, 197.281, 8.83007, 0.29", "13.0437, 197.561, 9.25876, 0.29", "12.8201, 197.704, 9.5021, 0.29", "12.2864, 198.128, 10.1619, 0.44", "11.4006, 199.011, 11.4319, 0.44", "11.2056, 199.251, 11.7761, 0.59", "10.9994, 199.622, 12.3284, 0.59", "10.9165, 199.963, 12.8522, 0.52", "11.0016, 200.38, 13.4508, 0.29", "11.304, 200.756, 13.9338, 0.29", "11.709, 201.099, 14.3729, 0.29", "12.2646, 201.487, 14.9071, 0.44", "12.7451, 201.807, 15.3918, 0.44", "13.1076, 202.048, 15.8299, 0.29", "13.4885, 202.321, 16.3711, 0.29", "14.0452, 202.829, 17.3149, 0.59", "14.3815, 203.234, 17.9671, 0.74", "14.8593, 203.993, 18.9542, 0.52", "15.3341, 204.956, 20.027, 0.22", "15.4194, 205.166, 20.2273, 0.29", "15.6477, 205.872, 20.7464, 0.29", "15.8169, 206.485, 21.0633, 0.29", "16.0317, 207.291, 21.3654, 0.37", "16.2915, 207.964, 21.4282, 0.37", "16.5238, 208.416, 21.3941, 0.22", "17.2434, 209.315, 21.1997, 0.22", "17.6836, 209.725, 21.0718, 0.37", "18.2198, 210.149, 20.915, 0.15", "20.1717, 211.56, 20.2911, 0.15", "20.8025, 211.967, 20.0799, 0.15", "22.706, 213.039, 19.4523, 0.15", "23.6451, 213.483, 19.1502, 0.15", "24.5527, 213.875, 18.8614, 0.22", "21.7467, 220.385, 23.3286, 0.22", "19.3725, 227.013, 27.8846, 0.22", "18.3421, 233.001, 33.5908, 0.22", "17.9371, 238.17, 40.0497, 0.22", "16.9051, 243.327, 46.4502, 0.22", "17.6828, 249.135, 52.3546, 0.22", "18.9397, 255.736, 57.35, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-32.1247, 56.8768, -18.2624, 0.52", "-33.2202, 57.281, -18.0858, 0.52", "-33.908, 57.5143, -18.0002, 0.52", "-34.5343, 57.7066, -17.9738, 0.74", "-35.3039, 57.9458, -17.9764, 0.96", "-36.0821, 58.2346, -17.9862, 1.18", "-36.7129, 58.5162, -17.996, 1.18", "-37.3207, 58.8341, -18.018, 0.88", "-38.2932, 59.5214, -18.002, 0.37", "-38.5951, 59.8254, -17.9779, 0.37", "-39.1949, 60.6258, -17.8828, 0.52", "-39.5708, 61.1988, -17.7801, 0.81", "-39.9812, 61.835, -17.6202, 0.96", "-40.4781, 62.5216, -17.3781, 0.52", "-40.937, 63.0122, -17.1334, 0.59", "-41.3251, 63.2662, -16.9591, 0.74", "-42.1948, 63.5896, -16.6641, 1.11", "-42.8263, 63.7393, -16.4939, 1.18", "-43.6857, 63.8846, -16.3079, 1.18", "-44.5202, 64.0018, -16.1708, 0.74", "-45.4052, 64.1364, -16.0739, 0.59", "-46.2493, 64.297, -16.0271, 0.52", "-46.8061, 64.4363, -16.0446, 0.52", "-47.3782, 64.616, -16.1299, 0.52", "-47.9764, 64.8502, -16.3013, 0.74", "-48.6159, 65.1297, -16.4901, 0.74", "-48.9335, 65.2828, -16.59, 0.81", "-49.3768, 65.5078, -16.6995, 0.81", "-50.3186, 66.015, -16.8342, 0.66", "-50.8267, 66.3262, -16.8178, 0.52", "-52.116, 67.2285, -16.5115, 0.74", "-52.5938, 67.6093, -16.3308, 0.66", "-53.2814, 68.209, -16.0139, 0.59", "-53.7079, 68.5913, -15.8097, 0.66", "-54.4539, 69.2747, -15.4689, 0.52", "-54.8384, 69.6236, -15.3649, 0.66", "-55.2914, 70.004, -15.3199, 0.88", "-55.8769, 70.4261, -15.3047, 0.88", "-56.4664, 70.7745, -15.2735, 0.66", "-56.9266, 71.0004, -15.1839, 0.59", "-57.5491, 71.2912, -14.9604, 0.74", "-58.178, 71.6065, -14.6414, 0.52", "-58.7825, 71.9267, -14.2637, 0.52", "-60.1861, 72.7278, -13.2703, 0.66", "-61.1871, 73.3357, -12.5122, 0.74", "-61.744, 73.6674, -12.0812, 0.44", "-62.2075, 73.9258, -11.7423, 0.44", "-62.5867, 74.1127, -11.5245, 0.59", "-62.9975, 74.276, -11.3676, 0.66", "-63.5956, 74.4863, -11.2643, 0.66", "-64.489, 74.7752, -11.1299, 0.52", "-65.1336, 74.9765, -10.9735, 0.52", "-65.7189, 75.1964, -10.7631, 0.44", "-66.7651, 75.6859, -10.2609, 0.59", "-67.2285, 75.9348, -10.0278, 0.74", "-67.7426, 76.2392, -9.76291, 0.88", "-68.3944, 76.6315, -9.43849, 0.88", "-69.0189, 76.9452, -9.113, 0.44", "-69.5886, 77.1811, -8.82725, 0.44", "-70.472, 77.4493, -8.42583, 0.59", "-71.118, 77.6246, -8.16655, 0.52", "-72.158, 77.8845, -7.78313, 0.66", "-73.088, 78.1108, -7.45678, 0.74", "-73.8511, 78.3065, -7.1785, 0.74", "-74.3169, 78.4565, -7.00197, 0.74", "-75.0594, 78.7618, -6.70928, 0.52", "-75.3257, 78.9081, -6.62475, 0.52", "-75.6925, 79.174, -6.53884, 0.66", "-76.1675, 79.5706, -6.43821, 0.66", "-76.6606, 79.987, -6.34081, 0.81", "-77.1989, 80.4438, -6.2421, 0.81", "-77.6816, 80.8303, -6.15252, 0.59", "-78.2056, 81.2372, -6.06756, 0.52", "-78.9489, 81.7841, -5.96041, 0.59", "-79.4689, 82.1315, -5.88161, 0.66", "-79.907, 82.3817, -5.81889, 0.66", "-80.6842, 82.7227, -5.71877, 0.59", "-81.1916, 82.8902, -5.64197, 0.59", "-81.6995, 83.0217, -5.56193, 0.59", "-82.447, 83.1998, -5.45968, 0.52", "-83.0592, 83.3617, -5.37353, 0.66", "-83.6081, 83.5399, -5.31256, 0.66", "-84.3142, 83.8271, -5.28031, 0.52", "-84.8192, 84.0805, -5.29524, 0.66", "-85.5708, 84.5406, -5.37338, 0.81", "-86.1857, 84.983, -5.46403, 0.81", "-87.0771, 85.7278, -5.59684, 0.52", "-87.6371, 86.2535, -5.66593, 0.59", "-88.0435, 86.659, -5.70869, 0.59", "-88.5509, 87.1786, -5.73932, 0.37", "-89.2888, 87.9132, -5.73442, 0.52", "-89.8832, 88.4531, -5.69903, 0.59", "-90.6297, 89.0529, -5.62346, 0.22", "-90.974, 89.2799, -5.58028, 0.37", "-91.4373, 89.5399, -5.54742, 0.37", "-92.0282, 89.824, -5.5607, 0.37", "-92.7121, 90.1302, -5.62705, 0.66", "-93.251, 90.3693, -5.63487, 0.88", "-93.7052, 90.5742, -5.58391, 0.59", "-94.8095, 91.0976, -5.30722, 0.29", "-95.6154, 91.5507, -4.97079, 0.29", "-96.2427, 91.9778, -4.62157, 0.29", "-97.5351, 93.0263, -3.66481, 0.88", "-98.1935, 93.5758, -3.02948, 0.88", "-98.5678, 93.9093, -2.5916, 0.66", "-99.0711, 94.3814, -1.82077, 0.52", "-99.3043, 94.6286, -1.37387, 0.29", "-99.4808, 94.8199, -1.00125, 0.29", "-100.32, 95.8527, 0.356511, 0.74", "-108.571, 100.004, 3.91345, 0.74", "-116.888, 103.313, 8.0507, 0.74", "-124.911, 106.738, 12.6578, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-32.1247, 56.8768, -18.2624, 0.74", "-32.56, 57.0781, -18.6509, 0.74", "-32.8989, 57.2835, -18.9375, 0.74", "-33.4378, 57.6587, -19.3519, 0.74", "-33.7856, 57.9068, -19.6779, 0.88", "-34.125, 58.1261, -20.0489, 1.03", "-34.4458, 58.2837, -20.4437, 1.03", "-34.7509, 58.3827, -20.8772, 0.96", "-35.08, 58.4244, -21.3507, 0.74", "-35.867, 58.3872, -22.3925, 0.66", "-36.4011, 58.3007, -22.9925, 0.66", "-37.1155, 58.1404, -23.6782, 0.66", "-37.5617, 58.0277, -24.0489, 0.59", "-38.176, 57.8651, -24.4782, 0.66", "-38.6616, 57.745, -24.7484, 0.66", "-39.6838, 57.5432, -25.1773, 0.81", "-40.2907, 57.4708, -25.4007, 0.96", "-40.7534, 57.4614, -25.5609, 1.18", "-41.2308, 57.4909, -25.7331, 1.18", "-41.8855, 57.5825, -25.9881, 0.66", "-42.3805, 57.6738, -26.2008, 0.66", "-42.7747, 57.7543, -26.3909, 0.59", "-43.2026, 57.8184, -26.6522, 0.74", "-43.7072, 57.833, -27.0108, 0.74", "-43.9021, 57.7817, -27.2125, 0.88", "-44.1874, 57.515, -27.7192, 0.88", "-44.3486, 57.2759, -28.1534, 0.66", "-44.6698, 56.7645, -29.1048, 0.66", "-44.8238, 56.5229, -29.5695, 1.25", "-45.1847, 56.0046, -30.6064, 1.47", "-45.5938, 55.5125, -31.6552, 1.62", "-46.1211, 55.0447, -32.8199, 1.55", "-46.4085, 54.8975, -33.308, 0.81", "-46.7785, 54.8265, -33.7566, 0.59", "-47.2628, 54.8296, -34.2353, 0.44", "-47.6538, 54.882, -34.5553, 0.44", "-48.0891, 54.9721, -34.8901, 0.59", "-48.3851, 55.0347, -35.1275, 0.59", "-48.7704, 55.1092, -35.5176, 0.29", "-49.3994, 55.2545, -36.2764, 1.03", "-49.8753, 55.4043, -36.8982, 1.47", "-50.2305, 55.5439, -37.3753, 1.69", "-50.4522, 55.6452, -37.6688, 2.06", "-50.9081, 55.8964, -38.2426, 1.03", "-51.3724, 56.2044, -38.7935, 0.52", "-51.7737, 56.5409, -39.2629, 0.81", "-51.9883, 56.766, -39.5254, 0.96", "-52.2497, 57.1099, -39.8919, 0.74", "-52.5148, 57.5271, -40.3323, 1.03", "-52.6787, 57.8228, -40.6456, 0.88", "-52.896, 58.2373, -41.1105, 1.25", "-53.0627, 58.5425, -41.4925, 1.62", "-53.2169, 58.7917, -41.8364, 1.77", "-53.4388, 59.1345, -42.3476, 1.99", "-53.6293, 59.4147, -42.7695, 1.18", "-53.7796, 59.6371, -43.0937, 0.29", "-53.9862, 59.9626, -43.5621, 0.29", "-54.2266, 60.4019, -44.1941, 0.66", "-54.3956, 60.7947, -44.7261, 0.66", "-54.5083, 61.143, -45.1508, 0.22", "-54.6007, 61.5402, -45.5992, 0.81", "-54.6822, 61.9917, -46.0959, 1.18", "-54.7716, 62.5371, -46.6619, 0.96", "-54.8317, 62.8363, -46.9568, 0.37", "-54.925, 63.1136, -47.2268, 0.29", "-55.0349, 63.3275, -47.4424, 0.29", "-55.2065, 63.5691, -47.6732, 0.29", "-55.4135, 63.8361, -47.8892, 0.59", "-55.6613, 64.1782, -48.1244, 0.59", "-55.8786, 64.5665, -48.3899, 0.59", "-56.0539, 64.9828, -48.6812, 0.59", "-56.1883, 65.383, -48.9521, 0.59", "-56.2913, 65.7545, -49.1986, 0.29", "-56.3697, 66.07, -49.411, 0.37", "-56.528, 66.6107, -49.8243, 0.37", "-56.7012, 67.0538, -50.2494, 0.74", "-56.8106, 67.2495, -50.4669, 1.25", "-56.9934, 67.5049, -50.771, 1.69", "-57.1716, 67.7143, -51.0455, 1.47", "-57.5279, 68.0746, -51.5746, 0.96", "-57.9155, 68.4191, -52.1242, 0.59", "-58.206, 68.6619, -52.5569, 0.52", "-58.454, 68.8468, -52.9451, 0.66", "-58.7826, 69.0485, -53.4459, 0.52", "-59.0857, 69.1942, -53.912, 0.81", "-59.4118, 69.2883, -54.3643, 0.96", "-59.7377, 69.3398, -54.7544, 1.55", "-60.163, 69.3813, -55.2254, 1.77", "-60.5293, 69.4138, -55.5828, 2.21", "-61.1151, 69.4739, -56.0842, 2.36", "-61.7458, 69.5403, -56.5757, 0.59", "-62.2785, 69.5769, -56.9738, 0.37", "-62.597, 69.586, -57.1985, 0.37", "-63.0306, 69.5793, -57.4952, 0.37", "-63.4011, 69.5622, -57.7495, 0.37", "-63.7433, 69.5384, -57.9675, 0.37", "-64.148, 69.5077, -58.2462, 0.29", "-64.3899, 69.4772, -58.4112, 0.29", "-64.6565, 69.4518, -58.6119, 0.44", "-65.1063, 69.4748, -58.9887, 0.81", "-65.3662, 69.5394, -59.2466, 1.18", "-65.6061, 69.6348, -59.5263, 1.18", "-65.867, 69.7604, -59.9209, 0.74", "-66.2621, 69.9601, -60.6249, 0.37", "-66.4886, 70.0797, -61.0701, 0.81", "-66.8429, 70.2646, -61.8485, 1.18", "-67.1066, 70.4003, -62.4705, 1.18", "-67.6177, 70.6493, -63.7481, 0.52", "-67.8793, 70.7741, -64.3478, 0.37", "-68.3097, 70.9469, -65.1741, 1.33", "-68.6719, 71.068, -65.778, 2.14", "-68.9062, 71.1502, -66.1199, 2.58", "-69.4649, 71.3784, -66.8366, 2.8", "-70.2095, 71.7546, -67.6868, 0.37", "-70.6596, 72.0491, -68.1994, 0.37", "-70.8382, 72.2026, -68.403, 0.37", "-71.1308, 72.5634, -68.7312, 0.59", "-71.3243, 72.9177, -68.9806, 0.74", "-71.4783, 73.338, -69.2309, 0.74", "-71.5745, 73.7354, -69.5367, 0.74", "-71.642, 73.962, -69.7614, 0.44", "-71.8076, 74.2355, -70.1412, 0.29", "-71.9823, 74.42, -70.5003, 0.29", "-72.1887, 74.575, -70.9078, 0.81", "-72.7185, 74.8455, -71.8417, 1.03", "-72.9539, 74.9358, -72.2187, 0.96", "-73.3974, 75.0943, -72.8917, 0.22", "-73.8214, 75.2545, -73.5495, 0.59", "-74.094, 75.3822, -73.9754, 0.59", "-74.367, 75.5423, -74.4102, 0.44", "-74.6344, 75.7225, -74.8206, 0.37", "-75.1397, 76.0486, -75.6095, 1.03", "-75.5386, 76.2694, -76.1965, 1.69", "-75.7533, 76.3827, -76.4797, 1.92", "-76.0379, 76.5458, -76.8396, 1.92", "-76.2123, 76.6539, -77.0669, 1.92", "-76.8943, 77.088, -77.9344, 0.44", "-77.1134, 77.239, -78.1867, 0.37", "-77.3754, 77.46, -78.5031, 0.52", "-77.5118, 77.6081, -78.7017, 0.88", "-77.7663, 77.9588, -79.1451, 1.03", "-77.9154, 78.186, -79.4308, 1.18", "-78.1365, 78.5592, -79.8935, 0.96", "-78.4115, 79.0209, -80.4611, 0.74", "-78.5857, 79.3123, -80.7958, 0.74", "-78.75, 79.5883, -81.0897, 0.59", "-79.0584, 80.078, -81.5583, 0.52", "-79.2686, 80.3935, -81.8389, 0.52", "-79.6174, 80.8791, -82.2229, 0.74", "-80.0049, 81.3722, -82.555, 1.18", "-80.3474, 81.7869, -82.8062, 1.4", "-80.6023, 82.0794, -82.9739, 1.47", "-80.86, 82.3464, -83.1265, 1.69", "-81.2586, 82.6834, -83.3502, 1.4", "-81.7785, 83.0269, -83.6462, 0.52", "-82.2811, 83.2749, -83.9354, 0.52", "-82.8115, 83.4759, -84.2379, 0.74", "-83.2728, 83.619, -84.5274, 0.96", "-83.8786, 83.7811, -84.957, 0.96", "-84.3125, 83.8922, -85.3122, 0.74", "-84.7274, 84.0264, -85.7035, 0.44", "-84.9852, 84.1585, -85.9832, 0.44", "-85.2913, 84.3808, -86.3558, 0.74", "-85.5625, 84.6071, -86.685, 0.88", "-85.7505, 84.7705, -86.9325, 0.88", "-86.0715, 85.0696, -87.3937, 0.29", "-86.3646, 85.3557, -87.856, 0.29", "-86.6867, 85.657, -88.3669, 0.37", "-86.9979, 85.929, -88.8423, 0.44", "-87.4949, 86.3539, -89.6078, 0.59", "-87.715, 86.5606, -89.968, 1.18", "-88.0259, 86.9, -90.5022, 1.03", "-88.2725, 87.2111, -90.9172, 1.69", "-88.4056, 87.395, -91.1228, 1.69", "-88.7093, 87.8152, -91.5537, 1.18", "-89.1248, 88.3507, -92.0568, 0.37", "-89.3742, 88.6527, -92.3572, 0.37", "-89.7641, 89.101, -92.8246, 0.37", "-90.1182, 89.4826, -93.254, 0.59", "-90.4304, 89.7866, -93.6163, 1.11", "-90.7011, 90.0175, -93.9103, 1.62", "-91.0338, 90.2516, -94.2662, 1.69", "-91.3478, 90.4638, -94.6356, 1.92" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-57.8648, 39.2144, 108.955, 0.88", "-59.4134, 39.2716, 116.782, 0.88", "-61.6893, 40.4202, 124.336, 0.88", "-63.1866, 42.6363, 131.852, 0.88", "-64.6596, 44.9065, 139.358, 0.88", "-65.2441, 48.4903, 146.484, 0.88", "-65.5042, 52.3321, 153.5, 0.88", "-67.3541, 56.412, 160.158, 0.88", "-69.3217, 61.2793, 166.274, 0.88", "-71.8625, 66.6158, 171.806, 0.88", "-74.8103, 72.1076, 176.999, 0.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-57.8648, 39.2144, 108.955, 0.22", "-58.7679, 40.2347, 116.796, 0.88", "-59.2382, 42.0717, 124.523, 0.88", "-61.5098, 43.7569, 131.961, 0.88", "-63.9745, 45.7998, 139.251, 0.88", "-66.3975, 46.9602, 146.74, 0.88", "-69.1051, 47.3833, 154.209, 0.88", "-70.8008, 47.791, 161.976, 0.88", "-72.9679, 48.1038, 169.628, 0.88", "-73.6605, 47.9265, 177.571, 0.88", "-73.2974, 48.5176, 185.511, 0.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-186.449, 135.667, 68.5323, 0.88", "-198.573, 143.302, 71.0618, 0.88", "-210.926, 150.544, 73.5376, 0.88", "-223.556, 157.542, 75.0352, 0.88", "-236.945, 162.643, 76.9371, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-186.449, 135.667, 68.5323, 0.22", "-194.171, 141.314, 70.0649, 0.88", "-202.159, 146.494, 71.7363, 0.88", "-211.14, 149.714, 72.7195, 0.88", "-219.639, 154.238, 72.3807, 0.88", "-228.453, 157.997, 73.0663, 0.88" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-72.0707, -146.762, 75.7209, 0.88", "-77.3999, -155.521, 82.0134, 0.88", "-81.6384, -164.322, 89.0482, 0.88", "-85.8533, -172.551, 96.6971, 0.88", "-88.5385, -182.204, 103.484, 0.88", "-89.3022, -190.436, 112.192, 0.88", "-91.9872, -198.374, 120.763, 0.88", "-92.8123, -204.242, 131.055, 0.88", "-92.1274, -210.307, 141.255, 0.88", "-89.4763, -214.576, 151.943, 0.88", "-86.296, -220.6, 161.684, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-72.0707, -146.762, 75.7209, 0.22", "-77.7739, -154.799, 80.7562, 0.88", "-83.8918, -161.938, 86.4852, 0.88", "-89.4044, -170.611, 90.7163, 0.88", "-95.4009, -179.135, 94.553, 0.88", "-101.609, -187.848, 97.5901, 0.88", "-109.221, -195.824, 98.6505, 0.88", "-116.632, -203.876, 100.388, 0.88", "-124.822, -210.889, 102.634, 0.88", "-133.965, -216.829, 103.693, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-4.34732, -49.6879, 5.8135, 1.25", "-4.21758, -50.6092, 5.26165, 1.25", "-4.07528, -51.2456, 4.9399, 1.03", "-3.77388, -52.1288, 4.56734, 0.88", "-3.48916, -52.8517, 4.34853, 0.66", "-3.27712, -53.3863, 4.25308, 0.66", "-2.97748, -54.2044, 4.17662, 0.74", "-2.73917, -54.9874, 4.2115, 0.66", "-2.55562, -55.5899, 4.29484, 0.81", "-2.37554, -56.1967, 4.40545, 0.81", "-2.14607, -56.9788, 4.525, 0.74", "-1.92256, -57.7632, 4.58913, 0.96", "-1.67521, -58.6773, 4.60083, 1.03", "-1.43419, -59.5386, 4.58792, 1.11", "-1.19425, -60.3861, 4.56211, 1.25", "-0.854185, -61.4733, 4.49535, 0.96", "-0.471059, -62.566, 4.41234, 0.96", "-0.0877945, -63.5497, 4.32774, 1.11", "0.26146, -64.3677, 4.24602, 1.47" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.34732, -49.6879, 5.8135, 2.06", "-5.09951, -50.5395, 5.84261, 2.06", "-5.91496, -51.5569, 5.73937, 2.06", "-6.59787, -52.4955, 5.55574, 2.06", "-7.21345, -53.3669, 5.3093, 2.06", "-7.9196, -54.332, 4.96936, 1.99", "-8.85308, -55.6012, 4.48571, 1.77", "-9.65578, -56.7329, 3.94412, 1.47", "-10.4515, -57.8822, 3.31116, 1.11", "-11.2196, -58.9574, 2.64479, 1.11", "-11.7931, -59.7148, 2.15405, 1.25", "-12.2655, -60.291, 1.78408, 1.25", "-13.3793, -61.4704, 1.0888, 1.18", "-14.081, -62.0855, 0.771762, 1.25", "-15.2483, -62.9397, 0.417521, 1.18", "-16.1277, -63.4972, 0.291008, 1.18", "-16.7739, -63.8495, 0.293734, 1.18", "-17.841, -64.3171, 0.430986, 1.18", "-18.9141, -64.6986, 0.680512, 1.25", "-19.4874, -64.8678, 0.854133, 1.25", "-20.2947, -65.0743, 1.17228, 1.25", "-21.4909, -65.3777, 1.67737, 1.77", "-22.3147, -65.5848, 2.03926, 2.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "67.278, 158.596, -21.6587, 0.74", "68.0459, 158.655, -22.3737, 0.74", "69.644, 158.956, -23.7551, 1.03", "70.461, 159.217, -24.4634, 0.52", "71.0821, 159.501, -25.0071, 0.52", "71.7205, 159.892, -25.5679, 0.74", "72.3529, 160.364, -26.1078, 0.52", "73.0224, 161.028, -26.5998, 0.59", "73.8603, 162.03, -27.1056, 0.44", "74.4338, 162.756, -27.4095, 0.52", "75.1782, 163.733, -27.7679, 0.44", "75.737, 164.467, -27.99, 0.29", "76.4253, 165.308, -28.2152, 0.29", "76.6417, 165.526, -28.2792, 0.59", "77.2322, 166.035, -28.4371, 0.59", "77.9814, 166.563, -28.6342, 0.44", "78.5828, 166.926, -28.802, 0.59", "79.6772, 167.588, -29.1317, 0.37", "80.4879, 168.136, -29.3931, 0.37", "81.1574, 168.627, -29.5957, 0.37", "81.8998, 169.203, -29.7907, 0.37", "82.9984, 170.04, -30.0175, 0.96", "83.7212, 170.592, -30.1374, 1.03", "84.6682, 171.329, -30.2601, 0.81", "85.3235, 171.868, -30.341, 0.66", "86.2297, 172.661, -30.4719, 0.88", "86.6935, 173.093, -30.5433, 1.25", "87.4019, 173.713, -30.6208, 0.88", "88.1349, 174.253, -30.7392, 0.29", "88.5862, 174.547, -30.8358, 0.44", "89.2258, 174.954, -31.001, 0.37", "90.2263, 175.538, -31.2689, 0.52", "91.2999, 176.094, -31.55, 0.59", "93.1718, 176.922, -31.9564, 0.66", "94.2456, 177.342, -32.1447, 0.52", "94.7001, 177.5, -32.2268, 0.59", "95.5789, 177.797, -32.3828, 0.44", "96.5095, 178.148, -32.5455, 0.37", "97.7212, 178.682, -32.7133, 0.37", "98.41, 179.024, -32.7436, 0.96", "99.2851, 179.522, -32.75, 0.88", "100.187, 180.107, -32.7452, 0.44", "100.774, 180.531, -32.7537, 0.29", "101.484, 181.077, -32.812, 0.44", "102.389, 181.834, -32.9464, 0.44", "103.369, 182.709, -33.1751, 0.52", "104.02, 183.332, -33.3878, 0.66", "105.12, 184.407, -33.93, 0.66", "106.082, 185.377, -34.5494, 0.44", "106.601, 185.918, -34.9584, 0.37", "107.193, 186.558, -35.5175, 0.37", "107.561, 186.924, -35.8746, 0.52", "108.289, 187.544, -36.5073, 0.59", "108.7, 187.811, -36.7665, 0.66", "109.449, 188.123, -37.0396, 0.52", "110.415, 188.359, -37.2629, 0.88", "111.115, 188.482, -37.3654, 0.88", "111.931, 188.63, -37.5023, 0.74", "112.623, 188.744, -37.6926, 0.59", "113.144, 188.807, -37.8793, 0.29", "114.11, 188.856, -38.2671, 0.29", "114.777, 188.859, -38.5524, 0.29", "116.082, 188.901, -39.192, 0.88", "117.4, 189.041, -39.9045, 0.96", "118.022, 189.155, -40.2575, 0.88", "118.904, 189.34, -40.7714, 0.29", "119.307, 189.412, -40.9778, 0.29", "119.987, 189.455, -41.2562, 0.37", "120.689, 189.426, -41.4847, 0.37", "121.249, 189.397, -41.7064, 0.37", "122.665, 189.288, -42.3483, 0.44", "123.523, 189.187, -42.7615, 0.59", "124.087, 189.077, -43.0257, 0.81", "124.927, 188.893, -43.4243, 0.59", "126.274, 188.643, -44.082, 1.11", "126.941, 188.56, -44.424, 1.47", "127.445, 188.521, -44.6668, 1.47", "128.42, 188.439, -45.1118, 1.03", "129.661, 188.345, -45.6039, 0.59", "130.765, 188.24, -45.967, 0.96", "131.927, 188.09, -46.286, 0.96", "133.09, 187.927, -46.5933, 0.37", "134.136, 187.786, -46.8246, 0.37", "134.911, 187.677, -46.9621, 0.37", "136.123, 187.462, -47.1378, 0.37", "137.315, 187.25, -47.2895, 0.81", "138.337, 187.108, -47.4084, 1.03", "139.745, 187.012, -47.603, 1.25", "140.148, 187.001, -47.6578, 1.47", "141.855, 186.962, -47.8562, 0.29", "142.394, 186.963, -47.8905, 0.29", "143.01, 186.975, -47.8943, 0.44", "143.726, 187.014, -47.8608, 0.22", "144.516, 187.089, -47.7961, 0.59", "145.2, 187.196, -47.715, 0.59", "146.287, 187.43, -47.556, 0.22", "147.431, 187.695, -47.3876, 0.22", "148.848, 188.023, -47.1663, 0.22", "149.664, 188.218, -47.0296, 0.44", "151.086, 188.61, -46.7922, 0.22", "151.944, 188.856, -46.6519, 0.22", "152.611, 189.044, -46.549, 0.37", "154.483, 189.539, -46.2657, 0.22", "155.759, 189.849, -46.0808, 0.22", "158.049, 190.398, -45.7575, 0.22", "159.358, 190.68, -45.5902, 0.22", "160.011, 190.807, -45.5079, 0.96", "160.926, 190.979, -45.3941, 0.96", "161.754, 191.131, -45.2932, 0.88", "162.532, 191.255, -45.19, 0.88", "164.467, 191.564, -44.8974, 0.22", "166.885, 191.937, -44.4841, 0.22", "168.098, 192.117, -44.26, 0.44", "168.777, 192.196, -44.1309, 0.52", "170.315, 192.323, -43.8002, 0.22", "172.531, 192.438, -43.273, 0.22", "174.24, 192.489, -42.8083, 0.22", "175.872, 192.482, -42.3343, 0.22", "178.058, 192.395, -41.67, 0.22", "179.343, 192.297, -41.2644, 0.22", "180.334, 192.162, -40.9396, 1.33", "181.012, 192.003, -40.7077, 1.47", "182.395, 191.644, -40.2179, 0.66", "183.404, 191.333, -39.8498, 0.29", "184.777, 190.87, -39.3583, 0.29", "185.837, 190.475, -39.0326, 0.29", "186.894, 190.011, -38.7193, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "67.278, 158.596, -21.6587, 0.37", "67.9487, 159.18, -21.5744, 0.37", "68.6124, 159.787, -21.4586, 0.37", "68.911, 160.066, -21.3938, 0.37", "69.4173, 160.545, -21.3094, 0.37", "69.7754, 160.903, -21.2555, 0.37", "70.5424, 161.699, -21.1301, 0.66", "70.9277, 162.11, -21.0108, 1.25", "71.1933, 162.412, -20.8972, 1.25", "71.7306, 163.106, -20.6032, 0.59", "72.1765, 163.727, -20.2995, 0.37", "72.7025, 164.446, -19.9103, 0.37", "73.454, 165.417, -19.3581, 0.52", "73.7412, 165.787, -19.1324, 0.37", "74.1356, 166.306, -18.8233, 0.52", "74.439, 166.711, -18.5509, 0.66", "74.6879, 167.044, -18.3311, 0.66", "74.9953, 167.468, -18.0753, 0.44", "75.4944, 168.212, -17.702, 0.66", "75.7494, 168.613, -17.4954, 0.81", "76.2894, 169.512, -17.0323, 1.03", "76.6706, 170.156, -16.6941, 1.18", "76.8757, 170.489, -16.4771, 1.18", "77.3379, 171.176, -15.951, 0.44", "77.7338, 171.74, -15.4709, 0.37", "77.9525, 172.066, -15.1831, 0.37", "78.2746, 172.583, -14.7488, 0.66", "78.9621, 173.666, -13.8213, 0.96", "79.085, 173.858, -13.6661, 0.66", "79.357, 174.253, -13.3551, 0.29", "79.658, 174.674, -13.0709, 0.29", "79.8889, 174.976, -12.9144, 0.29", "80.4368, 175.62, -12.678, 0.29", "80.958, 176.175, -12.5428, 0.44", "81.5222, 176.738, -12.4157, 0.59", "82.1646, 177.351, -12.2885, 0.59", "82.8827, 178.04, -12.1555, 0.66", "83.291, 178.451, -12.0681, 0.44", "83.6943, 178.9, -11.965, 0.37", "84.0375, 179.313, -11.8516, 0.52", "84.3688, 179.727, -11.719, 0.66", "84.6481, 180.083, -11.5848, 0.66", "85.2439, 180.859, -11.261, 0.59", "85.6507, 181.405, -11.032, 0.74", "86.1481, 182.095, -10.7218, 0.66", "86.7512, 182.986, -10.3149, 0.52", "87.1863, 183.669, -9.99722, 0.59", "87.4773, 184.137, -9.77134, 0.59", "87.7802, 184.614, -9.53968, 0.59", "88.2782, 185.356, -9.15191, 0.44", "88.6702, 185.934, -8.83621, 0.29", "89.011, 186.461, -8.51303, 0.44", "89.4121, 187.045, -8.10494, 0.59", "89.8736, 187.61, -7.67298, 0.74", "90.327, 188.091, -7.30472, 0.59", "90.843, 188.603, -6.9506, 0.96", "91.2057, 188.97, -6.69743, 1.11", "91.8367, 189.699, -6.2386, 0.59", "92.3485, 190.409, -5.85246, 0.52", "92.759, 191.012, -5.56244, 0.52", "93.1718, 191.607, -5.3109, 0.66", "93.8386, 192.573, -4.96038, 0.74", "94.2434, 193.205, -4.7586, 0.74", "94.6962, 193.96, -4.53189, 0.29", "95.1734, 194.761, -4.29734, 0.29", "95.3604, 195.032, -4.21995, 0.29", "95.8872, 195.718, -4.05234, 0.29", "96.4226, 196.318, -3.94547, 0.52", "96.7864, 196.666, -3.87781, 0.37", "97.2667, 197.07, -3.78999, 0.37", "97.7652, 197.45, -3.70613, 0.29", "98.5665, 197.994, -3.569, 0.29", "99.1688, 198.356, -3.47507, 0.37", "99.679, 198.647, -3.39945, 0.52", "100.074, 198.87, -3.33002, 0.52", "100.576, 199.151, -3.23213, 0.44", "101.357, 199.588, -3.08084, 0.44", "101.862, 199.88, -2.9913, 0.59", "102.386, 200.218, -2.90789, 0.74", "102.899, 200.564, -2.77977, 0.74", "103.493, 200.985, -2.59634, 0.52", "103.997, 201.361, -2.43112, 0.37", "104.698, 201.884, -2.20914, 0.29", "105.24, 202.287, -2.03183, 0.29", "106.516, 203.217, -1.62674, 0.66", "107.127, 203.659, -1.42724, 0.44", "107.749, 204.092, -1.21077, 0.52", "108.124, 204.345, -1.07678, 0.52", "108.544, 204.632, -0.920345, 0.37", "108.899, 204.903, -0.785524, 0.37", "109.271, 205.214, -0.672276, 0.44", "109.803, 205.702, -0.483141, 0.74", "110.136, 206.034, -0.355995, 0.88", "110.64, 206.595, -0.146404, 0.74", "111.012, 207.03, 0.0154944, 0.52", "111.484, 207.585, 0.221769, 0.37", "111.915, 208.073, 0.398816, 0.22", "112.218, 208.39, 0.509336, 0.22", "112.708, 208.861, 0.673234, 0.59", "113.105, 209.197, 0.812223, 0.74", "113.57, 209.518, 0.992259, 0.59", "113.789, 209.643, 1.08674, 0.59", "114.773, 210.146, 1.52765, 0.37", "115.16, 210.341, 1.69932, 0.37", "115.794, 210.649, 1.94638, 0.52", "116.401, 210.93, 2.13222, 0.52", "116.878, 211.127, 2.23265, 0.52", "117.584, 211.375, 2.37848, 0.81", "117.998, 211.502, 2.4637, 0.88", "118.538, 211.653, 2.56499, 0.88", "119.416, 211.872, 2.70402, 0.44", "120.237, 212.05, 2.83372, 0.37", "121.611, 212.309, 3.05392, 0.59", "122.137, 212.39, 3.14022, 0.59", "122.911, 212.495, 3.30567, 0.37", "123.474, 212.574, 3.44963, 0.29", "124.083, 212.656, 3.61748, 0.29", "124.828, 212.73, 3.77298, 0.29", "125.597, 212.782, 3.86972, 0.29", "126.85, 212.832, 4.02609, 0.59", "127.42, 212.854, 4.10345, 0.59", "127.954, 212.874, 4.17605, 0.59", "129.033, 212.89, 4.29847, 0.29", "129.602, 212.893, 4.34334, 0.29", "130.521, 212.906, 4.3815, 0.66", "131.159, 212.918, 4.3803, 0.74", "131.729, 212.929, 4.37564, 0.74", "132.857, 212.981, 4.33228, 0.22", "133.868, 213.074, 4.27363, 0.22", "134.446, 213.145, 4.21169, 0.29", "134.836, 213.214, 4.14901, 0.29", "135.554, 213.389, 4.01811, 0.22", "136.443, 213.713, 3.84791, 0.37", "136.903, 213.945, 3.75763, 0.52", "137.252, 214.15, 3.69202, 0.52", "137.766, 214.467, 3.60606, 0.59", "138.359, 214.815, 3.52102, 0.59", "138.982, 215.114, 3.46839, 0.52", "139.469, 215.291, 3.45344, 0.59", "140.08, 215.463, 3.43978, 0.44", "140.591, 215.578, 3.42798, 0.29", "141.156, 215.688, 3.4461, 0.29", "142.187, 215.927, 3.5296, 0.29", "142.555, 216.022, 3.57167, 0.29", "143.291, 216.243, 3.67056, 0.29", "143.675, 216.377, 3.72729, 0.29", "144.84, 216.839, 3.8798, 0.29", "145.442, 217.109, 3.91074, 0.29", "146.212, 217.48, 3.88463, 0.22", "146.588, 217.656, 3.84857, 0.44", "146.963, 217.819, 3.79085, 0.44", "147.589, 218.057, 3.6606, 0.29", "148.639, 218.358, 3.36998, 0.22", "149.095, 218.456, 3.24393, 0.22", "149.538, 218.541, 3.12525, 0.44", "149.962, 218.602, 3.00226, 0.44", "150.488, 218.654, 2.82954, 0.37", "151.165, 218.714, 2.59264, 0.29", "151.917, 218.789, 2.31216, 0.29", "152.394, 218.859, 2.11062, 0.29", "153.168, 219.019, 1.7481, 0.29", "153.639, 219.154, 1.51186, 0.29", "154.215, 219.369, 1.18788, 0.44", "154.739, 219.581, 0.839473, 0.37", "155.228, 219.739, 0.459632, 0.52", "155.609, 219.843, 0.151645, 0.52", "155.904, 219.911, -0.0750036, 0.66", "156.735, 220.079, -0.690618, 0.96", "157.484, 220.228, -1.2224, 0.81", "158.502, 220.474, -1.91506, 0.29", "159.133, 220.644, -2.40224, 0.29", "159.687, 220.83, -2.84872, 0.29", "160.064, 220.989, -3.118, 0.29", "160.851, 221.317, -3.53196, 0.29", "161.341, 221.499, -3.73605, 0.66", "163.188, 222.025, -4.41076, 0.29", "163.595, 222.09, -4.55825, 0.22", "165.166, 222.238, -5.13929, 0.22", "166.712, 222.274, -5.70503, 0.22", "167.394, 222.241, -5.94576, 0.37", "168.08, 222.175, -6.13037, 0.44", "168.381, 222.141, -6.15842, 0.22", "174.784, 226.614, -5.88569, 0.22", "181.503, 230.417, -6.83051, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-124.911, 106.738, 12.6578, 0.88", "-133.047, 111.128, 15.3527, 0.88", "-140.886, 116.781, 16.159, 0.88", "-147.99, 123.305, 14.7388, 0.88", "-156.723, 127.263, 14.0791, 0.88", "-165.863, 129.561, 12.5624, 0.88", "-175.099, 131.76, 11.5912, 0.88", "-183.847, 134.755, 9.12977, 0.88", "-193.046, 137.258, 8.51855, 0.88", "-201.874, 141.008, 8.95355, 0.88", "-210.057, 145.641, 11.0865, 0.88", "-217.11, 150.952, 15.0382, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-124.911, 106.738, 12.6578, 0.22", "-133.785, 111.464, 15.6291, 0.88", "-142.212, 116.195, 19.6964, 0.88", "-149.66, 120.524, 25.641, 0.88", "-155.916, 125.703, 32.3044, 0.88", "-161.008, 129.234, 40.6896, 0.88", "-165.638, 132.352, 49.4755, 0.88", "-169.167, 134.822, 58.9246, 0.88", "-173.901, 136.254, 68.0274, 0.88", "-178.884, 136.083, 77.08, 0.88", "-185.023, 135.715, 85.3837, 0.88", "-189.664, 136.329, 94.6079, 0.88", "-193.216, 136.553, 104.313, 0.88" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-91.3478, 90.4638, -94.6356, 0.29", "-91.364, 91.4587, -95.2233, 0.29", "-91.4682, 92.0823, -95.6591, 0.29", "-91.6051, 92.5473, -96.017, 0.37", "-91.6862, 92.7885, -96.1991, 0.37", "-91.7808, 93.1329, -96.4595, 0.81", "-91.8971, 93.5613, -96.787, 0.81", "-92.0434, 93.9379, -97.1021, 0.44", "-92.1586, 94.1849, -97.3227, 0.22", "-92.2834, 94.4591, -97.6084, 0.22", "-92.5093, 95.0754, -98.2992, 0.37", "-92.5587, 95.2515, -98.5068, 0.22", "-92.6549, 95.6064, -98.9213, 0.22", "-92.7407, 95.8888, -99.2493, 0.59", "-92.8859, 96.3048, -99.782, 0.74", "-93.0615, 96.7481, -100.484, 0.37", "-93.1908, 97.0425, -101.121, 0.37", "-93.2563, 97.2518, -101.635, 0.37", "-93.3109, 97.461, -102.166, 1.03", "-93.4053, 97.8109, -103.082, 1.62", "-93.5464, 98.2651, -104.349, 1.84", "-93.7262, 98.8454, -106.065, 1.33", "-93.8354, 99.2518, -107.266, 0.44", "-93.877, 99.4521, -107.824, 0.44", "-93.92, 99.6681, -108.359, 0.44", "-93.9716, 99.8703, -108.776, 0.59", "-94.1861, 100.506, -109.881, 0.74", "-94.2645, 100.691, -110.201, 0.74", "-94.3796, 100.873, -110.631, 0.88", "-94.5512, 101.065, -111.286, 0.96", "-94.7003, 101.173, -111.861, 0.52", "-94.8173, 101.224, -112.242, 0.37", "-95.149, 101.313, -113.206, 0.29", "-95.3912, 101.381, -113.989, 0.29", "-95.5803, 101.446, -114.625, 0.29", "-95.9264, 101.611, -115.76, 0.29", "-96.0724, 101.74, -116.235, 0.29", "-96.1932, 101.929, -116.644, 0.29", "-96.3518, 102.308, -117.161, 0.29", "-96.4406, 102.655, -117.539, 0.52", "-96.4881, 102.961, -117.836, 0.66", "-96.5678, 103.44, -118.266, 0.66", "-96.6619, 103.961, -118.794, 0.44", "-96.7303, 104.248, -119.142, 0.59", "-96.8768, 104.843, -119.931, 0.29", "-96.967, 105.287, -120.534, 0.29", "-97.052, 105.69, -121.07, 0.81", "-97.163, 106.201, -121.709, 1.25", "-97.4196, 107.332, -123.004, 0.44", "-97.6254, 108.247, -123.946, 0.74", "-97.7931, 108.989, -124.627, 0.29", "-97.8889, 109.429, -125.018, 0.29", "-97.9948, 109.986, -125.478, 0.29", "-98.1822, 110.968, -126.136, 0.22", "-98.3063, 111.646, -126.447, 0.22", "-98.3538, 111.874, -126.521, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-91.3478, 90.4638, -94.6356, 0.44", "-93.2067, 91.7257, -95.0419, 0.44", "-94.1616, 92.3369, -95.2343, 0.52", "-94.9186, 92.7911, -95.3778, 0.59", "-95.7373, 93.2383, -95.5548, 0.59", "-96.7295, 93.7383, -95.791, 0.37", "-97.6307, 94.1833, -96.0365, 0.37", "-98.3827, 94.5407, -96.2556, 0.96", "-99.3311, 94.9751, -96.6054, 1.4", "-100.113, 95.3436, -96.9428, 1.62", "-101.192, 95.9274, -97.4859, 0.59", "-102.029, 96.4658, -98.0249, 0.81", "-102.677, 96.9271, -98.502, 0.96", "-103.003, 97.1785, -98.7632, 1.18", "-103.573, 97.6602, -99.2335, 0.29", "-104.294, 98.2992, -99.808, 0.22", "-105.274, 99.1251, -100.571, 0.96", "-105.779, 99.5012, -100.95, 0.96", "-106.528, 99.9945, -101.528, 0.66", "-107.373, 100.452, -102.218, 0.44", "-108.278, 100.825, -103.02, 0.44", "-109.189, 101.139, -103.87, 0.81", "-110.004, 101.416, -104.656, 0.96", "-110.93, 101.751, -105.607, 0.74", "-112.239, 102.222, -107.04, 0.29", "-113.02, 102.501, -107.953, 0.29", "-113.546, 102.695, -108.603, 0.44", "-113.949, 102.838, -109.125, 0.66", "-114.395, 102.984, -109.722, 0.52", "-114.922, 103.113, -110.435, 0.52", "-115.563, 103.183, -111.284, 0.66", "-116.268, 103.142, -112.128, 0.37", "-116.936, 102.993, -112.857, 0.29", "-117.487, 102.834, -113.38, 0.29", "-117.919, 102.701, -113.767, 0.29", "-118.726, 102.44, -114.394, 0.29", "-119.296, 102.223, -114.87, 0.52", "-119.834, 101.989, -115.364, 0.74", "-120.53, 101.601, -116.043, 0.74", "-121.475, 100.821, -117.133, 0.52", "-121.907, 100.222, -117.788, 1.47", "-122.557, 98.9979, -118.954, 1.92", "-122.864, 98.3331, -119.571, 1.84", "-123.292, 97.3383, -120.519, 0.88", "-123.726, 96.3827, -121.574, 0.66", "-124.372, 95.3054, -123.024, 0.37", "-124.797, 94.8829, -123.863, 0.29", "-125.318, 94.6512, -124.714, 0.29", "-125.971, 94.5929, -125.627, 0.44", "-127.202, 94.6717, -127.128, 0.59", "-128.279, 94.8683, -128.431, 0.66", "-128.91, 95.0336, -129.199, 0.66", "-129.3, 95.1211, -129.708, 0.44", "-130.099, 95.2332, -130.756, 0.37", "-131.221, 95.3233, -132.307, 0.37", "-132.405, 95.3843, -133.874, 0.37", "-132.802, 95.4046, -134.399, 0.52", "-133.617, 95.412, -135.451, 0.66", "-134.57, 95.4043, -136.615, 0.37", "-135.666, 95.2523, -138.068, 0.37", "-136.58, 95.0026, -139.276, 0.74", "-137.073, 94.8164, -139.886, 0.74", "-138.076, 94.3949, -141.138, 0.52", "-139.04, 93.9781, -142.351, 0.52", "-141.254, 92.8528, -145.323, 0.52", "-141.999, 92.3302, -146.42, 0.44", "-142.463, 91.8881, -147.223, 0.29", "-142.899, 91.395, -148.029, 0.29", "-143.701, 90.39, -149.532, 0.29", "-144.318, 89.6472, -150.679, 0.29", "-145.486, 88.5847, -152.495, 0.52", "-146.162, 87.9052, -153.709, 0.66", "-146.592, 87.3708, -154.615, 0.66", "-146.85, 86.8925, -155.312, 0.52", "-147.147, 86.1849, -156.236, 0.52", "-147.392, 85.6682, -156.937, 0.22", "-148.409, 84.0165, -159.408, 1.18", "-148.762, 83.4058, -160.305, 1.4", "-149.372, 82.1656, -161.914, 0.52", "-149.6, 81.6803, -162.465, 0.29", "-150.01, 80.8558, -163.239, 0.29", "-150.589, 79.8605, -164.059, 0.29", "-151.948, 77.9084, -165.3, 0.44", "-152.927, 76.688, -165.952, 0.44", "-153.711, 75.7554, -166.393, 0.29", "-155.273, 73.8754, -167.186, 0.52", "-156.017, 72.9688, -167.497, 0.52", "-157.076, 71.7068, -167.842, 0.37", "-158.25, 70.4427, -168.1, 0.29", "-159.924, 68.8364, -168.441, 0.44", "-160.68, 68.1952, -168.594, 0.44", "-161.959, 67.2895, -168.864, 0.22", "-163.026, 66.6464, -169.129, 0.22", "-164.07, 66.1286, -169.441, 0.52", "-164.461, 65.9639, -169.574, 0.52", "-166.041, 65.4015, -170.151, 0.29", "-167.973, 64.7923, -170.94, 0.29", "-169.455, 64.3961, -171.606, 0.22", "-171.383, 63.9071, -172.509, 0.22", "-172.457, 63.6319, -173.024, 0.59", "-173.566, 63.3375, -173.546, 0.44", "-174.648, 63.0558, -174.025, 0.22", "-175.315, 62.8926, -174.279, 0.22", "-176.212, 62.6917, -174.56, 0.37", "-177.006, 62.5349, -174.754, 0.37", "-177.882, 62.3832, -174.927, 0.22", "-179.046, 62.2086, -175.146, 0.22", "-180.004, 62.0956, -175.335, 0.37", "-180.811, 62.0316, -175.493, 0.37", "-181.801, 61.9657, -175.663, 0.37", "-182.779, 61.8938, -175.816, 0.29", "-183.703, 61.83, -175.969, 0.37", "-186.037, 61.6952, -176.374, 0.22", "-187.633, 61.6096, -176.647, 0.22", "-189.845, 61.501, -177.008, 0.22", "-190.76, 61.4595, -177.147, 0.22", "-191.722, 61.4166, -177.277, 0.44", "-192.224, 61.3906, -177.329, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-74.8103, 72.1076, 176.999, 0.88", "-76.8674, 76.1505, 185.805, 0.88", "-78.6112, 79.7354, 194.859, 0.88", "-81.7275, 83.4303, 203.5, 0.88", "-85.111, 87.0768, 212.061, 0.88", "-88.1051, 90.2895, 220.922, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-74.8103, 72.1076, 176.999, 0.22", "-77.1051, 76.5963, 186.239, 0.88", "-81.0938, 81.0945, 194.9, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-73.2974, 48.5176, 185.511, 0.88", "-76.3461, 46.8127, 194.093, 0.88", "-78.4125, 45.8991, 203.071, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-73.2974, 48.5176, 185.511, 0.22", "-73.4727, 52.7493, 193.901, 0.88", "-72.1318, 57.3872, 201.962, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-236.945, 162.643, 76.9371, 0.88", "-247.635, 165.284, 74.6402, 0.88", "-257.669, 169.431, 71.707, 0.88", "-267.716, 174.201, 69.9901, 0.88" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-236.945, 162.643, 76.9371, 0.22", "-242.355, 173.307, 81.1565, 0.88", "-246.777, 184.821, 84.1426, 0.88", "-250.133, 196.641, 87.4893, 0.88", "-252.151, 208.837, 90.6821, 0.88" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-86.296, -220.6, 161.684, 0.88", "-87.3679, -225.368, 167.353, 0.88", "-88.8543, -230.357, 172.75, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-86.296, -220.6, 161.684, 0.22", "-87.7301, -226.779, 169.215, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-133.965, -216.829, 103.693, 0.88", "-141.651, -227.018, 106.272, 0.88", "-149.456, -237.359, 107.617, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-133.965, -216.829, 103.693, 0.22", "-139.788, -222.288, 107.636, 0.88", "-145.314, -228.79, 110.412, 0.88" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.26146, -64.3677, 4.24602, 0.66", "0.967493, -66.1177, 4.35889, 0.66", "1.42767, -67.3376, 4.35487, 0.52", "1.92495, -68.8256, 4.32061, 1.18", "2.14805, -69.6401, 4.33002, 1.62", "2.31436, -70.4921, 4.37474, 1.33", "2.43973, -71.5904, 4.47652, 0.74", "2.49368, -72.8658, 4.53546, 0.44", "2.51106, -73.6617, 4.59152, 0.44", "2.49683, -74.7782, 4.72958, 0.44", "2.50817, -75.9175, 4.87886, 0.52", "2.58849, -77.0584, 5.00939, 0.66", "2.83379, -78.2036, 5.05913, 0.44", "3.31925, -79.1473, 5.02421, 0.66", "3.67302, -79.6277, 5.00974, 0.88", "4.28092, -80.3298, 4.97696, 0.88", "4.63886, -80.7178, 4.95155, 0.96", "5.07474, -81.1881, 4.91587, 0.66", "6.01966, -82.3049, 4.81247, 0.44", "6.92359, -83.5281, 4.6421, 0.52", "7.34376, -84.123, 4.55088, 0.52", "8.04422, -85.0893, 4.3916, 0.74", "8.5353, -85.7345, 4.25914, 0.96", "9.07279, -86.388, 4.07594, 0.96", "9.89143, -87.2731, 3.70998, 0.59", "10.795, -88.0522, 3.31225, 0.59", "11.8614, -88.8793, 2.90855, 0.88", "12.2325, -89.1646, 2.78457, 0.88", "12.7348, -89.584, 2.62721, 0.88", "13.3696, -90.1746, 2.4383, 0.74", "14.306, -91.1641, 2.13111, 0.74", "15.0837, -92.1336, 1.80768, 0.74", "15.8381, -93.2168, 1.45158, 0.81", "16.3658, -94.0416, 1.20181, 0.96", "16.7287, -94.6727, 1.01831, 0.96", "17.123, -95.4457, 0.795229, 0.88", "17.5446, -96.4048, 0.513969, 0.88", "17.6859, -96.7284, 0.416966, 1.11", "18.0869, -97.7089, 0.0814478, 0.74", "18.3829, -98.4539, -0.205641, 0.74", "18.689, -99.2011, -0.497397, 0.66", "19.1742, -100.441, -0.945854, 0.44", "19.5074, -101.329, -1.22634, 1.03", "19.9694, -102.612, -1.56934, 0.81", "20.3445, -103.705, -1.83665, 0.59", "20.7817, -105.013, -2.1193, 0.74", "21.0852, -105.98, -2.31373, 0.59", "21.3477, -106.838, -2.43219, 0.59", "21.7202, -108.157, -2.52026, 0.44", "21.9726, -109.152, -2.51462, 0.37", "22.2317, -110.405, -2.4742, 0.74", "22.3941, -111.353, -2.44441, 0.88", "22.6945, -113.034, -2.38482, 0.88", "22.8377, -113.727, -2.34502, 0.74", "23.1537, -115.048, -2.23679, 0.66", "23.4243, -116.014, -2.14241, 0.74", "23.8254, -117.205, -2.03761, 0.74", "24.1324, -118.006, -1.99157, 0.74", "24.719, -119.47, -1.97996, 0.52", "24.9837, -120.13, -1.9947, 0.52", "25.3938, -121.147, -1.96293, 0.29", "25.7348, -121.991, -1.89894, 0.59", "25.9925, -122.618, -1.84096, 0.74", "26.3486, -123.494, -1.75051, 0.44", "26.7852, -124.581, -1.63227, 0.37", "27.5794, -126.509, -1.36062, 0.37", "27.929, -127.34, -1.20269, 0.52", "28.2794, -128.137, -0.988639, 0.59", "28.6635, -129.004, -0.686434, 0.74", "28.9273, -129.616, -0.427684, 1.18", "29.0939, -130.047, -0.231772, 1.18", "29.485, -131.289, 0.314768, 0.74", "29.8533, -132.747, 1.01046, 0.52", "30.0705, -133.898, 1.575, 0.44", "30.2496, -135.301, 2.24776, 0.59", "30.3204, -136.449, 2.77242, 0.44", "30.3199, -137.21, 3.0773, 0.44", "30.25, -138.294, 3.42361, 0.59", "30.1689, -139.068, 3.5957, 0.59", "30.0867, -139.712, 3.68599, 0.59", "29.8844, -140.967, 3.767, 0.66", "29.7355, -141.87, 3.78406, 0.59", "29.5871, -142.871, 3.76831, 0.52", "29.4978, -143.544, 3.73734, 0.66", "29.3756, -144.6, 3.6803, 0.66", "29.2514, -145.895, 3.62597, 0.52", "29.1627, -146.892, 3.59489, 0.74", "29.0839, -147.74, 3.59093, 0.88", "28.9584, -149.003, 3.62024, 0.96", "28.8178, -150.452, 3.68691, 0.88", "28.7321, -151.462, 3.75357, 0.88", "28.6379, -152.264, 3.79203, 0.81", "28.4631, -153.273, 3.83475, 0.66", "28.3089, -154.046, 3.89043, 0.66", "28.1657, -154.794, 3.97746, 0.44", "28.0104, -155.785, 4.13932, 0.44", "27.8698, -157.255, 4.48334, 0.44", "27.8746, -158.393, 4.83451, 0.44", "28.0498, -159.579, 5.33615, 0.66", "28.2697, -160.281, 5.7008, 0.81", "28.6572, -161.124, 6.2053, 0.96", "29.2726, -162.182, 6.88024, 0.66", "29.9373, -163.216, 7.56249, 0.59", "30.6854, -164.38, 8.30378, 0.96", "31.1959, -165.258, 8.81604, 0.96", "31.5788, -166.026, 9.2214, 0.96", "31.8669, -166.793, 9.57225, 0.66", "32.0716, -167.708, 9.9063, 0.44", "32.1215, -168.569, 10.1616, 0.37", "32.078, -169.227, 10.2989, 0.37", "31.9572, -170.232, 10.453, 0.29", "31.7911, -171.341, 10.585, 0.29", "31.6119, -172.496, 10.6962, 0.37", "31.4589, -173.568, 10.7761, 0.29", "31.3168, -174.736, 10.8652, 0.29", "31.1811, -175.913, 10.9701, 0.29", "31.0491, -177.139, 11.0906, 0.29", "31.0075, -177.655, 11.1382, 0.44", "30.9608, -178.497, 11.2093, 0.52", "30.9121, -179.747, 11.3117, 0.37", "30.8662, -180.975, 11.4256, 1.03", "30.846, -181.591, 11.4675, 1.03", "30.8469, -182.337, 11.482, 0.74", "30.8745, -183.27, 11.4698, 0.59", "30.9084, -183.811, 11.4549, 0.81", "30.9492, -184.49, 11.4418, 0.81", "31.0525, -185.775, 11.4922, 0.37", "31.112, -186.712, 11.6035, 0.37", "31.1277, -187.435, 11.7753, 0.37", "31.0615, -188.484, 12.2082, 0.29", "30.9364, -189.139, 12.5938, 0.44", "30.6864, -189.867, 13.1454, 0.59", "30.4438, -190.415, 13.6104, 0.74", "30.2522, -190.833, 13.9271, 0.74", "29.8701, -191.714, 14.4878, 0.22", "29.6166, -192.496, 14.829, 0.22", "29.5165, -193.134, 14.9725, 0.66", "29.5005, -194.052, 15.0164, 0.29", "29.6191, -195.193, 14.9579, 0.59", "29.691, -195.602, 14.909, 0.44", "29.926, -196.449, 14.7386, 0.29", "30.1073, -196.935, 14.6118, 0.22", "30.5315, -197.887, 14.3212, 0.22", "30.7838, -198.404, 14.1522, 0.22", "34.815, -209.053, 13.1179, 0.22", "39.9492, -219.172, 12.1648, 0.22", "44.3626, -229.564, 13.8278, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "0.26146, -64.3677, 4.24602, 1.03", "0.378955, -65.4118, 3.08722, 1.03", "0.751143, -67.1174, 0.963785, 0.66", "1.00023, -67.8511, -0.0236634, 0.66", "1.37652, -68.762, -1.34317, 0.66", "2.00658, -70.0604, -3.11939, 1.11", "2.33292, -70.6713, -3.89696, 1.18", "2.80857, -71.3768, -4.73482, 0.96", "3.61051, -72.2823, -5.70487, 0.81", "5.16996, -73.7387, -7.21096, 0.81", "6.44125, -74.7353, -8.16902, 0.74", "7.47841, -75.4341, -8.75208, 0.96", "8.86523, -76.2408, -9.42378, 0.96", "9.41898, -76.4999, -9.68066, 0.96", "10.2448, -76.756, -10.0638, 0.81", "11.2373, -76.9285, -10.5486, 0.81", "12.768, -77.088, -11.4211, 0.74", "13.877, -77.1728, -12.1392, 0.96", "15.1777, -77.3106, -13.0334, 0.96", "16.3322, -77.5127, -13.8207, 0.74", "17.6094, -77.8405, -14.6269, 0.88", "18.6577, -78.1905, -15.2186, 1.03", "19.8259, -78.6901, -15.7632, 1.03", "20.9926, -79.3156, -16.1056, 0.88", "21.8828, -79.8969, -16.2498, 0.66", "23.0432, -80.7789, -16.4352, 1.03", "23.7523, -81.3669, -16.5723, 1.03", "24.3992, -81.9374, -16.7737, 0.81", "25.8153, -83.223, -17.2718, 0.59", "26.7118, -84.0537, -17.6766, 0.74", "28.054, -85.277, -18.3231, 0.74", "28.8348, -85.977, -18.7037, 0.88", "30.1544, -87.1196, -19.291, 0.66", "31.3452, -88.1256, -19.7778, 0.96", "32.1491, -88.7861, -20.0562, 1.11", "32.9405, -89.4052, -20.2523, 1.11", "34.2682, -90.3727, -20.483, 0.81", "35.6461, -91.2831, -20.6814, 0.74", "37.0653, -92.1252, -20.8802, 0.66", "38.6642, -93.0266, -21.1914, 0.88", "39.6401, -93.609, -21.4218, 1.03", "40.5884, -94.2654, -21.709, 1.03", "41.6827, -95.1884, -22.1154, 0.81", "42.3528, -95.9399, -22.4419, 0.81", "43.1195, -97.0793, -22.9553, 0.81", "43.8617, -98.5216, -23.6319, 0.88", "44.4685, -99.8125, -24.2129, 1.03", "44.9173, -100.821, -24.646, 0.88", "45.5435, -102.143, -25.235, 0.66", "46.0538, -102.986, -25.5998, 0.66", "46.7417, -103.748, -25.939, 0.59", "47.8678, -104.547, -26.3354, 0.88", "48.375, -104.821, -26.4846, 0.88", "49.5131, -105.396, -26.8318, 0.59", "50.3444, -105.844, -27.0844, 0.74", "51.0496, -106.293, -27.3478, 0.81", "51.9462, -106.982, -27.814, 0.74", "52.7734, -107.729, -28.3653, 0.59", "53.8962, -108.866, -29.2337, 0.59", "54.4841, -109.518, -29.7358, 0.88", "55.0606, -110.213, -30.2812, 1.03", "55.9948, -111.448, -31.2291, 0.66", "56.5814, -112.291, -31.8652, 0.59", "57.3019, -113.348, -32.6781, 2.06", "57.8024, -114.052, -33.2276, 2.73" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-22.3147, -65.5848, 2.03926, 1.25", "-23.7, -65.3503, 2.08635, 1.25", "-25.2464, -65.266, 2.13797, 0.66", "-25.9524, -65.2818, 2.16463, 0.66", "-26.9342, -65.3507, 2.1877, 0.81", "-27.9179, -65.4349, 2.18771, 0.81", "-29.1839, -65.5192, 2.18537, 0.44", "-29.9798, -65.6096, 2.15392, 0.44", "-30.6733, -65.6455, 2.11872, 0.59", "-31.201, -65.6018, 2.06991, 0.74", "-31.9296, -65.4373, 1.98286, 0.74", "-32.7074, -65.2319, 1.83848, 0.66", "-33.2483, -65.1015, 1.73148, 0.52", "-34.3292, -64.911, 1.50777, 0.52", "-35.3276, -64.8086, 1.3125, 0.52", "-36.477, -64.7565, 1.13858, 0.66", "-37.7862, -64.7501, 1.01513, 0.88", "-38.9976, -64.7672, 0.947704, 1.03", "-39.8534, -64.7729, 0.923185, 1.03", "-40.8322, -64.7439, 0.905252, 0.96", "-41.7243, -64.6597, 0.903116, 0.74", "-42.9483, -64.4586, 0.888955, 0.59", "-43.6612, -64.3238, 0.882517, 0.59", "-44.8573, -64.1318, 0.872566, 0.74", "-45.8936, -64.0002, 0.853099, 0.74", "-46.9843, -63.9161, 0.794194, 0.52", "-47.9117, -63.9138, 0.723021, 0.59", "-49.1107, -64.0429, 0.629133, 0.59", "-50.1972, -64.2446, 0.580266, 0.74", "-51.3183, -64.5032, 0.575451, 0.74", "-52.2436, -64.7231, 0.597669, 0.74", "-53.552, -64.9875, 0.643809, 0.74", "-54.8353, -65.1916, 0.707902, 0.74", "-56.2289, -65.3731, 0.803408, 0.88", "-56.9772, -65.4533, 0.851506, 0.88", "-58.2224, -65.5737, 0.865118, 0.96", "-59.6396, -65.6749, 0.812542, 0.96", "-60.9468, -65.745, 0.713993, 0.66", "-61.8282, -65.8253, 0.633231, 0.59", "-63.2236, -66.074, 0.499125, 0.59", "-65.2911, -66.6082, 0.320121, 0.81", "-66.4227, -66.982, 0.221212, 0.96", "-67.9391, -67.5474, 0.104052, 0.96", "-69.9354, -68.3215, -0.00387397, 0.96", "-71.4317, -68.8932, -0.02938, 0.96", "-72.5685, -69.3072, 0.00727415, 0.96", "-73.6043, -69.6318, 0.0826706, 0.81", "-74.6853, -69.8865, 0.132742, 0.88", "-75.7865, -70.0195, 0.149872, 0.88", "-76.8014, -70.0334, 0.137158, 0.66", "-77.5746, -70.0213, 0.114826, 0.66", "-78.362, -70.0481, 0.0902031, 0.59", "-79.1672, -70.1689, 0.0821549, 0.59", "-80.2179, -70.4907, 0.0837095, 0.81", "-81.0622, -70.819, 0.106524, 0.81", "-82.2676, -71.2932, 0.145254, 0.52", "-83.4081, -71.6839, 0.181426, 0.66", "-84.4789, -71.9681, 0.210697, 0.66", "-85.8544, -72.1806, 0.255464, 0.66", "-87.069, -72.2273, 0.289909, 0.88", "-88.3579, -72.1602, 0.327455, 0.88", "-89.445, -72.0438, 0.36243, 0.81", "-90.6263, -71.9269, 0.329877, 0.88", "-91.9125, -71.8545, 0.185097, 1.03", "-92.9102, -71.8588, 0.00250718, 1.03", "-93.9751, -71.9588, -0.291521, 0.81", "-94.912, -72.1376, -0.609773, 0.81", "-96.9649, -72.8288, -1.50119, 0.44", "-98.1706, -73.4036, -2.14109, 0.66", "-99.0216, -73.9065, -2.64169, 0.81", "-100.146, -74.6545, -3.3554, 1.03", "-100.638, -74.9994, -3.67049, 1.11", "-102.036, -75.8935, -4.4711, 0.37", "-103.001, -76.3777, -4.89203, 0.37", "-103.718, -76.6793, -5.14781, 1.69", "-104.684, -77.0239, -5.42819, 2.06", "-105.334, -77.2203, -5.55762, 2.06", "-107.23, -77.7351, -5.81838, 0.59", "-108.858, -78.1108, -5.93974, 0.44", "-110.577, -78.4529, -6.00987, 0.52", "-111.495, -78.6046, -6.02331, 0.74", "-112.691, -78.7754, -6.01174, 0.88", "-113.927, -78.9419, -5.9803, 0.66", "-114.337, -78.9931, -5.94352, 0.44", "-115.278, -79.0777, -5.81584, 0.37", "-116.324, -79.0875, -5.62239, 0.96", "-117.565, -79.041, -5.30203, 1.62", "-118.632, -79.005, -4.94201, 1.77", "-119.844, -78.9927, -4.4735, 1.77", "-120.956, -79.0252, -4.01522, 1.11", "-121.984, -79.0807, -3.5755, 0.66", "-123.167, -79.1322, -3.08333, 0.52", "-124.568, -79.1413, -2.45813, 0.44", "-125.59, -79.1139, -2.02859, 0.44", "-126.356, -79.0837, -1.74198, 0.59", "-127.034, -79.0626, -1.5052, 0.59", "-127.96, -79.0578, -1.21998, 0.44", "-129.946, -79.0956, -0.645682, 0.74", "-130.908, -79.121, -0.36243, 0.81", "-131.964, -79.1667, -0.0676335, 0.81", "-133.091, -79.2312, 0.200218, 0.96", "-134.207, -79.3226, 0.366589, 1.11", "-135.164, -79.4108, 0.429294, 1.11", "-136.062, -79.4831, 0.380477, 0.81", "-137.459, -79.5674, 0.226513, 0.59", "-138.565, -79.5868, 0.0584636, 1.18", "-140.102, -79.5613, -0.213167, 1.47", "-140.895, -79.5388, -0.354972, 1.62", "-141.39, -79.5116, -0.461959, 1.62", "-142.216, -79.4314, -0.648447, 1.11", "-143.166, -79.2836, -0.807479, 0.66", "-144.131, -79.0414, -0.90023, 0.44", "-145.272, -78.6467, -0.937869, 0.37", "-146.523, -78.1296, -0.9597, 0.37", "-147.312, -77.7573, -0.947398, 0.37", "-148.407, -77.1819, -0.891466, 0.44", "-149.876, -76.4041, -0.818969, 0.74", "-150.582, -76.0421, -0.800069, 1.18", "-151.205, -75.7409, -0.798674, 1.33", "-151.961, -75.4005, -0.801, 1.33", "-152.89, -74.9616, -0.845595, 0.81", "-154.126, -74.3267, -0.932635, 0.29", "-154.984, -73.8611, -0.988175, 0.29", "-156.307, -73.1113, -1.05887, 0.37", "-157.16, -72.601, -1.0831, 0.44", "-158.405, -71.916, -1.22856, 0.44", "-159.917, -71.1535, -1.4702, 1.4", "-160.797, -70.7269, -1.62705, 1.92", "-161.179, -70.5519, -1.70342, 2.28", "-162.027, -70.2057, -1.9034, 2.28", "-165.484, -68.8822, -2.82779, 0.29", "-166.083, -68.6566, -3.01095, 0.52", "-166.836, -68.3688, -3.26543, 0.52", "-167.671, -68.0449, -3.5281, 0.74", "-168.378, -67.7655, -3.7481, 0.74", "-169.317, -67.4073, -4.04956, 0.44", "-170.348, -67.0105, -4.33965, 0.37", "-171.249, -66.6957, -4.65096, 0.81", "-171.89, -66.4924, -4.90346, 0.96", "-172.851, -66.2015, -5.34061, 0.96", "-174.017, -65.8785, -5.93287, 0.66", "-174.996, -65.6494, -6.46629, 0.29", "-176.09, -65.4113, -7.0406, 0.66", "-176.781, -65.2564, -7.37768, 0.66", "-178.225, -64.9308, -7.99217, 0.52", "-179.169, -64.6926, -8.30837, 0.74", "-181.144, -64.1582, -8.8649, 0.88", "-182.086, -63.8844, -9.13165, 1.11", "-182.755, -63.6804, -9.32101, 1.33", "-183.891, -63.2789, -9.63013, 0.44", "-185.077, -62.759, -9.92039, 0.44", "-186.138, -62.1891, -10.1828, 0.29", "-187.724, -61.2087, -10.6921, 0.96", "-188.425, -60.7704, -10.9868, 1.18", "-189.297, -60.2226, -11.4019, 2.21", "-189.802, -59.9081, -11.66, 2.43", "-190.802, -59.3147, -12.2084, 2.43", "-192.222, -58.5577, -12.9616, 2.21", "-194.033, -57.751, -13.8406, 0.29", "-195.018, -57.3849, -14.2778, 0.44", "-195.656, -57.1749, -14.5192, 0.52", "-197.919, -56.4758, -15.2684, 0.29", "-199.072, -56.1376, -15.5883, 0.29", "-200.03, -55.8682, -15.7867, 0.29", "-201.166, -55.5778, -15.995, 0.29", "-202.803, -55.1731, -16.2626, 0.96", "-203.537, -54.9796, -16.3593, 1.47", "-204.22, -54.7778, -16.4154, 1.47", "-205.802, -54.1796, -16.5578, 0.29", "-206.43, -53.8983, -16.6215, 0.29", "-207.491, -53.3541, -16.7708, 0.74", "-208.04, -53.0459, -16.8595, 0.81", "-208.395, -52.8258, -16.9127, 0.81", "-208.983, -52.4149, -17.0063, 0.29", "-209.48, -52.0225, -17.105, 0.22", "-210.604, -51.1009, -17.3883, 0.22", "-211.871, -50.0888, -17.7472, 0.22", "-212.758, -49.4139, -17.983, 0.88", "-213.499, -48.8637, -18.1612, 1.11", "-213.815, -48.6341, -18.2269, 1.4", "-214.506, -48.1378, -18.3329, 1.4", "-215.201, -47.6442, -18.3829, 0.96", "-216.64, -46.6928, -18.4223, 0.29", "-217.263, -46.3028, -18.4142, 0.59", "-217.68, -46.041, -18.3928, 0.59", "-218.267, -45.6691, -18.3461, 0.37", "-219.962, -44.5766, -18.1686, 0.22", "-221.006, -43.8967, -18.0605, 0.22", "-221.714, -43.4313, -17.9884, 0.22", "-223.126, -42.4666, -17.8493, 1.25", "-223.822, -41.9591, -17.7841, 1.69", "-224.329, -41.5619, -17.7398, 1.92", "-224.993, -40.9973, -17.6837, 1.62", "-226.124, -40.0247, -17.5888, 0.81", "-226.845, -39.4039, -17.5283, 0.81", "-228.102, -38.3451, -17.3706, 0.37", "-228.967, -37.632, -17.2361, 0.37", "-229.48, -37.23, -17.1443, 0.37", "-230.551, -36.4415, -16.9313, 0.29", "-231.623, -35.677, -16.6985, 0.29", "-232.958, -34.7275, -16.349, 0.29", "-233.605, -34.2622, -16.1456, 0.44", "-234.065, -33.9221, -15.985, 0.44", "-234.667, -33.4655, -15.7653, 0.29", "-235.967, -32.4869, -15.2816, 1.4", "-236.884, -31.875, -14.953, 1.77", "-237.287, -31.6348, -14.8227, 1.77", "-238.364, -31.0391, -14.4948, 0.66", "-239.177, -30.6016, -14.2673, 0.66", "-239.959, -30.202, -14.0609, 0.81", "-240.891, -29.7562, -13.8804, 0.81", "-242.119, -29.1534, -13.7475, 0.37", "-243.676, -28.327, -13.6605, 0.29", "-244.56, -27.8332, -13.6495, 0.29", "-245.518, -27.2729, -13.6702, 1.11", "-246.782, -26.4775, -13.7455, 1.77", "-247.76, -25.8257, -13.85, 0.88", "-248.994, -24.9899, -14.0153, 0.29", "-250.869, -23.7438, -14.283, 0.29", "-251.855, -23.1059, -14.4165, 0.66", "-252.6, -22.649, -14.502, 0.88", "-254.132, -21.7249, -14.6448, 0.29", "-255.14, -21.1307, -14.7416, 0.29", "-256.018, -20.6399, -14.8347, 0.66", "-256.76, -20.2344, -14.9509, 0.66", "-257.805, -19.6817, -15.1464, 0.29", "-258.734, -19.2125, -15.3331, 0.88", "-259.345, -18.8968, -15.4637, 0.88", "-260.539, -18.219, -15.7372, 0.29", "-261.872, -17.3027, -15.9609, 0.59", "-262.262, -16.9533, -15.9965, 0.59", "-262.789, -16.3844, -15.9919, 0.59", "-263.583, -15.4505, -15.8914, 0.37", "-264.411, -14.3712, -15.7087, 0.29", "-265.533, -12.7862, -15.362, 0.29", "-266.54, -11.2631, -14.9728, 1.25", "-267.148, -10.2798, -14.7451, 1.4", "-267.533, -9.62453, -14.6158, 1.4", "-268.028, -8.75903, -14.4773, 1.03", "-268.635, -7.70482, -14.3564, 0.29", "-269.415, -6.34512, -14.2839, 0.29", "-270.076, -5.1198, -14.2474, 0.29", "-270.884, -3.46287, -14.241, 1.11", "-271.176, -2.8488, -14.2467, 1.55", "-271.695, -1.73363, -14.2635, 0.66", "-272.513, 0.0616112, -14.2869, 0.29", "-273.609, 2.40282, -14.3082, 0.29", "-274.286, 3.83947, -14.315, 0.29", "-275.096, 5.57525, -14.3193, 0.44", "-275.543, 6.54456, -14.3183, 0.44", "-276.029, 7.60097, -14.3177, 0.59", "-276.686, 9.03177, -14.3176, 0.29", "-277.165, 10.1456, -14.3166, 0.29", "-277.566, 11.2121, -14.326, 0.44", "-277.903, 12.3071, -14.3591, 0.29", "-278.243, 13.4146, -14.4031, 0.59", "-278.673, 14.6989, -14.4606, 1.03", "-278.924, 15.3779, -14.4934, 1.03", "-279.646, 16.9985, -14.5693, 0.22", "-280.443, 18.4394, -14.63, 0.22", "-281.203, 19.6541, -14.6813, 0.22", "-281.837, 20.5123, -14.7142, 0.29", "-282.264, 20.9634, -14.7248, 0.29", "-282.829, 21.3974, -14.7164, 0.52", "-283.2, 21.5376, -14.6863, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-22.3147, -65.5848, 2.03926, 0.88", "-23.3336, -67.2175, 2.00658, 0.88", "-24.121, -68.5642, 1.95024, 0.88", "-24.8549, -69.8673, 1.83824, 0.88", "-25.4959, -71.0549, 1.71627, 1.03", "-26.1066, -72.2418, 1.58053, 1.03", "-26.6758, -73.3718, 1.45036, 0.96", "-27.3371, -74.6661, 1.23363, 0.96", "-27.8315, -75.6554, 1.06465, 1.11", "-28.2621, -76.4952, 0.93942, 1.11", "-28.8101, -77.4745, 0.828878, 1.18", "-29.6464, -78.794, 0.728387, 1.18", "-30.5314, -80.1155, 0.639077, 1.11", "-31.0898, -80.8759, 0.59865, 1.25", "-31.9463, -81.9662, 0.579488, 1.25", "-32.7827, -82.9352, 0.566877, 1.47", "-33.6119, -83.7958, 0.575039, 1.69" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "186.894, 190.011, -38.7193, 0.88", "187.332, 189.166, -38.6536, 0.88", "187.559, 188.75, -38.6304, 1.11", "187.786, 188.417, -38.6232, 1.25", "188.216, 187.812, -38.6219, 1.03", "188.798, 187.012, -38.6209, 0.15", "189.127, 186.564, -38.6197, 0.37", "189.288, 186.348, -38.6276, 0.37", "190.252, 185.056, -38.6582, 0.15", "190.564, 184.625, -38.6642, 0.29", "190.915, 184.129, -38.6627, 0.15", "191.237, 183.623, -38.647, 0.15", "191.502, 183.158, -38.6209, 0.15", "191.707, 182.749, -38.5689, 0.22", "191.883, 182.354, -38.4946, 0.22", "192.105, 181.874, -38.391, 0.29", "192.384, 181.288, -38.2651, 0.29", "192.881, 180.261, -38.0211, 0.15", "193.496, 178.954, -37.7212, 0.59", "193.663, 178.59, -37.6423, 0.88", "193.859, 178.162, -37.5552, 0.88", "194.433, 176.884, -37.3239, 0.22", "194.864, 175.878, -37.1329, 0.22", "195.383, 174.593, -36.8492, 0.22", "195.625, 173.973, -36.7004, 0.59", "195.772, 173.58, -36.598, 0.74", "195.922, 173.155, -36.4817, 0.52", "196.343, 172.0, -36.1737, 0.22", "196.766, 170.893, -35.9213, 1.33", "196.911, 170.515, -35.8447, 1.4", "197.349, 169.311, -35.6676, 0.22", "197.608, 168.625, -35.5918, 0.15", "198.08, 167.348, -35.4478, 0.15", "198.36, 166.499, -35.3746, 0.29", "198.565, 165.776, -35.3184, 0.29", "198.876, 164.545, -35.208, 0.15", "199.111, 163.508, -35.1007, 0.15", "199.525, 161.481, -34.8793, 0.15", "199.845, 159.63, -34.6854, 0.15", "200.211, 157.358, -34.4694, 0.15", "200.343, 156.44, -34.3992, 0.22", "200.387, 156.061, -34.381, 0.96", "200.433, 155.475, -34.3793, 1.18", "200.542, 154.054, -34.4578, 0.15", "200.61, 153.372, -34.4959, 0.29", "200.728, 152.369, -34.5876, 0.15", "200.814, 151.777, -34.6579, 0.29", "200.882, 151.341, -34.711, 0.29", "201.126, 149.882, -34.8968, 0.15", "201.363, 148.66, -35.064, 0.15", "201.561, 147.76, -35.1954, 0.52", "201.654, 147.441, -35.2462, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "186.894, 190.011, -38.7193, 0.22", "188.003, 190.191, -38.3621, 0.22", "188.662, 190.297, -38.0942, 0.52", "188.794, 190.318, -38.0371, 0.52", "189.907, 190.499, -37.5401, 0.22", "190.275, 190.565, -37.3786, 0.59", "190.602, 190.626, -37.2367, 0.59", "191.982, 190.841, -36.6302, 0.22", "192.205, 190.879, -36.5329, 0.44", "192.345, 190.904, -36.4732, 0.44", "193.426, 191.102, -36.0248, 0.15", "193.619, 191.131, -35.9488, 0.37", "193.837, 191.158, -35.865, 0.37", "194.658, 191.221, -35.5751, 0.15", "195.108, 191.244, -35.4051, 0.15", "195.35, 191.246, -35.3074, 0.29", "195.581, 191.232, -35.2068, 0.29", "196.137, 191.144, -34.9395, 0.22", "196.281, 191.11, -34.8677, 0.44", "196.904, 190.91, -34.5487, 0.22", "197.119, 190.833, -34.4399, 0.44", "197.342, 190.749, -34.3276, 0.44", "198.567, 190.256, -33.7232, 0.22", "199.348, 189.907, -33.3533, 0.22", "199.752, 189.715, -33.1569, 0.37", "199.963, 189.604, -33.0503, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-193.216, 136.553, 104.313, 0.88", "-198.298, 138.081, 110.39, 0.88", "-203.325, 140.462, 116.271, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-193.216, 136.553, 104.313, 0.22", "-198.13, 140.355, 112.303, 0.88", "-202.046, 142.701, 121.28, 0.88", "-204.882, 143.404, 130.891, 0.88", "-207.214, 142.721, 140.643, 0.88", "-208.771, 143.243, 150.553, 0.88", "-209.559, 145.24, 160.374, 0.88", "-211.484, 147.398, 170.008, 0.88" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "57.8024, -114.052, -33.2276, 1.11", "59.5289, -114.032, -34.6702, 1.11", "60.5948, -114.097, -35.5425, 0.96", "61.7194, -114.247, -36.4453, 0.81", "62.4367, -114.432, -37.0096, 0.81", "63.6658, -114.868, -37.9504, 0.81", "64.4471, -115.158, -38.5335, 1.03", "65.1913, -115.49, -39.0506, 1.03", "65.747, -115.746, -39.4738, 1.03", "66.823, -116.171, -40.4263, 0.59", "67.4555, -116.26, -41.1773, 0.59", "68.0182, -116.198, -42.0325, 0.81", "68.4676, -116.09, -42.9342, 0.81", "68.948, -115.987, -44.0678, 0.66", "69.3902, -115.963, -45.2205, 0.66", "69.9285, -116.202, -46.7662, 0.74", "70.4197, -116.801, -47.9916, 0.88", "70.8594, -117.553, -48.8648, 0.88", "71.2834, -118.346, -49.544, 0.81", "71.703, -119.134, -50.1368, 0.81", "72.5657, -120.662, -51.2027, 0.59", "73.449, -122.101, -52.2075, 0.52", "74.1388, -123.099, -52.9973, 0.66", "74.6484, -123.747, -53.581, 0.66", "75.3392, -124.538, -54.3941, 0.81", "75.7729, -125.02, -54.9437, 0.81", "76.5075, -125.821, -55.9492, 0.66", "76.9691, -126.411, -56.6978, 0.81", "77.4996, -127.152, -57.5363, 0.81", "78.0675, -127.976, -58.3863, 0.88", "78.6106, -128.776, -59.1482, 0.88", "79.1425, -129.523, -59.8534, 0.52", "79.8806, -130.604, -60.9065, 0.88", "80.3487, -131.402, -61.6928, 0.88", "80.668, -132.09, -62.3467, 1.03", "80.9535, -132.967, -63.1146, 0.81", "81.1373, -133.708, -63.7013, 0.59", "81.5241, -135.533, -64.9876, 0.59", "81.7466, -136.621, -65.6538, 0.59", "81.9238, -137.474, -66.1574, 0.66", "82.2681, -138.596, -66.7615, 0.37", "82.5787, -139.29, -67.14, 0.37", "83.1182, -140.279, -67.8572, 0.66", "83.4694, -140.792, -68.2918, 0.81", "83.865, -141.371, -68.9106, 0.81", "84.3255, -142.074, -69.8671, 0.44", "84.7133, -143.081, -71.5351, 1.33", "84.9961, -144.348, -73.7451, 1.92", "85.0492, -144.701, -74.3941, 1.84", "85.1828, -145.639, -76.242, 0.81", "85.2893, -146.197, -77.4644, 0.88", "85.7016, -147.586, -81.1231, 0.52", "85.8629, -147.848, -81.9872, 0.52", "86.133, -148.066, -82.9342, 0.52", "86.5314, -148.221, -83.9218, 0.52", "87.0876, -148.292, -84.8744, 1.18", "87.8259, -148.301, -85.7986, 1.69", "88.355, -148.245, -86.3033, 1.92", "88.8002, -148.189, -86.7566, 1.69", "89.857, -148.113, -87.8267, 0.81", "90.9944, -148.07, -88.9542, 0.52", "91.6566, -148.055, -89.5884, 0.81", "92.1223, -148.047, -90.0236, 0.81", "93.5887, -148.009, -91.4341, 0.37", "94.8643, -147.947, -92.6585, 0.29", "95.7914, -147.849, -93.6164, 0.52", "96.5555, -147.711, -94.4146, 0.88", "96.9152, -147.603, -94.8246, 1.18", "97.2092, -147.462, -95.2158, 1.4", "97.8141, -147.008, -96.1605, 0.88", "98.7191, -146.092, -97.8007, 0.44", "99.0909, -145.678, -98.509, 0.44", "99.583, -145.126, -99.4391, 1.18", "100.299, -144.44, -100.613, 1.4", "100.751, -144.081, -101.271, 1.4", "101.221, -143.777, -101.886, 1.18", "101.508, -143.632, -102.203, 1.18", "102.74, -143.113, -103.465, 0.29", "103.796, -142.727, -104.413, 0.29", "104.739, -142.38, -105.185, 0.29", "105.463, -142.09, -105.766, 0.44", "106.127, -141.783, -106.286, 0.37", "106.55, -141.569, -106.601, 0.37", "107.74, -140.915, -107.403, 1.33", "108.293, -140.553, -107.764, 1.77", "109.0, -140.053, -108.197, 1.55", "109.754, -139.513, -108.638, 0.74", "110.514, -138.975, -109.076, 0.52", "111.286, -138.436, -109.546, 0.29", "111.904, -138.014, -109.929, 0.29", "112.462, -137.648, -110.273, 0.66", "113.127, -137.208, -110.694, 0.66", "114.01, -136.641, -111.299, 0.29", "115.076, -135.984, -112.067, 0.29", "115.886, -135.503, -112.665, 0.29", "116.462, -135.18, -113.087, 0.44", "117.29, -134.681, -113.733, 1.33", "118.32, -134.023, -114.562, 2.36", "118.641, -133.815, -114.823, 2.36", "119.287, -133.392, -115.325, 2.06", "120.208, -132.82, -116.031, 0.66", "121.15, -132.238, -116.732, 0.29", "121.834, -131.81, -117.211, 0.29", "122.804, -131.18, -117.831, 0.52", "123.432, -130.768, -118.213, 0.66", "124.142, -130.314, -118.608, 0.29", "124.494, -130.082, -118.78, 0.29", "125.379, -129.486, -119.123, 0.88", "125.929, -129.087, -119.317, 1.03", "126.765, -128.445, -119.593, 1.03", "127.346, -128.014, -119.793, 0.74", "127.826, -127.689, -119.958, 0.44", "128.557, -127.273, -120.214, 0.37", "129.301, -126.924, -120.52, 0.37", "129.996, -126.617, -120.867, 0.59", "130.735, -126.271, -121.296, 0.81", "131.152, -126.037, -121.568, 0.81", "131.506, -125.783, -121.818, 0.81", "132.466, -124.916, -122.536, 0.37", "133.284, -124.015, -123.15, 0.37", "133.865, -123.267, -123.575, 0.74", "134.498, -122.383, -124.026, 1.11", "135.18, -121.411, -124.484, 0.66", "135.658, -120.74, -124.78, 0.66", "136.232, -119.98, -125.094, 0.81", "136.802, -119.306, -125.375, 1.03", "137.442, -118.611, -125.676, 0.88", "138.16, -117.855, -126.0, 0.66", "138.778, -117.179, -126.265, 0.29", "139.478, -116.384, -126.538, 0.22", "140.104, -115.66, -126.758, 0.37", "140.552, -115.124, -126.891, 0.37", "141.203, -114.331, -127.064, 0.37", "141.774, -113.665, -127.218, 0.81", "142.329, -113.015, -127.376, 0.81", "143.042, -112.166, -127.6, 0.88", "143.914, -111.113, -127.909, 0.29", "144.523, -110.377, -128.134, 0.29", "145.049, -109.734, -128.367, 0.37", "145.968, -108.582, -128.826, 0.52", "146.586, -107.758, -129.168, 0.66", "147.029, -107.139, -129.429, 0.59", "147.594, -106.335, -129.788, 1.62", "148.392, -105.138, -130.301, 1.99", "149.127, -104.016, -130.791, 1.69", "149.645, -103.325, -131.149, 1.77" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "57.8024, -114.052, -33.2276, 0.74", "58.2678, -116.321, -33.2824, 0.74", "58.5828, -117.659, -33.3349, 0.74", "58.9438, -119.003, -33.4166, 0.74", "59.326, -120.272, -33.5204, 0.74", "59.8142, -121.697, -33.6482, 0.74", "60.1194, -122.529, -33.7295, 0.88", "60.4784, -123.332, -33.8403, 0.88", "61.047, -124.51, -34.0158, 0.59", "61.4797, -125.424, -34.1576, 0.37", "61.9726, -126.519, -34.3386, 0.37", "62.3493, -127.4, -34.498, 0.59", "62.7152, -128.322, -34.6587, 0.66", "63.069, -129.385, -34.8316, 0.66", "63.3506, -130.464, -34.9952, 0.81", "63.4887, -131.165, -35.0973, 0.81", "63.5872, -131.888, -35.2002, 0.52", "63.6538, -132.529, -35.2935, 0.52", "63.7762, -134.176, -35.5305, 0.74", "63.8519, -135.37, -35.6759, 0.96", "63.9154, -136.402, -35.7713, 0.96", "63.9663, -137.242, -35.8246, 0.96", "64.0103, -138.277, -35.8587, 0.66", "64.0119, -138.917, -35.8546, 0.66", "63.9469, -139.908, -35.7922, 1.11", "63.8423, -140.553, -35.7214, 1.11", "63.5743, -141.544, -35.573, 0.81", "63.1518, -142.708, -35.3753, 0.44", "62.6736, -143.785, -35.1824, 0.44", "62.3044, -144.54, -35.0679, 0.44", "61.8346, -145.444, -34.9656, 0.66", "61.444, -146.202, -34.8987, 0.44", "60.9434, -147.182, -34.8196, 0.81", "60.6218, -147.862, -34.7688, 0.96", "60.3163, -148.595, -34.7235, 0.52", "60.0308, -149.363, -34.6988, 0.44", "59.6216, -150.513, -34.7083, 0.37", "59.3069, -151.414, -34.7438, 0.37", "58.9608, -152.402, -34.7902, 0.52", "58.5445, -153.634, -34.8582, 0.59", "58.1588, -154.82, -34.9339, 0.59", "57.8358, -155.928, -35.021, 0.66", "57.5467, -157.135, -35.1402, 0.74", "57.4012, -157.962, -35.2248, 0.59", "57.2883, -158.824, -35.3004, 0.44", "57.2571, -159.155, -35.3089, 0.74", "57.2325, -159.732, -35.2841, 0.74", "57.2427, -160.436, -35.2313, 0.44", "57.3046, -161.492, -35.1666, 0.29", "57.3906, -162.28, -35.1431, 0.37", "57.4931, -162.997, -35.1337, 0.59", "57.6485, -163.975, -35.1386, 0.59", "57.7959, -164.964, -35.2072, 0.74", "57.8759, -165.496, -35.2504, 0.81", "58.0093, -166.488, -35.3671, 0.66", "58.0769, -167.118, -35.4545, 0.66", "58.1155, -167.624, -35.5316, 0.66", "58.1671, -168.984, -35.7246, 0.59", "58.1591, -170.393, -35.9051, 0.66", "58.1145, -171.419, -36.0219, 0.74", "58.0348, -172.376, -36.1134, 0.74", "57.9898, -172.962, -36.1627, 0.74" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-33.6119, -83.7958, 0.575039, 0.81", "-33.342, -85.1032, -0.871102, 0.81", "-33.2708, -85.8059, -1.42881, 0.74", "-33.1906, -86.6405, -1.90318, 0.59", "-33.1099, -87.2224, -2.158, 0.59", "-32.9627, -88.1935, -2.50453, 0.74", "-32.8141, -89.3988, -2.88125, 0.66", "-32.7179, -90.59, -3.1124, 0.66", "-32.6501, -91.6813, -3.33865, 0.74", "-32.5465, -92.8676, -3.58689, 0.74", "-32.4595, -93.6599, -3.78729, 0.81", "-32.2349, -95.2414, -4.25477, 0.96", "-32.1322, -95.9671, -4.50541, 1.18", "-31.9238, -97.8078, -5.17637, 0.52", "-31.8309, -98.993, -5.65663, 0.74", "-31.756, -100.047, -6.17691, 0.88", "-31.677, -100.946, -6.75282, 0.59", "-31.5866, -101.764, -7.36555, 0.59", "-31.5091, -102.546, -7.99202, 1.18", "-31.4511, -103.439, -8.68705, 1.18", "-31.3771, -105.221, -10.0357, 0.59", "-31.3205, -106.611, -11.0199, 0.74", "-31.327, -107.393, -11.5932, 0.88", "-31.4067, -108.481, -12.3784, 0.66", "-31.592, -109.572, -13.0862, 0.88", "-31.7988, -110.281, -13.4464, 1.03", "-32.1608, -111.099, -13.7538, 0.74", "-33.1213, -112.837, -14.3716, 0.44", "-33.4739, -113.421, -14.6372, 0.44", "-33.856, -114.078, -14.9845, 0.81", "-34.2298, -114.923, -15.4784, 1.18", "-34.3959, -115.669, -15.9175, 1.18", "-34.3677, -116.673, -16.5124, 0.81", "-34.0011, -118.191, -17.3659, 0.52", "-33.6942, -119.011, -17.8329, 0.88", "-33.1287, -120.194, -18.5333, 1.03", "-32.6537, -121.043, -19.0288, 1.03", "-32.1653, -121.866, -19.4754, 1.25", "-31.8693, -122.379, -19.7255, 1.92", "-31.519, -123.075, -20.0379, 1.55", "-30.8967, -124.672, -20.6542, 0.52", "-30.7363, -125.327, -20.8812, 0.44", "-30.583, -126.343, -21.2402, 0.37", "-30.5358, -126.856, -21.4283, 0.52", "-30.4985, -127.435, -21.6617, 0.52", "-30.4352, -128.702, -22.2054, 0.44", "-30.3637, -130.082, -22.7923, 0.96", "-30.2633, -131.475, -23.3357, 1.69", "-30.1785, -132.487, -23.7281, 1.92", "-30.0738, -133.592, -24.1331, 1.92", "-29.988, -134.727, -24.5183, 1.92", "-29.9341, -135.82, -24.8611, 1.62", "-29.8873, -137.491, -25.2408, 0.37", "-29.8895, -139.615, -25.5796, 0.29", "-29.9035, -140.195, -25.6557, 0.29", "-29.9301, -140.941, -25.7435, 0.29", "-29.9354, -141.357, -25.7957, 0.29", "-29.9542, -142.483, -26.0234, 0.88", "-29.9784, -143.132, -26.2028, 1.11", "-29.9971, -143.596, -26.3355, 1.11", "-30.0645, -144.585, -26.654, 0.29", "-30.1554, -145.508, -26.9489, 0.29", "-30.3721, -146.891, -27.3709, 0.44", "-30.5484, -147.682, -27.6157, 0.66", "-30.7065, -148.267, -27.7902, 0.66", "-31.0258, -149.258, -28.065, 0.37", "-31.4941, -150.543, -28.3822, 0.37", "-31.9079, -151.757, -28.6401, 0.59", "-32.2075, -152.839, -28.8336, 1.03", "-32.3305, -153.378, -28.9297, 1.03", "-32.5217, -154.402, -29.1065, 0.74", "-32.6747, -155.441, -29.3135, 0.29", "-32.7951, -156.557, -29.5752, 0.29", "-32.8762, -157.77, -29.8654, 1.25", "-32.9024, -158.574, -30.052, 2.06", "-32.9112, -159.139, -30.1839, 2.06", "-32.9316, -160.363, -30.4595, 1.4", "-33.0026, -161.673, -30.7269, 0.81", "-33.1171, -162.641, -30.8968, 0.44", "-33.2256, -163.449, -31.0161, 0.59", "-33.3148, -164.195, -31.1153, 0.59", "-33.3869, -165.152, -31.2276, 0.59", "-33.3887, -166.251, -31.3296, 0.44", "-33.3204, -167.169, -31.4181, 0.29", "-33.238, -167.944, -31.5239, 0.74", "-33.1407, -168.758, -31.6657, 0.74", "-33.0104, -169.712, -31.8865, 0.52", "-32.886, -170.438, -32.0935, 0.52", "-32.7519, -171.129, -32.3098, 0.44", "-32.5706, -172.152, -32.623, 0.44", "-32.4821, -172.99, -32.8583, 0.37", "-32.4476, -173.871, -33.1002, 0.37", "-32.4383, -174.445, -33.2529, 0.59", "-32.3965, -175.529, -33.5383, 0.59", "-32.3379, -176.158, -33.7232, 0.59", "-32.1826, -177.118, -34.018, 0.37", "-31.9444, -178.273, -34.3897, 0.29", "-31.7822, -178.973, -34.6217, 1.18", "-31.6435, -179.577, -34.8845, 1.4", "-31.4804, -180.328, -35.2631, 1.4", "-31.3681, -180.846, -35.54, 1.4", "-31.2156, -181.474, -35.8908, 0.88", "-31.0395, -182.1, -36.2298, 0.66", "-30.5487, -183.757, -37.0849, 0.37", "-30.234, -184.77, -37.5613, 0.29", "-30.0379, -185.359, -37.8032, 0.29", "-29.8628, -185.836, -37.9851, 0.29", "-29.4434, -186.872, -38.3291, 1.03", "-29.1386, -187.488, -38.4962, 1.47", "-28.827, -188.007, -38.6021, 1.62", "-28.4659, -188.583, -38.7221, 1.33", "-28.1008, -189.201, -38.8419, 0.81", "-27.7446, -189.882, -38.9605, 0.44", "-27.2127, -191.029, -39.1484, 0.29", "-26.86, -191.897, -39.2811, 0.88", "-26.5248, -192.885, -39.4166, 0.96", "-26.3262, -193.592, -39.5133, 1.25", "-26.1898, -194.229, -39.5928, 1.4", "-26.1045, -194.829, -39.6576, 1.4", "-26.0462, -195.74, -39.7367, 1.03", "-26.0433, -196.889, -39.8322, 0.29", "-26.1286, -198.385, -39.9447, 0.29", "-26.2503, -199.388, -40.0016, 0.29", "-26.3624, -200.031, -40.0259, 0.44", "-26.5701, -200.887, -40.0356, 0.44", "-26.8543, -201.747, -40.0452, 0.52", "-27.2329, -202.658, -40.0568, 0.44", "-27.5825, -203.409, -40.0818, 0.29", "-27.8055, -203.866, -40.1126, 0.44", "-28.2128, -204.72, -40.1879, 0.44", "-28.8057, -205.999, -40.3671, 1.55", "-29.2186, -206.988, -40.5432, 2.43", "-29.4402, -207.589, -40.6739, 2.73", "-29.5897, -208.062, -40.7867, 2.43", "-29.8753, -209.139, -41.0428, 1.69", "-30.2727, -210.898, -41.4417, 0.52", "-30.384, -211.46, -41.5487, 0.52", "-30.4797, -211.944, -41.625, 0.88", "-30.6887, -212.819, -41.7631, 0.59", "-30.8648, -213.546, -41.8859, 0.59", "-31.1356, -214.576, -42.0655, 0.66", "-31.2734, -215.099, -42.1535, 0.66", "-31.4302, -215.72, -42.279, 0.52", "-31.729, -217.014, -42.6055, 0.29", "-31.897, -217.898, -42.8596, 0.29", "-31.9268, -218.113, -42.9246, 0.59", "-31.9903, -218.827, -43.1299, 0.59", "-32.0445, -219.54, -43.3104, 0.29", "-32.1532, -220.686, -43.5636, 0.29", "-32.2133, -221.52, -43.7044, 0.74", "-32.2905, -222.048, -43.8131, 0.74", "-32.4222, -222.686, -43.9509, 0.74", "-32.6074, -223.341, -44.0861, 0.59", "-32.9454, -224.395, -44.2963, 0.29", "-33.3975, -225.807, -44.57, 0.29", "-33.8532, -227.221, -44.8445, 0.37", "-34.0134, -227.729, -44.9369, 0.37", "-34.2607, -228.568, -45.0712, 0.29", "-34.5158, -229.518, -45.202, 0.44", "-34.6126, -229.948, -45.2403, 0.59", "-34.7155, -230.54, -45.2734, 0.44", "-34.7383, -231.173, -45.3064, 0.37", "-34.723, -231.91, -45.372, 0.37", "-34.6823, -232.557, -45.4474, 0.52", "-34.6407, -233.201, -45.5469, 0.74", "-34.5925, -234.121, -45.7506, 0.29", "-34.5366, -235.366, -46.0878, 1.11", "-34.5212, -235.837, -46.2294, 1.33", "-34.5178, -236.314, -46.3787, 1.33", "-34.554, -237.091, -46.618, 1.03", "-34.7007, -238.215, -46.9589, 0.59", "-34.8575, -238.839, -47.1329, 0.37", "-35.1115, -239.505, -47.2792, 0.59", "-35.2528, -239.82, -47.343, 0.59", "-35.5854, -240.466, -47.4501, 0.29", "-35.9194, -241.059, -47.5052, 0.29", "-36.1892, -241.553, -47.5265, 0.29", "-36.4188, -242.03, -47.6252, 0.29", "-36.8311, -242.883, -47.8961, 0.88", "-36.9487, -243.143, -47.9892, 1.18", "-37.0677, -243.426, -48.1027, 1.18", "-37.3583, -244.128, -48.3967, 0.74", "-37.9469, -245.561, -49.023, 0.29", "-38.2217, -246.228, -49.3011, 0.29", "-38.5744, -247.061, -49.6173, 0.29", "-38.9904, -248.023, -49.9658, 0.96", "-39.2175, -248.542, -50.1357, 1.11", "-39.5913, -249.423, -50.3763, 0.74", "-39.8646, -250.194, -50.5436, 0.59", "-39.979, -250.586, -50.6238, 0.81", "-40.212, -251.438, -50.7794, 0.81", "-40.4096, -252.169, -50.8844, 0.44", "-40.6977, -253.169, -51.0238, 0.29", "-41.0358, -254.202, -51.1829, 0.29", "-41.4748, -255.466, -51.4083, 1.62", "-41.6517, -256.022, -51.5144, 1.84", "-41.7768, -256.527, -51.6153, 1.99", "-41.986, -257.405, -51.8463, 1.77", "-42.2021, -258.24, -52.0976, 1.11", "-42.4594, -259.178, -52.3878, 0.44", "-42.6923, -260.068, -52.6746, 0.44", "-42.9486, -261.21, -53.0215, 0.37", "-43.2063, -262.748, -53.4311, 0.29", "-43.2814, -263.271, -53.5598, 0.29", "-43.429, -264.362, -53.8117, 0.66", "-43.543, -265.059, -53.9818, 0.81", "-43.7001, -265.927, -54.2058, 0.37", "-43.8865, -267.206, -54.5064, 0.29", "-44.0075, -268.975, -54.8732, 1.4", "-44.0188, -269.568, -54.9889, 1.99", "-44.0086, -270.273, -55.1047, 2.21", "-43.9768, -271.179, -55.2039, 1.47", "-43.8531, -272.73, -55.2508, 0.29", "-43.7264, -273.52, -55.207, 0.29", "-43.3854, -274.662, -55.0298, 0.52", "-43.1509, -275.258, -54.9131, 0.66", "-42.7404, -276.087, -54.7154, 0.44", "-42.0814, -277.272, -54.4154, 0.37", "-41.5824, -278.084, -54.2391, 0.37", "-40.726, -279.295, -53.912, 1.25", "-40.4127, -279.7, -53.796, 1.84", "-39.8121, -280.441, -53.546, 1.92", "-39.0466, -281.326, -53.216, 1.33", "-38.3672, -282.105, -52.92, 1.11", "-36.7716, -284.028, -52.2142, 0.29", "-36.0874, -284.867, -51.8957, 0.29", "-35.0916, -286.032, -51.4243, 0.29", "-34.5019, -286.696, -51.143, 0.29", "-33.7817, -287.487, -50.8192, 0.52", "-33.308, -288.026, -50.6284, 0.66", "-32.1752, -289.361, -50.2607, 0.29", "-31.391, -290.265, -50.0112, 1.11", "-30.8019, -290.95, -49.8328, 1.11", "-29.4758, -292.537, -49.3465, 0.22", "-29.0441, -293.047, -49.1711, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-33.6119, -83.7958, 0.575039, 0.96", "-34.6503, -84.9727, 1.05553, 0.96", "-35.5201, -85.9049, 1.44681, 0.96", "-36.2563, -86.6421, 1.79176, 1.18", "-36.943, -87.2557, 2.07984, 1.18", "-38.0051, -88.0918, 2.46751, 0.74", "-38.8222, -88.6472, 2.72693, 0.74", "-39.4521, -89.0023, 2.86249, 0.74", "-40.0473, -89.2682, 2.93886, 0.74", "-41.197, -89.7635, 3.03684, 0.66", "-41.7145, -90.0487, 3.05653, 0.66", "-42.3578, -90.5379, 3.07332, 0.66", "-42.8765, -91.032, 3.09599, 0.81", "-43.4019, -91.5779, 3.14299, 0.96", "-44.1583, -92.3907, 3.25236, 1.11", "-44.9031, -93.2005, 3.42461, 1.11", "-45.4972, -93.8622, 3.57167, 1.33", "-46.0141, -94.4239, 3.69904, 1.47", "-46.7692, -95.1472, 3.88711, 1.47", "-47.4572, -95.7062, 4.06219, 1.4", "-48.2255, -96.1954, 4.27693, 1.25" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "149.645, -103.325, -131.149, 0.52", "150.638, -102.419, -131.687, 0.52", "151.205, -101.817, -131.996, 0.29", "151.851, -101.094, -132.29, 0.22", "152.496, -100.302, -132.646, 0.22", "153.058, -99.5712, -133.004, 0.22", "153.636, -98.7648, -133.393, 0.22", "154.2, -97.8789, -133.78, 0.88", "154.62, -97.1291, -134.08, 1.18", "155.352, -95.7051, -134.602, 1.47", "155.606, -95.1895, -134.778, 1.55", "156.484, -93.41, -135.381, 0.22", "156.986, -92.4667, -135.734, 0.22", "157.661, -91.3559, -136.157, 0.88", "158.153, -90.601, -136.45, 1.4", "158.467, -90.1589, -136.607, 1.25", "158.974, -89.474, -136.859, 0.81", "159.855, -88.3388, -137.312, 0.22", "161.121, -86.7776, -137.977, 0.22", "161.897, -85.8835, -138.391, 0.66", "162.392, -85.3285, -138.654, 0.81", "162.707, -84.9668, -138.816, 0.66", "163.012, -84.6016, -138.958, 0.52" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "149.645, -103.325, -131.149, 0.29", "149.65, -101.331, -131.286, 0.29", "149.667, -99.9233, -131.392, 0.29", "149.672, -98.8754, -131.461, 0.52", "149.671, -98.2766, -131.49, 0.66", "149.673, -97.1424, -131.538, 0.22", "149.672, -96.3962, -131.567, 0.59", "149.671, -95.6233, -131.581, 0.74", "149.675, -94.9812, -131.583, 0.81", "149.7, -94.006, -131.582, 0.52", "149.758, -92.839, -131.58, 0.22", "149.815, -92.0369, -131.582, 0.29", "149.885, -91.3819, -131.597, 0.29", "149.979, -90.7409, -131.635, 0.15", "150.141, -89.9006, -131.721, 0.29", "150.268, -89.3187, -131.799, 0.37", "150.419, -88.6377, -131.902, 0.22", "150.611, -87.7217, -132.052, 0.22", "150.755, -86.9258, -132.185, 0.74", "150.848, -86.336, -132.281, 0.88", "150.949, -85.6171, -132.393, 0.52", "151.102, -84.4282, -132.576, 0.22", "151.18, -83.6949, -132.679, 0.44", "151.206, -83.2529, -132.73, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "57.9898, -172.962, -36.1627, 0.37", "58.3279, -173.956, -36.5202, 0.37", "58.6096, -174.68, -36.7953, 0.52", "58.8624, -175.274, -37.0298, 0.59", "59.2668, -176.19, -37.3903, 0.22", "59.5239, -176.749, -37.6134, 0.22", "59.7598, -177.251, -37.8143, 0.44", "60.0783, -177.839, -38.0534, 0.44", "60.379, -178.345, -38.2851, 0.37", "60.7368, -178.88, -38.5692, 0.29", "61.0984, -179.369, -38.8712, 0.52", "61.346, -179.689, -39.0848, 0.74", "61.7172, -180.18, -39.4121, 0.74", "62.1209, -180.732, -39.7708, 0.44", "62.3662, -181.068, -39.9908, 0.44", "62.8151, -181.675, -40.395, 0.29", "63.1464, -182.14, -40.7018, 0.29", "63.3396, -182.421, -40.8836, 0.66", "63.5637, -182.764, -41.0903, 0.81", "63.7154, -182.99, -41.2278, 0.81", "64.2417, -183.704, -41.696, 0.29", "64.6317, -184.157, -42.0392, 0.29", "64.9416, -184.482, -42.3126, 0.44", "65.4382, -184.972, -42.7504, 0.29", "65.8539, -185.353, -43.1051, 0.37", "66.5084, -185.907, -43.6622, 0.37", "67.0575, -186.334, -44.127, 0.37", "67.3818, -186.56, -44.4008, 0.59", "67.6075, -186.697, -44.5968, 0.59", "68.2236, -187.028, -45.1298, 0.29", "68.8354, -187.334, -45.6484, 1.25", "69.1407, -187.478, -45.9037, 1.55", "69.5858, -187.674, -46.2676, 1.55", "70.6549, -188.122, -47.1158, 0.29", "71.3403, -188.427, -47.6469, 0.52", "71.7901, -188.633, -47.9908, 0.59", "72.2713, -188.866, -48.3226, 0.37", "72.6711, -189.072, -48.583, 0.22", "73.3241, -189.439, -48.9887, 0.22", "74.0949, -189.889, -49.4473, 0.22", "74.6103, -190.199, -49.7517, 0.22", "75.5396, -190.768, -50.2868, 0.59", "76.1024, -191.118, -50.6018, 0.59", "76.6015, -191.441, -50.8796, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "57.9898, -172.962, -36.1627, 0.59", "58.0015, -173.595, -36.3158, 0.59", "58.0544, -174.413, -36.333, 0.44", "58.1303, -175.362, -36.3122, 0.29", "58.2176, -176.646, -36.3111, 0.59", "58.2563, -177.289, -36.3221, 0.66", "58.331, -178.504, -36.3632, 0.44", "58.5515, -181.339, -36.5547, 0.29", "58.63, -182.224, -36.6507, 0.29", "58.7636, -183.34, -36.825, 0.59", "58.8792, -184.045, -36.9734, 0.74", "58.9714, -184.531, -37.0965, 0.74", "59.1707, -185.565, -37.3975, 0.44", "59.3338, -186.606, -37.7791, 0.29", "59.4395, -187.505, -38.0462, 0.29", "59.5283, -188.506, -38.3126, 0.59", "59.5895, -189.362, -38.5355, 0.44", "59.6371, -190.077, -38.7121, 0.44", "59.6877, -190.814, -38.8758, 0.44", "59.7805, -191.743, -39.0956, 0.37", "59.9326, -192.845, -39.3711, 0.37", "60.0546, -193.386, -39.5132, 0.66", "60.2785, -193.943, -39.6669, 0.66", "60.4796, -194.288, -39.7649, 0.52", "60.9152, -194.943, -39.9439, 0.74", "61.1156, -195.232, -40.0173, 0.74", "61.6144, -196.013, -40.193, 0.29", "62.0975, -196.837, -40.3739, 0.29", "62.4626, -197.468, -40.5136, 0.29", "63.0056, -198.41, -40.7254, 0.22", "63.3911, -199.079, -40.8758, 0.22", "63.9344, -200.018, -41.0869, 0.44", "64.3577, -200.746, -41.2509, 0.59", "64.6309, -201.284, -41.3681, 0.59", "67.7806, -211.158, -44.7704, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-48.2255, -96.1954, 4.27693, 0.88", "-48.562, -96.3591, 4.38803, 0.88", "-49.4844, -96.8527, 4.69498, 0.74", "-50.3784, -97.3501, 4.99774, 0.88", "-51.1177, -97.7704, 5.20713, 0.52", "-52.0768, -98.3115, 5.50946, 0.66", "-52.9654, -98.7991, 5.80567, 0.74", "-53.8385, -99.2446, 6.10555, 0.88", "-54.6369, -99.6097, 6.38685, 1.03", "-55.8032, -100.099, 6.82414, 1.33", "-56.9233, -100.535, 7.25698, 1.4", "-57.9879, -100.905, 7.66875, 0.66", "-58.6705, -101.129, 7.94531, 0.66", "-59.336, -101.375, 8.24564, 0.59", "-60.0952, -101.739, 8.6246, 0.37", "-60.5843, -102.038, 8.88766, 0.88", "-61.2824, -102.557, 9.21894, 0.96", "-61.761, -102.969, 9.45787, 0.96", "-62.4471, -103.622, 9.82845, 0.66", "-62.9584, -104.134, 10.1086, 0.66", "-63.6734, -104.838, 10.4777, 0.66", "-64.2774, -105.433, 10.7848, 0.74", "-64.6701, -105.823, 10.9857, 0.96", "-65.3723, -106.517, 11.3342, 0.74", "-65.991, -107.175, 11.6466, 0.74", "-66.6952, -108.053, 12.0448, 0.96", "-67.1405, -108.716, 12.3319, 1.03", "-67.5404, -109.354, 12.6193, 0.81", "-67.9711, -110.018, 12.9543, 0.44", "-68.6435, -111.038, 13.5279, 0.44", "-69.1005, -111.759, 13.9862, 0.44", "-69.5162, -112.457, 14.4653, 0.44", "-70.1489, -113.618, 15.271, 0.44", "-70.6757, -114.718, 15.9984, 0.81", "-70.8952, -115.248, 16.3303, 0.81", "-71.1548, -115.956, 16.7221, 0.88", "-71.2888, -116.35, 16.9109, 0.66", "-71.5865, -117.276, 17.2774, 0.37", "-71.8757, -118.152, 17.5959, 0.29", "-72.1676, -118.759, 17.8423, 0.44", "-72.7461, -119.421, 18.2434, 0.29", "-73.2493, -119.793, 18.5686, 0.29", "-73.8268, -120.127, 18.9612, 0.37", "-74.7499, -120.539, 19.6342, 0.37", "-75.3953, -120.822, 20.1666, 0.37", "-76.1291, -121.189, 20.8203, 0.81", "-76.6079, -121.466, 21.2561, 1.03", "-77.0156, -121.805, 21.6767, 1.03", "-77.3162, -122.15, 22.0302, 0.96", "-77.9611, -123.143, 22.892, 0.52", "-78.2639, -123.708, 23.3615, 0.52", "-78.6344, -124.465, 23.9881, 1.77", "-79.2225, -125.667, 24.9614, 0.66", "-79.5765, -126.283, 25.4554, 0.66", "-80.0923, -127.056, 26.1082, 0.59", "-80.547, -127.67, 26.6436, 0.74", "-80.9562, -128.21, 27.1435, 0.74", "-81.3489, -128.694, 27.6062, 0.74", "-82.1101, -129.488, 28.3835, 0.37", "-83.1068, -130.505, 29.3453, 0.37", "-83.6064, -131.031, 29.8118, 0.44", "-84.1006, -131.63, 30.3003, 0.44", "-84.6406, -132.35, 30.8473, 0.44", "-85.0198, -132.872, 31.2232, 0.66", "-85.3319, -133.323, 31.515, 0.74", "-85.6597, -133.802, 31.776, 0.74", "-86.3348, -134.776, 32.2804, 0.81", "-87.0411, -135.798, 32.7697, 0.44", "-87.7337, -136.839, 33.2412, 0.44", "-88.3547, -137.828, 33.6506, 0.37", "-88.9964, -138.911, 34.0918, 0.37", "-89.3771, -139.579, 34.352, 1.18", "-89.7005, -140.152, 34.5546, 1.62", "-90.1871, -141.057, 34.8809, 1.84", "-90.6464, -141.921, 35.2121, 1.03", "-91.2219, -142.988, 35.6358, 0.74", "-91.4671, -143.478, 35.8283, 0.74", "-91.914, -144.495, 36.2082, 0.44", "-92.3573, -145.641, 36.6185, 0.59", "-92.6213, -146.417, 36.8803, 0.59", "-92.9312, -147.388, 37.1859, 0.37", "-93.3022, -148.579, 37.5347, 0.37", "-93.6595, -149.685, 37.8652, 0.37", "-93.923, -150.441, 38.0863, 0.81", "-94.2031, -151.096, 38.2744, 0.96", "-94.5995, -151.844, 38.4861, 1.18", "-95.3182, -152.992, 38.8361, 0.44", "-95.9107, -153.842, 39.1318, 0.44", "-96.7069, -154.936, 39.6121, 0.44", "-97.3262, -155.746, 40.0361, 0.44", "-98.0093, -156.615, 40.5389, 0.59", "-98.4754, -157.22, 40.9245, 0.74", "-99.0573, -157.993, 41.4469, 0.96", "-99.8895, -159.078, 42.2241, 0.59", "-100.395, -159.734, 42.6992, 0.44", "-100.939, -160.492, 43.2298, 0.37", "-101.35, -161.121, 43.6509, 0.52", "-101.716, -161.725, 44.0027, 0.52", "-102.416, -162.939, 44.6354, 0.37", "-102.899, -163.807, 45.0639, 0.59", "-103.235, -164.426, 45.4029, 0.74", "-103.69, -165.232, 45.8773, 0.96", "-103.948, -165.701, 46.1484, 0.88", "-104.236, -166.257, 46.4657, 0.81", "-104.674, -167.079, 46.9703, 0.88", "-105.27, -168.061, 47.5979, 0.37", "-105.878, -168.98, 48.1929, 0.37", "-106.451, -169.794, 48.718, 0.37", "-106.984, -170.518, 49.1982, 0.66", "-107.742, -171.491, 49.8637, 0.52", "-108.292, -172.113, 50.319, 0.37", "-108.914, -172.685, 50.773, 0.59", "-109.541, -173.163, 51.2339, 0.59", "-110.346, -173.686, 51.8628, 0.29", "-110.836, -174.001, 52.2938, 0.29", "-111.34, -174.361, 52.7697, 0.29", "-112.155, -175.014, 53.6047, 0.37", "-113.116, -175.858, 54.6234, 0.52", "-113.951, -176.665, 55.5417, 0.74", "-114.746, -177.488, 56.4167, 0.59", "-115.291, -178.074, 56.9903, 0.44", "-115.641, -178.451, 57.3267, 0.44", "-116.14, -179.003, 57.7601, 0.37", "-116.692, -179.66, 58.1634, 0.52", "-117.259, -180.41, 58.5581, 0.74", "-117.925, -181.379, 59.0448, 0.44", "-118.332, -182.098, 59.4023, 0.37", "-118.645, -182.854, 59.7857, 0.37", "-118.954, -183.88, 60.2916, 0.59", "-119.076, -184.486, 60.5688, 0.59", "-119.159, -185.341, 60.9312, 0.59", "-119.164, -186.333, 61.3387, 0.66", "-119.122, -187.729, 61.8893, 0.66", "-119.092, -188.84, 62.2942, 0.37", "-119.068, -189.544, 62.5243, 0.37", "-118.997, -190.423, 62.77, 0.37", "-118.899, -191.035, 62.9246, 0.37", "-118.672, -192.19, 63.1881, 0.59", "-118.541, -192.755, 63.2852, 0.74", "-118.336, -193.526, 63.4215, 0.74", "-118.075, -194.719, 63.6576, 0.44", "-117.985, -195.337, 63.7883, 0.44", "-125.261, -202.767, 66.6422, 0.44" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-48.2255, -96.1954, 4.27693, 0.81", "-50.4984, -97.7946, 3.94758, 0.81", "-51.3891, -98.3273, 3.81833, 0.74", "-51.9189, -98.5761, 3.74039, 0.81", "-52.5645, -98.807, 3.63985, 0.59", "-53.4453, -99.0697, 3.52806, 0.44", "-53.78, -99.1568, 3.49959, 0.44", "-54.8838, -99.301, 3.63775, 0.52", "-55.4551, -99.2916, 3.68334, 0.74", "-56.1079, -99.2713, 3.71994, 0.59", "-56.7338, -99.2639, 3.75895, 0.59", "-57.2389, -99.2869, 3.80017, 1.03", "-57.7814, -99.3617, 3.89103, 1.18", "-58.3018, -99.4775, 4.03659, 1.18", "-58.9599, -99.6361, 4.23449, 0.52", "-59.4809, -99.7473, 4.38243, 0.37", "-59.9079, -99.8189, 4.48953, 0.29", "-60.3505, -99.8791, 4.58556, 0.29", "-60.8318, -99.9302, 4.68565, 0.88", "-61.4289, -99.9621, 4.81027, 1.11", "-61.9632, -99.9372, 4.87902, 1.4", "-62.4108, -99.9259, 4.88484, 1.55", "-62.7915, -99.9389, 4.84217, 1.55", "-63.4665, -100.001, 4.72392, 0.59", "-63.8495, -100.057, 4.65123, 0.59", "-64.861, -100.259, 4.48256, 0.44", "-66.0109, -100.521, 4.29379, 0.29", "-67.0661, -100.784, 4.07556, 0.52", "-67.5444, -100.903, 3.92173, 0.66", "-68.1038, -101.049, 3.70608, 0.66", "-68.4834, -101.158, 3.55144, 0.44", "-69.4131, -101.424, 3.16428, 0.37", "-71.4473, -101.932, 2.30252, 2.8", "-74.0432, -102.52, 1.09674, 0.74", "-75.2062, -102.751, 0.502948, 0.74", "-76.1821, -102.899, -0.0499787, 0.52", "-77.3102, -103.005, -0.73401, 1.11", "-77.7794, -103.016, -1.02669, 1.25", "-79.7615, -102.809, -2.31194, 0.37", "-81.017, -102.507, -3.13664, 1.03", "-82.3163, -102.032, -4.03071, 1.25", "-83.0861, -101.671, -4.58384, 0.37", "-83.6525, -101.367, -4.99253, 1.84", "-84.6746, -100.768, -5.69566, 0.52", "-84.9222, -100.598, -5.84434, 0.37", "-85.4934, -100.206, -6.14212, 0.74", "-86.4252, -99.6359, -6.54965, 0.44", "-87.2186, -99.2357, -6.83582, 0.44", "-87.7732, -99.0049, -6.98835, 0.44", "-88.3237, -98.8139, -7.08846, 1.11", "-88.8086, -98.6583, -7.15297, 1.55", "-89.3393, -98.5001, -7.19569, 1.69", "-90.8534, -98.0887, -7.21305, 0.29", "-91.5733, -97.9132, -7.20065, 0.44", "-92.1284, -97.7881, -7.19829, 0.44", "-92.6006, -97.6862, -7.20378, 1.33", "-93.0569, -97.5834, -7.20255, 1.55", "-94.0814, -97.3467, -7.19793, 0.29", "-94.5513, -97.2397, -7.19263, 0.52", "-95.335, -97.077, -7.18371, 0.29", "-95.7946, -96.9654, -7.18983, 1.03", "-96.1957, -96.8567, -7.20241, 1.18", "-96.5705, -96.7406, -7.21406, 1.18", "-97.5014, -96.4263, -7.26426, 0.29", "-98.156, -96.2175, -7.30657, 0.29", "-99.2141, -95.9004, -7.34501, 0.88", "-99.737, -95.75, -7.36406, 0.66", "-100.093, -95.6499, -7.37852, 0.66", "-100.511, -95.5227, -7.38759, 0.44", "-101.054, -95.3566, -7.40057, 0.29", "-101.606, -95.1906, -7.39798, 0.74", "-101.841, -95.1253, -7.39062, 0.88", "-102.883, -94.8078, -7.34605, 0.29", "-103.575, -94.5844, -7.30012, 1.47", "-104.123, -94.3977, -7.24852, 1.92", "-104.623, -94.2246, -7.18885, 1.92", "-105.733, -93.8439, -7.03146, 0.22", "-106.499, -93.5858, -6.8904, 0.22", "-106.988, -93.4227, -6.76896, 0.59", "-107.245, -93.3385, -6.69201, 0.59", "-107.943, -93.0901, -6.43693, 0.22", "-108.422, -92.9011, -6.23092, 0.81", "-108.631, -92.809, -6.1341, 1.03", "-108.875, -92.6919, -6.02036, 1.03", "-109.549, -92.3394, -5.72108, 0.22", "-109.902, -92.1451, -5.56205, 0.44", "-111.057, -91.4599, -5.04133, 0.22", "-111.427, -91.2341, -4.88253, 0.22", "-111.93, -90.9219, -4.67032, 1.03", "-112.279, -90.7003, -4.52345, 1.25" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "76.6015, -191.441, -50.8796, 0.22", "77.4867, -192.47, -51.6998, 0.22", "77.8705, -192.916, -52.0555, 0.22", "78.1534, -193.244, -52.3176, 0.44", "78.3527, -193.476, -52.5022, 0.44", "85.3794, -199.991, -57.5505, 0.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "76.6015, -191.441, -50.8796, 0.59", "77.4657, -191.165, -51.5456, 0.59", "77.9388, -191.014, -51.91, 0.66", "78.1364, -190.951, -52.0623, 0.66", "87.7871, -188.412, -57.9366, 0.66", "97.7475, -186.044, -63.3383, 0.66", "108.501, -183.535, -66.8162, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_17", "dend_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_17", "dend_0", "dend_50", "dend_47", "dend_45", "dend_18", "dend_10", "dend_1", "dend_56", "dend_51", "dend_49", "dend_48", "dend_38", "dend_19", "dend_12", "dend_11", "dend_5", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_42", "dend_39", "dend_27", "dend_20", "dend_14", "dend_13", "dend_9", "dend_6", "dend_4", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_44", "dend_43", "dend_41", "dend_40", "dend_37", "dend_28", "dend_26", "dend_21", "dend_16", "dend_15", "dend_8", "dend_7", "dend_34", "dend_29", "dend_25", "dend_22", "dend_36", "dend_35", "dend_31", "dend_30", "dend_24", "dend_23", "dend_33", "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_59", "dend_59", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_44", "dend_43", "dend_41", "dend_41", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_BTC_eb8366ca09_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_17
create dend_45
public dend_45
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_38, id: dend_38, parent: dend_18
create dend_38
public dend_38
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_27
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_43, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.4500003629291099)
    connect dend_17(0), soma_0(0.4500003629291099)
    connect dend_0(0), soma_0(0.4500003629291099)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_38(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.701782, -14.5938, 2.84454, 2.73269 ) }
    soma_0 { pt3dadd( 0.624028, -13.2198, 2.58654, 4.41229 ) }
    soma_0 { pt3dadd( 0.546274, -11.8458, 2.32855, 5.84991 ) }
    soma_0 { pt3dadd( 0.46852, -10.4718, 2.07055, 7.31637 ) }
    soma_0 { pt3dadd( 0.390766, -9.09779, 1.81255, 8.68275 ) }
    soma_0 { pt3dadd( 0.313011, -7.72379, 1.55455, 10.1324 ) }
    soma_0 { pt3dadd( 0.235257, -6.34979, 1.29656, 11.1056 ) }
    soma_0 { pt3dadd( 0.157503, -4.97579, 1.03856, 11.7054 ) }
    soma_0 { pt3dadd( 0.0797487, -3.60179, 0.780562, 12.0256 ) }
    soma_0 { pt3dadd( 0.00199453, -2.22779, 0.522565, 12.4948 ) }
    soma_0 { pt3dadd( -0.0757597, -0.853785, 0.264567, 12.7838 ) }
    soma_0 { pt3dadd( -0.153514, 0.520216, 0.00657008, 12.9275 ) }
    soma_0 { pt3dadd( -0.231268, 1.89422, -0.251427, 12.8186 ) }
    soma_0 { pt3dadd( -0.309022, 3.26822, -0.509424, 12.3668 ) }
    soma_0 { pt3dadd( -0.386777, 4.64222, -0.767422, 11.8063 ) }
    soma_0 { pt3dadd( -0.464531, 6.01622, -1.02542, 10.8607 ) }
    soma_0 { pt3dadd( -0.542285, 7.39022, -1.28342, 9.60756 ) }
    soma_0 { pt3dadd( -0.620039, 8.76422, -1.54141, 8.32491 ) }
    soma_0 { pt3dadd( -0.697793, 10.1382, -1.79941, 6.57632 ) }
    soma_0 { pt3dadd( -0.775548, 11.5122, -2.05741, 4.5422 ) }
    soma_0 { pt3dadd( -0.853302, 12.8862, -2.3154, 2.90642 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.99768, 4.39237, 12.0608, 1.77 ) }
    dend_46 { pt3dadd( -4.205, 5.32454, 12.3633, 1.77 ) }
    dend_46 { pt3dadd( -4.57909, 6.76936, 13.0222, 1.55 ) }
    dend_46 { pt3dadd( -4.87682, 7.73542, 13.5779, 1.55 ) }
    dend_46 { pt3dadd( -5.31509, 8.83121, 14.3896, 1.4 ) }
    dend_46 { pt3dadd( -6.11106, 10.3306, 15.6978, 1.4 ) }
    dend_46 { pt3dadd( -6.76728, 11.3073, 16.6462, 1.4 ) }
    dend_46 { pt3dadd( -7.51395, 12.0714, 17.569, 1.69 ) }
    dend_46 { pt3dadd( -8.16378, 12.5423, 18.24, 1.69 ) }
    dend_46 { pt3dadd( -9.41152, 13.236, 19.2762, 1.4 ) }
    dend_46 { pt3dadd( -10.5195, 13.7413, 20.0404, 1.33 ) }
    dend_46 { pt3dadd( -11.5182, 14.1633, 20.4775, 1.18 ) }
    dend_46 { pt3dadd( -13.1031, 14.8881, 20.793, 1.18 ) }
    dend_46 { pt3dadd( -14.2102, 15.4758, 20.8249, 1.18 ) }
    dend_46 { pt3dadd( -15.3159, 16.1627, 20.8004, 1.33 ) }
    dend_46 { pt3dadd( -16.7577, 17.2619, 20.6917, 1.4 ) }
    dend_46 { pt3dadd( -19.2163, 19.6422, 20.4634, 1.62 ) }
    dend_46 { pt3dadd( -20.1211, 20.7628, 20.3937, 1.69 ) }
    dend_46 { pt3dadd( -21.0353, 22.1045, 20.3237, 1.33 ) }
    dend_46 { pt3dadd( -22.1678, 24.0743, 20.2895, 1.62 ) }
    dend_46 { pt3dadd( -22.6937, 25.2682, 20.3737, 1.62 ) }
    dend_46 { pt3dadd( -23.0735, 26.5764, 20.7489, 1.84 ) }
    dend_46 { pt3dadd( -23.2086, 27.2817, 21.2237, 1.84 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 44/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.09232, -14.8961, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.09232, -14.8961, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.19644, -16.2386, 2.30081, 3.98 ) }
    dend_17 { pt3dadd( 1.33004, -17.9611, 2.30081, 3.76 ) }
    dend_17 { pt3dadd( 1.46313, -19.6772, 2.30081, 3.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.877678, 13.3174, -4.94919, 2.58 ) }
    dend_0 { pt3dadd( -0.877678, 13.3174, -4.94919, 2.58 ) }
    dend_0 { pt3dadd( -0.287388, 15.2557, -4.5578, 2.14 ) }
    dend_0 { pt3dadd( 0.0383926, 16.3657, -4.32163, 2.14 ) }
    dend_0 { pt3dadd( 0.358554, 17.5496, -4.07434, 1.92 ) }
    dend_0 { pt3dadd( 0.794084, 19.3696, -3.68915, 1.69 ) }
    dend_0 { pt3dadd( 1.03384, 20.5237, -3.46167, 1.69 ) }
    dend_0 { pt3dadd( 1.20822, 21.6334, -3.27109, 1.69 ) }
    dend_0 { pt3dadd( 1.357, 23.276, -3.0535, 1.92 ) }
    dend_0 { pt3dadd( 1.37313, 24.2717, -3.00025, 2.06 ) }
    dend_0 { pt3dadd( 1.29227, 25.7427, -3.12468, 1.99 ) }
    dend_0 { pt3dadd( 1.19484, 26.7081, -3.35443, 1.84 ) }
    dend_0 { pt3dadd( 1.05773, 28.0971, -3.82828, 1.69 ) }
    dend_0 { pt3dadd( 0.927365, 29.2521, -4.29254, 1.77 ) }
    dend_0 { pt3dadd( 0.756125, 30.6898, -4.95773, 1.69 ) }
    dend_0 { pt3dadd( 0.530342, 32.7801, -6.03708, 1.92 ) }
    dend_0 { pt3dadd( 0.384164, 34.4132, -6.98376, 2.14 ) }
    dend_0 { pt3dadd( 0.307517, 35.8476, -7.84275, 2.43 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 67/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.853302, 12.8862, -2.3154, 0.892431 ) }
    axon_0 { pt3dadd( -1.70079, 27.8622, -2.3154, 0.892431 ) }
    axon_0 { pt3dadd( -2.54828, 42.8383, -2.3154, 0.892431 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 70/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -23.2086, 27.2817, 21.2237, 0.66 ) }
    dend_50 { pt3dadd( -24.848, 28.2876, 23.0094, 0.66 ) }
    dend_50 { pt3dadd( -25.6333, 28.8587, 23.7331, 0.59 ) }
    dend_50 { pt3dadd( -26.6232, 29.6291, 24.5279, 0.59 ) }
    dend_50 { pt3dadd( -27.3581, 30.1726, 25.0433, 0.52 ) }
    dend_50 { pt3dadd( -28.2473, 30.768, 25.5991, 0.66 ) }
    dend_50 { pt3dadd( -28.8717, 31.1615, 25.9542, 0.52 ) }
    dend_50 { pt3dadd( -29.4871, 31.5756, 26.2636, 0.52 ) }
    dend_50 { pt3dadd( -30.2899, 32.0616, 26.75, 0.44 ) }
    dend_50 { pt3dadd( -30.91, 32.3624, 27.2035, 0.66 ) }
    dend_50 { pt3dadd( -31.6253, 32.6113, 27.8237, 0.52 ) }
    dend_50 { pt3dadd( -32.2676, 32.792, 28.4337, 0.74 ) }
    dend_50 { pt3dadd( -33.9692, 33.1997, 30.1976, 1.03 ) }
    dend_50 { pt3dadd( -34.9416, 33.4047, 31.3122, 0.66 ) }
    dend_50 { pt3dadd( -35.7738, 33.5747, 32.3816, 0.59 ) }
    dend_50 { pt3dadd( -36.3672, 33.7174, 33.2484, 0.74 ) }
    dend_50 { pt3dadd( -44.633, 37.6804, 39.4175, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 87/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -23.2086, 27.2817, 21.2237, 0.88 ) }
    dend_47 { pt3dadd( -23.4333, 30.0746, 21.9448, 0.88 ) }
    dend_47 { pt3dadd( -23.5572, 31.0465, 22.1417, 0.88 ) }
    dend_47 { pt3dadd( -23.7626, 32.2636, 22.3875, 0.88 ) }
    dend_47 { pt3dadd( -24.0355, 33.6588, 22.6711, 0.88 ) }
    dend_47 { pt3dadd( -24.2929, 34.9855, 22.962, 0.81 ) }
    dend_47 { pt3dadd( -24.526, 36.2362, 23.2712, 0.81 ) }
    dend_47 { pt3dadd( -24.7112, 37.0897, 23.4404, 1.03 ) }
    dend_47 { pt3dadd( -24.9674, 38.0789, 23.6496, 0.81 ) }
    dend_47 { pt3dadd( -25.3059, 39.1634, 23.8889, 0.96 ) }
    dend_47 { pt3dadd( -25.6123, 40.0449, 24.0862, 0.88 ) }
    dend_47 { pt3dadd( -25.97, 41.0921, 24.3152, 0.74 ) }
    dend_47 { pt3dadd( -26.2077, 41.8071, 24.4745, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_47 { pt3dadd( -26.4611, 42.6445, 24.6581, 0.74 ) }
    dend_47 { pt3dadd( -26.71, 43.6331, 24.8482, 0.81 ) }
    dend_47 { pt3dadd( -26.8672, 44.4028, 24.9932, 0.81 ) }
    dend_47 { pt3dadd( -27.0031, 45.2912, 25.1722, 0.88 ) }
    dend_47 { pt3dadd( -27.0818, 46.2406, 25.3814, 1.03 ) }
    dend_47 { pt3dadd( -27.0945, 47.3371, 25.6569, 0.96 ) }
    dend_47 { pt3dadd( -27.0338, 48.7015, 26.0112, 1.03 ) }
    dend_47 { pt3dadd( -26.9773, 49.6738, 26.2502, 1.03 ) }
    dend_47 { pt3dadd( -26.9124, 51.0989, 26.5901, 1.11 ) }
    dend_47 { pt3dadd( -26.9141, 52.0101, 26.7592, 0.96 ) }
    dend_47 { pt3dadd( -26.9842, 53.1547, 26.9082, 0.88 ) }
    dend_47 { pt3dadd( -27.1659, 54.4389, 27.0491, 0.74 ) }
    dend_47 { pt3dadd( -27.4115, 55.5289, 27.1656, 0.81 ) }
    dend_47 { pt3dadd( -27.6435, 56.2733, 27.2696, 0.96 ) }
    dend_47 { pt3dadd( -28.213, 57.6769, 27.5155, 1.11 ) }
    dend_47 { pt3dadd( -28.5376, 58.3311, 27.6696, 1.11 ) }
    dend_47 { pt3dadd( -29.0783, 59.2732, 27.9399, 0.96 ) }
    dend_47 { pt3dadd( -29.5976, 60.1301, 28.2239, 0.74 ) }
    dend_47 { pt3dadd( -30.1644, 61.1071, 28.5707, 0.74 ) }
    dend_47 { pt3dadd( -30.4748, 61.6633, 28.7644, 0.66 ) }
    dend_47 { pt3dadd( -30.7996, 62.2604, 28.9682, 0.59 ) }
    dend_47 { pt3dadd( -31.3336, 63.241, 29.2179, 0.81 ) }
    dend_47 { pt3dadd( -31.6034, 63.7426, 29.3142, 0.96 ) }
    dend_47 { pt3dadd( -31.9311, 64.3855, 29.4005, 0.96 ) }
    dend_47 { pt3dadd( -32.3683, 65.3686, 29.4834, 0.59 ) }
    dend_47 { pt3dadd( -32.8301, 66.6874, 29.5594, 0.59 ) }
    dend_47 { pt3dadd( -33.0899, 67.7251, 29.5944, 0.66 ) }
    dend_47 { pt3dadd( -33.2313, 68.8034, 29.6156, 0.96 ) }
    dend_47 { pt3dadd( -33.2455, 69.6316, 29.6204, 1.03 ) }
    dend_47 { pt3dadd( -33.1751, 70.5318, 29.6544, 0.81 ) }
    dend_47 { pt3dadd( -32.9925, 71.6619, 29.7345, 0.52 ) }
    dend_47 { pt3dadd( -32.8229, 72.4871, 29.8522, 0.37 ) }
    dend_47 { pt3dadd( -32.7016, 73.265, 30.0509, 0.37 ) }
    dend_47 { pt3dadd( -32.7125, 73.8107, 30.2599, 0.44 ) }
    dend_47 { pt3dadd( -32.9615, 74.9593, 30.8789, 0.44 ) }
    dend_47 { pt3dadd( -33.2106, 75.6311, 31.2536, 0.66 ) }
    dend_47 { pt3dadd( -33.5746, 76.4837, 31.678, 1.03 ) }
    dend_47 { pt3dadd( -33.8221, 77.1277, 31.9371, 1.18 ) }
    dend_47 { pt3dadd( -34.0308, 77.9011, 32.178, 1.25 ) }
    dend_47 { pt3dadd( -34.0929, 78.7401, 32.3642, 1.4 ) }
    dend_47 { pt3dadd( -33.9226, 80.066, 32.5461, 1.25 ) }
    dend_47 { pt3dadd( -33.6706, 80.9122, 32.6171, 1.18 ) }
    dend_47 { pt3dadd( -33.1782, 82.0558, 32.612, 0.66 ) }
    dend_47 { pt3dadd( -32.6083, 83.113, 32.5472, 0.66 ) }
    dend_47 { pt3dadd( -31.8324, 84.3305, 32.4348, 0.66 ) }
    dend_47 { pt3dadd( -31.3613, 84.9725, 32.3359, 0.81 ) }
    dend_47 { pt3dadd( -30.7446, 85.733, 32.2041, 0.96 ) }
    dend_47 { pt3dadd( -30.0565, 86.5981, 32.0555, 0.81 ) }
    dend_47 { pt3dadd( -29.4731, 87.3833, 31.9154, 0.88 ) }
    dend_47 { pt3dadd( -29.0239, 88.1185, 31.7998, 0.88 ) }
    dend_47 { pt3dadd( -28.4343, 89.3975, 31.6903, 0.74 ) }
    dend_47 { pt3dadd( -28.1775, 90.0958, 31.69, 0.74 ) }
    dend_47 { pt3dadd( -27.8731, 91.0756, 31.7983, 0.59 ) }
    dend_47 { pt3dadd( -27.7262, 91.6437, 31.8951, 0.59 ) }
    dend_47 { pt3dadd( -27.5246, 92.6053, 32.0598, 0.59 ) }
    dend_47 { pt3dadd( -27.2908, 94.0449, 32.2783, 0.74 ) }
    dend_47 { pt3dadd( -27.2072, 94.9126, 32.3869, 0.81 ) }
    dend_47 { pt3dadd( -27.1497, 95.9418, 32.4584, 0.81 ) }
    dend_47 { pt3dadd( -27.1054, 97.3474, 32.4997, 0.74 ) }
    dend_47 { pt3dadd( -27.0633, 98.3073, 32.4843, 0.74 ) }
    dend_47 { pt3dadd( -27.0052, 99.2559, 32.4214, 0.74 ) }
    dend_47 { pt3dadd( -26.886, 100.83, 32.2605, 0.88 ) }
    dend_47 { pt3dadd( -26.7246, 102.429, 32.0453, 1.03 ) }
    dend_47 { pt3dadd( -26.6051, 103.46, 31.8786, 1.03 ) }
    dend_47 { pt3dadd( -26.4922, 104.229, 31.775, 1.69 ) }
    dend_47 { pt3dadd( -26.2504, 105.666, 31.6146, 1.4 ) }
    dend_47 { pt3dadd( -26.0639, 106.751, 31.5205, 0.74 ) }
    dend_47 { pt3dadd( -25.8613, 107.935, 31.4607, 0.74 ) }
    dend_47 { pt3dadd( -25.7924, 108.457, 31.4374, 0.88 ) }
    dend_47 { pt3dadd( -25.7039, 109.616, 31.3829, 1.03 ) }
    dend_47 { pt3dadd( -25.6778, 110.253, 31.3568, 1.11 ) }
    dend_47 { pt3dadd( -25.6137, 111.523, 31.3052, 0.66 ) }
    dend_47 { pt3dadd( -25.5378, 112.356, 31.2503, 0.66 ) }
    dend_47 { pt3dadd( -25.3146, 113.505, 31.1374, 0.81 ) }
    dend_47 { pt3dadd( -25.014, 114.531, 30.9365, 1.03 ) }
    dend_47 { pt3dadd( -24.6892, 115.48, 30.6705, 0.88 ) }
    dend_47 { pt3dadd( -24.4253, 116.21, 30.44, 0.66 ) }
    dend_47 { pt3dadd( -24.0978, 117.198, 30.0887, 0.66 ) }
    dend_47 { pt3dadd( -23.8912, 118.116, 29.7445, 0.88 ) }
    dend_47 { pt3dadd( -23.8577, 119.2, 29.3852, 0.74 ) }
    dend_47 { pt3dadd( -24.0298, 120.042, 29.1257, 0.66 ) }
    dend_47 { pt3dadd( -24.2019, 120.629, 28.9758, 0.66 ) }
    dend_47 { pt3dadd( -24.4903, 121.651, 28.7479, 0.52 ) }
    dend_47 { pt3dadd( -24.6103, 122.361, 28.6038, 0.44 ) }
    dend_47 { pt3dadd( -24.5268, 123.24, 28.446, 0.44 ) }
    dend_47 { pt3dadd( -24.2479, 123.894, 28.3585, 0.44 ) }
    dend_47 { pt3dadd( -23.3508, 125.427, 28.0988, 0.52 ) }
    dend_47 { pt3dadd( -22.7031, 126.415, 27.9209, 0.66 ) }
    dend_47 { pt3dadd( -21.8974, 127.525, 27.707, 0.59 ) }
    dend_47 { pt3dadd( -21.4264, 128.157, 27.582, 0.66 ) }
    dend_47 { pt3dadd( -20.7936, 129.061, 27.4078, 0.74 ) }
    dend_47 { pt3dadd( -20.1238, 130.228, 27.1763, 0.81 ) }
    dend_47 { pt3dadd( -19.8523, 130.847, 27.0379, 0.88 ) }
    dend_47 { pt3dadd( -19.4393, 132.009, 26.7711, 0.74 ) }
    dend_47 { pt3dadd( -19.2005, 132.783, 26.5672, 0.74 ) }
    dend_47 { pt3dadd( -18.9144, 133.822, 26.223, 0.81 ) }
    dend_47 { pt3dadd( -18.6182, 135.049, 25.7461, 0.74 ) }
    dend_47 { pt3dadd( -18.454, 135.971, 25.379, 0.88 ) }
    dend_47 { pt3dadd( -18.4054, 136.455, 25.1847, 0.88 ) }
    dend_47 { pt3dadd( -18.3649, 137.891, 24.5963, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_47 { pt3dadd( -18.3588, 138.848, 24.2091, 1.25 ) }
    dend_47 { pt3dadd( -18.3515, 139.714, 23.8982, 0.74 ) }
    dend_47 { pt3dadd( -18.3491, 140.648, 23.6331, 0.74 ) }
    dend_47 { pt3dadd( -18.3548, 141.524, 23.4537, 1.03 ) }
    dend_47 { pt3dadd( -18.3543, 142.48, 23.3221, 1.25 ) }
    dend_47 { pt3dadd( -18.3364, 143.365, 23.2573, 1.03 ) }
    dend_47 { pt3dadd( -18.2564, 144.451, 23.2205, 0.88 ) }
    dend_47 { pt3dadd( -18.0557, 145.824, 23.1993, 0.88 ) }
    dend_47 { pt3dadd( -17.7703, 147.17, 23.1996, 0.88 ) }
    dend_47 { pt3dadd( -17.3932, 148.599, 23.1914, 0.96 ) }
    dend_47 { pt3dadd( -17.0335, 149.834, 23.1892, 1.03 ) }
    dend_47 { pt3dadd( -16.688, 151.005, 23.175, 1.03 ) }
    dend_47 { pt3dadd( -16.2767, 152.464, 23.1903, 0.88 ) }
    dend_47 { pt3dadd( -15.9872, 153.546, 23.2309, 0.88 ) }
    dend_47 { pt3dadd( -15.7453, 154.645, 23.2836, 0.88 ) }
    dend_47 { pt3dadd( -15.6739, 155.446, 23.3444, 0.66 ) }
    dend_47 { pt3dadd( -15.8398, 156.352, 23.5049, 0.66 ) }
    dend_47 { pt3dadd( -16.456, 157.617, 23.8583, 0.74 ) }
    dend_47 { pt3dadd( -16.7998, 158.109, 24.0278, 0.74 ) }
    dend_47 { pt3dadd( -17.247, 158.652, 24.2282, 0.74 ) }
    dend_47 { pt3dadd( -17.9227, 159.46, 24.4876, 0.59 ) }
    dend_47 { pt3dadd( -18.5632, 160.368, 24.6111, 0.88 ) }
    dend_47 { pt3dadd( -18.7232, 160.716, 24.5924, 1.03 ) }
    dend_47 { pt3dadd( -18.8342, 161.38, 24.4359, 0.81 ) }
    dend_47 { pt3dadd( -18.785, 162.137, 24.2164, 0.66 ) }
    dend_47 { pt3dadd( -18.5716, 163.298, 23.8755, 0.59 ) }
    dend_47 { pt3dadd( -18.1914, 164.874, 23.4083, 0.59 ) }
    dend_47 { pt3dadd( -17.9387, 165.899, 23.1252, 0.66 ) }
    dend_47 { pt3dadd( -17.6432, 167.199, 22.8315, 0.81 ) }
    dend_47 { pt3dadd( -17.3912, 168.314, 22.6368, 0.66 ) }
    dend_47 { pt3dadd( -16.9814, 169.994, 22.4397, 0.81 ) }
    dend_47 { pt3dadd( -16.6879, 171.154, 22.3497, 0.88 ) }
    dend_47 { pt3dadd( -16.3759, 172.419, 22.274, 0.96 ) }
    dend_47 { pt3dadd( -16.1397, 173.529, 22.1821, 0.96 ) }
    dend_47 { pt3dadd( -15.9732, 174.602, 22.0562, 0.96 ) }
    dend_47 { pt3dadd( -15.8375, 176.083, 21.8013, 0.74 ) }
    dend_47 { pt3dadd( -15.8078, 177.164, 21.5624, 0.74 ) }
    dend_47 { pt3dadd( -15.833, 177.944, 21.3779, 0.74 ) }
    dend_47 { pt3dadd( -15.8916, 178.875, 21.1564, 0.74 ) }
    dend_47 { pt3dadd( -16.0017, 180.379, 20.8062, 0.74 ) }
    dend_47 { pt3dadd( -16.1033, 181.46, 20.6283, 0.88 ) }
    dend_47 { pt3dadd( -16.2493, 182.976, 20.4817, 0.88 ) }
    dend_47 { pt3dadd( -16.3713, 184.529, 20.4071, 0.88 ) }
    dend_47 { pt3dadd( -16.442, 185.797, 20.3775, 0.88 ) }
    dend_47 { pt3dadd( -16.469, 186.962, 20.3561, 0.81 ) }
    dend_47 { pt3dadd( -16.4801, 188.346, 20.3335, 0.66 ) }
    dend_47 { pt3dadd( -16.535, 189.417, 20.2779, 0.59 ) }
    dend_47 { pt3dadd( -16.6535, 190.163, 20.205, 0.74 ) }
    dend_47 { pt3dadd( -16.8449, 190.833, 20.1035, 0.74 ) }
    dend_47 { pt3dadd( -17.1182, 191.7, 19.9244, 0.74 ) }
    dend_47 { pt3dadd( -17.3012, 192.386, 19.7775, 0.66 ) }
    dend_47 { pt3dadd( -17.4795, 193.32, 19.578, 0.66 ) }
    dend_47 { pt3dadd( -17.6294, 194.423, 19.4065, 0.52 ) }
    dend_47 { pt3dadd( -17.7166, 195.479, 19.2782, 0.52 ) }
    dend_47 { pt3dadd( -17.7647, 196.614, 19.1328, 0.59 ) }
    dend_47 { pt3dadd( -17.832, 198.166, 18.8902, 1.11 ) }
    dend_47 { pt3dadd( -17.8993, 199.036, 18.7172, 1.33 ) }
    dend_47 { pt3dadd( -17.9969, 199.776, 18.5494, 1.33 ) }
    dend_47 { pt3dadd( -18.2565, 200.995, 18.257, 0.74 ) }
    dend_47 { pt3dadd( -18.6193, 202.229, 17.9683, 0.59 ) }
    dend_47 { pt3dadd( -19.0182, 203.319, 17.7234, 0.66 ) }
    dend_47 { pt3dadd( -19.4031, 204.34, 17.5119, 0.66 ) }
    dend_47 { pt3dadd( -19.7837, 205.411, 17.2706, 0.74 ) }
    dend_47 { pt3dadd( -20.2072, 206.571, 16.9733, 0.81 ) }
    dend_47 { pt3dadd( -20.5522, 207.415, 16.7522, 0.81 ) }
    dend_47 { pt3dadd( -20.9371, 208.265, 16.5251, 0.66 ) }
    dend_47 { pt3dadd( -21.6557, 209.744, 16.0877, 0.66 ) }
    dend_47 { pt3dadd( -22.3578, 211.013, 15.6423, 0.52 ) }
    dend_47 { pt3dadd( -22.9713, 211.982, 15.2456, 0.44 ) }
    dend_47 { pt3dadd( -23.3501, 212.528, 14.9991, 0.59 ) }
    dend_47 { pt3dadd( -23.7424, 213.027, 14.7703, 0.59 ) }
    dend_47 { pt3dadd( -24.2656, 213.624, 14.4948, 0.59 ) }
    dend_47 { pt3dadd( -24.9004, 214.324, 14.1949, 0.66 ) }
    dend_47 { pt3dadd( -25.2743, 214.798, 14.0441, 0.66 ) }
    dend_47 { pt3dadd( -25.7499, 215.532, 13.8189, 0.66 ) }
    dend_47 { pt3dadd( -26.2036, 216.311, 13.5698, 0.59 ) }
    dend_47 { pt3dadd( -26.6157, 217.071, 13.304, 0.44 ) }
    dend_47 { pt3dadd( -26.9945, 217.788, 13.0161, 0.44 ) }
    dend_47 { pt3dadd( -27.3724, 218.48, 12.6904, 0.88 ) }
    dend_47 { pt3dadd( -27.6826, 219.004, 12.4141, 1.03 ) }
    // Section: dend_45, id: dend_45, parent: dend_17 (entry count 80/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.46313, -19.6772, 2.30081, 1.47 ) }
    dend_45 { pt3dadd( 1.91401, -20.1549, 1.67393, 1.47 ) }
    dend_45 { pt3dadd( 2.25944, -20.6125, 1.15326, 1.03 ) }
    dend_45 { pt3dadd( 2.63703, -21.1342, 0.555028, 0.44 ) }
    dend_45 { pt3dadd( 2.8059, -21.3499, 0.305661, 0.66 ) }
    dend_45 { pt3dadd( 3.08307, -21.6702, -0.0657919, 0.81 ) }
    dend_45 { pt3dadd( 3.34922, -21.9483, -0.393979, 0.74 ) }
    dend_45 { pt3dadd( 3.70898, -22.3014, -0.798617, 0.81 ) }
    dend_45 { pt3dadd( 4.26214, -22.742, -1.30016, 0.44 ) }
    dend_45 { pt3dadd( 4.64898, -22.9988, -1.60868, 0.81 ) }
    dend_45 { pt3dadd( 5.00515, -23.2014, -1.84729, 1.11 ) }
    dend_45 { pt3dadd( 5.39912, -23.391, -2.06255, 1.11 ) }
    dend_45 { pt3dadd( 5.8727, -23.5753, -2.27152, 0.74 ) }
    dend_45 { pt3dadd( 6.38013, -23.7316, -2.45209, 0.52 ) }
    dend_45 { pt3dadd( 7.26858, -23.9555, -2.70365, 0.52 ) }
    dend_45 { pt3dadd( 7.96482, -24.0973, -2.8818, 0.52 ) }
    dend_45 { pt3dadd( 8.34724, -24.1519, -2.96799, 0.44 ) }
    dend_45 { pt3dadd( 8.98479, -24.1993, -3.09009, 0.66 ) }
    dend_45 { pt3dadd( 9.39297, -24.1962, -3.16017, 1.18 ) }
    dend_45 { pt3dadd( 9.82815, -24.1572, -3.22816, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( 10.3248, -24.0719, -3.29665, 1.03 ) }
    dend_45 { pt3dadd( 10.7889, -23.9742, -3.38115, 0.81 ) }
    dend_45 { pt3dadd( 11.2171, -23.8871, -3.47924, 0.59 ) }
    dend_45 { pt3dadd( 11.7646, -23.7829, -3.65175, 0.81 ) }
    dend_45 { pt3dadd( 12.1741, -23.7061, -3.81224, 0.81 ) }
    dend_45 { pt3dadd( 12.689, -23.603, -4.09534, 0.52 ) }
    dend_45 { pt3dadd( 12.9672, -23.5479, -4.28864, 0.52 ) }
    dend_45 { pt3dadd( 13.407, -23.4704, -4.63969, 0.74 ) }
    dend_45 { pt3dadd( 13.8875, -23.3875, -5.03886, 0.66 ) }
    dend_45 { pt3dadd( 14.2993, -23.3163, -5.39651, 0.66 ) }
    dend_45 { pt3dadd( 14.9815, -23.1865, -6.00141, 0.52 ) }
    dend_45 { pt3dadd( 15.3929, -23.0868, -6.38082, 0.44 ) }
    dend_45 { pt3dadd( 15.8272, -22.9758, -6.76209, 0.44 ) }
    dend_45 { pt3dadd( 16.271, -22.8725, -7.0897, 0.74 ) }
    dend_45 { pt3dadd( 16.5868, -22.8097, -7.27252, 0.88 ) }
    dend_45 { pt3dadd( 16.9701, -22.7485, -7.44658, 0.74 ) }
    dend_45 { pt3dadd( 17.7165, -22.6434, -7.71801, 0.37 ) }
    dend_45 { pt3dadd( 18.0987, -22.5975, -7.88679, 0.37 ) }
    dend_45 { pt3dadd( 18.6903, -22.5699, -8.17384, 0.66 ) }
    dend_45 { pt3dadd( 19.1294, -22.5768, -8.39245, 0.66 ) }
    dend_45 { pt3dadd( 19.5361, -22.5905, -8.58396, 0.81 ) }
    dend_45 { pt3dadd( 19.8219, -22.6021, -8.71173, 0.81 ) }
    dend_45 { pt3dadd( 20.9434, -22.6318, -9.19178, 0.66 ) }
    dend_45 { pt3dadd( 21.6413, -22.6223, -9.51107, 0.66 ) }
    dend_45 { pt3dadd( 22.0831, -22.6094, -9.73753, 0.81 ) }
    dend_45 { pt3dadd( 22.5582, -22.5779, -10.0233, 0.81 ) }
    dend_45 { pt3dadd( 22.9977, -22.5261, -10.3342, 0.66 ) }
    dend_45 { pt3dadd( 23.2637, -22.4706, -10.5478, 0.59 ) }
    dend_45 { pt3dadd( 23.5435, -22.3562, -10.8345, 0.59 ) }
    dend_45 { pt3dadd( 23.9641, -22.1007, -11.4081, 0.59 ) }
    dend_45 { pt3dadd( 24.4455, -21.7676, -12.1568, 0.96 ) }
    dend_45 { pt3dadd( 24.6943, -21.6052, -12.5564, 1.11 ) }
    dend_45 { pt3dadd( 24.9018, -21.478, -12.8686, 1.18 ) }
    dend_45 { pt3dadd( 25.3006, -21.2521, -13.3534, 0.81 ) }
    dend_45 { pt3dadd( 25.8253, -20.9773, -13.8166, 0.52 ) }
    dend_45 { pt3dadd( 26.195, -20.8037, -14.0301, 0.66 ) }
    dend_45 { pt3dadd( 26.6921, -20.604, -14.2054, 0.66 ) }
    dend_45 { pt3dadd( 27.1304, -20.4301, -14.3155, 0.44 ) }
    dend_45 { pt3dadd( 27.7983, -20.1583, -14.4446, 0.44 ) }
    dend_45 { pt3dadd( 28.253, -19.9434, -14.4989, 0.52 ) }
    dend_45 { pt3dadd( 28.658, -19.7008, -14.5352, 0.66 ) }
    dend_45 { pt3dadd( 29.0308, -19.4294, -14.5573, 1.11 ) }
    dend_45 { pt3dadd( 29.2771, -19.2214, -14.563, 1.25 ) }
    dend_45 { pt3dadd( 29.4916, -19.031, -14.5645, 1.25 ) }
    dend_45 { pt3dadd( 29.8577, -18.6943, -14.5689, 1.25 ) }
    dend_45 { pt3dadd( 30.2388, -18.3539, -14.5676, 0.74 ) }
    dend_45 { pt3dadd( 30.797, -17.8898, -14.5808, 0.88 ) }
    dend_45 { pt3dadd( 31.0287, -17.7004, -14.5943, 0.88 ) }
    dend_45 { pt3dadd( 31.2704, -17.5005, -14.6044, 0.88 ) }
    dend_45 { pt3dadd( 31.6818, -17.1392, -14.6512, 0.59 ) }
    dend_45 { pt3dadd( 32.1745, -16.6672, -14.7542, 0.52 ) }
    dend_45 { pt3dadd( 32.4952, -16.3314, -14.8696, 0.52 ) }
    dend_45 { pt3dadd( 32.9456, -15.8798, -15.0709, 0.81 ) }
    dend_45 { pt3dadd( 33.2904, -15.5434, -15.2375, 0.81 ) }
    dend_45 { pt3dadd( 33.9084, -14.9698, -15.5533, 0.96 ) }
    dend_45 { pt3dadd( 34.2147, -14.7032, -15.7175, 1.11 ) }
    dend_45 { pt3dadd( 34.6169, -14.3758, -15.9674, 1.4 ) }
    dend_45 { pt3dadd( 35.3394, -13.8135, -16.4488, 0.81 ) }
    dend_45 { pt3dadd( 35.8255, -13.4449, -16.7964, 0.81 ) }
    dend_45 { pt3dadd( 36.2133, -13.1273, -17.0896, 0.81 ) }
    dend_45 { pt3dadd( 36.4145, -12.9394, -17.2377, 0.81 ) }
    dend_45 { pt3dadd( 36.9161, -12.3802, -17.6336, 0.52 ) }
    dend_45 { pt3dadd( 37.328, -11.7788, -18.0038, 0.66 ) }
    dend_45 { pt3dadd( 37.5466, -11.3374, -18.2502, 0.59 ) }
    dend_45 { pt3dadd( 37.7548, -10.8462, -18.4833, 0.37 ) }
    dend_45 { pt3dadd( 37.9735, -10.2785, -18.7031, 1.03 ) }
    dend_45 { pt3dadd( 38.0818, -10.0, -18.7918, 1.25 ) }
    dend_45 { pt3dadd( 38.2203, -9.68072, -18.8738, 1.25 ) }
    dend_45 { pt3dadd( 38.4966, -9.16275, -19.0078, 1.03 ) }
    dend_45 { pt3dadd( 38.7629, -8.75103, -19.1205, 1.18 ) }
    dend_45 { pt3dadd( 39.1282, -8.23952, -19.2621, 1.03 ) }
    dend_45 { pt3dadd( 39.48, -7.74864, -19.3863, 1.18 ) }
    dend_45 { pt3dadd( 39.7341, -7.38972, -19.466, 1.18 ) }
    dend_45 { pt3dadd( 40.0442, -6.96022, -19.5526, 0.74 ) }
    dend_45 { pt3dadd( 40.291, -6.64025, -19.6157, 0.52 ) }
    dend_45 { pt3dadd( 40.581, -6.30496, -19.6892, 0.52 ) }
    dend_45 { pt3dadd( 41.1091, -5.80144, -19.8239, 0.81 ) }
    dend_45 { pt3dadd( 41.4839, -5.48701, -19.9203, 0.88 ) }
    dend_45 { pt3dadd( 41.7903, -5.2538, -19.9997, 0.81 ) }
    dend_45 { pt3dadd( 42.3228, -4.91546, -20.1376, 0.37 ) }
    dend_45 { pt3dadd( 42.6896, -4.72991, -20.2424, 0.29 ) }
    dend_45 { pt3dadd( 43.2937, -4.47644, -20.4573, 0.59 ) }
    dend_45 { pt3dadd( 43.5124, -4.39098, -20.5529, 0.66 ) }
    dend_45 { pt3dadd( 43.9853, -4.19715, -20.7897, 0.37 ) }
    dend_45 { pt3dadd( 44.5428, -3.94074, -21.1019, 0.59 ) }
    dend_45 { pt3dadd( 45.048, -3.66875, -21.3903, 0.81 ) }
    dend_45 { pt3dadd( 45.7473, -3.26074, -21.7762, 1.99 ) }
    dend_45 { pt3dadd( 46.109, -3.05249, -21.968, 2.65 ) }
    dend_45 { pt3dadd( 46.3712, -2.91183, -22.0978, 2.65 ) }
    dend_45 { pt3dadd( 46.9753, -2.60204, -22.3754, 1.18 ) }
    dend_45 { pt3dadd( 47.6342, -2.27787, -22.6422, 0.44 ) }
    dend_45 { pt3dadd( 48.2097, -2.02705, -22.8238, 0.74 ) }
    dend_45 { pt3dadd( 48.6156, -1.87125, -22.9148, 0.74 ) }
    dend_45 { pt3dadd( 49.0174, -1.7182, -22.9907, 0.81 ) }
    dend_45 { pt3dadd( 49.2843, -1.61738, -23.0367, 0.81 ) }
    dend_45 { pt3dadd( 49.703, -1.46536, -23.098, 0.59 ) }
    dend_45 { pt3dadd( 50.1781, -1.31327, -23.1494, 0.44 ) }
    dend_45 { pt3dadd( 50.6415, -1.1745, -23.1724, 0.37 ) }
    dend_45 { pt3dadd( 51.0646, -1.05862, -23.1776, 0.37 ) }
    dend_45 { pt3dadd( 51.6868, -0.905852, -23.1942, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_45 { pt3dadd( 52.0515, -0.830733, -23.2179, 0.88 ) }
    dend_45 { pt3dadd( 52.6068, -0.74778, -23.2943, 0.66 ) }
    dend_45 { pt3dadd( 52.9536, -0.705721, -23.3793, 0.52 ) }
    dend_45 { pt3dadd( 53.3703, -0.663599, -23.5034, 0.52 ) }
    dend_45 { pt3dadd( 53.9474, -0.593027, -23.6882, 0.88 ) }
    dend_45 { pt3dadd( 54.3726, -0.515726, -23.8453, 0.88 ) }
    dend_45 { pt3dadd( 54.9197, -0.377525, -24.066, 0.66 ) }
    dend_45 { pt3dadd( 55.5741, -0.170647, -24.3377, 0.44 ) }
    dend_45 { pt3dadd( 56.0228, -0.00131607, -24.5127, 0.44 ) }
    dend_45 { pt3dadd( 56.4968, 0.19038, -24.6763, 0.66 ) }
    dend_45 { pt3dadd( 56.9898, 0.388486, -24.8229, 0.52 ) }
    dend_45 { pt3dadd( 57.3716, 0.540858, -24.9257, 0.52 ) }
    dend_45 { pt3dadd( 57.8736, 0.737451, -25.049, 0.74 ) }
    dend_45 { pt3dadd( 58.3626, 0.919386, -25.1401, 0.44 ) }
    dend_45 { pt3dadd( 59.0028, 1.16004, -25.2457, 0.44 ) }
    dend_45 { pt3dadd( 59.6004, 1.39183, -25.3265, 0.88 ) }
    dend_45 { pt3dadd( 60.0128, 1.56459, -25.3693, 1.03 ) }
    dend_45 { pt3dadd( 60.5781, 1.82437, -25.4116, 0.74 ) }
    dend_45 { pt3dadd( 61.3436, 2.23072, -25.4479, 0.52 ) }
    dend_45 { pt3dadd( 61.6756, 2.42301, -25.4565, 0.96 ) }
    dend_45 { pt3dadd( 61.9751, 2.61553, -25.4615, 0.96 ) }
    dend_45 { pt3dadd( 62.388, 2.88595, -25.4717, 0.81 ) }
    dend_45 { pt3dadd( 62.9889, 3.24857, -25.5064, 0.52 ) }
    dend_45 { pt3dadd( 63.3932, 3.45742, -25.5474, 0.52 ) }
    dend_45 { pt3dadd( 64.0701, 3.73925, -25.6441, 0.59 ) }
    dend_45 { pt3dadd( 64.4455, 3.8659, -25.7143, 0.81 ) }
    dend_45 { pt3dadd( 64.8694, 3.97995, -25.8113, 0.81 ) }
    dend_45 { pt3dadd( 65.3203, 4.07195, -25.9326, 0.66 ) }
    dend_45 { pt3dadd( 65.6849, 4.12767, -26.0461, 0.59 ) }
    dend_45 { pt3dadd( 66.2495, 4.21205, -26.2354, 0.59 ) }
    dend_45 { pt3dadd( 67.0297, 4.3773, -26.5108, 0.44 ) }
    dend_45 { pt3dadd( 67.4699, 4.48952, -26.6958, 0.74 ) }
    dend_45 { pt3dadd( 67.8159, 4.59204, -26.8568, 0.74 ) }
    dend_45 { pt3dadd( 67.9776, 4.6451, -26.9362, 0.74 ) }
    dend_45 { pt3dadd( 68.4792, 4.82062, -27.2085, 0.44 ) }
    dend_45 { pt3dadd( 69.0273, 5.01697, -27.5247, 0.44 ) }
    dend_45 { pt3dadd( 69.819, 5.32916, -27.9651, 0.74 ) }
    dend_45 { pt3dadd( 70.172, 5.48786, -28.1815, 0.74 ) }
    dend_45 { pt3dadd( 70.5074, 5.66164, -28.4021, 0.74 ) }
    dend_45 { pt3dadd( 70.9238, 5.90658, -28.6896, 0.52 ) }
    dend_45 { pt3dadd( 71.2856, 6.14647, -28.9455, 0.37 ) }
    dend_45 { pt3dadd( 71.6368, 6.40975, -29.1815, 0.66 ) }
    dend_45 { pt3dadd( 71.919, 6.65422, -29.3454, 1.03 ) }
    dend_45 { pt3dadd( 72.1633, 6.86791, -29.4756, 1.18 ) }
    dend_45 { pt3dadd( 72.3397, 7.02042, -29.5744, 1.18 ) }
    dend_45 { pt3dadd( 72.7537, 7.35884, -29.8115, 0.59 ) }
    dend_45 { pt3dadd( 73.087, 7.61152, -30.0153, 0.44 ) }
    dend_45 { pt3dadd( 73.3428, 7.7921, -30.1742, 0.44 ) }
    dend_45 { pt3dadd( 73.7609, 8.08155, -30.4263, 0.81 ) }
    dend_45 { pt3dadd( 74.4558, 8.53721, -30.8514, 1.11 ) }
    dend_45 { pt3dadd( 74.7474, 8.71206, -31.0285, 1.11 ) }
    dend_45 { pt3dadd( 75.027, 8.86596, -31.1966, 0.96 ) }
    dend_45 { pt3dadd( 75.3031, 9.01322, -31.3635, 0.66 ) }
    dend_45 { pt3dadd( 75.7163, 9.23327, -31.6102, 0.37 ) }
    dend_45 { pt3dadd( 76.1993, 9.48453, -31.8899, 0.52 ) }
    dend_45 { pt3dadd( 76.695, 9.72554, -32.1484, 0.59 ) }
    dend_45 { pt3dadd( 77.0606, 9.89993, -32.3341, 0.44 ) }
    dend_45 { pt3dadd( 77.5028, 10.1119, -32.5664, 0.37 ) }
    dend_45 { pt3dadd( 78.0757, 10.3954, -32.8748, 0.66 ) }
    dend_45 { pt3dadd( 78.4306, 10.5804, -33.0642, 0.44 ) }
    dend_45 { pt3dadd( 78.7825, 10.7678, -33.251, 0.44 ) }
    dend_45 { pt3dadd( 79.3305, 11.047, -33.5136, 0.88 ) }
    dend_45 { pt3dadd( 79.6998, 11.2186, -33.6585, 1.03 ) }
    dend_45 { pt3dadd( 80.0421, 11.3625, -33.7576, 1.03 ) }
    dend_45 { pt3dadd( 80.5653, 11.574, -33.85, 0.29 ) }
    dend_45 { pt3dadd( 81.0353, 11.7651, -33.8952, 0.29 ) }
    dend_45 { pt3dadd( 81.5723, 11.9872, -33.9146, 0.29 ) }
    dend_45 { pt3dadd( 82.0415, 12.1793, -33.9095, 0.44 ) }
    dend_45 { pt3dadd( 82.649, 12.4027, -33.8796, 1.11 ) }
    dend_45 { pt3dadd( 83.1448, 12.5663, -33.8547, 1.4 ) }
    dend_45 { pt3dadd( 83.2402, 12.5978, -33.8507, 1.55 ) }
    dend_45 { pt3dadd( 83.673, 12.7568, -33.8415, 0.88 ) }
    dend_45 { pt3dadd( 84.24, 12.9709, -33.869, 0.29 ) }
    dend_45 { pt3dadd( 84.8557, 13.1877, -33.9279, 0.29 ) }
    dend_45 { pt3dadd( 85.3174, 13.3405, -33.9923, 0.52 ) }
    dend_45 { pt3dadd( 85.5828, 13.4275, -34.0403, 0.66 ) }
    dend_45 { pt3dadd( 85.8837, 13.5332, -34.0963, 0.44 ) }
    dend_45 { pt3dadd( 86.3491, 13.7153, -34.1772, 0.29 ) }
    dend_45 { pt3dadd( 86.7093, 13.8769, -34.2382, 0.29 ) }
    dend_45 { pt3dadd( 87.2844, 14.1493, -34.3385, 0.66 ) }
    dend_45 { pt3dadd( 87.5975, 14.279, -34.3907, 1.11 ) }
    dend_45 { pt3dadd( 87.8806, 14.382, -34.4508, 0.81 ) }
    dend_45 { pt3dadd( 88.5479, 14.6293, -34.6326, 0.52 ) }
    dend_45 { pt3dadd( 88.7956, 14.7323, -34.7254, 0.74 ) }
    dend_45 { pt3dadd( 89.2223, 14.9354, -34.9224, 0.74 ) }
    dend_45 { pt3dadd( 89.7752, 15.2379, -35.234, 0.81 ) }
    dend_45 { pt3dadd( 90.323, 15.5631, -35.6112, 0.44 ) }
    dend_45 { pt3dadd( 90.7586, 15.8222, -35.9767, 0.81 ) }
    dend_45 { pt3dadd( 91.2161, 16.1005, -36.4482, 1.33 ) }
    dend_45 { pt3dadd( 91.4637, 16.2534, -36.7438, 1.33 ) }
    dend_45 { pt3dadd( 91.7139, 16.4042, -37.069, 1.11 ) }
    dend_45 { pt3dadd( 92.2676, 16.7028, -37.8088, 0.52 ) }
    dend_45 { pt3dadd( 92.7509, 16.8924, -38.4456, 1.18 ) }
    dend_45 { pt3dadd( 93.1312, 16.9928, -38.9257, 1.33 ) }
    dend_45 { pt3dadd( 93.512, 17.0638, -39.3816, 1.03 ) }
    dend_45 { pt3dadd( 94.0177, 17.136, -39.9507, 0.22 ) }
    dend_45 { pt3dadd( 94.3768, 17.1746, -40.3173, 0.22 ) }
    dend_45 { pt3dadd( 95.3243, 17.2618, -41.1925, 0.88 ) }
    dend_45 { pt3dadd( 95.6805, 17.2915, -41.4773, 1.03 ) }
    dend_45 { pt3dadd( 95.9989, 17.307, -41.697, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_45 { pt3dadd( 96.426, 17.3076, -41.9623, 0.96 ) }
    dend_45 { pt3dadd( 96.7694, 17.284, -42.1773, 0.66 ) }
    dend_45 { pt3dadd( 97.3093, 17.1987, -42.5041, 0.44 ) }
    dend_45 { pt3dadd( 97.8776, 17.0707, -42.8201, 0.66 ) }
    dend_45 { pt3dadd( 98.3541, 16.9417, -43.0727, 0.74 ) }
    dend_45 { pt3dadd( 98.6995, 16.8404, -43.2447, 0.74 ) }
    dend_45 { pt3dadd( 99.4644, 16.6075, -43.5962, 0.37 ) }
    dend_45 { pt3dadd( 99.9266, 16.4738, -43.7839, 0.52 ) }
    dend_45 { pt3dadd( 100.51, 16.3175, -43.9784, 0.29 ) }
    dend_45 { pt3dadd( 101.165, 16.1703, -44.1704, 0.81 ) }
    dend_45 { pt3dadd( 101.455, 16.1118, -44.2465, 1.47 ) }
    dend_45 { pt3dadd( 101.734, 16.0468, -44.3174, 1.62 ) }
    dend_45 { pt3dadd( 102.064, 15.9477, -44.4013, 1.62 ) }
    dend_45 { pt3dadd( 102.964, 15.605, -44.7042, 0.37 ) }
    dend_45 { pt3dadd( 103.513, 15.3419, -44.944, 0.29 ) }
    dend_45 { pt3dadd( 104.076, 15.0021, -45.2414, 0.29 ) }
    dend_45 { pt3dadd( 104.549, 14.6678, -45.5091, 0.29 ) }
    dend_45 { pt3dadd( 105.076, 14.2652, -45.8198, 1.47 ) }
    dend_45 { pt3dadd( 105.459, 13.9568, -46.0676, 1.69 ) }
    dend_45 { pt3dadd( 105.655, 13.7914, -46.2187, 1.84 ) }
    dend_45 { pt3dadd( 106.242, 13.3156, -46.7446, 0.52 ) }
    dend_45 { pt3dadd( 106.646, 13.0622, -47.1109, 0.44 ) }
    dend_45 { pt3dadd( 106.962, 12.9262, -47.3829, 0.81 ) }
    dend_45 { pt3dadd( 107.301, 12.826, -47.6625, 0.81 ) }
    dend_45 { pt3dadd( 107.783, 12.7299, -48.0192, 0.81 ) }
    dend_45 { pt3dadd( 108.51, 12.656, -48.5455, 0.29 ) }
    dend_45 { pt3dadd( 109.101, 12.6589, -48.9847, 0.29 ) }
    dend_45 { pt3dadd( 109.388, 12.6755, -49.1878, 0.52 ) }
    dend_45 { pt3dadd( 109.849, 12.7067, -49.4932, 0.66 ) }
    dend_45 { pt3dadd( 110.404, 12.7348, -49.8336, 0.81 ) }
    dend_45 { pt3dadd( 110.868, 12.7564, -50.0991, 0.96 ) }
    dend_45 { pt3dadd( 111.266, 12.7812, -50.3245, 0.74 ) }
    dend_45 { pt3dadd( 111.861, 12.8258, -50.6673, 0.22 ) }
    dend_45 { pt3dadd( 112.424, 12.8836, -50.9765, 0.22 ) }
    dend_45 { pt3dadd( 113.039, 12.9723, -51.2934, 0.22 ) }
    dend_45 { pt3dadd( 113.3, 13.0194, -51.4131, 0.44 ) }
    dend_45 { pt3dadd( 113.72, 13.1014, -51.5796, 0.44 ) }
    dend_45 { pt3dadd( 114.513, 13.2862, -51.8561, 0.29 ) }
    dend_45 { pt3dadd( 115.19, 13.4673, -52.0684, 1.03 ) }
    dend_45 { pt3dadd( 115.569, 13.5817, -52.1696, 1.25 ) }
    dend_45 { pt3dadd( 116.214, 13.8026, -52.3435, 0.22 ) }
    dend_45 { pt3dadd( 116.429, 13.8768, -52.4058, 0.37 ) }
    dend_45 { pt3dadd( 117.033, 14.0935, -52.5937, 0.22 ) }
    dend_45 { pt3dadd( 117.251, 14.1806, -52.6763, 0.52 ) }
    dend_45 { pt3dadd( 117.624, 14.3412, -52.8371, 0.59 ) }
    dend_45 { pt3dadd( 118.432, 14.6963, -53.2298, 0.22 ) }
    dend_45 { pt3dadd( 118.794, 14.8511, -53.4286, 0.59 ) }
    dend_45 { pt3dadd( 119.104, 14.9832, -53.6232, 0.59 ) }
    dend_45 { pt3dadd( 119.814, 15.2804, -54.1344, 0.29 ) }
    dend_45 { pt3dadd( 120.316, 15.4966, -54.5379, 0.22 ) }
    dend_45 { pt3dadd( 120.585, 15.6124, -54.8002, 0.22 ) }
    dend_45 { pt3dadd( 121.148, 15.8102, -55.465, 0.81 ) }
    dend_45 { pt3dadd( 121.516, 15.9134, -55.9499, 1.18 ) }
    dend_45 { pt3dadd( 121.872, 15.9841, -56.4388, 0.74 ) }
    dend_45 { pt3dadd( 122.211, 16.0142, -56.9324, 0.44 ) }
    dend_45 { pt3dadd( 122.747, 16.0927, -57.7877, 0.74 ) }
    dend_45 { pt3dadd( 123.15, 16.2094, -58.497, 0.52 ) }
    dend_45 { pt3dadd( 123.367, 16.3076, -58.9157, 0.52 ) }
    dend_45 { pt3dadd( 123.582, 16.4366, -59.3459, 0.37 ) }
    dend_45 { pt3dadd( 124.016, 16.7608, -60.2427, 0.37 ) }
    dend_45 { pt3dadd( 124.436, 17.1362, -61.1546, 2.5 ) }
    dend_45 { pt3dadd( 125.109, 17.836, -62.6152, 0.29 ) }
    dend_45 { pt3dadd( 125.257, 18.0172, -62.9709, 0.29 ) }
    dend_45 { pt3dadd( 125.48, 18.3354, -63.6069, 0.74 ) }
    dend_45 { pt3dadd( 125.629, 18.5698, -64.0905, 1.18 ) }
    dend_45 { pt3dadd( 125.807, 18.8521, -64.7051, 1.4 ) }
    dend_45 { pt3dadd( 125.92, 19.0141, -65.1124, 1.4 ) }
    dend_45 { pt3dadd( 126.299, 19.5225, -66.4412, 0.29 ) }
    dend_45 { pt3dadd( 126.572, 19.8426, -67.3542, 0.44 ) }
    dend_45 { pt3dadd( 126.885, 20.1874, -68.3729, 0.22 ) }
    dend_45 { pt3dadd( 127.077, 20.3957, -69.0032, 0.22 ) }
    dend_45 { pt3dadd( 127.249, 20.6025, -69.6296, 0.74 ) }
    dend_45 { pt3dadd( 127.346, 20.7356, -70.0091, 0.88 ) }
    dend_45 { pt3dadd( 127.836, 21.4843, -71.9378, 0.29 ) }
    dend_45 { pt3dadd( 128.016, 21.8125, -72.6616, 0.52 ) }
    dend_45 { pt3dadd( 128.236, 22.3227, -73.6275, 0.81 ) }
    dend_45 { pt3dadd( 128.54, 23.1325, -75.0673, 0.81 ) }
    dend_45 { pt3dadd( 128.636, 23.4411, -75.5888, 0.29 ) }
    dend_45 { pt3dadd( 128.694, 23.7137, -76.0152, 0.37 ) }
    dend_45 { pt3dadd( 128.738, 24.221, -76.6136, 0.22 ) }
    dend_45 { pt3dadd( 128.752, 24.4987, -76.885, 0.81 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 81/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 1.46313, -19.6772, 2.30081, 3.68 ) }
    dend_18 { pt3dadd( 1.02331, -21.564, 2.5209, 3.68 ) }
    dend_18 { pt3dadd( 0.495834, -23.7454, 2.75782, 3.32 ) }
    dend_18 { pt3dadd( -0.12925, -26.0736, 3.01133, 3.17 ) }
    dend_18 { pt3dadd( -0.897201, -28.7437, 3.32171, 3.09 ) }
    dend_18 { pt3dadd( -1.52427, -30.8223, 3.5656, 2.8 ) }
    dend_18 { pt3dadd( -2.08255, -32.6502, 3.80611, 2.73 ) }
    dend_18 { pt3dadd( -2.61533, -34.3132, 4.04601, 2.65 ) }
    dend_18 { pt3dadd( -3.095, -35.7531, 4.2783, 2.65 ) }
    dend_18 { pt3dadd( -3.57761, -37.1968, 4.52103, 2.65 ) }
    dend_18 { pt3dadd( -4.0958, -38.7106, 4.81572, 2.65 ) }
    dend_18 { pt3dadd( -4.74947, -40.6054, 5.23523, 2.5 ) }
    dend_18 { pt3dadd( -5.01061, -41.394, 5.42947, 2.58 ) }
    dend_18 { pt3dadd( -5.32834, -42.4534, 5.70994, 2.58 ) }
    dend_18 { pt3dadd( -5.54507, -43.3788, 5.95839, 2.65 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 96/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.307517, 35.8476, -7.84275, 1.4 ) }
    dend_10 { pt3dadd( 0.592161, 36.8434, -7.9088, 1.4 ) }
    dend_10 { pt3dadd( 0.96659, 38.5022, -7.9804, 1.11 ) }
    dend_10 { pt3dadd( 1.24299, 39.9643, -8.02689, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 1.53253, 41.6463, -7.96422, 0.96 ) }
    dend_10 { pt3dadd( 1.85916, 43.2042, -8.01056, 1.11 ) }
    dend_10 { pt3dadd( 2.2395, 44.6756, -8.11426, 0.88 ) }
    dend_10 { pt3dadd( 2.65898, 46.1394, -8.31329, 0.88 ) }
    dend_10 { pt3dadd( 2.95401, 46.8658, -8.54607, 1.11 ) }
    dend_10 { pt3dadd( 3.88965, 48.3704, -9.37434, 1.11 ) }
    dend_10 { pt3dadd( 5.9396, 50.7572, -11.2603, 1.4 ) }
    dend_10 { pt3dadd( 6.53505, 51.3698, -11.8342, 1.62 ) }
    dend_10 { pt3dadd( 7.22265, 52.0727, -12.5183, 1.11 ) }
    dend_10 { pt3dadd( 8.74741, 53.6775, -13.9785, 0.88 ) }
    dend_10 { pt3dadd( 9.54089, 54.601, -14.6822, 1.47 ) }
    dend_10 { pt3dadd( 10.0735, 55.3066, -15.0962, 1.47 ) }
    dend_10 { pt3dadd( 10.8881, 56.5633, -15.4883, 1.18 ) }
    dend_10 { pt3dadd( 11.6215, 57.7615, -15.7384, 1.33 ) }
    dend_10 { pt3dadd( 12.2285, 58.7902, -15.8562, 1.33 ) }
    dend_10 { pt3dadd( 12.8676, 59.9445, -15.9374, 1.18 ) }
    dend_10 { pt3dadd( 13.6938, 61.5395, -16.0608, 1.03 ) }
    dend_10 { pt3dadd( 14.2265, 62.7058, -16.2061, 0.88 ) }
    dend_10 { pt3dadd( 14.7129, 63.9237, -16.4588, 0.88 ) }
    dend_10 { pt3dadd( 15.0889, 65.1985, -16.8648, 1.03 ) }
    dend_10 { pt3dadd( 15.4825, 67.2277, -17.7456, 1.18 ) }
    dend_10 { pt3dadd( 15.6447, 68.4693, -18.3895, 1.11 ) }
    dend_10 { pt3dadd( 15.8201, 70.1917, -19.3606, 1.25 ) }
    dend_10 { pt3dadd( 15.9495, 71.3435, -20.0332, 1.11 ) }
    dend_10 { pt3dadd( 16.1885, 72.7272, -20.8449, 0.96 ) }
    dend_10 { pt3dadd( 16.52, 73.8699, -21.4525, 0.88 ) }
    dend_10 { pt3dadd( 17.1684, 75.2289, -21.9957, 0.88 ) }
    dend_10 { pt3dadd( 17.8467, 76.296, -22.2602, 0.96 ) }
    dend_10 { pt3dadd( 18.4608, 77.124, -22.3269, 1.03 ) }
    dend_10 { pt3dadd( 19.1487, 78.0213, -22.312, 1.03 ) }
    dend_10 { pt3dadd( 19.952, 79.1166, -22.2275, 0.88 ) }
    dend_10 { pt3dadd( 20.3849, 79.8462, -22.1753, 0.74 ) }
    dend_10 { pt3dadd( 20.922, 81.3194, -22.2009, 1.69 ) }
    dend_10 { pt3dadd( 21.0686, 82.1573, -22.2863, 2.28 ) }
    dend_10 { pt3dadd( 21.126, 83.0126, -22.4129, 2.28 ) }
    dend_10 { pt3dadd( 21.1409, 84.1065, -22.5923, 2.06 ) }
    dend_10 { pt3dadd( 21.147, 85.2724, -22.7859, 1.62 ) }
    dend_10 { pt3dadd( 21.2207, 86.7184, -23.0356, 1.18 ) }
    dend_10 { pt3dadd( 21.3228, 87.5968, -23.1947, 1.4 ) }
    dend_10 { pt3dadd( 21.5053, 88.5615, -23.3776, 1.4 ) }
    dend_10 { pt3dadd( 21.8026, 89.7513, -23.6633, 1.18 ) }
    dend_10 { pt3dadd( 22.0936, 90.8037, -23.9587, 1.03 ) }
    dend_10 { pt3dadd( 22.6353, 92.5776, -24.5453, 0.81 ) }
    dend_10 { pt3dadd( 22.9982, 93.6566, -24.9313, 0.81 ) }
    dend_10 { pt3dadd( 23.3112, 94.5403, -25.2506, 0.81 ) }
    dend_10 { pt3dadd( 23.7274, 95.6941, -25.6488, 0.96 ) }
    dend_10 { pt3dadd( 24.0653, 96.6296, -25.9326, 1.33 ) }
    dend_10 { pt3dadd( 24.5142, 97.8931, -26.2276, 1.11 ) }
    dend_10 { pt3dadd( 24.995, 99.2676, -26.4355, 0.96 ) }
    dend_10 { pt3dadd( 25.31, 100.106, -26.5094, 1.18 ) }
    dend_10 { pt3dadd( 25.7137, 101.128, -26.5571, 1.18 ) }
    dend_10 { pt3dadd( 26.1273, 102.165, -26.5698, 1.33 ) }
    dend_10 { pt3dadd( 26.4492, 102.995, -26.5956, 1.18 ) }
    dend_10 { pt3dadd( 26.6759, 103.626, -26.6231, 1.18 ) }
    dend_10 { pt3dadd( 27.0212, 104.565, -26.6991, 0.88 ) }
    dend_10 { pt3dadd( 27.3912, 105.479, -26.7989, 0.74 ) }
    dend_10 { pt3dadd( 27.8129, 106.445, -26.9188, 0.74 ) }
    dend_10 { pt3dadd( 28.4629, 107.787, -27.1241, 0.88 ) }
    dend_10 { pt3dadd( 29.0302, 108.842, -27.2806, 1.11 ) }
    dend_10 { pt3dadd( 29.5739, 109.808, -27.4475, 1.11 ) }
    dend_10 { pt3dadd( 30.0544, 110.648, -27.5846, 0.96 ) }
    dend_10 { pt3dadd( 30.7021, 111.781, -27.722, 1.18 ) }
    dend_10 { pt3dadd( 31.3694, 112.997, -27.7771, 0.96 ) }
    dend_10 { pt3dadd( 31.8562, 113.99, -27.7331, 0.81 ) }
    dend_10 { pt3dadd( 32.5758, 115.619, -27.5133, 0.88 ) }
    dend_10 { pt3dadd( 33.0452, 116.711, -27.2474, 0.88 ) }
    dend_10 { pt3dadd( 33.4543, 117.709, -26.9026, 1.03 ) }
    dend_10 { pt3dadd( 33.8149, 118.623, -26.5285, 1.11 ) }
    dend_10 { pt3dadd( 34.1491, 119.543, -26.1305, 0.88 ) }
    dend_10 { pt3dadd( 34.5228, 120.58, -25.6947, 0.66 ) }
    dend_10 { pt3dadd( 34.8211, 121.387, -25.3497, 0.66 ) }
    dend_10 { pt3dadd( 35.2147, 122.442, -24.9987, 0.66 ) }
    dend_10 { pt3dadd( 35.897, 124.337, -24.5221, 0.96 ) }
    dend_10 { pt3dadd( 36.2692, 125.527, -24.3343, 1.4 ) }
    dend_10 { pt3dadd( 36.5146, 126.455, -24.2495, 1.55 ) }
    dend_10 { pt3dadd( 36.6604, 127.166, -24.1986, 1.84 ) }
    dend_10 { pt3dadd( 36.8582, 128.238, -24.1027, 1.92 ) }
    dend_10 { pt3dadd( 37.0435, 129.134, -23.9771, 1.77 ) }
    dend_10 { pt3dadd( 37.3674, 130.514, -23.679, 1.25 ) }
    dend_10 { pt3dadd( 37.6959, 131.703, -23.3157, 1.18 ) }
    dend_10 { pt3dadd( 38.0597, 132.81, -22.9035, 1.11 ) }
    dend_10 { pt3dadd( 38.4649, 133.885, -22.4272, 1.25 ) }
    dend_10 { pt3dadd( 38.9415, 135.001, -21.8589, 1.33 ) }
    dend_10 { pt3dadd( 39.2252, 135.591, -21.5489, 1.33 ) }
    dend_10 { pt3dadd( 39.7333, 136.553, -21.0412, 1.25 ) }
    dend_10 { pt3dadd( 40.2051, 137.438, -20.6518, 0.74 ) }
    dend_10 { pt3dadd( 40.7603, 138.509, -20.3226, 0.52 ) }
    dend_10 { pt3dadd( 41.1651, 139.349, -20.1779, 0.52 ) }
    dend_10 { pt3dadd( 41.6128, 140.334, -20.0715, 0.81 ) }
    dend_10 { pt3dadd( 42.2154, 141.718, -20.0163, 1.4 ) }
    dend_10 { pt3dadd( 42.7235, 142.91, -20.0739, 1.69 ) }
    dend_10 { pt3dadd( 43.0803, 143.766, -20.1729, 1.84 ) }
    dend_10 { pt3dadd( 43.4011, 144.488, -20.3458, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.307517, 35.8476, -7.84275, 1.4 ) }
    dend_1 { pt3dadd( -1.18326, 36.646, -7.85564, 1.4 ) }
    dend_1 { pt3dadd( -2.34095, 37.206, -7.81744, 0.96 ) }
    dend_1 { pt3dadd( -3.36816, 37.7333, -7.79265, 1.25 ) }
    dend_1 { pt3dadd( -4.23349, 38.2316, -7.78968, 1.4 ) }
    dend_1 { pt3dadd( -4.8977, 38.6579, -7.80059, 1.47 ) }
    dend_1 { pt3dadd( -6.84174, 40.0369, -7.87336, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -7.81499, 40.7723, -7.90375, 1.11 ) }
    dend_1 { pt3dadd( -8.90465, 41.7575, -7.95583, 1.11 ) }
    dend_1 { pt3dadd( -9.89872, 42.8362, -8.03871, 1.03 ) }
    dend_1 { pt3dadd( -10.6316, 43.724, -8.15539, 1.03 ) }
    dend_1 { pt3dadd( -11.54, 44.9136, -8.4118, 1.03 ) }
    dend_1 { pt3dadd( -12.1306, 45.693, -8.67604, 1.18 ) }
    dend_1 { pt3dadd( -13.0839, 46.7882, -9.17558, 1.18 ) }
    dend_1 { pt3dadd( -14.3521, 47.8877, -9.95797, 0.81 ) }
    dend_1 { pt3dadd( -15.1828, 48.3639, -10.5288, 0.88 ) }
    dend_1 { pt3dadd( -16.1138, 48.6961, -11.213, 1.11 ) }
    dend_1 { pt3dadd( -17.2472, 48.956, -12.0671, 0.96 ) }
    dend_1 { pt3dadd( -17.9969, 49.0858, -12.6288, 0.96 ) }
    dend_1 { pt3dadd( -19.0759, 49.2593, -13.4159, 0.88 ) }
    dend_1 { pt3dadd( -20.0473, 49.4763, -14.0852, 0.81 ) }
    dend_1 { pt3dadd( -21.3567, 49.9308, -14.8731, 1.11 ) }
    dend_1 { pt3dadd( -21.9763, 50.2137, -15.2102, 1.25 ) }
    dend_1 { pt3dadd( -22.5897, 50.5594, -15.535, 1.25 ) }
    dend_1 { pt3dadd( -23.4853, 51.1232, -15.9849, 0.88 ) }
    dend_1 { pt3dadd( -24.3196, 51.689, -16.3781, 0.88 ) }
    dend_1 { pt3dadd( -25.1145, 52.2477, -16.7157, 0.96 ) }
    dend_1 { pt3dadd( -26.0635, 52.9231, -17.0635, 0.96 ) }
    dend_1 { pt3dadd( -26.8251, 53.4577, -17.3181, 1.03 ) }
    dend_1 { pt3dadd( -27.6555, 54.0272, -17.57, 1.25 ) }
    dend_1 { pt3dadd( -28.5346, 54.6108, -17.7961, 1.25 ) }
    dend_1 { pt3dadd( -29.1128, 54.9891, -17.9281, 1.11 ) }
    dend_1 { pt3dadd( -29.8311, 55.4455, -18.0622, 1.25 ) }
    dend_1 { pt3dadd( -30.5371, 55.8853, -18.1487, 1.4 ) }
    dend_1 { pt3dadd( -31.2431, 56.325, -18.2085, 1.4 ) }
    dend_1 { pt3dadd( -32.1247, 56.8768, -18.2624, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 29/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.54828, 42.8383, -2.3154, 0.72508 ) }
    axon_1 { pt3dadd( -3.39577, 57.8143, -2.3154, 0.72508 ) }
    axon_1 { pt3dadd( -4.24326, 72.7904, -2.3154, 0.72508 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 32/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -44.633, 37.6804, 39.4175, 0.88 ) }
    dend_56 { pt3dadd( -45.3346, 38.6161, 46.4486, 0.88 ) }
    dend_56 { pt3dadd( -46.527, 38.5941, 53.482, 0.88 ) }
    dend_56 { pt3dadd( -47.2636, 39.5105, 60.5121, 0.88 ) }
    dend_56 { pt3dadd( -48.2156, 39.8134, 67.5726, 0.88 ) }
    dend_56 { pt3dadd( -49.7995, 40.0071, 74.5224, 0.88 ) }
    dend_56 { pt3dadd( -52.5908, 39.5743, 81.0739, 0.88 ) }
    dend_56 { pt3dadd( -54.5163, 38.6709, 87.8959, 0.88 ) }
    dend_56 { pt3dadd( -55.2411, 38.605, 94.9943, 0.88 ) }
    dend_56 { pt3dadd( -57.0282, 38.6395, 101.899, 0.88 ) }
    dend_56 { pt3dadd( -57.8648, 39.2144, 108.955, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 43/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -44.633, 37.6804, 39.4175, 0.22 ) }
    dend_51 { pt3dadd( -54.3501, 44.7411, 40.1619, 0.88 ) }
    dend_51 { pt3dadd( -65.2362, 49.64, 39.9108, 0.88 ) }
    dend_51 { pt3dadd( -75.3951, 55.7671, 41.6725, 0.88 ) }
    dend_51 { pt3dadd( -84.3541, 63.5983, 43.7741, 0.88 ) }
    dend_51 { pt3dadd( -93.0923, 71.5882, 46.242, 0.88 ) }
    dend_51 { pt3dadd( -103.508, 77.5017, 46.505, 0.88 ) }
    dend_51 { pt3dadd( -114.399, 82.3417, 45.8298, 0.88 ) }
    dend_51 { pt3dadd( -124.535, 88.7653, 45.7329, 0.88 ) }
    dend_51 { pt3dadd( -133.876, 96.3978, 45.7345, 0.88 ) }
    dend_51 { pt3dadd( -142.156, 105.271, 46.0395, 0.88 ) }
    dend_51 { pt3dadd( -150.52, 113.859, 47.8837, 0.88 ) }
    dend_51 { pt3dadd( -159.758, 121.136, 50.5292, 0.88 ) }
    dend_51 { pt3dadd( -167.986, 128.418, 55.5198, 0.88 ) }
    dend_51 { pt3dadd( -177.076, 133.213, 61.6317, 0.88 ) }
    dend_51 { pt3dadd( -186.449, 135.667, 68.5323, 0.88 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -27.6826, 219.004, 12.4141, 0.66 ) }
    dend_49 { pt3dadd( -28.7952, 221.26, 10.5368, 0.66 ) }
    dend_49 { pt3dadd( -29.1516, 221.922, 9.95396, 0.66 ) }
    dend_49 { pt3dadd( -29.4984, 222.527, 9.41844, 0.74 ) }
    dend_49 { pt3dadd( -29.8349, 223.084, 8.92975, 0.88 ) }
    dend_49 { pt3dadd( -30.1132, 223.522, 8.56216, 0.88 ) }
    dend_49 { pt3dadd( -30.5408, 224.172, 8.05054, 0.74 ) }
    dend_49 { pt3dadd( -30.9492, 224.736, 7.6961, 0.52 ) }
    dend_49 { pt3dadd( -31.2924, 225.239, 7.37619, 0.96 ) }
    dend_49 { pt3dadd( -31.6048, 225.711, 7.08429, 0.96 ) }
    dend_49 { pt3dadd( -32.1305, 226.488, 6.61956, 0.37 ) }
    dend_49 { pt3dadd( -32.5897, 227.143, 6.24427, 0.37 ) }
    dend_49 { pt3dadd( -33.1211, 227.852, 5.86181, 0.66 ) }
    dend_49 { pt3dadd( -33.5233, 228.364, 5.59584, 0.81 ) }
    dend_49 { pt3dadd( -34.0121, 228.968, 5.28875, 0.81 ) }
    dend_49 { pt3dadd( -34.4294, 229.475, 5.0443, 0.66 ) }
    dend_49 { pt3dadd( -34.8537, 229.966, 4.79336, 0.66 ) }
    dend_49 { pt3dadd( -35.1914, 230.328, 4.59587, 0.66 ) }
    dend_49 { pt3dadd( -35.5859, 230.727, 4.38133, 0.37 ) }
    dend_49 { pt3dadd( -35.9181, 231.092, 4.19871, 0.37 ) }
    dend_49 { pt3dadd( -36.4784, 231.798, 3.87082, 0.74 ) }
    dend_49 { pt3dadd( -36.798, 232.241, 3.70633, 0.74 ) }
    dend_49 { pt3dadd( -37.2925, 232.967, 3.48141, 0.29 ) }
    dend_49 { pt3dadd( -37.6855, 233.561, 3.31067, 0.29 ) }
    dend_49 { pt3dadd( -38.1302, 234.258, 3.10686, 0.66 ) }
    dend_49 { pt3dadd( -38.291, 234.52, 3.02505, 0.66 ) }
    dend_49 { pt3dadd( -38.6911, 235.235, 2.8008, 0.52 ) }
    dend_49 { pt3dadd( -38.8907, 235.62, 2.68423, 0.37 ) }
    dend_49 { pt3dadd( -39.0759, 235.981, 2.56042, 0.37 ) }
    dend_49 { pt3dadd( -39.3675, 236.483, 2.35225, 0.59 ) }
    dend_49 { pt3dadd( -39.6615, 236.948, 2.12937, 1.11 ) }
    dend_49 { pt3dadd( -40.0081, 237.521, 1.86361, 1.18 ) }
    dend_49 { pt3dadd( -40.2693, 237.989, 1.65378, 0.96 ) }
    dend_49 { pt3dadd( -40.7151, 238.817, 1.33613, 0.74 ) }
    dend_49 { pt3dadd( -41.078, 239.499, 1.11846, 0.66 ) }
    dend_49 { pt3dadd( -41.4061, 240.105, 0.960443, 0.37 ) }
    dend_49 { pt3dadd( -41.789, 240.824, 0.809592, 0.37 ) }
    dend_49 { pt3dadd( -42.0457, 241.35, 0.733717, 0.52 ) }
    dend_49 { pt3dadd( -42.2979, 241.959, 0.6471, 0.52 ) }
    dend_49 { pt3dadd( -42.6403, 242.916, 0.543613, 0.66 ) }
    dend_49 { pt3dadd( -42.8734, 243.615, 0.496547, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_49 { pt3dadd( -43.1297, 244.341, 0.479026, 0.81 ) }
    dend_49 { pt3dadd( -43.5989, 245.514, 0.486449, 0.59 ) }
    dend_49 { pt3dadd( -43.9434, 246.309, 0.527659, 0.52 ) }
    dend_49 { pt3dadd( -44.2136, 246.927, 0.597058, 0.52 ) }
    dend_49 { pt3dadd( -44.5839, 247.814, 0.759257, 0.44 ) }
    dend_49 { pt3dadd( -44.827, 248.431, 0.890278, 0.44 ) }
    dend_49 { pt3dadd( -45.0458, 249.006, 1.02279, 0.44 ) }
    dend_49 { pt3dadd( -45.2292, 249.461, 1.10669, 0.44 ) }
    dend_49 { pt3dadd( -45.407, 249.877, 1.13706, 0.44 ) }
    dend_49 { pt3dadd( -45.6179, 250.39, 1.0652, 0.44 ) }
    dend_49 { pt3dadd( -45.8015, 250.917, 0.887196, 0.59 ) }
    dend_49 { pt3dadd( -45.9477, 251.5, 0.594526, 0.66 ) }
    dend_49 { pt3dadd( -46.0645, 252.19, 0.223075, 0.52 ) }
    dend_49 { pt3dadd( -46.1573, 253.037, -0.223432, 0.52 ) }
    dend_49 { pt3dadd( -46.2031, 253.754, -0.579137, 0.52 ) }
    dend_49 { pt3dadd( -46.201, 254.684, -1.01377, 0.59 ) }
    dend_49 { pt3dadd( -46.1514, 255.728, -1.45738, 0.59 ) }
    dend_49 { pt3dadd( -46.0816, 256.578, -1.79705, 0.52 ) }
    dend_49 { pt3dadd( -46.0063, 257.406, -2.09975, 0.52 ) }
    dend_49 { pt3dadd( -45.9674, 257.918, -2.28627, 0.52 ) }
    dend_49 { pt3dadd( -45.998, 258.745, -2.5815, 0.44 ) }
    dend_49 { pt3dadd( -46.1153, 259.257, -2.72735, 0.44 ) }
    dend_49 { pt3dadd( -46.299, 259.738, -2.84823, 0.44 ) }
    dend_49 { pt3dadd( -46.6902, 260.518, -3.06691, 0.44 ) }
    dend_49 { pt3dadd( -47.1077, 261.222, -3.26496, 0.44 ) }
    dend_49 { pt3dadd( -47.5666, 261.962, -3.44946, 0.44 ) }
    dend_49 { pt3dadd( -47.9996, 262.71, -3.588, 0.52 ) }
    dend_49 { pt3dadd( -48.2915, 263.344, -3.6672, 0.66 ) }
    dend_49 { pt3dadd( -48.5114, 263.994, -3.73193, 0.37 ) }
    dend_49 { pt3dadd( -48.6551, 264.666, -3.777, 0.29 ) }
    dend_49 { pt3dadd( -48.7485, 265.54, -3.81236, 0.44 ) }
    dend_49 { pt3dadd( -48.7538, 266.382, -3.82158, 0.74 ) }
    dend_49 { pt3dadd( -48.69, 267.159, -3.80094, 1.03 ) }
    dend_49 { pt3dadd( -48.5651, 267.751, -3.77669, 1.03 ) }
    dend_49 { pt3dadd( -48.3643, 268.386, -3.80014, 0.88 ) }
    dend_49 { pt3dadd( -48.0408, 269.279, -3.91059, 0.52 ) }
    dend_49 { pt3dadd( -47.7865, 270.009, -4.08304, 0.52 ) }
    dend_49 { pt3dadd( -47.6501, 270.397, -4.2508, 0.37 ) }
    dend_49 { pt3dadd( -47.2546, 271.481, -4.84762, 0.37 ) }
    dend_49 { pt3dadd( -46.7721, 272.617, -5.58642, 0.37 ) }
    dend_49 { pt3dadd( -46.5109, 273.123, -5.94877, 0.37 ) }
    dend_49 { pt3dadd( -46.2198, 273.67, -6.3518, 0.37 ) }
    dend_49 { pt3dadd( -45.6456, 274.871, -7.19732, 0.37 ) }
    dend_49 { pt3dadd( -45.4319, 275.419, -7.54916, 0.29 ) }
    dend_49 { pt3dadd( -45.1917, 276.232, -8.0101, 0.29 ) }
    dend_49 { pt3dadd( -44.9745, 277.032, -8.42837, 0.29 ) }
    dend_49 { pt3dadd( -44.7961, 277.844, -8.84659, 0.37 ) }
    dend_49 { pt3dadd( -44.6982, 278.44, -9.17119, 0.37 ) }
    dend_49 { pt3dadd( -44.631, 279.202, -9.62808, 0.37 ) }
    dend_49 { pt3dadd( -44.5367, 280.051, -10.2122, 0.44 ) }
    dend_49 { pt3dadd( -44.4624, 280.516, -10.5565, 0.59 ) }
    dend_49 { pt3dadd( -44.3036, 281.088, -11.0339, 0.59 ) }
    dend_49 { pt3dadd( -43.9033, 282.146, -11.9702, 0.74 ) }
    dend_49 { pt3dadd( -43.5817, 282.936, -12.6648, 0.88 ) }
    dend_49 { pt3dadd( -43.1942, 283.891, -13.5047, 0.81 ) }
    dend_49 { pt3dadd( -42.883, 284.721, -14.2438, 1.03 ) }
    dend_49 { pt3dadd( -42.2904, 286.474, -15.8506, 0.74 ) }
    dend_49 { pt3dadd( -42.0585, 287.411, -16.7084, 0.66 ) }
    dend_49 { pt3dadd( -41.9697, 287.889, -17.1912, 0.74 ) }
    dend_49 { pt3dadd( -41.8977, 288.528, -17.901, 0.74 ) }
    dend_49 { pt3dadd( -41.8821, 289.036, -18.5644, 0.59 ) }
    dend_49 { pt3dadd( -41.9061, 289.54, -19.3566, 0.44 ) }
    dend_49 { pt3dadd( -42.0147, 290.188, -20.7198, 0.29 ) }
    dend_49 { pt3dadd( -42.2179, 291.086, -23.1471, 0.74 ) }
    dend_49 { pt3dadd( -42.2588, 291.268, -23.7311, 1.25 ) }
    dend_49 { pt3dadd( -42.3459, 291.657, -25.1043, 1.77 ) }
    dend_49 { pt3dadd( -42.4192, 291.956, -26.1817, 1.92 ) }
    dend_49 { pt3dadd( -42.532, 292.322, -27.5772, 0.74 ) }
    dend_49 { pt3dadd( -42.6243, 292.531, -28.4341, 0.52 ) }
    dend_49 { pt3dadd( -42.8484, 292.835, -29.6353, 0.52 ) }
    dend_49 { pt3dadd( -43.0299, 293.027, -30.5025, 0.66 ) }
    dend_49 { pt3dadd( -43.3013, 293.241, -31.503, 0.52 ) }
    dend_49 { pt3dadd( -43.7165, 293.527, -32.7382, 0.52 ) }
    dend_49 { pt3dadd( -44.1249, 293.809, -33.7951, 0.52 ) }
    dend_49 { pt3dadd( -44.5806, 294.138, -34.9482, 0.66 ) }
    dend_49 { pt3dadd( -44.9143, 294.398, -35.7358, 0.66 ) }
    dend_49 { pt3dadd( -45.1564, 294.668, -36.4204, 0.81 ) }
    dend_49 { pt3dadd( -45.3483, 294.989, -37.0961, 0.59 ) }
    dend_49 { pt3dadd( -45.414, 295.266, -37.7416, 0.59 ) }
    dend_49 { pt3dadd( -45.3743, 295.938, -39.5778, 0.81 ) }
    dend_49 { pt3dadd( -45.2447, 296.261, -40.7285, 0.74 ) }
    dend_49 { pt3dadd( -44.7889, 296.651, -42.9806, 0.88 ) }
    dend_49 { pt3dadd( -44.3243, 296.701, -44.5709, 1.11 ) }
    dend_49 { pt3dadd( -42.9974, 296.326, -48.1493, 0.74 ) }
    dend_49 { pt3dadd( -42.6514, 296.11, -48.8581, 0.88 ) }
    dend_49 { pt3dadd( -42.0178, 295.46, -49.715, 0.96 ) }
    dend_49 { pt3dadd( -41.4278, 294.638, -50.1736, 0.74 ) }
    dend_49 { pt3dadd( -40.5566, 293.032, -50.3698, 0.66 ) }
    dend_49 { pt3dadd( -39.2588, 290.333, -50.2089, 0.29 ) }
    dend_49 { pt3dadd( -38.824, 289.183, -49.8812, 0.29 ) }
    dend_49 { pt3dadd( -38.3614, 287.848, -49.3902, 0.29 ) }
    dend_49 { pt3dadd( -38.1122, 287.01, -48.9971, 0.66 ) }
    dend_49 { pt3dadd( -37.9893, 286.48, -48.6939, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 93/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -27.6826, 219.004, 12.4141, 0.29 ) }
    dend_48 { pt3dadd( -28.161, 219.798, 12.721, 0.29 ) }
    dend_48 { pt3dadd( -28.4137, 220.235, 12.878, 0.37 ) }
    dend_48 { pt3dadd( -28.7024, 220.728, 13.0661, 0.52 ) }
    dend_48 { pt3dadd( -28.8984, 221.045, 13.1847, 0.66 ) }
    dend_48 { pt3dadd( -29.2597, 221.573, 13.3743, 0.81 ) }
    dend_48 { pt3dadd( -29.65, 222.101, 13.55, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -30.0035, 222.548, 13.6934, 0.74 ) }
    dend_48 { pt3dadd( -30.6555, 223.323, 13.8965, 0.29 ) }
    dend_48 { pt3dadd( -30.9477, 223.651, 13.9595, 0.29 ) }
    dend_48 { pt3dadd( -31.325, 224.069, 14.0313, 0.37 ) }
    dend_48 { pt3dadd( -31.7165, 224.52, 14.0948, 0.37 ) }
    dend_48 { pt3dadd( -32.2039, 225.13, 14.1852, 0.44 ) }
    dend_48 { pt3dadd( -32.4161, 225.459, 14.2321, 0.66 ) }
    dend_48 { pt3dadd( -32.6581, 225.955, 14.2911, 0.81 ) }
    dend_48 { pt3dadd( -32.8763, 226.487, 14.3557, 0.81 ) }
    dend_48 { pt3dadd( -33.0689, 226.958, 14.4074, 0.52 ) }
    dend_48 { pt3dadd( -33.3027, 227.531, 14.4616, 0.52 ) }
    dend_48 { pt3dadd( -33.5601, 228.227, 14.5186, 0.52 ) }
    dend_48 { pt3dadd( -33.8003, 228.969, 14.5717, 0.44 ) }
    dend_48 { pt3dadd( -33.9983, 229.701, 14.6012, 0.37 ) }
    dend_48 { pt3dadd( -34.2235, 230.625, 14.6133, 0.29 ) }
    dend_48 { pt3dadd( -34.3894, 231.345, 14.6166, 0.44 ) }
    dend_48 { pt3dadd( -34.5504, 232.122, 14.6091, 0.52 ) }
    dend_48 { pt3dadd( -34.6601, 232.737, 14.5944, 0.37 ) }
    dend_48 { pt3dadd( -34.7517, 233.355, 14.5761, 0.37 ) }
    dend_48 { pt3dadd( -34.8253, 233.865, 14.5603, 0.59 ) }
    dend_48 { pt3dadd( -34.8821, 234.359, 14.5483, 0.59 ) }
    dend_48 { pt3dadd( -34.9609, 234.919, 14.5323, 0.59 ) }
    dend_48 { pt3dadd( -35.0892, 235.654, 14.5044, 0.37 ) }
    dend_48 { pt3dadd( -35.2577, 236.544, 14.4683, 0.29 ) }
    dend_48 { pt3dadd( -35.3728, 237.345, 14.4524, 0.29 ) }
    dend_48 { pt3dadd( -35.4393, 238.154, 14.445, 0.29 ) }
    dend_48 { pt3dadd( -35.4433, 238.556, 14.4416, 0.29 ) }
    dend_48 { pt3dadd( -35.4129, 239.151, 14.4359, 0.44 ) }
    dend_48 { pt3dadd( -35.3678, 239.575, 14.4268, 0.44 ) }
    dend_48 { pt3dadd( -35.2625, 240.373, 14.3846, 0.59 ) }
    dend_48 { pt3dadd( -35.207, 240.811, 14.3397, 0.74 ) }
    dend_48 { pt3dadd( -35.1534, 241.295, 14.2708, 0.74 ) }
    dend_48 { pt3dadd( -35.0864, 241.738, 14.2019, 0.59 ) }
    dend_48 { pt3dadd( -34.9281, 242.522, 14.0849, 0.88 ) }
    dend_48 { pt3dadd( -34.7933, 243.143, 13.9992, 1.18 ) }
    dend_48 { pt3dadd( -34.6413, 243.969, 13.886, 0.37 ) }
    dend_48 { pt3dadd( -34.5965, 244.291, 13.8405, 0.37 ) }
    dend_48 { pt3dadd( -34.5152, 245.014, 13.7384, 0.37 ) }
    dend_48 { pt3dadd( -34.4038, 245.809, 13.6297, 0.29 ) }
    dend_48 { pt3dadd( -34.2616, 246.538, 13.5295, 0.37 ) }
    dend_48 { pt3dadd( -34.0786, 247.251, 13.4413, 0.29 ) }
    dend_48 { pt3dadd( -33.8375, 247.979, 13.3277, 0.29 ) }
    dend_48 { pt3dadd( -33.7326, 248.225, 13.2688, 0.29 ) }
    dend_48 { pt3dadd( -33.3539, 248.873, 13.051, 0.59 ) }
    dend_48 { pt3dadd( -33.0008, 249.313, 12.8804, 0.74 ) }
    dend_48 { pt3dadd( -32.7068, 249.611, 12.7558, 0.74 ) }
    dend_48 { pt3dadd( -32.1883, 250.073, 12.5597, 0.66 ) }
    dend_48 { pt3dadd( -31.5666, 250.573, 12.3343, 0.44 ) }
    dend_48 { pt3dadd( -31.162, 250.896, 12.196, 0.44 ) }
    dend_48 { pt3dadd( -30.5439, 251.358, 12.0047, 0.88 ) }
    dend_48 { pt3dadd( -30.2668, 251.534, 11.9355, 1.33 ) }
    dend_48 { pt3dadd( -29.9193, 251.724, 11.8413, 1.69 ) }
    dend_48 { pt3dadd( -29.3168, 252.028, 11.6789, 1.84 ) }
    dend_48 { pt3dadd( -28.344, 252.543, 11.4068, 0.29 ) }
    dend_48 { pt3dadd( -27.7736, 252.907, 11.2308, 0.29 ) }
    dend_48 { pt3dadd( -27.2117, 253.36, 11.0384, 0.29 ) }
    dend_48 { pt3dadd( -26.3459, 254.215, 10.7471, 0.59 ) }
    dend_48 { pt3dadd( -26.005, 254.633, 10.6233, 0.59 ) }
    dend_48 { pt3dadd( -25.5269, 255.393, 10.4207, 0.44 ) }
    dend_48 { pt3dadd( -25.1032, 256.326, 10.1842, 0.59 ) }
    dend_48 { pt3dadd( -24.9042, 256.913, 10.0596, 0.44 ) }
    dend_48 { pt3dadd( -24.7658, 257.411, 9.98421, 0.29 ) }
    dend_48 { pt3dadd( -24.5879, 258.058, 9.91848, 0.29 ) }
    dend_48 { pt3dadd( -24.4842, 258.42, 9.85754, 0.29 ) }
    dend_48 { pt3dadd( -24.3159, 259.032, 9.74624, 0.52 ) }
    dend_48 { pt3dadd( -24.2047, 259.422, 9.66633, 0.52 ) }
    dend_48 { pt3dadd( -24.0682, 259.924, 9.56989, 0.37 ) }
    dend_48 { pt3dadd( -23.8581, 260.717, 9.429, 0.44 ) }
    dend_48 { pt3dadd( -23.6243, 261.476, 9.30667, 0.44 ) }
    dend_48 { pt3dadd( -23.3674, 262.127, 9.20366, 0.74 ) }
    dend_48 { pt3dadd( -23.0335, 262.863, 9.09592, 0.81 ) }
    dend_48 { pt3dadd( -22.5612, 263.941, 8.96627, 0.29 ) }
    dend_48 { pt3dadd( -22.4413, 264.26, 8.93631, 0.29 ) }
    dend_48 { pt3dadd( -22.2986, 264.695, 8.90026, 0.29 ) }
    dend_48 { pt3dadd( -22.1108, 265.24, 8.85595, 0.29 ) }
    dend_48 { pt3dadd( -21.8584, 265.909, 8.77398, 0.37 ) }
    dend_48 { pt3dadd( -21.5941, 266.529, 8.71234, 0.44 ) }
    dend_48 { pt3dadd( -21.2408, 267.139, 8.63536, 0.44 ) }
    dend_48 { pt3dadd( -20.8129, 267.76, 8.52638, 0.44 ) }
    dend_48 { pt3dadd( -20.456, 268.275, 8.45416, 0.44 ) }
    dend_48 { pt3dadd( -20.2356, 268.598, 8.41905, 0.66 ) }
    dend_48 { pt3dadd( -19.9855, 268.939, 8.38408, 0.66 ) }
    dend_48 { pt3dadd( -19.5879, 269.456, 8.3058, 0.44 ) }
    dend_48 { pt3dadd( -19.1531, 269.985, 8.02908, 0.29 ) }
    dend_48 { pt3dadd( -18.7973, 270.467, 7.49266, 0.29 ) }
    dend_48 { pt3dadd( -18.5918, 270.826, 7.02101, 0.44 ) }
    dend_48 { pt3dadd( -18.4332, 271.176, 6.52097, 0.59 ) }
    dend_48 { pt3dadd( -18.2617, 271.588, 5.93959, 0.74 ) }
    dend_48 { pt3dadd( -17.7891, 272.708, 4.36005, 0.74 ) }
    dend_48 { pt3dadd( -17.3104, 273.652, 2.9704, 0.37 ) }
    dend_48 { pt3dadd( -17.0619, 274.091, 2.27809, 0.29 ) }
    dend_48 { pt3dadd( -16.7943, 274.52, 1.56571, 0.59 ) }
    dend_48 { pt3dadd( -16.5153, 274.96, 0.842054, 0.52 ) }
    dend_48 { pt3dadd( -16.3287, 275.29, 0.371284, 0.52 ) }
    dend_48 { pt3dadd( -16.0245, 275.941, -0.251642, 0.59 ) }
    // Section: dend_38, id: dend_38, parent: dend_18 (entry count 95/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -5.54507, -43.3788, 5.95839, 0.52 ) }
    dend_38 { pt3dadd( -7.90187, -44.5287, 7.30107, 0.52 ) }
    dend_38 { pt3dadd( -8.38506, -44.8406, 7.60008, 0.44 ) }
    dend_38 { pt3dadd( -8.80089, -45.1691, 7.88058, 0.66 ) }
    dend_38 { pt3dadd( -9.35057, -45.6804, 8.27429, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( -10.2349, -46.6542, 8.92724, 0.66 ) }
    dend_38 { pt3dadd( -10.5885, -47.1176, 9.20272, 0.81 ) }
    dend_38 { pt3dadd( -11.0774, -48.1468, 9.59174, 0.74 ) }
    dend_38 { pt3dadd( -11.224, -48.655, 9.7338, 0.88 ) }
    dend_38 { pt3dadd( -11.3764, -49.6558, 10.1027, 0.66 ) }
    dend_38 { pt3dadd( -11.4476, -50.5337, 10.516, 0.66 ) }
    dend_38 { pt3dadd( -11.4879, -51.2301, 10.9317, 0.81 ) }
    dend_38 { pt3dadd( -11.6114, -52.0707, 11.5595, 0.81 ) }
    dend_38 { pt3dadd( -11.8616, -52.976, 12.3555, 0.88 ) }
    dend_38 { pt3dadd( -12.7218, -55.3381, 14.5749, 0.96 ) }
    dend_38 { pt3dadd( -13.0209, -56.0437, 15.2565, 0.74 ) }
    dend_38 { pt3dadd( -13.2726, -56.5887, 15.7591, 0.59 ) }
    dend_38 { pt3dadd( -13.7302, -57.5754, 16.537, 0.59 ) }
    dend_38 { pt3dadd( -14.1205, -58.4533, 17.1074, 0.59 ) }
    dend_38 { pt3dadd( -14.5252, -59.5031, 17.5795, 0.96 ) }
    dend_38 { pt3dadd( -14.8014, -60.3578, 17.7671, 1.11 ) }
    dend_38 { pt3dadd( -15.1227, -61.4101, 17.971, 0.88 ) }
    dend_38 { pt3dadd( -15.4584, -62.4844, 18.1978, 0.66 ) }
    dend_38 { pt3dadd( -15.5941, -62.8313, 18.2863, 0.74 ) }
    dend_38 { pt3dadd( -16.2113, -63.8162, 18.6718, 0.66 ) }
    dend_38 { pt3dadd( -16.7133, -64.3933, 19.0032, 0.74 ) }
    dend_38 { pt3dadd( -17.3118, -64.9801, 19.4763, 0.81 ) }
    dend_38 { pt3dadd( -17.8307, -65.44, 19.9646, 0.88 ) }
    dend_38 { pt3dadd( -18.4481, -66.0637, 20.7007, 0.66 ) }
    dend_38 { pt3dadd( -18.8165, -66.5523, 21.2247, 0.66 ) }
    dend_38 { pt3dadd( -19.2252, -67.2487, 21.8672, 0.59 ) }
    dend_38 { pt3dadd( -19.5838, -68.0649, 22.4834, 0.66 ) }
    dend_38 { pt3dadd( -19.7648, -68.5145, 22.7533, 0.81 ) }
    dend_38 { pt3dadd( -20.2005, -69.5679, 23.2662, 0.59 ) }
    dend_38 { pt3dadd( -20.5592, -70.4598, 23.6611, 0.74 ) }
    dend_38 { pt3dadd( -20.9024, -71.2901, 24.0041, 0.88 ) }
    dend_38 { pt3dadd( -21.1089, -71.7826, 24.1873, 0.88 ) }
    dend_38 { pt3dadd( -21.4644, -72.7349, 24.6075, 0.66 ) }
    dend_38 { pt3dadd( -21.6969, -73.4714, 25.052, 0.52 ) }
    dend_38 { pt3dadd( -21.9609, -74.4922, 25.9939, 0.59 ) }
    dend_38 { pt3dadd( -22.0581, -74.9637, 26.5736, 0.59 ) }
    dend_38 { pt3dadd( -22.139, -75.4215, 27.2057, 0.66 ) }
    dend_38 { pt3dadd( -22.3559, -76.7222, 29.081, 0.66 ) }
    dend_38 { pt3dadd( -22.4519, -77.3572, 30.0013, 0.96 ) }
    dend_38 { pt3dadd( -22.6622, -78.2301, 31.247, 1.03 ) }
    dend_38 { pt3dadd( -22.9191, -78.8739, 32.099, 0.88 ) }
    dend_38 { pt3dadd( -23.1747, -79.3713, 32.6648, 0.59 ) }
    dend_38 { pt3dadd( -23.4247, -79.7747, 33.0212, 0.74 ) }
    dend_38 { pt3dadd( -23.8727, -80.4163, 33.3456, 0.59 ) }
    dend_38 { pt3dadd( -24.3965, -81.1003, 33.5466, 0.74 ) }
    dend_38 { pt3dadd( -25.0052, -81.8373, 33.6349, 0.88 ) }
    dend_38 { pt3dadd( -25.5754, -82.4979, 33.6554, 0.88 ) }
    dend_38 { pt3dadd( -26.1916, -83.1788, 33.6724, 0.59 ) }
    dend_38 { pt3dadd( -26.7883, -83.8131, 33.7075, 0.37 ) }
    dend_38 { pt3dadd( -27.0259, -84.0524, 33.7356, 0.37 ) }
    dend_38 { pt3dadd( -27.508, -84.5362, 33.8736, 0.44 ) }
    dend_38 { pt3dadd( -28.0279, -85.05, 34.0883, 0.59 ) }
    dend_38 { pt3dadd( -28.5232, -85.526, 34.3612, 0.59 ) }
    dend_38 { pt3dadd( -29.1183, -86.0976, 34.7369, 0.74 ) }
    dend_38 { pt3dadd( -29.6816, -86.6044, 35.1037, 0.66 ) }
    dend_38 { pt3dadd( -30.7495, -87.5165, 35.7614, 0.66 ) }
    dend_38 { pt3dadd( -31.3908, -88.049, 36.1302, 0.59 ) }
    dend_38 { pt3dadd( -32.3285, -88.865, 36.6379, 0.81 ) }
    dend_38 { pt3dadd( -32.8638, -89.36, 36.9144, 0.96 ) }
    dend_38 { pt3dadd( -33.5513, -90.0112, 37.2477, 0.74 ) }
    dend_38 { pt3dadd( -34.3062, -90.7295, 37.5778, 0.52 ) }
    dend_38 { pt3dadd( -35.6003, -92.0095, 38.1, 0.59 ) }
    dend_38 { pt3dadd( -36.2931, -92.7472, 38.3732, 0.66 ) }
    dend_38 { pt3dadd( -36.7428, -93.2648, 38.5334, 0.66 ) }
    dend_38 { pt3dadd( -37.3929, -94.0552, 38.7481, 0.44 ) }
    dend_38 { pt3dadd( -37.8612, -94.6569, 38.9029, 0.44 ) }
    dend_38 { pt3dadd( -38.4837, -95.4561, 39.1086, 0.37 ) }
    dend_38 { pt3dadd( -39.2282, -96.4221, 39.3167, 0.29 ) }
    dend_38 { pt3dadd( -39.5495, -96.8502, 39.398, 0.29 ) }
    dend_38 { pt3dadd( -40.2249, -97.925, 39.5467, 0.29 ) }
    dend_38 { pt3dadd( -44.7486, -105.727, 46.7673, 0.29 ) }
    dend_38 { pt3dadd( -48.6059, -113.716, 54.1876, 0.29 ) }
    dend_38 { pt3dadd( -53.8703, -121.661, 60.7293, 0.29 ) }
    dend_38 { pt3dadd( -58.2488, -130.634, 66.6941, 0.29 ) }
    dend_38 { pt3dadd( -64.5907, -139.174, 71.3083, 0.29 ) }
    dend_38 { pt3dadd( -72.0707, -146.762, 75.7209, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -5.54507, -43.3788, 5.95839, 2.21 ) }
    dend_19 { pt3dadd( -5.31528, -44.5106, 5.95293, 2.21 ) }
    dend_19 { pt3dadd( -5.18287, -45.2246, 5.94161, 2.21 ) }
    dend_19 { pt3dadd( -4.97879, -46.3249, 5.92417, 2.21 ) }
    dend_19 { pt3dadd( -4.81123, -47.2284, 5.90985, 2.28 ) }
    dend_19 { pt3dadd( -4.67801, -47.9467, 5.89847, 2.28 ) }
    dend_19 { pt3dadd( -4.48609, -48.9815, 5.88207, 2.5 ) }
    dend_19 { pt3dadd( -4.34732, -49.6879, 5.8135, 2.58 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 84/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 43.4011, 144.488, -20.3458, 1.25 ) }
    dend_12 { pt3dadd( 44.2257, 145.198, -20.5708, 1.25 ) }
    dend_12 { pt3dadd( 45.9228, 146.406, -20.8914, 0.81 ) }
    dend_12 { pt3dadd( 46.9597, 147.06, -21.0397, 0.96 ) }
    dend_12 { pt3dadd( 47.938, 147.598, -21.0516, 0.74 ) }
    dend_12 { pt3dadd( 49.5443, 148.411, -20.9548, 0.59 ) }
    dend_12 { pt3dadd( 51.0116, 149.125, -20.8086, 0.52 ) }
    dend_12 { pt3dadd( 51.6435, 149.385, -20.7041, 0.66 ) }
    dend_12 { pt3dadd( 52.5734, 149.726, -20.5036, 0.44 ) }
    dend_12 { pt3dadd( 54.6004, 150.451, -20.0681, 0.66 ) }
    dend_12 { pt3dadd( 55.5297, 150.816, -19.9058, 0.52 ) }
    dend_12 { pt3dadd( 56.4059, 151.233, -19.8294, 0.52 ) }
    dend_12 { pt3dadd( 57.6126, 151.897, -19.8002, 0.88 ) }
    dend_12 { pt3dadd( 58.6632, 152.54, -19.8661, 1.25 ) }
    dend_12 { pt3dadd( 59.086, 152.828, -19.9305, 1.62 ) }
    dend_12 { pt3dadd( 60.3599, 153.769, -20.248, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( 61.4093, 154.557, -20.5274, 1.33 ) }
    dend_12 { pt3dadd( 62.6679, 155.469, -20.8354, 0.88 ) }
    dend_12 { pt3dadd( 63.6174, 156.17, -21.0658, 0.74 ) }
    dend_12 { pt3dadd( 64.3344, 156.692, -21.2246, 0.59 ) }
    dend_12 { pt3dadd( 64.8889, 157.084, -21.3343, 0.59 ) }
    dend_12 { pt3dadd( 66.1488, 157.907, -21.5058, 1.18 ) }
    dend_12 { pt3dadd( 67.278, 158.596, -21.6587, 1.77 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 7/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 43.4011, 144.488, -20.3458, 0.37 ) }
    dend_11 { pt3dadd( 43.4357, 145.531, -16.8576, 0.37 ) }
    dend_11 { pt3dadd( 43.3611, 145.895, -15.9372, 0.37 ) }
    dend_11 { pt3dadd( 43.2681, 146.109, -15.5313, 0.37 ) }
    dend_11 { pt3dadd( 43.0922, 146.428, -15.0557, 0.66 ) }
    dend_11 { pt3dadd( 42.9236, 146.731, -14.6916, 0.66 ) }
    dend_11 { pt3dadd( 42.6919, 147.197, -14.2069, 0.66 ) }
    dend_11 { pt3dadd( 42.4244, 147.726, -13.9473, 0.52 ) }
    dend_11 { pt3dadd( 42.1629, 148.349, -13.6625, 0.52 ) }
    dend_11 { pt3dadd( 42.0387, 148.751, -13.473, 0.52 ) }
    dend_11 { pt3dadd( 41.9786, 149.443, -13.0927, 0.66 ) }
    dend_11 { pt3dadd( 42.0559, 149.892, -12.806, 1.18 ) }
    dend_11 { pt3dadd( 42.1677, 150.196, -12.5742, 1.18 ) }
    dend_11 { pt3dadd( 42.3918, 150.679, -12.1793, 0.66 ) }
    dend_11 { pt3dadd( 42.5961, 151.113, -11.8313, 0.52 ) }
    dend_11 { pt3dadd( 42.8845, 151.8, -11.3187, 0.52 ) }
    dend_11 { pt3dadd( 43.0465, 152.281, -10.9873, 1.11 ) }
    dend_11 { pt3dadd( 43.2083, 153.018, -10.533, 0.96 ) }
    dend_11 { pt3dadd( 43.2658, 153.555, -10.2365, 0.88 ) }
    dend_11 { pt3dadd( 43.2686, 154.3, -9.87432, 0.37 ) }
    dend_11 { pt3dadd( 43.1903, 155.31, -9.44812, 0.29 ) }
    dend_11 { pt3dadd( 43.1147, 155.841, -9.2444, 0.29 ) }
    dend_11 { pt3dadd( 42.9623, 156.552, -8.97798, 0.59 ) }
    dend_11 { pt3dadd( 42.7605, 157.299, -8.71747, 0.74 ) }
    dend_11 { pt3dadd( 42.5504, 157.927, -8.50801, 0.88 ) }
    dend_11 { pt3dadd( 42.3521, 158.442, -8.34177, 1.03 ) }
    dend_11 { pt3dadd( 42.0618, 159.122, -8.13542, 1.11 ) }
    dend_11 { pt3dadd( 41.8064, 159.711, -7.98294, 0.88 ) }
    dend_11 { pt3dadd( 41.5901, 160.216, -7.87572, 0.52 ) }
    dend_11 { pt3dadd( 41.2843, 160.93, -7.74096, 0.88 ) }
    dend_11 { pt3dadd( 41.1417, 161.261, -7.68224, 0.74 ) }
    dend_11 { pt3dadd( 40.8778, 161.88, -7.58196, 0.52 ) }
    dend_11 { pt3dadd( 40.5926, 162.54, -7.46423, 0.52 ) }
    dend_11 { pt3dadd( 40.3147, 163.172, -7.32091, 0.74 ) }
    dend_11 { pt3dadd( 40.0505, 163.741, -7.17227, 0.88 ) }
    dend_11 { pt3dadd( 39.8127, 164.23, -7.04818, 0.88 ) }
    dend_11 { pt3dadd( 39.5595, 164.721, -6.94214, 1.03 ) }
    dend_11 { pt3dadd( 39.2457, 165.302, -6.86267, 0.81 ) }
    dend_11 { pt3dadd( 38.8842, 165.929, -6.80391, 0.59 ) }
    dend_11 { pt3dadd( 38.6519, 166.305, -6.77738, 0.52 ) }
    dend_11 { pt3dadd( 38.2762, 166.899, -6.72337, 0.52 ) }
    dend_11 { pt3dadd( 38.0645, 167.253, -6.67197, 0.52 ) }
    dend_11 { pt3dadd( 37.7465, 167.857, -6.55616, 0.52 ) }
    dend_11 { pt3dadd( 37.3668, 168.716, -6.38004, 0.52 ) }
    dend_11 { pt3dadd( 37.1002, 169.41, -6.21096, 0.88 ) }
    dend_11 { pt3dadd( 36.8412, 170.151, -5.99521, 0.88 ) }
    dend_11 { pt3dadd( 36.6021, 170.874, -5.75227, 0.74 ) }
    dend_11 { pt3dadd( 36.4166, 171.396, -5.58097, 0.37 ) }
    dend_11 { pt3dadd( 36.1996, 171.957, -5.41145, 0.37 ) }
    dend_11 { pt3dadd( 35.9383, 172.506, -5.29603, 0.52 ) }
    dend_11 { pt3dadd( 35.7006, 172.878, -5.24306, 0.52 ) }
    dend_11 { pt3dadd( 35.5138, 173.103, -5.21693, 0.37 ) }
    dend_11 { pt3dadd( 34.9339, 173.696, -5.1246, 0.52 ) }
    dend_11 { pt3dadd( 34.6893, 173.936, -5.08161, 0.74 ) }
    dend_11 { pt3dadd( 34.188, 174.469, -4.98249, 0.74 ) }
    dend_11 { pt3dadd( 33.8101, 174.956, -4.901, 0.59 ) }
    dend_11 { pt3dadd( 33.5017, 175.448, -4.83184, 0.74 ) }
    dend_11 { pt3dadd( 33.1882, 176.047, -4.74652, 0.88 ) }
    dend_11 { pt3dadd( 32.9397, 176.564, -4.66758, 0.88 ) }
    dend_11 { pt3dadd( 32.632, 177.172, -4.58705, 0.88 ) }
    dend_11 { pt3dadd( 32.2293, 177.866, -4.50922, 0.66 ) }
    dend_11 { pt3dadd( 31.9359, 178.249, -4.46633, 0.66 ) }
    dend_11 { pt3dadd( 31.4842, 178.696, -4.41332, 0.52 ) }
    dend_11 { pt3dadd( 30.8798, 179.129, -4.33551, 0.37 ) }
    dend_11 { pt3dadd( 30.4008, 179.364, -4.21132, 0.29 ) }
    dend_11 { pt3dadd( 29.7799, 179.603, -3.97401, 0.29 ) }
    dend_11 { pt3dadd( 29.189, 179.812, -3.70607, 0.66 ) }
    dend_11 { pt3dadd( 28.934, 179.91, -3.57938, 1.03 ) }
    dend_11 { pt3dadd( 28.4023, 180.16, -3.29306, 1.18 ) }
    dend_11 { pt3dadd( 27.1918, 180.874, -2.53873, 0.59 ) }
    dend_11 { pt3dadd( 26.605, 181.328, -2.12748, 0.44 ) }
    dend_11 { pt3dadd( 26.2169, 181.724, -1.82734, 0.52 ) }
    dend_11 { pt3dadd( 25.9269, 182.101, -1.56054, 0.52 ) }
    dend_11 { pt3dadd( 25.6111, 182.584, -1.23639, 0.52 ) }
    dend_11 { pt3dadd( 25.3204, 183.112, -0.912505, 0.59 ) }
    dend_11 { pt3dadd( 25.0579, 183.7, -0.588957, 0.37 ) }
    dend_11 { pt3dadd( 24.8542, 184.195, -0.304831, 0.37 ) }
    dend_11 { pt3dadd( 24.516, 185.091, 0.217101, 0.66 ) }
    dend_11 { pt3dadd( 24.3581, 185.515, 0.451035, 0.74 ) }
    dend_11 { pt3dadd( 24.1589, 185.98, 0.670697, 0.59 ) }
    dend_11 { pt3dadd( 23.9033, 186.479, 0.849488, 0.52 ) }
    dend_11 { pt3dadd( 23.5732, 187.001, 0.987296, 0.44 ) }
    dend_11 { pt3dadd( 23.1059, 187.655, 1.07652, 0.44 ) }
    dend_11 { pt3dadd( 22.7563, 188.134, 1.08794, 0.59 ) }
    dend_11 { pt3dadd( 22.2319, 188.871, 1.07569, 0.59 ) }
    dend_11 { pt3dadd( 21.8887, 189.365, 1.07176, 0.74 ) }
    dend_11 { pt3dadd( 21.5614, 189.835, 1.09652, 0.74 ) }
    dend_11 { pt3dadd( 21.2912, 190.24, 1.19492, 0.74 ) }
    dend_11 { pt3dadd( 20.8561, 190.903, 1.56205, 0.52 ) }
    dend_11 { pt3dadd( 20.6345, 191.261, 1.83802, 0.66 ) }
    dend_11 { pt3dadd( 20.396, 191.641, 2.22349, 0.81 ) }
    dend_11 { pt3dadd( 20.0146, 192.174, 2.85971, 1.03 ) }
    dend_11 { pt3dadd( 19.4711, 192.761, 3.66743, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( 18.9401, 193.256, 4.37457, 0.44 ) }
    dend_11 { pt3dadd( 18.6423, 193.508, 4.70703, 0.29 ) }
    dend_11 { pt3dadd( 18.0331, 193.971, 5.28388, 0.59 ) }
    dend_11 { pt3dadd( 17.6885, 194.201, 5.57033, 0.96 ) }
    dend_11 { pt3dadd( 16.7476, 194.815, 6.29439, 0.29 ) }
    dend_11 { pt3dadd( 16.2771, 195.126, 6.65863, 0.29 ) }
    dend_11 { pt3dadd( 15.6938, 195.547, 7.10801, 0.96 ) }
    dend_11 { pt3dadd( 15.13, 195.971, 7.5299, 1.18 ) }
    dend_11 { pt3dadd( 14.2199, 196.727, 8.19455, 0.96 ) }
    dend_11 { pt3dadd( 13.8313, 197.032, 8.51986, 0.59 ) }
    dend_11 { pt3dadd( 13.4856, 197.281, 8.83007, 0.29 ) }
    dend_11 { pt3dadd( 13.0437, 197.561, 9.25876, 0.29 ) }
    dend_11 { pt3dadd( 12.8201, 197.704, 9.5021, 0.29 ) }
    dend_11 { pt3dadd( 12.2864, 198.128, 10.1619, 0.44 ) }
    dend_11 { pt3dadd( 11.4006, 199.011, 11.4319, 0.44 ) }
    dend_11 { pt3dadd( 11.2056, 199.251, 11.7761, 0.59 ) }
    dend_11 { pt3dadd( 10.9994, 199.622, 12.3284, 0.59 ) }
    dend_11 { pt3dadd( 10.9165, 199.963, 12.8522, 0.52 ) }
    dend_11 { pt3dadd( 11.0016, 200.38, 13.4508, 0.29 ) }
    dend_11 { pt3dadd( 11.304, 200.756, 13.9338, 0.29 ) }
    dend_11 { pt3dadd( 11.709, 201.099, 14.3729, 0.29 ) }
    dend_11 { pt3dadd( 12.2646, 201.487, 14.9071, 0.44 ) }
    dend_11 { pt3dadd( 12.7451, 201.807, 15.3918, 0.44 ) }
    dend_11 { pt3dadd( 13.1076, 202.048, 15.8299, 0.29 ) }
    dend_11 { pt3dadd( 13.4885, 202.321, 16.3711, 0.29 ) }
    dend_11 { pt3dadd( 14.0452, 202.829, 17.3149, 0.59 ) }
    dend_11 { pt3dadd( 14.3815, 203.234, 17.9671, 0.74 ) }
    dend_11 { pt3dadd( 14.8593, 203.993, 18.9542, 0.52 ) }
    dend_11 { pt3dadd( 15.3341, 204.956, 20.027, 0.22 ) }
    dend_11 { pt3dadd( 15.4194, 205.166, 20.2273, 0.29 ) }
    dend_11 { pt3dadd( 15.6477, 205.872, 20.7464, 0.29 ) }
    dend_11 { pt3dadd( 15.8169, 206.485, 21.0633, 0.29 ) }
    dend_11 { pt3dadd( 16.0317, 207.291, 21.3654, 0.37 ) }
    dend_11 { pt3dadd( 16.2915, 207.964, 21.4282, 0.37 ) }
    dend_11 { pt3dadd( 16.5238, 208.416, 21.3941, 0.22 ) }
    dend_11 { pt3dadd( 17.2434, 209.315, 21.1997, 0.22 ) }
    dend_11 { pt3dadd( 17.6836, 209.725, 21.0718, 0.37 ) }
    dend_11 { pt3dadd( 18.2198, 210.149, 20.915, 0.15 ) }
    dend_11 { pt3dadd( 20.1717, 211.56, 20.2911, 0.15 ) }
    dend_11 { pt3dadd( 20.8025, 211.967, 20.0799, 0.15 ) }
    dend_11 { pt3dadd( 22.706, 213.039, 19.4523, 0.15 ) }
    dend_11 { pt3dadd( 23.6451, 213.483, 19.1502, 0.15 ) }
    dend_11 { pt3dadd( 24.5527, 213.875, 18.8614, 0.22 ) }
    dend_11 { pt3dadd( 21.7467, 220.385, 23.3286, 0.22 ) }
    dend_11 { pt3dadd( 19.3725, 227.013, 27.8846, 0.22 ) }
    dend_11 { pt3dadd( 18.3421, 233.001, 33.5908, 0.22 ) }
    dend_11 { pt3dadd( 17.9371, 238.17, 40.0497, 0.22 ) }
    dend_11 { pt3dadd( 16.9051, 243.327, 46.4502, 0.22 ) }
    dend_11 { pt3dadd( 17.6828, 249.135, 52.3546, 0.22 ) }
    dend_11 { pt3dadd( 18.9397, 255.736, 57.35, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -32.1247, 56.8768, -18.2624, 0.52 ) }
    dend_5 { pt3dadd( -33.2202, 57.281, -18.0858, 0.52 ) }
    dend_5 { pt3dadd( -33.908, 57.5143, -18.0002, 0.52 ) }
    dend_5 { pt3dadd( -34.5343, 57.7066, -17.9738, 0.74 ) }
    dend_5 { pt3dadd( -35.3039, 57.9458, -17.9764, 0.96 ) }
    dend_5 { pt3dadd( -36.0821, 58.2346, -17.9862, 1.18 ) }
    dend_5 { pt3dadd( -36.7129, 58.5162, -17.996, 1.18 ) }
    dend_5 { pt3dadd( -37.3207, 58.8341, -18.018, 0.88 ) }
    dend_5 { pt3dadd( -38.2932, 59.5214, -18.002, 0.37 ) }
    dend_5 { pt3dadd( -38.5951, 59.8254, -17.9779, 0.37 ) }
    dend_5 { pt3dadd( -39.1949, 60.6258, -17.8828, 0.52 ) }
    dend_5 { pt3dadd( -39.5708, 61.1988, -17.7801, 0.81 ) }
    dend_5 { pt3dadd( -39.9812, 61.835, -17.6202, 0.96 ) }
    dend_5 { pt3dadd( -40.4781, 62.5216, -17.3781, 0.52 ) }
    dend_5 { pt3dadd( -40.937, 63.0122, -17.1334, 0.59 ) }
    dend_5 { pt3dadd( -41.3251, 63.2662, -16.9591, 0.74 ) }
    dend_5 { pt3dadd( -42.1948, 63.5896, -16.6641, 1.11 ) }
    dend_5 { pt3dadd( -42.8263, 63.7393, -16.4939, 1.18 ) }
    dend_5 { pt3dadd( -43.6857, 63.8846, -16.3079, 1.18 ) }
    dend_5 { pt3dadd( -44.5202, 64.0018, -16.1708, 0.74 ) }
    dend_5 { pt3dadd( -45.4052, 64.1364, -16.0739, 0.59 ) }
    dend_5 { pt3dadd( -46.2493, 64.297, -16.0271, 0.52 ) }
    dend_5 { pt3dadd( -46.8061, 64.4363, -16.0446, 0.52 ) }
    dend_5 { pt3dadd( -47.3782, 64.616, -16.1299, 0.52 ) }
    dend_5 { pt3dadd( -47.9764, 64.8502, -16.3013, 0.74 ) }
    dend_5 { pt3dadd( -48.6159, 65.1297, -16.4901, 0.74 ) }
    dend_5 { pt3dadd( -48.9335, 65.2828, -16.59, 0.81 ) }
    dend_5 { pt3dadd( -49.3768, 65.5078, -16.6995, 0.81 ) }
    dend_5 { pt3dadd( -50.3186, 66.015, -16.8342, 0.66 ) }
    dend_5 { pt3dadd( -50.8267, 66.3262, -16.8178, 0.52 ) }
    dend_5 { pt3dadd( -52.116, 67.2285, -16.5115, 0.74 ) }
    dend_5 { pt3dadd( -52.5938, 67.6093, -16.3308, 0.66 ) }
    dend_5 { pt3dadd( -53.2814, 68.209, -16.0139, 0.59 ) }
    dend_5 { pt3dadd( -53.7079, 68.5913, -15.8097, 0.66 ) }
    dend_5 { pt3dadd( -54.4539, 69.2747, -15.4689, 0.52 ) }
    dend_5 { pt3dadd( -54.8384, 69.6236, -15.3649, 0.66 ) }
    dend_5 { pt3dadd( -55.2914, 70.004, -15.3199, 0.88 ) }
    dend_5 { pt3dadd( -55.8769, 70.4261, -15.3047, 0.88 ) }
    dend_5 { pt3dadd( -56.4664, 70.7745, -15.2735, 0.66 ) }
    dend_5 { pt3dadd( -56.9266, 71.0004, -15.1839, 0.59 ) }
    dend_5 { pt3dadd( -57.5491, 71.2912, -14.9604, 0.74 ) }
    dend_5 { pt3dadd( -58.178, 71.6065, -14.6414, 0.52 ) }
    dend_5 { pt3dadd( -58.7825, 71.9267, -14.2637, 0.52 ) }
    dend_5 { pt3dadd( -60.1861, 72.7278, -13.2703, 0.66 ) }
    dend_5 { pt3dadd( -61.1871, 73.3357, -12.5122, 0.74 ) }
    dend_5 { pt3dadd( -61.744, 73.6674, -12.0812, 0.44 ) }
    dend_5 { pt3dadd( -62.2075, 73.9258, -11.7423, 0.44 ) }
    dend_5 { pt3dadd( -62.5867, 74.1127, -11.5245, 0.59 ) }
    dend_5 { pt3dadd( -62.9975, 74.276, -11.3676, 0.66 ) }
    dend_5 { pt3dadd( -63.5956, 74.4863, -11.2643, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( -64.489, 74.7752, -11.1299, 0.52 ) }
    dend_5 { pt3dadd( -65.1336, 74.9765, -10.9735, 0.52 ) }
    dend_5 { pt3dadd( -65.7189, 75.1964, -10.7631, 0.44 ) }
    dend_5 { pt3dadd( -66.7651, 75.6859, -10.2609, 0.59 ) }
    dend_5 { pt3dadd( -67.2285, 75.9348, -10.0278, 0.74 ) }
    dend_5 { pt3dadd( -67.7426, 76.2392, -9.76291, 0.88 ) }
    dend_5 { pt3dadd( -68.3944, 76.6315, -9.43849, 0.88 ) }
    dend_5 { pt3dadd( -69.0189, 76.9452, -9.113, 0.44 ) }
    dend_5 { pt3dadd( -69.5886, 77.1811, -8.82725, 0.44 ) }
    dend_5 { pt3dadd( -70.472, 77.4493, -8.42583, 0.59 ) }
    dend_5 { pt3dadd( -71.118, 77.6246, -8.16655, 0.52 ) }
    dend_5 { pt3dadd( -72.158, 77.8845, -7.78313, 0.66 ) }
    dend_5 { pt3dadd( -73.088, 78.1108, -7.45678, 0.74 ) }
    dend_5 { pt3dadd( -73.8511, 78.3065, -7.1785, 0.74 ) }
    dend_5 { pt3dadd( -74.3169, 78.4565, -7.00197, 0.74 ) }
    dend_5 { pt3dadd( -75.0594, 78.7618, -6.70928, 0.52 ) }
    dend_5 { pt3dadd( -75.3257, 78.9081, -6.62475, 0.52 ) }
    dend_5 { pt3dadd( -75.6925, 79.174, -6.53884, 0.66 ) }
    dend_5 { pt3dadd( -76.1675, 79.5706, -6.43821, 0.66 ) }
    dend_5 { pt3dadd( -76.6606, 79.987, -6.34081, 0.81 ) }
    dend_5 { pt3dadd( -77.1989, 80.4438, -6.2421, 0.81 ) }
    dend_5 { pt3dadd( -77.6816, 80.8303, -6.15252, 0.59 ) }
    dend_5 { pt3dadd( -78.2056, 81.2372, -6.06756, 0.52 ) }
    dend_5 { pt3dadd( -78.9489, 81.7841, -5.96041, 0.59 ) }
    dend_5 { pt3dadd( -79.4689, 82.1315, -5.88161, 0.66 ) }
    dend_5 { pt3dadd( -79.907, 82.3817, -5.81889, 0.66 ) }
    dend_5 { pt3dadd( -80.6842, 82.7227, -5.71877, 0.59 ) }
    dend_5 { pt3dadd( -81.1916, 82.8902, -5.64197, 0.59 ) }
    dend_5 { pt3dadd( -81.6995, 83.0217, -5.56193, 0.59 ) }
    dend_5 { pt3dadd( -82.447, 83.1998, -5.45968, 0.52 ) }
    dend_5 { pt3dadd( -83.0592, 83.3617, -5.37353, 0.66 ) }
    dend_5 { pt3dadd( -83.6081, 83.5399, -5.31256, 0.66 ) }
    dend_5 { pt3dadd( -84.3142, 83.8271, -5.28031, 0.52 ) }
    dend_5 { pt3dadd( -84.8192, 84.0805, -5.29524, 0.66 ) }
    dend_5 { pt3dadd( -85.5708, 84.5406, -5.37338, 0.81 ) }
    dend_5 { pt3dadd( -86.1857, 84.983, -5.46403, 0.81 ) }
    dend_5 { pt3dadd( -87.0771, 85.7278, -5.59684, 0.52 ) }
    dend_5 { pt3dadd( -87.6371, 86.2535, -5.66593, 0.59 ) }
    dend_5 { pt3dadd( -88.0435, 86.659, -5.70869, 0.59 ) }
    dend_5 { pt3dadd( -88.5509, 87.1786, -5.73932, 0.37 ) }
    dend_5 { pt3dadd( -89.2888, 87.9132, -5.73442, 0.52 ) }
    dend_5 { pt3dadd( -89.8832, 88.4531, -5.69903, 0.59 ) }
    dend_5 { pt3dadd( -90.6297, 89.0529, -5.62346, 0.22 ) }
    dend_5 { pt3dadd( -90.974, 89.2799, -5.58028, 0.37 ) }
    dend_5 { pt3dadd( -91.4373, 89.5399, -5.54742, 0.37 ) }
    dend_5 { pt3dadd( -92.0282, 89.824, -5.5607, 0.37 ) }
    dend_5 { pt3dadd( -92.7121, 90.1302, -5.62705, 0.66 ) }
    dend_5 { pt3dadd( -93.251, 90.3693, -5.63487, 0.88 ) }
    dend_5 { pt3dadd( -93.7052, 90.5742, -5.58391, 0.59 ) }
    dend_5 { pt3dadd( -94.8095, 91.0976, -5.30722, 0.29 ) }
    dend_5 { pt3dadd( -95.6154, 91.5507, -4.97079, 0.29 ) }
    dend_5 { pt3dadd( -96.2427, 91.9778, -4.62157, 0.29 ) }
    dend_5 { pt3dadd( -97.5351, 93.0263, -3.66481, 0.88 ) }
    dend_5 { pt3dadd( -98.1935, 93.5758, -3.02948, 0.88 ) }
    dend_5 { pt3dadd( -98.5678, 93.9093, -2.5916, 0.66 ) }
    dend_5 { pt3dadd( -99.0711, 94.3814, -1.82077, 0.52 ) }
    dend_5 { pt3dadd( -99.3043, 94.6286, -1.37387, 0.29 ) }
    dend_5 { pt3dadd( -99.4808, 94.8199, -1.00125, 0.29 ) }
    dend_5 { pt3dadd( -100.32, 95.8527, 0.356511, 0.74 ) }
    dend_5 { pt3dadd( -108.571, 100.004, 3.91345, 0.74 ) }
    dend_5 { pt3dadd( -116.888, 103.313, 8.0507, 0.74 ) }
    dend_5 { pt3dadd( -124.911, 106.738, 12.6578, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 62/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -32.1247, 56.8768, -18.2624, 0.74 ) }
    dend_2 { pt3dadd( -32.56, 57.0781, -18.6509, 0.74 ) }
    dend_2 { pt3dadd( -32.8989, 57.2835, -18.9375, 0.74 ) }
    dend_2 { pt3dadd( -33.4378, 57.6587, -19.3519, 0.74 ) }
    dend_2 { pt3dadd( -33.7856, 57.9068, -19.6779, 0.88 ) }
    dend_2 { pt3dadd( -34.125, 58.1261, -20.0489, 1.03 ) }
    dend_2 { pt3dadd( -34.4458, 58.2837, -20.4437, 1.03 ) }
    dend_2 { pt3dadd( -34.7509, 58.3827, -20.8772, 0.96 ) }
    dend_2 { pt3dadd( -35.08, 58.4244, -21.3507, 0.74 ) }
    dend_2 { pt3dadd( -35.867, 58.3872, -22.3925, 0.66 ) }
    dend_2 { pt3dadd( -36.4011, 58.3007, -22.9925, 0.66 ) }
    dend_2 { pt3dadd( -37.1155, 58.1404, -23.6782, 0.66 ) }
    dend_2 { pt3dadd( -37.5617, 58.0277, -24.0489, 0.59 ) }
    dend_2 { pt3dadd( -38.176, 57.8651, -24.4782, 0.66 ) }
    dend_2 { pt3dadd( -38.6616, 57.745, -24.7484, 0.66 ) }
    dend_2 { pt3dadd( -39.6838, 57.5432, -25.1773, 0.81 ) }
    dend_2 { pt3dadd( -40.2907, 57.4708, -25.4007, 0.96 ) }
    dend_2 { pt3dadd( -40.7534, 57.4614, -25.5609, 1.18 ) }
    dend_2 { pt3dadd( -41.2308, 57.4909, -25.7331, 1.18 ) }
    dend_2 { pt3dadd( -41.8855, 57.5825, -25.9881, 0.66 ) }
    dend_2 { pt3dadd( -42.3805, 57.6738, -26.2008, 0.66 ) }
    dend_2 { pt3dadd( -42.7747, 57.7543, -26.3909, 0.59 ) }
    dend_2 { pt3dadd( -43.2026, 57.8184, -26.6522, 0.74 ) }
    dend_2 { pt3dadd( -43.7072, 57.833, -27.0108, 0.74 ) }
    dend_2 { pt3dadd( -43.9021, 57.7817, -27.2125, 0.88 ) }
    dend_2 { pt3dadd( -44.1874, 57.515, -27.7192, 0.88 ) }
    dend_2 { pt3dadd( -44.3486, 57.2759, -28.1534, 0.66 ) }
    dend_2 { pt3dadd( -44.6698, 56.7645, -29.1048, 0.66 ) }
    dend_2 { pt3dadd( -44.8238, 56.5229, -29.5695, 1.25 ) }
    dend_2 { pt3dadd( -45.1847, 56.0046, -30.6064, 1.47 ) }
    dend_2 { pt3dadd( -45.5938, 55.5125, -31.6552, 1.62 ) }
    dend_2 { pt3dadd( -46.1211, 55.0447, -32.8199, 1.55 ) }
    dend_2 { pt3dadd( -46.4085, 54.8975, -33.308, 0.81 ) }
    dend_2 { pt3dadd( -46.7785, 54.8265, -33.7566, 0.59 ) }
    dend_2 { pt3dadd( -47.2628, 54.8296, -34.2353, 0.44 ) }
    dend_2 { pt3dadd( -47.6538, 54.882, -34.5553, 0.44 ) }
    dend_2 { pt3dadd( -48.0891, 54.9721, -34.8901, 0.59 ) }
    dend_2 { pt3dadd( -48.3851, 55.0347, -35.1275, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( -48.7704, 55.1092, -35.5176, 0.29 ) }
    dend_2 { pt3dadd( -49.3994, 55.2545, -36.2764, 1.03 ) }
    dend_2 { pt3dadd( -49.8753, 55.4043, -36.8982, 1.47 ) }
    dend_2 { pt3dadd( -50.2305, 55.5439, -37.3753, 1.69 ) }
    dend_2 { pt3dadd( -50.4522, 55.6452, -37.6688, 2.06 ) }
    dend_2 { pt3dadd( -50.9081, 55.8964, -38.2426, 1.03 ) }
    dend_2 { pt3dadd( -51.3724, 56.2044, -38.7935, 0.52 ) }
    dend_2 { pt3dadd( -51.7737, 56.5409, -39.2629, 0.81 ) }
    dend_2 { pt3dadd( -51.9883, 56.766, -39.5254, 0.96 ) }
    dend_2 { pt3dadd( -52.2497, 57.1099, -39.8919, 0.74 ) }
    dend_2 { pt3dadd( -52.5148, 57.5271, -40.3323, 1.03 ) }
    dend_2 { pt3dadd( -52.6787, 57.8228, -40.6456, 0.88 ) }
    dend_2 { pt3dadd( -52.896, 58.2373, -41.1105, 1.25 ) }
    dend_2 { pt3dadd( -53.0627, 58.5425, -41.4925, 1.62 ) }
    dend_2 { pt3dadd( -53.2169, 58.7917, -41.8364, 1.77 ) }
    dend_2 { pt3dadd( -53.4388, 59.1345, -42.3476, 1.99 ) }
    dend_2 { pt3dadd( -53.6293, 59.4147, -42.7695, 1.18 ) }
    dend_2 { pt3dadd( -53.7796, 59.6371, -43.0937, 0.29 ) }
    dend_2 { pt3dadd( -53.9862, 59.9626, -43.5621, 0.29 ) }
    dend_2 { pt3dadd( -54.2266, 60.4019, -44.1941, 0.66 ) }
    dend_2 { pt3dadd( -54.3956, 60.7947, -44.7261, 0.66 ) }
    dend_2 { pt3dadd( -54.5083, 61.143, -45.1508, 0.22 ) }
    dend_2 { pt3dadd( -54.6007, 61.5402, -45.5992, 0.81 ) }
    dend_2 { pt3dadd( -54.6822, 61.9917, -46.0959, 1.18 ) }
    dend_2 { pt3dadd( -54.7716, 62.5371, -46.6619, 0.96 ) }
    dend_2 { pt3dadd( -54.8317, 62.8363, -46.9568, 0.37 ) }
    dend_2 { pt3dadd( -54.925, 63.1136, -47.2268, 0.29 ) }
    dend_2 { pt3dadd( -55.0349, 63.3275, -47.4424, 0.29 ) }
    dend_2 { pt3dadd( -55.2065, 63.5691, -47.6732, 0.29 ) }
    dend_2 { pt3dadd( -55.4135, 63.8361, -47.8892, 0.59 ) }
    dend_2 { pt3dadd( -55.6613, 64.1782, -48.1244, 0.59 ) }
    dend_2 { pt3dadd( -55.8786, 64.5665, -48.3899, 0.59 ) }
    dend_2 { pt3dadd( -56.0539, 64.9828, -48.6812, 0.59 ) }
    dend_2 { pt3dadd( -56.1883, 65.383, -48.9521, 0.59 ) }
    dend_2 { pt3dadd( -56.2913, 65.7545, -49.1986, 0.29 ) }
    dend_2 { pt3dadd( -56.3697, 66.07, -49.411, 0.37 ) }
    dend_2 { pt3dadd( -56.528, 66.6107, -49.8243, 0.37 ) }
    dend_2 { pt3dadd( -56.7012, 67.0538, -50.2494, 0.74 ) }
    dend_2 { pt3dadd( -56.8106, 67.2495, -50.4669, 1.25 ) }
    dend_2 { pt3dadd( -56.9934, 67.5049, -50.771, 1.69 ) }
    dend_2 { pt3dadd( -57.1716, 67.7143, -51.0455, 1.47 ) }
    dend_2 { pt3dadd( -57.5279, 68.0746, -51.5746, 0.96 ) }
    dend_2 { pt3dadd( -57.9155, 68.4191, -52.1242, 0.59 ) }
    dend_2 { pt3dadd( -58.206, 68.6619, -52.5569, 0.52 ) }
    dend_2 { pt3dadd( -58.454, 68.8468, -52.9451, 0.66 ) }
    dend_2 { pt3dadd( -58.7826, 69.0485, -53.4459, 0.52 ) }
    dend_2 { pt3dadd( -59.0857, 69.1942, -53.912, 0.81 ) }
    dend_2 { pt3dadd( -59.4118, 69.2883, -54.3643, 0.96 ) }
    dend_2 { pt3dadd( -59.7377, 69.3398, -54.7544, 1.55 ) }
    dend_2 { pt3dadd( -60.163, 69.3813, -55.2254, 1.77 ) }
    dend_2 { pt3dadd( -60.5293, 69.4138, -55.5828, 2.21 ) }
    dend_2 { pt3dadd( -61.1151, 69.4739, -56.0842, 2.36 ) }
    dend_2 { pt3dadd( -61.7458, 69.5403, -56.5757, 0.59 ) }
    dend_2 { pt3dadd( -62.2785, 69.5769, -56.9738, 0.37 ) }
    dend_2 { pt3dadd( -62.597, 69.586, -57.1985, 0.37 ) }
    dend_2 { pt3dadd( -63.0306, 69.5793, -57.4952, 0.37 ) }
    dend_2 { pt3dadd( -63.4011, 69.5622, -57.7495, 0.37 ) }
    dend_2 { pt3dadd( -63.7433, 69.5384, -57.9675, 0.37 ) }
    dend_2 { pt3dadd( -64.148, 69.5077, -58.2462, 0.29 ) }
    dend_2 { pt3dadd( -64.3899, 69.4772, -58.4112, 0.29 ) }
    dend_2 { pt3dadd( -64.6565, 69.4518, -58.6119, 0.44 ) }
    dend_2 { pt3dadd( -65.1063, 69.4748, -58.9887, 0.81 ) }
    dend_2 { pt3dadd( -65.3662, 69.5394, -59.2466, 1.18 ) }
    dend_2 { pt3dadd( -65.6061, 69.6348, -59.5263, 1.18 ) }
    dend_2 { pt3dadd( -65.867, 69.7604, -59.9209, 0.74 ) }
    dend_2 { pt3dadd( -66.2621, 69.9601, -60.6249, 0.37 ) }
    dend_2 { pt3dadd( -66.4886, 70.0797, -61.0701, 0.81 ) }
    dend_2 { pt3dadd( -66.8429, 70.2646, -61.8485, 1.18 ) }
    dend_2 { pt3dadd( -67.1066, 70.4003, -62.4705, 1.18 ) }
    dend_2 { pt3dadd( -67.6177, 70.6493, -63.7481, 0.52 ) }
    dend_2 { pt3dadd( -67.8793, 70.7741, -64.3478, 0.37 ) }
    dend_2 { pt3dadd( -68.3097, 70.9469, -65.1741, 1.33 ) }
    dend_2 { pt3dadd( -68.6719, 71.068, -65.778, 2.14 ) }
    dend_2 { pt3dadd( -68.9062, 71.1502, -66.1199, 2.58 ) }
    dend_2 { pt3dadd( -69.4649, 71.3784, -66.8366, 2.8 ) }
    dend_2 { pt3dadd( -70.2095, 71.7546, -67.6868, 0.37 ) }
    dend_2 { pt3dadd( -70.6596, 72.0491, -68.1994, 0.37 ) }
    dend_2 { pt3dadd( -70.8382, 72.2026, -68.403, 0.37 ) }
    dend_2 { pt3dadd( -71.1308, 72.5634, -68.7312, 0.59 ) }
    dend_2 { pt3dadd( -71.3243, 72.9177, -68.9806, 0.74 ) }
    dend_2 { pt3dadd( -71.4783, 73.338, -69.2309, 0.74 ) }
    dend_2 { pt3dadd( -71.5745, 73.7354, -69.5367, 0.74 ) }
    dend_2 { pt3dadd( -71.642, 73.962, -69.7614, 0.44 ) }
    dend_2 { pt3dadd( -71.8076, 74.2355, -70.1412, 0.29 ) }
    dend_2 { pt3dadd( -71.9823, 74.42, -70.5003, 0.29 ) }
    dend_2 { pt3dadd( -72.1887, 74.575, -70.9078, 0.81 ) }
    dend_2 { pt3dadd( -72.7185, 74.8455, -71.8417, 1.03 ) }
    dend_2 { pt3dadd( -72.9539, 74.9358, -72.2187, 0.96 ) }
    dend_2 { pt3dadd( -73.3974, 75.0943, -72.8917, 0.22 ) }
    dend_2 { pt3dadd( -73.8214, 75.2545, -73.5495, 0.59 ) }
    dend_2 { pt3dadd( -74.094, 75.3822, -73.9754, 0.59 ) }
    dend_2 { pt3dadd( -74.367, 75.5423, -74.4102, 0.44 ) }
    dend_2 { pt3dadd( -74.6344, 75.7225, -74.8206, 0.37 ) }
    dend_2 { pt3dadd( -75.1397, 76.0486, -75.6095, 1.03 ) }
    dend_2 { pt3dadd( -75.5386, 76.2694, -76.1965, 1.69 ) }
    dend_2 { pt3dadd( -75.7533, 76.3827, -76.4797, 1.92 ) }
    dend_2 { pt3dadd( -76.0379, 76.5458, -76.8396, 1.92 ) }
    dend_2 { pt3dadd( -76.2123, 76.6539, -77.0669, 1.92 ) }
    dend_2 { pt3dadd( -76.8943, 77.088, -77.9344, 0.44 ) }
    dend_2 { pt3dadd( -77.1134, 77.239, -78.1867, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( -77.3754, 77.46, -78.5031, 0.52 ) }
    dend_2 { pt3dadd( -77.5118, 77.6081, -78.7017, 0.88 ) }
    dend_2 { pt3dadd( -77.7663, 77.9588, -79.1451, 1.03 ) }
    dend_2 { pt3dadd( -77.9154, 78.186, -79.4308, 1.18 ) }
    dend_2 { pt3dadd( -78.1365, 78.5592, -79.8935, 0.96 ) }
    dend_2 { pt3dadd( -78.4115, 79.0209, -80.4611, 0.74 ) }
    dend_2 { pt3dadd( -78.5857, 79.3123, -80.7958, 0.74 ) }
    dend_2 { pt3dadd( -78.75, 79.5883, -81.0897, 0.59 ) }
    dend_2 { pt3dadd( -79.0584, 80.078, -81.5583, 0.52 ) }
    dend_2 { pt3dadd( -79.2686, 80.3935, -81.8389, 0.52 ) }
    dend_2 { pt3dadd( -79.6174, 80.8791, -82.2229, 0.74 ) }
    dend_2 { pt3dadd( -80.0049, 81.3722, -82.555, 1.18 ) }
    dend_2 { pt3dadd( -80.3474, 81.7869, -82.8062, 1.4 ) }
    dend_2 { pt3dadd( -80.6023, 82.0794, -82.9739, 1.47 ) }
    dend_2 { pt3dadd( -80.86, 82.3464, -83.1265, 1.69 ) }
    dend_2 { pt3dadd( -81.2586, 82.6834, -83.3502, 1.4 ) }
    dend_2 { pt3dadd( -81.7785, 83.0269, -83.6462, 0.52 ) }
    dend_2 { pt3dadd( -82.2811, 83.2749, -83.9354, 0.52 ) }
    dend_2 { pt3dadd( -82.8115, 83.4759, -84.2379, 0.74 ) }
    dend_2 { pt3dadd( -83.2728, 83.619, -84.5274, 0.96 ) }
    dend_2 { pt3dadd( -83.8786, 83.7811, -84.957, 0.96 ) }
    dend_2 { pt3dadd( -84.3125, 83.8922, -85.3122, 0.74 ) }
    dend_2 { pt3dadd( -84.7274, 84.0264, -85.7035, 0.44 ) }
    dend_2 { pt3dadd( -84.9852, 84.1585, -85.9832, 0.44 ) }
    dend_2 { pt3dadd( -85.2913, 84.3808, -86.3558, 0.74 ) }
    dend_2 { pt3dadd( -85.5625, 84.6071, -86.685, 0.88 ) }
    dend_2 { pt3dadd( -85.7505, 84.7705, -86.9325, 0.88 ) }
    dend_2 { pt3dadd( -86.0715, 85.0696, -87.3937, 0.29 ) }
    dend_2 { pt3dadd( -86.3646, 85.3557, -87.856, 0.29 ) }
    dend_2 { pt3dadd( -86.6867, 85.657, -88.3669, 0.37 ) }
    dend_2 { pt3dadd( -86.9979, 85.929, -88.8423, 0.44 ) }
    dend_2 { pt3dadd( -87.4949, 86.3539, -89.6078, 0.59 ) }
    dend_2 { pt3dadd( -87.715, 86.5606, -89.968, 1.18 ) }
    dend_2 { pt3dadd( -88.0259, 86.9, -90.5022, 1.03 ) }
    dend_2 { pt3dadd( -88.2725, 87.2111, -90.9172, 1.69 ) }
    dend_2 { pt3dadd( -88.4056, 87.395, -91.1228, 1.69 ) }
    dend_2 { pt3dadd( -88.7093, 87.8152, -91.5537, 1.18 ) }
    dend_2 { pt3dadd( -89.1248, 88.3507, -92.0568, 0.37 ) }
    dend_2 { pt3dadd( -89.3742, 88.6527, -92.3572, 0.37 ) }
    dend_2 { pt3dadd( -89.7641, 89.101, -92.8246, 0.37 ) }
    dend_2 { pt3dadd( -90.1182, 89.4826, -93.254, 0.59 ) }
    dend_2 { pt3dadd( -90.4304, 89.7866, -93.6163, 1.11 ) }
    dend_2 { pt3dadd( -90.7011, 90.0175, -93.9103, 1.62 ) }
    dend_2 { pt3dadd( -91.0338, 90.2516, -94.2662, 1.69 ) }
    dend_2 { pt3dadd( -91.3478, 90.4638, -94.6356, 1.92 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 45/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -57.8648, 39.2144, 108.955, 0.88 ) }
    dend_60 { pt3dadd( -59.4134, 39.2716, 116.782, 0.88 ) }
    dend_60 { pt3dadd( -61.6893, 40.4202, 124.336, 0.88 ) }
    dend_60 { pt3dadd( -63.1866, 42.6363, 131.852, 0.88 ) }
    dend_60 { pt3dadd( -64.6596, 44.9065, 139.358, 0.88 ) }
    dend_60 { pt3dadd( -65.2441, 48.4903, 146.484, 0.88 ) }
    dend_60 { pt3dadd( -65.5042, 52.3321, 153.5, 0.88 ) }
    dend_60 { pt3dadd( -67.3541, 56.412, 160.158, 0.88 ) }
    dend_60 { pt3dadd( -69.3217, 61.2793, 166.274, 0.88 ) }
    dend_60 { pt3dadd( -71.8625, 66.6158, 171.806, 0.88 ) }
    dend_60 { pt3dadd( -74.8103, 72.1076, 176.999, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -57.8648, 39.2144, 108.955, 0.22 ) }
    dend_57 { pt3dadd( -58.7679, 40.2347, 116.796, 0.88 ) }
    dend_57 { pt3dadd( -59.2382, 42.0717, 124.523, 0.88 ) }
    dend_57 { pt3dadd( -61.5098, 43.7569, 131.961, 0.88 ) }
    dend_57 { pt3dadd( -63.9745, 45.7998, 139.251, 0.88 ) }
    dend_57 { pt3dadd( -66.3975, 46.9602, 146.74, 0.88 ) }
    dend_57 { pt3dadd( -69.1051, 47.3833, 154.209, 0.88 ) }
    dend_57 { pt3dadd( -70.8008, 47.791, 161.976, 0.88 ) }
    dend_57 { pt3dadd( -72.9679, 48.1038, 169.628, 0.88 ) }
    dend_57 { pt3dadd( -73.6605, 47.9265, 177.571, 0.88 ) }
    dend_57 { pt3dadd( -73.2974, 48.5176, 185.511, 0.88 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 67/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -186.449, 135.667, 68.5323, 0.88 ) }
    dend_53 { pt3dadd( -198.573, 143.302, 71.0618, 0.88 ) }
    dend_53 { pt3dadd( -210.926, 150.544, 73.5376, 0.88 ) }
    dend_53 { pt3dadd( -223.556, 157.542, 75.0352, 0.88 ) }
    dend_53 { pt3dadd( -236.945, 162.643, 76.9371, 0.88 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 72/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -186.449, 135.667, 68.5323, 0.22 ) }
    dend_52 { pt3dadd( -194.171, 141.314, 70.0649, 0.88 ) }
    dend_52 { pt3dadd( -202.159, 146.494, 71.7363, 0.88 ) }
    dend_52 { pt3dadd( -211.14, 149.714, 72.7195, 0.88 ) }
    dend_52 { pt3dadd( -219.639, 154.238, 72.3807, 0.88 ) }
    dend_52 { pt3dadd( -228.453, 157.997, 73.0663, 0.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -72.0707, -146.762, 75.7209, 0.88 ) }
    dend_42 { pt3dadd( -77.3999, -155.521, 82.0134, 0.88 ) }
    dend_42 { pt3dadd( -81.6384, -164.322, 89.0482, 0.88 ) }
    dend_42 { pt3dadd( -85.8533, -172.551, 96.6971, 0.88 ) }
    dend_42 { pt3dadd( -88.5385, -182.204, 103.484, 0.88 ) }
    dend_42 { pt3dadd( -89.3022, -190.436, 112.192, 0.88 ) }
    dend_42 { pt3dadd( -91.9872, -198.374, 120.763, 0.88 ) }
    dend_42 { pt3dadd( -92.8123, -204.242, 131.055, 0.88 ) }
    dend_42 { pt3dadd( -92.1274, -210.307, 141.255, 0.88 ) }
    dend_42 { pt3dadd( -89.4763, -214.576, 151.943, 0.88 ) }
    dend_42 { pt3dadd( -86.296, -220.6, 161.684, 0.88 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -72.0707, -146.762, 75.7209, 0.22 ) }
    dend_39 { pt3dadd( -77.7739, -154.799, 80.7562, 0.88 ) }
    dend_39 { pt3dadd( -83.8918, -161.938, 86.4852, 0.88 ) }
    dend_39 { pt3dadd( -89.4044, -170.611, 90.7163, 0.88 ) }
    dend_39 { pt3dadd( -95.4009, -179.135, 94.553, 0.88 ) }
    dend_39 { pt3dadd( -101.609, -187.848, 97.5901, 0.88 ) }
    dend_39 { pt3dadd( -109.221, -195.824, 98.6505, 0.88 ) }
    dend_39 { pt3dadd( -116.632, -203.876, 100.388, 0.88 ) }
    dend_39 { pt3dadd( -124.822, -210.889, 102.634, 0.88 ) }
    dend_39 { pt3dadd( -133.965, -216.829, 103.693, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 99/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -4.34732, -49.6879, 5.8135, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -4.21758, -50.6092, 5.26165, 1.25 ) }
    dend_27 { pt3dadd( -4.07528, -51.2456, 4.9399, 1.03 ) }
    dend_27 { pt3dadd( -3.77388, -52.1288, 4.56734, 0.88 ) }
    dend_27 { pt3dadd( -3.48916, -52.8517, 4.34853, 0.66 ) }
    dend_27 { pt3dadd( -3.27712, -53.3863, 4.25308, 0.66 ) }
    dend_27 { pt3dadd( -2.97748, -54.2044, 4.17662, 0.74 ) }
    dend_27 { pt3dadd( -2.73917, -54.9874, 4.2115, 0.66 ) }
    dend_27 { pt3dadd( -2.55562, -55.5899, 4.29484, 0.81 ) }
    dend_27 { pt3dadd( -2.37554, -56.1967, 4.40545, 0.81 ) }
    dend_27 { pt3dadd( -2.14607, -56.9788, 4.525, 0.74 ) }
    dend_27 { pt3dadd( -1.92256, -57.7632, 4.58913, 0.96 ) }
    dend_27 { pt3dadd( -1.67521, -58.6773, 4.60083, 1.03 ) }
    dend_27 { pt3dadd( -1.43419, -59.5386, 4.58792, 1.11 ) }
    dend_27 { pt3dadd( -1.19425, -60.3861, 4.56211, 1.25 ) }
    dend_27 { pt3dadd( -0.854185, -61.4733, 4.49535, 0.96 ) }
    dend_27 { pt3dadd( -0.471059, -62.566, 4.41234, 0.96 ) }
    dend_27 { pt3dadd( -0.0877945, -63.5497, 4.32774, 1.11 ) }
    dend_27 { pt3dadd( 0.26146, -64.3677, 4.24602, 1.47 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.34732, -49.6879, 5.8135, 2.06 ) }
    dend_20 { pt3dadd( -5.09951, -50.5395, 5.84261, 2.06 ) }
    dend_20 { pt3dadd( -5.91496, -51.5569, 5.73937, 2.06 ) }
    dend_20 { pt3dadd( -6.59787, -52.4955, 5.55574, 2.06 ) }
    dend_20 { pt3dadd( -7.21345, -53.3669, 5.3093, 2.06 ) }
    dend_20 { pt3dadd( -7.9196, -54.332, 4.96936, 1.99 ) }
    dend_20 { pt3dadd( -8.85308, -55.6012, 4.48571, 1.77 ) }
    dend_20 { pt3dadd( -9.65578, -56.7329, 3.94412, 1.47 ) }
    dend_20 { pt3dadd( -10.4515, -57.8822, 3.31116, 1.11 ) }
    dend_20 { pt3dadd( -11.2196, -58.9574, 2.64479, 1.11 ) }
    dend_20 { pt3dadd( -11.7931, -59.7148, 2.15405, 1.25 ) }
    dend_20 { pt3dadd( -12.2655, -60.291, 1.78408, 1.25 ) }
    dend_20 { pt3dadd( -13.3793, -61.4704, 1.0888, 1.18 ) }
    dend_20 { pt3dadd( -14.081, -62.0855, 0.771762, 1.25 ) }
    dend_20 { pt3dadd( -15.2483, -62.9397, 0.417521, 1.18 ) }
    dend_20 { pt3dadd( -16.1277, -63.4972, 0.291008, 1.18 ) }
    dend_20 { pt3dadd( -16.7739, -63.8495, 0.293734, 1.18 ) }
    dend_20 { pt3dadd( -17.841, -64.3171, 0.430986, 1.18 ) }
    dend_20 { pt3dadd( -18.9141, -64.6986, 0.680512, 1.25 ) }
    dend_20 { pt3dadd( -19.4874, -64.8678, 0.854133, 1.25 ) }
    dend_20 { pt3dadd( -20.2947, -65.0743, 1.17228, 1.25 ) }
    dend_20 { pt3dadd( -21.4909, -65.3777, 1.67737, 1.77 ) }
    dend_20 { pt3dadd( -22.3147, -65.5848, 2.03926, 2.14 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 67.278, 158.596, -21.6587, 0.74 ) }
    dend_14 { pt3dadd( 68.0459, 158.655, -22.3737, 0.74 ) }
    dend_14 { pt3dadd( 69.644, 158.956, -23.7551, 1.03 ) }
    dend_14 { pt3dadd( 70.461, 159.217, -24.4634, 0.52 ) }
    dend_14 { pt3dadd( 71.0821, 159.501, -25.0071, 0.52 ) }
    dend_14 { pt3dadd( 71.7205, 159.892, -25.5679, 0.74 ) }
    dend_14 { pt3dadd( 72.3529, 160.364, -26.1078, 0.52 ) }
    dend_14 { pt3dadd( 73.0224, 161.028, -26.5998, 0.59 ) }
    dend_14 { pt3dadd( 73.8603, 162.03, -27.1056, 0.44 ) }
    dend_14 { pt3dadd( 74.4338, 162.756, -27.4095, 0.52 ) }
    dend_14 { pt3dadd( 75.1782, 163.733, -27.7679, 0.44 ) }
    dend_14 { pt3dadd( 75.737, 164.467, -27.99, 0.29 ) }
    dend_14 { pt3dadd( 76.4253, 165.308, -28.2152, 0.29 ) }
    dend_14 { pt3dadd( 76.6417, 165.526, -28.2792, 0.59 ) }
    dend_14 { pt3dadd( 77.2322, 166.035, -28.4371, 0.59 ) }
    dend_14 { pt3dadd( 77.9814, 166.563, -28.6342, 0.44 ) }
    dend_14 { pt3dadd( 78.5828, 166.926, -28.802, 0.59 ) }
    dend_14 { pt3dadd( 79.6772, 167.588, -29.1317, 0.37 ) }
    dend_14 { pt3dadd( 80.4879, 168.136, -29.3931, 0.37 ) }
    dend_14 { pt3dadd( 81.1574, 168.627, -29.5957, 0.37 ) }
    dend_14 { pt3dadd( 81.8998, 169.203, -29.7907, 0.37 ) }
    dend_14 { pt3dadd( 82.9984, 170.04, -30.0175, 0.96 ) }
    dend_14 { pt3dadd( 83.7212, 170.592, -30.1374, 1.03 ) }
    dend_14 { pt3dadd( 84.6682, 171.329, -30.2601, 0.81 ) }
    dend_14 { pt3dadd( 85.3235, 171.868, -30.341, 0.66 ) }
    dend_14 { pt3dadd( 86.2297, 172.661, -30.4719, 0.88 ) }
    dend_14 { pt3dadd( 86.6935, 173.093, -30.5433, 1.25 ) }
    dend_14 { pt3dadd( 87.4019, 173.713, -30.6208, 0.88 ) }
    dend_14 { pt3dadd( 88.1349, 174.253, -30.7392, 0.29 ) }
    dend_14 { pt3dadd( 88.5862, 174.547, -30.8358, 0.44 ) }
    dend_14 { pt3dadd( 89.2258, 174.954, -31.001, 0.37 ) }
    dend_14 { pt3dadd( 90.2263, 175.538, -31.2689, 0.52 ) }
    dend_14 { pt3dadd( 91.2999, 176.094, -31.55, 0.59 ) }
    dend_14 { pt3dadd( 93.1718, 176.922, -31.9564, 0.66 ) }
    dend_14 { pt3dadd( 94.2456, 177.342, -32.1447, 0.52 ) }
    dend_14 { pt3dadd( 94.7001, 177.5, -32.2268, 0.59 ) }
    dend_14 { pt3dadd( 95.5789, 177.797, -32.3828, 0.44 ) }
    dend_14 { pt3dadd( 96.5095, 178.148, -32.5455, 0.37 ) }
    dend_14 { pt3dadd( 97.7212, 178.682, -32.7133, 0.37 ) }
    dend_14 { pt3dadd( 98.41, 179.024, -32.7436, 0.96 ) }
    dend_14 { pt3dadd( 99.2851, 179.522, -32.75, 0.88 ) }
    dend_14 { pt3dadd( 100.187, 180.107, -32.7452, 0.44 ) }
    dend_14 { pt3dadd( 100.774, 180.531, -32.7537, 0.29 ) }
    dend_14 { pt3dadd( 101.484, 181.077, -32.812, 0.44 ) }
    dend_14 { pt3dadd( 102.389, 181.834, -32.9464, 0.44 ) }
    dend_14 { pt3dadd( 103.369, 182.709, -33.1751, 0.52 ) }
    dend_14 { pt3dadd( 104.02, 183.332, -33.3878, 0.66 ) }
    dend_14 { pt3dadd( 105.12, 184.407, -33.93, 0.66 ) }
    dend_14 { pt3dadd( 106.082, 185.377, -34.5494, 0.44 ) }
    dend_14 { pt3dadd( 106.601, 185.918, -34.9584, 0.37 ) }
    dend_14 { pt3dadd( 107.193, 186.558, -35.5175, 0.37 ) }
    dend_14 { pt3dadd( 107.561, 186.924, -35.8746, 0.52 ) }
    dend_14 { pt3dadd( 108.289, 187.544, -36.5073, 0.59 ) }
    dend_14 { pt3dadd( 108.7, 187.811, -36.7665, 0.66 ) }
    dend_14 { pt3dadd( 109.449, 188.123, -37.0396, 0.52 ) }
    dend_14 { pt3dadd( 110.415, 188.359, -37.2629, 0.88 ) }
    dend_14 { pt3dadd( 111.115, 188.482, -37.3654, 0.88 ) }
    dend_14 { pt3dadd( 111.931, 188.63, -37.5023, 0.74 ) }
    dend_14 { pt3dadd( 112.623, 188.744, -37.6926, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( 113.144, 188.807, -37.8793, 0.29 ) }
    dend_14 { pt3dadd( 114.11, 188.856, -38.2671, 0.29 ) }
    dend_14 { pt3dadd( 114.777, 188.859, -38.5524, 0.29 ) }
    dend_14 { pt3dadd( 116.082, 188.901, -39.192, 0.88 ) }
    dend_14 { pt3dadd( 117.4, 189.041, -39.9045, 0.96 ) }
    dend_14 { pt3dadd( 118.022, 189.155, -40.2575, 0.88 ) }
    dend_14 { pt3dadd( 118.904, 189.34, -40.7714, 0.29 ) }
    dend_14 { pt3dadd( 119.307, 189.412, -40.9778, 0.29 ) }
    dend_14 { pt3dadd( 119.987, 189.455, -41.2562, 0.37 ) }
    dend_14 { pt3dadd( 120.689, 189.426, -41.4847, 0.37 ) }
    dend_14 { pt3dadd( 121.249, 189.397, -41.7064, 0.37 ) }
    dend_14 { pt3dadd( 122.665, 189.288, -42.3483, 0.44 ) }
    dend_14 { pt3dadd( 123.523, 189.187, -42.7615, 0.59 ) }
    dend_14 { pt3dadd( 124.087, 189.077, -43.0257, 0.81 ) }
    dend_14 { pt3dadd( 124.927, 188.893, -43.4243, 0.59 ) }
    dend_14 { pt3dadd( 126.274, 188.643, -44.082, 1.11 ) }
    dend_14 { pt3dadd( 126.941, 188.56, -44.424, 1.47 ) }
    dend_14 { pt3dadd( 127.445, 188.521, -44.6668, 1.47 ) }
    dend_14 { pt3dadd( 128.42, 188.439, -45.1118, 1.03 ) }
    dend_14 { pt3dadd( 129.661, 188.345, -45.6039, 0.59 ) }
    dend_14 { pt3dadd( 130.765, 188.24, -45.967, 0.96 ) }
    dend_14 { pt3dadd( 131.927, 188.09, -46.286, 0.96 ) }
    dend_14 { pt3dadd( 133.09, 187.927, -46.5933, 0.37 ) }
    dend_14 { pt3dadd( 134.136, 187.786, -46.8246, 0.37 ) }
    dend_14 { pt3dadd( 134.911, 187.677, -46.9621, 0.37 ) }
    dend_14 { pt3dadd( 136.123, 187.462, -47.1378, 0.37 ) }
    dend_14 { pt3dadd( 137.315, 187.25, -47.2895, 0.81 ) }
    dend_14 { pt3dadd( 138.337, 187.108, -47.4084, 1.03 ) }
    dend_14 { pt3dadd( 139.745, 187.012, -47.603, 1.25 ) }
    dend_14 { pt3dadd( 140.148, 187.001, -47.6578, 1.47 ) }
    dend_14 { pt3dadd( 141.855, 186.962, -47.8562, 0.29 ) }
    dend_14 { pt3dadd( 142.394, 186.963, -47.8905, 0.29 ) }
    dend_14 { pt3dadd( 143.01, 186.975, -47.8943, 0.44 ) }
    dend_14 { pt3dadd( 143.726, 187.014, -47.8608, 0.22 ) }
    dend_14 { pt3dadd( 144.516, 187.089, -47.7961, 0.59 ) }
    dend_14 { pt3dadd( 145.2, 187.196, -47.715, 0.59 ) }
    dend_14 { pt3dadd( 146.287, 187.43, -47.556, 0.22 ) }
    dend_14 { pt3dadd( 147.431, 187.695, -47.3876, 0.22 ) }
    dend_14 { pt3dadd( 148.848, 188.023, -47.1663, 0.22 ) }
    dend_14 { pt3dadd( 149.664, 188.218, -47.0296, 0.44 ) }
    dend_14 { pt3dadd( 151.086, 188.61, -46.7922, 0.22 ) }
    dend_14 { pt3dadd( 151.944, 188.856, -46.6519, 0.22 ) }
    dend_14 { pt3dadd( 152.611, 189.044, -46.549, 0.37 ) }
    dend_14 { pt3dadd( 154.483, 189.539, -46.2657, 0.22 ) }
    dend_14 { pt3dadd( 155.759, 189.849, -46.0808, 0.22 ) }
    dend_14 { pt3dadd( 158.049, 190.398, -45.7575, 0.22 ) }
    dend_14 { pt3dadd( 159.358, 190.68, -45.5902, 0.22 ) }
    dend_14 { pt3dadd( 160.011, 190.807, -45.5079, 0.96 ) }
    dend_14 { pt3dadd( 160.926, 190.979, -45.3941, 0.96 ) }
    dend_14 { pt3dadd( 161.754, 191.131, -45.2932, 0.88 ) }
    dend_14 { pt3dadd( 162.532, 191.255, -45.19, 0.88 ) }
    dend_14 { pt3dadd( 164.467, 191.564, -44.8974, 0.22 ) }
    dend_14 { pt3dadd( 166.885, 191.937, -44.4841, 0.22 ) }
    dend_14 { pt3dadd( 168.098, 192.117, -44.26, 0.44 ) }
    dend_14 { pt3dadd( 168.777, 192.196, -44.1309, 0.52 ) }
    dend_14 { pt3dadd( 170.315, 192.323, -43.8002, 0.22 ) }
    dend_14 { pt3dadd( 172.531, 192.438, -43.273, 0.22 ) }
    dend_14 { pt3dadd( 174.24, 192.489, -42.8083, 0.22 ) }
    dend_14 { pt3dadd( 175.872, 192.482, -42.3343, 0.22 ) }
    dend_14 { pt3dadd( 178.058, 192.395, -41.67, 0.22 ) }
    dend_14 { pt3dadd( 179.343, 192.297, -41.2644, 0.22 ) }
    dend_14 { pt3dadd( 180.334, 192.162, -40.9396, 1.33 ) }
    dend_14 { pt3dadd( 181.012, 192.003, -40.7077, 1.47 ) }
    dend_14 { pt3dadd( 182.395, 191.644, -40.2179, 0.66 ) }
    dend_14 { pt3dadd( 183.404, 191.333, -39.8498, 0.29 ) }
    dend_14 { pt3dadd( 184.777, 190.87, -39.3583, 0.29 ) }
    dend_14 { pt3dadd( 185.837, 190.475, -39.0326, 0.29 ) }
    dend_14 { pt3dadd( 186.894, 190.011, -38.7193, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 67.278, 158.596, -21.6587, 0.37 ) }
    dend_13 { pt3dadd( 67.9487, 159.18, -21.5744, 0.37 ) }
    dend_13 { pt3dadd( 68.6124, 159.787, -21.4586, 0.37 ) }
    dend_13 { pt3dadd( 68.911, 160.066, -21.3938, 0.37 ) }
    dend_13 { pt3dadd( 69.4173, 160.545, -21.3094, 0.37 ) }
    dend_13 { pt3dadd( 69.7754, 160.903, -21.2555, 0.37 ) }
    dend_13 { pt3dadd( 70.5424, 161.699, -21.1301, 0.66 ) }
    dend_13 { pt3dadd( 70.9277, 162.11, -21.0108, 1.25 ) }
    dend_13 { pt3dadd( 71.1933, 162.412, -20.8972, 1.25 ) }
    dend_13 { pt3dadd( 71.7306, 163.106, -20.6032, 0.59 ) }
    dend_13 { pt3dadd( 72.1765, 163.727, -20.2995, 0.37 ) }
    dend_13 { pt3dadd( 72.7025, 164.446, -19.9103, 0.37 ) }
    dend_13 { pt3dadd( 73.454, 165.417, -19.3581, 0.52 ) }
    dend_13 { pt3dadd( 73.7412, 165.787, -19.1324, 0.37 ) }
    dend_13 { pt3dadd( 74.1356, 166.306, -18.8233, 0.52 ) }
    dend_13 { pt3dadd( 74.439, 166.711, -18.5509, 0.66 ) }
    dend_13 { pt3dadd( 74.6879, 167.044, -18.3311, 0.66 ) }
    dend_13 { pt3dadd( 74.9953, 167.468, -18.0753, 0.44 ) }
    dend_13 { pt3dadd( 75.4944, 168.212, -17.702, 0.66 ) }
    dend_13 { pt3dadd( 75.7494, 168.613, -17.4954, 0.81 ) }
    dend_13 { pt3dadd( 76.2894, 169.512, -17.0323, 1.03 ) }
    dend_13 { pt3dadd( 76.6706, 170.156, -16.6941, 1.18 ) }
    dend_13 { pt3dadd( 76.8757, 170.489, -16.4771, 1.18 ) }
    dend_13 { pt3dadd( 77.3379, 171.176, -15.951, 0.44 ) }
    dend_13 { pt3dadd( 77.7338, 171.74, -15.4709, 0.37 ) }
    dend_13 { pt3dadd( 77.9525, 172.066, -15.1831, 0.37 ) }
    dend_13 { pt3dadd( 78.2746, 172.583, -14.7488, 0.66 ) }
    dend_13 { pt3dadd( 78.9621, 173.666, -13.8213, 0.96 ) }
    dend_13 { pt3dadd( 79.085, 173.858, -13.6661, 0.66 ) }
    dend_13 { pt3dadd( 79.357, 174.253, -13.3551, 0.29 ) }
    dend_13 { pt3dadd( 79.658, 174.674, -13.0709, 0.29 ) }
    dend_13 { pt3dadd( 79.8889, 174.976, -12.9144, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( 80.4368, 175.62, -12.678, 0.29 ) }
    dend_13 { pt3dadd( 80.958, 176.175, -12.5428, 0.44 ) }
    dend_13 { pt3dadd( 81.5222, 176.738, -12.4157, 0.59 ) }
    dend_13 { pt3dadd( 82.1646, 177.351, -12.2885, 0.59 ) }
    dend_13 { pt3dadd( 82.8827, 178.04, -12.1555, 0.66 ) }
    dend_13 { pt3dadd( 83.291, 178.451, -12.0681, 0.44 ) }
    dend_13 { pt3dadd( 83.6943, 178.9, -11.965, 0.37 ) }
    dend_13 { pt3dadd( 84.0375, 179.313, -11.8516, 0.52 ) }
    dend_13 { pt3dadd( 84.3688, 179.727, -11.719, 0.66 ) }
    dend_13 { pt3dadd( 84.6481, 180.083, -11.5848, 0.66 ) }
    dend_13 { pt3dadd( 85.2439, 180.859, -11.261, 0.59 ) }
    dend_13 { pt3dadd( 85.6507, 181.405, -11.032, 0.74 ) }
    dend_13 { pt3dadd( 86.1481, 182.095, -10.7218, 0.66 ) }
    dend_13 { pt3dadd( 86.7512, 182.986, -10.3149, 0.52 ) }
    dend_13 { pt3dadd( 87.1863, 183.669, -9.99722, 0.59 ) }
    dend_13 { pt3dadd( 87.4773, 184.137, -9.77134, 0.59 ) }
    dend_13 { pt3dadd( 87.7802, 184.614, -9.53968, 0.59 ) }
    dend_13 { pt3dadd( 88.2782, 185.356, -9.15191, 0.44 ) }
    dend_13 { pt3dadd( 88.6702, 185.934, -8.83621, 0.29 ) }
    dend_13 { pt3dadd( 89.011, 186.461, -8.51303, 0.44 ) }
    dend_13 { pt3dadd( 89.4121, 187.045, -8.10494, 0.59 ) }
    dend_13 { pt3dadd( 89.8736, 187.61, -7.67298, 0.74 ) }
    dend_13 { pt3dadd( 90.327, 188.091, -7.30472, 0.59 ) }
    dend_13 { pt3dadd( 90.843, 188.603, -6.9506, 0.96 ) }
    dend_13 { pt3dadd( 91.2057, 188.97, -6.69743, 1.11 ) }
    dend_13 { pt3dadd( 91.8367, 189.699, -6.2386, 0.59 ) }
    dend_13 { pt3dadd( 92.3485, 190.409, -5.85246, 0.52 ) }
    dend_13 { pt3dadd( 92.759, 191.012, -5.56244, 0.52 ) }
    dend_13 { pt3dadd( 93.1718, 191.607, -5.3109, 0.66 ) }
    dend_13 { pt3dadd( 93.8386, 192.573, -4.96038, 0.74 ) }
    dend_13 { pt3dadd( 94.2434, 193.205, -4.7586, 0.74 ) }
    dend_13 { pt3dadd( 94.6962, 193.96, -4.53189, 0.29 ) }
    dend_13 { pt3dadd( 95.1734, 194.761, -4.29734, 0.29 ) }
    dend_13 { pt3dadd( 95.3604, 195.032, -4.21995, 0.29 ) }
    dend_13 { pt3dadd( 95.8872, 195.718, -4.05234, 0.29 ) }
    dend_13 { pt3dadd( 96.4226, 196.318, -3.94547, 0.52 ) }
    dend_13 { pt3dadd( 96.7864, 196.666, -3.87781, 0.37 ) }
    dend_13 { pt3dadd( 97.2667, 197.07, -3.78999, 0.37 ) }
    dend_13 { pt3dadd( 97.7652, 197.45, -3.70613, 0.29 ) }
    dend_13 { pt3dadd( 98.5665, 197.994, -3.569, 0.29 ) }
    dend_13 { pt3dadd( 99.1688, 198.356, -3.47507, 0.37 ) }
    dend_13 { pt3dadd( 99.679, 198.647, -3.39945, 0.52 ) }
    dend_13 { pt3dadd( 100.074, 198.87, -3.33002, 0.52 ) }
    dend_13 { pt3dadd( 100.576, 199.151, -3.23213, 0.44 ) }
    dend_13 { pt3dadd( 101.357, 199.588, -3.08084, 0.44 ) }
    dend_13 { pt3dadd( 101.862, 199.88, -2.9913, 0.59 ) }
    dend_13 { pt3dadd( 102.386, 200.218, -2.90789, 0.74 ) }
    dend_13 { pt3dadd( 102.899, 200.564, -2.77977, 0.74 ) }
    dend_13 { pt3dadd( 103.493, 200.985, -2.59634, 0.52 ) }
    dend_13 { pt3dadd( 103.997, 201.361, -2.43112, 0.37 ) }
    dend_13 { pt3dadd( 104.698, 201.884, -2.20914, 0.29 ) }
    dend_13 { pt3dadd( 105.24, 202.287, -2.03183, 0.29 ) }
    dend_13 { pt3dadd( 106.516, 203.217, -1.62674, 0.66 ) }
    dend_13 { pt3dadd( 107.127, 203.659, -1.42724, 0.44 ) }
    dend_13 { pt3dadd( 107.749, 204.092, -1.21077, 0.52 ) }
    dend_13 { pt3dadd( 108.124, 204.345, -1.07678, 0.52 ) }
    dend_13 { pt3dadd( 108.544, 204.632, -0.920345, 0.37 ) }
    dend_13 { pt3dadd( 108.899, 204.903, -0.785524, 0.37 ) }
    dend_13 { pt3dadd( 109.271, 205.214, -0.672276, 0.44 ) }
    dend_13 { pt3dadd( 109.803, 205.702, -0.483141, 0.74 ) }
    dend_13 { pt3dadd( 110.136, 206.034, -0.355995, 0.88 ) }
    dend_13 { pt3dadd( 110.64, 206.595, -0.146404, 0.74 ) }
    dend_13 { pt3dadd( 111.012, 207.03, 0.0154944, 0.52 ) }
    dend_13 { pt3dadd( 111.484, 207.585, 0.221769, 0.37 ) }
    dend_13 { pt3dadd( 111.915, 208.073, 0.398816, 0.22 ) }
    dend_13 { pt3dadd( 112.218, 208.39, 0.509336, 0.22 ) }
    dend_13 { pt3dadd( 112.708, 208.861, 0.673234, 0.59 ) }
    dend_13 { pt3dadd( 113.105, 209.197, 0.812223, 0.74 ) }
    dend_13 { pt3dadd( 113.57, 209.518, 0.992259, 0.59 ) }
    dend_13 { pt3dadd( 113.789, 209.643, 1.08674, 0.59 ) }
    dend_13 { pt3dadd( 114.773, 210.146, 1.52765, 0.37 ) }
    dend_13 { pt3dadd( 115.16, 210.341, 1.69932, 0.37 ) }
    dend_13 { pt3dadd( 115.794, 210.649, 1.94638, 0.52 ) }
    dend_13 { pt3dadd( 116.401, 210.93, 2.13222, 0.52 ) }
    dend_13 { pt3dadd( 116.878, 211.127, 2.23265, 0.52 ) }
    dend_13 { pt3dadd( 117.584, 211.375, 2.37848, 0.81 ) }
    dend_13 { pt3dadd( 117.998, 211.502, 2.4637, 0.88 ) }
    dend_13 { pt3dadd( 118.538, 211.653, 2.56499, 0.88 ) }
    dend_13 { pt3dadd( 119.416, 211.872, 2.70402, 0.44 ) }
    dend_13 { pt3dadd( 120.237, 212.05, 2.83372, 0.37 ) }
    dend_13 { pt3dadd( 121.611, 212.309, 3.05392, 0.59 ) }
    dend_13 { pt3dadd( 122.137, 212.39, 3.14022, 0.59 ) }
    dend_13 { pt3dadd( 122.911, 212.495, 3.30567, 0.37 ) }
    dend_13 { pt3dadd( 123.474, 212.574, 3.44963, 0.29 ) }
    dend_13 { pt3dadd( 124.083, 212.656, 3.61748, 0.29 ) }
    dend_13 { pt3dadd( 124.828, 212.73, 3.77298, 0.29 ) }
    dend_13 { pt3dadd( 125.597, 212.782, 3.86972, 0.29 ) }
    dend_13 { pt3dadd( 126.85, 212.832, 4.02609, 0.59 ) }
    dend_13 { pt3dadd( 127.42, 212.854, 4.10345, 0.59 ) }
    dend_13 { pt3dadd( 127.954, 212.874, 4.17605, 0.59 ) }
    dend_13 { pt3dadd( 129.033, 212.89, 4.29847, 0.29 ) }
    dend_13 { pt3dadd( 129.602, 212.893, 4.34334, 0.29 ) }
    dend_13 { pt3dadd( 130.521, 212.906, 4.3815, 0.66 ) }
    dend_13 { pt3dadd( 131.159, 212.918, 4.3803, 0.74 ) }
    dend_13 { pt3dadd( 131.729, 212.929, 4.37564, 0.74 ) }
    dend_13 { pt3dadd( 132.857, 212.981, 4.33228, 0.22 ) }
    dend_13 { pt3dadd( 133.868, 213.074, 4.27363, 0.22 ) }
    dend_13 { pt3dadd( 134.446, 213.145, 4.21169, 0.29 ) }
    dend_13 { pt3dadd( 134.836, 213.214, 4.14901, 0.29 ) }
    dend_13 { pt3dadd( 135.554, 213.389, 4.01811, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( 136.443, 213.713, 3.84791, 0.37 ) }
    dend_13 { pt3dadd( 136.903, 213.945, 3.75763, 0.52 ) }
    dend_13 { pt3dadd( 137.252, 214.15, 3.69202, 0.52 ) }
    dend_13 { pt3dadd( 137.766, 214.467, 3.60606, 0.59 ) }
    dend_13 { pt3dadd( 138.359, 214.815, 3.52102, 0.59 ) }
    dend_13 { pt3dadd( 138.982, 215.114, 3.46839, 0.52 ) }
    dend_13 { pt3dadd( 139.469, 215.291, 3.45344, 0.59 ) }
    dend_13 { pt3dadd( 140.08, 215.463, 3.43978, 0.44 ) }
    dend_13 { pt3dadd( 140.591, 215.578, 3.42798, 0.29 ) }
    dend_13 { pt3dadd( 141.156, 215.688, 3.4461, 0.29 ) }
    dend_13 { pt3dadd( 142.187, 215.927, 3.5296, 0.29 ) }
    dend_13 { pt3dadd( 142.555, 216.022, 3.57167, 0.29 ) }
    dend_13 { pt3dadd( 143.291, 216.243, 3.67056, 0.29 ) }
    dend_13 { pt3dadd( 143.675, 216.377, 3.72729, 0.29 ) }
    dend_13 { pt3dadd( 144.84, 216.839, 3.8798, 0.29 ) }
    dend_13 { pt3dadd( 145.442, 217.109, 3.91074, 0.29 ) }
    dend_13 { pt3dadd( 146.212, 217.48, 3.88463, 0.22 ) }
    dend_13 { pt3dadd( 146.588, 217.656, 3.84857, 0.44 ) }
    dend_13 { pt3dadd( 146.963, 217.819, 3.79085, 0.44 ) }
    dend_13 { pt3dadd( 147.589, 218.057, 3.6606, 0.29 ) }
    dend_13 { pt3dadd( 148.639, 218.358, 3.36998, 0.22 ) }
    dend_13 { pt3dadd( 149.095, 218.456, 3.24393, 0.22 ) }
    dend_13 { pt3dadd( 149.538, 218.541, 3.12525, 0.44 ) }
    dend_13 { pt3dadd( 149.962, 218.602, 3.00226, 0.44 ) }
    dend_13 { pt3dadd( 150.488, 218.654, 2.82954, 0.37 ) }
    dend_13 { pt3dadd( 151.165, 218.714, 2.59264, 0.29 ) }
    dend_13 { pt3dadd( 151.917, 218.789, 2.31216, 0.29 ) }
    dend_13 { pt3dadd( 152.394, 218.859, 2.11062, 0.29 ) }
    dend_13 { pt3dadd( 153.168, 219.019, 1.7481, 0.29 ) }
    dend_13 { pt3dadd( 153.639, 219.154, 1.51186, 0.29 ) }
    dend_13 { pt3dadd( 154.215, 219.369, 1.18788, 0.44 ) }
    dend_13 { pt3dadd( 154.739, 219.581, 0.839473, 0.37 ) }
    dend_13 { pt3dadd( 155.228, 219.739, 0.459632, 0.52 ) }
    dend_13 { pt3dadd( 155.609, 219.843, 0.151645, 0.52 ) }
    dend_13 { pt3dadd( 155.904, 219.911, -0.0750036, 0.66 ) }
    dend_13 { pt3dadd( 156.735, 220.079, -0.690618, 0.96 ) }
    dend_13 { pt3dadd( 157.484, 220.228, -1.2224, 0.81 ) }
    dend_13 { pt3dadd( 158.502, 220.474, -1.91506, 0.29 ) }
    dend_13 { pt3dadd( 159.133, 220.644, -2.40224, 0.29 ) }
    dend_13 { pt3dadd( 159.687, 220.83, -2.84872, 0.29 ) }
    dend_13 { pt3dadd( 160.064, 220.989, -3.118, 0.29 ) }
    dend_13 { pt3dadd( 160.851, 221.317, -3.53196, 0.29 ) }
    dend_13 { pt3dadd( 161.341, 221.499, -3.73605, 0.66 ) }
    dend_13 { pt3dadd( 163.188, 222.025, -4.41076, 0.29 ) }
    dend_13 { pt3dadd( 163.595, 222.09, -4.55825, 0.22 ) }
    dend_13 { pt3dadd( 165.166, 222.238, -5.13929, 0.22 ) }
    dend_13 { pt3dadd( 166.712, 222.274, -5.70503, 0.22 ) }
    dend_13 { pt3dadd( 167.394, 222.241, -5.94576, 0.37 ) }
    dend_13 { pt3dadd( 168.08, 222.175, -6.13037, 0.44 ) }
    dend_13 { pt3dadd( 168.381, 222.141, -6.15842, 0.22 ) }
    dend_13 { pt3dadd( 174.784, 226.614, -5.88569, 0.22 ) }
    dend_13 { pt3dadd( 181.503, 230.417, -6.83051, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 52/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -124.911, 106.738, 12.6578, 0.88 ) }
    dend_9 { pt3dadd( -133.047, 111.128, 15.3527, 0.88 ) }
    dend_9 { pt3dadd( -140.886, 116.781, 16.159, 0.88 ) }
    dend_9 { pt3dadd( -147.99, 123.305, 14.7388, 0.88 ) }
    dend_9 { pt3dadd( -156.723, 127.263, 14.0791, 0.88 ) }
    dend_9 { pt3dadd( -165.863, 129.561, 12.5624, 0.88 ) }
    dend_9 { pt3dadd( -175.099, 131.76, 11.5912, 0.88 ) }
    dend_9 { pt3dadd( -183.847, 134.755, 9.12977, 0.88 ) }
    dend_9 { pt3dadd( -193.046, 137.258, 8.51855, 0.88 ) }
    dend_9 { pt3dadd( -201.874, 141.008, 8.95355, 0.88 ) }
    dend_9 { pt3dadd( -210.057, 145.641, 11.0865, 0.88 ) }
    dend_9 { pt3dadd( -217.11, 150.952, 15.0382, 0.88 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 64/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -124.911, 106.738, 12.6578, 0.22 ) }
    dend_6 { pt3dadd( -133.785, 111.464, 15.6291, 0.88 ) }
    dend_6 { pt3dadd( -142.212, 116.195, 19.6964, 0.88 ) }
    dend_6 { pt3dadd( -149.66, 120.524, 25.641, 0.88 ) }
    dend_6 { pt3dadd( -155.916, 125.703, 32.3044, 0.88 ) }
    dend_6 { pt3dadd( -161.008, 129.234, 40.6896, 0.88 ) }
    dend_6 { pt3dadd( -165.638, 132.352, 49.4755, 0.88 ) }
    dend_6 { pt3dadd( -169.167, 134.822, 58.9246, 0.88 ) }
    dend_6 { pt3dadd( -173.901, 136.254, 68.0274, 0.88 ) }
    dend_6 { pt3dadd( -178.884, 136.083, 77.08, 0.88 ) }
    dend_6 { pt3dadd( -185.023, 135.715, 85.3837, 0.88 ) }
    dend_6 { pt3dadd( -189.664, 136.329, 94.6079, 0.88 ) }
    dend_6 { pt3dadd( -193.216, 136.553, 104.313, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 77/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -91.3478, 90.4638, -94.6356, 0.29 ) }
    dend_4 { pt3dadd( -91.364, 91.4587, -95.2233, 0.29 ) }
    dend_4 { pt3dadd( -91.4682, 92.0823, -95.6591, 0.29 ) }
    dend_4 { pt3dadd( -91.6051, 92.5473, -96.017, 0.37 ) }
    dend_4 { pt3dadd( -91.6862, 92.7885, -96.1991, 0.37 ) }
    dend_4 { pt3dadd( -91.7808, 93.1329, -96.4595, 0.81 ) }
    dend_4 { pt3dadd( -91.8971, 93.5613, -96.787, 0.81 ) }
    dend_4 { pt3dadd( -92.0434, 93.9379, -97.1021, 0.44 ) }
    dend_4 { pt3dadd( -92.1586, 94.1849, -97.3227, 0.22 ) }
    dend_4 { pt3dadd( -92.2834, 94.4591, -97.6084, 0.22 ) }
    dend_4 { pt3dadd( -92.5093, 95.0754, -98.2992, 0.37 ) }
    dend_4 { pt3dadd( -92.5587, 95.2515, -98.5068, 0.22 ) }
    dend_4 { pt3dadd( -92.6549, 95.6064, -98.9213, 0.22 ) }
    dend_4 { pt3dadd( -92.7407, 95.8888, -99.2493, 0.59 ) }
    dend_4 { pt3dadd( -92.8859, 96.3048, -99.782, 0.74 ) }
    dend_4 { pt3dadd( -93.0615, 96.7481, -100.484, 0.37 ) }
    dend_4 { pt3dadd( -93.1908, 97.0425, -101.121, 0.37 ) }
    dend_4 { pt3dadd( -93.2563, 97.2518, -101.635, 0.37 ) }
    dend_4 { pt3dadd( -93.3109, 97.461, -102.166, 1.03 ) }
    dend_4 { pt3dadd( -93.4053, 97.8109, -103.082, 1.62 ) }
    dend_4 { pt3dadd( -93.5464, 98.2651, -104.349, 1.84 ) }
    dend_4 { pt3dadd( -93.7262, 98.8454, -106.065, 1.33 ) }
    dend_4 { pt3dadd( -93.8354, 99.2518, -107.266, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_4 { pt3dadd( -93.877, 99.4521, -107.824, 0.44 ) }
    dend_4 { pt3dadd( -93.92, 99.6681, -108.359, 0.44 ) }
    dend_4 { pt3dadd( -93.9716, 99.8703, -108.776, 0.59 ) }
    dend_4 { pt3dadd( -94.1861, 100.506, -109.881, 0.74 ) }
    dend_4 { pt3dadd( -94.2645, 100.691, -110.201, 0.74 ) }
    dend_4 { pt3dadd( -94.3796, 100.873, -110.631, 0.88 ) }
    dend_4 { pt3dadd( -94.5512, 101.065, -111.286, 0.96 ) }
    dend_4 { pt3dadd( -94.7003, 101.173, -111.861, 0.52 ) }
    dend_4 { pt3dadd( -94.8173, 101.224, -112.242, 0.37 ) }
    dend_4 { pt3dadd( -95.149, 101.313, -113.206, 0.29 ) }
    dend_4 { pt3dadd( -95.3912, 101.381, -113.989, 0.29 ) }
    dend_4 { pt3dadd( -95.5803, 101.446, -114.625, 0.29 ) }
    dend_4 { pt3dadd( -95.9264, 101.611, -115.76, 0.29 ) }
    dend_4 { pt3dadd( -96.0724, 101.74, -116.235, 0.29 ) }
    dend_4 { pt3dadd( -96.1932, 101.929, -116.644, 0.29 ) }
    dend_4 { pt3dadd( -96.3518, 102.308, -117.161, 0.29 ) }
    dend_4 { pt3dadd( -96.4406, 102.655, -117.539, 0.52 ) }
    dend_4 { pt3dadd( -96.4881, 102.961, -117.836, 0.66 ) }
    dend_4 { pt3dadd( -96.5678, 103.44, -118.266, 0.66 ) }
    dend_4 { pt3dadd( -96.6619, 103.961, -118.794, 0.44 ) }
    dend_4 { pt3dadd( -96.7303, 104.248, -119.142, 0.59 ) }
    dend_4 { pt3dadd( -96.8768, 104.843, -119.931, 0.29 ) }
    dend_4 { pt3dadd( -96.967, 105.287, -120.534, 0.29 ) }
    dend_4 { pt3dadd( -97.052, 105.69, -121.07, 0.81 ) }
    dend_4 { pt3dadd( -97.163, 106.201, -121.709, 1.25 ) }
    dend_4 { pt3dadd( -97.4196, 107.332, -123.004, 0.44 ) }
    dend_4 { pt3dadd( -97.6254, 108.247, -123.946, 0.74 ) }
    dend_4 { pt3dadd( -97.7931, 108.989, -124.627, 0.29 ) }
    dend_4 { pt3dadd( -97.8889, 109.429, -125.018, 0.29 ) }
    dend_4 { pt3dadd( -97.9948, 109.986, -125.478, 0.29 ) }
    dend_4 { pt3dadd( -98.1822, 110.968, -126.136, 0.22 ) }
    dend_4 { pt3dadd( -98.3063, 111.646, -126.447, 0.22 ) }
    dend_4 { pt3dadd( -98.3538, 111.874, -126.521, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 33/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -91.3478, 90.4638, -94.6356, 0.44 ) }
    dend_3 { pt3dadd( -93.2067, 91.7257, -95.0419, 0.44 ) }
    dend_3 { pt3dadd( -94.1616, 92.3369, -95.2343, 0.52 ) }
    dend_3 { pt3dadd( -94.9186, 92.7911, -95.3778, 0.59 ) }
    dend_3 { pt3dadd( -95.7373, 93.2383, -95.5548, 0.59 ) }
    dend_3 { pt3dadd( -96.7295, 93.7383, -95.791, 0.37 ) }
    dend_3 { pt3dadd( -97.6307, 94.1833, -96.0365, 0.37 ) }
    dend_3 { pt3dadd( -98.3827, 94.5407, -96.2556, 0.96 ) }
    dend_3 { pt3dadd( -99.3311, 94.9751, -96.6054, 1.4 ) }
    dend_3 { pt3dadd( -100.113, 95.3436, -96.9428, 1.62 ) }
    dend_3 { pt3dadd( -101.192, 95.9274, -97.4859, 0.59 ) }
    dend_3 { pt3dadd( -102.029, 96.4658, -98.0249, 0.81 ) }
    dend_3 { pt3dadd( -102.677, 96.9271, -98.502, 0.96 ) }
    dend_3 { pt3dadd( -103.003, 97.1785, -98.7632, 1.18 ) }
    dend_3 { pt3dadd( -103.573, 97.6602, -99.2335, 0.29 ) }
    dend_3 { pt3dadd( -104.294, 98.2992, -99.808, 0.22 ) }
    dend_3 { pt3dadd( -105.274, 99.1251, -100.571, 0.96 ) }
    dend_3 { pt3dadd( -105.779, 99.5012, -100.95, 0.96 ) }
    dend_3 { pt3dadd( -106.528, 99.9945, -101.528, 0.66 ) }
    dend_3 { pt3dadd( -107.373, 100.452, -102.218, 0.44 ) }
    dend_3 { pt3dadd( -108.278, 100.825, -103.02, 0.44 ) }
    dend_3 { pt3dadd( -109.189, 101.139, -103.87, 0.81 ) }
    dend_3 { pt3dadd( -110.004, 101.416, -104.656, 0.96 ) }
    dend_3 { pt3dadd( -110.93, 101.751, -105.607, 0.74 ) }
    dend_3 { pt3dadd( -112.239, 102.222, -107.04, 0.29 ) }
    dend_3 { pt3dadd( -113.02, 102.501, -107.953, 0.29 ) }
    dend_3 { pt3dadd( -113.546, 102.695, -108.603, 0.44 ) }
    dend_3 { pt3dadd( -113.949, 102.838, -109.125, 0.66 ) }
    dend_3 { pt3dadd( -114.395, 102.984, -109.722, 0.52 ) }
    dend_3 { pt3dadd( -114.922, 103.113, -110.435, 0.52 ) }
    dend_3 { pt3dadd( -115.563, 103.183, -111.284, 0.66 ) }
    dend_3 { pt3dadd( -116.268, 103.142, -112.128, 0.37 ) }
    dend_3 { pt3dadd( -116.936, 102.993, -112.857, 0.29 ) }
    dend_3 { pt3dadd( -117.487, 102.834, -113.38, 0.29 ) }
    dend_3 { pt3dadd( -117.919, 102.701, -113.767, 0.29 ) }
    dend_3 { pt3dadd( -118.726, 102.44, -114.394, 0.29 ) }
    dend_3 { pt3dadd( -119.296, 102.223, -114.87, 0.52 ) }
    dend_3 { pt3dadd( -119.834, 101.989, -115.364, 0.74 ) }
    dend_3 { pt3dadd( -120.53, 101.601, -116.043, 0.74 ) }
    dend_3 { pt3dadd( -121.475, 100.821, -117.133, 0.52 ) }
    dend_3 { pt3dadd( -121.907, 100.222, -117.788, 1.47 ) }
    dend_3 { pt3dadd( -122.557, 98.9979, -118.954, 1.92 ) }
    dend_3 { pt3dadd( -122.864, 98.3331, -119.571, 1.84 ) }
    dend_3 { pt3dadd( -123.292, 97.3383, -120.519, 0.88 ) }
    dend_3 { pt3dadd( -123.726, 96.3827, -121.574, 0.66 ) }
    dend_3 { pt3dadd( -124.372, 95.3054, -123.024, 0.37 ) }
    dend_3 { pt3dadd( -124.797, 94.8829, -123.863, 0.29 ) }
    dend_3 { pt3dadd( -125.318, 94.6512, -124.714, 0.29 ) }
    dend_3 { pt3dadd( -125.971, 94.5929, -125.627, 0.44 ) }
    dend_3 { pt3dadd( -127.202, 94.6717, -127.128, 0.59 ) }
    dend_3 { pt3dadd( -128.279, 94.8683, -128.431, 0.66 ) }
    dend_3 { pt3dadd( -128.91, 95.0336, -129.199, 0.66 ) }
    dend_3 { pt3dadd( -129.3, 95.1211, -129.708, 0.44 ) }
    dend_3 { pt3dadd( -130.099, 95.2332, -130.756, 0.37 ) }
    dend_3 { pt3dadd( -131.221, 95.3233, -132.307, 0.37 ) }
    dend_3 { pt3dadd( -132.405, 95.3843, -133.874, 0.37 ) }
    dend_3 { pt3dadd( -132.802, 95.4046, -134.399, 0.52 ) }
    dend_3 { pt3dadd( -133.617, 95.412, -135.451, 0.66 ) }
    dend_3 { pt3dadd( -134.57, 95.4043, -136.615, 0.37 ) }
    dend_3 { pt3dadd( -135.666, 95.2523, -138.068, 0.37 ) }
    dend_3 { pt3dadd( -136.58, 95.0026, -139.276, 0.74 ) }
    dend_3 { pt3dadd( -137.073, 94.8164, -139.886, 0.74 ) }
    dend_3 { pt3dadd( -138.076, 94.3949, -141.138, 0.52 ) }
    dend_3 { pt3dadd( -139.04, 93.9781, -142.351, 0.52 ) }
    dend_3 { pt3dadd( -141.254, 92.8528, -145.323, 0.52 ) }
    dend_3 { pt3dadd( -141.999, 92.3302, -146.42, 0.44 ) }
    dend_3 { pt3dadd( -142.463, 91.8881, -147.223, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( -142.899, 91.395, -148.029, 0.29 ) }
    dend_3 { pt3dadd( -143.701, 90.39, -149.532, 0.29 ) }
    dend_3 { pt3dadd( -144.318, 89.6472, -150.679, 0.29 ) }
    dend_3 { pt3dadd( -145.486, 88.5847, -152.495, 0.52 ) }
    dend_3 { pt3dadd( -146.162, 87.9052, -153.709, 0.66 ) }
    dend_3 { pt3dadd( -146.592, 87.3708, -154.615, 0.66 ) }
    dend_3 { pt3dadd( -146.85, 86.8925, -155.312, 0.52 ) }
    dend_3 { pt3dadd( -147.147, 86.1849, -156.236, 0.52 ) }
    dend_3 { pt3dadd( -147.392, 85.6682, -156.937, 0.22 ) }
    dend_3 { pt3dadd( -148.409, 84.0165, -159.408, 1.18 ) }
    dend_3 { pt3dadd( -148.762, 83.4058, -160.305, 1.4 ) }
    dend_3 { pt3dadd( -149.372, 82.1656, -161.914, 0.52 ) }
    dend_3 { pt3dadd( -149.6, 81.6803, -162.465, 0.29 ) }
    dend_3 { pt3dadd( -150.01, 80.8558, -163.239, 0.29 ) }
    dend_3 { pt3dadd( -150.589, 79.8605, -164.059, 0.29 ) }
    dend_3 { pt3dadd( -151.948, 77.9084, -165.3, 0.44 ) }
    dend_3 { pt3dadd( -152.927, 76.688, -165.952, 0.44 ) }
    dend_3 { pt3dadd( -153.711, 75.7554, -166.393, 0.29 ) }
    dend_3 { pt3dadd( -155.273, 73.8754, -167.186, 0.52 ) }
    dend_3 { pt3dadd( -156.017, 72.9688, -167.497, 0.52 ) }
    dend_3 { pt3dadd( -157.076, 71.7068, -167.842, 0.37 ) }
    dend_3 { pt3dadd( -158.25, 70.4427, -168.1, 0.29 ) }
    dend_3 { pt3dadd( -159.924, 68.8364, -168.441, 0.44 ) }
    dend_3 { pt3dadd( -160.68, 68.1952, -168.594, 0.44 ) }
    dend_3 { pt3dadd( -161.959, 67.2895, -168.864, 0.22 ) }
    dend_3 { pt3dadd( -163.026, 66.6464, -169.129, 0.22 ) }
    dend_3 { pt3dadd( -164.07, 66.1286, -169.441, 0.52 ) }
    dend_3 { pt3dadd( -164.461, 65.9639, -169.574, 0.52 ) }
    dend_3 { pt3dadd( -166.041, 65.4015, -170.151, 0.29 ) }
    dend_3 { pt3dadd( -167.973, 64.7923, -170.94, 0.29 ) }
    dend_3 { pt3dadd( -169.455, 64.3961, -171.606, 0.22 ) }
    dend_3 { pt3dadd( -171.383, 63.9071, -172.509, 0.22 ) }
    dend_3 { pt3dadd( -172.457, 63.6319, -173.024, 0.59 ) }
    dend_3 { pt3dadd( -173.566, 63.3375, -173.546, 0.44 ) }
    dend_3 { pt3dadd( -174.648, 63.0558, -174.025, 0.22 ) }
    dend_3 { pt3dadd( -175.315, 62.8926, -174.279, 0.22 ) }
    dend_3 { pt3dadd( -176.212, 62.6917, -174.56, 0.37 ) }
    dend_3 { pt3dadd( -177.006, 62.5349, -174.754, 0.37 ) }
    dend_3 { pt3dadd( -177.882, 62.3832, -174.927, 0.22 ) }
    dend_3 { pt3dadd( -179.046, 62.2086, -175.146, 0.22 ) }
    dend_3 { pt3dadd( -180.004, 62.0956, -175.335, 0.37 ) }
    dend_3 { pt3dadd( -180.811, 62.0316, -175.493, 0.37 ) }
    dend_3 { pt3dadd( -181.801, 61.9657, -175.663, 0.37 ) }
    dend_3 { pt3dadd( -182.779, 61.8938, -175.816, 0.29 ) }
    dend_3 { pt3dadd( -183.703, 61.83, -175.969, 0.37 ) }
    dend_3 { pt3dadd( -186.037, 61.6952, -176.374, 0.22 ) }
    dend_3 { pt3dadd( -187.633, 61.6096, -176.647, 0.22 ) }
    dend_3 { pt3dadd( -189.845, 61.501, -177.008, 0.22 ) }
    dend_3 { pt3dadd( -190.76, 61.4595, -177.147, 0.22 ) }
    dend_3 { pt3dadd( -191.722, 61.4166, -177.277, 0.44 ) }
    dend_3 { pt3dadd( -192.224, 61.3906, -177.329, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 51/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -74.8103, 72.1076, 176.999, 0.88 ) }
    dend_62 { pt3dadd( -76.8674, 76.1505, 185.805, 0.88 ) }
    dend_62 { pt3dadd( -78.6112, 79.7354, 194.859, 0.88 ) }
    dend_62 { pt3dadd( -81.7275, 83.4303, 203.5, 0.88 ) }
    dend_62 { pt3dadd( -85.111, 87.0768, 212.061, 0.88 ) }
    dend_62 { pt3dadd( -88.1051, 90.2895, 220.922, 0.88 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -74.8103, 72.1076, 176.999, 0.22 ) }
    dend_61 { pt3dadd( -77.1051, 76.5963, 186.239, 0.88 ) }
    dend_61 { pt3dadd( -81.0938, 81.0945, 194.9, 0.88 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 60/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -73.2974, 48.5176, 185.511, 0.88 ) }
    dend_59 { pt3dadd( -76.3461, 46.8127, 194.093, 0.88 ) }
    dend_59 { pt3dadd( -78.4125, 45.8991, 203.071, 0.88 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 63/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -73.2974, 48.5176, 185.511, 0.22 ) }
    dend_58 { pt3dadd( -73.4727, 52.7493, 193.901, 0.88 ) }
    dend_58 { pt3dadd( -72.1318, 57.3872, 201.962, 0.88 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 66/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -236.945, 162.643, 76.9371, 0.88 ) }
    dend_55 { pt3dadd( -247.635, 165.284, 74.6402, 0.88 ) }
    dend_55 { pt3dadd( -257.669, 169.431, 71.707, 0.88 ) }
    dend_55 { pt3dadd( -267.716, 174.201, 69.9901, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 70/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -236.945, 162.643, 76.9371, 0.22 ) }
    dend_54 { pt3dadd( -242.355, 173.307, 81.1565, 0.88 ) }
    dend_54 { pt3dadd( -246.777, 184.821, 84.1426, 0.88 ) }
    dend_54 { pt3dadd( -250.133, 196.641, 87.4893, 0.88 ) }
    dend_54 { pt3dadd( -252.151, 208.837, 90.6821, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 75/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -86.296, -220.6, 161.684, 0.88 ) }
    dend_44 { pt3dadd( -87.3679, -225.368, 167.353, 0.88 ) }
    dend_44 { pt3dadd( -88.8543, -230.357, 172.75, 0.88 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 78/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -86.296, -220.6, 161.684, 0.22 ) }
    dend_43 { pt3dadd( -87.7301, -226.779, 169.215, 0.88 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -133.965, -216.829, 103.693, 0.88 ) }
    dend_41 { pt3dadd( -141.651, -227.018, 106.272, 0.88 ) }
    dend_41 { pt3dadd( -149.456, -237.359, 107.617, 0.88 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 83/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -133.965, -216.829, 103.693, 0.22 ) }
    dend_40 { pt3dadd( -139.788, -222.288, 107.636, 0.88 ) }
    dend_40 { pt3dadd( -145.314, -228.79, 110.412, 0.88 ) }
    // Section: dend_37, id: dend_37, parent: dend_27 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.26146, -64.3677, 4.24602, 0.66 ) }
    dend_37 { pt3dadd( 0.967493, -66.1177, 4.35889, 0.66 ) }
    dend_37 { pt3dadd( 1.42767, -67.3376, 4.35487, 0.52 ) }
    dend_37 { pt3dadd( 1.92495, -68.8256, 4.32061, 1.18 ) }
    dend_37 { pt3dadd( 2.14805, -69.6401, 4.33002, 1.62 ) }
    dend_37 { pt3dadd( 2.31436, -70.4921, 4.37474, 1.33 ) }
    dend_37 { pt3dadd( 2.43973, -71.5904, 4.47652, 0.74 ) }
    dend_37 { pt3dadd( 2.49368, -72.8658, 4.53546, 0.44 ) }
    dend_37 { pt3dadd( 2.51106, -73.6617, 4.59152, 0.44 ) }
    dend_37 { pt3dadd( 2.49683, -74.7782, 4.72958, 0.44 ) }
    dend_37 { pt3dadd( 2.50817, -75.9175, 4.87886, 0.52 ) }
    dend_37 { pt3dadd( 2.58849, -77.0584, 5.00939, 0.66 ) }
    dend_37 { pt3dadd( 2.83379, -78.2036, 5.05913, 0.44 ) }
    dend_37 { pt3dadd( 3.31925, -79.1473, 5.02421, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_37 { pt3dadd( 3.67302, -79.6277, 5.00974, 0.88 ) }
    dend_37 { pt3dadd( 4.28092, -80.3298, 4.97696, 0.88 ) }
    dend_37 { pt3dadd( 4.63886, -80.7178, 4.95155, 0.96 ) }
    dend_37 { pt3dadd( 5.07474, -81.1881, 4.91587, 0.66 ) }
    dend_37 { pt3dadd( 6.01966, -82.3049, 4.81247, 0.44 ) }
    dend_37 { pt3dadd( 6.92359, -83.5281, 4.6421, 0.52 ) }
    dend_37 { pt3dadd( 7.34376, -84.123, 4.55088, 0.52 ) }
    dend_37 { pt3dadd( 8.04422, -85.0893, 4.3916, 0.74 ) }
    dend_37 { pt3dadd( 8.5353, -85.7345, 4.25914, 0.96 ) }
    dend_37 { pt3dadd( 9.07279, -86.388, 4.07594, 0.96 ) }
    dend_37 { pt3dadd( 9.89143, -87.2731, 3.70998, 0.59 ) }
    dend_37 { pt3dadd( 10.795, -88.0522, 3.31225, 0.59 ) }
    dend_37 { pt3dadd( 11.8614, -88.8793, 2.90855, 0.88 ) }
    dend_37 { pt3dadd( 12.2325, -89.1646, 2.78457, 0.88 ) }
    dend_37 { pt3dadd( 12.7348, -89.584, 2.62721, 0.88 ) }
    dend_37 { pt3dadd( 13.3696, -90.1746, 2.4383, 0.74 ) }
    dend_37 { pt3dadd( 14.306, -91.1641, 2.13111, 0.74 ) }
    dend_37 { pt3dadd( 15.0837, -92.1336, 1.80768, 0.74 ) }
    dend_37 { pt3dadd( 15.8381, -93.2168, 1.45158, 0.81 ) }
    dend_37 { pt3dadd( 16.3658, -94.0416, 1.20181, 0.96 ) }
    dend_37 { pt3dadd( 16.7287, -94.6727, 1.01831, 0.96 ) }
    dend_37 { pt3dadd( 17.123, -95.4457, 0.795229, 0.88 ) }
    dend_37 { pt3dadd( 17.5446, -96.4048, 0.513969, 0.88 ) }
    dend_37 { pt3dadd( 17.6859, -96.7284, 0.416966, 1.11 ) }
    dend_37 { pt3dadd( 18.0869, -97.7089, 0.0814478, 0.74 ) }
    dend_37 { pt3dadd( 18.3829, -98.4539, -0.205641, 0.74 ) }
    dend_37 { pt3dadd( 18.689, -99.2011, -0.497397, 0.66 ) }
    dend_37 { pt3dadd( 19.1742, -100.441, -0.945854, 0.44 ) }
    dend_37 { pt3dadd( 19.5074, -101.329, -1.22634, 1.03 ) }
    dend_37 { pt3dadd( 19.9694, -102.612, -1.56934, 0.81 ) }
    dend_37 { pt3dadd( 20.3445, -103.705, -1.83665, 0.59 ) }
    dend_37 { pt3dadd( 20.7817, -105.013, -2.1193, 0.74 ) }
    dend_37 { pt3dadd( 21.0852, -105.98, -2.31373, 0.59 ) }
    dend_37 { pt3dadd( 21.3477, -106.838, -2.43219, 0.59 ) }
    dend_37 { pt3dadd( 21.7202, -108.157, -2.52026, 0.44 ) }
    dend_37 { pt3dadd( 21.9726, -109.152, -2.51462, 0.37 ) }
    dend_37 { pt3dadd( 22.2317, -110.405, -2.4742, 0.74 ) }
    dend_37 { pt3dadd( 22.3941, -111.353, -2.44441, 0.88 ) }
    dend_37 { pt3dadd( 22.6945, -113.034, -2.38482, 0.88 ) }
    dend_37 { pt3dadd( 22.8377, -113.727, -2.34502, 0.74 ) }
    dend_37 { pt3dadd( 23.1537, -115.048, -2.23679, 0.66 ) }
    dend_37 { pt3dadd( 23.4243, -116.014, -2.14241, 0.74 ) }
    dend_37 { pt3dadd( 23.8254, -117.205, -2.03761, 0.74 ) }
    dend_37 { pt3dadd( 24.1324, -118.006, -1.99157, 0.74 ) }
    dend_37 { pt3dadd( 24.719, -119.47, -1.97996, 0.52 ) }
    dend_37 { pt3dadd( 24.9837, -120.13, -1.9947, 0.52 ) }
    dend_37 { pt3dadd( 25.3938, -121.147, -1.96293, 0.29 ) }
    dend_37 { pt3dadd( 25.7348, -121.991, -1.89894, 0.59 ) }
    dend_37 { pt3dadd( 25.9925, -122.618, -1.84096, 0.74 ) }
    dend_37 { pt3dadd( 26.3486, -123.494, -1.75051, 0.44 ) }
    dend_37 { pt3dadd( 26.7852, -124.581, -1.63227, 0.37 ) }
    dend_37 { pt3dadd( 27.5794, -126.509, -1.36062, 0.37 ) }
    dend_37 { pt3dadd( 27.929, -127.34, -1.20269, 0.52 ) }
    dend_37 { pt3dadd( 28.2794, -128.137, -0.988639, 0.59 ) }
    dend_37 { pt3dadd( 28.6635, -129.004, -0.686434, 0.74 ) }
    dend_37 { pt3dadd( 28.9273, -129.616, -0.427684, 1.18 ) }
    dend_37 { pt3dadd( 29.0939, -130.047, -0.231772, 1.18 ) }
    dend_37 { pt3dadd( 29.485, -131.289, 0.314768, 0.74 ) }
    dend_37 { pt3dadd( 29.8533, -132.747, 1.01046, 0.52 ) }
    dend_37 { pt3dadd( 30.0705, -133.898, 1.575, 0.44 ) }
    dend_37 { pt3dadd( 30.2496, -135.301, 2.24776, 0.59 ) }
    dend_37 { pt3dadd( 30.3204, -136.449, 2.77242, 0.44 ) }
    dend_37 { pt3dadd( 30.3199, -137.21, 3.0773, 0.44 ) }
    dend_37 { pt3dadd( 30.25, -138.294, 3.42361, 0.59 ) }
    dend_37 { pt3dadd( 30.1689, -139.068, 3.5957, 0.59 ) }
    dend_37 { pt3dadd( 30.0867, -139.712, 3.68599, 0.59 ) }
    dend_37 { pt3dadd( 29.8844, -140.967, 3.767, 0.66 ) }
    dend_37 { pt3dadd( 29.7355, -141.87, 3.78406, 0.59 ) }
    dend_37 { pt3dadd( 29.5871, -142.871, 3.76831, 0.52 ) }
    dend_37 { pt3dadd( 29.4978, -143.544, 3.73734, 0.66 ) }
    dend_37 { pt3dadd( 29.3756, -144.6, 3.6803, 0.66 ) }
    dend_37 { pt3dadd( 29.2514, -145.895, 3.62597, 0.52 ) }
    dend_37 { pt3dadd( 29.1627, -146.892, 3.59489, 0.74 ) }
    dend_37 { pt3dadd( 29.0839, -147.74, 3.59093, 0.88 ) }
    dend_37 { pt3dadd( 28.9584, -149.003, 3.62024, 0.96 ) }
    dend_37 { pt3dadd( 28.8178, -150.452, 3.68691, 0.88 ) }
    dend_37 { pt3dadd( 28.7321, -151.462, 3.75357, 0.88 ) }
    dend_37 { pt3dadd( 28.6379, -152.264, 3.79203, 0.81 ) }
    dend_37 { pt3dadd( 28.4631, -153.273, 3.83475, 0.66 ) }
    dend_37 { pt3dadd( 28.3089, -154.046, 3.89043, 0.66 ) }
    dend_37 { pt3dadd( 28.1657, -154.794, 3.97746, 0.44 ) }
    dend_37 { pt3dadd( 28.0104, -155.785, 4.13932, 0.44 ) }
    dend_37 { pt3dadd( 27.8698, -157.255, 4.48334, 0.44 ) }
    dend_37 { pt3dadd( 27.8746, -158.393, 4.83451, 0.44 ) }
    dend_37 { pt3dadd( 28.0498, -159.579, 5.33615, 0.66 ) }
    dend_37 { pt3dadd( 28.2697, -160.281, 5.7008, 0.81 ) }
    dend_37 { pt3dadd( 28.6572, -161.124, 6.2053, 0.96 ) }
    dend_37 { pt3dadd( 29.2726, -162.182, 6.88024, 0.66 ) }
    dend_37 { pt3dadd( 29.9373, -163.216, 7.56249, 0.59 ) }
    dend_37 { pt3dadd( 30.6854, -164.38, 8.30378, 0.96 ) }
    dend_37 { pt3dadd( 31.1959, -165.258, 8.81604, 0.96 ) }
    dend_37 { pt3dadd( 31.5788, -166.026, 9.2214, 0.96 ) }
    dend_37 { pt3dadd( 31.8669, -166.793, 9.57225, 0.66 ) }
    dend_37 { pt3dadd( 32.0716, -167.708, 9.9063, 0.44 ) }
    dend_37 { pt3dadd( 32.1215, -168.569, 10.1616, 0.37 ) }
    dend_37 { pt3dadd( 32.078, -169.227, 10.2989, 0.37 ) }
    dend_37 { pt3dadd( 31.9572, -170.232, 10.453, 0.29 ) }
    dend_37 { pt3dadd( 31.7911, -171.341, 10.585, 0.29 ) }
    dend_37 { pt3dadd( 31.6119, -172.496, 10.6962, 0.37 ) }
    dend_37 { pt3dadd( 31.4589, -173.568, 10.7761, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_37 { pt3dadd( 31.3168, -174.736, 10.8652, 0.29 ) }
    dend_37 { pt3dadd( 31.1811, -175.913, 10.9701, 0.29 ) }
    dend_37 { pt3dadd( 31.0491, -177.139, 11.0906, 0.29 ) }
    dend_37 { pt3dadd( 31.0075, -177.655, 11.1382, 0.44 ) }
    dend_37 { pt3dadd( 30.9608, -178.497, 11.2093, 0.52 ) }
    dend_37 { pt3dadd( 30.9121, -179.747, 11.3117, 0.37 ) }
    dend_37 { pt3dadd( 30.8662, -180.975, 11.4256, 1.03 ) }
    dend_37 { pt3dadd( 30.846, -181.591, 11.4675, 1.03 ) }
    dend_37 { pt3dadd( 30.8469, -182.337, 11.482, 0.74 ) }
    dend_37 { pt3dadd( 30.8745, -183.27, 11.4698, 0.59 ) }
    dend_37 { pt3dadd( 30.9084, -183.811, 11.4549, 0.81 ) }
    dend_37 { pt3dadd( 30.9492, -184.49, 11.4418, 0.81 ) }
    dend_37 { pt3dadd( 31.0525, -185.775, 11.4922, 0.37 ) }
    dend_37 { pt3dadd( 31.112, -186.712, 11.6035, 0.37 ) }
    dend_37 { pt3dadd( 31.1277, -187.435, 11.7753, 0.37 ) }
    dend_37 { pt3dadd( 31.0615, -188.484, 12.2082, 0.29 ) }
    dend_37 { pt3dadd( 30.9364, -189.139, 12.5938, 0.44 ) }
    dend_37 { pt3dadd( 30.6864, -189.867, 13.1454, 0.59 ) }
    dend_37 { pt3dadd( 30.4438, -190.415, 13.6104, 0.74 ) }
    dend_37 { pt3dadd( 30.2522, -190.833, 13.9271, 0.74 ) }
    dend_37 { pt3dadd( 29.8701, -191.714, 14.4878, 0.22 ) }
    dend_37 { pt3dadd( 29.6166, -192.496, 14.829, 0.22 ) }
    dend_37 { pt3dadd( 29.5165, -193.134, 14.9725, 0.66 ) }
    dend_37 { pt3dadd( 29.5005, -194.052, 15.0164, 0.29 ) }
    dend_37 { pt3dadd( 29.6191, -195.193, 14.9579, 0.59 ) }
    dend_37 { pt3dadd( 29.691, -195.602, 14.909, 0.44 ) }
    dend_37 { pt3dadd( 29.926, -196.449, 14.7386, 0.29 ) }
    dend_37 { pt3dadd( 30.1073, -196.935, 14.6118, 0.22 ) }
    dend_37 { pt3dadd( 30.5315, -197.887, 14.3212, 0.22 ) }
    dend_37 { pt3dadd( 30.7838, -198.404, 14.1522, 0.22 ) }
    dend_37 { pt3dadd( 34.815, -209.053, 13.1179, 0.22 ) }
    dend_37 { pt3dadd( 39.9492, -219.172, 12.1648, 0.22 ) }
    dend_37 { pt3dadd( 44.3626, -229.564, 13.8278, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 33/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 0.26146, -64.3677, 4.24602, 1.03 ) }
    dend_28 { pt3dadd( 0.378955, -65.4118, 3.08722, 1.03 ) }
    dend_28 { pt3dadd( 0.751143, -67.1174, 0.963785, 0.66 ) }
    dend_28 { pt3dadd( 1.00023, -67.8511, -0.0236634, 0.66 ) }
    dend_28 { pt3dadd( 1.37652, -68.762, -1.34317, 0.66 ) }
    dend_28 { pt3dadd( 2.00658, -70.0604, -3.11939, 1.11 ) }
    dend_28 { pt3dadd( 2.33292, -70.6713, -3.89696, 1.18 ) }
    dend_28 { pt3dadd( 2.80857, -71.3768, -4.73482, 0.96 ) }
    dend_28 { pt3dadd( 3.61051, -72.2823, -5.70487, 0.81 ) }
    dend_28 { pt3dadd( 5.16996, -73.7387, -7.21096, 0.81 ) }
    dend_28 { pt3dadd( 6.44125, -74.7353, -8.16902, 0.74 ) }
    dend_28 { pt3dadd( 7.47841, -75.4341, -8.75208, 0.96 ) }
    dend_28 { pt3dadd( 8.86523, -76.2408, -9.42378, 0.96 ) }
    dend_28 { pt3dadd( 9.41898, -76.4999, -9.68066, 0.96 ) }
    dend_28 { pt3dadd( 10.2448, -76.756, -10.0638, 0.81 ) }
    dend_28 { pt3dadd( 11.2373, -76.9285, -10.5486, 0.81 ) }
    dend_28 { pt3dadd( 12.768, -77.088, -11.4211, 0.74 ) }
    dend_28 { pt3dadd( 13.877, -77.1728, -12.1392, 0.96 ) }
    dend_28 { pt3dadd( 15.1777, -77.3106, -13.0334, 0.96 ) }
    dend_28 { pt3dadd( 16.3322, -77.5127, -13.8207, 0.74 ) }
    dend_28 { pt3dadd( 17.6094, -77.8405, -14.6269, 0.88 ) }
    dend_28 { pt3dadd( 18.6577, -78.1905, -15.2186, 1.03 ) }
    dend_28 { pt3dadd( 19.8259, -78.6901, -15.7632, 1.03 ) }
    dend_28 { pt3dadd( 20.9926, -79.3156, -16.1056, 0.88 ) }
    dend_28 { pt3dadd( 21.8828, -79.8969, -16.2498, 0.66 ) }
    dend_28 { pt3dadd( 23.0432, -80.7789, -16.4352, 1.03 ) }
    dend_28 { pt3dadd( 23.7523, -81.3669, -16.5723, 1.03 ) }
    dend_28 { pt3dadd( 24.3992, -81.9374, -16.7737, 0.81 ) }
    dend_28 { pt3dadd( 25.8153, -83.223, -17.2718, 0.59 ) }
    dend_28 { pt3dadd( 26.7118, -84.0537, -17.6766, 0.74 ) }
    dend_28 { pt3dadd( 28.054, -85.277, -18.3231, 0.74 ) }
    dend_28 { pt3dadd( 28.8348, -85.977, -18.7037, 0.88 ) }
    dend_28 { pt3dadd( 30.1544, -87.1196, -19.291, 0.66 ) }
    dend_28 { pt3dadd( 31.3452, -88.1256, -19.7778, 0.96 ) }
    dend_28 { pt3dadd( 32.1491, -88.7861, -20.0562, 1.11 ) }
    dend_28 { pt3dadd( 32.9405, -89.4052, -20.2523, 1.11 ) }
    dend_28 { pt3dadd( 34.2682, -90.3727, -20.483, 0.81 ) }
    dend_28 { pt3dadd( 35.6461, -91.2831, -20.6814, 0.74 ) }
    dend_28 { pt3dadd( 37.0653, -92.1252, -20.8802, 0.66 ) }
    dend_28 { pt3dadd( 38.6642, -93.0266, -21.1914, 0.88 ) }
    dend_28 { pt3dadd( 39.6401, -93.609, -21.4218, 1.03 ) }
    dend_28 { pt3dadd( 40.5884, -94.2654, -21.709, 1.03 ) }
    dend_28 { pt3dadd( 41.6827, -95.1884, -22.1154, 0.81 ) }
    dend_28 { pt3dadd( 42.3528, -95.9399, -22.4419, 0.81 ) }
    dend_28 { pt3dadd( 43.1195, -97.0793, -22.9553, 0.81 ) }
    dend_28 { pt3dadd( 43.8617, -98.5216, -23.6319, 0.88 ) }
    dend_28 { pt3dadd( 44.4685, -99.8125, -24.2129, 1.03 ) }
    dend_28 { pt3dadd( 44.9173, -100.821, -24.646, 0.88 ) }
    dend_28 { pt3dadd( 45.5435, -102.143, -25.235, 0.66 ) }
    dend_28 { pt3dadd( 46.0538, -102.986, -25.5998, 0.66 ) }
    dend_28 { pt3dadd( 46.7417, -103.748, -25.939, 0.59 ) }
    dend_28 { pt3dadd( 47.8678, -104.547, -26.3354, 0.88 ) }
    dend_28 { pt3dadd( 48.375, -104.821, -26.4846, 0.88 ) }
    dend_28 { pt3dadd( 49.5131, -105.396, -26.8318, 0.59 ) }
    dend_28 { pt3dadd( 50.3444, -105.844, -27.0844, 0.74 ) }
    dend_28 { pt3dadd( 51.0496, -106.293, -27.3478, 0.81 ) }
    dend_28 { pt3dadd( 51.9462, -106.982, -27.814, 0.74 ) }
    dend_28 { pt3dadd( 52.7734, -107.729, -28.3653, 0.59 ) }
    dend_28 { pt3dadd( 53.8962, -108.866, -29.2337, 0.59 ) }
    dend_28 { pt3dadd( 54.4841, -109.518, -29.7358, 0.88 ) }
    dend_28 { pt3dadd( 55.0606, -110.213, -30.2812, 1.03 ) }
    dend_28 { pt3dadd( 55.9948, -111.448, -31.2291, 0.66 ) }
    dend_28 { pt3dadd( 56.5814, -112.291, -31.8652, 0.59 ) }
    dend_28 { pt3dadd( 57.3019, -113.348, -32.6781, 2.06 ) }
    dend_28 { pt3dadd( 57.8024, -114.052, -33.2276, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 98/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -22.3147, -65.5848, 2.03926, 1.25 ) }
    dend_26 { pt3dadd( -23.7, -65.3503, 2.08635, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_26 { pt3dadd( -25.2464, -65.266, 2.13797, 0.66 ) }
    dend_26 { pt3dadd( -25.9524, -65.2818, 2.16463, 0.66 ) }
    dend_26 { pt3dadd( -26.9342, -65.3507, 2.1877, 0.81 ) }
    dend_26 { pt3dadd( -27.9179, -65.4349, 2.18771, 0.81 ) }
    dend_26 { pt3dadd( -29.1839, -65.5192, 2.18537, 0.44 ) }
    dend_26 { pt3dadd( -29.9798, -65.6096, 2.15392, 0.44 ) }
    dend_26 { pt3dadd( -30.6733, -65.6455, 2.11872, 0.59 ) }
    dend_26 { pt3dadd( -31.201, -65.6018, 2.06991, 0.74 ) }
    dend_26 { pt3dadd( -31.9296, -65.4373, 1.98286, 0.74 ) }
    dend_26 { pt3dadd( -32.7074, -65.2319, 1.83848, 0.66 ) }
    dend_26 { pt3dadd( -33.2483, -65.1015, 1.73148, 0.52 ) }
    dend_26 { pt3dadd( -34.3292, -64.911, 1.50777, 0.52 ) }
    dend_26 { pt3dadd( -35.3276, -64.8086, 1.3125, 0.52 ) }
    dend_26 { pt3dadd( -36.477, -64.7565, 1.13858, 0.66 ) }
    dend_26 { pt3dadd( -37.7862, -64.7501, 1.01513, 0.88 ) }
    dend_26 { pt3dadd( -38.9976, -64.7672, 0.947704, 1.03 ) }
    dend_26 { pt3dadd( -39.8534, -64.7729, 0.923185, 1.03 ) }
    dend_26 { pt3dadd( -40.8322, -64.7439, 0.905252, 0.96 ) }
    dend_26 { pt3dadd( -41.7243, -64.6597, 0.903116, 0.74 ) }
    dend_26 { pt3dadd( -42.9483, -64.4586, 0.888955, 0.59 ) }
    dend_26 { pt3dadd( -43.6612, -64.3238, 0.882517, 0.59 ) }
    dend_26 { pt3dadd( -44.8573, -64.1318, 0.872566, 0.74 ) }
    dend_26 { pt3dadd( -45.8936, -64.0002, 0.853099, 0.74 ) }
    dend_26 { pt3dadd( -46.9843, -63.9161, 0.794194, 0.52 ) }
    dend_26 { pt3dadd( -47.9117, -63.9138, 0.723021, 0.59 ) }
    dend_26 { pt3dadd( -49.1107, -64.0429, 0.629133, 0.59 ) }
    dend_26 { pt3dadd( -50.1972, -64.2446, 0.580266, 0.74 ) }
    dend_26 { pt3dadd( -51.3183, -64.5032, 0.575451, 0.74 ) }
    dend_26 { pt3dadd( -52.2436, -64.7231, 0.597669, 0.74 ) }
    dend_26 { pt3dadd( -53.552, -64.9875, 0.643809, 0.74 ) }
    dend_26 { pt3dadd( -54.8353, -65.1916, 0.707902, 0.74 ) }
    dend_26 { pt3dadd( -56.2289, -65.3731, 0.803408, 0.88 ) }
    dend_26 { pt3dadd( -56.9772, -65.4533, 0.851506, 0.88 ) }
    dend_26 { pt3dadd( -58.2224, -65.5737, 0.865118, 0.96 ) }
    dend_26 { pt3dadd( -59.6396, -65.6749, 0.812542, 0.96 ) }
    dend_26 { pt3dadd( -60.9468, -65.745, 0.713993, 0.66 ) }
    dend_26 { pt3dadd( -61.8282, -65.8253, 0.633231, 0.59 ) }
    dend_26 { pt3dadd( -63.2236, -66.074, 0.499125, 0.59 ) }
    dend_26 { pt3dadd( -65.2911, -66.6082, 0.320121, 0.81 ) }
    dend_26 { pt3dadd( -66.4227, -66.982, 0.221212, 0.96 ) }
    dend_26 { pt3dadd( -67.9391, -67.5474, 0.104052, 0.96 ) }
    dend_26 { pt3dadd( -69.9354, -68.3215, -0.00387397, 0.96 ) }
    dend_26 { pt3dadd( -71.4317, -68.8932, -0.02938, 0.96 ) }
    dend_26 { pt3dadd( -72.5685, -69.3072, 0.00727415, 0.96 ) }
    dend_26 { pt3dadd( -73.6043, -69.6318, 0.0826706, 0.81 ) }
    dend_26 { pt3dadd( -74.6853, -69.8865, 0.132742, 0.88 ) }
    dend_26 { pt3dadd( -75.7865, -70.0195, 0.149872, 0.88 ) }
    dend_26 { pt3dadd( -76.8014, -70.0334, 0.137158, 0.66 ) }
    dend_26 { pt3dadd( -77.5746, -70.0213, 0.114826, 0.66 ) }
    dend_26 { pt3dadd( -78.362, -70.0481, 0.0902031, 0.59 ) }
    dend_26 { pt3dadd( -79.1672, -70.1689, 0.0821549, 0.59 ) }
    dend_26 { pt3dadd( -80.2179, -70.4907, 0.0837095, 0.81 ) }
    dend_26 { pt3dadd( -81.0622, -70.819, 0.106524, 0.81 ) }
    dend_26 { pt3dadd( -82.2676, -71.2932, 0.145254, 0.52 ) }
    dend_26 { pt3dadd( -83.4081, -71.6839, 0.181426, 0.66 ) }
    dend_26 { pt3dadd( -84.4789, -71.9681, 0.210697, 0.66 ) }
    dend_26 { pt3dadd( -85.8544, -72.1806, 0.255464, 0.66 ) }
    dend_26 { pt3dadd( -87.069, -72.2273, 0.289909, 0.88 ) }
    dend_26 { pt3dadd( -88.3579, -72.1602, 0.327455, 0.88 ) }
    dend_26 { pt3dadd( -89.445, -72.0438, 0.36243, 0.81 ) }
    dend_26 { pt3dadd( -90.6263, -71.9269, 0.329877, 0.88 ) }
    dend_26 { pt3dadd( -91.9125, -71.8545, 0.185097, 1.03 ) }
    dend_26 { pt3dadd( -92.9102, -71.8588, 0.00250718, 1.03 ) }
    dend_26 { pt3dadd( -93.9751, -71.9588, -0.291521, 0.81 ) }
    dend_26 { pt3dadd( -94.912, -72.1376, -0.609773, 0.81 ) }
    dend_26 { pt3dadd( -96.9649, -72.8288, -1.50119, 0.44 ) }
    dend_26 { pt3dadd( -98.1706, -73.4036, -2.14109, 0.66 ) }
    dend_26 { pt3dadd( -99.0216, -73.9065, -2.64169, 0.81 ) }
    dend_26 { pt3dadd( -100.146, -74.6545, -3.3554, 1.03 ) }
    dend_26 { pt3dadd( -100.638, -74.9994, -3.67049, 1.11 ) }
    dend_26 { pt3dadd( -102.036, -75.8935, -4.4711, 0.37 ) }
    dend_26 { pt3dadd( -103.001, -76.3777, -4.89203, 0.37 ) }
    dend_26 { pt3dadd( -103.718, -76.6793, -5.14781, 1.69 ) }
    dend_26 { pt3dadd( -104.684, -77.0239, -5.42819, 2.06 ) }
    dend_26 { pt3dadd( -105.334, -77.2203, -5.55762, 2.06 ) }
    dend_26 { pt3dadd( -107.23, -77.7351, -5.81838, 0.59 ) }
    dend_26 { pt3dadd( -108.858, -78.1108, -5.93974, 0.44 ) }
    dend_26 { pt3dadd( -110.577, -78.4529, -6.00987, 0.52 ) }
    dend_26 { pt3dadd( -111.495, -78.6046, -6.02331, 0.74 ) }
    dend_26 { pt3dadd( -112.691, -78.7754, -6.01174, 0.88 ) }
    dend_26 { pt3dadd( -113.927, -78.9419, -5.9803, 0.66 ) }
    dend_26 { pt3dadd( -114.337, -78.9931, -5.94352, 0.44 ) }
    dend_26 { pt3dadd( -115.278, -79.0777, -5.81584, 0.37 ) }
    dend_26 { pt3dadd( -116.324, -79.0875, -5.62239, 0.96 ) }
    dend_26 { pt3dadd( -117.565, -79.041, -5.30203, 1.62 ) }
    dend_26 { pt3dadd( -118.632, -79.005, -4.94201, 1.77 ) }
    dend_26 { pt3dadd( -119.844, -78.9927, -4.4735, 1.77 ) }
    dend_26 { pt3dadd( -120.956, -79.0252, -4.01522, 1.11 ) }
    dend_26 { pt3dadd( -121.984, -79.0807, -3.5755, 0.66 ) }
    dend_26 { pt3dadd( -123.167, -79.1322, -3.08333, 0.52 ) }
    dend_26 { pt3dadd( -124.568, -79.1413, -2.45813, 0.44 ) }
    dend_26 { pt3dadd( -125.59, -79.1139, -2.02859, 0.44 ) }
    dend_26 { pt3dadd( -126.356, -79.0837, -1.74198, 0.59 ) }
    dend_26 { pt3dadd( -127.034, -79.0626, -1.5052, 0.59 ) }
    dend_26 { pt3dadd( -127.96, -79.0578, -1.21998, 0.44 ) }
    dend_26 { pt3dadd( -129.946, -79.0956, -0.645682, 0.74 ) }
    dend_26 { pt3dadd( -130.908, -79.121, -0.36243, 0.81 ) }
    dend_26 { pt3dadd( -131.964, -79.1667, -0.0676335, 0.81 ) }
    dend_26 { pt3dadd( -133.091, -79.2312, 0.200218, 0.96 ) }
    dend_26 { pt3dadd( -134.207, -79.3226, 0.366589, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_26 { pt3dadd( -135.164, -79.4108, 0.429294, 1.11 ) }
    dend_26 { pt3dadd( -136.062, -79.4831, 0.380477, 0.81 ) }
    dend_26 { pt3dadd( -137.459, -79.5674, 0.226513, 0.59 ) }
    dend_26 { pt3dadd( -138.565, -79.5868, 0.0584636, 1.18 ) }
    dend_26 { pt3dadd( -140.102, -79.5613, -0.213167, 1.47 ) }
    dend_26 { pt3dadd( -140.895, -79.5388, -0.354972, 1.62 ) }
    dend_26 { pt3dadd( -141.39, -79.5116, -0.461959, 1.62 ) }
    dend_26 { pt3dadd( -142.216, -79.4314, -0.648447, 1.11 ) }
    dend_26 { pt3dadd( -143.166, -79.2836, -0.807479, 0.66 ) }
    dend_26 { pt3dadd( -144.131, -79.0414, -0.90023, 0.44 ) }
    dend_26 { pt3dadd( -145.272, -78.6467, -0.937869, 0.37 ) }
    dend_26 { pt3dadd( -146.523, -78.1296, -0.9597, 0.37 ) }
    dend_26 { pt3dadd( -147.312, -77.7573, -0.947398, 0.37 ) }
    dend_26 { pt3dadd( -148.407, -77.1819, -0.891466, 0.44 ) }
    dend_26 { pt3dadd( -149.876, -76.4041, -0.818969, 0.74 ) }
    dend_26 { pt3dadd( -150.582, -76.0421, -0.800069, 1.18 ) }
    dend_26 { pt3dadd( -151.205, -75.7409, -0.798674, 1.33 ) }
    dend_26 { pt3dadd( -151.961, -75.4005, -0.801, 1.33 ) }
    dend_26 { pt3dadd( -152.89, -74.9616, -0.845595, 0.81 ) }
    dend_26 { pt3dadd( -154.126, -74.3267, -0.932635, 0.29 ) }
    dend_26 { pt3dadd( -154.984, -73.8611, -0.988175, 0.29 ) }
    dend_26 { pt3dadd( -156.307, -73.1113, -1.05887, 0.37 ) }
    dend_26 { pt3dadd( -157.16, -72.601, -1.0831, 0.44 ) }
    dend_26 { pt3dadd( -158.405, -71.916, -1.22856, 0.44 ) }
    dend_26 { pt3dadd( -159.917, -71.1535, -1.4702, 1.4 ) }
    dend_26 { pt3dadd( -160.797, -70.7269, -1.62705, 1.92 ) }
    dend_26 { pt3dadd( -161.179, -70.5519, -1.70342, 2.28 ) }
    dend_26 { pt3dadd( -162.027, -70.2057, -1.9034, 2.28 ) }
    dend_26 { pt3dadd( -165.484, -68.8822, -2.82779, 0.29 ) }
    dend_26 { pt3dadd( -166.083, -68.6566, -3.01095, 0.52 ) }
    dend_26 { pt3dadd( -166.836, -68.3688, -3.26543, 0.52 ) }
    dend_26 { pt3dadd( -167.671, -68.0449, -3.5281, 0.74 ) }
    dend_26 { pt3dadd( -168.378, -67.7655, -3.7481, 0.74 ) }
    dend_26 { pt3dadd( -169.317, -67.4073, -4.04956, 0.44 ) }
    dend_26 { pt3dadd( -170.348, -67.0105, -4.33965, 0.37 ) }
    dend_26 { pt3dadd( -171.249, -66.6957, -4.65096, 0.81 ) }
    dend_26 { pt3dadd( -171.89, -66.4924, -4.90346, 0.96 ) }
    dend_26 { pt3dadd( -172.851, -66.2015, -5.34061, 0.96 ) }
    dend_26 { pt3dadd( -174.017, -65.8785, -5.93287, 0.66 ) }
    dend_26 { pt3dadd( -174.996, -65.6494, -6.46629, 0.29 ) }
    dend_26 { pt3dadd( -176.09, -65.4113, -7.0406, 0.66 ) }
    dend_26 { pt3dadd( -176.781, -65.2564, -7.37768, 0.66 ) }
    dend_26 { pt3dadd( -178.225, -64.9308, -7.99217, 0.52 ) }
    dend_26 { pt3dadd( -179.169, -64.6926, -8.30837, 0.74 ) }
    dend_26 { pt3dadd( -181.144, -64.1582, -8.8649, 0.88 ) }
    dend_26 { pt3dadd( -182.086, -63.8844, -9.13165, 1.11 ) }
    dend_26 { pt3dadd( -182.755, -63.6804, -9.32101, 1.33 ) }
    dend_26 { pt3dadd( -183.891, -63.2789, -9.63013, 0.44 ) }
    dend_26 { pt3dadd( -185.077, -62.759, -9.92039, 0.44 ) }
    dend_26 { pt3dadd( -186.138, -62.1891, -10.1828, 0.29 ) }
    dend_26 { pt3dadd( -187.724, -61.2087, -10.6921, 0.96 ) }
    dend_26 { pt3dadd( -188.425, -60.7704, -10.9868, 1.18 ) }
    dend_26 { pt3dadd( -189.297, -60.2226, -11.4019, 2.21 ) }
    dend_26 { pt3dadd( -189.802, -59.9081, -11.66, 2.43 ) }
    dend_26 { pt3dadd( -190.802, -59.3147, -12.2084, 2.43 ) }
    dend_26 { pt3dadd( -192.222, -58.5577, -12.9616, 2.21 ) }
    dend_26 { pt3dadd( -194.033, -57.751, -13.8406, 0.29 ) }
    dend_26 { pt3dadd( -195.018, -57.3849, -14.2778, 0.44 ) }
    dend_26 { pt3dadd( -195.656, -57.1749, -14.5192, 0.52 ) }
    dend_26 { pt3dadd( -197.919, -56.4758, -15.2684, 0.29 ) }
    dend_26 { pt3dadd( -199.072, -56.1376, -15.5883, 0.29 ) }
    dend_26 { pt3dadd( -200.03, -55.8682, -15.7867, 0.29 ) }
    dend_26 { pt3dadd( -201.166, -55.5778, -15.995, 0.29 ) }
    dend_26 { pt3dadd( -202.803, -55.1731, -16.2626, 0.96 ) }
    dend_26 { pt3dadd( -203.537, -54.9796, -16.3593, 1.47 ) }
    dend_26 { pt3dadd( -204.22, -54.7778, -16.4154, 1.47 ) }
    dend_26 { pt3dadd( -205.802, -54.1796, -16.5578, 0.29 ) }
    dend_26 { pt3dadd( -206.43, -53.8983, -16.6215, 0.29 ) }
    dend_26 { pt3dadd( -207.491, -53.3541, -16.7708, 0.74 ) }
    dend_26 { pt3dadd( -208.04, -53.0459, -16.8595, 0.81 ) }
    dend_26 { pt3dadd( -208.395, -52.8258, -16.9127, 0.81 ) }
    dend_26 { pt3dadd( -208.983, -52.4149, -17.0063, 0.29 ) }
    dend_26 { pt3dadd( -209.48, -52.0225, -17.105, 0.22 ) }
    dend_26 { pt3dadd( -210.604, -51.1009, -17.3883, 0.22 ) }
    dend_26 { pt3dadd( -211.871, -50.0888, -17.7472, 0.22 ) }
    dend_26 { pt3dadd( -212.758, -49.4139, -17.983, 0.88 ) }
    dend_26 { pt3dadd( -213.499, -48.8637, -18.1612, 1.11 ) }
    dend_26 { pt3dadd( -213.815, -48.6341, -18.2269, 1.4 ) }
    dend_26 { pt3dadd( -214.506, -48.1378, -18.3329, 1.4 ) }
    dend_26 { pt3dadd( -215.201, -47.6442, -18.3829, 0.96 ) }
    dend_26 { pt3dadd( -216.64, -46.6928, -18.4223, 0.29 ) }
    dend_26 { pt3dadd( -217.263, -46.3028, -18.4142, 0.59 ) }
    dend_26 { pt3dadd( -217.68, -46.041, -18.3928, 0.59 ) }
    dend_26 { pt3dadd( -218.267, -45.6691, -18.3461, 0.37 ) }
    dend_26 { pt3dadd( -219.962, -44.5766, -18.1686, 0.22 ) }
    dend_26 { pt3dadd( -221.006, -43.8967, -18.0605, 0.22 ) }
    dend_26 { pt3dadd( -221.714, -43.4313, -17.9884, 0.22 ) }
    dend_26 { pt3dadd( -223.126, -42.4666, -17.8493, 1.25 ) }
    dend_26 { pt3dadd( -223.822, -41.9591, -17.7841, 1.69 ) }
    dend_26 { pt3dadd( -224.329, -41.5619, -17.7398, 1.92 ) }
    dend_26 { pt3dadd( -224.993, -40.9973, -17.6837, 1.62 ) }
    dend_26 { pt3dadd( -226.124, -40.0247, -17.5888, 0.81 ) }
    dend_26 { pt3dadd( -226.845, -39.4039, -17.5283, 0.81 ) }
    dend_26 { pt3dadd( -228.102, -38.3451, -17.3706, 0.37 ) }
    dend_26 { pt3dadd( -228.967, -37.632, -17.2361, 0.37 ) }
    dend_26 { pt3dadd( -229.48, -37.23, -17.1443, 0.37 ) }
    dend_26 { pt3dadd( -230.551, -36.4415, -16.9313, 0.29 ) }
    dend_26 { pt3dadd( -231.623, -35.677, -16.6985, 0.29 ) }
    dend_26 { pt3dadd( -232.958, -34.7275, -16.349, 0.29 ) }
    dend_26 { pt3dadd( -233.605, -34.2622, -16.1456, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( -234.065, -33.9221, -15.985, 0.44 ) }
    dend_26 { pt3dadd( -234.667, -33.4655, -15.7653, 0.29 ) }
    dend_26 { pt3dadd( -235.967, -32.4869, -15.2816, 1.4 ) }
    dend_26 { pt3dadd( -236.884, -31.875, -14.953, 1.77 ) }
    dend_26 { pt3dadd( -237.287, -31.6348, -14.8227, 1.77 ) }
    dend_26 { pt3dadd( -238.364, -31.0391, -14.4948, 0.66 ) }
    dend_26 { pt3dadd( -239.177, -30.6016, -14.2673, 0.66 ) }
    dend_26 { pt3dadd( -239.959, -30.202, -14.0609, 0.81 ) }
    dend_26 { pt3dadd( -240.891, -29.7562, -13.8804, 0.81 ) }
    dend_26 { pt3dadd( -242.119, -29.1534, -13.7475, 0.37 ) }
    dend_26 { pt3dadd( -243.676, -28.327, -13.6605, 0.29 ) }
    dend_26 { pt3dadd( -244.56, -27.8332, -13.6495, 0.29 ) }
    dend_26 { pt3dadd( -245.518, -27.2729, -13.6702, 1.11 ) }
    dend_26 { pt3dadd( -246.782, -26.4775, -13.7455, 1.77 ) }
    dend_26 { pt3dadd( -247.76, -25.8257, -13.85, 0.88 ) }
    dend_26 { pt3dadd( -248.994, -24.9899, -14.0153, 0.29 ) }
    dend_26 { pt3dadd( -250.869, -23.7438, -14.283, 0.29 ) }
    dend_26 { pt3dadd( -251.855, -23.1059, -14.4165, 0.66 ) }
    dend_26 { pt3dadd( -252.6, -22.649, -14.502, 0.88 ) }
    dend_26 { pt3dadd( -254.132, -21.7249, -14.6448, 0.29 ) }
    dend_26 { pt3dadd( -255.14, -21.1307, -14.7416, 0.29 ) }
    dend_26 { pt3dadd( -256.018, -20.6399, -14.8347, 0.66 ) }
    dend_26 { pt3dadd( -256.76, -20.2344, -14.9509, 0.66 ) }
    dend_26 { pt3dadd( -257.805, -19.6817, -15.1464, 0.29 ) }
    dend_26 { pt3dadd( -258.734, -19.2125, -15.3331, 0.88 ) }
    dend_26 { pt3dadd( -259.345, -18.8968, -15.4637, 0.88 ) }
    dend_26 { pt3dadd( -260.539, -18.219, -15.7372, 0.29 ) }
    dend_26 { pt3dadd( -261.872, -17.3027, -15.9609, 0.59 ) }
    dend_26 { pt3dadd( -262.262, -16.9533, -15.9965, 0.59 ) }
    dend_26 { pt3dadd( -262.789, -16.3844, -15.9919, 0.59 ) }
    dend_26 { pt3dadd( -263.583, -15.4505, -15.8914, 0.37 ) }
    dend_26 { pt3dadd( -264.411, -14.3712, -15.7087, 0.29 ) }
    dend_26 { pt3dadd( -265.533, -12.7862, -15.362, 0.29 ) }
    dend_26 { pt3dadd( -266.54, -11.2631, -14.9728, 1.25 ) }
    dend_26 { pt3dadd( -267.148, -10.2798, -14.7451, 1.4 ) }
    dend_26 { pt3dadd( -267.533, -9.62453, -14.6158, 1.4 ) }
    dend_26 { pt3dadd( -268.028, -8.75903, -14.4773, 1.03 ) }
    dend_26 { pt3dadd( -268.635, -7.70482, -14.3564, 0.29 ) }
    dend_26 { pt3dadd( -269.415, -6.34512, -14.2839, 0.29 ) }
    dend_26 { pt3dadd( -270.076, -5.1198, -14.2474, 0.29 ) }
    dend_26 { pt3dadd( -270.884, -3.46287, -14.241, 1.11 ) }
    dend_26 { pt3dadd( -271.176, -2.8488, -14.2467, 1.55 ) }
    dend_26 { pt3dadd( -271.695, -1.73363, -14.2635, 0.66 ) }
    dend_26 { pt3dadd( -272.513, 0.0616112, -14.2869, 0.29 ) }
    dend_26 { pt3dadd( -273.609, 2.40282, -14.3082, 0.29 ) }
    dend_26 { pt3dadd( -274.286, 3.83947, -14.315, 0.29 ) }
    dend_26 { pt3dadd( -275.096, 5.57525, -14.3193, 0.44 ) }
    dend_26 { pt3dadd( -275.543, 6.54456, -14.3183, 0.44 ) }
    dend_26 { pt3dadd( -276.029, 7.60097, -14.3177, 0.59 ) }
    dend_26 { pt3dadd( -276.686, 9.03177, -14.3176, 0.29 ) }
    dend_26 { pt3dadd( -277.165, 10.1456, -14.3166, 0.29 ) }
    dend_26 { pt3dadd( -277.566, 11.2121, -14.326, 0.44 ) }
    dend_26 { pt3dadd( -277.903, 12.3071, -14.3591, 0.29 ) }
    dend_26 { pt3dadd( -278.243, 13.4146, -14.4031, 0.59 ) }
    dend_26 { pt3dadd( -278.673, 14.6989, -14.4606, 1.03 ) }
    dend_26 { pt3dadd( -278.924, 15.3779, -14.4934, 1.03 ) }
    dend_26 { pt3dadd( -279.646, 16.9985, -14.5693, 0.22 ) }
    dend_26 { pt3dadd( -280.443, 18.4394, -14.63, 0.22 ) }
    dend_26 { pt3dadd( -281.203, 19.6541, -14.6813, 0.22 ) }
    dend_26 { pt3dadd( -281.837, 20.5123, -14.7142, 0.29 ) }
    dend_26 { pt3dadd( -282.264, 20.9634, -14.7248, 0.29 ) }
    dend_26 { pt3dadd( -282.829, 21.3974, -14.7164, 0.52 ) }
    dend_26 { pt3dadd( -283.2, 21.5376, -14.6863, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 63/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -22.3147, -65.5848, 2.03926, 0.88 ) }
    dend_21 { pt3dadd( -23.3336, -67.2175, 2.00658, 0.88 ) }
    dend_21 { pt3dadd( -24.121, -68.5642, 1.95024, 0.88 ) }
    dend_21 { pt3dadd( -24.8549, -69.8673, 1.83824, 0.88 ) }
    dend_21 { pt3dadd( -25.4959, -71.0549, 1.71627, 1.03 ) }
    dend_21 { pt3dadd( -26.1066, -72.2418, 1.58053, 1.03 ) }
    dend_21 { pt3dadd( -26.6758, -73.3718, 1.45036, 0.96 ) }
    dend_21 { pt3dadd( -27.3371, -74.6661, 1.23363, 0.96 ) }
    dend_21 { pt3dadd( -27.8315, -75.6554, 1.06465, 1.11 ) }
    dend_21 { pt3dadd( -28.2621, -76.4952, 0.93942, 1.11 ) }
    dend_21 { pt3dadd( -28.8101, -77.4745, 0.828878, 1.18 ) }
    dend_21 { pt3dadd( -29.6464, -78.794, 0.728387, 1.18 ) }
    dend_21 { pt3dadd( -30.5314, -80.1155, 0.639077, 1.11 ) }
    dend_21 { pt3dadd( -31.0898, -80.8759, 0.59865, 1.25 ) }
    dend_21 { pt3dadd( -31.9463, -81.9662, 0.579488, 1.25 ) }
    dend_21 { pt3dadd( -32.7827, -82.9352, 0.566877, 1.47 ) }
    dend_21 { pt3dadd( -33.6119, -83.7958, 0.575039, 1.69 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 80/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 186.894, 190.011, -38.7193, 0.88 ) }
    dend_16 { pt3dadd( 187.332, 189.166, -38.6536, 0.88 ) }
    dend_16 { pt3dadd( 187.559, 188.75, -38.6304, 1.11 ) }
    dend_16 { pt3dadd( 187.786, 188.417, -38.6232, 1.25 ) }
    dend_16 { pt3dadd( 188.216, 187.812, -38.6219, 1.03 ) }
    dend_16 { pt3dadd( 188.798, 187.012, -38.6209, 0.15 ) }
    dend_16 { pt3dadd( 189.127, 186.564, -38.6197, 0.37 ) }
    dend_16 { pt3dadd( 189.288, 186.348, -38.6276, 0.37 ) }
    dend_16 { pt3dadd( 190.252, 185.056, -38.6582, 0.15 ) }
    dend_16 { pt3dadd( 190.564, 184.625, -38.6642, 0.29 ) }
    dend_16 { pt3dadd( 190.915, 184.129, -38.6627, 0.15 ) }
    dend_16 { pt3dadd( 191.237, 183.623, -38.647, 0.15 ) }
    dend_16 { pt3dadd( 191.502, 183.158, -38.6209, 0.15 ) }
    dend_16 { pt3dadd( 191.707, 182.749, -38.5689, 0.22 ) }
    dend_16 { pt3dadd( 191.883, 182.354, -38.4946, 0.22 ) }
    dend_16 { pt3dadd( 192.105, 181.874, -38.391, 0.29 ) }
    dend_16 { pt3dadd( 192.384, 181.288, -38.2651, 0.29 ) }
    dend_16 { pt3dadd( 192.881, 180.261, -38.0211, 0.15 ) }
    dend_16 { pt3dadd( 193.496, 178.954, -37.7212, 0.59 ) }
    dend_16 { pt3dadd( 193.663, 178.59, -37.6423, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_16 { pt3dadd( 193.859, 178.162, -37.5552, 0.88 ) }
    dend_16 { pt3dadd( 194.433, 176.884, -37.3239, 0.22 ) }
    dend_16 { pt3dadd( 194.864, 175.878, -37.1329, 0.22 ) }
    dend_16 { pt3dadd( 195.383, 174.593, -36.8492, 0.22 ) }
    dend_16 { pt3dadd( 195.625, 173.973, -36.7004, 0.59 ) }
    dend_16 { pt3dadd( 195.772, 173.58, -36.598, 0.74 ) }
    dend_16 { pt3dadd( 195.922, 173.155, -36.4817, 0.52 ) }
    dend_16 { pt3dadd( 196.343, 172.0, -36.1737, 0.22 ) }
    dend_16 { pt3dadd( 196.766, 170.893, -35.9213, 1.33 ) }
    dend_16 { pt3dadd( 196.911, 170.515, -35.8447, 1.4 ) }
    dend_16 { pt3dadd( 197.349, 169.311, -35.6676, 0.22 ) }
    dend_16 { pt3dadd( 197.608, 168.625, -35.5918, 0.15 ) }
    dend_16 { pt3dadd( 198.08, 167.348, -35.4478, 0.15 ) }
    dend_16 { pt3dadd( 198.36, 166.499, -35.3746, 0.29 ) }
    dend_16 { pt3dadd( 198.565, 165.776, -35.3184, 0.29 ) }
    dend_16 { pt3dadd( 198.876, 164.545, -35.208, 0.15 ) }
    dend_16 { pt3dadd( 199.111, 163.508, -35.1007, 0.15 ) }
    dend_16 { pt3dadd( 199.525, 161.481, -34.8793, 0.15 ) }
    dend_16 { pt3dadd( 199.845, 159.63, -34.6854, 0.15 ) }
    dend_16 { pt3dadd( 200.211, 157.358, -34.4694, 0.15 ) }
    dend_16 { pt3dadd( 200.343, 156.44, -34.3992, 0.22 ) }
    dend_16 { pt3dadd( 200.387, 156.061, -34.381, 0.96 ) }
    dend_16 { pt3dadd( 200.433, 155.475, -34.3793, 1.18 ) }
    dend_16 { pt3dadd( 200.542, 154.054, -34.4578, 0.15 ) }
    dend_16 { pt3dadd( 200.61, 153.372, -34.4959, 0.29 ) }
    dend_16 { pt3dadd( 200.728, 152.369, -34.5876, 0.15 ) }
    dend_16 { pt3dadd( 200.814, 151.777, -34.6579, 0.29 ) }
    dend_16 { pt3dadd( 200.882, 151.341, -34.711, 0.29 ) }
    dend_16 { pt3dadd( 201.126, 149.882, -34.8968, 0.15 ) }
    dend_16 { pt3dadd( 201.363, 148.66, -35.064, 0.15 ) }
    dend_16 { pt3dadd( 201.561, 147.76, -35.1954, 0.52 ) }
    dend_16 { pt3dadd( 201.654, 147.441, -35.2462, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 186.894, 190.011, -38.7193, 0.22 ) }
    dend_15 { pt3dadd( 188.003, 190.191, -38.3621, 0.22 ) }
    dend_15 { pt3dadd( 188.662, 190.297, -38.0942, 0.52 ) }
    dend_15 { pt3dadd( 188.794, 190.318, -38.0371, 0.52 ) }
    dend_15 { pt3dadd( 189.907, 190.499, -37.5401, 0.22 ) }
    dend_15 { pt3dadd( 190.275, 190.565, -37.3786, 0.59 ) }
    dend_15 { pt3dadd( 190.602, 190.626, -37.2367, 0.59 ) }
    dend_15 { pt3dadd( 191.982, 190.841, -36.6302, 0.22 ) }
    dend_15 { pt3dadd( 192.205, 190.879, -36.5329, 0.44 ) }
    dend_15 { pt3dadd( 192.345, 190.904, -36.4732, 0.44 ) }
    dend_15 { pt3dadd( 193.426, 191.102, -36.0248, 0.15 ) }
    dend_15 { pt3dadd( 193.619, 191.131, -35.9488, 0.37 ) }
    dend_15 { pt3dadd( 193.837, 191.158, -35.865, 0.37 ) }
    dend_15 { pt3dadd( 194.658, 191.221, -35.5751, 0.15 ) }
    dend_15 { pt3dadd( 195.108, 191.244, -35.4051, 0.15 ) }
    dend_15 { pt3dadd( 195.35, 191.246, -35.3074, 0.29 ) }
    dend_15 { pt3dadd( 195.581, 191.232, -35.2068, 0.29 ) }
    dend_15 { pt3dadd( 196.137, 191.144, -34.9395, 0.22 ) }
    dend_15 { pt3dadd( 196.281, 191.11, -34.8677, 0.44 ) }
    dend_15 { pt3dadd( 196.904, 190.91, -34.5487, 0.22 ) }
    dend_15 { pt3dadd( 197.119, 190.833, -34.4399, 0.44 ) }
    dend_15 { pt3dadd( 197.342, 190.749, -34.3276, 0.44 ) }
    dend_15 { pt3dadd( 198.567, 190.256, -33.7232, 0.22 ) }
    dend_15 { pt3dadd( 199.348, 189.907, -33.3533, 0.22 ) }
    dend_15 { pt3dadd( 199.752, 189.715, -33.1569, 0.37 ) }
    dend_15 { pt3dadd( 199.963, 189.604, -33.0503, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -193.216, 136.553, 104.313, 0.88 ) }
    dend_8 { pt3dadd( -198.298, 138.081, 110.39, 0.88 ) }
    dend_8 { pt3dadd( -203.325, 140.462, 116.271, 0.88 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 61/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -193.216, 136.553, 104.313, 0.22 ) }
    dend_7 { pt3dadd( -198.13, 140.355, 112.303, 0.88 ) }
    dend_7 { pt3dadd( -202.046, 142.701, 121.28, 0.88 ) }
    dend_7 { pt3dadd( -204.882, 143.404, 130.891, 0.88 ) }
    dend_7 { pt3dadd( -207.214, 142.721, 140.643, 0.88 ) }
    dend_7 { pt3dadd( -208.771, 143.243, 150.553, 0.88 ) }
    dend_7 { pt3dadd( -209.559, 145.24, 160.374, 0.88 ) }
    dend_7 { pt3dadd( -211.484, 147.398, 170.008, 0.88 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 69/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 57.8024, -114.052, -33.2276, 1.11 ) }
    dend_34 { pt3dadd( 59.5289, -114.032, -34.6702, 1.11 ) }
    dend_34 { pt3dadd( 60.5948, -114.097, -35.5425, 0.96 ) }
    dend_34 { pt3dadd( 61.7194, -114.247, -36.4453, 0.81 ) }
    dend_34 { pt3dadd( 62.4367, -114.432, -37.0096, 0.81 ) }
    dend_34 { pt3dadd( 63.6658, -114.868, -37.9504, 0.81 ) }
    dend_34 { pt3dadd( 64.4471, -115.158, -38.5335, 1.03 ) }
    dend_34 { pt3dadd( 65.1913, -115.49, -39.0506, 1.03 ) }
    dend_34 { pt3dadd( 65.747, -115.746, -39.4738, 1.03 ) }
    dend_34 { pt3dadd( 66.823, -116.171, -40.4263, 0.59 ) }
    dend_34 { pt3dadd( 67.4555, -116.26, -41.1773, 0.59 ) }
    dend_34 { pt3dadd( 68.0182, -116.198, -42.0325, 0.81 ) }
    dend_34 { pt3dadd( 68.4676, -116.09, -42.9342, 0.81 ) }
    dend_34 { pt3dadd( 68.948, -115.987, -44.0678, 0.66 ) }
    dend_34 { pt3dadd( 69.3902, -115.963, -45.2205, 0.66 ) }
    dend_34 { pt3dadd( 69.9285, -116.202, -46.7662, 0.74 ) }
    dend_34 { pt3dadd( 70.4197, -116.801, -47.9916, 0.88 ) }
    dend_34 { pt3dadd( 70.8594, -117.553, -48.8648, 0.88 ) }
    dend_34 { pt3dadd( 71.2834, -118.346, -49.544, 0.81 ) }
    dend_34 { pt3dadd( 71.703, -119.134, -50.1368, 0.81 ) }
    dend_34 { pt3dadd( 72.5657, -120.662, -51.2027, 0.59 ) }
    dend_34 { pt3dadd( 73.449, -122.101, -52.2075, 0.52 ) }
    dend_34 { pt3dadd( 74.1388, -123.099, -52.9973, 0.66 ) }
    dend_34 { pt3dadd( 74.6484, -123.747, -53.581, 0.66 ) }
    dend_34 { pt3dadd( 75.3392, -124.538, -54.3941, 0.81 ) }
    dend_34 { pt3dadd( 75.7729, -125.02, -54.9437, 0.81 ) }
    dend_34 { pt3dadd( 76.5075, -125.821, -55.9492, 0.66 ) }
    dend_34 { pt3dadd( 76.9691, -126.411, -56.6978, 0.81 ) }
    dend_34 { pt3dadd( 77.4996, -127.152, -57.5363, 0.81 ) }
    dend_34 { pt3dadd( 78.0675, -127.976, -58.3863, 0.88 ) }
    dend_34 { pt3dadd( 78.6106, -128.776, -59.1482, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_34 { pt3dadd( 79.1425, -129.523, -59.8534, 0.52 ) }
    dend_34 { pt3dadd( 79.8806, -130.604, -60.9065, 0.88 ) }
    dend_34 { pt3dadd( 80.3487, -131.402, -61.6928, 0.88 ) }
    dend_34 { pt3dadd( 80.668, -132.09, -62.3467, 1.03 ) }
    dend_34 { pt3dadd( 80.9535, -132.967, -63.1146, 0.81 ) }
    dend_34 { pt3dadd( 81.1373, -133.708, -63.7013, 0.59 ) }
    dend_34 { pt3dadd( 81.5241, -135.533, -64.9876, 0.59 ) }
    dend_34 { pt3dadd( 81.7466, -136.621, -65.6538, 0.59 ) }
    dend_34 { pt3dadd( 81.9238, -137.474, -66.1574, 0.66 ) }
    dend_34 { pt3dadd( 82.2681, -138.596, -66.7615, 0.37 ) }
    dend_34 { pt3dadd( 82.5787, -139.29, -67.14, 0.37 ) }
    dend_34 { pt3dadd( 83.1182, -140.279, -67.8572, 0.66 ) }
    dend_34 { pt3dadd( 83.4694, -140.792, -68.2918, 0.81 ) }
    dend_34 { pt3dadd( 83.865, -141.371, -68.9106, 0.81 ) }
    dend_34 { pt3dadd( 84.3255, -142.074, -69.8671, 0.44 ) }
    dend_34 { pt3dadd( 84.7133, -143.081, -71.5351, 1.33 ) }
    dend_34 { pt3dadd( 84.9961, -144.348, -73.7451, 1.92 ) }
    dend_34 { pt3dadd( 85.0492, -144.701, -74.3941, 1.84 ) }
    dend_34 { pt3dadd( 85.1828, -145.639, -76.242, 0.81 ) }
    dend_34 { pt3dadd( 85.2893, -146.197, -77.4644, 0.88 ) }
    dend_34 { pt3dadd( 85.7016, -147.586, -81.1231, 0.52 ) }
    dend_34 { pt3dadd( 85.8629, -147.848, -81.9872, 0.52 ) }
    dend_34 { pt3dadd( 86.133, -148.066, -82.9342, 0.52 ) }
    dend_34 { pt3dadd( 86.5314, -148.221, -83.9218, 0.52 ) }
    dend_34 { pt3dadd( 87.0876, -148.292, -84.8744, 1.18 ) }
    dend_34 { pt3dadd( 87.8259, -148.301, -85.7986, 1.69 ) }
    dend_34 { pt3dadd( 88.355, -148.245, -86.3033, 1.92 ) }
    dend_34 { pt3dadd( 88.8002, -148.189, -86.7566, 1.69 ) }
    dend_34 { pt3dadd( 89.857, -148.113, -87.8267, 0.81 ) }
    dend_34 { pt3dadd( 90.9944, -148.07, -88.9542, 0.52 ) }
    dend_34 { pt3dadd( 91.6566, -148.055, -89.5884, 0.81 ) }
    dend_34 { pt3dadd( 92.1223, -148.047, -90.0236, 0.81 ) }
    dend_34 { pt3dadd( 93.5887, -148.009, -91.4341, 0.37 ) }
    dend_34 { pt3dadd( 94.8643, -147.947, -92.6585, 0.29 ) }
    dend_34 { pt3dadd( 95.7914, -147.849, -93.6164, 0.52 ) }
    dend_34 { pt3dadd( 96.5555, -147.711, -94.4146, 0.88 ) }
    dend_34 { pt3dadd( 96.9152, -147.603, -94.8246, 1.18 ) }
    dend_34 { pt3dadd( 97.2092, -147.462, -95.2158, 1.4 ) }
    dend_34 { pt3dadd( 97.8141, -147.008, -96.1605, 0.88 ) }
    dend_34 { pt3dadd( 98.7191, -146.092, -97.8007, 0.44 ) }
    dend_34 { pt3dadd( 99.0909, -145.678, -98.509, 0.44 ) }
    dend_34 { pt3dadd( 99.583, -145.126, -99.4391, 1.18 ) }
    dend_34 { pt3dadd( 100.299, -144.44, -100.613, 1.4 ) }
    dend_34 { pt3dadd( 100.751, -144.081, -101.271, 1.4 ) }
    dend_34 { pt3dadd( 101.221, -143.777, -101.886, 1.18 ) }
    dend_34 { pt3dadd( 101.508, -143.632, -102.203, 1.18 ) }
    dend_34 { pt3dadd( 102.74, -143.113, -103.465, 0.29 ) }
    dend_34 { pt3dadd( 103.796, -142.727, -104.413, 0.29 ) }
    dend_34 { pt3dadd( 104.739, -142.38, -105.185, 0.29 ) }
    dend_34 { pt3dadd( 105.463, -142.09, -105.766, 0.44 ) }
    dend_34 { pt3dadd( 106.127, -141.783, -106.286, 0.37 ) }
    dend_34 { pt3dadd( 106.55, -141.569, -106.601, 0.37 ) }
    dend_34 { pt3dadd( 107.74, -140.915, -107.403, 1.33 ) }
    dend_34 { pt3dadd( 108.293, -140.553, -107.764, 1.77 ) }
    dend_34 { pt3dadd( 109.0, -140.053, -108.197, 1.55 ) }
    dend_34 { pt3dadd( 109.754, -139.513, -108.638, 0.74 ) }
    dend_34 { pt3dadd( 110.514, -138.975, -109.076, 0.52 ) }
    dend_34 { pt3dadd( 111.286, -138.436, -109.546, 0.29 ) }
    dend_34 { pt3dadd( 111.904, -138.014, -109.929, 0.29 ) }
    dend_34 { pt3dadd( 112.462, -137.648, -110.273, 0.66 ) }
    dend_34 { pt3dadd( 113.127, -137.208, -110.694, 0.66 ) }
    dend_34 { pt3dadd( 114.01, -136.641, -111.299, 0.29 ) }
    dend_34 { pt3dadd( 115.076, -135.984, -112.067, 0.29 ) }
    dend_34 { pt3dadd( 115.886, -135.503, -112.665, 0.29 ) }
    dend_34 { pt3dadd( 116.462, -135.18, -113.087, 0.44 ) }
    dend_34 { pt3dadd( 117.29, -134.681, -113.733, 1.33 ) }
    dend_34 { pt3dadd( 118.32, -134.023, -114.562, 2.36 ) }
    dend_34 { pt3dadd( 118.641, -133.815, -114.823, 2.36 ) }
    dend_34 { pt3dadd( 119.287, -133.392, -115.325, 2.06 ) }
    dend_34 { pt3dadd( 120.208, -132.82, -116.031, 0.66 ) }
    dend_34 { pt3dadd( 121.15, -132.238, -116.732, 0.29 ) }
    dend_34 { pt3dadd( 121.834, -131.81, -117.211, 0.29 ) }
    dend_34 { pt3dadd( 122.804, -131.18, -117.831, 0.52 ) }
    dend_34 { pt3dadd( 123.432, -130.768, -118.213, 0.66 ) }
    dend_34 { pt3dadd( 124.142, -130.314, -118.608, 0.29 ) }
    dend_34 { pt3dadd( 124.494, -130.082, -118.78, 0.29 ) }
    dend_34 { pt3dadd( 125.379, -129.486, -119.123, 0.88 ) }
    dend_34 { pt3dadd( 125.929, -129.087, -119.317, 1.03 ) }
    dend_34 { pt3dadd( 126.765, -128.445, -119.593, 1.03 ) }
    dend_34 { pt3dadd( 127.346, -128.014, -119.793, 0.74 ) }
    dend_34 { pt3dadd( 127.826, -127.689, -119.958, 0.44 ) }
    dend_34 { pt3dadd( 128.557, -127.273, -120.214, 0.37 ) }
    dend_34 { pt3dadd( 129.301, -126.924, -120.52, 0.37 ) }
    dend_34 { pt3dadd( 129.996, -126.617, -120.867, 0.59 ) }
    dend_34 { pt3dadd( 130.735, -126.271, -121.296, 0.81 ) }
    dend_34 { pt3dadd( 131.152, -126.037, -121.568, 0.81 ) }
    dend_34 { pt3dadd( 131.506, -125.783, -121.818, 0.81 ) }
    dend_34 { pt3dadd( 132.466, -124.916, -122.536, 0.37 ) }
    dend_34 { pt3dadd( 133.284, -124.015, -123.15, 0.37 ) }
    dend_34 { pt3dadd( 133.865, -123.267, -123.575, 0.74 ) }
    dend_34 { pt3dadd( 134.498, -122.383, -124.026, 1.11 ) }
    dend_34 { pt3dadd( 135.18, -121.411, -124.484, 0.66 ) }
    dend_34 { pt3dadd( 135.658, -120.74, -124.78, 0.66 ) }
    dend_34 { pt3dadd( 136.232, -119.98, -125.094, 0.81 ) }
    dend_34 { pt3dadd( 136.802, -119.306, -125.375, 1.03 ) }
    dend_34 { pt3dadd( 137.442, -118.611, -125.676, 0.88 ) }
    dend_34 { pt3dadd( 138.16, -117.855, -126.0, 0.66 ) }
    dend_34 { pt3dadd( 138.778, -117.179, -126.265, 0.29 ) }
    dend_34 { pt3dadd( 139.478, -116.384, -126.538, 0.22 ) }
    dend_34 { pt3dadd( 140.104, -115.66, -126.758, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_34 { pt3dadd( 140.552, -115.124, -126.891, 0.37 ) }
    dend_34 { pt3dadd( 141.203, -114.331, -127.064, 0.37 ) }
    dend_34 { pt3dadd( 141.774, -113.665, -127.218, 0.81 ) }
    dend_34 { pt3dadd( 142.329, -113.015, -127.376, 0.81 ) }
    dend_34 { pt3dadd( 143.042, -112.166, -127.6, 0.88 ) }
    dend_34 { pt3dadd( 143.914, -111.113, -127.909, 0.29 ) }
    dend_34 { pt3dadd( 144.523, -110.377, -128.134, 0.29 ) }
    dend_34 { pt3dadd( 145.049, -109.734, -128.367, 0.37 ) }
    dend_34 { pt3dadd( 145.968, -108.582, -128.826, 0.52 ) }
    dend_34 { pt3dadd( 146.586, -107.758, -129.168, 0.66 ) }
    dend_34 { pt3dadd( 147.029, -107.139, -129.429, 0.59 ) }
    dend_34 { pt3dadd( 147.594, -106.335, -129.788, 1.62 ) }
    dend_34 { pt3dadd( 148.392, -105.138, -130.301, 1.99 ) }
    dend_34 { pt3dadd( 149.127, -104.016, -130.791, 1.69 ) }
    dend_34 { pt3dadd( 149.645, -103.325, -131.149, 1.77 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 15/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 57.8024, -114.052, -33.2276, 0.74 ) }
    dend_29 { pt3dadd( 58.2678, -116.321, -33.2824, 0.74 ) }
    dend_29 { pt3dadd( 58.5828, -117.659, -33.3349, 0.74 ) }
    dend_29 { pt3dadd( 58.9438, -119.003, -33.4166, 0.74 ) }
    dend_29 { pt3dadd( 59.326, -120.272, -33.5204, 0.74 ) }
    dend_29 { pt3dadd( 59.8142, -121.697, -33.6482, 0.74 ) }
    dend_29 { pt3dadd( 60.1194, -122.529, -33.7295, 0.88 ) }
    dend_29 { pt3dadd( 60.4784, -123.332, -33.8403, 0.88 ) }
    dend_29 { pt3dadd( 61.047, -124.51, -34.0158, 0.59 ) }
    dend_29 { pt3dadd( 61.4797, -125.424, -34.1576, 0.37 ) }
    dend_29 { pt3dadd( 61.9726, -126.519, -34.3386, 0.37 ) }
    dend_29 { pt3dadd( 62.3493, -127.4, -34.498, 0.59 ) }
    dend_29 { pt3dadd( 62.7152, -128.322, -34.6587, 0.66 ) }
    dend_29 { pt3dadd( 63.069, -129.385, -34.8316, 0.66 ) }
    dend_29 { pt3dadd( 63.3506, -130.464, -34.9952, 0.81 ) }
    dend_29 { pt3dadd( 63.4887, -131.165, -35.0973, 0.81 ) }
    dend_29 { pt3dadd( 63.5872, -131.888, -35.2002, 0.52 ) }
    dend_29 { pt3dadd( 63.6538, -132.529, -35.2935, 0.52 ) }
    dend_29 { pt3dadd( 63.7762, -134.176, -35.5305, 0.74 ) }
    dend_29 { pt3dadd( 63.8519, -135.37, -35.6759, 0.96 ) }
    dend_29 { pt3dadd( 63.9154, -136.402, -35.7713, 0.96 ) }
    dend_29 { pt3dadd( 63.9663, -137.242, -35.8246, 0.96 ) }
    dend_29 { pt3dadd( 64.0103, -138.277, -35.8587, 0.66 ) }
    dend_29 { pt3dadd( 64.0119, -138.917, -35.8546, 0.66 ) }
    dend_29 { pt3dadd( 63.9469, -139.908, -35.7922, 1.11 ) }
    dend_29 { pt3dadd( 63.8423, -140.553, -35.7214, 1.11 ) }
    dend_29 { pt3dadd( 63.5743, -141.544, -35.573, 0.81 ) }
    dend_29 { pt3dadd( 63.1518, -142.708, -35.3753, 0.44 ) }
    dend_29 { pt3dadd( 62.6736, -143.785, -35.1824, 0.44 ) }
    dend_29 { pt3dadd( 62.3044, -144.54, -35.0679, 0.44 ) }
    dend_29 { pt3dadd( 61.8346, -145.444, -34.9656, 0.66 ) }
    dend_29 { pt3dadd( 61.444, -146.202, -34.8987, 0.44 ) }
    dend_29 { pt3dadd( 60.9434, -147.182, -34.8196, 0.81 ) }
    dend_29 { pt3dadd( 60.6218, -147.862, -34.7688, 0.96 ) }
    dend_29 { pt3dadd( 60.3163, -148.595, -34.7235, 0.52 ) }
    dend_29 { pt3dadd( 60.0308, -149.363, -34.6988, 0.44 ) }
    dend_29 { pt3dadd( 59.6216, -150.513, -34.7083, 0.37 ) }
    dend_29 { pt3dadd( 59.3069, -151.414, -34.7438, 0.37 ) }
    dend_29 { pt3dadd( 58.9608, -152.402, -34.7902, 0.52 ) }
    dend_29 { pt3dadd( 58.5445, -153.634, -34.8582, 0.59 ) }
    dend_29 { pt3dadd( 58.1588, -154.82, -34.9339, 0.59 ) }
    dend_29 { pt3dadd( 57.8358, -155.928, -35.021, 0.66 ) }
    dend_29 { pt3dadd( 57.5467, -157.135, -35.1402, 0.74 ) }
    dend_29 { pt3dadd( 57.4012, -157.962, -35.2248, 0.59 ) }
    dend_29 { pt3dadd( 57.2883, -158.824, -35.3004, 0.44 ) }
    dend_29 { pt3dadd( 57.2571, -159.155, -35.3089, 0.74 ) }
    dend_29 { pt3dadd( 57.2325, -159.732, -35.2841, 0.74 ) }
    dend_29 { pt3dadd( 57.2427, -160.436, -35.2313, 0.44 ) }
    dend_29 { pt3dadd( 57.3046, -161.492, -35.1666, 0.29 ) }
    dend_29 { pt3dadd( 57.3906, -162.28, -35.1431, 0.37 ) }
    dend_29 { pt3dadd( 57.4931, -162.997, -35.1337, 0.59 ) }
    dend_29 { pt3dadd( 57.6485, -163.975, -35.1386, 0.59 ) }
    dend_29 { pt3dadd( 57.7959, -164.964, -35.2072, 0.74 ) }
    dend_29 { pt3dadd( 57.8759, -165.496, -35.2504, 0.81 ) }
    dend_29 { pt3dadd( 58.0093, -166.488, -35.3671, 0.66 ) }
    dend_29 { pt3dadd( 58.0769, -167.118, -35.4545, 0.66 ) }
    dend_29 { pt3dadd( 58.1155, -167.624, -35.5316, 0.66 ) }
    dend_29 { pt3dadd( 58.1671, -168.984, -35.7246, 0.59 ) }
    dend_29 { pt3dadd( 58.1591, -170.393, -35.9051, 0.66 ) }
    dend_29 { pt3dadd( 58.1145, -171.419, -36.0219, 0.74 ) }
    dend_29 { pt3dadd( 58.0348, -172.376, -36.1134, 0.74 ) }
    dend_29 { pt3dadd( 57.9898, -172.962, -36.1627, 0.74 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 77/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -33.6119, -83.7958, 0.575039, 0.81 ) }
    dend_25 { pt3dadd( -33.342, -85.1032, -0.871102, 0.81 ) }
    dend_25 { pt3dadd( -33.2708, -85.8059, -1.42881, 0.74 ) }
    dend_25 { pt3dadd( -33.1906, -86.6405, -1.90318, 0.59 ) }
    dend_25 { pt3dadd( -33.1099, -87.2224, -2.158, 0.59 ) }
    dend_25 { pt3dadd( -32.9627, -88.1935, -2.50453, 0.74 ) }
    dend_25 { pt3dadd( -32.8141, -89.3988, -2.88125, 0.66 ) }
    dend_25 { pt3dadd( -32.7179, -90.59, -3.1124, 0.66 ) }
    dend_25 { pt3dadd( -32.6501, -91.6813, -3.33865, 0.74 ) }
    dend_25 { pt3dadd( -32.5465, -92.8676, -3.58689, 0.74 ) }
    dend_25 { pt3dadd( -32.4595, -93.6599, -3.78729, 0.81 ) }
    dend_25 { pt3dadd( -32.2349, -95.2414, -4.25477, 0.96 ) }
    dend_25 { pt3dadd( -32.1322, -95.9671, -4.50541, 1.18 ) }
    dend_25 { pt3dadd( -31.9238, -97.8078, -5.17637, 0.52 ) }
    dend_25 { pt3dadd( -31.8309, -98.993, -5.65663, 0.74 ) }
    dend_25 { pt3dadd( -31.756, -100.047, -6.17691, 0.88 ) }
    dend_25 { pt3dadd( -31.677, -100.946, -6.75282, 0.59 ) }
    dend_25 { pt3dadd( -31.5866, -101.764, -7.36555, 0.59 ) }
    dend_25 { pt3dadd( -31.5091, -102.546, -7.99202, 1.18 ) }
    dend_25 { pt3dadd( -31.4511, -103.439, -8.68705, 1.18 ) }
    dend_25 { pt3dadd( -31.3771, -105.221, -10.0357, 0.59 ) }
    dend_25 { pt3dadd( -31.3205, -106.611, -11.0199, 0.74 ) }
    dend_25 { pt3dadd( -31.327, -107.393, -11.5932, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_25 { pt3dadd( -31.4067, -108.481, -12.3784, 0.66 ) }
    dend_25 { pt3dadd( -31.592, -109.572, -13.0862, 0.88 ) }
    dend_25 { pt3dadd( -31.7988, -110.281, -13.4464, 1.03 ) }
    dend_25 { pt3dadd( -32.1608, -111.099, -13.7538, 0.74 ) }
    dend_25 { pt3dadd( -33.1213, -112.837, -14.3716, 0.44 ) }
    dend_25 { pt3dadd( -33.4739, -113.421, -14.6372, 0.44 ) }
    dend_25 { pt3dadd( -33.856, -114.078, -14.9845, 0.81 ) }
    dend_25 { pt3dadd( -34.2298, -114.923, -15.4784, 1.18 ) }
    dend_25 { pt3dadd( -34.3959, -115.669, -15.9175, 1.18 ) }
    dend_25 { pt3dadd( -34.3677, -116.673, -16.5124, 0.81 ) }
    dend_25 { pt3dadd( -34.0011, -118.191, -17.3659, 0.52 ) }
    dend_25 { pt3dadd( -33.6942, -119.011, -17.8329, 0.88 ) }
    dend_25 { pt3dadd( -33.1287, -120.194, -18.5333, 1.03 ) }
    dend_25 { pt3dadd( -32.6537, -121.043, -19.0288, 1.03 ) }
    dend_25 { pt3dadd( -32.1653, -121.866, -19.4754, 1.25 ) }
    dend_25 { pt3dadd( -31.8693, -122.379, -19.7255, 1.92 ) }
    dend_25 { pt3dadd( -31.519, -123.075, -20.0379, 1.55 ) }
    dend_25 { pt3dadd( -30.8967, -124.672, -20.6542, 0.52 ) }
    dend_25 { pt3dadd( -30.7363, -125.327, -20.8812, 0.44 ) }
    dend_25 { pt3dadd( -30.583, -126.343, -21.2402, 0.37 ) }
    dend_25 { pt3dadd( -30.5358, -126.856, -21.4283, 0.52 ) }
    dend_25 { pt3dadd( -30.4985, -127.435, -21.6617, 0.52 ) }
    dend_25 { pt3dadd( -30.4352, -128.702, -22.2054, 0.44 ) }
    dend_25 { pt3dadd( -30.3637, -130.082, -22.7923, 0.96 ) }
    dend_25 { pt3dadd( -30.2633, -131.475, -23.3357, 1.69 ) }
    dend_25 { pt3dadd( -30.1785, -132.487, -23.7281, 1.92 ) }
    dend_25 { pt3dadd( -30.0738, -133.592, -24.1331, 1.92 ) }
    dend_25 { pt3dadd( -29.988, -134.727, -24.5183, 1.92 ) }
    dend_25 { pt3dadd( -29.9341, -135.82, -24.8611, 1.62 ) }
    dend_25 { pt3dadd( -29.8873, -137.491, -25.2408, 0.37 ) }
    dend_25 { pt3dadd( -29.8895, -139.615, -25.5796, 0.29 ) }
    dend_25 { pt3dadd( -29.9035, -140.195, -25.6557, 0.29 ) }
    dend_25 { pt3dadd( -29.9301, -140.941, -25.7435, 0.29 ) }
    dend_25 { pt3dadd( -29.9354, -141.357, -25.7957, 0.29 ) }
    dend_25 { pt3dadd( -29.9542, -142.483, -26.0234, 0.88 ) }
    dend_25 { pt3dadd( -29.9784, -143.132, -26.2028, 1.11 ) }
    dend_25 { pt3dadd( -29.9971, -143.596, -26.3355, 1.11 ) }
    dend_25 { pt3dadd( -30.0645, -144.585, -26.654, 0.29 ) }
    dend_25 { pt3dadd( -30.1554, -145.508, -26.9489, 0.29 ) }
    dend_25 { pt3dadd( -30.3721, -146.891, -27.3709, 0.44 ) }
    dend_25 { pt3dadd( -30.5484, -147.682, -27.6157, 0.66 ) }
    dend_25 { pt3dadd( -30.7065, -148.267, -27.7902, 0.66 ) }
    dend_25 { pt3dadd( -31.0258, -149.258, -28.065, 0.37 ) }
    dend_25 { pt3dadd( -31.4941, -150.543, -28.3822, 0.37 ) }
    dend_25 { pt3dadd( -31.9079, -151.757, -28.6401, 0.59 ) }
    dend_25 { pt3dadd( -32.2075, -152.839, -28.8336, 1.03 ) }
    dend_25 { pt3dadd( -32.3305, -153.378, -28.9297, 1.03 ) }
    dend_25 { pt3dadd( -32.5217, -154.402, -29.1065, 0.74 ) }
    dend_25 { pt3dadd( -32.6747, -155.441, -29.3135, 0.29 ) }
    dend_25 { pt3dadd( -32.7951, -156.557, -29.5752, 0.29 ) }
    dend_25 { pt3dadd( -32.8762, -157.77, -29.8654, 1.25 ) }
    dend_25 { pt3dadd( -32.9024, -158.574, -30.052, 2.06 ) }
    dend_25 { pt3dadd( -32.9112, -159.139, -30.1839, 2.06 ) }
    dend_25 { pt3dadd( -32.9316, -160.363, -30.4595, 1.4 ) }
    dend_25 { pt3dadd( -33.0026, -161.673, -30.7269, 0.81 ) }
    dend_25 { pt3dadd( -33.1171, -162.641, -30.8968, 0.44 ) }
    dend_25 { pt3dadd( -33.2256, -163.449, -31.0161, 0.59 ) }
    dend_25 { pt3dadd( -33.3148, -164.195, -31.1153, 0.59 ) }
    dend_25 { pt3dadd( -33.3869, -165.152, -31.2276, 0.59 ) }
    dend_25 { pt3dadd( -33.3887, -166.251, -31.3296, 0.44 ) }
    dend_25 { pt3dadd( -33.3204, -167.169, -31.4181, 0.29 ) }
    dend_25 { pt3dadd( -33.238, -167.944, -31.5239, 0.74 ) }
    dend_25 { pt3dadd( -33.1407, -168.758, -31.6657, 0.74 ) }
    dend_25 { pt3dadd( -33.0104, -169.712, -31.8865, 0.52 ) }
    dend_25 { pt3dadd( -32.886, -170.438, -32.0935, 0.52 ) }
    dend_25 { pt3dadd( -32.7519, -171.129, -32.3098, 0.44 ) }
    dend_25 { pt3dadd( -32.5706, -172.152, -32.623, 0.44 ) }
    dend_25 { pt3dadd( -32.4821, -172.99, -32.8583, 0.37 ) }
    dend_25 { pt3dadd( -32.4476, -173.871, -33.1002, 0.37 ) }
    dend_25 { pt3dadd( -32.4383, -174.445, -33.2529, 0.59 ) }
    dend_25 { pt3dadd( -32.3965, -175.529, -33.5383, 0.59 ) }
    dend_25 { pt3dadd( -32.3379, -176.158, -33.7232, 0.59 ) }
    dend_25 { pt3dadd( -32.1826, -177.118, -34.018, 0.37 ) }
    dend_25 { pt3dadd( -31.9444, -178.273, -34.3897, 0.29 ) }
    dend_25 { pt3dadd( -31.7822, -178.973, -34.6217, 1.18 ) }
    dend_25 { pt3dadd( -31.6435, -179.577, -34.8845, 1.4 ) }
    dend_25 { pt3dadd( -31.4804, -180.328, -35.2631, 1.4 ) }
    dend_25 { pt3dadd( -31.3681, -180.846, -35.54, 1.4 ) }
    dend_25 { pt3dadd( -31.2156, -181.474, -35.8908, 0.88 ) }
    dend_25 { pt3dadd( -31.0395, -182.1, -36.2298, 0.66 ) }
    dend_25 { pt3dadd( -30.5487, -183.757, -37.0849, 0.37 ) }
    dend_25 { pt3dadd( -30.234, -184.77, -37.5613, 0.29 ) }
    dend_25 { pt3dadd( -30.0379, -185.359, -37.8032, 0.29 ) }
    dend_25 { pt3dadd( -29.8628, -185.836, -37.9851, 0.29 ) }
    dend_25 { pt3dadd( -29.4434, -186.872, -38.3291, 1.03 ) }
    dend_25 { pt3dadd( -29.1386, -187.488, -38.4962, 1.47 ) }
    dend_25 { pt3dadd( -28.827, -188.007, -38.6021, 1.62 ) }
    dend_25 { pt3dadd( -28.4659, -188.583, -38.7221, 1.33 ) }
    dend_25 { pt3dadd( -28.1008, -189.201, -38.8419, 0.81 ) }
    dend_25 { pt3dadd( -27.7446, -189.882, -38.9605, 0.44 ) }
    dend_25 { pt3dadd( -27.2127, -191.029, -39.1484, 0.29 ) }
    dend_25 { pt3dadd( -26.86, -191.897, -39.2811, 0.88 ) }
    dend_25 { pt3dadd( -26.5248, -192.885, -39.4166, 0.96 ) }
    dend_25 { pt3dadd( -26.3262, -193.592, -39.5133, 1.25 ) }
    dend_25 { pt3dadd( -26.1898, -194.229, -39.5928, 1.4 ) }
    dend_25 { pt3dadd( -26.1045, -194.829, -39.6576, 1.4 ) }
    dend_25 { pt3dadd( -26.0462, -195.74, -39.7367, 1.03 ) }
    dend_25 { pt3dadd( -26.0433, -196.889, -39.8322, 0.29 ) }
    dend_25 { pt3dadd( -26.1286, -198.385, -39.9447, 0.29 ) }
    dend_25 { pt3dadd( -26.2503, -199.388, -40.0016, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_25 { pt3dadd( -26.3624, -200.031, -40.0259, 0.44 ) }
    dend_25 { pt3dadd( -26.5701, -200.887, -40.0356, 0.44 ) }
    dend_25 { pt3dadd( -26.8543, -201.747, -40.0452, 0.52 ) }
    dend_25 { pt3dadd( -27.2329, -202.658, -40.0568, 0.44 ) }
    dend_25 { pt3dadd( -27.5825, -203.409, -40.0818, 0.29 ) }
    dend_25 { pt3dadd( -27.8055, -203.866, -40.1126, 0.44 ) }
    dend_25 { pt3dadd( -28.2128, -204.72, -40.1879, 0.44 ) }
    dend_25 { pt3dadd( -28.8057, -205.999, -40.3671, 1.55 ) }
    dend_25 { pt3dadd( -29.2186, -206.988, -40.5432, 2.43 ) }
    dend_25 { pt3dadd( -29.4402, -207.589, -40.6739, 2.73 ) }
    dend_25 { pt3dadd( -29.5897, -208.062, -40.7867, 2.43 ) }
    dend_25 { pt3dadd( -29.8753, -209.139, -41.0428, 1.69 ) }
    dend_25 { pt3dadd( -30.2727, -210.898, -41.4417, 0.52 ) }
    dend_25 { pt3dadd( -30.384, -211.46, -41.5487, 0.52 ) }
    dend_25 { pt3dadd( -30.4797, -211.944, -41.625, 0.88 ) }
    dend_25 { pt3dadd( -30.6887, -212.819, -41.7631, 0.59 ) }
    dend_25 { pt3dadd( -30.8648, -213.546, -41.8859, 0.59 ) }
    dend_25 { pt3dadd( -31.1356, -214.576, -42.0655, 0.66 ) }
    dend_25 { pt3dadd( -31.2734, -215.099, -42.1535, 0.66 ) }
    dend_25 { pt3dadd( -31.4302, -215.72, -42.279, 0.52 ) }
    dend_25 { pt3dadd( -31.729, -217.014, -42.6055, 0.29 ) }
    dend_25 { pt3dadd( -31.897, -217.898, -42.8596, 0.29 ) }
    dend_25 { pt3dadd( -31.9268, -218.113, -42.9246, 0.59 ) }
    dend_25 { pt3dadd( -31.9903, -218.827, -43.1299, 0.59 ) }
    dend_25 { pt3dadd( -32.0445, -219.54, -43.3104, 0.29 ) }
    dend_25 { pt3dadd( -32.1532, -220.686, -43.5636, 0.29 ) }
    dend_25 { pt3dadd( -32.2133, -221.52, -43.7044, 0.74 ) }
    dend_25 { pt3dadd( -32.2905, -222.048, -43.8131, 0.74 ) }
    dend_25 { pt3dadd( -32.4222, -222.686, -43.9509, 0.74 ) }
    dend_25 { pt3dadd( -32.6074, -223.341, -44.0861, 0.59 ) }
    dend_25 { pt3dadd( -32.9454, -224.395, -44.2963, 0.29 ) }
    dend_25 { pt3dadd( -33.3975, -225.807, -44.57, 0.29 ) }
    dend_25 { pt3dadd( -33.8532, -227.221, -44.8445, 0.37 ) }
    dend_25 { pt3dadd( -34.0134, -227.729, -44.9369, 0.37 ) }
    dend_25 { pt3dadd( -34.2607, -228.568, -45.0712, 0.29 ) }
    dend_25 { pt3dadd( -34.5158, -229.518, -45.202, 0.44 ) }
    dend_25 { pt3dadd( -34.6126, -229.948, -45.2403, 0.59 ) }
    dend_25 { pt3dadd( -34.7155, -230.54, -45.2734, 0.44 ) }
    dend_25 { pt3dadd( -34.7383, -231.173, -45.3064, 0.37 ) }
    dend_25 { pt3dadd( -34.723, -231.91, -45.372, 0.37 ) }
    dend_25 { pt3dadd( -34.6823, -232.557, -45.4474, 0.52 ) }
    dend_25 { pt3dadd( -34.6407, -233.201, -45.5469, 0.74 ) }
    dend_25 { pt3dadd( -34.5925, -234.121, -45.7506, 0.29 ) }
    dend_25 { pt3dadd( -34.5366, -235.366, -46.0878, 1.11 ) }
    dend_25 { pt3dadd( -34.5212, -235.837, -46.2294, 1.33 ) }
    dend_25 { pt3dadd( -34.5178, -236.314, -46.3787, 1.33 ) }
    dend_25 { pt3dadd( -34.554, -237.091, -46.618, 1.03 ) }
    dend_25 { pt3dadd( -34.7007, -238.215, -46.9589, 0.59 ) }
    dend_25 { pt3dadd( -34.8575, -238.839, -47.1329, 0.37 ) }
    dend_25 { pt3dadd( -35.1115, -239.505, -47.2792, 0.59 ) }
    dend_25 { pt3dadd( -35.2528, -239.82, -47.343, 0.59 ) }
    dend_25 { pt3dadd( -35.5854, -240.466, -47.4501, 0.29 ) }
    dend_25 { pt3dadd( -35.9194, -241.059, -47.5052, 0.29 ) }
    dend_25 { pt3dadd( -36.1892, -241.553, -47.5265, 0.29 ) }
    dend_25 { pt3dadd( -36.4188, -242.03, -47.6252, 0.29 ) }
    dend_25 { pt3dadd( -36.8311, -242.883, -47.8961, 0.88 ) }
    dend_25 { pt3dadd( -36.9487, -243.143, -47.9892, 1.18 ) }
    dend_25 { pt3dadd( -37.0677, -243.426, -48.1027, 1.18 ) }
    dend_25 { pt3dadd( -37.3583, -244.128, -48.3967, 0.74 ) }
    dend_25 { pt3dadd( -37.9469, -245.561, -49.023, 0.29 ) }
    dend_25 { pt3dadd( -38.2217, -246.228, -49.3011, 0.29 ) }
    dend_25 { pt3dadd( -38.5744, -247.061, -49.6173, 0.29 ) }
    dend_25 { pt3dadd( -38.9904, -248.023, -49.9658, 0.96 ) }
    dend_25 { pt3dadd( -39.2175, -248.542, -50.1357, 1.11 ) }
    dend_25 { pt3dadd( -39.5913, -249.423, -50.3763, 0.74 ) }
    dend_25 { pt3dadd( -39.8646, -250.194, -50.5436, 0.59 ) }
    dend_25 { pt3dadd( -39.979, -250.586, -50.6238, 0.81 ) }
    dend_25 { pt3dadd( -40.212, -251.438, -50.7794, 0.81 ) }
    dend_25 { pt3dadd( -40.4096, -252.169, -50.8844, 0.44 ) }
    dend_25 { pt3dadd( -40.6977, -253.169, -51.0238, 0.29 ) }
    dend_25 { pt3dadd( -41.0358, -254.202, -51.1829, 0.29 ) }
    dend_25 { pt3dadd( -41.4748, -255.466, -51.4083, 1.62 ) }
    dend_25 { pt3dadd( -41.6517, -256.022, -51.5144, 1.84 ) }
    dend_25 { pt3dadd( -41.7768, -256.527, -51.6153, 1.99 ) }
    dend_25 { pt3dadd( -41.986, -257.405, -51.8463, 1.77 ) }
    dend_25 { pt3dadd( -42.2021, -258.24, -52.0976, 1.11 ) }
    dend_25 { pt3dadd( -42.4594, -259.178, -52.3878, 0.44 ) }
    dend_25 { pt3dadd( -42.6923, -260.068, -52.6746, 0.44 ) }
    dend_25 { pt3dadd( -42.9486, -261.21, -53.0215, 0.37 ) }
    dend_25 { pt3dadd( -43.2063, -262.748, -53.4311, 0.29 ) }
    dend_25 { pt3dadd( -43.2814, -263.271, -53.5598, 0.29 ) }
    dend_25 { pt3dadd( -43.429, -264.362, -53.8117, 0.66 ) }
    dend_25 { pt3dadd( -43.543, -265.059, -53.9818, 0.81 ) }
    dend_25 { pt3dadd( -43.7001, -265.927, -54.2058, 0.37 ) }
    dend_25 { pt3dadd( -43.8865, -267.206, -54.5064, 0.29 ) }
    dend_25 { pt3dadd( -44.0075, -268.975, -54.8732, 1.4 ) }
    dend_25 { pt3dadd( -44.0188, -269.568, -54.9889, 1.99 ) }
    dend_25 { pt3dadd( -44.0086, -270.273, -55.1047, 2.21 ) }
    dend_25 { pt3dadd( -43.9768, -271.179, -55.2039, 1.47 ) }
    dend_25 { pt3dadd( -43.8531, -272.73, -55.2508, 0.29 ) }
    dend_25 { pt3dadd( -43.7264, -273.52, -55.207, 0.29 ) }
    dend_25 { pt3dadd( -43.3854, -274.662, -55.0298, 0.52 ) }
    dend_25 { pt3dadd( -43.1509, -275.258, -54.9131, 0.66 ) }
    dend_25 { pt3dadd( -42.7404, -276.087, -54.7154, 0.44 ) }
    dend_25 { pt3dadd( -42.0814, -277.272, -54.4154, 0.37 ) }
    dend_25 { pt3dadd( -41.5824, -278.084, -54.2391, 0.37 ) }
    dend_25 { pt3dadd( -40.726, -279.295, -53.912, 1.25 ) }
    dend_25 { pt3dadd( -40.4127, -279.7, -53.796, 1.84 ) }
    dend_25 { pt3dadd( -39.8121, -280.441, -53.546, 1.92 ) }
    dend_25 { pt3dadd( -39.0466, -281.326, -53.216, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_25 { pt3dadd( -38.3672, -282.105, -52.92, 1.11 ) }
    dend_25 { pt3dadd( -36.7716, -284.028, -52.2142, 0.29 ) }
    dend_25 { pt3dadd( -36.0874, -284.867, -51.8957, 0.29 ) }
    dend_25 { pt3dadd( -35.0916, -286.032, -51.4243, 0.29 ) }
    dend_25 { pt3dadd( -34.5019, -286.696, -51.143, 0.29 ) }
    dend_25 { pt3dadd( -33.7817, -287.487, -50.8192, 0.52 ) }
    dend_25 { pt3dadd( -33.308, -288.026, -50.6284, 0.66 ) }
    dend_25 { pt3dadd( -32.1752, -289.361, -50.2607, 0.29 ) }
    dend_25 { pt3dadd( -31.391, -290.265, -50.0112, 1.11 ) }
    dend_25 { pt3dadd( -30.8019, -290.95, -49.8328, 1.11 ) }
    dend_25 { pt3dadd( -29.4758, -292.537, -49.3465, 0.22 ) }
    dend_25 { pt3dadd( -29.0441, -293.047, -49.1711, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -33.6119, -83.7958, 0.575039, 0.96 ) }
    dend_22 { pt3dadd( -34.6503, -84.9727, 1.05553, 0.96 ) }
    dend_22 { pt3dadd( -35.5201, -85.9049, 1.44681, 0.96 ) }
    dend_22 { pt3dadd( -36.2563, -86.6421, 1.79176, 1.18 ) }
    dend_22 { pt3dadd( -36.943, -87.2557, 2.07984, 1.18 ) }
    dend_22 { pt3dadd( -38.0051, -88.0918, 2.46751, 0.74 ) }
    dend_22 { pt3dadd( -38.8222, -88.6472, 2.72693, 0.74 ) }
    dend_22 { pt3dadd( -39.4521, -89.0023, 2.86249, 0.74 ) }
    dend_22 { pt3dadd( -40.0473, -89.2682, 2.93886, 0.74 ) }
    dend_22 { pt3dadd( -41.197, -89.7635, 3.03684, 0.66 ) }
    dend_22 { pt3dadd( -41.7145, -90.0487, 3.05653, 0.66 ) }
    dend_22 { pt3dadd( -42.3578, -90.5379, 3.07332, 0.66 ) }
    dend_22 { pt3dadd( -42.8765, -91.032, 3.09599, 0.81 ) }
    dend_22 { pt3dadd( -43.4019, -91.5779, 3.14299, 0.96 ) }
    dend_22 { pt3dadd( -44.1583, -92.3907, 3.25236, 1.11 ) }
    dend_22 { pt3dadd( -44.9031, -93.2005, 3.42461, 1.11 ) }
    dend_22 { pt3dadd( -45.4972, -93.8622, 3.57167, 1.33 ) }
    dend_22 { pt3dadd( -46.0141, -94.4239, 3.69904, 1.47 ) }
    dend_22 { pt3dadd( -46.7692, -95.1472, 3.88711, 1.47 ) }
    dend_22 { pt3dadd( -47.4572, -95.7062, 4.06219, 1.4 ) }
    dend_22 { pt3dadd( -48.2255, -96.1954, 4.27693, 1.25 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 33/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 149.645, -103.325, -131.149, 0.52 ) }
    dend_36 { pt3dadd( 150.638, -102.419, -131.687, 0.52 ) }
    dend_36 { pt3dadd( 151.205, -101.817, -131.996, 0.29 ) }
    dend_36 { pt3dadd( 151.851, -101.094, -132.29, 0.22 ) }
    dend_36 { pt3dadd( 152.496, -100.302, -132.646, 0.22 ) }
    dend_36 { pt3dadd( 153.058, -99.5712, -133.004, 0.22 ) }
    dend_36 { pt3dadd( 153.636, -98.7648, -133.393, 0.22 ) }
    dend_36 { pt3dadd( 154.2, -97.8789, -133.78, 0.88 ) }
    dend_36 { pt3dadd( 154.62, -97.1291, -134.08, 1.18 ) }
    dend_36 { pt3dadd( 155.352, -95.7051, -134.602, 1.47 ) }
    dend_36 { pt3dadd( 155.606, -95.1895, -134.778, 1.55 ) }
    dend_36 { pt3dadd( 156.484, -93.41, -135.381, 0.22 ) }
    dend_36 { pt3dadd( 156.986, -92.4667, -135.734, 0.22 ) }
    dend_36 { pt3dadd( 157.661, -91.3559, -136.157, 0.88 ) }
    dend_36 { pt3dadd( 158.153, -90.601, -136.45, 1.4 ) }
    dend_36 { pt3dadd( 158.467, -90.1589, -136.607, 1.25 ) }
    dend_36 { pt3dadd( 158.974, -89.474, -136.859, 0.81 ) }
    dend_36 { pt3dadd( 159.855, -88.3388, -137.312, 0.22 ) }
    dend_36 { pt3dadd( 161.121, -86.7776, -137.977, 0.22 ) }
    dend_36 { pt3dadd( 161.897, -85.8835, -138.391, 0.66 ) }
    dend_36 { pt3dadd( 162.392, -85.3285, -138.654, 0.81 ) }
    dend_36 { pt3dadd( 162.707, -84.9668, -138.816, 0.66 ) }
    dend_36 { pt3dadd( 163.012, -84.6016, -138.958, 0.52 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 56/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 149.645, -103.325, -131.149, 0.29 ) }
    dend_35 { pt3dadd( 149.65, -101.331, -131.286, 0.29 ) }
    dend_35 { pt3dadd( 149.667, -99.9233, -131.392, 0.29 ) }
    dend_35 { pt3dadd( 149.672, -98.8754, -131.461, 0.52 ) }
    dend_35 { pt3dadd( 149.671, -98.2766, -131.49, 0.66 ) }
    dend_35 { pt3dadd( 149.673, -97.1424, -131.538, 0.22 ) }
    dend_35 { pt3dadd( 149.672, -96.3962, -131.567, 0.59 ) }
    dend_35 { pt3dadd( 149.671, -95.6233, -131.581, 0.74 ) }
    dend_35 { pt3dadd( 149.675, -94.9812, -131.583, 0.81 ) }
    dend_35 { pt3dadd( 149.7, -94.006, -131.582, 0.52 ) }
    dend_35 { pt3dadd( 149.758, -92.839, -131.58, 0.22 ) }
    dend_35 { pt3dadd( 149.815, -92.0369, -131.582, 0.29 ) }
    dend_35 { pt3dadd( 149.885, -91.3819, -131.597, 0.29 ) }
    dend_35 { pt3dadd( 149.979, -90.7409, -131.635, 0.15 ) }
    dend_35 { pt3dadd( 150.141, -89.9006, -131.721, 0.29 ) }
    dend_35 { pt3dadd( 150.268, -89.3187, -131.799, 0.37 ) }
    dend_35 { pt3dadd( 150.419, -88.6377, -131.902, 0.22 ) }
    dend_35 { pt3dadd( 150.611, -87.7217, -132.052, 0.22 ) }
    dend_35 { pt3dadd( 150.755, -86.9258, -132.185, 0.74 ) }
    dend_35 { pt3dadd( 150.848, -86.336, -132.281, 0.88 ) }
    dend_35 { pt3dadd( 150.949, -85.6171, -132.393, 0.52 ) }
    dend_35 { pt3dadd( 151.102, -84.4282, -132.576, 0.22 ) }
    dend_35 { pt3dadd( 151.18, -83.6949, -132.679, 0.44 ) }
    dend_35 { pt3dadd( 151.206, -83.2529, -132.73, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 57.9898, -172.962, -36.1627, 0.37 ) }
    dend_31 { pt3dadd( 58.3279, -173.956, -36.5202, 0.37 ) }
    dend_31 { pt3dadd( 58.6096, -174.68, -36.7953, 0.52 ) }
    dend_31 { pt3dadd( 58.8624, -175.274, -37.0298, 0.59 ) }
    dend_31 { pt3dadd( 59.2668, -176.19, -37.3903, 0.22 ) }
    dend_31 { pt3dadd( 59.5239, -176.749, -37.6134, 0.22 ) }
    dend_31 { pt3dadd( 59.7598, -177.251, -37.8143, 0.44 ) }
    dend_31 { pt3dadd( 60.0783, -177.839, -38.0534, 0.44 ) }
    dend_31 { pt3dadd( 60.379, -178.345, -38.2851, 0.37 ) }
    dend_31 { pt3dadd( 60.7368, -178.88, -38.5692, 0.29 ) }
    dend_31 { pt3dadd( 61.0984, -179.369, -38.8712, 0.52 ) }
    dend_31 { pt3dadd( 61.346, -179.689, -39.0848, 0.74 ) }
    dend_31 { pt3dadd( 61.7172, -180.18, -39.4121, 0.74 ) }
    dend_31 { pt3dadd( 62.1209, -180.732, -39.7708, 0.44 ) }
    dend_31 { pt3dadd( 62.3662, -181.068, -39.9908, 0.44 ) }
    dend_31 { pt3dadd( 62.8151, -181.675, -40.395, 0.29 ) }
    dend_31 { pt3dadd( 63.1464, -182.14, -40.7018, 0.29 ) }
    dend_31 { pt3dadd( 63.3396, -182.421, -40.8836, 0.66 ) }
    dend_31 { pt3dadd( 63.5637, -182.764, -41.0903, 0.81 ) }
    dend_31 { pt3dadd( 63.7154, -182.99, -41.2278, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_31 { pt3dadd( 64.2417, -183.704, -41.696, 0.29 ) }
    dend_31 { pt3dadd( 64.6317, -184.157, -42.0392, 0.29 ) }
    dend_31 { pt3dadd( 64.9416, -184.482, -42.3126, 0.44 ) }
    dend_31 { pt3dadd( 65.4382, -184.972, -42.7504, 0.29 ) }
    dend_31 { pt3dadd( 65.8539, -185.353, -43.1051, 0.37 ) }
    dend_31 { pt3dadd( 66.5084, -185.907, -43.6622, 0.37 ) }
    dend_31 { pt3dadd( 67.0575, -186.334, -44.127, 0.37 ) }
    dend_31 { pt3dadd( 67.3818, -186.56, -44.4008, 0.59 ) }
    dend_31 { pt3dadd( 67.6075, -186.697, -44.5968, 0.59 ) }
    dend_31 { pt3dadd( 68.2236, -187.028, -45.1298, 0.29 ) }
    dend_31 { pt3dadd( 68.8354, -187.334, -45.6484, 1.25 ) }
    dend_31 { pt3dadd( 69.1407, -187.478, -45.9037, 1.55 ) }
    dend_31 { pt3dadd( 69.5858, -187.674, -46.2676, 1.55 ) }
    dend_31 { pt3dadd( 70.6549, -188.122, -47.1158, 0.29 ) }
    dend_31 { pt3dadd( 71.3403, -188.427, -47.6469, 0.52 ) }
    dend_31 { pt3dadd( 71.7901, -188.633, -47.9908, 0.59 ) }
    dend_31 { pt3dadd( 72.2713, -188.866, -48.3226, 0.37 ) }
    dend_31 { pt3dadd( 72.6711, -189.072, -48.583, 0.22 ) }
    dend_31 { pt3dadd( 73.3241, -189.439, -48.9887, 0.22 ) }
    dend_31 { pt3dadd( 74.0949, -189.889, -49.4473, 0.22 ) }
    dend_31 { pt3dadd( 74.6103, -190.199, -49.7517, 0.22 ) }
    dend_31 { pt3dadd( 75.5396, -190.768, -50.2868, 0.59 ) }
    dend_31 { pt3dadd( 76.1024, -191.118, -50.6018, 0.59 ) }
    dend_31 { pt3dadd( 76.6015, -191.441, -50.8796, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 24/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 57.9898, -172.962, -36.1627, 0.59 ) }
    dend_30 { pt3dadd( 58.0015, -173.595, -36.3158, 0.59 ) }
    dend_30 { pt3dadd( 58.0544, -174.413, -36.333, 0.44 ) }
    dend_30 { pt3dadd( 58.1303, -175.362, -36.3122, 0.29 ) }
    dend_30 { pt3dadd( 58.2176, -176.646, -36.3111, 0.59 ) }
    dend_30 { pt3dadd( 58.2563, -177.289, -36.3221, 0.66 ) }
    dend_30 { pt3dadd( 58.331, -178.504, -36.3632, 0.44 ) }
    dend_30 { pt3dadd( 58.5515, -181.339, -36.5547, 0.29 ) }
    dend_30 { pt3dadd( 58.63, -182.224, -36.6507, 0.29 ) }
    dend_30 { pt3dadd( 58.7636, -183.34, -36.825, 0.59 ) }
    dend_30 { pt3dadd( 58.8792, -184.045, -36.9734, 0.74 ) }
    dend_30 { pt3dadd( 58.9714, -184.531, -37.0965, 0.74 ) }
    dend_30 { pt3dadd( 59.1707, -185.565, -37.3975, 0.44 ) }
    dend_30 { pt3dadd( 59.3338, -186.606, -37.7791, 0.29 ) }
    dend_30 { pt3dadd( 59.4395, -187.505, -38.0462, 0.29 ) }
    dend_30 { pt3dadd( 59.5283, -188.506, -38.3126, 0.59 ) }
    dend_30 { pt3dadd( 59.5895, -189.362, -38.5355, 0.44 ) }
    dend_30 { pt3dadd( 59.6371, -190.077, -38.7121, 0.44 ) }
    dend_30 { pt3dadd( 59.6877, -190.814, -38.8758, 0.44 ) }
    dend_30 { pt3dadd( 59.7805, -191.743, -39.0956, 0.37 ) }
    dend_30 { pt3dadd( 59.9326, -192.845, -39.3711, 0.37 ) }
    dend_30 { pt3dadd( 60.0546, -193.386, -39.5132, 0.66 ) }
    dend_30 { pt3dadd( 60.2785, -193.943, -39.6669, 0.66 ) }
    dend_30 { pt3dadd( 60.4796, -194.288, -39.7649, 0.52 ) }
    dend_30 { pt3dadd( 60.9152, -194.943, -39.9439, 0.74 ) }
    dend_30 { pt3dadd( 61.1156, -195.232, -40.0173, 0.74 ) }
    dend_30 { pt3dadd( 61.6144, -196.013, -40.193, 0.29 ) }
    dend_30 { pt3dadd( 62.0975, -196.837, -40.3739, 0.29 ) }
    dend_30 { pt3dadd( 62.4626, -197.468, -40.5136, 0.29 ) }
    dend_30 { pt3dadd( 63.0056, -198.41, -40.7254, 0.22 ) }
    dend_30 { pt3dadd( 63.3911, -199.079, -40.8758, 0.22 ) }
    dend_30 { pt3dadd( 63.9344, -200.018, -41.0869, 0.44 ) }
    dend_30 { pt3dadd( 64.3577, -200.746, -41.2509, 0.59 ) }
    dend_30 { pt3dadd( 64.6309, -201.284, -41.3681, 0.59 ) }
    dend_30 { pt3dadd( 67.7806, -211.158, -44.7704, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -48.2255, -96.1954, 4.27693, 0.88 ) }
    dend_24 { pt3dadd( -48.562, -96.3591, 4.38803, 0.88 ) }
    dend_24 { pt3dadd( -49.4844, -96.8527, 4.69498, 0.74 ) }
    dend_24 { pt3dadd( -50.3784, -97.3501, 4.99774, 0.88 ) }
    dend_24 { pt3dadd( -51.1177, -97.7704, 5.20713, 0.52 ) }
    dend_24 { pt3dadd( -52.0768, -98.3115, 5.50946, 0.66 ) }
    dend_24 { pt3dadd( -52.9654, -98.7991, 5.80567, 0.74 ) }
    dend_24 { pt3dadd( -53.8385, -99.2446, 6.10555, 0.88 ) }
    dend_24 { pt3dadd( -54.6369, -99.6097, 6.38685, 1.03 ) }
    dend_24 { pt3dadd( -55.8032, -100.099, 6.82414, 1.33 ) }
    dend_24 { pt3dadd( -56.9233, -100.535, 7.25698, 1.4 ) }
    dend_24 { pt3dadd( -57.9879, -100.905, 7.66875, 0.66 ) }
    dend_24 { pt3dadd( -58.6705, -101.129, 7.94531, 0.66 ) }
    dend_24 { pt3dadd( -59.336, -101.375, 8.24564, 0.59 ) }
    dend_24 { pt3dadd( -60.0952, -101.739, 8.6246, 0.37 ) }
    dend_24 { pt3dadd( -60.5843, -102.038, 8.88766, 0.88 ) }
    dend_24 { pt3dadd( -61.2824, -102.557, 9.21894, 0.96 ) }
    dend_24 { pt3dadd( -61.761, -102.969, 9.45787, 0.96 ) }
    dend_24 { pt3dadd( -62.4471, -103.622, 9.82845, 0.66 ) }
    dend_24 { pt3dadd( -62.9584, -104.134, 10.1086, 0.66 ) }
    dend_24 { pt3dadd( -63.6734, -104.838, 10.4777, 0.66 ) }
    dend_24 { pt3dadd( -64.2774, -105.433, 10.7848, 0.74 ) }
    dend_24 { pt3dadd( -64.6701, -105.823, 10.9857, 0.96 ) }
    dend_24 { pt3dadd( -65.3723, -106.517, 11.3342, 0.74 ) }
    dend_24 { pt3dadd( -65.991, -107.175, 11.6466, 0.74 ) }
    dend_24 { pt3dadd( -66.6952, -108.053, 12.0448, 0.96 ) }
    dend_24 { pt3dadd( -67.1405, -108.716, 12.3319, 1.03 ) }
    dend_24 { pt3dadd( -67.5404, -109.354, 12.6193, 0.81 ) }
    dend_24 { pt3dadd( -67.9711, -110.018, 12.9543, 0.44 ) }
    dend_24 { pt3dadd( -68.6435, -111.038, 13.5279, 0.44 ) }
    dend_24 { pt3dadd( -69.1005, -111.759, 13.9862, 0.44 ) }
    dend_24 { pt3dadd( -69.5162, -112.457, 14.4653, 0.44 ) }
    dend_24 { pt3dadd( -70.1489, -113.618, 15.271, 0.44 ) }
    dend_24 { pt3dadd( -70.6757, -114.718, 15.9984, 0.81 ) }
    dend_24 { pt3dadd( -70.8952, -115.248, 16.3303, 0.81 ) }
    dend_24 { pt3dadd( -71.1548, -115.956, 16.7221, 0.88 ) }
    dend_24 { pt3dadd( -71.2888, -116.35, 16.9109, 0.66 ) }
    dend_24 { pt3dadd( -71.5865, -117.276, 17.2774, 0.37 ) }
    dend_24 { pt3dadd( -71.8757, -118.152, 17.5959, 0.29 ) }
    dend_24 { pt3dadd( -72.1676, -118.759, 17.8423, 0.44 ) }
    dend_24 { pt3dadd( -72.7461, -119.421, 18.2434, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_24 { pt3dadd( -73.2493, -119.793, 18.5686, 0.29 ) }
    dend_24 { pt3dadd( -73.8268, -120.127, 18.9612, 0.37 ) }
    dend_24 { pt3dadd( -74.7499, -120.539, 19.6342, 0.37 ) }
    dend_24 { pt3dadd( -75.3953, -120.822, 20.1666, 0.37 ) }
    dend_24 { pt3dadd( -76.1291, -121.189, 20.8203, 0.81 ) }
    dend_24 { pt3dadd( -76.6079, -121.466, 21.2561, 1.03 ) }
    dend_24 { pt3dadd( -77.0156, -121.805, 21.6767, 1.03 ) }
    dend_24 { pt3dadd( -77.3162, -122.15, 22.0302, 0.96 ) }
    dend_24 { pt3dadd( -77.9611, -123.143, 22.892, 0.52 ) }
    dend_24 { pt3dadd( -78.2639, -123.708, 23.3615, 0.52 ) }
    dend_24 { pt3dadd( -78.6344, -124.465, 23.9881, 1.77 ) }
    dend_24 { pt3dadd( -79.2225, -125.667, 24.9614, 0.66 ) }
    dend_24 { pt3dadd( -79.5765, -126.283, 25.4554, 0.66 ) }
    dend_24 { pt3dadd( -80.0923, -127.056, 26.1082, 0.59 ) }
    dend_24 { pt3dadd( -80.547, -127.67, 26.6436, 0.74 ) }
    dend_24 { pt3dadd( -80.9562, -128.21, 27.1435, 0.74 ) }
    dend_24 { pt3dadd( -81.3489, -128.694, 27.6062, 0.74 ) }
    dend_24 { pt3dadd( -82.1101, -129.488, 28.3835, 0.37 ) }
    dend_24 { pt3dadd( -83.1068, -130.505, 29.3453, 0.37 ) }
    dend_24 { pt3dadd( -83.6064, -131.031, 29.8118, 0.44 ) }
    dend_24 { pt3dadd( -84.1006, -131.63, 30.3003, 0.44 ) }
    dend_24 { pt3dadd( -84.6406, -132.35, 30.8473, 0.44 ) }
    dend_24 { pt3dadd( -85.0198, -132.872, 31.2232, 0.66 ) }
    dend_24 { pt3dadd( -85.3319, -133.323, 31.515, 0.74 ) }
    dend_24 { pt3dadd( -85.6597, -133.802, 31.776, 0.74 ) }
    dend_24 { pt3dadd( -86.3348, -134.776, 32.2804, 0.81 ) }
    dend_24 { pt3dadd( -87.0411, -135.798, 32.7697, 0.44 ) }
    dend_24 { pt3dadd( -87.7337, -136.839, 33.2412, 0.44 ) }
    dend_24 { pt3dadd( -88.3547, -137.828, 33.6506, 0.37 ) }
    dend_24 { pt3dadd( -88.9964, -138.911, 34.0918, 0.37 ) }
    dend_24 { pt3dadd( -89.3771, -139.579, 34.352, 1.18 ) }
    dend_24 { pt3dadd( -89.7005, -140.152, 34.5546, 1.62 ) }
    dend_24 { pt3dadd( -90.1871, -141.057, 34.8809, 1.84 ) }
    dend_24 { pt3dadd( -90.6464, -141.921, 35.2121, 1.03 ) }
    dend_24 { pt3dadd( -91.2219, -142.988, 35.6358, 0.74 ) }
    dend_24 { pt3dadd( -91.4671, -143.478, 35.8283, 0.74 ) }
    dend_24 { pt3dadd( -91.914, -144.495, 36.2082, 0.44 ) }
    dend_24 { pt3dadd( -92.3573, -145.641, 36.6185, 0.59 ) }
    dend_24 { pt3dadd( -92.6213, -146.417, 36.8803, 0.59 ) }
    dend_24 { pt3dadd( -92.9312, -147.388, 37.1859, 0.37 ) }
    dend_24 { pt3dadd( -93.3022, -148.579, 37.5347, 0.37 ) }
    dend_24 { pt3dadd( -93.6595, -149.685, 37.8652, 0.37 ) }
    dend_24 { pt3dadd( -93.923, -150.441, 38.0863, 0.81 ) }
    dend_24 { pt3dadd( -94.2031, -151.096, 38.2744, 0.96 ) }
    dend_24 { pt3dadd( -94.5995, -151.844, 38.4861, 1.18 ) }
    dend_24 { pt3dadd( -95.3182, -152.992, 38.8361, 0.44 ) }
    dend_24 { pt3dadd( -95.9107, -153.842, 39.1318, 0.44 ) }
    dend_24 { pt3dadd( -96.7069, -154.936, 39.6121, 0.44 ) }
    dend_24 { pt3dadd( -97.3262, -155.746, 40.0361, 0.44 ) }
    dend_24 { pt3dadd( -98.0093, -156.615, 40.5389, 0.59 ) }
    dend_24 { pt3dadd( -98.4754, -157.22, 40.9245, 0.74 ) }
    dend_24 { pt3dadd( -99.0573, -157.993, 41.4469, 0.96 ) }
    dend_24 { pt3dadd( -99.8895, -159.078, 42.2241, 0.59 ) }
    dend_24 { pt3dadd( -100.395, -159.734, 42.6992, 0.44 ) }
    dend_24 { pt3dadd( -100.939, -160.492, 43.2298, 0.37 ) }
    dend_24 { pt3dadd( -101.35, -161.121, 43.6509, 0.52 ) }
    dend_24 { pt3dadd( -101.716, -161.725, 44.0027, 0.52 ) }
    dend_24 { pt3dadd( -102.416, -162.939, 44.6354, 0.37 ) }
    dend_24 { pt3dadd( -102.899, -163.807, 45.0639, 0.59 ) }
    dend_24 { pt3dadd( -103.235, -164.426, 45.4029, 0.74 ) }
    dend_24 { pt3dadd( -103.69, -165.232, 45.8773, 0.96 ) }
    dend_24 { pt3dadd( -103.948, -165.701, 46.1484, 0.88 ) }
    dend_24 { pt3dadd( -104.236, -166.257, 46.4657, 0.81 ) }
    dend_24 { pt3dadd( -104.674, -167.079, 46.9703, 0.88 ) }
    dend_24 { pt3dadd( -105.27, -168.061, 47.5979, 0.37 ) }
    dend_24 { pt3dadd( -105.878, -168.98, 48.1929, 0.37 ) }
    dend_24 { pt3dadd( -106.451, -169.794, 48.718, 0.37 ) }
    dend_24 { pt3dadd( -106.984, -170.518, 49.1982, 0.66 ) }
    dend_24 { pt3dadd( -107.742, -171.491, 49.8637, 0.52 ) }
    dend_24 { pt3dadd( -108.292, -172.113, 50.319, 0.37 ) }
    dend_24 { pt3dadd( -108.914, -172.685, 50.773, 0.59 ) }
    dend_24 { pt3dadd( -109.541, -173.163, 51.2339, 0.59 ) }
    dend_24 { pt3dadd( -110.346, -173.686, 51.8628, 0.29 ) }
    dend_24 { pt3dadd( -110.836, -174.001, 52.2938, 0.29 ) }
    dend_24 { pt3dadd( -111.34, -174.361, 52.7697, 0.29 ) }
    dend_24 { pt3dadd( -112.155, -175.014, 53.6047, 0.37 ) }
    dend_24 { pt3dadd( -113.116, -175.858, 54.6234, 0.52 ) }
    dend_24 { pt3dadd( -113.951, -176.665, 55.5417, 0.74 ) }
    dend_24 { pt3dadd( -114.746, -177.488, 56.4167, 0.59 ) }
    dend_24 { pt3dadd( -115.291, -178.074, 56.9903, 0.44 ) }
    dend_24 { pt3dadd( -115.641, -178.451, 57.3267, 0.44 ) }
    dend_24 { pt3dadd( -116.14, -179.003, 57.7601, 0.37 ) }
    dend_24 { pt3dadd( -116.692, -179.66, 58.1634, 0.52 ) }
    dend_24 { pt3dadd( -117.259, -180.41, 58.5581, 0.74 ) }
    dend_24 { pt3dadd( -117.925, -181.379, 59.0448, 0.44 ) }
    dend_24 { pt3dadd( -118.332, -182.098, 59.4023, 0.37 ) }
    dend_24 { pt3dadd( -118.645, -182.854, 59.7857, 0.37 ) }
    dend_24 { pt3dadd( -118.954, -183.88, 60.2916, 0.59 ) }
    dend_24 { pt3dadd( -119.076, -184.486, 60.5688, 0.59 ) }
    dend_24 { pt3dadd( -119.159, -185.341, 60.9312, 0.59 ) }
    dend_24 { pt3dadd( -119.164, -186.333, 61.3387, 0.66 ) }
    dend_24 { pt3dadd( -119.122, -187.729, 61.8893, 0.66 ) }
    dend_24 { pt3dadd( -119.092, -188.84, 62.2942, 0.37 ) }
    dend_24 { pt3dadd( -119.068, -189.544, 62.5243, 0.37 ) }
    dend_24 { pt3dadd( -118.997, -190.423, 62.77, 0.37 ) }
    dend_24 { pt3dadd( -118.899, -191.035, 62.9246, 0.37 ) }
    dend_24 { pt3dadd( -118.672, -192.19, 63.1881, 0.59 ) }
    dend_24 { pt3dadd( -118.541, -192.755, 63.2852, 0.74 ) }
    dend_24 { pt3dadd( -118.336, -193.526, 63.4215, 0.74 ) }
    dend_24 { pt3dadd( -118.075, -194.719, 63.6576, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_24 { pt3dadd( -117.985, -195.337, 63.7883, 0.44 ) }
    dend_24 { pt3dadd( -125.261, -202.767, 66.6422, 0.44 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -48.2255, -96.1954, 4.27693, 0.81 ) }
    dend_23 { pt3dadd( -50.4984, -97.7946, 3.94758, 0.81 ) }
    dend_23 { pt3dadd( -51.3891, -98.3273, 3.81833, 0.74 ) }
    dend_23 { pt3dadd( -51.9189, -98.5761, 3.74039, 0.81 ) }
    dend_23 { pt3dadd( -52.5645, -98.807, 3.63985, 0.59 ) }
    dend_23 { pt3dadd( -53.4453, -99.0697, 3.52806, 0.44 ) }
    dend_23 { pt3dadd( -53.78, -99.1568, 3.49959, 0.44 ) }
    dend_23 { pt3dadd( -54.8838, -99.301, 3.63775, 0.52 ) }
    dend_23 { pt3dadd( -55.4551, -99.2916, 3.68334, 0.74 ) }
    dend_23 { pt3dadd( -56.1079, -99.2713, 3.71994, 0.59 ) }
    dend_23 { pt3dadd( -56.7338, -99.2639, 3.75895, 0.59 ) }
    dend_23 { pt3dadd( -57.2389, -99.2869, 3.80017, 1.03 ) }
    dend_23 { pt3dadd( -57.7814, -99.3617, 3.89103, 1.18 ) }
    dend_23 { pt3dadd( -58.3018, -99.4775, 4.03659, 1.18 ) }
    dend_23 { pt3dadd( -58.9599, -99.6361, 4.23449, 0.52 ) }
    dend_23 { pt3dadd( -59.4809, -99.7473, 4.38243, 0.37 ) }
    dend_23 { pt3dadd( -59.9079, -99.8189, 4.48953, 0.29 ) }
    dend_23 { pt3dadd( -60.3505, -99.8791, 4.58556, 0.29 ) }
    dend_23 { pt3dadd( -60.8318, -99.9302, 4.68565, 0.88 ) }
    dend_23 { pt3dadd( -61.4289, -99.9621, 4.81027, 1.11 ) }
    dend_23 { pt3dadd( -61.9632, -99.9372, 4.87902, 1.4 ) }
    dend_23 { pt3dadd( -62.4108, -99.9259, 4.88484, 1.55 ) }
    dend_23 { pt3dadd( -62.7915, -99.9389, 4.84217, 1.55 ) }
    dend_23 { pt3dadd( -63.4665, -100.001, 4.72392, 0.59 ) }
    dend_23 { pt3dadd( -63.8495, -100.057, 4.65123, 0.59 ) }
    dend_23 { pt3dadd( -64.861, -100.259, 4.48256, 0.44 ) }
    dend_23 { pt3dadd( -66.0109, -100.521, 4.29379, 0.29 ) }
    dend_23 { pt3dadd( -67.0661, -100.784, 4.07556, 0.52 ) }
    dend_23 { pt3dadd( -67.5444, -100.903, 3.92173, 0.66 ) }
    dend_23 { pt3dadd( -68.1038, -101.049, 3.70608, 0.66 ) }
    dend_23 { pt3dadd( -68.4834, -101.158, 3.55144, 0.44 ) }
    dend_23 { pt3dadd( -69.4131, -101.424, 3.16428, 0.37 ) }
    dend_23 { pt3dadd( -71.4473, -101.932, 2.30252, 2.8 ) }
    dend_23 { pt3dadd( -74.0432, -102.52, 1.09674, 0.74 ) }
    dend_23 { pt3dadd( -75.2062, -102.751, 0.502948, 0.74 ) }
    dend_23 { pt3dadd( -76.1821, -102.899, -0.0499787, 0.52 ) }
    dend_23 { pt3dadd( -77.3102, -103.005, -0.73401, 1.11 ) }
    dend_23 { pt3dadd( -77.7794, -103.016, -1.02669, 1.25 ) }
    dend_23 { pt3dadd( -79.7615, -102.809, -2.31194, 0.37 ) }
    dend_23 { pt3dadd( -81.017, -102.507, -3.13664, 1.03 ) }
    dend_23 { pt3dadd( -82.3163, -102.032, -4.03071, 1.25 ) }
    dend_23 { pt3dadd( -83.0861, -101.671, -4.58384, 0.37 ) }
    dend_23 { pt3dadd( -83.6525, -101.367, -4.99253, 1.84 ) }
    dend_23 { pt3dadd( -84.6746, -100.768, -5.69566, 0.52 ) }
    dend_23 { pt3dadd( -84.9222, -100.598, -5.84434, 0.37 ) }
    dend_23 { pt3dadd( -85.4934, -100.206, -6.14212, 0.74 ) }
    dend_23 { pt3dadd( -86.4252, -99.6359, -6.54965, 0.44 ) }
    dend_23 { pt3dadd( -87.2186, -99.2357, -6.83582, 0.44 ) }
    dend_23 { pt3dadd( -87.7732, -99.0049, -6.98835, 0.44 ) }
    dend_23 { pt3dadd( -88.3237, -98.8139, -7.08846, 1.11 ) }
    dend_23 { pt3dadd( -88.8086, -98.6583, -7.15297, 1.55 ) }
    dend_23 { pt3dadd( -89.3393, -98.5001, -7.19569, 1.69 ) }
    dend_23 { pt3dadd( -90.8534, -98.0887, -7.21305, 0.29 ) }
    dend_23 { pt3dadd( -91.5733, -97.9132, -7.20065, 0.44 ) }
    dend_23 { pt3dadd( -92.1284, -97.7881, -7.19829, 0.44 ) }
    dend_23 { pt3dadd( -92.6006, -97.6862, -7.20378, 1.33 ) }
    dend_23 { pt3dadd( -93.0569, -97.5834, -7.20255, 1.55 ) }
    dend_23 { pt3dadd( -94.0814, -97.3467, -7.19793, 0.29 ) }
    dend_23 { pt3dadd( -94.5513, -97.2397, -7.19263, 0.52 ) }
    dend_23 { pt3dadd( -95.335, -97.077, -7.18371, 0.29 ) }
    dend_23 { pt3dadd( -95.7946, -96.9654, -7.18983, 1.03 ) }
    dend_23 { pt3dadd( -96.1957, -96.8567, -7.20241, 1.18 ) }
    dend_23 { pt3dadd( -96.5705, -96.7406, -7.21406, 1.18 ) }
    dend_23 { pt3dadd( -97.5014, -96.4263, -7.26426, 0.29 ) }
    dend_23 { pt3dadd( -98.156, -96.2175, -7.30657, 0.29 ) }
    dend_23 { pt3dadd( -99.2141, -95.9004, -7.34501, 0.88 ) }
    dend_23 { pt3dadd( -99.737, -95.75, -7.36406, 0.66 ) }
    dend_23 { pt3dadd( -100.093, -95.6499, -7.37852, 0.66 ) }
    dend_23 { pt3dadd( -100.511, -95.5227, -7.38759, 0.44 ) }
    dend_23 { pt3dadd( -101.054, -95.3566, -7.40057, 0.29 ) }
    dend_23 { pt3dadd( -101.606, -95.1906, -7.39798, 0.74 ) }
    dend_23 { pt3dadd( -101.841, -95.1253, -7.39062, 0.88 ) }
    dend_23 { pt3dadd( -102.883, -94.8078, -7.34605, 0.29 ) }
    dend_23 { pt3dadd( -103.575, -94.5844, -7.30012, 1.47 ) }
    dend_23 { pt3dadd( -104.123, -94.3977, -7.24852, 1.92 ) }
    dend_23 { pt3dadd( -104.623, -94.2246, -7.18885, 1.92 ) }
    dend_23 { pt3dadd( -105.733, -93.8439, -7.03146, 0.22 ) }
    dend_23 { pt3dadd( -106.499, -93.5858, -6.8904, 0.22 ) }
    dend_23 { pt3dadd( -106.988, -93.4227, -6.76896, 0.59 ) }
    dend_23 { pt3dadd( -107.245, -93.3385, -6.69201, 0.59 ) }
    dend_23 { pt3dadd( -107.943, -93.0901, -6.43693, 0.22 ) }
    dend_23 { pt3dadd( -108.422, -92.9011, -6.23092, 0.81 ) }
    dend_23 { pt3dadd( -108.631, -92.809, -6.1341, 1.03 ) }
    dend_23 { pt3dadd( -108.875, -92.6919, -6.02036, 1.03 ) }
    dend_23 { pt3dadd( -109.549, -92.3394, -5.72108, 0.22 ) }
    dend_23 { pt3dadd( -109.902, -92.1451, -5.56205, 0.44 ) }
    dend_23 { pt3dadd( -111.057, -91.4599, -5.04133, 0.22 ) }
    dend_23 { pt3dadd( -111.427, -91.2341, -4.88253, 0.22 ) }
    dend_23 { pt3dadd( -111.93, -90.9219, -4.67032, 1.03 ) }
    dend_23 { pt3dadd( -112.279, -90.7003, -4.52345, 1.25 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 92/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 76.6015, -191.441, -50.8796, 0.22 ) }
    dend_33 { pt3dadd( 77.4867, -192.47, -51.6998, 0.22 ) }
    dend_33 { pt3dadd( 77.8705, -192.916, -52.0555, 0.22 ) }
    dend_33 { pt3dadd( 78.1534, -193.244, -52.3176, 0.44 ) }
    dend_33 { pt3dadd( 78.3527, -193.476, -52.5022, 0.44 ) }
    dend_33 { pt3dadd( 85.3794, -199.991, -57.5505, 0.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 98/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 76.6015, -191.441, -50.8796, 0.59 ) }
    dend_32 { pt3dadd( 77.4657, -191.165, -51.5456, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_32 { pt3dadd( 77.9388, -191.014, -51.91, 0.66 ) }
    dend_32 { pt3dadd( 78.1364, -190.951, -52.0623, 0.66 ) }
    dend_32 { pt3dadd( 87.7871, -188.412, -57.9366, 0.66 ) }
    dend_32 { pt3dadd( 97.7475, -186.044, -63.3383, 0.66 ) }
    dend_32 { pt3dadd( 108.501, -183.535, -66.8162, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_17, dend_0, dend_50, dend_47, dend_45, dend_18, dend_10, dend_1, dend_56, dend_51, dend_49, dend_48, dend_38, dend_19, dend_12, dend_11, dend_5, dend_2, dend_60, dend_57, dend_53, dend_52, dend_42, dend_39, dend_27, dend_20, dend_14, dend_13, dend_9, dend_6, dend_4, dend_3, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_44, dend_43, dend_41, dend_40, dend_37, dend_28, dend_26, dend_21, dend_16, dend_15, dend_8, dend_7, dend_34, dend_29, dend_25, dend_22, dend_36, dend_35, dend_31, dend_30, dend_24, dend_23, dend_33, dend_32]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_47 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_45 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_51 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_49 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_38 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_60 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_57 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_53 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_42 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_39 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_13 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_4 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_62 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_28 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_34 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_29 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_30 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_24 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_23 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_17 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_19 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_27 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_20 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_50 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_12 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_59 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_58 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_31 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_61 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_33 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_32 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_41 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_35 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_36 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_55 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_43, dend_41, dend_41, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_32 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 11
    dend_45 nseg = 9
    dend_10 nseg = 7
    dend_1 nseg = 3
    dend_56 nseg = 3
    dend_51 nseg = 9
    dend_49 nseg = 7
    dend_48 nseg = 3
    dend_38 nseg = 7
    dend_11 nseg = 9
    dend_5 nseg = 5
    dend_2 nseg = 5
    dend_60 nseg = 5
    dend_57 nseg = 3
    dend_53 nseg = 3
    dend_52 nseg = 3
    dend_42 nseg = 5
    dend_39 nseg = 5
    dend_14 nseg = 7
    dend_13 nseg = 7
    dend_9 nseg = 5
    dend_6 nseg = 7
    dend_4 nseg = 3
    dend_3 nseg = 7
    dend_62 nseg = 3
    dend_54 nseg = 3
    dend_37 nseg = 9
    dend_28 nseg = 5
    dend_26 nseg = 15
    dend_16 nseg = 3
    dend_7 nseg = 3
    dend_34 nseg = 9
    dend_29 nseg = 3
    dend_25 nseg = 11
    dend_30 nseg = 3
    dend_24 nseg = 7
    dend_23 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_BTC_eb8366ca09_0_0


