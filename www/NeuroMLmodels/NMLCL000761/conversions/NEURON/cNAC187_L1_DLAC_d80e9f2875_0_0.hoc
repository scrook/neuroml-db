// Cell: cNAC187_L1_DLAC_d80e9f2875_0_0
/*
{
  "id" : "cNAC187_L1_DLAC_d80e9f2875_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "4.5642, -4.64919, 0.0, 2.85845", "4.09787, -4.12482, 0.0, 5.08473", "3.63154, -3.60045, 0.0, 7.56988", "3.16521, -3.07609, 0.0, 8.83361", "2.69888, -2.55172, 0.0, 9.78072", "2.23255, -2.02735, 0.0, 10.5453", "1.76622, -1.50298, 0.0, 10.9152", "1.29989, -0.978607, 0.0, 11.285", "0.833561, -0.454238, 0.0, 11.5359", "0.367231, 0.0701319, 0.0, 11.6001", "-0.0990985, 0.594501, 0.0, 11.6207", "-0.565428, 1.11887, 0.0, 11.6137", "-1.03176, 1.64324, 0.0, 11.5549", "-1.49809, 2.16761, 0.0, 11.373", "-1.96442, 2.69198, 0.0, 10.6339", "-2.43075, 3.21635, 0.0, 9.70405", "-2.89708, 3.74072, 0.0, 8.75099", "-3.36341, 4.26509, 0.0, 7.74649", "-3.82974, 4.78946, 0.0, 6.26799", "-4.29607, 5.31383, 0.0, 4.55859", "-4.76239, 5.8382, 0.0, 2.68355" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-3.42892, 6.3438, 5.77, 2.05", "-3.42892, 6.3438, 5.77, 2.05", "-4.12682, 6.90092, 5.73665, 1.37", "-5.75442, 7.82499, 5.44187, 1.37", "-7.30916, 8.4263, 4.98152, 1.59", "-8.63768, 8.82094, 4.47057, 1.59", "-10.6337, 9.35685, 3.62079, 1.14", "-12.257, 9.75981, 2.6666, 1.14", "-13.8177, 10.0206, 1.61712, 1.14", "-15.096, 10.1008, 0.612368, 1.14", "-16.0679, 10.0966, -0.291974, 1.14", "-16.3262, 10.0826, -0.561146, 1.14", "-18.405, 9.96198, -2.74275, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995275163395
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "5.64108, 0.748305, 4.19, 1.37", "5.64108, 0.748305, 4.19, 1.37", "6.80134, 0.467754, 3.8285, 1.37", "9.33874, -0.14579, 3.03793, 1.37", "10.8657, -0.515003, 2.56219, 1.37", "12.0259, -0.795554, 2.2007, 1.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995275163395
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-5.91892, 0.216304, -0.93, 2.05", "-5.91892, 0.216304, -0.93, 2.05", "-6.59128, 0.0921816, -1.16595, 2.05", "-8.35363, -0.233167, -1.78441, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995275163395
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.70892, -1.6932, 10.0, 1.37", "-4.70892, -1.6932, 10.0, 1.37", "-6.19046, -2.31546, 9.97747, 1.37", "-7.75673, -2.97332, 9.95365, 1.37", "-10.0095, -3.9195, 9.91938, 1.37", "-11.8949, -4.71141, 9.89071, 0.91", "-13.2077, -5.26277, 9.87074, 1.37", "-14.8405, -5.99442, 9.8425, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995275163395
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-2.67892, -1.6742, -9.88, 0.91", "-2.67892, -1.6742, -9.88, 0.91", "-3.60972, -2.71682, -9.81994, 0.91", "-4.94946, -4.48214, -9.56326, 1.14", "-5.83398, -5.8549, -9.23712, 0.91", "-6.81723, -7.57593, -8.75525, 0.91", "-7.60014, -9.05775, -8.32138, 1.14", "-8.3091, -10.5852, -7.89926, 1.37", "-8.78654, -11.9238, -7.59652, 0.91", "-9.21903, -13.4908, -7.37742, 0.91", "-9.45533, -14.3977, -7.33753, 0.91", "-10.004, -16.0016, -7.44766, 0.91", "-10.7645, -17.3258, -7.81584, 0.46", "-12.0171, -18.798, -8.47417, 0.46", "-13.0004, -19.8038, -9.05346, 0.46", "-13.8268, -20.535, -9.56768, 0.46", "-15.3597, -21.6914, -10.4638, 1.14", "-16.9944, -22.6621, -11.2865, 1.14", "-18.0127, -23.112, -11.6258, 1.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995275163395
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.95108, -4.9517, 1.37, 2.96", "1.95108, -4.9517, 1.37, 2.96", "2.04811, -6.31033, 1.32893, 2.51", "2.1344, -7.51867, 1.2924, 2.05", "2.21968, -8.71277, 1.2563, 2.05", "2.28176, -9.58204, 1.23002, 2.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995275163395
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-4.76239, 5.8382, 0.0, 0.677683", "-14.7305, 17.047, 0.0, 0.677683", "-24.6986, 28.2557, 0.0, 0.677683" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-18.405, 9.96198, -2.74275, 0.68", "-18.6482, 11.0793, -3.15927, 0.68", "-18.9964, 12.3427, -3.56272, 0.46", "-19.5573, 13.98, -4.02237, 0.46", "-20.143, 15.388, -4.37589, 0.46", "-21.1709, 17.506, -4.89468, 0.46", "-22.3161, 19.8656, -5.47264, 0.46", "-23.3942, 21.8726, -5.98103, 0.46", "-24.3738, 23.543, -6.37315, 0.46", "-25.4419, 25.194, -6.67503, 0.68", "-26.7951, 27.0639, -6.94581, 0.68" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-18.405, 9.96198, -2.74275, 1.14", "-19.365, 10.8835, -5.12275, 1.14" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "12.0259, -0.795554, 2.2007, 1.37", "12.0298, -0.977146, 1.45736, 1.37", "12.0393, -1.42124, -0.36052, 1.37", "12.0501, -1.92872, -2.43788, 1.14", "12.0582, -2.3092, -3.99536, 1.14", "12.0643, -2.59424, -5.16216, 1.14" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "12.0259, -0.795554, 2.2007, 0.91", "11.8709, -0.0702299, 2.80131, 0.91", "11.7923, 0.631473, 3.29491, 0.68", "12.226, 2.38347, 4.12007, 0.68", "12.4195, 3.16509, 4.4882, 0.46", "12.6091, 3.93115, 4.849, 0.46", "12.8057, 4.7251, 5.22294, 0.46", "12.7864, 5.59855, 5.72092, 0.68", "14.1336, 5.95482, 4.96225, 1.14" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-8.35363, -0.233167, -1.78441, 1.37", "-9.37223, 0.297438, -1.95939, 1.37", "-10.7844, 1.03304, -2.20198, 1.37", "-11.8872, 1.60752, -2.39143, 1.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-8.35363, -0.233167, -1.78441, 0.91", "-9.11556, -1.49284, -1.75467, 0.91", "-9.6292, -2.18278, -1.679, 0.91", "-10.9971, -3.63059, -1.37026, 1.14", "-12.1824, -4.57903, -1.01078, 1.37", "-13.2259, -5.31225, -0.672731, 0.91", "-14.92, -6.44333, -0.136092, 0.68", "-15.8915, -6.99776, 0.168116, 0.68", "-17.4388, -7.78466, 0.620214, 0.91", "-19.6294, -8.79643, 1.22157, 0.91", "-20.6215, -9.28852, 1.46567, 0.91", "-22.3118, -10.2602, 1.82575, 1.14", "-23.4979, -11.0259, 2.01247, 0.68", "-24.9512, -12.023, 2.14237, 0.68", "-25.6676, -12.5189, 2.17082, 1.14", "-27.6047, -13.7722, 2.17082, 1.14", "-28.3766, -14.1963, 2.1565, 0.68", "-29.7127, -14.8677, 2.12672, 0.68", "-31.241, -15.5709, 2.0859, 1.14", "-32.5499, -16.096, 2.04317, 0.91", "-34.0848, -16.585, 1.98345, 0.91", "-35.2643, -16.7836, 1.92599, 0.91" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-14.8405, -5.99442, 9.8425, 1.14", "-15.9789, -7.43506, 8.90115, 1.14", "-16.9005, -8.73311, 8.21074, 1.14", "-17.5936, -9.81296, 7.64175, 1.14", "-18.4714, -11.3805, 6.85192, 1.14", "-18.9484, -12.2875, 6.43588, 1.14", "-19.3182, -12.9802, 6.16063, 0.91", "-19.9409, -14.1562, 5.79153, 0.91", "-20.5203, -15.1652, 5.48208, 0.68", "-21.1974, -16.1486, 5.13213, 0.68", "-22.2238, -17.3871, 4.58784, 0.91", "-23.8989, -19.0826, 3.75734, 0.68", "-24.8577, -19.9125, 3.37376, 0.68", "-26.0632, -20.7552, 3.04892, 0.91", "-27.375, -21.5278, 2.87323, 0.68", "-29.1038, -22.4119, 2.83499, 0.68", "-30.6544, -23.1242, 2.96406, 0.68", "-32.0464, -23.747, 3.2185, 0.46", "-33.591, -24.5353, 3.67468, 0.46", "-34.8251, -25.3425, 4.22947, 0.46", "-35.7992, -26.0431, 4.81595, 0.46", "-36.2071, -26.3692, 5.12952, 0.46", "-36.8433, -26.9365, 5.66165, 0.23", "-37.4833, -27.7673, 6.11526, 0.23", "-37.8351, -28.996, 6.43066, 0.68" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.8405, -5.99442, 9.8425, 0.91", "-16.4968, -5.76363, 11.2672, 0.91", "-17.8504, -5.45069, 12.2695, 0.91", "-19.0956, -5.01082, 13.0384, 0.91", "-20.3317, -4.40766, 13.6512, 0.91", "-21.9379, -3.23029, 14.1817, 0.91", "-22.4465, -2.74218, 14.3177, 0.68", "-23.0425, -2.00091, 14.3883, 0.68", "-23.9074, -0.645108, 14.4029, 0.68", "-24.4774, 0.351807, 14.4225, 0.68", "-25.8169, 2.75744, 14.5416, 0.68", "-26.8384, 4.57779, 14.7142, 0.68", "-27.7019, 6.11021, 14.9111, 0.68", "-28.4103, 7.30448, 15.1328, 0.46", "-29.4442, 8.89788, 15.5677, 0.46", "-30.3137, 10.1203, 16.0009, 0.46", "-31.3998, 11.4197, 16.6174, 0.46" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-18.0127, -23.112, -11.6258, 0.68", "-19.5463, -23.604, -11.6929, 0.68", "-19.5034, -24.754, -12.7294, 0.68", "-19.5646, -25.3966, -13.2614, 0.68", "-19.7145, -26.2751, -14.0412, 0.68", "-19.8744, -26.8795, -14.6751, 0.91", "-20.2185, -27.824, -15.7568, 0.46", "-20.4086, -28.3837, -16.4742, 0.46", "-20.7571, -29.0412, -17.4567, 0.46", "-21.1952, -29.5772, -18.3166, 0.46", "-21.8264, -30.1521, -19.2026, 1.14", "-22.1345, -30.3907, -19.5587, 1.37", "-22.7289, -30.8176, -20.0699, 1.14", "-23.57, -31.3726, -20.7052, 0.68", "-24.3778, -31.889, -21.2874, 0.68", "-24.823, -32.1683, -21.6002, 0.91", "-25.2685, -32.4413, -21.9085, 0.46", "-26.5499, -33.15, -22.8041, 0.46", "-27.6285, -33.6382, -23.5276, 0.68", "-29.2148, -34.0068, -24.4536, 0.23", "-29.99, -34.0639, -24.8126, 0.46", "-30.4818, -34.0694, -25.014, 0.91", "-31.1755, -34.0523, -25.2848, 1.59", "-31.884, -34.0246, -25.5121, 0.68", "-34.3683, -34.0518, -26.1713, 0.68", "-35.8479, -34.1753, -26.4981, 0.68", "-36.6905, -34.3068, -26.7254, 0.68", "-38.0183, -34.5841, -27.1894, 0.68", "-39.2621, -34.8857, -27.7369, 1.14", "-40.8028, -35.3392, -28.6085, 0.46", "-41.9256, -35.743, -29.4083, 0.46", "-43.071, -36.1465, -30.3411, 0.46", "-43.7395, -36.3499, -30.9092, 0.91", "-44.7242, -36.6345, -31.8139, 0.23", "-45.9213, -36.9959, -33.0142, 0.23", "-46.5815, -37.2073, -33.6273, 0.23", "-46.983, -37.3389, -33.9663, 0.91", "-48.1075, -37.7826, -34.6942, 0.23", "-49.4176, -38.3406, -35.3271, 0.23", "-50.1622, -38.6845, -35.5974, 0.46", "-51.7822, -39.4509, -36.0185, 0.23", "-52.678, -39.8934, -36.1988, 1.14", "-54.6996, -40.9797, -36.5123, 0.23", "-56.0415, -41.79, -36.6272, 0.23", "-56.7784, -42.2564, -36.6776, 0.23", "-57.7353, -42.9012, -36.7589, 0.23", "-57.9611, -43.0618, -36.78, 0.68", "-58.6384, -43.5653, -36.8465, 1.37", "-60.2045, -44.7761, -37.0436, 0.23", "-62.0278, -46.2295, -37.3157, 0.23", "-64.0249, -47.7722, -37.6454, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-18.0127, -23.112, -11.6258, 0.68", "-19.2157, -25.7044, -11.4988, 0.68", "-19.8286, -26.7613, -11.603, 0.68", "-20.4861, -27.739, -11.7912, 0.68", "-21.1992, -28.783, -12.0189, 0.91", "-21.9375, -29.9353, -12.2728, 1.14", "-22.6171, -31.1015, -12.5403, 0.91", "-23.2681, -32.28, -12.9394, 0.91", "-23.8889, -33.5162, -13.342, 0.68", "-24.3241, -34.6807, -13.6693, 0.46", "-24.5234, -35.5521, -13.8561, 0.46", "-24.5761, -36.6277, -14.0319, 0.68", "-24.4772, -37.5288, -14.1137, 1.14", "-24.3748, -38.0351, -14.1403, 0.46", "-24.1261, -39.0298, -14.1852, 0.46", "-24.0295, -39.4485, -14.2209, 0.91", "-23.7703, -40.8439, -14.3764, 1.14", "-23.558, -42.3518, -14.6246, 0.91", "-23.4328, -43.7213, -14.9203, 0.68", "-23.3707, -45.0272, -15.2818, 0.68", "-23.3923, -45.9818, -15.628, 0.68", "-23.4765, -46.7635, -15.9896, 0.68", "-23.7472, -47.9549, -16.6951, 1.14", "-23.9199, -48.4173, -17.0353, 0.46", "-24.4327, -49.2746, -17.79, 0.46", "-25.1901, -50.1345, -18.701, 0.46", "-25.7455, -50.6523, -19.2773, 0.46", "-26.2096, -51.0044, -19.7369, 0.91", "-26.6891, -51.3394, -20.162, 0.23", "-27.5076, -51.9361, -20.9102, 0.23", "-27.9103, -52.2494, -21.2606, 0.23", "-28.3318, -52.7099, -21.6186, 0.68", "-28.7921, -53.3985, -22.0876, 0.23", "-29.2784, -54.2775, -22.7562, 0.23", "-29.5051, -54.785, -23.1684, 0.91", "-29.7381, -55.4811, -23.7589, 1.14", "-29.9965, -56.3289, -24.5757, 0.46", "-30.3472, -57.3864, -25.6742, 0.46", "-30.7041, -58.3359, -26.6606, 0.46", "-30.9678, -58.9093, -27.2347, 0.46", "-31.2842, -59.4028, -27.6864, 0.91", "-31.7742, -59.9816, -28.1713, 0.46", "-32.7631, -60.8965, -28.8326, 0.46", "-33.6283, -61.5857, -29.1611, 0.46", "-34.9645, -62.6041, -29.5092, 0.91", "-36.3719, -63.6065, -29.8959, 0.23", "-37.1027, -64.0673, -30.1, 0.23", "-37.9278, -64.5558, -30.341, 0.46", "-38.9534, -65.1191, -30.7113, 0.91", "-40.3378, -65.8349, -31.4272, 0.46", "-41.5335, -66.4311, -32.3715, 0.46", "-42.1549, -66.754, -33.2723, 0.46", "-42.2145, -66.7744, -33.8186, 0.46", "-42.0674, -66.6774, -34.6872, 0.46", "-41.8015, -66.4978, -35.3681, 0.46", "-41.396, -66.2057, -36.1734, 0.91", "-40.931, -65.8232, -37.0756, 1.14", "-40.47, -65.3615, -38.1106, 0.68", "-40.3994, -65.2337, -38.3658, 0.68", "-40.2994, -64.8732, -39.0105, 0.68", "-40.2153, -64.2756, -39.8997, 0.68", "-40.1413, -63.5842, -40.86, 0.68", "-40.0801, -63.2367, -41.3127, 0.68", "-39.8942, -62.9465, -41.8192, 0.91", "-39.4236, -62.935, -42.5869, 1.14", "-38.8694, -63.1398, -43.2878, 0.68", "-38.0811, -63.4323, -44.1026, 0.68", "-37.612, -63.6119, -44.5553, 0.68", "-36.6842, -64.0033, -45.4247, 0.68", "-35.6974, -64.4966, -46.3407, 0.91", "-35.345, -64.7024, -46.6751, 0.91", "-34.2786, -65.4792, -47.6945, 0.91", "-33.6586, -65.9636, -48.3303, 0.46", "-33.216, -66.3654, -48.7542, 1.14", "-32.4885, -67.1342, -49.3027, 1.14", "-32.2264, -67.468, -49.4532, 0.46", "-31.484, -68.7383, -49.9241, 0.46", "-31.2112, -69.3734, -50.1067, 0.46", "-30.7549, -70.5569, -50.4272, 0.91", "-30.3666, -71.5288, -50.7411, 0.46", "-29.7028, -73.0878, -51.2439, 0.46", "-29.1685, -74.3146, -51.654, 0.46", "-28.8163, -75.0626, -51.9202, 0.46", "-28.3253, -76.2649, -52.3318, 0.91", "-27.988, -77.3079, -52.7663, 0.91", "-27.8247, -77.9103, -53.069, 1.14" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "2.28176, -9.58204, 1.23002, 0.68", "3.81577, -10.9422, 0.854469, 0.68", "4.80804, -11.812, 0.712009, 0.68", "5.91098, -12.7547, 0.736464, 0.91", "7.67564, -14.2167, 0.992344, 0.91", "8.72135, -15.0273, 1.23751, 0.68", "10.0124, -15.9332, 1.66606, 0.68", "11.4319, -16.6947, 2.45796, 0.68", "13.1724, -17.3679, 3.94669, 0.91", "13.8591, -17.5215, 4.70304, 0.68", "14.5286, -17.5969, 5.57673, 0.68", "15.7597, -17.5811, 7.34974, 0.68", "16.6837, -17.4333, 8.79551, 0.68", "17.6171, -17.1481, 10.2872, 0.68", "18.5271, -16.7282, 11.7685, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.28176, -9.58204, 1.23002, 2.05", "1.72176, -11.3585, 0.680015, 2.05" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-24.6986, 28.2557, 0.0, 0.46", "-34.6668, 39.4645, 0.0, 0.46", "-44.6349, 50.6733, 0.0, 0.46" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-19.365, 10.8835, -5.12275, 0.68", "-19.8038, 11.5807, -6.31569, 0.68", "-20.2077, 12.0313, -7.30984, 0.68", "-20.8619, 12.5564, -8.78019, 0.68", "-21.5946, 12.81, -10.2907, 0.68", "-22.2442, 13.0152, -11.7085, 0.68", "-22.6789, 13.2198, -12.563, 0.91", "-23.1763, 13.5304, -13.4862, 0.46", "-23.3123, 13.6658, -13.7044, 0.46", "-24.1719, 15.0239, -14.9283, 0.46", "-25.2067, 16.7381, -16.0102, 0.91", "-26.2312, 18.2224, -16.7128, 1.14", "-27.323, 19.6861, -17.3112, 0.91", "-28.5694, 21.2718, -17.8542, 0.68", "-29.5859, 22.5219, -18.2547, 0.46", "-30.9626, 24.1048, -18.7124, 0.46", "-32.4689, 25.4894, -19.2684, 0.46", "-33.2853, 25.9865, -19.7343, 0.46", "-33.6452, 26.0751, -20.0046, 0.91", "-34.9907, 26.0802, -21.2229, 0.91", "-35.8511, 25.97, -22.1575, 0.91", "-36.7272, 25.8288, -23.31, 0.91", "-37.7398, 25.6704, -24.6398, 0.91", "-39.0569, 25.5165, -26.0685, 0.91", "-39.3272, 25.4893, -26.3228, 0.91", "-39.6955, 25.4556, -26.5984, 1.14", "-40.652, 25.434, -27.2801, 1.14", "-41.3919, 25.5001, -27.8833, 0.46", "-42.7072, 25.7853, -29.1798, 0.46", "-43.6627, 26.0911, -30.3867, 0.46", "-44.1829, 26.2559, -31.0883, 0.46", "-45.004, 26.5211, -32.2725, 0.68", "-45.8519, 26.8777, -33.7632, 0.91", "-46.0881, 27.0623, -34.3008, 0.46", "-46.4485, 27.5253, -35.3079, 0.46", "-46.8805, 28.1483, -36.5594, 0.46", "-47.0606, 28.3688, -37.0375, 0.46", "-47.7311, 28.831, -38.3561, 0.46", "-48.2737, 29.1106, -39.1713, 0.46", "-49.1026, 29.6446, -40.3839, 0.46", "-49.6223, 29.9827, -41.0594, 0.68", "-50.0011, 30.2104, -41.5179, 1.14", "-51.0035, 30.7031, -42.6486, 0.91", "-51.9706, 31.1071, -43.7051, 1.14", "-53.5786, 31.6755, -45.4953, 0.68", "-54.847, 32.0951, -46.96, 0.23", "-56.0822, 32.4166, -48.4396, 0.46", "-57.3508, 32.5524, -50.0663, 0.46", "-57.9884, 32.4559, -50.9437, 0.23", "-58.5785, 32.2204, -51.766, 0.23", "-58.7947, 32.1167, -52.0348, 0.91", "-59.5244, 31.7869, -52.8854, 1.14", "-60.4272, 31.4242, -53.842, 0.91", "-61.607, 31.0606, -54.9441, 0.91", "-62.4737, 30.8474, -55.7189, 0.91", "-64.0567, 30.574, -57.1244, 1.14", "-65.3929, 30.4154, -58.3089, 0.68", "-66.5398, 30.3609, -59.3178, 0.68", "-67.8984, 30.3452, -60.399, 0.68" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-19.365, 10.8835, -5.12275, 0.68", "-19.8544, 9.8375, -5.8042, 0.68", "-20.2524, 8.44326, -6.66499, 0.68", "-20.3955, 7.50429, -7.28589, 0.68", "-20.4976, 6.09598, -8.37926, 0.68", "-20.5651, 4.59162, -9.72928, 0.68", "-20.6537, 3.54068, -10.7143, 0.68", "-20.7042, 2.76266, -11.4458, 0.68", "-20.7904, 1.94114, -12.267, 0.68", "-21.0504, 0.752629, -13.5228, 0.91", "-21.3879, -0.0836428, -14.3508, 1.14", "-21.9488, -1.07932, -15.1987, 1.14", "-22.5956, -2.13166, -15.9748, 0.68", "-23.286, -3.34024, -16.7872, 0.68", "-23.7729, -4.35888, -17.4291, 0.91", "-24.1544, -5.51065, -18.2023, 0.23", "-24.2794, -6.26609, -18.9179, 0.23", "-24.3066, -7.06593, -19.9626, 0.23", "-24.292, -8.05374, -21.3664, 0.46", "-24.2867, -8.8568, -22.566, 0.46", "-24.3172, -9.54044, -23.5925, 0.46", "-24.4043, -10.6315, -25.0708, 0.91", "-24.5125, -11.2471, -25.687, 0.91", "-24.9637, -12.8325, -26.6598, 0.46", "-25.4407, -14.2765, -27.1741, 0.46", "-25.5901, -14.7637, -27.2741, 0.68", "-25.8278, -15.6353, -27.407, 0.91", "-26.0301, -16.4482, -27.5619, 0.68", "-26.2824, -17.3007, -27.8448, 0.68", "-26.5115, -17.7852, -28.1093, 0.91", "-27.1632, -18.6218, -28.6078, 1.14", "-27.7565, -19.2288, -28.9664, 0.23", "-28.4893, -19.9122, -29.3764, 0.23", "-29.2145, -20.6752, -29.7521, 0.23", "-29.6649, -21.3485, -30.0527, 0.23", "-30.0974, -22.1704, -30.3549, 0.68", "-30.5407, -23.1948, -30.752, 0.23", "-30.7756, -23.8136, -31.0414, 0.23", "-31.3161, -25.1672, -31.797, 0.68", "-31.8817, -26.5334, -32.7984, 0.46", "-32.0374, -26.9703, -33.2378, 0.68", "-32.3776, -27.9826, -34.7484, 0.91", "-32.609, -28.5419, -35.9999, 0.68", "-32.8422, -28.9552, -37.2412, 0.68", "-33.2231, -29.3927, -39.1071, 0.68", "-33.7942, -29.815, -41.3414, 0.68", "-34.4432, -30.1452, -43.403, 0.68", "-35.0904, -30.3788, -45.005, 0.68", "-35.3859, -30.4507, -45.5068, 0.91", "-36.1491, -30.5973, -46.2789, 0.68", "-37.2992, -30.7906, -47.0414, 0.68", "-38.5602, -30.9997, -47.6674, 1.14", "-39.1289, -31.1036, -47.8955, 0.46", "-40.2856, -31.3098, -48.3181, 0.46", "-41.8202, -31.6247, -48.896, 0.46", "-42.9605, -31.8874, -49.3627, 0.68", "-43.9255, -32.1057, -49.8012, 1.14", "-44.7011, -32.2863, -50.2044, 0.46", "-45.4586, -32.4537, -50.6335, 0.46", "-46.2465, -32.6741, -51.1749, 0.46", "-46.8212, -32.8693, -51.6072, 0.46", "-47.5708, -33.1444, -52.352, 0.46", "-47.9606, -33.2722, -52.9766, 0.46", "-48.4445, -33.3743, -53.9478, 0.46", "-49.1283, -33.4598, -55.4123, 0.46", "-49.3191, -33.4861, -55.8373, 0.46", "-49.9855, -33.7323, -57.3182, 0.46", "-50.5767, -34.1255, -58.5163, 0.46", "-51.0879, -34.5013, -59.2935, 0.46", "-51.7343, -34.895, -59.891, 0.46", "-52.021, -35.0567, -60.0731, 0.68", "-52.7441, -35.5248, -60.5055, 1.14", "-53.6488, -36.2343, -60.9871, 0.46", "-54.6931, -37.1295, -61.5116, 0.46", "-55.432, -37.7767, -61.899, 0.68", "-56.1951, -38.4202, -62.3086, 0.23", "-57.3901, -39.3761, -62.9918, 0.23", "-58.2524, -40.0367, -63.5597, 0.68" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "12.0643, -2.59424, -5.16216, 0.91", "11.6603, -3.42976, -5.08116, 0.91", "11.0064, -4.94702, -4.93233, 0.91", "10.4953, -6.22361, -4.8147, 0.68", "9.85312, -7.7486, -4.68197, 0.68", "8.96307, -9.56015, -4.52645, 0.68", "8.13782, -11.0635, -4.45036, 0.91", "7.8456, -11.5713, -4.45645, 0.91", "7.40031, -12.4006, -4.55559, 0.68", "6.90121, -13.4309, -4.84221, 0.68", "6.29239, -14.8091, -5.48613, 0.68", "5.90507, -15.8009, -6.1621, 0.68", "5.67698, -17.1551, -7.17731, 0.91", "5.83297, -18.4771, -8.12996, 0.91", "6.10649, -19.3646, -8.70874, 0.68", "6.23598, -19.7265, -8.92464, 0.68", "6.45916, -20.3713, -9.28491, 0.91", "6.91399, -21.8614, -10.0836, 1.14", "7.17245, -22.8339, -10.6035, 0.91", "7.39444, -23.6481, -11.01, 0.91", "7.82193, -25.0402, -11.6666, 0.91", "8.24751, -26.0561, -12.1438, 0.91", "8.83135, -26.9436, -12.5395, 0.91", "9.72222, -27.8271, -12.9748, 0.91", "10.9463, -28.8253, -13.4958, 0.68", "11.3354, -29.1384, -13.6456, 0.91", "12.4403, -29.9386, -14.0005, 1.14", "13.6167, -30.7372, -14.3169, 0.46", "14.8482, -31.5633, -14.6335, 0.46", "16.3304, -32.6186, -15.122, 0.68", "17.3692, -33.5007, -15.577, 1.14" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "12.0643, -2.59424, -5.16216, 0.91", "10.7128, -1.37394, -5.31776, 0.91", "9.63807, -0.225037, -5.44503, 0.91", "8.20852, 1.53144, -5.68722, 0.91", "7.96952, 1.89028, -5.75795, 0.68", "7.19715, 3.21407, -6.13146, 0.46", "6.59837, 4.19912, -6.46085, 0.46", "5.96109, 5.37542, -6.93384, 0.68", "5.63774, 6.10772, -7.33664, 0.68", "5.43148, 7.04215, -7.95557, 0.68", "5.38512, 8.27979, -8.83875, 0.91", "5.57833, 9.39823, -9.61388, 0.91", "5.79968, 10.3978, -10.2179, 0.68", "5.89749, 10.9249, -10.4762, 0.68", "6.37613, 12.9263, -11.3, 0.68", "6.83048, 14.3003, -11.7887, 0.68", "7.30279, 15.5804, -12.2714, 0.68", "7.45519, 16.0277, -12.4663, 0.46", "7.73444, 17.0086, -12.9646, 0.46", "7.92465, 17.8236, -13.4602, 0.46", "8.05258, 18.3879, -13.8546, 0.91", "8.4996, 19.7627, -14.8735, 1.37", "8.96463, 20.8032, -15.6615, 0.68", "9.68481, 22.0763, -16.5656, 0.68", "10.2237, 22.8633, -17.0434, 0.68", "11.0684, 23.8663, -17.5209, 0.68", "11.7163, 24.4977, -17.7479, 0.68", "12.3957, 25.0438, -17.8179, 0.91", "12.8307, 25.3876, -17.8252, 0.46", "13.7157, 26.2067, -17.8084, 0.23", "14.6309, 27.2411, -17.8424, 0.46", "14.8541, 27.5093, -17.8835, 0.23", "15.6175, 28.3036, -18.0996, 0.23", "16.4171, 28.9862, -18.3957, 0.68", "17.5728, 29.7444, -18.9425, 1.37", "19.4207, 30.6425, -19.9529, 0.46", "20.643, 31.078, -20.6732, 0.46", "21.771, 31.3373, -21.3467, 0.68", "23.2371, 31.5529, -22.2079, 0.46", "24.974, 31.7121, -23.2183, 0.91", "26.5206, 31.836, -24.1368, 0.68", "27.859, 31.9849, -24.9352, 0.68", "29.3102, 32.2546, -25.7208, 0.68", "31.6475, 32.8776, -26.88, 0.68", "32.2514, 33.0685, -27.1872, 0.68", "33.5969, 33.5554, -27.8638, 0.91", "34.8648, 34.0545, -28.5173, 0.68", "36.3802, 34.7106, -29.307, 0.91", "37.851, 35.3561, -30.0767, 0.68", "40.2194, 36.2681, -31.3538, 1.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "14.1336, 5.95482, 4.96225, 0.68", "14.6372, 6.60584, 5.43748, 0.68", "15.7013, 7.64464, 6.10196, 0.46", "16.8249, 8.77025, 6.77737, 0.46", "17.8658, 9.70863, 7.29958, 0.46", "18.7211, 10.3725, 7.67833, 0.68", "20.4512, 11.5153, 8.32519, 0.68", "21.5198, 12.0411, 8.6181, 0.68", "23.2768, 12.6839, 8.9339, 0.68", "24.8428, 13.1381, 9.11661, 0.68", "26.5148, 13.5544, 9.26264, 0.68", "28.5049, 14.0409, 9.42261, 0.46", "30.5841, 14.5515, 9.56078, 0.46", "31.2343, 14.7007, 9.60964, 0.46", "32.3703, 14.9736, 9.70977, 0.91", "33.4643, 15.336, 9.85484, 0.46", "34.4963, 15.8296, 10.0804, 0.46", "35.8242, 16.6988, 10.6207, 0.46", "36.9284, 17.4643, 11.251, 0.46", "37.86, 18.1327, 11.8695, 0.23", "38.45, 18.5754, 12.3365, 0.23", "39.6191, 19.5163, 13.4592, 0.23", "40.3982, 20.2246, 14.3907, 0.23", "41.4719, 21.4591, 16.1022, 0.23" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "14.1336, 5.95482, 4.96225, 0.46", "15.0524, 6.95997, 4.35148, 0.46", "16.0043, 8.00139, 3.71866, 0.46", "17.2193, 9.33066, 2.91094, 0.23", "17.7539, 9.9156, 2.5555, 0.23" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-11.8872, 1.60752, -2.39143, 1.14", "-13.8732, 0.976832, -3.64727, 1.14", "-15.014, 0.544833, -4.24788, 1.14", "-16.3842, -0.0394489, -4.87211, 1.37", "-18.1509, -0.792827, -5.677, 1.14", "-20.0753, -1.61346, -6.55374, 1.14", "-21.4771, -2.21119, -7.19234, 1.37", "-22.4463, -2.73886, -7.53204, 1.82", "-23.1493, -3.17448, -7.69847, 1.14" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-11.8872, 1.60752, -2.39143, 0.91", "-12.8301, 2.28423, -1.4469, 0.91", "-13.7136, 2.86559, -0.557298, 0.68", "-14.6536, 3.52062, 0.39791, 0.68", "-15.5621, 4.21032, 1.30066, 0.91", "-17.3031, 5.71674, 2.89531, 0.91", "-17.9063, 6.30879, 3.37695, 0.91", "-18.3433, 6.81016, 3.64387, 0.46", "-19.1976, 8.09722, 3.94004, 0.46", "-19.6103, 8.86214, 3.93705, 0.46", "-20.4879, 10.3853, 3.76907, 0.46", "-21.3495, 11.6111, 3.58211, 0.46", "-22.3829, 12.8126, 3.46924, 0.46", "-22.893, 13.3263, 3.42487, 0.46", "-24.148, 14.4067, 3.34985, 0.46", "-25.9225, 15.7319, 3.34078, 0.68", "-27.5372, 16.7892, 3.34814, 0.68", "-28.9175, 17.6143, 3.31748, 0.68", "-30.6833, 18.7331, 3.14542, 0.91", "-31.9685, 19.6032, 2.84767, 0.91", "-32.9459, 20.2927, 2.47101, 0.91", "-33.74, 20.869, 2.08519, 0.46", "-35.0595, 21.7726, 1.44929, 0.46", "-36.9634, 23.0239, 0.633744, 0.46", "-38.2515, 23.891, 0.124919, 0.46", "-39.6588, 25.0008, -0.457268, 0.46", "-40.432, 25.7728, -0.788928, 0.46", "-41.4653, 27.096, -1.25677, 0.46", "-42.1415, 28.2409, -1.63821, 0.23", "-42.7916, 29.5543, -2.07959, 0.46", "-43.4214, 31.1007, -2.63644, 0.46", "-43.8356, 32.3332, -3.14655, 0.46", "-44.0884, 33.1614, -3.54745, 0.46", "-44.3755, 34.1424, -4.05466, 0.46", "-44.7965, 35.267, -4.66339, 1.14", "-45.3299, 36.2761, -5.26881, 0.68", "-45.777, 36.8607, -5.7184, 0.68", "-46.581, 37.8022, -6.44776, 0.91", "-47.5479, 39.0106, -7.24848, 0.46", "-48.2187, 40.0594, -7.8037, 0.46", "-48.8702, 41.3219, -8.39446, 0.91", "-49.3829, 42.3456, -8.87304, 0.46", "-50.1949, 43.8871, -9.63042, 0.46", "-50.5815, 44.6327, -9.9758, 0.46", "-51.2075, 45.9634, -10.5023, 0.68", "-51.8281, 47.3827, -10.9467, 0.68", "-52.5371, 48.9259, -11.4092, 0.68", "-53.2146, 50.1926, -11.8505, 0.68", "-54.0387, 51.4082, -12.3779, 0.68", "-54.7472, 52.3242, -12.8352, 0.68", "-55.4538, 53.1304, -13.221, 0.68", "-56.6754, 54.489, -13.7587, 0.68", "-57.5386, 55.4846, -14.137, 0.68", "-58.1741, 56.3206, -14.4817, 0.68", "-58.8629, 57.5191, -15.0491, 0.68", "-59.3495, 58.6732, -15.6762, 1.14", "-59.6552, 59.6565, -16.3081, 1.82", "-59.9962, 61.1471, -17.24, 0.91", "-60.3758, 63.2367, -18.58, 0.46", "-60.6217, 64.8415, -19.7392, 0.46", "-60.8541, 66.4116, -21.0356, 0.46", "-61.0478, 67.7895, -22.3344, 0.46" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-35.2643, -16.7836, 1.92599, 0.46", "-35.9117, -18.0695, 2.06775, 0.46", "-36.7347, -19.3824, 2.08206, 0.46", "-37.6136, -20.5849, 2.03696, 0.46", "-37.9507, -21.0159, 2.01309, 0.68", "-38.8016, -22.1177, 1.90615, 1.14", "-38.9599, -22.3223, 1.87794, 0.46", "-40.4076, -24.1665, 1.52941, 0.46", "-41.5746, -25.6787, 1.15909, 0.91", "-42.5373, -27.0171, 0.779507, 0.23", "-43.2531, -28.0558, 0.479208, 0.23", "-43.7769, -28.8587, 0.23811, 0.23", "-44.3898, -29.8549, -0.0612439, 0.68", "-45.0272, -31.0537, -0.415078, 0.46", "-45.3582, -31.7754, -0.655664, 0.46", "-45.7856, -32.7653, -0.994164, 0.68" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-35.2643, -16.7836, 1.92599, 0.23", "-36.2049, -17.1378, 2.55602, 0.23", "-37.7066, -17.7134, 3.41365, 0.23", "-39.1639, -18.2192, 4.071, 0.23", "-40.0479, -18.5282, 4.40357, 0.46", "-41.0702, -18.8989, 4.73155, 0.23", "-41.9563, -19.2339, 4.98482, 0.91", "-43.0055, -19.6594, 5.23377, 0.23", "-45.0077, -20.4874, 5.60531, 0.23", "-45.8134, -20.8355, 5.72248, 0.23", "-46.8601, -21.3031, 5.8616, 0.68", "-47.3731, -21.5507, 5.93293, 0.23", "-48.7171, -22.2374, 6.16461, 0.46", "-49.7698, -22.8169, 6.40838, 0.91" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.72176, -11.3585, 0.680015, 1.59", "0.847528, -12.6898, 1.35689, 1.59", "-0.033706, -13.8879, 1.95193, 1.14", "-1.04469, -15.2624, 2.63458, 0.91", "-2.14904, -16.7638, 3.38026, 0.91", "-2.92109, -17.8134, 3.90158, 0.91", "-3.44661, -18.5279, 4.25642, 1.14", "-3.83685, -19.0523, 4.51996, 1.37" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.72176, -11.3585, 0.680015, 1.37", "2.09976, -12.6978, -1.27501, 1.37", "2.3204, -13.4796, -2.41617, 1.37", "2.87644, -15.4497, -5.29196, 1.37" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "17.3692, -33.5007, -15.577, 0.68", "17.8336, -34.5697, -16.4697, 0.68", "18.4418, -35.9752, -17.545, 0.68", "19.0682, -37.4744, -18.6143, 0.91", "19.4368, -38.3988, -19.2764, 0.46", "19.6921, -38.9488, -19.6966, 1.14", "20.0274, -39.5567, -20.2055, 1.59", "20.2462, -39.8574, -20.4695, 0.91", "20.8621, -40.6686, -21.1737, 0.68", "21.2608, -41.2304, -21.686, 0.68", "21.8824, -42.2833, -22.6138, 0.68", "22.1345, -43.0501, -23.1873, 0.46", "22.167, -43.4112, -23.4183, 0.46", "22.1883, -44.4003, -23.9654, 0.46", "22.208, -45.6556, -24.5903, 0.68", "22.2147, -46.4303, -24.9515, 0.46", "22.2379, -47.3657, -25.3819, 0.46", "22.3482, -48.7768, -26.0561, 0.68", "22.5501, -49.7963, -26.6257, 1.37", "22.9405, -51.0035, -27.381, 0.46", "23.0693, -51.3195, -27.5906, 0.46", "23.619, -52.5203, -28.413, 0.91", "23.9457, -53.1397, -28.8592, 0.46", "24.4485, -53.9796, -29.4827, 0.46", "24.7351, -54.4066, -29.8216, 0.46", "25.0623, -54.7966, -30.1306, 0.68", "26.0558, -55.8025, -30.9489, 0.23", "26.8417, -56.4185, -31.5361, 0.23", "27.4432, -56.7876, -31.9194, 0.23", "27.9365, -57.0859, -32.2647, 0.68", "28.943, -57.6083, -33.0174, 1.14", "29.8385, -58.0017, -33.7234, 0.68", "30.7793, -58.3654, -34.4663, 0.68", "31.7134, -58.6881, -35.2412, 0.91", "33.3471, -59.1481, -36.6286, 0.91", "34.3566, -59.3947, -37.5288, 0.91", "35.543, -59.6198, -38.5682, 0.46", "36.2316, -59.7347, -39.1247, 0.68", "37.3453, -59.9541, -39.9176, 0.68", "38.4789, -60.1763, -40.6716, 0.91", "38.935, -60.2352, -40.9417, 0.23", "40.1685, -60.4244, -41.7057, 0.23", "41.145, -60.6017, -42.3676, 0.46", "42.4299, -60.8825, -43.3142, 0.23", "43.2694, -61.0559, -44.0182, 0.46", "44.3815, -61.2534, -45.0679, 0.68", "45.4004, -61.4695, -46.1208, 0.23", "46.671, -61.8259, -47.5928, 0.68", "47.5557, -62.1385, -48.6242, 0.23", "48.8999, -62.691, -50.1402, 0.23", "49.1188, -62.7889, -50.3428, 0.23", "50.1643, -63.3283, -51.2387, 0.46", "50.4283, -63.4615, -51.4432, 0.23", "51.648, -64.117, -52.2339, 0.23", "52.5518, -64.6253, -52.6847, 0.46", "54.3224, -65.6896, -53.2699, 0.68" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "17.3692, -33.5007, -15.577, 0.46", "18.6733, -34.2025, -15.5101, 0.46", "19.8598, -34.9091, -15.4158, 0.68", "21.3555, -35.8624, -15.2768, 0.23", "22.6746, -36.7423, -15.1457, 0.68", "23.111, -37.0472, -15.102, 0.23", "23.8643, -37.5896, -15.0266, 0.23", "24.9388, -38.3867, -14.9018, 0.23", "25.455, -38.7983, -14.8207, 0.23", "25.7974, -39.0932, -14.7556, 0.68", "26.6222, -39.813, -14.5956, 0.68", "26.7979, -39.9661, -14.5646, 0.23", "28.4286, -41.3309, -14.329, 0.23", "29.1574, -41.913, -14.2894, 0.91", "29.6691, -42.3363, -14.3069, 0.23", "30.704, -43.1864, -14.4075, 0.23", "31.558, -43.8922, -14.5293, 0.23", "32.7696, -44.8894, -14.7425, 0.46", "34.0536, -45.9402, -14.9662, 0.23", "35.7038, -47.2637, -15.208, 0.68", "36.9627, -48.2237, -15.3583, 0.23", "38.4022, -49.2963, -15.4411, 0.23", "38.997, -49.7157, -15.4202, 0.23", "41.1406, -51.1249, -15.1321, 0.68", "41.7536, -51.5041, -14.9927, 0.23", "42.4851, -51.9498, -14.7883, 0.23", "44.1845, -52.9859, -14.2592, 0.23", "45.5774, -53.8126, -13.7902, 0.23", "46.789, -54.5379, -13.3664, 0.68", "47.903, -55.1994, -12.9716, 0.23", "49.1989, -56.0013, -12.4987, 0.91" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-23.1493, -3.17448, -7.69847, 0.91", "-24.8165, -2.35778, -7.66987, 0.91", "-26.2605, -1.62015, -7.69165, 0.91", "-28.085, -0.559245, -7.79972, 0.91", "-28.5305, -0.285962, -7.83568, 0.68", "-30.2825, 0.76488, -7.9939, 0.68", "-31.8128, 1.63245, -8.13484, 0.68", "-32.3831, 1.96865, -8.23632, 0.68", "-33.8381, 2.88434, -8.54995, 0.68", "-34.438, 3.28383, -8.6835, 0.68", "-35.1374, 3.78642, -8.84577, 0.68", "-35.9787, 4.43322, -9.03372, 0.68", "-37.1438, 5.33074, -9.24515, 0.68", "-38.5067, 6.25231, -9.35178, 0.68", "-39.5158, 6.82232, -9.30949, 0.91", "-40.5063, 7.34251, -9.1864, 0.91", "-41.3204, 7.75264, -9.03499, 0.68", "-42.4202, 8.21877, -8.69863, 0.46", "-44.3951, 8.81755, -7.9011, 0.68", "-45.3805, 9.05037, -7.39673, 0.68", "-45.967, 9.20127, -7.06367, 0.68", "-46.7245, 9.46123, -6.55328, 0.91", "-47.985, 10.0178, -5.55484, 0.91", "-48.7429, 10.3984, -4.89516, 0.46", "-50.424, 11.2715, -3.45344, 0.46", "-52.2361, 12.1159, -2.02619, 0.46", "-53.8334, 12.6677, -0.943818, 0.46", "-54.926, 12.9217, -0.327664, 0.46", "-56.4938, 13.1607, 0.337771, 0.91", "-57.8843, 13.2601, 0.766436, 0.46", "-60.1725, 13.2511, 1.18892, 0.46", "-62.8172, 13.0695, 1.54352, 0.46", "-64.4036, 12.9368, 1.70153, 0.46", "-65.6895, 12.843, 1.82428, 0.46", "-67.1489, 12.8257, 1.98823, 0.46", "-68.0365, 12.8993, 2.13347, 0.91", "-69.622, 13.1063, 2.4669, 0.23", "-71.3483, 13.5002, 2.93611, 0.23", "-72.555, 13.8722, 3.33146, 0.23", "-74.3689, 14.5473, 4.03902, 0.23", "-76.1341, 15.4449, 4.79807, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-23.1493, -3.17448, -7.69847, 0.68", "-23.5138, -3.07534, -8.18708, 0.68", "-24.3743, -2.84129, -9.34066, 0.68", "-25.4423, -2.55083, -10.7723, 0.68", "-26.6069, -2.23409, -12.3334, 0.91", "-27.5394, -1.98046, -13.5835, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-45.7856, -32.7653, -0.994164, 0.68", "-46.0974, -33.5868, -1.44177, 0.68", "-46.6274, -34.6777, -2.14309, 0.23", "-46.9341, -35.2228, -2.48605, 0.23", "-47.5168, -36.1793, -3.06693, 0.68", "-48.3929, -37.4353, -3.79965, 0.46", "-49.33, -38.7903, -4.49733, 0.46", "-49.9519, -39.7242, -4.94934, 0.46", "-50.7121, -40.8219, -5.39328, 0.46", "-51.0311, -41.2612, -5.5366, 0.46", "-51.8081, -42.2678, -5.76736, 0.46", "-52.9756, -43.7755, -5.97056, 0.46", "-53.5059, -44.5349, -6.07197, 0.46", "-54.1484, -45.5157, -6.2143, 0.46", "-54.9272, -46.7392, -6.41644, 1.14", "-55.2386, -47.2432, -6.51056, 0.46", "-56.0803, -48.6527, -6.82266, 0.46", "-57.0235, -50.0153, -7.21665, 0.46", "-57.4805, -50.6701, -7.4417, 0.91" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-45.7856, -32.7653, -0.994164, 0.23", "-47.5083, -34.2056, -1.29515, 0.23", "-48.2375, -34.805, -1.41193, 0.23", "-49.1283, -35.5202, -1.53912, 0.23", "-50.6128, -36.6202, -1.70922, 0.23", "-51.795, -37.4417, -1.83365, 1.14", "-52.2849, -37.7822, -1.88523, 0.46", "-53.4561, -38.6016, -2.01407, 0.46", "-54.4279, -39.2237, -2.11164, 0.46", "-56.5214, -40.4635, -2.27848, 0.46", "-57.1595, -40.8187, -2.29659, 1.14" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.83685, -19.0523, 4.51996, 1.37", "-4.72938, -19.7436, 4.56995, 1.37", "-5.63687, -20.4464, 4.62077, 1.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.83685, -19.0523, 4.51996, 0.68", "-6.23459, -18.6845, 4.79552, 0.68", "-7.73911, -18.4981, 5.00888, 0.46", "-9.17334, -18.4391, 5.26813, 0.46", "-11.4785, -18.5263, 5.68907, 0.68", "-13.3514, -18.7189, 5.99316, 0.68", "-14.9704, -18.9384, 6.22659, 1.14", "-16.7252, -19.3203, 6.50781, 0.91", "-18.8007, -19.8145, 6.88938, 0.68", "-20.8405, -20.3317, 7.23914, 0.68", "-22.5828, -20.8094, 7.48412, 0.68", "-24.1116, -21.2578, 7.6638, 0.68", "-26.2167, -21.8785, 7.91133, 0.68", "-28.4865, -22.4982, 8.19008, 0.46", "-29.1971, -22.6538, 8.2766, 0.46", "-30.7382, -22.9455, 8.52487, 0.68", "-32.1472, -23.1878, 8.81173, 0.23", "-33.1977, -23.3974, 9.04139, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.87644, -15.4497, -5.29196, 0.91", "2.79513, -16.4697, -4.84033, 0.91", "2.92758, -18.4097, -4.08697, 0.91", "3.40735, -20.5839, -3.33443, 1.14", "3.98826, -22.2169, -2.90968, 0.46", "4.50315, -23.4044, -2.67713, 0.91", "5.04446, -24.5665, -2.44479, 0.91", "5.71446, -25.6849, -2.22835, 0.68", "6.50664, -26.8506, -1.98883, 0.68", "7.38098, -28.1864, -1.63829, 0.68", "7.82019, -28.895, -1.41782, 0.68", "8.70203, -30.6021, -0.74822, 0.91", "9.08442, -31.5902, -0.256712, 0.91", "9.43455, -33.0445, 0.645911, 0.91", "9.57129, -34.3686, 1.62853, 0.91" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.87644, -15.4497, -5.29196, 0.91", "3.80312, -16.035, -4.79182, 0.91", "4.99368, -16.787, -4.14926, 1.14", "6.65092, -17.8338, -3.25483, 1.14", "8.72611, -19.1445, -2.13484, 1.14", "10.2243, -20.0909, -1.32626, 1.37", "12.326, -21.4184, -0.191942, 1.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "54.3224, -65.6896, -53.2699, 0.23", "55.7838, -66.3039, -53.2699, 0.23", "57.1677, -66.7924, -53.2699, 0.23", "58.6828, -67.2959, -53.2699, 0.46", "59.1918, -67.4413, -53.2699, 0.23", "61.1005, -67.9274, -53.2699, 0.23", "61.9331, -68.1418, -53.2699, 0.23", "63.1778, -68.4017, -53.2699, 0.46", "64.333, -68.6048, -53.2699, 0.23", "65.6505, -68.7877, -53.2699, 0.23", "67.251, -69.0292, -53.2699, 0.23", "68.3685, -69.2355, -53.2699, 0.68" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "54.3224, -65.6896, -53.2699, 0.23", "56.5086, -64.4412, -52.858, 0.23", "58.4619, -63.3258, -52.49, 0.23" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-27.5394, -1.98046, -13.5835, 0.68", "-27.8872, -0.937276, -14.3724, 0.68", "-28.2557, 0.14121, -15.487, 0.68", "-28.4463, 0.595688, -16.205, 0.91", "-28.6997, 1.01359, -17.3856, 0.91", "-28.9133, 1.33748, -18.9299, 0.68", "-28.9663, 1.4555, -20.0283, 0.68", "-28.9085, 1.42746, -21.3095, 0.68", "-28.6367, 1.25161, -22.876, 0.68", "-28.2424, 1.10226, -24.1905, 0.68", "-27.7494, 1.05834, -25.3655, 0.68", "-27.1037, 1.35655, -26.6861, 0.68", "-26.2839, 2.37723, -28.664, 0.68", "-25.8651, 3.36349, -29.8521, 0.68", "-25.4662, 4.69091, -31.0833, 0.68", "-25.2232, 5.7698, -31.8964, 1.14", "-24.8879, 7.48982, -33.037, 0.68", "-24.7305, 8.4768, -33.5878, 0.68", "-24.5465, 10.0282, -34.399, 0.91", "-24.4485, 10.8228, -34.6928, 0.68", "-24.2485, 12.0094, -35.0383, 0.68", "-24.0232, 13.3333, -35.4331, 0.68", "-23.7969, 14.963, -35.9859, 0.68", "-23.7329, 15.8231, -36.3926, 0.68", "-23.8086, 16.7399, -37.0532, 1.14", "-24.2924, 18.1514, -38.5003, 0.68", "-24.9011, 19.0375, -39.8157, 0.68", "-25.2235, 19.3778, -40.4751, 0.68", "-25.8103, 19.9138, -41.9303, 0.68", "-25.9069, 20.0083, -42.2541, 0.68", "-26.0097, 20.1839, -42.9574, 1.14", "-25.7862, 20.8338, -44.9077, 0.68", "-25.3702, 21.4092, -46.113, 0.68", "-25.0081, 21.9505, -47.0178, 0.68", "-24.5897, 22.6559, -48.0092, 0.68", "-24.0611, 23.6461, -49.2434, 0.68", "-23.5878, 24.5817, -50.2969, 0.91", "-23.2534, 25.4206, -51.1364, 0.68", "-23.045, 26.5067, -52.1523, 0.91", "-23.0524, 26.9736, -52.6204, 0.68", "-23.1846, 27.5501, -53.2829, 0.68", "-23.4385, 28.0286, -54.094, 0.68", "-23.7043, 28.2478, -54.7807, 0.68", "-24.3252, 28.3683, -56.2065, 0.68", "-24.9847, 28.2366, -57.7707, 0.68", "-25.1168, 28.1821, -58.0858, 0.68", "-25.6911, 27.9319, -59.3085, 0.68", "-26.2342, 27.7377, -60.3225, 0.68", "-27.0064, 27.4536, -61.6809, 0.68", "-27.688, 27.3112, -62.6588, 0.68", "-27.9851, 27.3436, -62.9448, 0.68", "-29.0464, 27.8498, -63.8183, 0.68", "-29.8035, 28.5207, -64.4929, 0.68", "-30.3805, 29.1122, -65.0067, 0.68", "-31.254, 30.0764, -65.7533, 0.68", "-32.3575, 31.2398, -66.5714, 1.14", "-33.477, 32.4578, -67.4014, 0.23", "-34.518, 33.7764, -68.233, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-27.5394, -1.98046, -13.5835, 0.68", "-27.0834, -1.80771, -14.5126, 0.68", "-26.3263, -1.63076, -16.3087, 0.68", "-25.841, -1.61914, -17.7965, 0.68", "-25.5321, -1.72568, -19.4646, 0.68", "-25.3842, -1.86159, -21.2631, 0.68", "-25.389, -1.95924, -23.0199, 0.68", "-25.4493, -2.00149, -23.6706, 0.68", "-25.7516, -2.17545, -25.5889, 0.68", "-26.1949, -2.42347, -27.8447, 0.68", "-26.4931, -2.59819, -29.2175, 0.68", "-26.7835, -2.81099, -30.7647, 0.68", "-26.8887, -2.97672, -31.6243, 0.68", "-26.9815, -3.48398, -33.3697, 0.68", "-26.8433, -4.14254, -34.3147, 1.14", "-26.5887, -4.8981, -34.773, 0.91", "-26.2496, -5.882, -35.2253, 0.46", "-25.9626, -6.61632, -35.5783, 0.46", "-25.5201, -7.89604, -36.3244, 0.46", "-25.3808, -8.49427, -36.6617, 0.46", "-25.2183, -9.65845, -37.4393, 0.91", "-25.2091, -10.6336, -38.2334, 0.46", "-25.2534, -12.1104, -39.569, 0.46", "-25.1726, -12.7688, -40.2625, 0.46", "-24.7695, -13.9401, -41.7914, 0.46", "-24.5358, -14.4062, -42.5003, 0.46", "-24.1219, -15.1855, -43.7754, 0.46", "-23.9524, -15.5714, -44.3107, 0.68", "-23.5817, -16.6389, -45.5345, 0.91", "-23.1319, -17.7185, -46.7499, 0.46", "-22.7113, -18.4267, -47.5672, 0.46", "-22.2026, -19.133, -48.2645, 0.46", "-21.4067, -20.1416, -49.1394, 0.91", "-20.6345, -21.222, -49.9467, 0.68", "-20.0991, -22.185, -50.4907, 0.68", "-19.4763, -23.6487, -51.146, 0.68", "-19.2092, -25.0443, -51.7154, 0.23", "-19.1961, -25.9241, -51.979, 0.23", "-19.3049, -26.8204, -52.1959, 0.91", "-19.6732, -28.1101, -52.4817, 1.59", "-19.9788, -28.8586, -52.6551, 0.91", "-21.1078, -31.1382, -53.2169, 0.46", "-22.3292, -33.35, -53.7813, 0.46", "-22.7344, -34.0762, -53.9762, 0.46", "-23.3282, -35.1493, -54.2703, 0.46", "-23.9326, -36.2488, -54.571, 0.46", "-24.2736, -36.8462, -54.7422, 0.68", "-24.2736, -36.8462, -54.7422, 0.23", "-24.9753, -37.9979, -55.2089, 0.23", "-25.5198, -39.0373, -55.6472, 0.68", "-25.8553, -39.7553, -55.9677, 0.46", "-26.3079, -40.7293, -56.4091, 0.46", "-26.8328, -41.7794, -56.8901, 0.68", "-27.1017, -42.299, -57.1431, 0.23", "-27.57, -43.2431, -57.6102, 0.23", "-27.9131, -43.9578, -57.9679, 0.23", "-28.2958, -44.7494, -58.2974, 0.68", "-29.1124, -46.1155, -58.8192, 0.46", "-29.7838, -47.0396, -59.1797, 0.46", "-30.2966, -47.688, -59.4438, 0.91", "-30.8076, -48.3199, -59.7318, 0.23", "-31.6671, -49.3976, -60.2417, 0.23", "-32.606, -50.5758, -60.8826, 0.23", "-33.2055, -51.3373, -61.3199, 0.23", "-33.4585, -51.632, -61.4891, 0.46", "-34.2151, -52.4152, -61.9659, 0.91", "-34.6788, -52.8691, -62.2489, 0.68", "-35.2134, -53.4175, -62.5626, 0.68", "-35.8976, -54.2281, -62.9036, 0.68", "-36.7686, -55.2497, -63.2415, 0.68", "-37.2096, -55.7869, -63.4053, 0.91", "-37.3388, -55.9636, -63.4619, 0.23", "-38.0218, -57.0665, -63.8843, 0.46", "-38.4956, -58.0719, -64.3371, 0.68", "-38.7769, -59.0417, -64.8292, 0.23", "-38.8957, -60.1376, -65.3584, 0.23", "-38.9072, -61.3103, -65.9467, 0.68", "-38.8756, -62.1293, -66.3485, 0.68", "-38.8131, -62.8546, -66.6964, 0.23", "-38.7537, -63.6525, -67.0542, 0.46", "-38.7094, -65.5756, -67.7829, 0.46", "-38.7527, -66.3996, -68.0099, 0.46", "-38.8884, -67.6409, -68.2804, 0.91", "-38.9723, -68.3263, -68.3964, 0.23", "-39.1871, -69.6631, -68.6302, 0.23", "-39.3889, -70.7866, -68.843, 0.23", "-39.6576, -71.931, -69.0975, 0.46", "-39.9319, -73.1421, -69.3673, 0.46", "-40.1818, -74.4407, -69.6729, 0.91", "-40.3905, -76.0614, -70.11, 0.23", "-40.4978, -77.2032, -70.4386, 0.23", "-40.6437, -78.8969, -70.9524, 0.23", "-40.7291, -79.7568, -71.2184, 0.23", "-40.8758, -81.0551, -71.5909, 0.46", "-41.0553, -82.9368, -72.1566, 0.46" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.63687, -20.4464, 4.62077, 0.68", "-4.91397, -21.256, 5.59233, 0.68", "-4.14302, -22.2461, 6.53191, 0.68", "-3.47327, -23.1688, 7.27434, 0.68", "-2.54211, -24.4095, 8.14012, 0.68", "-1.98497, -25.1382, 8.58878, 0.68", "-1.17934, -26.1451, 9.17329, 0.91", "-0.0343662, -27.5773, 9.9061, 0.91", "0.504417, -28.2565, 10.2186, 0.91", "1.661, -29.8316, 10.8577, 0.68", "2.669, -31.2705, 11.3525, 0.46", "3.6319, -32.6146, 11.7939, 0.46", "4.61974, -33.8886, 12.2171, 0.46" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.63687, -20.4464, 4.62077, 0.68", "-6.5907, -22.562, 4.14766, 0.68", "-6.96757, -23.5774, 3.93717, 0.68", "-7.18313, -24.0689, 3.86037, 0.91", "-8.07443, -25.7403, 3.67579, 0.91", "-9.00052, -27.0301, 3.56812, 0.91", "-9.73063, -27.8482, 3.54088, 0.91", "-10.8429, -28.9326, 3.57856, 0.68", "-12.1195, -29.859, 3.69464, 0.68", "-13.1021, -30.4263, 3.81432, 0.91", "-15.0705, -31.3475, 4.12565, 0.91", "-16.6944, -32.0403, 4.42272, 0.91", "-18.1332, -32.6327, 4.71018, 1.14", "-19.6397, -33.2423, 5.01011, 1.14", "-21.4621, -34.0493, 5.29785, 0.91", "-22.9015, -34.7688, 5.45038, 1.14", "-23.6439, -35.1855, 5.47532, 1.14", "-25.349, -36.1404, 5.3763, 0.68", "-26.6248, -36.8167, 5.21399, 0.68", "-28.0458, -37.4923, 4.97603, 0.91", "-29.5957, -38.1682, 4.73932, 0.91", "-31.3064, -38.8836, 4.52591, 0.91", "-33.1148, -39.6419, 4.39669, 0.68", "-34.6116, -40.2289, 4.33511, 0.91", "-35.9441, -40.7295, 4.36617, 0.68", "-37.5173, -41.2525, 4.51113, 0.68", "-39.1989, -41.7686, 4.72128, 0.68", "-41.1121, -42.3635, 4.97383, 0.68", "-42.6237, -42.8488, 5.14399, 0.91", "-44.3351, -43.3896, 5.27535, 0.68", "-45.775, -43.8223, 5.31622, 0.91", "-46.8941, -44.1379, 5.28989, 0.91", "-48.4214, -44.5541, 5.21031, 0.68", "-49.6579, -44.8541, 5.12297, 0.68", "-50.4052, -45.0192, 5.06321, 0.68", "-52.4293, -45.3957, 4.86217, 0.91", "-55.168, -45.8236, 4.54522, 0.68", "-56.716, -45.9975, 4.36287, 0.68", "-58.3941, -46.1667, 4.15563, 0.91", "-59.9845, -46.3173, 3.955, 0.68", "-61.9215, -46.4381, 3.72362, 0.68", "-64.0969, -46.4264, 3.47565, 0.91", "-65.7079, -46.3205, 3.34036, 0.91" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "9.57129, -34.3686, 1.62853, 0.46", "8.92579, -35.5801, 0.549598, 0.46", "8.14825, -36.9941, -0.528701, 0.68", "7.51148, -38.0703, -1.31331, 0.68", "6.93875, -38.9303, -1.90145, 0.91", "6.31196, -39.7697, -2.47914, 0.91", "5.25103, -41.0491, -3.37617, 0.46", "4.55587, -41.8111, -3.86278, 0.46", "3.81644, -42.553, -4.31151, 0.46", "2.86659, -43.5362, -4.87035, 0.91", "2.08381, -44.4002, -5.3456, 0.46", "1.49866, -45.1196, -5.81252, 0.46", "1.01041, -45.945, -6.46766, 0.46", "0.844734, -46.5716, -7.04955, 0.23", "0.839833, -47.3926, -7.84537, 0.46", "0.91739, -47.8528, -8.31453, 0.23", "1.31882, -49.0952, -9.5222, 0.46", "1.66733, -49.9887, -10.3947, 0.46", "1.83327, -50.5317, -10.9502, 0.46", "1.96439, -51.4077, -11.8331, 0.91", "1.95425, -52.224, -12.6232, 0.23", "1.84131, -53.2336, -13.4983, 0.23", "1.78593, -53.5125, -13.7053, 0.23", "1.55313, -54.9152, -14.6528, 0.23", "1.5029, -55.706, -15.1589, 0.68", "1.52761, -56.9467, -15.9368, 0.68", "1.60724, -58.6363, -16.9701, 0.46", "1.66812, -59.6771, -17.5818, 0.23", "1.85446, -61.0273, -18.3042, 0.46", "2.18193, -62.4119, -18.9235, 0.23", "2.58801, -63.768, -19.4274, 0.23", "2.67553, -64.023, -19.4939, 0.23", "3.00018, -64.8832, -19.6476, 0.46", "3.53419, -66.2368, -19.844, 0.23", "4.08966, -67.7495, -20.0225, 0.68", "4.72836, -69.4726, -20.1728, 0.23", "5.4162, -71.2782, -20.2001, 0.23", "5.70319, -72.035, -20.1876, 0.23", "6.25914, -73.6016, -20.1022, 0.68", "6.68686, -75.0767, -19.9228, 0.23", "6.9144, -76.1586, -19.7458, 0.91", "7.19498, -78.4198, -19.3294, 0.23", "7.21928, -78.7694, -19.2789, 0.23", "7.2423, -80.0629, -19.1518, 0.46", "7.17847, -82.1539, -19.0241, 0.46", "7.04129, -84.5356, -18.9685, 0.23", "6.8634, -86.9689, -18.9731, 0.23", "6.73321, -88.6376, -19.0442, 0.91", "6.55701, -90.938, -19.1856, 0.23", "6.31566, -94.1806, -19.5021, 0.23", "6.2041, -95.4973, -19.6988, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "9.57129, -34.3686, 1.62853, 0.46", "10.5883, -36.5082, 0.407774, 0.46", "11.3514, -38.3019, -0.565016, 0.23", "12.0393, -40.0171, -1.53689, 0.46", "12.6953, -41.7623, -2.52582, 0.46", "13.2576, -43.3862, -3.41966, 0.68", "13.579, -44.4427, -3.98142, 0.68", "13.9456, -46.1216, -4.72159, 0.46", "14.133, -47.421, -5.24414, 0.46", "14.181, -48.0942, -5.4707, 0.46", "14.197, -49.1014, -5.74997, 0.68", "14.1942, -50.9054, -6.2013, 0.46", "14.186, -52.6149, -6.53956, 0.91", "14.1679, -53.6466, -6.69829, 0.68", "14.1123, -55.1737, -6.87721, 0.68", "14.0343, -56.7052, -7.04558, 0.68", "13.9569, -57.8622, -7.15781, 0.68", "13.8583, -59.2548, -7.20048, 0.91", "13.7258, -61.0115, -7.17995, 0.46", "13.6, -62.4013, -7.11225, 0.46", "13.4662, -63.6629, -7.00761, 0.91", "13.3532, -65.0375, -6.85001, 0.23", "13.252, -67.3623, -6.51713, 0.46", "13.2746, -68.5482, -6.34413, 0.46", "13.3994, -69.8035, -6.16925, 0.46", "13.5903, -70.9706, -6.03609, 0.23", "13.8724, -72.2433, -5.94946, 0.23", "14.1825, -73.3943, -5.94988, 0.23", "14.504, -74.4652, -6.02744, 0.23", "14.9453, -75.8026, -6.14526, 0.23", "15.3101, -76.982, -6.07808, 0.68", "15.9433, -79.2516, -5.67927, 0.46", "16.1605, -80.2667, -5.38404, 0.46", "16.3299, -81.2276, -5.02957, 0.68", "16.5043, -82.5246, -4.47511, 0.23", "16.9352, -87.0214, -2.33878, 0.46", "17.0116, -88.2966, -1.68961, 0.46", "17.0221, -90.2046, -0.677305, 0.46", "16.9831, -90.9806, -0.2963, 0.46", "16.9093, -91.7617, 0.0165718, 0.68", "16.7731, -92.7922, 0.242985, 1.14", "16.6489, -93.8278, 0.207629, 0.68", "16.5315, -94.8986, 0.0404081, 0.68", "16.4572, -96.4407, -0.42724, 0.68", "16.3975, -97.554, -0.887308, 0.91", "16.287, -98.9229, -1.55991, 0.91", "16.1775, -100.153, -2.26196, 1.37", "16.0192, -101.993, -3.41892, 0.68", "15.9086, -103.251, -4.2244, 0.68", "15.7275, -104.698, -5.16882, 0.23", "15.5365, -105.864, -5.93721, 0.23", "15.3317, -106.792, -6.50513, 0.46", "15.2013, -107.217, -6.75952, 0.23", "14.6745, -108.63, -7.4003, 0.23", "14.2868, -109.621, -7.748, 0.68" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "12.326, -21.4184, -0.191942, 0.68", "13.1247, -20.8078, -0.801384, 0.68", "13.6884, -20.5461, -1.20185, 0.68", "15.0607, -20.2868, -2.0835, 0.68", "16.097, -20.1302, -2.63372, 0.68", "17.0391, -19.9932, -2.99891, 0.68", "18.3202, -19.8559, -3.46763, 0.91", "19.5351, -19.8662, -3.85245, 0.68", "20.1816, -19.9379, -4.04515, 0.68", "22.0964, -20.2215, -4.61824, 0.68", "23.4428, -20.3565, -5.11117, 0.68", "24.8411, -20.3613, -5.75132, 0.68", "25.7879, -20.2841, -6.26067, 0.91", "27.28, -20.1136, -7.06582, 0.91", "28.1312, -19.9834, -7.53569, 0.91", "29.4634, -19.7965, -8.26655, 0.68", "30.3481, -19.6555, -8.75714, 0.68", "31.9352, -19.3535, -9.51929, 0.68", "33.7228, -19.0014, -10.288, 0.91", "35.1776, -18.7293, -10.771, 0.46", "36.2195, -18.6024, -11.019, 0.46", "37.3561, -18.4869, -11.2765, 0.46", "38.1111, -18.3855, -11.5331, 0.91", "38.5779, -18.2676, -11.7829, 1.14", "39.4035, -17.9813, -12.441, 0.68", "40.3538, -17.6139, -13.4429, 0.46", "41.6082, -17.0347, -15.2648, 0.46", "42.5206, -16.6298, -17.0956, 0.46", "43.1054, -16.4967, -18.6633, 0.46", "43.461, -16.4611, -19.7547, 0.46", "43.6678, -16.4229, -20.5543, 0.46", "44.0175, -16.3316, -22.0795, 0.46", "44.5165, -16.2607, -23.8928, 0.46", "45.2551, -16.0785, -25.6888, 0.46", "45.8001, -15.7921, -26.6717, 0.46", "46.9549, -14.7695, -28.3068, 0.46", "47.2528, -14.4408, -28.6763, 0.46", "47.6682, -13.9356, -29.1107, 0.46", "48.6063, -12.8703, -30.0444, 0.91", "49.5273, -12.056, -31.0649, 0.46", "49.92, -11.8518, -31.5401, 0.46", "51.2928, -11.5561, -33.3578, 0.91", "51.7207, -11.5071, -33.9697, 0.23", "53.0216, -11.5337, -36.0042, 0.23", "54.1035, -11.7672, -37.838, 0.23", "54.467, -11.9007, -38.4669, 0.68", "55.3538, -12.3054, -40.0692, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "12.326, -21.4184, -0.191942, 0.91", "13.4124, -22.8955, 1.18883, 0.91", "14.5199, -24.4014, 2.59648, 0.91", "15.6126, -25.8871, 3.98521, 0.91", "16.2388, -26.7386, 4.78113, 1.14" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "16.2388, -26.7386, 4.78113, 1.14", "16.6181, -27.5733, 4.07043, 1.14", "17.0483, -28.5348, 3.42664, 0.91", "17.9992, -30.3955, 2.49425, 0.91", "18.8533, -31.9094, 1.8441, 0.68", "19.7435, -33.3229, 1.31985, 0.68", "20.5048, -34.4147, 0.924138, 0.68", "21.4697, -35.6925, 0.521041, 0.68", "22.7648, -37.2382, 0.174102, 0.91", "23.1748, -37.6668, 0.128444, 0.68", "24.1667, -38.5977, 0.0785129, 0.68", "25.3038, -39.5594, 0.0229715, 0.68", "26.2183, -40.2445, -0.0378149, 0.91", "27.8587, -41.4436, -0.19933, 0.91", "28.4322, -41.8871, -0.267408, 0.68", "29.4924, -42.7496, -0.383333, 0.68", "30.7448, -43.8254, -0.47501, 0.68", "32.0953, -45.0425, -0.456789, 0.68", "32.9291, -45.8459, -0.410866, 0.68", "34.1722, -47.0703, -0.299816, 0.91", "34.8123, -47.6748, -0.231781, 0.46", "35.6814, -48.4446, -0.111895, 0.68", "37.3075, -49.8587, 0.0728807, 0.68", "38.4162, -50.7987, 0.172292, 0.68", "40.1773, -52.1897, 0.309449, 0.46", "41.5524, -53.2699, 0.392751, 0.91", "43.2898, -54.7229, 0.42649, 0.68", "44.7311, -55.97, 0.339626, 0.68", "45.5618, -56.705, 0.239713, 1.37", "46.3925, -57.4742, 0.120312, 1.14", "48.1864, -59.3028, -0.174491, 0.68", "49.5944, -60.8122, -0.409629, 0.68", "50.5376, -61.8516, -0.559765, 0.68", "51.7988, -63.2127, -0.705248, 0.68", "53.3512, -64.8207, -0.86425, 0.91", "54.5085, -65.8901, -0.958639, 0.68", "56.1383, -67.1831, -1.13861, 0.68", "57.6773, -68.2422, -1.36893, 0.68", "58.8263, -68.9289, -1.56703, 1.14", "59.8499, -69.3898, -1.8217, 0.91", "62.34, -70.0112, -2.62687, 0.46", "64.4104, -70.0817, -3.44447, 0.46", "65.5845, -69.8208, -3.99385, 0.91", "66.3934, -69.4702, -4.39192, 0.68", "67.6622, -68.7118, -5.066, 0.46", "68.4619, -68.1285, -5.52182, 0.46", "69.2271, -67.4997, -5.94884, 0.68", "69.8538, -67.0226, -6.24396, 0.46", "70.6846, -66.4896, -6.63188, 0.46", "71.8376, -65.9441, -7.1835, 0.46", "73.4098, -65.5212, -7.88998, 0.91", "74.2819, -65.3948, -8.30325, 0.91", "75.5828, -65.3711, -8.90151, 0.91", "76.6722, -65.4285, -9.41938, 0.68", "77.6922, -65.5544, -9.90728, 0.68", "79.3935, -65.8783, -10.6629, 0.91", "80.5406, -66.1725, -11.1642, 0.23", "82.4308, -66.7138, -11.9714, 0.23", "83.5306, -67.0788, -12.3491, 0.46", "85.1914, -67.6571, -12.8185, 1.14", "86.0098, -67.9575, -12.9862, 0.46", "87.2141, -68.4631, -13.1228, 0.23", "88.1915, -68.8703, -13.1386, 0.23", "90.4253, -69.7957, -13.0461, 0.68", "91.2604, -70.1378, -12.9748, 0.46", "93.2209, -70.9472, -12.7196, 0.46", "94.6942, -71.548, -12.5084, 0.46", "97.0111, -72.4339, -12.1598, 0.68", "98.3008, -72.9251, -11.984, 0.23", "99.7975, -73.48, -11.7719, 0.68", "101.901, -74.2918, -11.4122, 0.23", "103.341, -74.9181, -11.1278, 0.23", "104.311, -75.3774, -10.9061, 0.23", "105.494, -76.008, -10.6168, 0.23", "107.146, -76.9524, -10.1404, 0.23", "108.074, -77.575, -9.84123, 0.68", "109.428, -78.6349, -9.3412, 0.46", "110.328, -79.4325, -8.96498, 0.46", "111.284, -80.3221, -8.54484, 0.91", "112.703, -81.6543, -7.92333, 0.23", "113.781, -82.7224, -7.47793, 0.23", "115.048, -84.0072, -6.94158, 0.23", "115.798, -84.797, -6.63495, 0.68", "116.712, -85.8262, -6.29532, 0.23", "117.124, -86.3275, -6.11473, 0.46", "117.817, -87.1763, -5.81617, 0.91", "118.112, -87.4906, -5.69558, 0.46", "119.105, -88.4563, -5.2812, 0.23", "119.99, -89.3266, -4.87716, 0.46", "121.488, -90.8733, -4.07889, 0.23", "122.666, -92.0692, -3.40117, 0.46", "124.061, -93.422, -2.58467, 0.68", "125.248, -94.5105, -1.87846, 0.23", "126.0, -95.1554, -1.43326, 0.23", "127.099, -96.0536, -0.817688, 0.23", "127.482, -96.3699, -0.623571, 0.23", "128.238, -97.0781, -0.14047, 0.68", "129.729, -98.8322, 1.09147, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "16.2388, -26.7386, 4.78113, 0.68", "15.532, -27.524, 3.69393, 0.68", "14.9699, -28.3061, 2.75025, 0.68", "14.4725, -29.2712, 1.82657, 0.68", "14.1169, -30.3226, 1.00321, 0.68", "13.8723, -31.5366, 0.168931, 0.68", "13.7702, -32.6185, -0.489164, 0.68", "13.842, -34.0789, -1.18095, 0.91", "14.1619, -35.7863, -1.90706, 0.91", "14.5885, -37.1773, -2.462, 0.91", "14.9996, -38.1827, -2.8714, 0.91", "15.4719, -39.1221, -3.29469, 0.68", "15.9758, -39.9282, -3.72727, 0.68", "16.6676, -40.9395, -4.38666, 0.68", "16.89, -41.2245, -4.60893, 0.68", "17.5494, -42.0363, -5.31035, 0.68", "18.3766, -43.0653, -6.13315, 1.14", "19.3394, -44.3053, -7.0026, 0.46", "19.9125, -45.1109, -7.44861, 0.46", "20.7073, -46.3019, -7.93426, 0.46", "21.2389, -47.1869, -8.22894, 0.46", "21.9628, -48.5876, -8.61361, 0.46", "22.3708, -49.5102, -8.83818, 1.14", "22.7994, -50.7704, -9.12925, 0.46", "23.1055, -51.9003, -9.36407, 0.46", "23.4067, -53.4245, -9.63118, 1.14", "23.7083, -55.4135, -9.92772, 0.68", "23.7782, -56.1005, -10.0419, 1.14", "23.8542, -57.9252, -10.3981, 0.46", "23.855, -58.8323, -10.5911, 0.68", "23.8289, -59.5166, -10.7369, 0.91", "23.7135, -60.5455, -10.9315, 0.23", "23.5171, -61.633, -11.1659, 0.46", "23.2314, -62.8571, -11.4672, 0.23", "22.9872, -63.9103, -11.7342, 0.46", "22.8076, -64.7248, -11.9557, 0.23", "22.5625, -66.0856, -12.3203, 0.23", "22.4079, -67.2207, -12.638, 0.91", "22.2794, -68.5447, -13.0326, 0.23", "22.1779, -70.3117, -13.657, 0.23", "22.1521, -71.2837, -14.0403, 0.23", "22.1556, -72.517, -14.5515, 0.68", "22.1886, -74.2452, -15.2652, 0.23", "22.211, -75.7992, -15.8718, 1.14", "22.1642, -78.125, -16.6647, 0.23", "22.0687, -79.2007, -16.9629, 0.23", "21.9374, -80.0278, -17.1048, 0.23", "21.624, -81.4206, -17.2114, 0.46", "21.3506, -82.3143, -17.1645, 0.23", "20.5368, -84.2138, -16.8665, 0.23", "20.2509, -84.7607, -16.7451, 0.23", "19.6254, -85.8169, -16.4881, 0.68", "19.2647, -86.4083, -16.341, 0.46", "18.3987, -87.8083, -16.0152, 0.46", "17.66, -88.9784, -15.7866, 0.46", "17.0401, -90.0067, -15.6955, 0.46", "16.4348, -91.1193, -15.6749, 0.68", "16.0345, -91.9511, -15.7347, 0.91", "15.4874, -93.358, -15.9562, 0.23", "15.2095, -94.413, -16.2252, 0.46", "14.8206, -96.6605, -16.9318, 0.23", "14.7006, -97.7255, -17.304, 0.46", "14.613, -99.1844, -17.8831, 0.23", "14.5808, -100.787, -18.5394, 0.91", "14.612, -102.37, -19.1733, 0.23", "14.6996, -104.155, -19.825, 0.23", "14.786, -105.443, -20.2469, 0.23", "14.8304, -106.431, -20.5293, 0.23", "14.8717, -107.589, -20.8039, 0.46", "14.9116, -109.101, -21.1054, 0.23", "14.9471, -110.282, -21.3073, 0.46", "15.0369, -111.868, -21.6098, 0.23", "15.1367, -113.015, -21.8272, 0.23", "15.2424, -114.02, -22.0014, 0.46", "15.4122, -115.411, -22.2649, 0.23", "15.5588, -116.406, -22.4681, 0.91", "15.8287, -117.952, -22.7827, 0.23", "16.0766, -119.121, -22.9823, 0.46" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_36", "dend_23", "dend_20", "dend_17", "dend_0", "dend_51", "dend_48", "dend_40", "dend_37", "dend_29", "dend_24", "dend_22", "dend_21", "dend_19", "dend_18", "dend_16", "dend_1", "dend_50", "dend_49", "dend_42", "dend_41", "dend_39", "dend_38", "dend_31", "dend_30", "dend_26", "dend_25", "dend_11", "dend_2", "dend_44", "dend_43", "dend_35", "dend_32", "dend_28", "dend_27", "dend_13", "dend_12", "dend_8", "dend_3", "dend_46", "dend_45", "dend_34", "dend_33", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_4", "dend_6", "dend_5" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_36", "dend_23", "dend_20", "dend_17", "dend_0", "dend_51", "dend_48", "dend_40", "dend_37", "dend_29", "dend_24", "dend_22", "dend_21", "dend_19", "dend_18", "dend_16", "dend_1", "dend_50", "dend_49", "dend_42", "dend_41", "dend_39", "dend_38", "dend_31", "dend_30", "dend_26", "dend_25", "dend_11", "dend_2", "dend_44", "dend_43", "dend_35", "dend_32", "dend_28", "dend_27", "dend_13", "dend_12", "dend_8", "dend_3", "dend_46", "dend_45", "dend_34", "dend_33", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_4", "dend_6", "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_DLAC_d80e9f2875_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_36, dend_23, dend_20, dend_17, dend_0, dend_51, dend_48, dend_40, dend_37, dend_29, dend_24, dend_22, dend_21, dend_19, dend_18, dend_16, dend_1, dend_50, dend_49, dend_42, dend_41, dend_39, dend_38, dend_31, dend_30, dend_26, dend_25, dend_11, dend_2, dend_44, dend_43, dend_35, dend_32, dend_28, dend_27, dend_13, dend_12, dend_8, dend_3, dend_46, dend_45, dend_34, dend_33, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_6, dend_5]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_36, dend_23, dend_20, dend_17, dend_0, dend_51, dend_48, dend_40, dend_37, dend_29, dend_24, dend_22, dend_21, dend_19, dend_18, dend_16, dend_1, dend_50, dend_49, dend_42, dend_41, dend_39, dend_38, dend_31, dend_30, dend_26, dend_25, dend_11, dend_2, dend_44, dend_43, dend_35, dend_32, dend_28, dend_27, dend_13, dend_12, dend_8, dend_3, dend_46, dend_45, dend_34, dend_33, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_6, dend_5]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.49999995275163395)
    connect dend_36(0), soma_0(0.49999995275163395)
    connect dend_23(0), soma_0(0.49999995275163395)
    connect dend_20(0), soma_0(0.49999995275163395)
    connect dend_17(0), soma_0(0.49999995275163395)
    connect dend_0(0), soma_0(0.49999995275163395)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 4.5642, -4.64919, 0.0, 2.85845 ) }
    soma_0 { pt3dadd( 4.09787, -4.12482, 0.0, 5.08473 ) }
    soma_0 { pt3dadd( 3.63154, -3.60045, 0.0, 7.56988 ) }
    soma_0 { pt3dadd( 3.16521, -3.07609, 0.0, 8.83361 ) }
    soma_0 { pt3dadd( 2.69888, -2.55172, 0.0, 9.78072 ) }
    soma_0 { pt3dadd( 2.23255, -2.02735, 0.0, 10.5453 ) }
    soma_0 { pt3dadd( 1.76622, -1.50298, 0.0, 10.9152 ) }
    soma_0 { pt3dadd( 1.29989, -0.978607, 0.0, 11.285 ) }
    soma_0 { pt3dadd( 0.833561, -0.454238, 0.0, 11.5359 ) }
    soma_0 { pt3dadd( 0.367231, 0.0701319, 0.0, 11.6001 ) }
    soma_0 { pt3dadd( -0.0990985, 0.594501, 0.0, 11.6207 ) }
    soma_0 { pt3dadd( -0.565428, 1.11887, 0.0, 11.6137 ) }
    soma_0 { pt3dadd( -1.03176, 1.64324, 0.0, 11.5549 ) }
    soma_0 { pt3dadd( -1.49809, 2.16761, 0.0, 11.373 ) }
    soma_0 { pt3dadd( -1.96442, 2.69198, 0.0, 10.6339 ) }
    soma_0 { pt3dadd( -2.43075, 3.21635, 0.0, 9.70405 ) }
    soma_0 { pt3dadd( -2.89708, 3.74072, 0.0, 8.75099 ) }
    soma_0 { pt3dadd( -3.36341, 4.26509, 0.0, 7.74649 ) }
    soma_0 { pt3dadd( -3.82974, 4.78946, 0.0, 6.26799 ) }
    soma_0 { pt3dadd( -4.29607, 5.31383, 0.0, 4.55859 ) }
    soma_0 { pt3dadd( -4.76239, 5.8382, 0.0, 2.68355 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -3.42892, 6.3438, 5.77, 2.05 ) }
    dend_47 { pt3dadd( -3.42892, 6.3438, 5.77, 2.05 ) }
    dend_47 { pt3dadd( -4.12682, 6.90092, 5.73665, 1.37 ) }
    dend_47 { pt3dadd( -5.75442, 7.82499, 5.44187, 1.37 ) }
    dend_47 { pt3dadd( -7.30916, 8.4263, 4.98152, 1.59 ) }
    dend_47 { pt3dadd( -8.63768, 8.82094, 4.47057, 1.59 ) }
    dend_47 { pt3dadd( -10.6337, 9.35685, 3.62079, 1.14 ) }
    dend_47 { pt3dadd( -12.257, 9.75981, 2.6666, 1.14 ) }
    dend_47 { pt3dadd( -13.8177, 10.0206, 1.61712, 1.14 ) }
    dend_47 { pt3dadd( -15.096, 10.1008, 0.612368, 1.14 ) }
    dend_47 { pt3dadd( -16.0679, 10.0966, -0.291974, 1.14 ) }
    dend_47 { pt3dadd( -16.3262, 10.0826, -0.561146, 1.14 ) }
    dend_47 { pt3dadd( -18.405, 9.96198, -2.74275, 1.59 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 34/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 5.64108, 0.748305, 4.19, 1.37 ) }
    dend_36 { pt3dadd( 5.64108, 0.748305, 4.19, 1.37 ) }
    dend_36 { pt3dadd( 6.80134, 0.467754, 3.8285, 1.37 ) }
    dend_36 { pt3dadd( 9.33874, -0.14579, 3.03793, 1.37 ) }
    dend_36 { pt3dadd( 10.8657, -0.515003, 2.56219, 1.37 ) }
    dend_36 { pt3dadd( 12.0259, -0.795554, 2.2007, 1.37 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 40/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -5.91892, 0.216304, -0.93, 2.05 ) }
    dend_23 { pt3dadd( -5.91892, 0.216304, -0.93, 2.05 ) }
    dend_23 { pt3dadd( -6.59128, 0.0921816, -1.16595, 2.05 ) }
    dend_23 { pt3dadd( -8.35363, -0.233167, -1.78441, 1.82 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 44/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.70892, -1.6932, 10.0, 1.37 ) }
    dend_20 { pt3dadd( -4.70892, -1.6932, 10.0, 1.37 ) }
    dend_20 { pt3dadd( -6.19046, -2.31546, 9.97747, 1.37 ) }
    dend_20 { pt3dadd( -7.75673, -2.97332, 9.95365, 1.37 ) }
    dend_20 { pt3dadd( -10.0095, -3.9195, 9.91938, 1.37 ) }
    dend_20 { pt3dadd( -11.8949, -4.71141, 9.89071, 0.91 ) }
    dend_20 { pt3dadd( -13.2077, -5.26277, 9.87074, 1.37 ) }
    dend_20 { pt3dadd( -14.8405, -5.99442, 9.8425, 1.59 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -2.67892, -1.6742, -9.88, 0.91 ) }
    dend_17 { pt3dadd( -2.67892, -1.6742, -9.88, 0.91 ) }
    dend_17 { pt3dadd( -3.60972, -2.71682, -9.81994, 0.91 ) }
    dend_17 { pt3dadd( -4.94946, -4.48214, -9.56326, 1.14 ) }
    dend_17 { pt3dadd( -5.83398, -5.8549, -9.23712, 0.91 ) }
    dend_17 { pt3dadd( -6.81723, -7.57593, -8.75525, 0.91 ) }
    dend_17 { pt3dadd( -7.60014, -9.05775, -8.32138, 1.14 ) }
    dend_17 { pt3dadd( -8.3091, -10.5852, -7.89926, 1.37 ) }
    dend_17 { pt3dadd( -8.78654, -11.9238, -7.59652, 0.91 ) }
    dend_17 { pt3dadd( -9.21903, -13.4908, -7.37742, 0.91 ) }
    dend_17 { pt3dadd( -9.45533, -14.3977, -7.33753, 0.91 ) }
    dend_17 { pt3dadd( -10.004, -16.0016, -7.44766, 0.91 ) }
    dend_17 { pt3dadd( -10.7645, -17.3258, -7.81584, 0.46 ) }
    dend_17 { pt3dadd( -12.0171, -18.798, -8.47417, 0.46 ) }
    dend_17 { pt3dadd( -13.0004, -19.8038, -9.05346, 0.46 ) }
    dend_17 { pt3dadd( -13.8268, -20.535, -9.56768, 0.46 ) }
    dend_17 { pt3dadd( -15.3597, -21.6914, -10.4638, 1.14 ) }
    dend_17 { pt3dadd( -16.9944, -22.6621, -11.2865, 1.14 ) }
    dend_17 { pt3dadd( -18.0127, -23.112, -11.6258, 1.37 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 71/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.95108, -4.9517, 1.37, 2.96 ) }
    dend_0 { pt3dadd( 1.95108, -4.9517, 1.37, 2.96 ) }
    dend_0 { pt3dadd( 2.04811, -6.31033, 1.32893, 2.51 ) }
    dend_0 { pt3dadd( 2.1344, -7.51867, 1.2924, 2.05 ) }
    dend_0 { pt3dadd( 2.21968, -8.71277, 1.2563, 2.05 ) }
    dend_0 { pt3dadd( 2.28176, -9.58204, 1.23002, 2.05 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 77/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -4.76239, 5.8382, 0.0, 0.677683 ) }
    axon_0 { pt3dadd( -14.7305, 17.047, 0.0, 0.677683 ) }
    axon_0 { pt3dadd( -24.6986, 28.2557, 0.0, 0.677683 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 80/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -18.405, 9.96198, -2.74275, 0.68 ) }
    dend_51 { pt3dadd( -18.6482, 11.0793, -3.15927, 0.68 ) }
    dend_51 { pt3dadd( -18.9964, 12.3427, -3.56272, 0.46 ) }
    dend_51 { pt3dadd( -19.5573, 13.98, -4.02237, 0.46 ) }
    dend_51 { pt3dadd( -20.143, 15.388, -4.37589, 0.46 ) }
    dend_51 { pt3dadd( -21.1709, 17.506, -4.89468, 0.46 ) }
    dend_51 { pt3dadd( -22.3161, 19.8656, -5.47264, 0.46 ) }
    dend_51 { pt3dadd( -23.3942, 21.8726, -5.98103, 0.46 ) }
    dend_51 { pt3dadd( -24.3738, 23.543, -6.37315, 0.46 ) }
    dend_51 { pt3dadd( -25.4419, 25.194, -6.67503, 0.68 ) }
    dend_51 { pt3dadd( -26.7951, 27.0639, -6.94581, 0.68 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -18.405, 9.96198, -2.74275, 1.14 ) }
    dend_48 { pt3dadd( -19.365, 10.8835, -5.12275, 1.14 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 93/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 12.0259, -0.795554, 2.2007, 1.37 ) }
    dend_40 { pt3dadd( 12.0298, -0.977146, 1.45736, 1.37 ) }
    dend_40 { pt3dadd( 12.0393, -1.42124, -0.36052, 1.37 ) }
    dend_40 { pt3dadd( 12.0501, -1.92872, -2.43788, 1.14 ) }
    dend_40 { pt3dadd( 12.0582, -2.3092, -3.99536, 1.14 ) }
    dend_40 { pt3dadd( 12.0643, -2.59424, -5.16216, 1.14 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 99/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 12.0259, -0.795554, 2.2007, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_37 { pt3dadd( 11.8709, -0.0702299, 2.80131, 0.91 ) }
    dend_37 { pt3dadd( 11.7923, 0.631473, 3.29491, 0.68 ) }
    dend_37 { pt3dadd( 12.226, 2.38347, 4.12007, 0.68 ) }
    dend_37 { pt3dadd( 12.4195, 3.16509, 4.4882, 0.46 ) }
    dend_37 { pt3dadd( 12.6091, 3.93115, 4.849, 0.46 ) }
    dend_37 { pt3dadd( 12.8057, 4.7251, 5.22294, 0.46 ) }
    dend_37 { pt3dadd( 12.7864, 5.59855, 5.72092, 0.68 ) }
    dend_37 { pt3dadd( 14.1336, 5.95482, 4.96225, 1.14 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 8/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -8.35363, -0.233167, -1.78441, 1.37 ) }
    dend_29 { pt3dadd( -9.37223, 0.297438, -1.95939, 1.37 ) }
    dend_29 { pt3dadd( -10.7844, 1.03304, -2.20198, 1.37 ) }
    dend_29 { pt3dadd( -11.8872, 1.60752, -2.39143, 1.37 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 12/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -8.35363, -0.233167, -1.78441, 0.91 ) }
    dend_24 { pt3dadd( -9.11556, -1.49284, -1.75467, 0.91 ) }
    dend_24 { pt3dadd( -9.6292, -2.18278, -1.679, 0.91 ) }
    dend_24 { pt3dadd( -10.9971, -3.63059, -1.37026, 1.14 ) }
    dend_24 { pt3dadd( -12.1824, -4.57903, -1.01078, 1.37 ) }
    dend_24 { pt3dadd( -13.2259, -5.31225, -0.672731, 0.91 ) }
    dend_24 { pt3dadd( -14.92, -6.44333, -0.136092, 0.68 ) }
    dend_24 { pt3dadd( -15.8915, -6.99776, 0.168116, 0.68 ) }
    dend_24 { pt3dadd( -17.4388, -7.78466, 0.620214, 0.91 ) }
    dend_24 { pt3dadd( -19.6294, -8.79643, 1.22157, 0.91 ) }
    dend_24 { pt3dadd( -20.6215, -9.28852, 1.46567, 0.91 ) }
    dend_24 { pt3dadd( -22.3118, -10.2602, 1.82575, 1.14 ) }
    dend_24 { pt3dadd( -23.4979, -11.0259, 2.01247, 0.68 ) }
    dend_24 { pt3dadd( -24.9512, -12.023, 2.14237, 0.68 ) }
    dend_24 { pt3dadd( -25.6676, -12.5189, 2.17082, 1.14 ) }
    dend_24 { pt3dadd( -27.6047, -13.7722, 2.17082, 1.14 ) }
    dend_24 { pt3dadd( -28.3766, -14.1963, 2.1565, 0.68 ) }
    dend_24 { pt3dadd( -29.7127, -14.8677, 2.12672, 0.68 ) }
    dend_24 { pt3dadd( -31.241, -15.5709, 2.0859, 1.14 ) }
    dend_24 { pt3dadd( -32.5499, -16.096, 2.04317, 0.91 ) }
    dend_24 { pt3dadd( -34.0848, -16.585, 1.98345, 0.91 ) }
    dend_24 { pt3dadd( -35.2643, -16.7836, 1.92599, 0.91 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -14.8405, -5.99442, 9.8425, 1.14 ) }
    dend_22 { pt3dadd( -15.9789, -7.43506, 8.90115, 1.14 ) }
    dend_22 { pt3dadd( -16.9005, -8.73311, 8.21074, 1.14 ) }
    dend_22 { pt3dadd( -17.5936, -9.81296, 7.64175, 1.14 ) }
    dend_22 { pt3dadd( -18.4714, -11.3805, 6.85192, 1.14 ) }
    dend_22 { pt3dadd( -18.9484, -12.2875, 6.43588, 1.14 ) }
    dend_22 { pt3dadd( -19.3182, -12.9802, 6.16063, 0.91 ) }
    dend_22 { pt3dadd( -19.9409, -14.1562, 5.79153, 0.91 ) }
    dend_22 { pt3dadd( -20.5203, -15.1652, 5.48208, 0.68 ) }
    dend_22 { pt3dadd( -21.1974, -16.1486, 5.13213, 0.68 ) }
    dend_22 { pt3dadd( -22.2238, -17.3871, 4.58784, 0.91 ) }
    dend_22 { pt3dadd( -23.8989, -19.0826, 3.75734, 0.68 ) }
    dend_22 { pt3dadd( -24.8577, -19.9125, 3.37376, 0.68 ) }
    dend_22 { pt3dadd( -26.0632, -20.7552, 3.04892, 0.91 ) }
    dend_22 { pt3dadd( -27.375, -21.5278, 2.87323, 0.68 ) }
    dend_22 { pt3dadd( -29.1038, -22.4119, 2.83499, 0.68 ) }
    dend_22 { pt3dadd( -30.6544, -23.1242, 2.96406, 0.68 ) }
    dend_22 { pt3dadd( -32.0464, -23.747, 3.2185, 0.46 ) }
    dend_22 { pt3dadd( -33.591, -24.5353, 3.67468, 0.46 ) }
    dend_22 { pt3dadd( -34.8251, -25.3425, 4.22947, 0.46 ) }
    dend_22 { pt3dadd( -35.7992, -26.0431, 4.81595, 0.46 ) }
    dend_22 { pt3dadd( -36.2071, -26.3692, 5.12952, 0.46 ) }
    dend_22 { pt3dadd( -36.8433, -26.9365, 5.66165, 0.23 ) }
    dend_22 { pt3dadd( -37.4833, -27.7673, 6.11526, 0.23 ) }
    dend_22 { pt3dadd( -37.8351, -28.996, 6.43066, 0.68 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 59/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.8405, -5.99442, 9.8425, 0.91 ) }
    dend_21 { pt3dadd( -16.4968, -5.76363, 11.2672, 0.91 ) }
    dend_21 { pt3dadd( -17.8504, -5.45069, 12.2695, 0.91 ) }
    dend_21 { pt3dadd( -19.0956, -5.01082, 13.0384, 0.91 ) }
    dend_21 { pt3dadd( -20.3317, -4.40766, 13.6512, 0.91 ) }
    dend_21 { pt3dadd( -21.9379, -3.23029, 14.1817, 0.91 ) }
    dend_21 { pt3dadd( -22.4465, -2.74218, 14.3177, 0.68 ) }
    dend_21 { pt3dadd( -23.0425, -2.00091, 14.3883, 0.68 ) }
    dend_21 { pt3dadd( -23.9074, -0.645108, 14.4029, 0.68 ) }
    dend_21 { pt3dadd( -24.4774, 0.351807, 14.4225, 0.68 ) }
    dend_21 { pt3dadd( -25.8169, 2.75744, 14.5416, 0.68 ) }
    dend_21 { pt3dadd( -26.8384, 4.57779, 14.7142, 0.68 ) }
    dend_21 { pt3dadd( -27.7019, 6.11021, 14.9111, 0.68 ) }
    dend_21 { pt3dadd( -28.4103, 7.30448, 15.1328, 0.46 ) }
    dend_21 { pt3dadd( -29.4442, 8.89788, 15.5677, 0.46 ) }
    dend_21 { pt3dadd( -30.3137, 10.1203, 16.0009, 0.46 ) }
    dend_21 { pt3dadd( -31.3998, 11.4197, 16.6174, 0.46 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -18.0127, -23.112, -11.6258, 0.68 ) }
    dend_19 { pt3dadd( -19.5463, -23.604, -11.6929, 0.68 ) }
    dend_19 { pt3dadd( -19.5034, -24.754, -12.7294, 0.68 ) }
    dend_19 { pt3dadd( -19.5646, -25.3966, -13.2614, 0.68 ) }
    dend_19 { pt3dadd( -19.7145, -26.2751, -14.0412, 0.68 ) }
    dend_19 { pt3dadd( -19.8744, -26.8795, -14.6751, 0.91 ) }
    dend_19 { pt3dadd( -20.2185, -27.824, -15.7568, 0.46 ) }
    dend_19 { pt3dadd( -20.4086, -28.3837, -16.4742, 0.46 ) }
    dend_19 { pt3dadd( -20.7571, -29.0412, -17.4567, 0.46 ) }
    dend_19 { pt3dadd( -21.1952, -29.5772, -18.3166, 0.46 ) }
    dend_19 { pt3dadd( -21.8264, -30.1521, -19.2026, 1.14 ) }
    dend_19 { pt3dadd( -22.1345, -30.3907, -19.5587, 1.37 ) }
    dend_19 { pt3dadd( -22.7289, -30.8176, -20.0699, 1.14 ) }
    dend_19 { pt3dadd( -23.57, -31.3726, -20.7052, 0.68 ) }
    dend_19 { pt3dadd( -24.3778, -31.889, -21.2874, 0.68 ) }
    dend_19 { pt3dadd( -24.823, -32.1683, -21.6002, 0.91 ) }
    dend_19 { pt3dadd( -25.2685, -32.4413, -21.9085, 0.46 ) }
    dend_19 { pt3dadd( -26.5499, -33.15, -22.8041, 0.46 ) }
    dend_19 { pt3dadd( -27.6285, -33.6382, -23.5276, 0.68 ) }
    dend_19 { pt3dadd( -29.2148, -34.0068, -24.4536, 0.23 ) }
    dend_19 { pt3dadd( -29.99, -34.0639, -24.8126, 0.46 ) }
    dend_19 { pt3dadd( -30.4818, -34.0694, -25.014, 0.91 ) }
    dend_19 { pt3dadd( -31.1755, -34.0523, -25.2848, 1.59 ) }
    dend_19 { pt3dadd( -31.884, -34.0246, -25.5121, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_19 { pt3dadd( -34.3683, -34.0518, -26.1713, 0.68 ) }
    dend_19 { pt3dadd( -35.8479, -34.1753, -26.4981, 0.68 ) }
    dend_19 { pt3dadd( -36.6905, -34.3068, -26.7254, 0.68 ) }
    dend_19 { pt3dadd( -38.0183, -34.5841, -27.1894, 0.68 ) }
    dend_19 { pt3dadd( -39.2621, -34.8857, -27.7369, 1.14 ) }
    dend_19 { pt3dadd( -40.8028, -35.3392, -28.6085, 0.46 ) }
    dend_19 { pt3dadd( -41.9256, -35.743, -29.4083, 0.46 ) }
    dend_19 { pt3dadd( -43.071, -36.1465, -30.3411, 0.46 ) }
    dend_19 { pt3dadd( -43.7395, -36.3499, -30.9092, 0.91 ) }
    dend_19 { pt3dadd( -44.7242, -36.6345, -31.8139, 0.23 ) }
    dend_19 { pt3dadd( -45.9213, -36.9959, -33.0142, 0.23 ) }
    dend_19 { pt3dadd( -46.5815, -37.2073, -33.6273, 0.23 ) }
    dend_19 { pt3dadd( -46.983, -37.3389, -33.9663, 0.91 ) }
    dend_19 { pt3dadd( -48.1075, -37.7826, -34.6942, 0.23 ) }
    dend_19 { pt3dadd( -49.4176, -38.3406, -35.3271, 0.23 ) }
    dend_19 { pt3dadd( -50.1622, -38.6845, -35.5974, 0.46 ) }
    dend_19 { pt3dadd( -51.7822, -39.4509, -36.0185, 0.23 ) }
    dend_19 { pt3dadd( -52.678, -39.8934, -36.1988, 1.14 ) }
    dend_19 { pt3dadd( -54.6996, -40.9797, -36.5123, 0.23 ) }
    dend_19 { pt3dadd( -56.0415, -41.79, -36.6272, 0.23 ) }
    dend_19 { pt3dadd( -56.7784, -42.2564, -36.6776, 0.23 ) }
    dend_19 { pt3dadd( -57.7353, -42.9012, -36.7589, 0.23 ) }
    dend_19 { pt3dadd( -57.9611, -43.0618, -36.78, 0.68 ) }
    dend_19 { pt3dadd( -58.6384, -43.5653, -36.8465, 1.37 ) }
    dend_19 { pt3dadd( -60.2045, -44.7761, -37.0436, 0.23 ) }
    dend_19 { pt3dadd( -62.0278, -46.2295, -37.3157, 0.23 ) }
    dend_19 { pt3dadd( -64.0249, -47.7722, -37.6454, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 27/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -18.0127, -23.112, -11.6258, 0.68 ) }
    dend_18 { pt3dadd( -19.2157, -25.7044, -11.4988, 0.68 ) }
    dend_18 { pt3dadd( -19.8286, -26.7613, -11.603, 0.68 ) }
    dend_18 { pt3dadd( -20.4861, -27.739, -11.7912, 0.68 ) }
    dend_18 { pt3dadd( -21.1992, -28.783, -12.0189, 0.91 ) }
    dend_18 { pt3dadd( -21.9375, -29.9353, -12.2728, 1.14 ) }
    dend_18 { pt3dadd( -22.6171, -31.1015, -12.5403, 0.91 ) }
    dend_18 { pt3dadd( -23.2681, -32.28, -12.9394, 0.91 ) }
    dend_18 { pt3dadd( -23.8889, -33.5162, -13.342, 0.68 ) }
    dend_18 { pt3dadd( -24.3241, -34.6807, -13.6693, 0.46 ) }
    dend_18 { pt3dadd( -24.5234, -35.5521, -13.8561, 0.46 ) }
    dend_18 { pt3dadd( -24.5761, -36.6277, -14.0319, 0.68 ) }
    dend_18 { pt3dadd( -24.4772, -37.5288, -14.1137, 1.14 ) }
    dend_18 { pt3dadd( -24.3748, -38.0351, -14.1403, 0.46 ) }
    dend_18 { pt3dadd( -24.1261, -39.0298, -14.1852, 0.46 ) }
    dend_18 { pt3dadd( -24.0295, -39.4485, -14.2209, 0.91 ) }
    dend_18 { pt3dadd( -23.7703, -40.8439, -14.3764, 1.14 ) }
    dend_18 { pt3dadd( -23.558, -42.3518, -14.6246, 0.91 ) }
    dend_18 { pt3dadd( -23.4328, -43.7213, -14.9203, 0.68 ) }
    dend_18 { pt3dadd( -23.3707, -45.0272, -15.2818, 0.68 ) }
    dend_18 { pt3dadd( -23.3923, -45.9818, -15.628, 0.68 ) }
    dend_18 { pt3dadd( -23.4765, -46.7635, -15.9896, 0.68 ) }
    dend_18 { pt3dadd( -23.7472, -47.9549, -16.6951, 1.14 ) }
    dend_18 { pt3dadd( -23.9199, -48.4173, -17.0353, 0.46 ) }
    dend_18 { pt3dadd( -24.4327, -49.2746, -17.79, 0.46 ) }
    dend_18 { pt3dadd( -25.1901, -50.1345, -18.701, 0.46 ) }
    dend_18 { pt3dadd( -25.7455, -50.6523, -19.2773, 0.46 ) }
    dend_18 { pt3dadd( -26.2096, -51.0044, -19.7369, 0.91 ) }
    dend_18 { pt3dadd( -26.6891, -51.3394, -20.162, 0.23 ) }
    dend_18 { pt3dadd( -27.5076, -51.9361, -20.9102, 0.23 ) }
    dend_18 { pt3dadd( -27.9103, -52.2494, -21.2606, 0.23 ) }
    dend_18 { pt3dadd( -28.3318, -52.7099, -21.6186, 0.68 ) }
    dend_18 { pt3dadd( -28.7921, -53.3985, -22.0876, 0.23 ) }
    dend_18 { pt3dadd( -29.2784, -54.2775, -22.7562, 0.23 ) }
    dend_18 { pt3dadd( -29.5051, -54.785, -23.1684, 0.91 ) }
    dend_18 { pt3dadd( -29.7381, -55.4811, -23.7589, 1.14 ) }
    dend_18 { pt3dadd( -29.9965, -56.3289, -24.5757, 0.46 ) }
    dend_18 { pt3dadd( -30.3472, -57.3864, -25.6742, 0.46 ) }
    dend_18 { pt3dadd( -30.7041, -58.3359, -26.6606, 0.46 ) }
    dend_18 { pt3dadd( -30.9678, -58.9093, -27.2347, 0.46 ) }
    dend_18 { pt3dadd( -31.2842, -59.4028, -27.6864, 0.91 ) }
    dend_18 { pt3dadd( -31.7742, -59.9816, -28.1713, 0.46 ) }
    dend_18 { pt3dadd( -32.7631, -60.8965, -28.8326, 0.46 ) }
    dend_18 { pt3dadd( -33.6283, -61.5857, -29.1611, 0.46 ) }
    dend_18 { pt3dadd( -34.9645, -62.6041, -29.5092, 0.91 ) }
    dend_18 { pt3dadd( -36.3719, -63.6065, -29.8959, 0.23 ) }
    dend_18 { pt3dadd( -37.1027, -64.0673, -30.1, 0.23 ) }
    dend_18 { pt3dadd( -37.9278, -64.5558, -30.341, 0.46 ) }
    dend_18 { pt3dadd( -38.9534, -65.1191, -30.7113, 0.91 ) }
    dend_18 { pt3dadd( -40.3378, -65.8349, -31.4272, 0.46 ) }
    dend_18 { pt3dadd( -41.5335, -66.4311, -32.3715, 0.46 ) }
    dend_18 { pt3dadd( -42.1549, -66.754, -33.2723, 0.46 ) }
    dend_18 { pt3dadd( -42.2145, -66.7744, -33.8186, 0.46 ) }
    dend_18 { pt3dadd( -42.0674, -66.6774, -34.6872, 0.46 ) }
    dend_18 { pt3dadd( -41.8015, -66.4978, -35.3681, 0.46 ) }
    dend_18 { pt3dadd( -41.396, -66.2057, -36.1734, 0.91 ) }
    dend_18 { pt3dadd( -40.931, -65.8232, -37.0756, 1.14 ) }
    dend_18 { pt3dadd( -40.47, -65.3615, -38.1106, 0.68 ) }
    dend_18 { pt3dadd( -40.3994, -65.2337, -38.3658, 0.68 ) }
    dend_18 { pt3dadd( -40.2994, -64.8732, -39.0105, 0.68 ) }
    dend_18 { pt3dadd( -40.2153, -64.2756, -39.8997, 0.68 ) }
    dend_18 { pt3dadd( -40.1413, -63.5842, -40.86, 0.68 ) }
    dend_18 { pt3dadd( -40.0801, -63.2367, -41.3127, 0.68 ) }
    dend_18 { pt3dadd( -39.8942, -62.9465, -41.8192, 0.91 ) }
    dend_18 { pt3dadd( -39.4236, -62.935, -42.5869, 1.14 ) }
    dend_18 { pt3dadd( -38.8694, -63.1398, -43.2878, 0.68 ) }
    dend_18 { pt3dadd( -38.0811, -63.4323, -44.1026, 0.68 ) }
    dend_18 { pt3dadd( -37.612, -63.6119, -44.5553, 0.68 ) }
    dend_18 { pt3dadd( -36.6842, -64.0033, -45.4247, 0.68 ) }
    dend_18 { pt3dadd( -35.6974, -64.4966, -46.3407, 0.91 ) }
    dend_18 { pt3dadd( -35.345, -64.7024, -46.6751, 0.91 ) }
    dend_18 { pt3dadd( -34.2786, -65.4792, -47.6945, 0.91 ) }
    dend_18 { pt3dadd( -33.6586, -65.9636, -48.3303, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_18 { pt3dadd( -33.216, -66.3654, -48.7542, 1.14 ) }
    dend_18 { pt3dadd( -32.4885, -67.1342, -49.3027, 1.14 ) }
    dend_18 { pt3dadd( -32.2264, -67.468, -49.4532, 0.46 ) }
    dend_18 { pt3dadd( -31.484, -68.7383, -49.9241, 0.46 ) }
    dend_18 { pt3dadd( -31.2112, -69.3734, -50.1067, 0.46 ) }
    dend_18 { pt3dadd( -30.7549, -70.5569, -50.4272, 0.91 ) }
    dend_18 { pt3dadd( -30.3666, -71.5288, -50.7411, 0.46 ) }
    dend_18 { pt3dadd( -29.7028, -73.0878, -51.2439, 0.46 ) }
    dend_18 { pt3dadd( -29.1685, -74.3146, -51.654, 0.46 ) }
    dend_18 { pt3dadd( -28.8163, -75.0626, -51.9202, 0.46 ) }
    dend_18 { pt3dadd( -28.3253, -76.2649, -52.3318, 0.91 ) }
    dend_18 { pt3dadd( -27.988, -77.3079, -52.7663, 0.91 ) }
    dend_18 { pt3dadd( -27.8247, -77.9103, -53.069, 1.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 2.28176, -9.58204, 1.23002, 0.68 ) }
    dend_16 { pt3dadd( 3.81577, -10.9422, 0.854469, 0.68 ) }
    dend_16 { pt3dadd( 4.80804, -11.812, 0.712009, 0.68 ) }
    dend_16 { pt3dadd( 5.91098, -12.7547, 0.736464, 0.91 ) }
    dend_16 { pt3dadd( 7.67564, -14.2167, 0.992344, 0.91 ) }
    dend_16 { pt3dadd( 8.72135, -15.0273, 1.23751, 0.68 ) }
    dend_16 { pt3dadd( 10.0124, -15.9332, 1.66606, 0.68 ) }
    dend_16 { pt3dadd( 11.4319, -16.6947, 2.45796, 0.68 ) }
    dend_16 { pt3dadd( 13.1724, -17.3679, 3.94669, 0.91 ) }
    dend_16 { pt3dadd( 13.8591, -17.5215, 4.70304, 0.68 ) }
    dend_16 { pt3dadd( 14.5286, -17.5969, 5.57673, 0.68 ) }
    dend_16 { pt3dadd( 15.7597, -17.5811, 7.34974, 0.68 ) }
    dend_16 { pt3dadd( 16.6837, -17.4333, 8.79551, 0.68 ) }
    dend_16 { pt3dadd( 17.6171, -17.1481, 10.2872, 0.68 ) }
    dend_16 { pt3dadd( 18.5271, -16.7282, 11.7685, 0.68 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 28/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.28176, -9.58204, 1.23002, 2.05 ) }
    dend_1 { pt3dadd( 1.72176, -11.3585, 0.680015, 2.05 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 30/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -24.6986, 28.2557, 0.0, 0.46 ) }
    axon_1 { pt3dadd( -34.6668, 39.4645, 0.0, 0.46 ) }
    axon_1 { pt3dadd( -44.6349, 50.6733, 0.0, 0.46 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 33/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -19.365, 10.8835, -5.12275, 0.68 ) }
    dend_50 { pt3dadd( -19.8038, 11.5807, -6.31569, 0.68 ) }
    dend_50 { pt3dadd( -20.2077, 12.0313, -7.30984, 0.68 ) }
    dend_50 { pt3dadd( -20.8619, 12.5564, -8.78019, 0.68 ) }
    dend_50 { pt3dadd( -21.5946, 12.81, -10.2907, 0.68 ) }
    dend_50 { pt3dadd( -22.2442, 13.0152, -11.7085, 0.68 ) }
    dend_50 { pt3dadd( -22.6789, 13.2198, -12.563, 0.91 ) }
    dend_50 { pt3dadd( -23.1763, 13.5304, -13.4862, 0.46 ) }
    dend_50 { pt3dadd( -23.3123, 13.6658, -13.7044, 0.46 ) }
    dend_50 { pt3dadd( -24.1719, 15.0239, -14.9283, 0.46 ) }
    dend_50 { pt3dadd( -25.2067, 16.7381, -16.0102, 0.91 ) }
    dend_50 { pt3dadd( -26.2312, 18.2224, -16.7128, 1.14 ) }
    dend_50 { pt3dadd( -27.323, 19.6861, -17.3112, 0.91 ) }
    dend_50 { pt3dadd( -28.5694, 21.2718, -17.8542, 0.68 ) }
    dend_50 { pt3dadd( -29.5859, 22.5219, -18.2547, 0.46 ) }
    dend_50 { pt3dadd( -30.9626, 24.1048, -18.7124, 0.46 ) }
    dend_50 { pt3dadd( -32.4689, 25.4894, -19.2684, 0.46 ) }
    dend_50 { pt3dadd( -33.2853, 25.9865, -19.7343, 0.46 ) }
    dend_50 { pt3dadd( -33.6452, 26.0751, -20.0046, 0.91 ) }
    dend_50 { pt3dadd( -34.9907, 26.0802, -21.2229, 0.91 ) }
    dend_50 { pt3dadd( -35.8511, 25.97, -22.1575, 0.91 ) }
    dend_50 { pt3dadd( -36.7272, 25.8288, -23.31, 0.91 ) }
    dend_50 { pt3dadd( -37.7398, 25.6704, -24.6398, 0.91 ) }
    dend_50 { pt3dadd( -39.0569, 25.5165, -26.0685, 0.91 ) }
    dend_50 { pt3dadd( -39.3272, 25.4893, -26.3228, 0.91 ) }
    dend_50 { pt3dadd( -39.6955, 25.4556, -26.5984, 1.14 ) }
    dend_50 { pt3dadd( -40.652, 25.434, -27.2801, 1.14 ) }
    dend_50 { pt3dadd( -41.3919, 25.5001, -27.8833, 0.46 ) }
    dend_50 { pt3dadd( -42.7072, 25.7853, -29.1798, 0.46 ) }
    dend_50 { pt3dadd( -43.6627, 26.0911, -30.3867, 0.46 ) }
    dend_50 { pt3dadd( -44.1829, 26.2559, -31.0883, 0.46 ) }
    dend_50 { pt3dadd( -45.004, 26.5211, -32.2725, 0.68 ) }
    dend_50 { pt3dadd( -45.8519, 26.8777, -33.7632, 0.91 ) }
    dend_50 { pt3dadd( -46.0881, 27.0623, -34.3008, 0.46 ) }
    dend_50 { pt3dadd( -46.4485, 27.5253, -35.3079, 0.46 ) }
    dend_50 { pt3dadd( -46.8805, 28.1483, -36.5594, 0.46 ) }
    dend_50 { pt3dadd( -47.0606, 28.3688, -37.0375, 0.46 ) }
    dend_50 { pt3dadd( -47.7311, 28.831, -38.3561, 0.46 ) }
    dend_50 { pt3dadd( -48.2737, 29.1106, -39.1713, 0.46 ) }
    dend_50 { pt3dadd( -49.1026, 29.6446, -40.3839, 0.46 ) }
    dend_50 { pt3dadd( -49.6223, 29.9827, -41.0594, 0.68 ) }
    dend_50 { pt3dadd( -50.0011, 30.2104, -41.5179, 1.14 ) }
    dend_50 { pt3dadd( -51.0035, 30.7031, -42.6486, 0.91 ) }
    dend_50 { pt3dadd( -51.9706, 31.1071, -43.7051, 1.14 ) }
    dend_50 { pt3dadd( -53.5786, 31.6755, -45.4953, 0.68 ) }
    dend_50 { pt3dadd( -54.847, 32.0951, -46.96, 0.23 ) }
    dend_50 { pt3dadd( -56.0822, 32.4166, -48.4396, 0.46 ) }
    dend_50 { pt3dadd( -57.3508, 32.5524, -50.0663, 0.46 ) }
    dend_50 { pt3dadd( -57.9884, 32.4559, -50.9437, 0.23 ) }
    dend_50 { pt3dadd( -58.5785, 32.2204, -51.766, 0.23 ) }
    dend_50 { pt3dadd( -58.7947, 32.1167, -52.0348, 0.91 ) }
    dend_50 { pt3dadd( -59.5244, 31.7869, -52.8854, 1.14 ) }
    dend_50 { pt3dadd( -60.4272, 31.4242, -53.842, 0.91 ) }
    dend_50 { pt3dadd( -61.607, 31.0606, -54.9441, 0.91 ) }
    dend_50 { pt3dadd( -62.4737, 30.8474, -55.7189, 0.91 ) }
    dend_50 { pt3dadd( -64.0567, 30.574, -57.1244, 1.14 ) }
    dend_50 { pt3dadd( -65.3929, 30.4154, -58.3089, 0.68 ) }
    dend_50 { pt3dadd( -66.5398, 30.3609, -59.3178, 0.68 ) }
    dend_50 { pt3dadd( -67.8984, 30.3452, -60.399, 0.68 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 92/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -19.365, 10.8835, -5.12275, 0.68 ) }
    dend_49 { pt3dadd( -19.8544, 9.8375, -5.8042, 0.68 ) }
    dend_49 { pt3dadd( -20.2524, 8.44326, -6.66499, 0.68 ) }
    dend_49 { pt3dadd( -20.3955, 7.50429, -7.28589, 0.68 ) }
    dend_49 { pt3dadd( -20.4976, 6.09598, -8.37926, 0.68 ) }
    dend_49 { pt3dadd( -20.5651, 4.59162, -9.72928, 0.68 ) }
    dend_49 { pt3dadd( -20.6537, 3.54068, -10.7143, 0.68 ) }
    dend_49 { pt3dadd( -20.7042, 2.76266, -11.4458, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_49 { pt3dadd( -20.7904, 1.94114, -12.267, 0.68 ) }
    dend_49 { pt3dadd( -21.0504, 0.752629, -13.5228, 0.91 ) }
    dend_49 { pt3dadd( -21.3879, -0.0836428, -14.3508, 1.14 ) }
    dend_49 { pt3dadd( -21.9488, -1.07932, -15.1987, 1.14 ) }
    dend_49 { pt3dadd( -22.5956, -2.13166, -15.9748, 0.68 ) }
    dend_49 { pt3dadd( -23.286, -3.34024, -16.7872, 0.68 ) }
    dend_49 { pt3dadd( -23.7729, -4.35888, -17.4291, 0.91 ) }
    dend_49 { pt3dadd( -24.1544, -5.51065, -18.2023, 0.23 ) }
    dend_49 { pt3dadd( -24.2794, -6.26609, -18.9179, 0.23 ) }
    dend_49 { pt3dadd( -24.3066, -7.06593, -19.9626, 0.23 ) }
    dend_49 { pt3dadd( -24.292, -8.05374, -21.3664, 0.46 ) }
    dend_49 { pt3dadd( -24.2867, -8.8568, -22.566, 0.46 ) }
    dend_49 { pt3dadd( -24.3172, -9.54044, -23.5925, 0.46 ) }
    dend_49 { pt3dadd( -24.4043, -10.6315, -25.0708, 0.91 ) }
    dend_49 { pt3dadd( -24.5125, -11.2471, -25.687, 0.91 ) }
    dend_49 { pt3dadd( -24.9637, -12.8325, -26.6598, 0.46 ) }
    dend_49 { pt3dadd( -25.4407, -14.2765, -27.1741, 0.46 ) }
    dend_49 { pt3dadd( -25.5901, -14.7637, -27.2741, 0.68 ) }
    dend_49 { pt3dadd( -25.8278, -15.6353, -27.407, 0.91 ) }
    dend_49 { pt3dadd( -26.0301, -16.4482, -27.5619, 0.68 ) }
    dend_49 { pt3dadd( -26.2824, -17.3007, -27.8448, 0.68 ) }
    dend_49 { pt3dadd( -26.5115, -17.7852, -28.1093, 0.91 ) }
    dend_49 { pt3dadd( -27.1632, -18.6218, -28.6078, 1.14 ) }
    dend_49 { pt3dadd( -27.7565, -19.2288, -28.9664, 0.23 ) }
    dend_49 { pt3dadd( -28.4893, -19.9122, -29.3764, 0.23 ) }
    dend_49 { pt3dadd( -29.2145, -20.6752, -29.7521, 0.23 ) }
    dend_49 { pt3dadd( -29.6649, -21.3485, -30.0527, 0.23 ) }
    dend_49 { pt3dadd( -30.0974, -22.1704, -30.3549, 0.68 ) }
    dend_49 { pt3dadd( -30.5407, -23.1948, -30.752, 0.23 ) }
    dend_49 { pt3dadd( -30.7756, -23.8136, -31.0414, 0.23 ) }
    dend_49 { pt3dadd( -31.3161, -25.1672, -31.797, 0.68 ) }
    dend_49 { pt3dadd( -31.8817, -26.5334, -32.7984, 0.46 ) }
    dend_49 { pt3dadd( -32.0374, -26.9703, -33.2378, 0.68 ) }
    dend_49 { pt3dadd( -32.3776, -27.9826, -34.7484, 0.91 ) }
    dend_49 { pt3dadd( -32.609, -28.5419, -35.9999, 0.68 ) }
    dend_49 { pt3dadd( -32.8422, -28.9552, -37.2412, 0.68 ) }
    dend_49 { pt3dadd( -33.2231, -29.3927, -39.1071, 0.68 ) }
    dend_49 { pt3dadd( -33.7942, -29.815, -41.3414, 0.68 ) }
    dend_49 { pt3dadd( -34.4432, -30.1452, -43.403, 0.68 ) }
    dend_49 { pt3dadd( -35.0904, -30.3788, -45.005, 0.68 ) }
    dend_49 { pt3dadd( -35.3859, -30.4507, -45.5068, 0.91 ) }
    dend_49 { pt3dadd( -36.1491, -30.5973, -46.2789, 0.68 ) }
    dend_49 { pt3dadd( -37.2992, -30.7906, -47.0414, 0.68 ) }
    dend_49 { pt3dadd( -38.5602, -30.9997, -47.6674, 1.14 ) }
    dend_49 { pt3dadd( -39.1289, -31.1036, -47.8955, 0.46 ) }
    dend_49 { pt3dadd( -40.2856, -31.3098, -48.3181, 0.46 ) }
    dend_49 { pt3dadd( -41.8202, -31.6247, -48.896, 0.46 ) }
    dend_49 { pt3dadd( -42.9605, -31.8874, -49.3627, 0.68 ) }
    dend_49 { pt3dadd( -43.9255, -32.1057, -49.8012, 1.14 ) }
    dend_49 { pt3dadd( -44.7011, -32.2863, -50.2044, 0.46 ) }
    dend_49 { pt3dadd( -45.4586, -32.4537, -50.6335, 0.46 ) }
    dend_49 { pt3dadd( -46.2465, -32.6741, -51.1749, 0.46 ) }
    dend_49 { pt3dadd( -46.8212, -32.8693, -51.6072, 0.46 ) }
    dend_49 { pt3dadd( -47.5708, -33.1444, -52.352, 0.46 ) }
    dend_49 { pt3dadd( -47.9606, -33.2722, -52.9766, 0.46 ) }
    dend_49 { pt3dadd( -48.4445, -33.3743, -53.9478, 0.46 ) }
    dend_49 { pt3dadd( -49.1283, -33.4598, -55.4123, 0.46 ) }
    dend_49 { pt3dadd( -49.3191, -33.4861, -55.8373, 0.46 ) }
    dend_49 { pt3dadd( -49.9855, -33.7323, -57.3182, 0.46 ) }
    dend_49 { pt3dadd( -50.5767, -34.1255, -58.5163, 0.46 ) }
    dend_49 { pt3dadd( -51.0879, -34.5013, -59.2935, 0.46 ) }
    dend_49 { pt3dadd( -51.7343, -34.895, -59.891, 0.46 ) }
    dend_49 { pt3dadd( -52.021, -35.0567, -60.0731, 0.68 ) }
    dend_49 { pt3dadd( -52.7441, -35.5248, -60.5055, 1.14 ) }
    dend_49 { pt3dadd( -53.6488, -36.2343, -60.9871, 0.46 ) }
    dend_49 { pt3dadd( -54.6931, -37.1295, -61.5116, 0.46 ) }
    dend_49 { pt3dadd( -55.432, -37.7767, -61.899, 0.68 ) }
    dend_49 { pt3dadd( -56.1951, -38.4202, -62.3086, 0.23 ) }
    dend_49 { pt3dadd( -57.3901, -39.3761, -62.9918, 0.23 ) }
    dend_49 { pt3dadd( -58.2524, -40.0367, -63.5597, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 70/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 12.0643, -2.59424, -5.16216, 0.91 ) }
    dend_42 { pt3dadd( 11.6603, -3.42976, -5.08116, 0.91 ) }
    dend_42 { pt3dadd( 11.0064, -4.94702, -4.93233, 0.91 ) }
    dend_42 { pt3dadd( 10.4953, -6.22361, -4.8147, 0.68 ) }
    dend_42 { pt3dadd( 9.85312, -7.7486, -4.68197, 0.68 ) }
    dend_42 { pt3dadd( 8.96307, -9.56015, -4.52645, 0.68 ) }
    dend_42 { pt3dadd( 8.13782, -11.0635, -4.45036, 0.91 ) }
    dend_42 { pt3dadd( 7.8456, -11.5713, -4.45645, 0.91 ) }
    dend_42 { pt3dadd( 7.40031, -12.4006, -4.55559, 0.68 ) }
    dend_42 { pt3dadd( 6.90121, -13.4309, -4.84221, 0.68 ) }
    dend_42 { pt3dadd( 6.29239, -14.8091, -5.48613, 0.68 ) }
    dend_42 { pt3dadd( 5.90507, -15.8009, -6.1621, 0.68 ) }
    dend_42 { pt3dadd( 5.67698, -17.1551, -7.17731, 0.91 ) }
    dend_42 { pt3dadd( 5.83297, -18.4771, -8.12996, 0.91 ) }
    dend_42 { pt3dadd( 6.10649, -19.3646, -8.70874, 0.68 ) }
    dend_42 { pt3dadd( 6.23598, -19.7265, -8.92464, 0.68 ) }
    dend_42 { pt3dadd( 6.45916, -20.3713, -9.28491, 0.91 ) }
    dend_42 { pt3dadd( 6.91399, -21.8614, -10.0836, 1.14 ) }
    dend_42 { pt3dadd( 7.17245, -22.8339, -10.6035, 0.91 ) }
    dend_42 { pt3dadd( 7.39444, -23.6481, -11.01, 0.91 ) }
    dend_42 { pt3dadd( 7.82193, -25.0402, -11.6666, 0.91 ) }
    dend_42 { pt3dadd( 8.24751, -26.0561, -12.1438, 0.91 ) }
    dend_42 { pt3dadd( 8.83135, -26.9436, -12.5395, 0.91 ) }
    dend_42 { pt3dadd( 9.72222, -27.8271, -12.9748, 0.91 ) }
    dend_42 { pt3dadd( 10.9463, -28.8253, -13.4958, 0.68 ) }
    dend_42 { pt3dadd( 11.3354, -29.1384, -13.6456, 0.91 ) }
    dend_42 { pt3dadd( 12.4403, -29.9386, -14.0005, 1.14 ) }
    dend_42 { pt3dadd( 13.6167, -30.7372, -14.3169, 0.46 ) }
    dend_42 { pt3dadd( 14.8482, -31.5633, -14.6335, 0.46 ) }
    dend_42 { pt3dadd( 16.3304, -32.6186, -15.122, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_42 { pt3dadd( 17.3692, -33.5007, -15.577, 1.14 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 12.0643, -2.59424, -5.16216, 0.91 ) }
    dend_41 { pt3dadd( 10.7128, -1.37394, -5.31776, 0.91 ) }
    dend_41 { pt3dadd( 9.63807, -0.225037, -5.44503, 0.91 ) }
    dend_41 { pt3dadd( 8.20852, 1.53144, -5.68722, 0.91 ) }
    dend_41 { pt3dadd( 7.96952, 1.89028, -5.75795, 0.68 ) }
    dend_41 { pt3dadd( 7.19715, 3.21407, -6.13146, 0.46 ) }
    dend_41 { pt3dadd( 6.59837, 4.19912, -6.46085, 0.46 ) }
    dend_41 { pt3dadd( 5.96109, 5.37542, -6.93384, 0.68 ) }
    dend_41 { pt3dadd( 5.63774, 6.10772, -7.33664, 0.68 ) }
    dend_41 { pt3dadd( 5.43148, 7.04215, -7.95557, 0.68 ) }
    dend_41 { pt3dadd( 5.38512, 8.27979, -8.83875, 0.91 ) }
    dend_41 { pt3dadd( 5.57833, 9.39823, -9.61388, 0.91 ) }
    dend_41 { pt3dadd( 5.79968, 10.3978, -10.2179, 0.68 ) }
    dend_41 { pt3dadd( 5.89749, 10.9249, -10.4762, 0.68 ) }
    dend_41 { pt3dadd( 6.37613, 12.9263, -11.3, 0.68 ) }
    dend_41 { pt3dadd( 6.83048, 14.3003, -11.7887, 0.68 ) }
    dend_41 { pt3dadd( 7.30279, 15.5804, -12.2714, 0.68 ) }
    dend_41 { pt3dadd( 7.45519, 16.0277, -12.4663, 0.46 ) }
    dend_41 { pt3dadd( 7.73444, 17.0086, -12.9646, 0.46 ) }
    dend_41 { pt3dadd( 7.92465, 17.8236, -13.4602, 0.46 ) }
    dend_41 { pt3dadd( 8.05258, 18.3879, -13.8546, 0.91 ) }
    dend_41 { pt3dadd( 8.4996, 19.7627, -14.8735, 1.37 ) }
    dend_41 { pt3dadd( 8.96463, 20.8032, -15.6615, 0.68 ) }
    dend_41 { pt3dadd( 9.68481, 22.0763, -16.5656, 0.68 ) }
    dend_41 { pt3dadd( 10.2237, 22.8633, -17.0434, 0.68 ) }
    dend_41 { pt3dadd( 11.0684, 23.8663, -17.5209, 0.68 ) }
    dend_41 { pt3dadd( 11.7163, 24.4977, -17.7479, 0.68 ) }
    dend_41 { pt3dadd( 12.3957, 25.0438, -17.8179, 0.91 ) }
    dend_41 { pt3dadd( 12.8307, 25.3876, -17.8252, 0.46 ) }
    dend_41 { pt3dadd( 13.7157, 26.2067, -17.8084, 0.23 ) }
    dend_41 { pt3dadd( 14.6309, 27.2411, -17.8424, 0.46 ) }
    dend_41 { pt3dadd( 14.8541, 27.5093, -17.8835, 0.23 ) }
    dend_41 { pt3dadd( 15.6175, 28.3036, -18.0996, 0.23 ) }
    dend_41 { pt3dadd( 16.4171, 28.9862, -18.3957, 0.68 ) }
    dend_41 { pt3dadd( 17.5728, 29.7444, -18.9425, 1.37 ) }
    dend_41 { pt3dadd( 19.4207, 30.6425, -19.9529, 0.46 ) }
    dend_41 { pt3dadd( 20.643, 31.078, -20.6732, 0.46 ) }
    dend_41 { pt3dadd( 21.771, 31.3373, -21.3467, 0.68 ) }
    dend_41 { pt3dadd( 23.2371, 31.5529, -22.2079, 0.46 ) }
    dend_41 { pt3dadd( 24.974, 31.7121, -23.2183, 0.91 ) }
    dend_41 { pt3dadd( 26.5206, 31.836, -24.1368, 0.68 ) }
    dend_41 { pt3dadd( 27.859, 31.9849, -24.9352, 0.68 ) }
    dend_41 { pt3dadd( 29.3102, 32.2546, -25.7208, 0.68 ) }
    dend_41 { pt3dadd( 31.6475, 32.8776, -26.88, 0.68 ) }
    dend_41 { pt3dadd( 32.2514, 33.0685, -27.1872, 0.68 ) }
    dend_41 { pt3dadd( 33.5969, 33.5554, -27.8638, 0.91 ) }
    dend_41 { pt3dadd( 34.8648, 34.0545, -28.5173, 0.68 ) }
    dend_41 { pt3dadd( 36.3802, 34.7106, -29.307, 0.91 ) }
    dend_41 { pt3dadd( 37.851, 35.3561, -30.0767, 0.68 ) }
    dend_41 { pt3dadd( 40.2194, 36.2681, -31.3538, 1.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 51/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 14.1336, 5.95482, 4.96225, 0.68 ) }
    dend_39 { pt3dadd( 14.6372, 6.60584, 5.43748, 0.68 ) }
    dend_39 { pt3dadd( 15.7013, 7.64464, 6.10196, 0.46 ) }
    dend_39 { pt3dadd( 16.8249, 8.77025, 6.77737, 0.46 ) }
    dend_39 { pt3dadd( 17.8658, 9.70863, 7.29958, 0.46 ) }
    dend_39 { pt3dadd( 18.7211, 10.3725, 7.67833, 0.68 ) }
    dend_39 { pt3dadd( 20.4512, 11.5153, 8.32519, 0.68 ) }
    dend_39 { pt3dadd( 21.5198, 12.0411, 8.6181, 0.68 ) }
    dend_39 { pt3dadd( 23.2768, 12.6839, 8.9339, 0.68 ) }
    dend_39 { pt3dadd( 24.8428, 13.1381, 9.11661, 0.68 ) }
    dend_39 { pt3dadd( 26.5148, 13.5544, 9.26264, 0.68 ) }
    dend_39 { pt3dadd( 28.5049, 14.0409, 9.42261, 0.46 ) }
    dend_39 { pt3dadd( 30.5841, 14.5515, 9.56078, 0.46 ) }
    dend_39 { pt3dadd( 31.2343, 14.7007, 9.60964, 0.46 ) }
    dend_39 { pt3dadd( 32.3703, 14.9736, 9.70977, 0.91 ) }
    dend_39 { pt3dadd( 33.4643, 15.336, 9.85484, 0.46 ) }
    dend_39 { pt3dadd( 34.4963, 15.8296, 10.0804, 0.46 ) }
    dend_39 { pt3dadd( 35.8242, 16.6988, 10.6207, 0.46 ) }
    dend_39 { pt3dadd( 36.9284, 17.4643, 11.251, 0.46 ) }
    dend_39 { pt3dadd( 37.86, 18.1327, 11.8695, 0.23 ) }
    dend_39 { pt3dadd( 38.45, 18.5754, 12.3365, 0.23 ) }
    dend_39 { pt3dadd( 39.6191, 19.5163, 13.4592, 0.23 ) }
    dend_39 { pt3dadd( 40.3982, 20.2246, 14.3907, 0.23 ) }
    dend_39 { pt3dadd( 41.4719, 21.4591, 16.1022, 0.23 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 75/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 14.1336, 5.95482, 4.96225, 0.46 ) }
    dend_38 { pt3dadd( 15.0524, 6.95997, 4.35148, 0.46 ) }
    dend_38 { pt3dadd( 16.0043, 8.00139, 3.71866, 0.46 ) }
    dend_38 { pt3dadd( 17.2193, 9.33066, 2.91094, 0.23 ) }
    dend_38 { pt3dadd( 17.7539, 9.9156, 2.5555, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 80/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -11.8872, 1.60752, -2.39143, 1.14 ) }
    dend_31 { pt3dadd( -13.8732, 0.976832, -3.64727, 1.14 ) }
    dend_31 { pt3dadd( -15.014, 0.544833, -4.24788, 1.14 ) }
    dend_31 { pt3dadd( -16.3842, -0.0394489, -4.87211, 1.37 ) }
    dend_31 { pt3dadd( -18.1509, -0.792827, -5.677, 1.14 ) }
    dend_31 { pt3dadd( -20.0753, -1.61346, -6.55374, 1.14 ) }
    dend_31 { pt3dadd( -21.4771, -2.21119, -7.19234, 1.37 ) }
    dend_31 { pt3dadd( -22.4463, -2.73886, -7.53204, 1.82 ) }
    dend_31 { pt3dadd( -23.1493, -3.17448, -7.69847, 1.14 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -11.8872, 1.60752, -2.39143, 0.91 ) }
    dend_30 { pt3dadd( -12.8301, 2.28423, -1.4469, 0.91 ) }
    dend_30 { pt3dadd( -13.7136, 2.86559, -0.557298, 0.68 ) }
    dend_30 { pt3dadd( -14.6536, 3.52062, 0.39791, 0.68 ) }
    dend_30 { pt3dadd( -15.5621, 4.21032, 1.30066, 0.91 ) }
    dend_30 { pt3dadd( -17.3031, 5.71674, 2.89531, 0.91 ) }
    dend_30 { pt3dadd( -17.9063, 6.30879, 3.37695, 0.91 ) }
    dend_30 { pt3dadd( -18.3433, 6.81016, 3.64387, 0.46 ) }
    dend_30 { pt3dadd( -19.1976, 8.09722, 3.94004, 0.46 ) }
    dend_30 { pt3dadd( -19.6103, 8.86214, 3.93705, 0.46 ) }
    dend_30 { pt3dadd( -20.4879, 10.3853, 3.76907, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -21.3495, 11.6111, 3.58211, 0.46 ) }
    dend_30 { pt3dadd( -22.3829, 12.8126, 3.46924, 0.46 ) }
    dend_30 { pt3dadd( -22.893, 13.3263, 3.42487, 0.46 ) }
    dend_30 { pt3dadd( -24.148, 14.4067, 3.34985, 0.46 ) }
    dend_30 { pt3dadd( -25.9225, 15.7319, 3.34078, 0.68 ) }
    dend_30 { pt3dadd( -27.5372, 16.7892, 3.34814, 0.68 ) }
    dend_30 { pt3dadd( -28.9175, 17.6143, 3.31748, 0.68 ) }
    dend_30 { pt3dadd( -30.6833, 18.7331, 3.14542, 0.91 ) }
    dend_30 { pt3dadd( -31.9685, 19.6032, 2.84767, 0.91 ) }
    dend_30 { pt3dadd( -32.9459, 20.2927, 2.47101, 0.91 ) }
    dend_30 { pt3dadd( -33.74, 20.869, 2.08519, 0.46 ) }
    dend_30 { pt3dadd( -35.0595, 21.7726, 1.44929, 0.46 ) }
    dend_30 { pt3dadd( -36.9634, 23.0239, 0.633744, 0.46 ) }
    dend_30 { pt3dadd( -38.2515, 23.891, 0.124919, 0.46 ) }
    dend_30 { pt3dadd( -39.6588, 25.0008, -0.457268, 0.46 ) }
    dend_30 { pt3dadd( -40.432, 25.7728, -0.788928, 0.46 ) }
    dend_30 { pt3dadd( -41.4653, 27.096, -1.25677, 0.46 ) }
    dend_30 { pt3dadd( -42.1415, 28.2409, -1.63821, 0.23 ) }
    dend_30 { pt3dadd( -42.7916, 29.5543, -2.07959, 0.46 ) }
    dend_30 { pt3dadd( -43.4214, 31.1007, -2.63644, 0.46 ) }
    dend_30 { pt3dadd( -43.8356, 32.3332, -3.14655, 0.46 ) }
    dend_30 { pt3dadd( -44.0884, 33.1614, -3.54745, 0.46 ) }
    dend_30 { pt3dadd( -44.3755, 34.1424, -4.05466, 0.46 ) }
    dend_30 { pt3dadd( -44.7965, 35.267, -4.66339, 1.14 ) }
    dend_30 { pt3dadd( -45.3299, 36.2761, -5.26881, 0.68 ) }
    dend_30 { pt3dadd( -45.777, 36.8607, -5.7184, 0.68 ) }
    dend_30 { pt3dadd( -46.581, 37.8022, -6.44776, 0.91 ) }
    dend_30 { pt3dadd( -47.5479, 39.0106, -7.24848, 0.46 ) }
    dend_30 { pt3dadd( -48.2187, 40.0594, -7.8037, 0.46 ) }
    dend_30 { pt3dadd( -48.8702, 41.3219, -8.39446, 0.91 ) }
    dend_30 { pt3dadd( -49.3829, 42.3456, -8.87304, 0.46 ) }
    dend_30 { pt3dadd( -50.1949, 43.8871, -9.63042, 0.46 ) }
    dend_30 { pt3dadd( -50.5815, 44.6327, -9.9758, 0.46 ) }
    dend_30 { pt3dadd( -51.2075, 45.9634, -10.5023, 0.68 ) }
    dend_30 { pt3dadd( -51.8281, 47.3827, -10.9467, 0.68 ) }
    dend_30 { pt3dadd( -52.5371, 48.9259, -11.4092, 0.68 ) }
    dend_30 { pt3dadd( -53.2146, 50.1926, -11.8505, 0.68 ) }
    dend_30 { pt3dadd( -54.0387, 51.4082, -12.3779, 0.68 ) }
    dend_30 { pt3dadd( -54.7472, 52.3242, -12.8352, 0.68 ) }
    dend_30 { pt3dadd( -55.4538, 53.1304, -13.221, 0.68 ) }
    dend_30 { pt3dadd( -56.6754, 54.489, -13.7587, 0.68 ) }
    dend_30 { pt3dadd( -57.5386, 55.4846, -14.137, 0.68 ) }
    dend_30 { pt3dadd( -58.1741, 56.3206, -14.4817, 0.68 ) }
    dend_30 { pt3dadd( -58.8629, 57.5191, -15.0491, 0.68 ) }
    dend_30 { pt3dadd( -59.3495, 58.6732, -15.6762, 1.14 ) }
    dend_30 { pt3dadd( -59.6552, 59.6565, -16.3081, 1.82 ) }
    dend_30 { pt3dadd( -59.9962, 61.1471, -17.24, 0.91 ) }
    dend_30 { pt3dadd( -60.3758, 63.2367, -18.58, 0.46 ) }
    dend_30 { pt3dadd( -60.6217, 64.8415, -19.7392, 0.46 ) }
    dend_30 { pt3dadd( -60.8541, 66.4116, -21.0356, 0.46 ) }
    dend_30 { pt3dadd( -61.0478, 67.7895, -22.3344, 0.46 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 51/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -35.2643, -16.7836, 1.92599, 0.46 ) }
    dend_26 { pt3dadd( -35.9117, -18.0695, 2.06775, 0.46 ) }
    dend_26 { pt3dadd( -36.7347, -19.3824, 2.08206, 0.46 ) }
    dend_26 { pt3dadd( -37.6136, -20.5849, 2.03696, 0.46 ) }
    dend_26 { pt3dadd( -37.9507, -21.0159, 2.01309, 0.68 ) }
    dend_26 { pt3dadd( -38.8016, -22.1177, 1.90615, 1.14 ) }
    dend_26 { pt3dadd( -38.9599, -22.3223, 1.87794, 0.46 ) }
    dend_26 { pt3dadd( -40.4076, -24.1665, 1.52941, 0.46 ) }
    dend_26 { pt3dadd( -41.5746, -25.6787, 1.15909, 0.91 ) }
    dend_26 { pt3dadd( -42.5373, -27.0171, 0.779507, 0.23 ) }
    dend_26 { pt3dadd( -43.2531, -28.0558, 0.479208, 0.23 ) }
    dend_26 { pt3dadd( -43.7769, -28.8587, 0.23811, 0.23 ) }
    dend_26 { pt3dadd( -44.3898, -29.8549, -0.0612439, 0.68 ) }
    dend_26 { pt3dadd( -45.0272, -31.0537, -0.415078, 0.46 ) }
    dend_26 { pt3dadd( -45.3582, -31.7754, -0.655664, 0.46 ) }
    dend_26 { pt3dadd( -45.7856, -32.7653, -0.994164, 0.68 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 67/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -35.2643, -16.7836, 1.92599, 0.23 ) }
    dend_25 { pt3dadd( -36.2049, -17.1378, 2.55602, 0.23 ) }
    dend_25 { pt3dadd( -37.7066, -17.7134, 3.41365, 0.23 ) }
    dend_25 { pt3dadd( -39.1639, -18.2192, 4.071, 0.23 ) }
    dend_25 { pt3dadd( -40.0479, -18.5282, 4.40357, 0.46 ) }
    dend_25 { pt3dadd( -41.0702, -18.8989, 4.73155, 0.23 ) }
    dend_25 { pt3dadd( -41.9563, -19.2339, 4.98482, 0.91 ) }
    dend_25 { pt3dadd( -43.0055, -19.6594, 5.23377, 0.23 ) }
    dend_25 { pt3dadd( -45.0077, -20.4874, 5.60531, 0.23 ) }
    dend_25 { pt3dadd( -45.8134, -20.8355, 5.72248, 0.23 ) }
    dend_25 { pt3dadd( -46.8601, -21.3031, 5.8616, 0.68 ) }
    dend_25 { pt3dadd( -47.3731, -21.5507, 5.93293, 0.23 ) }
    dend_25 { pt3dadd( -48.7171, -22.2374, 6.16461, 0.46 ) }
    dend_25 { pt3dadd( -49.7698, -22.8169, 6.40838, 0.91 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 81/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.72176, -11.3585, 0.680015, 1.59 ) }
    dend_11 { pt3dadd( 0.847528, -12.6898, 1.35689, 1.59 ) }
    dend_11 { pt3dadd( -0.033706, -13.8879, 1.95193, 1.14 ) }
    dend_11 { pt3dadd( -1.04469, -15.2624, 2.63458, 0.91 ) }
    dend_11 { pt3dadd( -2.14904, -16.7638, 3.38026, 0.91 ) }
    dend_11 { pt3dadd( -2.92109, -17.8134, 3.90158, 0.91 ) }
    dend_11 { pt3dadd( -3.44661, -18.5279, 4.25642, 1.14 ) }
    dend_11 { pt3dadd( -3.83685, -19.0523, 4.51996, 1.37 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 89/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.72176, -11.3585, 0.680015, 1.37 ) }
    dend_2 { pt3dadd( 2.09976, -12.6978, -1.27501, 1.37 ) }
    dend_2 { pt3dadd( 2.3204, -13.4796, -2.41617, 1.37 ) }
    dend_2 { pt3dadd( 2.87644, -15.4497, -5.29196, 1.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 93/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 17.3692, -33.5007, -15.577, 0.68 ) }
    dend_44 { pt3dadd( 17.8336, -34.5697, -16.4697, 0.68 ) }
    dend_44 { pt3dadd( 18.4418, -35.9752, -17.545, 0.68 ) }
    dend_44 { pt3dadd( 19.0682, -37.4744, -18.6143, 0.91 ) }
    dend_44 { pt3dadd( 19.4368, -38.3988, -19.2764, 0.46 ) }
    dend_44 { pt3dadd( 19.6921, -38.9488, -19.6966, 1.14 ) }
    dend_44 { pt3dadd( 20.0274, -39.5567, -20.2055, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_44 { pt3dadd( 20.2462, -39.8574, -20.4695, 0.91 ) }
    dend_44 { pt3dadd( 20.8621, -40.6686, -21.1737, 0.68 ) }
    dend_44 { pt3dadd( 21.2608, -41.2304, -21.686, 0.68 ) }
    dend_44 { pt3dadd( 21.8824, -42.2833, -22.6138, 0.68 ) }
    dend_44 { pt3dadd( 22.1345, -43.0501, -23.1873, 0.46 ) }
    dend_44 { pt3dadd( 22.167, -43.4112, -23.4183, 0.46 ) }
    dend_44 { pt3dadd( 22.1883, -44.4003, -23.9654, 0.46 ) }
    dend_44 { pt3dadd( 22.208, -45.6556, -24.5903, 0.68 ) }
    dend_44 { pt3dadd( 22.2147, -46.4303, -24.9515, 0.46 ) }
    dend_44 { pt3dadd( 22.2379, -47.3657, -25.3819, 0.46 ) }
    dend_44 { pt3dadd( 22.3482, -48.7768, -26.0561, 0.68 ) }
    dend_44 { pt3dadd( 22.5501, -49.7963, -26.6257, 1.37 ) }
    dend_44 { pt3dadd( 22.9405, -51.0035, -27.381, 0.46 ) }
    dend_44 { pt3dadd( 23.0693, -51.3195, -27.5906, 0.46 ) }
    dend_44 { pt3dadd( 23.619, -52.5203, -28.413, 0.91 ) }
    dend_44 { pt3dadd( 23.9457, -53.1397, -28.8592, 0.46 ) }
    dend_44 { pt3dadd( 24.4485, -53.9796, -29.4827, 0.46 ) }
    dend_44 { pt3dadd( 24.7351, -54.4066, -29.8216, 0.46 ) }
    dend_44 { pt3dadd( 25.0623, -54.7966, -30.1306, 0.68 ) }
    dend_44 { pt3dadd( 26.0558, -55.8025, -30.9489, 0.23 ) }
    dend_44 { pt3dadd( 26.8417, -56.4185, -31.5361, 0.23 ) }
    dend_44 { pt3dadd( 27.4432, -56.7876, -31.9194, 0.23 ) }
    dend_44 { pt3dadd( 27.9365, -57.0859, -32.2647, 0.68 ) }
    dend_44 { pt3dadd( 28.943, -57.6083, -33.0174, 1.14 ) }
    dend_44 { pt3dadd( 29.8385, -58.0017, -33.7234, 0.68 ) }
    dend_44 { pt3dadd( 30.7793, -58.3654, -34.4663, 0.68 ) }
    dend_44 { pt3dadd( 31.7134, -58.6881, -35.2412, 0.91 ) }
    dend_44 { pt3dadd( 33.3471, -59.1481, -36.6286, 0.91 ) }
    dend_44 { pt3dadd( 34.3566, -59.3947, -37.5288, 0.91 ) }
    dend_44 { pt3dadd( 35.543, -59.6198, -38.5682, 0.46 ) }
    dend_44 { pt3dadd( 36.2316, -59.7347, -39.1247, 0.68 ) }
    dend_44 { pt3dadd( 37.3453, -59.9541, -39.9176, 0.68 ) }
    dend_44 { pt3dadd( 38.4789, -60.1763, -40.6716, 0.91 ) }
    dend_44 { pt3dadd( 38.935, -60.2352, -40.9417, 0.23 ) }
    dend_44 { pt3dadd( 40.1685, -60.4244, -41.7057, 0.23 ) }
    dend_44 { pt3dadd( 41.145, -60.6017, -42.3676, 0.46 ) }
    dend_44 { pt3dadd( 42.4299, -60.8825, -43.3142, 0.23 ) }
    dend_44 { pt3dadd( 43.2694, -61.0559, -44.0182, 0.46 ) }
    dend_44 { pt3dadd( 44.3815, -61.2534, -45.0679, 0.68 ) }
    dend_44 { pt3dadd( 45.4004, -61.4695, -46.1208, 0.23 ) }
    dend_44 { pt3dadd( 46.671, -61.8259, -47.5928, 0.68 ) }
    dend_44 { pt3dadd( 47.5557, -62.1385, -48.6242, 0.23 ) }
    dend_44 { pt3dadd( 48.8999, -62.691, -50.1402, 0.23 ) }
    dend_44 { pt3dadd( 49.1188, -62.7889, -50.3428, 0.23 ) }
    dend_44 { pt3dadd( 50.1643, -63.3283, -51.2387, 0.46 ) }
    dend_44 { pt3dadd( 50.4283, -63.4615, -51.4432, 0.23 ) }
    dend_44 { pt3dadd( 51.648, -64.117, -52.2339, 0.23 ) }
    dend_44 { pt3dadd( 52.5518, -64.6253, -52.6847, 0.46 ) }
    dend_44 { pt3dadd( 54.3224, -65.6896, -53.2699, 0.68 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 49/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 17.3692, -33.5007, -15.577, 0.46 ) }
    dend_43 { pt3dadd( 18.6733, -34.2025, -15.5101, 0.46 ) }
    dend_43 { pt3dadd( 19.8598, -34.9091, -15.4158, 0.68 ) }
    dend_43 { pt3dadd( 21.3555, -35.8624, -15.2768, 0.23 ) }
    dend_43 { pt3dadd( 22.6746, -36.7423, -15.1457, 0.68 ) }
    dend_43 { pt3dadd( 23.111, -37.0472, -15.102, 0.23 ) }
    dend_43 { pt3dadd( 23.8643, -37.5896, -15.0266, 0.23 ) }
    dend_43 { pt3dadd( 24.9388, -38.3867, -14.9018, 0.23 ) }
    dend_43 { pt3dadd( 25.455, -38.7983, -14.8207, 0.23 ) }
    dend_43 { pt3dadd( 25.7974, -39.0932, -14.7556, 0.68 ) }
    dend_43 { pt3dadd( 26.6222, -39.813, -14.5956, 0.68 ) }
    dend_43 { pt3dadd( 26.7979, -39.9661, -14.5646, 0.23 ) }
    dend_43 { pt3dadd( 28.4286, -41.3309, -14.329, 0.23 ) }
    dend_43 { pt3dadd( 29.1574, -41.913, -14.2894, 0.91 ) }
    dend_43 { pt3dadd( 29.6691, -42.3363, -14.3069, 0.23 ) }
    dend_43 { pt3dadd( 30.704, -43.1864, -14.4075, 0.23 ) }
    dend_43 { pt3dadd( 31.558, -43.8922, -14.5293, 0.23 ) }
    dend_43 { pt3dadd( 32.7696, -44.8894, -14.7425, 0.46 ) }
    dend_43 { pt3dadd( 34.0536, -45.9402, -14.9662, 0.23 ) }
    dend_43 { pt3dadd( 35.7038, -47.2637, -15.208, 0.68 ) }
    dend_43 { pt3dadd( 36.9627, -48.2237, -15.3583, 0.23 ) }
    dend_43 { pt3dadd( 38.4022, -49.2963, -15.4411, 0.23 ) }
    dend_43 { pt3dadd( 38.997, -49.7157, -15.4202, 0.23 ) }
    dend_43 { pt3dadd( 41.1406, -51.1249, -15.1321, 0.68 ) }
    dend_43 { pt3dadd( 41.7536, -51.5041, -14.9927, 0.23 ) }
    dend_43 { pt3dadd( 42.4851, -51.9498, -14.7883, 0.23 ) }
    dend_43 { pt3dadd( 44.1845, -52.9859, -14.2592, 0.23 ) }
    dend_43 { pt3dadd( 45.5774, -53.8126, -13.7902, 0.23 ) }
    dend_43 { pt3dadd( 46.789, -54.5379, -13.3664, 0.68 ) }
    dend_43 { pt3dadd( 47.903, -55.1994, -12.9716, 0.23 ) }
    dend_43 { pt3dadd( 49.1989, -56.0013, -12.4987, 0.91 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 80/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -23.1493, -3.17448, -7.69847, 0.91 ) }
    dend_35 { pt3dadd( -24.8165, -2.35778, -7.66987, 0.91 ) }
    dend_35 { pt3dadd( -26.2605, -1.62015, -7.69165, 0.91 ) }
    dend_35 { pt3dadd( -28.085, -0.559245, -7.79972, 0.91 ) }
    dend_35 { pt3dadd( -28.5305, -0.285962, -7.83568, 0.68 ) }
    dend_35 { pt3dadd( -30.2825, 0.76488, -7.9939, 0.68 ) }
    dend_35 { pt3dadd( -31.8128, 1.63245, -8.13484, 0.68 ) }
    dend_35 { pt3dadd( -32.3831, 1.96865, -8.23632, 0.68 ) }
    dend_35 { pt3dadd( -33.8381, 2.88434, -8.54995, 0.68 ) }
    dend_35 { pt3dadd( -34.438, 3.28383, -8.6835, 0.68 ) }
    dend_35 { pt3dadd( -35.1374, 3.78642, -8.84577, 0.68 ) }
    dend_35 { pt3dadd( -35.9787, 4.43322, -9.03372, 0.68 ) }
    dend_35 { pt3dadd( -37.1438, 5.33074, -9.24515, 0.68 ) }
    dend_35 { pt3dadd( -38.5067, 6.25231, -9.35178, 0.68 ) }
    dend_35 { pt3dadd( -39.5158, 6.82232, -9.30949, 0.91 ) }
    dend_35 { pt3dadd( -40.5063, 7.34251, -9.1864, 0.91 ) }
    dend_35 { pt3dadd( -41.3204, 7.75264, -9.03499, 0.68 ) }
    dend_35 { pt3dadd( -42.4202, 8.21877, -8.69863, 0.46 ) }
    dend_35 { pt3dadd( -44.3951, 8.81755, -7.9011, 0.68 ) }
    dend_35 { pt3dadd( -45.3805, 9.05037, -7.39673, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_35 { pt3dadd( -45.967, 9.20127, -7.06367, 0.68 ) }
    dend_35 { pt3dadd( -46.7245, 9.46123, -6.55328, 0.91 ) }
    dend_35 { pt3dadd( -47.985, 10.0178, -5.55484, 0.91 ) }
    dend_35 { pt3dadd( -48.7429, 10.3984, -4.89516, 0.46 ) }
    dend_35 { pt3dadd( -50.424, 11.2715, -3.45344, 0.46 ) }
    dend_35 { pt3dadd( -52.2361, 12.1159, -2.02619, 0.46 ) }
    dend_35 { pt3dadd( -53.8334, 12.6677, -0.943818, 0.46 ) }
    dend_35 { pt3dadd( -54.926, 12.9217, -0.327664, 0.46 ) }
    dend_35 { pt3dadd( -56.4938, 13.1607, 0.337771, 0.91 ) }
    dend_35 { pt3dadd( -57.8843, 13.2601, 0.766436, 0.46 ) }
    dend_35 { pt3dadd( -60.1725, 13.2511, 1.18892, 0.46 ) }
    dend_35 { pt3dadd( -62.8172, 13.0695, 1.54352, 0.46 ) }
    dend_35 { pt3dadd( -64.4036, 12.9368, 1.70153, 0.46 ) }
    dend_35 { pt3dadd( -65.6895, 12.843, 1.82428, 0.46 ) }
    dend_35 { pt3dadd( -67.1489, 12.8257, 1.98823, 0.46 ) }
    dend_35 { pt3dadd( -68.0365, 12.8993, 2.13347, 0.91 ) }
    dend_35 { pt3dadd( -69.622, 13.1063, 2.4669, 0.23 ) }
    dend_35 { pt3dadd( -71.3483, 13.5002, 2.93611, 0.23 ) }
    dend_35 { pt3dadd( -72.555, 13.8722, 3.33146, 0.23 ) }
    dend_35 { pt3dadd( -74.3689, 14.5473, 4.03902, 0.23 ) }
    dend_35 { pt3dadd( -76.1341, 15.4449, 4.79807, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -23.1493, -3.17448, -7.69847, 0.68 ) }
    dend_32 { pt3dadd( -23.5138, -3.07534, -8.18708, 0.68 ) }
    dend_32 { pt3dadd( -24.3743, -2.84129, -9.34066, 0.68 ) }
    dend_32 { pt3dadd( -25.4423, -2.55083, -10.7723, 0.68 ) }
    dend_32 { pt3dadd( -26.6069, -2.23409, -12.3334, 0.91 ) }
    dend_32 { pt3dadd( -27.5394, -1.98046, -13.5835, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 27/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -45.7856, -32.7653, -0.994164, 0.68 ) }
    dend_28 { pt3dadd( -46.0974, -33.5868, -1.44177, 0.68 ) }
    dend_28 { pt3dadd( -46.6274, -34.6777, -2.14309, 0.23 ) }
    dend_28 { pt3dadd( -46.9341, -35.2228, -2.48605, 0.23 ) }
    dend_28 { pt3dadd( -47.5168, -36.1793, -3.06693, 0.68 ) }
    dend_28 { pt3dadd( -48.3929, -37.4353, -3.79965, 0.46 ) }
    dend_28 { pt3dadd( -49.33, -38.7903, -4.49733, 0.46 ) }
    dend_28 { pt3dadd( -49.9519, -39.7242, -4.94934, 0.46 ) }
    dend_28 { pt3dadd( -50.7121, -40.8219, -5.39328, 0.46 ) }
    dend_28 { pt3dadd( -51.0311, -41.2612, -5.5366, 0.46 ) }
    dend_28 { pt3dadd( -51.8081, -42.2678, -5.76736, 0.46 ) }
    dend_28 { pt3dadd( -52.9756, -43.7755, -5.97056, 0.46 ) }
    dend_28 { pt3dadd( -53.5059, -44.5349, -6.07197, 0.46 ) }
    dend_28 { pt3dadd( -54.1484, -45.5157, -6.2143, 0.46 ) }
    dend_28 { pt3dadd( -54.9272, -46.7392, -6.41644, 1.14 ) }
    dend_28 { pt3dadd( -55.2386, -47.2432, -6.51056, 0.46 ) }
    dend_28 { pt3dadd( -56.0803, -48.6527, -6.82266, 0.46 ) }
    dend_28 { pt3dadd( -57.0235, -50.0153, -7.21665, 0.46 ) }
    dend_28 { pt3dadd( -57.4805, -50.6701, -7.4417, 0.91 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -45.7856, -32.7653, -0.994164, 0.23 ) }
    dend_27 { pt3dadd( -47.5083, -34.2056, -1.29515, 0.23 ) }
    dend_27 { pt3dadd( -48.2375, -34.805, -1.41193, 0.23 ) }
    dend_27 { pt3dadd( -49.1283, -35.5202, -1.53912, 0.23 ) }
    dend_27 { pt3dadd( -50.6128, -36.6202, -1.70922, 0.23 ) }
    dend_27 { pt3dadd( -51.795, -37.4417, -1.83365, 1.14 ) }
    dend_27 { pt3dadd( -52.2849, -37.7822, -1.88523, 0.46 ) }
    dend_27 { pt3dadd( -53.4561, -38.6016, -2.01407, 0.46 ) }
    dend_27 { pt3dadd( -54.4279, -39.2237, -2.11164, 0.46 ) }
    dend_27 { pt3dadd( -56.5214, -40.4635, -2.27848, 0.46 ) }
    dend_27 { pt3dadd( -57.1595, -40.8187, -2.29659, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 57/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.83685, -19.0523, 4.51996, 1.37 ) }
    dend_13 { pt3dadd( -4.72938, -19.7436, 4.56995, 1.37 ) }
    dend_13 { pt3dadd( -5.63687, -20.4464, 4.62077, 1.37 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 60/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.83685, -19.0523, 4.51996, 0.68 ) }
    dend_12 { pt3dadd( -6.23459, -18.6845, 4.79552, 0.68 ) }
    dend_12 { pt3dadd( -7.73911, -18.4981, 5.00888, 0.46 ) }
    dend_12 { pt3dadd( -9.17334, -18.4391, 5.26813, 0.46 ) }
    dend_12 { pt3dadd( -11.4785, -18.5263, 5.68907, 0.68 ) }
    dend_12 { pt3dadd( -13.3514, -18.7189, 5.99316, 0.68 ) }
    dend_12 { pt3dadd( -14.9704, -18.9384, 6.22659, 1.14 ) }
    dend_12 { pt3dadd( -16.7252, -19.3203, 6.50781, 0.91 ) }
    dend_12 { pt3dadd( -18.8007, -19.8145, 6.88938, 0.68 ) }
    dend_12 { pt3dadd( -20.8405, -20.3317, 7.23914, 0.68 ) }
    dend_12 { pt3dadd( -22.5828, -20.8094, 7.48412, 0.68 ) }
    dend_12 { pt3dadd( -24.1116, -21.2578, 7.6638, 0.68 ) }
    dend_12 { pt3dadd( -26.2167, -21.8785, 7.91133, 0.68 ) }
    dend_12 { pt3dadd( -28.4865, -22.4982, 8.19008, 0.46 ) }
    dend_12 { pt3dadd( -29.1971, -22.6538, 8.2766, 0.46 ) }
    dend_12 { pt3dadd( -30.7382, -22.9455, 8.52487, 0.68 ) }
    dend_12 { pt3dadd( -32.1472, -23.1878, 8.81173, 0.23 ) }
    dend_12 { pt3dadd( -33.1977, -23.3974, 9.04139, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 78/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.87644, -15.4497, -5.29196, 0.91 ) }
    dend_8 { pt3dadd( 2.79513, -16.4697, -4.84033, 0.91 ) }
    dend_8 { pt3dadd( 2.92758, -18.4097, -4.08697, 0.91 ) }
    dend_8 { pt3dadd( 3.40735, -20.5839, -3.33443, 1.14 ) }
    dend_8 { pt3dadd( 3.98826, -22.2169, -2.90968, 0.46 ) }
    dend_8 { pt3dadd( 4.50315, -23.4044, -2.67713, 0.91 ) }
    dend_8 { pt3dadd( 5.04446, -24.5665, -2.44479, 0.91 ) }
    dend_8 { pt3dadd( 5.71446, -25.6849, -2.22835, 0.68 ) }
    dend_8 { pt3dadd( 6.50664, -26.8506, -1.98883, 0.68 ) }
    dend_8 { pt3dadd( 7.38098, -28.1864, -1.63829, 0.68 ) }
    dend_8 { pt3dadd( 7.82019, -28.895, -1.41782, 0.68 ) }
    dend_8 { pt3dadd( 8.70203, -30.6021, -0.74822, 0.91 ) }
    dend_8 { pt3dadd( 9.08442, -31.5902, -0.256712, 0.91 ) }
    dend_8 { pt3dadd( 9.43455, -33.0445, 0.645911, 0.91 ) }
    dend_8 { pt3dadd( 9.57129, -34.3686, 1.62853, 0.91 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.87644, -15.4497, -5.29196, 0.91 ) }
    dend_3 { pt3dadd( 3.80312, -16.035, -4.79182, 0.91 ) }
    dend_3 { pt3dadd( 4.99368, -16.787, -4.14926, 1.14 ) }
    dend_3 { pt3dadd( 6.65092, -17.8338, -3.25483, 1.14 ) }
    dend_3 { pt3dadd( 8.72611, -19.1445, -2.13484, 1.14 ) }
    dend_3 { pt3dadd( 10.2243, -20.0909, -1.32626, 1.37 ) }
    dend_3 { pt3dadd( 12.326, -21.4184, -0.191942, 1.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 0/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 54.3224, -65.6896, -53.2699, 0.23 ) }
    dend_46 { pt3dadd( 55.7838, -66.3039, -53.2699, 0.23 ) }
    dend_46 { pt3dadd( 57.1677, -66.7924, -53.2699, 0.23 ) }
    dend_46 { pt3dadd( 58.6828, -67.2959, -53.2699, 0.46 ) }
    dend_46 { pt3dadd( 59.1918, -67.4413, -53.2699, 0.23 ) }
    dend_46 { pt3dadd( 61.1005, -67.9274, -53.2699, 0.23 ) }
    dend_46 { pt3dadd( 61.9331, -68.1418, -53.2699, 0.23 ) }
    dend_46 { pt3dadd( 63.1778, -68.4017, -53.2699, 0.46 ) }
    dend_46 { pt3dadd( 64.333, -68.6048, -53.2699, 0.23 ) }
    dend_46 { pt3dadd( 65.6505, -68.7877, -53.2699, 0.23 ) }
    dend_46 { pt3dadd( 67.251, -69.0292, -53.2699, 0.23 ) }
    dend_46 { pt3dadd( 68.3685, -69.2355, -53.2699, 0.68 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 12/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 54.3224, -65.6896, -53.2699, 0.23 ) }
    dend_45 { pt3dadd( 56.5086, -64.4412, -52.858, 0.23 ) }
    dend_45 { pt3dadd( 58.4619, -63.3258, -52.49, 0.23 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 15/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -27.5394, -1.98046, -13.5835, 0.68 ) }
    dend_34 { pt3dadd( -27.8872, -0.937276, -14.3724, 0.68 ) }
    dend_34 { pt3dadd( -28.2557, 0.14121, -15.487, 0.68 ) }
    dend_34 { pt3dadd( -28.4463, 0.595688, -16.205, 0.91 ) }
    dend_34 { pt3dadd( -28.6997, 1.01359, -17.3856, 0.91 ) }
    dend_34 { pt3dadd( -28.9133, 1.33748, -18.9299, 0.68 ) }
    dend_34 { pt3dadd( -28.9663, 1.4555, -20.0283, 0.68 ) }
    dend_34 { pt3dadd( -28.9085, 1.42746, -21.3095, 0.68 ) }
    dend_34 { pt3dadd( -28.6367, 1.25161, -22.876, 0.68 ) }
    dend_34 { pt3dadd( -28.2424, 1.10226, -24.1905, 0.68 ) }
    dend_34 { pt3dadd( -27.7494, 1.05834, -25.3655, 0.68 ) }
    dend_34 { pt3dadd( -27.1037, 1.35655, -26.6861, 0.68 ) }
    dend_34 { pt3dadd( -26.2839, 2.37723, -28.664, 0.68 ) }
    dend_34 { pt3dadd( -25.8651, 3.36349, -29.8521, 0.68 ) }
    dend_34 { pt3dadd( -25.4662, 4.69091, -31.0833, 0.68 ) }
    dend_34 { pt3dadd( -25.2232, 5.7698, -31.8964, 1.14 ) }
    dend_34 { pt3dadd( -24.8879, 7.48982, -33.037, 0.68 ) }
    dend_34 { pt3dadd( -24.7305, 8.4768, -33.5878, 0.68 ) }
    dend_34 { pt3dadd( -24.5465, 10.0282, -34.399, 0.91 ) }
    dend_34 { pt3dadd( -24.4485, 10.8228, -34.6928, 0.68 ) }
    dend_34 { pt3dadd( -24.2485, 12.0094, -35.0383, 0.68 ) }
    dend_34 { pt3dadd( -24.0232, 13.3333, -35.4331, 0.68 ) }
    dend_34 { pt3dadd( -23.7969, 14.963, -35.9859, 0.68 ) }
    dend_34 { pt3dadd( -23.7329, 15.8231, -36.3926, 0.68 ) }
    dend_34 { pt3dadd( -23.8086, 16.7399, -37.0532, 1.14 ) }
    dend_34 { pt3dadd( -24.2924, 18.1514, -38.5003, 0.68 ) }
    dend_34 { pt3dadd( -24.9011, 19.0375, -39.8157, 0.68 ) }
    dend_34 { pt3dadd( -25.2235, 19.3778, -40.4751, 0.68 ) }
    dend_34 { pt3dadd( -25.8103, 19.9138, -41.9303, 0.68 ) }
    dend_34 { pt3dadd( -25.9069, 20.0083, -42.2541, 0.68 ) }
    dend_34 { pt3dadd( -26.0097, 20.1839, -42.9574, 1.14 ) }
    dend_34 { pt3dadd( -25.7862, 20.8338, -44.9077, 0.68 ) }
    dend_34 { pt3dadd( -25.3702, 21.4092, -46.113, 0.68 ) }
    dend_34 { pt3dadd( -25.0081, 21.9505, -47.0178, 0.68 ) }
    dend_34 { pt3dadd( -24.5897, 22.6559, -48.0092, 0.68 ) }
    dend_34 { pt3dadd( -24.0611, 23.6461, -49.2434, 0.68 ) }
    dend_34 { pt3dadd( -23.5878, 24.5817, -50.2969, 0.91 ) }
    dend_34 { pt3dadd( -23.2534, 25.4206, -51.1364, 0.68 ) }
    dend_34 { pt3dadd( -23.045, 26.5067, -52.1523, 0.91 ) }
    dend_34 { pt3dadd( -23.0524, 26.9736, -52.6204, 0.68 ) }
    dend_34 { pt3dadd( -23.1846, 27.5501, -53.2829, 0.68 ) }
    dend_34 { pt3dadd( -23.4385, 28.0286, -54.094, 0.68 ) }
    dend_34 { pt3dadd( -23.7043, 28.2478, -54.7807, 0.68 ) }
    dend_34 { pt3dadd( -24.3252, 28.3683, -56.2065, 0.68 ) }
    dend_34 { pt3dadd( -24.9847, 28.2366, -57.7707, 0.68 ) }
    dend_34 { pt3dadd( -25.1168, 28.1821, -58.0858, 0.68 ) }
    dend_34 { pt3dadd( -25.6911, 27.9319, -59.3085, 0.68 ) }
    dend_34 { pt3dadd( -26.2342, 27.7377, -60.3225, 0.68 ) }
    dend_34 { pt3dadd( -27.0064, 27.4536, -61.6809, 0.68 ) }
    dend_34 { pt3dadd( -27.688, 27.3112, -62.6588, 0.68 ) }
    dend_34 { pt3dadd( -27.9851, 27.3436, -62.9448, 0.68 ) }
    dend_34 { pt3dadd( -29.0464, 27.8498, -63.8183, 0.68 ) }
    dend_34 { pt3dadd( -29.8035, 28.5207, -64.4929, 0.68 ) }
    dend_34 { pt3dadd( -30.3805, 29.1122, -65.0067, 0.68 ) }
    dend_34 { pt3dadd( -31.254, 30.0764, -65.7533, 0.68 ) }
    dend_34 { pt3dadd( -32.3575, 31.2398, -66.5714, 1.14 ) }
    dend_34 { pt3dadd( -33.477, 32.4578, -67.4014, 0.23 ) }
    dend_34 { pt3dadd( -34.518, 33.7764, -68.233, 0.23 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 73/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -27.5394, -1.98046, -13.5835, 0.68 ) }
    dend_33 { pt3dadd( -27.0834, -1.80771, -14.5126, 0.68 ) }
    dend_33 { pt3dadd( -26.3263, -1.63076, -16.3087, 0.68 ) }
    dend_33 { pt3dadd( -25.841, -1.61914, -17.7965, 0.68 ) }
    dend_33 { pt3dadd( -25.5321, -1.72568, -19.4646, 0.68 ) }
    dend_33 { pt3dadd( -25.3842, -1.86159, -21.2631, 0.68 ) }
    dend_33 { pt3dadd( -25.389, -1.95924, -23.0199, 0.68 ) }
    dend_33 { pt3dadd( -25.4493, -2.00149, -23.6706, 0.68 ) }
    dend_33 { pt3dadd( -25.7516, -2.17545, -25.5889, 0.68 ) }
    dend_33 { pt3dadd( -26.1949, -2.42347, -27.8447, 0.68 ) }
    dend_33 { pt3dadd( -26.4931, -2.59819, -29.2175, 0.68 ) }
    dend_33 { pt3dadd( -26.7835, -2.81099, -30.7647, 0.68 ) }
    dend_33 { pt3dadd( -26.8887, -2.97672, -31.6243, 0.68 ) }
    dend_33 { pt3dadd( -26.9815, -3.48398, -33.3697, 0.68 ) }
    dend_33 { pt3dadd( -26.8433, -4.14254, -34.3147, 1.14 ) }
    dend_33 { pt3dadd( -26.5887, -4.8981, -34.773, 0.91 ) }
    dend_33 { pt3dadd( -26.2496, -5.882, -35.2253, 0.46 ) }
    dend_33 { pt3dadd( -25.9626, -6.61632, -35.5783, 0.46 ) }
    dend_33 { pt3dadd( -25.5201, -7.89604, -36.3244, 0.46 ) }
    dend_33 { pt3dadd( -25.3808, -8.49427, -36.6617, 0.46 ) }
    dend_33 { pt3dadd( -25.2183, -9.65845, -37.4393, 0.91 ) }
    dend_33 { pt3dadd( -25.2091, -10.6336, -38.2334, 0.46 ) }
    dend_33 { pt3dadd( -25.2534, -12.1104, -39.569, 0.46 ) }
    dend_33 { pt3dadd( -25.1726, -12.7688, -40.2625, 0.46 ) }
    dend_33 { pt3dadd( -24.7695, -13.9401, -41.7914, 0.46 ) }
    dend_33 { pt3dadd( -24.5358, -14.4062, -42.5003, 0.46 ) }
    dend_33 { pt3dadd( -24.1219, -15.1855, -43.7754, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_33 { pt3dadd( -23.9524, -15.5714, -44.3107, 0.68 ) }
    dend_33 { pt3dadd( -23.5817, -16.6389, -45.5345, 0.91 ) }
    dend_33 { pt3dadd( -23.1319, -17.7185, -46.7499, 0.46 ) }
    dend_33 { pt3dadd( -22.7113, -18.4267, -47.5672, 0.46 ) }
    dend_33 { pt3dadd( -22.2026, -19.133, -48.2645, 0.46 ) }
    dend_33 { pt3dadd( -21.4067, -20.1416, -49.1394, 0.91 ) }
    dend_33 { pt3dadd( -20.6345, -21.222, -49.9467, 0.68 ) }
    dend_33 { pt3dadd( -20.0991, -22.185, -50.4907, 0.68 ) }
    dend_33 { pt3dadd( -19.4763, -23.6487, -51.146, 0.68 ) }
    dend_33 { pt3dadd( -19.2092, -25.0443, -51.7154, 0.23 ) }
    dend_33 { pt3dadd( -19.1961, -25.9241, -51.979, 0.23 ) }
    dend_33 { pt3dadd( -19.3049, -26.8204, -52.1959, 0.91 ) }
    dend_33 { pt3dadd( -19.6732, -28.1101, -52.4817, 1.59 ) }
    dend_33 { pt3dadd( -19.9788, -28.8586, -52.6551, 0.91 ) }
    dend_33 { pt3dadd( -21.1078, -31.1382, -53.2169, 0.46 ) }
    dend_33 { pt3dadd( -22.3292, -33.35, -53.7813, 0.46 ) }
    dend_33 { pt3dadd( -22.7344, -34.0762, -53.9762, 0.46 ) }
    dend_33 { pt3dadd( -23.3282, -35.1493, -54.2703, 0.46 ) }
    dend_33 { pt3dadd( -23.9326, -36.2488, -54.571, 0.46 ) }
    dend_33 { pt3dadd( -24.2736, -36.8462, -54.7422, 0.68 ) }
    dend_33 { pt3dadd( -24.2736, -36.8462, -54.7422, 0.23 ) }
    dend_33 { pt3dadd( -24.9753, -37.9979, -55.2089, 0.23 ) }
    dend_33 { pt3dadd( -25.5198, -39.0373, -55.6472, 0.68 ) }
    dend_33 { pt3dadd( -25.8553, -39.7553, -55.9677, 0.46 ) }
    dend_33 { pt3dadd( -26.3079, -40.7293, -56.4091, 0.46 ) }
    dend_33 { pt3dadd( -26.8328, -41.7794, -56.8901, 0.68 ) }
    dend_33 { pt3dadd( -27.1017, -42.299, -57.1431, 0.23 ) }
    dend_33 { pt3dadd( -27.57, -43.2431, -57.6102, 0.23 ) }
    dend_33 { pt3dadd( -27.9131, -43.9578, -57.9679, 0.23 ) }
    dend_33 { pt3dadd( -28.2958, -44.7494, -58.2974, 0.68 ) }
    dend_33 { pt3dadd( -29.1124, -46.1155, -58.8192, 0.46 ) }
    dend_33 { pt3dadd( -29.7838, -47.0396, -59.1797, 0.46 ) }
    dend_33 { pt3dadd( -30.2966, -47.688, -59.4438, 0.91 ) }
    dend_33 { pt3dadd( -30.8076, -48.3199, -59.7318, 0.23 ) }
    dend_33 { pt3dadd( -31.6671, -49.3976, -60.2417, 0.23 ) }
    dend_33 { pt3dadd( -32.606, -50.5758, -60.8826, 0.23 ) }
    dend_33 { pt3dadd( -33.2055, -51.3373, -61.3199, 0.23 ) }
    dend_33 { pt3dadd( -33.4585, -51.632, -61.4891, 0.46 ) }
    dend_33 { pt3dadd( -34.2151, -52.4152, -61.9659, 0.91 ) }
    dend_33 { pt3dadd( -34.6788, -52.8691, -62.2489, 0.68 ) }
    dend_33 { pt3dadd( -35.2134, -53.4175, -62.5626, 0.68 ) }
    dend_33 { pt3dadd( -35.8976, -54.2281, -62.9036, 0.68 ) }
    dend_33 { pt3dadd( -36.7686, -55.2497, -63.2415, 0.68 ) }
    dend_33 { pt3dadd( -37.2096, -55.7869, -63.4053, 0.91 ) }
    dend_33 { pt3dadd( -37.3388, -55.9636, -63.4619, 0.23 ) }
    dend_33 { pt3dadd( -38.0218, -57.0665, -63.8843, 0.46 ) }
    dend_33 { pt3dadd( -38.4956, -58.0719, -64.3371, 0.68 ) }
    dend_33 { pt3dadd( -38.7769, -59.0417, -64.8292, 0.23 ) }
    dend_33 { pt3dadd( -38.8957, -60.1376, -65.3584, 0.23 ) }
    dend_33 { pt3dadd( -38.9072, -61.3103, -65.9467, 0.68 ) }
    dend_33 { pt3dadd( -38.8756, -62.1293, -66.3485, 0.68 ) }
    dend_33 { pt3dadd( -38.8131, -62.8546, -66.6964, 0.23 ) }
    dend_33 { pt3dadd( -38.7537, -63.6525, -67.0542, 0.46 ) }
    dend_33 { pt3dadd( -38.7094, -65.5756, -67.7829, 0.46 ) }
    dend_33 { pt3dadd( -38.7527, -66.3996, -68.0099, 0.46 ) }
    dend_33 { pt3dadd( -38.8884, -67.6409, -68.2804, 0.91 ) }
    dend_33 { pt3dadd( -38.9723, -68.3263, -68.3964, 0.23 ) }
    dend_33 { pt3dadd( -39.1871, -69.6631, -68.6302, 0.23 ) }
    dend_33 { pt3dadd( -39.3889, -70.7866, -68.843, 0.23 ) }
    dend_33 { pt3dadd( -39.6576, -71.931, -69.0975, 0.46 ) }
    dend_33 { pt3dadd( -39.9319, -73.1421, -69.3673, 0.46 ) }
    dend_33 { pt3dadd( -40.1818, -74.4407, -69.6729, 0.91 ) }
    dend_33 { pt3dadd( -40.3905, -76.0614, -70.11, 0.23 ) }
    dend_33 { pt3dadd( -40.4978, -77.2032, -70.4386, 0.23 ) }
    dend_33 { pt3dadd( -40.6437, -78.8969, -70.9524, 0.23 ) }
    dend_33 { pt3dadd( -40.7291, -79.7568, -71.2184, 0.23 ) }
    dend_33 { pt3dadd( -40.8758, -81.0551, -71.5909, 0.46 ) }
    dend_33 { pt3dadd( -41.0553, -82.9368, -72.1566, 0.46 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.63687, -20.4464, 4.62077, 0.68 ) }
    dend_15 { pt3dadd( -4.91397, -21.256, 5.59233, 0.68 ) }
    dend_15 { pt3dadd( -4.14302, -22.2461, 6.53191, 0.68 ) }
    dend_15 { pt3dadd( -3.47327, -23.1688, 7.27434, 0.68 ) }
    dend_15 { pt3dadd( -2.54211, -24.4095, 8.14012, 0.68 ) }
    dend_15 { pt3dadd( -1.98497, -25.1382, 8.58878, 0.68 ) }
    dend_15 { pt3dadd( -1.17934, -26.1451, 9.17329, 0.91 ) }
    dend_15 { pt3dadd( -0.0343662, -27.5773, 9.9061, 0.91 ) }
    dend_15 { pt3dadd( 0.504417, -28.2565, 10.2186, 0.91 ) }
    dend_15 { pt3dadd( 1.661, -29.8316, 10.8577, 0.68 ) }
    dend_15 { pt3dadd( 2.669, -31.2705, 11.3525, 0.46 ) }
    dend_15 { pt3dadd( 3.6319, -32.6146, 11.7939, 0.46 ) }
    dend_15 { pt3dadd( 4.61974, -33.8886, 12.2171, 0.46 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 81/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.63687, -20.4464, 4.62077, 0.68 ) }
    dend_14 { pt3dadd( -6.5907, -22.562, 4.14766, 0.68 ) }
    dend_14 { pt3dadd( -6.96757, -23.5774, 3.93717, 0.68 ) }
    dend_14 { pt3dadd( -7.18313, -24.0689, 3.86037, 0.91 ) }
    dend_14 { pt3dadd( -8.07443, -25.7403, 3.67579, 0.91 ) }
    dend_14 { pt3dadd( -9.00052, -27.0301, 3.56812, 0.91 ) }
    dend_14 { pt3dadd( -9.73063, -27.8482, 3.54088, 0.91 ) }
    dend_14 { pt3dadd( -10.8429, -28.9326, 3.57856, 0.68 ) }
    dend_14 { pt3dadd( -12.1195, -29.859, 3.69464, 0.68 ) }
    dend_14 { pt3dadd( -13.1021, -30.4263, 3.81432, 0.91 ) }
    dend_14 { pt3dadd( -15.0705, -31.3475, 4.12565, 0.91 ) }
    dend_14 { pt3dadd( -16.6944, -32.0403, 4.42272, 0.91 ) }
    dend_14 { pt3dadd( -18.1332, -32.6327, 4.71018, 1.14 ) }
    dend_14 { pt3dadd( -19.6397, -33.2423, 5.01011, 1.14 ) }
    dend_14 { pt3dadd( -21.4621, -34.0493, 5.29785, 0.91 ) }
    dend_14 { pt3dadd( -22.9015, -34.7688, 5.45038, 1.14 ) }
    dend_14 { pt3dadd( -23.6439, -35.1855, 5.47532, 1.14 ) }
    dend_14 { pt3dadd( -25.349, -36.1404, 5.3763, 0.68 ) }
    dend_14 { pt3dadd( -26.6248, -36.8167, 5.21399, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_14 { pt3dadd( -28.0458, -37.4923, 4.97603, 0.91 ) }
    dend_14 { pt3dadd( -29.5957, -38.1682, 4.73932, 0.91 ) }
    dend_14 { pt3dadd( -31.3064, -38.8836, 4.52591, 0.91 ) }
    dend_14 { pt3dadd( -33.1148, -39.6419, 4.39669, 0.68 ) }
    dend_14 { pt3dadd( -34.6116, -40.2289, 4.33511, 0.91 ) }
    dend_14 { pt3dadd( -35.9441, -40.7295, 4.36617, 0.68 ) }
    dend_14 { pt3dadd( -37.5173, -41.2525, 4.51113, 0.68 ) }
    dend_14 { pt3dadd( -39.1989, -41.7686, 4.72128, 0.68 ) }
    dend_14 { pt3dadd( -41.1121, -42.3635, 4.97383, 0.68 ) }
    dend_14 { pt3dadd( -42.6237, -42.8488, 5.14399, 0.91 ) }
    dend_14 { pt3dadd( -44.3351, -43.3896, 5.27535, 0.68 ) }
    dend_14 { pt3dadd( -45.775, -43.8223, 5.31622, 0.91 ) }
    dend_14 { pt3dadd( -46.8941, -44.1379, 5.28989, 0.91 ) }
    dend_14 { pt3dadd( -48.4214, -44.5541, 5.21031, 0.68 ) }
    dend_14 { pt3dadd( -49.6579, -44.8541, 5.12297, 0.68 ) }
    dend_14 { pt3dadd( -50.4052, -45.0192, 5.06321, 0.68 ) }
    dend_14 { pt3dadd( -52.4293, -45.3957, 4.86217, 0.91 ) }
    dend_14 { pt3dadd( -55.168, -45.8236, 4.54522, 0.68 ) }
    dend_14 { pt3dadd( -56.716, -45.9975, 4.36287, 0.68 ) }
    dend_14 { pt3dadd( -58.3941, -46.1667, 4.15563, 0.91 ) }
    dend_14 { pt3dadd( -59.9845, -46.3173, 3.955, 0.68 ) }
    dend_14 { pt3dadd( -61.9215, -46.4381, 3.72362, 0.68 ) }
    dend_14 { pt3dadd( -64.0969, -46.4264, 3.47565, 0.91 ) }
    dend_14 { pt3dadd( -65.7079, -46.3205, 3.34036, 0.91 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 9.57129, -34.3686, 1.62853, 0.46 ) }
    dend_10 { pt3dadd( 8.92579, -35.5801, 0.549598, 0.46 ) }
    dend_10 { pt3dadd( 8.14825, -36.9941, -0.528701, 0.68 ) }
    dend_10 { pt3dadd( 7.51148, -38.0703, -1.31331, 0.68 ) }
    dend_10 { pt3dadd( 6.93875, -38.9303, -1.90145, 0.91 ) }
    dend_10 { pt3dadd( 6.31196, -39.7697, -2.47914, 0.91 ) }
    dend_10 { pt3dadd( 5.25103, -41.0491, -3.37617, 0.46 ) }
    dend_10 { pt3dadd( 4.55587, -41.8111, -3.86278, 0.46 ) }
    dend_10 { pt3dadd( 3.81644, -42.553, -4.31151, 0.46 ) }
    dend_10 { pt3dadd( 2.86659, -43.5362, -4.87035, 0.91 ) }
    dend_10 { pt3dadd( 2.08381, -44.4002, -5.3456, 0.46 ) }
    dend_10 { pt3dadd( 1.49866, -45.1196, -5.81252, 0.46 ) }
    dend_10 { pt3dadd( 1.01041, -45.945, -6.46766, 0.46 ) }
    dend_10 { pt3dadd( 0.844734, -46.5716, -7.04955, 0.23 ) }
    dend_10 { pt3dadd( 0.839833, -47.3926, -7.84537, 0.46 ) }
    dend_10 { pt3dadd( 0.91739, -47.8528, -8.31453, 0.23 ) }
    dend_10 { pt3dadd( 1.31882, -49.0952, -9.5222, 0.46 ) }
    dend_10 { pt3dadd( 1.66733, -49.9887, -10.3947, 0.46 ) }
    dend_10 { pt3dadd( 1.83327, -50.5317, -10.9502, 0.46 ) }
    dend_10 { pt3dadd( 1.96439, -51.4077, -11.8331, 0.91 ) }
    dend_10 { pt3dadd( 1.95425, -52.224, -12.6232, 0.23 ) }
    dend_10 { pt3dadd( 1.84131, -53.2336, -13.4983, 0.23 ) }
    dend_10 { pt3dadd( 1.78593, -53.5125, -13.7053, 0.23 ) }
    dend_10 { pt3dadd( 1.55313, -54.9152, -14.6528, 0.23 ) }
    dend_10 { pt3dadd( 1.5029, -55.706, -15.1589, 0.68 ) }
    dend_10 { pt3dadd( 1.52761, -56.9467, -15.9368, 0.68 ) }
    dend_10 { pt3dadd( 1.60724, -58.6363, -16.9701, 0.46 ) }
    dend_10 { pt3dadd( 1.66812, -59.6771, -17.5818, 0.23 ) }
    dend_10 { pt3dadd( 1.85446, -61.0273, -18.3042, 0.46 ) }
    dend_10 { pt3dadd( 2.18193, -62.4119, -18.9235, 0.23 ) }
    dend_10 { pt3dadd( 2.58801, -63.768, -19.4274, 0.23 ) }
    dend_10 { pt3dadd( 2.67553, -64.023, -19.4939, 0.23 ) }
    dend_10 { pt3dadd( 3.00018, -64.8832, -19.6476, 0.46 ) }
    dend_10 { pt3dadd( 3.53419, -66.2368, -19.844, 0.23 ) }
    dend_10 { pt3dadd( 4.08966, -67.7495, -20.0225, 0.68 ) }
    dend_10 { pt3dadd( 4.72836, -69.4726, -20.1728, 0.23 ) }
    dend_10 { pt3dadd( 5.4162, -71.2782, -20.2001, 0.23 ) }
    dend_10 { pt3dadd( 5.70319, -72.035, -20.1876, 0.23 ) }
    dend_10 { pt3dadd( 6.25914, -73.6016, -20.1022, 0.68 ) }
    dend_10 { pt3dadd( 6.68686, -75.0767, -19.9228, 0.23 ) }
    dend_10 { pt3dadd( 6.9144, -76.1586, -19.7458, 0.91 ) }
    dend_10 { pt3dadd( 7.19498, -78.4198, -19.3294, 0.23 ) }
    dend_10 { pt3dadd( 7.21928, -78.7694, -19.2789, 0.23 ) }
    dend_10 { pt3dadd( 7.2423, -80.0629, -19.1518, 0.46 ) }
    dend_10 { pt3dadd( 7.17847, -82.1539, -19.0241, 0.46 ) }
    dend_10 { pt3dadd( 7.04129, -84.5356, -18.9685, 0.23 ) }
    dend_10 { pt3dadd( 6.8634, -86.9689, -18.9731, 0.23 ) }
    dend_10 { pt3dadd( 6.73321, -88.6376, -19.0442, 0.91 ) }
    dend_10 { pt3dadd( 6.55701, -90.938, -19.1856, 0.23 ) }
    dend_10 { pt3dadd( 6.31566, -94.1806, -19.5021, 0.23 ) }
    dend_10 { pt3dadd( 6.2041, -95.4973, -19.6988, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 75/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 9.57129, -34.3686, 1.62853, 0.46 ) }
    dend_9 { pt3dadd( 10.5883, -36.5082, 0.407774, 0.46 ) }
    dend_9 { pt3dadd( 11.3514, -38.3019, -0.565016, 0.23 ) }
    dend_9 { pt3dadd( 12.0393, -40.0171, -1.53689, 0.46 ) }
    dend_9 { pt3dadd( 12.6953, -41.7623, -2.52582, 0.46 ) }
    dend_9 { pt3dadd( 13.2576, -43.3862, -3.41966, 0.68 ) }
    dend_9 { pt3dadd( 13.579, -44.4427, -3.98142, 0.68 ) }
    dend_9 { pt3dadd( 13.9456, -46.1216, -4.72159, 0.46 ) }
    dend_9 { pt3dadd( 14.133, -47.421, -5.24414, 0.46 ) }
    dend_9 { pt3dadd( 14.181, -48.0942, -5.4707, 0.46 ) }
    dend_9 { pt3dadd( 14.197, -49.1014, -5.74997, 0.68 ) }
    dend_9 { pt3dadd( 14.1942, -50.9054, -6.2013, 0.46 ) }
    dend_9 { pt3dadd( 14.186, -52.6149, -6.53956, 0.91 ) }
    dend_9 { pt3dadd( 14.1679, -53.6466, -6.69829, 0.68 ) }
    dend_9 { pt3dadd( 14.1123, -55.1737, -6.87721, 0.68 ) }
    dend_9 { pt3dadd( 14.0343, -56.7052, -7.04558, 0.68 ) }
    dend_9 { pt3dadd( 13.9569, -57.8622, -7.15781, 0.68 ) }
    dend_9 { pt3dadd( 13.8583, -59.2548, -7.20048, 0.91 ) }
    dend_9 { pt3dadd( 13.7258, -61.0115, -7.17995, 0.46 ) }
    dend_9 { pt3dadd( 13.6, -62.4013, -7.11225, 0.46 ) }
    dend_9 { pt3dadd( 13.4662, -63.6629, -7.00761, 0.91 ) }
    dend_9 { pt3dadd( 13.3532, -65.0375, -6.85001, 0.23 ) }
    dend_9 { pt3dadd( 13.252, -67.3623, -6.51713, 0.46 ) }
    dend_9 { pt3dadd( 13.2746, -68.5482, -6.34413, 0.46 ) }
    dend_9 { pt3dadd( 13.3994, -69.8035, -6.16925, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_9 { pt3dadd( 13.5903, -70.9706, -6.03609, 0.23 ) }
    dend_9 { pt3dadd( 13.8724, -72.2433, -5.94946, 0.23 ) }
    dend_9 { pt3dadd( 14.1825, -73.3943, -5.94988, 0.23 ) }
    dend_9 { pt3dadd( 14.504, -74.4652, -6.02744, 0.23 ) }
    dend_9 { pt3dadd( 14.9453, -75.8026, -6.14526, 0.23 ) }
    dend_9 { pt3dadd( 15.3101, -76.982, -6.07808, 0.68 ) }
    dend_9 { pt3dadd( 15.9433, -79.2516, -5.67927, 0.46 ) }
    dend_9 { pt3dadd( 16.1605, -80.2667, -5.38404, 0.46 ) }
    dend_9 { pt3dadd( 16.3299, -81.2276, -5.02957, 0.68 ) }
    dend_9 { pt3dadd( 16.5043, -82.5246, -4.47511, 0.23 ) }
    dend_9 { pt3dadd( 16.9352, -87.0214, -2.33878, 0.46 ) }
    dend_9 { pt3dadd( 17.0116, -88.2966, -1.68961, 0.46 ) }
    dend_9 { pt3dadd( 17.0221, -90.2046, -0.677305, 0.46 ) }
    dend_9 { pt3dadd( 16.9831, -90.9806, -0.2963, 0.46 ) }
    dend_9 { pt3dadd( 16.9093, -91.7617, 0.0165718, 0.68 ) }
    dend_9 { pt3dadd( 16.7731, -92.7922, 0.242985, 1.14 ) }
    dend_9 { pt3dadd( 16.6489, -93.8278, 0.207629, 0.68 ) }
    dend_9 { pt3dadd( 16.5315, -94.8986, 0.0404081, 0.68 ) }
    dend_9 { pt3dadd( 16.4572, -96.4407, -0.42724, 0.68 ) }
    dend_9 { pt3dadd( 16.3975, -97.554, -0.887308, 0.91 ) }
    dend_9 { pt3dadd( 16.287, -98.9229, -1.55991, 0.91 ) }
    dend_9 { pt3dadd( 16.1775, -100.153, -2.26196, 1.37 ) }
    dend_9 { pt3dadd( 16.0192, -101.993, -3.41892, 0.68 ) }
    dend_9 { pt3dadd( 15.9086, -103.251, -4.2244, 0.68 ) }
    dend_9 { pt3dadd( 15.7275, -104.698, -5.16882, 0.23 ) }
    dend_9 { pt3dadd( 15.5365, -105.864, -5.93721, 0.23 ) }
    dend_9 { pt3dadd( 15.3317, -106.792, -6.50513, 0.46 ) }
    dend_9 { pt3dadd( 15.2013, -107.217, -6.75952, 0.23 ) }
    dend_9 { pt3dadd( 14.6745, -108.63, -7.4003, 0.23 ) }
    dend_9 { pt3dadd( 14.2868, -109.621, -7.748, 0.68 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 30/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 12.326, -21.4184, -0.191942, 0.68 ) }
    dend_7 { pt3dadd( 13.1247, -20.8078, -0.801384, 0.68 ) }
    dend_7 { pt3dadd( 13.6884, -20.5461, -1.20185, 0.68 ) }
    dend_7 { pt3dadd( 15.0607, -20.2868, -2.0835, 0.68 ) }
    dend_7 { pt3dadd( 16.097, -20.1302, -2.63372, 0.68 ) }
    dend_7 { pt3dadd( 17.0391, -19.9932, -2.99891, 0.68 ) }
    dend_7 { pt3dadd( 18.3202, -19.8559, -3.46763, 0.91 ) }
    dend_7 { pt3dadd( 19.5351, -19.8662, -3.85245, 0.68 ) }
    dend_7 { pt3dadd( 20.1816, -19.9379, -4.04515, 0.68 ) }
    dend_7 { pt3dadd( 22.0964, -20.2215, -4.61824, 0.68 ) }
    dend_7 { pt3dadd( 23.4428, -20.3565, -5.11117, 0.68 ) }
    dend_7 { pt3dadd( 24.8411, -20.3613, -5.75132, 0.68 ) }
    dend_7 { pt3dadd( 25.7879, -20.2841, -6.26067, 0.91 ) }
    dend_7 { pt3dadd( 27.28, -20.1136, -7.06582, 0.91 ) }
    dend_7 { pt3dadd( 28.1312, -19.9834, -7.53569, 0.91 ) }
    dend_7 { pt3dadd( 29.4634, -19.7965, -8.26655, 0.68 ) }
    dend_7 { pt3dadd( 30.3481, -19.6555, -8.75714, 0.68 ) }
    dend_7 { pt3dadd( 31.9352, -19.3535, -9.51929, 0.68 ) }
    dend_7 { pt3dadd( 33.7228, -19.0014, -10.288, 0.91 ) }
    dend_7 { pt3dadd( 35.1776, -18.7293, -10.771, 0.46 ) }
    dend_7 { pt3dadd( 36.2195, -18.6024, -11.019, 0.46 ) }
    dend_7 { pt3dadd( 37.3561, -18.4869, -11.2765, 0.46 ) }
    dend_7 { pt3dadd( 38.1111, -18.3855, -11.5331, 0.91 ) }
    dend_7 { pt3dadd( 38.5779, -18.2676, -11.7829, 1.14 ) }
    dend_7 { pt3dadd( 39.4035, -17.9813, -12.441, 0.68 ) }
    dend_7 { pt3dadd( 40.3538, -17.6139, -13.4429, 0.46 ) }
    dend_7 { pt3dadd( 41.6082, -17.0347, -15.2648, 0.46 ) }
    dend_7 { pt3dadd( 42.5206, -16.6298, -17.0956, 0.46 ) }
    dend_7 { pt3dadd( 43.1054, -16.4967, -18.6633, 0.46 ) }
    dend_7 { pt3dadd( 43.461, -16.4611, -19.7547, 0.46 ) }
    dend_7 { pt3dadd( 43.6678, -16.4229, -20.5543, 0.46 ) }
    dend_7 { pt3dadd( 44.0175, -16.3316, -22.0795, 0.46 ) }
    dend_7 { pt3dadd( 44.5165, -16.2607, -23.8928, 0.46 ) }
    dend_7 { pt3dadd( 45.2551, -16.0785, -25.6888, 0.46 ) }
    dend_7 { pt3dadd( 45.8001, -15.7921, -26.6717, 0.46 ) }
    dend_7 { pt3dadd( 46.9549, -14.7695, -28.3068, 0.46 ) }
    dend_7 { pt3dadd( 47.2528, -14.4408, -28.6763, 0.46 ) }
    dend_7 { pt3dadd( 47.6682, -13.9356, -29.1107, 0.46 ) }
    dend_7 { pt3dadd( 48.6063, -12.8703, -30.0444, 0.91 ) }
    dend_7 { pt3dadd( 49.5273, -12.056, -31.0649, 0.46 ) }
    dend_7 { pt3dadd( 49.92, -11.8518, -31.5401, 0.46 ) }
    dend_7 { pt3dadd( 51.2928, -11.5561, -33.3578, 0.91 ) }
    dend_7 { pt3dadd( 51.7207, -11.5071, -33.9697, 0.23 ) }
    dend_7 { pt3dadd( 53.0216, -11.5337, -36.0042, 0.23 ) }
    dend_7 { pt3dadd( 54.1035, -11.7672, -37.838, 0.23 ) }
    dend_7 { pt3dadd( 54.467, -11.9007, -38.4669, 0.68 ) }
    dend_7 { pt3dadd( 55.3538, -12.3054, -40.0692, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 77/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 12.326, -21.4184, -0.191942, 0.91 ) }
    dend_4 { pt3dadd( 13.4124, -22.8955, 1.18883, 0.91 ) }
    dend_4 { pt3dadd( 14.5199, -24.4014, 2.59648, 0.91 ) }
    dend_4 { pt3dadd( 15.6126, -25.8871, 3.98521, 0.91 ) }
    dend_4 { pt3dadd( 16.2388, -26.7386, 4.78113, 1.14 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 82/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 16.2388, -26.7386, 4.78113, 1.14 ) }
    dend_6 { pt3dadd( 16.6181, -27.5733, 4.07043, 1.14 ) }
    dend_6 { pt3dadd( 17.0483, -28.5348, 3.42664, 0.91 ) }
    dend_6 { pt3dadd( 17.9992, -30.3955, 2.49425, 0.91 ) }
    dend_6 { pt3dadd( 18.8533, -31.9094, 1.8441, 0.68 ) }
    dend_6 { pt3dadd( 19.7435, -33.3229, 1.31985, 0.68 ) }
    dend_6 { pt3dadd( 20.5048, -34.4147, 0.924138, 0.68 ) }
    dend_6 { pt3dadd( 21.4697, -35.6925, 0.521041, 0.68 ) }
    dend_6 { pt3dadd( 22.7648, -37.2382, 0.174102, 0.91 ) }
    dend_6 { pt3dadd( 23.1748, -37.6668, 0.128444, 0.68 ) }
    dend_6 { pt3dadd( 24.1667, -38.5977, 0.0785129, 0.68 ) }
    dend_6 { pt3dadd( 25.3038, -39.5594, 0.0229715, 0.68 ) }
    dend_6 { pt3dadd( 26.2183, -40.2445, -0.0378149, 0.91 ) }
    dend_6 { pt3dadd( 27.8587, -41.4436, -0.19933, 0.91 ) }
    dend_6 { pt3dadd( 28.4322, -41.8871, -0.267408, 0.68 ) }
    dend_6 { pt3dadd( 29.4924, -42.7496, -0.383333, 0.68 ) }
    dend_6 { pt3dadd( 30.7448, -43.8254, -0.47501, 0.68 ) }
    dend_6 { pt3dadd( 32.0953, -45.0425, -0.456789, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_6 { pt3dadd( 32.9291, -45.8459, -0.410866, 0.68 ) }
    dend_6 { pt3dadd( 34.1722, -47.0703, -0.299816, 0.91 ) }
    dend_6 { pt3dadd( 34.8123, -47.6748, -0.231781, 0.46 ) }
    dend_6 { pt3dadd( 35.6814, -48.4446, -0.111895, 0.68 ) }
    dend_6 { pt3dadd( 37.3075, -49.8587, 0.0728807, 0.68 ) }
    dend_6 { pt3dadd( 38.4162, -50.7987, 0.172292, 0.68 ) }
    dend_6 { pt3dadd( 40.1773, -52.1897, 0.309449, 0.46 ) }
    dend_6 { pt3dadd( 41.5524, -53.2699, 0.392751, 0.91 ) }
    dend_6 { pt3dadd( 43.2898, -54.7229, 0.42649, 0.68 ) }
    dend_6 { pt3dadd( 44.7311, -55.97, 0.339626, 0.68 ) }
    dend_6 { pt3dadd( 45.5618, -56.705, 0.239713, 1.37 ) }
    dend_6 { pt3dadd( 46.3925, -57.4742, 0.120312, 1.14 ) }
    dend_6 { pt3dadd( 48.1864, -59.3028, -0.174491, 0.68 ) }
    dend_6 { pt3dadd( 49.5944, -60.8122, -0.409629, 0.68 ) }
    dend_6 { pt3dadd( 50.5376, -61.8516, -0.559765, 0.68 ) }
    dend_6 { pt3dadd( 51.7988, -63.2127, -0.705248, 0.68 ) }
    dend_6 { pt3dadd( 53.3512, -64.8207, -0.86425, 0.91 ) }
    dend_6 { pt3dadd( 54.5085, -65.8901, -0.958639, 0.68 ) }
    dend_6 { pt3dadd( 56.1383, -67.1831, -1.13861, 0.68 ) }
    dend_6 { pt3dadd( 57.6773, -68.2422, -1.36893, 0.68 ) }
    dend_6 { pt3dadd( 58.8263, -68.9289, -1.56703, 1.14 ) }
    dend_6 { pt3dadd( 59.8499, -69.3898, -1.8217, 0.91 ) }
    dend_6 { pt3dadd( 62.34, -70.0112, -2.62687, 0.46 ) }
    dend_6 { pt3dadd( 64.4104, -70.0817, -3.44447, 0.46 ) }
    dend_6 { pt3dadd( 65.5845, -69.8208, -3.99385, 0.91 ) }
    dend_6 { pt3dadd( 66.3934, -69.4702, -4.39192, 0.68 ) }
    dend_6 { pt3dadd( 67.6622, -68.7118, -5.066, 0.46 ) }
    dend_6 { pt3dadd( 68.4619, -68.1285, -5.52182, 0.46 ) }
    dend_6 { pt3dadd( 69.2271, -67.4997, -5.94884, 0.68 ) }
    dend_6 { pt3dadd( 69.8538, -67.0226, -6.24396, 0.46 ) }
    dend_6 { pt3dadd( 70.6846, -66.4896, -6.63188, 0.46 ) }
    dend_6 { pt3dadd( 71.8376, -65.9441, -7.1835, 0.46 ) }
    dend_6 { pt3dadd( 73.4098, -65.5212, -7.88998, 0.91 ) }
    dend_6 { pt3dadd( 74.2819, -65.3948, -8.30325, 0.91 ) }
    dend_6 { pt3dadd( 75.5828, -65.3711, -8.90151, 0.91 ) }
    dend_6 { pt3dadd( 76.6722, -65.4285, -9.41938, 0.68 ) }
    dend_6 { pt3dadd( 77.6922, -65.5544, -9.90728, 0.68 ) }
    dend_6 { pt3dadd( 79.3935, -65.8783, -10.6629, 0.91 ) }
    dend_6 { pt3dadd( 80.5406, -66.1725, -11.1642, 0.23 ) }
    dend_6 { pt3dadd( 82.4308, -66.7138, -11.9714, 0.23 ) }
    dend_6 { pt3dadd( 83.5306, -67.0788, -12.3491, 0.46 ) }
    dend_6 { pt3dadd( 85.1914, -67.6571, -12.8185, 1.14 ) }
    dend_6 { pt3dadd( 86.0098, -67.9575, -12.9862, 0.46 ) }
    dend_6 { pt3dadd( 87.2141, -68.4631, -13.1228, 0.23 ) }
    dend_6 { pt3dadd( 88.1915, -68.8703, -13.1386, 0.23 ) }
    dend_6 { pt3dadd( 90.4253, -69.7957, -13.0461, 0.68 ) }
    dend_6 { pt3dadd( 91.2604, -70.1378, -12.9748, 0.46 ) }
    dend_6 { pt3dadd( 93.2209, -70.9472, -12.7196, 0.46 ) }
    dend_6 { pt3dadd( 94.6942, -71.548, -12.5084, 0.46 ) }
    dend_6 { pt3dadd( 97.0111, -72.4339, -12.1598, 0.68 ) }
    dend_6 { pt3dadd( 98.3008, -72.9251, -11.984, 0.23 ) }
    dend_6 { pt3dadd( 99.7975, -73.48, -11.7719, 0.68 ) }
    dend_6 { pt3dadd( 101.901, -74.2918, -11.4122, 0.23 ) }
    dend_6 { pt3dadd( 103.341, -74.9181, -11.1278, 0.23 ) }
    dend_6 { pt3dadd( 104.311, -75.3774, -10.9061, 0.23 ) }
    dend_6 { pt3dadd( 105.494, -76.008, -10.6168, 0.23 ) }
    dend_6 { pt3dadd( 107.146, -76.9524, -10.1404, 0.23 ) }
    dend_6 { pt3dadd( 108.074, -77.575, -9.84123, 0.68 ) }
    dend_6 { pt3dadd( 109.428, -78.6349, -9.3412, 0.46 ) }
    dend_6 { pt3dadd( 110.328, -79.4325, -8.96498, 0.46 ) }
    dend_6 { pt3dadd( 111.284, -80.3221, -8.54484, 0.91 ) }
    dend_6 { pt3dadd( 112.703, -81.6543, -7.92333, 0.23 ) }
    dend_6 { pt3dadd( 113.781, -82.7224, -7.47793, 0.23 ) }
    dend_6 { pt3dadd( 115.048, -84.0072, -6.94158, 0.23 ) }
    dend_6 { pt3dadd( 115.798, -84.797, -6.63495, 0.68 ) }
    dend_6 { pt3dadd( 116.712, -85.8262, -6.29532, 0.23 ) }
    dend_6 { pt3dadd( 117.124, -86.3275, -6.11473, 0.46 ) }
    dend_6 { pt3dadd( 117.817, -87.1763, -5.81617, 0.91 ) }
    dend_6 { pt3dadd( 118.112, -87.4906, -5.69558, 0.46 ) }
    dend_6 { pt3dadd( 119.105, -88.4563, -5.2812, 0.23 ) }
    dend_6 { pt3dadd( 119.99, -89.3266, -4.87716, 0.46 ) }
    dend_6 { pt3dadd( 121.488, -90.8733, -4.07889, 0.23 ) }
    dend_6 { pt3dadd( 122.666, -92.0692, -3.40117, 0.46 ) }
    dend_6 { pt3dadd( 124.061, -93.422, -2.58467, 0.68 ) }
    dend_6 { pt3dadd( 125.248, -94.5105, -1.87846, 0.23 ) }
    dend_6 { pt3dadd( 126.0, -95.1554, -1.43326, 0.23 ) }
    dend_6 { pt3dadd( 127.099, -96.0536, -0.817688, 0.23 ) }
    dend_6 { pt3dadd( 127.482, -96.3699, -0.623571, 0.23 ) }
    dend_6 { pt3dadd( 128.238, -97.0781, -0.14047, 0.68 ) }
    dend_6 { pt3dadd( 129.729, -98.8322, 1.09147, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 80/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 16.2388, -26.7386, 4.78113, 0.68 ) }
    dend_5 { pt3dadd( 15.532, -27.524, 3.69393, 0.68 ) }
    dend_5 { pt3dadd( 14.9699, -28.3061, 2.75025, 0.68 ) }
    dend_5 { pt3dadd( 14.4725, -29.2712, 1.82657, 0.68 ) }
    dend_5 { pt3dadd( 14.1169, -30.3226, 1.00321, 0.68 ) }
    dend_5 { pt3dadd( 13.8723, -31.5366, 0.168931, 0.68 ) }
    dend_5 { pt3dadd( 13.7702, -32.6185, -0.489164, 0.68 ) }
    dend_5 { pt3dadd( 13.842, -34.0789, -1.18095, 0.91 ) }
    dend_5 { pt3dadd( 14.1619, -35.7863, -1.90706, 0.91 ) }
    dend_5 { pt3dadd( 14.5885, -37.1773, -2.462, 0.91 ) }
    dend_5 { pt3dadd( 14.9996, -38.1827, -2.8714, 0.91 ) }
    dend_5 { pt3dadd( 15.4719, -39.1221, -3.29469, 0.68 ) }
    dend_5 { pt3dadd( 15.9758, -39.9282, -3.72727, 0.68 ) }
    dend_5 { pt3dadd( 16.6676, -40.9395, -4.38666, 0.68 ) }
    dend_5 { pt3dadd( 16.89, -41.2245, -4.60893, 0.68 ) }
    dend_5 { pt3dadd( 17.5494, -42.0363, -5.31035, 0.68 ) }
    dend_5 { pt3dadd( 18.3766, -43.0653, -6.13315, 1.14 ) }
    dend_5 { pt3dadd( 19.3394, -44.3053, -7.0026, 0.46 ) }
    dend_5 { pt3dadd( 19.9125, -45.1109, -7.44861, 0.46 ) }
    dend_5 { pt3dadd( 20.7073, -46.3019, -7.93426, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_5 { pt3dadd( 21.2389, -47.1869, -8.22894, 0.46 ) }
    dend_5 { pt3dadd( 21.9628, -48.5876, -8.61361, 0.46 ) }
    dend_5 { pt3dadd( 22.3708, -49.5102, -8.83818, 1.14 ) }
    dend_5 { pt3dadd( 22.7994, -50.7704, -9.12925, 0.46 ) }
    dend_5 { pt3dadd( 23.1055, -51.9003, -9.36407, 0.46 ) }
    dend_5 { pt3dadd( 23.4067, -53.4245, -9.63118, 1.14 ) }
    dend_5 { pt3dadd( 23.7083, -55.4135, -9.92772, 0.68 ) }
    dend_5 { pt3dadd( 23.7782, -56.1005, -10.0419, 1.14 ) }
    dend_5 { pt3dadd( 23.8542, -57.9252, -10.3981, 0.46 ) }
    dend_5 { pt3dadd( 23.855, -58.8323, -10.5911, 0.68 ) }
    dend_5 { pt3dadd( 23.8289, -59.5166, -10.7369, 0.91 ) }
    dend_5 { pt3dadd( 23.7135, -60.5455, -10.9315, 0.23 ) }
    dend_5 { pt3dadd( 23.5171, -61.633, -11.1659, 0.46 ) }
    dend_5 { pt3dadd( 23.2314, -62.8571, -11.4672, 0.23 ) }
    dend_5 { pt3dadd( 22.9872, -63.9103, -11.7342, 0.46 ) }
    dend_5 { pt3dadd( 22.8076, -64.7248, -11.9557, 0.23 ) }
    dend_5 { pt3dadd( 22.5625, -66.0856, -12.3203, 0.23 ) }
    dend_5 { pt3dadd( 22.4079, -67.2207, -12.638, 0.91 ) }
    dend_5 { pt3dadd( 22.2794, -68.5447, -13.0326, 0.23 ) }
    dend_5 { pt3dadd( 22.1779, -70.3117, -13.657, 0.23 ) }
    dend_5 { pt3dadd( 22.1521, -71.2837, -14.0403, 0.23 ) }
    dend_5 { pt3dadd( 22.1556, -72.517, -14.5515, 0.68 ) }
    dend_5 { pt3dadd( 22.1886, -74.2452, -15.2652, 0.23 ) }
    dend_5 { pt3dadd( 22.211, -75.7992, -15.8718, 1.14 ) }
    dend_5 { pt3dadd( 22.1642, -78.125, -16.6647, 0.23 ) }
    dend_5 { pt3dadd( 22.0687, -79.2007, -16.9629, 0.23 ) }
    dend_5 { pt3dadd( 21.9374, -80.0278, -17.1048, 0.23 ) }
    dend_5 { pt3dadd( 21.624, -81.4206, -17.2114, 0.46 ) }
    dend_5 { pt3dadd( 21.3506, -82.3143, -17.1645, 0.23 ) }
    dend_5 { pt3dadd( 20.5368, -84.2138, -16.8665, 0.23 ) }
    dend_5 { pt3dadd( 20.2509, -84.7607, -16.7451, 0.23 ) }
    dend_5 { pt3dadd( 19.6254, -85.8169, -16.4881, 0.68 ) }
    dend_5 { pt3dadd( 19.2647, -86.4083, -16.341, 0.46 ) }
    dend_5 { pt3dadd( 18.3987, -87.8083, -16.0152, 0.46 ) }
    dend_5 { pt3dadd( 17.66, -88.9784, -15.7866, 0.46 ) }
    dend_5 { pt3dadd( 17.0401, -90.0067, -15.6955, 0.46 ) }
    dend_5 { pt3dadd( 16.4348, -91.1193, -15.6749, 0.68 ) }
    dend_5 { pt3dadd( 16.0345, -91.9511, -15.7347, 0.91 ) }
    dend_5 { pt3dadd( 15.4874, -93.358, -15.9562, 0.23 ) }
    dend_5 { pt3dadd( 15.2095, -94.413, -16.2252, 0.46 ) }
    dend_5 { pt3dadd( 14.8206, -96.6605, -16.9318, 0.23 ) }
    dend_5 { pt3dadd( 14.7006, -97.7255, -17.304, 0.46 ) }
    dend_5 { pt3dadd( 14.613, -99.1844, -17.8831, 0.23 ) }
    dend_5 { pt3dadd( 14.5808, -100.787, -18.5394, 0.91 ) }
    dend_5 { pt3dadd( 14.612, -102.37, -19.1733, 0.23 ) }
    dend_5 { pt3dadd( 14.6996, -104.155, -19.825, 0.23 ) }
    dend_5 { pt3dadd( 14.786, -105.443, -20.2469, 0.23 ) }
    dend_5 { pt3dadd( 14.8304, -106.431, -20.5293, 0.23 ) }
    dend_5 { pt3dadd( 14.8717, -107.589, -20.8039, 0.46 ) }
    dend_5 { pt3dadd( 14.9116, -109.101, -21.1054, 0.23 ) }
    dend_5 { pt3dadd( 14.9471, -110.282, -21.3073, 0.46 ) }
    dend_5 { pt3dadd( 15.0369, -111.868, -21.6098, 0.23 ) }
    dend_5 { pt3dadd( 15.1367, -113.015, -21.8272, 0.23 ) }
    dend_5 { pt3dadd( 15.2424, -114.02, -22.0014, 0.46 ) }
    dend_5 { pt3dadd( 15.4122, -115.411, -22.2649, 0.23 ) }
    dend_5 { pt3dadd( 15.5588, -116.406, -22.4681, 0.91 ) }
    dend_5 { pt3dadd( 15.8287, -117.952, -22.7827, 0.23 ) }
    dend_5 { pt3dadd( 16.0766, -119.121, -22.9823, 0.46 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_36, dend_23, dend_20, dend_17, dend_0, dend_51, dend_48, dend_40, dend_37, dend_29, dend_24, dend_22, dend_21, dend_19, dend_18, dend_16, dend_1, dend_50, dend_49, dend_42, dend_41, dend_39, dend_38, dend_31, dend_30, dend_26, dend_25, dend_11, dend_2, dend_44, dend_43, dend_35, dend_32, dend_28, dend_27, dend_13, dend_12, dend_8, dend_3, dend_46, dend_45, dend_34, dend_33, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_6, dend_5]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_36, dend_23, dend_20, dend_17, dend_0, dend_51, dend_48, dend_40, dend_37, dend_29, dend_24, dend_22, dend_21, dend_19, dend_18, dend_16, dend_1, dend_50, dend_49, dend_42, dend_41, dend_39, dend_38, dend_31, dend_30, dend_26, dend_25, dend_11, dend_2, dend_44, dend_43, dend_35, dend_32, dend_28, dend_27, dend_13, dend_12, dend_8, dend_3, dend_46, dend_45, dend_34, dend_33, dend_15, dend_14, dend_10, dend_9, dend_7, dend_4, dend_6, dend_5]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_18 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_50 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_41 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_44 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_14 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_10 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_9 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_6 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_5 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_23 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_29 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_36 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_37 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_31 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_48 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_3 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_32 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_17 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_4 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_24 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_15 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_12 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_39 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_42 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_26 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_27 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_43 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_45 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_46 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_48 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_19 nseg = 3
    dend_18 nseg = 5
    dend_50 nseg = 5
    dend_49 nseg = 5
    dend_41 nseg = 3
    dend_30 nseg = 5
    dend_44 nseg = 3
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_14 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 5
    dend_7 nseg = 3
    dend_6 nseg = 7
    dend_5 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_DLAC_d80e9f2875_0_0


