// Cell: bAC217_L23_LBC_361cffb4c6_0_0
/*
{
  "id" : "bAC217_L23_LBC_361cffb4c6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.14355, -7.38643, 0.0, 3.00626", "-1.94813, -6.57976, 0.0, 3.91171", "-1.75271, -5.7731, 0.0, 5.48682", "-1.55728, -4.96644, 0.0, 7.76121", "-1.36186, -4.15978, 0.0, 8.36238", "-1.16644, -3.35311, 0.0, 8.81706", "-0.971019, -2.54645, 0.0, 9.16666", "-0.775597, -1.73979, 0.0, 9.47967", "-0.580175, -0.933125, 0.0, 9.69737", "-0.384753, -0.126463, 0.0, 9.91023", "-0.189331, 0.6802, 0.0, 10.2136", "0.00609047, 1.48686, 0.0, 10.5121", "0.201512, 2.29352, 0.0, 10.3333", "0.396934, 3.10019, 0.0, 10.1326", "0.592356, 3.90685, 0.0, 9.93193", "0.787778, 4.71351, 0.0, 9.69022", "0.9832, 5.52018, 0.0, 8.92901", "1.17862, 6.32684, 0.0, 8.02961", "1.37404, 7.1335, 0.0, 6.7633", "1.56947, 7.94016, 0.0, 3.32024", "1.76489, 8.74683, 0.0, 2.02537" ]
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.809262, 7.80544, 5.02, 1.94", "-0.100971, 17.3511, 8.94465, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.39926, -2.27406, 14.6, 1.94", "1.54901, -5.65552, 14.6, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.680737, -5.86506, -1.0, 1.66", "0.811369, -7.45548, -0.969871, 1.66", "3.90429, -10.7522, -0.907418, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.56074, -7.01456, -2.14, 3.05", "-3.01325, -8.51119, -2.14, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-6.40074, 0.82294, -0.63, 1.38", "-8.83187, 2.04296, 0.0210205, 1.38", "-11.8011, 3.49157, 1.05564, 1.38", "-15.0466, 4.9908, 2.32185, 1.11", "-18.3447, 6.51434, 3.60858, 1.11", "-23.2189, 8.76587, 5.51015, 1.11", "-28.2123, 11.0725, 7.45827, 1.11", "-31.5513, 12.5632, 8.94579, 0.83", "-32.9543, 13.1163, 9.66262, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.33926, 3.61594, 5.79, 1.38", "7.95554, 4.34049, 6.4807, 1.38", "11.8117, 5.4084, 7.49873, 1.38", "15.4389, 6.41294, 8.45633, 1.11", "18.3688, 7.22433, 9.22982, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999858164011
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.76489, 8.74683, 0.0, 0.55", "5.29663, 23.3251, 0.0, 0.55", "8.82836, 37.9034, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.100971, 17.3511, 8.94465, 1.11", "1.20344, 18.2794, 8.96288, 1.11" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-0.100971, 17.3511, 8.94465, 0.83", "-1.53948, 19.079, 9.19801, 0.83", "-3.06011, 20.9917, 9.55768, 0.83", "-5.00117, 23.3295, 10.0616, 0.83", "-6.08031, 24.6346, 10.3717, 1.11", "-7.48279, 26.2854, 10.7819, 0.83", "-9.13466, 28.181, 11.2575, 1.11", "-11.065, 30.366, 11.795, 0.55", "-13.0655, 32.5511, 12.3447, 0.83", "-15.8041, 35.6172, 13.0181, 0.83", "-18.1063, 38.3432, 13.4754, 0.83", "-20.5591, 41.358, 13.8559, 0.83", "-22.0696, 43.2817, 14.0189, 0.55", "-22.8745, 44.3068, 14.0659, 1.11", "-25.4054, 47.5751, 14.1517, 0.83", "-27.7097, 50.5196, 14.1773, 0.55", "-28.4338, 51.468, 14.1863, 0.83", "-29.9657, 53.4833, 14.2064, 0.55", "-31.501, 55.4589, 14.258, 0.83", "-33.7361, 58.2319, 14.3739, 0.83", "-35.886, 60.5673, 14.6295, 0.83", "-37.3926, 62.0722, 14.865, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "1.54901, -5.65552, 14.6, 1.11", "0.506095, -7.75586, 12.2498, 1.11", "0.068158, -8.68922, 11.398, 1.11", "-0.396215, -9.79733, 10.5425, 0.83", "-1.10556, -11.5946, 9.35986, 1.38", "-3.33845, -17.925, 5.82209, 0.83", "-4.24694, -20.7567, 4.55075, 0.83", "-5.2012, -24.1232, 3.5994, 0.83", "-5.64427, -25.9311, 3.3585, 0.83", "-6.14774, -28.2515, 3.38493, 0.83", "-6.66462, -30.8609, 3.88107, 0.83", "-7.36369, -34.5557, 5.11456, 0.83", "-8.04679, -38.2143, 6.41684, 0.83", "-8.45709, -40.528, 7.2751, 0.83", "-9.05949, -43.7328, 8.29264, 1.11", "-9.8751, -48.1454, 9.48727, 1.11", "-10.3981, -50.9196, 10.1292, 1.11", "-11.1106, -54.6877, 10.7914, 1.38", "-11.9876, -59.5899, 11.3628, 1.38", "-12.8854, -64.4486, 11.759, 1.11", "-13.4756, -67.4918, 11.9707, 1.11", "-14.2255, -71.2724, 12.1481, 0.55", "-15.0848, -75.6227, 12.446, 0.83", "-15.7908, -79.3062, 12.7757, 0.83", "-16.1882, -81.4713, 13.0348, 0.83", "-16.4782, -83.1709, 13.3317, 0.83", "-16.6821, -84.4495, 13.5024, 0.83", "-17.1734, -87.8845, 13.8019, 0.55", "-17.5587, -90.9702, 14.0728, 1.11", "-17.8781, -93.9112, 14.3003, 0.83", "-18.3014, -98.548, 14.7692, 0.83", "-18.6466, -103.019, 15.2709, 0.55", "-18.8845, -105.847, 15.6328, 0.83", "-19.183, -109.767, 16.1889, 1.11", "-19.4893, -114.977, 16.8982, 1.11", "-19.7097, -119.206, 17.435, 0.83", "-19.76, -120.296, 17.6122, 0.83", "-19.8291, -122.133, 18.0011, 1.11", "-19.8925, -123.974, 18.3639, 1.11", "-19.9926, -126.684, 18.6548, 0.83", "-20.1095, -128.76, 18.5937, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.54901, -5.65552, 14.6, 1.38", "2.78949, -8.47225, 14.6127, 1.38" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.90429, -10.7522, -0.907418, 1.38", "7.44943, -11.8736, -3.79356, 1.38", "11.8475, -12.8482, -7.65673, 1.11", "13.8356, -13.2831, -9.54023, 1.11", "15.7655, -13.8766, -11.4307, 1.11", "18.5517, -14.8658, -14.2475, 1.11", "24.0068, -16.5133, -19.7676, 0.83", "25.2071, -16.5361, -21.0326, 0.83", "27.169, -16.1153, -23.379, 0.83", "28.744, -15.5659, -25.6086, 0.83", "29.0972, -15.4079, -26.1657, 0.83", "31.119, -14.1552, -29.5615, 0.83", "33.2043, -12.3904, -33.4637, 0.83", "34.9156, -10.7968, -36.7581, 0.55", "35.4372, -10.279, -37.7732, 0.55", "36.8518, -8.86555, -40.5364, 1.66", "40.4022, -5.64649, -47.542, 1.11", "43.4975, -3.27612, -54.0141, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.90429, -10.7522, -0.907418, 0.55", "-3.55773, 0.0426641, -14.1566, 0.55", "-4.06295, 0.82705, -14.9637, 1.11", "-5.47146, 3.15351, -17.0406, 0.83", "-7.11639, 6.04427, -19.4744, 0.83", "-9.71127, 10.6594, -23.6185, 0.83", "-11.826, 14.4342, -27.1179, 0.83", "-13.6045, 17.9616, -29.4599, 0.55", "-14.7033, 20.1574, -31.0274, 0.83", "-15.7193, 22.139, -32.6095, 0.83", "-18.0776, 26.9985, -36.801, 0.28", "-19.0896, 29.0495, -39.2991, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-3.01325, -8.51119, -2.14, 1.38", "-5.29652, -10.8432, -2.06791, 1.38", "-9.27691, -14.9087, -1.94225, 1.38" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.01325, -8.51119, -2.14, 1.38", "-2.39429, -18.2018, -1.72282, 1.38", "-1.84241, -26.8424, -1.35084, 1.38", "-1.54659, -31.4738, -1.15145, 2.77" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-32.9543, 13.1163, 9.66262, 0.83", "-36.1003, 15.0309, 8.41048, 0.83", "-38.2427, 16.3462, 7.39308, 1.11", "-39.1847, 16.9245, 6.94575, 0.83", "-40.829, 17.9339, 6.1649, 1.11", "-42.0852, 18.7051, 5.56834, 0.83", "-45.23, 20.6357, 4.07494, 0.83", "-45.9027, 21.0125, 3.82104, 1.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-32.9543, 13.1163, 9.66262, 0.55", "-34.3135, 12.0497, 8.41908, 0.55", "-35.77, 10.9686, 7.05555, 0.83", "-38.6638, 8.94004, 4.42198, 0.83", "-40.2358, 7.82053, 3.13044, 0.28", "-41.1661, 7.17856, 2.4799, 0.28", "-43.2497, 5.8732, 0.943209, 0.83", "-44.4272, 5.27215, 0.0448304, 0.28", "-45.1849, 4.95584, -0.501651, 0.28", "-47.2046, 4.33948, -2.02272, 0.55", "-49.074, 3.8405, -3.45537, 0.28", "-53.9087, 2.69076, -7.21251, 1.11", "-55.2261, 2.39837, -8.25551, 0.83", "-56.4097, 2.1317, -9.23217, 0.83", "-60.4737, 1.09686, -12.942, 0.28", "-61.9283, 0.70226, -14.3705, 0.28", "-63.0693, 0.304328, -15.5453, 0.55", "-64.4715, -0.310847, -16.8653, 0.28", "-65.3133, -0.717998, -17.7758, 0.55", "-67.4762, -1.83158, -20.2389, 0.28", "-67.9113, -2.07492, -20.7217, 0.55", "-69.5948, -3.059, -22.5862, 0.28", "-70.422, -3.55858, -23.4006, 0.55", "-73.8502, -5.70448, -26.4391, 0.28", "-75.1682, -6.58568, -27.6086, 0.28", "-75.9053, -7.12178, -28.2594, 0.28", "-77.5487, -8.47222, -29.861, 0.83", "-80.6173, -11.2956, -32.9936, 0.28", "-80.9579, -11.6442, -33.3652, 0.83", "-82.5189, -13.3962, -35.0687, 0.28", "-83.6023, -14.6356, -36.4767, 0.55", "-85.0798, -16.3294, -38.5878, 0.28", "-85.3823, -16.6551, -39.0974, 0.55", "-86.2111, -17.5155, -40.5445, 0.28", "-86.7315, -18.0223, -41.3815, 0.55", "-88.6039, -19.695, -44.2205, 0.28", "-89.1619, -20.1783, -45.053, 0.55", "-91.6403, -22.2783, -48.7852, 0.28", "-92.7947, -23.2519, -50.5909, 0.28", "-93.235, -23.6266, -51.3091, 0.55", "-95.3887, -25.5232, -54.9428, 0.28", "-95.7148, -25.8454, -55.4738, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "18.3688, 7.22433, 9.22982, 1.11", "19.8101, 6.48769, 9.81464, 1.11", "21.4265, 5.66153, 10.4705, 1.11", "23.1202, 4.79584, 11.1578, 1.11", "24.983, 3.84374, 11.9137, 0.83", "27.6759, 2.46741, 13.0064, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "18.3688, 7.22433, 9.22982, 0.83", "20.0683, 9.58702, 9.7776, 0.83", "20.9829, 10.9646, 10.3239, 0.83", "21.7539, 12.2265, 10.8492, 0.55", "22.7625, 14.007, 11.5799, 0.83", "24.1513, 16.6867, 12.6007, 1.11", "26.0076, 20.3513, 13.9021, 0.83", "27.7952, 24.1722, 15.2946, 1.11", "29.2995, 27.5804, 16.5443, 0.83", "30.3574, 29.9997, 17.4335, 0.83", "32.0393, 33.9256, 18.9209, 1.38", "32.4129, 34.8358, 19.2571, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.82836, 37.9034, 0.0, 0.28", "12.3601, 52.4817, 0.0, 0.28", "15.8918, 67.06, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "1.20344, 18.2794, 8.96288, 0.83", "0.820251, 20.1672, 10.9806, 0.83", "0.338757, 22.0645, 12.9568, 0.83", "-0.246765, 27.4711, 17.7146, 0.55", "-0.429964, 29.4115, 19.3229, 0.55", "-0.499726, 30.8013, 20.3184, 0.55", "-0.63118, 33.1897, 21.827, 0.55", "-0.779115, 36.9206, 23.8355, 0.55", "-1.02789, 42.7707, 26.7809, 0.83", "-1.29693, 46.5952, 28.4136, 0.55", "-1.70506, 50.5705, 30.1173, 0.55", "-1.99508, 52.9002, 31.0882, 0.55", "-2.66882, 57.8295, 33.0017, 0.55", "-3.23753, 62.7171, 34.7451, 0.55", "-3.96619, 65.8688, 35.9089, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.20344, 18.2794, 8.96288, 0.83", "1.8755, 21.7937, 8.04189, 0.83", "2.25706, 23.7485, 7.61665, 1.11", "3.073, 28.0618, 6.81955, 1.11", "3.96456, 32.5768, 6.10187, 1.11", "5.00872, 37.4473, 5.44772, 1.11", "5.5704, 39.8719, 5.08416, 1.11", "6.85259, 44.9192, 4.35681, 1.11", "7.82133, 48.3699, 3.86693, 1.11", "8.86497, 51.8784, 3.43935, 1.11", "10.3632, 56.74, 2.90452, 1.11", "11.7476, 61.367, 2.48353, 1.11", "12.9714, 65.3546, 2.09356, 1.11", "14.1818, 69.1304, 1.69321, 1.11", "14.87, 71.2485, 1.46579, 1.11", "15.2702, 72.5664, 1.3383, 1.11", "16.9326, 78.747, 1.03234, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-37.3926, 62.0722, 14.865, 0.28", "-39.4721, 65.1447, 14.7663, 0.28", "-39.8369, 66.0703, 14.8378, 0.28", "-40.0171, 66.7532, 14.9448, 0.55", "-40.3213, 67.8385, 15.1571, 0.28", "-40.643, 68.986, 15.3815, 0.55", "-41.0038, 70.273, 15.6333, 0.28", "-41.0707, 71.2354, 15.8988, 0.55", "-41.0963, 72.1789, 16.1749, 0.28", "-41.1447, 73.3067, 16.5359, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-37.3926, 62.0722, 14.865, 0.83", "-38.5082, 63.748, 14.5879, 0.83", "-40.6539, 67.0704, 14.1527, 0.55", "-41.3077, 68.1192, 14.0333, 0.83", "-42.6113, 70.2191, 13.9052, 0.83", "-43.8322, 72.7292, 14.0868, 0.83", "-45.3033, 76.1661, 14.6154, 0.83", "-46.2988, 78.9247, 15.2975, 0.83", "-46.8908, 80.9549, 15.9481, 0.55", "-47.6991, 83.9833, 17.045, 0.83", "-49.3123, 90.9676, 19.764, 0.55", "-49.6905, 93.0135, 20.5819, 0.55", "-49.7491, 93.4777, 20.7917, 0.83", "-50.0187, 95.6932, 21.8479, 0.55", "-50.2328, 97.1164, 22.5115, 0.55", "-50.7479, 99.3796, 23.3962, 0.55", "-51.1217, 100.381, 23.6737, 0.83", "-52.3215, 103.857, 24.6938, 0.55", "-53.1139, 106.15, 25.4468, 0.55", "-53.3548, 106.826, 25.7191, 0.83", "-53.9739, 108.631, 26.492, 0.55", "-54.5768, 110.099, 27.2608, 0.83" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "2.78949, -8.47225, 14.6127, 0.55", "2.10593, -11.3077, 15.1631, 0.55", "1.52337, -12.9582, 15.7294, 1.38", "0.0611909, -15.7981, 16.9014, 1.38", "-2.78601, -20.3083, 18.7113, 0.83", "-4.75145, -23.4217, 19.9607, 0.83", "-6.41774, -26.0613, 21.0199, 1.11", "-8.96192, -29.9223, 22.7276, 0.55", "-11.529, -33.2894, 24.4347, 0.83", "-13.8705, -35.4885, 25.8792, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "2.78949, -8.47225, 14.6127, 0.83", "6.72161, -8.31416, 14.8356, 0.83", "8.43013, -7.28016, 15.0843, 0.83", "9.82007, -5.81829, 15.1599, 0.83", "11.3395, -4.10473, 15.3974, 1.38", "12.8261, -2.42817, 15.6298, 1.38", "15.072, 0.104708, 15.9809, 0.83", "17.9796, 4.19733, 16.3403, 0.83", "19.6697, 6.86101, 16.6463, 0.83", "21.5822, 10.7022, 17.1619, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "43.4975, -3.27612, -54.0141, 0.28", "44.5592, -2.79945, -59.7072, 0.28", "44.7985, -2.64793, -60.0568, 0.55", "45.7243, -1.90874, -60.7012, 0.28", "46.4737, -1.24739, -61.2337, 0.28", "48.6254, 0.70582, -62.6512, 0.83", "50.8585, 2.79945, -64.0661, 0.28", "52.2166, 4.15426, -65.189, 0.83", "53.5077, 5.48157, -66.4238, 1.11", "55.2745, 7.42237, -68.2605, 0.55", "55.6516, 7.86986, -68.7428, 0.83", "56.4198, 8.86916, -69.8363, 0.28", "56.8105, 9.36471, -70.4201, 0.83", "58.4592, 11.3608, -73.2058, 0.28", "59.0638, 12.0829, -74.2818, 0.83", "61.1151, 14.5783, -77.9567, 0.28", "61.7498, 15.3473, -79.1087, 0.55", "62.3233, 15.9876, -80.1097, 1.11", "63.8106, 17.4282, -82.4147, 0.28", "64.1687, 17.6945, -82.982, 0.55", "64.8388, 18.0451, -84.0866, 0.28", "65.2229, 18.1631, -84.6964, 0.55", "66.2833, 18.3109, -86.4341, 0.28", "66.7413, 18.2606, -87.5252, 0.83", "69.173, 17.4733, -93.9968, 0.28", "69.4952, 17.3298, -94.8938, 0.83", "70.1894, 16.9552, -96.8649, 0.28", "70.6083, 16.6878, -98.0651, 0.83", "73.9819, 14.259, -107.726, 0.28", "74.3493, 13.9735, -108.806, 0.55", "75.2061, 13.2356, -111.198, 0.28", "75.437, 13.0416, -111.859, 0.83", "76.3329, 12.2297, -114.557, 0.28", "76.5624, 12.0424, -115.213, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "43.4975, -3.27612, -54.0141, 0.55", "43.4675, -3.2865, -55.1558, 0.55", "43.4142, -3.39984, -60.3887, 0.28", "43.4125, -3.43863, -61.6926, 0.83", "43.4702, -3.57563, -63.9902, 0.28", "43.5142, -3.65817, -64.9845, 0.83", "43.8797, -4.56905, -72.1721, 0.55", "44.0468, -5.0726, -74.404, 0.28", "44.1838, -5.49767, -75.5534, 0.83", "44.6577, -7.15124, -78.8528, 0.28", "44.7548, -7.54698, -79.4249, 0.83", "45.0386, -9.27271, -81.07, 0.28", "45.5766, -13.1433, -83.3238, 0.28", "45.6112, -13.5477, -83.5209, 0.83", "45.641, -14.2678, -83.8242, 0.28", "45.6388, -14.9232, -84.0565, 0.55", "45.5006, -19.7719, -85.7993, 0.28", "45.4848, -20.0848, -85.9087, 0.55", "45.3755, -21.4584, -86.375, 0.28", "45.3284, -22.1935, -86.607, 0.55", "45.1724, -24.7348, -87.7914, 0.28", "45.1492, -25.0669, -87.9935, 0.55", "44.9693, -27.6512, -89.9879, 0.28", "44.8966, -28.3683, -90.6227, 0.55", "44.7944, -29.0541, -91.2902, 0.55", "43.9322, -33.3619, -95.9778, 0.28", "43.8238, -33.7333, -96.4463, 0.55", "43.4805, -34.6495, -97.6641, 0.28", "43.3481, -34.8802, -98.0099, 0.55", "42.7641, -35.7186, -99.1321, 0.28", "42.6887, -35.8274, -99.2679, 0.55", "42.449, -36.2041, -99.6508, 0.28", "42.1441, -36.7441, -100.228, 0.83", "40.9266, -39.1203, -102.881, 0.28", "40.676, -39.7049, -103.463, 0.55", "39.3531, -43.2579, -106.814, 0.28", "39.017, -44.2083, -107.7, 0.55", "38.4843, -45.8585, -109.201, 0.28", "38.4069, -46.1454, -109.444, 0.55", "37.8049, -49.2216, -111.539, 0.28", "37.7196, -49.7788, -111.861, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-19.0896, 29.0495, -39.2991, 0.28", "-20.5207, 27.285, -41.6494, 0.28", "-21.0664, 26.5576, -42.5749, 0.83", "-22.117, 25.1829, -44.2288, 0.28", "-23.0333, 24.0139, -45.5773, 1.11", "-28.2844, 17.3143, -53.3055, 0.28", "-29.4285, 15.8545, -54.9895, 0.28", "-29.5706, 15.6602, -55.2471, 0.83", "-30.6022, 14.1078, -57.459, 0.28", "-30.8369, 13.6977, -58.09, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-19.0896, 29.0495, -39.2991, 0.28", "-18.7825, 32.9886, -40.9328, 0.28", "-18.7497, 33.9139, -41.2817, 0.83", "-18.8906, 36.762, -42.7014, 0.28", "-19.079, 38.4913, -43.5829, 0.28", "-19.3226, 40.0513, -44.4668, 0.83", "-19.9084, 43.6079, -46.5471, 0.28", "-20.2903, 45.5218, -47.7495, 1.11", "-21.2107, 49.8112, -50.154, 0.28", "-21.6856, 52.1254, -51.2682, 1.11", "-22.6315, 56.6961, -53.2698, 0.28", "-22.771, 57.4205, -53.5388, 0.28", "-23.1394, 59.7819, -54.2317, 0.83", "-23.5294, 63.406, -55.0051, 0.28", "-23.657, 65.6348, -55.2383, 0.83", "-23.8119, 68.8169, -55.6951, 0.28", "-23.9261, 71.0387, -56.0431, 0.83", "-24.0975, 73.0437, -56.4209, 0.28", "-24.3121, 74.8966, -56.8412, 0.28", "-24.646, 77.2625, -57.4214, 0.83", "-25.6664, 82.884, -58.6859, 0.28", "-25.9785, 84.1991, -58.9278, 0.55", "-26.9351, 87.2294, -59.6513, 0.28", "-27.2678, 88.1397, -59.8639, 0.55", "-27.8714, 89.7547, -60.4092, 0.28", "-28.3459, 91.0387, -60.9151, 0.55", "-28.8493, 92.5034, -61.5683, 0.83", "-30.4011, 97.321, -64.4506, 0.28", "-30.9194, 99.1034, -65.6209, 0.55", "-32.1439, 104.004, -69.0244, 0.28", "-32.44, 105.381, -69.9527, 0.28", "-32.6369, 106.567, -70.7064, 0.55", "-32.9337, 108.84, -72.0212, 0.28", "-33.2014, 111.532, -73.3173, 0.83", "-33.4585, 117.954, -75.5969, 0.28", "-33.417, 121.448, -76.2227, 0.28", "-33.3485, 122.071, -76.2583, 0.83", "-33.1176, 123.282, -76.2692, 0.83", "-32.7845, 124.39, -76.3261, 0.83", "-30.9665, 129.424, -77.3235, 0.28", "-30.8674, 129.661, -77.3838, 0.83", "-29.0664, 133.842, -78.9693, 0.28", "-27.7639, 136.864, -80.7592, 0.83", "-25.6615, 141.701, -83.6171, 0.28", "-24.1013, 145.495, -85.9956, 0.55", "-23.6038, 146.838, -86.92, 0.83", "-23.2056, 147.978, -87.6238, 0.83", "-21.7049, 153.339, -88.9345, 0.83", "-19.2743, 163.157, -86.258, 0.55", "-19.1312, 163.968, -86.0013, 0.83", "-18.8252, 166.426, -85.5244, 0.28", "-18.7914, 167.039, -85.5465, 0.55", "-18.9043, 171.342, -86.3936, 0.28", "-19.3149, 177.557, -88.5331, 0.55", "-19.5635, 181.448, -90.4892, 0.28", "-19.6233, 182.507, -91.0904, 0.55", "-19.6695, 184.196, -92.0889, 0.28", "-19.6638, 185.757, -92.8768, 0.55", "-19.4957, 188.527, -93.8268, 0.28", "-19.3159, 190.351, -93.9954, 0.28", "-18.9596, 193.292, -93.9949, 0.55", "-18.5673, 196.256, -93.7803, 0.28", "-18.127, 199.702, -93.2885, 0.83", "-17.7094, 203.844, -92.4431, 0.28", "-17.5548, 206.763, -91.6758, 0.28", "-17.5155, 208.352, -91.2323, 0.55", "-17.5232, 211.66, -90.2571, 0.28", "-17.5804, 212.672, -90.0118, 0.83", "-17.8821, 215.734, -89.4845, 0.28", "-18.0524, 217.188, -89.3535, 0.55", "-18.2743, 219.447, -89.2763, 0.28", "-18.4062, 220.82, -89.291, 0.28", "-18.6639, 223.395, -89.4587, 0.55", "-18.8524, 227.312, -89.9126, 0.28", "-18.7909, 229.927, -90.3069, 0.28", "-18.7441, 231.069, -90.4878, 0.55", "-18.6586, 232.972, -90.7995, 0.28", "-18.5273, 234.341, -91.0614, 0.55", "-17.9235, 237.678, -91.8632, 0.28", "-17.5195, 239.33, -92.3726, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-9.27691, -14.9087, -1.94225, 0.55", "-11.9347, -14.3629, -4.19184, 0.55", "-14.7336, -13.7655, -6.81957, 1.11", "-17.7502, -13.0935, -9.63756, 0.83", "-19.516, -12.6701, -11.2084, 0.83", "-22.2934, -11.9412, -13.6875, 1.11", "-23.8356, -11.4729, -15.0391, 1.11", "-26.7135, -10.206, -17.6172, 0.28", "-27.7992, -9.70814, -18.5395, 0.83", "-28.8793, -9.23181, -19.4104, 0.55", "-30.7939, -8.49492, -21.0256, 1.38", "-32.8152, -7.85265, -22.6306, 0.55", "-34.9179, -7.32555, -24.3245, 0.83", "-38.3328, -6.48956, -27.2263, 0.55", "-39.7696, -6.16505, -28.7349, 0.83", "-42.1491, -5.68173, -31.5435, 0.55", "-43.6239, -5.40058, -33.3968, 0.55", "-46.1721, -4.90147, -36.7841, 0.55", "-48.6182, -4.26667, -40.1574, 1.11", "-52.1863, -2.77285, -44.9241, 1.11", "-53.1057, -2.25469, -46.0934, 0.28", "-53.5261, -1.94725, -46.5356, 0.55", "-54.8512, -0.85308, -47.4843, 0.28", "-56.5613, 0.68981, -47.9586, 0.55", "-59.0742, 2.913, -48.0373, 0.28", "-60.97, 4.54277, -48.1094, 0.55", "-63.8821, 6.96817, -48.4798, 1.38", "-65.7607, 8.4939, -48.8516, 1.11", "-68.3995, 10.5664, -49.6926, 0.28", "-70.0895, 11.915, -50.4304, 0.83", "-73.584, 14.8426, -52.2978, 0.28", "-74.0322, 15.2086, -52.5953, 0.55", "-75.608, 16.4538, -53.763, 0.28", "-78.0937, 18.3703, -55.5402, 0.83", "-80.9454, 20.3831, -57.7157, 0.28", "-82.1775, 21.1645, -58.6016, 0.83", "-86.1547, 23.4569, -61.1645, 0.28", "-87.1739, 23.9686, -61.8237, 0.83", "-88.502, 24.5383, -62.6762, 0.83", "-93.7804, 26.5447, -65.7968, 0.28", "-97.4638, 27.7803, -67.8582, 0.28", "-98.7218, 28.203, -68.5501, 1.11", "-100.985, 28.9639, -69.6912, 0.28", "-101.491, 29.1291, -69.9421, 0.55", "-103.608, 29.7137, -70.9096, 0.28", "-104.212, 29.8473, -71.1702, 0.55", "-107.023, 30.3196, -72.6294, 0.28", "-107.944, 30.4586, -73.1657, 0.83", "-110.669, 30.8365, -74.8544, 0.28", "-111.595, 30.9258, -75.4288, 0.83", "-114.204, 31.0616, -77.1381, 0.28", "-114.772, 31.1073, -77.4689, 0.55", "-116.905, 31.3246, -78.568, 0.28", "-117.635, 31.4458, -78.9286, 0.55", "-121.097, 32.1603, -80.5024, 0.28", "-123.084, 32.6375, -81.3727, 0.83", "-127.258, 33.7037, -83.0576, 0.28", "-127.804, 33.8484, -83.2738, 0.83", "-133.829, 35.4925, -85.5481, 0.28", "-134.945, 35.8054, -85.9774, 0.83", "-138.391, 36.8156, -87.4121, 0.28", "-139.227, 37.0571, -87.7569, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-9.27691, -14.9087, -1.94225, 0.83", "-10.2107, -15.6986, -4.30879, 0.83", "-12.206, -17.0983, -9.11817, 1.11", "-13.6308, -18.1055, -12.4641, 1.11", "-15.4812, -19.411, -16.5333, 1.11", "-17.2588, -20.586, -20.1971, 1.11", "-20.6167, -22.7393, -26.7647, 1.11", "-21.8612, -23.4113, -29.2437, 0.83", "-22.6321, -23.8134, -30.7634, 1.38", "-25.3774, -25.1779, -35.7832, 0.83", "-28.1875, -26.6869, -40.4656, 0.83", "-30.1974, -27.9008, -43.6757, 1.11", "-32.9002, -29.6945, -47.9444, 0.83", "-34.201, -30.635, -50.0424, 0.55", "-35.3744, -31.5829, -52.0002, 1.38", "-36.3648, -32.557, -53.7371, 0.83", "-37.1745, -33.5776, -55.2512, 1.11", "-39.0089, -36.1883, -58.7978, 1.11", "-39.9049, -37.7025, -60.5514, 0.28", "-40.4145, -38.7435, -61.7125, 0.83", "-41.3028, -40.8489, -64.1811, 0.28", "-41.5837, -41.4902, -64.9239, 0.55", "-42.5397, -43.6343, -67.0779, 0.28", "-43.3962, -45.2524, -68.5394, 1.38", "-44.4904, -47.0565, -70.1609, 1.38", "-46.3754, -49.7999, -72.7448, 0.55", "-47.5218, -51.4902, -74.2916, 0.55", "-49.3269, -54.0156, -76.6674, 1.38", "-52.2592, -58.1153, -80.5771, 0.28", "-54.5372, -61.0246, -83.9217, 0.83", "-56.782, -63.7749, -87.4157, 0.28", "-58.2214, -65.5578, -89.823, 0.28", "-59.2522, -66.8655, -91.7828, 0.83", "-59.8548, -67.6526, -93.1099, 0.83", "-62.7894, -71.9507, -100.642, 0.28", "-63.1092, -72.4301, -101.534, 0.55", "-64.2503, -74.1289, -104.584, 0.28", "-64.4273, -74.3396, -104.964, 0.55", "-66.4439, -76.6178, -108.765, 0.28", "-67.3892, -77.5325, -110.287, 1.11", "-71.1533, -80.9778, -115.653, 0.28", "-73.4041, -82.9553, -118.771, 0.83", "-77.9452, -86.8595, -124.862, 0.28", "-78.681, -87.4631, -125.848, 0.83", "-82.7096, -90.5779, -131.244, 0.28", "-83.2767, -90.9798, -132.05, 0.83", "-84.3859, -91.6868, -133.716, 0.28", "-84.9789, -92.0578, -134.706, 0.55", "-87.8253, -94.0305, -140.17, 0.28", "-88.9746, -94.7842, -142.489, 0.55", "-90.2103, -95.6049, -145.197, 0.28", "-91.3183, -96.1827, -147.574, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.54659, -31.4738, -1.15145, 2.49", "-1.73098, -34.4688, -1.1833, 2.49" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.54659, -31.4738, -1.15145, 0.83", "-0.131103, -32.4363, -1.99085, 0.83", "1.00555, -33.0668, -2.43034, 0.55", "2.08003, -33.6988, -2.77608, 0.55", "3.75249, -34.801, -3.31043, 0.55", "4.95638, -35.5868, -3.55128, 0.83", "6.90908, -36.8759, -3.94889, 0.55", "9.20907, -38.3541, -4.31155, 0.55", "10.9042, -39.4752, -4.5571, 0.83", "13.3651, -41.214, -4.91917, 0.83", "16.6072, -43.3179, -5.3688, 0.83", "18.9518, -44.7387, -5.77479, 0.83", "21.4793, -46.1844, -6.30067, 0.83", "24.0123, -47.6006, -6.89634, 0.83", "26.1191, -48.6229, -7.43815, 0.83", "29.0944, -49.9745, -8.31482, 0.83", "31.3852, -51.0626, -9.13075, 0.83", "32.9341, -51.8054, -9.66876, 0.55", "35.0876, -52.876, -10.5087, 0.83", "37.7367, -54.1548, -11.5455, 0.55", "39.5625, -55.0961, -12.2855, 0.55", "41.011, -56.0117, -12.9269, 0.55", "41.6446, -56.4312, -13.2118, 0.55", "43.3254, -57.526, -13.9985, 0.83", "46.1539, -59.2844, -15.3197, 0.55", "46.6113, -59.5381, -15.5281, 0.55", "49.2017, -60.7979, -16.5975, 0.55", "50.3027, -61.2763, -17.023, 0.55", "51.5627, -61.8029, -17.5015, 0.55", "53.1933, -62.4286, -18.1083, 0.55", "55.2616, -63.1012, -18.9172, 0.55", "57.8824, -63.8123, -19.8283, 0.55", "58.6561, -63.925, -20.0188, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-45.9027, 21.0125, 3.82104, 0.55", "-47.3426, 21.8478, 4.12077, 0.55", "-49.3647, 23.0456, 4.50306, 0.83", "-50.881, 23.847, 5.2277, 0.55", "-52.5074, 24.6642, 6.3516, 0.55", "-54.769, 25.7654, 8.12273, 1.38", "-56.3195, 26.5011, 9.38451, 0.28", "-57.1951, 26.9084, 10.1166, 0.55", "-61.4915, 28.7823, 13.4886, 0.55", "-62.7509, 29.3273, 14.4601, 0.28", "-63.7406, 29.7766, 15.202, 0.83", "-65.6859, 30.7235, 16.6087, 0.55", "-67.573, 31.779, 17.7209, 0.55", "-69.1716, 32.8064, 18.3829, 0.55", "-70.5872, 33.8427, 18.777, 0.28", "-72.054, 34.9852, 19.1555, 0.55", "-73.7726, 36.4559, 19.4778, 0.28", "-75.9573, 38.5071, 19.75, 0.55", "-77.8133, 40.4104, 19.9221, 0.55", "-79.1121, 41.8586, 19.9602, 0.28", "-79.8559, 42.739, 19.91, 0.55", "-81.9887, 45.4633, 19.5543, 0.28", "-82.1086, 45.6246, 19.5198, 0.55", "-83.1645, 47.2005, 19.0967, 0.28", "-83.6573, 47.9903, 18.9224, 0.55", "-84.2617, 49.0002, 18.788, 0.28", "-84.6388, 49.5979, 18.8249, 0.55", "-85.9746, 51.5099, 19.2574, 0.28", "-86.7314, 52.476, 19.5019, 0.83", "-87.7589, 53.6483, 19.8256, 0.28", "-88.6168, 54.5509, 20.0561, 0.55", "-90.5244, 56.3751, 20.4621, 0.28", "-91.7176, 57.4357, 20.6575, 0.55", "-93.4106, 58.7629, 20.7968, 0.28", "-94.6604, 59.6315, 20.8067, 0.55", "-96.7007, 60.8937, 20.6278, 0.28", "-97.7686, 61.4745, 20.4607, 0.28", "-98.175, 61.6637, 20.3482, 0.83", "-100.464, 62.5917, 19.6024, 0.28", "-101.352, 62.9194, 19.1831, 0.83", "-102.889, 63.4294, 18.4003, 0.28", "-103.422, 63.5692, 18.0683, 0.55", "-105.651, 64.0612, 16.3811, 0.28", "-106.273, 64.1559, 15.8083, 0.55", "-108.764, 64.3872, 13.114, 0.28", "-110.091, 64.4298, 11.4967, 0.55", "-112.847, 64.275, 7.93974, 0.28", "-113.596, 64.2141, 6.84639, 0.83", "-115.05, 64.0302, 4.55262, 0.28", "-115.05, 64.0302, 4.55262, 0.55", "-116.066, 63.7937, 2.95709, 0.28", "-116.718, 63.6415, 1.83541, 0.83", "-118.667, 63.2289, -1.52634, 0.28", "-118.971, 63.1868, -2.04177, 0.55", "-119.41, 63.1762, -2.75741, 0.28", "-119.935, 63.1956, -3.63528, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-45.9027, 21.0125, 3.82104, 0.28", "-44.5495, 24.4925, 5.30779, 0.28", "-44.1035, 25.6449, 5.97901, 0.55", "-43.4806, 27.3675, 7.0673, 0.28", "-43.0226, 28.7369, 8.01855, 0.55", "-42.5642, 30.1939, 9.03937, 0.28", "-42.1779, 31.7326, 9.64096, 0.55", "-41.7309, 34.4457, 9.8009, 0.28", "-41.6306, 35.4866, 9.69028, 0.55", "-41.3929, 39.0903, 9.05983, 0.28", "-41.3176, 40.3786, 8.80915, 0.83", "-40.6169, 51.5866, 6.77945, 0.28", "-40.5007, 53.2289, 6.50888, 1.11", "-40.0803, 57.8944, 5.68428, 0.28", "-39.6529, 61.8328, 5.10505, 0.28", "-39.3319, 64.148, 4.80907, 0.55", "-38.8178, 66.8697, 4.77191, 0.28", "-38.5097, 68.1546, 5.01367, 0.55", "-37.835, 71.1253, 5.1645, 0.28", "-37.6298, 72.1604, 5.11581, 0.55", "-37.3492, 74.2214, 4.98724, 0.28", "-37.2836, 75.2841, 5.06707, 0.55", "-37.2449, 78.7167, 5.64106, 0.28", "-37.2988, 82.0615, 7.00204, 0.55", "-37.4727, 85.8951, 9.21589, 0.28", "-37.5578, 87.1058, 9.85798, 0.55", "-38.0597, 92.4327, 12.5551, 0.28", "-38.185, 93.6697, 13.1662, 0.83", "-38.6811, 99.001, 15.7999, 0.28", "-38.7495, 99.9432, 16.2696, 0.83", "-39.3363, 107.15, 18.8684, 0.28", "-39.4348, 108.109, 19.1766, 0.55", "-39.8618, 111.494, 19.8925, 0.28", "-39.9915, 112.511, 20.0696, 0.55", "-40.3297, 115.076, 20.2353, 0.28", "-40.3905, 115.757, 20.5474, 0.55", "-40.4519, 116.934, 21.5076, 0.28", "-40.4847, 117.51, 21.9905, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "27.6759, 2.46741, 13.0064, 0.55", "29.1222, 0.83991, 17.0063, 0.55", "29.4467, 0.463055, 17.8832, 1.38", "30.4945, -0.864324, 20.531, 0.55", "32.0972, -3.03151, 24.2774, 0.83", "34.4771, -6.24985, 29.8409, 0.55", "35.2241, -7.26002, 31.5872, 0.55", "35.5237, -7.62643, 32.2451, 0.55", "36.5453, -8.88387, 34.6014, 0.55", "37.1638, -9.6711, 36.071, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "27.6759, 2.46741, 13.0064, 0.83", "30.3987, 2.16437, 13.681, 0.83", "32.3236, 1.98503, 14.0809, 0.83", "33.8238, 1.93558, 14.4485, 0.83", "36.5109, 1.9327, 15.1822, 0.83", "39.3487, 1.98356, 15.9632, 0.83", "42.3691, 2.02095, 16.7753, 0.83", "44.878, 2.00413, 17.5048, 0.83", "47.4987, 1.86103, 18.3229, 0.55", "49.9691, 1.66568, 18.9725, 0.83", "53.6968, 1.20481, 19.7312, 0.83", "57.0381, 0.64149, 20.181, 0.83", "59.7668, 0.0736991, 20.4365, 0.55", "61.7271, -0.410669, 20.5526, 0.83", "66.5073, -1.67906, 20.5618, 0.83", "68.2492, -2.12508, 20.5101, 0.83", "71.0144, -2.78884, 20.3911, 0.55", "72.8706, -3.15675, 20.305, 0.55", "76.0018, -3.527, 20.1637, 0.83", "78.966, -3.72942, 20.1816, 0.55", "80.5297, -3.76864, 20.3305, 0.55", "81.5895, -3.75952, 20.4972, 0.55", "83.4469, -3.66397, 20.852, 0.55", "85.9372, -3.49924, 21.4316, 0.55", "87.936, -3.4107, 22.0598, 0.83", "89.16, -3.44297, 22.5357, 0.83", "91.6469, -3.68277, 23.5765, 0.55", "94.3807, -4.21792, 24.8212, 0.55", "95.5195, -4.55438, 25.3893, 0.55", "97.6664, -5.47042, 26.5935, 0.28", "99.377, -6.34624, 27.6117, 0.28", "100.062, -6.76403, 28.0567, 0.55", "101.757, -7.9303, 29.2071, 0.28", "102.168, -8.27097, 29.5237, 0.55", "104.103, -9.96147, 31.0445, 0.28", "104.824, -10.5706, 31.5958, 0.28", "105.583, -11.1795, 32.2273, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "32.4129, 34.8358, 19.2571, 0.55", "29.621, 36.6742, 18.1998, 0.55", "26.9606, 38.298, 17.0476, 0.55", "26.0263, 38.865, 16.6306, 0.55", "24.8733, 39.647, 16.0932, 0.83", "21.2424, 42.3873, 14.3505, 0.28", "20.8308, 42.7377, 14.1371, 0.55", "18.6712, 44.8349, 12.8353, 0.28", "18.0026, 45.7162, 12.3183, 1.11", "15.8548, 49.5687, 10.372, 0.28", "15.38, 50.8054, 9.80245, 0.55", "14.8545, 52.9157, 8.95431, 0.28", "14.6629, 54.003, 8.55444, 0.55", "14.1586, 58.2615, 7.18411, 0.28", "14.0259, 59.8108, 6.74185, 0.55", "13.8789, 62.344, 6.13825, 0.28", "13.857, 62.7655, 6.05415, 0.83", "13.7539, 66.029, 5.56232, 0.28", "13.8144, 68.3983, 5.09424, 0.28", "13.9863, 70.9188, 4.63329, 0.28", "14.1851, 72.2968, 4.37978, 0.55", "14.9403, 75.9468, 3.97808, 0.28", "15.3347, 77.3326, 3.86638, 0.55", "17.0561, 81.7072, 3.85723, 0.28", "18.3791, 84.4393, 4.11267, 0.83", "19.9089, 87.3621, 4.55478, 0.83", "21.5323, 90.2142, 5.26158, 0.28", "22.1063, 91.1417, 5.69374, 0.55", "23.5205, 93.3513, 7.24652, 0.28", "23.693, 93.6153, 7.53228, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "32.4129, 34.8358, 19.2571, 0.55", "33.7504, 37.224, 20.1362, 0.55", "34.6054, 38.788, 20.7383, 1.11", "36.0478, 41.5473, 21.7877, 0.83", "38.1688, 45.5179, 22.9675, 0.83", "40.9844, 50.7826, 24.3457, 0.83", "42.3676, 53.2172, 24.9182, 0.83", "43.4459, 55.0855, 25.3851, 0.28", "44.1451, 56.3032, 25.6642, 0.55", "46.4337, 60.4439, 26.4636, 0.83", "47.5791, 62.4904, 26.788, 0.83", "49.2715, 65.5003, 27.0655, 0.55", "50.6015, 68.0186, 27.4475, 0.83", "52.4798, 71.7865, 28.2975, 0.83", "52.9682, 72.8721, 28.6264, 0.83", "53.5585, 74.6003, 29.3624, 0.83", "54.0752, 76.5427, 30.217, 0.83", "54.5554, 78.7926, 31.3712, 0.55", "55.0014, 80.6635, 32.421, 0.28", "55.2651, 81.756, 33.0872, 0.55", "55.9799, 84.3314, 34.6348, 0.28", "56.2524, 85.2804, 35.1299, 0.55", "57.2385, 88.3226, 36.4721, 0.28", "57.4791, 89.1171, 36.708, 0.83", "58.0257, 90.7342, 37.0753, 0.28", "58.2142, 91.2336, 37.145, 0.55", "58.9254, 93.288, 37.3639, 0.28", "59.4551, 94.9923, 37.5205, 0.55", "60.0844, 97.3952, 37.6961, 0.28", "60.6252, 99.5016, 37.9338, 0.28", "61.3279, 102.166, 38.3656, 0.28", "62.1484, 105.36, 38.9376, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "16.9326, 78.747, 1.03234, 0.83", "16.6736, 79.8988, 0.997056, 0.83", "16.2995, 81.8597, 0.94604, 0.83", "16.0359, 83.7571, 0.906597, 0.83", "15.8711, 85.3239, 0.806442, 0.83", "15.6891, 87.8308, 0.604572, 0.83", "15.6188, 89.5024, 0.454596, 0.55", "15.6281, 91.0506, 0.250098, 0.83", "15.797, 94.1281, -0.311838, 0.83", "16.1189, 97.3643, -0.991545, 0.83", "16.2964, 98.7332, -1.35087, 1.11", "16.5759, 100.609, -1.89821, 0.83", "17.0918, 103.804, -2.83625, 0.83", "17.586, 107.112, -3.78658, 0.83", "17.9749, 109.914, -4.61398, 0.83", "18.372, 113.009, -5.49001, 0.83", "18.6753, 115.83, -6.25422, 0.83", "18.9059, 118.497, -6.93278, 0.83", "19.0466, 120.439, -7.34693, 0.83", "19.1638, 122.758, -7.79042, 0.83", "19.2085, 123.912, -7.98355, 0.83", "19.2696, 125.336, -8.15144, 0.55", "19.3556, 126.866, -8.39951, 0.55", "19.4791, 128.8, -8.7724, 0.55", "19.5953, 129.938, -8.99284, 0.55", "19.7864, 131.902, -9.31656, 0.28", "19.8778, 132.761, -9.46371, 0.55", "20.1268, 134.764, -9.9751, 0.28", "20.326, 136.276, -10.4238, 0.28", "20.4724, 137.331, -10.8308, 0.28", "20.659, 138.742, -11.4275, 0.55", "20.8274, 140.226, -12.0725, 0.55", "21.1068, 143.118, -13.2341, 0.28", "21.2161, 144.607, -13.7651, 1.38", "21.4046, 147.03, -14.6893, 0.55", "21.4806, 148.416, -15.2438, 0.55", "21.5171, 149.129, -15.5392, 0.55", "21.5247, 151.175, -16.2956, 0.55", "21.4727, 152.565, -16.5601, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "16.9326, 78.747, 1.03234, 0.83", "17.5931, 82.2813, 1.38829, 0.83", "18.1208, 84.9199, 1.7316, 0.83", "18.5157, 86.9354, 2.00756, 0.83", "19.0384, 89.6289, 2.46541, 0.83", "19.6005, 92.3849, 2.95718, 0.83", "20.366, 96.0647, 3.61261, 0.83", "21.2788, 100.333, 4.40162, 0.83", "22.0311, 103.734, 5.02036, 0.83", "23.0398, 108.016, 5.7661, 0.83", "23.6003, 110.304, 6.14456, 0.83", "24.1846, 112.725, 6.4926, 0.83", "24.8714, 115.647, 6.87517, 0.83", "25.3612, 117.979, 7.08018, 0.83", "25.4909, 118.76, 7.13057, 0.83", "25.7385, 121.472, 7.28728, 0.83", "25.7515, 124.484, 7.38336, 0.83", "25.5835, 127.83, 7.41186, 0.83", "25.2546, 132.413, 7.33519, 0.83", "25.0194, 135.276, 7.21203, 0.83", "24.7513, 139.167, 6.89162, 0.83", "24.3811, 143.991, 6.42016, 0.83", "23.9553, 149.485, 5.8085, 0.83", "23.5771, 154.753, 5.13961, 0.83", "23.2104, 160.667, 4.3087, 0.83", "23.0314, 168.582, 3.00353, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.73098, -34.4688, -1.1833, 1.38", "-1.48445, -36.2873, -1.26478, 1.38", "-1.30502, -37.6108, -1.32408, 1.38" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-1.73098, -34.4688, -1.1833, 0.83", "-2.69005, -37.7397, -2.19055, 0.83", "-3.4437, -40.5766, -3.22471, 1.11", "-4.00524, -42.8011, -4.08346, 0.28", "-5.1043, -47.1301, -5.71929, 0.83", "-6.41296, -52.1473, -7.52037, 0.28", "-7.16305, -54.9149, -8.50161, 0.83", "-7.9472, -57.8303, -9.61787, 0.28", "-8.06929, -58.2485, -9.78504, 0.83", "-9.25229, -61.8551, -11.2775, 0.83", "-10.2732, -64.6164, -12.2837, 0.83", "-10.8407, -65.9831, -12.7461, 0.83", "-11.9726, -68.5213, -13.5856, 0.28", "-12.7203, -70.1222, -14.0415, 1.11", "-14.7051, -74.286, -15.1868, 0.28", "-16.0232, -77.0271, -15.8714, 0.83", "-17.0914, -79.258, -16.3203, 0.28", "-17.3862, -79.916, -16.4587, 0.83", "-17.9677, -81.2898, -16.7823, 0.28", "-18.2214, -81.95, -17.0071, 0.55", "-18.7001, -83.0963, -17.5221, 0.28", "-18.9858, -83.695, -17.8506, 1.11", "-21.2799, -88.1473, -20.2088, 0.28", "-21.8197, -89.0896, -20.6862, 0.55", "-23.448, -91.9122, -21.8782, 0.28", "-24.575, -93.8474, -22.5381, 0.28", "-25.7301, -95.8312, -23.0387, 0.83", "-27.048, -98.1515, -23.3543, 0.28", "-27.8524, -99.6393, -23.2768, 0.55", "-29.4935, -103.164, -22.8489, 0.28", "-29.8382, -104.03, -22.7181, 0.55", "-30.8699, -107.219, -22.273, 0.28", "-31.1558, -108.349, -22.1436, 0.83", "-31.932, -112.182, -21.8554, 0.28", "-32.4438, -115.381, -21.6489, 0.28", "-32.6485, -116.908, -21.6171, 0.83", "-32.9484, -120.182, -21.8676, 0.28", "-33.0784, -123.404, -22.4211, 0.28", "-33.0752, -124.18, -22.6285, 0.83", "-32.9532, -126.492, -23.5054, 0.28", "-32.8072, -128.095, -24.1925, 0.55", "-32.2633, -132.471, -26.2172, 0.28", "-32.1534, -133.116, -26.559, 0.55", "-31.7299, -135.275, -27.7713, 0.28", "-31.6468, -135.739, -28.01, 0.55", "-31.5502, -136.329, -28.2933, 0.28", "-31.4777, -136.992, -28.4948, 0.55", "-31.3603, -138.912, -28.8605, 0.28", "-31.3446, -139.92, -28.9786, 0.55", "-31.3422, -142.863, -29.1545, 0.28", "-31.3328, -143.826, -29.2069, 0.83", "-31.3219, -147.774, -29.385, 0.28", "-31.3226, -148.735, -29.414, 0.83", "-31.3553, -154.286, -29.5101, 0.28", "-31.4092, -159.719, -29.4351, 0.28", "-31.4075, -161.939, -29.327, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "62.1484, 105.36, 38.9376, 0.28", "62.1497, 107.873, 40.0156, 0.28", "62.2123, 110.805, 41.3566, 0.28", "62.3083, 113.001, 42.3743, 0.28", "62.2989, 113.815, 42.6488, 0.55", "62.1725, 115.685, 43.0899, 0.28", "62.0509, 116.768, 43.286, 0.55", "61.902, 117.944, 43.3531, 0.28", "61.7322, 118.77, 43.3263, 0.55", "60.5546, 122.888, 42.7592, 0.28", "59.9401, 124.717, 42.3236, 0.28", "59.6656, 125.39, 42.0806, 0.28", "58.8935, 127.019, 41.3842, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "62.1484, 105.36, 38.9376, 0.55", "63.9953, 104.53, 38.0546, 0.55", "65.4437, 103.689, 37.298, 0.55", "66.6659, 102.78, 36.5388, 0.55", "69.4012, 100.516, 34.7925, 0.28", "70.1744, 99.8282, 34.3599, 0.55", "72.1176, 98.0082, 33.4191, 0.28", "73.0187, 97.0435, 33.0042, 0.55", "74.4745, 95.4165, 32.5218, 0.28", "75.0786, 94.8024, 32.4678, 0.55", "76.7719, 93.2179, 32.6982, 0.28", "77.5022, 92.5601, 32.8293, 0.83", "79.5011, 90.763, 33.3289, 0.28", "80.7464, 89.6162, 33.6745, 0.55", "82.7013, 87.6575, 34.3064, 0.28", "83.2872, 87.0234, 34.5273, 0.55", "84.8326, 85.3858, 34.9362, 0.28", "85.7682, 84.4068, 35.2254, 0.55", "87.127, 83.0725, 35.7538, 0.28", "88.1364, 82.4975, 36.1204, 0.55", "90.7097, 82.2674, 36.2705, 0.28", "95.0709, 82.4099, 35.8564, 0.28", "97.5727, 82.4128, 34.9595, 0.55", "99.8246, 82.1653, 33.6511, 0.28", "100.703, 82.0634, 33.003, 0.83", "104.279, 81.3158, 29.6976, 0.28", "104.457, 81.2322, 29.4757, 0.55", "106.227, 79.3628, 26.542, 0.28", "106.563, 78.9498, 25.9151, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "21.4727, 152.565, -16.5601, 0.83", "20.2137, 158.83, -18.2419, 0.83", "19.6951, 161.413, -19.0688, 0.83", "19.1336, 164.357, -20.054, 0.55", "18.6995, 166.6, -20.8046, 0.83", "18.2385, 169.124, -21.6329, 0.83", "17.7456, 171.947, -22.6115, 0.83", "17.1973, 175.676, -23.7554, 0.55", "17.0911, 176.676, -24.1352, 0.83", "17.0023, 177.915, -24.6718, 0.55", "16.9163, 179.141, -25.2548, 0.83", "16.8066, 181.173, -26.4044, 0.28", "16.7581, 183.098, -27.5299, 0.55", "16.6653, 185.828, -29.3705, 0.55", "16.6088, 187.511, -30.6418, 0.28", "16.5495, 189.749, -32.4953, 0.55", "16.4166, 192.598, -35.0385, 0.55", "16.2838, 194.253, -36.6582, 0.55", "15.7029, 197.995, -41.0545, 0.28", "15.5747, 198.509, -41.7527, 0.55", "15.1714, 199.529, -43.4134, 0.28", "14.7647, 200.313, -44.8404, 0.83", "14.111, 201.347, -46.7713, 0.55", "13.0575, 202.777, -49.6286, 0.83", "12.2895, 203.693, -51.4046, 0.83", "9.99243, 206.212, -56.3297, 0.83", "9.10542, 207.116, -58.1299, 0.55", "8.70398, 207.537, -58.9525, 0.83", "7.29135, 209.115, -61.8488, 0.28", "6.94563, 209.507, -62.5362, 0.55", "5.4223, 211.03, -65.445, 0.28", "4.68058, 211.722, -66.5861, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "21.4727, 152.565, -16.5601, 0.55", "22.5254, 153.455, -17.113, 0.55", "23.1586, 153.991, -17.4455, 0.28", "24.2045, 154.876, -17.9948, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "23.0314, 168.582, 3.00353, 0.55", "25.1728, 169.62, 0.95729, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "23.0314, 168.582, 3.00353, 0.83", "23.0054, 170.661, 2.31225, 0.83", "23.2982, 175.329, 0.750994, 0.55", "23.5368, 177.419, 0.126429, 1.11", "23.9501, 180.519, -0.703201, 0.55", "24.2618, 182.471, -1.19437, 0.83", "24.7111, 185.106, -1.83559, 0.55", "25.5464, 189.242, -2.79228, 0.83", "26.4662, 193.312, -3.63001, 0.83", "26.9903, 195.628, -4.1073, 0.83", "27.3026, 197.059, -4.37044, 0.83", "27.5529, 198.478, -4.59567, 0.55", "27.689, 199.523, -4.748, 0.83", "27.8156, 201.485, -5.05231, 0.55", "27.86, 202.822, -5.25071, 0.55", "27.841, 205.211, -5.5526, 0.83", "27.7032, 207.991, -5.83136, 0.28", "27.6191, 209.667, -6.00489, 0.55", "27.5274, 211.273, -6.16473, 0.28", "27.2299, 215.553, -6.59587, 0.55", "26.9269, 219.136, -6.96801, 0.28", "26.6501, 221.733, -7.24014, 0.55", "26.2227, 225.456, -7.61393, 0.28", "25.9178, 227.69, -7.84027, 0.55", "25.1602, 232.485, -8.31117, 0.28", "24.6412, 235.658, -8.62869, 0.55", "24.0202, 239.607, -8.97861, 0.28", "23.7952, 240.937, -9.08593, 0.55", "23.5023, 242.463, -9.1741, 0.28", "23.1405, 244.492, -9.32541, 0.55", "22.7591, 246.942, -9.54769, 0.28", "22.5413, 248.502, -9.84781, 0.55", "22.3873, 250.145, -10.3131, 0.28", "22.1881, 252.788, -11.1644, 0.55", "22.0925, 255.085, -12.019, 0.28", "22.0866, 256.401, -12.5988, 0.55", "22.0962, 259.569, -14.2348, 0.28", "22.1473, 260.953, -15.0965, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-1.30502, -37.6108, -1.32408, 0.83", "-1.80845, -41.4625, -0.79178, 0.83", "-2.3157, -45.5837, -0.158558, 0.83", "-3.05506, -51.771, 0.814343, 0.83", "-3.61293, -56.5153, 1.56371, 0.83", "-4.44178, -63.4097, 2.77181, 0.83", "-4.82173, -66.6433, 3.3764, 0.83", "-5.04648, -68.4689, 3.82078, 1.11", "-5.29733, -70.1783, 4.34411, 0.28", "-5.38781, -70.7333, 4.52895, 0.55", "-5.89824, -73.3987, 5.16065, 0.28", "-6.16401, -74.7143, 5.26369, 0.55", "-6.75334, -77.2546, 5.30066, 0.28", "-7.1105, -78.8115, 5.26438, 0.55", "-8.05857, -83.0585, 5.03279, 0.28", "-9.00797, -87.5251, 4.63659, 0.83", "-9.71184, -91.0188, 4.19866, 0.28", "-10.3524, -94.3462, 3.70991, 0.28", "-11.1805, -99.3434, 2.89957, 0.28", "-11.4056, -100.853, 2.7264, 0.55", "-11.6634, -102.426, 2.72595, 0.28", "-11.8828, -103.896, 2.86007, 0.55", "-12.1244, -105.532, 3.1203, 0.28", "-12.3696, -107.365, 3.5204, 0.55", "-13.0956, -113.111, 4.96003, 0.28", "-13.6221, -117.773, 6.25563, 0.83", "-14.0884, -122.1, 7.53721, 0.28", "-14.2115, -123.262, 7.88271, 0.83", "-14.4884, -125.976, 8.69595, 0.28", "-14.8703, -129.183, 9.62272, 0.28", "-15.2783, -131.833, 10.4468, 0.83", "-15.789, -134.777, 11.3646, 0.55", "-16.0965, -136.511, 11.8521, 0.55", "-16.3963, -138.46, 12.3254, 0.83", "-16.9379, -142.25, 13.1197, 0.55", "-17.4863, -147.662, 14.0502, 0.28", "-17.7273, -150.975, 14.4605, 0.55", "-17.9287, -156.977, 14.9753, 0.28", "-17.9481, -160.044, 15.1459, 0.28", "-17.9174, -161.244, 15.1617, 0.55", "-17.5802, -165.237, 14.9695, 0.28", "-17.3561, -166.957, 14.7647, 0.28", "-16.9075, -170.908, 14.443, 0.28", "-16.8246, -172.876, 14.554, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-1.30502, -37.6108, -1.32408, 0.83", "0.0179839, -39.7132, -0.62167, 0.83", "1.9267, -42.3932, 0.316165, 0.83", "3.4166, -44.2305, 0.967307, 0.83", "5.39807, -46.3514, 1.68887, 1.11", "7.40062, -48.3149, 2.28758, 0.83", "9.17684, -49.965, 2.75191, 0.83", "11.5427, -52.0337, 3.24563, 0.83", "14.475, -54.4748, 3.71101, 0.83", "16.9938, -56.4659, 4.05573, 0.83", "19.607, -58.4748, 4.33036, 0.83", "21.5863, -60.0651, 4.48661, 0.83", "24.3875, -62.4973, 4.70335, 0.83", "26.1208, -64.1463, 4.8066, 0.83", "27.547, -65.6893, 4.93809, 0.83", "29.6802, -68.3683, 5.22626, 0.83", "31.2425, -70.5487, 5.48989, 0.83", "32.0442, -71.7268, 5.62652, 0.83", "33.1632, -73.4624, 5.81109, 0.83", "35.1353, -76.6187, 6.05396, 0.83", "36.7349, -79.184, 6.20726, 0.83", "38.4469, -81.7504, 6.29373, 0.83", "39.5279, -83.2657, 6.30059, 0.83", "41.2688, -85.5044, 6.35922, 0.83", "43.7136, -88.4828, 6.46241, 0.83", "46.9262, -92.1707, 6.57222, 0.83", "49.4624, -94.9702, 6.68636, 0.83", "53.1779, -99.018, 6.86859, 0.83", "56.0228, -102.121, 7.02411, 0.55", "57.4438, -103.679, 7.10184, 0.55", "59.2514, -105.713, 7.20178, 0.55", "60.6842, -107.442, 7.27076, 0.55", "62.1433, -109.335, 7.32103, 0.55", "63.2817, -110.882, 7.30685, 0.55", "65.1637, -113.626, 7.1571, 0.55", "66.6223, -115.786, 7.0577, 0.55", "67.9103, -117.751, 6.98977, 0.28", "68.956, -119.372, 6.95165, 0.55", "70.5902, -121.919, 6.92162, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "4.68058, 211.722, -66.5861, 0.28", "3.74912, 214.063, -67.3029, 0.28", "3.30985, 215.167, -67.6409, 0.83", "2.3562, 217.564, -68.3748, 0.55", "2.0531, 218.326, -68.608, 0.83", "1.17282, 220.538, -69.2855, 0.55", "0.719502, 221.678, -69.6343, 0.83" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "4.68058, 211.722, -66.5861, 0.55", "5.54837, 213.22, -65.482, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "0.719502, 221.678, -69.6343, 0.55", "0.330648, 223.153, -69.3906, 0.55", "0.0862992, 224.072, -69.23, 0.83", "-0.4798, 226.028, -68.8846, 0.28", "-0.793152, 226.979, -68.722, 0.55", "-1.34972, 228.546, -68.4646, 0.28", "-1.53119, 229.082, -68.431, 0.55", "-1.95118, 230.315, -68.394, 0.28", "-2.17048, 230.928, -68.4498, 0.55", "-2.5639, 232.113, -68.6842, 0.28", "-2.74344, 232.697, -68.8771, 0.83", "-3.59595, 235.482, -70.0447, 0.28", "-3.78652, 236.164, -70.3373, 0.83", "-4.296, 238.103, -71.1533, 0.28", "-4.53912, 239.097, -71.5836, 0.83", "-5.13505, 241.694, -72.7358, 0.28", "-5.24247, 242.156, -72.9377, 0.55", "-5.88964, 244.741, -73.9568, 0.28", "-6.07738, 245.545, -74.2756, 1.11" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "0.719502, 221.678, -69.6343, 0.28", "1.52106, 223.978, -71.611, 0.28", "2.01636, 225.399, -72.8325, 0.55", "2.46924, 226.699, -73.9494, 0.28", "3.47929, 229.597, -76.4402, 0.83", "4.16155, 231.555, -78.1228, 0.28", "4.66583, 233.002, -79.3664, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_32", "dend_25", "dend_14", "dend_9", "dend_0", "dend_41", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_22", "dend_15", "dend_11", "dend_10", "dend_6", "dend_1", "dend_53", "dend_42", "dend_40", "dend_39", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_24", "dend_23", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "dend_46", "dend_43", "dend_19", "dend_18", "dend_4", "dend_3", "dend_48", "dend_47", "dend_45", "dend_44", "dend_21", "dend_20", "dend_50", "dend_49", "dend_52", "dend_51" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_37", "dend_32", "dend_25", "dend_14", "dend_9", "dend_0", "dend_41", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_22", "dend_15", "dend_11", "dend_10", "dend_6", "dend_1", "dend_53", "dend_42", "dend_40", "dend_39", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_24", "dend_23", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "dend_46", "dend_43", "dend_19", "dend_18", "dend_4", "dend_3", "dend_48", "dend_47", "dend_45", "dend_44", "dend_21", "dend_20", "dend_50", "dend_49", "dend_52", "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_37", "dend_32", "dend_25", "dend_25", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_LBC_361cffb4c6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_14
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_41
create dend_53
public dend_53
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_32, dend_25, dend_14, dend_9, dend_0, dend_41, dend_38, dend_36, dend_33, dend_29, dend_26, dend_22, dend_15, dend_11, dend_10, dend_6, dend_1, dend_53, dend_42, dend_40, dend_39, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_46, dend_43, dend_19, dend_18, dend_4, dend_3, dend_48, dend_47, dend_45, dend_44, dend_21, dend_20, dend_50, dend_49, dend_52, dend_51]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_32, dend_25, dend_14, dend_9, dend_0, dend_41, dend_38, dend_36, dend_33, dend_29, dend_26, dend_22, dend_15, dend_11, dend_10, dend_6, dend_1, dend_53, dend_42, dend_40, dend_39, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_46, dend_43, dend_19, dend_18, dend_4, dend_3, dend_48, dend_47, dend_45, dend_44, dend_21, dend_20, dend_50, dend_49, dend_52, dend_51]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_56
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_32, dend_25, dend_25, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_37(0), soma_0(0.4999999858164011)
    connect dend_32(0), soma_0(0.4999999858164011)
    connect dend_25(0), soma_0(0.4999999858164011)
    connect dend_14(0), soma_0(0.4999999858164011)
    connect dend_9(0), soma_0(0.4999999858164011)
    connect dend_0(0), soma_0(0.4999999858164011)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.14355, -7.38643, 0.0, 3.00626 ) }
    soma_0 { pt3dadd( -1.94813, -6.57976, 0.0, 3.91171 ) }
    soma_0 { pt3dadd( -1.75271, -5.7731, 0.0, 5.48682 ) }
    soma_0 { pt3dadd( -1.55728, -4.96644, 0.0, 7.76121 ) }
    soma_0 { pt3dadd( -1.36186, -4.15978, 0.0, 8.36238 ) }
    soma_0 { pt3dadd( -1.16644, -3.35311, 0.0, 8.81706 ) }
    soma_0 { pt3dadd( -0.971019, -2.54645, 0.0, 9.16666 ) }
    soma_0 { pt3dadd( -0.775597, -1.73979, 0.0, 9.47967 ) }
    soma_0 { pt3dadd( -0.580175, -0.933125, 0.0, 9.69737 ) }
    soma_0 { pt3dadd( -0.384753, -0.126463, 0.0, 9.91023 ) }
    soma_0 { pt3dadd( -0.189331, 0.6802, 0.0, 10.2136 ) }
    soma_0 { pt3dadd( 0.00609047, 1.48686, 0.0, 10.5121 ) }
    soma_0 { pt3dadd( 0.201512, 2.29352, 0.0, 10.3333 ) }
    soma_0 { pt3dadd( 0.396934, 3.10019, 0.0, 10.1326 ) }
    soma_0 { pt3dadd( 0.592356, 3.90685, 0.0, 9.93193 ) }
    soma_0 { pt3dadd( 0.787778, 4.71351, 0.0, 9.69022 ) }
    soma_0 { pt3dadd( 0.9832, 5.52018, 0.0, 8.92901 ) }
    soma_0 { pt3dadd( 1.17862, 6.32684, 0.0, 8.02961 ) }
    soma_0 { pt3dadd( 1.37404, 7.1335, 0.0, 6.7633 ) }
    soma_0 { pt3dadd( 1.56947, 7.94016, 0.0, 3.32024 ) }
    soma_0 { pt3dadd( 1.76489, 8.74683, 0.0, 2.02537 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 21/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.809262, 7.80544, 5.02, 1.94 ) }
    dend_37 { pt3dadd( -0.100971, 17.3511, 8.94465, 1.94 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 23/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.39926, -2.27406, 14.6, 1.94 ) }
    dend_32 { pt3dadd( 1.54901, -5.65552, 14.6, 1.94 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 25/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.680737, -5.86506, -1.0, 1.66 ) }
    dend_25 { pt3dadd( 0.811369, -7.45548, -0.969871, 1.66 ) }
    dend_25 { pt3dadd( 3.90429, -10.7522, -0.907418, 1.66 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 28/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.56074, -7.01456, -2.14, 3.05 ) }
    dend_14 { pt3dadd( -3.01325, -8.51119, -2.14, 3.05 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 30/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -6.40074, 0.82294, -0.63, 1.38 ) }
    dend_9 { pt3dadd( -8.83187, 2.04296, 0.0210205, 1.38 ) }
    dend_9 { pt3dadd( -11.8011, 3.49157, 1.05564, 1.38 ) }
    dend_9 { pt3dadd( -15.0466, 4.9908, 2.32185, 1.11 ) }
    dend_9 { pt3dadd( -18.3447, 6.51434, 3.60858, 1.11 ) }
    dend_9 { pt3dadd( -23.2189, 8.76587, 5.51015, 1.11 ) }
    dend_9 { pt3dadd( -28.2123, 11.0725, 7.45827, 1.11 ) }
    dend_9 { pt3dadd( -31.5513, 12.5632, 8.94579, 0.83 ) }
    dend_9 { pt3dadd( -32.9543, 13.1163, 9.66262, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 39/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.33926, 3.61594, 5.79, 1.38 ) }
    dend_0 { pt3dadd( 7.95554, 4.34049, 6.4807, 1.38 ) }
    dend_0 { pt3dadd( 11.8117, 5.4084, 7.49873, 1.38 ) }
    dend_0 { pt3dadd( 15.4389, 6.41294, 8.45633, 1.11 ) }
    dend_0 { pt3dadd( 18.3688, 7.22433, 9.22982, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.76489, 8.74683, 0.0, 0.55 ) }
    axon_0 { pt3dadd( 5.29663, 23.3251, 0.0, 0.55 ) }
    axon_0 { pt3dadd( 8.82836, 37.9034, 0.0, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 47/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.100971, 17.3511, 8.94465, 1.11 ) }
    dend_41 { pt3dadd( 1.20344, 18.2794, 8.96288, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 49/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -0.100971, 17.3511, 8.94465, 0.83 ) }
    dend_38 { pt3dadd( -1.53948, 19.079, 9.19801, 0.83 ) }
    dend_38 { pt3dadd( -3.06011, 20.9917, 9.55768, 0.83 ) }
    dend_38 { pt3dadd( -5.00117, 23.3295, 10.0616, 0.83 ) }
    dend_38 { pt3dadd( -6.08031, 24.6346, 10.3717, 1.11 ) }
    dend_38 { pt3dadd( -7.48279, 26.2854, 10.7819, 0.83 ) }
    dend_38 { pt3dadd( -9.13466, 28.181, 11.2575, 1.11 ) }
    dend_38 { pt3dadd( -11.065, 30.366, 11.795, 0.55 ) }
    dend_38 { pt3dadd( -13.0655, 32.5511, 12.3447, 0.83 ) }
    dend_38 { pt3dadd( -15.8041, 35.6172, 13.0181, 0.83 ) }
    dend_38 { pt3dadd( -18.1063, 38.3432, 13.4754, 0.83 ) }
    dend_38 { pt3dadd( -20.5591, 41.358, 13.8559, 0.83 ) }
    dend_38 { pt3dadd( -22.0696, 43.2817, 14.0189, 0.55 ) }
    dend_38 { pt3dadd( -22.8745, 44.3068, 14.0659, 1.11 ) }
    dend_38 { pt3dadd( -25.4054, 47.5751, 14.1517, 0.83 ) }
    dend_38 { pt3dadd( -27.7097, 50.5196, 14.1773, 0.55 ) }
    dend_38 { pt3dadd( -28.4338, 51.468, 14.1863, 0.83 ) }
    dend_38 { pt3dadd( -29.9657, 53.4833, 14.2064, 0.55 ) }
    dend_38 { pt3dadd( -31.501, 55.4589, 14.258, 0.83 ) }
    dend_38 { pt3dadd( -33.7361, 58.2319, 14.3739, 0.83 ) }
    dend_38 { pt3dadd( -35.886, 60.5673, 14.6295, 0.83 ) }
    dend_38 { pt3dadd( -37.3926, 62.0722, 14.865, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 71/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 1.54901, -5.65552, 14.6, 1.11 ) }
    dend_36 { pt3dadd( 0.506095, -7.75586, 12.2498, 1.11 ) }
    dend_36 { pt3dadd( 0.068158, -8.68922, 11.398, 1.11 ) }
    dend_36 { pt3dadd( -0.396215, -9.79733, 10.5425, 0.83 ) }
    dend_36 { pt3dadd( -1.10556, -11.5946, 9.35986, 1.38 ) }
    dend_36 { pt3dadd( -3.33845, -17.925, 5.82209, 0.83 ) }
    dend_36 { pt3dadd( -4.24694, -20.7567, 4.55075, 0.83 ) }
    dend_36 { pt3dadd( -5.2012, -24.1232, 3.5994, 0.83 ) }
    dend_36 { pt3dadd( -5.64427, -25.9311, 3.3585, 0.83 ) }
    dend_36 { pt3dadd( -6.14774, -28.2515, 3.38493, 0.83 ) }
    dend_36 { pt3dadd( -6.66462, -30.8609, 3.88107, 0.83 ) }
    dend_36 { pt3dadd( -7.36369, -34.5557, 5.11456, 0.83 ) }
    dend_36 { pt3dadd( -8.04679, -38.2143, 6.41684, 0.83 ) }
    dend_36 { pt3dadd( -8.45709, -40.528, 7.2751, 0.83 ) }
    dend_36 { pt3dadd( -9.05949, -43.7328, 8.29264, 1.11 ) }
    dend_36 { pt3dadd( -9.8751, -48.1454, 9.48727, 1.11 ) }
    dend_36 { pt3dadd( -10.3981, -50.9196, 10.1292, 1.11 ) }
    dend_36 { pt3dadd( -11.1106, -54.6877, 10.7914, 1.38 ) }
    dend_36 { pt3dadd( -11.9876, -59.5899, 11.3628, 1.38 ) }
    dend_36 { pt3dadd( -12.8854, -64.4486, 11.759, 1.11 ) }
    dend_36 { pt3dadd( -13.4756, -67.4918, 11.9707, 1.11 ) }
    dend_36 { pt3dadd( -14.2255, -71.2724, 12.1481, 0.55 ) }
    dend_36 { pt3dadd( -15.0848, -75.6227, 12.446, 0.83 ) }
    dend_36 { pt3dadd( -15.7908, -79.3062, 12.7757, 0.83 ) }
    dend_36 { pt3dadd( -16.1882, -81.4713, 13.0348, 0.83 ) }
    dend_36 { pt3dadd( -16.4782, -83.1709, 13.3317, 0.83 ) }
    dend_36 { pt3dadd( -16.6821, -84.4495, 13.5024, 0.83 ) }
    dend_36 { pt3dadd( -17.1734, -87.8845, 13.8019, 0.55 ) }
    dend_36 { pt3dadd( -17.5587, -90.9702, 14.0728, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_36 { pt3dadd( -17.8781, -93.9112, 14.3003, 0.83 ) }
    dend_36 { pt3dadd( -18.3014, -98.548, 14.7692, 0.83 ) }
    dend_36 { pt3dadd( -18.6466, -103.019, 15.2709, 0.55 ) }
    dend_36 { pt3dadd( -18.8845, -105.847, 15.6328, 0.83 ) }
    dend_36 { pt3dadd( -19.183, -109.767, 16.1889, 1.11 ) }
    dend_36 { pt3dadd( -19.4893, -114.977, 16.8982, 1.11 ) }
    dend_36 { pt3dadd( -19.7097, -119.206, 17.435, 0.83 ) }
    dend_36 { pt3dadd( -19.76, -120.296, 17.6122, 0.83 ) }
    dend_36 { pt3dadd( -19.8291, -122.133, 18.0011, 1.11 ) }
    dend_36 { pt3dadd( -19.8925, -123.974, 18.3639, 1.11 ) }
    dend_36 { pt3dadd( -19.9926, -126.684, 18.6548, 0.83 ) }
    dend_36 { pt3dadd( -20.1095, -128.76, 18.5937, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 12/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.54901, -5.65552, 14.6, 1.38 ) }
    dend_33 { pt3dadd( 2.78949, -8.47225, 14.6127, 1.38 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 14/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.90429, -10.7522, -0.907418, 1.38 ) }
    dend_29 { pt3dadd( 7.44943, -11.8736, -3.79356, 1.38 ) }
    dend_29 { pt3dadd( 11.8475, -12.8482, -7.65673, 1.11 ) }
    dend_29 { pt3dadd( 13.8356, -13.2831, -9.54023, 1.11 ) }
    dend_29 { pt3dadd( 15.7655, -13.8766, -11.4307, 1.11 ) }
    dend_29 { pt3dadd( 18.5517, -14.8658, -14.2475, 1.11 ) }
    dend_29 { pt3dadd( 24.0068, -16.5133, -19.7676, 0.83 ) }
    dend_29 { pt3dadd( 25.2071, -16.5361, -21.0326, 0.83 ) }
    dend_29 { pt3dadd( 27.169, -16.1153, -23.379, 0.83 ) }
    dend_29 { pt3dadd( 28.744, -15.5659, -25.6086, 0.83 ) }
    dend_29 { pt3dadd( 29.0972, -15.4079, -26.1657, 0.83 ) }
    dend_29 { pt3dadd( 31.119, -14.1552, -29.5615, 0.83 ) }
    dend_29 { pt3dadd( 33.2043, -12.3904, -33.4637, 0.83 ) }
    dend_29 { pt3dadd( 34.9156, -10.7968, -36.7581, 0.55 ) }
    dend_29 { pt3dadd( 35.4372, -10.279, -37.7732, 0.55 ) }
    dend_29 { pt3dadd( 36.8518, -8.86555, -40.5364, 1.66 ) }
    dend_29 { pt3dadd( 40.4022, -5.64649, -47.542, 1.11 ) }
    dend_29 { pt3dadd( 43.4975, -3.27612, -54.0141, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.90429, -10.7522, -0.907418, 0.55 ) }
    dend_26 { pt3dadd( -3.55773, 0.0426641, -14.1566, 0.55 ) }
    dend_26 { pt3dadd( -4.06295, 0.82705, -14.9637, 1.11 ) }
    dend_26 { pt3dadd( -5.47146, 3.15351, -17.0406, 0.83 ) }
    dend_26 { pt3dadd( -7.11639, 6.04427, -19.4744, 0.83 ) }
    dend_26 { pt3dadd( -9.71127, 10.6594, -23.6185, 0.83 ) }
    dend_26 { pt3dadd( -11.826, 14.4342, -27.1179, 0.83 ) }
    dend_26 { pt3dadd( -13.6045, 17.9616, -29.4599, 0.55 ) }
    dend_26 { pt3dadd( -14.7033, 20.1574, -31.0274, 0.83 ) }
    dend_26 { pt3dadd( -15.7193, 22.139, -32.6095, 0.83 ) }
    dend_26 { pt3dadd( -18.0776, 26.9985, -36.801, 0.28 ) }
    dend_26 { pt3dadd( -19.0896, 29.0495, -39.2991, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_14 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -3.01325, -8.51119, -2.14, 1.38 ) }
    dend_22 { pt3dadd( -5.29652, -10.8432, -2.06791, 1.38 ) }
    dend_22 { pt3dadd( -9.27691, -14.9087, -1.94225, 1.38 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 47/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.01325, -8.51119, -2.14, 1.38 ) }
    dend_15 { pt3dadd( -2.39429, -18.2018, -1.72282, 1.38 ) }
    dend_15 { pt3dadd( -1.84241, -26.8424, -1.35084, 1.38 ) }
    dend_15 { pt3dadd( -1.54659, -31.4738, -1.15145, 2.77 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 51/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -32.9543, 13.1163, 9.66262, 0.83 ) }
    dend_11 { pt3dadd( -36.1003, 15.0309, 8.41048, 0.83 ) }
    dend_11 { pt3dadd( -38.2427, 16.3462, 7.39308, 1.11 ) }
    dend_11 { pt3dadd( -39.1847, 16.9245, 6.94575, 0.83 ) }
    dend_11 { pt3dadd( -40.829, 17.9339, 6.1649, 1.11 ) }
    dend_11 { pt3dadd( -42.0852, 18.7051, 5.56834, 0.83 ) }
    dend_11 { pt3dadd( -45.23, 20.6357, 4.07494, 0.83 ) }
    dend_11 { pt3dadd( -45.9027, 21.0125, 3.82104, 1.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 59/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -32.9543, 13.1163, 9.66262, 0.55 ) }
    dend_10 { pt3dadd( -34.3135, 12.0497, 8.41908, 0.55 ) }
    dend_10 { pt3dadd( -35.77, 10.9686, 7.05555, 0.83 ) }
    dend_10 { pt3dadd( -38.6638, 8.94004, 4.42198, 0.83 ) }
    dend_10 { pt3dadd( -40.2358, 7.82053, 3.13044, 0.28 ) }
    dend_10 { pt3dadd( -41.1661, 7.17856, 2.4799, 0.28 ) }
    dend_10 { pt3dadd( -43.2497, 5.8732, 0.943209, 0.83 ) }
    dend_10 { pt3dadd( -44.4272, 5.27215, 0.0448304, 0.28 ) }
    dend_10 { pt3dadd( -45.1849, 4.95584, -0.501651, 0.28 ) }
    dend_10 { pt3dadd( -47.2046, 4.33948, -2.02272, 0.55 ) }
    dend_10 { pt3dadd( -49.074, 3.8405, -3.45537, 0.28 ) }
    dend_10 { pt3dadd( -53.9087, 2.69076, -7.21251, 1.11 ) }
    dend_10 { pt3dadd( -55.2261, 2.39837, -8.25551, 0.83 ) }
    dend_10 { pt3dadd( -56.4097, 2.1317, -9.23217, 0.83 ) }
    dend_10 { pt3dadd( -60.4737, 1.09686, -12.942, 0.28 ) }
    dend_10 { pt3dadd( -61.9283, 0.70226, -14.3705, 0.28 ) }
    dend_10 { pt3dadd( -63.0693, 0.304328, -15.5453, 0.55 ) }
    dend_10 { pt3dadd( -64.4715, -0.310847, -16.8653, 0.28 ) }
    dend_10 { pt3dadd( -65.3133, -0.717998, -17.7758, 0.55 ) }
    dend_10 { pt3dadd( -67.4762, -1.83158, -20.2389, 0.28 ) }
    dend_10 { pt3dadd( -67.9113, -2.07492, -20.7217, 0.55 ) }
    dend_10 { pt3dadd( -69.5948, -3.059, -22.5862, 0.28 ) }
    dend_10 { pt3dadd( -70.422, -3.55858, -23.4006, 0.55 ) }
    dend_10 { pt3dadd( -73.8502, -5.70448, -26.4391, 0.28 ) }
    dend_10 { pt3dadd( -75.1682, -6.58568, -27.6086, 0.28 ) }
    dend_10 { pt3dadd( -75.9053, -7.12178, -28.2594, 0.28 ) }
    dend_10 { pt3dadd( -77.5487, -8.47222, -29.861, 0.83 ) }
    dend_10 { pt3dadd( -80.6173, -11.2956, -32.9936, 0.28 ) }
    dend_10 { pt3dadd( -80.9579, -11.6442, -33.3652, 0.83 ) }
    dend_10 { pt3dadd( -82.5189, -13.3962, -35.0687, 0.28 ) }
    dend_10 { pt3dadd( -83.6023, -14.6356, -36.4767, 0.55 ) }
    dend_10 { pt3dadd( -85.0798, -16.3294, -38.5878, 0.28 ) }
    dend_10 { pt3dadd( -85.3823, -16.6551, -39.0974, 0.55 ) }
    dend_10 { pt3dadd( -86.2111, -17.5155, -40.5445, 0.28 ) }
    dend_10 { pt3dadd( -86.7315, -18.0223, -41.3815, 0.55 ) }
    dend_10 { pt3dadd( -88.6039, -19.695, -44.2205, 0.28 ) }
    dend_10 { pt3dadd( -89.1619, -20.1783, -45.053, 0.55 ) }
    dend_10 { pt3dadd( -91.6403, -22.2783, -48.7852, 0.28 ) }
    dend_10 { pt3dadd( -92.7947, -23.2519, -50.5909, 0.28 ) }
    dend_10 { pt3dadd( -93.235, -23.6266, -51.3091, 0.55 ) }
    dend_10 { pt3dadd( -95.3887, -25.5232, -54.9428, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_10 { pt3dadd( -95.7148, -25.8454, -55.4738, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 1/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 18.3688, 7.22433, 9.22982, 1.11 ) }
    dend_6 { pt3dadd( 19.8101, 6.48769, 9.81464, 1.11 ) }
    dend_6 { pt3dadd( 21.4265, 5.66153, 10.4705, 1.11 ) }
    dend_6 { pt3dadd( 23.1202, 4.79584, 11.1578, 1.11 ) }
    dend_6 { pt3dadd( 24.983, 3.84374, 11.9137, 0.83 ) }
    dend_6 { pt3dadd( 27.6759, 2.46741, 13.0064, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 18.3688, 7.22433, 9.22982, 0.83 ) }
    dend_1 { pt3dadd( 20.0683, 9.58702, 9.7776, 0.83 ) }
    dend_1 { pt3dadd( 20.9829, 10.9646, 10.3239, 0.83 ) }
    dend_1 { pt3dadd( 21.7539, 12.2265, 10.8492, 0.55 ) }
    dend_1 { pt3dadd( 22.7625, 14.007, 11.5799, 0.83 ) }
    dend_1 { pt3dadd( 24.1513, 16.6867, 12.6007, 1.11 ) }
    dend_1 { pt3dadd( 26.0076, 20.3513, 13.9021, 0.83 ) }
    dend_1 { pt3dadd( 27.7952, 24.1722, 15.2946, 1.11 ) }
    dend_1 { pt3dadd( 29.2995, 27.5804, 16.5443, 0.83 ) }
    dend_1 { pt3dadd( 30.3574, 29.9997, 17.4335, 0.83 ) }
    dend_1 { pt3dadd( 32.0393, 33.9256, 18.9209, 1.38 ) }
    dend_1 { pt3dadd( 32.4129, 34.8358, 19.2571, 1.38 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 19/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.82836, 37.9034, 0.0, 0.28 ) }
    axon_1 { pt3dadd( 12.3601, 52.4817, 0.0, 0.28 ) }
    axon_1 { pt3dadd( 15.8918, 67.06, 0.0, 0.28 ) }
    // Section: dend_53, id: dend_53, parent: dend_41 (entry count 22/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 1.20344, 18.2794, 8.96288, 0.83 ) }
    dend_53 { pt3dadd( 0.820251, 20.1672, 10.9806, 0.83 ) }
    dend_53 { pt3dadd( 0.338757, 22.0645, 12.9568, 0.83 ) }
    dend_53 { pt3dadd( -0.246765, 27.4711, 17.7146, 0.55 ) }
    dend_53 { pt3dadd( -0.429964, 29.4115, 19.3229, 0.55 ) }
    dend_53 { pt3dadd( -0.499726, 30.8013, 20.3184, 0.55 ) }
    dend_53 { pt3dadd( -0.63118, 33.1897, 21.827, 0.55 ) }
    dend_53 { pt3dadd( -0.779115, 36.9206, 23.8355, 0.55 ) }
    dend_53 { pt3dadd( -1.02789, 42.7707, 26.7809, 0.83 ) }
    dend_53 { pt3dadd( -1.29693, 46.5952, 28.4136, 0.55 ) }
    dend_53 { pt3dadd( -1.70506, 50.5705, 30.1173, 0.55 ) }
    dend_53 { pt3dadd( -1.99508, 52.9002, 31.0882, 0.55 ) }
    dend_53 { pt3dadd( -2.66882, 57.8295, 33.0017, 0.55 ) }
    dend_53 { pt3dadd( -3.23753, 62.7171, 34.7451, 0.55 ) }
    dend_53 { pt3dadd( -3.96619, 65.8688, 35.9089, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 37/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.20344, 18.2794, 8.96288, 0.83 ) }
    dend_42 { pt3dadd( 1.8755, 21.7937, 8.04189, 0.83 ) }
    dend_42 { pt3dadd( 2.25706, 23.7485, 7.61665, 1.11 ) }
    dend_42 { pt3dadd( 3.073, 28.0618, 6.81955, 1.11 ) }
    dend_42 { pt3dadd( 3.96456, 32.5768, 6.10187, 1.11 ) }
    dend_42 { pt3dadd( 5.00872, 37.4473, 5.44772, 1.11 ) }
    dend_42 { pt3dadd( 5.5704, 39.8719, 5.08416, 1.11 ) }
    dend_42 { pt3dadd( 6.85259, 44.9192, 4.35681, 1.11 ) }
    dend_42 { pt3dadd( 7.82133, 48.3699, 3.86693, 1.11 ) }
    dend_42 { pt3dadd( 8.86497, 51.8784, 3.43935, 1.11 ) }
    dend_42 { pt3dadd( 10.3632, 56.74, 2.90452, 1.11 ) }
    dend_42 { pt3dadd( 11.7476, 61.367, 2.48353, 1.11 ) }
    dend_42 { pt3dadd( 12.9714, 65.3546, 2.09356, 1.11 ) }
    dend_42 { pt3dadd( 14.1818, 69.1304, 1.69321, 1.11 ) }
    dend_42 { pt3dadd( 14.87, 71.2485, 1.46579, 1.11 ) }
    dend_42 { pt3dadd( 15.2702, 72.5664, 1.3383, 1.11 ) }
    dend_42 { pt3dadd( 16.9326, 78.747, 1.03234, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 54/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -37.3926, 62.0722, 14.865, 0.28 ) }
    dend_40 { pt3dadd( -39.4721, 65.1447, 14.7663, 0.28 ) }
    dend_40 { pt3dadd( -39.8369, 66.0703, 14.8378, 0.28 ) }
    dend_40 { pt3dadd( -40.0171, 66.7532, 14.9448, 0.55 ) }
    dend_40 { pt3dadd( -40.3213, 67.8385, 15.1571, 0.28 ) }
    dend_40 { pt3dadd( -40.643, 68.986, 15.3815, 0.55 ) }
    dend_40 { pt3dadd( -41.0038, 70.273, 15.6333, 0.28 ) }
    dend_40 { pt3dadd( -41.0707, 71.2354, 15.8988, 0.55 ) }
    dend_40 { pt3dadd( -41.0963, 72.1789, 16.1749, 0.28 ) }
    dend_40 { pt3dadd( -41.1447, 73.3067, 16.5359, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 64/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -37.3926, 62.0722, 14.865, 0.83 ) }
    dend_39 { pt3dadd( -38.5082, 63.748, 14.5879, 0.83 ) }
    dend_39 { pt3dadd( -40.6539, 67.0704, 14.1527, 0.55 ) }
    dend_39 { pt3dadd( -41.3077, 68.1192, 14.0333, 0.83 ) }
    dend_39 { pt3dadd( -42.6113, 70.2191, 13.9052, 0.83 ) }
    dend_39 { pt3dadd( -43.8322, 72.7292, 14.0868, 0.83 ) }
    dend_39 { pt3dadd( -45.3033, 76.1661, 14.6154, 0.83 ) }
    dend_39 { pt3dadd( -46.2988, 78.9247, 15.2975, 0.83 ) }
    dend_39 { pt3dadd( -46.8908, 80.9549, 15.9481, 0.55 ) }
    dend_39 { pt3dadd( -47.6991, 83.9833, 17.045, 0.83 ) }
    dend_39 { pt3dadd( -49.3123, 90.9676, 19.764, 0.55 ) }
    dend_39 { pt3dadd( -49.6905, 93.0135, 20.5819, 0.55 ) }
    dend_39 { pt3dadd( -49.7491, 93.4777, 20.7917, 0.83 ) }
    dend_39 { pt3dadd( -50.0187, 95.6932, 21.8479, 0.55 ) }
    dend_39 { pt3dadd( -50.2328, 97.1164, 22.5115, 0.55 ) }
    dend_39 { pt3dadd( -50.7479, 99.3796, 23.3962, 0.55 ) }
    dend_39 { pt3dadd( -51.1217, 100.381, 23.6737, 0.83 ) }
    dend_39 { pt3dadd( -52.3215, 103.857, 24.6938, 0.55 ) }
    dend_39 { pt3dadd( -53.1139, 106.15, 25.4468, 0.55 ) }
    dend_39 { pt3dadd( -53.3548, 106.826, 25.7191, 0.83 ) }
    dend_39 { pt3dadd( -53.9739, 108.631, 26.492, 0.55 ) }
    dend_39 { pt3dadd( -54.5768, 110.099, 27.2608, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 86/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 2.78949, -8.47225, 14.6127, 0.55 ) }
    dend_35 { pt3dadd( 2.10593, -11.3077, 15.1631, 0.55 ) }
    dend_35 { pt3dadd( 1.52337, -12.9582, 15.7294, 1.38 ) }
    dend_35 { pt3dadd( 0.0611909, -15.7981, 16.9014, 1.38 ) }
    dend_35 { pt3dadd( -2.78601, -20.3083, 18.7113, 0.83 ) }
    dend_35 { pt3dadd( -4.75145, -23.4217, 19.9607, 0.83 ) }
    dend_35 { pt3dadd( -6.41774, -26.0613, 21.0199, 1.11 ) }
    dend_35 { pt3dadd( -8.96192, -29.9223, 22.7276, 0.55 ) }
    dend_35 { pt3dadd( -11.529, -33.2894, 24.4347, 0.83 ) }
    dend_35 { pt3dadd( -13.8705, -35.4885, 25.8792, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 96/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 2.78949, -8.47225, 14.6127, 0.83 ) }
    dend_34 { pt3dadd( 6.72161, -8.31416, 14.8356, 0.83 ) }
    dend_34 { pt3dadd( 8.43013, -7.28016, 15.0843, 0.83 ) }
    dend_34 { pt3dadd( 9.82007, -5.81829, 15.1599, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( 11.3395, -4.10473, 15.3974, 1.38 ) }
    dend_34 { pt3dadd( 12.8261, -2.42817, 15.6298, 1.38 ) }
    dend_34 { pt3dadd( 15.072, 0.104708, 15.9809, 0.83 ) }
    dend_34 { pt3dadd( 17.9796, 4.19733, 16.3403, 0.83 ) }
    dend_34 { pt3dadd( 19.6697, 6.86101, 16.6463, 0.83 ) }
    dend_34 { pt3dadd( 21.5822, 10.7022, 17.1619, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 6/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 43.4975, -3.27612, -54.0141, 0.28 ) }
    dend_31 { pt3dadd( 44.5592, -2.79945, -59.7072, 0.28 ) }
    dend_31 { pt3dadd( 44.7985, -2.64793, -60.0568, 0.55 ) }
    dend_31 { pt3dadd( 45.7243, -1.90874, -60.7012, 0.28 ) }
    dend_31 { pt3dadd( 46.4737, -1.24739, -61.2337, 0.28 ) }
    dend_31 { pt3dadd( 48.6254, 0.70582, -62.6512, 0.83 ) }
    dend_31 { pt3dadd( 50.8585, 2.79945, -64.0661, 0.28 ) }
    dend_31 { pt3dadd( 52.2166, 4.15426, -65.189, 0.83 ) }
    dend_31 { pt3dadd( 53.5077, 5.48157, -66.4238, 1.11 ) }
    dend_31 { pt3dadd( 55.2745, 7.42237, -68.2605, 0.55 ) }
    dend_31 { pt3dadd( 55.6516, 7.86986, -68.7428, 0.83 ) }
    dend_31 { pt3dadd( 56.4198, 8.86916, -69.8363, 0.28 ) }
    dend_31 { pt3dadd( 56.8105, 9.36471, -70.4201, 0.83 ) }
    dend_31 { pt3dadd( 58.4592, 11.3608, -73.2058, 0.28 ) }
    dend_31 { pt3dadd( 59.0638, 12.0829, -74.2818, 0.83 ) }
    dend_31 { pt3dadd( 61.1151, 14.5783, -77.9567, 0.28 ) }
    dend_31 { pt3dadd( 61.7498, 15.3473, -79.1087, 0.55 ) }
    dend_31 { pt3dadd( 62.3233, 15.9876, -80.1097, 1.11 ) }
    dend_31 { pt3dadd( 63.8106, 17.4282, -82.4147, 0.28 ) }
    dend_31 { pt3dadd( 64.1687, 17.6945, -82.982, 0.55 ) }
    dend_31 { pt3dadd( 64.8388, 18.0451, -84.0866, 0.28 ) }
    dend_31 { pt3dadd( 65.2229, 18.1631, -84.6964, 0.55 ) }
    dend_31 { pt3dadd( 66.2833, 18.3109, -86.4341, 0.28 ) }
    dend_31 { pt3dadd( 66.7413, 18.2606, -87.5252, 0.83 ) }
    dend_31 { pt3dadd( 69.173, 17.4733, -93.9968, 0.28 ) }
    dend_31 { pt3dadd( 69.4952, 17.3298, -94.8938, 0.83 ) }
    dend_31 { pt3dadd( 70.1894, 16.9552, -96.8649, 0.28 ) }
    dend_31 { pt3dadd( 70.6083, 16.6878, -98.0651, 0.83 ) }
    dend_31 { pt3dadd( 73.9819, 14.259, -107.726, 0.28 ) }
    dend_31 { pt3dadd( 74.3493, 13.9735, -108.806, 0.55 ) }
    dend_31 { pt3dadd( 75.2061, 13.2356, -111.198, 0.28 ) }
    dend_31 { pt3dadd( 75.437, 13.0416, -111.859, 0.83 ) }
    dend_31 { pt3dadd( 76.3329, 12.2297, -114.557, 0.28 ) }
    dend_31 { pt3dadd( 76.5624, 12.0424, -115.213, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 40/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 43.4975, -3.27612, -54.0141, 0.55 ) }
    dend_30 { pt3dadd( 43.4675, -3.2865, -55.1558, 0.55 ) }
    dend_30 { pt3dadd( 43.4142, -3.39984, -60.3887, 0.28 ) }
    dend_30 { pt3dadd( 43.4125, -3.43863, -61.6926, 0.83 ) }
    dend_30 { pt3dadd( 43.4702, -3.57563, -63.9902, 0.28 ) }
    dend_30 { pt3dadd( 43.5142, -3.65817, -64.9845, 0.83 ) }
    dend_30 { pt3dadd( 43.8797, -4.56905, -72.1721, 0.55 ) }
    dend_30 { pt3dadd( 44.0468, -5.0726, -74.404, 0.28 ) }
    dend_30 { pt3dadd( 44.1838, -5.49767, -75.5534, 0.83 ) }
    dend_30 { pt3dadd( 44.6577, -7.15124, -78.8528, 0.28 ) }
    dend_30 { pt3dadd( 44.7548, -7.54698, -79.4249, 0.83 ) }
    dend_30 { pt3dadd( 45.0386, -9.27271, -81.07, 0.28 ) }
    dend_30 { pt3dadd( 45.5766, -13.1433, -83.3238, 0.28 ) }
    dend_30 { pt3dadd( 45.6112, -13.5477, -83.5209, 0.83 ) }
    dend_30 { pt3dadd( 45.641, -14.2678, -83.8242, 0.28 ) }
    dend_30 { pt3dadd( 45.6388, -14.9232, -84.0565, 0.55 ) }
    dend_30 { pt3dadd( 45.5006, -19.7719, -85.7993, 0.28 ) }
    dend_30 { pt3dadd( 45.4848, -20.0848, -85.9087, 0.55 ) }
    dend_30 { pt3dadd( 45.3755, -21.4584, -86.375, 0.28 ) }
    dend_30 { pt3dadd( 45.3284, -22.1935, -86.607, 0.55 ) }
    dend_30 { pt3dadd( 45.1724, -24.7348, -87.7914, 0.28 ) }
    dend_30 { pt3dadd( 45.1492, -25.0669, -87.9935, 0.55 ) }
    dend_30 { pt3dadd( 44.9693, -27.6512, -89.9879, 0.28 ) }
    dend_30 { pt3dadd( 44.8966, -28.3683, -90.6227, 0.55 ) }
    dend_30 { pt3dadd( 44.7944, -29.0541, -91.2902, 0.55 ) }
    dend_30 { pt3dadd( 43.9322, -33.3619, -95.9778, 0.28 ) }
    dend_30 { pt3dadd( 43.8238, -33.7333, -96.4463, 0.55 ) }
    dend_30 { pt3dadd( 43.4805, -34.6495, -97.6641, 0.28 ) }
    dend_30 { pt3dadd( 43.3481, -34.8802, -98.0099, 0.55 ) }
    dend_30 { pt3dadd( 42.7641, -35.7186, -99.1321, 0.28 ) }
    dend_30 { pt3dadd( 42.6887, -35.8274, -99.2679, 0.55 ) }
    dend_30 { pt3dadd( 42.449, -36.2041, -99.6508, 0.28 ) }
    dend_30 { pt3dadd( 42.1441, -36.7441, -100.228, 0.83 ) }
    dend_30 { pt3dadd( 40.9266, -39.1203, -102.881, 0.28 ) }
    dend_30 { pt3dadd( 40.676, -39.7049, -103.463, 0.55 ) }
    dend_30 { pt3dadd( 39.3531, -43.2579, -106.814, 0.28 ) }
    dend_30 { pt3dadd( 39.017, -44.2083, -107.7, 0.55 ) }
    dend_30 { pt3dadd( 38.4843, -45.8585, -109.201, 0.28 ) }
    dend_30 { pt3dadd( 38.4069, -46.1454, -109.444, 0.55 ) }
    dend_30 { pt3dadd( 37.8049, -49.2216, -111.539, 0.28 ) }
    dend_30 { pt3dadd( 37.7196, -49.7788, -111.861, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 81/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -19.0896, 29.0495, -39.2991, 0.28 ) }
    dend_28 { pt3dadd( -20.5207, 27.285, -41.6494, 0.28 ) }
    dend_28 { pt3dadd( -21.0664, 26.5576, -42.5749, 0.83 ) }
    dend_28 { pt3dadd( -22.117, 25.1829, -44.2288, 0.28 ) }
    dend_28 { pt3dadd( -23.0333, 24.0139, -45.5773, 1.11 ) }
    dend_28 { pt3dadd( -28.2844, 17.3143, -53.3055, 0.28 ) }
    dend_28 { pt3dadd( -29.4285, 15.8545, -54.9895, 0.28 ) }
    dend_28 { pt3dadd( -29.5706, 15.6602, -55.2471, 0.83 ) }
    dend_28 { pt3dadd( -30.6022, 14.1078, -57.459, 0.28 ) }
    dend_28 { pt3dadd( -30.8369, 13.6977, -58.09, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 91/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -19.0896, 29.0495, -39.2991, 0.28 ) }
    dend_27 { pt3dadd( -18.7825, 32.9886, -40.9328, 0.28 ) }
    dend_27 { pt3dadd( -18.7497, 33.9139, -41.2817, 0.83 ) }
    dend_27 { pt3dadd( -18.8906, 36.762, -42.7014, 0.28 ) }
    dend_27 { pt3dadd( -19.079, 38.4913, -43.5829, 0.28 ) }
    dend_27 { pt3dadd( -19.3226, 40.0513, -44.4668, 0.83 ) }
    dend_27 { pt3dadd( -19.9084, 43.6079, -46.5471, 0.28 ) }
    dend_27 { pt3dadd( -20.2903, 45.5218, -47.7495, 1.11 ) }
    dend_27 { pt3dadd( -21.2107, 49.8112, -50.154, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_27 { pt3dadd( -21.6856, 52.1254, -51.2682, 1.11 ) }
    dend_27 { pt3dadd( -22.6315, 56.6961, -53.2698, 0.28 ) }
    dend_27 { pt3dadd( -22.771, 57.4205, -53.5388, 0.28 ) }
    dend_27 { pt3dadd( -23.1394, 59.7819, -54.2317, 0.83 ) }
    dend_27 { pt3dadd( -23.5294, 63.406, -55.0051, 0.28 ) }
    dend_27 { pt3dadd( -23.657, 65.6348, -55.2383, 0.83 ) }
    dend_27 { pt3dadd( -23.8119, 68.8169, -55.6951, 0.28 ) }
    dend_27 { pt3dadd( -23.9261, 71.0387, -56.0431, 0.83 ) }
    dend_27 { pt3dadd( -24.0975, 73.0437, -56.4209, 0.28 ) }
    dend_27 { pt3dadd( -24.3121, 74.8966, -56.8412, 0.28 ) }
    dend_27 { pt3dadd( -24.646, 77.2625, -57.4214, 0.83 ) }
    dend_27 { pt3dadd( -25.6664, 82.884, -58.6859, 0.28 ) }
    dend_27 { pt3dadd( -25.9785, 84.1991, -58.9278, 0.55 ) }
    dend_27 { pt3dadd( -26.9351, 87.2294, -59.6513, 0.28 ) }
    dend_27 { pt3dadd( -27.2678, 88.1397, -59.8639, 0.55 ) }
    dend_27 { pt3dadd( -27.8714, 89.7547, -60.4092, 0.28 ) }
    dend_27 { pt3dadd( -28.3459, 91.0387, -60.9151, 0.55 ) }
    dend_27 { pt3dadd( -28.8493, 92.5034, -61.5683, 0.83 ) }
    dend_27 { pt3dadd( -30.4011, 97.321, -64.4506, 0.28 ) }
    dend_27 { pt3dadd( -30.9194, 99.1034, -65.6209, 0.55 ) }
    dend_27 { pt3dadd( -32.1439, 104.004, -69.0244, 0.28 ) }
    dend_27 { pt3dadd( -32.44, 105.381, -69.9527, 0.28 ) }
    dend_27 { pt3dadd( -32.6369, 106.567, -70.7064, 0.55 ) }
    dend_27 { pt3dadd( -32.9337, 108.84, -72.0212, 0.28 ) }
    dend_27 { pt3dadd( -33.2014, 111.532, -73.3173, 0.83 ) }
    dend_27 { pt3dadd( -33.4585, 117.954, -75.5969, 0.28 ) }
    dend_27 { pt3dadd( -33.417, 121.448, -76.2227, 0.28 ) }
    dend_27 { pt3dadd( -33.3485, 122.071, -76.2583, 0.83 ) }
    dend_27 { pt3dadd( -33.1176, 123.282, -76.2692, 0.83 ) }
    dend_27 { pt3dadd( -32.7845, 124.39, -76.3261, 0.83 ) }
    dend_27 { pt3dadd( -30.9665, 129.424, -77.3235, 0.28 ) }
    dend_27 { pt3dadd( -30.8674, 129.661, -77.3838, 0.83 ) }
    dend_27 { pt3dadd( -29.0664, 133.842, -78.9693, 0.28 ) }
    dend_27 { pt3dadd( -27.7639, 136.864, -80.7592, 0.83 ) }
    dend_27 { pt3dadd( -25.6615, 141.701, -83.6171, 0.28 ) }
    dend_27 { pt3dadd( -24.1013, 145.495, -85.9956, 0.55 ) }
    dend_27 { pt3dadd( -23.6038, 146.838, -86.92, 0.83 ) }
    dend_27 { pt3dadd( -23.2056, 147.978, -87.6238, 0.83 ) }
    dend_27 { pt3dadd( -21.7049, 153.339, -88.9345, 0.83 ) }
    dend_27 { pt3dadd( -19.2743, 163.157, -86.258, 0.55 ) }
    dend_27 { pt3dadd( -19.1312, 163.968, -86.0013, 0.83 ) }
    dend_27 { pt3dadd( -18.8252, 166.426, -85.5244, 0.28 ) }
    dend_27 { pt3dadd( -18.7914, 167.039, -85.5465, 0.55 ) }
    dend_27 { pt3dadd( -18.9043, 171.342, -86.3936, 0.28 ) }
    dend_27 { pt3dadd( -19.3149, 177.557, -88.5331, 0.55 ) }
    dend_27 { pt3dadd( -19.5635, 181.448, -90.4892, 0.28 ) }
    dend_27 { pt3dadd( -19.6233, 182.507, -91.0904, 0.55 ) }
    dend_27 { pt3dadd( -19.6695, 184.196, -92.0889, 0.28 ) }
    dend_27 { pt3dadd( -19.6638, 185.757, -92.8768, 0.55 ) }
    dend_27 { pt3dadd( -19.4957, 188.527, -93.8268, 0.28 ) }
    dend_27 { pt3dadd( -19.3159, 190.351, -93.9954, 0.28 ) }
    dend_27 { pt3dadd( -18.9596, 193.292, -93.9949, 0.55 ) }
    dend_27 { pt3dadd( -18.5673, 196.256, -93.7803, 0.28 ) }
    dend_27 { pt3dadd( -18.127, 199.702, -93.2885, 0.83 ) }
    dend_27 { pt3dadd( -17.7094, 203.844, -92.4431, 0.28 ) }
    dend_27 { pt3dadd( -17.5548, 206.763, -91.6758, 0.28 ) }
    dend_27 { pt3dadd( -17.5155, 208.352, -91.2323, 0.55 ) }
    dend_27 { pt3dadd( -17.5232, 211.66, -90.2571, 0.28 ) }
    dend_27 { pt3dadd( -17.5804, 212.672, -90.0118, 0.83 ) }
    dend_27 { pt3dadd( -17.8821, 215.734, -89.4845, 0.28 ) }
    dend_27 { pt3dadd( -18.0524, 217.188, -89.3535, 0.55 ) }
    dend_27 { pt3dadd( -18.2743, 219.447, -89.2763, 0.28 ) }
    dend_27 { pt3dadd( -18.4062, 220.82, -89.291, 0.28 ) }
    dend_27 { pt3dadd( -18.6639, 223.395, -89.4587, 0.55 ) }
    dend_27 { pt3dadd( -18.8524, 227.312, -89.9126, 0.28 ) }
    dend_27 { pt3dadd( -18.7909, 229.927, -90.3069, 0.28 ) }
    dend_27 { pt3dadd( -18.7441, 231.069, -90.4878, 0.55 ) }
    dend_27 { pt3dadd( -18.6586, 232.972, -90.7995, 0.28 ) }
    dend_27 { pt3dadd( -18.5273, 234.341, -91.0614, 0.55 ) }
    dend_27 { pt3dadd( -17.9235, 237.678, -91.8632, 0.28 ) }
    dend_27 { pt3dadd( -17.5195, 239.33, -92.3726, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 71/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -9.27691, -14.9087, -1.94225, 0.55 ) }
    dend_24 { pt3dadd( -11.9347, -14.3629, -4.19184, 0.55 ) }
    dend_24 { pt3dadd( -14.7336, -13.7655, -6.81957, 1.11 ) }
    dend_24 { pt3dadd( -17.7502, -13.0935, -9.63756, 0.83 ) }
    dend_24 { pt3dadd( -19.516, -12.6701, -11.2084, 0.83 ) }
    dend_24 { pt3dadd( -22.2934, -11.9412, -13.6875, 1.11 ) }
    dend_24 { pt3dadd( -23.8356, -11.4729, -15.0391, 1.11 ) }
    dend_24 { pt3dadd( -26.7135, -10.206, -17.6172, 0.28 ) }
    dend_24 { pt3dadd( -27.7992, -9.70814, -18.5395, 0.83 ) }
    dend_24 { pt3dadd( -28.8793, -9.23181, -19.4104, 0.55 ) }
    dend_24 { pt3dadd( -30.7939, -8.49492, -21.0256, 1.38 ) }
    dend_24 { pt3dadd( -32.8152, -7.85265, -22.6306, 0.55 ) }
    dend_24 { pt3dadd( -34.9179, -7.32555, -24.3245, 0.83 ) }
    dend_24 { pt3dadd( -38.3328, -6.48956, -27.2263, 0.55 ) }
    dend_24 { pt3dadd( -39.7696, -6.16505, -28.7349, 0.83 ) }
    dend_24 { pt3dadd( -42.1491, -5.68173, -31.5435, 0.55 ) }
    dend_24 { pt3dadd( -43.6239, -5.40058, -33.3968, 0.55 ) }
    dend_24 { pt3dadd( -46.1721, -4.90147, -36.7841, 0.55 ) }
    dend_24 { pt3dadd( -48.6182, -4.26667, -40.1574, 1.11 ) }
    dend_24 { pt3dadd( -52.1863, -2.77285, -44.9241, 1.11 ) }
    dend_24 { pt3dadd( -53.1057, -2.25469, -46.0934, 0.28 ) }
    dend_24 { pt3dadd( -53.5261, -1.94725, -46.5356, 0.55 ) }
    dend_24 { pt3dadd( -54.8512, -0.85308, -47.4843, 0.28 ) }
    dend_24 { pt3dadd( -56.5613, 0.68981, -47.9586, 0.55 ) }
    dend_24 { pt3dadd( -59.0742, 2.913, -48.0373, 0.28 ) }
    dend_24 { pt3dadd( -60.97, 4.54277, -48.1094, 0.55 ) }
    dend_24 { pt3dadd( -63.8821, 6.96817, -48.4798, 1.38 ) }
    dend_24 { pt3dadd( -65.7607, 8.4939, -48.8516, 1.11 ) }
    dend_24 { pt3dadd( -68.3995, 10.5664, -49.6926, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_24 { pt3dadd( -70.0895, 11.915, -50.4304, 0.83 ) }
    dend_24 { pt3dadd( -73.584, 14.8426, -52.2978, 0.28 ) }
    dend_24 { pt3dadd( -74.0322, 15.2086, -52.5953, 0.55 ) }
    dend_24 { pt3dadd( -75.608, 16.4538, -53.763, 0.28 ) }
    dend_24 { pt3dadd( -78.0937, 18.3703, -55.5402, 0.83 ) }
    dend_24 { pt3dadd( -80.9454, 20.3831, -57.7157, 0.28 ) }
    dend_24 { pt3dadd( -82.1775, 21.1645, -58.6016, 0.83 ) }
    dend_24 { pt3dadd( -86.1547, 23.4569, -61.1645, 0.28 ) }
    dend_24 { pt3dadd( -87.1739, 23.9686, -61.8237, 0.83 ) }
    dend_24 { pt3dadd( -88.502, 24.5383, -62.6762, 0.83 ) }
    dend_24 { pt3dadd( -93.7804, 26.5447, -65.7968, 0.28 ) }
    dend_24 { pt3dadd( -97.4638, 27.7803, -67.8582, 0.28 ) }
    dend_24 { pt3dadd( -98.7218, 28.203, -68.5501, 1.11 ) }
    dend_24 { pt3dadd( -100.985, 28.9639, -69.6912, 0.28 ) }
    dend_24 { pt3dadd( -101.491, 29.1291, -69.9421, 0.55 ) }
    dend_24 { pt3dadd( -103.608, 29.7137, -70.9096, 0.28 ) }
    dend_24 { pt3dadd( -104.212, 29.8473, -71.1702, 0.55 ) }
    dend_24 { pt3dadd( -107.023, 30.3196, -72.6294, 0.28 ) }
    dend_24 { pt3dadd( -107.944, 30.4586, -73.1657, 0.83 ) }
    dend_24 { pt3dadd( -110.669, 30.8365, -74.8544, 0.28 ) }
    dend_24 { pt3dadd( -111.595, 30.9258, -75.4288, 0.83 ) }
    dend_24 { pt3dadd( -114.204, 31.0616, -77.1381, 0.28 ) }
    dend_24 { pt3dadd( -114.772, 31.1073, -77.4689, 0.55 ) }
    dend_24 { pt3dadd( -116.905, 31.3246, -78.568, 0.28 ) }
    dend_24 { pt3dadd( -117.635, 31.4458, -78.9286, 0.55 ) }
    dend_24 { pt3dadd( -121.097, 32.1603, -80.5024, 0.28 ) }
    dend_24 { pt3dadd( -123.084, 32.6375, -81.3727, 0.83 ) }
    dend_24 { pt3dadd( -127.258, 33.7037, -83.0576, 0.28 ) }
    dend_24 { pt3dadd( -127.804, 33.8484, -83.2738, 0.83 ) }
    dend_24 { pt3dadd( -133.829, 35.4925, -85.5481, 0.28 ) }
    dend_24 { pt3dadd( -134.945, 35.8054, -85.9774, 0.83 ) }
    dend_24 { pt3dadd( -138.391, 36.8156, -87.4121, 0.28 ) }
    dend_24 { pt3dadd( -139.227, 37.0571, -87.7569, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 33/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -9.27691, -14.9087, -1.94225, 0.83 ) }
    dend_23 { pt3dadd( -10.2107, -15.6986, -4.30879, 0.83 ) }
    dend_23 { pt3dadd( -12.206, -17.0983, -9.11817, 1.11 ) }
    dend_23 { pt3dadd( -13.6308, -18.1055, -12.4641, 1.11 ) }
    dend_23 { pt3dadd( -15.4812, -19.411, -16.5333, 1.11 ) }
    dend_23 { pt3dadd( -17.2588, -20.586, -20.1971, 1.11 ) }
    dend_23 { pt3dadd( -20.6167, -22.7393, -26.7647, 1.11 ) }
    dend_23 { pt3dadd( -21.8612, -23.4113, -29.2437, 0.83 ) }
    dend_23 { pt3dadd( -22.6321, -23.8134, -30.7634, 1.38 ) }
    dend_23 { pt3dadd( -25.3774, -25.1779, -35.7832, 0.83 ) }
    dend_23 { pt3dadd( -28.1875, -26.6869, -40.4656, 0.83 ) }
    dend_23 { pt3dadd( -30.1974, -27.9008, -43.6757, 1.11 ) }
    dend_23 { pt3dadd( -32.9002, -29.6945, -47.9444, 0.83 ) }
    dend_23 { pt3dadd( -34.201, -30.635, -50.0424, 0.55 ) }
    dend_23 { pt3dadd( -35.3744, -31.5829, -52.0002, 1.38 ) }
    dend_23 { pt3dadd( -36.3648, -32.557, -53.7371, 0.83 ) }
    dend_23 { pt3dadd( -37.1745, -33.5776, -55.2512, 1.11 ) }
    dend_23 { pt3dadd( -39.0089, -36.1883, -58.7978, 1.11 ) }
    dend_23 { pt3dadd( -39.9049, -37.7025, -60.5514, 0.28 ) }
    dend_23 { pt3dadd( -40.4145, -38.7435, -61.7125, 0.83 ) }
    dend_23 { pt3dadd( -41.3028, -40.8489, -64.1811, 0.28 ) }
    dend_23 { pt3dadd( -41.5837, -41.4902, -64.9239, 0.55 ) }
    dend_23 { pt3dadd( -42.5397, -43.6343, -67.0779, 0.28 ) }
    dend_23 { pt3dadd( -43.3962, -45.2524, -68.5394, 1.38 ) }
    dend_23 { pt3dadd( -44.4904, -47.0565, -70.1609, 1.38 ) }
    dend_23 { pt3dadd( -46.3754, -49.7999, -72.7448, 0.55 ) }
    dend_23 { pt3dadd( -47.5218, -51.4902, -74.2916, 0.55 ) }
    dend_23 { pt3dadd( -49.3269, -54.0156, -76.6674, 1.38 ) }
    dend_23 { pt3dadd( -52.2592, -58.1153, -80.5771, 0.28 ) }
    dend_23 { pt3dadd( -54.5372, -61.0246, -83.9217, 0.83 ) }
    dend_23 { pt3dadd( -56.782, -63.7749, -87.4157, 0.28 ) }
    dend_23 { pt3dadd( -58.2214, -65.5578, -89.823, 0.28 ) }
    dend_23 { pt3dadd( -59.2522, -66.8655, -91.7828, 0.83 ) }
    dend_23 { pt3dadd( -59.8548, -67.6526, -93.1099, 0.83 ) }
    dend_23 { pt3dadd( -62.7894, -71.9507, -100.642, 0.28 ) }
    dend_23 { pt3dadd( -63.1092, -72.4301, -101.534, 0.55 ) }
    dend_23 { pt3dadd( -64.2503, -74.1289, -104.584, 0.28 ) }
    dend_23 { pt3dadd( -64.4273, -74.3396, -104.964, 0.55 ) }
    dend_23 { pt3dadd( -66.4439, -76.6178, -108.765, 0.28 ) }
    dend_23 { pt3dadd( -67.3892, -77.5325, -110.287, 1.11 ) }
    dend_23 { pt3dadd( -71.1533, -80.9778, -115.653, 0.28 ) }
    dend_23 { pt3dadd( -73.4041, -82.9553, -118.771, 0.83 ) }
    dend_23 { pt3dadd( -77.9452, -86.8595, -124.862, 0.28 ) }
    dend_23 { pt3dadd( -78.681, -87.4631, -125.848, 0.83 ) }
    dend_23 { pt3dadd( -82.7096, -90.5779, -131.244, 0.28 ) }
    dend_23 { pt3dadd( -83.2767, -90.9798, -132.05, 0.83 ) }
    dend_23 { pt3dadd( -84.3859, -91.6868, -133.716, 0.28 ) }
    dend_23 { pt3dadd( -84.9789, -92.0578, -134.706, 0.55 ) }
    dend_23 { pt3dadd( -87.8253, -94.0305, -140.17, 0.28 ) }
    dend_23 { pt3dadd( -88.9746, -94.7842, -142.489, 0.55 ) }
    dend_23 { pt3dadd( -90.2103, -95.6049, -145.197, 0.28 ) }
    dend_23 { pt3dadd( -91.3183, -96.1827, -147.574, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 85/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.54659, -31.4738, -1.15145, 2.49 ) }
    dend_17 { pt3dadd( -1.73098, -34.4688, -1.1833, 2.49 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 87/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.54659, -31.4738, -1.15145, 0.83 ) }
    dend_16 { pt3dadd( -0.131103, -32.4363, -1.99085, 0.83 ) }
    dend_16 { pt3dadd( 1.00555, -33.0668, -2.43034, 0.55 ) }
    dend_16 { pt3dadd( 2.08003, -33.6988, -2.77608, 0.55 ) }
    dend_16 { pt3dadd( 3.75249, -34.801, -3.31043, 0.55 ) }
    dend_16 { pt3dadd( 4.95638, -35.5868, -3.55128, 0.83 ) }
    dend_16 { pt3dadd( 6.90908, -36.8759, -3.94889, 0.55 ) }
    dend_16 { pt3dadd( 9.20907, -38.3541, -4.31155, 0.55 ) }
    dend_16 { pt3dadd( 10.9042, -39.4752, -4.5571, 0.83 ) }
    dend_16 { pt3dadd( 13.3651, -41.214, -4.91917, 0.83 ) }
    dend_16 { pt3dadd( 16.6072, -43.3179, -5.3688, 0.83 ) }
    dend_16 { pt3dadd( 18.9518, -44.7387, -5.77479, 0.83 ) }
    dend_16 { pt3dadd( 21.4793, -46.1844, -6.30067, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_16 { pt3dadd( 24.0123, -47.6006, -6.89634, 0.83 ) }
    dend_16 { pt3dadd( 26.1191, -48.6229, -7.43815, 0.83 ) }
    dend_16 { pt3dadd( 29.0944, -49.9745, -8.31482, 0.83 ) }
    dend_16 { pt3dadd( 31.3852, -51.0626, -9.13075, 0.83 ) }
    dend_16 { pt3dadd( 32.9341, -51.8054, -9.66876, 0.55 ) }
    dend_16 { pt3dadd( 35.0876, -52.876, -10.5087, 0.83 ) }
    dend_16 { pt3dadd( 37.7367, -54.1548, -11.5455, 0.55 ) }
    dend_16 { pt3dadd( 39.5625, -55.0961, -12.2855, 0.55 ) }
    dend_16 { pt3dadd( 41.011, -56.0117, -12.9269, 0.55 ) }
    dend_16 { pt3dadd( 41.6446, -56.4312, -13.2118, 0.55 ) }
    dend_16 { pt3dadd( 43.3254, -57.526, -13.9985, 0.83 ) }
    dend_16 { pt3dadd( 46.1539, -59.2844, -15.3197, 0.55 ) }
    dend_16 { pt3dadd( 46.6113, -59.5381, -15.5281, 0.55 ) }
    dend_16 { pt3dadd( 49.2017, -60.7979, -16.5975, 0.55 ) }
    dend_16 { pt3dadd( 50.3027, -61.2763, -17.023, 0.55 ) }
    dend_16 { pt3dadd( 51.5627, -61.8029, -17.5015, 0.55 ) }
    dend_16 { pt3dadd( 53.1933, -62.4286, -18.1083, 0.55 ) }
    dend_16 { pt3dadd( 55.2616, -63.1012, -18.9172, 0.55 ) }
    dend_16 { pt3dadd( 57.8824, -63.8123, -19.8283, 0.55 ) }
    dend_16 { pt3dadd( 58.6561, -63.925, -20.0188, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 20/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -45.9027, 21.0125, 3.82104, 0.55 ) }
    dend_13 { pt3dadd( -47.3426, 21.8478, 4.12077, 0.55 ) }
    dend_13 { pt3dadd( -49.3647, 23.0456, 4.50306, 0.83 ) }
    dend_13 { pt3dadd( -50.881, 23.847, 5.2277, 0.55 ) }
    dend_13 { pt3dadd( -52.5074, 24.6642, 6.3516, 0.55 ) }
    dend_13 { pt3dadd( -54.769, 25.7654, 8.12273, 1.38 ) }
    dend_13 { pt3dadd( -56.3195, 26.5011, 9.38451, 0.28 ) }
    dend_13 { pt3dadd( -57.1951, 26.9084, 10.1166, 0.55 ) }
    dend_13 { pt3dadd( -61.4915, 28.7823, 13.4886, 0.55 ) }
    dend_13 { pt3dadd( -62.7509, 29.3273, 14.4601, 0.28 ) }
    dend_13 { pt3dadd( -63.7406, 29.7766, 15.202, 0.83 ) }
    dend_13 { pt3dadd( -65.6859, 30.7235, 16.6087, 0.55 ) }
    dend_13 { pt3dadd( -67.573, 31.779, 17.7209, 0.55 ) }
    dend_13 { pt3dadd( -69.1716, 32.8064, 18.3829, 0.55 ) }
    dend_13 { pt3dadd( -70.5872, 33.8427, 18.777, 0.28 ) }
    dend_13 { pt3dadd( -72.054, 34.9852, 19.1555, 0.55 ) }
    dend_13 { pt3dadd( -73.7726, 36.4559, 19.4778, 0.28 ) }
    dend_13 { pt3dadd( -75.9573, 38.5071, 19.75, 0.55 ) }
    dend_13 { pt3dadd( -77.8133, 40.4104, 19.9221, 0.55 ) }
    dend_13 { pt3dadd( -79.1121, 41.8586, 19.9602, 0.28 ) }
    dend_13 { pt3dadd( -79.8559, 42.739, 19.91, 0.55 ) }
    dend_13 { pt3dadd( -81.9887, 45.4633, 19.5543, 0.28 ) }
    dend_13 { pt3dadd( -82.1086, 45.6246, 19.5198, 0.55 ) }
    dend_13 { pt3dadd( -83.1645, 47.2005, 19.0967, 0.28 ) }
    dend_13 { pt3dadd( -83.6573, 47.9903, 18.9224, 0.55 ) }
    dend_13 { pt3dadd( -84.2617, 49.0002, 18.788, 0.28 ) }
    dend_13 { pt3dadd( -84.6388, 49.5979, 18.8249, 0.55 ) }
    dend_13 { pt3dadd( -85.9746, 51.5099, 19.2574, 0.28 ) }
    dend_13 { pt3dadd( -86.7314, 52.476, 19.5019, 0.83 ) }
    dend_13 { pt3dadd( -87.7589, 53.6483, 19.8256, 0.28 ) }
    dend_13 { pt3dadd( -88.6168, 54.5509, 20.0561, 0.55 ) }
    dend_13 { pt3dadd( -90.5244, 56.3751, 20.4621, 0.28 ) }
    dend_13 { pt3dadd( -91.7176, 57.4357, 20.6575, 0.55 ) }
    dend_13 { pt3dadd( -93.4106, 58.7629, 20.7968, 0.28 ) }
    dend_13 { pt3dadd( -94.6604, 59.6315, 20.8067, 0.55 ) }
    dend_13 { pt3dadd( -96.7007, 60.8937, 20.6278, 0.28 ) }
    dend_13 { pt3dadd( -97.7686, 61.4745, 20.4607, 0.28 ) }
    dend_13 { pt3dadd( -98.175, 61.6637, 20.3482, 0.83 ) }
    dend_13 { pt3dadd( -100.464, 62.5917, 19.6024, 0.28 ) }
    dend_13 { pt3dadd( -101.352, 62.9194, 19.1831, 0.83 ) }
    dend_13 { pt3dadd( -102.889, 63.4294, 18.4003, 0.28 ) }
    dend_13 { pt3dadd( -103.422, 63.5692, 18.0683, 0.55 ) }
    dend_13 { pt3dadd( -105.651, 64.0612, 16.3811, 0.28 ) }
    dend_13 { pt3dadd( -106.273, 64.1559, 15.8083, 0.55 ) }
    dend_13 { pt3dadd( -108.764, 64.3872, 13.114, 0.28 ) }
    dend_13 { pt3dadd( -110.091, 64.4298, 11.4967, 0.55 ) }
    dend_13 { pt3dadd( -112.847, 64.275, 7.93974, 0.28 ) }
    dend_13 { pt3dadd( -113.596, 64.2141, 6.84639, 0.83 ) }
    dend_13 { pt3dadd( -115.05, 64.0302, 4.55262, 0.28 ) }
    dend_13 { pt3dadd( -115.05, 64.0302, 4.55262, 0.55 ) }
    dend_13 { pt3dadd( -116.066, 63.7937, 2.95709, 0.28 ) }
    dend_13 { pt3dadd( -116.718, 63.6415, 1.83541, 0.83 ) }
    dend_13 { pt3dadd( -118.667, 63.2289, -1.52634, 0.28 ) }
    dend_13 { pt3dadd( -118.971, 63.1868, -2.04177, 0.55 ) }
    dend_13 { pt3dadd( -119.41, 63.1762, -2.75741, 0.28 ) }
    dend_13 { pt3dadd( -119.935, 63.1956, -3.63528, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 76/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -45.9027, 21.0125, 3.82104, 0.28 ) }
    dend_12 { pt3dadd( -44.5495, 24.4925, 5.30779, 0.28 ) }
    dend_12 { pt3dadd( -44.1035, 25.6449, 5.97901, 0.55 ) }
    dend_12 { pt3dadd( -43.4806, 27.3675, 7.0673, 0.28 ) }
    dend_12 { pt3dadd( -43.0226, 28.7369, 8.01855, 0.55 ) }
    dend_12 { pt3dadd( -42.5642, 30.1939, 9.03937, 0.28 ) }
    dend_12 { pt3dadd( -42.1779, 31.7326, 9.64096, 0.55 ) }
    dend_12 { pt3dadd( -41.7309, 34.4457, 9.8009, 0.28 ) }
    dend_12 { pt3dadd( -41.6306, 35.4866, 9.69028, 0.55 ) }
    dend_12 { pt3dadd( -41.3929, 39.0903, 9.05983, 0.28 ) }
    dend_12 { pt3dadd( -41.3176, 40.3786, 8.80915, 0.83 ) }
    dend_12 { pt3dadd( -40.6169, 51.5866, 6.77945, 0.28 ) }
    dend_12 { pt3dadd( -40.5007, 53.2289, 6.50888, 1.11 ) }
    dend_12 { pt3dadd( -40.0803, 57.8944, 5.68428, 0.28 ) }
    dend_12 { pt3dadd( -39.6529, 61.8328, 5.10505, 0.28 ) }
    dend_12 { pt3dadd( -39.3319, 64.148, 4.80907, 0.55 ) }
    dend_12 { pt3dadd( -38.8178, 66.8697, 4.77191, 0.28 ) }
    dend_12 { pt3dadd( -38.5097, 68.1546, 5.01367, 0.55 ) }
    dend_12 { pt3dadd( -37.835, 71.1253, 5.1645, 0.28 ) }
    dend_12 { pt3dadd( -37.6298, 72.1604, 5.11581, 0.55 ) }
    dend_12 { pt3dadd( -37.3492, 74.2214, 4.98724, 0.28 ) }
    dend_12 { pt3dadd( -37.2836, 75.2841, 5.06707, 0.55 ) }
    dend_12 { pt3dadd( -37.2449, 78.7167, 5.64106, 0.28 ) }
    dend_12 { pt3dadd( -37.2988, 82.0615, 7.00204, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -37.4727, 85.8951, 9.21589, 0.28 ) }
    dend_12 { pt3dadd( -37.5578, 87.1058, 9.85798, 0.55 ) }
    dend_12 { pt3dadd( -38.0597, 92.4327, 12.5551, 0.28 ) }
    dend_12 { pt3dadd( -38.185, 93.6697, 13.1662, 0.83 ) }
    dend_12 { pt3dadd( -38.6811, 99.001, 15.7999, 0.28 ) }
    dend_12 { pt3dadd( -38.7495, 99.9432, 16.2696, 0.83 ) }
    dend_12 { pt3dadd( -39.3363, 107.15, 18.8684, 0.28 ) }
    dend_12 { pt3dadd( -39.4348, 108.109, 19.1766, 0.55 ) }
    dend_12 { pt3dadd( -39.8618, 111.494, 19.8925, 0.28 ) }
    dend_12 { pt3dadd( -39.9915, 112.511, 20.0696, 0.55 ) }
    dend_12 { pt3dadd( -40.3297, 115.076, 20.2353, 0.28 ) }
    dend_12 { pt3dadd( -40.3905, 115.757, 20.5474, 0.55 ) }
    dend_12 { pt3dadd( -40.4519, 116.934, 21.5076, 0.28 ) }
    dend_12 { pt3dadd( -40.4847, 117.51, 21.9905, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 14/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 27.6759, 2.46741, 13.0064, 0.55 ) }
    dend_8 { pt3dadd( 29.1222, 0.83991, 17.0063, 0.55 ) }
    dend_8 { pt3dadd( 29.4467, 0.463055, 17.8832, 1.38 ) }
    dend_8 { pt3dadd( 30.4945, -0.864324, 20.531, 0.55 ) }
    dend_8 { pt3dadd( 32.0972, -3.03151, 24.2774, 0.83 ) }
    dend_8 { pt3dadd( 34.4771, -6.24985, 29.8409, 0.55 ) }
    dend_8 { pt3dadd( 35.2241, -7.26002, 31.5872, 0.55 ) }
    dend_8 { pt3dadd( 35.5237, -7.62643, 32.2451, 0.55 ) }
    dend_8 { pt3dadd( 36.5453, -8.88387, 34.6014, 0.55 ) }
    dend_8 { pt3dadd( 37.1638, -9.6711, 36.071, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 24/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 27.6759, 2.46741, 13.0064, 0.83 ) }
    dend_7 { pt3dadd( 30.3987, 2.16437, 13.681, 0.83 ) }
    dend_7 { pt3dadd( 32.3236, 1.98503, 14.0809, 0.83 ) }
    dend_7 { pt3dadd( 33.8238, 1.93558, 14.4485, 0.83 ) }
    dend_7 { pt3dadd( 36.5109, 1.9327, 15.1822, 0.83 ) }
    dend_7 { pt3dadd( 39.3487, 1.98356, 15.9632, 0.83 ) }
    dend_7 { pt3dadd( 42.3691, 2.02095, 16.7753, 0.83 ) }
    dend_7 { pt3dadd( 44.878, 2.00413, 17.5048, 0.83 ) }
    dend_7 { pt3dadd( 47.4987, 1.86103, 18.3229, 0.55 ) }
    dend_7 { pt3dadd( 49.9691, 1.66568, 18.9725, 0.83 ) }
    dend_7 { pt3dadd( 53.6968, 1.20481, 19.7312, 0.83 ) }
    dend_7 { pt3dadd( 57.0381, 0.64149, 20.181, 0.83 ) }
    dend_7 { pt3dadd( 59.7668, 0.0736991, 20.4365, 0.55 ) }
    dend_7 { pt3dadd( 61.7271, -0.410669, 20.5526, 0.83 ) }
    dend_7 { pt3dadd( 66.5073, -1.67906, 20.5618, 0.83 ) }
    dend_7 { pt3dadd( 68.2492, -2.12508, 20.5101, 0.83 ) }
    dend_7 { pt3dadd( 71.0144, -2.78884, 20.3911, 0.55 ) }
    dend_7 { pt3dadd( 72.8706, -3.15675, 20.305, 0.55 ) }
    dend_7 { pt3dadd( 76.0018, -3.527, 20.1637, 0.83 ) }
    dend_7 { pt3dadd( 78.966, -3.72942, 20.1816, 0.55 ) }
    dend_7 { pt3dadd( 80.5297, -3.76864, 20.3305, 0.55 ) }
    dend_7 { pt3dadd( 81.5895, -3.75952, 20.4972, 0.55 ) }
    dend_7 { pt3dadd( 83.4469, -3.66397, 20.852, 0.55 ) }
    dend_7 { pt3dadd( 85.9372, -3.49924, 21.4316, 0.55 ) }
    dend_7 { pt3dadd( 87.936, -3.4107, 22.0598, 0.83 ) }
    dend_7 { pt3dadd( 89.16, -3.44297, 22.5357, 0.83 ) }
    dend_7 { pt3dadd( 91.6469, -3.68277, 23.5765, 0.55 ) }
    dend_7 { pt3dadd( 94.3807, -4.21792, 24.8212, 0.55 ) }
    dend_7 { pt3dadd( 95.5195, -4.55438, 25.3893, 0.55 ) }
    dend_7 { pt3dadd( 97.6664, -5.47042, 26.5935, 0.28 ) }
    dend_7 { pt3dadd( 99.377, -6.34624, 27.6117, 0.28 ) }
    dend_7 { pt3dadd( 100.062, -6.76403, 28.0567, 0.55 ) }
    dend_7 { pt3dadd( 101.757, -7.9303, 29.2071, 0.28 ) }
    dend_7 { pt3dadd( 102.168, -8.27097, 29.5237, 0.55 ) }
    dend_7 { pt3dadd( 104.103, -9.96147, 31.0445, 0.28 ) }
    dend_7 { pt3dadd( 104.824, -10.5706, 31.5958, 0.28 ) }
    dend_7 { pt3dadd( 105.583, -11.1795, 32.2273, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 61/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 32.4129, 34.8358, 19.2571, 0.55 ) }
    dend_5 { pt3dadd( 29.621, 36.6742, 18.1998, 0.55 ) }
    dend_5 { pt3dadd( 26.9606, 38.298, 17.0476, 0.55 ) }
    dend_5 { pt3dadd( 26.0263, 38.865, 16.6306, 0.55 ) }
    dend_5 { pt3dadd( 24.8733, 39.647, 16.0932, 0.83 ) }
    dend_5 { pt3dadd( 21.2424, 42.3873, 14.3505, 0.28 ) }
    dend_5 { pt3dadd( 20.8308, 42.7377, 14.1371, 0.55 ) }
    dend_5 { pt3dadd( 18.6712, 44.8349, 12.8353, 0.28 ) }
    dend_5 { pt3dadd( 18.0026, 45.7162, 12.3183, 1.11 ) }
    dend_5 { pt3dadd( 15.8548, 49.5687, 10.372, 0.28 ) }
    dend_5 { pt3dadd( 15.38, 50.8054, 9.80245, 0.55 ) }
    dend_5 { pt3dadd( 14.8545, 52.9157, 8.95431, 0.28 ) }
    dend_5 { pt3dadd( 14.6629, 54.003, 8.55444, 0.55 ) }
    dend_5 { pt3dadd( 14.1586, 58.2615, 7.18411, 0.28 ) }
    dend_5 { pt3dadd( 14.0259, 59.8108, 6.74185, 0.55 ) }
    dend_5 { pt3dadd( 13.8789, 62.344, 6.13825, 0.28 ) }
    dend_5 { pt3dadd( 13.857, 62.7655, 6.05415, 0.83 ) }
    dend_5 { pt3dadd( 13.7539, 66.029, 5.56232, 0.28 ) }
    dend_5 { pt3dadd( 13.8144, 68.3983, 5.09424, 0.28 ) }
    dend_5 { pt3dadd( 13.9863, 70.9188, 4.63329, 0.28 ) }
    dend_5 { pt3dadd( 14.1851, 72.2968, 4.37978, 0.55 ) }
    dend_5 { pt3dadd( 14.9403, 75.9468, 3.97808, 0.28 ) }
    dend_5 { pt3dadd( 15.3347, 77.3326, 3.86638, 0.55 ) }
    dend_5 { pt3dadd( 17.0561, 81.7072, 3.85723, 0.28 ) }
    dend_5 { pt3dadd( 18.3791, 84.4393, 4.11267, 0.83 ) }
    dend_5 { pt3dadd( 19.9089, 87.3621, 4.55478, 0.83 ) }
    dend_5 { pt3dadd( 21.5323, 90.2142, 5.26158, 0.28 ) }
    dend_5 { pt3dadd( 22.1063, 91.1417, 5.69374, 0.55 ) }
    dend_5 { pt3dadd( 23.5205, 93.3513, 7.24652, 0.28 ) }
    dend_5 { pt3dadd( 23.693, 93.6153, 7.53228, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 32.4129, 34.8358, 19.2571, 0.55 ) }
    dend_2 { pt3dadd( 33.7504, 37.224, 20.1362, 0.55 ) }
    dend_2 { pt3dadd( 34.6054, 38.788, 20.7383, 1.11 ) }
    dend_2 { pt3dadd( 36.0478, 41.5473, 21.7877, 0.83 ) }
    dend_2 { pt3dadd( 38.1688, 45.5179, 22.9675, 0.83 ) }
    dend_2 { pt3dadd( 40.9844, 50.7826, 24.3457, 0.83 ) }
    dend_2 { pt3dadd( 42.3676, 53.2172, 24.9182, 0.83 ) }
    dend_2 { pt3dadd( 43.4459, 55.0855, 25.3851, 0.28 ) }
    dend_2 { pt3dadd( 44.1451, 56.3032, 25.6642, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_2 { pt3dadd( 46.4337, 60.4439, 26.4636, 0.83 ) }
    dend_2 { pt3dadd( 47.5791, 62.4904, 26.788, 0.83 ) }
    dend_2 { pt3dadd( 49.2715, 65.5003, 27.0655, 0.55 ) }
    dend_2 { pt3dadd( 50.6015, 68.0186, 27.4475, 0.83 ) }
    dend_2 { pt3dadd( 52.4798, 71.7865, 28.2975, 0.83 ) }
    dend_2 { pt3dadd( 52.9682, 72.8721, 28.6264, 0.83 ) }
    dend_2 { pt3dadd( 53.5585, 74.6003, 29.3624, 0.83 ) }
    dend_2 { pt3dadd( 54.0752, 76.5427, 30.217, 0.83 ) }
    dend_2 { pt3dadd( 54.5554, 78.7926, 31.3712, 0.55 ) }
    dend_2 { pt3dadd( 55.0014, 80.6635, 32.421, 0.28 ) }
    dend_2 { pt3dadd( 55.2651, 81.756, 33.0872, 0.55 ) }
    dend_2 { pt3dadd( 55.9799, 84.3314, 34.6348, 0.28 ) }
    dend_2 { pt3dadd( 56.2524, 85.2804, 35.1299, 0.55 ) }
    dend_2 { pt3dadd( 57.2385, 88.3226, 36.4721, 0.28 ) }
    dend_2 { pt3dadd( 57.4791, 89.1171, 36.708, 0.83 ) }
    dend_2 { pt3dadd( 58.0257, 90.7342, 37.0753, 0.28 ) }
    dend_2 { pt3dadd( 58.2142, 91.2336, 37.145, 0.55 ) }
    dend_2 { pt3dadd( 58.9254, 93.288, 37.3639, 0.28 ) }
    dend_2 { pt3dadd( 59.4551, 94.9923, 37.5205, 0.55 ) }
    dend_2 { pt3dadd( 60.0844, 97.3952, 37.6961, 0.28 ) }
    dend_2 { pt3dadd( 60.6252, 99.5016, 37.9338, 0.28 ) }
    dend_2 { pt3dadd( 61.3279, 102.166, 38.3656, 0.28 ) }
    dend_2 { pt3dadd( 62.1484, 105.36, 38.9376, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 23/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 16.9326, 78.747, 1.03234, 0.83 ) }
    dend_46 { pt3dadd( 16.6736, 79.8988, 0.997056, 0.83 ) }
    dend_46 { pt3dadd( 16.2995, 81.8597, 0.94604, 0.83 ) }
    dend_46 { pt3dadd( 16.0359, 83.7571, 0.906597, 0.83 ) }
    dend_46 { pt3dadd( 15.8711, 85.3239, 0.806442, 0.83 ) }
    dend_46 { pt3dadd( 15.6891, 87.8308, 0.604572, 0.83 ) }
    dend_46 { pt3dadd( 15.6188, 89.5024, 0.454596, 0.55 ) }
    dend_46 { pt3dadd( 15.6281, 91.0506, 0.250098, 0.83 ) }
    dend_46 { pt3dadd( 15.797, 94.1281, -0.311838, 0.83 ) }
    dend_46 { pt3dadd( 16.1189, 97.3643, -0.991545, 0.83 ) }
    dend_46 { pt3dadd( 16.2964, 98.7332, -1.35087, 1.11 ) }
    dend_46 { pt3dadd( 16.5759, 100.609, -1.89821, 0.83 ) }
    dend_46 { pt3dadd( 17.0918, 103.804, -2.83625, 0.83 ) }
    dend_46 { pt3dadd( 17.586, 107.112, -3.78658, 0.83 ) }
    dend_46 { pt3dadd( 17.9749, 109.914, -4.61398, 0.83 ) }
    dend_46 { pt3dadd( 18.372, 113.009, -5.49001, 0.83 ) }
    dend_46 { pt3dadd( 18.6753, 115.83, -6.25422, 0.83 ) }
    dend_46 { pt3dadd( 18.9059, 118.497, -6.93278, 0.83 ) }
    dend_46 { pt3dadd( 19.0466, 120.439, -7.34693, 0.83 ) }
    dend_46 { pt3dadd( 19.1638, 122.758, -7.79042, 0.83 ) }
    dend_46 { pt3dadd( 19.2085, 123.912, -7.98355, 0.83 ) }
    dend_46 { pt3dadd( 19.2696, 125.336, -8.15144, 0.55 ) }
    dend_46 { pt3dadd( 19.3556, 126.866, -8.39951, 0.55 ) }
    dend_46 { pt3dadd( 19.4791, 128.8, -8.7724, 0.55 ) }
    dend_46 { pt3dadd( 19.5953, 129.938, -8.99284, 0.55 ) }
    dend_46 { pt3dadd( 19.7864, 131.902, -9.31656, 0.28 ) }
    dend_46 { pt3dadd( 19.8778, 132.761, -9.46371, 0.55 ) }
    dend_46 { pt3dadd( 20.1268, 134.764, -9.9751, 0.28 ) }
    dend_46 { pt3dadd( 20.326, 136.276, -10.4238, 0.28 ) }
    dend_46 { pt3dadd( 20.4724, 137.331, -10.8308, 0.28 ) }
    dend_46 { pt3dadd( 20.659, 138.742, -11.4275, 0.55 ) }
    dend_46 { pt3dadd( 20.8274, 140.226, -12.0725, 0.55 ) }
    dend_46 { pt3dadd( 21.1068, 143.118, -13.2341, 0.28 ) }
    dend_46 { pt3dadd( 21.2161, 144.607, -13.7651, 1.38 ) }
    dend_46 { pt3dadd( 21.4046, 147.03, -14.6893, 0.55 ) }
    dend_46 { pt3dadd( 21.4806, 148.416, -15.2438, 0.55 ) }
    dend_46 { pt3dadd( 21.5171, 149.129, -15.5392, 0.55 ) }
    dend_46 { pt3dadd( 21.5247, 151.175, -16.2956, 0.55 ) }
    dend_46 { pt3dadd( 21.4727, 152.565, -16.5601, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 62/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 16.9326, 78.747, 1.03234, 0.83 ) }
    dend_43 { pt3dadd( 17.5931, 82.2813, 1.38829, 0.83 ) }
    dend_43 { pt3dadd( 18.1208, 84.9199, 1.7316, 0.83 ) }
    dend_43 { pt3dadd( 18.5157, 86.9354, 2.00756, 0.83 ) }
    dend_43 { pt3dadd( 19.0384, 89.6289, 2.46541, 0.83 ) }
    dend_43 { pt3dadd( 19.6005, 92.3849, 2.95718, 0.83 ) }
    dend_43 { pt3dadd( 20.366, 96.0647, 3.61261, 0.83 ) }
    dend_43 { pt3dadd( 21.2788, 100.333, 4.40162, 0.83 ) }
    dend_43 { pt3dadd( 22.0311, 103.734, 5.02036, 0.83 ) }
    dend_43 { pt3dadd( 23.0398, 108.016, 5.7661, 0.83 ) }
    dend_43 { pt3dadd( 23.6003, 110.304, 6.14456, 0.83 ) }
    dend_43 { pt3dadd( 24.1846, 112.725, 6.4926, 0.83 ) }
    dend_43 { pt3dadd( 24.8714, 115.647, 6.87517, 0.83 ) }
    dend_43 { pt3dadd( 25.3612, 117.979, 7.08018, 0.83 ) }
    dend_43 { pt3dadd( 25.4909, 118.76, 7.13057, 0.83 ) }
    dend_43 { pt3dadd( 25.7385, 121.472, 7.28728, 0.83 ) }
    dend_43 { pt3dadd( 25.7515, 124.484, 7.38336, 0.83 ) }
    dend_43 { pt3dadd( 25.5835, 127.83, 7.41186, 0.83 ) }
    dend_43 { pt3dadd( 25.2546, 132.413, 7.33519, 0.83 ) }
    dend_43 { pt3dadd( 25.0194, 135.276, 7.21203, 0.83 ) }
    dend_43 { pt3dadd( 24.7513, 139.167, 6.89162, 0.83 ) }
    dend_43 { pt3dadd( 24.3811, 143.991, 6.42016, 0.83 ) }
    dend_43 { pt3dadd( 23.9553, 149.485, 5.8085, 0.83 ) }
    dend_43 { pt3dadd( 23.5771, 154.753, 5.13961, 0.83 ) }
    dend_43 { pt3dadd( 23.2104, 160.667, 4.3087, 0.83 ) }
    dend_43 { pt3dadd( 23.0314, 168.582, 3.00353, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 88/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.73098, -34.4688, -1.1833, 1.38 ) }
    dend_19 { pt3dadd( -1.48445, -36.2873, -1.26478, 1.38 ) }
    dend_19 { pt3dadd( -1.30502, -37.6108, -1.32408, 1.38 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 91/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -1.73098, -34.4688, -1.1833, 0.83 ) }
    dend_18 { pt3dadd( -2.69005, -37.7397, -2.19055, 0.83 ) }
    dend_18 { pt3dadd( -3.4437, -40.5766, -3.22471, 1.11 ) }
    dend_18 { pt3dadd( -4.00524, -42.8011, -4.08346, 0.28 ) }
    dend_18 { pt3dadd( -5.1043, -47.1301, -5.71929, 0.83 ) }
    dend_18 { pt3dadd( -6.41296, -52.1473, -7.52037, 0.28 ) }
    dend_18 { pt3dadd( -7.16305, -54.9149, -8.50161, 0.83 ) }
    dend_18 { pt3dadd( -7.9472, -57.8303, -9.61787, 0.28 ) }
    dend_18 { pt3dadd( -8.06929, -58.2485, -9.78504, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_18 { pt3dadd( -9.25229, -61.8551, -11.2775, 0.83 ) }
    dend_18 { pt3dadd( -10.2732, -64.6164, -12.2837, 0.83 ) }
    dend_18 { pt3dadd( -10.8407, -65.9831, -12.7461, 0.83 ) }
    dend_18 { pt3dadd( -11.9726, -68.5213, -13.5856, 0.28 ) }
    dend_18 { pt3dadd( -12.7203, -70.1222, -14.0415, 1.11 ) }
    dend_18 { pt3dadd( -14.7051, -74.286, -15.1868, 0.28 ) }
    dend_18 { pt3dadd( -16.0232, -77.0271, -15.8714, 0.83 ) }
    dend_18 { pt3dadd( -17.0914, -79.258, -16.3203, 0.28 ) }
    dend_18 { pt3dadd( -17.3862, -79.916, -16.4587, 0.83 ) }
    dend_18 { pt3dadd( -17.9677, -81.2898, -16.7823, 0.28 ) }
    dend_18 { pt3dadd( -18.2214, -81.95, -17.0071, 0.55 ) }
    dend_18 { pt3dadd( -18.7001, -83.0963, -17.5221, 0.28 ) }
    dend_18 { pt3dadd( -18.9858, -83.695, -17.8506, 1.11 ) }
    dend_18 { pt3dadd( -21.2799, -88.1473, -20.2088, 0.28 ) }
    dend_18 { pt3dadd( -21.8197, -89.0896, -20.6862, 0.55 ) }
    dend_18 { pt3dadd( -23.448, -91.9122, -21.8782, 0.28 ) }
    dend_18 { pt3dadd( -24.575, -93.8474, -22.5381, 0.28 ) }
    dend_18 { pt3dadd( -25.7301, -95.8312, -23.0387, 0.83 ) }
    dend_18 { pt3dadd( -27.048, -98.1515, -23.3543, 0.28 ) }
    dend_18 { pt3dadd( -27.8524, -99.6393, -23.2768, 0.55 ) }
    dend_18 { pt3dadd( -29.4935, -103.164, -22.8489, 0.28 ) }
    dend_18 { pt3dadd( -29.8382, -104.03, -22.7181, 0.55 ) }
    dend_18 { pt3dadd( -30.8699, -107.219, -22.273, 0.28 ) }
    dend_18 { pt3dadd( -31.1558, -108.349, -22.1436, 0.83 ) }
    dend_18 { pt3dadd( -31.932, -112.182, -21.8554, 0.28 ) }
    dend_18 { pt3dadd( -32.4438, -115.381, -21.6489, 0.28 ) }
    dend_18 { pt3dadd( -32.6485, -116.908, -21.6171, 0.83 ) }
    dend_18 { pt3dadd( -32.9484, -120.182, -21.8676, 0.28 ) }
    dend_18 { pt3dadd( -33.0784, -123.404, -22.4211, 0.28 ) }
    dend_18 { pt3dadd( -33.0752, -124.18, -22.6285, 0.83 ) }
    dend_18 { pt3dadd( -32.9532, -126.492, -23.5054, 0.28 ) }
    dend_18 { pt3dadd( -32.8072, -128.095, -24.1925, 0.55 ) }
    dend_18 { pt3dadd( -32.2633, -132.471, -26.2172, 0.28 ) }
    dend_18 { pt3dadd( -32.1534, -133.116, -26.559, 0.55 ) }
    dend_18 { pt3dadd( -31.7299, -135.275, -27.7713, 0.28 ) }
    dend_18 { pt3dadd( -31.6468, -135.739, -28.01, 0.55 ) }
    dend_18 { pt3dadd( -31.5502, -136.329, -28.2933, 0.28 ) }
    dend_18 { pt3dadd( -31.4777, -136.992, -28.4948, 0.55 ) }
    dend_18 { pt3dadd( -31.3603, -138.912, -28.8605, 0.28 ) }
    dend_18 { pt3dadd( -31.3446, -139.92, -28.9786, 0.55 ) }
    dend_18 { pt3dadd( -31.3422, -142.863, -29.1545, 0.28 ) }
    dend_18 { pt3dadd( -31.3328, -143.826, -29.2069, 0.83 ) }
    dend_18 { pt3dadd( -31.3219, -147.774, -29.385, 0.28 ) }
    dend_18 { pt3dadd( -31.3226, -148.735, -29.414, 0.83 ) }
    dend_18 { pt3dadd( -31.3553, -154.286, -29.5101, 0.28 ) }
    dend_18 { pt3dadd( -31.4092, -159.719, -29.4351, 0.28 ) }
    dend_18 { pt3dadd( -31.4075, -161.939, -29.327, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 47/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 62.1484, 105.36, 38.9376, 0.28 ) }
    dend_4 { pt3dadd( 62.1497, 107.873, 40.0156, 0.28 ) }
    dend_4 { pt3dadd( 62.2123, 110.805, 41.3566, 0.28 ) }
    dend_4 { pt3dadd( 62.3083, 113.001, 42.3743, 0.28 ) }
    dend_4 { pt3dadd( 62.2989, 113.815, 42.6488, 0.55 ) }
    dend_4 { pt3dadd( 62.1725, 115.685, 43.0899, 0.28 ) }
    dend_4 { pt3dadd( 62.0509, 116.768, 43.286, 0.55 ) }
    dend_4 { pt3dadd( 61.902, 117.944, 43.3531, 0.28 ) }
    dend_4 { pt3dadd( 61.7322, 118.77, 43.3263, 0.55 ) }
    dend_4 { pt3dadd( 60.5546, 122.888, 42.7592, 0.28 ) }
    dend_4 { pt3dadd( 59.9401, 124.717, 42.3236, 0.28 ) }
    dend_4 { pt3dadd( 59.6656, 125.39, 42.0806, 0.28 ) }
    dend_4 { pt3dadd( 58.8935, 127.019, 41.3842, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 60/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 62.1484, 105.36, 38.9376, 0.55 ) }
    dend_3 { pt3dadd( 63.9953, 104.53, 38.0546, 0.55 ) }
    dend_3 { pt3dadd( 65.4437, 103.689, 37.298, 0.55 ) }
    dend_3 { pt3dadd( 66.6659, 102.78, 36.5388, 0.55 ) }
    dend_3 { pt3dadd( 69.4012, 100.516, 34.7925, 0.28 ) }
    dend_3 { pt3dadd( 70.1744, 99.8282, 34.3599, 0.55 ) }
    dend_3 { pt3dadd( 72.1176, 98.0082, 33.4191, 0.28 ) }
    dend_3 { pt3dadd( 73.0187, 97.0435, 33.0042, 0.55 ) }
    dend_3 { pt3dadd( 74.4745, 95.4165, 32.5218, 0.28 ) }
    dend_3 { pt3dadd( 75.0786, 94.8024, 32.4678, 0.55 ) }
    dend_3 { pt3dadd( 76.7719, 93.2179, 32.6982, 0.28 ) }
    dend_3 { pt3dadd( 77.5022, 92.5601, 32.8293, 0.83 ) }
    dend_3 { pt3dadd( 79.5011, 90.763, 33.3289, 0.28 ) }
    dend_3 { pt3dadd( 80.7464, 89.6162, 33.6745, 0.55 ) }
    dend_3 { pt3dadd( 82.7013, 87.6575, 34.3064, 0.28 ) }
    dend_3 { pt3dadd( 83.2872, 87.0234, 34.5273, 0.55 ) }
    dend_3 { pt3dadd( 84.8326, 85.3858, 34.9362, 0.28 ) }
    dend_3 { pt3dadd( 85.7682, 84.4068, 35.2254, 0.55 ) }
    dend_3 { pt3dadd( 87.127, 83.0725, 35.7538, 0.28 ) }
    dend_3 { pt3dadd( 88.1364, 82.4975, 36.1204, 0.55 ) }
    dend_3 { pt3dadd( 90.7097, 82.2674, 36.2705, 0.28 ) }
    dend_3 { pt3dadd( 95.0709, 82.4099, 35.8564, 0.28 ) }
    dend_3 { pt3dadd( 97.5727, 82.4128, 34.9595, 0.55 ) }
    dend_3 { pt3dadd( 99.8246, 82.1653, 33.6511, 0.28 ) }
    dend_3 { pt3dadd( 100.703, 82.0634, 33.003, 0.83 ) }
    dend_3 { pt3dadd( 104.279, 81.3158, 29.6976, 0.28 ) }
    dend_3 { pt3dadd( 104.457, 81.2322, 29.4757, 0.55 ) }
    dend_3 { pt3dadd( 106.227, 79.3628, 26.542, 0.28 ) }
    dend_3 { pt3dadd( 106.563, 78.9498, 25.9151, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 89/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 21.4727, 152.565, -16.5601, 0.83 ) }
    dend_48 { pt3dadd( 20.2137, 158.83, -18.2419, 0.83 ) }
    dend_48 { pt3dadd( 19.6951, 161.413, -19.0688, 0.83 ) }
    dend_48 { pt3dadd( 19.1336, 164.357, -20.054, 0.55 ) }
    dend_48 { pt3dadd( 18.6995, 166.6, -20.8046, 0.83 ) }
    dend_48 { pt3dadd( 18.2385, 169.124, -21.6329, 0.83 ) }
    dend_48 { pt3dadd( 17.7456, 171.947, -22.6115, 0.83 ) }
    dend_48 { pt3dadd( 17.1973, 175.676, -23.7554, 0.55 ) }
    dend_48 { pt3dadd( 17.0911, 176.676, -24.1352, 0.83 ) }
    dend_48 { pt3dadd( 17.0023, 177.915, -24.6718, 0.55 ) }
    dend_48 { pt3dadd( 16.9163, 179.141, -25.2548, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_48 { pt3dadd( 16.8066, 181.173, -26.4044, 0.28 ) }
    dend_48 { pt3dadd( 16.7581, 183.098, -27.5299, 0.55 ) }
    dend_48 { pt3dadd( 16.6653, 185.828, -29.3705, 0.55 ) }
    dend_48 { pt3dadd( 16.6088, 187.511, -30.6418, 0.28 ) }
    dend_48 { pt3dadd( 16.5495, 189.749, -32.4953, 0.55 ) }
    dend_48 { pt3dadd( 16.4166, 192.598, -35.0385, 0.55 ) }
    dend_48 { pt3dadd( 16.2838, 194.253, -36.6582, 0.55 ) }
    dend_48 { pt3dadd( 15.7029, 197.995, -41.0545, 0.28 ) }
    dend_48 { pt3dadd( 15.5747, 198.509, -41.7527, 0.55 ) }
    dend_48 { pt3dadd( 15.1714, 199.529, -43.4134, 0.28 ) }
    dend_48 { pt3dadd( 14.7647, 200.313, -44.8404, 0.83 ) }
    dend_48 { pt3dadd( 14.111, 201.347, -46.7713, 0.55 ) }
    dend_48 { pt3dadd( 13.0575, 202.777, -49.6286, 0.83 ) }
    dend_48 { pt3dadd( 12.2895, 203.693, -51.4046, 0.83 ) }
    dend_48 { pt3dadd( 9.99243, 206.212, -56.3297, 0.83 ) }
    dend_48 { pt3dadd( 9.10542, 207.116, -58.1299, 0.55 ) }
    dend_48 { pt3dadd( 8.70398, 207.537, -58.9525, 0.83 ) }
    dend_48 { pt3dadd( 7.29135, 209.115, -61.8488, 0.28 ) }
    dend_48 { pt3dadd( 6.94563, 209.507, -62.5362, 0.55 ) }
    dend_48 { pt3dadd( 5.4223, 211.03, -65.445, 0.28 ) }
    dend_48 { pt3dadd( 4.68058, 211.722, -66.5861, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 21.4727, 152.565, -16.5601, 0.55 ) }
    dend_47 { pt3dadd( 22.5254, 153.455, -17.113, 0.55 ) }
    dend_47 { pt3dadd( 23.1586, 153.991, -17.4455, 0.28 ) }
    dend_47 { pt3dadd( 24.2045, 154.876, -17.9948, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 25/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 23.0314, 168.582, 3.00353, 0.55 ) }
    dend_45 { pt3dadd( 25.1728, 169.62, 0.95729, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 27/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 23.0314, 168.582, 3.00353, 0.83 ) }
    dend_44 { pt3dadd( 23.0054, 170.661, 2.31225, 0.83 ) }
    dend_44 { pt3dadd( 23.2982, 175.329, 0.750994, 0.55 ) }
    dend_44 { pt3dadd( 23.5368, 177.419, 0.126429, 1.11 ) }
    dend_44 { pt3dadd( 23.9501, 180.519, -0.703201, 0.55 ) }
    dend_44 { pt3dadd( 24.2618, 182.471, -1.19437, 0.83 ) }
    dend_44 { pt3dadd( 24.7111, 185.106, -1.83559, 0.55 ) }
    dend_44 { pt3dadd( 25.5464, 189.242, -2.79228, 0.83 ) }
    dend_44 { pt3dadd( 26.4662, 193.312, -3.63001, 0.83 ) }
    dend_44 { pt3dadd( 26.9903, 195.628, -4.1073, 0.83 ) }
    dend_44 { pt3dadd( 27.3026, 197.059, -4.37044, 0.83 ) }
    dend_44 { pt3dadd( 27.5529, 198.478, -4.59567, 0.55 ) }
    dend_44 { pt3dadd( 27.689, 199.523, -4.748, 0.83 ) }
    dend_44 { pt3dadd( 27.8156, 201.485, -5.05231, 0.55 ) }
    dend_44 { pt3dadd( 27.86, 202.822, -5.25071, 0.55 ) }
    dend_44 { pt3dadd( 27.841, 205.211, -5.5526, 0.83 ) }
    dend_44 { pt3dadd( 27.7032, 207.991, -5.83136, 0.28 ) }
    dend_44 { pt3dadd( 27.6191, 209.667, -6.00489, 0.55 ) }
    dend_44 { pt3dadd( 27.5274, 211.273, -6.16473, 0.28 ) }
    dend_44 { pt3dadd( 27.2299, 215.553, -6.59587, 0.55 ) }
    dend_44 { pt3dadd( 26.9269, 219.136, -6.96801, 0.28 ) }
    dend_44 { pt3dadd( 26.6501, 221.733, -7.24014, 0.55 ) }
    dend_44 { pt3dadd( 26.2227, 225.456, -7.61393, 0.28 ) }
    dend_44 { pt3dadd( 25.9178, 227.69, -7.84027, 0.55 ) }
    dend_44 { pt3dadd( 25.1602, 232.485, -8.31117, 0.28 ) }
    dend_44 { pt3dadd( 24.6412, 235.658, -8.62869, 0.55 ) }
    dend_44 { pt3dadd( 24.0202, 239.607, -8.97861, 0.28 ) }
    dend_44 { pt3dadd( 23.7952, 240.937, -9.08593, 0.55 ) }
    dend_44 { pt3dadd( 23.5023, 242.463, -9.1741, 0.28 ) }
    dend_44 { pt3dadd( 23.1405, 244.492, -9.32541, 0.55 ) }
    dend_44 { pt3dadd( 22.7591, 246.942, -9.54769, 0.28 ) }
    dend_44 { pt3dadd( 22.5413, 248.502, -9.84781, 0.55 ) }
    dend_44 { pt3dadd( 22.3873, 250.145, -10.3131, 0.28 ) }
    dend_44 { pt3dadd( 22.1881, 252.788, -11.1644, 0.55 ) }
    dend_44 { pt3dadd( 22.0925, 255.085, -12.019, 0.28 ) }
    dend_44 { pt3dadd( 22.0866, 256.401, -12.5988, 0.55 ) }
    dend_44 { pt3dadd( 22.0962, 259.569, -14.2348, 0.28 ) }
    dend_44 { pt3dadd( 22.1473, 260.953, -15.0965, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -1.30502, -37.6108, -1.32408, 0.83 ) }
    dend_21 { pt3dadd( -1.80845, -41.4625, -0.79178, 0.83 ) }
    dend_21 { pt3dadd( -2.3157, -45.5837, -0.158558, 0.83 ) }
    dend_21 { pt3dadd( -3.05506, -51.771, 0.814343, 0.83 ) }
    dend_21 { pt3dadd( -3.61293, -56.5153, 1.56371, 0.83 ) }
    dend_21 { pt3dadd( -4.44178, -63.4097, 2.77181, 0.83 ) }
    dend_21 { pt3dadd( -4.82173, -66.6433, 3.3764, 0.83 ) }
    dend_21 { pt3dadd( -5.04648, -68.4689, 3.82078, 1.11 ) }
    dend_21 { pt3dadd( -5.29733, -70.1783, 4.34411, 0.28 ) }
    dend_21 { pt3dadd( -5.38781, -70.7333, 4.52895, 0.55 ) }
    dend_21 { pt3dadd( -5.89824, -73.3987, 5.16065, 0.28 ) }
    dend_21 { pt3dadd( -6.16401, -74.7143, 5.26369, 0.55 ) }
    dend_21 { pt3dadd( -6.75334, -77.2546, 5.30066, 0.28 ) }
    dend_21 { pt3dadd( -7.1105, -78.8115, 5.26438, 0.55 ) }
    dend_21 { pt3dadd( -8.05857, -83.0585, 5.03279, 0.28 ) }
    dend_21 { pt3dadd( -9.00797, -87.5251, 4.63659, 0.83 ) }
    dend_21 { pt3dadd( -9.71184, -91.0188, 4.19866, 0.28 ) }
    dend_21 { pt3dadd( -10.3524, -94.3462, 3.70991, 0.28 ) }
    dend_21 { pt3dadd( -11.1805, -99.3434, 2.89957, 0.28 ) }
    dend_21 { pt3dadd( -11.4056, -100.853, 2.7264, 0.55 ) }
    dend_21 { pt3dadd( -11.6634, -102.426, 2.72595, 0.28 ) }
    dend_21 { pt3dadd( -11.8828, -103.896, 2.86007, 0.55 ) }
    dend_21 { pt3dadd( -12.1244, -105.532, 3.1203, 0.28 ) }
    dend_21 { pt3dadd( -12.3696, -107.365, 3.5204, 0.55 ) }
    dend_21 { pt3dadd( -13.0956, -113.111, 4.96003, 0.28 ) }
    dend_21 { pt3dadd( -13.6221, -117.773, 6.25563, 0.83 ) }
    dend_21 { pt3dadd( -14.0884, -122.1, 7.53721, 0.28 ) }
    dend_21 { pt3dadd( -14.2115, -123.262, 7.88271, 0.83 ) }
    dend_21 { pt3dadd( -14.4884, -125.976, 8.69595, 0.28 ) }
    dend_21 { pt3dadd( -14.8703, -129.183, 9.62272, 0.28 ) }
    dend_21 { pt3dadd( -15.2783, -131.833, 10.4468, 0.83 ) }
    dend_21 { pt3dadd( -15.789, -134.777, 11.3646, 0.55 ) }
    dend_21 { pt3dadd( -16.0965, -136.511, 11.8521, 0.55 ) }
    dend_21 { pt3dadd( -16.3963, -138.46, 12.3254, 0.83 ) }
    dend_21 { pt3dadd( -16.9379, -142.25, 13.1197, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_21 { pt3dadd( -17.4863, -147.662, 14.0502, 0.28 ) }
    dend_21 { pt3dadd( -17.7273, -150.975, 14.4605, 0.55 ) }
    dend_21 { pt3dadd( -17.9287, -156.977, 14.9753, 0.28 ) }
    dend_21 { pt3dadd( -17.9481, -160.044, 15.1459, 0.28 ) }
    dend_21 { pt3dadd( -17.9174, -161.244, 15.1617, 0.55 ) }
    dend_21 { pt3dadd( -17.5802, -165.237, 14.9695, 0.28 ) }
    dend_21 { pt3dadd( -17.3561, -166.957, 14.7647, 0.28 ) }
    dend_21 { pt3dadd( -16.9075, -170.908, 14.443, 0.28 ) }
    dend_21 { pt3dadd( -16.8246, -172.876, 14.554, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 9/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -1.30502, -37.6108, -1.32408, 0.83 ) }
    dend_20 { pt3dadd( 0.0179839, -39.7132, -0.62167, 0.83 ) }
    dend_20 { pt3dadd( 1.9267, -42.3932, 0.316165, 0.83 ) }
    dend_20 { pt3dadd( 3.4166, -44.2305, 0.967307, 0.83 ) }
    dend_20 { pt3dadd( 5.39807, -46.3514, 1.68887, 1.11 ) }
    dend_20 { pt3dadd( 7.40062, -48.3149, 2.28758, 0.83 ) }
    dend_20 { pt3dadd( 9.17684, -49.965, 2.75191, 0.83 ) }
    dend_20 { pt3dadd( 11.5427, -52.0337, 3.24563, 0.83 ) }
    dend_20 { pt3dadd( 14.475, -54.4748, 3.71101, 0.83 ) }
    dend_20 { pt3dadd( 16.9938, -56.4659, 4.05573, 0.83 ) }
    dend_20 { pt3dadd( 19.607, -58.4748, 4.33036, 0.83 ) }
    dend_20 { pt3dadd( 21.5863, -60.0651, 4.48661, 0.83 ) }
    dend_20 { pt3dadd( 24.3875, -62.4973, 4.70335, 0.83 ) }
    dend_20 { pt3dadd( 26.1208, -64.1463, 4.8066, 0.83 ) }
    dend_20 { pt3dadd( 27.547, -65.6893, 4.93809, 0.83 ) }
    dend_20 { pt3dadd( 29.6802, -68.3683, 5.22626, 0.83 ) }
    dend_20 { pt3dadd( 31.2425, -70.5487, 5.48989, 0.83 ) }
    dend_20 { pt3dadd( 32.0442, -71.7268, 5.62652, 0.83 ) }
    dend_20 { pt3dadd( 33.1632, -73.4624, 5.81109, 0.83 ) }
    dend_20 { pt3dadd( 35.1353, -76.6187, 6.05396, 0.83 ) }
    dend_20 { pt3dadd( 36.7349, -79.184, 6.20726, 0.83 ) }
    dend_20 { pt3dadd( 38.4469, -81.7504, 6.29373, 0.83 ) }
    dend_20 { pt3dadd( 39.5279, -83.2657, 6.30059, 0.83 ) }
    dend_20 { pt3dadd( 41.2688, -85.5044, 6.35922, 0.83 ) }
    dend_20 { pt3dadd( 43.7136, -88.4828, 6.46241, 0.83 ) }
    dend_20 { pt3dadd( 46.9262, -92.1707, 6.57222, 0.83 ) }
    dend_20 { pt3dadd( 49.4624, -94.9702, 6.68636, 0.83 ) }
    dend_20 { pt3dadd( 53.1779, -99.018, 6.86859, 0.83 ) }
    dend_20 { pt3dadd( 56.0228, -102.121, 7.02411, 0.55 ) }
    dend_20 { pt3dadd( 57.4438, -103.679, 7.10184, 0.55 ) }
    dend_20 { pt3dadd( 59.2514, -105.713, 7.20178, 0.55 ) }
    dend_20 { pt3dadd( 60.6842, -107.442, 7.27076, 0.55 ) }
    dend_20 { pt3dadd( 62.1433, -109.335, 7.32103, 0.55 ) }
    dend_20 { pt3dadd( 63.2817, -110.882, 7.30685, 0.55 ) }
    dend_20 { pt3dadd( 65.1637, -113.626, 7.1571, 0.55 ) }
    dend_20 { pt3dadd( 66.6223, -115.786, 7.0577, 0.55 ) }
    dend_20 { pt3dadd( 67.9103, -117.751, 6.98977, 0.28 ) }
    dend_20 { pt3dadd( 68.956, -119.372, 6.95165, 0.55 ) }
    dend_20 { pt3dadd( 70.5902, -121.919, 6.92162, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 48/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 4.68058, 211.722, -66.5861, 0.28 ) }
    dend_50 { pt3dadd( 3.74912, 214.063, -67.3029, 0.28 ) }
    dend_50 { pt3dadd( 3.30985, 215.167, -67.6409, 0.83 ) }
    dend_50 { pt3dadd( 2.3562, 217.564, -68.3748, 0.55 ) }
    dend_50 { pt3dadd( 2.0531, 218.326, -68.608, 0.83 ) }
    dend_50 { pt3dadd( 1.17282, 220.538, -69.2855, 0.55 ) }
    dend_50 { pt3dadd( 0.719502, 221.678, -69.6343, 0.83 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 55/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 4.68058, 211.722, -66.5861, 0.55 ) }
    dend_49 { pt3dadd( 5.54837, 213.22, -65.482, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 57/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 0.719502, 221.678, -69.6343, 0.55 ) }
    dend_52 { pt3dadd( 0.330648, 223.153, -69.3906, 0.55 ) }
    dend_52 { pt3dadd( 0.0862992, 224.072, -69.23, 0.83 ) }
    dend_52 { pt3dadd( -0.4798, 226.028, -68.8846, 0.28 ) }
    dend_52 { pt3dadd( -0.793152, 226.979, -68.722, 0.55 ) }
    dend_52 { pt3dadd( -1.34972, 228.546, -68.4646, 0.28 ) }
    dend_52 { pt3dadd( -1.53119, 229.082, -68.431, 0.55 ) }
    dend_52 { pt3dadd( -1.95118, 230.315, -68.394, 0.28 ) }
    dend_52 { pt3dadd( -2.17048, 230.928, -68.4498, 0.55 ) }
    dend_52 { pt3dadd( -2.5639, 232.113, -68.6842, 0.28 ) }
    dend_52 { pt3dadd( -2.74344, 232.697, -68.8771, 0.83 ) }
    dend_52 { pt3dadd( -3.59595, 235.482, -70.0447, 0.28 ) }
    dend_52 { pt3dadd( -3.78652, 236.164, -70.3373, 0.83 ) }
    dend_52 { pt3dadd( -4.296, 238.103, -71.1533, 0.28 ) }
    dend_52 { pt3dadd( -4.53912, 239.097, -71.5836, 0.83 ) }
    dend_52 { pt3dadd( -5.13505, 241.694, -72.7358, 0.28 ) }
    dend_52 { pt3dadd( -5.24247, 242.156, -72.9377, 0.55 ) }
    dend_52 { pt3dadd( -5.88964, 244.741, -73.9568, 0.28 ) }
    dend_52 { pt3dadd( -6.07738, 245.545, -74.2756, 1.11 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 76/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 0.719502, 221.678, -69.6343, 0.28 ) }
    dend_51 { pt3dadd( 1.52106, 223.978, -71.611, 0.28 ) }
    dend_51 { pt3dadd( 2.01636, 225.399, -72.8325, 0.55 ) }
    dend_51 { pt3dadd( 2.46924, 226.699, -73.9494, 0.28 ) }
    dend_51 { pt3dadd( 3.47929, 229.597, -76.4402, 0.83 ) }
    dend_51 { pt3dadd( 4.16155, 231.555, -78.1228, 0.28 ) }
    dend_51 { pt3dadd( 4.66583, 233.002, -79.3664, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_32, dend_25, dend_14, dend_9, dend_0, dend_41, dend_38, dend_36, dend_33, dend_29, dend_26, dend_22, dend_15, dend_11, dend_10, dend_6, dend_1, dend_53, dend_42, dend_40, dend_39, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_46, dend_43, dend_19, dend_18, dend_4, dend_3, dend_48, dend_47, dend_45, dend_44, dend_21, dend_20, dend_50, dend_49, dend_52, dend_51]}
    ModelViewParmSubset_2 = new SectionList()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_32, dend_25, dend_14, dend_9, dend_0, dend_41, dend_38, dend_36, dend_33, dend_29, dend_26, dend_22, dend_15, dend_11, dend_10, dend_6, dend_1, dend_53, dend_42, dend_40, dend_39, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_46, dend_43, dend_19, dend_18, dend_4, dend_3, dend_48, dend_47, dend_45, dend_44, dend_21, dend_20, dend_50, dend_49, dend_52, dend_51]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_38 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_29 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_26 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_10 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_53 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_42 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_39 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_31 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_13 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_2 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_43 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_3 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_48 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_21 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_20 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_14 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_32 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_33 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_25 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_37 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_41 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_15 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_6 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_19 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_9 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_35 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_11 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_40 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_28 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_45 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_49 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_50 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_52 OneSecGrp_SectionRef_56.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_32, dend_25, dend_25, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 3
    dend_36 nseg = 7
    dend_29 nseg = 3
    dend_26 nseg = 3
    dend_10 nseg = 5
    dend_53 nseg = 3
    dend_42 nseg = 3
    dend_39 nseg = 3
    dend_31 nseg = 3
    dend_30 nseg = 5
    dend_27 nseg = 11
    dend_24 nseg = 9
    dend_23 nseg = 9
    dend_16 nseg = 3
    dend_13 nseg = 5
    dend_12 nseg = 5
    dend_7 nseg = 5
    dend_5 nseg = 3
    dend_2 nseg = 5
    dend_46 nseg = 3
    dend_43 nseg = 5
    dend_18 nseg = 7
    dend_3 nseg = 3
    dend_48 nseg = 5
    dend_44 nseg = 5
    dend_21 nseg = 7
    dend_20 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_LBC_361cffb4c6_0_0


