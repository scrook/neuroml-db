// Cell: Cell_476637699
/*
{
  "id" : "Cell_476637699",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "625.686, 668.896, 33.759, 12.7764", "632.074, 668.896, 33.759, 12.7764", "638.462, 668.896, 33.759, 12.7764" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "632.074, 668.896, 33.759, 1.0", "637.915, 682.712, 33.759, 1.0", "643.757, 696.528, 33.759, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999556
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "637.732, 668.99, 33.8573, 0.2288", "638.875, 669.009, 34.2373, 0.4328", "639.656, 668.782, 34.5128, 0.4706", "640.721, 668.972, 34.776, 0.4238", "641.766, 669.011, 34.9378, 0.4462", "642.6, 668.554, 34.9499, 0.4172", "643.424, 668.49, 35.0344, 0.4756", "644.319, 668.583, 35.2148, 0.4976", "645.377, 668.908, 35.2629, 0.4998", "646.265, 669.175, 35.0571, 0.4622", "647.296, 669.24, 34.704, 0.3668", "648.177, 669.481, 34.3893, 0.3138", "648.943, 670.299, 34.0925, 0.3012", "649.957, 670.393, 33.7991, 0.3186", "650.728, 670.763, 33.3463, 0.3818", "651.65, 671.154, 33.1316, 0.3496", "652.76, 671.185, 33.0257, 0.3288", "653.864, 671.426, 32.8793, 0.329", "654.686, 671.909, 32.6312, 0.3708", "655.644, 672.396, 32.3596, 0.4754", "656.612, 672.227, 32.0678, 0.539", "657.592, 672.495, 31.7162, 0.6022", "658.16, 672.443, 31.7416, 0.528", "659.211, 672.216, 31.8158, 0.4038", "660.24, 672.546, 31.8688, 0.3366", "660.806, 673.071, 31.698, 0.3372", "661.503, 672.701, 31.519, 0.417", "662.512, 672.789, 31.2455, 0.4104", "663.451, 673.015, 30.9084, 0.462", "664.332, 672.985, 30.8353, 0.4764", "664.904, 673.208, 30.977, 0.4418", "665.545, 673.565, 31.2497, 0.4446", "666.182, 673.004, 31.43, 0.5842", "667.193, 672.914, 31.4384, 0.6464", "668.318, 672.967, 31.4098, 0.5722", "669.303, 673.211, 31.2908, 0.4412", "670.018, 672.712, 31.243, 0.3942", "670.837, 672.269, 31.2556, 0.4998", "671.549, 672.1, 31.0083, 0.4462", "672.32, 672.431, 30.7168, 0.4134", "673.072, 672.733, 30.4881, 0.4884", "674.0, 672.452, 30.4301, 0.4242", "674.883, 672.749, 30.546, 0.3774" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999556,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "628.089, 664.679, 37.431, 0.4576", "627.703, 663.67, 37.996, 0.6888", "627.31, 662.628, 38.1682, 0.7158", "626.967, 661.543, 38.3286, 0.6196", "626.817, 660.436, 38.5644, 0.6936", "626.797, 659.297, 38.8027, 0.7502", "626.793, 658.157, 39.0438, 0.7884", "626.766, 657.053, 39.349, 0.7264", "626.578, 655.941, 39.6612, 0.7984", "626.318, 654.866, 40.0016, 0.7108", "625.997, 653.775, 40.2752, 0.7056", "625.597, 652.708, 40.4415, 0.6206", "625.09, 651.732, 40.4429, 0.5984", "624.814, 650.635, 40.4295, 0.5872", "624.404, 649.609, 40.516, 0.6502", "624.088, 648.535, 40.6627, 0.5886", "624.02, 647.404, 40.7453, 0.6532", "623.814, 646.281, 40.8131, 0.8212", "623.446, 645.199, 40.8674, 0.8986", "622.85, 644.225, 40.8915, 0.8048", "622.303, 643.221, 40.889, 0.6394", "621.797, 642.195, 40.8803, 0.5208", "621.298, 641.165, 40.8792, 0.5316", "620.809, 640.131, 40.8789, 0.8044", "620.389, 639.067, 40.8783, 0.7702", "620.023, 637.984, 40.8778, 0.81", "619.332, 637.075, 40.8766, 0.6126", "618.729, 636.103, 40.8755, 0.6468", "618.267, 635.057, 40.8736, 0.598", "618.427, 633.93, 40.871, 0.596", "618.069, 632.847, 40.8677, 0.6198", "617.625, 631.793, 40.8626, 0.5292", "617.25, 630.712, 40.8556, 0.5598", "616.857, 629.638, 40.8464, 0.566", "616.32, 628.628, 40.833, 0.8228" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999556
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "638.202, 666.649, 33.7733, 1.7486", "639.25, 666.192, 33.7232, 0.444", "640.263, 665.66, 33.616, 0.4852", "641.149, 664.945, 33.4449, 0.482", "641.839, 664.042, 33.1934, 0.4042", "642.587, 663.275, 32.7734, 0.379", "643.082, 662.445, 32.1695, 0.4424", "643.246, 661.477, 31.467, 0.482", "643.221, 660.361, 30.8652, 0.476", "642.969, 659.249, 30.4385, 0.3934", "642.827, 658.116, 30.1902, 0.3582", "642.814, 657.002, 30.1655, 0.4078", "642.816, 655.867, 30.2585, 0.3982", "642.827, 654.728, 30.3282, 0.416", "642.899, 653.59, 30.3341, 0.5056", "643.201, 652.509, 30.3705, 0.6256", "643.312, 651.373, 30.3514, 0.6152", "643.578, 650.261, 30.2728, 0.5808", "644.023, 649.211, 30.1339, 0.5918", "644.22, 648.166, 29.8402, 0.4776", "644.32, 647.097, 29.4479, 0.4612", "644.174, 645.963, 29.1301, 0.3984", "644.091, 644.823, 28.9022, 0.4398", "643.755, 643.729, 28.7571, 0.4354" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999556
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "626.441, 668.682, 33.9478, 0.4576", "625.398, 668.352, 33.4222, 0.8196", "624.356, 668.087, 33.133, 0.9616", "623.255, 668.276, 32.8986, 1.0588", "622.195, 668.58, 32.8303, 0.9024", "621.113, 668.877, 32.8583, 0.8742", "619.99, 669.073, 32.8681, 0.9228", "618.989, 669.594, 32.8107, 0.98", "617.873, 669.819, 32.7219, 0.7898", "616.737, 669.948, 32.562, 0.5024", "615.661, 670.242, 32.2627, 0.3392", "614.532, 670.37, 31.9788, 0.3", "613.431, 670.678, 31.6865, 0.3226", "612.357, 670.7, 31.2329, 0.3594", "611.351, 670.588, 30.6034, 0.4532", "610.361, 670.109, 29.939, 0.5018" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999556
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "643.757, 696.528, 33.759, 1.0", "649.598, 710.344, 33.759, 1.0", "655.439, 724.16, 33.759, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "674.883, 672.749, 30.546, 0.3774", "675.722, 672.945, 31.5882, 0.2288", "676.835, 673.207, 31.5213, 0.2814", "677.948, 673.469, 31.4936, 0.287", "679.061, 673.731, 31.4602, 0.2988", "680.179, 673.751, 31.4199, 0.3142", "681.218, 673.912, 31.3922, 0.3734", "682.06, 674.388, 31.4742, 0.334", "683.13, 674.709, 31.4712, 0.3002", "684.005, 675.405, 31.3846, 0.275", "684.944, 675.771, 31.166, 0.2754", "685.94, 676.086, 30.9666, 0.2762", "686.497, 676.905, 30.7846, 0.2776", "687.282, 677.668, 30.6211, 0.2802", "688.109, 678.208, 30.3828, 0.285", "688.816, 679.038, 30.205, 0.2938", "689.797, 679.608, 30.0838, 0.3112", "690.769, 680.169, 29.9902, 0.3382", "691.659, 680.862, 29.8841, 0.413", "692.409, 681.525, 29.8472, 0.4328", "693.253, 682.224, 29.8623, 0.3594", "694.184, 682.889, 29.8746, 0.3", "695.115, 683.555, 29.8822, 0.2746", "696.045, 684.219, 29.8836, 0.2746", "696.976, 684.884, 29.8746, 0.2746", "697.907, 685.549, 29.8452, 0.2746", "698.839, 686.215, 29.799, 0.2746", "699.769, 686.879, 29.7408, 0.2746", "700.7, 687.544, 29.6722, 0.2746", "701.042, 688.039, 29.4991, 0.2746", "701.863, 688.694, 29.2902, 0.2746", "702.288, 689.69, 29.1312, 0.2746", "703.214, 690.306, 29.0192, 0.2746", "704.3, 690.603, 28.9509, 0.2746", "704.849, 691.55, 28.9223, 0.2746", "705.474, 692.483, 28.9551, 0.2746", "706.278, 693.251, 29.0052, 0.2746", "707.268, 693.653, 29.0394, 0.2748", "708.117, 694.377, 29.0562, 0.2748", "709.233, 694.55, 29.0956, 0.2752", "710.204, 695.126, 29.1015, 0.2756", "711.188, 695.508, 29.0464, 0.2766", "711.768, 696.232, 28.9097, 0.2782", "712.91, 696.238, 28.7958, 0.2814", "714.054, 696.238, 28.709, 0.287", "714.946, 696.883, 28.6476, 0.2988", "715.659, 697.778, 28.6168, 0.3142", "716.431, 698.526, 28.6079, 0.3736", "717.233, 699.048, 28.6502, 0.334", "718.272, 699.328, 28.6882, 0.3004", "719.12, 699.843, 28.7081, 0.2752", "720.055, 700.486, 28.7146, 0.2758", "720.617, 701.396, 28.7109, 0.2768", "721.063, 702.214, 28.6737, 0.2788", "721.611, 702.892, 28.5076, 0.2826", "722.097, 703.535, 28.4379, 0.2892", "722.602, 704.092, 28.5362, 0.3026", "723.071, 704.793, 28.4654, 0.3214", "723.617, 705.664, 28.25, 0.3866", "724.08, 706.102, 27.7854, 0.3594", "724.354, 706.963, 27.5928, 0.342", "725.075, 707.344, 27.5913, 0.3778", "725.993, 707.801, 27.771, 0.3422", "726.84, 708.511, 27.9723, 0.3152", "727.241, 709.404, 28.1372, 0.3038", "727.812, 709.937, 28.1571, 0.3234", "728.794, 710.195, 28.0762, 0.3904", "729.236, 710.983, 27.8285, 0.3664", "730.155, 711.341, 27.6679, 0.3552", "730.695, 711.883, 27.7079, 0.402", "731.278, 712.216, 27.7546, 0.3892", "731.922, 712.646, 28.037, 0.392", "732.97, 712.853, 28.2299, 0.4958", "734.018, 713.116, 28.366, 0.4378", "735.075, 713.154, 28.4292, 0.404", "736.057, 713.001, 28.4192, 0.4406", "737.022, 713.06, 28.4766, 0.483", "737.544, 713.659, 28.7493, 0.4576", "738.452, 713.97, 29.68, 0.4576" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "674.883, 672.749, 30.546, 0.3774", "675.177, 672.409, 30.4934, 0.3976", "675.803, 671.815, 30.3428, 0.3736", "676.722, 671.359, 30.3204, 0.399", "677.505, 670.961, 30.2873, 0.3342", "678.43, 670.536, 30.112, 0.3006", "678.719, 670.228, 29.9569, 0.2756", "679.504, 669.396, 29.848, 0.2766", "680.439, 668.897, 29.6559, 0.2782", "681.443, 668.554, 29.491, 0.2814", "682.516, 668.59, 29.3485, 0.287", "683.541, 668.54, 29.3465, 0.2988", "684.471, 668.32, 29.2852, 0.3142", "685.567, 668.102, 29.223, 0.3736", "686.4, 667.638, 29.2298, 0.334" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "616.32, 628.628, 40.833, 0.8228", "615.432, 628.125, 42.7098, 0.3868", "614.376, 627.906, 43.2104, 0.3586", "613.423, 627.334, 43.559, 0.3456", "612.309, 627.134, 43.8105, 0.3606", "611.275, 626.7, 44.0437, 0.427", "610.53, 625.895, 44.3106, 0.5924", "610.03, 625.007, 44.7118, 0.6926", "609.449, 624.058, 45.155, 0.5086", "608.793, 623.151, 45.6193, 0.3606", "608.066, 622.28, 46.0286, 0.2924", "607.259, 621.469, 46.3305, 0.3088", "606.481, 620.636, 46.5363, 0.3328", "605.817, 619.707, 46.6782, 0.4074", "605.189, 618.778, 46.8364, 0.399", "604.567, 617.854, 47.0089, 0.4114", "603.8, 617.018, 47.1097, 0.5266", "602.899, 616.335, 47.1184, 0.5206", "602.007, 615.657, 47.0397, 0.4322", "601.182, 614.87, 46.9526, 0.4136", "600.455, 613.992, 46.8941, 0.3608", "599.796, 613.066, 46.8983, 0.352", "599.043, 612.241, 47.0047, 0.3606", "598.188, 611.502, 47.1671, 0.485", "597.293, 610.801, 47.3312, 0.418", "596.693, 610.398, 47.2867, 0.3662", "596.327, 609.909, 47.1587, 0.3756", "595.793, 609.082, 47.278, 0.338", "595.185, 608.456, 47.5499, 0.3078", "594.867, 607.877, 47.546, 0.2888", "594.118, 607.206, 47.5591, 0.3018", "593.352, 606.553, 47.5888, 0.32", "592.815, 606.067, 47.7646, 0.3844", "592.415, 605.097, 47.85, 0.354", "591.665, 604.431, 47.8279, 0.338", "590.925, 603.741, 47.6717, 0.341", "590.224, 602.948, 47.5392, 0.418", "589.583, 602.134, 47.4466, 0.442", "588.919, 601.739, 47.4046, 0.3762", "588.538, 601.099, 47.4813, 0.3324", "587.992, 600.594, 47.537, 0.3292", "587.165, 600.035, 47.5283, 0.4026", "586.83, 599.588, 47.6137, 0.3828", "586.245, 598.659, 47.6764, 0.416", "585.722, 598.045, 47.9044, 0.3668", "585.27, 597.168, 48.1079, 0.3556" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "616.32, 628.628, 40.833, 0.8228", "615.697, 627.138, 40.7842, 0.6732", "615.345, 626.054, 40.7568, 0.5598", "615.052, 624.973, 40.7103, 0.4896", "615.005, 623.841, 40.6246, 0.5946", "615.38, 622.859, 40.4205, 0.564" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "643.755, 643.729, 28.7571, 0.4354", "643.637, 643.023, 27.6307, 0.6864", "643.18, 642.003, 27.3854, 0.6708", "642.54, 641.056, 27.2802, 0.4926", "641.91, 640.121, 27.1964, 0.4408", "641.173, 639.272, 27.1148, 0.3656", "640.414, 638.427, 26.9017, 0.3536", "639.592, 638.041, 26.3613, 0.399", "638.997, 637.256, 25.6086, 0.3836", "638.312, 636.367, 24.8393, 0.3816", "637.644, 635.564, 23.9919, 0.4768", "636.857, 635.029, 23.0715, 0.4018", "637.491, 634.334, 22.178, 0.341", "637.425, 633.304, 21.611, 0.3046", "636.522, 632.742, 21.2814, 0.325", "635.407, 632.526, 21.006, 0.3934", "634.499, 631.975, 20.6981, 0.372", "634.235, 631.001, 20.3045, 0.3664", "634.036, 629.968, 19.8829, 0.4178", "633.255, 629.215, 19.3719, 0.4418", "632.419, 628.504, 18.8151, 0.3758", "631.663, 627.691, 18.2634, 0.3318", "630.923, 626.849, 17.7633, 0.3282", "630.195, 625.973, 17.3506, 0.3996", "629.662, 625.046, 16.9408, 0.383", "629.34, 624.008, 16.5555, 0.388", "629.059, 622.93, 16.3563, 0.4528", "628.591, 621.917, 16.3088, 0.5322", "627.784, 621.178, 16.2858, 0.4198", "627.116, 620.535, 16.3397, 0.3274", "626.613, 619.813, 16.63, 0.2784", "626.772, 618.776, 17.029, 0.2818", "627.24, 617.798, 17.4935, 0.288", "627.036, 616.861, 18.0474, 0.299", "626.602, 615.827, 18.6007, 0.322", "627.072, 615.291, 19.3995, 0.3518", "627.555, 615.392, 20.5628, 0.4688", "627.3, 615.177, 21.9896, 0.387", "626.707, 614.386, 23.3724, 0.3136", "626.284, 613.477, 24.6713, 0.2542", "625.958, 612.451, 25.7848, 0.2288", "625.597, 611.435, 27.5828, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "643.755, 643.729, 28.7571, 0.4354", "643.591, 642.779, 28.6913, 0.3642", "643.331, 641.702, 28.7529, 0.309", "643.403, 640.569, 28.8112, 0.2914", "643.805, 639.501, 28.7818, 0.3052", "644.389, 638.523, 28.6373, 0.3336", "645.112, 637.793, 28.2554, 0.3736", "645.928, 637.086, 27.7476, 0.509", "646.906, 636.549, 27.2114, 0.463" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "610.361, 670.109, 29.939, 0.5018", "609.077, 670.766, 28.5432, 0.454", "608.403, 671.686, 27.967, 0.5278", "607.79, 672.639, 27.5512, 0.4438", "606.822, 673.244, 27.2465, 0.445", "605.772, 673.695, 26.9972, 0.3718", "604.808, 674.308, 26.7662, 0.3724", "603.838, 674.887, 26.5015, 0.3994", "602.787, 675.057, 26.087, 0.5514", "601.806, 674.734, 25.5163, 0.5684", "600.798, 674.433, 24.8816, 0.5106", "599.66, 674.484, 24.3424, 0.61", "598.542, 674.687, 23.885, 0.4784", "597.452, 674.567, 23.4546, 0.3936", "596.474, 674.012, 23.0648, 0.3794", "595.453, 673.692, 22.7238, 0.345", "594.399, 674.041, 22.381, 0.3204", "593.315, 674.334, 22.1091, 0.3132", "592.176, 674.263, 21.9098, 0.342", "591.065, 674.264, 21.7455, 0.42", "590.005, 674.629, 21.6094, 0.4454", "588.959, 675.081, 21.5703, 0.384", "587.906, 675.517, 21.5706, 0.3404", "586.816, 675.732, 21.6544, 0.375", "585.722, 675.681, 21.8901, 0.3368", "584.634, 675.444, 22.17, 0.3054", "583.537, 675.256, 22.4249, 0.2846", "582.41, 675.363, 22.7121, 0.293", "581.459, 674.998, 22.9992, 0.3098", "580.582, 674.275, 23.2521, 0.3344", "579.545, 673.953, 23.5295, 0.4118", "578.422, 673.906, 23.843, 0.4008", "577.297, 673.781, 24.155, 0.4442", "576.198, 673.819, 24.4831, 0.4436", "575.12, 674.142, 24.7882, 0.3792", "574.01, 674.389, 25.0134, 0.3378", "572.888, 674.433, 25.1109, 0.3404", "571.788, 674.68, 25.259, 0.417", "570.747, 675.137, 25.4341, 0.4402", "569.649, 675.293, 25.684, 0.373", "568.513, 675.295, 25.9327, 0.3252", "567.37, 675.244, 26.1416, 0.3222", "566.272, 674.929, 26.3111, 0.3586", "565.27, 674.379, 26.4335, 0.4518", "564.212, 673.948, 26.528, 0.4992", "563.236, 673.355, 26.6204, 0.5088", "562.278, 672.79, 26.7908, 0.4486", "561.261, 672.28, 26.9535, 0.4882", "560.22, 671.805, 27.0571, 0.5144", "559.093, 671.609, 27.1012, 0.5618", "557.972, 671.382, 27.0851, 0.4274" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "610.361, 670.109, 29.939, 0.5018", "609.364, 668.865, 28.5177, 0.6354", "608.642, 668.075, 28.0983, 0.5646", "607.621, 667.627, 27.714, 0.5926", "606.492, 667.487, 27.3887, 0.5582", "605.507, 667.033, 27.0406, 0.456", "605.638, 666.001, 26.7183, 0.4524", "606.333, 665.106, 26.4875, 0.4584", "607.11, 664.267, 26.3183, 0.408", "607.786, 663.344, 26.1773, 0.3858", "607.848, 662.219, 26.0511, 0.4548", "607.239, 661.266, 25.9288, 0.5062", "606.432, 660.456, 25.7774, 0.516", "605.58, 659.715, 25.5342, 0.4916", "604.815, 658.898, 25.199, 0.4234", "603.981, 658.117, 24.868, 0.408", "602.987, 657.572, 24.5031, 0.528", "602.045, 657.205, 23.9867, 0.4862", "601.166, 656.503, 23.4908, 0.5486", "600.4, 655.655, 23.0952, 0.4416", "599.769, 654.7, 22.7741, 0.4094", "599.046, 653.818, 22.4804, 0.4588", "598.516, 652.85, 22.1339, 0.4774", "598.05, 651.807, 21.8388, 0.6374", "597.679, 650.724, 21.5775, 0.5538", "597.216, 649.679, 21.3329, 0.4148" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "686.4, 667.638, 29.2298, 0.334", "687.099, 667.78, 29.2018, 0.2288", "688.213, 668.007, 28.7389, 0.2746", "689.328, 668.232, 28.5407, 0.2746", "690.441, 668.459, 28.3074, 0.2748", "691.555, 668.684, 28.0563, 0.2748", "692.669, 668.911, 27.8014, 0.2752", "693.783, 669.136, 27.5567, 0.2756", "694.465, 668.657, 27.3186, 0.2766", "695.09, 667.729, 27.156, 0.2782", "695.739, 666.798, 27.092, 0.2814", "696.15, 665.763, 27.0341, 0.2872", "696.818, 664.877, 27.0137, 0.299", "696.944, 663.748, 27.0165, 0.3144", "697.611, 663.108, 27.0413, 0.374", "697.766, 662.096, 27.2122, 0.3352", "697.954, 661.018, 27.266, 0.3022", "698.547, 660.19, 27.2058, 0.2788", "698.985, 659.165, 27.1276, 0.2824", "699.442, 658.18, 26.9984, 0.289", "699.781, 657.12, 26.87, 0.3024", "700.406, 656.26, 26.7026, 0.321", "701.17, 655.56, 26.5627, 0.3858", "701.299, 654.437, 26.4531, 0.358", "701.921, 653.56, 26.3761, 0.3396", "701.914, 652.453, 26.2575, 0.3734", "702.401, 651.595, 26.0, 0.3338", "703.093, 650.903, 25.7669, 0.3", "703.409, 649.858, 25.5402, 0.2746", "704.528, 649.766, 25.3389, 0.2746", "704.956, 648.823, 25.086, 0.2748", "705.263, 647.736, 24.8829, 0.2748", "706.042, 647.011, 24.7146, 0.2752", "706.938, 646.323, 24.5176, 0.2756", "707.654, 645.441, 24.3112, 0.2766", "708.535, 644.987, 24.049, 0.2782", "709.487, 644.601, 23.7731, 0.2814", "710.106, 643.896, 23.4408, 0.287", "711.236, 643.843, 23.1534, 0.2988", "711.917, 643.203, 22.8813, 0.3142", "712.682, 642.771, 22.5107, 0.3734", "713.515, 642.47, 22.2609, 0.334", "714.578, 642.47, 21.9227, 0.3002", "715.722, 642.47, 21.6504, 0.275", "716.857, 642.404, 21.4248, 0.2754", "717.929, 642.456, 21.2676, 0.2762", "718.668, 642.242, 20.946, 0.2774", "719.807, 642.168, 20.6698, 0.28", "720.73, 642.435, 20.4347, 0.2846", "721.638, 642.814, 20.2974, 0.293", "722.585, 642.6, 20.2259, 0.3088", "723.135, 643.031, 19.8428, 0.3386", "723.666, 642.538, 19.2565, 0.3898", "723.736, 641.593, 18.7374, 0.5056", "724.376, 640.887, 18.0947, 0.6186", "725.158, 640.367, 17.4664, 0.6356", "725.925, 640.752, 16.785, 0.4576", "726.783, 640.754, 15.68, 0.4576" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "686.4, 667.638, 29.2298, 0.334", "686.963, 666.859, 29.2578, 0.3002", "686.861, 665.774, 29.1757, 0.2752", "686.972, 664.71, 29.1595, 0.2756", "686.927, 663.607, 29.0279, 0.2766", "686.858, 662.501, 28.8467, 0.2782", "686.623, 661.406, 28.6854, 0.2814", "686.139, 660.393, 28.5482, 0.287", "685.708, 659.391, 28.4357, 0.2988", "685.4, 658.552, 28.2862, 0.3142", "685.37, 657.563, 28.2304, 0.3734", "685.345, 656.618, 28.2209, 0.3338", "685.307, 656.103, 28.1355, 0.3", "685.448, 655.064, 27.975, 0.2746", "685.7, 653.977, 27.8662, 0.2746", "685.955, 652.892, 27.8055, 0.2746", "686.171, 651.815, 27.8531, 0.2746", "686.171, 650.673, 27.9266, 0.2746", "686.171, 649.529, 28.0218, 0.2746", "686.171, 648.385, 28.1302, 0.2746", "686.171, 647.241, 28.2414, 0.2746", "686.171, 646.097, 28.3598, 0.2746", "686.171, 644.953, 28.4892, 0.2746", "686.171, 643.849, 28.6832, 0.2746", "686.503, 642.987, 29.0514, 0.2746", "686.28, 641.89, 29.4482, 0.2746", "685.81, 640.868, 29.7783, 0.2746", "685.105, 640.015, 30.0874, 0.2746", "684.57, 639.276, 30.3279, 0.2746", "684.291, 638.264, 30.5217, 0.2746", "684.026, 637.299, 30.7726, 0.2746", "684.113, 636.161, 30.9854, 0.2746", "684.201, 635.022, 31.1646, 0.2746", "684.288, 633.883, 31.3009, 0.2746", "684.376, 632.744, 31.3978, 0.2746", "684.409, 631.618, 31.4454, 0.2746", "683.876, 630.629, 31.3942, 0.2746", "683.28, 629.73, 31.2306, 0.2746", "682.847, 628.785, 30.97, 0.2746", "682.004, 628.17, 30.8599, 0.2746", "680.998, 627.954, 30.9364, 0.2746", "680.356, 627.497, 30.9792, 0.2746", "679.47, 626.807, 30.9837, 0.2746", "678.828, 626.054, 30.9532, 0.2748", "678.607, 625.425, 30.9151, 0.275", "678.033, 624.854, 30.8594, 0.2754", "677.948, 623.947, 30.9789, 0.2762", "677.505, 623.035, 31.253, 0.2776", "677.594, 622.406, 31.7649, 0.2802", "676.861, 621.655, 32.2008, 0.285", "676.156, 621.192, 32.3336, 0.2938", "675.58, 620.605, 32.5816, 0.3112", "674.931, 620.022, 32.6967, 0.3382", "674.469, 619.227, 32.5839, 0.413", "674.032, 618.369, 32.5203, 0.4328", "673.529, 617.746, 32.5926, 0.3594", "673.223, 616.776, 32.524, 0.3002", "672.631, 616.132, 32.5293, 0.275", "671.911, 615.351, 32.4279, 0.2752", "671.252, 614.69, 32.2969, 0.276", "670.842, 613.918, 32.2552, 0.2772", "670.918, 613.222, 32.0575, 0.2792", "670.132, 612.478, 31.7766, 0.2832", "669.296, 611.794, 31.3208, 0.2908", "668.461, 611.11, 30.7558, 0.3046", "667.626, 610.426, 30.1106, 0.3308", "667.36, 609.715, 29.3373, 0.3754", "667.066, 609.051, 28.7672, 0.4778", "666.723, 608.329, 28.3522, 0.5732", "666.41, 607.478, 28.0571, 0.5212", "665.795, 607.02, 27.6944, 0.3916", "665.331, 606.216, 27.596, 0.3126", "664.777, 605.746, 27.503, 0.299", "664.438, 605.143, 27.6285, 0.3144", "663.525, 604.716, 27.8294, 0.374", "662.646, 604.015, 27.9642, 0.335", "661.938, 603.807, 27.9223, 0.3022", "660.924, 603.7, 27.9591, 0.2786", "660.232, 604.123, 28.1168, 0.282", "659.402, 604.261, 28.0294, 0.288", "658.634, 604.375, 28.0269, 0.3006", "657.754, 604.213, 28.1492, 0.3178", "656.689, 603.991, 28.1117, 0.3802", "656.233, 603.534, 27.7965, 0.3464", "655.367, 603.971, 27.382, 0.323", "654.661, 603.994, 27.1234, 0.318", "653.826, 603.969, 26.8158, 0.3508", "652.71, 603.936, 26.4751, 0.436", "651.758, 603.892, 26.1969, 0.4766", "650.879, 603.574, 26.1412, 0.436", "650.044, 603.91, 25.9014, 0.4636", "649.205, 604.038, 25.7473, 0.4742", "648.419, 604.432, 25.6771, 0.4618", "647.623, 604.419, 25.4105, 0.3662", "647.368, 605.469, 25.1865, 0.3124", "646.703, 605.253, 25.1836, 0.2988", "646.838, 606.288, 25.2793, 0.3142", "646.924, 607.135, 25.2832, 0.3736", "646.852, 607.902, 25.1766, 0.3342", "646.013, 607.811, 25.2724, 0.3006", "645.325, 608.315, 25.5224, 0.2758", "644.657, 608.48, 25.6299, 0.2768", "643.975, 608.765, 25.6376, 0.2786", "643.271, 609.429, 25.6176, 0.282", "642.941, 610.343, 25.6539, 0.2886", "642.331, 611.311, 25.6798, 0.3", "641.72, 612.279, 25.7198, 0.324", "641.11, 613.246, 25.7933, 0.3556", "640.5, 614.214, 25.8804, 0.476", "639.787, 614.557, 25.9665, 0.4", "639.724, 615.057, 26.3273, 0.3378", "639.61, 615.859, 26.4436, 0.2988", "639.684, 616.369, 26.2152, 0.3142", "639.838, 617.255, 26.1598, 0.3736", "639.545, 618.107, 26.1826, 0.3342", "638.853, 618.799, 26.2012, 0.3006", "638.106, 619.462, 26.3282, 0.2758", "637.17, 619.959, 26.6106, 0.2768", "636.958, 620.461, 26.815, 0.2786", "637.05, 620.77, 27.2718, 0.2822", "636.256, 620.96, 27.7682, 0.2888", "635.435, 621.281, 28.2601, 0.3006", "635.044, 621.687, 28.9083, 0.3236", "634.695, 622.44, 29.3306, 0.3624", "634.234, 623.253, 29.4571, 0.4526", "633.877, 624.182, 29.549, 0.5316", "633.141, 625.058, 29.6024, 0.4186", "632.406, 625.934, 29.6369, 0.3254", "631.67, 626.809, 29.6654, 0.2746", "630.933, 627.684, 29.7312, 0.2746", "630.198, 628.559, 29.8175, 0.2748", "629.462, 629.435, 29.8925, 0.2748", "628.726, 630.31, 29.9589, 0.2752", "627.991, 631.185, 30.009, 0.2756", "627.255, 632.06, 30.0437, 0.2766", "627.255, 632.335, 30.0577, 0.2782", "626.556, 633.101, 30.1451, 0.2814", "626.266, 633.674, 29.972, 0.287", "625.959, 634.52, 29.6719, 0.2988", "625.321, 635.135, 29.6629, 0.3142", "624.67, 635.542, 29.951, 0.3736", "624.07, 636.073, 30.3204, 0.3342", "623.39, 635.989, 30.9831, 0.3006", "622.393, 636.257, 31.6148, 0.2756", "621.632, 636.917, 32.1168, 0.2766", "621.12, 637.82, 32.396, 0.2782", "621.059, 638.688, 32.7032, 0.2814", "620.536, 639.168, 32.7858, 0.2872", "620.162, 639.796, 32.6038, 0.2976", "619.846, 640.64, 32.4649, 0.3182", "619.821, 641.389, 32.629, 0.3512", "619.566, 642.146, 32.6466, 0.4378", "619.476, 643.135, 32.7398, 0.4746", "618.925, 643.947, 32.8392, 0.4576", "618.867, 644.797, 32.9347, 0.3814", "618.904, 645.902, 33.04, 0.2288" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "585.27, 597.168, 48.1079, 0.3556", "584.557, 596.842, 47.9562, 0.2288", "583.517, 596.367, 47.7683, 0.324", "582.817, 596.024, 47.628, 0.363", "582.086, 595.499, 47.4802, 0.4536", "581.419, 595.211, 47.4312, 0.5336", "580.81, 594.589, 47.2262, 0.4222", "580.014, 594.324, 47.108, 0.332", "579.266, 593.868, 47.0243, 0.2868", "578.299, 593.447, 46.9557, 0.2972", "577.656, 592.924, 46.8303, 0.3174", "577.028, 592.091, 46.6948, 0.3498", "576.407, 591.316, 46.4836, 0.4354", "575.473, 591.185, 46.1944, 0.4688", "574.739, 591.078, 45.9007, 0.452", "574.027, 590.876, 45.6529, 0.3474", "572.967, 590.762, 45.4168, 0.2796", "571.836, 590.647, 45.2822, 0.2288", "570.742, 590.647, 45.08, 0.2288" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "585.27, 597.168, 48.1079, 0.3556", "584.755, 596.872, 48.3832, 0.4044", "584.519, 596.128, 48.7841, 0.3862", "584.264, 595.134, 49.154, 0.4222", "583.862, 594.109, 49.4035, 0.3782", "583.322, 593.302, 49.5883, 0.3778", "582.575, 592.771, 49.7846, 0.4402" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "615.38, 622.859, 40.4205, 0.564", "614.493, 621.904, 40.7019, 0.735", "613.677, 621.229, 40.8425, 0.7514", "613.505, 620.228, 40.9926, 0.7006", "613.141, 619.276, 41.102, 0.5424", "613.106, 618.426, 41.0749, 0.5598", "612.854, 617.373, 40.9749, 0.457", "612.46, 616.539, 41.0166, 0.464", "611.938, 615.459, 41.0452, 0.433", "612.261, 615.268, 41.0491, 0.3596", "612.053, 614.557, 41.083, 0.3008" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "615.38, 622.859, 40.4205, 0.564", "615.751, 622.131, 38.5798, 0.6864", "616.211, 621.144, 37.669, 0.7334", "616.544, 620.065, 37.3164, 0.665", "617.336, 619.299, 36.9432, 0.488", "618.256, 618.72, 36.472, 0.4028", "619.117, 618.053, 35.9324, 0.4378", "619.362, 617.111, 35.4136, 0.4812" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "646.906, 636.549, 27.2114, 0.463", "646.898, 635.856, 26.7086, 0.4454", "646.732, 634.788, 26.2251, 0.5438", "646.454, 633.695, 25.9176, 0.5462", "646.218, 632.614, 25.807, 0.5104", "645.97, 631.547, 25.754, 0.4098", "646.394, 630.527, 25.6716, 0.3892", "647.045, 629.613, 25.5126, 0.461", "647.31, 628.546, 25.3168, 0.5174", "647.113, 627.451, 25.0773, 0.5378", "646.728, 626.42, 24.7255, 0.527", "646.481, 625.43, 24.2551, 0.5146", "646.464, 624.332, 23.7811, 0.4532", "646.414, 623.249, 23.5451, 0.5262", "646.104, 622.168, 23.4377, 0.4408", "645.688, 621.104, 23.3404, 0.439", "645.651, 620.016, 23.1483, 0.3624" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "646.906, 636.549, 27.2114, 0.463", "647.4, 636.379, 26.8713, 0.2288", "648.253, 635.936, 27.8192, 0.396", "648.969, 635.06, 28.1842, 0.377", "649.428, 634.012, 28.4995, 0.3744", "649.944, 632.992, 28.7773, 0.4402", "650.549, 632.03, 29.048, 0.447", "651.061, 631.05, 29.365, 0.5614", "651.855, 630.239, 29.6495, 0.5084", "652.777, 629.572, 29.9186, 0.5534", "653.614, 628.845, 30.2431, 0.6274", "654.37, 628.053, 30.588, 0.5814", "654.929, 627.057, 30.8232, 0.6998", "655.517, 626.091, 30.9403, 0.6168", "656.222, 625.19, 31.0212, 0.559", "656.964, 624.325, 31.0811, 0.4414", "657.798, 623.583, 31.1716, 0.5034", "658.482, 622.765, 31.3636, 0.4036", "659.134, 621.922, 31.4905, 0.3446", "659.991, 621.346, 31.3925, 0.3112", "660.509, 620.368, 31.2516, 0.3382", "660.763, 619.255, 31.1144, 0.413", "661.09, 618.16, 30.9932, 0.4328", "661.545, 617.112, 30.9014, 0.3594", "662.209, 616.186, 30.8608, 0.3002", "663.023, 615.385, 30.8686, 0.275", "663.931, 614.69, 30.8955, 0.2754", "664.822, 613.973, 30.9369, 0.276", "665.74, 613.303, 30.9795, 0.2772", "666.735, 612.744, 31.0262, 0.2792", "667.631, 612.098, 31.1732, 0.2834", "668.478, 611.39, 31.4423, 0.2906", "669.359, 610.682, 31.738, 0.3054", "670.179, 609.888, 32.0102, 0.3266", "670.88, 608.99, 32.279, 0.3964", "671.513, 608.073, 32.5982, 0.3774", "672.254, 607.22, 32.8992, 0.3764", "673.073, 606.423, 33.1559, 0.4364", "673.96, 605.716, 33.4191, 0.477", "674.953, 605.207, 33.7154, 0.437", "676.039, 604.874, 33.9738, 0.4654", "676.993, 604.271, 34.1796, 0.4774", "677.861, 603.526, 34.3577, 0.4678", "678.805, 602.886, 34.5204, 0.3768", "679.79, 602.305, 34.6704, 0.3336", "680.471, 601.524, 34.9726, 0.3312", "681.205, 600.677, 35.3125, 0.4064", "681.945, 599.852, 35.7199, 0.3896", "682.838, 599.156, 36.1183, 0.4298", "683.821, 598.576, 36.4591, 0.386", "684.685, 597.836, 36.7618, 0.422", "685.303, 596.932, 37.0941, 0.3776", "685.584, 595.86, 37.429, 0.3766", "685.714, 594.893, 37.6365, 0.438" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "557.972, 671.382, 27.0851, 0.4274", "556.722, 670.673, 27.2311, 0.2288", "555.812, 670.02, 27.4445, 0.374", "554.98, 669.599, 27.5194, 0.335", "553.909, 669.469, 27.6543, 0.302", "552.765, 669.469, 27.7526, 0.2782", "551.812, 669.15, 27.8184, 0.2814", "550.756, 668.894, 27.8065, 0.287", "549.679, 668.628, 27.8389, 0.2988", "548.602, 668.45, 27.7757, 0.3142", "547.502, 668.668, 27.6932, 0.3734", "546.57, 668.614, 27.7497, 0.3338", "545.551, 668.43, 27.8442, 0.3", "544.474, 668.091, 27.8811, 0.2746", "543.454, 667.606, 27.8661, 0.2746", "542.362, 667.264, 27.8615, 0.2746", "541.226, 667.181, 27.8581, 0.2746", "540.082, 667.19, 27.8543, 0.2748", "538.972, 667.39, 27.8573, 0.2748", "537.909, 667.745, 27.9108, 0.2752", "536.92, 668.296, 27.9899, 0.2756", "535.84, 668.595, 28.1459, 0.2766", "534.716, 668.555, 28.313, 0.2782", "533.602, 668.711, 28.49, 0.2814", "532.576, 669.128, 28.7277, 0.2872", "531.672, 669.559, 29.0242, 0.2988", "530.882, 669.917, 29.1295, 0.3144", "530.071, 670.383, 29.1743, 0.374", "529.221, 670.955, 29.1617, 0.335", "528.3, 671.615, 29.1768, 0.302", "527.255, 672.052, 29.1917, 0.2784", "526.18, 672.38, 29.2485, 0.2816", "525.114, 672.628, 29.344, 0.2874", "524.22, 673.028, 29.3292, 0.2994", "523.238, 673.362, 29.346, 0.3152", "522.676, 673.816, 29.5182, 0.3754", "522.077, 673.93, 29.5641, 0.3376", "521.039, 674.208, 29.645, 0.3068", "519.933, 674.449, 29.7388, 0.287", "519.143, 674.893, 29.9936, 0.2988", "518.186, 675.338, 30.1342, 0.3142", "517.194, 675.761, 30.2422, 0.3734", "516.49, 676.424, 30.4814, 0.334", "516.318, 677.273, 30.8162, 0.3002", "515.718, 678.01, 30.9848, 0.275", "514.878, 678.457, 30.9299, 0.2752", "514.425, 679.061, 31.0391, 0.2758", "513.82, 679.557, 30.8409, 0.277", "513.436, 680.222, 30.6785, 0.279", "512.94, 680.967, 30.6261, 0.2826", "512.32, 681.904, 30.613, 0.2894", "511.462, 682.596, 30.7278, 0.3032", "510.848, 683.41, 30.7779, 0.3224", "510.47, 684.043, 30.956, 0.3884", "509.843, 684.455, 31.2976, 0.3628", "509.201, 685.074, 31.4941, 0.3484", "508.457, 685.471, 31.5731, 0.3896", "507.779, 685.899, 31.6624, 0.365", "507.08, 686.771, 31.6694, 0.3522", "506.324, 687.454, 31.6168, 0.3968", "505.625, 687.917, 31.4905, 0.3782", "504.98, 688.712, 31.5081, 0.378", "504.148, 689.318, 31.535, 0.4404", "503.352, 690.07, 31.551, 0.4784", "502.907, 690.795, 31.612, 0.4694", "502.726, 691.229, 31.7758, 0.38", "501.785, 691.205, 31.8573, 0.3394", "501.349, 691.447, 32.1656, 0.3434", "500.526, 691.839, 32.244, 0.4224", "500.058, 692.699, 32.2129, 0.4498", "499.177, 692.833, 32.121, 0.3922", "498.384, 692.806, 32.1863, 0.3556", "497.545, 692.842, 32.0418, 0.4042", "496.829, 692.818, 32.0684, 0.3856", "495.75, 692.692, 32.1406, 0.4224", "494.692, 692.463, 32.1434, 0.3724", "493.629, 692.648, 32.0667, 0.397", "492.732, 692.349, 32.1247, 0.3304", "491.918, 692.878, 32.0712, 0.2938", "490.871, 692.819, 31.9575, 0.2626", "489.983, 692.921, 31.9262, 0.2542", "489.145, 693.145, 32.1656, 0.2288", "488.946, 693.722, 32.2, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "557.972, 671.382, 27.0851, 0.4274", "557.59, 670.68, 26.9986, 0.3416", "557.296, 669.621, 26.7849, 0.3058", "556.704, 668.687, 26.5414, 0.3268", "555.832, 667.958, 26.322, 0.3982", "554.942, 667.24, 26.1232, 0.3744", "554.127, 666.443, 25.9238, 0.4008", "553.447, 665.572, 25.6653, 0.3376", "552.836, 664.619, 25.4377, 0.3068", "552.026, 663.828, 25.2423, 0.287", "551.218, 663.09, 24.9925, 0.2976", "550.454, 662.287, 24.8748, 0.318", "549.698, 661.466, 24.9109, 0.3508", "548.851, 660.94, 24.9433, 0.4374", "548.144, 660.485, 24.9365, 0.4728", "547.465, 660.001, 25.0149, 0.4592", "546.596, 659.788, 25.0653, 0.361", "545.674, 659.709, 25.2412, 0.3032", "544.605, 659.36, 25.395, 0.2806", "543.859, 659.18, 25.4845, 0.2856", "543.111, 658.785, 25.6039, 0.295", "542.124, 658.599, 25.7381, 0.3132", "541.258, 658.33, 25.7263, 0.342", "540.597, 658.029, 25.6385, 0.42", "539.627, 657.699, 25.641, 0.4458", "538.643, 657.309, 25.6211, 0.3834", "537.531, 657.289, 25.5868, 0.3454", "536.453, 657.468, 25.4707, 0.3544", "535.508, 657.432, 25.5112, 0.444", "534.4, 657.457, 25.5664, 0.4848" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "597.216, 649.679, 21.3329, 0.4148", "596.384, 649.026, 20.8951, 0.3084", "595.436, 648.552, 20.4861, 0.2904", "594.35, 648.606, 20.1526, 0.3034", "593.243, 648.582, 19.8862, 0.3302", "592.287, 648.029, 19.6258, 0.3672", "591.558, 647.274, 19.2359, 0.4972", "591.006, 646.878, 18.5996, 0.4404", "590.067, 646.56, 17.9675, 0.4072", "589.012, 646.476, 17.5965, 0.4536", "587.894, 646.47, 17.3202, 0.4744", "586.752, 646.445, 17.1126, 0.6008", "585.628, 646.253, 16.9637, 0.6362", "584.64, 645.756, 16.785, 0.5236", "583.806, 644.995, 16.5825, 0.4942", "583.224, 644.021, 16.3885, 0.4838", "583.127, 642.901, 16.2299, 0.4794", "582.927, 641.777, 16.1027, 0.3996", "582.057, 641.084, 15.9966, 0.3706", "580.946, 640.909, 15.864, 0.4256", "579.879, 640.593, 15.6703, 0.457", "578.778, 640.288, 15.517, 0.3992", "577.912, 639.551, 15.4197, 0.3994", "577.436, 638.517, 15.3804, 0.335", "577.477, 637.377, 15.3962, 0.302", "577.751, 636.266, 15.4631, 0.2782", "577.538, 635.15, 15.5911, 0.2812", "577.115, 634.158, 15.8438, 0.2868" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "597.216, 649.679, 21.3329, 0.4148", "597.057, 648.488, 21.7356, 0.2288", "596.946, 647.396, 20.9976, 0.3384", "596.667, 646.359, 20.628, 0.4132", "596.355, 645.298, 20.3166, 0.4332", "596.176, 644.201, 20.0104, 0.36", "596.129, 643.072, 19.7051, 0.3014", "596.065, 641.93, 19.4444, 0.2772", "595.492, 641.111, 19.1143, 0.2794", "594.584, 640.461, 18.8158, 0.2834", "594.033, 639.493, 18.5732, 0.2912", "593.93, 638.367, 18.3796, 0.305", "594.199, 637.276, 18.1827, 0.3332", "594.483, 636.186, 17.9652, 0.3726", "593.919, 635.291, 17.8713, 0.5084", "593.547, 634.236, 17.7558, 0.4548", "593.908, 633.179, 17.7095, 0.4662", "594.146, 632.07, 17.6259, 0.406", "593.661, 631.046, 17.5258, 0.4602", "593.196, 630.001, 17.4481, 0.4428" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "582.575, 592.771, 49.7846, 0.4402", "582.548, 591.752, 47.9469, 0.2288", "582.485, 590.701, 46.6589, 0.3868", "582.219, 589.671, 46.1149, 0.3598", "582.352, 588.59, 45.5451, 0.3426", "582.66, 588.013, 44.8277, 0.3792", "583.237, 587.259, 44.1633, 0.3446", "583.912, 586.841, 43.6996, 0.3208", "584.484, 585.95, 43.5607, 0.3078", "584.918, 585.314, 43.4221, 0.3616", "585.265, 584.425, 43.4288, 0.3136", "585.648, 583.619, 43.5218, 0.2542", "586.186, 583.554, 44.24, 0.2288" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "582.575, 592.771, 49.7846, 0.4402", "581.821, 592.348, 50.2009, 0.478", "581.362, 591.768, 50.6848, 0.4686", "580.574, 590.984, 51.098, 0.3786", "579.786, 590.192, 51.45, 0.3366", "578.854, 589.663, 51.6365, 0.3384", "578.138, 588.955, 51.9252, 0.4132", "577.389, 588.164, 52.2262, 0.4334", "577.034, 587.437, 52.6445, 0.3604", "576.664, 586.863, 53.2106, 0.302", "576.579, 585.858, 53.615, 0.2782", "576.216, 585.351, 53.6376, 0.2814", "575.663, 584.43, 53.7485, 0.287", "575.224, 583.53, 53.9316, 0.2988", "574.668, 582.966, 53.8076, 0.3142", "574.044, 582.293, 54.3684, 0.3344", "573.459, 581.71, 54.7277, 0.301", "572.566, 581.087, 54.8962, 0.2766", "571.867, 580.549, 54.9357, 0.2782", "571.382, 579.852, 55.0992, 0.2814", "570.729, 579.004, 55.2426, 0.2872", "570.027, 578.142, 55.3193, 0.2988", "569.362, 577.651, 55.4585, 0.3144", "568.797, 577.149, 55.4322, 0.374", "568.273, 576.227, 55.505, 0.335", "567.434, 575.503, 55.5355, 0.302", "566.527, 574.888, 55.4949, 0.2782", "565.584, 574.274, 55.4898, 0.2814", "564.715, 573.647, 55.4557, 0.287", "563.958, 572.823, 55.5254, 0.2988", "563.354, 572.015, 55.8032, 0.3142", "562.874, 571.251, 56.0759, 0.3734", "562.866, 570.513, 56.3156, 0.3338", "563.661, 569.913, 56.7328, 0.3", "563.872, 568.86, 57.1886, 0.2746", "563.877, 567.72, 57.577, 0.2746", "563.683, 566.622, 57.9236, 0.2746", "563.441, 565.529, 58.3022, 0.2746", "563.318, 564.418, 58.6247, 0.2746", "562.956, 563.352, 58.9386, 0.2746", "562.619, 562.277, 59.1898, 0.2746", "562.283, 561.315, 59.5193, 0.2746", "562.047, 560.576, 60.0687, 0.2746", "561.361, 560.61, 60.4971, 0.2746", "561.83, 559.988, 61.0322, 0.2746", "561.789, 559.065, 61.6249, 0.2746", "561.704, 557.929, 62.0866, 0.2746", "561.704, 556.785, 62.4218, 0.2746", "561.194, 555.553, 62.7127, 0.2746", "560.76, 554.504, 62.9787, 0.2746", "560.327, 553.456, 63.2016, 0.2746", "560.102, 552.354, 63.3492, 0.2746", "560.102, 551.21, 63.4539, 0.2746", "560.102, 550.066, 63.5197, 0.2746", "560.102, 548.922, 63.5502, 0.2746", "559.878, 547.817, 63.56, 0.2746", "559.837, 546.679, 63.56, 0.2746", "559.544, 545.589, 63.56, 0.2746", "559.363, 544.459, 63.56, 0.2746", "559.107, 543.346, 63.56, 0.2746", "558.791, 542.246, 63.56, 0.2746", "558.304, 541.236, 63.56, 0.2744", "558.272, 540.095, 63.56, 0.2744", "557.797, 539.154, 63.56, 0.2742", "557.459, 538.093, 63.56, 0.274", "557.03, 537.093, 63.56, 0.2736", "556.752, 535.996, 63.56, 0.2728", "556.523, 534.876, 63.56, 0.2712", "555.812, 533.995, 63.56, 0.2684", "555.069, 533.416, 63.56, 0.2626", "554.554, 532.418, 63.56, 0.2542", "553.933, 531.484, 63.56, 0.2288", "553.81, 530.358, 63.56, 0.2288" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "612.053, 614.557, 41.083, 0.3008", "611.307, 614.417, 41.7214, 0.2288", "610.352, 614.24, 43.1094, 0.2764", "609.396, 614.061, 43.7394, 0.2778", "609.325, 613.122, 44.3383, 0.2806", "608.735, 612.927, 44.9607, 0.2858", "608.518, 611.939, 45.3194, 0.2956", "608.007, 611.351, 45.3519, 0.3132", "607.218, 611.092, 45.1634, 0.3478", "606.622, 610.904, 45.2124, 0.402", "605.759, 610.417, 46.139, 0.5912", "605.153, 609.965, 46.6536, 0.4444", "604.708, 609.018, 47.1058, 0.326", "603.967, 608.277, 47.5658, 0.2758", "603.16, 607.584, 47.9548, 0.2768", "602.774, 607.037, 48.3034, 0.2788", "602.43, 606.488, 48.6444, 0.2824", "601.696, 606.219, 48.935, 0.2894", "601.515, 605.295, 49.3231, 0.3014", "600.686, 604.762, 49.737, 0.3266", "599.786, 604.166, 50.1852, 0.3606", "598.854, 603.736, 50.5551, 0.485", "598.246, 603.324, 51.0605, 0.4176", "597.515, 602.565, 51.4623, 0.3656", "596.92, 601.696, 51.7706, 0.3744", "596.149, 600.909, 51.9924, 0.3358", "595.53, 600.257, 52.2239, 0.3036", "594.605, 599.895, 52.3404, 0.2814", "594.506, 599.342, 52.1058, 0.287", "594.307, 598.511, 51.8865, 0.2988", "593.531, 597.876, 51.9002, 0.3142", "592.554, 597.334, 51.9182, 0.3734", "592.148, 596.554, 52.0764, 0.334", "591.724, 595.73, 52.0372, 0.3", "591.448, 595.105, 52.2197, 0.2748", "591.319, 594.308, 52.3043, 0.2748", "590.609, 594.008, 52.5342, 0.2752", "590.072, 593.135, 52.7741, 0.2756", "589.301, 592.448, 53.0354, 0.2766", "588.469, 591.676, 53.3224, 0.2784", "587.881, 591.055, 53.7468, 0.2818", "587.282, 590.193, 54.1811, 0.2878", "586.33, 590.065, 54.6165, 0.3002", "585.738, 589.217, 54.9382, 0.3166", "585.214, 588.455, 55.0614, 0.3782", "584.5, 587.68, 55.1639, 0.3426", "583.783, 586.89, 55.3003, 0.316", "583.11, 586.118, 55.4439, 0.3056", "582.55, 585.522, 55.827, 0.3266", "582.313, 584.666, 56.0585, 0.3976", "581.715, 584.146, 56.3503, 0.3734", "580.88, 583.45, 56.6882, 0.3988", "580.049, 582.77, 57.1038, 0.3338", "579.182, 582.047, 57.4851, 0.3", "578.404, 581.211, 57.7864, 0.2746", "577.743, 580.596, 58.2061, 0.2746", "576.919, 580.042, 58.59, 0.2746", "576.497, 579.524, 58.814, 0.2746", "575.946, 579.137, 58.919, 0.2746", "575.104, 578.477, 59.0878, 0.2748", "574.105, 578.013, 59.159, 0.2748", "573.205, 577.521, 59.3597, 0.2752", "572.316, 576.81, 59.5616, 0.2756", "571.294, 576.365, 59.7797, 0.2766", "570.29, 576.308, 60.1762, 0.2782", "569.333, 576.42, 60.4772, 0.2814", "568.477, 576.752, 60.909, 0.287", "567.556, 577.385, 61.1876, 0.2988", "566.56, 577.307, 61.5608, 0.3142", "565.753, 576.82, 61.8097, 0.3734", "564.646, 576.69, 61.9184, 0.3338", "563.557, 576.467, 62.0452, 0.3", "562.428, 576.462, 62.2174, 0.2746", "561.383, 576.186, 62.4529, 0.2746", "560.449, 575.596, 62.7869, 0.2746", "559.531, 574.94, 63.1554, 0.2746", "558.623, 574.245, 63.5118, 0.2746", "557.519, 574.168, 63.8638, 0.2746", "556.402, 574.145, 64.2289, 0.2746", "555.547, 573.432, 64.664, 0.2746", "554.681, 572.912, 65.3106, 0.2746", "553.815, 572.391, 66.1226, 0.2746", "552.949, 571.871, 67.0435, 0.2746", "552.083, 571.35, 68.0142, 0.2746", "551.231, 570.8, 68.9688, 0.2746", "550.553, 569.878, 69.6976, 0.2746", "549.801, 569.041, 70.2484, 0.2746", "548.874, 568.396, 70.7123, 0.2746", "547.947, 567.753, 71.1147, 0.2746", "547.022, 567.11, 71.4778, 0.2746", "546.247, 566.304, 71.8147, 0.2746", "545.574, 565.397, 72.1342, 0.2746", "545.116, 564.365, 72.4066, 0.2746", "544.808, 563.272, 72.5897, 0.2746", "543.853, 562.848, 72.7028, 0.2746", "542.85, 562.418, 72.7647, 0.2746", "541.994, 561.675, 72.7922, 0.2746", "541.101, 560.968, 72.8, 0.2746", "540.312, 560.148, 72.8, 0.2746", "539.501, 559.372, 72.8, 0.2746", "538.591, 558.706, 72.8, 0.2746", "537.936, 557.782, 72.8, 0.2746", "537.201, 556.932, 72.8, 0.2746", "536.736, 555.889, 72.8, 0.2746", "536.147, 554.913, 72.8, 0.2746", "535.727, 553.905, 72.8, 0.2746", "535.017, 553.063, 72.8, 0.2746", "534.307, 552.173, 72.8, 0.2746", "533.389, 551.523, 72.8, 0.2746", "532.497, 550.82, 72.8, 0.2746", "531.669, 550.037, 72.8, 0.2746", "530.784, 549.463, 72.8, 0.2746", "529.79, 549.17, 72.8, 0.2746", "529.443, 548.154, 72.8, 0.2746", "528.935, 547.287, 72.8, 0.2746", "527.99, 546.69, 72.8, 0.2746", "527.47, 545.76, 72.7997, 0.2746", "526.711, 544.936, 72.7997, 0.2746", "526.393, 543.861, 72.7997, 0.2746", "525.643, 543.003, 72.7997, 0.2746", "525.221, 541.943, 72.7994, 0.2746", "524.7, 540.933, 72.7992, 0.2746", "523.947, 540.388, 72.7989, 0.2746", "523.753, 539.269, 72.7986, 0.2746", "522.81, 538.929, 72.798, 0.2746", "522.332, 537.989, 72.7972, 0.2746", "521.838, 536.997, 72.7961, 0.2746", "520.93, 536.343, 72.7944, 0.2746", "520.499, 535.333, 72.7922, 0.2746", "519.493, 534.821, 72.7891, 0.2746", "518.399, 534.504, 72.7846, 0.2746", "517.26, 534.452, 72.7784, 0.2744", "516.132, 534.262, 72.77, 0.2744", "515.057, 533.873, 72.758, 0.2742", "513.979, 533.562, 72.7401, 0.274", "512.835, 533.562, 72.7163, 0.2736", "511.691, 533.562, 72.6858, 0.2728", "510.547, 533.562, 72.6494, 0.2712", "509.413, 533.562, 72.5612, 0.2684", "508.279, 533.562, 72.4528, 0.2626", "507.135, 533.562, 72.3682, 0.2542", "505.991, 533.562, 72.3061, 0.2288", "504.847, 533.562, 72.24, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "612.053, 614.557, 41.083, 0.3008", "612.152, 614.28, 41.384, 0.276", "612.498, 613.6, 41.6878, 0.277", "612.122, 612.619, 41.8631, 0.2792", "612.04, 611.692, 41.7654, 0.2832", "612.232, 610.719, 41.5394, 0.2902", "612.154, 609.731, 41.4257, 0.3048", "612.095, 608.836, 41.5545, 0.3254", "612.291, 607.941, 41.6534, 0.3942", "612.324, 607.061, 41.5744, 0.3732", "612.725, 606.339, 41.4008, 0.3686", "612.501, 605.59, 41.4697, 0.4222", "612.31, 604.893, 41.7693, 0.4498", "612.232, 603.972, 42.023, 0.392", "612.097, 603.039, 42.0325, 0.3552", "612.294, 601.969, 41.9983, 0.4036", "612.211, 601.368, 42.1896, 0.3848", "612.04, 600.367, 42.2556, 0.4196", "612.154, 599.64, 42.0092, 0.3734", "612.11, 598.623, 41.9174, 0.3676", "611.826, 598.2, 42.1604, 0.4276", "611.393, 597.541, 42.5835, 0.4238", "611.803, 596.997, 42.7591, 0.5174", "611.517, 596.061, 42.8028, 0.4308", "611.346, 595.253, 42.6784, 0.39", "610.977, 594.571, 42.6997, 0.4194", "610.6, 593.712, 42.7092, 0.4212", "610.21, 592.687, 42.6132, 0.453", "609.992, 591.619, 42.5527, 0.6008", "609.554, 590.622, 42.5191, 0.6722", "609.23, 589.563, 42.579, 0.6458", "609.066, 588.603, 42.6972, 0.4514", "608.348, 587.882, 42.8019, 0.339", "607.692, 587.032, 43.057, 0.3008", "607.13, 586.205, 43.3317, 0.3178", "607.172, 585.391, 43.6478, 0.3804", "606.73, 584.801, 44.1101, 0.3468", "606.291, 583.851, 44.5096, 0.3236", "606.097, 582.774, 44.7516, 0.3192", "605.271, 582.104, 44.9305, 0.3532", "605.014, 581.235, 45.2245, 0.4416", "604.363, 580.365, 45.4104, 0.4806", "603.951, 579.654, 45.715, 0.4732", "603.355, 578.841, 45.9768, 0.3882", "602.928, 577.872, 46.2274, 0.3484", "602.005, 577.282, 46.4806, 0.3896", "601.114, 576.805, 46.7446, 0.365", "600.275, 576.044, 46.9272, 0.352", "599.342, 575.411, 47.0949, 0.3976", "598.518, 574.778, 47.3458, 0.3736", "597.927, 574.174, 47.4583, 0.3992", "596.94, 573.949, 47.5745, 0.3344", "595.917, 573.667, 47.6616, 0.301", "595.081, 572.938, 47.7772, 0.2766", "594.112, 572.54, 47.887, 0.2782", "593.147, 572.002, 47.9161, 0.2816", "592.408, 571.191, 47.9517, 0.2872", "591.674, 570.461, 48.1099, 0.2992", "590.902, 569.726, 48.2465, 0.3148", "590.479, 568.864, 48.4266, 0.3748", "589.915, 567.964, 48.6147, 0.3364", "589.424, 566.977, 48.8076, 0.3048", "588.768, 566.536, 48.7651, 0.2836", "588.601, 565.937, 48.9154, 0.2912", "588.414, 565.294, 49.1747, 0.3054", "587.95, 564.793, 49.2341, 0.3324", "587.834, 564.454, 49.0694, 0.3786", "587.362, 563.629, 49.1114, 0.4836", "586.888, 563.148, 49.3903, 0.5836", "586.036, 562.608, 49.4813, 0.5416", "585.205, 561.966, 49.6059, 0.4242", "584.279, 561.323, 49.7442, 0.3988", "584.113, 560.927, 49.8627, 0.334", "583.669, 559.874, 49.933, 0.3002", "583.225, 558.82, 49.9817, 0.2748", "582.781, 557.766, 50.043, 0.2752", "582.437, 556.796, 50.0626, 0.2756", "582.199, 555.874, 50.1318, 0.2766", "581.953, 555.053, 50.1642, 0.2782", "581.98, 554.244, 50.188, 0.2814", "581.424, 553.289, 50.1273, 0.287", "581.003, 552.234, 50.0618, 0.2988", "580.823, 551.113, 50.008, 0.3142", "580.716, 550.176, 50.0436, 0.3734", "580.511, 549.062, 50.0332, 0.3338", "580.285, 547.946, 49.9923, 0.3", "580.008, 546.849, 49.9562, 0.2746", "580.008, 545.709, 49.9078, 0.2746", "579.539, 544.737, 49.814, 0.2746", "579.645, 543.791, 49.5317, 0.2746", "579.024, 543.052, 49.194, 0.2746", "578.183, 542.527, 48.907, 0.2746", "577.976, 541.436, 48.6346, 0.2746", "577.838, 540.321, 48.3568, 0.2746", "577.203, 539.446, 48.148, 0.2748", "576.75, 538.421, 47.9982, 0.2748", "576.486, 537.499, 47.8206, 0.2752", "576.441, 536.496, 47.598, 0.2758", "576.377, 535.478, 47.4404, 0.2768", "576.777, 534.624, 47.327, 0.2786", "576.692, 533.606, 47.1663, 0.282", "576.821, 532.589, 46.951, 0.2882", "576.805, 531.451, 46.7888, 0.3008", "576.651, 530.363, 46.6749, 0.318", "576.205, 529.428, 46.6626, 0.3806", "576.112, 528.379, 46.6088, 0.347", "576.014, 527.248, 46.5354, 0.3242", "575.896, 526.143, 46.5321, 0.3204", "576.156, 525.393, 46.3688, 0.3552", "575.811, 524.431, 46.2476, 0.4454", "575.807, 523.298, 46.1017, 0.4876", "575.724, 522.186, 45.9696, 0.4864", "575.005, 521.544, 45.9505, 0.4122", "574.609, 520.568, 45.7999, 0.395", "574.148, 519.55, 45.705, 0.4654", "573.738, 518.559, 45.64, 0.5566", "574.043, 517.623, 45.694, 0.4598", "573.602, 517.191, 45.46, 0.4272", "573.493, 516.375, 45.3639, 0.3392", "573.644, 515.792, 45.4462, 0.3098", "573.949, 514.893, 45.3695, 0.293", "573.958, 514.036, 45.2203, 0.3084", "573.977, 513.17, 45.232, 0.3392", "574.502, 512.511, 45.087, 0.385", "574.782, 511.614, 44.9658, 0.5248", "575.01, 510.592, 44.8804, 0.5174", "575.089, 509.703, 44.7628, 0.4262", "575.233, 508.779, 44.7549, 0.4026", "575.537, 508.034, 44.9582, 0.3408", "575.956, 507.387, 45.402, 0.3126", "576.409, 506.549, 45.8444, 0.2988", "576.841, 505.845, 46.3714, 0.3144", "577.344, 505.098, 46.5987, 0.374", "577.313, 504.229, 46.7009, 0.3348", "577.949, 503.398, 46.7701, 0.3018" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "619.362, 617.111, 35.4136, 0.4812", "619.121, 616.297, 34.8631, 0.4384", "618.381, 615.502, 34.4302, 0.4978", "617.64, 614.909, 34.1424, 0.3934", "617.743, 613.969, 33.7403, 0.326", "617.646, 613.054, 33.259, 0.2756", "617.243, 612.383, 32.8997, 0.2764", "617.325, 611.944, 32.2476, 0.2778", "616.975, 611.04, 31.6224, 0.2806", "616.685, 610.353, 31.2525, 0.2858", "617.074, 609.741, 30.7868, 0.2954", "617.963, 609.372, 30.3218, 0.314", "618.675, 608.735, 29.9216, 0.3436", "618.128, 608.298, 29.4521, 0.4228", "618.346, 607.496, 28.8476, 0.4506", "618.355, 606.517, 28.336, 0.3936", "617.542, 606.198, 27.662, 0.3582", "617.257, 605.438, 26.9624, 0.4092", "616.614, 604.558, 26.381, 0.3948", "616.832, 603.664, 25.9849, 0.4396", "616.683, 602.739, 25.2202, 0.4036", "616.956, 602.202, 24.3004, 0.4572", "617.666, 602.661, 23.4263, 0.4314", "618.517, 602.808, 22.6657, 0.5318", "619.04, 601.895, 22.1082, 0.4572", "619.827, 601.337, 21.8126, 0.4404", "620.803, 601.046, 21.5286, 0.505", "621.817, 600.896, 21.3772, 0.6184", "622.794, 600.846, 21.113, 0.6306", "623.912, 600.608, 20.8469, 0.4702", "624.956, 600.338, 20.4975, 0.376", "625.742, 599.807, 19.9834, 0.3578", "626.194, 598.852, 19.4459, 0.4802", "626.358, 597.758, 19.0157, 0.4076", "626.459, 596.667, 18.8288, 0.3532", "626.672, 595.581, 18.7631, 0.3208", "626.806, 594.485, 18.6475, 0.3858", "626.842, 593.38, 18.4934, 0.357", "626.973, 592.247, 18.37, 0.3424", "626.964, 591.122, 18.2416, 0.3554", "626.978, 590.003, 18.0745, 0.4146", "627.143, 588.898, 17.8453, 0.5822", "627.072, 587.788, 17.6031, 0.6118", "627.105, 586.675, 17.378, 0.66", "627.25, 585.559, 17.1373, 0.5512", "627.327, 584.446, 16.9859, 0.6252", "627.711, 583.423, 16.9046, 0.5674", "628.411, 582.548, 16.7975, 0.722", "629.043, 581.614, 16.7145, 0.6528", "629.686, 580.681, 16.7095, 0.6502", "630.3, 579.748, 16.8038, 0.493", "630.798, 578.735, 16.9041, 0.4834", "631.232, 577.677, 16.9682, 0.47", "631.43, 576.56, 16.9956, 0.4242", "631.78, 575.504, 16.9295, 0.4406", "632.417, 574.587, 16.7735, 0.437", "632.931, 573.58, 16.6158, 0.3672", "632.972, 572.463, 16.4991, 0.3146", "632.833, 571.334, 16.4546, 0.3012", "632.927, 570.224, 16.5028, 0.326", "633.059, 569.114, 16.4877, 0.3594", "632.841, 568.018, 16.4001, 0.4832", "632.433, 566.953, 16.3004, 0.4132", "632.206, 565.836, 16.1951, 0.3634", "632.045, 564.705, 16.0704, 0.3408", "632.002, 563.582, 15.8847, 0.4176", "631.82, 562.482, 15.8086, 0.441", "631.609, 561.361, 15.739, 0.3756", "631.419, 560.274, 15.5711, 0.3248", "631.575, 559.149, 15.4202, 0.3474", "631.847, 558.05, 15.359, 0.2796", "632.289, 557.014, 15.12, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "619.362, 617.111, 35.4136, 0.4812", "620.291, 616.829, 35.744, 0.2288", "621.356, 616.505, 35.9388, 0.285", "622.422, 616.181, 36.0581, 0.294", "623.261, 615.678, 36.141, 0.3112", "623.925, 615.231, 35.9985, 0.3384", "624.654, 614.636, 35.6563, 0.4134", "625.367, 614.225, 35.1736, 0.4336", "626.214, 613.924, 34.5901, 0.3608", "627.11, 613.555, 34.0038, 0.3026", "627.856, 613.028, 33.4418, 0.2794", "628.514, 612.411, 33.07, 0.2836", "628.772, 612.154, 32.8353, 0.2912", "629.563, 611.737, 32.8675, 0.3064", "630.212, 611.331, 32.7186, 0.3282", "631.018, 611.218, 32.7421, 0.3996", "631.871, 610.676, 32.8412, 0.383", "632.528, 610.549, 32.613, 0.388", "632.937, 609.685, 32.3196, 0.4528", "633.664, 609.068, 32.1854, 0.532", "634.497, 608.941, 32.1633, 0.4194", "635.177, 609.489, 31.9192, 0.3268", "635.721, 609.103, 31.402, 0.2772", "636.058, 608.506, 30.8129, 0.2792", "636.772, 607.682, 30.3279, 0.2834", "637.059, 606.752, 29.9855, 0.2906", "637.48, 606.434, 29.9295, 0.3056", "638.409, 605.977, 29.7469, 0.3266", "638.582, 606.206, 29.2538, 0.3976", "639.191, 605.78, 28.6658, 0.3736", "639.819, 605.123, 28.268, 0.3992", "640.53, 604.299, 27.9124, 0.3346", "641.379, 603.56, 27.6361, 0.3012", "642.119, 603.072, 27.5086, 0.2768", "642.734, 602.5, 27.2157, 0.2788", "642.567, 601.707, 27.0813, 0.2826", "642.982, 600.912, 26.783, 0.2892", "643.54, 600.293, 26.3415, 0.3028", "643.812, 599.758, 25.7041, 0.322", "644.864, 599.463, 25.1516, 0.387", "645.661, 598.837, 24.8273, 0.3644", "646.345, 598.456, 24.3867, 0.3304", "647.39, 598.198, 24.08, 0.4576" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "645.651, 620.016, 23.1483, 0.3624", "645.299, 619.417, 23.0222, 0.4576", "644.881, 618.377, 22.6877, 0.4336", "645.048, 617.338, 22.5387, 0.4654", "645.672, 616.412, 22.3082, 0.4466", "646.004, 615.359, 22.0992, 0.561", "646.017, 614.229, 21.9468, 0.506", "646.013, 613.125, 21.7165, 0.5564", "645.997, 612.047, 21.3809, 0.597", "645.874, 610.928, 21.0584, 0.699", "645.495, 609.863, 20.7861, 0.7598", "644.872, 608.935, 20.5014, 0.5806", "644.191, 608.058, 20.2763, 0.5198", "643.803, 607.027, 20.1855, 0.462", "643.724, 605.91, 20.0946, 0.5468", "643.696, 604.785, 19.9558, 0.6872", "643.509, 603.667, 19.8305, 0.5726", "643.156, 602.58, 19.7411, 0.5768", "642.692, 601.535, 19.6706, 0.4478", "642.285, 600.468, 19.614, 0.4162", "642.02, 599.358, 19.5885, 0.494", "642.04, 598.243, 19.6265, 0.4342", "642.024, 597.137, 19.5976, 0.3974", "642.089, 596.035, 19.4383, 0.4284", "642.389, 594.968, 19.1734, 0.4608", "642.308, 593.917, 18.8688, 0.4134", "641.589, 593.076, 18.5924, 0.39", "640.798, 592.259, 18.3506, 0.4924", "640.269, 591.26, 18.1428, 0.4312", "640.089, 590.168, 17.9051, 0.3918", "640.083, 589.042, 17.6472, 0.4178", "640.185, 587.907, 17.4089, 0.4418", "640.376, 586.799, 17.1518, 0.3758", "640.038, 585.799, 16.9747, 0.3316", "639.8, 584.751, 16.7782, 0.3276", "640.219, 583.744, 16.6306, 0.3996", "640.592, 582.703, 16.5993, 0.3772", "640.439, 581.605, 16.5721, 0.4056", "639.907, 580.61, 16.474, 0.3466", "639.538, 579.589, 16.2261, 0.3234", "639.837, 578.564, 15.8731, 0.3186", "640.622, 577.767, 15.4978, 0.353", "641.719, 577.739, 15.1651, 0.435", "642.601, 578.438, 14.8965, 0.5", "642.997, 579.497, 14.6732, 0.356", "642.356, 580.351, 14.0, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "645.651, 620.016, 23.1483, 0.3624", "646.055, 619.474, 22.888, 0.3476", "646.855, 618.697, 22.6308, 0.3882", "647.609, 617.837, 22.442, 0.3626", "648.318, 616.943, 22.3418, 0.3478", "648.984, 616.03, 22.3687, 0.3886", "649.548, 615.073, 22.5128, 0.3632", "649.695, 614.111, 22.7994, 0.349", "650.119, 613.052, 23.0105, 0.391", "650.387, 611.983, 23.0262, 0.3662", "650.934, 611.009, 22.9158, 0.3606", "651.273, 609.936, 22.7449, 0.3826", "651.667, 608.88, 22.5468, 0.4968", "652.14, 607.843, 22.4155, 0.5796", "652.491, 606.797, 22.428, 0.6732", "652.756, 605.707, 22.5308, 0.6808", "652.966, 604.587, 22.6286, 0.584", "653.313, 603.51, 22.6957, 0.4862", "653.767, 602.461, 22.7228, 0.3644", "654.145, 601.381, 22.6983, 0.3094", "654.534, 600.324, 22.6016, 0.2916", "654.539, 599.219, 22.4175, 0.3074", "654.543, 598.109, 22.2775, 0.33", "655.171, 597.153, 22.1933, 0.4028", "655.758, 596.178, 22.1703, 0.3894", "656.101, 595.105, 22.2387, 0.3982", "656.331, 594.023, 22.3886, 0.4792", "656.825, 592.996, 22.5055, 0.5444", "657.144, 591.898, 22.5655, 0.6196", "657.457, 590.804, 22.5495, 0.5242", "657.787, 589.747, 22.4148, 0.5728", "658.481, 588.848, 22.2477, 0.482", "659.102, 587.89, 22.1062, 0.5052", "659.574, 586.874, 22.0597, 0.5352", "659.738, 585.769, 22.0427, 0.425", "659.758, 584.662, 21.933, 0.3374", "659.825, 583.555, 21.7388, 0.2968", "660.106, 582.477, 21.4982, 0.3164", "660.273, 581.359, 21.291, 0.3482", "660.269, 580.22, 21.1658, 0.4314", "660.468, 579.131, 21.1821, 0.4664", "660.693, 578.028, 21.2096, 0.4238", "661.106, 576.986, 21.183, 0.4088", "661.913, 576.236, 21.2199, 0.5284", "662.545, 575.325, 21.308, 0.4926", "662.948, 574.266, 21.3818, 0.532", "663.348, 573.203, 21.3473, 0.5496", "664.013, 572.334, 21.1645, 0.6214", "664.545, 571.34, 21.0081, 0.5658", "664.908, 570.341, 20.6984, 0.4638", "665.593, 569.488, 20.3249, 0.4978", "666.413, 568.697, 20.023, 0.3934", "667.229, 567.939, 19.7467, 0.3258", "667.99, 567.143, 19.7075, 0.2754" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "685.714, 594.893, 37.6365, 0.438", "686.572, 594.744, 37.5558, 0.2288", "687.534, 594.651, 37.7084, 0.2746", "688.413, 594.213, 37.786, 0.2746", "689.139, 593.408, 37.8498, 0.2746", "689.91, 592.637, 37.8529, 0.2746", "690.591, 591.846, 37.8941, 0.2746", "691.227, 591.219, 38.073, 0.2746", "692.093, 590.746, 38.3121, 0.2746", "692.781, 590.018, 38.5865, 0.2746", "693.5, 589.311, 38.8298, 0.2746", "694.196, 588.453, 39.0482, 0.2746", "694.941, 587.613, 39.2717, 0.2746", "695.748, 586.825, 39.417, 0.2746", "696.458, 586.151, 39.5923, 0.2746", "696.946, 585.492, 39.9168, 0.2746", "697.647, 584.839, 40.2968, 0.2746", "698.298, 584.162, 40.616, 0.2746", "698.787, 583.742, 40.7204, 0.2746", "699.517, 583.554, 40.8402, 0.2746", "700.421, 583.024, 40.8444, 0.2746", "701.043, 582.428, 40.745, 0.2746", "701.917, 581.726, 40.665, 0.2744", "702.791, 581.113, 40.693, 0.2744", "703.674, 580.393, 40.7288, 0.2742", "704.459, 579.616, 40.8072, 0.274", "705.444, 579.302, 40.7862, 0.2736", "706.27, 578.664, 40.9315, 0.2728", "707.334, 578.309, 41.083, 0.2712", "708.268, 577.669, 41.258, 0.2684", "709.251, 577.13, 41.4896, 0.2626", "710.098, 576.805, 41.8463, 0.2542", "711.018, 576.924, 42.0196, 0.2288", "711.911, 577.262, 42.56, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "685.714, 594.893, 37.6365, 0.438", "685.714, 594.45, 37.8392, 0.474", "685.541, 593.389, 37.9728, 0.4612", "685.37, 592.465, 37.9249, 0.3648", "685.09, 591.525, 37.9089, 0.3104", "684.772, 590.637, 38.0243, 0.2936", "684.552, 589.536, 38.0881, 0.311", "684.455, 588.411, 38.1525, 0.3366", "683.898, 587.547, 38.2488, 0.416", "683.357, 586.847, 38.3233, 0.4086", "683.414, 585.892, 38.4586, 0.4588", "683.341, 585.33, 38.5462, 0.4714", "683.514, 584.319, 38.6268, 0.4268", "683.426, 583.231, 38.7859, 0.4454", "683.12, 582.295, 39.0057, 0.4454", "682.835, 581.415, 39.1644, 0.3838", "682.396, 580.66, 39.424, 0.3402", "682.235, 579.585, 39.7482, 0.3746", "681.938, 578.547, 40.1156, 0.336", "681.442, 577.64, 40.325, 0.304", "681.061, 576.78, 40.6655, 0.282", "681.117, 575.826, 40.8912, 0.288", "681.107, 574.696, 41.0595, 0.3008", "681.115, 573.571, 41.2432, 0.3178", "681.053, 572.543, 41.4117, 0.3802", "681.013, 571.402, 41.589, 0.3464", "680.797, 570.291, 41.7897, 0.3242", "680.687, 569.227, 42.1148, 0.3142", "680.13, 568.291, 42.3609, 0.3736", "679.573, 567.509, 42.7804, 0.3344", "679.645, 566.572, 43.2362, 0.3008", "680.329, 565.801, 43.6598, 0.276", "680.575, 565.031, 44.0698, 0.2772", "680.632, 564.341, 44.3901, 0.2796", "680.445, 563.452, 44.84, 0.284", "679.935, 562.443, 45.2346, 0.2918", "679.425, 561.54, 45.6448, 0.3076", "679.21, 560.777, 46.0958, 0.3302", "679.245, 559.859, 46.3915, 0.4044", "679.244, 558.73, 46.6186, 0.3858", "679.422, 557.628, 46.825, 0.423", "679.32, 556.674, 47.1428, 0.3734", "679.507, 555.554, 47.4443, 0.3988", "679.767, 554.509, 47.7842, 0.3338", "679.924, 553.412, 48.13, 0.3", "680.171, 552.362, 48.4252, 0.2746", "680.17, 551.408, 48.6172, 0.2746", "679.765, 550.734, 48.841, 0.2746", "679.65, 549.894, 49.1935, 0.2746", "679.59, 548.756, 49.4634, 0.2746", "679.153, 547.734, 49.6712, 0.2746", "679.067, 546.596, 49.8322, 0.2746", "678.688, 545.526, 49.9562, 0.2746", "678.506, 544.401, 50.0497, 0.2746", "678.408, 543.265, 50.1365, 0.2746", "678.169, 542.161, 50.2502, 0.2746", "678.032, 541.03, 50.3947, 0.2746", "677.557, 540.038, 50.6086, 0.2746", "677.336, 539.258, 51.0692, 0.2746", "677.091, 538.154, 51.48, 0.2746", "677.019, 537.024, 51.7961, 0.2746", "677.019, 535.88, 52.0584, 0.2748", "676.79, 535.163, 52.3396, 0.2748", "677.365, 534.868, 52.6498, 0.2752", "677.749, 533.912, 52.8858, 0.2756", "678.392, 533.266, 53.1647, 0.2766", "678.717, 532.311, 53.3952, 0.2782", "678.964, 531.303, 53.5786, 0.2814", "678.964, 530.159, 53.7239, 0.287", "678.964, 529.035, 53.8849, 0.2988", "678.81, 528.188, 54.1274, 0.3142", "678.251, 527.216, 54.3043, 0.3734", "677.671, 526.274, 54.4897, 0.3338", "676.948, 525.486, 54.7509, 0.3", "676.219, 524.641, 55.0119, 0.2746", "675.563, 523.735, 55.221, 0.2746", "674.984, 523.189, 55.2569, 0.2746", "674.242, 522.473, 55.2042, 0.2746", "673.596, 521.785, 55.0399, 0.2746", "672.949, 521.313, 54.8181, 0.2746", "672.697, 520.749, 54.8884, 0.2746", "672.333, 519.94, 55.2569, 0.2746", "671.537, 519.243, 55.657, 0.2746", "670.879, 518.461, 55.9636, 0.2746", "670.502, 517.894, 56.3192, 0.2746", "669.806, 517.093, 56.6899, 0.2746", "669.39, 516.251, 57.0363, 0.2746", "669.24, 515.332, 57.3042, 0.2746", "669.512, 514.594, 57.3073, 0.2746", "669.011, 513.893, 57.2379, 0.2748", "668.999, 513.142, 57.4322, 0.275", "668.419, 512.269, 57.6971, 0.2754", "668.421, 511.299, 57.9328, 0.2762", "668.118, 510.2, 58.0714, 0.2776", "667.815, 509.101, 58.1269, 0.2802", "667.638, 508.204, 58.007, 0.285", "667.596, 507.214, 57.9222, 0.2938", "667.638, 506.092, 57.7802, 0.3112", "667.867, 505.027, 57.6167, 0.3384", "667.872, 504.073, 57.3418, 0.4132", "668.08, 503.324, 56.8618, 0.4334", "667.562, 502.429, 56.3769, 0.3604", "667.106, 501.495, 56.1232, 0.302", "666.592, 500.945, 56.177, 0.2784", "666.266, 500.018, 56.0722, 0.2818", "665.854, 499.323, 55.7908, 0.2876", "665.083, 498.825, 55.4411, 0.2998", "664.579, 498.337, 55.223, 0.3162", "664.179, 498.084, 55.1768, 0.3772", "663.554, 497.56, 55.1194, 0.341", "662.744, 496.928, 55.2577, 0.313", "661.74, 496.06, 55.3977, 0.2998", "660.875, 495.312, 55.5083, 0.316", "660.093, 494.538, 55.5811, 0.377", "659.547, 493.567, 55.5531, 0.3408", "659.197, 492.598, 55.5783, 0.3124", "658.831, 491.618, 55.7362, 0.2988", "658.499, 490.601, 55.8732, 0.3142", "658.435, 489.638, 55.9944, 0.3734", "658.576, 488.923, 56.299, 0.334", "658.399, 487.954, 56.4236, 0.3002", "658.096, 487.287, 56.1364, 0.275", "658.359, 486.484, 55.7883, 0.2752", "658.334, 485.399, 55.3535, 0.2758", "658.761, 484.614, 55.0315, 0.277", "659.173, 483.758, 54.6966, 0.2792", "659.503, 482.869, 54.5737, 0.2828", "659.741, 482.108, 54.7224, 0.291", "659.866, 481.463, 54.626, 0.2994", "660.339, 480.551, 54.6834, 0.3474", "660.774, 479.977, 54.9338, 0.2796", "661.232, 479.107, 55.16, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "534.4, 657.457, 25.5664, 0.4848", "533.798, 656.713, 24.9497, 0.2288", "533.136, 655.895, 24.2967, 0.2748", "532.228, 655.235, 24.0635, 0.2752", "531.299, 654.57, 23.8656, 0.2756", "531.045, 653.479, 23.6929, 0.2766", "530.219, 652.99, 23.536, 0.2782", "529.464, 652.315, 23.3869, 0.2814", "528.828, 651.532, 23.242, 0.287", "528.578, 650.509, 22.9978, 0.2988", "528.185, 649.61, 22.5885, 0.3142", "527.598, 648.964, 22.168, 0.3738", "527.003, 648.208, 21.7733, 0.3346", "526.368, 647.43, 21.517, 0.3012", "525.682, 646.649, 21.424, 0.2768", "525.142, 645.786, 21.3335, 0.2788", "524.415, 645.105, 21.3298, 0.2822", "523.815, 644.178, 21.2578, 0.2888", "523.268, 643.445, 21.315, 0.3006", "522.921, 642.602, 21.2348, 0.325", "523.133, 641.636, 21.1179, 0.3576", "523.099, 640.678, 21.1451, 0.4798", "522.532, 640.068, 21.2557, 0.4072", "522.271, 639.239, 21.2376, 0.3508", "521.622, 638.764, 21.2903, 0.3238", "521.482, 637.741, 21.462, 0.3554", "521.062, 636.786, 21.5897, 0.4754", "520.388, 635.912, 21.7788, 0.3988", "520.375, 634.864, 22.0015, 0.336", "520.52, 634.03, 22.3633, 0.294", "520.292, 633.029, 22.6432, 0.3116", "519.771, 632.029, 22.9173, 0.3378", "519.284, 631.184, 23.1899, 0.4182", "519.376, 630.092, 23.4159, 0.4126", "519.401, 629.254, 23.7296, 0.466", "518.998, 628.683, 23.7886, 0.486", "518.377, 628.085, 23.9571, 0.4476", "517.796, 627.313, 24.2031, 0.5144", "517.541, 626.383, 24.5511, 0.4252", "517.16, 625.345, 24.8365, 0.3798", "516.549, 624.524, 25.0515, 0.4004", "516.045, 623.525, 25.244, 0.386", "515.669, 622.494, 25.2896, 0.386", "515.201, 621.488, 25.2251, 0.485", "514.435, 620.832, 25.277, 0.418", "513.65, 620.072, 25.3549, 0.366", "512.851, 619.355, 25.3385, 0.3754", "512.19, 618.735, 25.4423, 0.3376", "511.365, 618.319, 25.4729, 0.3068", "510.796, 617.453, 25.4075, 0.287", "510.241, 616.686, 25.1968, 0.2988", "509.654, 615.824, 25.022, 0.3142", "509.31, 614.851, 24.9399, 0.3736", "508.749, 614.043, 24.7997, 0.3342", "508.913, 612.951, 24.6035, 0.3004", "508.379, 611.972, 24.4499, 0.2754", "507.478, 611.799, 24.2365, 0.2762" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "534.4, 657.457, 25.5664, 0.4848", "533.285, 657.75, 25.4895, 0.3988", "532.445, 658.338, 25.4355, 0.3988", "531.429, 658.798, 25.4176, 0.3338", "530.372, 659.164, 25.3794, 0.3", "529.235, 659.173, 25.3859, 0.2746", "528.29, 659.602, 25.4273, 0.2746", "527.25, 659.95, 25.393, 0.2746", "526.192, 660.34, 25.4208, 0.2746", "525.396, 660.917, 25.3623, 0.2746", "524.399, 661.222, 25.3731, 0.2746", "523.473, 661.18, 25.4422, 0.2746", "522.922, 661.907, 25.4293, 0.2746", "522.33, 662.421, 25.442, 0.2746", "521.315, 662.212, 25.5663, 0.2746", "520.348, 662.147, 25.647, 0.2746", "519.28, 662.328, 25.719, 0.2746", "518.333, 662.177, 25.7234, 0.2748", "517.321, 662.043, 25.6063, 0.2748", "516.229, 661.996, 25.5482, 0.2752", "515.672, 661.857, 25.5467, 0.2756", "514.973, 662.622, 25.5345, 0.2766", "514.33, 663.139, 25.5932, 0.2782", "513.304, 663.294, 25.7626, 0.2814", "512.269, 663.418, 25.8706, 0.287", "511.138, 663.367, 26.0274, 0.2988", "510.328, 663.269, 26.3888, 0.3142", "509.606, 662.961, 26.8609, 0.3736", "508.748, 663.012, 27.2318, 0.3342", "507.787, 663.216, 27.5222, 0.3006", "507.327, 662.627, 27.8807, 0.2758", "506.242, 662.673, 28.0641, 0.2766", "505.465, 662.959, 27.9302, 0.2784", "504.852, 662.646, 27.9219, 0.2818", "504.685, 662.236, 27.6083, 0.288", "504.303, 661.547, 27.2579, 0.3004", "503.529, 661.658, 27.181, 0.3172", "502.907, 660.929, 27.2543, 0.3792", "502.385, 660.04, 27.2404, 0.3446", "501.544, 659.516, 27.3031, 0.3196", "501.261, 659.221, 27.5557, 0.3118", "500.506, 658.576, 27.6148, 0.3394", "499.82, 657.993, 27.5731, 0.415", "499.215, 657.42, 27.3457, 0.4364", "498.33, 656.755, 27.2247, 0.3662", "497.285, 656.536, 27.2206, 0.3126", "496.754, 655.776, 27.2011, 0.2978", "495.949, 655.296, 27.1451, 0.3186", "495.514, 655.098, 27.1158, 0.3518", "494.51, 654.568, 27.0975, 0.4392", "493.596, 654.222, 27.1074, 0.4762", "492.66, 654.065, 27.201, 0.4654", "491.66, 654.238, 27.2049, 0.3726", "490.701, 654.028, 27.1925, 0.3258", "490.089, 654.333, 27.0548, 0.3172", "489.459, 653.949, 27.231, 0.379", "488.613, 654.368, 27.5563, 0.3444", "487.527, 654.254, 27.8557, 0.3194", "486.425, 654.45, 28.1921, 0.3112", "485.321, 654.647, 28.5569, 0.3384", "484.189, 654.619, 28.8621, 0.4132", "483.06, 654.704, 29.0634, 0.4334", "482.164, 654.22, 29.337, 0.3604", "481.176, 653.788, 29.4896, 0.302", "480.44, 653.564, 29.8432, 0.2782", "479.627, 653.682, 29.9202, 0.2814", "478.745, 653.429, 30.1605, 0.2872", "478.079, 653.338, 30.2876, 0.299", "477.169, 652.891, 30.2831, 0.3144", "476.351, 652.562, 30.4097, 0.374", "475.394, 652.594, 30.5024, 0.335", "474.384, 652.866, 30.527, 0.302", "473.724, 653.632, 30.4629, 0.2784", "473.273, 653.0, 30.2414, 0.2818", "472.645, 652.878, 29.799, 0.2878", "471.846, 653.111, 29.2533, 0.3002", "470.901, 653.333, 28.9131, 0.3168", "470.184, 653.898, 28.6516, 0.3784", "469.189, 654.025, 28.5326, 0.3432", "468.52, 654.368, 28.3646, 0.3172", "467.928, 654.297, 28.5046, 0.3076", "466.903, 654.661, 28.6558, 0.3304", "465.91, 654.922, 28.6065, 0.4046", "464.81, 654.943, 28.5659, 0.3862", "463.755, 654.57, 28.5466, 0.4236", "463.207, 653.91, 28.474, 0.3746", "462.249, 653.91, 28.4192, 0.4008", "461.2, 654.109, 28.4777, 0.3376", "460.395, 654.152, 28.7034, 0.307", "459.618, 654.359, 28.8142, 0.2874", "458.806, 654.137, 28.6768, 0.2994", "457.852, 653.796, 28.5057, 0.3152", "457.059, 653.868, 28.2453, 0.3754", "456.118, 654.025, 28.1212, 0.3376", "455.238, 653.817, 27.9118, 0.307", "454.763, 653.922, 27.4822, 0.2872", "454.046, 654.664, 27.0528, 0.2992", "453.503, 654.654, 26.5196, 0.315", "453.014, 654.337, 26.2254, 0.3752", "452.719, 654.228, 26.3746, 0.337", "452.395, 653.913, 26.7298, 0.3058", "451.658, 653.193, 27.3336, 0.2854", "450.92, 652.475, 28.0675, 0.2944", "450.183, 651.756, 28.8464, 0.3126", "449.146, 651.346, 29.3658, 0.3394", "448.59, 650.362, 29.6929, 0.4226", "447.806, 649.548, 29.8886, 0.4146", "447.267, 648.553, 29.9816, 0.5008", "446.484, 647.743, 30.0138, 0.399", "445.621, 646.994, 30.0233, 0.3362", "444.628, 646.446, 30.042, 0.2944", "443.671, 645.862, 30.1031, 0.3124", "442.717, 645.232, 30.1518, 0.3392", "441.67, 644.803, 30.189, 0.4206", "440.649, 644.331, 30.2156, 0.4184", "439.564, 644.039, 30.2322, 0.4718", "438.943, 643.146, 30.24, 0.5198", "437.98, 642.586, 30.24, 0.3982", "437.103, 641.89, 30.24, 0.2796", "435.978, 641.784, 30.24, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "577.115, 634.158, 15.8438, 0.2868", "577.439, 635.168, 15.3919, 0.2288", "577.502, 636.279, 15.2184, 0.4114", "577.114, 637.334, 15.1568, 0.4", "576.189, 637.908, 15.0999, 0.443", "575.083, 638.191, 15.0453, 0.4414", "573.946, 638.28, 14.9918, 0.375", "572.832, 638.518, 14.9376, 0.3304", "571.776, 638.937, 14.8583, 0.3256", "570.699, 639.209, 14.7096, 0.3948", "569.62, 639.56, 14.5875, 0.373", "568.57, 640.011, 14.5356, 0.3744", "567.596, 640.559, 14.6061, 0.4042", "566.547, 640.979, 14.7463, 0.5556", "565.454, 641.312, 14.8858, 0.5986", "564.319, 641.31, 15.0068, 0.458", "563.296, 640.832, 15.0955, 0.3526", "562.361, 640.177, 15.1532, 0.3196", "561.338, 639.67, 15.1884, 0.3836", "560.28, 639.236, 15.2162, 0.3524", "559.304, 638.644, 15.2478, 0.3354", "558.422, 637.918, 15.2931, 0.3348", "557.436, 637.401, 15.413, 0.4128", "556.311, 637.29, 15.5326, 0.4026", "555.27, 636.956, 15.5037, 0.4478", "554.336, 636.31, 15.4407, 0.4498", "553.409, 635.64, 15.391, 0.392", "552.396, 635.108, 15.3613, 0.3554", "551.257, 635.129, 15.3573, 0.4026", "550.162, 635.459, 15.3947, 0.3902", "549.038, 635.667, 15.4876, 0.3936", "547.93, 635.838, 15.6781, 0.5002" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "577.115, 634.158, 15.8438, 0.2868", "576.998, 633.148, 16.1495, 0.2974", "577.292, 632.058, 16.3143, 0.3164", "577.542, 630.962, 16.328, 0.3542", "577.36, 629.841, 16.3352, 0.4124", "577.054, 628.761, 16.2208, 0.577", "576.221, 627.514, 15.9687, 0.6084", "575.594, 626.6, 15.8485, 0.6224", "575.094, 625.698, 15.8309, 0.6334", "574.481, 624.868, 15.8222, 0.7264", "573.727, 624.239, 15.9072, 0.7752", "573.315, 623.239, 15.9296, 0.7812", "572.698, 622.311, 15.9525, 0.7428", "572.45, 621.247, 16.064, 0.6834", "571.874, 620.47, 16.2499, 0.5172", "571.05, 619.918, 16.3717, 0.481", "570.182, 619.294, 16.5404, 0.4658", "569.228, 618.901, 16.7426, 0.415", "568.617, 618.291, 17.0099, 0.4298", "568.11, 617.455, 17.146, 0.386", "567.596, 616.998, 17.3491, 0.4222", "567.311, 616.322, 17.7084, 0.378", "567.487, 615.461, 17.8857, 0.3776", "567.012, 614.826, 18.2599, 0.4384", "567.195, 613.807, 18.7389, 0.482", "567.019, 612.988, 19.3709, 0.44", "567.424, 612.255, 19.879, 0.5008", "566.969, 611.526, 20.4488, 0.399", "566.164, 611.338, 20.7702, 0.3362", "565.331, 611.05, 21.0967, 0.2944", "564.772, 610.893, 21.5284, 0.3126", "564.874, 610.465, 22.0882, 0.3394", "564.985, 609.963, 22.7899, 0.4226", "564.112, 609.694, 23.502, 0.4146", "563.124, 609.736, 24.1514, 0.5008", "562.518, 609.397, 24.79, 0.3988", "561.659, 609.092, 25.211, 0.336", "561.246, 608.39, 25.6586, 0.2938", "560.596, 607.657, 26.0361, 0.3112", "559.898, 606.78, 26.3012, 0.3382", "559.058, 606.105, 26.4444, 0.413", "558.191, 606.095, 26.5782, 0.4328", "557.423, 606.063, 26.4404, 0.3594", "556.525, 605.721, 26.3811, 0.3", "555.505, 605.627, 26.1958, 0.2746", "554.661, 605.599, 25.8904, 0.2746", "553.956, 605.86, 25.5643, 0.2746", "553.234, 605.419, 25.5742, 0.2746", "552.853, 605.862, 25.8913, 0.2746", "552.03, 605.526, 26.4186, 0.2746", "551.097, 605.063, 26.9763, 0.2748", "550.045, 604.931, 27.5594, 0.275", "549.026, 604.499, 28.0843, 0.2752", "548.025, 604.344, 28.4687, 0.2758", "546.946, 604.025, 28.7809, 0.2768", "546.032, 603.359, 29.0573, 0.2788", "545.098, 602.726, 29.2583, 0.2826", "544.189, 602.107, 29.4773, 0.2892", "543.307, 601.482, 29.7097, 0.3026", "542.714, 600.594, 29.9592, 0.3214", "542.529, 599.513, 30.221, 0.3868", "542.822, 598.544, 30.3814, 0.3598", "542.256, 597.792, 30.5178, 0.3426", "541.532, 597.146, 30.6729, 0.3792", "540.856, 596.464, 30.998, 0.3446", "540.052, 595.887, 31.3169, 0.3196", "539.336, 595.093, 31.4745, 0.3118", "538.775, 594.236, 31.5736, 0.3394", "538.453, 593.741, 31.9068, 0.4152", "537.905, 593.262, 32.1037, 0.4368", "537.566, 592.473, 32.4019, 0.3668", "537.031, 591.546, 32.674, 0.3136", "536.282, 590.699, 32.9482, 0.3008", "535.663, 590.075, 33.2637, 0.3178", "534.897, 589.541, 33.563, 0.3804", "533.654, 589.306, 33.6566, 0.3466", "532.631, 589.03, 33.693, 0.3248", "531.671, 588.636, 33.8988, 0.3152", "530.791, 588.309, 34.1384, 0.3756", "529.963, 587.913, 34.463, 0.3378", "529.188, 587.112, 34.7598, 0.3072", "528.386, 586.593, 35.0269, 0.2876", "527.439, 585.991, 35.1943, 0.3", "526.684, 585.588, 35.4449, 0.3164", "526.227, 584.753, 35.4782, 0.3776", "525.433, 584.047, 35.4424, 0.3418", "524.587, 583.669, 35.4844, 0.3144", "524.013, 583.783, 35.2979, 0.3024", "523.258, 583.245, 35.0571, 0.321", "522.39, 582.894, 34.8491, 0.386", "521.38, 582.501, 34.6335, 0.3584", "520.372, 582.005, 34.4593, 0.34", "519.367, 581.512, 34.2905, 0.3744", "518.469, 580.874, 34.1667, 0.3356", "517.637, 580.26, 33.9872, 0.303", "516.699, 579.613, 33.9041, 0.2802", "516.056, 578.841, 33.9203, 0.2852", "515.016, 578.614, 33.9517, 0.294", "514.171, 578.059, 34.0262, 0.3116", "513.128, 577.749, 34.2432, 0.3392", "512.12, 577.546, 34.5055, 0.4146", "511.24, 576.983, 34.7872, 0.4358", "510.315, 576.99, 35.0784, 0.3648", "509.556, 576.793, 35.126, 0.3104", "508.794, 575.978, 35.1641, 0.2936", "507.946, 575.329, 35.2974, 0.3106", "507.356, 574.58, 35.4169, 0.3372", "507.115, 573.526, 35.3732, 0.4112", "506.206, 572.985, 35.2492, 0.4294", "505.594, 572.119, 35.2201, 0.353", "504.915, 571.204, 35.2078, 0.2882", "504.254, 570.289, 35.2024, 0.2542", "503.742, 569.489, 35.2806, 0.2288", "503.36, 568.454, 35.56, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "593.196, 630.001, 17.4481, 0.4428", "592.528, 629.126, 16.2635, 0.2288", "591.743, 628.296, 16.2643, 0.5054", "591.034, 627.418, 16.3065, 0.4494", "590.305, 626.572, 16.3216, 0.4548", "589.622, 625.739, 16.186, 0.3916", "589.144, 624.768, 16.034, 0.4024", "588.594, 623.796, 15.9587, 0.4868", "588.065, 622.807, 15.93, 0.5602", "587.803, 621.732, 15.8334, 0.641", "587.481, 620.71, 15.6103, 0.6016", "587.189, 619.858, 15.2064, 0.532", "586.211, 619.354, 14.8763, 0.6158", "585.59, 618.398, 14.6135, 0.6526", "585.016, 617.41, 14.4264, 0.6102", "584.521, 616.39, 14.3198, 0.3814", "583.898, 615.586, 14.28, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "593.196, 630.001, 17.4481, 0.4428", "593.718, 628.74, 17.379, 0.5256", "594.347, 627.787, 17.3268, 0.5784", "594.874, 626.774, 17.277, 0.707", "595.238, 625.703, 17.2038, 0.5682", "595.616, 624.634, 17.1711, 0.5394", "596.08, 623.591, 17.156, 0.5202", "596.463, 622.515, 17.1284, 0.549", "597.035, 621.531, 17.0815, 0.5188", "597.656, 620.571, 17.0191, 0.6386", "598.039, 619.503, 16.9051, 0.6946", "598.486, 618.514, 16.6568, 0.6896", "599.091, 617.557, 16.3916, 0.5222", "599.776, 616.682, 16.0832, 0.5214", "600.385, 615.734, 15.9124, 0.3898", "600.877, 614.709, 15.7811, 0.3192", "601.159, 613.606, 15.7487, 0.2626", "601.204, 612.572, 15.6059, 0.2542", "601.412, 611.454, 15.5228, 0.2288", "601.663, 610.611, 16.2022, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "577.949, 503.398, 46.7701, 0.3018", "577.781, 502.772, 46.8784, 0.2778", "577.489, 501.686, 47.0747, 0.2806", "577.333, 500.597, 47.3203, 0.2858", "577.504, 499.684, 47.7708, 0.295", "577.016, 498.874, 48.2569, 0.3134", "577.029, 498.044, 48.4473, 0.3426", "577.441, 497.263, 48.4285, 0.421", "577.364, 496.256, 48.3109, 0.4476", "577.315, 495.228, 48.2471, 0.3864", "577.857, 494.317, 48.1337, 0.3524", "578.057, 493.309, 47.9651, 0.3612", "578.325, 492.466, 47.784, 0.4858", "578.332, 491.805, 47.8218, 0.4196", "578.483, 491.023, 48.029, 0.369", "578.676, 490.252, 47.9433, 0.3808", "578.807, 489.307, 47.7806, 0.3476", "578.798, 488.374, 47.6644, 0.325", "578.542, 487.829, 47.8192, 0.323", "578.521, 487.059, 47.913, 0.354", "578.369, 486.201, 47.7837, 0.473", "578.363, 485.65, 47.5535, 0.3946", "577.842, 484.976, 47.4424, 0.3276", "577.812, 483.94, 47.4827, 0.2796", "577.735, 483.48, 47.7859, 0.2796", "577.953, 482.583, 48.0833, 0.305", "578.635, 481.853, 49.0, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "577.949, 503.398, 46.7701, 0.3018", "578.178, 502.877, 46.3868, 0.2288", "579.143, 502.075, 46.5226, 0.2916", "580.021, 501.347, 46.5539, 0.3072", "580.351, 500.358, 46.6211, 0.3296", "580.718, 499.891, 46.9252, 0.4032", "580.959, 499.159, 47.2105, 0.384", "581.027, 498.035, 47.4863, 0.4182", "581.287, 497.373, 47.8209, 0.3708", "581.61, 496.673, 48.277, 0.3642", "581.262, 495.851, 48.5106, 0.4138", "581.459, 494.814, 48.6548, 0.4344", "582.188, 494.229, 48.8782, 0.3624", "582.842, 493.585, 49.2271, 0.3056", "582.731, 493.039, 49.2293, 0.2852", "582.839, 492.102, 49.2601, 0.294", "582.861, 491.358, 49.5544, 0.3116", "582.345, 490.38, 49.882, 0.339", "581.972, 489.537, 50.2667, 0.4152", "581.61, 488.665, 50.6307, 0.4322", "581.392, 487.824, 51.2296, 0.3814", "581.038, 487.001, 52.64, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "667.99, 567.143, 19.7075, 0.2754", "668.022, 566.389, 17.9875, 0.4576", "668.06, 565.504, 17.0973, 0.36", "668.079, 564.612, 16.5997, 0.3012", "667.954, 563.57, 16.3929, 0.2766", "667.41, 563.201, 16.5458, 0.2784", "667.635, 562.581, 16.703, 0.2818", "667.753, 561.616, 16.7871, 0.2876", "667.866, 560.562, 16.9621, 0.3", "667.982, 559.608, 17.1495, 0.3164", "667.962, 558.876, 16.9817, 0.3776", "668.097, 558.35, 16.7288, 0.3414", "668.787, 558.095, 16.3809, 0.3142", "668.897, 556.969, 16.1076, 0.3004", "669.331, 556.086, 16.014, 0.3246", "669.286, 554.989, 15.9837, 0.3568", "669.604, 554.112, 15.9304, 0.4782", "669.845, 553.564, 16.0144, 0.4042", "670.701, 552.975, 15.9617, 0.3458", "671.427, 552.316, 15.9614, 0.312", "671.894, 551.89, 16.0598, 0.3462", "671.861, 551.086, 15.9514, 0.3976", "671.986, 550.195, 15.7629, 0.5496", "672.214, 549.551, 15.5317, 0.5564", "672.709, 548.674, 15.329, 0.5316", "673.269, 548.12, 15.1622, 0.4378", "673.912, 547.942, 15.1157, 0.4968", "674.682, 547.45, 15.178, 0.3914", "675.129, 546.694, 15.2594, 0.322", "675.471, 546.292, 15.2194, 0.2684", "675.924, 545.696, 15.1519, 0.2626", "677.067, 545.688, 15.0926, 0.2542", "677.918, 545.201, 15.0012, 0.2288", "678.456, 544.379, 15.12, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "667.99, 567.143, 19.7075, 0.2754", "668.623, 566.553, 19.7669, 0.2762", "669.116, 565.567, 19.9564, 0.2776", "669.551, 564.523, 20.1232, 0.28", "669.715, 563.428, 20.3358, 0.2848", "669.493, 562.324, 20.5366, 0.2932", "669.445, 561.21, 20.7342, 0.3102", "669.767, 560.128, 20.8561, 0.335", "670.263, 559.121, 20.8385, 0.4132", "670.868, 558.155, 20.7802, 0.4034", "671.384, 557.136, 20.6932, 0.4492", "671.419, 556.026, 20.5359, 0.4526", "671.013, 554.981, 20.45, 0.3972", "670.748, 553.875, 20.4166, 0.3648", "670.728, 552.733, 20.392, 0.4212", "670.734, 551.592, 20.3823, 0.418", "670.787, 550.569, 20.1785, 0.477", "671.074, 549.471, 19.9821, 0.5002", "671.177, 548.333, 19.8099, 0.5046", "671.149, 547.189, 19.6659, 0.4708", "670.821, 546.095, 19.5485, 0.3836" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "507.478, 611.799, 24.2365, 0.2762", "506.749, 612.131, 22.7637, 0.2288", "505.879, 612.393, 21.9044, 0.419", "505.097, 612.612, 21.6971, 0.414", "504.144, 612.674, 21.3715, 0.4698", "503.402, 613.07, 21.057, 0.4854", "502.34, 613.407, 20.7399, 0.4836", "501.698, 613.305, 20.4298, 0.4012", "501.114, 613.885, 20.2474, 0.404", "501.197, 614.868, 20.014, 0.339", "500.801, 615.363, 19.5914, 0.3304", "499.814, 615.586, 18.76, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "507.478, 611.799, 24.2365, 0.2762", "507.133, 611.509, 23.8186, 0.2778", "506.495, 611.239, 23.4184, 0.2804", "505.865, 610.691, 23.3424, 0.2854", "504.914, 610.52, 23.2685, 0.2946", "503.88, 610.401, 23.2931, 0.3126", "503.053, 609.983, 23.4892, 0.341", "502.035, 609.75, 23.6729, 0.4178", "501.21, 609.189, 23.7332, 0.4418", "500.132, 609.0, 23.691, 0.376", "499.292, 608.355, 23.7983, 0.3322", "498.874, 607.307, 23.9357, 0.3286", "498.945, 606.383, 24.0395, 0.4016", "498.807, 605.586, 24.1582, 0.3808", "498.665, 604.604, 24.4175, 0.4122", "498.477, 603.859, 24.472, 0.3596", "498.275, 603.072, 24.6763, 0.3424", "497.71, 602.103, 24.8465, 0.3788", "497.362, 601.227, 25.0163, 0.344", "496.695, 600.468, 25.2061, 0.3188", "496.05, 599.627, 25.3336, 0.3088", "495.802, 598.547, 25.3943, 0.3402", "495.201, 597.762, 25.4212, 0.3868", "494.323, 597.328, 25.2911, 0.5282", "493.574, 596.645, 25.2772, 0.5234", "492.781, 595.912, 25.2954, 0.4374", "492.172, 595.177, 25.219, 0.4242", "491.061, 595.038, 25.1506, 0.3756", "490.197, 595.42, 25.045, 0.4028", "489.632, 595.413, 25.0059, 0.3412", "488.862, 595.795, 24.9965, 0.3138", "487.883, 595.682, 24.9666, 0.2996", "486.826, 595.874, 24.8658, 0.3232", "485.927, 595.484, 24.7274, 0.3544", "485.146, 595.476, 24.8679, 0.4736", "484.061, 595.633, 24.9455, 0.3956", "483.293, 596.249, 25.0863, 0.33", "482.362, 596.661, 25.1681, 0.2828", "481.754, 597.049, 25.1245, 0.291", "480.925, 597.27, 25.2713, 0.2994", "480.084, 597.398, 25.1353, 0.3474", "479.15, 597.409, 24.9047, 0.2796", "478.192, 597.626, 24.64, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "547.93, 635.838, 15.6781, 0.5002", "547.232, 636.364, 14.1333, 0.2288", "546.157, 636.582, 13.9887, 0.2728", "545.127, 637.08, 13.935, 0.2712", "544.314, 637.846, 13.8803, 0.2684", "543.743, 638.773, 13.8127, 0.2626", "543.743, 639.899, 13.6867, 0.2542", "543.858, 641.019, 13.5871, 0.2288", "544.658, 641.784, 13.44, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "547.93, 635.838, 15.6781, 0.5002", "547.209, 635.625, 15.8973, 0.4396", "546.089, 635.445, 16.1072, 0.4368", "545.013, 635.1, 16.287, 0.3582", "544.256, 634.325, 16.4905, 0.34", "543.335, 633.728, 16.6734, 0.3742", "542.224, 633.498, 16.7695, 0.3352", "541.274, 632.905, 16.7784, 0.3026", "540.593, 632.024, 16.6608, 0.2792", "540.128, 631.02, 16.4266, 0.2832", "539.76, 629.964, 16.1263, 0.2908", "539.471, 628.89, 15.9506, 0.3044", "538.838, 627.959, 15.8439, 0.3318", "537.909, 627.312, 15.7377, 0.3704", "536.881, 626.91, 15.5618, 0.5028", "535.845, 626.44, 15.4068, 0.4522", "535.123, 625.569, 15.2831, 0.424", "534.716, 624.505, 15.1794, 0.5092", "534.319, 623.432, 15.1089, 0.4576", "533.778, 622.427, 15.0631, 0.465", "533.477, 621.369, 14.9705, 0.4348", "532.809, 620.453, 14.9305, 0.3632", "532.688, 619.37, 15.0639, 0.3072", "532.61, 618.273, 15.3336, 0.2876", "532.531, 617.174, 15.6917, 0.2998", "532.453, 616.077, 16.0951, 0.3162", "531.983, 615.367, 16.4903, 0.3774", "531.367, 615.012, 16.6113, 0.3412", "530.575, 614.358, 16.5817, 0.3134", "529.834, 613.575, 16.4292, 0.3004", "529.48, 612.53, 16.3126, 0.3172", "528.879, 611.783, 16.2915, 0.379", "528.554, 610.715, 16.2198, 0.3444", "528.156, 610.086, 15.9353, 0.3192", "527.766, 609.372, 15.7876, 0.3112", "527.272, 608.722, 15.8201, 0.3382", "526.89, 608.025, 15.6645, 0.413", "526.613, 607.05, 15.554, 0.4328", "525.97, 606.268, 15.5433, 0.3592", "525.127, 605.829, 15.4196, 0.2998", "524.545, 605.372, 15.1563, 0.2744", "524.112, 605.29, 15.262, 0.2742", "523.504, 604.917, 15.4805, 0.274", "523.006, 604.49, 15.442, 0.2736", "522.532, 603.745, 15.3064, 0.2728", "521.717, 603.129, 15.2401, 0.2712", "521.035, 602.778, 15.3247, 0.2684", "520.044, 602.341, 15.3592, 0.2626", "519.176, 601.657, 15.4357, 0.2542", "518.336, 600.925, 15.5058, 0.2288", "517.317, 600.714, 15.96, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "670.821, 546.095, 19.5485, 0.3836", "671.752, 545.534, 19.4996, 0.3398", "672.587, 544.838, 19.4863, 0.374", "673.533, 544.686, 19.3179, 0.335", "674.484, 544.34, 19.0989, 0.3022", "675.077, 543.44, 18.8111, 0.2788", "675.692, 542.513, 18.6449, 0.2824", "676.444, 541.799, 18.4264, 0.289", "677.571, 541.684, 18.2725, 0.3012", "678.156, 542.034, 18.2565, 0.3246", "678.94, 541.25, 18.1243, 0.3642", "679.624, 540.422, 17.8984, 0.4558", "679.947, 539.437, 17.6889, 0.5376", "680.221, 538.484, 17.5635, 0.4296", "680.61, 537.609, 17.3906, 0.3458", "681.434, 536.994, 17.1408, 0.313", "682.184, 536.213, 16.8951, 0.3418", "682.909, 535.629, 16.6699, 0.4196", "683.197, 534.676, 16.4506, 0.4448", "683.426, 533.678, 16.2553, 0.3816", "683.44, 532.903, 16.2266, 0.3422", "683.654, 532.313, 16.1491, 0.3488", "684.293, 531.562, 16.053, 0.4324", "684.931, 530.762, 15.9414, 0.4688", "685.516, 530.055, 15.8269, 0.4268", "686.2, 529.351, 15.8561, 0.4214", "686.574, 528.835, 15.7194, 0.5168", "687.45, 528.208, 15.7319, 0.6414", "688.333, 527.52, 15.801, 0.668", "688.834, 526.901, 15.8071, 0.5652", "689.65, 526.139, 15.8079, 0.427", "690.553, 525.501, 15.8683, 0.3742", "690.788, 524.717, 15.9875, 0.4322", "690.169, 523.978, 15.9226, 0.4694", "690.112, 522.965, 15.9359, 0.4222", "690.69, 522.116, 16.0082, 0.4416", "690.919, 521.544, 16.3231, 0.415", "691.203, 520.877, 16.5217, 0.442", "691.09, 520.117, 16.4536, 0.578", "691.452, 519.13, 16.3528, 0.6426", "692.003, 518.301, 16.2482, 0.5294", "692.667, 517.792, 16.1572, 0.5348", "692.903, 516.802, 16.1199, 0.4146", "693.413, 515.936, 16.0236, 0.3658", "693.466, 514.825, 15.9918, 0.3454", "693.67, 514.068, 16.1656, 0.426", "694.223, 513.093, 16.304, 0.4578", "694.941, 512.521, 16.2072, 0.4006", "695.824, 511.942, 16.0742, 0.402", "696.357, 511.168, 15.812, 0.3398", "696.815, 510.567, 15.7581, 0.3112", "697.508, 510.104, 15.4693, 0.295", "698.254, 509.618, 15.2482, 0.3134", "699.214, 509.208, 14.9995, 0.3424", "699.96, 508.666, 14.932, 0.4206", "701.05, 508.737, 14.9622, 0.447", "701.295, 508.203, 14.7712, 0.3854", "701.985, 507.507, 14.8364, 0.3506", "702.8, 506.764, 14.8885, 0.3578", "703.784, 506.311, 15.0359, 0.4802", "704.268, 505.404, 15.2096, 0.4076", "704.808, 504.464, 15.4199, 0.3532", "705.387, 503.703, 15.5215, 0.321", "706.072, 503.017, 15.5374, 0.3862", "706.721, 502.438, 15.7243, 0.3576", "707.444, 501.845, 15.7245, 0.3436", "707.766, 501.089, 15.5548, 0.357", "708.359, 500.477, 15.2819, 0.4192", "709.136, 500.006, 15.2553, 0.583", "710.132, 499.631, 15.3892, 0.6516", "711.22, 499.356, 15.5246, 0.546", "712.134, 499.353, 15.5278, 0.5664", "712.697, 498.697, 15.4559, 0.4692", "713.525, 498.246, 15.5406, 0.4866", "713.627, 497.411, 15.5896, 0.4758", "713.567, 496.47, 15.732, 0.435", "713.742, 495.582, 15.9461, 0.4604", "713.207, 494.844, 15.9807, 0.4742", "713.147, 494.09, 16.171, 0.4322", "712.916, 493.057, 16.165, 0.4552", "712.826, 492.232, 16.0282, 0.4648", "712.945, 491.446, 16.1674, 0.4136", "713.405, 490.583, 16.1898, 0.4258", "713.904, 489.602, 16.1671, 0.3858", "714.42, 488.665, 16.1262, 0.3858", "714.769, 487.725, 16.0647, 0.4848", "715.326, 486.881, 15.9399, 0.4164", "715.763, 486.661, 15.5781, 0.3692", "716.345, 486.0, 15.3154, 0.3514", "716.953, 485.745, 15.2746, 0.4384", "717.59, 485.057, 15.2362, 0.4748", "718.096, 484.128, 15.1743, 0.4628", "718.422, 483.671, 15.3739, 0.3676", "719.226, 483.338, 15.7334, 0.3164", "719.518, 482.624, 15.8607, 0.2994", "719.976, 482.066, 15.6409, 0.3474", "720.698, 481.42, 15.4128, 0.2796", "721.635, 481.052, 14.84, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "670.821, 546.095, 19.5485, 0.3836", "670.482, 545.92, 19.6, 0.2288", "669.441, 545.685, 19.6595, 0.323", "668.752, 545.694, 19.6512, 0.3896", "667.782, 545.813, 19.5682, 0.365", "667.065, 545.98, 19.764, 0.3522", "666.215, 546.247, 19.9015, 0.398", "665.458, 545.643, 19.9753, 0.374", "664.664, 545.304, 20.0636, 0.4", "663.732, 545.23, 20.0743, 0.3358", "662.613, 545.322, 20.0691, 0.3036", "661.737, 545.075, 20.1959, 0.2814", "660.904, 544.865, 20.1338, 0.2874", "659.794, 544.712, 20.1136, 0.298", "659.031, 545.226, 20.0735, 0.319", "658.15, 545.173, 20.0633, 0.3528", "657.461, 545.495, 20.0455, 0.4408", "656.703, 545.262, 19.9942, 0.4792", "655.69, 545.148, 19.9785, 0.4706", "654.758, 545.243, 19.8179, 0.3836", "653.901, 545.186, 19.8993, 0.3398", "653.109, 545.339, 19.8791, 0.3738", "652.363, 545.315, 20.159, 0.3346", "651.447, 545.237, 20.3855, 0.3014", "650.602, 545.23, 20.4515, 0.2772", "649.966, 545.261, 20.6877, 0.2794", "649.006, 544.952, 20.6786, 0.2836", "647.986, 544.671, 20.6698, 0.291", "647.067, 544.487, 20.6202, 0.3062", "646.259, 544.773, 20.6039, 0.3278", "645.289, 544.658, 20.4811, 0.3998", "644.518, 545.087, 20.3813, 0.3776", "643.799, 545.426, 20.2136, 0.4068", "643.101, 546.081, 19.9681, 0.3482", "642.956, 547.038, 19.8088, 0.3278", "643.251, 547.992, 19.5845, 0.3208", "643.005, 548.662, 19.3828, 0.3858", "642.91, 549.376, 19.1668, 0.3578", "642.35, 550.052, 19.0355, 0.339", "641.734, 550.859, 18.8943, 0.3724", "641.23, 551.796, 18.8558, 0.332", "640.657, 552.662, 18.7926, 0.2966", "640.291, 553.727, 18.704, 0.2684", "639.853, 554.512, 18.7253, 0.2626", "639.139, 555.183, 18.6573, 0.2542", "638.242, 555.712, 18.4923, 0.2288", "638.009, 556.213, 17.92, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_30", "dend_17", "dend_0", "dend_49", "dend_46", "dend_40", "dend_31", "dend_29", "dend_18", "dend_10", "dend_1", "dend_48", "dend_47", "dend_44", "dend_41", "dend_35", "dend_32", "dend_22", "dend_19", "dend_16", "dend_11", "dend_5", "dend_2", "dend_43", "dend_42", "dend_39", "dend_36", "dend_34", "dend_33", "dend_28", "dend_23", "dend_21", "dend_20", "dend_13", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_38", "dend_37", "dend_27", "dend_24", "dend_15", "dend_14", "dend_9", "dend_8", "dend_26", "dend_25" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21433",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.7683586"
  }, {
    "group" : "axon",
    "value" : "1.7683586"
  }, {
    "group" : "dend",
    "value" : "1.7683586"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "44.551483"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.0020890876",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.085748106",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.6296148E-8",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0068312306",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.19338517",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.03831359",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0037882773",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.5091253E-4",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.1743088E-4",
    "erev" : "-83.07173"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "1.8500157E-4",
    "erev" : "-83.07173"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.9383313E-6",
    "erev" : "-83.07173"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "5.0810166E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0062397416",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_476637699",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_476637699

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_30
create dend_40
public dend_40
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_17
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_22
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_45, dend_30, dend_17, dend_0, dend_49, dend_46, dend_40, dend_31, dend_29, dend_18, dend_10, dend_1, dend_48, dend_47, dend_44, dend_41, dend_35, dend_32, dend_22, dend_19, dend_16, dend_11, dend_5, dend_2, dend_43, dend_42, dend_39, dend_36, dend_34, dend_33, dend_28, dend_23, dend_21, dend_20, dend_13, dend_12, dend_7, dend_6, dend_4, dend_3, dend_38, dend_37, dend_27, dend_24, dend_15, dend_14, dend_9, dend_8, dend_26, dend_25]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_21433, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_21433
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_476637699
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49999999999999556)
    connect dend_45(0), soma_0(0.49999999999999556)
    connect dend_30(0), soma_0(0.49999999999999556)
    connect dend_17(0), soma_0(0.49999999999999556)
    connect dend_0(0), soma_0(0.49999999999999556)
    connect axon_1(0), axon_0(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_28(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 625.686, 668.896, 33.759, 12.7764 ) }
    soma_0 { pt3dadd( 632.074, 668.896, 33.759, 12.7764 ) }
    soma_0 { pt3dadd( 638.462, 668.896, 33.759, 12.7764 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 632.074, 668.896, 33.759, 1.0 ) }
    axon_0 { pt3dadd( 637.915, 682.712, 33.759, 1.0 ) }
    axon_0 { pt3dadd( 643.757, 696.528, 33.759, 1.0 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 6/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 637.732, 668.99, 33.8573, 0.2288 ) }
    dend_45 { pt3dadd( 638.875, 669.009, 34.2373, 0.4328 ) }
    dend_45 { pt3dadd( 639.656, 668.782, 34.5128, 0.4706 ) }
    dend_45 { pt3dadd( 640.721, 668.972, 34.776, 0.4238 ) }
    dend_45 { pt3dadd( 641.766, 669.011, 34.9378, 0.4462 ) }
    dend_45 { pt3dadd( 642.6, 668.554, 34.9499, 0.4172 ) }
    dend_45 { pt3dadd( 643.424, 668.49, 35.0344, 0.4756 ) }
    dend_45 { pt3dadd( 644.319, 668.583, 35.2148, 0.4976 ) }
    dend_45 { pt3dadd( 645.377, 668.908, 35.2629, 0.4998 ) }
    dend_45 { pt3dadd( 646.265, 669.175, 35.0571, 0.4622 ) }
    dend_45 { pt3dadd( 647.296, 669.24, 34.704, 0.3668 ) }
    dend_45 { pt3dadd( 648.177, 669.481, 34.3893, 0.3138 ) }
    dend_45 { pt3dadd( 648.943, 670.299, 34.0925, 0.3012 ) }
    dend_45 { pt3dadd( 649.957, 670.393, 33.7991, 0.3186 ) }
    dend_45 { pt3dadd( 650.728, 670.763, 33.3463, 0.3818 ) }
    dend_45 { pt3dadd( 651.65, 671.154, 33.1316, 0.3496 ) }
    dend_45 { pt3dadd( 652.76, 671.185, 33.0257, 0.3288 ) }
    dend_45 { pt3dadd( 653.864, 671.426, 32.8793, 0.329 ) }
    dend_45 { pt3dadd( 654.686, 671.909, 32.6312, 0.3708 ) }
    dend_45 { pt3dadd( 655.644, 672.396, 32.3596, 0.4754 ) }
    dend_45 { pt3dadd( 656.612, 672.227, 32.0678, 0.539 ) }
    dend_45 { pt3dadd( 657.592, 672.495, 31.7162, 0.6022 ) }
    dend_45 { pt3dadd( 658.16, 672.443, 31.7416, 0.528 ) }
    dend_45 { pt3dadd( 659.211, 672.216, 31.8158, 0.4038 ) }
    dend_45 { pt3dadd( 660.24, 672.546, 31.8688, 0.3366 ) }
    dend_45 { pt3dadd( 660.806, 673.071, 31.698, 0.3372 ) }
    dend_45 { pt3dadd( 661.503, 672.701, 31.519, 0.417 ) }
    dend_45 { pt3dadd( 662.512, 672.789, 31.2455, 0.4104 ) }
    dend_45 { pt3dadd( 663.451, 673.015, 30.9084, 0.462 ) }
    dend_45 { pt3dadd( 664.332, 672.985, 30.8353, 0.4764 ) }
    dend_45 { pt3dadd( 664.904, 673.208, 30.977, 0.4418 ) }
    dend_45 { pt3dadd( 665.545, 673.565, 31.2497, 0.4446 ) }
    dend_45 { pt3dadd( 666.182, 673.004, 31.43, 0.5842 ) }
    dend_45 { pt3dadd( 667.193, 672.914, 31.4384, 0.6464 ) }
    dend_45 { pt3dadd( 668.318, 672.967, 31.4098, 0.5722 ) }
    dend_45 { pt3dadd( 669.303, 673.211, 31.2908, 0.4412 ) }
    dend_45 { pt3dadd( 670.018, 672.712, 31.243, 0.3942 ) }
    dend_45 { pt3dadd( 670.837, 672.269, 31.2556, 0.4998 ) }
    dend_45 { pt3dadd( 671.549, 672.1, 31.0083, 0.4462 ) }
    dend_45 { pt3dadd( 672.32, 672.431, 30.7168, 0.4134 ) }
    dend_45 { pt3dadd( 673.072, 672.733, 30.4881, 0.4884 ) }
    dend_45 { pt3dadd( 674.0, 672.452, 30.4301, 0.4242 ) }
    dend_45 { pt3dadd( 674.883, 672.749, 30.546, 0.3774 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 49/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 628.089, 664.679, 37.431, 0.4576 ) }
    dend_30 { pt3dadd( 627.703, 663.67, 37.996, 0.6888 ) }
    dend_30 { pt3dadd( 627.31, 662.628, 38.1682, 0.7158 ) }
    dend_30 { pt3dadd( 626.967, 661.543, 38.3286, 0.6196 ) }
    dend_30 { pt3dadd( 626.817, 660.436, 38.5644, 0.6936 ) }
    dend_30 { pt3dadd( 626.797, 659.297, 38.8027, 0.7502 ) }
    dend_30 { pt3dadd( 626.793, 658.157, 39.0438, 0.7884 ) }
    dend_30 { pt3dadd( 626.766, 657.053, 39.349, 0.7264 ) }
    dend_30 { pt3dadd( 626.578, 655.941, 39.6612, 0.7984 ) }
    dend_30 { pt3dadd( 626.318, 654.866, 40.0016, 0.7108 ) }
    dend_30 { pt3dadd( 625.997, 653.775, 40.2752, 0.7056 ) }
    dend_30 { pt3dadd( 625.597, 652.708, 40.4415, 0.6206 ) }
    dend_30 { pt3dadd( 625.09, 651.732, 40.4429, 0.5984 ) }
    dend_30 { pt3dadd( 624.814, 650.635, 40.4295, 0.5872 ) }
    dend_30 { pt3dadd( 624.404, 649.609, 40.516, 0.6502 ) }
    dend_30 { pt3dadd( 624.088, 648.535, 40.6627, 0.5886 ) }
    dend_30 { pt3dadd( 624.02, 647.404, 40.7453, 0.6532 ) }
    dend_30 { pt3dadd( 623.814, 646.281, 40.8131, 0.8212 ) }
    dend_30 { pt3dadd( 623.446, 645.199, 40.8674, 0.8986 ) }
    dend_30 { pt3dadd( 622.85, 644.225, 40.8915, 0.8048 ) }
    dend_30 { pt3dadd( 622.303, 643.221, 40.889, 0.6394 ) }
    dend_30 { pt3dadd( 621.797, 642.195, 40.8803, 0.5208 ) }
    dend_30 { pt3dadd( 621.298, 641.165, 40.8792, 0.5316 ) }
    dend_30 { pt3dadd( 620.809, 640.131, 40.8789, 0.8044 ) }
    dend_30 { pt3dadd( 620.389, 639.067, 40.8783, 0.7702 ) }
    dend_30 { pt3dadd( 620.023, 637.984, 40.8778, 0.81 ) }
    dend_30 { pt3dadd( 619.332, 637.075, 40.8766, 0.6126 ) }
    dend_30 { pt3dadd( 618.729, 636.103, 40.8755, 0.6468 ) }
    dend_30 { pt3dadd( 618.267, 635.057, 40.8736, 0.598 ) }
    dend_30 { pt3dadd( 618.427, 633.93, 40.871, 0.596 ) }
    dend_30 { pt3dadd( 618.069, 632.847, 40.8677, 0.6198 ) }
    dend_30 { pt3dadd( 617.625, 631.793, 40.8626, 0.5292 ) }
    dend_30 { pt3dadd( 617.25, 630.712, 40.8556, 0.5598 ) }
    dend_30 { pt3dadd( 616.857, 629.638, 40.8464, 0.566 ) }
    dend_30 { pt3dadd( 616.32, 628.628, 40.833, 0.8228 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 84/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 638.202, 666.649, 33.7733, 1.7486 ) }
    dend_17 { pt3dadd( 639.25, 666.192, 33.7232, 0.444 ) }
    dend_17 { pt3dadd( 640.263, 665.66, 33.616, 0.4852 ) }
    dend_17 { pt3dadd( 641.149, 664.945, 33.4449, 0.482 ) }
    dend_17 { pt3dadd( 641.839, 664.042, 33.1934, 0.4042 ) }
    dend_17 { pt3dadd( 642.587, 663.275, 32.7734, 0.379 ) }
    dend_17 { pt3dadd( 643.082, 662.445, 32.1695, 0.4424 ) }
    dend_17 { pt3dadd( 643.246, 661.477, 31.467, 0.482 ) }
    dend_17 { pt3dadd( 643.221, 660.361, 30.8652, 0.476 ) }
    dend_17 { pt3dadd( 642.969, 659.249, 30.4385, 0.3934 ) }
    dend_17 { pt3dadd( 642.827, 658.116, 30.1902, 0.3582 ) }
    dend_17 { pt3dadd( 642.814, 657.002, 30.1655, 0.4078 ) }
    dend_17 { pt3dadd( 642.816, 655.867, 30.2585, 0.3982 ) }
    dend_17 { pt3dadd( 642.827, 654.728, 30.3282, 0.416 ) }
    dend_17 { pt3dadd( 642.899, 653.59, 30.3341, 0.5056 ) }
    dend_17 { pt3dadd( 643.201, 652.509, 30.3705, 0.6256 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_17 { pt3dadd( 643.312, 651.373, 30.3514, 0.6152 ) }
    dend_17 { pt3dadd( 643.578, 650.261, 30.2728, 0.5808 ) }
    dend_17 { pt3dadd( 644.023, 649.211, 30.1339, 0.5918 ) }
    dend_17 { pt3dadd( 644.22, 648.166, 29.8402, 0.4776 ) }
    dend_17 { pt3dadd( 644.32, 647.097, 29.4479, 0.4612 ) }
    dend_17 { pt3dadd( 644.174, 645.963, 29.1301, 0.3984 ) }
    dend_17 { pt3dadd( 644.091, 644.823, 28.9022, 0.4398 ) }
    dend_17 { pt3dadd( 643.755, 643.729, 28.7571, 0.4354 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 8/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 626.441, 668.682, 33.9478, 0.4576 ) }
    dend_0 { pt3dadd( 625.398, 668.352, 33.4222, 0.8196 ) }
    dend_0 { pt3dadd( 624.356, 668.087, 33.133, 0.9616 ) }
    dend_0 { pt3dadd( 623.255, 668.276, 32.8986, 1.0588 ) }
    dend_0 { pt3dadd( 622.195, 668.58, 32.8303, 0.9024 ) }
    dend_0 { pt3dadd( 621.113, 668.877, 32.8583, 0.8742 ) }
    dend_0 { pt3dadd( 619.99, 669.073, 32.8681, 0.9228 ) }
    dend_0 { pt3dadd( 618.989, 669.594, 32.8107, 0.98 ) }
    dend_0 { pt3dadd( 617.873, 669.819, 32.7219, 0.7898 ) }
    dend_0 { pt3dadd( 616.737, 669.948, 32.562, 0.5024 ) }
    dend_0 { pt3dadd( 615.661, 670.242, 32.2627, 0.3392 ) }
    dend_0 { pt3dadd( 614.532, 670.37, 31.9788, 0.3 ) }
    dend_0 { pt3dadd( 613.431, 670.678, 31.6865, 0.3226 ) }
    dend_0 { pt3dadd( 612.357, 670.7, 31.2329, 0.3594 ) }
    dend_0 { pt3dadd( 611.351, 670.588, 30.6034, 0.4532 ) }
    dend_0 { pt3dadd( 610.361, 670.109, 29.939, 0.5018 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 643.757, 696.528, 33.759, 1.0 ) }
    axon_1 { pt3dadd( 649.598, 710.344, 33.759, 1.0 ) }
    axon_1 { pt3dadd( 655.439, 724.16, 33.759, 1.0 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 27/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 674.883, 672.749, 30.546, 0.3774 ) }
    dend_49 { pt3dadd( 675.722, 672.945, 31.5882, 0.2288 ) }
    dend_49 { pt3dadd( 676.835, 673.207, 31.5213, 0.2814 ) }
    dend_49 { pt3dadd( 677.948, 673.469, 31.4936, 0.287 ) }
    dend_49 { pt3dadd( 679.061, 673.731, 31.4602, 0.2988 ) }
    dend_49 { pt3dadd( 680.179, 673.751, 31.4199, 0.3142 ) }
    dend_49 { pt3dadd( 681.218, 673.912, 31.3922, 0.3734 ) }
    dend_49 { pt3dadd( 682.06, 674.388, 31.4742, 0.334 ) }
    dend_49 { pt3dadd( 683.13, 674.709, 31.4712, 0.3002 ) }
    dend_49 { pt3dadd( 684.005, 675.405, 31.3846, 0.275 ) }
    dend_49 { pt3dadd( 684.944, 675.771, 31.166, 0.2754 ) }
    dend_49 { pt3dadd( 685.94, 676.086, 30.9666, 0.2762 ) }
    dend_49 { pt3dadd( 686.497, 676.905, 30.7846, 0.2776 ) }
    dend_49 { pt3dadd( 687.282, 677.668, 30.6211, 0.2802 ) }
    dend_49 { pt3dadd( 688.109, 678.208, 30.3828, 0.285 ) }
    dend_49 { pt3dadd( 688.816, 679.038, 30.205, 0.2938 ) }
    dend_49 { pt3dadd( 689.797, 679.608, 30.0838, 0.3112 ) }
    dend_49 { pt3dadd( 690.769, 680.169, 29.9902, 0.3382 ) }
    dend_49 { pt3dadd( 691.659, 680.862, 29.8841, 0.413 ) }
    dend_49 { pt3dadd( 692.409, 681.525, 29.8472, 0.4328 ) }
    dend_49 { pt3dadd( 693.253, 682.224, 29.8623, 0.3594 ) }
    dend_49 { pt3dadd( 694.184, 682.889, 29.8746, 0.3 ) }
    dend_49 { pt3dadd( 695.115, 683.555, 29.8822, 0.2746 ) }
    dend_49 { pt3dadd( 696.045, 684.219, 29.8836, 0.2746 ) }
    dend_49 { pt3dadd( 696.976, 684.884, 29.8746, 0.2746 ) }
    dend_49 { pt3dadd( 697.907, 685.549, 29.8452, 0.2746 ) }
    dend_49 { pt3dadd( 698.839, 686.215, 29.799, 0.2746 ) }
    dend_49 { pt3dadd( 699.769, 686.879, 29.7408, 0.2746 ) }
    dend_49 { pt3dadd( 700.7, 687.544, 29.6722, 0.2746 ) }
    dend_49 { pt3dadd( 701.042, 688.039, 29.4991, 0.2746 ) }
    dend_49 { pt3dadd( 701.863, 688.694, 29.2902, 0.2746 ) }
    dend_49 { pt3dadd( 702.288, 689.69, 29.1312, 0.2746 ) }
    dend_49 { pt3dadd( 703.214, 690.306, 29.0192, 0.2746 ) }
    dend_49 { pt3dadd( 704.3, 690.603, 28.9509, 0.2746 ) }
    dend_49 { pt3dadd( 704.849, 691.55, 28.9223, 0.2746 ) }
    dend_49 { pt3dadd( 705.474, 692.483, 28.9551, 0.2746 ) }
    dend_49 { pt3dadd( 706.278, 693.251, 29.0052, 0.2746 ) }
    dend_49 { pt3dadd( 707.268, 693.653, 29.0394, 0.2748 ) }
    dend_49 { pt3dadd( 708.117, 694.377, 29.0562, 0.2748 ) }
    dend_49 { pt3dadd( 709.233, 694.55, 29.0956, 0.2752 ) }
    dend_49 { pt3dadd( 710.204, 695.126, 29.1015, 0.2756 ) }
    dend_49 { pt3dadd( 711.188, 695.508, 29.0464, 0.2766 ) }
    dend_49 { pt3dadd( 711.768, 696.232, 28.9097, 0.2782 ) }
    dend_49 { pt3dadd( 712.91, 696.238, 28.7958, 0.2814 ) }
    dend_49 { pt3dadd( 714.054, 696.238, 28.709, 0.287 ) }
    dend_49 { pt3dadd( 714.946, 696.883, 28.6476, 0.2988 ) }
    dend_49 { pt3dadd( 715.659, 697.778, 28.6168, 0.3142 ) }
    dend_49 { pt3dadd( 716.431, 698.526, 28.6079, 0.3736 ) }
    dend_49 { pt3dadd( 717.233, 699.048, 28.6502, 0.334 ) }
    dend_49 { pt3dadd( 718.272, 699.328, 28.6882, 0.3004 ) }
    dend_49 { pt3dadd( 719.12, 699.843, 28.7081, 0.2752 ) }
    dend_49 { pt3dadd( 720.055, 700.486, 28.7146, 0.2758 ) }
    dend_49 { pt3dadd( 720.617, 701.396, 28.7109, 0.2768 ) }
    dend_49 { pt3dadd( 721.063, 702.214, 28.6737, 0.2788 ) }
    dend_49 { pt3dadd( 721.611, 702.892, 28.5076, 0.2826 ) }
    dend_49 { pt3dadd( 722.097, 703.535, 28.4379, 0.2892 ) }
    dend_49 { pt3dadd( 722.602, 704.092, 28.5362, 0.3026 ) }
    dend_49 { pt3dadd( 723.071, 704.793, 28.4654, 0.3214 ) }
    dend_49 { pt3dadd( 723.617, 705.664, 28.25, 0.3866 ) }
    dend_49 { pt3dadd( 724.08, 706.102, 27.7854, 0.3594 ) }
    dend_49 { pt3dadd( 724.354, 706.963, 27.5928, 0.342 ) }
    dend_49 { pt3dadd( 725.075, 707.344, 27.5913, 0.3778 ) }
    dend_49 { pt3dadd( 725.993, 707.801, 27.771, 0.3422 ) }
    dend_49 { pt3dadd( 726.84, 708.511, 27.9723, 0.3152 ) }
    dend_49 { pt3dadd( 727.241, 709.404, 28.1372, 0.3038 ) }
    dend_49 { pt3dadd( 727.812, 709.937, 28.1571, 0.3234 ) }
    dend_49 { pt3dadd( 728.794, 710.195, 28.0762, 0.3904 ) }
    dend_49 { pt3dadd( 729.236, 710.983, 27.8285, 0.3664 ) }
    dend_49 { pt3dadd( 730.155, 711.341, 27.6679, 0.3552 ) }
    dend_49 { pt3dadd( 730.695, 711.883, 27.7079, 0.402 ) }
    dend_49 { pt3dadd( 731.278, 712.216, 27.7546, 0.3892 ) }
    dend_49 { pt3dadd( 731.922, 712.646, 28.037, 0.392 ) }
    dend_49 { pt3dadd( 732.97, 712.853, 28.2299, 0.4958 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_49 { pt3dadd( 734.018, 713.116, 28.366, 0.4378 ) }
    dend_49 { pt3dadd( 735.075, 713.154, 28.4292, 0.404 ) }
    dend_49 { pt3dadd( 736.057, 713.001, 28.4192, 0.4406 ) }
    dend_49 { pt3dadd( 737.022, 713.06, 28.4766, 0.483 ) }
    dend_49 { pt3dadd( 737.544, 713.659, 28.7493, 0.4576 ) }
    dend_49 { pt3dadd( 738.452, 713.97, 29.68, 0.4576 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 6/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 674.883, 672.749, 30.546, 0.3774 ) }
    dend_46 { pt3dadd( 675.177, 672.409, 30.4934, 0.3976 ) }
    dend_46 { pt3dadd( 675.803, 671.815, 30.3428, 0.3736 ) }
    dend_46 { pt3dadd( 676.722, 671.359, 30.3204, 0.399 ) }
    dend_46 { pt3dadd( 677.505, 670.961, 30.2873, 0.3342 ) }
    dend_46 { pt3dadd( 678.43, 670.536, 30.112, 0.3006 ) }
    dend_46 { pt3dadd( 678.719, 670.228, 29.9569, 0.2756 ) }
    dend_46 { pt3dadd( 679.504, 669.396, 29.848, 0.2766 ) }
    dend_46 { pt3dadd( 680.439, 668.897, 29.6559, 0.2782 ) }
    dend_46 { pt3dadd( 681.443, 668.554, 29.491, 0.2814 ) }
    dend_46 { pt3dadd( 682.516, 668.59, 29.3485, 0.287 ) }
    dend_46 { pt3dadd( 683.541, 668.54, 29.3465, 0.2988 ) }
    dend_46 { pt3dadd( 684.471, 668.32, 29.2852, 0.3142 ) }
    dend_46 { pt3dadd( 685.567, 668.102, 29.223, 0.3736 ) }
    dend_46 { pt3dadd( 686.4, 667.638, 29.2298, 0.334 ) }
    // Section: dend_40, id: dend_40, parent: dend_30 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 616.32, 628.628, 40.833, 0.8228 ) }
    dend_40 { pt3dadd( 615.432, 628.125, 42.7098, 0.3868 ) }
    dend_40 { pt3dadd( 614.376, 627.906, 43.2104, 0.3586 ) }
    dend_40 { pt3dadd( 613.423, 627.334, 43.559, 0.3456 ) }
    dend_40 { pt3dadd( 612.309, 627.134, 43.8105, 0.3606 ) }
    dend_40 { pt3dadd( 611.275, 626.7, 44.0437, 0.427 ) }
    dend_40 { pt3dadd( 610.53, 625.895, 44.3106, 0.5924 ) }
    dend_40 { pt3dadd( 610.03, 625.007, 44.7118, 0.6926 ) }
    dend_40 { pt3dadd( 609.449, 624.058, 45.155, 0.5086 ) }
    dend_40 { pt3dadd( 608.793, 623.151, 45.6193, 0.3606 ) }
    dend_40 { pt3dadd( 608.066, 622.28, 46.0286, 0.2924 ) }
    dend_40 { pt3dadd( 607.259, 621.469, 46.3305, 0.3088 ) }
    dend_40 { pt3dadd( 606.481, 620.636, 46.5363, 0.3328 ) }
    dend_40 { pt3dadd( 605.817, 619.707, 46.6782, 0.4074 ) }
    dend_40 { pt3dadd( 605.189, 618.778, 46.8364, 0.399 ) }
    dend_40 { pt3dadd( 604.567, 617.854, 47.0089, 0.4114 ) }
    dend_40 { pt3dadd( 603.8, 617.018, 47.1097, 0.5266 ) }
    dend_40 { pt3dadd( 602.899, 616.335, 47.1184, 0.5206 ) }
    dend_40 { pt3dadd( 602.007, 615.657, 47.0397, 0.4322 ) }
    dend_40 { pt3dadd( 601.182, 614.87, 46.9526, 0.4136 ) }
    dend_40 { pt3dadd( 600.455, 613.992, 46.8941, 0.3608 ) }
    dend_40 { pt3dadd( 599.796, 613.066, 46.8983, 0.352 ) }
    dend_40 { pt3dadd( 599.043, 612.241, 47.0047, 0.3606 ) }
    dend_40 { pt3dadd( 598.188, 611.502, 47.1671, 0.485 ) }
    dend_40 { pt3dadd( 597.293, 610.801, 47.3312, 0.418 ) }
    dend_40 { pt3dadd( 596.693, 610.398, 47.2867, 0.3662 ) }
    dend_40 { pt3dadd( 596.327, 609.909, 47.1587, 0.3756 ) }
    dend_40 { pt3dadd( 595.793, 609.082, 47.278, 0.338 ) }
    dend_40 { pt3dadd( 595.185, 608.456, 47.5499, 0.3078 ) }
    dend_40 { pt3dadd( 594.867, 607.877, 47.546, 0.2888 ) }
    dend_40 { pt3dadd( 594.118, 607.206, 47.5591, 0.3018 ) }
    dend_40 { pt3dadd( 593.352, 606.553, 47.5888, 0.32 ) }
    dend_40 { pt3dadd( 592.815, 606.067, 47.7646, 0.3844 ) }
    dend_40 { pt3dadd( 592.415, 605.097, 47.85, 0.354 ) }
    dend_40 { pt3dadd( 591.665, 604.431, 47.8279, 0.338 ) }
    dend_40 { pt3dadd( 590.925, 603.741, 47.6717, 0.341 ) }
    dend_40 { pt3dadd( 590.224, 602.948, 47.5392, 0.418 ) }
    dend_40 { pt3dadd( 589.583, 602.134, 47.4466, 0.442 ) }
    dend_40 { pt3dadd( 588.919, 601.739, 47.4046, 0.3762 ) }
    dend_40 { pt3dadd( 588.538, 601.099, 47.4813, 0.3324 ) }
    dend_40 { pt3dadd( 587.992, 600.594, 47.537, 0.3292 ) }
    dend_40 { pt3dadd( 587.165, 600.035, 47.5283, 0.4026 ) }
    dend_40 { pt3dadd( 586.83, 599.588, 47.6137, 0.3828 ) }
    dend_40 { pt3dadd( 586.245, 598.659, 47.6764, 0.416 ) }
    dend_40 { pt3dadd( 585.722, 598.045, 47.9044, 0.3668 ) }
    dend_40 { pt3dadd( 585.27, 597.168, 48.1079, 0.3556 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 67/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 616.32, 628.628, 40.833, 0.8228 ) }
    dend_31 { pt3dadd( 615.697, 627.138, 40.7842, 0.6732 ) }
    dend_31 { pt3dadd( 615.345, 626.054, 40.7568, 0.5598 ) }
    dend_31 { pt3dadd( 615.052, 624.973, 40.7103, 0.4896 ) }
    dend_31 { pt3dadd( 615.005, 623.841, 40.6246, 0.5946 ) }
    dend_31 { pt3dadd( 615.38, 622.859, 40.4205, 0.564 ) }
    // Section: dend_29, id: dend_29, parent: dend_17 (entry count 73/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 643.755, 643.729, 28.7571, 0.4354 ) }
    dend_29 { pt3dadd( 643.637, 643.023, 27.6307, 0.6864 ) }
    dend_29 { pt3dadd( 643.18, 642.003, 27.3854, 0.6708 ) }
    dend_29 { pt3dadd( 642.54, 641.056, 27.2802, 0.4926 ) }
    dend_29 { pt3dadd( 641.91, 640.121, 27.1964, 0.4408 ) }
    dend_29 { pt3dadd( 641.173, 639.272, 27.1148, 0.3656 ) }
    dend_29 { pt3dadd( 640.414, 638.427, 26.9017, 0.3536 ) }
    dend_29 { pt3dadd( 639.592, 638.041, 26.3613, 0.399 ) }
    dend_29 { pt3dadd( 638.997, 637.256, 25.6086, 0.3836 ) }
    dend_29 { pt3dadd( 638.312, 636.367, 24.8393, 0.3816 ) }
    dend_29 { pt3dadd( 637.644, 635.564, 23.9919, 0.4768 ) }
    dend_29 { pt3dadd( 636.857, 635.029, 23.0715, 0.4018 ) }
    dend_29 { pt3dadd( 637.491, 634.334, 22.178, 0.341 ) }
    dend_29 { pt3dadd( 637.425, 633.304, 21.611, 0.3046 ) }
    dend_29 { pt3dadd( 636.522, 632.742, 21.2814, 0.325 ) }
    dend_29 { pt3dadd( 635.407, 632.526, 21.006, 0.3934 ) }
    dend_29 { pt3dadd( 634.499, 631.975, 20.6981, 0.372 ) }
    dend_29 { pt3dadd( 634.235, 631.001, 20.3045, 0.3664 ) }
    dend_29 { pt3dadd( 634.036, 629.968, 19.8829, 0.4178 ) }
    dend_29 { pt3dadd( 633.255, 629.215, 19.3719, 0.4418 ) }
    dend_29 { pt3dadd( 632.419, 628.504, 18.8151, 0.3758 ) }
    dend_29 { pt3dadd( 631.663, 627.691, 18.2634, 0.3318 ) }
    dend_29 { pt3dadd( 630.923, 626.849, 17.7633, 0.3282 ) }
    dend_29 { pt3dadd( 630.195, 625.973, 17.3506, 0.3996 ) }
    dend_29 { pt3dadd( 629.662, 625.046, 16.9408, 0.383 ) }
    dend_29 { pt3dadd( 629.34, 624.008, 16.5555, 0.388 ) }
    dend_29 { pt3dadd( 629.059, 622.93, 16.3563, 0.4528 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( 628.591, 621.917, 16.3088, 0.5322 ) }
    dend_29 { pt3dadd( 627.784, 621.178, 16.2858, 0.4198 ) }
    dend_29 { pt3dadd( 627.116, 620.535, 16.3397, 0.3274 ) }
    dend_29 { pt3dadd( 626.613, 619.813, 16.63, 0.2784 ) }
    dend_29 { pt3dadd( 626.772, 618.776, 17.029, 0.2818 ) }
    dend_29 { pt3dadd( 627.24, 617.798, 17.4935, 0.288 ) }
    dend_29 { pt3dadd( 627.036, 616.861, 18.0474, 0.299 ) }
    dend_29 { pt3dadd( 626.602, 615.827, 18.6007, 0.322 ) }
    dend_29 { pt3dadd( 627.072, 615.291, 19.3995, 0.3518 ) }
    dend_29 { pt3dadd( 627.555, 615.392, 20.5628, 0.4688 ) }
    dend_29 { pt3dadd( 627.3, 615.177, 21.9896, 0.387 ) }
    dend_29 { pt3dadd( 626.707, 614.386, 23.3724, 0.3136 ) }
    dend_29 { pt3dadd( 626.284, 613.477, 24.6713, 0.2542 ) }
    dend_29 { pt3dadd( 625.958, 612.451, 25.7848, 0.2288 ) }
    dend_29 { pt3dadd( 625.597, 611.435, 27.5828, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 643.755, 643.729, 28.7571, 0.4354 ) }
    dend_18 { pt3dadd( 643.591, 642.779, 28.6913, 0.3642 ) }
    dend_18 { pt3dadd( 643.331, 641.702, 28.7529, 0.309 ) }
    dend_18 { pt3dadd( 643.403, 640.569, 28.8112, 0.2914 ) }
    dend_18 { pt3dadd( 643.805, 639.501, 28.7818, 0.3052 ) }
    dend_18 { pt3dadd( 644.389, 638.523, 28.6373, 0.3336 ) }
    dend_18 { pt3dadd( 645.112, 637.793, 28.2554, 0.3736 ) }
    dend_18 { pt3dadd( 645.928, 637.086, 27.7476, 0.509 ) }
    dend_18 { pt3dadd( 646.906, 636.549, 27.2114, 0.463 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 610.361, 670.109, 29.939, 0.5018 ) }
    dend_10 { pt3dadd( 609.077, 670.766, 28.5432, 0.454 ) }
    dend_10 { pt3dadd( 608.403, 671.686, 27.967, 0.5278 ) }
    dend_10 { pt3dadd( 607.79, 672.639, 27.5512, 0.4438 ) }
    dend_10 { pt3dadd( 606.822, 673.244, 27.2465, 0.445 ) }
    dend_10 { pt3dadd( 605.772, 673.695, 26.9972, 0.3718 ) }
    dend_10 { pt3dadd( 604.808, 674.308, 26.7662, 0.3724 ) }
    dend_10 { pt3dadd( 603.838, 674.887, 26.5015, 0.3994 ) }
    dend_10 { pt3dadd( 602.787, 675.057, 26.087, 0.5514 ) }
    dend_10 { pt3dadd( 601.806, 674.734, 25.5163, 0.5684 ) }
    dend_10 { pt3dadd( 600.798, 674.433, 24.8816, 0.5106 ) }
    dend_10 { pt3dadd( 599.66, 674.484, 24.3424, 0.61 ) }
    dend_10 { pt3dadd( 598.542, 674.687, 23.885, 0.4784 ) }
    dend_10 { pt3dadd( 597.452, 674.567, 23.4546, 0.3936 ) }
    dend_10 { pt3dadd( 596.474, 674.012, 23.0648, 0.3794 ) }
    dend_10 { pt3dadd( 595.453, 673.692, 22.7238, 0.345 ) }
    dend_10 { pt3dadd( 594.399, 674.041, 22.381, 0.3204 ) }
    dend_10 { pt3dadd( 593.315, 674.334, 22.1091, 0.3132 ) }
    dend_10 { pt3dadd( 592.176, 674.263, 21.9098, 0.342 ) }
    dend_10 { pt3dadd( 591.065, 674.264, 21.7455, 0.42 ) }
    dend_10 { pt3dadd( 590.005, 674.629, 21.6094, 0.4454 ) }
    dend_10 { pt3dadd( 588.959, 675.081, 21.5703, 0.384 ) }
    dend_10 { pt3dadd( 587.906, 675.517, 21.5706, 0.3404 ) }
    dend_10 { pt3dadd( 586.816, 675.732, 21.6544, 0.375 ) }
    dend_10 { pt3dadd( 585.722, 675.681, 21.8901, 0.3368 ) }
    dend_10 { pt3dadd( 584.634, 675.444, 22.17, 0.3054 ) }
    dend_10 { pt3dadd( 583.537, 675.256, 22.4249, 0.2846 ) }
    dend_10 { pt3dadd( 582.41, 675.363, 22.7121, 0.293 ) }
    dend_10 { pt3dadd( 581.459, 674.998, 22.9992, 0.3098 ) }
    dend_10 { pt3dadd( 580.582, 674.275, 23.2521, 0.3344 ) }
    dend_10 { pt3dadd( 579.545, 673.953, 23.5295, 0.4118 ) }
    dend_10 { pt3dadd( 578.422, 673.906, 23.843, 0.4008 ) }
    dend_10 { pt3dadd( 577.297, 673.781, 24.155, 0.4442 ) }
    dend_10 { pt3dadd( 576.198, 673.819, 24.4831, 0.4436 ) }
    dend_10 { pt3dadd( 575.12, 674.142, 24.7882, 0.3792 ) }
    dend_10 { pt3dadd( 574.01, 674.389, 25.0134, 0.3378 ) }
    dend_10 { pt3dadd( 572.888, 674.433, 25.1109, 0.3404 ) }
    dend_10 { pt3dadd( 571.788, 674.68, 25.259, 0.417 ) }
    dend_10 { pt3dadd( 570.747, 675.137, 25.4341, 0.4402 ) }
    dend_10 { pt3dadd( 569.649, 675.293, 25.684, 0.373 ) }
    dend_10 { pt3dadd( 568.513, 675.295, 25.9327, 0.3252 ) }
    dend_10 { pt3dadd( 567.37, 675.244, 26.1416, 0.3222 ) }
    dend_10 { pt3dadd( 566.272, 674.929, 26.3111, 0.3586 ) }
    dend_10 { pt3dadd( 565.27, 674.379, 26.4335, 0.4518 ) }
    dend_10 { pt3dadd( 564.212, 673.948, 26.528, 0.4992 ) }
    dend_10 { pt3dadd( 563.236, 673.355, 26.6204, 0.5088 ) }
    dend_10 { pt3dadd( 562.278, 672.79, 26.7908, 0.4486 ) }
    dend_10 { pt3dadd( 561.261, 672.28, 26.9535, 0.4882 ) }
    dend_10 { pt3dadd( 560.22, 671.805, 27.0571, 0.5144 ) }
    dend_10 { pt3dadd( 559.093, 671.609, 27.1012, 0.5618 ) }
    dend_10 { pt3dadd( 557.972, 671.382, 27.0851, 0.4274 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 75/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 610.361, 670.109, 29.939, 0.5018 ) }
    dend_1 { pt3dadd( 609.364, 668.865, 28.5177, 0.6354 ) }
    dend_1 { pt3dadd( 608.642, 668.075, 28.0983, 0.5646 ) }
    dend_1 { pt3dadd( 607.621, 667.627, 27.714, 0.5926 ) }
    dend_1 { pt3dadd( 606.492, 667.487, 27.3887, 0.5582 ) }
    dend_1 { pt3dadd( 605.507, 667.033, 27.0406, 0.456 ) }
    dend_1 { pt3dadd( 605.638, 666.001, 26.7183, 0.4524 ) }
    dend_1 { pt3dadd( 606.333, 665.106, 26.4875, 0.4584 ) }
    dend_1 { pt3dadd( 607.11, 664.267, 26.3183, 0.408 ) }
    dend_1 { pt3dadd( 607.786, 663.344, 26.1773, 0.3858 ) }
    dend_1 { pt3dadd( 607.848, 662.219, 26.0511, 0.4548 ) }
    dend_1 { pt3dadd( 607.239, 661.266, 25.9288, 0.5062 ) }
    dend_1 { pt3dadd( 606.432, 660.456, 25.7774, 0.516 ) }
    dend_1 { pt3dadd( 605.58, 659.715, 25.5342, 0.4916 ) }
    dend_1 { pt3dadd( 604.815, 658.898, 25.199, 0.4234 ) }
    dend_1 { pt3dadd( 603.981, 658.117, 24.868, 0.408 ) }
    dend_1 { pt3dadd( 602.987, 657.572, 24.5031, 0.528 ) }
    dend_1 { pt3dadd( 602.045, 657.205, 23.9867, 0.4862 ) }
    dend_1 { pt3dadd( 601.166, 656.503, 23.4908, 0.5486 ) }
    dend_1 { pt3dadd( 600.4, 655.655, 23.0952, 0.4416 ) }
    dend_1 { pt3dadd( 599.769, 654.7, 22.7741, 0.4094 ) }
    dend_1 { pt3dadd( 599.046, 653.818, 22.4804, 0.4588 ) }
    dend_1 { pt3dadd( 598.516, 652.85, 22.1339, 0.4774 ) }
    dend_1 { pt3dadd( 598.05, 651.807, 21.8388, 0.6374 ) }
    dend_1 { pt3dadd( 597.679, 650.724, 21.5775, 0.5538 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 597.216, 649.679, 21.3329, 0.4148 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 686.4, 667.638, 29.2298, 0.334 ) }
    dend_48 { pt3dadd( 687.099, 667.78, 29.2018, 0.2288 ) }
    dend_48 { pt3dadd( 688.213, 668.007, 28.7389, 0.2746 ) }
    dend_48 { pt3dadd( 689.328, 668.232, 28.5407, 0.2746 ) }
    dend_48 { pt3dadd( 690.441, 668.459, 28.3074, 0.2748 ) }
    dend_48 { pt3dadd( 691.555, 668.684, 28.0563, 0.2748 ) }
    dend_48 { pt3dadd( 692.669, 668.911, 27.8014, 0.2752 ) }
    dend_48 { pt3dadd( 693.783, 669.136, 27.5567, 0.2756 ) }
    dend_48 { pt3dadd( 694.465, 668.657, 27.3186, 0.2766 ) }
    dend_48 { pt3dadd( 695.09, 667.729, 27.156, 0.2782 ) }
    dend_48 { pt3dadd( 695.739, 666.798, 27.092, 0.2814 ) }
    dend_48 { pt3dadd( 696.15, 665.763, 27.0341, 0.2872 ) }
    dend_48 { pt3dadd( 696.818, 664.877, 27.0137, 0.299 ) }
    dend_48 { pt3dadd( 696.944, 663.748, 27.0165, 0.3144 ) }
    dend_48 { pt3dadd( 697.611, 663.108, 27.0413, 0.374 ) }
    dend_48 { pt3dadd( 697.766, 662.096, 27.2122, 0.3352 ) }
    dend_48 { pt3dadd( 697.954, 661.018, 27.266, 0.3022 ) }
    dend_48 { pt3dadd( 698.547, 660.19, 27.2058, 0.2788 ) }
    dend_48 { pt3dadd( 698.985, 659.165, 27.1276, 0.2824 ) }
    dend_48 { pt3dadd( 699.442, 658.18, 26.9984, 0.289 ) }
    dend_48 { pt3dadd( 699.781, 657.12, 26.87, 0.3024 ) }
    dend_48 { pt3dadd( 700.406, 656.26, 26.7026, 0.321 ) }
    dend_48 { pt3dadd( 701.17, 655.56, 26.5627, 0.3858 ) }
    dend_48 { pt3dadd( 701.299, 654.437, 26.4531, 0.358 ) }
    dend_48 { pt3dadd( 701.921, 653.56, 26.3761, 0.3396 ) }
    dend_48 { pt3dadd( 701.914, 652.453, 26.2575, 0.3734 ) }
    dend_48 { pt3dadd( 702.401, 651.595, 26.0, 0.3338 ) }
    dend_48 { pt3dadd( 703.093, 650.903, 25.7669, 0.3 ) }
    dend_48 { pt3dadd( 703.409, 649.858, 25.5402, 0.2746 ) }
    dend_48 { pt3dadd( 704.528, 649.766, 25.3389, 0.2746 ) }
    dend_48 { pt3dadd( 704.956, 648.823, 25.086, 0.2748 ) }
    dend_48 { pt3dadd( 705.263, 647.736, 24.8829, 0.2748 ) }
    dend_48 { pt3dadd( 706.042, 647.011, 24.7146, 0.2752 ) }
    dend_48 { pt3dadd( 706.938, 646.323, 24.5176, 0.2756 ) }
    dend_48 { pt3dadd( 707.654, 645.441, 24.3112, 0.2766 ) }
    dend_48 { pt3dadd( 708.535, 644.987, 24.049, 0.2782 ) }
    dend_48 { pt3dadd( 709.487, 644.601, 23.7731, 0.2814 ) }
    dend_48 { pt3dadd( 710.106, 643.896, 23.4408, 0.287 ) }
    dend_48 { pt3dadd( 711.236, 643.843, 23.1534, 0.2988 ) }
    dend_48 { pt3dadd( 711.917, 643.203, 22.8813, 0.3142 ) }
    dend_48 { pt3dadd( 712.682, 642.771, 22.5107, 0.3734 ) }
    dend_48 { pt3dadd( 713.515, 642.47, 22.2609, 0.334 ) }
    dend_48 { pt3dadd( 714.578, 642.47, 21.9227, 0.3002 ) }
    dend_48 { pt3dadd( 715.722, 642.47, 21.6504, 0.275 ) }
    dend_48 { pt3dadd( 716.857, 642.404, 21.4248, 0.2754 ) }
    dend_48 { pt3dadd( 717.929, 642.456, 21.2676, 0.2762 ) }
    dend_48 { pt3dadd( 718.668, 642.242, 20.946, 0.2774 ) }
    dend_48 { pt3dadd( 719.807, 642.168, 20.6698, 0.28 ) }
    dend_48 { pt3dadd( 720.73, 642.435, 20.4347, 0.2846 ) }
    dend_48 { pt3dadd( 721.638, 642.814, 20.2974, 0.293 ) }
    dend_48 { pt3dadd( 722.585, 642.6, 20.2259, 0.3088 ) }
    dend_48 { pt3dadd( 723.135, 643.031, 19.8428, 0.3386 ) }
    dend_48 { pt3dadd( 723.666, 642.538, 19.2565, 0.3898 ) }
    dend_48 { pt3dadd( 723.736, 641.593, 18.7374, 0.5056 ) }
    dend_48 { pt3dadd( 724.376, 640.887, 18.0947, 0.6186 ) }
    dend_48 { pt3dadd( 725.158, 640.367, 17.4664, 0.6356 ) }
    dend_48 { pt3dadd( 725.925, 640.752, 16.785, 0.4576 ) }
    dend_48 { pt3dadd( 726.783, 640.754, 15.68, 0.4576 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 59/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 686.4, 667.638, 29.2298, 0.334 ) }
    dend_47 { pt3dadd( 686.963, 666.859, 29.2578, 0.3002 ) }
    dend_47 { pt3dadd( 686.861, 665.774, 29.1757, 0.2752 ) }
    dend_47 { pt3dadd( 686.972, 664.71, 29.1595, 0.2756 ) }
    dend_47 { pt3dadd( 686.927, 663.607, 29.0279, 0.2766 ) }
    dend_47 { pt3dadd( 686.858, 662.501, 28.8467, 0.2782 ) }
    dend_47 { pt3dadd( 686.623, 661.406, 28.6854, 0.2814 ) }
    dend_47 { pt3dadd( 686.139, 660.393, 28.5482, 0.287 ) }
    dend_47 { pt3dadd( 685.708, 659.391, 28.4357, 0.2988 ) }
    dend_47 { pt3dadd( 685.4, 658.552, 28.2862, 0.3142 ) }
    dend_47 { pt3dadd( 685.37, 657.563, 28.2304, 0.3734 ) }
    dend_47 { pt3dadd( 685.345, 656.618, 28.2209, 0.3338 ) }
    dend_47 { pt3dadd( 685.307, 656.103, 28.1355, 0.3 ) }
    dend_47 { pt3dadd( 685.448, 655.064, 27.975, 0.2746 ) }
    dend_47 { pt3dadd( 685.7, 653.977, 27.8662, 0.2746 ) }
    dend_47 { pt3dadd( 685.955, 652.892, 27.8055, 0.2746 ) }
    dend_47 { pt3dadd( 686.171, 651.815, 27.8531, 0.2746 ) }
    dend_47 { pt3dadd( 686.171, 650.673, 27.9266, 0.2746 ) }
    dend_47 { pt3dadd( 686.171, 649.529, 28.0218, 0.2746 ) }
    dend_47 { pt3dadd( 686.171, 648.385, 28.1302, 0.2746 ) }
    dend_47 { pt3dadd( 686.171, 647.241, 28.2414, 0.2746 ) }
    dend_47 { pt3dadd( 686.171, 646.097, 28.3598, 0.2746 ) }
    dend_47 { pt3dadd( 686.171, 644.953, 28.4892, 0.2746 ) }
    dend_47 { pt3dadd( 686.171, 643.849, 28.6832, 0.2746 ) }
    dend_47 { pt3dadd( 686.503, 642.987, 29.0514, 0.2746 ) }
    dend_47 { pt3dadd( 686.28, 641.89, 29.4482, 0.2746 ) }
    dend_47 { pt3dadd( 685.81, 640.868, 29.7783, 0.2746 ) }
    dend_47 { pt3dadd( 685.105, 640.015, 30.0874, 0.2746 ) }
    dend_47 { pt3dadd( 684.57, 639.276, 30.3279, 0.2746 ) }
    dend_47 { pt3dadd( 684.291, 638.264, 30.5217, 0.2746 ) }
    dend_47 { pt3dadd( 684.026, 637.299, 30.7726, 0.2746 ) }
    dend_47 { pt3dadd( 684.113, 636.161, 30.9854, 0.2746 ) }
    dend_47 { pt3dadd( 684.201, 635.022, 31.1646, 0.2746 ) }
    dend_47 { pt3dadd( 684.288, 633.883, 31.3009, 0.2746 ) }
    dend_47 { pt3dadd( 684.376, 632.744, 31.3978, 0.2746 ) }
    dend_47 { pt3dadd( 684.409, 631.618, 31.4454, 0.2746 ) }
    dend_47 { pt3dadd( 683.876, 630.629, 31.3942, 0.2746 ) }
    dend_47 { pt3dadd( 683.28, 629.73, 31.2306, 0.2746 ) }
    dend_47 { pt3dadd( 682.847, 628.785, 30.97, 0.2746 ) }
    dend_47 { pt3dadd( 682.004, 628.17, 30.8599, 0.2746 ) }
    dend_47 { pt3dadd( 680.998, 627.954, 30.9364, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_47 { pt3dadd( 680.356, 627.497, 30.9792, 0.2746 ) }
    dend_47 { pt3dadd( 679.47, 626.807, 30.9837, 0.2746 ) }
    dend_47 { pt3dadd( 678.828, 626.054, 30.9532, 0.2748 ) }
    dend_47 { pt3dadd( 678.607, 625.425, 30.9151, 0.275 ) }
    dend_47 { pt3dadd( 678.033, 624.854, 30.8594, 0.2754 ) }
    dend_47 { pt3dadd( 677.948, 623.947, 30.9789, 0.2762 ) }
    dend_47 { pt3dadd( 677.505, 623.035, 31.253, 0.2776 ) }
    dend_47 { pt3dadd( 677.594, 622.406, 31.7649, 0.2802 ) }
    dend_47 { pt3dadd( 676.861, 621.655, 32.2008, 0.285 ) }
    dend_47 { pt3dadd( 676.156, 621.192, 32.3336, 0.2938 ) }
    dend_47 { pt3dadd( 675.58, 620.605, 32.5816, 0.3112 ) }
    dend_47 { pt3dadd( 674.931, 620.022, 32.6967, 0.3382 ) }
    dend_47 { pt3dadd( 674.469, 619.227, 32.5839, 0.413 ) }
    dend_47 { pt3dadd( 674.032, 618.369, 32.5203, 0.4328 ) }
    dend_47 { pt3dadd( 673.529, 617.746, 32.5926, 0.3594 ) }
    dend_47 { pt3dadd( 673.223, 616.776, 32.524, 0.3002 ) }
    dend_47 { pt3dadd( 672.631, 616.132, 32.5293, 0.275 ) }
    dend_47 { pt3dadd( 671.911, 615.351, 32.4279, 0.2752 ) }
    dend_47 { pt3dadd( 671.252, 614.69, 32.2969, 0.276 ) }
    dend_47 { pt3dadd( 670.842, 613.918, 32.2552, 0.2772 ) }
    dend_47 { pt3dadd( 670.918, 613.222, 32.0575, 0.2792 ) }
    dend_47 { pt3dadd( 670.132, 612.478, 31.7766, 0.2832 ) }
    dend_47 { pt3dadd( 669.296, 611.794, 31.3208, 0.2908 ) }
    dend_47 { pt3dadd( 668.461, 611.11, 30.7558, 0.3046 ) }
    dend_47 { pt3dadd( 667.626, 610.426, 30.1106, 0.3308 ) }
    dend_47 { pt3dadd( 667.36, 609.715, 29.3373, 0.3754 ) }
    dend_47 { pt3dadd( 667.066, 609.051, 28.7672, 0.4778 ) }
    dend_47 { pt3dadd( 666.723, 608.329, 28.3522, 0.5732 ) }
    dend_47 { pt3dadd( 666.41, 607.478, 28.0571, 0.5212 ) }
    dend_47 { pt3dadd( 665.795, 607.02, 27.6944, 0.3916 ) }
    dend_47 { pt3dadd( 665.331, 606.216, 27.596, 0.3126 ) }
    dend_47 { pt3dadd( 664.777, 605.746, 27.503, 0.299 ) }
    dend_47 { pt3dadd( 664.438, 605.143, 27.6285, 0.3144 ) }
    dend_47 { pt3dadd( 663.525, 604.716, 27.8294, 0.374 ) }
    dend_47 { pt3dadd( 662.646, 604.015, 27.9642, 0.335 ) }
    dend_47 { pt3dadd( 661.938, 603.807, 27.9223, 0.3022 ) }
    dend_47 { pt3dadd( 660.924, 603.7, 27.9591, 0.2786 ) }
    dend_47 { pt3dadd( 660.232, 604.123, 28.1168, 0.282 ) }
    dend_47 { pt3dadd( 659.402, 604.261, 28.0294, 0.288 ) }
    dend_47 { pt3dadd( 658.634, 604.375, 28.0269, 0.3006 ) }
    dend_47 { pt3dadd( 657.754, 604.213, 28.1492, 0.3178 ) }
    dend_47 { pt3dadd( 656.689, 603.991, 28.1117, 0.3802 ) }
    dend_47 { pt3dadd( 656.233, 603.534, 27.7965, 0.3464 ) }
    dend_47 { pt3dadd( 655.367, 603.971, 27.382, 0.323 ) }
    dend_47 { pt3dadd( 654.661, 603.994, 27.1234, 0.318 ) }
    dend_47 { pt3dadd( 653.826, 603.969, 26.8158, 0.3508 ) }
    dend_47 { pt3dadd( 652.71, 603.936, 26.4751, 0.436 ) }
    dend_47 { pt3dadd( 651.758, 603.892, 26.1969, 0.4766 ) }
    dend_47 { pt3dadd( 650.879, 603.574, 26.1412, 0.436 ) }
    dend_47 { pt3dadd( 650.044, 603.91, 25.9014, 0.4636 ) }
    dend_47 { pt3dadd( 649.205, 604.038, 25.7473, 0.4742 ) }
    dend_47 { pt3dadd( 648.419, 604.432, 25.6771, 0.4618 ) }
    dend_47 { pt3dadd( 647.623, 604.419, 25.4105, 0.3662 ) }
    dend_47 { pt3dadd( 647.368, 605.469, 25.1865, 0.3124 ) }
    dend_47 { pt3dadd( 646.703, 605.253, 25.1836, 0.2988 ) }
    dend_47 { pt3dadd( 646.838, 606.288, 25.2793, 0.3142 ) }
    dend_47 { pt3dadd( 646.924, 607.135, 25.2832, 0.3736 ) }
    dend_47 { pt3dadd( 646.852, 607.902, 25.1766, 0.3342 ) }
    dend_47 { pt3dadd( 646.013, 607.811, 25.2724, 0.3006 ) }
    dend_47 { pt3dadd( 645.325, 608.315, 25.5224, 0.2758 ) }
    dend_47 { pt3dadd( 644.657, 608.48, 25.6299, 0.2768 ) }
    dend_47 { pt3dadd( 643.975, 608.765, 25.6376, 0.2786 ) }
    dend_47 { pt3dadd( 643.271, 609.429, 25.6176, 0.282 ) }
    dend_47 { pt3dadd( 642.941, 610.343, 25.6539, 0.2886 ) }
    dend_47 { pt3dadd( 642.331, 611.311, 25.6798, 0.3 ) }
    dend_47 { pt3dadd( 641.72, 612.279, 25.7198, 0.324 ) }
    dend_47 { pt3dadd( 641.11, 613.246, 25.7933, 0.3556 ) }
    dend_47 { pt3dadd( 640.5, 614.214, 25.8804, 0.476 ) }
    dend_47 { pt3dadd( 639.787, 614.557, 25.9665, 0.4 ) }
    dend_47 { pt3dadd( 639.724, 615.057, 26.3273, 0.3378 ) }
    dend_47 { pt3dadd( 639.61, 615.859, 26.4436, 0.2988 ) }
    dend_47 { pt3dadd( 639.684, 616.369, 26.2152, 0.3142 ) }
    dend_47 { pt3dadd( 639.838, 617.255, 26.1598, 0.3736 ) }
    dend_47 { pt3dadd( 639.545, 618.107, 26.1826, 0.3342 ) }
    dend_47 { pt3dadd( 638.853, 618.799, 26.2012, 0.3006 ) }
    dend_47 { pt3dadd( 638.106, 619.462, 26.3282, 0.2758 ) }
    dend_47 { pt3dadd( 637.17, 619.959, 26.6106, 0.2768 ) }
    dend_47 { pt3dadd( 636.958, 620.461, 26.815, 0.2786 ) }
    dend_47 { pt3dadd( 637.05, 620.77, 27.2718, 0.2822 ) }
    dend_47 { pt3dadd( 636.256, 620.96, 27.7682, 0.2888 ) }
    dend_47 { pt3dadd( 635.435, 621.281, 28.2601, 0.3006 ) }
    dend_47 { pt3dadd( 635.044, 621.687, 28.9083, 0.3236 ) }
    dend_47 { pt3dadd( 634.695, 622.44, 29.3306, 0.3624 ) }
    dend_47 { pt3dadd( 634.234, 623.253, 29.4571, 0.4526 ) }
    dend_47 { pt3dadd( 633.877, 624.182, 29.549, 0.5316 ) }
    dend_47 { pt3dadd( 633.141, 625.058, 29.6024, 0.4186 ) }
    dend_47 { pt3dadd( 632.406, 625.934, 29.6369, 0.3254 ) }
    dend_47 { pt3dadd( 631.67, 626.809, 29.6654, 0.2746 ) }
    dend_47 { pt3dadd( 630.933, 627.684, 29.7312, 0.2746 ) }
    dend_47 { pt3dadd( 630.198, 628.559, 29.8175, 0.2748 ) }
    dend_47 { pt3dadd( 629.462, 629.435, 29.8925, 0.2748 ) }
    dend_47 { pt3dadd( 628.726, 630.31, 29.9589, 0.2752 ) }
    dend_47 { pt3dadd( 627.991, 631.185, 30.009, 0.2756 ) }
    dend_47 { pt3dadd( 627.255, 632.06, 30.0437, 0.2766 ) }
    dend_47 { pt3dadd( 627.255, 632.335, 30.0577, 0.2782 ) }
    dend_47 { pt3dadd( 626.556, 633.101, 30.1451, 0.2814 ) }
    dend_47 { pt3dadd( 626.266, 633.674, 29.972, 0.287 ) }
    dend_47 { pt3dadd( 625.959, 634.52, 29.6719, 0.2988 ) }
    dend_47 { pt3dadd( 625.321, 635.135, 29.6629, 0.3142 ) }
    dend_47 { pt3dadd( 624.67, 635.542, 29.951, 0.3736 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_47 { pt3dadd( 624.07, 636.073, 30.3204, 0.3342 ) }
    dend_47 { pt3dadd( 623.39, 635.989, 30.9831, 0.3006 ) }
    dend_47 { pt3dadd( 622.393, 636.257, 31.6148, 0.2756 ) }
    dend_47 { pt3dadd( 621.632, 636.917, 32.1168, 0.2766 ) }
    dend_47 { pt3dadd( 621.12, 637.82, 32.396, 0.2782 ) }
    dend_47 { pt3dadd( 621.059, 638.688, 32.7032, 0.2814 ) }
    dend_47 { pt3dadd( 620.536, 639.168, 32.7858, 0.2872 ) }
    dend_47 { pt3dadd( 620.162, 639.796, 32.6038, 0.2976 ) }
    dend_47 { pt3dadd( 619.846, 640.64, 32.4649, 0.3182 ) }
    dend_47 { pt3dadd( 619.821, 641.389, 32.629, 0.3512 ) }
    dend_47 { pt3dadd( 619.566, 642.146, 32.6466, 0.4378 ) }
    dend_47 { pt3dadd( 619.476, 643.135, 32.7398, 0.4746 ) }
    dend_47 { pt3dadd( 618.925, 643.947, 32.8392, 0.4576 ) }
    dend_47 { pt3dadd( 618.867, 644.797, 32.9347, 0.3814 ) }
    dend_47 { pt3dadd( 618.904, 645.902, 33.04, 0.2288 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 15/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 585.27, 597.168, 48.1079, 0.3556 ) }
    dend_44 { pt3dadd( 584.557, 596.842, 47.9562, 0.2288 ) }
    dend_44 { pt3dadd( 583.517, 596.367, 47.7683, 0.324 ) }
    dend_44 { pt3dadd( 582.817, 596.024, 47.628, 0.363 ) }
    dend_44 { pt3dadd( 582.086, 595.499, 47.4802, 0.4536 ) }
    dend_44 { pt3dadd( 581.419, 595.211, 47.4312, 0.5336 ) }
    dend_44 { pt3dadd( 580.81, 594.589, 47.2262, 0.4222 ) }
    dend_44 { pt3dadd( 580.014, 594.324, 47.108, 0.332 ) }
    dend_44 { pt3dadd( 579.266, 593.868, 47.0243, 0.2868 ) }
    dend_44 { pt3dadd( 578.299, 593.447, 46.9557, 0.2972 ) }
    dend_44 { pt3dadd( 577.656, 592.924, 46.8303, 0.3174 ) }
    dend_44 { pt3dadd( 577.028, 592.091, 46.6948, 0.3498 ) }
    dend_44 { pt3dadd( 576.407, 591.316, 46.4836, 0.4354 ) }
    dend_44 { pt3dadd( 575.473, 591.185, 46.1944, 0.4688 ) }
    dend_44 { pt3dadd( 574.739, 591.078, 45.9007, 0.452 ) }
    dend_44 { pt3dadd( 574.027, 590.876, 45.6529, 0.3474 ) }
    dend_44 { pt3dadd( 572.967, 590.762, 45.4168, 0.2796 ) }
    dend_44 { pt3dadd( 571.836, 590.647, 45.2822, 0.2288 ) }
    dend_44 { pt3dadd( 570.742, 590.647, 45.08, 0.2288 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 34/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 585.27, 597.168, 48.1079, 0.3556 ) }
    dend_41 { pt3dadd( 584.755, 596.872, 48.3832, 0.4044 ) }
    dend_41 { pt3dadd( 584.519, 596.128, 48.7841, 0.3862 ) }
    dend_41 { pt3dadd( 584.264, 595.134, 49.154, 0.4222 ) }
    dend_41 { pt3dadd( 583.862, 594.109, 49.4035, 0.3782 ) }
    dend_41 { pt3dadd( 583.322, 593.302, 49.5883, 0.3778 ) }
    dend_41 { pt3dadd( 582.575, 592.771, 49.7846, 0.4402 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 41/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 615.38, 622.859, 40.4205, 0.564 ) }
    dend_35 { pt3dadd( 614.493, 621.904, 40.7019, 0.735 ) }
    dend_35 { pt3dadd( 613.677, 621.229, 40.8425, 0.7514 ) }
    dend_35 { pt3dadd( 613.505, 620.228, 40.9926, 0.7006 ) }
    dend_35 { pt3dadd( 613.141, 619.276, 41.102, 0.5424 ) }
    dend_35 { pt3dadd( 613.106, 618.426, 41.0749, 0.5598 ) }
    dend_35 { pt3dadd( 612.854, 617.373, 40.9749, 0.457 ) }
    dend_35 { pt3dadd( 612.46, 616.539, 41.0166, 0.464 ) }
    dend_35 { pt3dadd( 611.938, 615.459, 41.0452, 0.433 ) }
    dend_35 { pt3dadd( 612.261, 615.268, 41.0491, 0.3596 ) }
    dend_35 { pt3dadd( 612.053, 614.557, 41.083, 0.3008 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 52/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 615.38, 622.859, 40.4205, 0.564 ) }
    dend_32 { pt3dadd( 615.751, 622.131, 38.5798, 0.6864 ) }
    dend_32 { pt3dadd( 616.211, 621.144, 37.669, 0.7334 ) }
    dend_32 { pt3dadd( 616.544, 620.065, 37.3164, 0.665 ) }
    dend_32 { pt3dadd( 617.336, 619.299, 36.9432, 0.488 ) }
    dend_32 { pt3dadd( 618.256, 618.72, 36.472, 0.4028 ) }
    dend_32 { pt3dadd( 619.117, 618.053, 35.9324, 0.4378 ) }
    dend_32 { pt3dadd( 619.362, 617.111, 35.4136, 0.4812 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 60/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 646.906, 636.549, 27.2114, 0.463 ) }
    dend_22 { pt3dadd( 646.898, 635.856, 26.7086, 0.4454 ) }
    dend_22 { pt3dadd( 646.732, 634.788, 26.2251, 0.5438 ) }
    dend_22 { pt3dadd( 646.454, 633.695, 25.9176, 0.5462 ) }
    dend_22 { pt3dadd( 646.218, 632.614, 25.807, 0.5104 ) }
    dend_22 { pt3dadd( 645.97, 631.547, 25.754, 0.4098 ) }
    dend_22 { pt3dadd( 646.394, 630.527, 25.6716, 0.3892 ) }
    dend_22 { pt3dadd( 647.045, 629.613, 25.5126, 0.461 ) }
    dend_22 { pt3dadd( 647.31, 628.546, 25.3168, 0.5174 ) }
    dend_22 { pt3dadd( 647.113, 627.451, 25.0773, 0.5378 ) }
    dend_22 { pt3dadd( 646.728, 626.42, 24.7255, 0.527 ) }
    dend_22 { pt3dadd( 646.481, 625.43, 24.2551, 0.5146 ) }
    dend_22 { pt3dadd( 646.464, 624.332, 23.7811, 0.4532 ) }
    dend_22 { pt3dadd( 646.414, 623.249, 23.5451, 0.5262 ) }
    dend_22 { pt3dadd( 646.104, 622.168, 23.4377, 0.4408 ) }
    dend_22 { pt3dadd( 645.688, 621.104, 23.3404, 0.439 ) }
    dend_22 { pt3dadd( 645.651, 620.016, 23.1483, 0.3624 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 77/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 646.906, 636.549, 27.2114, 0.463 ) }
    dend_19 { pt3dadd( 647.4, 636.379, 26.8713, 0.2288 ) }
    dend_19 { pt3dadd( 648.253, 635.936, 27.8192, 0.396 ) }
    dend_19 { pt3dadd( 648.969, 635.06, 28.1842, 0.377 ) }
    dend_19 { pt3dadd( 649.428, 634.012, 28.4995, 0.3744 ) }
    dend_19 { pt3dadd( 649.944, 632.992, 28.7773, 0.4402 ) }
    dend_19 { pt3dadd( 650.549, 632.03, 29.048, 0.447 ) }
    dend_19 { pt3dadd( 651.061, 631.05, 29.365, 0.5614 ) }
    dend_19 { pt3dadd( 651.855, 630.239, 29.6495, 0.5084 ) }
    dend_19 { pt3dadd( 652.777, 629.572, 29.9186, 0.5534 ) }
    dend_19 { pt3dadd( 653.614, 628.845, 30.2431, 0.6274 ) }
    dend_19 { pt3dadd( 654.37, 628.053, 30.588, 0.5814 ) }
    dend_19 { pt3dadd( 654.929, 627.057, 30.8232, 0.6998 ) }
    dend_19 { pt3dadd( 655.517, 626.091, 30.9403, 0.6168 ) }
    dend_19 { pt3dadd( 656.222, 625.19, 31.0212, 0.559 ) }
    dend_19 { pt3dadd( 656.964, 624.325, 31.0811, 0.4414 ) }
    dend_19 { pt3dadd( 657.798, 623.583, 31.1716, 0.5034 ) }
    dend_19 { pt3dadd( 658.482, 622.765, 31.3636, 0.4036 ) }
    dend_19 { pt3dadd( 659.134, 621.922, 31.4905, 0.3446 ) }
    dend_19 { pt3dadd( 659.991, 621.346, 31.3925, 0.3112 ) }
    dend_19 { pt3dadd( 660.509, 620.368, 31.2516, 0.3382 ) }
    dend_19 { pt3dadd( 660.763, 619.255, 31.1144, 0.413 ) }
    dend_19 { pt3dadd( 661.09, 618.16, 30.9932, 0.4328 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 661.545, 617.112, 30.9014, 0.3594 ) }
    dend_19 { pt3dadd( 662.209, 616.186, 30.8608, 0.3002 ) }
    dend_19 { pt3dadd( 663.023, 615.385, 30.8686, 0.275 ) }
    dend_19 { pt3dadd( 663.931, 614.69, 30.8955, 0.2754 ) }
    dend_19 { pt3dadd( 664.822, 613.973, 30.9369, 0.276 ) }
    dend_19 { pt3dadd( 665.74, 613.303, 30.9795, 0.2772 ) }
    dend_19 { pt3dadd( 666.735, 612.744, 31.0262, 0.2792 ) }
    dend_19 { pt3dadd( 667.631, 612.098, 31.1732, 0.2834 ) }
    dend_19 { pt3dadd( 668.478, 611.39, 31.4423, 0.2906 ) }
    dend_19 { pt3dadd( 669.359, 610.682, 31.738, 0.3054 ) }
    dend_19 { pt3dadd( 670.179, 609.888, 32.0102, 0.3266 ) }
    dend_19 { pt3dadd( 670.88, 608.99, 32.279, 0.3964 ) }
    dend_19 { pt3dadd( 671.513, 608.073, 32.5982, 0.3774 ) }
    dend_19 { pt3dadd( 672.254, 607.22, 32.8992, 0.3764 ) }
    dend_19 { pt3dadd( 673.073, 606.423, 33.1559, 0.4364 ) }
    dend_19 { pt3dadd( 673.96, 605.716, 33.4191, 0.477 ) }
    dend_19 { pt3dadd( 674.953, 605.207, 33.7154, 0.437 ) }
    dend_19 { pt3dadd( 676.039, 604.874, 33.9738, 0.4654 ) }
    dend_19 { pt3dadd( 676.993, 604.271, 34.1796, 0.4774 ) }
    dend_19 { pt3dadd( 677.861, 603.526, 34.3577, 0.4678 ) }
    dend_19 { pt3dadd( 678.805, 602.886, 34.5204, 0.3768 ) }
    dend_19 { pt3dadd( 679.79, 602.305, 34.6704, 0.3336 ) }
    dend_19 { pt3dadd( 680.471, 601.524, 34.9726, 0.3312 ) }
    dend_19 { pt3dadd( 681.205, 600.677, 35.3125, 0.4064 ) }
    dend_19 { pt3dadd( 681.945, 599.852, 35.7199, 0.3896 ) }
    dend_19 { pt3dadd( 682.838, 599.156, 36.1183, 0.4298 ) }
    dend_19 { pt3dadd( 683.821, 598.576, 36.4591, 0.386 ) }
    dend_19 { pt3dadd( 684.685, 597.836, 36.7618, 0.422 ) }
    dend_19 { pt3dadd( 685.303, 596.932, 37.0941, 0.3776 ) }
    dend_19 { pt3dadd( 685.584, 595.86, 37.429, 0.3766 ) }
    dend_19 { pt3dadd( 685.714, 594.893, 37.6365, 0.438 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 31/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 557.972, 671.382, 27.0851, 0.4274 ) }
    dend_16 { pt3dadd( 556.722, 670.673, 27.2311, 0.2288 ) }
    dend_16 { pt3dadd( 555.812, 670.02, 27.4445, 0.374 ) }
    dend_16 { pt3dadd( 554.98, 669.599, 27.5194, 0.335 ) }
    dend_16 { pt3dadd( 553.909, 669.469, 27.6543, 0.302 ) }
    dend_16 { pt3dadd( 552.765, 669.469, 27.7526, 0.2782 ) }
    dend_16 { pt3dadd( 551.812, 669.15, 27.8184, 0.2814 ) }
    dend_16 { pt3dadd( 550.756, 668.894, 27.8065, 0.287 ) }
    dend_16 { pt3dadd( 549.679, 668.628, 27.8389, 0.2988 ) }
    dend_16 { pt3dadd( 548.602, 668.45, 27.7757, 0.3142 ) }
    dend_16 { pt3dadd( 547.502, 668.668, 27.6932, 0.3734 ) }
    dend_16 { pt3dadd( 546.57, 668.614, 27.7497, 0.3338 ) }
    dend_16 { pt3dadd( 545.551, 668.43, 27.8442, 0.3 ) }
    dend_16 { pt3dadd( 544.474, 668.091, 27.8811, 0.2746 ) }
    dend_16 { pt3dadd( 543.454, 667.606, 27.8661, 0.2746 ) }
    dend_16 { pt3dadd( 542.362, 667.264, 27.8615, 0.2746 ) }
    dend_16 { pt3dadd( 541.226, 667.181, 27.8581, 0.2746 ) }
    dend_16 { pt3dadd( 540.082, 667.19, 27.8543, 0.2748 ) }
    dend_16 { pt3dadd( 538.972, 667.39, 27.8573, 0.2748 ) }
    dend_16 { pt3dadd( 537.909, 667.745, 27.9108, 0.2752 ) }
    dend_16 { pt3dadd( 536.92, 668.296, 27.9899, 0.2756 ) }
    dend_16 { pt3dadd( 535.84, 668.595, 28.1459, 0.2766 ) }
    dend_16 { pt3dadd( 534.716, 668.555, 28.313, 0.2782 ) }
    dend_16 { pt3dadd( 533.602, 668.711, 28.49, 0.2814 ) }
    dend_16 { pt3dadd( 532.576, 669.128, 28.7277, 0.2872 ) }
    dend_16 { pt3dadd( 531.672, 669.559, 29.0242, 0.2988 ) }
    dend_16 { pt3dadd( 530.882, 669.917, 29.1295, 0.3144 ) }
    dend_16 { pt3dadd( 530.071, 670.383, 29.1743, 0.374 ) }
    dend_16 { pt3dadd( 529.221, 670.955, 29.1617, 0.335 ) }
    dend_16 { pt3dadd( 528.3, 671.615, 29.1768, 0.302 ) }
    dend_16 { pt3dadd( 527.255, 672.052, 29.1917, 0.2784 ) }
    dend_16 { pt3dadd( 526.18, 672.38, 29.2485, 0.2816 ) }
    dend_16 { pt3dadd( 525.114, 672.628, 29.344, 0.2874 ) }
    dend_16 { pt3dadd( 524.22, 673.028, 29.3292, 0.2994 ) }
    dend_16 { pt3dadd( 523.238, 673.362, 29.346, 0.3152 ) }
    dend_16 { pt3dadd( 522.676, 673.816, 29.5182, 0.3754 ) }
    dend_16 { pt3dadd( 522.077, 673.93, 29.5641, 0.3376 ) }
    dend_16 { pt3dadd( 521.039, 674.208, 29.645, 0.3068 ) }
    dend_16 { pt3dadd( 519.933, 674.449, 29.7388, 0.287 ) }
    dend_16 { pt3dadd( 519.143, 674.893, 29.9936, 0.2988 ) }
    dend_16 { pt3dadd( 518.186, 675.338, 30.1342, 0.3142 ) }
    dend_16 { pt3dadd( 517.194, 675.761, 30.2422, 0.3734 ) }
    dend_16 { pt3dadd( 516.49, 676.424, 30.4814, 0.334 ) }
    dend_16 { pt3dadd( 516.318, 677.273, 30.8162, 0.3002 ) }
    dend_16 { pt3dadd( 515.718, 678.01, 30.9848, 0.275 ) }
    dend_16 { pt3dadd( 514.878, 678.457, 30.9299, 0.2752 ) }
    dend_16 { pt3dadd( 514.425, 679.061, 31.0391, 0.2758 ) }
    dend_16 { pt3dadd( 513.82, 679.557, 30.8409, 0.277 ) }
    dend_16 { pt3dadd( 513.436, 680.222, 30.6785, 0.279 ) }
    dend_16 { pt3dadd( 512.94, 680.967, 30.6261, 0.2826 ) }
    dend_16 { pt3dadd( 512.32, 681.904, 30.613, 0.2894 ) }
    dend_16 { pt3dadd( 511.462, 682.596, 30.7278, 0.3032 ) }
    dend_16 { pt3dadd( 510.848, 683.41, 30.7779, 0.3224 ) }
    dend_16 { pt3dadd( 510.47, 684.043, 30.956, 0.3884 ) }
    dend_16 { pt3dadd( 509.843, 684.455, 31.2976, 0.3628 ) }
    dend_16 { pt3dadd( 509.201, 685.074, 31.4941, 0.3484 ) }
    dend_16 { pt3dadd( 508.457, 685.471, 31.5731, 0.3896 ) }
    dend_16 { pt3dadd( 507.779, 685.899, 31.6624, 0.365 ) }
    dend_16 { pt3dadd( 507.08, 686.771, 31.6694, 0.3522 ) }
    dend_16 { pt3dadd( 506.324, 687.454, 31.6168, 0.3968 ) }
    dend_16 { pt3dadd( 505.625, 687.917, 31.4905, 0.3782 ) }
    dend_16 { pt3dadd( 504.98, 688.712, 31.5081, 0.378 ) }
    dend_16 { pt3dadd( 504.148, 689.318, 31.535, 0.4404 ) }
    dend_16 { pt3dadd( 503.352, 690.07, 31.551, 0.4784 ) }
    dend_16 { pt3dadd( 502.907, 690.795, 31.612, 0.4694 ) }
    dend_16 { pt3dadd( 502.726, 691.229, 31.7758, 0.38 ) }
    dend_16 { pt3dadd( 501.785, 691.205, 31.8573, 0.3394 ) }
    dend_16 { pt3dadd( 501.349, 691.447, 32.1656, 0.3434 ) }
    dend_16 { pt3dadd( 500.526, 691.839, 32.244, 0.4224 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( 500.058, 692.699, 32.2129, 0.4498 ) }
    dend_16 { pt3dadd( 499.177, 692.833, 32.121, 0.3922 ) }
    dend_16 { pt3dadd( 498.384, 692.806, 32.1863, 0.3556 ) }
    dend_16 { pt3dadd( 497.545, 692.842, 32.0418, 0.4042 ) }
    dend_16 { pt3dadd( 496.829, 692.818, 32.0684, 0.3856 ) }
    dend_16 { pt3dadd( 495.75, 692.692, 32.1406, 0.4224 ) }
    dend_16 { pt3dadd( 494.692, 692.463, 32.1434, 0.3724 ) }
    dend_16 { pt3dadd( 493.629, 692.648, 32.0667, 0.397 ) }
    dend_16 { pt3dadd( 492.732, 692.349, 32.1247, 0.3304 ) }
    dend_16 { pt3dadd( 491.918, 692.878, 32.0712, 0.2938 ) }
    dend_16 { pt3dadd( 490.871, 692.819, 31.9575, 0.2626 ) }
    dend_16 { pt3dadd( 489.983, 692.921, 31.9262, 0.2542 ) }
    dend_16 { pt3dadd( 489.145, 693.145, 32.1656, 0.2288 ) }
    dend_16 { pt3dadd( 488.946, 693.722, 32.2, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 14/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 557.972, 671.382, 27.0851, 0.4274 ) }
    dend_11 { pt3dadd( 557.59, 670.68, 26.9986, 0.3416 ) }
    dend_11 { pt3dadd( 557.296, 669.621, 26.7849, 0.3058 ) }
    dend_11 { pt3dadd( 556.704, 668.687, 26.5414, 0.3268 ) }
    dend_11 { pt3dadd( 555.832, 667.958, 26.322, 0.3982 ) }
    dend_11 { pt3dadd( 554.942, 667.24, 26.1232, 0.3744 ) }
    dend_11 { pt3dadd( 554.127, 666.443, 25.9238, 0.4008 ) }
    dend_11 { pt3dadd( 553.447, 665.572, 25.6653, 0.3376 ) }
    dend_11 { pt3dadd( 552.836, 664.619, 25.4377, 0.3068 ) }
    dend_11 { pt3dadd( 552.026, 663.828, 25.2423, 0.287 ) }
    dend_11 { pt3dadd( 551.218, 663.09, 24.9925, 0.2976 ) }
    dend_11 { pt3dadd( 550.454, 662.287, 24.8748, 0.318 ) }
    dend_11 { pt3dadd( 549.698, 661.466, 24.9109, 0.3508 ) }
    dend_11 { pt3dadd( 548.851, 660.94, 24.9433, 0.4374 ) }
    dend_11 { pt3dadd( 548.144, 660.485, 24.9365, 0.4728 ) }
    dend_11 { pt3dadd( 547.465, 660.001, 25.0149, 0.4592 ) }
    dend_11 { pt3dadd( 546.596, 659.788, 25.0653, 0.361 ) }
    dend_11 { pt3dadd( 545.674, 659.709, 25.2412, 0.3032 ) }
    dend_11 { pt3dadd( 544.605, 659.36, 25.395, 0.2806 ) }
    dend_11 { pt3dadd( 543.859, 659.18, 25.4845, 0.2856 ) }
    dend_11 { pt3dadd( 543.111, 658.785, 25.6039, 0.295 ) }
    dend_11 { pt3dadd( 542.124, 658.599, 25.7381, 0.3132 ) }
    dend_11 { pt3dadd( 541.258, 658.33, 25.7263, 0.342 ) }
    dend_11 { pt3dadd( 540.597, 658.029, 25.6385, 0.42 ) }
    dend_11 { pt3dadd( 539.627, 657.699, 25.641, 0.4458 ) }
    dend_11 { pt3dadd( 538.643, 657.309, 25.6211, 0.3834 ) }
    dend_11 { pt3dadd( 537.531, 657.289, 25.5868, 0.3454 ) }
    dend_11 { pt3dadd( 536.453, 657.468, 25.4707, 0.3544 ) }
    dend_11 { pt3dadd( 535.508, 657.432, 25.5112, 0.444 ) }
    dend_11 { pt3dadd( 534.4, 657.457, 25.5664, 0.4848 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 597.216, 649.679, 21.3329, 0.4148 ) }
    dend_5 { pt3dadd( 596.384, 649.026, 20.8951, 0.3084 ) }
    dend_5 { pt3dadd( 595.436, 648.552, 20.4861, 0.2904 ) }
    dend_5 { pt3dadd( 594.35, 648.606, 20.1526, 0.3034 ) }
    dend_5 { pt3dadd( 593.243, 648.582, 19.8862, 0.3302 ) }
    dend_5 { pt3dadd( 592.287, 648.029, 19.6258, 0.3672 ) }
    dend_5 { pt3dadd( 591.558, 647.274, 19.2359, 0.4972 ) }
    dend_5 { pt3dadd( 591.006, 646.878, 18.5996, 0.4404 ) }
    dend_5 { pt3dadd( 590.067, 646.56, 17.9675, 0.4072 ) }
    dend_5 { pt3dadd( 589.012, 646.476, 17.5965, 0.4536 ) }
    dend_5 { pt3dadd( 587.894, 646.47, 17.3202, 0.4744 ) }
    dend_5 { pt3dadd( 586.752, 646.445, 17.1126, 0.6008 ) }
    dend_5 { pt3dadd( 585.628, 646.253, 16.9637, 0.6362 ) }
    dend_5 { pt3dadd( 584.64, 645.756, 16.785, 0.5236 ) }
    dend_5 { pt3dadd( 583.806, 644.995, 16.5825, 0.4942 ) }
    dend_5 { pt3dadd( 583.224, 644.021, 16.3885, 0.4838 ) }
    dend_5 { pt3dadd( 583.127, 642.901, 16.2299, 0.4794 ) }
    dend_5 { pt3dadd( 582.927, 641.777, 16.1027, 0.3996 ) }
    dend_5 { pt3dadd( 582.057, 641.084, 15.9966, 0.3706 ) }
    dend_5 { pt3dadd( 580.946, 640.909, 15.864, 0.4256 ) }
    dend_5 { pt3dadd( 579.879, 640.593, 15.6703, 0.457 ) }
    dend_5 { pt3dadd( 578.778, 640.288, 15.517, 0.3992 ) }
    dend_5 { pt3dadd( 577.912, 639.551, 15.4197, 0.3994 ) }
    dend_5 { pt3dadd( 577.436, 638.517, 15.3804, 0.335 ) }
    dend_5 { pt3dadd( 577.477, 637.377, 15.3962, 0.302 ) }
    dend_5 { pt3dadd( 577.751, 636.266, 15.4631, 0.2782 ) }
    dend_5 { pt3dadd( 577.538, 635.15, 15.5911, 0.2812 ) }
    dend_5 { pt3dadd( 577.115, 634.158, 15.8438, 0.2868 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 72/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 597.216, 649.679, 21.3329, 0.4148 ) }
    dend_2 { pt3dadd( 597.057, 648.488, 21.7356, 0.2288 ) }
    dend_2 { pt3dadd( 596.946, 647.396, 20.9976, 0.3384 ) }
    dend_2 { pt3dadd( 596.667, 646.359, 20.628, 0.4132 ) }
    dend_2 { pt3dadd( 596.355, 645.298, 20.3166, 0.4332 ) }
    dend_2 { pt3dadd( 596.176, 644.201, 20.0104, 0.36 ) }
    dend_2 { pt3dadd( 596.129, 643.072, 19.7051, 0.3014 ) }
    dend_2 { pt3dadd( 596.065, 641.93, 19.4444, 0.2772 ) }
    dend_2 { pt3dadd( 595.492, 641.111, 19.1143, 0.2794 ) }
    dend_2 { pt3dadd( 594.584, 640.461, 18.8158, 0.2834 ) }
    dend_2 { pt3dadd( 594.033, 639.493, 18.5732, 0.2912 ) }
    dend_2 { pt3dadd( 593.93, 638.367, 18.3796, 0.305 ) }
    dend_2 { pt3dadd( 594.199, 637.276, 18.1827, 0.3332 ) }
    dend_2 { pt3dadd( 594.483, 636.186, 17.9652, 0.3726 ) }
    dend_2 { pt3dadd( 593.919, 635.291, 17.8713, 0.5084 ) }
    dend_2 { pt3dadd( 593.547, 634.236, 17.7558, 0.4548 ) }
    dend_2 { pt3dadd( 593.908, 633.179, 17.7095, 0.4662 ) }
    dend_2 { pt3dadd( 594.146, 632.07, 17.6259, 0.406 ) }
    dend_2 { pt3dadd( 593.661, 631.046, 17.5258, 0.4602 ) }
    dend_2 { pt3dadd( 593.196, 630.001, 17.4481, 0.4428 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 92/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 582.575, 592.771, 49.7846, 0.4402 ) }
    dend_43 { pt3dadd( 582.548, 591.752, 47.9469, 0.2288 ) }
    dend_43 { pt3dadd( 582.485, 590.701, 46.6589, 0.3868 ) }
    dend_43 { pt3dadd( 582.219, 589.671, 46.1149, 0.3598 ) }
    dend_43 { pt3dadd( 582.352, 588.59, 45.5451, 0.3426 ) }
    dend_43 { pt3dadd( 582.66, 588.013, 44.8277, 0.3792 ) }
    dend_43 { pt3dadd( 583.237, 587.259, 44.1633, 0.3446 ) }
    dend_43 { pt3dadd( 583.912, 586.841, 43.6996, 0.3208 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_43 { pt3dadd( 584.484, 585.95, 43.5607, 0.3078 ) }
    dend_43 { pt3dadd( 584.918, 585.314, 43.4221, 0.3616 ) }
    dend_43 { pt3dadd( 585.265, 584.425, 43.4288, 0.3136 ) }
    dend_43 { pt3dadd( 585.648, 583.619, 43.5218, 0.2542 ) }
    dend_43 { pt3dadd( 586.186, 583.554, 44.24, 0.2288 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 5/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 582.575, 592.771, 49.7846, 0.4402 ) }
    dend_42 { pt3dadd( 581.821, 592.348, 50.2009, 0.478 ) }
    dend_42 { pt3dadd( 581.362, 591.768, 50.6848, 0.4686 ) }
    dend_42 { pt3dadd( 580.574, 590.984, 51.098, 0.3786 ) }
    dend_42 { pt3dadd( 579.786, 590.192, 51.45, 0.3366 ) }
    dend_42 { pt3dadd( 578.854, 589.663, 51.6365, 0.3384 ) }
    dend_42 { pt3dadd( 578.138, 588.955, 51.9252, 0.4132 ) }
    dend_42 { pt3dadd( 577.389, 588.164, 52.2262, 0.4334 ) }
    dend_42 { pt3dadd( 577.034, 587.437, 52.6445, 0.3604 ) }
    dend_42 { pt3dadd( 576.664, 586.863, 53.2106, 0.302 ) }
    dend_42 { pt3dadd( 576.579, 585.858, 53.615, 0.2782 ) }
    dend_42 { pt3dadd( 576.216, 585.351, 53.6376, 0.2814 ) }
    dend_42 { pt3dadd( 575.663, 584.43, 53.7485, 0.287 ) }
    dend_42 { pt3dadd( 575.224, 583.53, 53.9316, 0.2988 ) }
    dend_42 { pt3dadd( 574.668, 582.966, 53.8076, 0.3142 ) }
    dend_42 { pt3dadd( 574.044, 582.293, 54.3684, 0.3344 ) }
    dend_42 { pt3dadd( 573.459, 581.71, 54.7277, 0.301 ) }
    dend_42 { pt3dadd( 572.566, 581.087, 54.8962, 0.2766 ) }
    dend_42 { pt3dadd( 571.867, 580.549, 54.9357, 0.2782 ) }
    dend_42 { pt3dadd( 571.382, 579.852, 55.0992, 0.2814 ) }
    dend_42 { pt3dadd( 570.729, 579.004, 55.2426, 0.2872 ) }
    dend_42 { pt3dadd( 570.027, 578.142, 55.3193, 0.2988 ) }
    dend_42 { pt3dadd( 569.362, 577.651, 55.4585, 0.3144 ) }
    dend_42 { pt3dadd( 568.797, 577.149, 55.4322, 0.374 ) }
    dend_42 { pt3dadd( 568.273, 576.227, 55.505, 0.335 ) }
    dend_42 { pt3dadd( 567.434, 575.503, 55.5355, 0.302 ) }
    dend_42 { pt3dadd( 566.527, 574.888, 55.4949, 0.2782 ) }
    dend_42 { pt3dadd( 565.584, 574.274, 55.4898, 0.2814 ) }
    dend_42 { pt3dadd( 564.715, 573.647, 55.4557, 0.287 ) }
    dend_42 { pt3dadd( 563.958, 572.823, 55.5254, 0.2988 ) }
    dend_42 { pt3dadd( 563.354, 572.015, 55.8032, 0.3142 ) }
    dend_42 { pt3dadd( 562.874, 571.251, 56.0759, 0.3734 ) }
    dend_42 { pt3dadd( 562.866, 570.513, 56.3156, 0.3338 ) }
    dend_42 { pt3dadd( 563.661, 569.913, 56.7328, 0.3 ) }
    dend_42 { pt3dadd( 563.872, 568.86, 57.1886, 0.2746 ) }
    dend_42 { pt3dadd( 563.877, 567.72, 57.577, 0.2746 ) }
    dend_42 { pt3dadd( 563.683, 566.622, 57.9236, 0.2746 ) }
    dend_42 { pt3dadd( 563.441, 565.529, 58.3022, 0.2746 ) }
    dend_42 { pt3dadd( 563.318, 564.418, 58.6247, 0.2746 ) }
    dend_42 { pt3dadd( 562.956, 563.352, 58.9386, 0.2746 ) }
    dend_42 { pt3dadd( 562.619, 562.277, 59.1898, 0.2746 ) }
    dend_42 { pt3dadd( 562.283, 561.315, 59.5193, 0.2746 ) }
    dend_42 { pt3dadd( 562.047, 560.576, 60.0687, 0.2746 ) }
    dend_42 { pt3dadd( 561.361, 560.61, 60.4971, 0.2746 ) }
    dend_42 { pt3dadd( 561.83, 559.988, 61.0322, 0.2746 ) }
    dend_42 { pt3dadd( 561.789, 559.065, 61.6249, 0.2746 ) }
    dend_42 { pt3dadd( 561.704, 557.929, 62.0866, 0.2746 ) }
    dend_42 { pt3dadd( 561.704, 556.785, 62.4218, 0.2746 ) }
    dend_42 { pt3dadd( 561.194, 555.553, 62.7127, 0.2746 ) }
    dend_42 { pt3dadd( 560.76, 554.504, 62.9787, 0.2746 ) }
    dend_42 { pt3dadd( 560.327, 553.456, 63.2016, 0.2746 ) }
    dend_42 { pt3dadd( 560.102, 552.354, 63.3492, 0.2746 ) }
    dend_42 { pt3dadd( 560.102, 551.21, 63.4539, 0.2746 ) }
    dend_42 { pt3dadd( 560.102, 550.066, 63.5197, 0.2746 ) }
    dend_42 { pt3dadd( 560.102, 548.922, 63.5502, 0.2746 ) }
    dend_42 { pt3dadd( 559.878, 547.817, 63.56, 0.2746 ) }
    dend_42 { pt3dadd( 559.837, 546.679, 63.56, 0.2746 ) }
    dend_42 { pt3dadd( 559.544, 545.589, 63.56, 0.2746 ) }
    dend_42 { pt3dadd( 559.363, 544.459, 63.56, 0.2746 ) }
    dend_42 { pt3dadd( 559.107, 543.346, 63.56, 0.2746 ) }
    dend_42 { pt3dadd( 558.791, 542.246, 63.56, 0.2746 ) }
    dend_42 { pt3dadd( 558.304, 541.236, 63.56, 0.2744 ) }
    dend_42 { pt3dadd( 558.272, 540.095, 63.56, 0.2744 ) }
    dend_42 { pt3dadd( 557.797, 539.154, 63.56, 0.2742 ) }
    dend_42 { pt3dadd( 557.459, 538.093, 63.56, 0.274 ) }
    dend_42 { pt3dadd( 557.03, 537.093, 63.56, 0.2736 ) }
    dend_42 { pt3dadd( 556.752, 535.996, 63.56, 0.2728 ) }
    dend_42 { pt3dadd( 556.523, 534.876, 63.56, 0.2712 ) }
    dend_42 { pt3dadd( 555.812, 533.995, 63.56, 0.2684 ) }
    dend_42 { pt3dadd( 555.069, 533.416, 63.56, 0.2626 ) }
    dend_42 { pt3dadd( 554.554, 532.418, 63.56, 0.2542 ) }
    dend_42 { pt3dadd( 553.933, 531.484, 63.56, 0.2288 ) }
    dend_42 { pt3dadd( 553.81, 530.358, 63.56, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 612.053, 614.557, 41.083, 0.3008 ) }
    dend_39 { pt3dadd( 611.307, 614.417, 41.7214, 0.2288 ) }
    dend_39 { pt3dadd( 610.352, 614.24, 43.1094, 0.2764 ) }
    dend_39 { pt3dadd( 609.396, 614.061, 43.7394, 0.2778 ) }
    dend_39 { pt3dadd( 609.325, 613.122, 44.3383, 0.2806 ) }
    dend_39 { pt3dadd( 608.735, 612.927, 44.9607, 0.2858 ) }
    dend_39 { pt3dadd( 608.518, 611.939, 45.3194, 0.2956 ) }
    dend_39 { pt3dadd( 608.007, 611.351, 45.3519, 0.3132 ) }
    dend_39 { pt3dadd( 607.218, 611.092, 45.1634, 0.3478 ) }
    dend_39 { pt3dadd( 606.622, 610.904, 45.2124, 0.402 ) }
    dend_39 { pt3dadd( 605.759, 610.417, 46.139, 0.5912 ) }
    dend_39 { pt3dadd( 605.153, 609.965, 46.6536, 0.4444 ) }
    dend_39 { pt3dadd( 604.708, 609.018, 47.1058, 0.326 ) }
    dend_39 { pt3dadd( 603.967, 608.277, 47.5658, 0.2758 ) }
    dend_39 { pt3dadd( 603.16, 607.584, 47.9548, 0.2768 ) }
    dend_39 { pt3dadd( 602.774, 607.037, 48.3034, 0.2788 ) }
    dend_39 { pt3dadd( 602.43, 606.488, 48.6444, 0.2824 ) }
    dend_39 { pt3dadd( 601.696, 606.219, 48.935, 0.2894 ) }
    dend_39 { pt3dadd( 601.515, 605.295, 49.3231, 0.3014 ) }
    dend_39 { pt3dadd( 600.686, 604.762, 49.737, 0.3266 ) }
    dend_39 { pt3dadd( 599.786, 604.166, 50.1852, 0.3606 ) }
    dend_39 { pt3dadd( 598.854, 603.736, 50.5551, 0.485 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_39 { pt3dadd( 598.246, 603.324, 51.0605, 0.4176 ) }
    dend_39 { pt3dadd( 597.515, 602.565, 51.4623, 0.3656 ) }
    dend_39 { pt3dadd( 596.92, 601.696, 51.7706, 0.3744 ) }
    dend_39 { pt3dadd( 596.149, 600.909, 51.9924, 0.3358 ) }
    dend_39 { pt3dadd( 595.53, 600.257, 52.2239, 0.3036 ) }
    dend_39 { pt3dadd( 594.605, 599.895, 52.3404, 0.2814 ) }
    dend_39 { pt3dadd( 594.506, 599.342, 52.1058, 0.287 ) }
    dend_39 { pt3dadd( 594.307, 598.511, 51.8865, 0.2988 ) }
    dend_39 { pt3dadd( 593.531, 597.876, 51.9002, 0.3142 ) }
    dend_39 { pt3dadd( 592.554, 597.334, 51.9182, 0.3734 ) }
    dend_39 { pt3dadd( 592.148, 596.554, 52.0764, 0.334 ) }
    dend_39 { pt3dadd( 591.724, 595.73, 52.0372, 0.3 ) }
    dend_39 { pt3dadd( 591.448, 595.105, 52.2197, 0.2748 ) }
    dend_39 { pt3dadd( 591.319, 594.308, 52.3043, 0.2748 ) }
    dend_39 { pt3dadd( 590.609, 594.008, 52.5342, 0.2752 ) }
    dend_39 { pt3dadd( 590.072, 593.135, 52.7741, 0.2756 ) }
    dend_39 { pt3dadd( 589.301, 592.448, 53.0354, 0.2766 ) }
    dend_39 { pt3dadd( 588.469, 591.676, 53.3224, 0.2784 ) }
    dend_39 { pt3dadd( 587.881, 591.055, 53.7468, 0.2818 ) }
    dend_39 { pt3dadd( 587.282, 590.193, 54.1811, 0.2878 ) }
    dend_39 { pt3dadd( 586.33, 590.065, 54.6165, 0.3002 ) }
    dend_39 { pt3dadd( 585.738, 589.217, 54.9382, 0.3166 ) }
    dend_39 { pt3dadd( 585.214, 588.455, 55.0614, 0.3782 ) }
    dend_39 { pt3dadd( 584.5, 587.68, 55.1639, 0.3426 ) }
    dend_39 { pt3dadd( 583.783, 586.89, 55.3003, 0.316 ) }
    dend_39 { pt3dadd( 583.11, 586.118, 55.4439, 0.3056 ) }
    dend_39 { pt3dadd( 582.55, 585.522, 55.827, 0.3266 ) }
    dend_39 { pt3dadd( 582.313, 584.666, 56.0585, 0.3976 ) }
    dend_39 { pt3dadd( 581.715, 584.146, 56.3503, 0.3734 ) }
    dend_39 { pt3dadd( 580.88, 583.45, 56.6882, 0.3988 ) }
    dend_39 { pt3dadd( 580.049, 582.77, 57.1038, 0.3338 ) }
    dend_39 { pt3dadd( 579.182, 582.047, 57.4851, 0.3 ) }
    dend_39 { pt3dadd( 578.404, 581.211, 57.7864, 0.2746 ) }
    dend_39 { pt3dadd( 577.743, 580.596, 58.2061, 0.2746 ) }
    dend_39 { pt3dadd( 576.919, 580.042, 58.59, 0.2746 ) }
    dend_39 { pt3dadd( 576.497, 579.524, 58.814, 0.2746 ) }
    dend_39 { pt3dadd( 575.946, 579.137, 58.919, 0.2746 ) }
    dend_39 { pt3dadd( 575.104, 578.477, 59.0878, 0.2748 ) }
    dend_39 { pt3dadd( 574.105, 578.013, 59.159, 0.2748 ) }
    dend_39 { pt3dadd( 573.205, 577.521, 59.3597, 0.2752 ) }
    dend_39 { pt3dadd( 572.316, 576.81, 59.5616, 0.2756 ) }
    dend_39 { pt3dadd( 571.294, 576.365, 59.7797, 0.2766 ) }
    dend_39 { pt3dadd( 570.29, 576.308, 60.1762, 0.2782 ) }
    dend_39 { pt3dadd( 569.333, 576.42, 60.4772, 0.2814 ) }
    dend_39 { pt3dadd( 568.477, 576.752, 60.909, 0.287 ) }
    dend_39 { pt3dadd( 567.556, 577.385, 61.1876, 0.2988 ) }
    dend_39 { pt3dadd( 566.56, 577.307, 61.5608, 0.3142 ) }
    dend_39 { pt3dadd( 565.753, 576.82, 61.8097, 0.3734 ) }
    dend_39 { pt3dadd( 564.646, 576.69, 61.9184, 0.3338 ) }
    dend_39 { pt3dadd( 563.557, 576.467, 62.0452, 0.3 ) }
    dend_39 { pt3dadd( 562.428, 576.462, 62.2174, 0.2746 ) }
    dend_39 { pt3dadd( 561.383, 576.186, 62.4529, 0.2746 ) }
    dend_39 { pt3dadd( 560.449, 575.596, 62.7869, 0.2746 ) }
    dend_39 { pt3dadd( 559.531, 574.94, 63.1554, 0.2746 ) }
    dend_39 { pt3dadd( 558.623, 574.245, 63.5118, 0.2746 ) }
    dend_39 { pt3dadd( 557.519, 574.168, 63.8638, 0.2746 ) }
    dend_39 { pt3dadd( 556.402, 574.145, 64.2289, 0.2746 ) }
    dend_39 { pt3dadd( 555.547, 573.432, 64.664, 0.2746 ) }
    dend_39 { pt3dadd( 554.681, 572.912, 65.3106, 0.2746 ) }
    dend_39 { pt3dadd( 553.815, 572.391, 66.1226, 0.2746 ) }
    dend_39 { pt3dadd( 552.949, 571.871, 67.0435, 0.2746 ) }
    dend_39 { pt3dadd( 552.083, 571.35, 68.0142, 0.2746 ) }
    dend_39 { pt3dadd( 551.231, 570.8, 68.9688, 0.2746 ) }
    dend_39 { pt3dadd( 550.553, 569.878, 69.6976, 0.2746 ) }
    dend_39 { pt3dadd( 549.801, 569.041, 70.2484, 0.2746 ) }
    dend_39 { pt3dadd( 548.874, 568.396, 70.7123, 0.2746 ) }
    dend_39 { pt3dadd( 547.947, 567.753, 71.1147, 0.2746 ) }
    dend_39 { pt3dadd( 547.022, 567.11, 71.4778, 0.2746 ) }
    dend_39 { pt3dadd( 546.247, 566.304, 71.8147, 0.2746 ) }
    dend_39 { pt3dadd( 545.574, 565.397, 72.1342, 0.2746 ) }
    dend_39 { pt3dadd( 545.116, 564.365, 72.4066, 0.2746 ) }
    dend_39 { pt3dadd( 544.808, 563.272, 72.5897, 0.2746 ) }
    dend_39 { pt3dadd( 543.853, 562.848, 72.7028, 0.2746 ) }
    dend_39 { pt3dadd( 542.85, 562.418, 72.7647, 0.2746 ) }
    dend_39 { pt3dadd( 541.994, 561.675, 72.7922, 0.2746 ) }
    dend_39 { pt3dadd( 541.101, 560.968, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 540.312, 560.148, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 539.501, 559.372, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 538.591, 558.706, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 537.936, 557.782, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 537.201, 556.932, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 536.736, 555.889, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 536.147, 554.913, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 535.727, 553.905, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 535.017, 553.063, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 534.307, 552.173, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 533.389, 551.523, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 532.497, 550.82, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 531.669, 550.037, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 530.784, 549.463, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 529.79, 549.17, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 529.443, 548.154, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 528.935, 547.287, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 527.99, 546.69, 72.8, 0.2746 ) }
    dend_39 { pt3dadd( 527.47, 545.76, 72.7997, 0.2746 ) }
    dend_39 { pt3dadd( 526.711, 544.936, 72.7997, 0.2746 ) }
    dend_39 { pt3dadd( 526.393, 543.861, 72.7997, 0.2746 ) }
    dend_39 { pt3dadd( 525.643, 543.003, 72.7997, 0.2746 ) }
    dend_39 { pt3dadd( 525.221, 541.943, 72.7994, 0.2746 ) }
    dend_39 { pt3dadd( 524.7, 540.933, 72.7992, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_39 { pt3dadd( 523.947, 540.388, 72.7989, 0.2746 ) }
    dend_39 { pt3dadd( 523.753, 539.269, 72.7986, 0.2746 ) }
    dend_39 { pt3dadd( 522.81, 538.929, 72.798, 0.2746 ) }
    dend_39 { pt3dadd( 522.332, 537.989, 72.7972, 0.2746 ) }
    dend_39 { pt3dadd( 521.838, 536.997, 72.7961, 0.2746 ) }
    dend_39 { pt3dadd( 520.93, 536.343, 72.7944, 0.2746 ) }
    dend_39 { pt3dadd( 520.499, 535.333, 72.7922, 0.2746 ) }
    dend_39 { pt3dadd( 519.493, 534.821, 72.7891, 0.2746 ) }
    dend_39 { pt3dadd( 518.399, 534.504, 72.7846, 0.2746 ) }
    dend_39 { pt3dadd( 517.26, 534.452, 72.7784, 0.2744 ) }
    dend_39 { pt3dadd( 516.132, 534.262, 72.77, 0.2744 ) }
    dend_39 { pt3dadd( 515.057, 533.873, 72.758, 0.2742 ) }
    dend_39 { pt3dadd( 513.979, 533.562, 72.7401, 0.274 ) }
    dend_39 { pt3dadd( 512.835, 533.562, 72.7163, 0.2736 ) }
    dend_39 { pt3dadd( 511.691, 533.562, 72.6858, 0.2728 ) }
    dend_39 { pt3dadd( 510.547, 533.562, 72.6494, 0.2712 ) }
    dend_39 { pt3dadd( 509.413, 533.562, 72.5612, 0.2684 ) }
    dend_39 { pt3dadd( 508.279, 533.562, 72.4528, 0.2626 ) }
    dend_39 { pt3dadd( 507.135, 533.562, 72.3682, 0.2542 ) }
    dend_39 { pt3dadd( 505.991, 533.562, 72.3061, 0.2288 ) }
    dend_39 { pt3dadd( 504.847, 533.562, 72.24, 0.2288 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 21/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 612.053, 614.557, 41.083, 0.3008 ) }
    dend_36 { pt3dadd( 612.152, 614.28, 41.384, 0.276 ) }
    dend_36 { pt3dadd( 612.498, 613.6, 41.6878, 0.277 ) }
    dend_36 { pt3dadd( 612.122, 612.619, 41.8631, 0.2792 ) }
    dend_36 { pt3dadd( 612.04, 611.692, 41.7654, 0.2832 ) }
    dend_36 { pt3dadd( 612.232, 610.719, 41.5394, 0.2902 ) }
    dend_36 { pt3dadd( 612.154, 609.731, 41.4257, 0.3048 ) }
    dend_36 { pt3dadd( 612.095, 608.836, 41.5545, 0.3254 ) }
    dend_36 { pt3dadd( 612.291, 607.941, 41.6534, 0.3942 ) }
    dend_36 { pt3dadd( 612.324, 607.061, 41.5744, 0.3732 ) }
    dend_36 { pt3dadd( 612.725, 606.339, 41.4008, 0.3686 ) }
    dend_36 { pt3dadd( 612.501, 605.59, 41.4697, 0.4222 ) }
    dend_36 { pt3dadd( 612.31, 604.893, 41.7693, 0.4498 ) }
    dend_36 { pt3dadd( 612.232, 603.972, 42.023, 0.392 ) }
    dend_36 { pt3dadd( 612.097, 603.039, 42.0325, 0.3552 ) }
    dend_36 { pt3dadd( 612.294, 601.969, 41.9983, 0.4036 ) }
    dend_36 { pt3dadd( 612.211, 601.368, 42.1896, 0.3848 ) }
    dend_36 { pt3dadd( 612.04, 600.367, 42.2556, 0.4196 ) }
    dend_36 { pt3dadd( 612.154, 599.64, 42.0092, 0.3734 ) }
    dend_36 { pt3dadd( 612.11, 598.623, 41.9174, 0.3676 ) }
    dend_36 { pt3dadd( 611.826, 598.2, 42.1604, 0.4276 ) }
    dend_36 { pt3dadd( 611.393, 597.541, 42.5835, 0.4238 ) }
    dend_36 { pt3dadd( 611.803, 596.997, 42.7591, 0.5174 ) }
    dend_36 { pt3dadd( 611.517, 596.061, 42.8028, 0.4308 ) }
    dend_36 { pt3dadd( 611.346, 595.253, 42.6784, 0.39 ) }
    dend_36 { pt3dadd( 610.977, 594.571, 42.6997, 0.4194 ) }
    dend_36 { pt3dadd( 610.6, 593.712, 42.7092, 0.4212 ) }
    dend_36 { pt3dadd( 610.21, 592.687, 42.6132, 0.453 ) }
    dend_36 { pt3dadd( 609.992, 591.619, 42.5527, 0.6008 ) }
    dend_36 { pt3dadd( 609.554, 590.622, 42.5191, 0.6722 ) }
    dend_36 { pt3dadd( 609.23, 589.563, 42.579, 0.6458 ) }
    dend_36 { pt3dadd( 609.066, 588.603, 42.6972, 0.4514 ) }
    dend_36 { pt3dadd( 608.348, 587.882, 42.8019, 0.339 ) }
    dend_36 { pt3dadd( 607.692, 587.032, 43.057, 0.3008 ) }
    dend_36 { pt3dadd( 607.13, 586.205, 43.3317, 0.3178 ) }
    dend_36 { pt3dadd( 607.172, 585.391, 43.6478, 0.3804 ) }
    dend_36 { pt3dadd( 606.73, 584.801, 44.1101, 0.3468 ) }
    dend_36 { pt3dadd( 606.291, 583.851, 44.5096, 0.3236 ) }
    dend_36 { pt3dadd( 606.097, 582.774, 44.7516, 0.3192 ) }
    dend_36 { pt3dadd( 605.271, 582.104, 44.9305, 0.3532 ) }
    dend_36 { pt3dadd( 605.014, 581.235, 45.2245, 0.4416 ) }
    dend_36 { pt3dadd( 604.363, 580.365, 45.4104, 0.4806 ) }
    dend_36 { pt3dadd( 603.951, 579.654, 45.715, 0.4732 ) }
    dend_36 { pt3dadd( 603.355, 578.841, 45.9768, 0.3882 ) }
    dend_36 { pt3dadd( 602.928, 577.872, 46.2274, 0.3484 ) }
    dend_36 { pt3dadd( 602.005, 577.282, 46.4806, 0.3896 ) }
    dend_36 { pt3dadd( 601.114, 576.805, 46.7446, 0.365 ) }
    dend_36 { pt3dadd( 600.275, 576.044, 46.9272, 0.352 ) }
    dend_36 { pt3dadd( 599.342, 575.411, 47.0949, 0.3976 ) }
    dend_36 { pt3dadd( 598.518, 574.778, 47.3458, 0.3736 ) }
    dend_36 { pt3dadd( 597.927, 574.174, 47.4583, 0.3992 ) }
    dend_36 { pt3dadd( 596.94, 573.949, 47.5745, 0.3344 ) }
    dend_36 { pt3dadd( 595.917, 573.667, 47.6616, 0.301 ) }
    dend_36 { pt3dadd( 595.081, 572.938, 47.7772, 0.2766 ) }
    dend_36 { pt3dadd( 594.112, 572.54, 47.887, 0.2782 ) }
    dend_36 { pt3dadd( 593.147, 572.002, 47.9161, 0.2816 ) }
    dend_36 { pt3dadd( 592.408, 571.191, 47.9517, 0.2872 ) }
    dend_36 { pt3dadd( 591.674, 570.461, 48.1099, 0.2992 ) }
    dend_36 { pt3dadd( 590.902, 569.726, 48.2465, 0.3148 ) }
    dend_36 { pt3dadd( 590.479, 568.864, 48.4266, 0.3748 ) }
    dend_36 { pt3dadd( 589.915, 567.964, 48.6147, 0.3364 ) }
    dend_36 { pt3dadd( 589.424, 566.977, 48.8076, 0.3048 ) }
    dend_36 { pt3dadd( 588.768, 566.536, 48.7651, 0.2836 ) }
    dend_36 { pt3dadd( 588.601, 565.937, 48.9154, 0.2912 ) }
    dend_36 { pt3dadd( 588.414, 565.294, 49.1747, 0.3054 ) }
    dend_36 { pt3dadd( 587.95, 564.793, 49.2341, 0.3324 ) }
    dend_36 { pt3dadd( 587.834, 564.454, 49.0694, 0.3786 ) }
    dend_36 { pt3dadd( 587.362, 563.629, 49.1114, 0.4836 ) }
    dend_36 { pt3dadd( 586.888, 563.148, 49.3903, 0.5836 ) }
    dend_36 { pt3dadd( 586.036, 562.608, 49.4813, 0.5416 ) }
    dend_36 { pt3dadd( 585.205, 561.966, 49.6059, 0.4242 ) }
    dend_36 { pt3dadd( 584.279, 561.323, 49.7442, 0.3988 ) }
    dend_36 { pt3dadd( 584.113, 560.927, 49.8627, 0.334 ) }
    dend_36 { pt3dadd( 583.669, 559.874, 49.933, 0.3002 ) }
    dend_36 { pt3dadd( 583.225, 558.82, 49.9817, 0.2748 ) }
    dend_36 { pt3dadd( 582.781, 557.766, 50.043, 0.2752 ) }
    dend_36 { pt3dadd( 582.437, 556.796, 50.0626, 0.2756 ) }
    dend_36 { pt3dadd( 582.199, 555.874, 50.1318, 0.2766 ) }
    dend_36 { pt3dadd( 581.953, 555.053, 50.1642, 0.2782 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_36 { pt3dadd( 581.98, 554.244, 50.188, 0.2814 ) }
    dend_36 { pt3dadd( 581.424, 553.289, 50.1273, 0.287 ) }
    dend_36 { pt3dadd( 581.003, 552.234, 50.0618, 0.2988 ) }
    dend_36 { pt3dadd( 580.823, 551.113, 50.008, 0.3142 ) }
    dend_36 { pt3dadd( 580.716, 550.176, 50.0436, 0.3734 ) }
    dend_36 { pt3dadd( 580.511, 549.062, 50.0332, 0.3338 ) }
    dend_36 { pt3dadd( 580.285, 547.946, 49.9923, 0.3 ) }
    dend_36 { pt3dadd( 580.008, 546.849, 49.9562, 0.2746 ) }
    dend_36 { pt3dadd( 580.008, 545.709, 49.9078, 0.2746 ) }
    dend_36 { pt3dadd( 579.539, 544.737, 49.814, 0.2746 ) }
    dend_36 { pt3dadd( 579.645, 543.791, 49.5317, 0.2746 ) }
    dend_36 { pt3dadd( 579.024, 543.052, 49.194, 0.2746 ) }
    dend_36 { pt3dadd( 578.183, 542.527, 48.907, 0.2746 ) }
    dend_36 { pt3dadd( 577.976, 541.436, 48.6346, 0.2746 ) }
    dend_36 { pt3dadd( 577.838, 540.321, 48.3568, 0.2746 ) }
    dend_36 { pt3dadd( 577.203, 539.446, 48.148, 0.2748 ) }
    dend_36 { pt3dadd( 576.75, 538.421, 47.9982, 0.2748 ) }
    dend_36 { pt3dadd( 576.486, 537.499, 47.8206, 0.2752 ) }
    dend_36 { pt3dadd( 576.441, 536.496, 47.598, 0.2758 ) }
    dend_36 { pt3dadd( 576.377, 535.478, 47.4404, 0.2768 ) }
    dend_36 { pt3dadd( 576.777, 534.624, 47.327, 0.2786 ) }
    dend_36 { pt3dadd( 576.692, 533.606, 47.1663, 0.282 ) }
    dend_36 { pt3dadd( 576.821, 532.589, 46.951, 0.2882 ) }
    dend_36 { pt3dadd( 576.805, 531.451, 46.7888, 0.3008 ) }
    dend_36 { pt3dadd( 576.651, 530.363, 46.6749, 0.318 ) }
    dend_36 { pt3dadd( 576.205, 529.428, 46.6626, 0.3806 ) }
    dend_36 { pt3dadd( 576.112, 528.379, 46.6088, 0.347 ) }
    dend_36 { pt3dadd( 576.014, 527.248, 46.5354, 0.3242 ) }
    dend_36 { pt3dadd( 575.896, 526.143, 46.5321, 0.3204 ) }
    dend_36 { pt3dadd( 576.156, 525.393, 46.3688, 0.3552 ) }
    dend_36 { pt3dadd( 575.811, 524.431, 46.2476, 0.4454 ) }
    dend_36 { pt3dadd( 575.807, 523.298, 46.1017, 0.4876 ) }
    dend_36 { pt3dadd( 575.724, 522.186, 45.9696, 0.4864 ) }
    dend_36 { pt3dadd( 575.005, 521.544, 45.9505, 0.4122 ) }
    dend_36 { pt3dadd( 574.609, 520.568, 45.7999, 0.395 ) }
    dend_36 { pt3dadd( 574.148, 519.55, 45.705, 0.4654 ) }
    dend_36 { pt3dadd( 573.738, 518.559, 45.64, 0.5566 ) }
    dend_36 { pt3dadd( 574.043, 517.623, 45.694, 0.4598 ) }
    dend_36 { pt3dadd( 573.602, 517.191, 45.46, 0.4272 ) }
    dend_36 { pt3dadd( 573.493, 516.375, 45.3639, 0.3392 ) }
    dend_36 { pt3dadd( 573.644, 515.792, 45.4462, 0.3098 ) }
    dend_36 { pt3dadd( 573.949, 514.893, 45.3695, 0.293 ) }
    dend_36 { pt3dadd( 573.958, 514.036, 45.2203, 0.3084 ) }
    dend_36 { pt3dadd( 573.977, 513.17, 45.232, 0.3392 ) }
    dend_36 { pt3dadd( 574.502, 512.511, 45.087, 0.385 ) }
    dend_36 { pt3dadd( 574.782, 511.614, 44.9658, 0.5248 ) }
    dend_36 { pt3dadd( 575.01, 510.592, 44.8804, 0.5174 ) }
    dend_36 { pt3dadd( 575.089, 509.703, 44.7628, 0.4262 ) }
    dend_36 { pt3dadd( 575.233, 508.779, 44.7549, 0.4026 ) }
    dend_36 { pt3dadd( 575.537, 508.034, 44.9582, 0.3408 ) }
    dend_36 { pt3dadd( 575.956, 507.387, 45.402, 0.3126 ) }
    dend_36 { pt3dadd( 576.409, 506.549, 45.8444, 0.2988 ) }
    dend_36 { pt3dadd( 576.841, 505.845, 46.3714, 0.3144 ) }
    dend_36 { pt3dadd( 577.344, 505.098, 46.5987, 0.374 ) }
    dend_36 { pt3dadd( 577.313, 504.229, 46.7009, 0.3348 ) }
    dend_36 { pt3dadd( 577.949, 503.398, 46.7701, 0.3018 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 56/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 619.362, 617.111, 35.4136, 0.4812 ) }
    dend_34 { pt3dadd( 619.121, 616.297, 34.8631, 0.4384 ) }
    dend_34 { pt3dadd( 618.381, 615.502, 34.4302, 0.4978 ) }
    dend_34 { pt3dadd( 617.64, 614.909, 34.1424, 0.3934 ) }
    dend_34 { pt3dadd( 617.743, 613.969, 33.7403, 0.326 ) }
    dend_34 { pt3dadd( 617.646, 613.054, 33.259, 0.2756 ) }
    dend_34 { pt3dadd( 617.243, 612.383, 32.8997, 0.2764 ) }
    dend_34 { pt3dadd( 617.325, 611.944, 32.2476, 0.2778 ) }
    dend_34 { pt3dadd( 616.975, 611.04, 31.6224, 0.2806 ) }
    dend_34 { pt3dadd( 616.685, 610.353, 31.2525, 0.2858 ) }
    dend_34 { pt3dadd( 617.074, 609.741, 30.7868, 0.2954 ) }
    dend_34 { pt3dadd( 617.963, 609.372, 30.3218, 0.314 ) }
    dend_34 { pt3dadd( 618.675, 608.735, 29.9216, 0.3436 ) }
    dend_34 { pt3dadd( 618.128, 608.298, 29.4521, 0.4228 ) }
    dend_34 { pt3dadd( 618.346, 607.496, 28.8476, 0.4506 ) }
    dend_34 { pt3dadd( 618.355, 606.517, 28.336, 0.3936 ) }
    dend_34 { pt3dadd( 617.542, 606.198, 27.662, 0.3582 ) }
    dend_34 { pt3dadd( 617.257, 605.438, 26.9624, 0.4092 ) }
    dend_34 { pt3dadd( 616.614, 604.558, 26.381, 0.3948 ) }
    dend_34 { pt3dadd( 616.832, 603.664, 25.9849, 0.4396 ) }
    dend_34 { pt3dadd( 616.683, 602.739, 25.2202, 0.4036 ) }
    dend_34 { pt3dadd( 616.956, 602.202, 24.3004, 0.4572 ) }
    dend_34 { pt3dadd( 617.666, 602.661, 23.4263, 0.4314 ) }
    dend_34 { pt3dadd( 618.517, 602.808, 22.6657, 0.5318 ) }
    dend_34 { pt3dadd( 619.04, 601.895, 22.1082, 0.4572 ) }
    dend_34 { pt3dadd( 619.827, 601.337, 21.8126, 0.4404 ) }
    dend_34 { pt3dadd( 620.803, 601.046, 21.5286, 0.505 ) }
    dend_34 { pt3dadd( 621.817, 600.896, 21.3772, 0.6184 ) }
    dend_34 { pt3dadd( 622.794, 600.846, 21.113, 0.6306 ) }
    dend_34 { pt3dadd( 623.912, 600.608, 20.8469, 0.4702 ) }
    dend_34 { pt3dadd( 624.956, 600.338, 20.4975, 0.376 ) }
    dend_34 { pt3dadd( 625.742, 599.807, 19.9834, 0.3578 ) }
    dend_34 { pt3dadd( 626.194, 598.852, 19.4459, 0.4802 ) }
    dend_34 { pt3dadd( 626.358, 597.758, 19.0157, 0.4076 ) }
    dend_34 { pt3dadd( 626.459, 596.667, 18.8288, 0.3532 ) }
    dend_34 { pt3dadd( 626.672, 595.581, 18.7631, 0.3208 ) }
    dend_34 { pt3dadd( 626.806, 594.485, 18.6475, 0.3858 ) }
    dend_34 { pt3dadd( 626.842, 593.38, 18.4934, 0.357 ) }
    dend_34 { pt3dadd( 626.973, 592.247, 18.37, 0.3424 ) }
    dend_34 { pt3dadd( 626.964, 591.122, 18.2416, 0.3554 ) }
    dend_34 { pt3dadd( 626.978, 590.003, 18.0745, 0.4146 ) }
    dend_34 { pt3dadd( 627.143, 588.898, 17.8453, 0.5822 ) }
    dend_34 { pt3dadd( 627.072, 587.788, 17.6031, 0.6118 ) }
    dend_34 { pt3dadd( 627.105, 586.675, 17.378, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_34 { pt3dadd( 627.25, 585.559, 17.1373, 0.5512 ) }
    dend_34 { pt3dadd( 627.327, 584.446, 16.9859, 0.6252 ) }
    dend_34 { pt3dadd( 627.711, 583.423, 16.9046, 0.5674 ) }
    dend_34 { pt3dadd( 628.411, 582.548, 16.7975, 0.722 ) }
    dend_34 { pt3dadd( 629.043, 581.614, 16.7145, 0.6528 ) }
    dend_34 { pt3dadd( 629.686, 580.681, 16.7095, 0.6502 ) }
    dend_34 { pt3dadd( 630.3, 579.748, 16.8038, 0.493 ) }
    dend_34 { pt3dadd( 630.798, 578.735, 16.9041, 0.4834 ) }
    dend_34 { pt3dadd( 631.232, 577.677, 16.9682, 0.47 ) }
    dend_34 { pt3dadd( 631.43, 576.56, 16.9956, 0.4242 ) }
    dend_34 { pt3dadd( 631.78, 575.504, 16.9295, 0.4406 ) }
    dend_34 { pt3dadd( 632.417, 574.587, 16.7735, 0.437 ) }
    dend_34 { pt3dadd( 632.931, 573.58, 16.6158, 0.3672 ) }
    dend_34 { pt3dadd( 632.972, 572.463, 16.4991, 0.3146 ) }
    dend_34 { pt3dadd( 632.833, 571.334, 16.4546, 0.3012 ) }
    dend_34 { pt3dadd( 632.927, 570.224, 16.5028, 0.326 ) }
    dend_34 { pt3dadd( 633.059, 569.114, 16.4877, 0.3594 ) }
    dend_34 { pt3dadd( 632.841, 568.018, 16.4001, 0.4832 ) }
    dend_34 { pt3dadd( 632.433, 566.953, 16.3004, 0.4132 ) }
    dend_34 { pt3dadd( 632.206, 565.836, 16.1951, 0.3634 ) }
    dend_34 { pt3dadd( 632.045, 564.705, 16.0704, 0.3408 ) }
    dend_34 { pt3dadd( 632.002, 563.582, 15.8847, 0.4176 ) }
    dend_34 { pt3dadd( 631.82, 562.482, 15.8086, 0.441 ) }
    dend_34 { pt3dadd( 631.609, 561.361, 15.739, 0.3756 ) }
    dend_34 { pt3dadd( 631.419, 560.274, 15.5711, 0.3248 ) }
    dend_34 { pt3dadd( 631.575, 559.149, 15.4202, 0.3474 ) }
    dend_34 { pt3dadd( 631.847, 558.05, 15.359, 0.2796 ) }
    dend_34 { pt3dadd( 632.289, 557.014, 15.12, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 28/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 619.362, 617.111, 35.4136, 0.4812 ) }
    dend_33 { pt3dadd( 620.291, 616.829, 35.744, 0.2288 ) }
    dend_33 { pt3dadd( 621.356, 616.505, 35.9388, 0.285 ) }
    dend_33 { pt3dadd( 622.422, 616.181, 36.0581, 0.294 ) }
    dend_33 { pt3dadd( 623.261, 615.678, 36.141, 0.3112 ) }
    dend_33 { pt3dadd( 623.925, 615.231, 35.9985, 0.3384 ) }
    dend_33 { pt3dadd( 624.654, 614.636, 35.6563, 0.4134 ) }
    dend_33 { pt3dadd( 625.367, 614.225, 35.1736, 0.4336 ) }
    dend_33 { pt3dadd( 626.214, 613.924, 34.5901, 0.3608 ) }
    dend_33 { pt3dadd( 627.11, 613.555, 34.0038, 0.3026 ) }
    dend_33 { pt3dadd( 627.856, 613.028, 33.4418, 0.2794 ) }
    dend_33 { pt3dadd( 628.514, 612.411, 33.07, 0.2836 ) }
    dend_33 { pt3dadd( 628.772, 612.154, 32.8353, 0.2912 ) }
    dend_33 { pt3dadd( 629.563, 611.737, 32.8675, 0.3064 ) }
    dend_33 { pt3dadd( 630.212, 611.331, 32.7186, 0.3282 ) }
    dend_33 { pt3dadd( 631.018, 611.218, 32.7421, 0.3996 ) }
    dend_33 { pt3dadd( 631.871, 610.676, 32.8412, 0.383 ) }
    dend_33 { pt3dadd( 632.528, 610.549, 32.613, 0.388 ) }
    dend_33 { pt3dadd( 632.937, 609.685, 32.3196, 0.4528 ) }
    dend_33 { pt3dadd( 633.664, 609.068, 32.1854, 0.532 ) }
    dend_33 { pt3dadd( 634.497, 608.941, 32.1633, 0.4194 ) }
    dend_33 { pt3dadd( 635.177, 609.489, 31.9192, 0.3268 ) }
    dend_33 { pt3dadd( 635.721, 609.103, 31.402, 0.2772 ) }
    dend_33 { pt3dadd( 636.058, 608.506, 30.8129, 0.2792 ) }
    dend_33 { pt3dadd( 636.772, 607.682, 30.3279, 0.2834 ) }
    dend_33 { pt3dadd( 637.059, 606.752, 29.9855, 0.2906 ) }
    dend_33 { pt3dadd( 637.48, 606.434, 29.9295, 0.3056 ) }
    dend_33 { pt3dadd( 638.409, 605.977, 29.7469, 0.3266 ) }
    dend_33 { pt3dadd( 638.582, 606.206, 29.2538, 0.3976 ) }
    dend_33 { pt3dadd( 639.191, 605.78, 28.6658, 0.3736 ) }
    dend_33 { pt3dadd( 639.819, 605.123, 28.268, 0.3992 ) }
    dend_33 { pt3dadd( 640.53, 604.299, 27.9124, 0.3346 ) }
    dend_33 { pt3dadd( 641.379, 603.56, 27.6361, 0.3012 ) }
    dend_33 { pt3dadd( 642.119, 603.072, 27.5086, 0.2768 ) }
    dend_33 { pt3dadd( 642.734, 602.5, 27.2157, 0.2788 ) }
    dend_33 { pt3dadd( 642.567, 601.707, 27.0813, 0.2826 ) }
    dend_33 { pt3dadd( 642.982, 600.912, 26.783, 0.2892 ) }
    dend_33 { pt3dadd( 643.54, 600.293, 26.3415, 0.3028 ) }
    dend_33 { pt3dadd( 643.812, 599.758, 25.7041, 0.322 ) }
    dend_33 { pt3dadd( 644.864, 599.463, 25.1516, 0.387 ) }
    dend_33 { pt3dadd( 645.661, 598.837, 24.8273, 0.3644 ) }
    dend_33 { pt3dadd( 646.345, 598.456, 24.3867, 0.3304 ) }
    dend_33 { pt3dadd( 647.39, 598.198, 24.08, 0.4576 ) }
    // Section: dend_28, id: dend_28, parent: dend_22 (entry count 71/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 645.651, 620.016, 23.1483, 0.3624 ) }
    dend_28 { pt3dadd( 645.299, 619.417, 23.0222, 0.4576 ) }
    dend_28 { pt3dadd( 644.881, 618.377, 22.6877, 0.4336 ) }
    dend_28 { pt3dadd( 645.048, 617.338, 22.5387, 0.4654 ) }
    dend_28 { pt3dadd( 645.672, 616.412, 22.3082, 0.4466 ) }
    dend_28 { pt3dadd( 646.004, 615.359, 22.0992, 0.561 ) }
    dend_28 { pt3dadd( 646.017, 614.229, 21.9468, 0.506 ) }
    dend_28 { pt3dadd( 646.013, 613.125, 21.7165, 0.5564 ) }
    dend_28 { pt3dadd( 645.997, 612.047, 21.3809, 0.597 ) }
    dend_28 { pt3dadd( 645.874, 610.928, 21.0584, 0.699 ) }
    dend_28 { pt3dadd( 645.495, 609.863, 20.7861, 0.7598 ) }
    dend_28 { pt3dadd( 644.872, 608.935, 20.5014, 0.5806 ) }
    dend_28 { pt3dadd( 644.191, 608.058, 20.2763, 0.5198 ) }
    dend_28 { pt3dadd( 643.803, 607.027, 20.1855, 0.462 ) }
    dend_28 { pt3dadd( 643.724, 605.91, 20.0946, 0.5468 ) }
    dend_28 { pt3dadd( 643.696, 604.785, 19.9558, 0.6872 ) }
    dend_28 { pt3dadd( 643.509, 603.667, 19.8305, 0.5726 ) }
    dend_28 { pt3dadd( 643.156, 602.58, 19.7411, 0.5768 ) }
    dend_28 { pt3dadd( 642.692, 601.535, 19.6706, 0.4478 ) }
    dend_28 { pt3dadd( 642.285, 600.468, 19.614, 0.4162 ) }
    dend_28 { pt3dadd( 642.02, 599.358, 19.5885, 0.494 ) }
    dend_28 { pt3dadd( 642.04, 598.243, 19.6265, 0.4342 ) }
    dend_28 { pt3dadd( 642.024, 597.137, 19.5976, 0.3974 ) }
    dend_28 { pt3dadd( 642.089, 596.035, 19.4383, 0.4284 ) }
    dend_28 { pt3dadd( 642.389, 594.968, 19.1734, 0.4608 ) }
    dend_28 { pt3dadd( 642.308, 593.917, 18.8688, 0.4134 ) }
    dend_28 { pt3dadd( 641.589, 593.076, 18.5924, 0.39 ) }
    dend_28 { pt3dadd( 640.798, 592.259, 18.3506, 0.4924 ) }
    dend_28 { pt3dadd( 640.269, 591.26, 18.1428, 0.4312 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_28 { pt3dadd( 640.089, 590.168, 17.9051, 0.3918 ) }
    dend_28 { pt3dadd( 640.083, 589.042, 17.6472, 0.4178 ) }
    dend_28 { pt3dadd( 640.185, 587.907, 17.4089, 0.4418 ) }
    dend_28 { pt3dadd( 640.376, 586.799, 17.1518, 0.3758 ) }
    dend_28 { pt3dadd( 640.038, 585.799, 16.9747, 0.3316 ) }
    dend_28 { pt3dadd( 639.8, 584.751, 16.7782, 0.3276 ) }
    dend_28 { pt3dadd( 640.219, 583.744, 16.6306, 0.3996 ) }
    dend_28 { pt3dadd( 640.592, 582.703, 16.5993, 0.3772 ) }
    dend_28 { pt3dadd( 640.439, 581.605, 16.5721, 0.4056 ) }
    dend_28 { pt3dadd( 639.907, 580.61, 16.474, 0.3466 ) }
    dend_28 { pt3dadd( 639.538, 579.589, 16.2261, 0.3234 ) }
    dend_28 { pt3dadd( 639.837, 578.564, 15.8731, 0.3186 ) }
    dend_28 { pt3dadd( 640.622, 577.767, 15.4978, 0.353 ) }
    dend_28 { pt3dadd( 641.719, 577.739, 15.1651, 0.435 ) }
    dend_28 { pt3dadd( 642.601, 578.438, 14.8965, 0.5 ) }
    dend_28 { pt3dadd( 642.997, 579.497, 14.6732, 0.356 ) }
    dend_28 { pt3dadd( 642.356, 580.351, 14.0, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 17/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 645.651, 620.016, 23.1483, 0.3624 ) }
    dend_23 { pt3dadd( 646.055, 619.474, 22.888, 0.3476 ) }
    dend_23 { pt3dadd( 646.855, 618.697, 22.6308, 0.3882 ) }
    dend_23 { pt3dadd( 647.609, 617.837, 22.442, 0.3626 ) }
    dend_23 { pt3dadd( 648.318, 616.943, 22.3418, 0.3478 ) }
    dend_23 { pt3dadd( 648.984, 616.03, 22.3687, 0.3886 ) }
    dend_23 { pt3dadd( 649.548, 615.073, 22.5128, 0.3632 ) }
    dend_23 { pt3dadd( 649.695, 614.111, 22.7994, 0.349 ) }
    dend_23 { pt3dadd( 650.119, 613.052, 23.0105, 0.391 ) }
    dend_23 { pt3dadd( 650.387, 611.983, 23.0262, 0.3662 ) }
    dend_23 { pt3dadd( 650.934, 611.009, 22.9158, 0.3606 ) }
    dend_23 { pt3dadd( 651.273, 609.936, 22.7449, 0.3826 ) }
    dend_23 { pt3dadd( 651.667, 608.88, 22.5468, 0.4968 ) }
    dend_23 { pt3dadd( 652.14, 607.843, 22.4155, 0.5796 ) }
    dend_23 { pt3dadd( 652.491, 606.797, 22.428, 0.6732 ) }
    dend_23 { pt3dadd( 652.756, 605.707, 22.5308, 0.6808 ) }
    dend_23 { pt3dadd( 652.966, 604.587, 22.6286, 0.584 ) }
    dend_23 { pt3dadd( 653.313, 603.51, 22.6957, 0.4862 ) }
    dend_23 { pt3dadd( 653.767, 602.461, 22.7228, 0.3644 ) }
    dend_23 { pt3dadd( 654.145, 601.381, 22.6983, 0.3094 ) }
    dend_23 { pt3dadd( 654.534, 600.324, 22.6016, 0.2916 ) }
    dend_23 { pt3dadd( 654.539, 599.219, 22.4175, 0.3074 ) }
    dend_23 { pt3dadd( 654.543, 598.109, 22.2775, 0.33 ) }
    dend_23 { pt3dadd( 655.171, 597.153, 22.1933, 0.4028 ) }
    dend_23 { pt3dadd( 655.758, 596.178, 22.1703, 0.3894 ) }
    dend_23 { pt3dadd( 656.101, 595.105, 22.2387, 0.3982 ) }
    dend_23 { pt3dadd( 656.331, 594.023, 22.3886, 0.4792 ) }
    dend_23 { pt3dadd( 656.825, 592.996, 22.5055, 0.5444 ) }
    dend_23 { pt3dadd( 657.144, 591.898, 22.5655, 0.6196 ) }
    dend_23 { pt3dadd( 657.457, 590.804, 22.5495, 0.5242 ) }
    dend_23 { pt3dadd( 657.787, 589.747, 22.4148, 0.5728 ) }
    dend_23 { pt3dadd( 658.481, 588.848, 22.2477, 0.482 ) }
    dend_23 { pt3dadd( 659.102, 587.89, 22.1062, 0.5052 ) }
    dend_23 { pt3dadd( 659.574, 586.874, 22.0597, 0.5352 ) }
    dend_23 { pt3dadd( 659.738, 585.769, 22.0427, 0.425 ) }
    dend_23 { pt3dadd( 659.758, 584.662, 21.933, 0.3374 ) }
    dend_23 { pt3dadd( 659.825, 583.555, 21.7388, 0.2968 ) }
    dend_23 { pt3dadd( 660.106, 582.477, 21.4982, 0.3164 ) }
    dend_23 { pt3dadd( 660.273, 581.359, 21.291, 0.3482 ) }
    dend_23 { pt3dadd( 660.269, 580.22, 21.1658, 0.4314 ) }
    dend_23 { pt3dadd( 660.468, 579.131, 21.1821, 0.4664 ) }
    dend_23 { pt3dadd( 660.693, 578.028, 21.2096, 0.4238 ) }
    dend_23 { pt3dadd( 661.106, 576.986, 21.183, 0.4088 ) }
    dend_23 { pt3dadd( 661.913, 576.236, 21.2199, 0.5284 ) }
    dend_23 { pt3dadd( 662.545, 575.325, 21.308, 0.4926 ) }
    dend_23 { pt3dadd( 662.948, 574.266, 21.3818, 0.532 ) }
    dend_23 { pt3dadd( 663.348, 573.203, 21.3473, 0.5496 ) }
    dend_23 { pt3dadd( 664.013, 572.334, 21.1645, 0.6214 ) }
    dend_23 { pt3dadd( 664.545, 571.34, 21.0081, 0.5658 ) }
    dend_23 { pt3dadd( 664.908, 570.341, 20.6984, 0.4638 ) }
    dend_23 { pt3dadd( 665.593, 569.488, 20.3249, 0.4978 ) }
    dend_23 { pt3dadd( 666.413, 568.697, 20.023, 0.3934 ) }
    dend_23 { pt3dadd( 667.229, 567.939, 19.7467, 0.3258 ) }
    dend_23 { pt3dadd( 667.99, 567.143, 19.7075, 0.2754 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 685.714, 594.893, 37.6365, 0.438 ) }
    dend_21 { pt3dadd( 686.572, 594.744, 37.5558, 0.2288 ) }
    dend_21 { pt3dadd( 687.534, 594.651, 37.7084, 0.2746 ) }
    dend_21 { pt3dadd( 688.413, 594.213, 37.786, 0.2746 ) }
    dend_21 { pt3dadd( 689.139, 593.408, 37.8498, 0.2746 ) }
    dend_21 { pt3dadd( 689.91, 592.637, 37.8529, 0.2746 ) }
    dend_21 { pt3dadd( 690.591, 591.846, 37.8941, 0.2746 ) }
    dend_21 { pt3dadd( 691.227, 591.219, 38.073, 0.2746 ) }
    dend_21 { pt3dadd( 692.093, 590.746, 38.3121, 0.2746 ) }
    dend_21 { pt3dadd( 692.781, 590.018, 38.5865, 0.2746 ) }
    dend_21 { pt3dadd( 693.5, 589.311, 38.8298, 0.2746 ) }
    dend_21 { pt3dadd( 694.196, 588.453, 39.0482, 0.2746 ) }
    dend_21 { pt3dadd( 694.941, 587.613, 39.2717, 0.2746 ) }
    dend_21 { pt3dadd( 695.748, 586.825, 39.417, 0.2746 ) }
    dend_21 { pt3dadd( 696.458, 586.151, 39.5923, 0.2746 ) }
    dend_21 { pt3dadd( 696.946, 585.492, 39.9168, 0.2746 ) }
    dend_21 { pt3dadd( 697.647, 584.839, 40.2968, 0.2746 ) }
    dend_21 { pt3dadd( 698.298, 584.162, 40.616, 0.2746 ) }
    dend_21 { pt3dadd( 698.787, 583.742, 40.7204, 0.2746 ) }
    dend_21 { pt3dadd( 699.517, 583.554, 40.8402, 0.2746 ) }
    dend_21 { pt3dadd( 700.421, 583.024, 40.8444, 0.2746 ) }
    dend_21 { pt3dadd( 701.043, 582.428, 40.745, 0.2746 ) }
    dend_21 { pt3dadd( 701.917, 581.726, 40.665, 0.2744 ) }
    dend_21 { pt3dadd( 702.791, 581.113, 40.693, 0.2744 ) }
    dend_21 { pt3dadd( 703.674, 580.393, 40.7288, 0.2742 ) }
    dend_21 { pt3dadd( 704.459, 579.616, 40.8072, 0.274 ) }
    dend_21 { pt3dadd( 705.444, 579.302, 40.7862, 0.2736 ) }
    dend_21 { pt3dadd( 706.27, 578.664, 40.9315, 0.2728 ) }
    dend_21 { pt3dadd( 707.334, 578.309, 41.083, 0.2712 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_21 { pt3dadd( 708.268, 577.669, 41.258, 0.2684 ) }
    dend_21 { pt3dadd( 709.251, 577.13, 41.4896, 0.2626 ) }
    dend_21 { pt3dadd( 710.098, 576.805, 41.8463, 0.2542 ) }
    dend_21 { pt3dadd( 711.018, 576.924, 42.0196, 0.2288 ) }
    dend_21 { pt3dadd( 711.911, 577.262, 42.56, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 5/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 685.714, 594.893, 37.6365, 0.438 ) }
    dend_20 { pt3dadd( 685.714, 594.45, 37.8392, 0.474 ) }
    dend_20 { pt3dadd( 685.541, 593.389, 37.9728, 0.4612 ) }
    dend_20 { pt3dadd( 685.37, 592.465, 37.9249, 0.3648 ) }
    dend_20 { pt3dadd( 685.09, 591.525, 37.9089, 0.3104 ) }
    dend_20 { pt3dadd( 684.772, 590.637, 38.0243, 0.2936 ) }
    dend_20 { pt3dadd( 684.552, 589.536, 38.0881, 0.311 ) }
    dend_20 { pt3dadd( 684.455, 588.411, 38.1525, 0.3366 ) }
    dend_20 { pt3dadd( 683.898, 587.547, 38.2488, 0.416 ) }
    dend_20 { pt3dadd( 683.357, 586.847, 38.3233, 0.4086 ) }
    dend_20 { pt3dadd( 683.414, 585.892, 38.4586, 0.4588 ) }
    dend_20 { pt3dadd( 683.341, 585.33, 38.5462, 0.4714 ) }
    dend_20 { pt3dadd( 683.514, 584.319, 38.6268, 0.4268 ) }
    dend_20 { pt3dadd( 683.426, 583.231, 38.7859, 0.4454 ) }
    dend_20 { pt3dadd( 683.12, 582.295, 39.0057, 0.4454 ) }
    dend_20 { pt3dadd( 682.835, 581.415, 39.1644, 0.3838 ) }
    dend_20 { pt3dadd( 682.396, 580.66, 39.424, 0.3402 ) }
    dend_20 { pt3dadd( 682.235, 579.585, 39.7482, 0.3746 ) }
    dend_20 { pt3dadd( 681.938, 578.547, 40.1156, 0.336 ) }
    dend_20 { pt3dadd( 681.442, 577.64, 40.325, 0.304 ) }
    dend_20 { pt3dadd( 681.061, 576.78, 40.6655, 0.282 ) }
    dend_20 { pt3dadd( 681.117, 575.826, 40.8912, 0.288 ) }
    dend_20 { pt3dadd( 681.107, 574.696, 41.0595, 0.3008 ) }
    dend_20 { pt3dadd( 681.115, 573.571, 41.2432, 0.3178 ) }
    dend_20 { pt3dadd( 681.053, 572.543, 41.4117, 0.3802 ) }
    dend_20 { pt3dadd( 681.013, 571.402, 41.589, 0.3464 ) }
    dend_20 { pt3dadd( 680.797, 570.291, 41.7897, 0.3242 ) }
    dend_20 { pt3dadd( 680.687, 569.227, 42.1148, 0.3142 ) }
    dend_20 { pt3dadd( 680.13, 568.291, 42.3609, 0.3736 ) }
    dend_20 { pt3dadd( 679.573, 567.509, 42.7804, 0.3344 ) }
    dend_20 { pt3dadd( 679.645, 566.572, 43.2362, 0.3008 ) }
    dend_20 { pt3dadd( 680.329, 565.801, 43.6598, 0.276 ) }
    dend_20 { pt3dadd( 680.575, 565.031, 44.0698, 0.2772 ) }
    dend_20 { pt3dadd( 680.632, 564.341, 44.3901, 0.2796 ) }
    dend_20 { pt3dadd( 680.445, 563.452, 44.84, 0.284 ) }
    dend_20 { pt3dadd( 679.935, 562.443, 45.2346, 0.2918 ) }
    dend_20 { pt3dadd( 679.425, 561.54, 45.6448, 0.3076 ) }
    dend_20 { pt3dadd( 679.21, 560.777, 46.0958, 0.3302 ) }
    dend_20 { pt3dadd( 679.245, 559.859, 46.3915, 0.4044 ) }
    dend_20 { pt3dadd( 679.244, 558.73, 46.6186, 0.3858 ) }
    dend_20 { pt3dadd( 679.422, 557.628, 46.825, 0.423 ) }
    dend_20 { pt3dadd( 679.32, 556.674, 47.1428, 0.3734 ) }
    dend_20 { pt3dadd( 679.507, 555.554, 47.4443, 0.3988 ) }
    dend_20 { pt3dadd( 679.767, 554.509, 47.7842, 0.3338 ) }
    dend_20 { pt3dadd( 679.924, 553.412, 48.13, 0.3 ) }
    dend_20 { pt3dadd( 680.171, 552.362, 48.4252, 0.2746 ) }
    dend_20 { pt3dadd( 680.17, 551.408, 48.6172, 0.2746 ) }
    dend_20 { pt3dadd( 679.765, 550.734, 48.841, 0.2746 ) }
    dend_20 { pt3dadd( 679.65, 549.894, 49.1935, 0.2746 ) }
    dend_20 { pt3dadd( 679.59, 548.756, 49.4634, 0.2746 ) }
    dend_20 { pt3dadd( 679.153, 547.734, 49.6712, 0.2746 ) }
    dend_20 { pt3dadd( 679.067, 546.596, 49.8322, 0.2746 ) }
    dend_20 { pt3dadd( 678.688, 545.526, 49.9562, 0.2746 ) }
    dend_20 { pt3dadd( 678.506, 544.401, 50.0497, 0.2746 ) }
    dend_20 { pt3dadd( 678.408, 543.265, 50.1365, 0.2746 ) }
    dend_20 { pt3dadd( 678.169, 542.161, 50.2502, 0.2746 ) }
    dend_20 { pt3dadd( 678.032, 541.03, 50.3947, 0.2746 ) }
    dend_20 { pt3dadd( 677.557, 540.038, 50.6086, 0.2746 ) }
    dend_20 { pt3dadd( 677.336, 539.258, 51.0692, 0.2746 ) }
    dend_20 { pt3dadd( 677.091, 538.154, 51.48, 0.2746 ) }
    dend_20 { pt3dadd( 677.019, 537.024, 51.7961, 0.2746 ) }
    dend_20 { pt3dadd( 677.019, 535.88, 52.0584, 0.2748 ) }
    dend_20 { pt3dadd( 676.79, 535.163, 52.3396, 0.2748 ) }
    dend_20 { pt3dadd( 677.365, 534.868, 52.6498, 0.2752 ) }
    dend_20 { pt3dadd( 677.749, 533.912, 52.8858, 0.2756 ) }
    dend_20 { pt3dadd( 678.392, 533.266, 53.1647, 0.2766 ) }
    dend_20 { pt3dadd( 678.717, 532.311, 53.3952, 0.2782 ) }
    dend_20 { pt3dadd( 678.964, 531.303, 53.5786, 0.2814 ) }
    dend_20 { pt3dadd( 678.964, 530.159, 53.7239, 0.287 ) }
    dend_20 { pt3dadd( 678.964, 529.035, 53.8849, 0.2988 ) }
    dend_20 { pt3dadd( 678.81, 528.188, 54.1274, 0.3142 ) }
    dend_20 { pt3dadd( 678.251, 527.216, 54.3043, 0.3734 ) }
    dend_20 { pt3dadd( 677.671, 526.274, 54.4897, 0.3338 ) }
    dend_20 { pt3dadd( 676.948, 525.486, 54.7509, 0.3 ) }
    dend_20 { pt3dadd( 676.219, 524.641, 55.0119, 0.2746 ) }
    dend_20 { pt3dadd( 675.563, 523.735, 55.221, 0.2746 ) }
    dend_20 { pt3dadd( 674.984, 523.189, 55.2569, 0.2746 ) }
    dend_20 { pt3dadd( 674.242, 522.473, 55.2042, 0.2746 ) }
    dend_20 { pt3dadd( 673.596, 521.785, 55.0399, 0.2746 ) }
    dend_20 { pt3dadd( 672.949, 521.313, 54.8181, 0.2746 ) }
    dend_20 { pt3dadd( 672.697, 520.749, 54.8884, 0.2746 ) }
    dend_20 { pt3dadd( 672.333, 519.94, 55.2569, 0.2746 ) }
    dend_20 { pt3dadd( 671.537, 519.243, 55.657, 0.2746 ) }
    dend_20 { pt3dadd( 670.879, 518.461, 55.9636, 0.2746 ) }
    dend_20 { pt3dadd( 670.502, 517.894, 56.3192, 0.2746 ) }
    dend_20 { pt3dadd( 669.806, 517.093, 56.6899, 0.2746 ) }
    dend_20 { pt3dadd( 669.39, 516.251, 57.0363, 0.2746 ) }
    dend_20 { pt3dadd( 669.24, 515.332, 57.3042, 0.2746 ) }
    dend_20 { pt3dadd( 669.512, 514.594, 57.3073, 0.2746 ) }
    dend_20 { pt3dadd( 669.011, 513.893, 57.2379, 0.2748 ) }
    dend_20 { pt3dadd( 668.999, 513.142, 57.4322, 0.275 ) }
    dend_20 { pt3dadd( 668.419, 512.269, 57.6971, 0.2754 ) }
    dend_20 { pt3dadd( 668.421, 511.299, 57.9328, 0.2762 ) }
    dend_20 { pt3dadd( 668.118, 510.2, 58.0714, 0.2776 ) }
    dend_20 { pt3dadd( 667.815, 509.101, 58.1269, 0.2802 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_20 { pt3dadd( 667.638, 508.204, 58.007, 0.285 ) }
    dend_20 { pt3dadd( 667.596, 507.214, 57.9222, 0.2938 ) }
    dend_20 { pt3dadd( 667.638, 506.092, 57.7802, 0.3112 ) }
    dend_20 { pt3dadd( 667.867, 505.027, 57.6167, 0.3384 ) }
    dend_20 { pt3dadd( 667.872, 504.073, 57.3418, 0.4132 ) }
    dend_20 { pt3dadd( 668.08, 503.324, 56.8618, 0.4334 ) }
    dend_20 { pt3dadd( 667.562, 502.429, 56.3769, 0.3604 ) }
    dend_20 { pt3dadd( 667.106, 501.495, 56.1232, 0.302 ) }
    dend_20 { pt3dadd( 666.592, 500.945, 56.177, 0.2784 ) }
    dend_20 { pt3dadd( 666.266, 500.018, 56.0722, 0.2818 ) }
    dend_20 { pt3dadd( 665.854, 499.323, 55.7908, 0.2876 ) }
    dend_20 { pt3dadd( 665.083, 498.825, 55.4411, 0.2998 ) }
    dend_20 { pt3dadd( 664.579, 498.337, 55.223, 0.3162 ) }
    dend_20 { pt3dadd( 664.179, 498.084, 55.1768, 0.3772 ) }
    dend_20 { pt3dadd( 663.554, 497.56, 55.1194, 0.341 ) }
    dend_20 { pt3dadd( 662.744, 496.928, 55.2577, 0.313 ) }
    dend_20 { pt3dadd( 661.74, 496.06, 55.3977, 0.2998 ) }
    dend_20 { pt3dadd( 660.875, 495.312, 55.5083, 0.316 ) }
    dend_20 { pt3dadd( 660.093, 494.538, 55.5811, 0.377 ) }
    dend_20 { pt3dadd( 659.547, 493.567, 55.5531, 0.3408 ) }
    dend_20 { pt3dadd( 659.197, 492.598, 55.5783, 0.3124 ) }
    dend_20 { pt3dadd( 658.831, 491.618, 55.7362, 0.2988 ) }
    dend_20 { pt3dadd( 658.499, 490.601, 55.8732, 0.3142 ) }
    dend_20 { pt3dadd( 658.435, 489.638, 55.9944, 0.3734 ) }
    dend_20 { pt3dadd( 658.576, 488.923, 56.299, 0.334 ) }
    dend_20 { pt3dadd( 658.399, 487.954, 56.4236, 0.3002 ) }
    dend_20 { pt3dadd( 658.096, 487.287, 56.1364, 0.275 ) }
    dend_20 { pt3dadd( 658.359, 486.484, 55.7883, 0.2752 ) }
    dend_20 { pt3dadd( 658.334, 485.399, 55.3535, 0.2758 ) }
    dend_20 { pt3dadd( 658.761, 484.614, 55.0315, 0.277 ) }
    dend_20 { pt3dadd( 659.173, 483.758, 54.6966, 0.2792 ) }
    dend_20 { pt3dadd( 659.503, 482.869, 54.5737, 0.2828 ) }
    dend_20 { pt3dadd( 659.741, 482.108, 54.7224, 0.291 ) }
    dend_20 { pt3dadd( 659.866, 481.463, 54.626, 0.2994 ) }
    dend_20 { pt3dadd( 660.339, 480.551, 54.6834, 0.3474 ) }
    dend_20 { pt3dadd( 660.774, 479.977, 54.9338, 0.2796 ) }
    dend_20 { pt3dadd( 661.232, 479.107, 55.16, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 534.4, 657.457, 25.5664, 0.4848 ) }
    dend_13 { pt3dadd( 533.798, 656.713, 24.9497, 0.2288 ) }
    dend_13 { pt3dadd( 533.136, 655.895, 24.2967, 0.2748 ) }
    dend_13 { pt3dadd( 532.228, 655.235, 24.0635, 0.2752 ) }
    dend_13 { pt3dadd( 531.299, 654.57, 23.8656, 0.2756 ) }
    dend_13 { pt3dadd( 531.045, 653.479, 23.6929, 0.2766 ) }
    dend_13 { pt3dadd( 530.219, 652.99, 23.536, 0.2782 ) }
    dend_13 { pt3dadd( 529.464, 652.315, 23.3869, 0.2814 ) }
    dend_13 { pt3dadd( 528.828, 651.532, 23.242, 0.287 ) }
    dend_13 { pt3dadd( 528.578, 650.509, 22.9978, 0.2988 ) }
    dend_13 { pt3dadd( 528.185, 649.61, 22.5885, 0.3142 ) }
    dend_13 { pt3dadd( 527.598, 648.964, 22.168, 0.3738 ) }
    dend_13 { pt3dadd( 527.003, 648.208, 21.7733, 0.3346 ) }
    dend_13 { pt3dadd( 526.368, 647.43, 21.517, 0.3012 ) }
    dend_13 { pt3dadd( 525.682, 646.649, 21.424, 0.2768 ) }
    dend_13 { pt3dadd( 525.142, 645.786, 21.3335, 0.2788 ) }
    dend_13 { pt3dadd( 524.415, 645.105, 21.3298, 0.2822 ) }
    dend_13 { pt3dadd( 523.815, 644.178, 21.2578, 0.2888 ) }
    dend_13 { pt3dadd( 523.268, 643.445, 21.315, 0.3006 ) }
    dend_13 { pt3dadd( 522.921, 642.602, 21.2348, 0.325 ) }
    dend_13 { pt3dadd( 523.133, 641.636, 21.1179, 0.3576 ) }
    dend_13 { pt3dadd( 523.099, 640.678, 21.1451, 0.4798 ) }
    dend_13 { pt3dadd( 522.532, 640.068, 21.2557, 0.4072 ) }
    dend_13 { pt3dadd( 522.271, 639.239, 21.2376, 0.3508 ) }
    dend_13 { pt3dadd( 521.622, 638.764, 21.2903, 0.3238 ) }
    dend_13 { pt3dadd( 521.482, 637.741, 21.462, 0.3554 ) }
    dend_13 { pt3dadd( 521.062, 636.786, 21.5897, 0.4754 ) }
    dend_13 { pt3dadd( 520.388, 635.912, 21.7788, 0.3988 ) }
    dend_13 { pt3dadd( 520.375, 634.864, 22.0015, 0.336 ) }
    dend_13 { pt3dadd( 520.52, 634.03, 22.3633, 0.294 ) }
    dend_13 { pt3dadd( 520.292, 633.029, 22.6432, 0.3116 ) }
    dend_13 { pt3dadd( 519.771, 632.029, 22.9173, 0.3378 ) }
    dend_13 { pt3dadd( 519.284, 631.184, 23.1899, 0.4182 ) }
    dend_13 { pt3dadd( 519.376, 630.092, 23.4159, 0.4126 ) }
    dend_13 { pt3dadd( 519.401, 629.254, 23.7296, 0.466 ) }
    dend_13 { pt3dadd( 518.998, 628.683, 23.7886, 0.486 ) }
    dend_13 { pt3dadd( 518.377, 628.085, 23.9571, 0.4476 ) }
    dend_13 { pt3dadd( 517.796, 627.313, 24.2031, 0.5144 ) }
    dend_13 { pt3dadd( 517.541, 626.383, 24.5511, 0.4252 ) }
    dend_13 { pt3dadd( 517.16, 625.345, 24.8365, 0.3798 ) }
    dend_13 { pt3dadd( 516.549, 624.524, 25.0515, 0.4004 ) }
    dend_13 { pt3dadd( 516.045, 623.525, 25.244, 0.386 ) }
    dend_13 { pt3dadd( 515.669, 622.494, 25.2896, 0.386 ) }
    dend_13 { pt3dadd( 515.201, 621.488, 25.2251, 0.485 ) }
    dend_13 { pt3dadd( 514.435, 620.832, 25.277, 0.418 ) }
    dend_13 { pt3dadd( 513.65, 620.072, 25.3549, 0.366 ) }
    dend_13 { pt3dadd( 512.851, 619.355, 25.3385, 0.3754 ) }
    dend_13 { pt3dadd( 512.19, 618.735, 25.4423, 0.3376 ) }
    dend_13 { pt3dadd( 511.365, 618.319, 25.4729, 0.3068 ) }
    dend_13 { pt3dadd( 510.796, 617.453, 25.4075, 0.287 ) }
    dend_13 { pt3dadd( 510.241, 616.686, 25.1968, 0.2988 ) }
    dend_13 { pt3dadd( 509.654, 615.824, 25.022, 0.3142 ) }
    dend_13 { pt3dadd( 509.31, 614.851, 24.9399, 0.3736 ) }
    dend_13 { pt3dadd( 508.749, 614.043, 24.7997, 0.3342 ) }
    dend_13 { pt3dadd( 508.913, 612.951, 24.6035, 0.3004 ) }
    dend_13 { pt3dadd( 508.379, 611.972, 24.4499, 0.2754 ) }
    dend_13 { pt3dadd( 507.478, 611.799, 24.2365, 0.2762 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 94/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 534.4, 657.457, 25.5664, 0.4848 ) }
    dend_12 { pt3dadd( 533.285, 657.75, 25.4895, 0.3988 ) }
    dend_12 { pt3dadd( 532.445, 658.338, 25.4355, 0.3988 ) }
    dend_12 { pt3dadd( 531.429, 658.798, 25.4176, 0.3338 ) }
    dend_12 { pt3dadd( 530.372, 659.164, 25.3794, 0.3 ) }
    dend_12 { pt3dadd( 529.235, 659.173, 25.3859, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_12 { pt3dadd( 528.29, 659.602, 25.4273, 0.2746 ) }
    dend_12 { pt3dadd( 527.25, 659.95, 25.393, 0.2746 ) }
    dend_12 { pt3dadd( 526.192, 660.34, 25.4208, 0.2746 ) }
    dend_12 { pt3dadd( 525.396, 660.917, 25.3623, 0.2746 ) }
    dend_12 { pt3dadd( 524.399, 661.222, 25.3731, 0.2746 ) }
    dend_12 { pt3dadd( 523.473, 661.18, 25.4422, 0.2746 ) }
    dend_12 { pt3dadd( 522.922, 661.907, 25.4293, 0.2746 ) }
    dend_12 { pt3dadd( 522.33, 662.421, 25.442, 0.2746 ) }
    dend_12 { pt3dadd( 521.315, 662.212, 25.5663, 0.2746 ) }
    dend_12 { pt3dadd( 520.348, 662.147, 25.647, 0.2746 ) }
    dend_12 { pt3dadd( 519.28, 662.328, 25.719, 0.2746 ) }
    dend_12 { pt3dadd( 518.333, 662.177, 25.7234, 0.2748 ) }
    dend_12 { pt3dadd( 517.321, 662.043, 25.6063, 0.2748 ) }
    dend_12 { pt3dadd( 516.229, 661.996, 25.5482, 0.2752 ) }
    dend_12 { pt3dadd( 515.672, 661.857, 25.5467, 0.2756 ) }
    dend_12 { pt3dadd( 514.973, 662.622, 25.5345, 0.2766 ) }
    dend_12 { pt3dadd( 514.33, 663.139, 25.5932, 0.2782 ) }
    dend_12 { pt3dadd( 513.304, 663.294, 25.7626, 0.2814 ) }
    dend_12 { pt3dadd( 512.269, 663.418, 25.8706, 0.287 ) }
    dend_12 { pt3dadd( 511.138, 663.367, 26.0274, 0.2988 ) }
    dend_12 { pt3dadd( 510.328, 663.269, 26.3888, 0.3142 ) }
    dend_12 { pt3dadd( 509.606, 662.961, 26.8609, 0.3736 ) }
    dend_12 { pt3dadd( 508.748, 663.012, 27.2318, 0.3342 ) }
    dend_12 { pt3dadd( 507.787, 663.216, 27.5222, 0.3006 ) }
    dend_12 { pt3dadd( 507.327, 662.627, 27.8807, 0.2758 ) }
    dend_12 { pt3dadd( 506.242, 662.673, 28.0641, 0.2766 ) }
    dend_12 { pt3dadd( 505.465, 662.959, 27.9302, 0.2784 ) }
    dend_12 { pt3dadd( 504.852, 662.646, 27.9219, 0.2818 ) }
    dend_12 { pt3dadd( 504.685, 662.236, 27.6083, 0.288 ) }
    dend_12 { pt3dadd( 504.303, 661.547, 27.2579, 0.3004 ) }
    dend_12 { pt3dadd( 503.529, 661.658, 27.181, 0.3172 ) }
    dend_12 { pt3dadd( 502.907, 660.929, 27.2543, 0.3792 ) }
    dend_12 { pt3dadd( 502.385, 660.04, 27.2404, 0.3446 ) }
    dend_12 { pt3dadd( 501.544, 659.516, 27.3031, 0.3196 ) }
    dend_12 { pt3dadd( 501.261, 659.221, 27.5557, 0.3118 ) }
    dend_12 { pt3dadd( 500.506, 658.576, 27.6148, 0.3394 ) }
    dend_12 { pt3dadd( 499.82, 657.993, 27.5731, 0.415 ) }
    dend_12 { pt3dadd( 499.215, 657.42, 27.3457, 0.4364 ) }
    dend_12 { pt3dadd( 498.33, 656.755, 27.2247, 0.3662 ) }
    dend_12 { pt3dadd( 497.285, 656.536, 27.2206, 0.3126 ) }
    dend_12 { pt3dadd( 496.754, 655.776, 27.2011, 0.2978 ) }
    dend_12 { pt3dadd( 495.949, 655.296, 27.1451, 0.3186 ) }
    dend_12 { pt3dadd( 495.514, 655.098, 27.1158, 0.3518 ) }
    dend_12 { pt3dadd( 494.51, 654.568, 27.0975, 0.4392 ) }
    dend_12 { pt3dadd( 493.596, 654.222, 27.1074, 0.4762 ) }
    dend_12 { pt3dadd( 492.66, 654.065, 27.201, 0.4654 ) }
    dend_12 { pt3dadd( 491.66, 654.238, 27.2049, 0.3726 ) }
    dend_12 { pt3dadd( 490.701, 654.028, 27.1925, 0.3258 ) }
    dend_12 { pt3dadd( 490.089, 654.333, 27.0548, 0.3172 ) }
    dend_12 { pt3dadd( 489.459, 653.949, 27.231, 0.379 ) }
    dend_12 { pt3dadd( 488.613, 654.368, 27.5563, 0.3444 ) }
    dend_12 { pt3dadd( 487.527, 654.254, 27.8557, 0.3194 ) }
    dend_12 { pt3dadd( 486.425, 654.45, 28.1921, 0.3112 ) }
    dend_12 { pt3dadd( 485.321, 654.647, 28.5569, 0.3384 ) }
    dend_12 { pt3dadd( 484.189, 654.619, 28.8621, 0.4132 ) }
    dend_12 { pt3dadd( 483.06, 654.704, 29.0634, 0.4334 ) }
    dend_12 { pt3dadd( 482.164, 654.22, 29.337, 0.3604 ) }
    dend_12 { pt3dadd( 481.176, 653.788, 29.4896, 0.302 ) }
    dend_12 { pt3dadd( 480.44, 653.564, 29.8432, 0.2782 ) }
    dend_12 { pt3dadd( 479.627, 653.682, 29.9202, 0.2814 ) }
    dend_12 { pt3dadd( 478.745, 653.429, 30.1605, 0.2872 ) }
    dend_12 { pt3dadd( 478.079, 653.338, 30.2876, 0.299 ) }
    dend_12 { pt3dadd( 477.169, 652.891, 30.2831, 0.3144 ) }
    dend_12 { pt3dadd( 476.351, 652.562, 30.4097, 0.374 ) }
    dend_12 { pt3dadd( 475.394, 652.594, 30.5024, 0.335 ) }
    dend_12 { pt3dadd( 474.384, 652.866, 30.527, 0.302 ) }
    dend_12 { pt3dadd( 473.724, 653.632, 30.4629, 0.2784 ) }
    dend_12 { pt3dadd( 473.273, 653.0, 30.2414, 0.2818 ) }
    dend_12 { pt3dadd( 472.645, 652.878, 29.799, 0.2878 ) }
    dend_12 { pt3dadd( 471.846, 653.111, 29.2533, 0.3002 ) }
    dend_12 { pt3dadd( 470.901, 653.333, 28.9131, 0.3168 ) }
    dend_12 { pt3dadd( 470.184, 653.898, 28.6516, 0.3784 ) }
    dend_12 { pt3dadd( 469.189, 654.025, 28.5326, 0.3432 ) }
    dend_12 { pt3dadd( 468.52, 654.368, 28.3646, 0.3172 ) }
    dend_12 { pt3dadd( 467.928, 654.297, 28.5046, 0.3076 ) }
    dend_12 { pt3dadd( 466.903, 654.661, 28.6558, 0.3304 ) }
    dend_12 { pt3dadd( 465.91, 654.922, 28.6065, 0.4046 ) }
    dend_12 { pt3dadd( 464.81, 654.943, 28.5659, 0.3862 ) }
    dend_12 { pt3dadd( 463.755, 654.57, 28.5466, 0.4236 ) }
    dend_12 { pt3dadd( 463.207, 653.91, 28.474, 0.3746 ) }
    dend_12 { pt3dadd( 462.249, 653.91, 28.4192, 0.4008 ) }
    dend_12 { pt3dadd( 461.2, 654.109, 28.4777, 0.3376 ) }
    dend_12 { pt3dadd( 460.395, 654.152, 28.7034, 0.307 ) }
    dend_12 { pt3dadd( 459.618, 654.359, 28.8142, 0.2874 ) }
    dend_12 { pt3dadd( 458.806, 654.137, 28.6768, 0.2994 ) }
    dend_12 { pt3dadd( 457.852, 653.796, 28.5057, 0.3152 ) }
    dend_12 { pt3dadd( 457.059, 653.868, 28.2453, 0.3754 ) }
    dend_12 { pt3dadd( 456.118, 654.025, 28.1212, 0.3376 ) }
    dend_12 { pt3dadd( 455.238, 653.817, 27.9118, 0.307 ) }
    dend_12 { pt3dadd( 454.763, 653.922, 27.4822, 0.2872 ) }
    dend_12 { pt3dadd( 454.046, 654.664, 27.0528, 0.2992 ) }
    dend_12 { pt3dadd( 453.503, 654.654, 26.5196, 0.315 ) }
    dend_12 { pt3dadd( 453.014, 654.337, 26.2254, 0.3752 ) }
    dend_12 { pt3dadd( 452.719, 654.228, 26.3746, 0.337 ) }
    dend_12 { pt3dadd( 452.395, 653.913, 26.7298, 0.3058 ) }
    dend_12 { pt3dadd( 451.658, 653.193, 27.3336, 0.2854 ) }
    dend_12 { pt3dadd( 450.92, 652.475, 28.0675, 0.2944 ) }
    dend_12 { pt3dadd( 450.183, 651.756, 28.8464, 0.3126 ) }
    dend_12 { pt3dadd( 449.146, 651.346, 29.3658, 0.3394 ) }
    dend_12 { pt3dadd( 448.59, 650.362, 29.6929, 0.4226 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_12 { pt3dadd( 447.806, 649.548, 29.8886, 0.4146 ) }
    dend_12 { pt3dadd( 447.267, 648.553, 29.9816, 0.5008 ) }
    dend_12 { pt3dadd( 446.484, 647.743, 30.0138, 0.399 ) }
    dend_12 { pt3dadd( 445.621, 646.994, 30.0233, 0.3362 ) }
    dend_12 { pt3dadd( 444.628, 646.446, 30.042, 0.2944 ) }
    dend_12 { pt3dadd( 443.671, 645.862, 30.1031, 0.3124 ) }
    dend_12 { pt3dadd( 442.717, 645.232, 30.1518, 0.3392 ) }
    dend_12 { pt3dadd( 441.67, 644.803, 30.189, 0.4206 ) }
    dend_12 { pt3dadd( 440.649, 644.331, 30.2156, 0.4184 ) }
    dend_12 { pt3dadd( 439.564, 644.039, 30.2322, 0.4718 ) }
    dend_12 { pt3dadd( 438.943, 643.146, 30.24, 0.5198 ) }
    dend_12 { pt3dadd( 437.98, 642.586, 30.24, 0.3982 ) }
    dend_12 { pt3dadd( 437.103, 641.89, 30.24, 0.2796 ) }
    dend_12 { pt3dadd( 435.978, 641.784, 30.24, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 577.115, 634.158, 15.8438, 0.2868 ) }
    dend_7 { pt3dadd( 577.439, 635.168, 15.3919, 0.2288 ) }
    dend_7 { pt3dadd( 577.502, 636.279, 15.2184, 0.4114 ) }
    dend_7 { pt3dadd( 577.114, 637.334, 15.1568, 0.4 ) }
    dend_7 { pt3dadd( 576.189, 637.908, 15.0999, 0.443 ) }
    dend_7 { pt3dadd( 575.083, 638.191, 15.0453, 0.4414 ) }
    dend_7 { pt3dadd( 573.946, 638.28, 14.9918, 0.375 ) }
    dend_7 { pt3dadd( 572.832, 638.518, 14.9376, 0.3304 ) }
    dend_7 { pt3dadd( 571.776, 638.937, 14.8583, 0.3256 ) }
    dend_7 { pt3dadd( 570.699, 639.209, 14.7096, 0.3948 ) }
    dend_7 { pt3dadd( 569.62, 639.56, 14.5875, 0.373 ) }
    dend_7 { pt3dadd( 568.57, 640.011, 14.5356, 0.3744 ) }
    dend_7 { pt3dadd( 567.596, 640.559, 14.6061, 0.4042 ) }
    dend_7 { pt3dadd( 566.547, 640.979, 14.7463, 0.5556 ) }
    dend_7 { pt3dadd( 565.454, 641.312, 14.8858, 0.5986 ) }
    dend_7 { pt3dadd( 564.319, 641.31, 15.0068, 0.458 ) }
    dend_7 { pt3dadd( 563.296, 640.832, 15.0955, 0.3526 ) }
    dend_7 { pt3dadd( 562.361, 640.177, 15.1532, 0.3196 ) }
    dend_7 { pt3dadd( 561.338, 639.67, 15.1884, 0.3836 ) }
    dend_7 { pt3dadd( 560.28, 639.236, 15.2162, 0.3524 ) }
    dend_7 { pt3dadd( 559.304, 638.644, 15.2478, 0.3354 ) }
    dend_7 { pt3dadd( 558.422, 637.918, 15.2931, 0.3348 ) }
    dend_7 { pt3dadd( 557.436, 637.401, 15.413, 0.4128 ) }
    dend_7 { pt3dadd( 556.311, 637.29, 15.5326, 0.4026 ) }
    dend_7 { pt3dadd( 555.27, 636.956, 15.5037, 0.4478 ) }
    dend_7 { pt3dadd( 554.336, 636.31, 15.4407, 0.4498 ) }
    dend_7 { pt3dadd( 553.409, 635.64, 15.391, 0.392 ) }
    dend_7 { pt3dadd( 552.396, 635.108, 15.3613, 0.3554 ) }
    dend_7 { pt3dadd( 551.257, 635.129, 15.3573, 0.4026 ) }
    dend_7 { pt3dadd( 550.162, 635.459, 15.3947, 0.3902 ) }
    dend_7 { pt3dadd( 549.038, 635.667, 15.4876, 0.3936 ) }
    dend_7 { pt3dadd( 547.93, 635.838, 15.6781, 0.5002 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 46/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 577.115, 634.158, 15.8438, 0.2868 ) }
    dend_6 { pt3dadd( 576.998, 633.148, 16.1495, 0.2974 ) }
    dend_6 { pt3dadd( 577.292, 632.058, 16.3143, 0.3164 ) }
    dend_6 { pt3dadd( 577.542, 630.962, 16.328, 0.3542 ) }
    dend_6 { pt3dadd( 577.36, 629.841, 16.3352, 0.4124 ) }
    dend_6 { pt3dadd( 577.054, 628.761, 16.2208, 0.577 ) }
    dend_6 { pt3dadd( 576.221, 627.514, 15.9687, 0.6084 ) }
    dend_6 { pt3dadd( 575.594, 626.6, 15.8485, 0.6224 ) }
    dend_6 { pt3dadd( 575.094, 625.698, 15.8309, 0.6334 ) }
    dend_6 { pt3dadd( 574.481, 624.868, 15.8222, 0.7264 ) }
    dend_6 { pt3dadd( 573.727, 624.239, 15.9072, 0.7752 ) }
    dend_6 { pt3dadd( 573.315, 623.239, 15.9296, 0.7812 ) }
    dend_6 { pt3dadd( 572.698, 622.311, 15.9525, 0.7428 ) }
    dend_6 { pt3dadd( 572.45, 621.247, 16.064, 0.6834 ) }
    dend_6 { pt3dadd( 571.874, 620.47, 16.2499, 0.5172 ) }
    dend_6 { pt3dadd( 571.05, 619.918, 16.3717, 0.481 ) }
    dend_6 { pt3dadd( 570.182, 619.294, 16.5404, 0.4658 ) }
    dend_6 { pt3dadd( 569.228, 618.901, 16.7426, 0.415 ) }
    dend_6 { pt3dadd( 568.617, 618.291, 17.0099, 0.4298 ) }
    dend_6 { pt3dadd( 568.11, 617.455, 17.146, 0.386 ) }
    dend_6 { pt3dadd( 567.596, 616.998, 17.3491, 0.4222 ) }
    dend_6 { pt3dadd( 567.311, 616.322, 17.7084, 0.378 ) }
    dend_6 { pt3dadd( 567.487, 615.461, 17.8857, 0.3776 ) }
    dend_6 { pt3dadd( 567.012, 614.826, 18.2599, 0.4384 ) }
    dend_6 { pt3dadd( 567.195, 613.807, 18.7389, 0.482 ) }
    dend_6 { pt3dadd( 567.019, 612.988, 19.3709, 0.44 ) }
    dend_6 { pt3dadd( 567.424, 612.255, 19.879, 0.5008 ) }
    dend_6 { pt3dadd( 566.969, 611.526, 20.4488, 0.399 ) }
    dend_6 { pt3dadd( 566.164, 611.338, 20.7702, 0.3362 ) }
    dend_6 { pt3dadd( 565.331, 611.05, 21.0967, 0.2944 ) }
    dend_6 { pt3dadd( 564.772, 610.893, 21.5284, 0.3126 ) }
    dend_6 { pt3dadd( 564.874, 610.465, 22.0882, 0.3394 ) }
    dend_6 { pt3dadd( 564.985, 609.963, 22.7899, 0.4226 ) }
    dend_6 { pt3dadd( 564.112, 609.694, 23.502, 0.4146 ) }
    dend_6 { pt3dadd( 563.124, 609.736, 24.1514, 0.5008 ) }
    dend_6 { pt3dadd( 562.518, 609.397, 24.79, 0.3988 ) }
    dend_6 { pt3dadd( 561.659, 609.092, 25.211, 0.336 ) }
    dend_6 { pt3dadd( 561.246, 608.39, 25.6586, 0.2938 ) }
    dend_6 { pt3dadd( 560.596, 607.657, 26.0361, 0.3112 ) }
    dend_6 { pt3dadd( 559.898, 606.78, 26.3012, 0.3382 ) }
    dend_6 { pt3dadd( 559.058, 606.105, 26.4444, 0.413 ) }
    dend_6 { pt3dadd( 558.191, 606.095, 26.5782, 0.4328 ) }
    dend_6 { pt3dadd( 557.423, 606.063, 26.4404, 0.3594 ) }
    dend_6 { pt3dadd( 556.525, 605.721, 26.3811, 0.3 ) }
    dend_6 { pt3dadd( 555.505, 605.627, 26.1958, 0.2746 ) }
    dend_6 { pt3dadd( 554.661, 605.599, 25.8904, 0.2746 ) }
    dend_6 { pt3dadd( 553.956, 605.86, 25.5643, 0.2746 ) }
    dend_6 { pt3dadd( 553.234, 605.419, 25.5742, 0.2746 ) }
    dend_6 { pt3dadd( 552.853, 605.862, 25.8913, 0.2746 ) }
    dend_6 { pt3dadd( 552.03, 605.526, 26.4186, 0.2746 ) }
    dend_6 { pt3dadd( 551.097, 605.063, 26.9763, 0.2748 ) }
    dend_6 { pt3dadd( 550.045, 604.931, 27.5594, 0.275 ) }
    dend_6 { pt3dadd( 549.026, 604.499, 28.0843, 0.2752 ) }
    dend_6 { pt3dadd( 548.025, 604.344, 28.4687, 0.2758 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( 546.946, 604.025, 28.7809, 0.2768 ) }
    dend_6 { pt3dadd( 546.032, 603.359, 29.0573, 0.2788 ) }
    dend_6 { pt3dadd( 545.098, 602.726, 29.2583, 0.2826 ) }
    dend_6 { pt3dadd( 544.189, 602.107, 29.4773, 0.2892 ) }
    dend_6 { pt3dadd( 543.307, 601.482, 29.7097, 0.3026 ) }
    dend_6 { pt3dadd( 542.714, 600.594, 29.9592, 0.3214 ) }
    dend_6 { pt3dadd( 542.529, 599.513, 30.221, 0.3868 ) }
    dend_6 { pt3dadd( 542.822, 598.544, 30.3814, 0.3598 ) }
    dend_6 { pt3dadd( 542.256, 597.792, 30.5178, 0.3426 ) }
    dend_6 { pt3dadd( 541.532, 597.146, 30.6729, 0.3792 ) }
    dend_6 { pt3dadd( 540.856, 596.464, 30.998, 0.3446 ) }
    dend_6 { pt3dadd( 540.052, 595.887, 31.3169, 0.3196 ) }
    dend_6 { pt3dadd( 539.336, 595.093, 31.4745, 0.3118 ) }
    dend_6 { pt3dadd( 538.775, 594.236, 31.5736, 0.3394 ) }
    dend_6 { pt3dadd( 538.453, 593.741, 31.9068, 0.4152 ) }
    dend_6 { pt3dadd( 537.905, 593.262, 32.1037, 0.4368 ) }
    dend_6 { pt3dadd( 537.566, 592.473, 32.4019, 0.3668 ) }
    dend_6 { pt3dadd( 537.031, 591.546, 32.674, 0.3136 ) }
    dend_6 { pt3dadd( 536.282, 590.699, 32.9482, 0.3008 ) }
    dend_6 { pt3dadd( 535.663, 590.075, 33.2637, 0.3178 ) }
    dend_6 { pt3dadd( 534.897, 589.541, 33.563, 0.3804 ) }
    dend_6 { pt3dadd( 533.654, 589.306, 33.6566, 0.3466 ) }
    dend_6 { pt3dadd( 532.631, 589.03, 33.693, 0.3248 ) }
    dend_6 { pt3dadd( 531.671, 588.636, 33.8988, 0.3152 ) }
    dend_6 { pt3dadd( 530.791, 588.309, 34.1384, 0.3756 ) }
    dend_6 { pt3dadd( 529.963, 587.913, 34.463, 0.3378 ) }
    dend_6 { pt3dadd( 529.188, 587.112, 34.7598, 0.3072 ) }
    dend_6 { pt3dadd( 528.386, 586.593, 35.0269, 0.2876 ) }
    dend_6 { pt3dadd( 527.439, 585.991, 35.1943, 0.3 ) }
    dend_6 { pt3dadd( 526.684, 585.588, 35.4449, 0.3164 ) }
    dend_6 { pt3dadd( 526.227, 584.753, 35.4782, 0.3776 ) }
    dend_6 { pt3dadd( 525.433, 584.047, 35.4424, 0.3418 ) }
    dend_6 { pt3dadd( 524.587, 583.669, 35.4844, 0.3144 ) }
    dend_6 { pt3dadd( 524.013, 583.783, 35.2979, 0.3024 ) }
    dend_6 { pt3dadd( 523.258, 583.245, 35.0571, 0.321 ) }
    dend_6 { pt3dadd( 522.39, 582.894, 34.8491, 0.386 ) }
    dend_6 { pt3dadd( 521.38, 582.501, 34.6335, 0.3584 ) }
    dend_6 { pt3dadd( 520.372, 582.005, 34.4593, 0.34 ) }
    dend_6 { pt3dadd( 519.367, 581.512, 34.2905, 0.3744 ) }
    dend_6 { pt3dadd( 518.469, 580.874, 34.1667, 0.3356 ) }
    dend_6 { pt3dadd( 517.637, 580.26, 33.9872, 0.303 ) }
    dend_6 { pt3dadd( 516.699, 579.613, 33.9041, 0.2802 ) }
    dend_6 { pt3dadd( 516.056, 578.841, 33.9203, 0.2852 ) }
    dend_6 { pt3dadd( 515.016, 578.614, 33.9517, 0.294 ) }
    dend_6 { pt3dadd( 514.171, 578.059, 34.0262, 0.3116 ) }
    dend_6 { pt3dadd( 513.128, 577.749, 34.2432, 0.3392 ) }
    dend_6 { pt3dadd( 512.12, 577.546, 34.5055, 0.4146 ) }
    dend_6 { pt3dadd( 511.24, 576.983, 34.7872, 0.4358 ) }
    dend_6 { pt3dadd( 510.315, 576.99, 35.0784, 0.3648 ) }
    dend_6 { pt3dadd( 509.556, 576.793, 35.126, 0.3104 ) }
    dend_6 { pt3dadd( 508.794, 575.978, 35.1641, 0.2936 ) }
    dend_6 { pt3dadd( 507.946, 575.329, 35.2974, 0.3106 ) }
    dend_6 { pt3dadd( 507.356, 574.58, 35.4169, 0.3372 ) }
    dend_6 { pt3dadd( 507.115, 573.526, 35.3732, 0.4112 ) }
    dend_6 { pt3dadd( 506.206, 572.985, 35.2492, 0.4294 ) }
    dend_6 { pt3dadd( 505.594, 572.119, 35.2201, 0.353 ) }
    dend_6 { pt3dadd( 504.915, 571.204, 35.2078, 0.2882 ) }
    dend_6 { pt3dadd( 504.254, 570.289, 35.2024, 0.2542 ) }
    dend_6 { pt3dadd( 503.742, 569.489, 35.2806, 0.2288 ) }
    dend_6 { pt3dadd( 503.36, 568.454, 35.56, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 60/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 593.196, 630.001, 17.4481, 0.4428 ) }
    dend_4 { pt3dadd( 592.528, 629.126, 16.2635, 0.2288 ) }
    dend_4 { pt3dadd( 591.743, 628.296, 16.2643, 0.5054 ) }
    dend_4 { pt3dadd( 591.034, 627.418, 16.3065, 0.4494 ) }
    dend_4 { pt3dadd( 590.305, 626.572, 16.3216, 0.4548 ) }
    dend_4 { pt3dadd( 589.622, 625.739, 16.186, 0.3916 ) }
    dend_4 { pt3dadd( 589.144, 624.768, 16.034, 0.4024 ) }
    dend_4 { pt3dadd( 588.594, 623.796, 15.9587, 0.4868 ) }
    dend_4 { pt3dadd( 588.065, 622.807, 15.93, 0.5602 ) }
    dend_4 { pt3dadd( 587.803, 621.732, 15.8334, 0.641 ) }
    dend_4 { pt3dadd( 587.481, 620.71, 15.6103, 0.6016 ) }
    dend_4 { pt3dadd( 587.189, 619.858, 15.2064, 0.532 ) }
    dend_4 { pt3dadd( 586.211, 619.354, 14.8763, 0.6158 ) }
    dend_4 { pt3dadd( 585.59, 618.398, 14.6135, 0.6526 ) }
    dend_4 { pt3dadd( 585.016, 617.41, 14.4264, 0.6102 ) }
    dend_4 { pt3dadd( 584.521, 616.39, 14.3198, 0.3814 ) }
    dend_4 { pt3dadd( 583.898, 615.586, 14.28, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 77/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 593.196, 630.001, 17.4481, 0.4428 ) }
    dend_3 { pt3dadd( 593.718, 628.74, 17.379, 0.5256 ) }
    dend_3 { pt3dadd( 594.347, 627.787, 17.3268, 0.5784 ) }
    dend_3 { pt3dadd( 594.874, 626.774, 17.277, 0.707 ) }
    dend_3 { pt3dadd( 595.238, 625.703, 17.2038, 0.5682 ) }
    dend_3 { pt3dadd( 595.616, 624.634, 17.1711, 0.5394 ) }
    dend_3 { pt3dadd( 596.08, 623.591, 17.156, 0.5202 ) }
    dend_3 { pt3dadd( 596.463, 622.515, 17.1284, 0.549 ) }
    dend_3 { pt3dadd( 597.035, 621.531, 17.0815, 0.5188 ) }
    dend_3 { pt3dadd( 597.656, 620.571, 17.0191, 0.6386 ) }
    dend_3 { pt3dadd( 598.039, 619.503, 16.9051, 0.6946 ) }
    dend_3 { pt3dadd( 598.486, 618.514, 16.6568, 0.6896 ) }
    dend_3 { pt3dadd( 599.091, 617.557, 16.3916, 0.5222 ) }
    dend_3 { pt3dadd( 599.776, 616.682, 16.0832, 0.5214 ) }
    dend_3 { pt3dadd( 600.385, 615.734, 15.9124, 0.3898 ) }
    dend_3 { pt3dadd( 600.877, 614.709, 15.7811, 0.3192 ) }
    dend_3 { pt3dadd( 601.159, 613.606, 15.7487, 0.2626 ) }
    dend_3 { pt3dadd( 601.204, 612.572, 15.6059, 0.2542 ) }
    dend_3 { pt3dadd( 601.412, 611.454, 15.5228, 0.2288 ) }
    dend_3 { pt3dadd( 601.663, 610.611, 16.2022, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 97/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 577.949, 503.398, 46.7701, 0.3018 ) }
    dend_38 { pt3dadd( 577.781, 502.772, 46.8784, 0.2778 ) }
    dend_38 { pt3dadd( 577.489, 501.686, 47.0747, 0.2806 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_38 { pt3dadd( 577.333, 500.597, 47.3203, 0.2858 ) }
    dend_38 { pt3dadd( 577.504, 499.684, 47.7708, 0.295 ) }
    dend_38 { pt3dadd( 577.016, 498.874, 48.2569, 0.3134 ) }
    dend_38 { pt3dadd( 577.029, 498.044, 48.4473, 0.3426 ) }
    dend_38 { pt3dadd( 577.441, 497.263, 48.4285, 0.421 ) }
    dend_38 { pt3dadd( 577.364, 496.256, 48.3109, 0.4476 ) }
    dend_38 { pt3dadd( 577.315, 495.228, 48.2471, 0.3864 ) }
    dend_38 { pt3dadd( 577.857, 494.317, 48.1337, 0.3524 ) }
    dend_38 { pt3dadd( 578.057, 493.309, 47.9651, 0.3612 ) }
    dend_38 { pt3dadd( 578.325, 492.466, 47.784, 0.4858 ) }
    dend_38 { pt3dadd( 578.332, 491.805, 47.8218, 0.4196 ) }
    dend_38 { pt3dadd( 578.483, 491.023, 48.029, 0.369 ) }
    dend_38 { pt3dadd( 578.676, 490.252, 47.9433, 0.3808 ) }
    dend_38 { pt3dadd( 578.807, 489.307, 47.7806, 0.3476 ) }
    dend_38 { pt3dadd( 578.798, 488.374, 47.6644, 0.325 ) }
    dend_38 { pt3dadd( 578.542, 487.829, 47.8192, 0.323 ) }
    dend_38 { pt3dadd( 578.521, 487.059, 47.913, 0.354 ) }
    dend_38 { pt3dadd( 578.369, 486.201, 47.7837, 0.473 ) }
    dend_38 { pt3dadd( 578.363, 485.65, 47.5535, 0.3946 ) }
    dend_38 { pt3dadd( 577.842, 484.976, 47.4424, 0.3276 ) }
    dend_38 { pt3dadd( 577.812, 483.94, 47.4827, 0.2796 ) }
    dend_38 { pt3dadd( 577.735, 483.48, 47.7859, 0.2796 ) }
    dend_38 { pt3dadd( 577.953, 482.583, 48.0833, 0.305 ) }
    dend_38 { pt3dadd( 578.635, 481.853, 49.0, 0.2288 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 24/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 577.949, 503.398, 46.7701, 0.3018 ) }
    dend_37 { pt3dadd( 578.178, 502.877, 46.3868, 0.2288 ) }
    dend_37 { pt3dadd( 579.143, 502.075, 46.5226, 0.2916 ) }
    dend_37 { pt3dadd( 580.021, 501.347, 46.5539, 0.3072 ) }
    dend_37 { pt3dadd( 580.351, 500.358, 46.6211, 0.3296 ) }
    dend_37 { pt3dadd( 580.718, 499.891, 46.9252, 0.4032 ) }
    dend_37 { pt3dadd( 580.959, 499.159, 47.2105, 0.384 ) }
    dend_37 { pt3dadd( 581.027, 498.035, 47.4863, 0.4182 ) }
    dend_37 { pt3dadd( 581.287, 497.373, 47.8209, 0.3708 ) }
    dend_37 { pt3dadd( 581.61, 496.673, 48.277, 0.3642 ) }
    dend_37 { pt3dadd( 581.262, 495.851, 48.5106, 0.4138 ) }
    dend_37 { pt3dadd( 581.459, 494.814, 48.6548, 0.4344 ) }
    dend_37 { pt3dadd( 582.188, 494.229, 48.8782, 0.3624 ) }
    dend_37 { pt3dadd( 582.842, 493.585, 49.2271, 0.3056 ) }
    dend_37 { pt3dadd( 582.731, 493.039, 49.2293, 0.2852 ) }
    dend_37 { pt3dadd( 582.839, 492.102, 49.2601, 0.294 ) }
    dend_37 { pt3dadd( 582.861, 491.358, 49.5544, 0.3116 ) }
    dend_37 { pt3dadd( 582.345, 490.38, 49.882, 0.339 ) }
    dend_37 { pt3dadd( 581.972, 489.537, 50.2667, 0.4152 ) }
    dend_37 { pt3dadd( 581.61, 488.665, 50.6307, 0.4322 ) }
    dend_37 { pt3dadd( 581.392, 487.824, 51.2296, 0.3814 ) }
    dend_37 { pt3dadd( 581.038, 487.001, 52.64, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 667.99, 567.143, 19.7075, 0.2754 ) }
    dend_27 { pt3dadd( 668.022, 566.389, 17.9875, 0.4576 ) }
    dend_27 { pt3dadd( 668.06, 565.504, 17.0973, 0.36 ) }
    dend_27 { pt3dadd( 668.079, 564.612, 16.5997, 0.3012 ) }
    dend_27 { pt3dadd( 667.954, 563.57, 16.3929, 0.2766 ) }
    dend_27 { pt3dadd( 667.41, 563.201, 16.5458, 0.2784 ) }
    dend_27 { pt3dadd( 667.635, 562.581, 16.703, 0.2818 ) }
    dend_27 { pt3dadd( 667.753, 561.616, 16.7871, 0.2876 ) }
    dend_27 { pt3dadd( 667.866, 560.562, 16.9621, 0.3 ) }
    dend_27 { pt3dadd( 667.982, 559.608, 17.1495, 0.3164 ) }
    dend_27 { pt3dadd( 667.962, 558.876, 16.9817, 0.3776 ) }
    dend_27 { pt3dadd( 668.097, 558.35, 16.7288, 0.3414 ) }
    dend_27 { pt3dadd( 668.787, 558.095, 16.3809, 0.3142 ) }
    dend_27 { pt3dadd( 668.897, 556.969, 16.1076, 0.3004 ) }
    dend_27 { pt3dadd( 669.331, 556.086, 16.014, 0.3246 ) }
    dend_27 { pt3dadd( 669.286, 554.989, 15.9837, 0.3568 ) }
    dend_27 { pt3dadd( 669.604, 554.112, 15.9304, 0.4782 ) }
    dend_27 { pt3dadd( 669.845, 553.564, 16.0144, 0.4042 ) }
    dend_27 { pt3dadd( 670.701, 552.975, 15.9617, 0.3458 ) }
    dend_27 { pt3dadd( 671.427, 552.316, 15.9614, 0.312 ) }
    dend_27 { pt3dadd( 671.894, 551.89, 16.0598, 0.3462 ) }
    dend_27 { pt3dadd( 671.861, 551.086, 15.9514, 0.3976 ) }
    dend_27 { pt3dadd( 671.986, 550.195, 15.7629, 0.5496 ) }
    dend_27 { pt3dadd( 672.214, 549.551, 15.5317, 0.5564 ) }
    dend_27 { pt3dadd( 672.709, 548.674, 15.329, 0.5316 ) }
    dend_27 { pt3dadd( 673.269, 548.12, 15.1622, 0.4378 ) }
    dend_27 { pt3dadd( 673.912, 547.942, 15.1157, 0.4968 ) }
    dend_27 { pt3dadd( 674.682, 547.45, 15.178, 0.3914 ) }
    dend_27 { pt3dadd( 675.129, 546.694, 15.2594, 0.322 ) }
    dend_27 { pt3dadd( 675.471, 546.292, 15.2194, 0.2684 ) }
    dend_27 { pt3dadd( 675.924, 545.696, 15.1519, 0.2626 ) }
    dend_27 { pt3dadd( 677.067, 545.688, 15.0926, 0.2542 ) }
    dend_27 { pt3dadd( 677.918, 545.201, 15.0012, 0.2288 ) }
    dend_27 { pt3dadd( 678.456, 544.379, 15.12, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 80/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 667.99, 567.143, 19.7075, 0.2754 ) }
    dend_24 { pt3dadd( 668.623, 566.553, 19.7669, 0.2762 ) }
    dend_24 { pt3dadd( 669.116, 565.567, 19.9564, 0.2776 ) }
    dend_24 { pt3dadd( 669.551, 564.523, 20.1232, 0.28 ) }
    dend_24 { pt3dadd( 669.715, 563.428, 20.3358, 0.2848 ) }
    dend_24 { pt3dadd( 669.493, 562.324, 20.5366, 0.2932 ) }
    dend_24 { pt3dadd( 669.445, 561.21, 20.7342, 0.3102 ) }
    dend_24 { pt3dadd( 669.767, 560.128, 20.8561, 0.335 ) }
    dend_24 { pt3dadd( 670.263, 559.121, 20.8385, 0.4132 ) }
    dend_24 { pt3dadd( 670.868, 558.155, 20.7802, 0.4034 ) }
    dend_24 { pt3dadd( 671.384, 557.136, 20.6932, 0.4492 ) }
    dend_24 { pt3dadd( 671.419, 556.026, 20.5359, 0.4526 ) }
    dend_24 { pt3dadd( 671.013, 554.981, 20.45, 0.3972 ) }
    dend_24 { pt3dadd( 670.748, 553.875, 20.4166, 0.3648 ) }
    dend_24 { pt3dadd( 670.728, 552.733, 20.392, 0.4212 ) }
    dend_24 { pt3dadd( 670.734, 551.592, 20.3823, 0.418 ) }
    dend_24 { pt3dadd( 670.787, 550.569, 20.1785, 0.477 ) }
    dend_24 { pt3dadd( 671.074, 549.471, 19.9821, 0.5002 ) }
    dend_24 { pt3dadd( 671.177, 548.333, 19.8099, 0.5046 ) }
    dend_24 { pt3dadd( 671.149, 547.189, 19.6659, 0.4708 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_24 { pt3dadd( 670.821, 546.095, 19.5485, 0.3836 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 507.478, 611.799, 24.2365, 0.2762 ) }
    dend_15 { pt3dadd( 506.749, 612.131, 22.7637, 0.2288 ) }
    dend_15 { pt3dadd( 505.879, 612.393, 21.9044, 0.419 ) }
    dend_15 { pt3dadd( 505.097, 612.612, 21.6971, 0.414 ) }
    dend_15 { pt3dadd( 504.144, 612.674, 21.3715, 0.4698 ) }
    dend_15 { pt3dadd( 503.402, 613.07, 21.057, 0.4854 ) }
    dend_15 { pt3dadd( 502.34, 613.407, 20.7399, 0.4836 ) }
    dend_15 { pt3dadd( 501.698, 613.305, 20.4298, 0.4012 ) }
    dend_15 { pt3dadd( 501.114, 613.885, 20.2474, 0.404 ) }
    dend_15 { pt3dadd( 501.197, 614.868, 20.014, 0.339 ) }
    dend_15 { pt3dadd( 500.801, 615.363, 19.5914, 0.3304 ) }
    dend_15 { pt3dadd( 499.814, 615.586, 18.76, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 507.478, 611.799, 24.2365, 0.2762 ) }
    dend_14 { pt3dadd( 507.133, 611.509, 23.8186, 0.2778 ) }
    dend_14 { pt3dadd( 506.495, 611.239, 23.4184, 0.2804 ) }
    dend_14 { pt3dadd( 505.865, 610.691, 23.3424, 0.2854 ) }
    dend_14 { pt3dadd( 504.914, 610.52, 23.2685, 0.2946 ) }
    dend_14 { pt3dadd( 503.88, 610.401, 23.2931, 0.3126 ) }
    dend_14 { pt3dadd( 503.053, 609.983, 23.4892, 0.341 ) }
    dend_14 { pt3dadd( 502.035, 609.75, 23.6729, 0.4178 ) }
    dend_14 { pt3dadd( 501.21, 609.189, 23.7332, 0.4418 ) }
    dend_14 { pt3dadd( 500.132, 609.0, 23.691, 0.376 ) }
    dend_14 { pt3dadd( 499.292, 608.355, 23.7983, 0.3322 ) }
    dend_14 { pt3dadd( 498.874, 607.307, 23.9357, 0.3286 ) }
    dend_14 { pt3dadd( 498.945, 606.383, 24.0395, 0.4016 ) }
    dend_14 { pt3dadd( 498.807, 605.586, 24.1582, 0.3808 ) }
    dend_14 { pt3dadd( 498.665, 604.604, 24.4175, 0.4122 ) }
    dend_14 { pt3dadd( 498.477, 603.859, 24.472, 0.3596 ) }
    dend_14 { pt3dadd( 498.275, 603.072, 24.6763, 0.3424 ) }
    dend_14 { pt3dadd( 497.71, 602.103, 24.8465, 0.3788 ) }
    dend_14 { pt3dadd( 497.362, 601.227, 25.0163, 0.344 ) }
    dend_14 { pt3dadd( 496.695, 600.468, 25.2061, 0.3188 ) }
    dend_14 { pt3dadd( 496.05, 599.627, 25.3336, 0.3088 ) }
    dend_14 { pt3dadd( 495.802, 598.547, 25.3943, 0.3402 ) }
    dend_14 { pt3dadd( 495.201, 597.762, 25.4212, 0.3868 ) }
    dend_14 { pt3dadd( 494.323, 597.328, 25.2911, 0.5282 ) }
    dend_14 { pt3dadd( 493.574, 596.645, 25.2772, 0.5234 ) }
    dend_14 { pt3dadd( 492.781, 595.912, 25.2954, 0.4374 ) }
    dend_14 { pt3dadd( 492.172, 595.177, 25.219, 0.4242 ) }
    dend_14 { pt3dadd( 491.061, 595.038, 25.1506, 0.3756 ) }
    dend_14 { pt3dadd( 490.197, 595.42, 25.045, 0.4028 ) }
    dend_14 { pt3dadd( 489.632, 595.413, 25.0059, 0.3412 ) }
    dend_14 { pt3dadd( 488.862, 595.795, 24.9965, 0.3138 ) }
    dend_14 { pt3dadd( 487.883, 595.682, 24.9666, 0.2996 ) }
    dend_14 { pt3dadd( 486.826, 595.874, 24.8658, 0.3232 ) }
    dend_14 { pt3dadd( 485.927, 595.484, 24.7274, 0.3544 ) }
    dend_14 { pt3dadd( 485.146, 595.476, 24.8679, 0.4736 ) }
    dend_14 { pt3dadd( 484.061, 595.633, 24.9455, 0.3956 ) }
    dend_14 { pt3dadd( 483.293, 596.249, 25.0863, 0.33 ) }
    dend_14 { pt3dadd( 482.362, 596.661, 25.1681, 0.2828 ) }
    dend_14 { pt3dadd( 481.754, 597.049, 25.1245, 0.291 ) }
    dend_14 { pt3dadd( 480.925, 597.27, 25.2713, 0.2994 ) }
    dend_14 { pt3dadd( 480.084, 597.398, 25.1353, 0.3474 ) }
    dend_14 { pt3dadd( 479.15, 597.409, 24.9047, 0.2796 ) }
    dend_14 { pt3dadd( 478.192, 597.626, 24.64, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 56/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 547.93, 635.838, 15.6781, 0.5002 ) }
    dend_9 { pt3dadd( 547.232, 636.364, 14.1333, 0.2288 ) }
    dend_9 { pt3dadd( 546.157, 636.582, 13.9887, 0.2728 ) }
    dend_9 { pt3dadd( 545.127, 637.08, 13.935, 0.2712 ) }
    dend_9 { pt3dadd( 544.314, 637.846, 13.8803, 0.2684 ) }
    dend_9 { pt3dadd( 543.743, 638.773, 13.8127, 0.2626 ) }
    dend_9 { pt3dadd( 543.743, 639.899, 13.6867, 0.2542 ) }
    dend_9 { pt3dadd( 543.858, 641.019, 13.5871, 0.2288 ) }
    dend_9 { pt3dadd( 544.658, 641.784, 13.44, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 65/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 547.93, 635.838, 15.6781, 0.5002 ) }
    dend_8 { pt3dadd( 547.209, 635.625, 15.8973, 0.4396 ) }
    dend_8 { pt3dadd( 546.089, 635.445, 16.1072, 0.4368 ) }
    dend_8 { pt3dadd( 545.013, 635.1, 16.287, 0.3582 ) }
    dend_8 { pt3dadd( 544.256, 634.325, 16.4905, 0.34 ) }
    dend_8 { pt3dadd( 543.335, 633.728, 16.6734, 0.3742 ) }
    dend_8 { pt3dadd( 542.224, 633.498, 16.7695, 0.3352 ) }
    dend_8 { pt3dadd( 541.274, 632.905, 16.7784, 0.3026 ) }
    dend_8 { pt3dadd( 540.593, 632.024, 16.6608, 0.2792 ) }
    dend_8 { pt3dadd( 540.128, 631.02, 16.4266, 0.2832 ) }
    dend_8 { pt3dadd( 539.76, 629.964, 16.1263, 0.2908 ) }
    dend_8 { pt3dadd( 539.471, 628.89, 15.9506, 0.3044 ) }
    dend_8 { pt3dadd( 538.838, 627.959, 15.8439, 0.3318 ) }
    dend_8 { pt3dadd( 537.909, 627.312, 15.7377, 0.3704 ) }
    dend_8 { pt3dadd( 536.881, 626.91, 15.5618, 0.5028 ) }
    dend_8 { pt3dadd( 535.845, 626.44, 15.4068, 0.4522 ) }
    dend_8 { pt3dadd( 535.123, 625.569, 15.2831, 0.424 ) }
    dend_8 { pt3dadd( 534.716, 624.505, 15.1794, 0.5092 ) }
    dend_8 { pt3dadd( 534.319, 623.432, 15.1089, 0.4576 ) }
    dend_8 { pt3dadd( 533.778, 622.427, 15.0631, 0.465 ) }
    dend_8 { pt3dadd( 533.477, 621.369, 14.9705, 0.4348 ) }
    dend_8 { pt3dadd( 532.809, 620.453, 14.9305, 0.3632 ) }
    dend_8 { pt3dadd( 532.688, 619.37, 15.0639, 0.3072 ) }
    dend_8 { pt3dadd( 532.61, 618.273, 15.3336, 0.2876 ) }
    dend_8 { pt3dadd( 532.531, 617.174, 15.6917, 0.2998 ) }
    dend_8 { pt3dadd( 532.453, 616.077, 16.0951, 0.3162 ) }
    dend_8 { pt3dadd( 531.983, 615.367, 16.4903, 0.3774 ) }
    dend_8 { pt3dadd( 531.367, 615.012, 16.6113, 0.3412 ) }
    dend_8 { pt3dadd( 530.575, 614.358, 16.5817, 0.3134 ) }
    dend_8 { pt3dadd( 529.834, 613.575, 16.4292, 0.3004 ) }
    dend_8 { pt3dadd( 529.48, 612.53, 16.3126, 0.3172 ) }
    dend_8 { pt3dadd( 528.879, 611.783, 16.2915, 0.379 ) }
    dend_8 { pt3dadd( 528.554, 610.715, 16.2198, 0.3444 ) }
    dend_8 { pt3dadd( 528.156, 610.086, 15.9353, 0.3192 ) }
    dend_8 { pt3dadd( 527.766, 609.372, 15.7876, 0.3112 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_8 { pt3dadd( 527.272, 608.722, 15.8201, 0.3382 ) }
    dend_8 { pt3dadd( 526.89, 608.025, 15.6645, 0.413 ) }
    dend_8 { pt3dadd( 526.613, 607.05, 15.554, 0.4328 ) }
    dend_8 { pt3dadd( 525.97, 606.268, 15.5433, 0.3592 ) }
    dend_8 { pt3dadd( 525.127, 605.829, 15.4196, 0.2998 ) }
    dend_8 { pt3dadd( 524.545, 605.372, 15.1563, 0.2744 ) }
    dend_8 { pt3dadd( 524.112, 605.29, 15.262, 0.2742 ) }
    dend_8 { pt3dadd( 523.504, 604.917, 15.4805, 0.274 ) }
    dend_8 { pt3dadd( 523.006, 604.49, 15.442, 0.2736 ) }
    dend_8 { pt3dadd( 522.532, 603.745, 15.3064, 0.2728 ) }
    dend_8 { pt3dadd( 521.717, 603.129, 15.2401, 0.2712 ) }
    dend_8 { pt3dadd( 521.035, 602.778, 15.3247, 0.2684 ) }
    dend_8 { pt3dadd( 520.044, 602.341, 15.3592, 0.2626 ) }
    dend_8 { pt3dadd( 519.176, 601.657, 15.4357, 0.2542 ) }
    dend_8 { pt3dadd( 518.336, 600.925, 15.5058, 0.2288 ) }
    dend_8 { pt3dadd( 517.317, 600.714, 15.96, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 16/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 670.821, 546.095, 19.5485, 0.3836 ) }
    dend_26 { pt3dadd( 671.752, 545.534, 19.4996, 0.3398 ) }
    dend_26 { pt3dadd( 672.587, 544.838, 19.4863, 0.374 ) }
    dend_26 { pt3dadd( 673.533, 544.686, 19.3179, 0.335 ) }
    dend_26 { pt3dadd( 674.484, 544.34, 19.0989, 0.3022 ) }
    dend_26 { pt3dadd( 675.077, 543.44, 18.8111, 0.2788 ) }
    dend_26 { pt3dadd( 675.692, 542.513, 18.6449, 0.2824 ) }
    dend_26 { pt3dadd( 676.444, 541.799, 18.4264, 0.289 ) }
    dend_26 { pt3dadd( 677.571, 541.684, 18.2725, 0.3012 ) }
    dend_26 { pt3dadd( 678.156, 542.034, 18.2565, 0.3246 ) }
    dend_26 { pt3dadd( 678.94, 541.25, 18.1243, 0.3642 ) }
    dend_26 { pt3dadd( 679.624, 540.422, 17.8984, 0.4558 ) }
    dend_26 { pt3dadd( 679.947, 539.437, 17.6889, 0.5376 ) }
    dend_26 { pt3dadd( 680.221, 538.484, 17.5635, 0.4296 ) }
    dend_26 { pt3dadd( 680.61, 537.609, 17.3906, 0.3458 ) }
    dend_26 { pt3dadd( 681.434, 536.994, 17.1408, 0.313 ) }
    dend_26 { pt3dadd( 682.184, 536.213, 16.8951, 0.3418 ) }
    dend_26 { pt3dadd( 682.909, 535.629, 16.6699, 0.4196 ) }
    dend_26 { pt3dadd( 683.197, 534.676, 16.4506, 0.4448 ) }
    dend_26 { pt3dadd( 683.426, 533.678, 16.2553, 0.3816 ) }
    dend_26 { pt3dadd( 683.44, 532.903, 16.2266, 0.3422 ) }
    dend_26 { pt3dadd( 683.654, 532.313, 16.1491, 0.3488 ) }
    dend_26 { pt3dadd( 684.293, 531.562, 16.053, 0.4324 ) }
    dend_26 { pt3dadd( 684.931, 530.762, 15.9414, 0.4688 ) }
    dend_26 { pt3dadd( 685.516, 530.055, 15.8269, 0.4268 ) }
    dend_26 { pt3dadd( 686.2, 529.351, 15.8561, 0.4214 ) }
    dend_26 { pt3dadd( 686.574, 528.835, 15.7194, 0.5168 ) }
    dend_26 { pt3dadd( 687.45, 528.208, 15.7319, 0.6414 ) }
    dend_26 { pt3dadd( 688.333, 527.52, 15.801, 0.668 ) }
    dend_26 { pt3dadd( 688.834, 526.901, 15.8071, 0.5652 ) }
    dend_26 { pt3dadd( 689.65, 526.139, 15.8079, 0.427 ) }
    dend_26 { pt3dadd( 690.553, 525.501, 15.8683, 0.3742 ) }
    dend_26 { pt3dadd( 690.788, 524.717, 15.9875, 0.4322 ) }
    dend_26 { pt3dadd( 690.169, 523.978, 15.9226, 0.4694 ) }
    dend_26 { pt3dadd( 690.112, 522.965, 15.9359, 0.4222 ) }
    dend_26 { pt3dadd( 690.69, 522.116, 16.0082, 0.4416 ) }
    dend_26 { pt3dadd( 690.919, 521.544, 16.3231, 0.415 ) }
    dend_26 { pt3dadd( 691.203, 520.877, 16.5217, 0.442 ) }
    dend_26 { pt3dadd( 691.09, 520.117, 16.4536, 0.578 ) }
    dend_26 { pt3dadd( 691.452, 519.13, 16.3528, 0.6426 ) }
    dend_26 { pt3dadd( 692.003, 518.301, 16.2482, 0.5294 ) }
    dend_26 { pt3dadd( 692.667, 517.792, 16.1572, 0.5348 ) }
    dend_26 { pt3dadd( 692.903, 516.802, 16.1199, 0.4146 ) }
    dend_26 { pt3dadd( 693.413, 515.936, 16.0236, 0.3658 ) }
    dend_26 { pt3dadd( 693.466, 514.825, 15.9918, 0.3454 ) }
    dend_26 { pt3dadd( 693.67, 514.068, 16.1656, 0.426 ) }
    dend_26 { pt3dadd( 694.223, 513.093, 16.304, 0.4578 ) }
    dend_26 { pt3dadd( 694.941, 512.521, 16.2072, 0.4006 ) }
    dend_26 { pt3dadd( 695.824, 511.942, 16.0742, 0.402 ) }
    dend_26 { pt3dadd( 696.357, 511.168, 15.812, 0.3398 ) }
    dend_26 { pt3dadd( 696.815, 510.567, 15.7581, 0.3112 ) }
    dend_26 { pt3dadd( 697.508, 510.104, 15.4693, 0.295 ) }
    dend_26 { pt3dadd( 698.254, 509.618, 15.2482, 0.3134 ) }
    dend_26 { pt3dadd( 699.214, 509.208, 14.9995, 0.3424 ) }
    dend_26 { pt3dadd( 699.96, 508.666, 14.932, 0.4206 ) }
    dend_26 { pt3dadd( 701.05, 508.737, 14.9622, 0.447 ) }
    dend_26 { pt3dadd( 701.295, 508.203, 14.7712, 0.3854 ) }
    dend_26 { pt3dadd( 701.985, 507.507, 14.8364, 0.3506 ) }
    dend_26 { pt3dadd( 702.8, 506.764, 14.8885, 0.3578 ) }
    dend_26 { pt3dadd( 703.784, 506.311, 15.0359, 0.4802 ) }
    dend_26 { pt3dadd( 704.268, 505.404, 15.2096, 0.4076 ) }
    dend_26 { pt3dadd( 704.808, 504.464, 15.4199, 0.3532 ) }
    dend_26 { pt3dadd( 705.387, 503.703, 15.5215, 0.321 ) }
    dend_26 { pt3dadd( 706.072, 503.017, 15.5374, 0.3862 ) }
    dend_26 { pt3dadd( 706.721, 502.438, 15.7243, 0.3576 ) }
    dend_26 { pt3dadd( 707.444, 501.845, 15.7245, 0.3436 ) }
    dend_26 { pt3dadd( 707.766, 501.089, 15.5548, 0.357 ) }
    dend_26 { pt3dadd( 708.359, 500.477, 15.2819, 0.4192 ) }
    dend_26 { pt3dadd( 709.136, 500.006, 15.2553, 0.583 ) }
    dend_26 { pt3dadd( 710.132, 499.631, 15.3892, 0.6516 ) }
    dend_26 { pt3dadd( 711.22, 499.356, 15.5246, 0.546 ) }
    dend_26 { pt3dadd( 712.134, 499.353, 15.5278, 0.5664 ) }
    dend_26 { pt3dadd( 712.697, 498.697, 15.4559, 0.4692 ) }
    dend_26 { pt3dadd( 713.525, 498.246, 15.5406, 0.4866 ) }
    dend_26 { pt3dadd( 713.627, 497.411, 15.5896, 0.4758 ) }
    dend_26 { pt3dadd( 713.567, 496.47, 15.732, 0.435 ) }
    dend_26 { pt3dadd( 713.742, 495.582, 15.9461, 0.4604 ) }
    dend_26 { pt3dadd( 713.207, 494.844, 15.9807, 0.4742 ) }
    dend_26 { pt3dadd( 713.147, 494.09, 16.171, 0.4322 ) }
    dend_26 { pt3dadd( 712.916, 493.057, 16.165, 0.4552 ) }
    dend_26 { pt3dadd( 712.826, 492.232, 16.0282, 0.4648 ) }
    dend_26 { pt3dadd( 712.945, 491.446, 16.1674, 0.4136 ) }
    dend_26 { pt3dadd( 713.405, 490.583, 16.1898, 0.4258 ) }
    dend_26 { pt3dadd( 713.904, 489.602, 16.1671, 0.3858 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_26 { pt3dadd( 714.42, 488.665, 16.1262, 0.3858 ) }
    dend_26 { pt3dadd( 714.769, 487.725, 16.0647, 0.4848 ) }
    dend_26 { pt3dadd( 715.326, 486.881, 15.9399, 0.4164 ) }
    dend_26 { pt3dadd( 715.763, 486.661, 15.5781, 0.3692 ) }
    dend_26 { pt3dadd( 716.345, 486.0, 15.3154, 0.3514 ) }
    dend_26 { pt3dadd( 716.953, 485.745, 15.2746, 0.4384 ) }
    dend_26 { pt3dadd( 717.59, 485.057, 15.2362, 0.4748 ) }
    dend_26 { pt3dadd( 718.096, 484.128, 15.1743, 0.4628 ) }
    dend_26 { pt3dadd( 718.422, 483.671, 15.3739, 0.3676 ) }
    dend_26 { pt3dadd( 719.226, 483.338, 15.7334, 0.3164 ) }
    dend_26 { pt3dadd( 719.518, 482.624, 15.8607, 0.2994 ) }
    dend_26 { pt3dadd( 719.976, 482.066, 15.6409, 0.3474 ) }
    dend_26 { pt3dadd( 720.698, 481.42, 15.4128, 0.2796 ) }
    dend_26 { pt3dadd( 721.635, 481.052, 14.84, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 14/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 670.821, 546.095, 19.5485, 0.3836 ) }
    dend_25 { pt3dadd( 670.482, 545.92, 19.6, 0.2288 ) }
    dend_25 { pt3dadd( 669.441, 545.685, 19.6595, 0.323 ) }
    dend_25 { pt3dadd( 668.752, 545.694, 19.6512, 0.3896 ) }
    dend_25 { pt3dadd( 667.782, 545.813, 19.5682, 0.365 ) }
    dend_25 { pt3dadd( 667.065, 545.98, 19.764, 0.3522 ) }
    dend_25 { pt3dadd( 666.215, 546.247, 19.9015, 0.398 ) }
    dend_25 { pt3dadd( 665.458, 545.643, 19.9753, 0.374 ) }
    dend_25 { pt3dadd( 664.664, 545.304, 20.0636, 0.4 ) }
    dend_25 { pt3dadd( 663.732, 545.23, 20.0743, 0.3358 ) }
    dend_25 { pt3dadd( 662.613, 545.322, 20.0691, 0.3036 ) }
    dend_25 { pt3dadd( 661.737, 545.075, 20.1959, 0.2814 ) }
    dend_25 { pt3dadd( 660.904, 544.865, 20.1338, 0.2874 ) }
    dend_25 { pt3dadd( 659.794, 544.712, 20.1136, 0.298 ) }
    dend_25 { pt3dadd( 659.031, 545.226, 20.0735, 0.319 ) }
    dend_25 { pt3dadd( 658.15, 545.173, 20.0633, 0.3528 ) }
    dend_25 { pt3dadd( 657.461, 545.495, 20.0455, 0.4408 ) }
    dend_25 { pt3dadd( 656.703, 545.262, 19.9942, 0.4792 ) }
    dend_25 { pt3dadd( 655.69, 545.148, 19.9785, 0.4706 ) }
    dend_25 { pt3dadd( 654.758, 545.243, 19.8179, 0.3836 ) }
    dend_25 { pt3dadd( 653.901, 545.186, 19.8993, 0.3398 ) }
    dend_25 { pt3dadd( 653.109, 545.339, 19.8791, 0.3738 ) }
    dend_25 { pt3dadd( 652.363, 545.315, 20.159, 0.3346 ) }
    dend_25 { pt3dadd( 651.447, 545.237, 20.3855, 0.3014 ) }
    dend_25 { pt3dadd( 650.602, 545.23, 20.4515, 0.2772 ) }
    dend_25 { pt3dadd( 649.966, 545.261, 20.6877, 0.2794 ) }
    dend_25 { pt3dadd( 649.006, 544.952, 20.6786, 0.2836 ) }
    dend_25 { pt3dadd( 647.986, 544.671, 20.6698, 0.291 ) }
    dend_25 { pt3dadd( 647.067, 544.487, 20.6202, 0.3062 ) }
    dend_25 { pt3dadd( 646.259, 544.773, 20.6039, 0.3278 ) }
    dend_25 { pt3dadd( 645.289, 544.658, 20.4811, 0.3998 ) }
    dend_25 { pt3dadd( 644.518, 545.087, 20.3813, 0.3776 ) }
    dend_25 { pt3dadd( 643.799, 545.426, 20.2136, 0.4068 ) }
    dend_25 { pt3dadd( 643.101, 546.081, 19.9681, 0.3482 ) }
    dend_25 { pt3dadd( 642.956, 547.038, 19.8088, 0.3278 ) }
    dend_25 { pt3dadd( 643.251, 547.992, 19.5845, 0.3208 ) }
    dend_25 { pt3dadd( 643.005, 548.662, 19.3828, 0.3858 ) }
    dend_25 { pt3dadd( 642.91, 549.376, 19.1668, 0.3578 ) }
    dend_25 { pt3dadd( 642.35, 550.052, 19.0355, 0.339 ) }
    dend_25 { pt3dadd( 641.734, 550.859, 18.8943, 0.3724 ) }
    dend_25 { pt3dadd( 641.23, 551.796, 18.8558, 0.332 ) }
    dend_25 { pt3dadd( 640.657, 552.662, 18.7926, 0.2966 ) }
    dend_25 { pt3dadd( 640.291, 553.727, 18.704, 0.2684 ) }
    dend_25 { pt3dadd( 639.853, 554.512, 18.7253, 0.2626 ) }
    dend_25 { pt3dadd( 639.139, 555.183, 18.6573, 0.2542 ) }
    dend_25 { pt3dadd( 638.242, 555.712, 18.4923, 0.2288 ) }
    dend_25 { pt3dadd( 638.009, 556.213, 17.92, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_45, dend_30, dend_17, dend_0, dend_49, dend_46, dend_40, dend_31, dend_29, dend_18, dend_10, dend_1, dend_48, dend_47, dend_44, dend_41, dend_35, dend_32, dend_22, dend_19, dend_16, dend_11, dend_5, dend_2, dend_43, dend_42, dend_39, dend_36, dend_34, dend_33, dend_28, dend_23, dend_21, dend_20, dend_13, dend_12, dend_7, dend_6, dend_4, dend_3, dend_38, dend_37, dend_27, dend_24, dend_15, dend_14, dend_9, dend_8, dend_26, dend_25]}
    dend = new SectionList()
    dend_45 dend.append()
    dend_30 dend.append()
    dend_17 dend.append()
    dend_0 dend.append()
    dend_49 dend.append()
    dend_46 dend.append()
    dend_40 dend.append()
    dend_31 dend.append()
    dend_29 dend.append()
    dend_18 dend.append()
    dend_10 dend.append()
    dend_1 dend.append()
    dend_48 dend.append()
    dend_47 dend.append()
    dend_44 dend.append()
    dend_41 dend.append()
    dend_35 dend.append()
    dend_32 dend.append()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_16 dend.append()
    dend_11 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_43 dend.append()
    dend_42 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_28 dend.append()
    dend_23 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_21433, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_21433 = new SectionList()
    soma_0 OneSecGrp_SectionRef_21433.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.7683586  // units: uF/cm2
    forsec axon cm = 1.7683586  // units: uF/cm2
    forsec dend cm = 1.7683586  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 44.551483  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 0.0020890876  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.085748106  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.6296148E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.0068312306  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.19338517  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.03831359  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.0037882773  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 1.5091253E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.1743088E-4  // units: S cm-2
        e_pas_nml2 = -83.07173  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 1.8500157E-4  // units: S cm-2
        e_pas_nml2 = -83.07173  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.9383313E-6  // units: S cm-2
        e_pas_nml2 = -83.07173  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 5.0810166E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0062397416  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_476637699
    forsec soma {
        insert CaDynamics_476637699
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_45 nseg = 3
    dend_49 nseg = 5
    dend_40 nseg = 3
    dend_29 nseg = 3
    dend_10 nseg = 3
    dend_48 nseg = 3
    dend_47 nseg = 7
    dend_19 nseg = 3
    dend_16 nseg = 5
    dend_42 nseg = 3
    dend_39 nseg = 7
    dend_36 nseg = 7
    dend_34 nseg = 3
    dend_28 nseg = 3
    dend_23 nseg = 3
    dend_20 nseg = 7
    dend_13 nseg = 3
    dend_12 nseg = 5
    dend_6 nseg = 5
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_26 nseg = 5
    dend_25 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_476637699


