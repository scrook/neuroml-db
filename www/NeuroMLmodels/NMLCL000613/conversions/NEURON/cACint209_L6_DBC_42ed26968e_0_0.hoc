// Cell: cACint209_L6_DBC_42ed26968e_0_0
/*
{
  "id" : "cACint209_L6_DBC_42ed26968e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.46438, -10.9587, 0.660551, 2.48146", "-1.32683, -9.87667, 0.597834, 3.97794", "-1.18928, -8.79467, 0.535117, 5.03907", "-1.05173, -7.71267, 0.4724, 6.13889", "-0.914177, -6.63067, 0.409682, 7.21767", "-0.776625, -5.54866, 0.346965, 8.03623", "-0.639073, -4.46666, 0.284248, 8.69756", "-0.501522, -3.38466, 0.221531, 9.05897", "-0.36397, -2.30266, 0.158814, 9.32273", "-0.226418, -1.22066, 0.0960968, 9.64559", "-0.0888665, -0.138661, 0.0333797, 9.88524", "0.0486852, 0.943339, -0.0293375, 9.94228", "0.186237, 2.02534, -0.0920546, 10.0768", "0.323789, 3.10734, -0.154772, 10.303", "0.46134, 4.18934, -0.217489, 10.477", "0.598892, 5.27134, -0.280206, 10.0133", "0.736444, 6.35334, -0.342923, 9.03357", "0.873996, 7.43534, -0.40564, 7.79644", "1.01155, 8.51734, -0.468357, 6.40893", "1.1491, 9.59934, -0.531074, 4.35077", "1.28665, 10.6813, -0.593792, 2.55388" ]
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "2.53825, -1.03725, -8.8572, 1.11", "2.585, -1.88054, -8.96141, 1.11", "2.66485, -3.45619, -9.20275, 1.11", "2.71495, -4.34597, -9.37001, 1.03", "2.77954, -5.51863, -9.60167, 1.03", "2.83548, -6.95339, -10.0449, 1.03", "2.83653, -8.11536, -10.5056, 1.18", "2.79878, -9.23811, -11.0451, 1.18", "2.7204, -10.3745, -11.7082, 1.4", "2.62363, -11.0304, -12.2516, 1.55", "2.17466, -13.1591, -14.4463, 1.25", "1.90325, -14.2428, -15.879, 1.25", "1.78754, -14.7064, -16.6332, 1.47", "1.60005, -15.7478, -18.5095, 1.69", "1.40623, -17.8329, -22.3936, 1.69", "1.40644, -17.8607, -22.4448, 1.69", "1.60509, -19.6618, -25.5624, 1.33", "1.82463, -20.8782, -27.4828, 1.11", "2.04933, -22.0186, -29.0426, 1.25", "2.26245, -23.1317, -30.1837, 1.4", "2.35371, -23.8925, -30.6993, 1.4", "2.35441, -24.8585, -31.2435, 1.33", "2.1538, -26.1627, -31.7527, 1.18", "1.84979, -27.1489, -32.1345, 1.18", "1.34596, -28.3229, -32.6792, 1.33", "0.667867, -29.817, -33.4781, 1.03", "0.20201, -30.9387, -34.1085, 1.25", "-0.0391821, -31.6421, -34.5089, 1.62", "-0.473215, -33.2649, -35.4183, 1.62", "-0.686787, -34.4294, -36.0221, 1.03", "-0.862985, -36.363, -36.8823, 1.03", "-0.883003, -37.8303, -37.4145, 1.18", "-0.821772, -39.2046, -37.8358, 1.18", "-0.781288, -39.6833, -37.9659, 1.55", "-0.699648, -40.4925, -38.1376, 1.55", "-0.601975, -41.5994, -38.3779, 1.69", "-0.531812, -42.7443, -38.7103, 1.84", "-0.493825, -43.7871, -39.1175, 1.47", "-0.45892, -45.2133, -39.7477, 1.18", "-0.45855, -46.4402, -40.3457, 1.18", "-0.487679, -47.8398, -41.0902, 1.18", "-0.490859, -49.3961, -41.8502, 1.33", "-0.420741, -50.6891, -42.3426, 1.03", "-0.318114, -51.6795, -42.6959, 1.03", "-0.168517, -52.7168, -43.0172, 1.03", "0.0307639, -54.0213, -43.3933, 1.33", "0.378505, -56.6929, -44.1578, 1.33", "0.60536, -59.0398, -44.905, 1.33", "0.718113, -60.7114, -45.5168, 1.18", "0.776007, -61.6641, -45.9155, 1.4", "0.901467, -63.4124, -46.8025, 1.4", "1.03722, -65.2412, -47.9071, 1.33", "1.1626, -66.8549, -49.0961, 1.18", "1.16915, -66.9153, -49.1443, 1.18", "1.33004, -67.9873, -49.9941, 1.47", "1.64206, -69.5235, -51.2466, 1.84", "1.90778, -70.4587, -51.9877, 1.62", "2.31161, -71.5832, -52.8446, 1.55", "2.80755, -72.8952, -53.8382, 1.33", "3.19281, -74.0316, -54.726, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.511751, -9.861, 0.0228061, 3.68", "-0.495567, -9.91906, 0.0228061, 3.68", "-0.363895, -10.3914, 0.0228061, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.07825, 10.4385, 0.142806, 2.43", "1.44377, 11.1833, 0.142806, 2.43", "2.13325, 12.5707, 0.142806, 2.14", "2.61395, 13.5692, 0.147596, 1.92", "2.79364, 13.9536, 0.150543, 1.92", "3.05725, 14.5026, 0.155554, 1.92", "3.23488, 14.8611, 0.158987, 1.92", "3.51577, 15.3983, 0.164882, 1.92", "3.74278, 15.819, 0.169628, 1.99", "4.08401, 16.4503, 0.17591, 1.99", "4.58599, 17.4299, 0.183994, 1.99", "4.99823, 18.2447, 0.189505, 1.99", "5.43373, 19.146, 0.193961, 1.99", "5.91122, 20.2163, 0.176381, 2.21", "6.31423, 21.246, 0.140635, 2.21", "6.56834, 22.0185, 0.0906724, 1.99", "6.65561, 22.3551, 0.0544847, 1.99", "6.81197, 23.1076, -0.0484912, 1.99", "6.96264, 24.0731, -0.196777, 2.06", "7.10107, 25.2808, -0.415038, 1.92", "7.20488, 26.4482, -0.66276, 1.92", "7.30868, 27.7521, -0.990397, 1.99", "7.3551, 28.4362, -1.18993, 2.14", "7.42925, 29.5815, -1.54058, 2.14", "7.51535, 30.9928, -1.98814, 1.99", "7.55539, 31.8525, -2.28956, 2.06", "7.57204, 32.8805, -2.67098, 2.43", "7.57365, 33.6783, -3.0008, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.28665, 10.6813, -0.593792, 0.551589", "3.17833, 25.5615, -0.593792, 0.551589", "5.07001, 40.4418, -0.593792, 0.551589" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "3.19281, -74.0316, -54.726, 0.52", "2.11714, -75.3547, -56.1932, 0.52", "1.41071, -76.453, -57.3363, 0.52", "1.04505, -77.3205, -58.2104, 0.52", "0.733968, -78.6329, -59.5216, 0.52", "0.668909, -79.2883, -60.1861, 1.11", "0.649123, -80.0865, -60.9583, 1.4", "0.772435, -80.7055, -61.5057, 1.69", "1.17009, -81.8745, -62.4726, 1.62", "1.58545, -82.8314, -63.2407, 1.4", "2.19724, -84.1082, -64.2145, 0.88", "2.58217, -84.9138, -64.8242, 0.66", "3.11847, -86.0777, -65.6389, 0.66", "3.42946, -86.7798, -66.1264, 0.88", "3.78006, -87.6117, -66.6576, 1.11", "4.09928, -88.3085, -67.0628, 1.18", "4.44757, -88.9777, -67.4231, 1.18", "4.74202, -89.4863, -67.7335, 1.18" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "3.19281, -74.0316, -54.726, 0.66", "2.6744, -75.1882, -54.2373, 0.66", "2.16775, -76.0091, -53.8068, 0.52", "2.12477, -76.0678, -53.7766, 0.52", "1.31044, -77.074, -53.2548, 0.74", "0.516094, -78.0406, -52.7996, 0.88", "-0.0866871, -78.7674, -52.4423, 0.74", "-0.934121, -79.7334, -51.8928, 0.37", "-1.53681, -80.4483, -51.4458, 1.18", "-2.15043, -81.2851, -50.9031, 1.4", "-2.76287, -82.2471, -50.2612, 0.96", "-3.25632, -83.2807, -49.4325, 0.74", "-3.59651, -84.3305, -48.4376, 0.29", "-3.7851, -85.3186, -47.4345, 0.74", "-3.84526, -85.9833, -46.7304, 0.96", "-3.84627, -86.0305, -46.6827, 0.96", "-3.84833, -87.9012, -44.9816, 0.59", "-3.87622, -88.7524, -44.393, 1.11", "-3.94153, -89.4495, -44.0227, 1.25", "-4.08468, -90.1546, -43.7667, 1.18", "-4.46735, -91.3955, -43.4149, 0.81", "-4.87704, -92.4664, -43.1939, 0.59", "-5.40548, -93.6051, -43.0751, 0.44", "-5.44748, -93.6858, -43.0667, 0.44", "-5.96709, -94.5273, -42.9443, 0.29", "-6.86502, -95.7774, -42.7232, 0.29", "-7.45085, -96.5398, -42.5719, 0.81", "-7.89286, -97.1477, -42.4523, 1.33", "-8.32811, -97.8372, -42.3751, 1.33", "-8.92705, -99.0192, -42.4082, 0.96", "-9.23547, -99.8623, -42.5434, 0.81", "-9.46275, -100.782, -42.7953, 0.81", "-9.65511, -101.913, -43.1801, 0.74", "-9.82278, -103.433, -43.7578, 0.44", "-9.91016, -104.8, -44.3596, 0.66", "-9.94027, -105.683, -44.8005, 0.74", "-9.98369, -106.482, -45.2082, 1.03", "-10.0857, -107.412, -45.6753, 1.25", "-10.2641, -108.385, -46.1171, 1.11", "-10.5598, -109.572, -46.5788, 0.59", "-10.8326, -110.538, -46.9142, 0.59", "-11.1338, -111.553, -47.2815, 0.66", "-11.355, -112.289, -47.5438, 0.66", "-11.674, -113.417, -47.9075, 0.52", "-11.9389, -114.465, -48.2352, 0.52", "-12.1273, -115.39, -48.4925, 0.59", "-12.3014, -116.587, -48.8493, 1.25", "-12.3454, -117.048, -48.9982, 1.4", "-12.3914, -117.884, -49.278, 1.4", "-12.4486, -119.106, -49.6318, 0.88", "-12.4931, -119.888, -49.8139, 0.52", "-12.6315, -121.242, -50.0686, 0.52", "-12.7934, -122.088, -50.0956, 0.52", "-12.818, -122.175, -50.0844, 0.52", "-13.2659, -123.47, -49.6688, 0.52", "-13.2899, -123.539, -49.6383, 0.52", "-13.4797, -124.096, -49.3545, 0.96", "-13.9312, -125.593, -48.5325, 1.33", "-14.2137, -126.731, -47.9659, 0.66", "-14.4497, -127.842, -47.4984, 0.59", "-14.644, -128.922, -47.1455, 0.74", "-14.6598, -129.009, -47.1222, 0.74", "-14.8333, -129.924, -46.9469, 0.74", "-15.0003, -130.653, -46.883, 1.03", "-15.1981, -131.243, -46.8486, 1.25", "-15.5203, -131.993, -46.8373, 1.18", "-15.8744, -132.678, -46.8394, 0.59", "-16.2786, -133.371, -46.8568, 0.29", "-16.6527, -133.946, -46.8867, 0.29", "-16.9524, -134.383, -46.9146, 0.81", "-17.2119, -134.762, -46.9421, 1.11", "-17.5886, -135.358, -46.9893, 1.11", "-17.9797, -136.124, -47.0436, 0.59", "-18.006, -136.209, -47.0481, 0.59", "-18.0818, -136.973, -47.0726, 0.44", "-18.0729, -137.051, -47.0733, 0.44", "-17.835, -137.838, -47.0632, 0.44", "-17.5396, -138.501, -47.0588, 0.81", "-17.1822, -139.185, -47.0572, 1.11", "-16.9529, -139.615, -47.0754, 1.11", "-16.636, -140.218, -47.1338, 0.88", "-16.3746, -140.774, -47.2102, 0.66", "-16.0729, -141.509, -47.3364, 0.66", "-15.8144, -142.267, -47.4792, 0.44", "-15.5931, -143.086, -47.635, 0.29", "-15.4191, -144.015, -47.8039, 0.88", "-15.3474, -144.724, -47.9155, 0.88", "-15.3396, -145.295, -47.9885, 0.88", "-15.3884, -146.102, -48.0609, 0.74", "-15.4806, -146.911, -48.1108, 0.37", "-15.5897, -147.668, -48.1274, 0.29", "-15.759, -148.773, -48.132, 0.29", "-15.8934, -149.676, -48.1355, 0.81", "-16.0012, -150.511, -48.138, 1.03", "-16.0084, -150.601, -48.138, 1.03", "-16.0158, -151.324, -48.1347, 1.18", "-15.9889, -152.135, -48.1299, 1.33", "-15.9444, -152.844, -48.1259, 1.33", "-15.855, -153.924, -48.1285, 0.59", "-15.7669, -154.992, -48.1386, 0.44", "-15.6972, -155.943, -48.153, 0.44", "-15.6386, -156.814, -48.1673, 0.81", "-15.5826, -157.791, -48.1843, 1.11", "-15.5578, -158.691, -48.2021, 1.11", "-15.583, -159.252, -48.217, 1.25", "-15.7174, -160.142, -48.2483, 1.11", "-15.982, -161.241, -48.3191, 0.66", "-16.2178, -162.021, -48.3873, 0.37", "-16.503, -162.764, -48.4687, 0.29", "-16.923, -163.831, -48.5923, 0.37", "-17.157, -164.593, -48.7196, 0.52", "-17.2968, -165.408, -48.8553, 0.88", "-17.3155, -165.966, -48.9416, 1.03", "-17.2925, -166.209, -48.9752, 1.03", "-17.1186, -167.472, -49.0443, 0.74", "-16.908, -168.908, -49.0412, 0.59", "-16.7664, -170.038, -49.0054, 0.59", "-16.7085, -170.64, -48.9407, 1.4", "-16.6533, -171.323, -48.8395, 1.77", "-16.5516, -173.205, -48.4457, 0.81", "-16.5373, -174.165, -48.1827, 0.81", "-16.564, -175.483, -47.6968, 0.81", "-16.5765, -176.768, -47.1724, 1.11", "-16.5624, -177.405, -46.8881, 1.11", "-16.4982, -178.411, -46.4145, 0.88", "-16.4886, -178.53, -46.3556, 0.88", "-16.4641, -179.527, -45.8431, 0.59", "-16.5383, -180.557, -45.3457, 0.59", "-16.63, -181.367, -45.0023, 0.52", "-16.7318, -182.059, -44.7241, 0.52", "-16.9851, -183.692, -44.1544, 0.74", "-17.1099, -184.444, -43.9156, 1.33", "-17.2988, -185.422, -43.6542, 1.69" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.363895, -10.3914, 0.0228061, 2.73", "-0.0846646, -12.5439, 0.107562, 2.73", "0.174031, -14.7449, 0.187782, 2.14", "0.351102, -16.4785, 0.244554, 2.14", "0.529696, -18.4629, 0.303751, 2.28", "0.688692, -20.3593, 0.332794, 2.14", "0.893728, -22.8186, 0.352878, 1.92", "1.02379, -24.6259, 0.327656, 2.06", "1.17008, -27.1389, 0.246646, 1.84", "1.25449, -29.4831, 0.095846, 1.84", "1.28734, -31.251, -0.0628267, 1.84", "1.28508, -33.4781, -0.334163, 1.92", "1.21949, -35.6173, -0.703749, 1.92", "1.08477, -37.3805, -1.10374, 1.92", "0.823547, -39.1507, -1.58606, 1.84", "0.431992, -41.0436, -2.16185, 1.84", "0.12536, -42.1824, -2.54422, 1.77", "-0.619716, -44.5539, -3.4117, 1.69", "-1.48977, -47.0315, -4.35708, 1.69", "-2.26094, -49.0501, -5.17281, 1.84", "-2.29212, -49.121, -5.20194, 1.84", "-2.77124, -50.047, -5.61905, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.363895, -10.3914, 0.0228061, 0.96", "-0.57252, -11.576, -0.626394, 0.96", "-0.817819, -12.766, -1.1487, 1.25", "-1.16635, -14.1706, -1.64201, 0.96", "-1.42521, -15.0856, -1.85189, 1.25", "-1.63549, -15.7324, -1.95297, 1.47", "-1.92637, -16.568, -2.05166, 1.11", "-2.33839, -17.6412, -2.07527, 0.96", "-2.79898, -18.6658, -2.00378, 1.11", "-3.48075, -19.9616, -1.84781, 1.11", "-3.98203, -20.8009, -1.75072, 1.11", "-4.02488, -20.8654, -1.74376, 1.11", "-4.62154, -21.644, -1.67166, 0.96", "-4.6502, -21.6764, -1.67069, 0.96", "-5.24733, -22.2363, -1.70707, 1.03", "-5.69675, -22.6207, -1.78269, 1.25", "-5.74031, -22.6606, -1.79089, 1.25", "-6.35103, -23.2473, -1.91395, 0.88", "-6.93064, -23.8427, -2.04322, 0.88", "-7.6682, -24.6516, -2.24336, 1.11", "-8.24694, -25.3452, -2.42324, 1.11", "-8.79587, -26.0511, -2.61287, 1.25", "-8.84701, -26.127, -2.63205, 1.25", "-9.32162, -26.986, -2.85109, 0.96", "-9.74098, -27.8847, -3.0661, 0.96", "-10.0484, -28.6373, -3.23667, 1.03", "-10.0698, -28.6911, -3.24802, 1.03", "-10.4454, -29.6278, -3.42915, 1.03", "-10.7362, -30.3595, -3.54947, 1.03", "-10.9877, -31.0123, -3.61941, 1.25", "-11.2451, -31.7015, -3.6543, 1.62", "-11.6456, -32.7358, -3.67093, 1.25", "-11.9523, -33.4959, -3.65974, 1.18", "-12.1981, -34.0447, -3.61123, 1.18", "-12.5194, -34.7124, -3.49859, 1.33", "-12.9274, -35.4755, -3.32676, 1.33", "-13.3094, -36.1409, -3.16586, 1.03", "-13.3329, -36.1787, -3.15621, 1.03", "-13.7759, -36.877, -3.03186, 0.81", "-14.1154, -37.4149, -3.01108, 0.66", "-14.4631, -37.9639, -3.09804, 0.81", "-14.8957, -38.6497, -3.35183, 1.03", "-15.1223, -39.0261, -3.54666, 1.33", "-15.3849, -39.5341, -3.86085, 1.62", "-15.6423, -40.135, -4.26801, 1.55", "-15.8851, -40.8103, -4.70746, 1.18", "-16.1401, -41.6179, -5.17727, 0.96", "-16.1532, -41.6631, -5.20007, 0.96", "-16.4318, -42.7119, -5.65631, 0.88", "-16.6587, -43.6168, -5.96751, 0.88", "-16.8298, -44.4093, -6.17057, 1.18", "-16.9767, -45.2091, -6.33356, 1.4", "-17.1408, -46.1, -6.49495, 1.4", "-17.2784, -46.7167, -6.61698, 1.18", "-17.4818, -47.4233, -6.76207, 0.96", "-17.7179, -48.0579, -6.9215, 1.11", "-18.1116, -48.8503, -7.20242, 0.88", "-18.4567, -49.4577, -7.44928, 0.74", "-18.8742, -50.059, -7.72741, 0.96", "-19.2028, -50.4493, -7.94483, 1.25", "-19.707, -50.9283, -8.27275, 1.33", "-20.3783, -51.4186, -8.67645, 1.4" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.57365, 33.6783, -3.0008, 1.4", "7.18869, 34.9595, -3.57725, 1.4", "6.96314, 35.859, -3.89921, 1.4", "6.63623, 37.181, -4.1682, 1.25", "6.58201, 37.3912, -4.17429, 1.25", "6.41458, 38.0323, -4.13378, 1.03", "6.21218, 38.8062, -4.05323, 1.03", "6.03653, 39.5589, -3.88927, 1.18", "5.72209, 40.7498, -3.44572, 1.33", "5.40389, 41.8428, -2.88876, 1.33", "5.18221, 42.612, -2.46665, 1.47", "5.03315, 43.1802, -2.14829, 1.47", "4.86543, 43.9672, -1.73336, 1.47", "4.60098, 45.6686, -0.941242, 1.4", "4.50297, 46.7359, -0.525534, 1.4", "4.47709, 47.4393, -0.300817, 1.4", "4.48825, 48.411, -0.034518, 1.62", "4.54686, 49.5364, 0.205522, 1.18", "4.64103, 50.4503, 0.319793, 1.18", "4.65235, 50.5234, 0.320995, 1.18", "4.82528, 51.7314, 0.300712, 1.18", "4.93776, 52.7003, 0.281352, 1.47", "4.96578, 53.0041, 0.274167, 1.47", "5.05186, 54.0338, 0.249394, 1.4", "5.14266, 55.1245, 0.2253, 1.33", "5.24719, 56.4323, 0.197613, 1.33", "5.33317, 57.6621, 0.172759, 1.62", "5.37597, 58.5567, 0.151847, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.57365, 33.6783, -3.0008, 1.18", "8.56032, 33.8723, -2.80518, 1.18", "9.48559, 34.0076, -2.47256, 0.96", "9.99199, 34.0718, -2.27784, 1.25", "10.0503, 34.0816, -2.25094, 1.25", "10.896, 34.2526, -1.85568, 1.25", "11.6823, 34.4539, -1.49344, 1.25", "13.1026, 34.8465, -0.84187, 1.18", "13.7605, 35.0623, -0.547341, 0.81", "14.6705, 35.4209, -0.131367, 0.96", "15.3683, 35.7703, 0.160496, 0.96", "15.9176, 36.1554, 0.346085, 0.96", "15.9546, 36.1874, 0.351905, 0.96", "16.5514, 36.7491, 0.303717, 0.96", "16.5913, 36.7886, 0.296847, 0.96", "17.1163, 37.3077, 0.154015, 1.18", "17.7969, 37.9777, -0.0368534, 1.4", "18.3628, 38.5083, -0.191871, 1.33", "18.4282, 38.5669, -0.205375, 1.33", "19.076, 39.0999, -0.28828, 1.18", "19.1896, 39.1789, -0.284568, 1.18", "19.699, 39.4815, -0.196307, 1.18", "19.8377, 39.5507, -0.145218, 1.18", "20.5459, 39.8752, 0.208871, 0.96", "21.2308, 40.1853, 0.600118, 0.96", "22.1798, 40.6459, 1.23132, 1.03", "22.25, 40.6861, 1.27934, 1.03", "23.2924, 41.4147, 1.99412, 1.03", "23.3583, 41.4635, 2.04048, 1.03", "23.7317, 41.7788, 2.31206, 1.03", "24.2261, 42.2773, 2.68098, 1.18", "24.8356, 43.0436, 3.04688, 1.4", "25.3229, 43.7103, 3.27516, 1.62" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.07001, 40.4418, -0.593792, 0.15", "6.9617, 55.322, -0.593792, 0.15", "8.85338, 70.2023, -0.593792, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "4.74202, -89.4863, -67.7335, 0.52", "4.11961, -89.8675, -68.2923, 0.52", "3.327, -90.3858, -68.9411, 0.52", "3.02387, -90.6249, -69.213, 0.96", "2.39764, -91.2522, -69.8889, 1.33", "2.07397, -91.6605, -70.2964, 0.81", "1.70448, -92.2768, -70.8538, 0.52", "1.69415, -92.3147, -70.8804, 0.52", "1.7525, -93.2191, -71.4782, 0.88", "1.96116, -93.9016, -71.9323, 1.25", "2.15491, -94.2804, -72.1924, 1.47", "2.48826, -94.7912, -72.5742, 1.47", "2.92909, -95.3644, -73.0161, 0.88", "3.60438, -96.195, -73.6766, 0.88", "3.95783, -96.6111, -74.0435, 0.37", "4.32587, -97.094, -74.5017, 0.66", "4.35033, -97.1348, -74.5447, 0.66", "4.45616, -97.4057, -74.842, 0.96", "4.57505, -98.1335, -75.5883, 1.11", "4.50745, -99.1706, -76.4993, 0.44", "4.40301, -99.7278, -76.9362, 0.44", "4.2066, -100.558, -77.5631, 0.52", "4.09444, -101.016, -77.9095, 0.74", "3.94274, -101.523, -78.27, 0.74", "3.72063, -102.158, -78.7151, 1.03", "3.38787, -103.22, -79.4814, 0.88", "3.13782, -104.25, -80.2646, 1.18", "2.9908, -105.246, -81.0984, 0.96", "2.96824, -106.06, -81.9388, 0.59", "3.01418, -106.963, -83.0214, 0.29", "3.08682, -107.628, -83.9099, 0.88", "3.10864, -107.824, -84.1917, 1.47", "3.19378, -108.636, -85.3825, 1.33", "3.28107, -109.845, -87.1389, 0.52", "3.28506, -110.167, -87.582, 0.29", "3.24548, -110.447, -87.8942, 0.96", "3.02476, -111.226, -88.632, 1.77", "2.92771, -111.555, -88.9259, 1.77", "2.69466, -112.282, -89.4937, 1.11", "2.55035, -112.881, -90.02, 0.37", "2.52508, -113.293, -90.5368, 0.29", "2.5667, -113.9, -91.4569, 0.74", "2.75491, -114.777, -92.9283, 1.33", "2.76323, -114.803, -92.9768, 1.33", "3.11115, -115.612, -94.6534, 1.55", "3.60155, -116.632, -96.9101, 0.96", "3.61259, -116.656, -96.9647, 0.96", "3.72003, -116.97, -97.5958, 1.18", "3.72565, -116.995, -97.6373, 1.18", "3.83533, -117.993, -99.0105, 0.44", "3.76569, -118.523, -99.5191, 0.37", "3.66632, -118.969, -99.9999, 0.52", "3.59789, -119.318, -100.459, 0.81", "3.5272, -119.735, -101.032, 1.33", "3.49764, -120.02, -101.43, 0.96", "3.49155, -120.93, -102.697, 1.25", "3.69581, -122.836, -105.377, 0.52", "3.88006, -123.733, -106.675, 0.44", "4.02141, -124.183, -107.334, 0.59", "4.34008, -124.937, -108.439, 0.59", "4.74097, -125.665, -109.461, 0.74", "5.00835, -126.048, -109.937, 1.18", "5.03563, -126.085, -109.97, 1.18", "5.34477, -126.445, -110.263, 1.47", "5.37794, -126.48, -110.292, 1.47", "6.13747, -127.316, -110.82, 1.18", "6.16994, -127.359, -110.842, 1.18", "6.45984, -127.852, -111.06, 1.18", "6.80533, -128.689, -111.438, 0.52", "6.92869, -129.238, -111.692, 0.29", "7.00042, -129.862, -112.003, 0.29", "7.01916, -130.288, -112.228, 0.88", "7.01927, -130.87, -112.572, 1.11", "6.96813, -131.978, -113.274, 0.81", "6.93437, -132.682, -113.801, 0.37", "6.93482, -133.426, -114.603, 0.29", "6.94391, -133.766, -115.078, 0.96", "6.94437, -133.798, -115.136, 0.96", "6.93031, -134.071, -115.729, 1.18", "6.81829, -134.64, -117.112, 1.11", "6.45038, -135.611, -119.612, 0.44", "6.27761, -135.903, -120.39, 0.74", "5.90782, -136.403, -121.647, 0.59", "5.66185, -136.696, -122.314, 0.81", "5.25304, -137.112, -123.132, 0.44", "4.95508, -137.416, -123.518, 0.59", "4.9223, -137.457, -123.542, 0.59", "4.55044, -138.067, -123.805, 0.52", "4.31356, -138.563, -123.972, 1.03", "4.09156, -139.156, -124.17, 1.4", "3.79921, -140.071, -124.453, 1.33", "3.61931, -140.71, -124.698, 1.11", "3.5063, -141.345, -125.045, 0.59", "3.50354, -141.393, -125.077, 0.59", "3.54085, -141.821, -125.446, 0.44", "3.70493, -142.507, -126.179, 0.44", "3.97519, -143.265, -127.127, 0.74", "4.41915, -144.338, -128.58, 0.74", "4.52955, -144.595, -128.929, 1.25", "4.84941, -145.388, -130.015, 1.55", "5.16934, -146.239, -131.201, 1.77", "5.48769, -147.271, -132.674, 0.74", "5.57624, -147.819, -133.41, 0.52", "5.57001, -148.188, -133.871, 0.52", "5.4577, -148.968, -134.818, 0.96", "5.35617, -149.296, -135.176, 1.18", "4.96441, -150.086, -135.993, 0.52", "4.704, -150.465, -136.385, 0.52", "4.51557, -150.69, -136.634, 0.66", "4.48496, -150.72, -136.67, 0.66", "4.21768, -150.945, -136.935, 0.44", "3.50949, -151.452, -137.548, 0.29", "3.46588, -151.476, -137.575, 0.29", "3.12511, -151.623, -137.766, 0.52", "2.77457, -151.76, -137.927, 0.81", "2.34648, -151.942, -138.067, 0.96", "1.92081, -152.132, -138.153, 1.11", "1.32901, -152.429, -138.195, 0.29", "1.25364, -152.471, -138.197, 0.29", "0.596928, -152.844, -138.19, 0.29", "-0.00524795, -153.177, -138.167, 0.88", "-0.223147, -153.295, -138.153, 1.03", "-0.718384, -153.534, -138.121, 1.18", "-1.47074, -153.83, -138.101, 0.29", "-2.36311, -154.107, -138.119, 0.29", "-2.73, -154.194, -138.158, 0.59", "-2.78438, -154.206, -138.169, 0.59", "-3.41004, -154.341, -138.356, 0.59", "-4.01816, -154.509, -138.601, 1.11", "-4.5291, -154.699, -138.857, 1.4", "-5.1454, -154.994, -139.21, 0.96", "-5.76431, -155.365, -139.585, 0.59", "-6.47842, -155.88, -140.027, 0.37", "-7.01805, -156.35, -140.359, 0.37", "-7.34871, -156.663, -140.533, 0.74", "-7.38724, -156.703, -140.55, 0.74", "-7.77457, -157.134, -140.666, 0.74", "-8.07951, -157.486, -140.731, 1.03", "-8.43472, -157.902, -140.777, 1.33", "-8.97261, -158.463, -140.822, 1.47", "-9.57646, -159.045, -140.868, 0.37", "-10.3165, -159.737, -140.926, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "4.74202, -89.4863, -67.7335, 0.52", "5.52461, -90.4611, -66.1663, 0.52", "6.43404, -91.7038, -64.5336, 0.44", "6.89558, -92.4116, -63.8011, 0.88", "6.93153, -92.4745, -63.7489, 0.88", "7.22981, -93.0473, -63.3467, 1.03", "7.54071, -93.7083, -62.9525, 0.81", "7.88076, -94.6118, -62.6633, 0.29", "8.20346, -95.6278, -62.4759, 0.22", "8.42283, -96.4056, -62.3568, 0.52", "8.52457, -96.8245, -62.2933, 0.74", "8.73374, -97.9152, -62.1338, 0.29", "8.86325, -98.8717, -61.9918, 0.29", "8.94372, -99.8211, -61.859, 0.74", "8.96568, -100.362, -61.7777, 1.03", "8.9808, -101.034, -61.6742, 0.96", "8.97752, -101.742, -61.5669, 0.59", "8.97373, -102.746, -61.3834, 0.22", "8.99674, -103.363, -61.2475, 0.37", "9.01662, -103.52, -61.2095, 0.37", "9.18282, -104.156, -61.0632, 0.37", "9.21483, -104.233, -61.048, 0.37", "9.83076, -105.364, -60.9914, 0.29", "10.3108, -106.126, -61.04, 0.88", "10.6189, -106.606, -61.1014, 1.18", "11.2107, -107.563, -61.2646, 0.29", "11.7598, -108.471, -61.4589, 0.29", "12.5624, -109.871, -61.722, 0.52", "12.8983, -110.505, -61.8274, 0.81", "13.4134, -111.537, -61.9365, 0.22", "13.6368, -112.025, -61.9568, 0.59", "13.6803, -112.131, -61.9561, 0.59", "14.2895, -113.81, -61.8878, 0.44", "14.6853, -114.995, -61.8, 0.66", "14.9446, -115.796, -61.7577, 0.59", "15.1614, -116.47, -61.7588, 0.44", "15.5131, -117.573, -61.8218, 0.96", "15.8183, -118.412, -61.9709, 1.33", "16.2071, -119.254, -62.2703, 0.59", "16.2553, -119.334, -62.307, 0.59", "16.7767, -120.013, -62.7041, 0.59", "16.8201, -120.065, -62.7421, 0.59", "17.7068, -121.166, -63.7026, 0.29", "18.0833, -121.701, -64.2129, 0.44", "18.3787, -122.206, -64.6508, 0.44", "18.764, -122.971, -65.2528, 0.44", "19.17, -123.968, -65.9346, 1.33", "19.6162, -125.172, -66.6705, 1.11", "19.9789, -126.298, -67.2687, 0.52", "20.3389, -127.327, -67.8043, 0.29", "20.365, -127.401, -67.8406, 0.29", "20.629, -128.036, -68.0901, 0.29", "21.1563, -128.863, -68.3096, 0.29", "21.5313, -129.252, -68.3349, 0.96", "22.0499, -129.566, -68.3004, 1.25" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-17.2988, -185.422, -43.6542, 0.29", "-18.7429, -185.992, -42.6884, 0.29", "-19.6225, -186.462, -42.0017, 0.29", "-19.8893, -186.616, -41.7918, 0.74", "-19.9573, -186.656, -41.7394, 0.74", "-20.3985, -186.909, -41.4219, 0.74", "-21.3881, -187.397, -40.8713, 0.29", "-22.1746, -187.772, -40.5992, 0.29", "-22.5643, -187.921, -40.5192, 0.74", "-22.9069, -188.018, -40.491, 1.11", "-23.4849, -188.175, -40.4719, 1.11", "-25.0003, -188.577, -40.5054, 0.29", "-25.4952, -188.727, -40.5234, 0.37", "-26.1922, -189.008, -40.4637, 0.37", "-26.9653, -189.412, -40.2895, 0.66", "-27.7377, -189.918, -40.0209, 0.52", "-28.1877, -190.257, -39.8171, 0.96", "-28.9914, -190.918, -39.3888, 1.33", "-30.1717, -191.848, -38.7982, 0.59", "-30.7019, -192.257, -38.5087, 0.37", "-31.1262, -192.574, -38.27, 0.22", "-31.8774, -193.113, -37.8692, 0.22", "-32.5198, -193.578, -37.5423, 0.66", "-33.3379, -194.215, -37.1736, 0.66", "-34.5681, -195.304, -36.6775, 0.52", "-34.7396, -195.477, -36.6057, 0.29", "-35.1965, -195.995, -36.4362, 0.74", "-35.3888, -196.241, -36.343, 0.74", "-36.2471, -197.42, -35.8865, 0.37", "-36.9521, -198.457, -35.5157, 0.44", "-37.3052, -198.969, -35.3708, 0.59", "-37.9253, -199.849, -35.1273, 0.52", "-39.2722, -201.638, -34.6346, 0.37", "-39.9002, -202.392, -34.4258, 0.37", "-40.6544, -203.195, -34.2105, 0.29", "-41.6195, -204.124, -33.964, 0.59", "-41.8157, -204.308, -33.9228, 0.88", "-42.4535, -204.861, -33.8341, 0.66", "-43.2252, -205.474, -33.8425, 0.15", "-44.1147, -206.056, -33.8337, 0.15", "-44.1876, -206.092, -33.8324, 0.15", "-45.0599, -206.45, -33.8715, 0.59", "-45.6472, -206.701, -33.9472, 0.88", "-45.7114, -206.733, -33.9605, 0.88", "-46.1858, -206.999, -34.0919, 0.88", "-46.9037, -207.482, -34.3387, 0.88", "-47.9748, -208.39, -34.7749, 0.29", "-48.4988, -208.917, -35.0121, 0.29", "-48.9257, -209.443, -35.2206, 0.66", "-49.2598, -209.908, -35.3757, 0.81", "-49.6942, -210.631, -35.5709, 0.66", "-50.2071, -211.616, -35.7725, 0.29", "-50.4558, -212.136, -35.8475, 0.81", "-50.6425, -212.514, -35.8945, 0.81", "-51.1395, -213.392, -35.979, 0.22", "-51.5189, -213.971, -35.9715, 0.22", "-51.7633, -214.317, -35.9263, 0.81", "-51.9879, -214.597, -35.8634, 0.96", "-52.7532, -215.425, -35.5044, 0.22", "-53.2552, -215.843, -35.0858, 0.22", "-53.9632, -216.284, -34.2526, 0.74", "-54.2078, -216.411, -33.9272, 1.18", "-54.6335, -216.613, -33.3235, 0.74", "-55.6344, -217.029, -31.8684, 0.59", "-56.9996, -217.549, -29.8801, 0.44", "-58.1032, -218.018, -28.3244, 0.37", "-58.1596, -218.046, -28.2529, 0.37", "-58.4678, -218.22, -27.8923, 0.66", "-58.7449, -218.458, -27.5444, 0.74", "-59.4138, -219.237, -26.6927, 0.29", "-59.8663, -219.875, -26.1021, 0.29", "-60.3243, -220.509, -25.472, 0.29", "-60.4377, -220.672, -25.2984, 0.74", "-61.4857, -222.331, -23.3549, 0.66", "-61.8975, -223.086, -22.361, 0.22", "-61.9925, -223.295, -22.0136, 0.22", "-62.1842, -223.694, -21.0872, 0.44" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-17.2988, -185.422, -43.6542, 0.37", "-16.9091, -186.957, -44.8215, 0.37", "-16.7083, -187.803, -45.3954, 0.37", "-16.6981, -187.854, -45.4251, 0.37", "-16.6115, -188.4, -45.7097, 0.81", "-16.4983, -189.216, -46.0987, 0.88", "-16.4562, -189.557, -46.2484, 0.88", "-16.3849, -190.253, -46.4962, 0.52", "-16.3301, -191.045, -46.7693, 0.52", "-16.3157, -191.773, -47.0546, 0.52", "-16.3424, -192.174, -47.2284, 0.96", "-16.3942, -192.523, -47.384, 0.96", "-16.5923, -193.462, -47.8409, 0.37", "-16.7534, -194.016, -48.129, 0.29", "-16.9622, -194.557, -48.4403, 0.59", "-17.2092, -195.053, -48.7347, 0.96", "-17.4188, -195.409, -48.9423, 1.18", "-17.4496, -195.456, -48.9668, 1.18", "-17.6455, -195.737, -49.1133, 1.18", "-17.9591, -196.256, -49.3857, 1.03", "-18.2725, -196.874, -49.6852, 0.59", "-18.4546, -197.293, -49.8551, 0.52", "-18.6013, -197.642, -49.9695, 0.66", "-18.9978, -198.53, -50.1933, 0.29", "-19.295, -199.145, -50.289, 0.44", "-19.4397, -199.427, -50.2971, 0.52", "-19.9378, -200.319, -50.2443, 0.66", "-20.2485, -200.822, -50.1881, 0.37", "-20.6249, -201.377, -50.1058, 0.88", "-20.862, -201.691, -50.0518, 1.18", "-21.3449, -202.304, -49.9676, 0.96", "-21.6728, -202.741, -49.9289, 0.66", "-21.8905, -203.07, -49.9036, 1.03", "-22.2339, -203.7, -49.8316, 0.52", "-22.5712, -204.504, -49.7112, 0.52", "-22.7356, -205.058, -49.6212, 1.11", "-22.8309, -205.613, -49.5221, 1.11", "-22.9066, -206.504, -49.3644, 0.74", "-22.923, -207.009, -49.279, 0.44", "-22.923, -207.779, -49.1565, 0.59", "-22.9235, -208.83, -49.0188, 0.59", "-22.9651, -209.829, -48.9303, 0.59", "-23.0374, -210.673, -48.8834, 0.52", "-23.1148, -211.21, -48.8772, 1.18", "-23.1822, -211.553, -48.8777, 1.33", "-23.4233, -212.472, -48.8969, 1.18", "-23.6613, -213.198, -48.9164, 0.88", "-23.8757, -213.777, -48.9344, 0.52", "-24.1061, -214.427, -48.9536, 0.66", "-24.1248, -214.495, -48.952, 0.66", "-24.2175, -215.069, -48.9117, 0.81", "-24.2911, -215.731, -48.8506, 0.44", "-24.3366, -216.453, -48.7684, 0.44", "-24.3587, -217.34, -48.6496, 0.44", "-24.3277, -218.473, -48.4662, 0.37", "-24.2834, -219.216, -48.3292, 0.29" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-2.77124, -50.047, -5.61905, 1.03", "-3.80715, -50.3492, -5.59944, 1.03", "-4.52583, -50.659, -5.47945, 1.03", "-5.40478, -51.1512, -5.28138, 0.96", "-5.98445, -51.5597, -5.14139, 0.96", "-6.0599, -51.6186, -5.12265, 0.96", "-7.53531, -52.9289, -4.7618, 0.81", "-8.06729, -53.5371, -4.60633, 1.11", "-8.58559, -54.1994, -4.44603, 1.11", "-9.24844, -55.0832, -4.24282, 1.03", "-9.2815, -55.1253, -4.234, 1.03", "-9.99267, -55.9531, -4.05436, 1.03", "-10.5068, -56.5256, -3.95871, 1.25", "-10.9501, -56.9975, -3.84059, 1.4", "-11.2578, -57.3113, -3.73693, 1.4", "-11.8531, -57.9314, -3.47235, 1.25", "-12.4663, -58.6666, -3.14213, 1.11", "-12.7901, -59.1316, -2.93174, 1.11", "-13.1283, -59.7512, -2.66962, 1.03", "-13.1683, -59.843, -2.63811, 1.03", "-13.423, -60.5205, -2.49619, 0.81", "-13.6736, -61.263, -2.43306, 0.96", "-13.927, -62.0737, -2.43049, 0.96", "-14.1975, -62.9941, -2.45459, 0.81", "-14.3608, -63.6708, -2.50135, 0.74", "-14.574, -64.6847, -2.60606, 0.81", "-14.665, -65.2375, -2.68246, 1.11", "-14.7532, -66.0321, -2.79782, 1.11", "-14.7856, -66.634, -2.8853, 1.11", "-14.8007, -67.802, -3.04712, 0.88", "-14.7931, -68.3888, -3.10064, 1.11", "-14.7688, -69.0775, -3.14996, 1.11", "-14.7449, -69.6107, -3.1951, 1.33", "-14.7285, -70.1638, -3.24471, 0.96", "-14.7226, -70.8257, -3.30452, 1.11", "-14.7109, -71.6339, -3.37076, 1.11", "-14.6827, -72.3079, -3.43655, 1.4", "-14.6558, -72.8995, -3.5084, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-2.77124, -50.047, -5.61905, 1.47", "-2.71717, -51.6753, -5.65783, 1.47", "-2.68385, -52.6789, -5.68173, 1.47", "-2.61125, -54.8651, -5.7338, 1.47", "-2.56284, -56.3231, -5.76852, 1.62", "-2.50358, -58.1075, -5.81102, 1.92", "-2.44626, -59.8337, -5.85213, 1.92" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-20.3783, -51.4186, -8.67645, 0.88", "-22.314, -51.5452, -8.56328, 0.88", "-22.8916, -51.6168, -8.57071, 1.11", "-23.5508, -51.734, -8.64525, 0.88", "-24.3745, -51.8978, -8.76755, 0.81", "-25.3331, -52.1432, -8.95222, 0.74", "-26.2393, -52.4433, -9.1473, 0.96", "-27.1152, -52.8389, -9.42461, 0.96", "-28.2921, -53.5004, -9.81112, 0.81", "-28.3457, -53.538, -9.82857, 0.81", "-29.2804, -54.3171, -10.1272, 0.74", "-30.0742, -55.0669, -10.3736, 0.74", "-30.3565, -55.3433, -10.4489, 1.03", "-30.8969, -55.8552, -10.5745, 1.11", "-31.8193, -56.6608, -10.7471, 1.11", "-31.8914, -56.7176, -10.7615, 1.11", "-32.9811, -57.4564, -10.9784, 0.88", "-34.271, -58.2572, -11.2502, 0.88", "-34.8429, -58.5891, -11.3754, 1.25", "-35.5634, -58.9719, -11.5409, 1.25", "-36.5572, -59.4615, -11.7792, 1.4", "-37.291, -59.8212, -11.9529, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-20.3783, -51.4186, -8.67645, 0.74", "-20.0684, -51.9416, -9.63656, 0.74", "-19.677, -52.6321, -10.9224, 0.44", "-19.6502, -52.6812, -11.009, 0.44", "-19.3729, -53.1858, -11.8104, 0.44", "-18.8649, -54.0974, -13.1699, 1.03", "-17.9044, -55.9494, -15.7701, 1.03", "-17.6199, -56.5544, -16.6106, 1.33", "-17.2729, -57.4193, -17.7635, 1.11", "-17.0683, -58.0371, -18.6258, 0.59", "-16.8276, -58.9671, -19.9606, 0.44", "-16.6475, -60.1975, -21.6419, 0.44", "-16.5933, -61.0122, -22.7584, 0.88", "-16.6068, -61.3905, -23.3251, 1.25", "-16.8155, -62.8643, -25.6111, 1.25", "-16.8243, -62.9024, -25.6725, 1.25", "-16.8745, -63.0783, -25.9341, 1.25", "-16.8848, -63.1193, -25.9834, 1.25", "-17.0735, -64.5085, -27.0422, 0.74", "-17.1331, -65.345, -27.5259, 0.74", "-17.1368, -65.4104, -27.5534, 0.74", "-17.1637, -66.0027, -27.8533, 0.74", "-17.1995, -66.8401, -28.4144, 0.81", "-17.2539, -67.5477, -28.9582, 0.81", "-17.4476, -68.9759, -30.2406, 0.44", "-17.4587, -69.0257, -30.2909, 0.44", "-17.6991, -69.8963, -31.2243, 0.74", "-18.0581, -71.0612, -32.5635, 0.88", "-18.2215, -71.6119, -33.195, 1.03", "-18.4687, -72.4991, -34.1526, 1.03", "-18.5973, -73.0682, -34.661, 1.18", "-18.6055, -73.1189, -34.7, 1.18", "-18.663, -74.3028, -35.3687, 0.52", "-18.533, -75.1633, -35.6845, 0.44", "-18.3561, -75.616, -35.8293, 0.81", "-18.152, -75.9903, -35.9354, 0.88", "-18.0748, -76.1222, -35.9801, 0.88", "-17.7333, -76.7447, -36.2022, 0.74", "-17.3645, -77.5115, -36.4836, 0.44", "-17.0689, -78.3075, -36.8018, 0.59", "-16.7879, -79.4004, -37.2174, 0.52", "-16.6353, -80.2679, -37.5467, 0.88", "-16.5674, -80.8614, -37.7635, 1.18", "-16.5243, -81.7161, -38.0915, 0.52", "-16.5422, -82.2788, -38.307, 0.44", "-16.6214, -83.1068, -38.5951, 0.44", "-16.7272, -83.8382, -38.8295, 0.74", "-16.8007, -84.25, -38.958, 0.74", "-17.0631, -85.5677, -39.3953, 0.59", "-17.2788, -86.5313, -39.7105, 0.66", "-17.4013, -87.0777, -39.9044, 1.18", "-17.5806, -87.915, -40.2012, 1.33", "-17.7245, -88.7389, -40.4613, 1.11", "-17.7309, -88.8069, -40.483, 1.11", "-17.7397, -89.5802, -40.7044, 0.96", "-17.6792, -90.593, -40.9945, 0.66", "-17.6124, -91.3683, -41.245, 0.37", "-17.5738, -92.1185, -41.5086, 0.29", "-17.5733, -93.4369, -42.0379, 1.03", "-17.6001, -94.0926, -42.3196, 1.33", "-17.632, -94.619, -42.5534, 1.47", "-17.7371, -95.9684, -43.1065, 0.37", "-17.7917, -96.7899, -43.4545, 0.37", "-17.8772, -97.9288, -43.9067, 0.29", "-17.9041, -98.3549, -44.0483, 0.44", "-17.9359, -98.9993, -44.231, 0.59", "-17.9719, -100.015, -44.4679, 0.59", "-17.9857, -101.301, -44.7175, 0.74", "-17.9667, -102.25, -44.8806, 0.59", "-17.9628, -103.105, -45.0036, 0.44", "-17.9647, -104.253, -45.1775, 0.44", "-17.9591, -104.329, -45.2117, 0.44", "-17.8261, -105.092, -45.7471, 0.96", "-17.702, -105.537, -46.1325, 1.4", "-17.6833, -105.59, -46.1817, 1.4", "-17.4891, -106.089, -46.6508, 1.18", "-16.2937, -109.191, -49.5411, 0.59", "-16.0567, -109.844, -50.127, 0.88", "-15.8552, -110.455, -50.657, 1.03", "-15.6637, -111.129, -51.2195, 0.52", "-15.5045, -111.907, -51.7911, 0.37", "-15.4285, -112.691, -52.2438, 0.37", "-15.4291, -112.75, -52.2577, 0.37", "-15.4336, -113.016, -52.317, 1.03", "-15.4387, -113.583, -52.42, 1.03", "-15.3937, -114.458, -52.5663, 0.44", "-15.224, -115.396, -52.7786, 0.37", "-14.9391, -116.319, -53.022, 0.88", "-14.736, -116.865, -53.2151, 1.25", "-14.5763, -117.273, -53.3841, 1.25", "-14.2677, -118.054, -53.7668, 0.81", "-13.7439, -119.504, -54.5422, 0.29", "-13.6346, -119.887, -54.7461, 0.29", "-13.4508, -120.779, -55.2431, 0.37", "-13.3301, -121.598, -55.7213, 0.37", "-13.2499, -122.434, -56.1914, 0.66", "-13.2255, -123.128, -56.5364, 1.25", "-13.2061, -123.847, -56.8192, 1.4", "-13.1229, -125.127, -57.2598, 0.81", "-12.9781, -126.291, -57.5939, 0.59", "-12.8621, -126.936, -57.7561, 0.29", "-12.6791, -127.767, -57.9302, 0.29", "-12.4216, -128.735, -58.2835, 0.29", "-12.3215, -129.07, -58.4601, 1.03", "-12.3021, -129.129, -58.4973, 1.03", "-12.1161, -129.663, -58.873, 1.4", "-11.8582, -130.44, -59.4609, 1.4", "-11.1097, -132.78, -61.2803, 0.52", "-10.8504, -133.731, -61.9925, 0.74", "-10.8285, -133.831, -62.061, 0.74", "-10.6897, -134.579, -62.5364, 0.52", "-10.5898, -135.336, -62.9646, 0.52", "-10.5594, -135.969, -63.226, 0.74", "-10.5707, -136.847, -63.473, 0.66", "-10.5655, -138.277, -64.0503, 0.59", "-10.5617, -138.33, -64.0797, 0.59", "-10.4822, -138.957, -64.4843, 0.52", "-10.3646, -139.636, -64.937, 1.18", "-10.1332, -140.782, -65.6992, 1.62", "-9.70421, -142.504, -66.8663, 1.18", "-9.38223, -143.663, -67.6086, 0.52", "-9.12962, -144.541, -68.1306, 0.37", "-8.88553, -145.368, -68.5709, 0.74", "-8.78516, -145.757, -68.7439, 1.11", "-8.61196, -146.925, -69.0899, 0.88", "-8.63436, -147.592, -69.2055, 0.81", "-8.82601, -148.438, -69.3461, 0.44", "-9.08337, -149.083, -69.474, 0.59", "-9.4453, -149.76, -69.6617, 0.59", "-9.92502, -150.53, -69.9025, 0.37", "-10.5517, -151.454, -70.1874, 0.29", "-10.9648, -152.066, -70.395, 0.81", "-11.3097, -152.624, -70.6031, 1.11", "-11.8886, -153.67, -70.9958, 1.4", "-12.142, -154.18, -71.1785, 1.33", "-12.5084, -155.018, -71.4386, 0.81", "-12.8315, -155.827, -71.6278, 0.52", "-13.244, -156.9, -71.7987, 0.44", "-13.5359, -157.705, -71.8798, 0.37", "-13.846, -158.635, -71.8658, 0.37", "-14.1024, -159.513, -71.8009, 0.66", "-14.3219, -160.437, -71.6763, 0.96", "-14.444, -161.152, -71.5368, 1.03", "-14.5196, -161.868, -71.3582, 1.25", "-14.5078, -163.188, -71.01, 0.81", "-14.4568, -163.758, -70.8641, 0.52", "-14.3606, -164.551, -70.7034, 0.52", "-14.2951, -165.14, -70.62, 0.29", "-14.2516, -166.003, -70.5517, 0.29", "-14.2847, -167.189, -70.577, 0.29", "-14.4125, -167.944, -70.6838, 0.81", "-14.6542, -168.716, -70.8356, 1.11", "-14.9383, -169.341, -70.9918, 1.11", "-15.2962, -169.956, -71.168, 0.74", "-15.7502, -170.58, -71.3755, 0.37", "-16.4214, -171.413, -71.7013, 0.29", "-16.6272, -171.7, -71.809, 0.74", "-16.667, -171.771, -71.8319, 0.74", "-16.8454, -172.25, -72.0067, 0.96", "-16.8743, -172.371, -72.0508, 0.96", "-17.0599, -173.468, -72.4147, 0.29", "-17.1884, -174.175, -72.6452, 0.29", "-17.3027, -174.666, -72.7943, 0.81", "-17.6183, -175.695, -73.0837, 1.03", "-17.8665, -176.3, -73.2394, 0.81", "-18.2801, -177.072, -73.4355, 0.29", "-18.8295, -177.859, -73.629, 0.29", "-19.173, -178.258, -73.7345, 0.44", "-19.612, -178.725, -73.8535, 0.44", "-20.1805, -179.25, -73.9698, 0.66", "-20.8399, -179.782, -74.1158, 0.96", "-21.1912, -180.025, -74.2042, 1.4", "-22.1588, -180.637, -74.4838, 1.69" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.37597, 58.5567, 0.151847, 1.11", "4.96092, 60.4176, -0.0678319, 1.11", "4.83123, 60.9547, -0.147897, 0.96", "4.63567, 61.6481, -0.281833, 0.96", "4.40021, 62.421, -0.449052, 0.96", "4.09714, 63.3221, -0.66579, 0.96", "3.61003, 64.6827, -1.01468, 0.96", "3.57961, 64.7505, -1.03921, 0.96", "3.06359, 65.788, -1.44255, 1.11", "3.01058, 65.8855, -1.48252, 1.11", "2.55312, 66.6754, -1.81826, 1.11", "2.50852, 66.7464, -1.8497, 1.11", "2.0048, 67.5241, -2.19697, 1.33", "1.54764, 68.245, -2.5153, 1.18", "1.07961, 69.0568, -2.85066, 0.96", "1.04195, 69.135, -2.87929, 0.96", "0.76539, 69.8072, -3.0989, 0.88", "0.461568, 70.7057, -3.35828, 0.88", "0.444055, 70.779, -3.37551, 0.88", "0.263157, 71.9466, -3.59853, 0.88", "0.165224, 73.0974, -3.77766, 1.11", "0.161464, 73.2077, -3.79162, 1.11", "0.178388, 74.1698, -3.88569, 1.11", "0.220271, 74.9889, -3.94647, 1.33", "0.258003, 75.4994, -3.97527, 1.33", "0.39142, 76.4166, -4.02966, 1.18", "0.571753, 77.3145, -4.08832, 1.18", "0.602648, 77.4188, -4.09936, 1.18", "0.940512, 78.2902, -4.21546, 1.11", "1.34329, 79.1586, -4.34663, 1.11", "1.80622, 80.0227, -4.4847, 1.03", "2.25094, 80.8029, -4.62516, 0.88", "2.91465, 82.0016, -4.88028, 0.88", "2.98201, 82.1437, -4.91555, 0.88", "3.34227, 83.1514, -5.13428, 0.88", "3.35718, 83.2268, -5.14725, 0.88", "3.34138, 84.0549, -5.24778, 0.88", "3.13957, 85.1398, -5.35479, 0.88", "2.88392, 85.9178, -5.42455, 0.88", "2.41198, 87.1071, -5.58022, 0.96", "2.29926, 87.3322, -5.62478, 0.96", "1.94552, 87.9862, -5.785, 1.47", "1.59953, 88.5999, -5.94297, 1.62", "1.11131, 89.4117, -6.15338, 1.11", "0.633568, 90.2151, -6.3757, 1.11", "0.0503651, 91.2252, -6.68621, 1.11", "-0.42277, 92.1054, -6.92347, 0.96", "-0.836698, 92.9418, -7.11442, 0.96", "-1.32268, 93.9467, -7.33101, 0.96", "-1.35741, 94.0296, -7.34674, 0.96", "-1.56149, 94.6389, -7.46928, 0.96", "-1.80843, 95.7328, -7.76433, 1.18", "-1.8243, 95.8363, -7.7994, 1.18", "-1.97803, 97.1444, -8.31323, 1.18", "-2.10375, 98.487, -8.87835, 1.03", "-2.19836, 99.4457, -9.2858, 0.88", "-2.32625, 100.743, -9.85002, 1.03", "-2.41779, 101.641, -10.2417, 1.03", "-2.46852, 102.15, -10.4437, 1.03", "-2.477, 102.286, -10.487, 1.03", "-2.54658, 103.147, -10.6975, 1.03", "-2.56468, 103.31, -10.7253, 1.03", "-2.71174, 104.093, -10.7866, 1.03", "-3.00696, 105.43, -10.8647, 1.18", "-3.30413, 106.617, -10.893, 1.18", "-3.50391, 107.344, -10.8934, 1.18", "-3.73901, 108.132, -10.8757, 1.18", "-4.25184, 109.776, -10.8294, 1.18", "-4.63391, 110.938, -10.7621, 1.18", "-5.0294, 112.128, -10.6702, 1.18", "-5.05368, 112.204, -10.6652, 1.18", "-5.2497, 112.896, -10.6499, 1.18", "-5.56156, 114.149, -10.6959, 1.47", "-5.73183, 115.006, -10.7767, 1.47", "-5.89189, 115.854, -10.8785, 1.33", "-6.10228, 117.127, -11.057, 1.03", "-6.38961, 118.88, -11.3192, 0.96", "-6.62004, 120.316, -11.5482, 0.96", "-6.77249, 121.334, -11.7426, 0.96", "-6.89133, 122.19, -11.935, 1.11", "-6.9542, 122.691, -12.051, 1.11", "-7.05343, 123.714, -12.2922, 1.25", "-7.08105, 124.176, -12.3981, 1.25", "-7.14423, 125.335, -12.6899, 1.03", "-7.15932, 125.51, -12.7391, 1.03", "-7.22059, 126.041, -12.8732, 1.03", "-7.2997, 126.572, -12.9905, 1.03", "-7.41056, 127.213, -13.0659, 1.03", "-7.6285, 128.271, -13.1049, 1.03", "-7.80336, 129.061, -13.0713, 1.03", "-7.99502, 129.798, -12.9727, 1.03", "-8.03715, 129.943, -12.9431, 1.03", "-8.38637, 131.083, -12.6566, 1.03", "-8.41011, 131.155, -12.6358, 1.03", "-8.8514, 132.412, -12.2861, 1.03", "-9.30398, 133.706, -11.9916, 1.03", "-9.33986, 133.817, -11.9758, 1.03", "-9.55575, 134.681, -11.8935, 1.03", "-9.56978, 134.76, -11.8871, 1.03", "-9.70754, 136.198, -11.7512, 1.03", "-9.70946, 136.364, -11.7354, 1.03", "-9.66945, 137.352, -11.6684, 1.25", "-9.60516, 138.797, -11.5774, 1.25", "-9.54137, 140.013, -11.5005, 1.25", "-9.50931, 141.116, -11.4564, 0.88", "-9.50329, 142.202, -11.4675, 0.74", "-9.53376, 143.104, -11.552, 1.18", "-9.64175, 144.515, -11.8042, 1.4", "-9.66412, 144.676, -11.8489, 1.4", "-9.86777, 145.787, -12.2506, 1.4", "-10.1499, 146.981, -12.7368, 1.18", "-10.4283, 148.066, -13.2053, 1.03", "-10.4463, 148.136, -13.2366, 1.03", "-10.7088, 149.137, -13.71, 1.03", "-10.8431, 149.657, -13.9506, 0.88", "-11.2024, 151.121, -14.5804, 1.11", "-11.223, 151.194, -14.6064, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.37597, 58.5567, 0.151847, 0.52", "5.22857, 59.504, -0.870249, 0.52", "5.02515, 60.1924, -1.68429, 0.74", "4.77823, 60.6727, -2.37933, 0.74", "4.67194, 60.8343, -2.64061, 0.74", "4.50005, 61.084, -3.2109, 0.74", "4.27419, 61.4197, -4.26629, 0.44", "4.16139, 61.5596, -4.89657, 0.81", "3.98869, 61.7867, -6.07006, 0.81", "3.98284, 61.7997, -6.13879, 0.81", "3.82968, 62.3616, -8.64637, 1.03", "3.78183, 62.8484, -10.4424, 0.81", "3.78224, 63.0289, -10.9752, 0.81", "3.76945, 63.4901, -12.0797, 0.88", "3.70239, 64.088, -13.278, 0.81", "3.57061, 64.5397, -14.1464, 0.81", "3.24403, 65.1267, -15.2201, 0.59", "3.02395, 65.3694, -15.7917, 0.59", "2.63374, 65.5808, -16.7878, 0.88", "2.39558, 65.6192, -18.5328, 0.88", "2.36445, 65.5386, -20.134, 0.88", "2.40196, 65.4648, -21.0059, 1.25", "2.52844, 65.2917, -22.6771, 1.25", "2.73022, 65.0734, -24.7246, 1.11", "3.58966, 64.4581, -31.4572, 1.03", "3.89004, 64.3226, -33.3878, 0.66", "3.9057, 64.321, -33.4649, 0.66", "4.27065, 64.3761, -34.9643, 0.52", "4.45997, 64.4528, -35.6397, 0.52", "4.78618, 64.6837, -36.6399, 0.52", "4.81953, 64.7195, -36.7038, 0.52", "5.88284, 65.6985, -38.1894, 1.25", "6.12059, 65.9174, -38.5301, 1.69", "6.16838, 65.9594, -38.5952, 1.69", "6.4102, 66.185, -38.9621, 1.69", "7.31935, 67.2227, -40.8033, 0.88", "7.90403, 68.2979, -42.6385, 0.59", "7.99499, 68.6908, -43.3132, 0.81", "8.00314, 68.7337, -43.3931, 0.81", "8.099, 69.1194, -44.1634, 1.11", "8.3161, 69.9228, -45.7756, 1.11", "8.43319, 70.3752, -46.6348, 0.96", "8.75151, 71.2458, -48.2715, 0.88", "9.19883, 72.3406, -50.1639, 0.81", "9.68424, 73.3233, -51.781, 0.52", "9.90538, 73.6167, -52.296, 0.52", "10.2697, 73.9917, -52.9288, 0.59", "10.3596, 74.0678, -53.0475, 0.59", "11.0401, 74.5947, -53.7569, 0.59", "12.2124, 75.4683, -54.8487, 0.81", "13.9304, 76.625, -56.3407, 1.4", "14.5441, 76.9701, -56.8634, 1.62", "15.454, 77.3805, -57.5911, 1.84", "15.5139, 77.4031, -57.6364, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "25.3229, 43.7103, 3.27516, 1.18", "24.6461, 45.7688, 4.53767, 1.18", "24.4138, 47.0332, 5.12479, 0.96", "24.4144, 47.131, 5.15584, 0.96", "24.6766, 48.4537, 5.45557, 0.74", "24.707, 48.5479, 5.47077, 0.74", "25.0167, 49.2609, 5.55808, 0.88", "25.6023, 50.214, 5.62457, 0.88", "26.2604, 51.1775, 5.73302, 0.59", "26.8675, 52.0629, 5.97947, 0.52", "27.3379, 52.7375, 6.2807, 0.81", "27.9556, 53.6437, 6.73391, 0.52", "28.9075, 55.0901, 7.61119, 0.88", "29.0389, 55.3182, 7.78191, 0.88", "29.6579, 56.6005, 8.97426, 1.33", "29.7297, 56.8037, 9.20397, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "25.3229, 43.7103, 3.27516, 1.11", "26.3439, 43.5604, 0.0798177, 1.11", "26.7686, 43.5341, -0.874432, 1.03", "27.3038, 43.4989, -1.89896, 0.88", "28.3982, 43.397, -3.61337, 0.59", "29.0375, 43.3036, -4.5539, 0.81", "29.6132, 43.1992, -5.39605, 0.81", "30.1401, 43.1036, -6.06598, 1.03", "30.3552, 43.0944, -6.36444, 1.03", "31.0344, 43.1513, -7.50617, 1.03", "31.9349, 43.2123, -9.34437, 0.66", "32.5454, 43.218, -10.8972, 0.81", "33.0456, 43.1525, -12.4745, 0.59", "33.4369, 43.0258, -14.0434, 0.96", "33.9001, 42.7495, -16.322, 0.59", "34.1566, 42.4801, -17.9639, 0.59", "34.4037, 42.1322, -19.5124, 0.96", "34.6731, 41.7421, -20.8281, 0.81", "35.0184, 41.291, -22.0032, 0.81", "35.2956, 41.0102, -22.6196, 0.96", "36.0509, 40.5285, -23.7841, 0.37", "36.8267, 40.2976, -24.7259, 0.37", "37.8241, 40.2171, -25.7307, 0.44", "38.5054, 40.2683, -26.3606, 0.81", "39.3094, 40.3943, -27.0749, 1.03", "40.487, 40.5889, -28.1481, 0.52", "40.8958, 40.6263, -28.5632, 0.44", "40.9441, 40.6227, -28.6283, 0.44", "41.8492, 40.2649, -30.0979, 0.44", "42.1507, 40.061, -30.6341, 0.88", "42.6883, 39.5756, -31.5569, 1.03", "43.4625, 38.8274, -32.6646, 1.03", "44.2035, 38.1482, -33.5865, 0.96", "45.0407, 37.5053, -34.4333, 0.52", "45.0947, 37.4691, -34.4769, 0.52", "45.8036, 37.1224, -34.9228, 0.59", "46.8255, 36.8, -35.3691, 0.59", "47.6131, 36.6334, -35.5933, 0.29", "48.8056, 36.442, -35.8505, 0.29", "48.8818, 36.4305, -35.8669, 0.29", "49.8221, 36.2444, -36.0873, 0.66", "50.5757, 36.0573, -36.2807, 0.81", "51.5062, 35.7138, -36.5463, 0.88", "51.643, 35.6408, -36.5805, 0.88", "52.3962, 35.134, -36.7644, 1.03", "52.9987, 34.7044, -36.922, 1.03", "53.0596, 34.6589, -36.9402, 1.03", "53.8351, 34.0683, -37.178, 0.81", "55.1066, 33.1227, -37.5823, 0.37", "55.7939, 32.6477, -37.8151, 0.66", "56.3658, 32.2739, -38.0243, 0.66", "57.1615, 31.7804, -38.3807, 0.52", "57.7916, 31.4191, -38.7347, 0.52", "58.665, 30.9372, -39.3284, 0.96", "59.2813, 30.5716, -39.8405, 1.25", "60.0231, 30.1, -40.4998, 1.03", "60.8084, 29.561, -41.2407, 0.81", "61.6393, 29.0004, -42.0478, 0.66", "62.0684, 28.741, -42.4509, 0.74", "62.5771, 28.4634, -42.8997, 0.74", "63.3621, 28.0785, -43.5014, 0.37", "63.4154, 28.0558, -43.5343, 0.37", "64.1855, 27.7623, -43.9114, 0.29", "65.269, 27.4208, -44.5056, 0.66", "66.0292, 27.2076, -44.988, 1.03", "66.8105, 26.99, -45.5369, 0.74", "67.7078, 26.7158, -46.2273, 0.74", "68.2555, 26.5107, -46.679, 0.96", "69.5398, 25.9047, -47.8197, 1.18", "70.0268, 25.6486, -48.2769, 0.96", "70.6538, 25.303, -48.8665, 0.44", "70.7142, 25.2689, -48.9229, 0.44", "71.462, 24.8263, -49.6384, 0.66", "71.9476, 24.5368, -50.1236, 0.81", "72.1733, 24.405, -50.3799, 0.81", "72.6839, 24.1345, -51.0385, 0.66", "72.8606, 24.0517, -51.2708, 0.66", "73.5381, 23.7602, -52.0806, 0.66", "74.3389, 23.4513, -52.958, 0.44", "75.6036, 22.9486, -54.231, 0.37", "76.277, 22.6491, -54.8731, 0.88", "77.2795, 22.1606, -55.7035, 0.88", "78.1266, 21.7471, -56.2877, 1.03", "78.835, 21.4084, -56.6725, 1.03", "79.5346, 21.1036, -56.9671, 0.74", "80.4231, 20.7543, -57.2646, 0.52", "81.5515, 20.35, -57.6433, 0.52", "82.5029, 20.0131, -57.9785, 0.29", "82.5825, 19.9843, -58.0138, 0.29", "83.2911, 19.6729, -58.3755, 0.29", "83.8769, 19.3438, -58.749, 0.59", "83.9591, 19.285, -58.8131, 0.59", "84.5094, 18.727, -59.4098, 0.88", "84.9871, 18.0618, -60.0368, 0.74", "85.3721, 17.3439, -60.7263, 0.44", "85.6146, 16.7204, -61.3288, 0.29", "85.7136, 16.3669, -61.6759, 0.59", "85.8, 15.8173, -62.2101, 0.44", "85.8084, 15.3458, -62.6703, 0.44", "85.705, 14.4234, -63.4993, 0.81", "85.6909, 14.3647, -63.5477, 0.81", "85.5221, 13.7819, -63.9415, 1.03", "85.3075, 13.0604, -64.3612, 0.88", "85.2905, 12.9941, -64.3951, 0.88", "85.1033, 12.0388, -64.8338, 0.59", "85.0245, 11.3464, -65.1114, 0.59", "84.9945, 10.5647, -65.4222, 0.88", "84.9996, 10.3482, -65.5074, 0.88", "85.1295, 9.28125, -65.9215, 0.37", "85.2595, 8.64261, -66.1797, 0.74", "85.4322, 8.03117, -66.4348, 0.96", "85.6725, 7.19373, -66.8272, 0.96", "85.6912, 7.12737, -66.8601, 0.96", "85.8846, 6.42569, -67.257, 1.25", "86.1932, 5.49563, -67.8523, 0.44", "86.4117, 4.94842, -68.2902, 0.37", "86.7827, 4.17373, -69.012, 0.96", "87.1451, 3.53586, -69.668, 0.96", "87.7311, 2.66619, -70.6753, 0.74", "88.22, 2.03855, -71.5241, 0.74", "88.8646, 1.32682, -72.5934, 0.29", "89.2087, 0.97531, -73.1051, 0.52", "89.758, 0.412672, -73.8451, 0.88", "90.2332, -0.0943189, -74.4492, 1.03", "91.0533, -1.05365, -75.4152, 0.29", "91.414, -1.51922, -75.7562, 0.88", "92.1627, -2.47001, -76.1573, 0.81", "92.6543, -3.02891, -76.2356, 0.96", "93.2718, -3.64391, -76.157, 0.59", "93.3377, -3.70376, -76.137, 0.59", "94.736, -4.87601, -75.5814, 0.52", "95.5232, -5.53026, -75.2871, 0.52", "96.4033, -6.28231, -75.0335, 0.88", "96.4602, -6.33481, -75.0231, 0.88", "96.758, -6.64499, -74.9887, 1.03", "97.3613, -7.37504, -74.9784, 1.03", "97.8884, -8.18947, -75.0317, 0.44", "98.375, -9.12068, -75.0898, 0.44", "98.7932, -10.019, -75.1494, 0.44", "99.2296, -10.9369, -75.1968, 0.52", "99.5603, -11.6043, -75.23, 0.44", "100.069, -12.5809, -75.2873, 0.44", "100.423, -13.2392, -75.3461, 0.81", "100.807, -13.9307, -75.4555, 0.81", "101.299, -14.7496, -75.6261, 0.37", "101.795, -15.5489, -75.8473, 0.81", "102.125, -16.0543, -76.0029, 0.88", "102.373, -16.4301, -76.1323, 0.88", "102.793, -17.0812, -76.3412, 0.66", "103.422, -18.0818, -76.6459, 0.44", "103.975, -18.9194, -76.9117, 0.29", "104.428, -19.536, -77.1686, 0.59", "104.867, -20.0989, -77.4549, 0.74", "104.961, -20.2171, -77.5245, 0.74", "105.373, -20.764, -77.9267, 0.59", "105.902, -21.5606, -78.6501, 0.44", "106.404, -22.4273, -79.4923, 0.44", "106.613, -22.8676, -79.9199, 0.44", "106.847, -23.4835, -80.4931, 0.74", "107.108, -24.3291, -81.2447, 0.74", "107.327, -25.2416, -82.0135, 0.29", "107.402, -25.6321, -82.3313, 0.96", "107.496, -26.0675, -82.6656, 0.96", "107.668, -26.6827, -83.15, 0.81", "107.691, -26.7432, -83.1964, 0.81", "107.939, -27.2233, -83.5202, 0.96", "108.354, -27.9137, -83.9995, 0.52", "108.663, -28.3903, -84.3481, 0.52", "108.693, -28.4376, -84.3823, 0.52", "109.064, -29.0953, -84.8712, 0.44", "109.454, -29.8766, -85.4577, 0.59", "109.982, -31.0384, -86.3173, 0.29", "110.164, -31.4586, -86.6228, 0.96", "110.445, -32.1573, -87.1284, 1.33", "110.903, -33.3453, -87.9691, 0.29", "111.31, -34.4155, -88.7076, 0.29", "111.544, -35.0257, -89.1136, 0.88", "111.57, -35.0912, -89.1508, 0.88", "111.866, -35.8495, -89.5082, 0.88", "112.333, -37.0562, -89.9431, 0.29", "112.698, -37.9972, -90.1703, 0.29", "112.808, -38.3019, -90.214, 0.66", "113.17, -39.4091, -90.3173, 0.66", "113.427, -40.2274, -90.3682, 0.66", "113.659, -40.9781, -90.3962, 0.96", "113.857, -41.6835, -90.4238, 0.74", "114.069, -42.4832, -90.4478, 0.52", "114.34, -43.4913, -90.4592, 0.44", "114.413, -43.7374, -90.467, 0.44", "114.738, -44.7575, -90.5457, 0.37", "115.15, -45.9627, -90.6858, 0.37", "115.591, -47.236, -90.8727, 0.74", "115.979, -48.2588, -91.1306, 0.29", "116.433, -49.2204, -91.4798, 0.29", "116.958, -50.1791, -91.9769, 0.74", "117.21, -50.5367, -92.2483, 1.03", "117.251, -50.5821, -92.2967, 1.03", "118.136, -51.3972, -93.3993, 0.22", "118.861, -52.0179, -94.3472, 0.22", "119.305, -52.3863, -94.9179, 0.81", "119.785, -52.8037, -95.5036, 0.81", "119.827, -52.8439, -95.5557, 0.81", "120.465, -53.5638, -96.3378, 0.29", "120.858, -54.1751, -96.9288, 0.44", "120.895, -54.2462, -97.0088, 0.44", "121.112, -54.6462, -97.5135, 0.44", "121.134, -54.6937, -97.588, 0.44", "121.33, -55.2396, -98.4892, 0.52", "121.515, -56.1084, -100.052, 0.52", "121.587, -56.6169, -101.115, 0.66", "121.623, -56.9113, -101.871, 0.59", "121.676, -57.5261, -103.742, 0.37", "121.702, -57.7942, -104.581, 0.29", "121.753, -58.3293, -106.3, 0.74", "121.834, -58.9963, -108.266, 0.81", "121.921, -59.8812, -110.734, 0.29", "121.929, -60.1931, -111.643, 0.66", "121.951, -60.5763, -112.769, 0.29", "121.979, -61.0022, -114.008, 0.59", "121.995, -61.2794, -114.769, 0.74", "122.007, -61.9882, -116.555, 1.33", "122.01, -63.1721, -119.444, 0.29", "122.02, -63.3873, -119.982, 0.59", "122.037, -63.5316, -120.349, 0.59", "122.247, -64.2411, -122.041, 0.52", "122.412, -64.5722, -122.774, 0.74", "122.605, -64.834, -123.249, 0.74", "123.118, -65.3705, -124.065, 0.37", "123.906, -66.1297, -125.264, 0.37", "124.52, -66.6673, -126.078, 0.37", "124.862, -66.948, -126.468, 0.66", "125.19, -67.2137, -126.847, 0.88", "125.45, -67.4299, -127.163, 0.88", "126.535, -68.3517, -128.51, 0.29", "127.421, -69.1624, -129.673, 0.22", "127.59, -69.3339, -129.908, 0.66", "128.18, -69.9875, -130.772, 0.22", "128.388, -70.2574, -131.126, 0.52", "128.723, -70.7925, -131.785, 0.29", "128.872, -71.1128, -132.127, 0.74", "128.985, -71.4706, -132.495, 0.74", "129.154, -72.2112, -133.251, 0.22", "129.308, -73.1144, -134.144, 0.37", "129.356, -73.5098, -134.571, 0.37", "129.384, -73.9431, -135.052, 0.59", "129.414, -74.3183, -135.466, 0.59", "129.456, -74.964, -136.167, 0.22", "129.484, -75.2551, -136.473, 0.52", "129.663, -76.2625, -137.529, 0.29", "129.764, -76.7421, -138.091, 1.11", "129.875, -77.2286, -138.719, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-10.3165, -159.737, -140.926, 0.29", "-10.5216, -161.34, -141.225, 0.29", "-10.7037, -162.335, -141.407, 0.29", "-11.0457, -163.516, -141.489, 0.22", "-11.3625, -164.228, -141.427, 0.74", "-11.6557, -164.752, -141.282, 0.88", "-11.6963, -164.822, -141.257, 0.88", "-11.9985, -165.231, -141.046, 0.88", "-12.915, -166.31, -140.341, 0.29", "-13.712, -167.191, -139.613, 0.29", "-14.4914, -168.053, -138.796, 0.88", "-14.9594, -168.565, -138.27, 0.88" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-10.3165, -159.737, -140.926, 0.59", "-10.5483, -161.26, -145.686, 0.59", "-10.6239, -161.671, -146.918, 0.37", "-10.7788, -162.14, -148.383, 0.37", "-11.0303, -162.761, -150.27, 0.96", "-11.2901, -163.374, -152.027, 1.33", "-11.8381, -164.714, -155.599, 0.59", "-11.9848, -165.113, -156.432, 0.29", "-12.1594, -165.748, -157.715, 0.29", "-12.1986, -166.208, -158.621, 0.88", "-12.1868, -166.506, -159.212, 0.88", "-12.1076, -167.142, -160.465, 0.66", "-11.9419, -167.965, -162.026, 0.88", "-11.6259, -169.267, -164.401, 1.4", "-10.9562, -171.799, -169.008, 0.59", "-10.6955, -172.906, -171.161, 0.59", "-10.5933, -173.333, -172.022, 0.52", "-10.5171, -173.619, -172.599, 1.03", "-10.421, -174.024, -173.411, 0.88", "-10.1625, -175.461, -176.325, 0.22", "-10.1421, -176.319, -178.134, 0.59", "-10.1885, -177.186, -180.281, 0.74", "-10.2501, -177.941, -182.389, 0.44", "-10.3146, -178.364, -183.624, 0.74", "-10.478, -179.172, -185.848, 1.11", "-10.6118, -179.62, -186.93, 0.96", "-11.283, -181.252, -190.5, 0.74", "-11.304, -181.285, -190.57, 0.74", "-11.7185, -181.834, -191.711, 0.74", "-12.3357, -182.69, -193.303, 0.74", "-13.024, -183.632, -194.794, 0.37", "-13.3886, -184.177, -195.574, 1.03", "-13.784, -184.779, -196.287, 1.18", "-14.8717, -186.469, -198.306, 0.29", "-15.2362, -187.031, -198.99, 0.59", "-15.5477, -187.482, -199.504, 0.59", "-16.0181, -188.197, -200.17, 0.44", "-16.3951, -188.787, -200.629, 0.29", "-16.4398, -188.853, -200.672, 0.29", "-16.8286, -189.368, -200.965, 0.59", "-17.1239, -189.947, -201.476, 0.59", "-17.2344, -190.519, -202.116, 0.44", "-17.1851, -191.14, -202.912, 0.29", "-17.0066, -191.872, -203.996, 0.88", "-16.7018, -192.683, -205.328, 1.11", "-15.8331, -194.54, -208.627, 0.74", "-15.3219, -195.59, -210.54, 0.59", "-14.7508, -196.769, -212.724, 0.29", "-14.1888, -198.031, -215.095, 0.74", "-13.5742, -199.697, -218.239, 1.03", "-13.2083, -201.321, -221.266, 0.52", "-13.2385, -201.918, -222.297, 0.44", "-13.3634, -202.311, -222.924, 0.88", "-13.8063, -203.018, -223.897, 1.11", "-14.1917, -203.409, -224.315, 1.11", "-15.0966, -204.082, -224.857, 0.59", "-16.137, -204.79, -225.31, 0.44", "-16.7229, -205.224, -225.593, 0.66", "-17.7419, -206.094, -226.121, 0.59", "-18.3462, -206.836, -226.783, 0.37", "-18.7662, -207.507, -227.549, 0.44", "-19.1755, -208.338, -228.671, 0.66", "-19.4291, -208.986, -229.634, 0.81", "-19.6224, -209.604, -230.607, 0.88", "-20.5299, -212.635, -235.77, 0.52", "-20.6845, -213.07, -236.603, 0.29", "-20.7879, -213.294, -237.1, 0.59", "-20.9548, -213.507, -237.659, 0.59", "-21.5277, -213.874, -238.818, 0.37", "-22.3037, -214.082, -239.739, 0.37", "-23.3616, -214.138, -240.302, 0.37", "-23.4518, -214.141, -240.35, 0.37", "-24.8102, -214.141, -241.057, 0.22", "-25.3546, -214.098, -241.323, 0.37", "-25.8718, -213.998, -241.539, 0.37", "-27.0633, -213.683, -242.058, 0.29" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "22.0499, -129.566, -68.3004, 0.29", "22.7774, -129.789, -68.7478, 0.29", "23.1016, -129.918, -68.9477, 0.37", "23.1551, -129.944, -68.9775, 0.37", "23.7984, -130.348, -69.342, 0.22", "23.8537, -130.385, -69.3732, 0.22", "24.2095, -130.635, -69.5689, 0.52", "24.2538, -130.674, -69.593, 0.52", "24.628, -131.015, -69.7566, 0.52", "25.2996, -131.608, -69.9962, 0.22", "25.3474, -131.648, -70.0101, 0.22", "25.5632, -131.832, -70.0726, 0.37", "25.9478, -132.161, -70.1829, 0.22", "26.7294, -132.825, -70.3922, 0.96", "26.7787, -132.867, -70.4031, 0.96" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "22.0499, -129.566, -68.3004, 0.37", "22.8213, -130.911, -69.5476, 0.37", "23.2903, -131.895, -70.4013, 0.66", "23.4968, -132.391, -70.8014, 0.88", "23.6967, -132.945, -71.2117, 1.18", "24.2455, -134.71, -72.4165, 0.44", "24.3813, -135.193, -72.7179, 0.29", "24.5195, -135.966, -73.1146, 0.88", "24.5807, -136.42, -73.3026, 1.11", "24.6593, -137.002, -73.4938, 0.66", "24.768, -137.764, -73.6494, 0.37", "24.912, -138.464, -73.656, 0.52", "24.9545, -138.598, -73.6482, 0.52", "25.317, -139.397, -73.5728, 0.59", "25.5902, -139.9, -73.5128, 0.66", "25.6576, -140.008, -73.4898, 0.66", "26.0495, -140.633, -73.3231, 0.37", "26.4646, -141.346, -72.9935, 0.37", "26.7717, -141.886, -72.6866, 0.37", "27.0939, -142.453, -72.3324, 0.96", "27.6065, -143.301, -71.7657, 1.25", "28.094, -144.038, -71.274, 0.96", "29.3319, -145.807, -69.9971, 0.52", "29.8556, -146.527, -69.4546, 0.59", "30.1783, -146.953, -69.1276, 0.74", "30.5967, -147.481, -68.7331, 0.74", "31.2888, -148.315, -68.1911, 0.29", "31.926, -149.046, -67.7743, 0.66", "31.9689, -149.098, -67.7571, 0.66", "32.2874, -149.577, -67.634, 0.29", "32.5626, -150.097, -67.5348, 0.74", "32.7962, -150.668, -67.4699, 0.88", "32.8208, -150.733, -67.4648, 0.88", "33.1207, -151.467, -67.4397, 0.37", "33.4706, -152.246, -67.4, 0.59", "33.6912, -152.696, -67.3705, 0.88", "34.0969, -153.463, -67.3132, 0.29", "34.4287, -154.052, -67.2432, 0.22", "34.5859, -154.322, -67.2034, 0.81", "34.8572, -154.763, -67.1246, 1.18", "34.8962, -154.822, -67.113, 1.18", "35.3448, -155.489, -66.969, 1.03", "35.9127, -156.423, -66.6841, 0.29", "36.3527, -157.309, -66.379, 0.22", "36.3859, -157.397, -66.3424, 0.22", "36.5854, -158.075, -66.0403, 0.29", "36.7415, -158.656, -65.7778, 1.18", "37.0754, -159.848, -65.1967, 0.74", "37.2558, -160.458, -64.8956, 0.52", "37.5155, -161.232, -64.4643, 0.29", "37.7422, -161.869, -64.0597, 0.52", "37.9949, -162.51, -63.5898, 0.96", "38.3974, -163.359, -62.9548, 1.18", "38.832, -164.149, -62.3205, 1.03", "39.4363, -165.208, -61.4254, 0.74", "40.0566, -166.348, -60.4716, 0.66", "40.3928, -167.061, -59.9063, 1.03", "40.8014, -168.067, -59.1855, 0.88", "41.2248, -169.235, -58.4821, 0.74", "41.5272, -170.127, -58.0608, 0.74", "41.7945, -170.967, -57.7935, 0.74", "42.1001, -171.984, -57.5889, 0.52", "42.3418, -172.808, -57.4746, 0.52", "42.596, -173.674, -57.3886, 0.44", "42.8534, -174.5, -57.3534, 0.74", "43.0643, -175.104, -57.3319, 0.96", "43.2705, -175.651, -57.312, 0.96", "43.7106, -176.771, -57.2728, 0.37", "44.1086, -177.707, -57.2449, 0.37", "44.133, -177.761, -57.2435, 0.37", "44.5157, -178.451, -57.229, 0.66", "44.8172, -178.963, -57.2218, 0.88", "45.2308, -179.612, -57.2235, 0.59", "45.6567, -180.215, -57.2509, 0.22", "45.7044, -180.269, -57.2528, 0.22", "46.3191, -180.887, -57.2692, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-24.2834, -219.216, -48.3292, 0.52", "-22.4999, -219.488, -47.8862, 0.52", "-21.6037, -219.7, -47.7031, 0.52", "-20.6008, -220.007, -47.6219, 0.66", "-19.542, -220.383, -47.6228, 0.59", "-18.2436, -220.905, -47.6681, 0.29", "-17.8456, -221.088, -47.7154, 0.59", "-17.3553, -221.343, -47.8616, 0.59", "-15.9782, -222.127, -48.3714, 0.29", "-15.2197, -222.6, -48.6851, 0.88", "-14.8928, -222.808, -48.8389, 0.88", "-13.1243, -223.76, -49.8345, 0.29", "-11.9546, -224.273, -50.5652, 0.59", "-11.4325, -224.437, -50.9409, 0.44", "-11.3793, -224.449, -50.9834, 0.44", "-10.1806, -224.628, -51.9981, 0.44", "-8.08385, -224.776, -53.8356, 0.29", "-7.65055, -224.771, -54.2206, 0.29", "-5.73136, -224.664, -55.8236, 0.29", "-5.67224, -224.66, -55.8757, 0.29", "-5.6181, -224.657, -55.922, 0.44", "-5.51012, -224.651, -56.0111, 0.44", "-4.69119, -224.61, -56.686, 0.29", "-4.00217, -224.568, -57.2525, 0.81", "1.45568, -224.206, -61.728, 0.29", "2.62543, -224.123, -62.6924, 0.22", "3.85489, -224.052, -63.7243, 0.44", "6.20464, -223.976, -65.7875, 0.29", "6.65661, -223.97, -66.2021, 0.88", "6.96851, -223.99, -66.4997, 0.88", "7.01948, -223.997, -66.5461, 0.88", "9.50758, -224.394, -68.919, 0.29", "11.9109, -224.761, -71.3258, 0.52", "11.9583, -224.768, -71.3748, 0.52", "15.0489, -225.198, -74.6126, 0.22", "15.7672, -225.284, -75.3706, 0.37", "17.1496, -225.426, -76.8391, 0.96", "18.9579, -225.529, -78.7766, 0.22", "19.26, -225.527, -79.0979, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-24.2834, -219.216, -48.3292, 0.81", "-24.3042, -220.049, -48.5349, 0.81", "-24.3078, -220.83, -48.7018, 1.03", "-24.2894, -221.989, -48.9179, 0.96", "-24.2444, -223.028, -49.0829, 0.74", "-24.2075, -223.943, -49.1135, 0.29", "-24.1912, -224.511, -49.0857, 0.29", "-24.1808, -224.931, -49.0198, 0.52", "-24.1945, -225.308, -48.9181, 0.52", "-24.244, -225.792, -48.7405, 0.52", "-24.4641, -227.458, -48.1029, 0.29", "-24.5615, -228.204, -47.8389, 0.52", "-24.6111, -228.657, -47.6781, 0.81", "-24.6721, -229.524, -47.3488, 0.88", "-24.6535, -230.216, -47.0791, 1.18", "-24.5594, -231.108, -46.7322, 1.4", "-24.292, -232.403, -46.2573, 0.52", "-23.9444, -233.563, -45.8085, 0.52", "-23.4325, -234.915, -45.2892, 0.52", "-22.8394, -236.282, -44.7845, 0.74", "-22.8028, -236.363, -44.7561, 0.74", "-22.3922, -237.338, -44.4879, 0.29", "-21.9917, -238.457, -44.2887, 0.29", "-21.6194, -239.699, -44.2005, 0.66", "-21.4573, -240.387, -44.2077, 0.88", "-21.3088, -241.323, -44.2542, 0.88", "-21.093, -242.765, -44.3951, 0.29", "-20.9986, -243.37, -44.4801, 0.88", "-20.9823, -243.461, -44.5029, 0.88", "-20.8411, -244.084, -44.7044, 1.03", "-20.8146, -244.183, -44.7383, 1.03", "-20.4042, -245.663, -45.2171, 0.74", "-20.0549, -246.735, -45.5017, 0.88", "-19.5446, -248.177, -45.8302, 1.18", "-19.2934, -248.885, -45.9595, 1.18", "-19.0022, -249.705, -46.067, 0.66", "-18.6163, -250.801, -46.1439, 0.29", "-18.2406, -251.885, -46.1315, 0.29", "-17.9973, -252.622, -46.0841, 0.59", "-17.7089, -253.543, -45.9665, 0.74", "-17.4354, -254.467, -45.8401, 0.74", "-17.31, -255.023, -45.7098, 0.74", "-17.2362, -255.603, -45.5376, 0.88", "-17.1743, -256.544, -45.2115, 0.81", "-17.1025, -257.687, -44.7536, 0.81", "-17.0254, -258.8, -44.2464, 0.59", "-16.849, -260.797, -43.2529, 0.37", "-16.7443, -261.673, -42.7833, 0.52", "-16.616, -262.379, -42.3822, 0.44", "-16.439, -262.994, -42.0175, 0.52", "-16.3725, -263.159, -41.923, 0.52", "-16.044, -263.755, -41.6683, 0.37", "-15.941, -263.924, -41.633, 0.37", "-15.5801, -264.646, -41.5191, 0.81", "-15.4133, -265.204, -41.5012, 0.96", "-15.3991, -265.285, -41.5114, 0.96", "-15.3614, -265.774, -41.6206, 0.81", "-15.3387, -266.773, -41.9516, 0.52", "-15.339, -267.443, -42.1966, 0.52", "-15.3431, -268.614, -42.6393, 0.29", "-15.3403, -269.821, -43.0791, 0.74", "-15.333, -270.654, -43.371, 0.88", "-15.3168, -271.86, -43.7089, 0.52", "-15.3007, -273.077, -43.9469, 0.52", "-15.2986, -273.965, -44.0236, 0.74", "-15.2989, -274.817, -44.0002, 0.44", "-15.3005, -275.012, -43.9774, 0.44", "-15.364, -276.559, -43.7287, 0.44", "-15.4689, -277.476, -43.5355, 0.22", "-15.6535, -278.346, -43.3645, 0.22", "-15.8358, -278.984, -43.3041, 0.74", "-15.8641, -279.071, -43.3052, 0.74", "-16.1054, -279.785, -43.386, 0.96", "-16.1358, -279.873, -43.4068, 0.96", "-16.384, -280.709, -43.6075, 0.96", "-16.6403, -282.164, -43.9637, 0.44", "-16.7427, -282.931, -44.0713, 0.52", "-16.7521, -283.023, -44.0777, 0.52", "-16.8179, -283.788, -44.115, 0.81", "-16.8754, -284.85, -44.1687, 0.74", "-16.916, -286.375, -44.2295, 0.37", "-16.9995, -288.308, -44.2824, 0.37", "-17.0597, -289.024, -44.2785, 1.18", "-17.2073, -290.332, -44.2464, 0.96", "-17.4015, -291.734, -44.1911, 0.52", "-17.6682, -293.329, -44.1089, 0.52", "-18.0012, -295.117, -43.9739, 0.74", "-18.3083, -296.993, -43.8366, 0.81", "-18.3249, -297.096, -43.8229, 0.81", "-18.4716, -297.921, -43.6259, 1.03", "-18.4919, -298.022, -43.5936, 1.03", "-18.6618, -298.956, -43.2546, 0.52", "-18.7867, -299.854, -42.936, 0.37", "-18.8652, -300.725, -42.6766, 0.88", "-18.9451, -301.665, -42.41, 0.96", "-18.9932, -302.395, -42.2033, 0.74", "-19.0211, -303.257, -41.975, 0.22", "-19.0048, -304.13, -41.7372, 0.22", "-18.9044, -304.868, -41.5181, 0.74", "-18.7572, -305.381, -41.3484, 1.03", "-18.4915, -305.985, -41.1293, 1.03", "-18.066, -306.714, -40.7758, 0.59", "-17.3995, -307.692, -40.222, 0.37", "-16.7148, -308.646, -39.6416, 0.22", "-16.2265, -309.37, -39.2121, 0.81", "-15.8558, -309.967, -38.8847, 0.81", "-15.2504, -311.085, -38.3514, 0.29", "-14.9674, -311.661, -38.11, 0.59", "-14.6936, -312.271, -37.9094, 0.74", "-14.3271, -313.236, -37.6596, 0.74", "-14.0154, -314.124, -37.4953, 0.52", "-13.4593, -315.579, -37.4138, 0.22", "-13.1597, -316.338, -37.456, 0.22", "-12.9472, -316.88, -37.5078, 0.74", "-12.6783, -317.6, -37.6079, 0.74", "-12.0663, -319.324, -37.9102, 0.22", "-11.5102, -321.169, -38.2921, 0.81", "-11.327, -321.937, -38.4555, 0.81", "-11.0821, -323.258, -38.7043, 0.22", "-10.932, -324.338, -38.8591, 0.22", "-10.8849, -324.804, -38.9066, 0.81", "-10.8452, -325.495, -38.9398, 1.03", "-10.7979, -327.106, -38.9087, 0.29", "-10.7766, -327.693, -38.8972, 0.29", "-10.7346, -329.037, -38.8759, 0.29", "-10.7155, -330.191, -38.8393, 0.15", "-10.7157, -330.656, -38.8268, 0.52", "-10.7132, -331.045, -38.8156, 0.66" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-14.6558, -72.8995, -3.5084, 0.96", "-14.3926, -74.0588, -4.05008, 0.96", "-14.1474, -75.2848, -4.58806, 0.96", "-13.9153, -76.6578, -5.13855, 0.96", "-13.7126, -78.0808, -5.66298, 0.81", "-13.5487, -79.5081, -6.205, 0.66", "-13.4397, -80.7153, -6.65517, 0.66", "-13.4336, -80.8526, -6.70187, 0.66", "-13.4117, -81.7523, -7.00409, 0.88", "-13.3883, -82.3469, -7.2004, 1.03", "-13.1877, -83.8671, -7.75135, 0.74", "-12.9608, -84.7833, -8.1118, 0.74", "-12.6075, -85.7557, -8.52316, 0.74", "-12.0668, -86.9605, -9.04251, 0.96", "-11.6808, -87.6713, -9.34876, 1.03", "-11.1367, -88.6235, -9.7173, 1.03", "-10.4856, -89.8258, -10.09, 0.88", "-10.1221, -90.6346, -10.2952, 0.88", "-10.0588, -90.8929, -10.3374, 0.88", "-10.0862, -91.5447, -10.3128, 0.59", "-10.539, -92.8197, -10.09, 0.52", "-11.1475, -93.7809, -9.81834, 0.74", "-11.6954, -94.4063, -9.53266, 0.66", "-12.4733, -95.1657, -9.11404, 0.52", "-13.7083, -96.2808, -8.40061, 0.52", "-14.3312, -96.8202, -8.02406, 0.74", "-15.1348, -97.52, -7.53848, 1.03", "-16.1428, -98.4666, -6.95325, 1.03", "-16.8333, -99.1705, -6.58434, 1.03", "-17.7743, -100.24, -6.13521, 0.74", "-18.3627, -100.984, -5.93094, 0.66", "-18.9557, -101.841, -5.72177, 0.52", "-19.4196, -102.646, -5.5397, 0.52", "-19.4507, -102.71, -5.52793, 0.52", "-19.732, -103.395, -5.37116, 0.66", "-19.9624, -104.077, -5.1967, 0.81", "-20.2655, -105.026, -4.90058, 0.52", "-20.6476, -106.193, -4.5811, 0.52", "-20.7363, -106.428, -4.55572, 0.81", "-21.0905, -107.181, -4.61569, 0.81", "-21.4706, -107.787, -4.78876, 0.96", "-22.1146, -108.547, -5.20093, 1.03", "-23.0898, -109.368, -5.84395, 1.18", "-24.3263, -110.209, -6.63534, 0.81", "-24.9358, -110.571, -7.02309, 0.88", "-25.7054, -110.965, -7.48612, 1.18", "-26.5163, -111.359, -7.92847, 1.55", "-27.6837, -111.954, -8.43477, 0.66", "-28.2099, -112.273, -8.57931, 0.66", "-28.6721, -112.639, -8.63097, 0.52", "-29.4531, -113.431, -8.63735, 0.52", "-30.0338, -114.194, -8.58148, 0.37", "-30.6365, -115.234, -8.38981, 0.37", "-30.9843, -116.008, -8.21384, 0.74", "-31.3462, -116.917, -7.96212, 1.25", "-31.3684, -116.971, -7.94517, 1.25", "-31.7181, -117.755, -7.69489, 1.18", "-32.2976, -118.877, -7.33823, 1.03", "-32.7051, -119.552, -7.15, 0.66", "-33.2224, -120.332, -6.9649, 0.37", "-33.921, -121.317, -6.79345, 0.37", "-34.418, -121.983, -6.71239, 0.44", "-34.4704, -122.046, -6.70858, 0.44", "-35.1507, -122.802, -6.72949, 0.37", "-35.6573, -123.358, -6.76063, 0.59", "-35.9682, -123.711, -6.79083, 0.59", "-36.4929, -124.369, -6.86388, 0.44", "-36.9181, -124.932, -6.9322, 0.66", "-37.3897, -125.577, -7.00801, 0.88", "-37.907, -126.314, -7.09255, 0.88", "-38.6337, -127.35, -7.22894, 0.66", "-39.1951, -128.174, -7.35876, 0.96", "-39.6116, -128.767, -7.46547, 1.18", "-40.5172, -129.939, -7.67527, 0.88", "-40.8961, -130.355, -7.74871, 0.96", "-41.8157, -131.146, -7.88178, 0.59", "-41.869, -131.177, -7.88612, 0.59", "-42.9393, -131.576, -7.88397, 0.59", "-43.8764, -131.799, -7.84011, 0.52", "-44.554, -131.913, -7.78462, 0.52", "-45.2474, -132.041, -7.66728, 0.74", "-45.9703, -132.196, -7.49464, 0.96", "-46.6761, -132.378, -7.31524, 0.81", "-47.9158, -132.78, -6.99081, 0.96", "-48.7187, -133.101, -6.79355, 0.96", "-49.9322, -133.645, -6.49365, 0.44", "-50.6691, -134.015, -6.31931, 0.44", "-51.4673, -134.451, -6.15605, 0.66", "-52.1442, -134.817, -6.05882, 0.59", "-52.9469, -135.252, -5.97608, 0.59", "-53.0221, -135.291, -5.97291, 0.59", "-53.652, -135.624, -6.00602, 0.88", "-54.7862, -136.302, -6.09598, 0.96", "-55.6226, -136.874, -6.18378, 0.37", "-55.742, -136.973, -6.19072, 0.37", "-56.4881, -137.757, -6.18731, 0.37", "-57.0309, -138.465, -6.14499, 0.29", "-57.4976, -139.239, -6.06403, 0.29", "-57.8154, -139.853, -5.98043, 0.52", "-58.4861, -141.161, -5.78464, 1.03", "-58.8405, -141.801, -5.69017, 1.25", "-59.1464, -142.3, -5.62617, 1.25", "-59.7891, -143.145, -5.53337, 0.88", "-60.4714, -143.855, -5.48848, 0.74", "-61.2294, -144.508, -5.50963, 0.74", "-61.856, -144.969, -5.57912, 0.96", "-62.7367, -145.562, -5.69473, 0.66", "-63.4842, -146.054, -5.84501, 0.74", "-63.9292, -146.355, -5.95302, 1.03", "-64.5526, -146.82, -6.1277, 1.4", "-64.6006, -146.862, -6.1425, 1.4", "-65.0465, -147.351, -6.28959, 1.4", "-65.8276, -148.516, -6.54794, 0.52", "-66.2014, -149.243, -6.68803, 0.81", "-66.4485, -149.768, -6.7738, 0.88", "-66.6896, -150.311, -6.84309, 0.52", "-67.0638, -151.114, -6.93735, 0.44", "-67.3922, -151.802, -7.00532, 0.44", "-67.7182, -152.374, -7.03346, 0.44", "-68.1216, -152.915, -7.08522, 0.66", "-68.2308, -153.017, -7.08464, 0.66", "-68.7028, -153.327, -7.039, 0.88", "-68.7974, -153.373, -7.02437, 0.88", "-69.4101, -153.666, -6.90166, 0.96", "-69.7626, -153.857, -6.82192, 0.66", "-70.628, -154.387, -6.62533, 0.52", "-71.2174, -154.776, -6.50176, 0.44", "-71.6506, -155.094, -6.42397, 0.74", "-72.1996, -155.535, -6.34689, 0.81", "-72.8812, -156.187, -6.28349, 0.52", "-72.9372, -156.25, -6.28574, 0.52", "-73.2938, -156.701, -6.35487, 0.81", "-73.8087, -157.437, -6.4944, 0.96", "-74.0893, -157.889, -6.59197, 1.11", "-74.5048, -158.566, -6.74005, 0.81", "-75.0675, -159.434, -6.96584, 0.66", "-75.1026, -159.482, -6.98095, 0.66", "-75.6846, -160.15, -7.19463, 0.52", "-76.3002, -160.647, -7.34785, 0.37", "-76.8255, -160.91, -7.3703, 0.29", "-77.7071, -161.19, -7.2653, 0.66", "-78.223, -161.326, -7.14925, 0.74", "-79.2548, -161.657, -6.82801, 0.29", "-79.7302, -161.843, -6.65241, 0.66", "-80.3769, -162.172, -6.39481, 0.88", "-80.9981, -162.565, -6.14978, 0.88", "-81.3473, -162.819, -6.01649, 0.88", "-82.3628, -163.606, -5.69235, 0.58", "-83.0216, -164.14, -5.54606, 0.81", "-83.6124, -164.629, -5.44508, 1.11", "-84.1449, -165.077, -5.38711, 0.74", "-84.7475, -165.578, -5.32223, 0.88", "-85.3492, -166.028, -5.26657, 0.81", "-85.9462, -166.417, -5.22726, 0.74", "-86.9125, -166.988, -5.15301, 0.44", "-87.8118, -167.492, -5.07851, 0.74", "-88.5368, -167.868, -5.00954, 0.88", "-89.5116, -168.277, -4.82672, 0.52", "-90.0656, -168.48, -4.66602, 0.59", "-91.087, -168.827, -4.28646, 0.59", "-91.1411, -168.846, -4.26297, 0.59", "-91.6733, -169.095, -4.01188, 0.66", "-93.1548, -170.088, -3.36768, 0.59", "-93.8203, -170.684, -3.09923, 0.59", "-94.2457, -171.148, -2.97431, 0.81", "-94.8665, -171.915, -2.85601, 0.52", "-95.5201, -172.78, -2.82276, 0.66", "-96.2419, -173.815, -2.90243, 0.44", "-96.6577, -174.481, -3.02355, 1.11", "-97.4493, -175.759, -3.30021, 0.59", "-97.4866, -175.819, -3.31194, 0.59", "-97.9389, -176.512, -3.43016, 0.44", "-98.1597, -176.814, -3.47007, 0.44", "-98.8938, -177.673, -3.48307, 0.44", "-99.408, -178.156, -3.43045, 0.37", "-99.9965, -178.58, -3.30263, 0.29", "-100.502, -178.891, -3.13244, 0.66", "-101.001, -179.141, -2.92156, 1.03", "-101.622, -179.4, -2.64433, 1.03", "-102.086, -179.561, -2.43677, 0.81", "-102.888, -179.856, -2.09634, 0.52", "-103.768, -180.282, -1.76092, 0.66", "-104.254, -180.606, -1.5894, 0.29", "-104.494, -180.806, -1.51486, 0.59", "-104.929, -181.192, -1.41786, 0.81", "-105.44, -181.624, -1.33573, 0.81", "-106.105, -182.096, -1.27928, 0.52", "-106.942, -182.602, -1.27804, 0.74", "-107.0, -182.633, -1.27786, 0.74", "-107.878, -183.039, -1.27435, 0.44", "-108.5, -183.318, -1.28047, 0.74", "-109.179, -183.624, -1.29407, 1.11", "-110.179, -184.106, -1.32218, 0.59", "-110.771, -184.446, -1.34391, 0.66", "-111.36, -184.873, -1.37107, 0.81", "-112.034, -185.509, -1.4097, 0.52", "-112.459, -185.982, -1.43737, 0.66", "-112.835, -186.426, -1.46159, 0.66", "-113.216, -186.85, -1.51239, 0.44", "-113.267, -186.9, -1.52167, 0.44", "-114.08, -187.529, -1.68882, 0.37", "-114.219, -187.599, -1.71724, 0.37", "-115.181, -187.815, -1.90203, 0.37", "-116.067, -187.838, -2.11542, 0.29", "-116.598, -187.798, -2.2568, 0.37", "-117.161, -187.736, -2.38933, 0.44", "-117.939, -187.59, -2.58097, 0.37", "-119.002, -187.346, -2.84146, 0.29", "-120.181, -186.987, -3.12038, 0.22", "-120.423, -186.905, -3.16365, 0.44", "-121.528, -186.5, -3.41369, 0.52" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-14.6558, -72.8995, -3.5084, 0.74", "-15.1037, -73.285, -3.42254, 0.74", "-15.6503, -73.7584, -3.31824, 0.44", "-16.1894, -74.217, -3.21684, 0.59", "-16.8637, -74.7717, -3.12309, 0.37", "-17.3802, -75.2014, -3.05227, 0.59", "-17.6032, -75.385, -3.02218, 0.88", "-17.6539, -75.4252, -3.01736, 0.88", "-17.871, -75.5922, -3.00702, 1.11", "-18.3627, -75.9067, -3.0025, 0.88", "-18.9704, -76.198, -3.01041, 0.37", "-19.3492, -76.3366, -3.0244, 0.66", "-19.9389, -76.5111, -3.07401, 0.81", "-20.4844, -76.6662, -3.13072, 0.74", "-21.243, -76.8696, -3.21876, 0.88", "-21.7777, -77.008, -3.28034, 0.74", "-22.5957, -77.2313, -3.41205, 0.52", "-23.5663, -77.5487, -3.5787, 0.52", "-24.15, -77.7856, -3.65071, 0.74", "-24.2017, -77.8125, -3.65069, 0.74", "-24.6716, -78.1528, -3.33464, 0.88", "-25.2415, -78.6433, -2.61125, 1.03", "-25.5737, -78.9453, -2.08186, 1.18", "-26.0435, -79.3673, -1.23222, 0.96", "-26.6799, -79.9203, -4.45369E-4, 1.18", "-28.5335, -81.4512, 3.61321, 0.66", "-28.7926, -81.6699, 4.15902, 0.66", "-29.0637, -81.9057, 4.74519, 0.81", "-29.3266, -82.1355, 5.27922, 0.81", "-29.3602, -82.1667, 5.34008, 0.81", "-29.7553, -82.5961, 5.99717, 0.88", "-30.395, -83.3576, 7.08053, 0.88", "-30.7438, -83.8344, 7.85094, 0.74", "-30.8902, -84.054, 8.22724, 0.96", "-31.5041, -85.0328, 9.89342, 0.44", "-32.0253, -85.8955, 11.352, 1.25", "-32.7159, -87.1059, 13.3587, 0.59", "-33.1457, -87.822, 14.5044, 0.96", "-33.1671, -87.8571, 14.5574, 0.96", "-33.4672, -88.3372, 15.1848, 0.59", "-33.7996, -88.8313, 15.6851, 0.52", "-34.4557, -89.7754, 16.4176, 0.81", "-35.2718, -91.0033, 17.149, 0.44", "-35.6869, -91.6359, 17.4851, 0.59", "-36.0466, -92.2173, 17.8128, 0.74", "-36.4093, -92.8518, 18.2339, 0.44", "-36.8005, -93.5927, 18.7713, 0.44", "-37.2167, -94.4378, 19.392, 0.29", "-37.5424, -95.2065, 19.9789, 0.44", "-37.9037, -96.1853, 20.8227, 0.81", "-38.2575, -97.3093, 21.9217, 1.03", "-38.2667, -97.3477, 21.9643, 1.03", "-42.6275, -103.662, 26.9828, 1.03", "-47.4647, -109.824, 31.7588, 1.03", "-51.7091, -116.972, 35.5501, 1.03", "-57.119, -123.597, 38.8175, 1.03" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-2.44626, -59.8337, -5.85213, 1.4", "-1.88492, -60.3562, -6.02507, 1.4", "-0.991848, -61.1634, -6.4063, 1.11", "0.0519065, -62.189, -7.05386, 0.96", "0.820499, -63.0304, -7.70144, 0.96", "1.40101, -63.7587, -8.34708, 1.11", "2.0332, -64.6138, -9.12915, 1.25", "2.80342, -65.7506, -10.2357, 1.18", "3.61552, -67.1015, -11.5369, 1.18", "4.18845, -68.2422, -12.5599, 1.03", "4.79954, -69.7739, -13.7708, 0.88", "5.03261, -70.5276, -14.2587, 0.96", "5.38113, -71.9326, -14.9795, 1.11", "5.67059, -73.4329, -15.5525, 1.11", "5.82256, -74.4884, -15.8135, 0.96", "5.95025, -75.9014, -16.0335, 1.11", "5.98481, -77.8657, -16.2435, 1.18", "5.93145, -78.8363, -16.3518, 1.18", "5.80821, -79.9277, -16.4846, 1.18", "5.50623, -82.007, -16.7625, 0.96", "5.28298, -83.3951, -16.9676, 1.03", "4.91258, -85.5277, -17.3371, 1.03", "4.61536, -87.0663, -17.6467, 1.33", "4.40093, -88.1928, -17.9063, 1.55", "4.24453, -89.1155, -18.1603, 1.33", "4.02987, -90.5826, -18.6206, 1.03", "3.90611, -91.8094, -19.0151, 1.33", "3.84158, -92.8951, -19.3649, 1.33", "3.74391, -94.9501, -19.9895, 1.25", "3.60892, -97.1663, -20.6775, 1.03", "3.50389, -98.4244, -21.0742, 0.96", "3.31395, -100.011, -21.5795, 0.96", "3.15346, -100.989, -21.8863, 0.96", "2.87893, -102.434, -22.3602, 0.96", "2.53013, -103.787, -22.8104, 1.11", "2.28895, -104.445, -23.023, 1.25", "1.72445, -105.589, -23.431, 1.4", "1.25177, -106.275, -23.7185, 1.4" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-2.44626, -59.8337, -5.85213, 1.11", "-4.06267, -62.5058, -3.71593, 1.11", "-4.30135, -63.1257, -3.37657, 1.11", "-4.61151, -64.132, -2.91233, 1.03", "-4.95189, -65.6782, -2.32908, 1.11", "-4.96231, -65.7501, -2.30761, 1.11", "-5.11118, -67.0485, -1.99065, 1.11", "-5.13545, -68.5219, -1.79052, 1.11", "-5.13644, -68.5991, -1.78045, 1.11", "-5.15404, -69.9237, -1.62503, 1.11", "-5.1707, -71.5677, -1.47596, 1.03", "-5.19013, -72.6282, -1.40175, 1.33", "-5.25761, -73.8907, -1.34608, 1.18", "-5.46445, -75.4827, -1.34266, 0.88", "-5.47812, -75.5594, -1.34485, 0.88", "-5.92898, -77.2903, -1.43924, 0.88", "-6.38334, -78.6493, -1.55275, 0.88", "-6.86256, -79.8318, -1.69131, 1.11", "-7.60151, -81.4172, -1.84462, 0.88", "-7.63324, -81.4773, -1.84741, 0.88", "-8.22363, -82.5906, -1.83436, 0.88", "-8.33485, -82.7935, -1.81713, 0.88", "-8.77047, -83.745, -1.65571, 0.96", "-9.43541, -85.6815, -1.20912, 0.81", "-9.58685, -86.2631, -1.0627, 1.18", "-9.80015, -87.2321, -0.829917, 0.96", "-9.82549, -87.38, -0.79838, 0.96", "-10.0086, -88.7761, -0.531911, 0.74", "-10.0682, -89.7519, -0.440548, 0.96", "-10.0738, -90.5842, -0.467238, 1.03", "-10.066, -90.7355, -0.489703, 1.03", "-9.97412, -91.7222, -0.715234, 1.33", "-9.83436, -92.7242, -1.01331, 1.55", "-9.56257, -94.2464, -1.55705, 1.25", "-9.27529, -95.3847, -1.98094, 1.4", "-8.81158, -96.9813, -2.56047, 1.55", "-8.46136, -98.1234, -2.9666, 1.11", "-7.9834, -99.5687, -3.47912, 0.74", "-7.95931, -99.6477, -3.50491, 0.74", "-7.69166, -100.65, -3.80315, 0.74", "-7.54411, -101.367, -3.94508, 0.96", "-7.53116, -101.467, -3.95237, 0.96", "-7.42914, -102.82, -3.99016, 1.11", "-7.32111, -103.95, -3.95217, 1.11", "-7.11156, -105.469, -3.98098, 1.25", "-6.73786, -107.776, -4.0998, 0.96", "-6.40221, -109.395, -4.23734, 0.96", "-6.11969, -110.565, -4.36022, 1.11", "-5.4711, -112.913, -4.63883, 1.11", "-4.77736, -115.141, -4.96845, 1.25", "-4.56224, -115.803, -5.08539, 1.55", "-4.12728, -117.144, -5.43635, 1.47", "-4.10885, -117.216, -5.45214, 1.47", "-3.98568, -118.06, -5.57953, 0.88", "-4.03045, -119.196, -5.58552, 0.59", "-4.20838, -120.356, -5.39356, 0.74", "-4.38085, -121.178, -5.20873, 1.03", "-4.76535, -122.788, -4.80543, 1.03", "-4.93983, -123.493, -4.62894, 1.25", "-5.34639, -125.108, -4.21693, 1.25", "-5.6557, -126.339, -3.89679, 0.74", "-5.89295, -127.355, -3.68798, 0.74", "-6.06997, -128.401, -3.61507, 0.96", "-6.07473, -128.468, -3.62209, 0.96", "-6.05981, -129.659, -3.8632, 1.18", "-6.05152, -129.744, -3.88705, 1.18", "-5.81405, -131.256, -4.32278, 1.33", "-5.4799, -133.062, -4.78758, 1.03", "-5.21363, -134.542, -5.1128, 0.88", "-5.12572, -135.099, -5.22016, 1.33", "-4.98633, -136.236, -5.40845, 1.33", "-4.89761, -137.512, -5.57586, 1.55", "-4.92632, -138.771, -5.67441, 1.33", "-5.09044, -139.915, -5.73888, 1.11", "-5.40332, -141.135, -5.82411, 0.66", "-5.82503, -142.33, -5.93551, 0.66", "-6.33856, -143.474, -6.06766, 0.74", "-6.95946, -144.675, -6.2212, 0.59", "-7.38152, -145.478, -6.3103, 0.88", "-7.75188, -146.294, -6.37351, 0.96", "-7.99462, -147.092, -6.39151, 0.88", "-8.00291, -147.166, -6.38123, 0.88", "-7.95606, -148.232, -6.11079, 0.74", "-7.8327, -149.25, -5.80543, 1.25", "-7.69815, -150.355, -5.45102, 1.25", "-7.60249, -151.585, -5.06664, 1.03", "-7.61235, -153.651, -4.48307, 0.74", "-7.72025, -154.823, -4.19408, 0.59", "-7.86829, -155.513, -4.06363, 0.81", "-8.21405, -156.48, -3.96988, 0.88", "-8.72342, -157.6, -3.9594, 1.03", "-9.14768, -158.547, -4.01678, 1.11", "-9.22834, -158.761, -4.05658, 1.11", "-9.52552, -159.819, -4.34123, 0.96", "-9.76489, -161.02, -4.72476, 1.11", "-9.90199, -162.228, -5.14954, 0.96", "-9.99118, -163.993, -5.79855, 1.18", "-10.0814, -165.886, -6.42695, 1.03", "-10.1845, -167.829, -7.03018, 0.96", "-10.1891, -167.963, -7.0673, 0.96", "-10.2101, -169.375, -7.37083, 0.96", "-10.2284, -170.408, -7.46554, 1.4", "-10.2639, -172.423, -7.35379, 1.11", "-10.2647, -172.523, -7.33493, 1.11", "-10.2571, -173.696, -7.04398, 1.25", "-10.2246, -175.222, -6.66503, 1.11", "-10.1409, -176.899, -6.26388, 0.88", "-10.0604, -177.818, -6.07058, 1.18", "-9.84382, -179.277, -5.82492, 1.25", "-9.70712, -180.275, -5.67513, 1.4", "-9.69756, -180.36, -5.66554, 1.4", "-9.58985, -181.836, -5.54199, 1.03", "-9.58779, -182.066, -5.53409, 1.03", "-9.68044, -183.326, -5.5093, 0.74", "-9.8889, -184.408, -5.45902, 0.74", "-10.1633, -185.25, -5.41456, 0.96", "-10.7012, -186.498, -5.3516, 0.88", "-11.3145, -187.622, -5.30056, 0.88", "-11.9023, -188.581, -5.26401, 0.88", "-12.7791, -189.837, -5.22555, 1.11", "-13.4027, -190.714, -5.20211, 1.25", "-13.9714, -191.551, -5.18973, 1.4", "-14.1268, -191.803, -5.20294, 1.4", "-14.4764, -192.518, -5.26295, 1.4", "-14.5468, -192.734, -5.31289, 1.4", "-14.7532, -194.009, -5.80061, 1.25", "-14.8157, -194.976, -6.22436, 1.18", "-14.7818, -195.838, -6.6508, 0.96", "-14.664, -197.06, -7.29573, 0.96", "-14.3481, -199.122, -8.52455, 0.81", "-13.9866, -200.85, -9.67157, 0.81", "-13.807, -201.622, -10.2355, 1.03", "-13.4119, -203.447, -11.5896, 1.03", "-13.395, -203.536, -11.6532, 1.03", "-13.1551, -205.065, -12.6905, 1.55", "-12.9698, -206.895, -13.7472, 0.88", "-12.8625, -208.626, -14.6584, 0.81", "-12.8185, -209.971, -15.3533, 0.81", "-12.8182, -210.961, -15.8366, 0.96", "-12.8283, -211.996, -16.3058, 0.96", "-12.8531, -213.051, -16.7127, 0.74", "-12.8959, -214.779, -17.3193, 1.25", "-12.8735, -216.441, -17.8689, 0.81", "-12.8718, -216.513, -17.8917, 0.81", "-12.8916, -217.712, -18.1703, 0.81", "-12.9619, -218.65, -18.3183, 1.18", "-12.9795, -218.794, -18.3265, 1.18", "-13.1435, -219.806, -18.2882, 1.18", "-13.425, -221.571, -18.1232, 0.81", "-13.6914, -223.301, -17.9616, 0.81", "-13.8333, -224.24, -17.87, 1.11", "-14.0637, -225.812, -17.7457, 1.11", "-14.0872, -225.976, -17.7296, 1.11", "-14.3064, -227.343, -17.4735, 0.96", "-14.4077, -228.01, -17.3034, 1.25", "-14.4188, -228.082, -17.2837, 1.25", "-14.6275, -229.337, -16.8992, 1.25", "-15.0259, -231.35, -16.2665, 1.03", "-15.5441, -233.763, -15.5093, 0.81", "-15.7181, -234.597, -15.254, 1.11", "-15.9766, -236.043, -14.8547, 0.96", "-16.0133, -236.279, -14.801, 0.96", "-16.1734, -237.511, -14.5818, 0.81", "-16.1826, -237.612, -14.5761, 0.81", "-16.3036, -239.331, -14.6364, 0.96", "-16.3734, -240.436, -14.6747, 1.18", "-16.4355, -241.623, -14.7131, 1.03", "-16.4408, -241.7, -14.716, 1.03", "-16.5665, -243.063, -14.7746, 0.74", "-16.7741, -244.903, -14.891, 0.74", "-16.8871, -245.907, -15.0074, 0.81", "-16.8964, -246.007, -15.022, 0.81", "-16.9443, -246.977, -15.1808, 0.81", "-16.945, -248.428, -15.4251, 0.81", "-16.815, -250.123, -15.7394, 1.03", "-16.6374, -251.57, -16.0273, 1.03", "-16.629, -251.644, -16.0424, 1.03", "-16.554, -252.639, -16.2509, 1.25", "-16.5068, -253.579, -16.4509, 0.96", "-16.5208, -254.834, -16.6965, 0.81", "-16.589, -255.637, -16.8408, 1.11", "-16.7258, -256.838, -17.0264, 1.33", "-16.8683, -258.006, -17.2211, 1.33", "-16.8774, -258.091, -17.2371, 1.33", "-17.0071, -259.688, -17.5441, 0.74", "-17.0355, -261.359, -17.8753, 0.96", "-16.923, -262.751, -18.1426, 0.96", "-16.9014, -262.887, -18.1616, 0.96", "-16.602, -264.302, -18.2878, 0.96", "-16.3422, -265.571, -18.2915, 0.81", "-16.0997, -266.937, -18.1859, 0.66", "-15.9467, -268.274, -17.9965, 0.66", "-15.8901, -269.551, -17.7776, 1.33", "-15.931, -270.62, -17.5485, 1.33", "-16.1739, -272.546, -17.0589, 1.11", "-16.3993, -273.925, -16.6827, 1.18", "-16.5401, -274.696, -16.4704, 1.4", "-16.719, -275.888, -16.183, 1.11", "-16.8072, -277.286, -15.9144, 0.59", "-16.769, -278.192, -15.7738, 0.52", "-16.5828, -279.433, -15.6309, 0.88", "-16.2966, -280.655, -15.5285, 1.18", "-15.951, -281.982, -15.4703, 1.03", "-15.4835, -283.66, -15.4691, 0.96", "-15.0258, -285.324, -15.585, 0.81", "-14.7883, -286.306, -15.6994, 1.11", "-14.5833, -287.449, -15.8947, 1.69", "-14.4211, -288.729, -16.1813, 1.18", "-14.4188, -288.814, -16.1998, 1.18", "-14.5106, -290.147, -16.4332, 0.59", "-14.5225, -290.221, -16.4312, 0.59", "-14.7521, -291.348, -16.1588, 1.03", "-14.7798, -291.476, -16.1089, 1.03", "-15.062, -293.122, -15.3272, 1.25", "-15.1588, -293.828, -14.9741, 1.25", "-15.3526, -295.509, -14.1201, 0.96", "-15.4582, -296.467, -13.6865, 0.66", "-15.546, -297.322, -13.3593, 0.66", "-15.618, -298.064, -13.153, 0.37", "-15.6805, -299.079, -13.0819, 0.52", "-15.7718, -300.261, -13.1768, 0.81", "-15.8887, -301.199, -13.3888, 1.11", "-16.0257, -302.13, -13.6955, 1.4", "-16.197, -303.283, -14.1319, 1.4", "-16.5146, -305.293, -14.9741, 0.81", "-16.6614, -306.428, -15.482, 0.66", "-16.7326, -307.515, -15.9709, 0.52", "-16.6934, -308.999, -16.584, 0.37", "-16.6118, -309.822, -16.8955, 0.88", "-16.6029, -309.894, -16.918, 0.88", "-16.5485, -310.655, -17.0721, 1.25", "-16.5335, -311.541, -17.2294, 1.25", "-16.5983, -312.547, -17.3891, 0.88", "-16.901, -314.25, -17.641, 0.66", "-17.3257, -315.839, -17.9084, 0.66", "-17.831, -317.341, -18.2048, 0.88", "-18.2366, -318.416, -18.481, 0.88", "-18.5797, -319.306, -18.775, 1.11", "-18.8681, -320.115, -19.0693, 1.18", "-19.0698, -320.749, -19.2742, 1.18", "-19.5554, -322.65, -19.8463, 0.88", "-19.8565, -324.273, -20.2793, 1.25", "-20.0835, -326.06, -20.6742, 0.74", "-20.215, -327.526, -20.933, 0.59", "-20.3212, -329.207, -21.1521, 1.03", "-20.3785, -330.222, -21.211, 0.74", "-20.4548, -331.382, -21.1516, 0.59", "-20.4853, -331.617, -21.1193, 0.59", "-20.7405, -332.813, -20.9097, 0.74", "-20.7636, -332.887, -20.907, 0.74", "-21.1166, -333.978, -21.0568, 0.59", "-21.1433, -334.061, -21.0745, 0.59", "-21.5455, -335.5, -21.4344, 0.74", "-21.8797, -336.955, -21.8189, 0.59", "-22.1697, -338.847, -22.336, 0.59", "-22.3412, -340.562, -22.8302, 0.59", "-22.372, -341.778, -23.1969, 0.59", "-22.3364, -342.848, -23.5245, 0.81", "-22.3103, -343.075, -23.5949, 0.81", "-22.1222, -343.976, -23.8558, 0.81", "-22.1068, -344.039, -23.8652, 0.81", "-21.9483, -345.132, -23.9174, 0.81", "-21.9485, -345.2, -23.9135, 0.81", "-22.0553, -346.349, -23.7947, 0.66", "-22.0621, -346.416, -23.7864, 0.66", "-22.2106, -347.746, -23.6006, 0.66", "-22.3244, -349.374, -23.3496, 0.44", "-22.4151, -351.542, -22.9859, 0.66", "-22.3834, -353.413, -22.5924, 0.96", "-22.2684, -354.998, -22.1951, 0.96", "-22.2537, -355.115, -22.1629, 0.96", "-21.9352, -356.646, -21.6799, 0.81", "-21.8935, -356.789, -21.6326, 0.81", "-21.33, -358.359, -21.1748, 0.74", "-21.3041, -358.43, -21.1531, 0.74", "-21.0934, -359.17, -20.9571, 0.96", "-21.0565, -359.32, -20.9351, 0.96", "-20.8422, -360.598, -20.8341, 0.96", "-20.7216, -361.508, -20.8225, 0.96", "-20.716, -361.586, -20.8304, 0.96", "-20.632, -362.746, -20.9599, 0.52", "-20.5353, -364.024, -21.1232, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-37.291, -59.8212, -11.9529, 0.74", "-37.9997, -59.6966, -11.5407, 0.74", "-38.0627, -59.6945, -11.4876, 0.74", "-38.9222, -59.7693, -10.6035, 0.52", "-39.3712, -59.8324, -10.1338, 0.44", "-40.1227, -59.946, -9.38726, 0.44", "-40.8525, -60.0578, -8.71395, 0.96", "-42.2, -60.3402, -7.52501, 0.74", "-43.0226, -60.5406, -6.87192, 0.74", "-43.4316, -60.6652, -6.59357, 0.74", "-44.0234, -60.8385, -6.25248, 0.59", "-44.5452, -60.9629, -6.0057, 0.52", "-45.2911, -61.1025, -5.72703, 0.52", "-45.7978, -61.1793, -5.58666, 0.88", "-46.6429, -61.2747, -5.36496, 0.59", "-47.9262, -61.3633, -4.95216, 0.96", "-49.3562, -61.4202, -4.41588, 1.33", "-49.9011, -61.4316, -4.18527, 1.33", "-50.7798, -61.4473, -3.79284, 0.44", "-51.2993, -61.4433, -3.56361, 0.44", "-52.427, -61.4058, -3.1174, 0.44", "-52.4842, -61.404, -3.09957, 0.44", "-53.3974, -61.3537, -2.89467, 0.81", "-54.0275, -61.3102, -2.6969, 0.96" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-37.291, -59.8212, -11.9529, 0.59", "-38.7133, -61.097, -12.4873, 0.59", "-39.4723, -61.8184, -12.7169, 0.52", "-39.9239, -62.2493, -12.858, 0.88", "-40.7778, -63.008, -13.1935, 0.88", "-41.3783, -63.5076, -13.5655, 0.88", "-41.9202, -63.9178, -13.9785, 1.03", "-42.6986, -64.3665, -14.6475, 0.59", "-43.3627, -64.6182, -15.3775, 0.44", "-44.2328, -64.7451, -16.4689, 0.74", "-45.687, -64.6056, -18.5226, 0.44", "-46.0535, -64.4866, -19.0482, 0.44", "-46.4703, -64.2968, -19.6278, 0.44", "-46.9563, -64.0405, -20.2458, 0.74", "-47.2946, -63.8708, -20.601, 0.96", "-47.3553, -63.8494, -20.6446, 0.96", "-48.02, -63.7117, -20.9494, 0.88", "-49.4418, -63.4858, -21.5903, 0.44", "-49.8768, -63.4123, -21.7835, 0.44", "-49.9441, -63.3961, -21.8238, 0.44", "-50.4256, -63.2334, -22.1531, 0.44", "-51.1285, -62.9229, -22.6907, 0.44", "-51.5851, -62.662, -23.0565, 0.81", "-51.996, -62.3662, -23.4185, 1.33", "-53.3329, -61.3357, -24.6662, 1.33", "-53.8906, -60.9193, -25.1721, 1.25", "-54.5372, -60.4614, -25.74, 0.96", "-55.235, -60.0158, -26.3506, 0.88", "-56.0458, -59.5373, -27.0213, 0.74", "-56.6842, -59.1879, -27.5012, 0.74", "-57.5744, -58.7248, -28.1167, 0.66", "-58.0563, -58.4783, -28.478, 0.52", "-58.8436, -58.0683, -29.0731, 0.29", "-59.3487, -57.7771, -29.5389, 0.37", "-59.4041, -57.7404, -29.5972, 0.37", "-60.202, -57.0375, -30.6337, 0.88", "-60.4312, -56.7519, -31.0631, 1.25", "-60.7269, -56.3404, -31.7579, 1.18", "-61.2972, -55.5997, -33.0956, 0.66", "-61.3276, -55.5659, -33.1611, 0.66", "-61.7457, -55.1655, -33.9273, 0.74", "-62.6784, -54.4375, -35.3545, 0.88", "-63.3873, -53.9538, -36.3542, 0.52", "-63.957, -53.6595, -37.0124, 0.88", "-64.6254, -53.4459, -37.5855, 1.03", "-65.3694, -53.286, -38.137, 1.33", "-66.0628, -53.2008, -38.5581, 0.88", "-66.1333, -53.1933, -38.5956, 0.88", "-67.0357, -53.0945, -39.114, 0.59", "-68.1709, -52.9676, -39.891, 0.52", "-68.2968, -52.9505, -39.9888, 0.52", "-68.6791, -52.8704, -40.3127, 0.81", "-69.8974, -52.4496, -41.5617, 0.29", "-69.9462, -52.4308, -41.6193, 0.29", "-70.346, -52.2607, -42.2461, 0.29", "-70.4983, -52.1975, -42.5201, 0.88", "-70.6694, -52.1558, -42.8724, 1.18", "-71.4666, -52.0829, -44.6228, 0.37", "-71.9612, -52.1166, -45.6818, 0.74", "-72.6413, -52.2689, -47.1343, 1.03", "-72.6752, -52.2808, -47.2033, 1.03", "-73.4388, -52.6103, -48.6327, 0.44", "-73.6496, -52.704, -48.9815, 1.18", "-74.0466, -52.8605, -49.5036, 1.47", "-75.0641, -53.198, -51.0554, 0.81", "-75.4903, -53.3187, -51.7335, 0.52", "-76.0917, -53.4723, -52.7138, 0.37", "-76.4495, -53.5546, -53.2927, 0.37", "-76.9069, -53.6638, -54.0432, 1.18", "-79.2398, -54.2729, -57.9849, 0.81", "-79.3198, -54.2949, -58.1189, 0.81", "-79.7659, -54.4367, -58.8699, 0.81", "-80.0861, -54.5369, -59.3624, 0.88", "-80.4251, -54.6595, -59.8599, 0.81", "-81.2246, -54.9909, -60.856, 0.29", "-81.4211, -55.0669, -61.0163, 0.29", "-81.7522, -55.2299, -61.3457, 0.29", "-82.3473, -55.5956, -62.0135, 1.18", "-83.6037, -56.5683, -63.4644, 0.59", "-83.9989, -56.9433, -63.8944, 1.33", "-84.0482, -56.9975, -63.9432, 1.33", "-85.0011, -58.1196, -64.8025, 0.74", "-85.4794, -58.7254, -65.2033, 0.66", "-86.0309, -59.4591, -65.6828, 0.37", "-86.5981, -60.1939, -66.1263, 0.88", "-87.1862, -60.9527, -66.6064, 1.03", "-87.6718, -61.5855, -67.0348, 0.88", "-87.7116, -61.64, -67.0718, 0.88", "-88.6506, -63.1089, -68.1182, 0.74", "-89.0812, -63.8521, -68.7685, 0.44", "-89.3106, -64.2519, -69.1708, 1.47", "-89.7909, -65.0403, -70.0803, 1.03", "-90.0883, -65.4477, -70.6274, 0.74", "-90.38, -65.7324, -71.0749, 0.74", "-91.5766, -66.4894, -72.633, 0.52", "-92.1686, -66.749, -73.4011, 0.66", "-92.7157, -66.9663, -74.1439, 0.37", "-93.1061, -67.1518, -74.7999, 0.29", "-93.4541, -67.3385, -75.4657, 0.29", "-93.8487, -67.5782, -76.2994, 0.74", "-94.3795, -67.9659, -77.5191, 0.96", "-95.0611, -68.5011, -79.2319, 0.96", "-96.0205, -69.2362, -81.8154, 0.88", "-96.0435, -69.2507, -81.8756, 0.88", "-96.4719, -69.4543, -82.9488, 0.88", "-96.6827, -69.5158, -83.4208, 1.03", "-97.0544, -69.5826, -84.1233, 1.03", "-97.6979, -69.6942, -85.131, 0.74", "-98.4438, -69.9022, -86.184, 0.37", "-98.4854, -69.9222, -86.2495, 0.37", "-99.257, -70.4247, -87.5653, 0.37", "-99.9218, -70.9663, -88.8155, 0.37", "-100.523, -71.5207, -89.9763, 0.88", "-101.112, -72.0522, -91.0454, 1.18", "-101.974, -72.7988, -92.762, 0.59", "-102.008, -72.8221, -92.8307, 0.59", "-102.786, -73.1464, -94.3655, 0.44", "-103.01, -73.1839, -94.88, 0.37", "-103.388, -73.1633, -95.8657, 0.37", "-104.242, -72.9642, -98.1355, 1.03", "-104.681, -72.8112, -99.2637, 1.03", "-105.067, -72.6898, -100.18, 1.25", "-106.029, -72.494, -102.467, 1.18", "-106.058, -72.4964, -102.539, 1.18", "-106.509, -72.6485, -103.574, 0.59", "-106.798, -72.8034, -104.146, 0.74", "-107.123, -73.0293, -104.757, 0.74", "-108.207, -73.902, -106.784, 0.88", "-109.151, -74.8137, -109.06, 0.52", "-109.386, -75.0751, -109.734, 1.18", "-109.75, -75.5602, -111.028, 1.55", "-109.924, -75.8126, -111.718, 1.25", "-110.541, -76.736, -114.197, 0.74", "-111.707, -78.5339, -118.851, 0.74", "-111.843, -78.7572, -119.428, 1.4", "-112.465, -79.8339, -122.31, 0.74", "-112.499, -79.8884, -122.465, 0.74", "-112.711, -80.1929, -123.418, 0.59", "-112.733, -80.2148, -123.492, 0.59", "-113.776, -80.84, -125.707, 0.59", "-113.838, -80.871, -125.819, 0.59", "-114.478, -81.1231, -126.843, 0.66", "-114.854, -81.2633, -127.453, 0.88", "-116.192, -81.7085, -129.636, 0.44", "-116.374, -81.7672, -129.898, 1.03", "-117.444, -82.0942, -131.031, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-22.1588, -180.637, -74.4838, 0.29", "-23.3375, -181.078, -74.9314, 0.29", "-24.0668, -181.325, -75.1953, 0.29", "-25.1105, -181.657, -75.6538, 0.22", "-25.5681, -181.823, -75.8625, 0.81", "-26.0162, -182.002, -76.0671, 0.81", "-26.3919, -182.165, -76.2688, 0.81", "-27.0167, -182.465, -76.6618, 0.52", "-28.2162, -183.107, -77.5227, 0.22", "-29.0073, -183.578, -78.1251, 0.22", "-29.3734, -183.817, -78.4179, 0.81", "-30.412, -184.539, -79.2658, 0.96", "-30.6601, -184.73, -79.4995, 1.11", "-31.4513, -185.432, -80.4172, 0.22", "-31.8337, -185.792, -80.8917, 0.22", "-32.046, -185.991, -81.166, 0.74", "-32.2805, -186.224, -81.4794, 0.96", "-33.1151, -187.12, -82.6708, 0.59", "-33.8786, -187.974, -83.8463, 0.29", "-34.3898, -188.568, -84.7634, 0.22", "-34.5234, -188.72, -85.0148, 0.37", "-35.1456, -189.387, -86.1937, 0.22", "-35.6588, -189.927, -87.176, 0.81", "-35.8844, -190.161, -87.5923, 1.03", "-36.6341, -191.019, -89.1967, 0.37", "-36.8852, -191.326, -89.7896, 0.52", "-37.4721, -192.051, -91.1891, 0.29", "-37.7143, -192.335, -91.721, 0.66", "-37.9205, -192.577, -92.1446, 0.81", "-38.7877, -193.708, -94.1053, 0.29", "-39.0001, -194.02, -94.6042, 0.44", "-39.0252, -194.064, -94.675, 0.44", "-39.2525, -194.487, -95.3333, 0.59", "-39.5014, -195.091, -96.2421, 1.03", "-39.8014, -196.279, -97.9666, 1.03", "-39.923, -197.335, -99.436, 0.29", "-39.9633, -198.316, -100.792, 0.88", "-39.9734, -198.67, -101.282, 1.25", "-40.0663, -200.961, -104.479, 0.29", "-40.1377, -202.387, -106.467, 0.37", "-40.2229, -203.432, -107.877, 0.81", "-40.327, -204.385, -109.171, 0.44", "-40.4294, -204.97, -109.953, 0.37", "-40.6337, -205.792, -111.022, 0.37", "-41.0622, -206.837, -112.263, 0.37", "-41.4859, -207.63, -113.138, 0.37", "-41.8475, -208.28, -113.807, 1.11", "-42.0879, -208.706, -114.231, 1.25", "-42.6816, -209.698, -115.275, 0.81", "-43.269, -210.566, -116.201, 0.52", "-43.5913, -210.938, -116.578, 0.52", "-43.6368, -210.988, -116.633, 0.52", "-44.215, -211.6, -117.303, 0.52", "-45.2261, -212.629, -118.513, 0.44", "-45.7092, -213.102, -119.071, 0.44", "-46.4942, -213.921, -120.118, 0.74", "-47.4619, -215.003, -121.538, 0.74", "-47.4946, -215.043, -121.589, 0.74", "-48.2504, -216.051, -122.838, 0.37", "-48.5323, -216.438, -123.323, 0.81", "-49.4664, -217.636, -125.008, 0.29", "-49.7914, -218.005, -125.593, 0.29", "-50.1313, -218.358, -126.098, 0.88", "-50.2692, -218.506, -126.304, 1.25" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-22.1588, -180.637, -74.4838, 0.59", "-21.8423, -183.004, -75.0491, 0.59", "-21.728, -183.985, -75.241, 0.59", "-21.6929, -184.259, -75.2858, 0.81", "-21.5958, -184.892, -75.3692, 0.81", "-21.4346, -185.808, -75.4708, 0.15", "-21.2619, -186.646, -75.545, 0.15", "-21.2467, -186.705, -75.538, 0.15", "-21.1416, -187.054, -75.4985, 0.59", "-20.9765, -187.571, -75.4436, 0.88", "-20.9354, -187.704, -75.4307, 0.88", "-20.8258, -188.168, -75.393, 0.88", "-20.6781, -189.145, -75.301, 0.52", "-20.6333, -189.946, -75.2215, 0.44", "-20.6468, -190.395, -75.1762, 0.74", "-20.7029, -190.962, -75.1166, 0.44", "-20.8305, -191.742, -74.9961, 0.29", "-20.9646, -192.272, -74.895, 0.88", "-21.0921, -192.761, -74.782, 0.96", "-21.2545, -193.519, -74.5835, 0.81", "-21.3777, -194.394, -74.3472, 0.29", "-21.4214, -195.314, -74.1173, 0.44", "-21.3906, -195.969, -73.9543, 0.22", "-21.2362, -197.014, -73.7114, 0.22", "-21.0597, -197.649, -73.5651, 0.59", "-20.7683, -198.362, -73.3643, 0.81", "-20.4531, -198.981, -73.173, 0.81", "-20.1944, -199.454, -73.0275, 0.88", "-19.7639, -200.343, -72.7385, 0.37", "-19.4919, -201.243, -72.4552, 0.59", "-19.3535, -202.135, -72.2078, 0.96", "-19.3253, -202.771, -72.0501, 0.59", "-19.3738, -203.542, -71.8894, 0.29", "-19.5354, -204.62, -71.7881, 0.29", "-19.796, -205.799, -71.7813, 0.74", "-19.9648, -206.487, -71.8271, 0.96", "-19.9878, -206.59, -71.8365, 0.96", "-20.0978, -207.147, -71.8783, 0.96", "-20.2776, -208.173, -71.9377, 0.44", "-20.3866, -208.88, -71.9607, 0.29", "-20.5895, -209.827, -71.9239, 0.59", "-20.8279, -210.595, -71.8366, 1.03", "-20.9196, -210.828, -71.7992, 1.11", "-21.1214, -211.283, -71.7032, 0.96", "-21.3803, -211.824, -71.5646, 0.96", "-21.791, -212.63, -71.3516, 0.37", "-22.2032, -213.423, -71.1544, 0.22", "-22.4492, -213.934, -71.0453, 0.44", "-22.8283, -214.809, -70.861, 0.44", "-23.038, -215.432, -70.7306, 0.66", "-23.174, -216.074, -70.6031, 0.88", "-23.2663, -216.758, -70.4899, 0.29", "-23.3601, -217.516, -70.2906, 0.29", "-23.369, -217.599, -70.2625, 0.29", "-23.4594, -218.315, -69.986, 0.29", "-23.5919, -219.225, -69.625, 0.29", "-23.7552, -220.254, -69.2168, 0.29", "-24.0335, -221.542, -68.6365, 0.59", "-24.1358, -221.864, -68.4829, 0.74", "-24.4594, -222.699, -68.0907, 0.29", "-24.7483, -223.351, -67.8026, 0.29", "-24.7717, -223.413, -67.778, 0.29", "-24.9425, -224.205, -67.5503, 0.81", "-24.9905, -224.707, -67.4731, 1.25", "-25.01, -225.262, -67.4272, 0.88", "-24.963, -226.197, -67.3959, 0.52", "-24.8364, -227.342, -67.3494, 0.29", "-24.7532, -227.918, -67.3277, 0.66", "-24.5909, -228.675, -67.3055, 0.74", "-24.2172, -229.925, -67.2316, 0.22", "-23.9553, -230.651, -67.1686, 0.22", "-23.6485, -231.375, -67.0475, 0.88", "-23.619, -231.446, -67.0288, 0.88", "-23.3552, -232.079, -66.8052, 0.81", "-23.0738, -232.756, -66.5435, 0.74", "-23.0521, -232.819, -66.5186, 0.74", "-22.8712, -233.745, -66.2295, 0.29", "-22.7852, -234.659, -66.0102, 0.74", "-22.7894, -234.973, -65.9447, 0.81", "-22.9154, -235.869, -65.8164, 0.22", "-23.0302, -236.315, -65.7807, 0.66", "-23.1725, -236.769, -65.7703, 0.74", "-23.1947, -236.826, -65.7735, 0.74", "-23.4859, -237.483, -65.8344, 0.74", "-23.8751, -238.242, -65.9241, 0.22", "-24.2371, -238.856, -66.0805, 0.22", "-24.2659, -238.904, -66.0978, 0.22", "-24.4477, -239.258, -66.2483, 0.66", "-24.4718, -239.327, -66.2785, 0.66", "-24.5459, -239.705, -66.4518, 0.66", "-24.6965, -240.764, -66.8989, 0.52", "-24.7037, -240.817, -66.9301, 0.52", "-24.8239, -241.53, -67.3616, 0.22", "-24.9439, -242.111, -67.7075, 1.03", "-25.0151, -242.468, -67.9263, 1.11", "-25.1437, -243.122, -68.3114, 0.88", "-25.5831, -245.219, -69.4362, 0.22", "-25.6881, -245.723, -69.6952, 0.88", "-25.8076, -246.266, -69.9753, 0.59", "-25.9735, -247.075, -70.3703, 0.52", "-26.0912, -247.808, -70.681, 0.81", "-26.1232, -248.349, -70.9331, 0.81", "-26.0966, -249.502, -71.5908, 0.29", "-26.0921, -249.55, -71.624, 0.29", "-26.0195, -249.972, -71.9675, 0.96", "-25.9196, -250.387, -72.3571, 1.25", "-25.3387, -252.259, -74.2985, 0.52", "-24.8891, -253.487, -75.652, 0.44", "-24.7432, -253.823, -76.0282, 0.66", "-24.2699, -254.816, -77.1217, 0.52", "-23.699, -255.883, -78.2679, 0.29", "-23.5485, -256.139, -78.5247, 0.59", "-23.4813, -256.248, -78.6109, 0.59", "-22.778, -257.296, -79.309, 0.22", "-22.738, -257.356, -79.3465, 0.22", "-22.4467, -257.781, -79.5204, 0.59", "-22.3521, -257.909, -79.5486, 0.59", "-22.2214, -258.084, -79.5903, 0.59", "-22.1788, -258.14, -79.6022, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.223, 151.194, -14.6064, 0.29", "-12.1963, 152.014, -16.0799, 0.29", "-12.9255, 152.57, -17.0163, 0.29", "-13.9781, 153.335, -18.252, 0.66", "-14.878, 153.998, -19.3554, 0.29", "-15.3261, 154.333, -19.9128, 0.37", "-16.253, 155.033, -21.0628, 0.37", "-17.2457, 155.804, -22.2051, 0.59", "-17.7423, 156.196, -22.78, 0.81", "-18.5991, 156.868, -23.741, 0.37", "-18.8818, 157.111, -24.0304, 0.88", "-19.2812, 157.504, -24.4606, 1.03", "-19.7757, 158.069, -25.0124, 0.81", "-20.1683, 158.568, -25.4405, 0.37", "-20.218, 158.641, -25.4888, 0.37", "-20.7264, 159.53, -25.9174, 0.37", "-20.7768, 159.638, -25.9635, 0.37", "-21.1931, 160.539, -26.1958, 0.37", "-21.23, 160.621, -26.2054, 0.37", "-21.8272, 161.852, -26.2434, 0.22", "-22.1717, 162.534, -26.2393, 0.74", "-22.2119, 162.615, -26.2359, 0.74", "-23.1333, 164.501, -26.1624, 0.29", "-23.3177, 164.883, -26.1348, 0.66", "-23.5757, 165.405, -26.0955, 0.66", "-24.0485, 166.329, -26.0297, 0.37", "-24.3628, 166.991, -25.9984, 0.29", "-24.6338, 167.659, -26.0062, 0.29", "-24.9414, 168.645, -26.0852, 0.96", "-24.9677, 168.728, -26.0919, 0.96", "-25.1174, 169.267, -26.1269, 0.66", "-25.3251, 170.092, -26.1739, 0.29", "-25.5303, 170.906, -26.2483, 0.29", "-25.5502, 170.989, -26.2617, 0.29", "-25.7241, 171.811, -26.4472, 1.11", "-25.8303, 172.598, -26.6086, 1.47", "-25.8453, 172.814, -26.6481, 1.47", "-25.8814, 173.914, -26.8386, 0.66", "-25.8959, 174.773, -26.9767, 0.37", "-25.9127, 175.854, -27.1449, 0.37", "-25.8702, 177.529, -27.4917, 0.29", "-25.7974, 179.293, -27.9348, 0.29", "-25.788, 179.474, -27.9812, 0.29", "-25.6959, 180.605, -28.2736, 0.96", "-25.6383, 181.214, -28.4386, 1.18", "-25.4192, 183.192, -29.0995, 0.37", "-25.3541, 183.835, -29.4107, 0.37", "-30.48, 193.733, -34.9789, 0.37", "-32.8313, 204.522, -40.6591, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.223, 151.194, -14.6064, 1.03", "-11.3854, 151.784, -14.5468, 1.03", "-11.7886, 153.193, -14.4721, 1.4", "-12.2423, 154.959, -14.4358, 1.4", "-12.2676, 155.069, -14.4352, 1.4", "-12.5842, 156.67, -14.449, 1.25", "-12.8709, 158.365, -14.4375, 0.81", "-12.8885, 158.476, -14.4307, 0.81", "-13.0674, 159.741, -14.3207, 0.96", "-13.1138, 160.188, -14.2832, 0.96", "-13.2374, 161.446, -14.1566, 1.18", "-13.3599, 162.89, -13.963, 0.96", "-13.516, 164.924, -13.7788, 1.18", "-13.5299, 165.09, -13.7721, 1.18", "-13.6286, 166.441, -13.812, 1.18", "-13.6695, 167.966, -13.9993, 0.96", "-13.6667, 168.102, -14.0292, 0.96", "-13.5331, 169.923, -14.546, 1.47", "-13.5199, 170.029, -14.5803, 1.47", "-13.2538, 171.707, -15.0438, 1.18", "-12.8851, 173.443, -15.4476, 0.81", "-12.8344, 173.637, -15.4755, 0.81", "-12.5885, 174.867, -15.4564, 0.74", "-12.5788, 174.966, -15.4369, 0.74", "-12.6151, 175.821, -15.2262, 0.74", "-12.639, 175.927, -15.1988, 0.74", "-12.9521, 176.812, -15.0348, 0.81", "-13.7765, 178.735, -14.8501, 1.18", "-14.1481, 179.501, -14.8291, 1.4", "-14.8339, 180.876, -14.8478, 0.96", "-15.5021, 182.201, -14.9099, 0.96", "-16.0763, 183.377, -15.0082, 0.96", "-16.7365, 184.838, -15.2201, 0.96", "-16.7802, 184.94, -15.2318, 0.96", "-17.1095, 185.713, -15.2455, 0.96", "-17.3474, 186.291, -15.213, 1.18", "-17.4572, 186.567, -15.1779, 1.18", "-17.9042, 187.716, -15.0161, 1.18", "-18.7651, 190.031, -14.7342, 0.96", "-19.4772, 191.929, -14.5053, 0.66", "-19.8253, 192.839, -14.3975, 0.66", "-20.284, 194.05, -14.2912, 0.88", "-20.7262, 195.279, -14.213, 0.88", "-21.1188, 196.444, -14.1706, 1.03", "-21.4867, 197.702, -14.1988, 1.03", "-21.5143, 197.797, -14.1993, 1.03", "-21.8179, 198.872, -14.2297, 1.11", "-22.1223, 200.006, -14.3057, 1.11", "-22.166, 200.167, -14.3203, 1.11", "-22.607, 201.822, -14.5268, 0.96", "-22.9339, 202.977, -14.6511, 0.96", "-23.3747, 204.549, -14.7708, 1.4", "-23.679, 205.655, -14.8263, 1.03", "-24.0205, 207.034, -14.8796, 1.25", "-24.3534, 208.733, -14.9085, 0.88", "-24.5528, 210.326, -14.8856, 0.88", "-24.6499, 211.711, -14.8114, 0.88", "-24.6487, 212.031, -14.7815, 0.88", "-24.5844, 213.184, -14.6692, 0.88", "-24.4739, 214.757, -14.5735, 0.81", "-24.362, 216.206, -14.5574, 0.81", "-24.3581, 216.304, -14.5649, 0.81", "-24.4169, 217.263, -14.6292, 0.96", "-24.6774, 218.908, -14.7543, 0.96", "-25.0871, 220.67, -14.9029, 1.03", "-25.1108, 220.755, -14.9103, 1.03", "-25.7835, 222.896, -15.1148, 1.03", "-26.3364, 224.67, -15.2898, 1.03", "-26.8521, 226.441, -15.4551, 1.03", "-27.0138, 227.108, -15.5037, 1.03", "-27.156, 227.945, -15.5494, 1.03", "-27.3105, 229.292, -15.6215, 0.88", "-27.3641, 230.935, -15.7148, 0.88", "-27.306, 232.345, -15.8338, 1.11", "-27.2392, 232.922, -15.8894, 1.11", "-27.0178, 234.46, -16.0874, 1.11", "-26.9804, 234.666, -16.1187, 1.11", "-26.7542, 235.733, -16.3045, 0.96", "-26.7372, 235.813, -16.3219, 0.96", "-26.4354, 237.499, -16.7448, 0.88", "-26.254, 238.776, -17.0908, 0.66", "-26.2328, 238.971, -17.1432, 0.66", "-26.1116, 240.165, -17.4263, 0.66", "-26.101, 240.275, -17.4472, 0.66", "-25.9549, 241.551, -17.5916, 0.96", "-25.9289, 241.749, -17.596, 0.96", "-25.6826, 243.02, -17.5853, 0.96", "-25.6303, 243.254, -17.5803, 0.96", "-25.4772, 243.93, -17.5625, 0.96", "-25.2352, 245.226, -17.4705, 0.96", "-25.0853, 246.168, -17.3721, 1.18", "-24.9545, 247.278, -17.2522, 0.74", "-24.8783, 248.594, -17.1336, 0.74", "-24.8876, 249.599, -17.0771, 1.18", "-25.0588, 251.153, -17.0834, 0.66", "-25.3096, 252.311, -17.1697, 0.66", "-25.7151, 253.692, -17.3563, 0.66", "-26.1997, 255.039, -17.6073, 1.18", "-26.5726, 256.002, -17.8524, 1.18", "-27.3037, 257.873, -18.4448, 0.96", "-27.8026, 259.147, -18.8678, 0.96", "-28.165, 260.077, -19.1435, 0.66", "-28.1931, 260.154, -19.1628, 0.66", "-28.6992, 261.678, -19.4722, 0.59", "-28.9943, 262.657, -19.6283, 1.03", "-29.5665, 264.469, -19.7625, 0.81", "-29.902, 265.44, -19.7852, 1.03", "-29.9746, 265.63, -19.7868, 1.03", "-30.4601, 266.819, -19.8046, 1.03", "-30.6404, 267.219, -19.8132, 1.03", "-31.3776, 268.823, -19.908, 0.96", "-31.9793, 270.263, -20.0598, 0.96", "-32.3706, 271.367, -20.1699, 0.96", "-32.6981, 272.485, -20.2752, 1.11", "-32.8702, 273.301, -20.3471, 1.33", "-32.8857, 273.412, -20.3581, 1.33", "-32.9295, 274.908, -20.5334, 0.88", "-32.8878, 276.063, -20.6239, 1.11", "-32.8675, 276.276, -20.6228, 1.11", "-32.7169, 277.209, -20.5357, 1.11", "-32.6954, 277.303, -20.5194, 1.11", "-32.4732, 278.269, -20.2163, 0.88", "-32.4523, 278.358, -20.1795, 0.81", "-32.2321, 279.347, -19.7672, 1.03", "-32.0893, 280.07, -19.4636, 1.03", "-31.8976, 281.268, -18.9921, 0.81", "-31.6931, 283.077, -18.3677, 0.74", "-31.6091, 284.389, -17.9912, 0.74", "-31.5946, 285.716, -17.6517, 0.88", "-31.614, 286.457, -17.4909, 0.88", "-31.7063, 287.56, -17.2828, 0.88", "-31.7895, 288.284, -17.1745, 0.88", "-31.8653, 289.278, -17.0661, 0.88", "-31.9012, 290.699, -16.8878, 0.88", "-31.881, 291.43, -16.7546, 0.88", "-31.8661, 291.64, -16.7136, 0.88", "-31.7266, 292.925, -16.4368, 0.88", "-31.5581, 294.274, -16.165, 0.88", "-31.3468, 295.747, -15.8926, 0.44", "-31.1938, 297.091, -15.6646, 0.81", "-31.1452, 298.105, -15.5077, 1.25", "-31.1465, 299.377, -15.3259, 0.96", "-31.2549, 301.026, -15.1345, 1.33", "-31.3161, 301.534, -15.0905, 1.47", "-31.6418, 303.658, -14.9916, 1.11", "-31.8599, 304.931, -14.9976, 0.96", "-31.8775, 305.028, -14.9997, 0.96", "-32.0495, 306.149, -15.0532, 0.96", "-32.0589, 306.236, -15.0596, 0.96", "-32.1211, 307.662, -15.1738, 0.96", "-32.1116, 307.86, -15.1953, 0.96", "-31.9326, 309.71, -15.3906, 0.96", "-31.6115, 311.813, -15.6741, 0.96", "-31.2413, 313.695, -15.9642, 0.96", "-31.0099, 314.832, -16.1156, 0.96", "-30.7846, 315.846, -16.2346, 0.96", "-30.4672, 317.227, -16.3706, 1.11", "-29.9764, 319.287, -16.5314, 1.11", "-29.9595, 319.373, -16.5312, 1.11", "-29.7285, 321.244, -16.3036, 1.11", "-29.7246, 321.34, -16.2832, 1.11", "-29.7533, 322.566, -15.9242, 1.11", "-29.8104, 323.577, -15.581, 1.18", "-29.9724, 325.305, -14.9457, 0.88", "-30.062, 326.514, -14.544, 0.66", "-30.0679, 326.613, -14.5186, 0.66", "-30.1769, 327.527, -14.3523, 0.81", "-30.3583, 328.695, -14.2315, 0.81", "-30.3733, 328.796, -14.2286, 0.81", "-30.5058, 329.879, -14.2849, 0.66", "-30.6141, 331.017, -14.3785, 1.18", "-30.7628, 332.819, -14.5377, 1.03", "-30.8406, 333.957, -14.6465, 0.88", "-30.8892, 335.4, -14.8153, 0.74", "-30.8866, 337.044, -15.0324, 1.25", "-30.8581, 337.916, -15.1684, 1.03", "-30.8429, 338.124, -15.2006, 1.03", "-30.671, 339.555, -15.4525, 1.03", "-30.583, 340.72, -15.5915, 1.03", "-30.5774, 340.821, -15.591, 1.03", "-30.5217, 342.334, -15.3988, 1.25", "-30.5188, 342.429, -15.3732, 1.25", "-30.462, 344.011, -14.8112, 1.4", "-30.3741, 346.455, -13.7338, 0.74", "-30.33, 347.949, -13.0249, 0.59", "-30.3249, 348.079, -12.9622, 0.59", "-30.2045, 349.829, -12.1069, 0.59", "-30.1157, 350.811, -11.6844, 0.81", "-30.1056, 350.905, -11.6524, 0.81", "-29.9452, 352.028, -11.4703, 0.81", "-29.9114, 352.326, -11.4533, 0.81", "-29.7879, 353.561, -11.4508, 1.03", "-29.6673, 354.79, -11.5146, 1.25", "-29.5819, 355.735, -11.5024, 1.25", "-29.574, 355.819, -11.4971, 1.25", "-29.5011, 357.04, -11.3077, 0.96", "-29.4388, 358.819, -10.9279, 0.74", "-29.4654, 359.624, -10.688, 0.74", "-29.602, 361.428, -10.0517, 0.88", "-29.703, 362.326, -9.72167, 0.74", "-29.9558, 364.212, -9.03795, 0.74", "-30.1117, 365.156, -8.70789, 0.74", "-30.4751, 367.025, -8.11787, 0.96", "-30.7, 368.131, -7.83455, 1.03", "-30.927, 369.231, -7.65376, 1.03", "-31.1265, 370.322, -7.53711, 1.18", "-31.2592, 371.504, -7.50489, 0.59", "-31.3001, 372.204, -7.50862, 0.37", "-31.2887, 372.764, -7.53806, 0.81", "-31.2512, 373.347, -7.57497, 0.81", "-31.1645, 374.437, -7.66698, 0.81", "-31.1117, 375.445, -7.79496, 0.81", "-31.122, 376.282, -7.95083, 0.88", "-31.1989, 376.949, -8.12181, 0.81", "-31.4353, 378.019, -8.46787, 0.74", "-31.758, 379.065, -8.86017, 0.74", "-32.1853, 380.129, -9.31345, 0.96", "-32.6682, 381.189, -9.78211, 0.44", "-33.1561, 382.194, -10.2247, 0.44", "-33.6254, 383.152, -10.622, 0.96", "-33.6736, 383.25, -10.6589, 0.96", "-33.989, 383.974, -10.9056, 0.96", "-34.3365, 384.901, -11.1864, 0.96", "-34.4278, 385.179, -11.2473, 0.96", "-34.7467, 386.032, -11.4156, 0.81", "-34.8695, 386.318, -11.4455, 0.81", "-35.4717, 387.576, -11.519, 0.81", "-35.5151, 387.664, -11.5206, 0.81", "-36.0958, 388.824, -11.5077, 0.96", "-36.7242, 390.158, -11.4696, 0.81", "-37.4964, 391.9, -11.3803, 0.81", "-37.532, 391.992, -11.3746, 0.81", "-37.8835, 393.198, -11.2908, 0.81", "-37.9011, 393.295, -11.2869, 0.81", "-37.9005, 394.442, -11.3707, 0.59", "-37.8883, 394.589, -11.3855, 0.59", "-37.7768, 395.39, -11.5385, 0.59", "-37.5997, 396.527, -11.7719, 0.59", "-37.3509, 397.858, -12.0841, 0.81", "-36.9415, 399.775, -12.5705, 0.81" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "15.5139, 77.4031, -57.6364, 0.52", "16.92, 78.2497, -58.5882, 0.52", "16.9544, 78.2745, -58.6131, 0.52", "17.5993, 78.8742, -59.1086, 0.44", "17.6361, 78.9175, -59.1398, 0.44", "17.9703, 79.2986, -59.4239, 0.88", "18.3149, 79.6508, -59.6839, 1.11", "18.3485, 79.6889, -59.7083, 1.11", "18.8057, 80.1294, -59.9859, 1.03", "19.5337, 80.7274, -60.3567, 0.37", "20.5186, 81.3579, -60.8116, 0.44", "21.0783, 81.6451, -61.0436, 0.44", "21.1685, 81.6885, -61.0805, 0.44", "21.6494, 81.9391, -61.3242, 0.44", "21.7039, 81.9752, -61.3638, 0.44", "22.3371, 82.5421, -61.9919, 0.96", "22.4982, 82.7631, -62.2128, 1.33", "22.8025, 83.285, -62.6961, 1.18", "23.2071, 84.0789, -63.3857, 0.81", "23.5789, 84.9474, -64.0624, 0.37", "23.5991, 84.9976, -64.0976, 0.37", "23.7794, 85.5089, -64.3962, 0.66", "23.9167, 85.8454, -64.578, 0.88", "23.9641, 85.9574, -64.6269, 0.88", "24.1921, 86.4727, -64.829, 0.88", "24.479, 87.1167, -65.09, 0.74", "24.7059, 87.679, -65.3375, 0.59", "24.9885, 88.4683, -65.7065, 1.03", "25.1588, 89.0786, -66.0012, 0.29", "25.3103, 89.7913, -66.3296, 0.81", "25.3609, 90.1614, -66.4891, 0.88", "25.3844, 90.5966, -66.6517, 0.96", "25.3966, 91.0296, -66.8139, 0.66", "25.3971, 91.8029, -67.0744, 0.22", "25.4092, 92.5236, -67.3036, 1.62", "25.4237, 93.0235, -67.4424, 1.99", "25.4381, 93.4708, -67.5545, 1.77", "25.4499, 94.4046, -67.7642, 1.25", "25.4365, 95.0998, -67.8923, 0.81", "25.4112, 95.6346, -67.9669, 0.66", "25.3648, 96.2056, -68.0299, 0.81", "25.2974, 96.8846, -68.0771, 0.29", "25.1972, 97.692, -68.097, 0.29", "25.1283, 98.1131, -68.0743, 0.44", "25.1199, 98.1685, -68.0705, 0.44", "25.0296, 98.8049, -68.0353, 0.59", "24.9806, 99.2336, -68.0216, 1.11", "24.9379, 99.7085, -68.0229, 1.11", "24.891, 100.317, -68.0345, 0.88", "24.8269, 101.196, -68.0669, 0.52", "24.757, 102.178, -68.1093, 0.52", "24.6985, 103.083, -68.1526, 0.66", "24.6606, 103.832, -68.1932, 0.29", "24.6431, 104.553, -68.2383, 0.81", "24.6444, 104.611, -68.2426, 0.81", "24.6817, 104.99, -68.2734, 1.03", "24.7089, 105.122, -68.2856, 1.03", "24.8294, 105.569, -68.3398, 1.03", "24.9819, 106.063, -68.4093, 0.96", "25.1044, 106.499, -68.4863, 0.66", "25.2165, 107.068, -68.606, 0.52", "25.242, 107.462, -68.7064, 0.44", "25.2164, 108.197, -68.9165, 0.44", "25.196, 108.311, -68.9526, 0.44", "25.0609, 108.736, -69.0903, 0.37", "24.8292, 109.259, -69.2557, 0.37", "24.4843, 109.926, -69.4404, 1.03", "24.46, 109.975, -69.4527, 1.03", "24.2734, 110.405, -69.5463, 1.18", "24.1156, 110.841, -69.6284, 0.59", "23.9731, 111.352, -69.7074, 0.37", "23.8653, 111.92, -69.7787, 0.29", "23.7643, 112.686, -69.8333, 0.22", "23.7196, 113.053, -69.8504, 0.44", "23.7069, 113.175, -69.854, 0.44", "23.6362, 113.687, -69.8167, 0.44", "23.6262, 113.741, -69.8051, 0.44", "23.4616, 114.499, -69.5757, 0.74", "23.3141, 115.098, -69.3669, 1.33", "23.1268, 115.839, -69.0894, 1.4", "22.836, 116.994, -68.6494, 0.52", "22.6483, 117.743, -68.3726, 0.59", "22.5121, 118.299, -68.1872, 0.74", "22.4276, 118.68, -68.0808, 0.74", "22.4149, 118.743, -68.0679, 0.74", "22.3335, 119.195, -68.0234, 0.44", "22.2395, 119.828, -68.058, 0.52", "22.1901, 120.244, -68.0997, 0.66", "22.1477, 120.622, -68.122, 0.44", "22.0909, 121.145, -68.138, 0.22", "22.0038, 121.877, -68.1495, 0.66", "21.955, 122.239, -68.1623, 0.88", "21.8793, 122.745, -68.1893, 0.29", "21.7754, 123.356, -68.2306, 0.22", "21.6996, 123.762, -68.2654, 0.37", "21.6217, 124.177, -68.3248, 0.52", "21.5132, 124.803, -68.4705, 0.29", "21.4633, 125.13, -68.5552, 0.59", "21.4494, 125.257, -68.5835, 0.59", "21.4401, 125.605, -68.6414, 0.59", "21.442, 125.66, -68.6463, 0.59", "21.4748, 126.179, -68.6636, 0.59", "21.5217, 126.948, -68.6321, 0.44", "21.5509, 127.58, -68.5932, 0.59", "21.5662, 128.105, -68.5585, 1.03", "21.5668, 128.63, -68.5256, 1.03", "21.5456, 129.155, -68.5013, 0.81", "21.4981, 129.708, -68.4882, 0.59", "21.4186, 130.29, -68.4991, 0.37", "21.275, 131.11, -68.554, 0.37", "21.1464, 131.783, -68.6115, 0.37", "21.0399, 132.324, -68.6676, 0.44", "20.9298, 132.893, -68.7371, 0.44", "20.8402, 133.43, -68.7975, 0.29", "20.737, 134.127, -68.8561, 0.29", "20.6811, 134.668, -68.8808, 0.81", "20.6484, 135.192, -68.8674, 1.11", "20.6316, 135.723, -68.8249, 0.81", "20.6164, 136.504, -68.7347, 0.52", "20.6157, 136.559, -68.7268, 0.52", "20.5855, 137.255, -68.6242, 0.52", "20.515, 138.009, -68.5285, 0.29", "20.4446, 138.527, -68.4759, 0.59", "20.3401, 139.043, -68.4544, 0.81", "20.31, 139.151, -68.4585, 0.81", "20.1765, 139.628, -68.4902, 0.81", "20.0635, 140.089, -68.5321, 0.66", "20.0511, 140.151, -68.5396, 0.66", "19.9496, 140.727, -68.6025, 0.44", "19.8329, 141.418, -68.6765, 0.37", "19.7301, 142.059, -68.7445, 0.37", "19.62, 142.754, -68.8193, 0.52", "19.5243, 143.316, -68.8841, 0.37", "19.4337, 143.763, -68.9438, 0.37", "19.3316, 144.231, -69.0129, 0.81", "19.2258, 144.666, -69.0857, 0.88", "19.1188, 145.043, -69.1549, 0.59", "19.0517, 145.267, -69.1974, 0.44", "18.8801, 145.948, -69.3138, 0.37", "18.7251, 146.763, -69.433, 0.37", "18.6875, 147.17, -69.4922, 0.66", "18.6864, 147.233, -69.5014, 0.66", "18.7392, 147.857, -69.5799, 0.74", "18.7801, 148.174, -69.6185, 0.88", "18.9217, 148.894, -69.7037, 0.59", "19.0991, 149.607, -69.7934, 0.29", "19.1173, 149.668, -69.801, 0.29", "19.4368, 150.622, -69.9215, 1.18" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "15.5139, 77.4031, -57.6364, 0.59", "15.742, 78.3179, -57.5033, 0.59", "15.8945, 78.9777, -57.3924, 0.29", "16.0138, 79.5297, -57.3008, 0.29", "16.1607, 80.2579, -57.1851, 0.29", "16.4662, 81.9354, -56.9281, 0.29", "16.6481, 83.0237, -56.7715, 0.74", "16.7382, 83.7393, -56.6839, 0.74", "16.8132, 84.4805, -56.6146, 0.52", "16.8522, 84.9302, -56.5898, 0.44", "16.8965, 85.4881, -56.5746, 0.29", "16.9488, 86.1453, -56.5849, 0.29", "17.0328, 87.0122, -56.6241, 0.66", "17.1008, 87.5741, -56.6377, 0.96", "17.1894, 88.0911, -56.6324, 0.66", "17.2299, 88.2804, -56.6253, 0.66", "17.3703, 88.8498, -56.5906, 0.44", "17.5044, 89.4366, -56.5433, 0.29", "17.6233, 90.0181, -56.4895, 0.22", "17.7493, 90.9792, -56.3391, 0.29", "17.7532, 91.0579, -56.3245, 0.29", "17.7527, 91.8051, -56.1749, 0.37", "17.7014, 92.6232, -56.0164, 0.66", "17.6377, 93.1944, -55.9099, 0.96", "17.489, 94.4951, -55.6855, 0.81", "17.4201, 95.3167, -55.5536, 0.59", "17.4189, 95.4055, -55.5416, 0.59", "17.4753, 96.3521, -55.4397, 0.59", "17.5568, 96.9396, -55.3964, 0.66", "17.826, 98.171, -55.3437, 0.22", "18.0186, 98.7744, -55.3456, 0.22", "18.3063, 99.5144, -55.3363, 0.74", "18.5624, 100.139, -55.324, 0.81", "18.5978, 100.224, -55.3218, 0.81", "18.8547, 100.913, -55.3069, 0.88", "19.0406, 101.473, -55.2903, 0.81", "19.2519, 102.154, -55.2767, 0.29", "19.5373, 103.336, -55.2702, 0.29", "19.8703, 105.034, -55.281, 0.74", "19.994, 105.861, -55.2971, 1.11", "20.0644, 106.594, -55.3244, 0.88", "20.1201, 107.806, -55.375, 0.22", "20.1327, 109.077, -55.4335, 0.22", "20.1327, 109.204, -55.4435, 0.22", "20.1365, 109.522, -55.4941, 0.22", "20.1641, 110.244, -55.6434, 0.74", "20.1817, 110.697, -55.749, 1.11", "20.2149, 111.556, -56.0028, 1.25", "20.2666, 112.534, -56.3158, 0.74", "20.3309, 113.85, -56.7803, 0.22", "20.3636, 114.64, -57.0688, 0.37", "20.3967, 115.696, -57.4541, 0.37", "20.4293, 117.205, -57.9783, 0.52", "20.4402, 117.821, -58.1745, 0.88", "20.4563, 119.119, -58.5278, 1.03", "20.4767, 119.938, -58.7201, 0.66", "20.5127, 120.854, -58.9139, 0.29", "20.5697, 121.875, -59.097, 0.22", "20.6198, 122.742, -59.2064, 0.22", "20.6713, 123.573, -59.2964, 0.44", "20.7148, 124.126, -59.3403, 0.59", "20.8045, 124.919, -59.4079, 0.37", "20.9198, 125.693, -59.4745, 0.29", "21.0962, 126.601, -59.5504, 0.44", "21.3199, 127.449, -59.6448, 0.29", "21.6676, 128.368, -59.8243, 0.66", "21.8897, 128.928, -59.9674, 1.03", "22.0343, 129.279, -60.0731, 1.25", "22.3004, 129.979, -60.3051, 0.44", "22.648, 131.056, -60.6865, 0.52", "22.9753, 132.331, -61.159, 0.29", "23.2877, 133.857, -61.7224, 0.29", "23.3095, 133.969, -61.7603, 0.29", "23.4438, 134.664, -61.9942, 0.29", "23.6799, 135.625, -62.287, 0.81", "23.7068, 135.712, -62.3063, 0.81", "23.94, 136.26, -62.4175, 0.88", "24.3791, 137.049, -62.6564, 0.88", "24.7588, 137.735, -62.896, 0.44", "25.2537, 138.652, -63.2461, 0.22", "25.6934, 139.546, -63.6718, 0.22", "26.1868, 140.678, -64.2785, 0.81", "26.517, 141.595, -64.8074, 0.88", "26.694, 142.244, -65.1794, 0.96", "26.8152, 142.802, -65.487, 0.96", "27.0372, 144.189, -66.2634, 0.44", "27.0505, 144.267, -66.3043, 0.44", "27.1979, 145.031, -66.6187, 0.44", "27.4246, 146.102, -66.99, 0.66", "27.4644, 146.28, -67.0481, 0.66", "27.5778, 146.774, -67.241, 0.88", "27.7747, 147.617, -67.585, 0.52", "27.9721, 148.366, -67.9384, 0.37", "28.4138, 150.055, -68.8549, 1.11", "28.5034, 150.456, -69.093, 1.25", "28.7741, 152.056, -70.0587, 0.22", "28.7802, 152.132, -70.1063, 0.22", "28.7571, 152.689, -70.494, 0.22", "28.6587, 153.37, -70.9822, 0.22", "28.5461, 153.819, -71.2645, 0.74", "28.4208, 154.243, -71.5201, 1.03", "28.2084, 154.894, -71.8658, 0.81", "27.8668, 156.019, -72.4702, 0.52", "27.7583, 156.41, -72.7283, 0.37", "27.5995, 157.155, -73.2962, 0.29", "27.5011, 157.91, -73.8932, 0.59", "27.4924, 158.371, -74.2464, 0.96", "27.5288, 158.823, -74.5754, 1.11", "27.7113, 160.222, -75.4474, 0.37", "27.7226, 160.3, -75.4924, 0.37", "27.8207, 161.154, -75.9162, 0.29", "27.8693, 162.048, -76.2193, 0.29", "27.8644, 162.134, -76.2385, 0.29", "27.7151, 163.047, -76.3448, 0.37", "27.6216, 163.51, -76.3554, 0.59", "27.4211, 164.453, -76.3679, 0.74", "27.2397, 165.225, -76.3725, 0.52", "26.9778, 166.399, -76.3742, 0.22", "26.8383, 167.223, -76.3765, 0.22", "26.7607, 167.881, -76.4136, 0.22", "26.6848, 168.839, -76.5209, 0.74", "26.6526, 169.666, -76.6562, 0.88", "26.6404, 170.411, -76.8124, 0.74", "26.6414, 171.328, -77.0266, 0.66", "26.6178, 172.864, -77.4124, 0.29", "26.5674, 173.896, -77.6854, 0.29", "26.5392, 174.437, -77.8348, 0.44", "26.531, 174.624, -77.8855, 0.44", "26.518, 175.165, -78.0155, 0.44", "26.5249, 175.686, -78.1106, 0.29", "26.5704, 176.211, -78.1588, 0.74", "26.7043, 176.949, -78.2054, 0.96", "26.7968, 177.325, -78.225, 0.88", "27.0531, 178.226, -78.2674, 0.29", "27.2463, 178.839, -78.2937, 0.44", "27.5057, 179.623, -78.3244, 0.29", "27.8473, 180.774, -78.3678, 0.37", "27.9905, 181.262, -78.3843, 0.59", "28.2172, 181.976, -78.4072, 0.74", "28.3571, 182.423, -78.4216, 0.52", "28.529, 182.979, -78.427, 0.37", "28.9162, 184.301, -78.3827, 0.52", "29.2267, 185.39, -78.31, 0.44", "29.6872, 186.987, -78.1694, 0.88", "29.8801, 187.625, -78.1038, 1.25", "30.0708, 188.266, -78.0347, 1.03", "30.3677, 189.276, -77.9195, 0.29", "30.61, 190.153, -77.8197, 0.44", "30.8099, 191.157, -77.7483, 0.37", "30.9444, 192.129, -77.7269, 0.74", "31.0554, 193.143, -77.7609, 0.74", "31.061, 193.231, -77.7694, 0.74", "31.0807, 194.241, -77.9074, 0.74", "31.0617, 195.354, -78.0688, 0.22", "31.0489, 195.931, -78.152, 0.52", "31.037, 196.579, -78.2392, 0.96", "31.0331, 197.588, -78.3614, 0.22", "31.0515, 198.41, -78.4448, 0.66", "31.0969, 199.157, -78.5004, 1.03", "31.1919, 200.196, -78.4991, 0.81", "31.2928, 201.324, -78.4522, 0.52", "31.3395, 201.965, -78.4209, 0.44", "31.402, 203.297, -78.3562, 0.37", "31.4202, 204.475, -78.3039, 0.88", "31.4254, 205.765, -78.2524, 1.25", "31.4339, 206.521, -78.2274, 0.88", "31.473, 207.538, -78.2064, 0.44", "31.5254, 208.643, -78.2072, 0.59", "31.5664, 209.298, -78.2249, 0.81", "31.6293, 210.022, -78.2675, 0.59", "31.7414, 210.931, -78.3485, 0.37", "31.9818, 212.407, -78.4377, 0.52", "32.1437, 213.352, -78.4628, 0.37", "32.2075, 213.788, -78.4737, 0.74", "32.2591, 214.442, -78.4922, 0.88", "32.2513, 214.801, -78.5202, 0.88", "32.2037, 215.444, -78.6583, 1.11", "32.1788, 216.092, -78.8659, 1.03", "32.1796, 216.701, -79.0969, 0.37", "32.2087, 217.429, -79.3942, 0.37", "32.3235, 218.516, -79.8814, 0.66", "32.5726, 220.174, -80.6262, 0.29", "32.7719, 221.27, -81.1028, 0.52", "32.7868, 221.343, -81.1328, 0.52", "32.9209, 221.954, -81.3581, 0.66", "33.1583, 223.028, -81.6784, 0.37", "33.405, 224.253, -81.941, 0.66", "33.5553, 225.16, -82.0734, 0.59", "33.6407, 225.815, -82.1354, 0.74", "33.7402, 226.689, -82.1744, 0.37", "33.8569, 227.881, -82.0767, 0.59", "33.8724, 228.059, -82.0433, 0.59", "33.935, 228.754, -81.8817, 0.37", "34.0667, 230.132, -81.5289, 0.29", "34.1828, 231.317, -81.2425, 0.52", "34.3687, 233.212, -80.8034, 0.22", "34.5136, 234.38, -80.563, 0.52", "34.5858, 234.998, -80.4656, 0.81", "34.648, 235.718, -80.4003, 0.52", "34.7294, 236.993, -80.4067, 0.74", "34.7304, 237.082, -80.4156, 0.74", "34.6476, 238.253, -80.6447, 1.33", "34.5245, 239.162, -80.8202, 0.88", "34.3216, 240.191, -81.0053, 0.66", "34.0591, 241.182, -81.1565, 0.52", "33.7033, 242.334, -81.3219, 0.52", "33.3864, 243.271, -81.4604, 0.52", "32.9802, 244.312, -81.6231, 0.29", "32.7103, 245.04, -81.7359, 0.52", "32.4485, 245.721, -81.8356, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "29.7297, 56.8037, 9.20397, 0.59", "31.1212, 57.2172, 6.41601, 0.59", "31.8955, 57.4637, 5.09429, 0.74", "31.9297, 57.475, 5.04154, 0.74", "32.2948, 57.6088, 4.53657, 0.74", "32.93, 57.8253, 3.77606, 0.96", "32.9724, 57.8365, 3.72965, 0.96", "33.5178, 57.9249, 3.37134, 0.96", "33.5711, 57.9312, 3.33672, 0.96", "34.586, 58.0622, 2.62395, 0.52", "35.238, 58.1556, 2.12963, 0.52", "36.1118, 58.2904, 1.44973, 0.81", "36.591, 58.3734, 1.08487, 0.88", "37.4191, 58.5028, 0.425289, 0.52", "37.6703, 58.5453, 0.234635, 0.74", "37.7642, 58.5644, 0.15006, 0.74", "38.0893, 58.6614, -0.203442, 0.29", "38.482, 58.8183, -0.670695, 0.59", "39.1195, 59.1272, -1.61453, 0.74", "39.4644, 59.3123, -2.16602, 0.59", "40.2589, 59.7736, -3.54819, 1.03", "40.3074, 59.8045, -3.63389, 1.03", "40.4602, 59.9124, -3.91506, 0.74", "41.0742, 60.4259, -5.06716, 0.44", "41.3105, 60.655, -5.48008, 0.59", "41.7729, 61.0849, -6.20259, 0.66", "42.0946, 61.3485, -6.5753, 0.74", "42.1323, 61.3769, -6.61585, 0.74", "42.2784, 61.4806, -6.75764, 0.74", "42.3159, 61.506, -6.78701, 0.74", "43.0882, 62.102, -7.54919, 0.29", "43.2741, 62.3133, -7.82649, 0.66", "43.3154, 62.3865, -7.92884, 0.66", "43.4028, 62.554, -8.20726, 0.88", "43.4139, 62.5848, -8.27045, 0.88", "43.5537, 63.1887, -9.56973, 0.29", "43.6159, 63.7096, -10.7297, 0.29", "43.6493, 64.3241, -12.1491, 1.11", "43.6524, 64.8977, -13.5106, 0.96", "43.5991, 65.9968, -16.0863, 0.66", "43.5775, 66.2135, -16.581, 0.66", "43.5651, 66.2878, -16.7396, 0.66", "43.4967, 66.6941, -17.5284, 0.59", "43.4865, 66.7726, -17.6514, 0.59", "43.4294, 67.5304, -18.485, 0.52", "43.4336, 67.5668, -18.5135, 0.52", "43.5192, 67.9674, -18.821, 0.96", "43.6594, 68.4435, -19.1622, 1.11", "44.0341, 69.4354, -19.7921, 0.29", "44.0553, 69.4773, -19.8219, 0.29", "44.261, 69.7389, -20.0708, 0.52", "44.2898, 69.7685, -20.1063, 0.52", "44.402, 69.8668, -20.2448, 0.74", "44.4336, 69.8966, -20.2893, 0.74", "44.9115, 70.4497, -20.9758, 0.74", "45.2784, 71.006, -21.5558, 0.59", "45.3007, 71.0483, -21.595, 0.59", "45.4935, 71.4494, -21.9172, 0.29", "45.7832, 72.1325, -22.3799, 0.29", "45.9937, 72.7085, -22.726, 0.88", "46.0958, 73.0499, -22.8809, 1.11", "46.1094, 73.0981, -22.9003, 1.11", "46.2677, 73.5773, -23.0964, 0.88", "46.348, 73.7611, -23.1895, 0.52", "46.7498, 74.4424, -23.5763, 0.37", "47.1413, 75.0011, -23.9484, 0.22", "47.1747, 75.0449, -23.9794, 0.22", "47.3873, 75.3311, -24.1741, 0.74", "47.8275, 76.0026, -24.6507, 0.88", "48.0457, 76.3331, -24.8823, 0.22", "48.2681, 76.6275, -25.1172, 0.29", "48.3019, 76.6651, -25.153, 0.29", "48.5643, 76.9319, -25.5105, 0.29", "49.0713, 77.3769, -26.3768, 0.88", "49.2609, 77.5173, -26.713, 1.18", "49.842, 77.8933, -27.778, 0.29", "50.103, 78.048, -28.2577, 0.88", "50.996, 78.5766, -29.8639, 1.33", "51.7403, 78.9959, -31.1526, 0.52", "51.9975, 79.1445, -31.5802, 1.25", "52.0243, 79.1629, -31.6242, 1.25", "52.6239, 79.681, -32.5965, 0.29", "52.9155, 79.9738, -33.0403, 0.29", "53.1929, 80.2862, -33.3531, 0.59", "53.3442, 80.474, -33.5111, 0.96", "53.6532, 80.8557, -33.8375, 0.96", "54.1692, 81.423, -34.359, 0.59", "54.2067, 81.4586, -34.3933, 0.59", "54.5063, 81.723, -34.6561, 0.29", "54.9338, 82.1084, -35.0094, 0.44", "55.1958, 82.3488, -35.2107, 0.66", "55.5786, 82.7413, -35.5079, 0.29", "55.8291, 83.0042, -35.6793, 0.22", "56.1561, 83.3582, -35.9097, 0.66", "56.3312, 83.5465, -36.032, 0.74", "56.5122, 83.7488, -36.1541, 0.59", "57.1594, 84.4185, -36.5747, 0.22", "57.4592, 84.6514, -36.7676, 0.44", "57.5086, 84.6761, -36.7993, 0.44", "57.7967, 84.7676, -36.9726, 0.59", "57.8422, 84.7793, -37.0007, 0.59", "58.2856, 84.8719, -37.2709, 0.59", "59.0068, 85.0121, -37.686, 0.22", "59.3953, 85.1212, -37.9152, 0.59", "59.6519, 85.2088, -38.0639, 0.66", "60.1277, 85.4196, -38.3823, 0.66", "60.1698, 85.4425, -38.4118, 0.66", "60.7128, 85.8069, -38.8242, 0.22", "61.0943, 86.0987, -39.1116, 0.66", "61.2627, 86.2346, -39.2419, 0.96", "62.142, 86.9652, -39.9179, 0.22", "62.441, 87.2237, -40.1801, 0.22", "62.8591, 87.6183, -40.678, 0.59", "63.043, 87.8138, -40.9791, 0.96", "63.1268, 87.9044, -41.139, 1.18", "63.149, 87.9274, -41.1832, 1.18", "63.7624, 88.4454, -42.294, 0.44", "64.3008, 88.8019, -43.1676, 0.37", "64.7305, 89.035, -43.7937, 0.29", "65.0057, 89.1665, -44.1482, 0.44", "65.2135, 89.2666, -44.398, 0.44", "65.8345, 89.5595, -45.0226, 0.22", "66.3292, 89.7487, -45.3864, 0.81", "66.4247, 89.7801, -45.4464, 0.81", "66.7386, 89.8604, -45.6352, 0.96", "67.9408, 90.126, -46.3623, 0.37", "68.632, 90.2903, -46.7854, 0.37", "69.2803, 90.4782, -47.2439, 0.29", "69.3163, 90.4878, -47.2727, 0.29", "69.7741, 90.5984, -47.6562, 0.29", "70.1289, 90.6773, -47.9513, 0.74", "70.5943, 90.7712, -48.2681, 1.03", "71.444, 90.9618, -48.8226, 0.88", "72.6277, 91.2532, -49.4104, 0.29", "73.0514, 91.3416, -49.5582, 0.44", "73.665, 91.4401, -49.6976, 0.29", "74.6674, 91.5329, -49.806, 1.33", "75.0347, 91.5389, -49.8002, 1.69", "76.2604, 91.5157, -49.6425, 0.29", "76.7922, 91.4987, -49.5351, 0.29", "77.1154, 91.4772, -49.4772, 0.66", "77.1638, 91.4721, -49.4713, 0.66", "77.5224, 91.4263, -49.4746, 0.66", "78.1434, 91.3255, -49.5338, 0.22", "78.5196, 91.2288, -49.6079, 0.44", "78.5802, 91.2114, -49.6175, 0.44", "79.0275, 91.0696, -49.6749, 0.44", "79.071, 91.0558, -49.6866, 0.44", "79.6226, 90.8973, -49.8834, 0.29", "80.212, 90.7301, -50.168, 0.29", "80.6397, 90.6108, -50.4129, 0.74", "80.8727, 90.548, -50.5563, 0.96", "82.0772, 90.2491, -51.3827, 0.37", "82.3407, 90.1957, -51.5818, 1.03", "82.9722, 90.1224, -52.1495, 1.03", "83.2449, 90.1135, -52.4423, 0.88" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "29.7297, 56.8037, 9.20397, 0.88", "30.071, 59.1551, 11.8874, 0.88", "30.3806, 60.3192, 13.0435, 0.66", "30.5733, 61.0133, 13.6208, 0.66", "30.5925, 61.0825, 13.6688, 0.66", "30.8256, 61.9414, 14.1409, 0.66", "30.8473, 62.0194, 14.1768, 0.66", "31.168, 63.0578, 14.4293, 0.74", "31.5611, 64.784, 14.7783, 0.44", "31.6939, 65.5795, 14.9444, 0.37", "31.8534, 66.7283, 15.1974, 0.37", "31.9183, 67.2698, 15.3184, 0.59", "32.0766, 68.5564, 15.5985, 0.59", "32.207, 69.4824, 15.7942, 0.59", "32.3093, 69.8899, 15.8739, 0.88", "32.3369, 69.9791, 15.9007, 0.88", "32.5796, 70.8096, 16.2757, 1.18", "32.6183, 70.9711, 16.3665, 1.18", "32.7087, 71.4655, 16.6737, 0.88", "32.8764, 72.5397, 17.3612, 0.44", "33.0967, 73.7766, 18.1505, 0.74", "33.3953, 75.3764, 19.1914, 1.33", "33.6793, 76.8224, 20.123, 0.96", "33.9869, 78.3059, 21.0482, 0.52", "34.1837, 79.2274, 21.5829, 0.44", "34.4293, 80.4642, 22.2696, 0.37", "34.6233, 81.7419, 22.9254, 0.37", "34.698, 82.6087, 23.3557, 0.37", "34.6953, 82.8453, 23.4704, 0.37", "34.5923, 83.6586, 23.8826, 0.59", "34.1312, 85.509, 24.8357, 0.88", "33.6264, 86.9292, 25.556, 0.88", "33.1635, 88.0409, 26.0789, 0.52", "32.8524, 88.7178, 26.3976, 0.52", "32.8256, 88.7804, 26.4247, 0.52", "32.6545, 89.3342, 26.6035, 0.52", "32.6599, 89.4193, 26.6065, 0.52", "32.8556, 89.9558, 26.5598, 0.74", "32.9131, 90.0696, 26.5457, 0.74", "33.3165, 90.7649, 26.48, 0.37", "33.9461, 91.7935, 26.3936, 0.44", "34.5318, 92.6226, 26.2924, 0.44", "35.0393, 93.2872, 26.1888, 0.74", "35.1478, 93.4177, 26.165, 0.74", "35.8413, 94.2361, 25.9715, 0.74", "35.8965, 94.2993, 25.9538, 0.74", "36.7041, 95.2439, 25.659, 0.66", "36.7575, 95.3107, 25.6377, 0.66", "37.209, 95.9066, 25.4738, 0.74", "37.9784, 97.0049, 25.2081, 0.29", "38.3951, 97.7017, 25.0987, 0.44", "38.8274, 98.5445, 25.0265, 0.22", "39.0957, 99.2052, 25.0169, 0.66", "39.2745, 99.718, 25.018, 0.66", "39.2989, 99.8144, 25.0195, 0.66", "39.5555, 101.057, 25.1106, 0.44", "39.5789, 101.142, 25.1161, 0.44", "39.7356, 101.556, 25.14, 0.52", "39.8498, 101.8, 25.14, 0.52", "40.0973, 102.266, 25.1055, 0.52", "40.6521, 103.281, 24.9648, 0.29", "41.1496, 104.253, 24.773, 0.29", "41.1761, 104.32, 24.7586, 0.29", "41.4113, 105.075, 24.5842, 0.44", "41.4671, 105.34, 24.5172, 0.44", "41.5319, 106.189, 24.3284, 0.44", "41.4906, 106.998, 24.1567, 0.59", "41.4179, 107.733, 24.0784, 0.74", "41.4122, 107.83, 24.0762, 0.74", "41.4267, 108.554, 24.1263, 0.74", "41.5072, 109.662, 24.4304, 0.52", "41.5176, 109.741, 24.4631, 0.52", "41.6777, 110.639, 24.8652, 0.44", "41.7556, 111.15, 25.1073, 0.29", "41.8486, 111.978, 25.4673, 0.29", "41.9033, 113.795, 26.2817, 0.29", "41.9015, 114.47, 26.5616, 0.37", "41.8964, 115.399, 26.924, 0.44", "41.8721, 116.752, 27.4138, 0.96", "41.8732, 117.587, 27.7158, 1.25", "41.9963, 119.645, 28.5332, 0.52", "42.1315, 120.479, 28.8628, 0.52", "42.3039, 121.159, 29.1787, 0.66", "42.3338, 121.241, 29.2241, 0.66", "42.7054, 121.982, 29.6416, 0.44", "43.3194, 123.034, 30.2284, 0.29", "43.5217, 123.393, 30.378, 0.52", "43.8033, 124.023, 30.6177, 0.52", "44.121, 124.841, 30.9066, 0.44", "44.3778, 125.464, 31.1132, 0.29", "44.5819, 125.993, 31.3206, 0.52", "45.0523, 127.065, 31.7742, 0.88", "45.2988, 127.576, 32.015, 0.52", "45.8725, 128.629, 32.5695, 0.44", "46.3538, 129.402, 33.0061, 0.59", "47.2246, 130.671, 33.8516, 0.29", "47.8596, 131.525, 34.5053, 0.29", "50.2493, 142.868, 38.0781, 0.29", "53.04, 154.586, 38.9371, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-121.528, -186.5, -3.41369, 0.29", "-121.751, -187.563, -3.21, 0.29", "-121.827, -187.924, -3.14063, 0.74", "-121.969, -188.602, -3.01079, 0.29", "-122.103, -189.239, -2.88876, 0.29", "-122.285, -190.104, -2.72282, 0.37", "-124.254, -198.971, -2.27954, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-121.528, -186.5, -3.41369, 0.37", "-122.589, -186.711, -2.2672, 0.37", "-123.171, -186.822, -1.70901, 0.37", "-124.249, -186.991, -0.680502, 0.44", "-125.01, -187.109, 0.0152434, 0.37", "-126.524, -187.381, 1.34727, 0.88", "-127.052, -187.502, 1.84773, 1.11", "-127.695, -187.671, 2.45497, 0.81", "-129.203, -188.181, 3.99434, 0.29", "-129.691, -188.358, 4.47081, 0.29", "-130.124, -188.516, 4.90625, 0.74", "-131.588, -189.027, 6.27216, 0.44", "-132.042, -189.174, 6.70063, 0.44", "-133.049, -189.429, 7.5834, 0.29", "-134.127, -189.722, 8.61902, 0.29", "-134.829, -189.903, 9.48885, 0.59", "-135.305, -190.009, 10.134, 0.66", "-136.006, -190.14, 11.1028, 0.44", "-136.65, -190.258, 12.078, 0.37", "-138.192, -190.56, 14.6172, 0.66", "-139.667, -190.895, 17.1696, 0.81", "-140.003, -190.961, 17.7214, 0.88", "-140.294, -191.016, 18.2239, 0.88", "-140.343, -191.025, 18.3096, 0.88", "-141.221, -191.157, 19.7303, 0.52", "-141.788, -191.148, 20.3101, 0.52", "-143.736, -191.138, 21.8481, 1.69" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "1.25177, -106.275, -23.7185, 0.74", "1.15747, -107.481, -24.2945, 0.74", "1.17956, -108.461, -24.7487, 0.74", "1.28225, -109.804, -25.3327, 0.88", "1.37525, -110.627, -25.6736, 0.88", "1.52772, -111.977, -26.2324, 0.81", "1.73456, -113.807, -26.9904, 0.88", "1.95416, -114.926, -27.423, 0.88", "2.16249, -115.707, -27.7248, 1.33", "2.42904, -116.531, -28.0145, 1.18" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "1.25177, -106.275, -23.7185, 0.59", "1.32667, -107.086, -23.9278, 0.59", "1.38718, -108.144, -24.3697, 0.52", "1.47727, -109.205, -24.8646, 0.44", "1.56723, -110.12, -25.3098, 0.44", "1.73485, -111.359, -25.8945, 0.59", "1.97259, -112.837, -26.6047, 0.74", "2.1768, -113.943, -27.1832, 0.59", "2.34907, -114.741, -27.6225, 0.59", "2.36602, -114.805, -27.6563, 0.59", "2.7544, -116.035, -28.234, 0.59", "3.25337, -117.352, -28.6887, 0.74", "3.57815, -118.1, -28.8861, 0.74", "4.13856, -119.312, -29.1638, 0.66", "4.67729, -120.424, -29.399, 0.59", "4.75529, -120.562, -29.4186, 0.59", "5.48708, -121.574, -29.4634, 0.59", "5.80743, -121.923, -29.4354, 0.81", "5.86826, -121.984, -29.4275, 0.81", "6.45178, -122.561, -29.3533, 0.81", "7.50997, -123.66, -29.3145, 0.66", "8.25317, -124.529, -29.3441, 0.66", "8.88243, -125.386, -29.3703, 0.66", "9.51884, -126.354, -29.3496, 0.81", "9.97524, -127.128, -29.3133, 0.96", "10.5752, -128.285, -29.2468, 0.52", "10.9969, -129.197, -29.2021, 0.52", "11.5288, -130.396, -29.0845, 0.81", "11.9758, -131.353, -28.9578, 0.81", "12.3942, -132.231, -28.8216, 0.81", "12.4286, -132.309, -28.8088, 0.81", "12.9184, -133.493, -28.6372, 0.81", "12.9716, -133.632, -28.6263, 0.81", "13.4342, -135.032, -28.5839, 0.81", "13.7226, -136.096, -28.5587, 0.81", "13.9528, -137.101, -28.5138, 0.66", "13.9699, -137.185, -28.5052, 0.66", "14.1608, -138.256, -28.3497, 0.37", "14.4, -139.526, -28.145, 0.66", "14.5134, -140.111, -28.039, 0.96", "14.7777, -141.263, -27.7765, 0.74", "15.1242, -142.649, -27.4163, 0.96", "15.3809, -143.71, -27.1503, 0.81", "15.6761, -144.963, -26.8538, 0.74", "15.6883, -145.025, -26.8441, 0.74", "15.9172, -146.339, -26.7486, 0.74", "15.9312, -146.413, -26.7519, 0.74", "16.2272, -147.679, -27.093, 0.44", "16.4029, -148.328, -27.3465, 0.44", "16.7839, -149.639, -27.9793, 1.4", "17.0624, -150.468, -28.4747, 1.18", "17.4516, -151.476, -29.2243, 1.03", "18.2114, -153.105, -30.5769, 0.66", "18.556, -153.705, -31.109, 0.66", "18.6432, -153.839, -31.2286, 0.66", "19.5032, -155.041, -32.2623, 0.81", "20.1422, -155.924, -33.064, 0.96", "20.9891, -157.064, -34.1379, 0.74", "21.6773, -157.918, -34.9215, 0.74", "22.2211, -158.564, -35.5069, 0.96", "22.6416, -159.058, -35.9103, 1.25" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-20.5353, -364.024, -21.1232, 0.29", "-19.4361, -364.02, -20.6117, 0.29", "-18.7698, -364.018, -20.3017, 0.29", "-17.4687, -364.013, -19.6962, 0.22", "-16.8316, -364.011, -19.3997, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-20.5353, -364.024, -21.1232, 0.59", "-20.7086, -365.052, -21.3131, 0.59", "-20.7228, -365.119, -21.3266, 0.59", "-20.9939, -366.174, -21.5446, 0.52", "-21.2828, -367.24, -21.7631, 0.66", "-21.5371, -368.248, -21.9467, 0.66", "-21.7895, -369.292, -22.1241, 0.81", "-21.8475, -369.503, -22.1577, 0.81", "-22.1224, -370.56, -22.2478, 0.81", "-22.1547, -370.701, -22.2479, 0.81", "-22.3541, -371.93, -22.0438, 0.81", "-22.3606, -372.006, -22.0314, 0.81", "-22.3531, -373.121, -21.9941, 0.59", "-22.2949, -374.236, -22.0679, 0.37", "-22.1922, -374.917, -22.2244, 0.74", "-21.8394, -376.267, -22.9026, 0.81", "-21.3255, -377.68, -23.855, 0.52", "-20.5443, -379.37, -25.161, 0.52", "-20.5219, -379.413, -25.1982, 0.52", "-19.7241, -380.642, -26.4991, 0.96", "-18.5428, -382.096, -28.2937, 1.69", "-17.9907, -382.639, -29.056, 0.37", "-17.1216, -383.323, -30.1206, 0.37", "-16.6837, -383.623, -30.6012, 0.66", "-14.5417, -384.994, -32.7963, 1.25", "-12.9881, -385.904, -34.2719, 0.44", "-11.9895, -386.46, -35.1489, 0.81", "-10.0597, -387.523, -36.7934, 0.37", "-9.29008, -387.939, -37.3964, 0.29", "-8.19145, -388.521, -38.1283, 0.29", "-7.68791, -388.812, -38.377, 0.96", "-7.15682, -389.122, -38.5839, 0.96", "-6.03826, -389.835, -38.9462, 0.44", "-5.61884, -390.079, -39.0944, 0.81", "-5.02159, -390.381, -39.336, 1.03", "-4.95381, -390.415, -39.3627, 1.03", "-3.16344, -391.38, -40.0363, 0.37", "-1.96744, -392.07, -40.4762, 1.4", "0.155737, -393.454, -41.436, 0.37", "0.750269, -393.892, -41.7395, 0.66", "1.58886, -394.579, -42.1736, 0.29", "2.26604, -395.192, -42.4779, 0.96", "2.55186, -395.487, -42.5773, 0.96", "4.56199, -397.846, -43.0873, 0.37", "4.80099, -398.184, -43.1142, 0.59", "5.47643, -399.116, -43.198, 0.29", "6.24107, -400.052, -43.3309, 0.96", "6.28622, -400.102, -43.3386, 0.96", "6.65323, -400.534, -43.2874, 1.33", "6.6827, -400.582, -43.2456, 1.33", "6.86816, -400.915, -42.9413, 1.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-54.0275, -61.3102, -2.6969, 0.29", "-53.713, -62.4162, -2.18744, 0.29", "-53.4888, -63.2042, -1.82443, 0.37", "-53.2819, -63.9317, -1.48933, 0.37", "-52.9855, -64.9736, -1.00937, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-54.0275, -61.3102, -2.6969, 0.37", "-55.2413, -61.968, -2.38954, 0.37", "-56.0815, -62.3262, -2.07395, 0.37", "-57.0419, -62.6373, -1.67823, 0.81", "-57.6939, -62.7846, -1.29495, 1.25", "-58.1832, -62.8685, -0.959311, 1.25", "-60.2653, -63.2285, 0.4933, 0.44", "-60.4085, -63.2453, 0.600246, 0.44", "-60.8917, -63.2869, 0.963064, 0.74", "-62.803, -63.4695, 2.33738, 0.52", "-63.8086, -63.6277, 3.00009, 0.59", "-64.5624, -63.8443, 3.35799, 0.44", "-65.1772, -64.1328, 3.48206, 0.29", "-65.8361, -64.5191, 3.52826, 0.29", "-66.6607, -65.132, 3.4684, 1.11", "-67.1722, -65.5971, 3.3529, 1.33", "-68.3721, -66.9451, 3.01312, 0.74", "-68.9589, -67.748, 2.84947, 0.74", "-69.2687, -68.2678, 2.77177, 1.11", "-69.6143, -68.9166, 2.72638, 0.88", "-70.0045, -69.7144, 2.73136, 0.66", "-70.435, -70.6589, 2.79654, 0.37", "-70.6764, -71.2939, 2.89094, 0.37", "-71.0101, -72.2831, 3.04367, 0.37", "-71.3282, -73.3838, 3.21283, 0.37", "-71.5382, -74.2045, 3.33446, 0.29", "-71.701, -74.9903, 3.47301, 0.59", "-71.8443, -75.7877, 3.65605, 0.81", "-71.8514, -75.8528, 3.67172, 0.81", "-71.8862, -76.7389, 3.92109, 0.74", "-71.8742, -77.3013, 4.08362, 1.11", "-71.821, -78.5391, 4.4686, 0.59", "-71.8021, -79.1033, 4.6552, 1.03", "-71.7991, -80.1946, 5.05261, 0.52", "-71.8215, -81.1023, 5.39463, 0.74", "-71.8565, -81.741, 5.63384, 0.66", "-71.944, -82.9003, 6.05722, 0.44", "-72.0781, -83.9231, 6.42121, 0.44", "-72.3165, -84.9817, 6.7968, 0.44", "-72.4644, -85.4027, 6.94472, 0.81", "-72.8025, -86.154, 7.18654, 1.18", "-72.9609, -86.4338, 7.27705, 1.33", "-73.6973, -87.5555, 7.66253, 0.44", "-74.3087, -88.4306, 7.95733, 0.59", "-74.7956, -89.0604, 8.25811, 0.81", "-75.0505, -89.3466, 8.43376, 0.81", "-75.713, -89.9513, 8.93888, 0.37", "-76.4612, -90.5193, 9.49955, 0.74", "-76.7704, -90.711, 9.7265, 0.96", "-78.5035, -91.6701, 11.0386, 0.59", "-79.2605, -92.0418, 11.6076, 0.81", "-80.7754, -92.6958, 12.7339, 0.52", "-81.6995, -93.0246, 13.3946, 0.52", "-82.5154, -93.2658, 13.9237, 0.74", "-88.8265, -100.971, 19.3543, 0.74", "-95.4803, -109.091, 23.615, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-117.444, -82.0942, -131.031, 0.52", "-117.03, -83.605, -131.758, 0.52", "-116.527, -85.3546, -132.562, 0.88", "-116.255, -86.1749, -132.905, 0.88", "-115.739, -87.5403, -133.459, 0.37", "-115.502, -88.1354, -133.683, 0.29", "-115.293, -88.6863, -133.875, 0.88", "-115.25, -88.7993, -133.909, 0.88", "-114.938, -89.6976, -134.073, 0.88", "-114.58, -90.8887, -134.232, 0.29", "-114.375, -91.7148, -134.273, 0.29", "-114.231, -92.4783, -134.294, 0.22", "-114.122, -93.3535, -134.3, 0.22", "-114.101, -93.7771, -134.295, 0.81", "-114.126, -94.5451, -134.269, 1.25", "-114.213, -95.8046, -134.182, 0.37", "-114.314, -96.9821, -134.104, 0.22", "-114.383, -97.7017, -134.056, 0.66", "-114.462, -98.3797, -134.014, 0.81", "-114.653, -99.7408, -133.935, 0.22", "-114.77, -100.403, -133.9, 0.88", "-114.85, -100.77, -133.883, 1.03", "-114.959, -101.323, -133.861, 1.03", "-115.05, -101.905, -133.834, 0.74", "-115.056, -102.0, -133.829, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-117.444, -82.0942, -131.031, 0.22", "-118.57, -82.2809, -132.76, 0.22", "-119.032, -82.3822, -133.398, 0.22", "-119.545, -82.5036, -134.019, 0.81", "-119.83, -82.5753, -134.318, 1.11", "-120.189, -82.6702, -134.644, 1.03", "-121.218, -82.9398, -135.478, 0.22", "-121.417, -82.9992, -135.593, 0.66", "-121.865, -83.1479, -135.842, 0.96", "-122.382, -83.2882, -136.095, 0.29", "-122.971, -83.4034, -136.384, 0.29", "-123.195, -83.4281, -136.487, 0.96", "-123.642, -83.4445, -136.697, 1.18", "-123.683, -83.4435, -136.722, 1.18", "-124.212, -83.4034, -137.078, 0.88", "-124.291, -83.3963, -137.133, 0.88", "-124.623, -83.3797, -137.356, 0.66", "-125.426, -83.4221, -137.914, 0.29", "-125.579, -83.4377, -138.016, 0.29", "-126.216, -83.5312, -138.439, 0.29", "-126.54, -83.5808, -138.712, 0.59", "-126.794, -83.6088, -138.954, 0.59", "-127.536, -83.6695, -139.742, 0.29", "-127.737, -83.6765, -139.963, 1.03", "-128.019, -83.6669, -140.346, 1.33", "-128.807, -83.5437, -141.739, 0.29", "-128.944, -83.5034, -142.004, 0.29", "-128.969, -83.4936, -142.056, 0.29", "-129.177, -83.4257, -142.543, 0.59", "-129.673, -83.3395, -143.73, 0.81", "-130.011, -83.3681, -144.593, 0.52", "-130.185, -83.441, -145.043, 1.11", "-130.497, -83.6547, -145.908, 1.4", "-130.949, -84.0111, -147.214, 0.29", "-131.051, -84.1118, -147.53, 0.88", "-131.482, -84.6474, -148.808, 0.52", "-131.813, -85.1668, -149.824, 0.81", "-131.927, -85.3932, -150.215, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-36.9415, 399.775, -12.5705, 0.37", "-36.4534, 399.742, -12.7934, 0.37", "-35.5136, 399.618, -13.2177, 0.66", "-35.4515, 399.606, -13.2437, 0.66", "-34.9991, 399.517, -13.4318, 0.29", "-34.9263, 399.503, -13.4616, 0.29", "-33.7097, 399.31, -14.0258, 0.29", "-33.6489, 399.303, -14.0549, 0.29", "-33.3603, 399.297, -14.188, 0.66", "-33.0204, 399.3, -14.3583, 0.52", "-32.9591, 399.304, -14.3929, 0.52", "-31.8311, 399.485, -15.0333, 0.22", "-31.2793, 399.697, -15.338, 0.22", "-30.9813, 399.824, -15.5109, 0.29", "-22.0055, 401.861, -18.4984, 0.29", "-13.5209, 405.646, -21.0999, 0.29", "-5.98668, 409.931, -25.3009, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-36.9415, 399.775, -12.5705, 0.29", "-36.607, 401.577, -12.6379, 0.29", "-36.5236, 402.183, -12.6834, 0.29", "-36.5204, 402.264, -12.6876, 0.29", "-36.5396, 403.198, -12.7253, 0.29", "-36.5442, 403.267, -12.7278, 0.29", "-36.7083, 404.529, -12.7257, 0.29", "-36.7288, 404.595, -12.7255, 0.29", "-36.9674, 405.385, -12.6573, 0.52", "-37.0068, 405.543, -12.637, 0.52", "-37.0616, 405.876, -12.5928, 0.52", "-37.1425, 406.681, -12.4975, 0.22", "-37.1661, 407.465, -12.4366, 0.22", "-37.1617, 408.245, -12.3917, 0.44", "-37.1213, 408.841, -12.3803, 0.44", "-37.0448, 409.684, -12.3769, 0.22", "-37.0343, 409.767, -12.3794, 0.22", "-36.8168, 410.927, -12.5165, 0.22", "-37.1876, 422.292, -13.9124, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "19.4368, 150.622, -69.9215, 0.66", "19.3864, 151.422, -69.9955, 0.66", "19.3718, 152.186, -70.0473, 0.29", "19.3727, 152.268, -70.0515, 0.29", "19.3974, 153.065, -70.0831, 0.29", "19.4147, 154.44, -70.1533, 0.29", "19.4023, 155.033, -70.1957, 0.52", "19.3934, 155.228, -70.2123, 0.52", "19.3787, 155.511, -70.2389, 0.52", "19.3422, 156.029, -70.2933, 0.37", "19.2619, 156.742, -70.3858, 0.37", "19.0012, 157.791, -70.6053, 0.88", "18.956, 157.932, -70.6381, 0.88", "18.7613, 158.498, -70.7697, 1.03", "18.578, 159.045, -70.8879, 1.18", "18.3951, 159.647, -71.0014, 0.66", "18.1985, 160.401, -71.118, 0.52", "18.1189, 160.77, -71.1633, 0.59", "18.0661, 161.177, -71.1978, 0.44", "18.0265, 162.293, -71.2451, 0.29", "18.044, 162.726, -71.2511, 0.37", "18.0533, 162.809, -71.2552, 0.37", "18.1118, 163.296, -71.303, 0.22", "18.1657, 164.255, -71.416, 0.59", "18.1673, 164.753, -71.4797, 0.88", "18.127, 165.589, -71.5897, 0.52", "18.0318, 166.638, -71.7293, 0.29", "17.9297, 167.408, -71.831, 0.29", "17.7368, 168.432, -71.9716, 0.59", "17.7145, 168.513, -71.9786, 0.59", "17.5337, 169.065, -71.9925, 0.29", "17.4912, 169.182, -71.9861, 0.29", "17.2387, 170.066, -71.8506, 0.52", "17.1606, 170.477, -71.8017, 0.66", "17.0191, 171.466, -71.7443, 0.52", "17.0081, 171.549, -71.7411, 0.52", "16.9335, 172.141, -71.7367, 0.29", "16.799, 173.563, -71.8482, 0.29", "16.7338, 174.59, -72.0249, 0.66", "16.704, 174.959, -72.0983, 0.88", "16.6967, 175.038, -72.1163, 0.88", "16.5789, 175.774, -72.2828, 0.52", "16.3473, 176.722, -72.5046, 0.52", "16.1155, 177.516, -72.6798, 0.29", "15.8299, 178.565, -72.8664, 0.29", "15.6205, 179.385, -72.9766, 1.03", "15.4111, 180.263, -73.0653, 0.74", "15.185, 181.266, -73.0833, 0.29", "14.891, 182.682, -73.0153, 0.44", "14.7627, 183.42, -72.9504, 0.37", "14.642, 184.294, -72.8563, 0.37", "14.5349, 185.236, -72.7004, 0.96", "14.4459, 186.509, -72.4107, 0.37", "14.4099, 187.359, -72.1719, 0.37", "14.3914, 188.105, -71.9285, 0.59", "14.3976, 188.512, -71.7947, 0.88", "14.4093, 188.757, -71.7189, 0.88", "14.4729, 189.532, -71.4995, 0.59", "14.4806, 189.599, -71.4846, 0.52", "14.7091, 191.278, -71.1211, 0.15", "14.8267, 192.046, -70.9815, 0.59", "14.8397, 192.126, -70.9678, 0.59", "14.9772, 192.723, -70.8594, 0.59", "14.9999, 192.8, -70.8453, 0.59", "15.2122, 193.425, -70.7341, 0.88", "15.5332, 194.309, -70.6028, 1.18", "15.6706, 194.708, -70.5479, 1.18", "16.1195, 196.235, -70.3564, 0.15", "16.3832, 197.376, -70.2401, 0.15", "16.4812, 198.008, -70.1979, 0.52", "16.5445, 198.758, -70.1719, 0.66", "16.547, 199.195, -70.1745, 0.74", "16.4862, 200.079, -70.2148, 0.29", "16.3862, 200.915, -70.2765, 0.37", "16.2679, 201.999, -70.2837, 0.29", "16.2609, 202.091, -70.278, 0.29", "16.2866, 203.324, -70.0859, 0.52", "16.2963, 203.403, -70.0668, 0.52", "16.5405, 204.455, -69.724, 0.81", "16.8776, 205.531, -69.2943, 0.37", "16.9028, 205.602, -69.2615, 0.37", "17.2412, 206.695, -68.806, 0.29", "17.3754, 207.205, -68.6171, 0.37", "17.3893, 207.271, -68.5979, 0.37", "17.5215, 207.998, -68.4484, 0.37", "17.6898, 209.165, -68.181, 0.29", "17.8626, 210.454, -67.7995, 0.37", "17.9208, 210.932, -67.6437, 0.88", "18.0062, 211.462, -67.4539, 0.96", "18.2833, 212.701, -66.8994, 0.52", "18.7298, 214.196, -66.105, 0.66", "18.9293, 214.744, -65.7605, 0.66", "19.2254, 215.424, -65.2642, 0.29", "19.5794, 216.181, -64.6714, 0.44", "19.9945, 217.049, -63.9612, 1.11", "20.3212, 217.743, -63.3895, 1.11", "20.8338, 218.831, -62.5465, 1.11", "21.0376, 219.299, -62.1571, 1.55", "21.3659, 220.055, -61.4573, 1.55", "21.4068, 220.146, -61.359, 1.55", "21.6329, 220.665, -60.7034, 1.55", "21.6508, 220.704, -60.6473, 1.55", "21.9335, 221.267, -59.7315, 2.06", "21.9529, 221.307, -59.6612, 2.06", "22.4756, 222.339, -57.6914, 0.52", "22.7947, 222.927, -56.5061, 0.74" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "19.4368, 150.622, -69.9215, 0.74", "19.7342, 149.323, -69.429, 0.74", "19.7477, 149.251, -69.4053, 0.74", "19.8968, 148.349, -69.1345, 0.37", "20.0776, 147.038, -68.7758, 0.22", "20.1409, 146.405, -68.6241, 0.37", "20.2072, 145.622, -68.4571, 0.15", "20.2713, 144.41, -68.2593, 0.15", "20.2964, 143.871, -68.1731, 0.44", "20.3116, 143.282, -68.0853, 0.44", "20.3035, 142.137, -67.9456, 0.22", "20.2881, 140.807, -67.8353, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "83.2449, 90.1135, -52.4423, 0.22", "84.1508, 90.594, -54.1249, 0.22", "84.4709, 90.7639, -54.7196, 0.74", "84.6409, 90.8541, -55.0353, 0.74", "85.9764, 91.5626, -57.5161, 0.29", "86.3044, 91.7366, -58.1253, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "83.2449, 90.1135, -52.4423, 0.22", "84.4666, 89.5628, -52.8283, 0.22", "85.3483, 89.2262, -53.1759, 0.66", "85.932, 89.0243, -53.4175, 0.66", "86.6177, 88.8273, -53.6984, 0.52", "87.9772, 88.5905, -54.2896, 0.22", "88.6302, 88.5624, -54.5744, 0.22", "89.5648, 88.7404, -54.9613, 0.59", "90.0296, 88.8936, -55.1336, 0.74", "90.6867, 89.1525, -55.3306, 0.74", "91.9991, 89.7454, -55.6222, 0.29", "93.0995, 90.3114, -55.7733, 0.29", "94.4464, 91.0377, -55.9159, 0.59", "95.065, 91.3832, -55.9496, 0.52", "96.2822, 92.0618, -55.9921, 0.22", "96.9555, 92.4023, -55.9874, 0.29", "97.8877, 92.7713, -55.9028, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "53.04, 154.586, 38.9371, 0.29", "54.6564, 161.745, 40.8464, 0.29", "56.4035, 169.084, 41.2244, 0.29", "57.8573, 176.481, 41.7282, 0.29", "58.1515, 184.013, 42.3318, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "53.04, 154.586, 38.9371, 0.44", "55.403, 163.211, 42.1193, 0.29", "58.105, 171.802, 45.1112, 0.29", "62.2005, 180.174, 46.8484, 0.29", "65.2226, 189.114, 46.7744, 0.29", "69.4469, 197.395, 45.1109, 0.29", "73.137, 205.973, 43.7524, 0.29", "75.6526, 214.977, 42.5682, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-124.254, -198.971, -2.27954, 0.29", "-124.762, -208.883, -1.52204, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-124.254, -198.971, -2.27954, 0.44", "-132.111, -207.756, -4.26161, 0.29", "-139.074, -216.259, -8.9295, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-143.736, -191.138, 21.8481, 0.66", "-143.868, -190.022, 22.9544, 0.66", "-143.882, -189.323, 23.5429, 0.29", "-143.874, -188.516, 24.1191, 0.29", "-143.876, -188.448, 24.1587, 0.29", "-143.928, -187.143, 24.8294, 0.52", "-143.943, -186.885, 24.9491, 0.74", "-143.989, -185.852, 25.2935, 0.37", "-144.031, -184.957, 25.5533, 0.37", "-144.104, -184.068, 25.7762, 0.29", "-144.141, -183.52, 25.8862, 0.59", "-144.168, -182.907, 25.9672, 0.59", "-144.14, -182.198, 26.0535, 0.59", "-144.0, -181.259, 26.1578, 0.52", "-143.814, -180.568, 26.2297, 0.96", "-143.514, -179.75, 26.3171, 0.37", "-143.292, -179.243, 26.3617, 0.29", "-142.815, -178.29, 26.4301, 0.29", "-142.415, -177.517, 26.4826, 0.29", "-142.157, -177.012, 26.5176, 0.52", "-142.129, -176.942, 26.5229, 0.52", "-141.998, -176.52, 26.5589, 0.52", "-141.817, -175.689, 26.6455, 0.37", "-141.655, -174.734, 26.7532, 0.37", "-141.646, -174.657, 26.7628, 0.37", "-141.503, -173.122, 26.9689, 0.37", "-141.423, -171.745, 27.1701, 0.37", "-141.376, -170.032, 27.4366, 0.37", "-141.374, -169.891, 27.4596, 0.37", "-141.32, -168.561, 27.6559, 0.37", "-141.316, -168.494, 27.6652, 0.37", "-141.231, -167.642, 27.7753, 0.88", "-141.208, -167.47, 27.7939, 0.88", "-140.988, -166.407, 27.8779, 0.29", "-140.638, -165.075, 27.9644, 0.29", "-140.363, -164.228, 28.0056, 0.44", "-140.148, -163.6, 28.0362, 0.44", "-139.893, -162.857, 28.0523, 0.29", "-139.862, -162.761, 28.0534, 0.29", "-139.475, -161.695, 28.0381, 0.66", "-139.362, -161.436, 28.0428, 0.66", "-139.147, -160.989, 28.0588, 0.59", "-138.601, -159.867, 28.1333, 0.37", "-138.566, -159.798, 28.1432, 0.37", "-137.771, -158.243, 28.4762, 0.37", "-137.327, -157.353, 28.7497, 0.37", "-137.015, -156.756, 28.9635, 0.37", "-136.887, -156.53, 29.0658, 0.88", "-136.475, -155.854, 29.4973, 0.74", "-136.445, -155.795, 29.5401, 0.74", "-136.397, -155.363, 30.0062, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-143.736, -191.138, 21.8481, 0.52", "-144.309, -191.622, 21.8025, 0.52", "-144.861, -192.035, 21.7536, 0.29", "-145.399, -192.412, 21.7038, 0.29", "-146.242, -192.969, 21.6269, 0.44", "-146.952, -193.434, 21.564, 0.37", "-147.264, -193.638, 21.5369, 0.66", "-147.548, -193.799, 21.5112, 0.88", "-147.91, -193.978, 21.449, 0.88", "-148.442, -194.22, 21.3173, 0.44", "-149.086, -194.519, 21.1137, 0.44", "-149.132, -194.54, 21.0972, 0.44", "-149.683, -194.788, 20.88, 0.44", "-150.584, -195.174, 20.5108, 0.29", "-151.148, -195.396, 20.2771, 0.29", "-151.867, -195.628, 20.0297, 0.29", "-151.924, -195.643, 20.0149, 0.74", "-151.973, -195.654, 20.006, 0.74", "-152.489, -195.79, 19.92, 0.74", "-152.943, -195.942, 19.8611, 0.74", "-153.87, -196.315, 19.706, 0.29", "-154.357, -196.561, 19.5828, 0.29", "-155.015, -196.946, 19.3697, 0.29", "-155.844, -197.502, 19.0424, 0.29", "-156.232, -197.785, 18.8927, 0.59", "-156.418, -197.92, 18.8223, 0.59", "-156.978, -198.297, 18.617, 0.37", "-157.081, -198.339, 18.6094, 0.37", "-157.654, -198.422, 18.7197, 0.37", "-158.603, -198.451, 18.9822, 0.29", "-159.2, -198.451, 19.2398, 0.29", "-159.664, -198.446, 19.4916, 0.59", "-160.587, -198.465, 20.1001, 0.59", "-161.095, -198.498, 20.4775, 0.59", "-161.481, -198.559, 20.8269, 0.59", "-162.526, -198.878, 21.8809, 0.44", "-162.554, -198.891, 21.9111, 0.44", "-162.97, -199.127, 22.3586, 0.44", "-162.998, -199.145, 22.3866, 0.44", "-163.597, -199.506, 22.9181, 0.59", "-163.999, -199.726, 23.2003, 0.59", "-164.587, -200.006, 23.4602, 0.29", "-164.631, -200.024, 23.4779, 0.29", "-165.664, -200.389, 23.7932, 0.44", "-166.118, -200.549, 23.882, 0.96", "-166.572, -200.705, 23.9232, 1.33", "-167.162, -200.915, 23.9544, 0.88", "-168.125, -201.298, 23.9592, 0.44", "-168.876, -201.623, 23.9179, 0.44", "-169.683, -201.993, 23.8118, 0.52", "-170.265, -202.237, 23.7232, 0.52", "-170.314, -202.256, 23.7147, 0.52", "-171.067, -202.494, 23.5598, 0.37", "-171.619, -202.635, 23.4264, 0.37", "-172.206, -202.733, 23.3158, 0.37", "-173.031, -202.791, 23.2138, 0.52", "-173.297, -202.795, 23.1847, 0.96", "-173.591, -202.789, 23.1448, 0.96", "-173.978, -202.767, 23.0806, 0.96", "-174.493, -202.752, 22.9841, 0.81", "-175.366, -202.794, 22.8069, 0.37", "-175.408, -202.801, 22.7979, 0.37", "-176.129, -202.949, 22.6385, 0.37", "-176.546, -203.056, 22.5441, 0.59", "-176.852, -203.14, 22.4729, 0.66", "-177.328, -203.27, 22.359, 0.52", "-177.922, -203.412, 22.1784, 0.29", "-177.978, -203.422, 22.1611, 0.29", "-178.536, -203.49, 21.9967, 0.29", "-179.095, -203.557, 21.8586, 0.44", "-179.472, -203.61, 21.7782, 0.44", "-180.238, -203.733, 21.6388, 0.44", "-181.009, -203.886, 21.5227, 0.37", "-181.367, -203.962, 21.498, 0.37", "-182.416, -204.167, 21.5673, 0.37", "-182.903, -204.252, 21.6646, 0.37", "-183.404, -204.322, 21.8269, 0.37", "-183.849, -204.354, 22.0254, 0.37", "-184.582, -204.343, 22.4113, 0.37", "-185.388, -204.265, 22.8622, 0.37", "-185.648, -204.228, 23.0197, 0.81", "-185.842, -204.219, 23.1349, 1.11", "-186.238, -204.252, 23.3603, 1.11", "-186.277, -204.26, 23.378, 1.11", "-186.891, -204.457, 23.6009, 0.59", "-187.812, -204.81, 23.9187, 0.44", "-188.422, -205.036, 24.1511, 0.66", "-188.462, -205.05, 24.1663, 0.66", "-188.888, -205.192, 24.3047, 0.66", "-189.58, -205.385, 24.4809, 0.44", "-189.662, -205.406, 24.5024, 0.44", "-190.332, -205.584, 24.6653, 0.37", "-191.033, -205.79, 24.8451, 0.37", "-191.682, -206.005, 25.0079, 0.88", "-192.127, -206.169, 25.1135, 1.18", "-193.441, -206.652, 25.4076, 0.37", "-194.034, -206.856, 25.5456, 0.29", "-194.412, -206.977, 25.637, 0.81", "-194.468, -206.991, 25.6527, 0.81", "-194.71, -207.052, 25.7347, 0.81", "-195.713, -207.288, 26.0864, 0.37", "-196.092, -207.365, 26.2144, 0.74", "-196.5, -207.454, 26.3633, 0.74", "-197.243, -207.616, 26.6293, 0.81", "-198.248, -207.853, 26.9869, 0.29", "-198.59, -207.941, 27.1094, 0.29", "-198.63, -207.954, 27.1225, 0.29", "-199.082, -208.108, 27.2564, 0.74", "-199.434, -208.224, 27.357, 0.81", "-200.319, -208.463, 27.5812, 0.37", "-200.369, -208.473, 27.5932, 0.37", "-200.908, -208.577, 27.7356, 0.29", "-201.335, -208.655, 27.8555, 0.29", "-201.987, -208.76, 28.0696, 0.52", "-202.543, -208.852, 28.2743, 0.88", "-202.747, -208.872, 28.3519, 1.03" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "2.42904, -116.531, -28.0145, 0.96", "2.41633, -118.407, -27.4749, 0.96", "2.44445, -119.567, -27.1404, 0.96", "2.50162, -120.571, -26.8626, 1.03", "2.56174, -121.169, -26.7103, 1.25", "2.65485, -121.925, -26.527, 1.11", "2.82484, -123.017, -26.2456, 0.74", "3.0246, -123.893, -26.07, 0.96", "3.21432, -124.522, -25.9324, 0.74", "3.55964, -125.483, -25.734, 0.59", "3.57971, -125.533, -25.7268, 0.59", "4.04695, -126.678, -25.6369, 0.59", "4.4315, -127.692, -25.682, 0.59", "4.44627, -127.737, -25.6895, 0.59", "4.68036, -128.672, -25.8581, 0.88", "4.85091, -129.595, -26.0382, 0.88", "4.93231, -130.154, -26.154, 0.88", "5.02375, -131.061, -26.3271, 0.66", "5.10097, -132.006, -26.4053, 0.52", "5.18366, -132.938, -26.3853, 1.11", "5.22315, -133.378, -26.3272, 1.11", "5.28966, -134.067, -26.1924, 0.88", "5.40574, -134.984, -25.9978, 0.81", "5.53162, -135.812, -25.8335, 0.88", "5.65222, -136.424, -25.7739, 1.03", "5.87114, -137.372, -25.7806, 0.74", "6.05236, -138.076, -25.8271, 0.59", "6.29476, -138.888, -25.9264, 0.52", "6.50561, -139.513, -26.0578, 0.74", "6.9124, -140.607, -26.3524, 0.66", "7.20895, -141.37, -26.5756, 0.74", "7.47052, -142.032, -26.7604, 0.81", "7.70315, -142.655, -26.8937, 1.11", "7.94209, -143.335, -26.9927, 0.88", "7.95869, -143.386, -27.0019, 0.88", "8.19563, -144.16, -27.2252, 0.59", "8.42525, -144.942, -27.5392, 0.59", "8.6512, -145.736, -27.909, 0.81", "8.9286, -146.706, -28.384, 1.03", "9.48374, -148.455, -29.2988, 1.03", "9.92963, -149.728, -29.9841, 0.81", "10.3397, -150.769, -30.5731, 0.59", "10.3586, -150.815, -30.5993, 0.59", "10.6693, -151.578, -31.0063, 0.74", "11.0267, -152.454, -31.3767, 0.66", "11.3949, -153.338, -31.6132, 0.66", "11.7594, -154.229, -31.8023, 0.66", "12.0477, -155.009, -31.9538, 0.96", "12.2283, -155.656, -32.0771, 1.18", "12.3543, -156.467, -32.2477, 1.03", "12.3553, -157.181, -32.4196, 0.88", "12.249, -158.013, -32.6647, 0.66", "12.1339, -158.53, -32.829, 0.74", "11.8719, -159.528, -33.1624, 0.74", "11.6563, -160.299, -33.4078, 0.81", "11.3624, -161.357, -33.7099, 0.81", "11.1504, -162.295, -33.9329, 1.03", "11.0574, -162.958, -34.0511, 1.11", "11.0346, -163.678, -34.1536, 0.81", "11.1138, -164.808, -34.266, 0.66", "11.2585, -165.699, -34.3007, 0.81", "11.4309, -166.329, -34.3027, 0.81", "11.6697, -166.965, -34.3026, 0.81", "11.8675, -167.383, -34.3043, 1.03", "11.8954, -167.431, -34.3048, 1.03", "12.3204, -168.026, -34.3156, 0.74", "12.8403, -168.667, -34.3801, 0.44", "13.0198, -168.879, -34.4173, 0.74", "13.0558, -168.921, -34.4295, 0.74", "13.3351, -169.266, -34.5472, 0.74", "13.3712, -169.314, -34.5637, 0.74", "14.0421, -170.303, -34.8495, 0.59", "14.2301, -170.611, -34.9244, 0.88", "14.5985, -171.299, -35.0647, 0.88", "15.0192, -172.208, -35.2103, 0.66", "15.27, -172.857, -35.2866, 0.74", "15.5453, -173.719, -35.3873, 0.88", "15.6876, -174.329, -35.4859, 0.44", "15.7836, -174.881, -35.6331, 0.44", "15.8544, -175.515, -35.8525, 0.52", "15.8949, -176.028, -36.0942, 0.81", "15.9662, -176.927, -36.5872, 1.03", "16.0812, -177.931, -37.1851, 0.88", "16.2457, -178.874, -37.745, 0.59", "16.3691, -179.386, -38.0428, 0.74", "16.6706, -180.302, -38.5092, 0.52", "16.8839, -180.803, -38.7036, 0.52", "17.2363, -181.466, -38.836, 0.81", "17.5478, -181.952, -38.8582, 1.03", "17.7762, -182.261, -38.8408, 1.03", "18.4442, -183.098, -38.7521, 0.52", "18.7018, -183.425, -38.7138, 0.66", "19.1123, -183.978, -38.6751, 0.66", "19.1479, -184.031, -38.6739, 0.66", "19.4707, -184.542, -38.6836, 0.81", "19.8689, -185.217, -38.7258, 0.59", "20.341, -186.064, -38.8202, 0.37", "20.5922, -186.508, -38.8711, 0.88", "20.9186, -187.031, -38.9477, 1.18", "20.9503, -187.074, -38.9549, 1.18", "21.2718, -187.465, -39.0842, 1.11", "21.6295, -187.866, -39.3058, 0.96", "21.6633, -187.903, -39.3315, 0.96", "22.276, -188.616, -39.8784, 0.59", "22.6229, -189.064, -40.2206, 0.81", "23.3898, -190.228, -41.0324, 0.59", "23.7041, -190.814, -41.3941, 0.88", "23.8736, -191.234, -41.6137, 0.88", "24.0173, -191.715, -41.8145, 0.81", "24.1392, -192.39, -42.0134, 0.59", "24.2197, -193.107, -42.145, 0.66", "24.2855, -193.945, -42.2049, 1.03", "24.3319, -194.473, -42.2339, 1.33", "24.3733, -194.922, -42.2683, 1.18", "24.4329, -195.527, -42.3526, 0.81", "24.5416, -196.296, -42.5625, 0.59", "24.7183, -197.018, -42.8342, 0.74", "24.8752, -197.456, -43.0054, 0.96", "24.8934, -197.496, -43.0201, 0.96", "25.3106, -198.28, -43.2797, 0.96", "26.0641, -199.512, -43.6541, 0.74", "26.6763, -200.389, -43.9008, 0.74", "27.2638, -201.169, -44.0936, 0.88", "27.7807, -201.869, -44.1653, 0.88", "28.2978, -202.599, -44.1317, 0.59", "28.6312, -203.145, -43.9676, 0.59", "28.8534, -203.649, -43.6958, 0.59", "28.8629, -203.687, -43.6716, 0.59", "28.9846, -205.31, -42.6274, 0.52", "28.928, -206.012, -42.1783, 0.52", "28.6552, -207.377, -41.452, 1.18", "28.4357, -208.194, -41.1158, 1.18", "28.2355, -208.912, -40.9513, 0.52", "27.9978, -209.974, -40.9753, 0.52", "27.8705, -210.815, -41.1954, 0.66", "27.7661, -212.167, -41.7313, 0.66", "27.7819, -212.928, -42.1528, 0.66", "27.9266, -214.24, -42.9713, 0.66", "28.2323, -215.614, -43.8994, 0.74", "28.3995, -216.094, -44.2399, 1.03", "28.5979, -216.527, -44.5493, 1.03", "29.0711, -217.386, -45.1346, 0.66", "29.4281, -217.975, -45.5369, 0.37", "29.7717, -218.514, -45.8505, 0.74", "30.0759, -218.987, -46.0818, 1.03", "30.1044, -219.028, -46.102, 1.03", "30.2516, -219.203, -46.1753, 1.25", "30.2989, -219.245, -46.1818, 1.25", "30.6238, -219.507, -46.1907, 1.25", "30.6645, -219.544, -46.1889, 1.25", "30.9737, -219.86, -46.1673, 1.25", "31.2591, -220.206, -46.1428, 1.25", "31.9057, -221.121, -46.0385, 0.59", "32.3961, -221.842, -45.9386, 0.59", "32.924, -222.652, -45.8115, 0.66", "33.3332, -223.269, -45.7048, 0.66", "33.8689, -224.043, -45.5566, 0.59", "34.3211, -224.665, -45.4239, 0.44", "34.7667, -225.176, -45.2935, 0.29", "34.8047, -225.206, -45.2838, 0.29", "35.4496, -225.485, -45.1319, 0.59", "36.0743, -225.693, -45.0003, 0.74", "36.1271, -225.71, -44.9865, 0.74", "36.8997, -225.971, -44.7668, 0.74", "36.9474, -225.99, -44.7479, 0.74", "38.066, -226.46, -44.1692, 0.59", "38.6203, -226.703, -43.8293, 0.81", "39.4834, -227.128, -43.2294, 0.66", "39.5309, -227.152, -43.1956, 0.66", "40.3815, -227.557, -42.5471, 1.03", "41.0095, -227.814, -42.0123, 1.47", "41.3157, -227.933, -41.6892, 1.55", "41.9486, -228.181, -40.9328, 0.29", "42.3898, -228.363, -40.367, 0.59", "43.0315, -228.643, -39.5313, 0.81", "43.7866, -228.99, -38.5154, 1.18", "44.7418, -229.47, -37.2185, 0.44", "45.3765, -229.808, -36.3405, 0.59", "45.4086, -229.826, -36.2972, 0.59", "45.7859, -230.094, -35.8259, 0.81", "45.8138, -230.119, -35.7977, 0.81", "46.2487, -230.532, -35.4696, 0.37", "46.7487, -230.996, -35.1829, 0.88", "47.1166, -231.372, -34.9835, 1.33", "47.4708, -231.783, -34.7902, 1.47", "48.1942, -232.7, -34.4486, 0.88", "48.2274, -232.744, -34.4359, 0.88", "48.539, -233.155, -34.3503, 1.03", "49.0472, -233.836, -34.2924, 0.44", "49.5684, -234.54, -34.2927, 0.44", "50.0124, -235.156, -34.3523, 0.66", "50.0443, -235.2, -34.3609, 0.66", "50.3522, -235.599, -34.4311, 0.44", "50.7017, -236.031, -34.4995, 0.81", "50.9277, -236.285, -34.5288, 0.96", "51.2752, -236.665, -34.55, 1.11", "51.7114, -237.162, -34.5378, 0.29", "52.0685, -237.584, -34.5279, 0.22", "52.1036, -237.628, -34.5269, 0.22", "52.5489, -238.156, -34.5147, 1.47", "52.586, -238.196, -34.5136, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "2.42904, -116.531, -28.0145, 0.44", "2.72601, -117.34, -28.675, 0.44", "3.05291, -118.147, -29.3241, 0.59", "3.98081, -120.26, -30.9549, 0.59", "4.43025, -121.24, -31.6735, 0.81", "5.0253, -122.483, -32.5525, 0.81", "5.59088, -123.647, -33.3432, 0.88", "5.91802, -124.317, -33.7673, 1.03", "6.43999, -125.311, -34.3433, 0.52", "6.68907, -125.763, -34.5456, 0.88", "7.08684, -126.482, -34.8543, 0.88", "7.27327, -126.88, -35.017, 0.88", "7.28594, -126.931, -35.0421, 0.88", "7.29504, -127.611, -35.5499, 0.44", "7.25521, -128.069, -35.9936, 0.74", "7.25051, -128.602, -36.5406, 0.74", "7.32278, -129.273, -37.2384, 0.96", "7.55808, -130.203, -38.1962, 0.96", "7.92834, -131.158, -39.1045, 0.96", "8.3881, -132.105, -39.9604, 0.96", "8.98707, -133.198, -40.8314, 0.88", "9.60662, -134.253, -41.5587, 0.88", "10.1585, -135.199, -42.1118, 0.59", "10.7091, -136.163, -42.612, 0.59", "11.1037, -136.914, -42.9754, 0.96", "11.4507, -137.679, -43.3313, 1.25", "11.7268, -138.426, -43.6802, 1.33", "12.0697, -139.512, -44.1606, 0.96", "12.3156, -140.345, -44.5176, 0.81", "12.6055, -141.256, -44.9122, 0.88", "12.7948, -141.685, -45.0614, 1.11", "12.8178, -141.722, -45.0736, 1.11", "13.2724, -142.259, -45.2092, 1.11", "13.6731, -142.639, -45.241, 1.25", "13.7693, -142.717, -45.2468, 1.25", "14.4729, -143.242, -45.355, 1.33", "15.219, -143.803, -45.5853, 1.03", "15.6504, -144.154, -45.802, 0.59", "15.9785, -144.443, -46.0427, 0.81", "16.7529, -145.231, -46.8704, 0.81", "17.2468, -145.845, -47.6264, 1.11", "17.6408, -146.492, -48.4975, 0.88", "18.0046, -147.265, -49.5372, 0.59", "18.201, -147.722, -50.1535, 0.81", "18.5442, -148.504, -51.2194, 0.96", "18.8447, -149.167, -52.0632, 0.81", "19.2693, -150.066, -53.0679, 0.37", "19.7031, -150.902, -53.8667, 1.03", "20.3767, -152.105, -54.7987, 0.96", "21.1148, -153.328, -55.579, 1.18", "21.7036, -154.228, -56.071, 1.18", "22.3553, -155.168, -56.5323, 1.18", "22.9935, -156.057, -56.9349, 0.81", "23.6997, -157.042, -57.33, 0.66", "24.0827, -157.593, -57.5165, 0.96", "24.82, -158.654, -57.8218, 1.25", "24.8532, -158.7, -57.8359, 1.25", "25.4836, -159.519, -58.0542, 1.11", "25.9393, -160.159, -58.1707, 0.81", "26.2116, -160.591, -58.2229, 1.25", "26.4936, -161.136, -58.2437, 1.25", "26.6963, -161.692, -58.2227, 0.66", "26.8401, -162.265, -58.2566, 0.59", "26.8974, -162.99, -58.3799, 0.59", "26.8833, -163.338, -58.4887, 0.88", "26.8784, -163.391, -58.5097, 0.88", "26.8337, -164.054, -58.821, 0.88", "26.8741, -165.246, -59.3925, 0.59", "26.979, -165.775, -59.6444, 0.44", "27.0093, -165.87, -59.6841, 0.44", "27.1993, -166.357, -59.8627, 0.74", "27.5136, -167.12, -60.0984, 0.96", "27.7972, -167.76, -60.2958, 0.96", "28.2085, -168.734, -60.5528, 0.59", "28.4097, -169.248, -60.6995, 0.88", "28.4278, -169.299, -60.7149, 0.88", "28.6027, -169.849, -60.8727, 0.96", "28.9591, -171.119, -61.2622, 0.59", "29.1584, -171.84, -61.4949, 1.03", "29.3269, -172.402, -61.6627, 1.18", "29.6393, -173.338, -61.9364, 0.88", "29.9039, -174.14, -62.1613, 0.74", "30.1766, -175.006, -62.3915, 0.66", "30.469, -176.107, -62.6552, 0.52", "30.6108, -176.78, -62.8315, 0.81", "30.7058, -177.478, -63.0404, 0.37", "30.7133, -178.066, -63.2512, 0.37", "30.6782, -178.483, -63.4212, 0.88", "30.6084, -178.875, -63.6017, 1.18", "30.4764, -179.334, -63.8484, 1.33", "30.2535, -180.119, -64.3063, 0.88", "30.0616, -180.982, -64.8337, 0.74", "30.0521, -181.03, -64.8643, 0.74", "29.8557, -182.178, -65.6024, 0.52", "29.7438, -182.907, -66.0795, 0.66", "29.5621, -184.229, -66.9431, 0.59", "29.4837, -184.983, -67.3998, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "22.6416, -159.058, -35.9103, 0.37", "23.7506, -159.184, -35.9494, 0.37", "24.9704, -159.399, -35.9961, 0.59", "25.7093, -159.538, -36.0411, 0.59", "27.0223, -159.765, -36.1549, 0.59", "27.1974, -159.794, -36.1728, 0.59", "28.1246, -159.937, -36.3089, 0.22", "28.5724, -159.978, -36.4542, 0.44", "29.2329, -159.991, -36.8351, 0.44", "29.6979, -159.981, -37.2078, 0.81", "29.7711, -159.972, -37.2786, 0.81", "30.2536, -159.821, -37.8417, 0.96", "31.2153, -159.359, -39.2515, 0.52", "31.5191, -159.19, -39.734, 0.52", "31.5602, -159.166, -39.8012, 0.52", "32.0675, -158.859, -40.6357, 0.44", "33.0165, -158.267, -42.1291, 0.74", "33.8871, -157.694, -43.542, 0.29", "34.2661, -157.428, -44.1432, 0.29", "34.5263, -157.262, -44.5527, 0.59", "34.5635, -157.243, -44.6109, 0.59", "34.8345, -157.155, -45.0749, 1.18", "35.7356, -157.01, -46.4915, 1.11", "36.2331, -156.989, -47.2927, 0.37", "36.9275, -157.006, -48.4214, 0.29", "37.7533, -157.058, -49.6982, 1.11", "38.8903, -157.137, -51.3413, 0.66", "39.6367, -157.204, -52.3593, 0.44", "40.6083, -157.298, -53.6591, 1.18", "40.9703, -157.332, -54.1666, 1.62", "41.5081, -157.35, -54.9144, 1.18", "42.1541, -157.324, -55.7437, 0.74", "42.2008, -157.319, -55.7988, 0.74", "43.3417, -157.156, -57.3744, 0.59", "43.3822, -157.147, -57.4336, 0.59" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "22.6416, -159.058, -35.9103, 0.59", "22.845, -161.367, -35.283, 0.59", "23.0382, -162.532, -34.6233, 0.66", "23.1849, -163.114, -34.1443, 1.03", "23.2345, -163.334, -33.9444, 1.03", "23.3086, -163.762, -33.4216, 1.03", "23.4716, -164.886, -31.8613, 0.74", "23.6273, -166.495, -29.1289, 1.03", "23.8134, -167.434, -27.0749, 1.11", "23.9042, -167.83, -26.1833, 0.74", "24.2188, -169.568, -22.4026, 0.74", "24.2284, -169.634, -22.2598, 0.74", "24.3129, -170.381, -20.7593, 0.66", "24.6945, -173.74, -15.2623, 0.66", "24.8335, -174.757, -13.9284, 0.52", "25.0694, -176.059, -12.5957, 0.74", "25.0846, -176.133, -12.5436, 0.74", "25.3115, -177.195, -11.9674, 0.88", "25.9171, -179.908, -10.9521, 0.52", "26.1689, -181.218, -10.7251, 0.52", "26.4706, -182.587, -10.4894, 0.52", "26.7926, -183.908, -10.298, 0.44", "27.0169, -184.934, -10.1734, 0.37", "27.3921, -186.737, -9.95145, 0.37", "27.7034, -188.171, -9.81856, 0.59", "27.9089, -189.014, -9.71134, 0.88", "27.9347, -189.102, -9.69238, 0.88", "28.186, -189.831, -9.48513, 0.96", "28.9445, -191.786, -8.62202, 0.44", "29.3972, -192.824, -8.0565, 0.59", "29.4282, -192.887, -8.01322, 0.59", "30.2296, -194.401, -6.96682, 0.81", "30.4941, -194.927, -6.60792, 0.96", "31.5597, -197.176, -5.13264, 0.52", "31.7809, -197.71, -4.81083, 0.74", "32.439, -199.55, -3.80267, 0.52", "32.8221, -200.746, -3.29757, 0.74", "33.1303, -201.84, -2.92914, 0.44", "33.3643, -202.796, -2.57984, 0.29", "33.497, -203.402, -2.32059, 0.37", "33.6927, -204.296, -1.75118, 0.59", "33.9674, -205.365, -0.920524, 0.59", "34.5426, -207.072, 0.579002, 0.81", "35.3678, -208.828, 2.26383, 0.44", "36.3855, -210.44, 3.9641, 0.88", "37.7563, -212.121, 5.89714, 0.74", "38.4462, -212.71, 6.64721, 0.29", "39.6768, -213.396, 7.60317, 0.37", "41.1085, -213.599, 7.86432, 0.37", "42.2791, -213.483, 7.68814, 0.66", "42.3696, -213.465, 7.66163, 0.66", "43.7528, -213.08, 7.08012, 0.29", "43.8498, -213.051, 7.04058, 0.29", "45.3923, -212.52, 6.50843, 0.15", "46.8269, -211.943, 5.92357, 0.15", "51.716, -221.183, 13.6954, 0.15", "55.4131, -230.649, 21.8354, 0.15", "60.5123, -240.932, 27.9056, 0.15", "68.1991, -248.881, 34.866, 0.15" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "6.86816, -400.915, -42.9413, 1.18", "7.13527, -401.956, -42.3701, 1.18", "7.41196, -402.997, -41.7525, 0.96", "7.54096, -403.434, -41.4885, 1.47", "7.70917, -403.957, -41.1782, 1.84", "7.92473, -404.593, -40.8036, 1.33", "8.2388, -405.473, -40.3072, 0.74", "8.25955, -405.522, -40.2829, 0.74", "8.54703, -406.161, -39.9765, 0.81", "8.79733, -406.677, -39.7461, 0.44", "8.824, -406.726, -39.7292, 0.44", "9.28081, -407.564, -39.5369, 0.29", "9.72624, -408.319, -39.4274, 0.44", "10.0085, -408.79, -39.3703, 0.81", "10.2854, -409.234, -39.2949, 0.81", "10.8544, -410.076, -39.071, 0.37", "10.8901, -410.128, -39.0499, 0.37", "11.2642, -410.69, -38.761, 0.81", "11.6136, -411.272, -38.4291, 1.11", "12.0368, -412.11, -37.9461, 1.11", "12.4795, -413.22, -37.335, 0.29", "12.7283, -414.095, -36.8894, 0.29", "12.8377, -414.741, -36.5989, 0.66", "12.8721, -415.563, -36.2962, 0.88", "12.834, -416.268, -36.0907, 1.03", "12.7365, -416.862, -35.9871, 1.03", "12.5341, -417.56, -35.9161, 0.74", "12.1757, -418.534, -35.851, 0.22", "11.91, -419.156, -35.793, 0.74", "11.8814, -419.213, -35.7844, 0.74", "11.5939, -419.768, -35.6783, 0.74", "11.5662, -419.819, -35.6691, 0.74", "11.2191, -420.472, -35.5713, 0.29", "11.0129, -420.945, -35.5214, 0.29", "10.7985, -421.564, -35.4581, 1.03", "10.6494, -422.206, -35.4314, 1.4", "10.544, -422.929, -35.4409, 0.52", "10.49, -423.39, -35.482, 0.29", "10.4384, -424.145, -35.6784, 0.37", "10.4344, -424.614, -35.8948, 0.66", "10.5036, -425.338, -36.3937, 0.37", "10.5885, -425.666, -36.7083, 0.96", "10.7042, -425.986, -37.052, 0.96", "11.0297, -426.782, -37.9824, 0.37", "11.3834, -427.526, -38.9001, 0.74", "11.8234, -428.333, -39.8982, 1.25", "12.7662, -429.795, -41.675, 0.29", "13.119, -430.288, -42.2774, 0.29", "13.1486, -430.325, -42.3225, 0.29", "13.6107, -430.857, -42.9241, 0.88", "13.8467, -431.107, -43.1852, 1.18", "14.6081, -431.84, -43.8504, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "6.86816, -400.915, -42.9413, 0.44", "7.73043, -401.77, -42.7244, 0.44", "8.76347, -402.837, -42.4352, 0.44", "8.8211, -402.902, -42.4171, 0.44", "9.21712, -403.369, -42.2859, 0.29", "9.70451, -403.928, -42.1201, 0.81", "10.2693, -404.542, -41.9263, 1.11", "10.3117, -404.593, -41.9081, 1.11", "10.9155, -405.328, -41.6611, 0.44", "10.9616, -405.387, -41.6436, 0.44", "11.5273, -406.127, -41.4496, 0.37", "11.9097, -406.675, -41.3185, 0.37", "12.5092, -407.626, -41.1144, 0.29", "12.855, -408.175, -41.0082, 0.74", "13.0608, -408.494, -40.9509, 0.81", "13.1533, -408.633, -40.9337, 0.81", "13.6964, -409.415, -40.8682, 0.44", "14.1993, -410.095, -40.8271, 0.29", "14.7892, -410.802, -40.7892, 0.52", "15.139, -411.182, -40.768, 0.52", "16.073, -412.16, -40.7476, 0.29", "16.7508, -412.858, -40.7824, 0.59", "16.8045, -412.915, -40.7926, 0.59", "17.1205, -413.3, -40.8814, 0.59", "17.1654, -413.36, -40.8971, 0.59", "17.9799, -414.527, -41.2419, 0.81", "18.4044, -415.192, -41.4592, 1.03", "18.9879, -416.156, -41.8329, 0.59", "19.6062, -417.212, -42.2611, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-95.4803, -109.091, 23.615, 0.37", "-104.181, -117.125, 28.0521, 0.37", "-114.748, -123.983, 29.7264, 0.37", "-126.21, -129.57, 29.4151, 0.37", "-137.183, -135.681, 31.4662, 0.37", "-148.309, -141.4, 33.847, 0.37", "-158.276, -148.892, 36.1699, 0.37", "-167.26, -157.067, 39.7034, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-95.4803, -109.091, 23.615, 0.29", "-101.039, -114.938, 26.9092, 0.37", "-105.649, -121.518, 30.2089, 0.37", "-109.91, -128.582, 32.8767, 0.37", "-114.77, -134.927, 36.2986, 0.37", "-120.157, -141.509, 38.1053, 0.37", "-125.71, -147.549, 41.0256, 0.37", "-131.499, -152.668, 45.0996, 0.37", "-137.442, -157.573, 49.2272, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "58.1515, 184.013, 42.3318, 0.29", "60.311, 196.85, 43.9862, 0.29", "61.5489, 209.499, 47.4042, 0.29", "62.0455, 222.403, 49.8613, 0.29", "63.0278, 235.049, 53.3919, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "58.1515, 184.013, 42.3318, 0.44", "59.2811, 190.592, 43.0374, 0.29", "59.7835, 197.277, 43.2164, 0.29", "59.797, 203.911, 44.3047, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-139.074, -216.259, -8.9295, 0.29", "-145.811, -223.969, -12.0911, 0.29", "-153.283, -230.451, -16.3173, 0.29", "-160.334, -236.501, -21.759, 0.29", "-168.198, -243.132, -24.8959, 0.29", "-175.948, -249.913, -27.9785, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-139.074, -216.259, -8.9295, 0.44", "-144.456, -224.518, -12.2171, 0.29", "-149.229, -233.017, -15.7863, 0.29", "-152.792, -242.223, -18.8964, 0.29", "-156.918, -251.395, -21.3644, 0.29", "-161.043, -260.723, -23.13, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-136.397, -155.363, 30.0062, 0.22", "-135.157, -154.795, 30.5076, 0.22", "-134.595, -154.543, 30.7147, 0.52", "-134.189, -154.371, 30.8316, 0.74", "-132.906, -153.874, 31.1203, 0.37", "-131.47, -153.323, 31.3734, 0.37", "-130.939, -153.12, 31.4668, 0.37", "-130.715, -153.04, 31.4903, 0.37", "-129.637, -152.692, 31.583, 0.37", "-129.138, -152.545, 31.5998, 0.88", "-128.414, -152.329, 31.5051, 0.88", "-118.014, -149.979, 34.1273, 0.88", "-108.238, -145.574, 36.2995, 0.88" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-136.397, -155.363, 30.0062, 0.44", "-136.447, -154.111, 30.0291, 0.44", "-136.444, -152.903, 30.0617, 0.37", "-136.441, -152.847, 30.0659, 0.37", "-136.408, -151.88, 30.1755, 0.37", "-136.408, -151.782, 30.1926, 0.37", "-136.439, -150.612, 30.4374, 0.37", "-136.44, -150.55, 30.4565, 0.37", "-136.508, -149.794, 30.7306, 0.29", "-136.627, -148.993, 31.0292, 0.29", "-136.785, -148.259, 31.3137, 0.29", "-136.836, -148.084, 31.3814, 0.66", "-136.885, -147.953, 31.4265, 0.66", "-137.064, -147.506, 31.543, 0.66", "-137.374, -146.785, 31.6613, 0.29", "-137.519, -146.479, 31.6945, 0.44", "-137.578, -146.366, 31.7032, 0.44", "-137.9, -145.828, 31.7545, 0.37", "-138.281, -145.24, 31.8238, 0.37", "-138.316, -145.189, 31.8312, 0.37", "-139.004, -144.244, 31.9944, 0.29", "-139.412, -143.679, 32.1023, 0.44", "-139.528, -143.512, 32.1415, 0.44", "-139.892, -142.978, 32.2961, 0.44", "-140.237, -142.45, 32.4584, 0.29", "-140.308, -142.336, 32.4948, 0.29", "-140.492, -142.003, 32.6064, 0.44", "-140.69, -141.633, 32.7331, 0.44", "-140.722, -141.57, 32.7542, 0.44", "-140.928, -141.124, 32.8944, 0.44", "-141.111, -140.638, 33.0511, 0.44", "-141.127, -140.578, 33.069, 0.44", "-141.231, -140.02, 33.2172, 0.37", "-141.274, -139.746, 33.2818, 0.37", "-141.369, -139.036, 33.422, 0.44", "-141.435, -138.405, 33.5314, 0.44", "-141.498, -137.71, 33.581, 0.44", "-141.583, -136.733, 33.592, 0.44", "-141.676, -135.83, 33.5643, 0.74", "-141.823, -134.624, 33.4816, 0.81", "-141.895, -134.128, 33.425, 0.74", "-142.187, -132.386, 33.1353, 0.29", "-142.197, -132.332, 33.1243, 0.29", "-142.266, -131.938, 33.0332, 0.29", "-142.286, -131.804, 33.0059, 0.29", "-142.327, -131.474, 32.9752, 0.44", "-142.332, -131.411, 32.9741, 0.44", "-142.354, -130.962, 33.0024, 0.44", "-142.366, -130.234, 33.0378, 0.88", "-142.35, -129.208, 33.0744, 0.52", "-142.329, -128.41, 33.1015, 0.52", "-142.312, -127.764, 33.1113, 0.44", "-142.304, -127.055, 33.1157, 0.29", "-142.305, -126.522, 33.1135, 0.59", "-142.311, -126.316, 33.1119, 0.59", "-142.346, -125.797, 33.1106, 0.59", "-142.383, -125.281, 33.1107, 0.29", "-142.435, -124.577, 33.1279, 0.29", "-142.439, -124.503, 33.1299, 0.29", "-142.463, -123.971, 33.1379, 0.59", "-142.465, -123.887, 33.1388, 0.59", "-142.482, -123.293, 33.1532, 0.66", "-142.495, -122.635, 33.1792, 0.66", "-142.501, -121.937, 33.2054, 0.29", "-142.503, -120.962, 33.2433, 0.29", "-142.502, -120.889, 33.2462, 0.29", "-142.454, -119.655, 33.3406, 0.29", "-142.448, -119.516, 33.3565, 0.29", "-142.417, -118.731, 33.4753, 0.52", "-142.414, -118.595, 33.5014, 0.52", "-142.409, -117.785, 33.6878, 0.81", "-142.434, -117.016, 33.8698, 0.52", "-142.477, -116.387, 34.025, 0.52", "-142.536, -115.805, 34.1572, 0.74", "-142.625, -115.11, 34.2915, 0.88", "-142.652, -114.848, 34.3214, 0.88", "-142.674, -114.006, 34.3112, 0.88", "-142.669, -113.942, 34.3034, 0.88", "-142.591, -113.494, 34.2241, 0.66", "-142.421, -112.811, 34.1232, 0.44", "-142.12, -111.802, 34.0471, 0.37", "-141.821, -110.813, 34.0391, 0.29", "-141.61, -110.144, 34.0654, 0.29", "-141.592, -110.082, 34.0711, 0.29", "-141.31, -108.951, 34.2428, 0.29", "-141.014, -107.534, 34.5323, 0.29", "-140.901, -106.706, 34.744, 0.37", "-140.891, -106.573, 34.7794, 0.37", "-140.866, -105.871, 34.9415, 0.37", "-140.84, -105.175, 35.0926, 0.37", "-140.835, -105.048, 35.1167, 0.37", "-140.823, -104.086, 35.3218, 0.52", "-140.833, -103.108, 35.5496, 0.44", "-140.86, -102.08, 35.8023, 1.11", "-140.887, -100.705, 36.1476, 0.29", "-140.887, -100.635, 36.1682, 0.29", "-140.861, -99.5864, 36.494, 0.29", "-140.829, -98.9929, 36.6831, 0.29", "-140.825, -98.9414, 36.6993, 0.29", "-140.731, -97.8815, 37.0083, 0.37", "-140.58, -96.299, 37.417, 0.37", "-140.445, -95.1754, 37.6886, 0.37", "-140.304, -94.2761, 37.8916, 0.81", "-140.205, -93.6825, 38.0178, 1.03", "-140.048, -92.6785, 38.2122, 0.29", "-139.953, -91.9943, 38.325, 0.29", "-139.901, -91.5289, 38.374, 0.44", "-139.896, -91.4667, 38.381, 0.44", "-139.886, -91.1316, 38.4211, 0.44", "-139.899, -90.2994, 38.5613, 0.29", "-139.906, -90.1751, 38.5874, 0.29", "-139.983, -89.1409, 38.8345, 0.29", "-139.99, -89.0785, 38.8504, 0.29", "-140.14, -87.9545, 39.1492, 0.29", "-140.233, -87.297, 39.3268, 0.66", "-140.295, -86.8223, 39.4541, 0.74", "-140.305, -86.6992, 39.4845, 0.74", "-140.323, -85.5464, 39.7361, 0.29", "-140.318, -85.4276, 39.7578, 0.29", "-140.267, -84.705, 39.8495, 0.29", "-140.225, -84.1986, 39.8947, 0.74", "-140.135, -83.3956, 39.9561, 0.22", "-139.966, -82.2389, 40.0317, 0.22", "-139.741, -81.1881, 40.0849, 1.03", "-139.484, -80.1308, 40.1317, 0.29", "-139.431, -79.9325, 40.1398, 0.29", "-139.128, -78.8612, 40.1809, 0.29", "-139.068, -78.6652, 40.1882, 0.29", "-138.511, -76.996, 40.2474, 0.29", "-138.454, -76.8298, 40.2554, 0.29", "-138.073, -75.6655, 40.2905, 0.29", "-138.052, -75.5949, 40.2909, 0.29", "-137.843, -74.6746, 40.2729, 0.44", "-137.832, -74.6109, 40.2703, 0.44", "-137.743, -73.8342, 40.2182, 0.44", "-137.658, -73.0275, 40.1563, 0.74", "-137.653, -72.9632, 40.1506, 0.74", "-137.632, -72.5852, 40.1205, 1.03", "-137.614, -71.8875, 40.0835, 0.59", "-137.618, -71.1625, 40.1544, 0.29", "-137.622, -71.0289, 40.1884, 0.29", "-137.653, -70.5729, 40.371, 0.29", "-137.659, -70.5064, 40.4014, 0.29", "-137.74, -69.8079, 40.7534, 0.88", "-137.87, -68.7905, 41.2618, 0.88", "-137.885, -68.6756, 41.315, 0.88", "-137.939, -68.1915, 41.5208, 0.66", "-137.963, -67.7132, 41.7328, 0.29", "-137.963, -67.2167, 41.9524, 0.29", "-137.921, -66.2585, 42.3591, 0.29", "-137.881, -65.7725, 42.5454, 0.44", "-137.874, -65.7053, 42.5739, 0.44", "-137.729, -64.7306, 43.0996, 0.37", "-137.645, -64.0762, 43.4897, 0.29", "-137.641, -64.0206, 43.5229, 0.29", "-137.627, -63.5685, 43.7893, 0.74", "-137.63, -63.5211, 43.8138, 0.74", "-137.792, -62.288, 44.3796, 0.29", "-138.013, -61.1498, 44.8099, 0.29", "-138.21, -60.1953, 45.1682, 0.22", "-138.25, -60.0113, 45.2377, 0.22", "-138.542, -58.7491, 45.6944, 0.29", "-138.557, -58.6812, 45.7174, 0.29", "-138.817, -57.579, 46.0434, 0.29", "-139.025, -56.6494, 46.3552, 0.29", "-139.22, -55.7012, 46.7131, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-202.747, -208.872, 28.3519, 0.37", "-202.734, -209.611, 28.2414, 0.37", "-202.816, -211.165, 27.988, 0.37", "-202.93, -212.463, 27.8078, 0.29", "-203.003, -213.238, 27.6848, 0.44", "-203.079, -214.006, 27.5703, 0.44", "-203.243, -215.513, 27.367, 0.29", "-203.325, -216.063, 27.2933, 0.37", "-203.492, -216.83, 27.2067, 0.37", "-203.817, -218.402, 26.9701, 0.37", "-203.954, -219.139, 26.8458, 0.37", "-204.036, -219.665, 26.7591, 0.66", "-204.048, -219.736, 26.7483, 0.66", "-204.14, -220.213, 26.6542, 0.74", "-204.421, -221.423, 26.3529, 0.37", "-204.642, -222.129, 26.165, 0.37", "-204.667, -222.206, 26.136, 0.37", "-204.854, -222.773, 25.8861, 0.37", "-206.312, -233.018, 26.0493, 0.37", "-207.28, -243.084, 28.1031, 0.37" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-202.747, -208.872, 28.3519, 0.29", "-204.091, -208.646, 28.5469, 0.29", "-205.343, -208.472, 28.8739, 0.52", "-207.121, -208.325, 29.3618, 0.44", "-207.743, -208.336, 29.5314, 0.29", "-208.909, -208.443, 29.8165, 0.29", "-209.868, -208.545, 30.0733, 0.44", "-212.185, -208.846, 30.7844, 0.29", "-213.149, -208.976, 31.0583, 0.29", "-214.542, -209.19, 31.4472, 0.29", "-215.875, -209.385, 31.8753, 0.29", "-217.285, -209.566, 32.3579, 0.29", "-217.354, -209.575, 32.3816, 0.29", "-218.569, -209.674, 32.7494, 0.44", "-220.356, -209.643, 33.3667, 0.44", "-220.531, -209.619, 33.4327, 0.44", "-221.502, -209.463, 33.8367, 0.66", "-222.514, -209.411, 34.1575, 0.66", "-234.088, -209.458, 37.844, 0.66", "-244.559, -208.784, 43.9655, 0.66" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "52.586, -238.196, -34.5136, 0.52", "51.4332, -239.187, -34.4384, 0.52", "50.5442, -239.995, -34.4045, 0.29", "49.6153, -240.924, -34.4069, 0.22", "49.1439, -241.42, -34.3915, 0.52", "48.7222, -241.874, -34.3678, 0.74", "48.1888, -242.459, -34.3337, 0.81", "47.6912, -243.003, -34.3057, 0.66", "46.9874, -243.79, -34.2949, 0.29", "46.2112, -244.79, -34.2645, 0.29", "46.1635, -244.856, -34.2623, 0.29", "46.0161, -245.069, -34.2557, 0.66", "45.5903, -245.678, -34.2346, 0.81", "45.0519, -246.428, -34.2143, 0.22", "44.586, -247.075, -34.2175, 0.22", "44.3748, -247.398, -34.2539, 0.52", "44.1189, -247.804, -34.3003, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "52.586, -238.196, -34.5136, 1.18", "53.1199, -239.017, -34.3188, 1.18", "53.3282, -239.402, -34.2263, 1.4", "53.6356, -240.143, -33.9994, 0.37", "53.7896, -240.835, -33.7193, 0.44", "53.8205, -241.422, -33.4618, 0.66", "53.7355, -242.264, -33.0364, 0.66", "53.6259, -242.696, -32.8076, 0.66", "53.3096, -243.681, -32.2856, 0.59", "52.8488, -244.957, -31.6133, 0.37", "52.5737, -245.712, -31.2186, 1.55", "52.1556, -247.064, -30.5481, 0.37", "51.9734, -247.916, -30.1811, 0.44", "51.9005, -248.769, -29.8695, 0.44", "51.9339, -249.25, -29.7476, 0.88", "52.0266, -249.693, -29.6784, 1.03", "52.2402, -250.56, -29.5876, 0.37", "52.4023, -251.234, -29.5679, 0.37", "52.4686, -251.571, -29.5561, 0.88", "52.5444, -252.029, -29.5388, 0.96", "52.6373, -252.787, -29.5105, 0.96", "52.7416, -253.727, -29.4756, 0.29", "52.8635, -254.685, -29.3667, 0.29", "52.9146, -255.029, -29.3042, 0.66", "52.9779, -255.423, -29.1863, 0.88", "52.988, -255.481, -29.1632, 0.88", "53.078, -255.959, -28.9308, 0.74", "53.2512, -257.156, -28.2775, 0.29", "53.3043, -257.791, -27.9297, 0.29", "53.4082, -258.64, -27.5077, 1.11", "53.4981, -259.057, -27.3227, 1.11", "53.5159, -259.115, -27.3012, 1.11", "53.7079, -259.6, -27.1593, 1.11", "54.2572, -260.716, -26.8671, 0.29", "54.7579, -261.656, -26.6174, 0.29", "55.1925, -262.478, -26.4015, 0.29", "55.4239, -262.938, -26.2709, 0.81", "55.6799, -263.501, -26.0821, 0.96", "56.1461, -264.586, -25.5626, 0.96", "56.3835, -265.229, -25.1872, 0.37", "56.5689, -265.87, -24.7714, 0.88", "56.6868, -266.391, -24.4239, 0.88", "56.8815, -267.428, -23.7422, 0.59", "57.0986, -268.835, -22.8863, 0.44", "57.176, -269.395, -22.6004, 0.59", "57.2249, -269.85, -22.4051, 0.59", "57.2805, -270.574, -22.1791, 0.88", "57.333, -271.227, -22.0566, 0.29", "57.3964, -271.989, -21.9975, 0.29", "57.4716, -272.779, -21.9553, 0.37", "57.5739, -273.641, -21.8712, 0.96", "57.6551, -274.264, -21.7893, 1.33", "57.7998, -275.298, -21.5712, 0.37", "57.8893, -276.04, -21.3671, 0.52", "57.9762, -277.002, -21.0534, 0.44", "58.0142, -277.508, -20.8707, 0.29", "58.0611, -278.055, -20.6636, 0.88", "58.1287, -279.026, -20.2999, 0.74", "58.1832, -279.662, -20.0374, 0.29", "58.2798, -280.253, -19.7986, 0.59", "58.4011, -280.891, -19.5559, 0.74", "58.5029, -281.408, -19.3316, 0.88", "58.5138, -281.471, -19.3028, 0.88", "58.6507, -282.77, -18.7361, 0.52", "58.6422, -283.283, -18.4986, 0.52", "58.5128, -284.051, -18.1057, 0.52", "58.3211, -284.846, -17.7009, 0.96", "58.2103, -285.259, -17.4623, 1.33", "58.0666, -285.847, -17.0965, 0.59", "57.8941, -286.594, -16.6348, 0.37", "57.718, -287.664, -15.9645, 0.44", "57.6685, -288.297, -15.5984, 0.66", "57.6684, -289.466, -15.0251, 0.96", "57.7401, -290.65, -14.4917, 0.44", "57.8035, -291.256, -14.2492, 1.03", "57.923, -291.976, -14.0126, 1.18", "58.1101, -292.965, -13.8077, 0.29", "58.2842, -293.908, -13.7304, 0.29", "58.3097, -294.049, -13.7382, 0.88", "58.3598, -294.385, -13.7794, 1.25", "58.4382, -295.08, -13.8432, 0.66", "58.4894, -295.844, -13.8872, 0.59", "58.5221, -296.905, -13.9123, 0.52", "58.5138, -297.535, -13.9163, 0.52", "58.4856, -298.44, -13.9068, 0.52", "58.4482, -299.294, -13.8545, 0.37", "58.3967, -300.084, -13.8168, 0.29", "58.3813, -300.397, -13.8087, 0.74", "58.3781, -300.583, -13.8108, 0.74", "58.3876, -301.097, -13.8511, 0.74", "58.4378, -301.924, -13.9757, 0.81", "58.5197, -303.192, -14.2733, 0.81", "58.6019, -304.015, -14.4898, 0.81", "58.7236, -304.927, -14.7348, 0.81", "58.7327, -304.986, -14.7505, 0.81", "58.8733, -305.785, -14.9589, 0.59", "59.0746, -306.78, -15.2112, 0.44", "59.2247, -307.419, -15.3188, 0.44", "59.4202, -308.152, -15.4157, 0.29", "59.5875, -308.773, -15.4677, 0.74", "59.6731, -309.146, -15.4867, 0.96", "59.6833, -309.206, -15.484, 0.96", "59.7336, -309.848, -15.4069, 0.52", "59.718, -310.793, -15.2257, 0.52", "59.6626, -311.678, -15.0026, 0.52", "59.6295, -312.264, -14.8372, 0.59", "59.6077, -313.271, -14.5391, 0.74", "59.6222, -313.824, -14.372, 0.52", "59.6889, -314.839, -14.0819, 0.37", "59.6957, -314.9, -14.066, 0.37", "59.8893, -315.819, -13.8773, 0.44", "60.0956, -316.474, -13.7943, 0.37", "60.2773, -316.929, -13.7912, 0.74", "60.5618, -317.621, -13.8233, 0.29", "60.5795, -317.67, -13.8288, 0.29", "60.6824, -317.997, -13.8654, 0.44", "60.6934, -318.048, -13.8709, 0.44", "60.7538, -318.504, -13.9189, 0.44", "60.8444, -319.402, -13.991, 0.22", "60.9207, -320.037, -14.0045, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "29.4837, -184.983, -67.3998, 0.29", "29.2546, -184.647, -68.3066, 0.29", "29.2186, -184.604, -68.4176, 0.29", "29.028, -184.389, -68.9193, 0.29", "28.5352, -183.825, -70.0719, 0.29", "28.367, -183.6, -70.4946, 0.59", "27.9109, -182.901, -71.6602, 0.59", "27.673, -182.454, -72.2888, 0.37", "27.5608, -182.183, -72.6248, 0.66", "27.4581, -181.875, -72.9832, 0.88", "27.146, -180.747, -74.2201, 0.22", "27.0497, -180.307, -74.6877, 0.44", "26.9832, -179.91, -75.0754, 0.59", "26.9279, -179.231, -75.7762, 0.29", "26.902, -178.646, -76.4252, 0.74", "26.8894, -177.973, -77.2294, 1.03" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "29.4837, -184.983, -67.3998, 0.52", "29.7586, -186.574, -69.5401, 0.52", "29.7581, -186.62, -69.5897, 0.52", "29.7211, -187.058, -69.985, 0.52", "29.5619, -188.607, -71.1925, 1.33", "29.4937, -189.209, -71.6252, 1.77", "29.4053, -190.104, -72.1859, 0.66", "29.2493, -191.227, -72.711, 0.66", "29.1149, -192.738, -73.3991, 0.66", "29.12, -193.567, -73.7747, 0.88", "29.1474, -193.784, -73.863, 0.88", "29.4412, -195.125, -74.3954, 0.88", "29.4563, -195.177, -74.4163, 0.88", "30.0493, -196.803, -75.0243, 0.66", "30.6169, -198.064, -75.5146, 0.44", "31.0014, -198.824, -75.8507, 0.96", "31.5854, -199.903, -76.3691, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-137.442, -157.573, 49.2272, 0.29", "-141.156, -162.156, 58.9343, 0.29", "-145.419, -166.093, 68.7161, 0.29", "-149.931, -170.374, 78.2294, 0.29", "-155.752, -176.937, 85.3576, 0.29", "-160.722, -183.385, 93.2039, 0.29", "-165.399, -189.62, 101.403, 0.29", "-170.214, -195.43, 109.849, 0.29", "-174.761, -201.856, 117.965, 0.29", "-178.979, -208.75, 125.851, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-137.442, -157.573, 49.2272, 0.44", "-143.717, -165.166, 47.4892, 0.29", "-150.905, -171.702, 44.9499, 0.29", "-157.623, -178.739, 42.5348, 0.29", "-163.04, -186.498, 39.2895, 0.29", "-167.166, -194.519, 34.9717, 0.29", "-170.466, -202.411, 29.7711, 0.29", "-174.131, -209.448, 23.6124, 0.29", "-178.813, -215.825, 17.3912, 0.29", "-182.41, -223.745, 12.4419, 0.29", "-186.26, -232.399, 9.33244, 0.29", "-190.749, -241.192, 8.08298, 0.29", "-196.85, -249.076, 8.55404, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "63.0278, 235.049, 53.3919, 0.29", "63.8139, 244.474, 54.7384, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "63.0278, 235.049, 53.3919, 0.44", "64.2518, 242.846, 56.2868, 0.29", "65.9386, 250.389, 59.629, 0.29", "67.2294, 257.98, 63.0363, 0.29", "68.7902, 265.096, 67.3077, 0.29", "68.7428, 272.546, 71.2501, 0.29", "68.776, 279.544, 75.9886, 0.29", "67.3732, 286.962, 79.7358, 0.29", "65.6305, 294.043, 83.9927, 0.29", "63.4031, 300.052, 89.5583, 0.29", "62.2372, 306.411, 95.0421, 0.29", "63.0766, 312.43, 100.972, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-139.22, -55.7012, 46.7131, 0.22", "-139.85, -55.7351, 46.8032, 0.22", "-140.891, -55.7913, 46.9523, 0.22", "-141.347, -55.8159, 47.0175, 0.52", "-141.627, -55.8311, 47.0576, 0.74", "-147.562, -55.1815, 48.4892, 0.74", "-153.394, -54.848, 50.3871, 0.74", "-158.839, -53.7108, 52.9754, 0.74", "-164.013, -53.3502, 56.264, 0.74", "-168.818, -51.9375, 59.8001, 0.74", "-172.777, -50.6008, 64.2883, 0.74", "-175.722, -48.9403, 69.3984, 0.74", "-178.461, -46.7895, 74.4283, 0.74", "-181.44, -44.2064, 79.0944, 0.74", "-183.984, -42.1743, 84.2771, 0.74" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-139.22, -55.7012, 46.7131, 0.44", "-139.205, -54.8498, 46.8535, 0.44", "-139.205, -54.2302, 46.9459, 0.66", "-139.208, -54.1156, 46.9617, 0.66", "-139.22, -53.7694, 47.0072, 0.59", "-139.241, -52.975, 47.1043, 0.29", "-139.245, -51.7026, 47.245, 0.29", "-139.244, -51.5693, 47.2639, 0.29", "-139.238, -50.641, 47.4257, 0.52", "-139.237, -50.5709, 47.4394, 0.52", "-139.212, -49.6188, 47.643, 0.52", "-139.152, -48.462, 47.9045, 1.03", "-139.022, -47.0487, 48.2485, 0.29", "-139.015, -46.9878, 48.2639, 0.29", "-138.872, -46.1699, 48.4928, 0.29", "-138.734, -45.5974, 48.6508, 0.52", "-138.557, -45.0177, 48.8104, 0.52", "-138.326, -44.3887, 48.9628, 0.96", "-138.307, -44.341, 48.9721, 0.96", "-137.739, -42.9066, 49.2473, 0.29", "-137.275, -41.7127, 49.4739, 0.29", "-137.252, -41.6459, 49.4862, 0.29", "-136.955, -40.5374, 49.6764, 0.29", "-136.893, -40.1632, 49.7305, 0.59", "-136.881, -39.9758, 49.7547, 0.59", "-136.921, -39.4713, 49.8083, 0.52", "-137.006, -38.94, 49.8721, 0.66", "-137.101, -38.3798, 49.9403, 0.66", "-137.267, -37.5137, 50.0483, 0.29", "-137.288, -37.3827, 50.0724, 0.29", "-137.354, -36.8196, 50.2015, 0.29", "-137.381, -36.3865, 50.3586, 0.52", "-137.382, -36.3306, 50.3841, 0.52", "-137.343, -35.5352, 50.7874, 0.37", "-137.251, -34.5868, 51.3068, 0.59", "-137.186, -34.1202, 51.5595, 0.96", "-136.961, -32.8203, 52.265, 0.37", "-136.944, -32.7438, 52.3085, 0.37", "-136.702, -31.8666, 52.8087, 0.37", "-136.684, -31.8137, 52.8388, 0.37", "-136.466, -31.1955, 53.1502, 0.37", "-136.416, -31.0186, 53.219, 0.37", "-136.196, -29.715, 53.5438, 0.59", "-136.169, -29.4719, 53.5979, 0.88", "-136.164, -29.41, 53.6092, 0.88", "-136.127, -28.9046, 53.6861, 0.88", "-135.995, -27.0666, 53.9012, 0.29", "-135.857, -25.4602, 53.9839, 0.29", "-135.835, -25.2308, 53.9831, 0.29", "-135.65, -23.3682, 54.0129, 0.29", "-135.63, -23.1089, 54.0225, 0.29", "-135.556, -21.8774, 54.0892, 0.37", "-135.514, -20.3553, 54.2139, 0.37", "-135.521, -19.6139, 54.3371, 0.37", "-135.573, -18.4834, 54.6139, 0.29", "-135.695, -17.379, 54.9646, 0.29", "-135.713, -17.2543, 55.0127, 0.29", "-135.843, -16.7065, 55.3083, 0.29", "-136.239, -15.4619, 56.2413, 1.18", "-136.314, -15.2207, 56.4324, 1.47" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "31.5854, -199.903, -76.3691, 0.88", "31.2316, -201.179, -77.0538, 0.88", "30.9996, -202.092, -77.4797, 1.47", "30.8172, -202.991, -77.8454, 1.69", "30.5471, -204.837, -78.4885, 0.59", "30.5412, -204.9, -78.51, 0.59", "30.4769, -206.034, -78.8868, 0.29", "30.4822, -206.93, -79.1477, 0.44", "30.5488, -207.712, -79.431, 0.66", "30.6964, -208.564, -79.8622, 1.11", "30.8905, -209.394, -80.3243, 1.47", "30.9844, -209.816, -80.5781, 1.47", "30.998, -209.884, -80.6207, 1.47", "31.2945, -211.874, -81.8122, 1.11", "31.4088, -213.684, -82.7552, 0.59", "31.4311, -214.62, -83.1382, 0.81", "31.4424, -215.484, -83.3981, 1.11", "31.4708, -216.373, -83.5817, 1.25", "31.5266, -217.676, -83.728, 0.66", "31.5896, -219.158, -83.7142, 0.52", "31.6664, -220.571, -83.6246, 1.03", "31.7154, -221.265, -83.5993, 1.25", "31.8586, -222.725, -83.5845, 0.66", "31.9085, -223.163, -83.6056, 0.44", "31.999, -223.733, -83.6651, 0.96", "32.0935, -224.23, -83.7433, 1.25", "32.3258, -225.514, -83.998, 1.11", "32.5033, -226.531, -84.237, 0.96", "32.6963, -227.639, -84.4693, 0.66", "32.8843, -228.801, -84.6617, 0.59", "32.8964, -228.88, -84.6716, 0.59", "32.9942, -229.775, -84.7333, 0.59", "32.9878, -230.976, -84.7148, 0.52", "32.7973, -232.147, -84.6251, 0.81", "32.4989, -233.011, -84.5063, 1.03", "32.4424, -233.12, -84.4897, 1.03", "31.9752, -233.916, -84.3608, 1.03", "31.23, -234.949, -84.172, 0.52", "30.7531, -235.508, -84.0554, 1.11", "30.1864, -236.102, -83.9966, 1.33", "30.128, -236.158, -83.99, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "31.5854, -199.903, -76.3691, 0.52", "31.9061, -200.075, -76.0203, 0.52", "32.4797, -200.388, -75.351, 0.29", "32.8192, -200.581, -74.9608, 0.59", "33.0175, -200.698, -74.7145, 0.96", "33.6195, -201.059, -73.9578, 0.22", "34.0337, -201.302, -73.4459, 0.59", "34.0558, -201.315, -73.4183, 0.59", "34.3705, -201.49, -73.0651, 0.52", "34.8299, -201.79, -72.5368, 0.37", "35.0276, -201.939, -72.3201, 0.81", "35.1932, -202.074, -72.1686, 0.96", "35.6224, -202.439, -71.8167, 0.37", "36.0427, -202.775, -71.565, 0.37", "36.4753, -203.106, -71.4054, 0.44", "36.744, -203.301, -71.3629, 0.44", "37.109, -203.566, -71.3117, 0.22", "37.3717, -203.745, -71.2779, 0.44", "38.3645, -204.358, -71.1624, 0.37", "38.7623, -204.583, -71.1165, 0.52", "39.2102, -204.818, -71.0635, 0.59", "39.7116, -205.064, -70.9771, 0.81", "40.2207, -205.305, -70.8532, 0.29", "40.6623, -205.502, -70.7015, 0.52", "40.8901, -205.597, -70.5916, 0.81", "41.1293, -205.674, -70.4857, 1.11", "41.2341, -205.7, -70.4449, 1.11", "41.4471, -205.74, -70.3752, 0.96", "41.827, -205.784, -70.2086, 0.59", "42.4137, -205.799, -69.8353, 0.29", "42.6907, -205.804, -69.6251, 0.52", "42.901, -205.809, -69.4489, 0.66", "42.9281, -205.811, -69.4246, 0.66", "43.5912, -205.895, -68.7816, 0.52", "44.0848, -205.982, -68.2747, 0.74", "44.5671, -206.079, -67.77, 0.22", "44.7021, -206.113, -67.6395, 0.74", "44.9521, -206.193, -67.4107, 0.81", "45.5187, -206.419, -66.9396, 0.22", "45.703, -206.514, -66.8154, 0.66", "45.8791, -206.618, -66.7071, 0.74", "46.2985, -206.908, -66.4396, 0.22", "46.6519, -207.192, -66.1947, 0.66", "46.7728, -207.3, -66.1085, 0.81", "46.9843, -207.524, -65.9574, 0.52", "47.0028, -207.544, -65.9438, 0.52", "47.2911, -207.874, -65.7479, 0.22", "47.6783, -208.332, -65.5188, 0.74", "47.9058, -208.571, -65.4415, 0.81", "47.9573, -208.62, -65.4293, 0.81", "48.2237, -208.844, -65.3963, 0.59", "48.5064, -209.047, -65.4151, 0.29", "48.8249, -209.258, -65.4834, 1.03", "49.3187, -209.607, -65.6427, 1.03", "49.409, -209.679, -65.6767, 1.25", "49.7281, -209.989, -65.8044, 0.66", "50.2219, -210.56, -66.0099, 0.52", "50.5006, -210.947, -66.1171, 0.37", "50.6909, -211.273, -66.1892, 0.29", "50.8333, -211.611, -66.2315, 0.29", "51.0295, -212.212, -66.2748, 0.29", "51.0869, -212.423, -66.2873, 0.81", "51.1624, -212.717, -66.2968, 1.03", "51.1744, -212.751, -66.2981, 1.03", "51.3904, -213.226, -66.3188, 0.59", "51.6251, -213.667, -66.3124, 0.44", "51.8939, -214.161, -66.2813, 0.88", "51.9702, -214.301, -66.267, 1.25", "52.106, -214.547, -66.2179, 1.55", "52.2862, -214.855, -66.1248, 0.29", "52.5602, -215.33, -65.838, 0.29", "52.7765, -215.725, -65.5166, 0.29", "52.7891, -215.75, -65.4944, 0.29", "52.976, -216.14, -65.1482, 1.47", "53.1319, -216.48, -64.8528, 1.77", "53.5417, -217.369, -64.0841, 0.37", "53.6831, -217.673, -63.8195, 0.22", "53.8677, -218.074, -63.4606, 0.29", "53.9492, -218.263, -63.302, 0.52", "54.0488, -218.526, -63.1148, 0.66", "54.0582, -218.556, -63.0966, 0.66" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-183.984, -42.1743, 84.2771, 0.37", "-191.526, -39.54, 88.9195, 0.37", "-199.48, -38.174, 93.4433, 0.37", "-206.409, -35.6817, 99.0373, 0.37", "-213.495, -34.4835, 104.87, 0.37", "-221.184, -35.5334, 109.911, 0.37", "-228.211, -35.9, 115.923, 0.37", "-234.503, -36.8169, 122.639, 0.37", "-238.803, -37.9374, 130.734, 0.37", "-242.105, -41.2788, 138.629, 0.37", "-244.997, -46.1819, 145.787, 0.37", "-247.024, -50.8608, 153.374, 0.37", "-249.015, -55.4971, 160.998, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-183.984, -42.1743, 84.2771, 0.29", "-191.488, -39.5864, 89.5619, 0.37", "-199.39, -37.0911, 94.2807, 0.37", "-207.605, -35.5362, 98.8884, 0.37", "-214.569, -32.1345, 104.426, 0.37", "-220.766, -28.8621, 110.887, 0.37", "-227.225, -26.7596, 117.596, 0.37", "-234.98, -24.2487, 122.545, 0.37", "-243.612, -21.443, 125.431, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-136.314, -15.2207, 56.4324, 0.59", "-135.263, -14.8248, 57.0104, 0.59", "-135.216, -14.8079, 57.037, 0.59", "-134.283, -14.3863, 57.5605, 0.29", "-133.8, -14.1053, 57.8098, 0.29", "-133.756, -14.0765, 57.8321, 0.29", "-132.801, -13.3626, 58.2546, 0.29", "-132.772, -13.3347, 58.2652, 0.29", "-131.991, -12.5064, 58.5025, 0.29", "-131.127, -11.5482, 58.6727, 0.29", "-131.056, -11.47, 58.6819, 0.29", "-130.289, -10.6593, 58.7485, 0.74", "-129.628, -10.0017, 58.8002, 0.29", "-129.434, -9.83446, 58.8311, 0.29", "-128.44, -9.06248, 58.999, 0.29", "-127.961, -8.73094, 59.0947, 0.29", "-127.163, -8.23365, 59.283, 0.29", "-126.154, -7.72056, 59.5971, 0.29", "-125.276, -7.33864, 59.9153, 0.88", "-120.96, -2.3835, 62.0889, 0.88", "-117.466, 2.58635, 65.3887, 0.88", "-113.754, 7.77204, 68.0479, 0.88", "-109.542, 12.7761, 70.3049, 0.88", "-105.125, 17.403, 72.9718, 0.88", "-101.191, 22.4613, 75.5712, 0.88", "-96.8227, 27.086, 78.3198, 0.88", "-91.7549, 30.997, 81.0392, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-136.314, -15.2207, 56.4324, 0.59", "-136.535, -14.6001, 56.8341, 0.59", "-136.704, -14.0533, 57.21, 0.59", "-136.838, -13.5262, 57.6064, 0.37", "-136.989, -12.8563, 58.1229, 0.29", "-137.09, -12.2363, 58.6382, 0.29", "-137.096, -12.1933, 58.6752, 0.29", "-137.13, -11.6623, 59.1645, 0.29", "-137.152, -11.2021, 59.6102, 0.66", "-137.158, -10.9055, 59.88, 0.81", "-137.179, -10.2125, 60.4181, 0.29", "-137.182, -10.1669, 60.452, 0.29", "-137.221, -9.53574, 60.8614, 0.29", "-137.224, -9.49171, 60.8851, 0.29", "-137.276, -8.75589, 61.1958, 0.52", "-137.325, -8.23546, 61.3776, 0.74", "-137.333, -8.18153, 61.3928, 0.74", "-137.422, -7.69642, 61.5595, 0.74", "-137.431, -7.65042, 61.5771, 0.74", "-137.591, -6.99468, 61.8527, 0.29", "-137.787, -6.32031, 62.1596, 0.29", "-138.078, -5.41794, 62.5848, 0.29", "-138.316, -4.6358, 62.9406, 0.29", "-138.338, -4.54664, 62.9809, 0.29", "-138.439, -3.80273, 63.293, 0.29", "-138.443, -3.75635, 63.3116, 0.29", "-138.405, -2.99693, 63.5837, 0.29", "-138.265, -1.84332, 63.9586, 0.29", "-138.057, -0.313743, 64.4034, 0.29", "-137.849, 1.08494, 64.8013, 0.29", "-137.836, 1.17812, 64.8297, 0.29", "-137.658, 2.5603, 65.2735, 0.29", "-137.646, 2.65944, 65.3065, 0.29", "-137.522, 4.26107, 65.8616, 0.29", "-137.52, 4.31446, 65.8804, 0.29", "-137.565, 5.74244, 66.424, 0.29", "-137.571, 5.79492, 66.4448, 0.29", "-137.794, 6.87178, 66.8644, 0.29", "-137.86, 7.15119, 66.9642, 0.74", "-137.873, 7.20339, 66.9819, 0.74", "-137.974, 7.55775, 67.0864, 0.59", "-138.291, 8.47233, 67.2484, 0.29", "-138.524, 9.02329, 67.3394, 0.88", "-138.737, 9.35849, 67.3841, 0.96" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "30.128, -236.158, -83.99, 0.52", "29.7125, -236.85, -83.8682, 0.52", "29.4006, -237.404, -83.7768, 0.37", "29.119, -237.941, -83.6676, 0.29", "28.8948, -238.35, -83.5765, 0.66", "28.6959, -238.706, -83.4949, 0.66", "28.6679, -238.755, -83.4837, 0.66", "28.4843, -239.089, -83.407, 0.59", "28.1457, -239.674, -83.2836, 0.29", "27.8009, -240.287, -83.1622, 0.29", "27.6655, -240.545, -83.1158, 0.66", "27.4608, -240.97, -83.0478, 0.96", "27.3165, -241.327, -82.9967, 1.18", "27.058, -242.076, -82.9063, 0.29", "26.9148, -242.569, -82.8634, 0.29", "26.8374, -242.861, -82.836, 0.52", "26.8051, -242.961, -82.8128, 0.52", "26.6469, -243.328, -82.6717, 0.22", "26.4673, -243.625, -82.5091, 0.44", "26.278, -243.87, -82.3128, 0.66", "26.0106, -244.17, -82.0523, 0.66", "25.345, -244.875, -81.4476, 0.29", "25.1538, -245.082, -81.2812, 0.96", "24.9621, -245.307, -81.1154, 1.25", "24.37, -246.132, -80.5737, 0.52", "24.0441, -246.679, -80.2721, 0.52", "23.7996, -247.15, -80.0618, 0.29", "23.5896, -247.57, -79.9284, 0.37", "23.357, -248.01, -79.8084, 0.44", "23.1662, -248.303, -79.7453, 0.44", "22.8251, -248.724, -79.6958, 0.22", "22.6016, -248.935, -79.67, 0.37", "22.1951, -249.243, -79.595, 0.59", "21.6346, -249.604, -79.4685, 1.18", "21.0965, -249.924, -79.3045, 0.74", "21.0486, -249.951, -79.2867, 0.74", "20.2872, -250.411, -78.9453, 0.37", "19.5787, -250.894, -78.5621, 0.29", "19.4109, -251.015, -78.4426, 0.59", "19.0169, -251.28, -78.0718, 0.74", "18.9742, -251.305, -78.0206, 0.74", "18.7624, -251.409, -77.6891, 0.74", "18.7417, -251.416, -77.6527, 0.74", "18.3451, -251.493, -76.9594, 0.29", "17.8806, -251.554, -76.1462, 0.59", "17.4876, -251.587, -75.4494, 0.96", "16.8096, -251.63, -74.2224, 0.59", "16.5336, -251.639, -73.7072, 0.29", "16.5096, -251.641, -73.6617, 0.29", "16.0795, -251.684, -72.8059, 0.88", "15.7069, -251.719, -72.0137, 1.03" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "30.128, -236.158, -83.99, 0.52", "30.3441, -236.868, -84.609, 0.52", "30.3537, -236.907, -84.638, 0.52", "30.473, -237.479, -85.0448, 0.66", "30.6841, -238.738, -85.8573, 0.44", "30.8046, -239.675, -86.446, 0.37", "30.8474, -240.189, -86.7488, 0.66", "30.8552, -240.769, -87.0447, 0.88", "30.831, -241.424, -87.3645, 0.88", "30.7799, -242.009, -87.6297, 0.88", "30.7073, -242.81, -87.9697, 0.59", "30.6757, -243.543, -88.2929, 0.37", "30.6898, -244.309, -88.6642, 0.37", "30.7756, -245.133, -89.0957, 0.74", "30.839, -245.486, -89.2804, 1.11", "31.1313, -246.726, -89.9824, 0.74", "31.2883, -247.313, -90.3252, 0.44", "31.2988, -247.354, -90.3492, 0.44", "31.5011, -248.228, -90.8415, 1.03", "31.5802, -248.695, -91.067, 1.33", "31.6531, -249.742, -91.4925, 0.66", "31.6239, -250.689, -91.7748, 0.66", "31.5498, -251.626, -92.0142, 0.88", "31.5463, -251.675, -92.0237, 0.88", "31.4954, -252.406, -92.1266, 1.11", "31.4373, -253.502, -92.2367, 1.03", "31.4079, -254.319, -92.2631, 0.52", "31.4066, -254.368, -92.2686, 0.52", "31.3801, -255.204, -92.442, 0.88", "31.356, -255.739, -92.5875, 0.96", "31.3297, -256.215, -92.7806, 0.96", "31.2855, -256.701, -93.0586, 0.66", "31.0692, -258.063, -93.9602, 0.44", "30.9746, -258.561, -94.3051, 0.96", "30.8645, -259.014, -94.6426, 1.25", "30.6288, -259.94, -95.3561, 1.11", "30.422, -260.742, -96.028, 0.74", "30.3051, -261.159, -96.403, 0.74" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-138.737, 9.35849, 67.3841, 0.29", "-140.692, 9.60402, 67.5854, 0.29", "-140.808, 9.61382, 67.6, 0.29", "-142.279, 9.74611, 67.5862, 0.29", "-142.396, 9.75686, 67.5798, 0.29", "-143.739, 9.9509, 67.5007, 0.66", "-144.764, 10.1362, 67.4426, 0.81", "-144.852, 10.1536, 67.4378, 0.81", "-147.503, 10.7589, 67.4506, 0.29", "-147.743, 10.8205, 67.4607, 0.29", "-149.657, 11.3788, 67.6237, 0.29", "-151.849, 12.1169, 67.8992, 0.29", "-151.944, 12.1523, 67.9172, 0.29", "-153.892, 12.901, 68.4274, 0.44", "-153.981, 12.9402, 68.4613, 0.44", "-154.696, 13.2782, 68.7345, 0.44", "-154.78, 13.3217, 68.7677, 0.44", "-156.277, 14.2185, 69.334, 0.29", "-156.458, 14.3333, 69.3816, 0.29", "-157.666, 15.1488, 69.5531, 0.29", "-158.264, 15.5672, 69.6313, 0.59", "-158.44, 15.696, 69.6522, 0.59", "-158.971, 16.0748, 69.7146, 0.59", "-160.277, 16.9877, 69.8628, 0.37", "-160.47, 17.1138, 69.8867, 0.37", "-161.513, 17.7872, 69.9366, 0.37", "-161.598, 17.8437, 69.9365, 0.37", "-162.789, 18.5858, 69.9099, 0.37", "-162.979, 18.699, 69.9019, 0.37", "-164.227, 19.3706, 69.8864, 0.37", "-165.879, 20.1706, 69.9143, 0.22", "-166.092, 20.2586, 69.9294, 0.22", "-167.27, 20.6813, 70.0774, 0.22", "-167.367, 20.7104, 70.097, 0.22", "-168.589, 20.9064, 70.6661, 0.81", "-168.989, 20.9311, 70.9271, 0.81", "-170.083, 20.9094, 71.7203, 0.22", "-170.167, 20.9004, 71.7804, 0.22", "-171.091, 20.7341, 72.4911, 0.22", "-173.677, 20.1795, 74.4282, 0.22", "-173.853, 20.1388, 74.5564, 0.22", "-175.11, 19.8441, 75.4566, 0.22", "-176.315, 19.5554, 76.2991, 0.22", "-178.161, 19.1425, 77.5364, 0.22", "-179.497, 18.877, 78.3767, 0.22", "-179.601, 18.8648, 78.4314, 0.22", "-181.184, 18.9143, 79.1978, 0.52", "-181.663, 19.0507, 79.3971, 0.81", "-181.848, 19.1473, 79.4562, 0.81", "-182.296, 19.4476, 79.5411, 0.81", "-182.392, 19.5137, 79.5447, 0.81", "-183.863, 20.4558, 79.4566, 0.37", "-184.69, 20.9817, 79.3326, 0.59", "-184.776, 21.0355, 79.3161, 0.59", "-185.851, 21.7285, 79.0891, 0.44", "-187.675, 22.8454, 78.4718, 0.29", "-187.853, 22.9506, 78.396, 0.29", "-188.893, 23.4558, 77.763, 0.29", "-188.962, 23.4861, 77.7148, 0.29", "-190.023, 23.9094, 76.9597, 0.29", "-191.828, 24.513, 75.3613, 0.29", "-191.889, 24.5296, 75.3037, 0.29", "-194.056, 24.9359, 73.2529, 0.29", "-194.119, 24.9432, 73.1955, 0.29", "-194.771, 25.0041, 72.6454, 0.66", "-197.791, 25.1603, 70.2916, 0.37", "-197.984, 25.1673, 70.1626, 0.37", "-199.075, 25.1854, 69.5386, 0.29", "-200.156, 25.2068, 69.0984, 0.15", "-200.82, 25.2204, 68.8818, 0.74", "-201.123, 25.2249, 68.8293, 0.74", "-203.111, 25.2505, 68.8439, 0.37", "-204.055, 25.3025, 68.8564, 0.29", "-205.319, 25.4559, 68.931, 0.29", "-205.463, 25.4786, 68.9475, 0.29", "-207.253, 25.8127, 69.2926, 0.29", "-207.461, 25.8628, 69.3494, 0.29", "-208.597, 26.2044, 69.761, 0.29", "-209.698, 26.5603, 70.1521, 0.29", "-209.794, 26.5875, 70.1798, 0.29", "-211.3, 26.9834, 70.5275, 0.29", "-212.77, 27.3194, 70.7307, 0.29", "-213.058, 27.3729, 70.7557, 0.29", "-214.424, 27.6212, 70.7273, 0.29", "-215.96, 27.9699, 70.5791, 0.52", "-216.741, 28.1971, 70.475, 0.66", "-218.544, 28.8347, 70.1606, 0.29", "-220.554, 29.6362, 69.7679, 1.11", "-222.6, 30.4791, 69.2706, 0.29", "-223.703, 30.9574, 68.9606, 0.29", "-224.65, 31.3873, 68.6962, 0.74", "-224.854, 31.4797, 68.6344, 0.74", "-225.429, 31.7416, 68.4498, 0.74", "-228.391, 32.9441, 67.4312, 0.29", "-228.531, 32.9911, 67.3885, 0.29", "-229.603, 33.3181, 67.0585, 0.29", "-229.682, 33.3431, 67.0341, 0.29", "-231.03, 33.7984, 66.6355, 0.59", "-233.559, 34.7897, 65.9589, 0.29", "-233.661, 34.8431, 65.9401, 0.29", "-234.399, 35.3089, 65.8151, 0.29", "-234.79, 35.6485, 65.7484, 0.59", "-234.869, 35.7323, 65.7373, 0.59", "-235.472, 36.4975, 65.6755, 0.59", "-236.045, 37.3205, 65.6418, 0.29", "-236.564, 37.9753, 65.611, 0.29", "-238.235, 39.8251, 65.5173, 0.29", "-238.301, 39.8856, 65.5156, 0.29", "-239.241, 40.654, 65.5088, 0.29", "-239.677, 40.953, 65.5159, 0.29", "-240.914, 41.6225, 65.5745, 0.52", "-241.461, 41.8554, 65.6299, 0.59", "-243.063, 42.3993, 65.8915, 0.22", "-243.499, 42.5475, 65.9449, 0.22", "-244.393, 42.9012, 66.0275, 0.22", "-245.241, 43.3135, 66.0754, 0.81", "-245.825, 43.6364, 66.0869, 1.03", "-246.772, 44.1706, 66.0806, 0.52", "-248.517, 45.1396, 66.0372, 0.29", "-250.523, 46.2167, 65.9811, 0.22", "-252.451, 47.3104, 65.8962, 0.22", "-252.68, 47.4497, 65.883, 0.22", "-253.638, 48.0499, 65.8245, 0.74", "-254.157, 48.3706, 65.8021, 0.74", "-254.79, 48.7347, 65.8445, 0.74", "-268.234, 53.0624, 64.2749, 0.74" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-138.737, 9.35849, 67.3841, 0.29", "-138.64, 10.0874, 67.4052, 0.29", "-138.458, 11.3697, 67.3883, 0.29", "-138.45, 11.4236, 67.387, 0.29", "-138.286, 12.6308, 67.3551, 0.29", "-138.279, 12.6913, 67.3539, 0.29", "-138.124, 14.4895, 67.3346, 0.52", "-138.073, 15.4992, 67.3392, 0.52", "-138.067, 16.2271, 67.3458, 0.52", "-138.074, 16.4323, 67.3462, 0.52", "-138.148, 17.313, 67.4219, 0.52", "-138.243, 17.9784, 67.5412, 0.81", "-138.276, 18.1015, 67.5823, 0.81", "-138.453, 18.6086, 67.821, 0.66", "-138.659, 19.0904, 68.0781, 0.37", "-139.332, 20.5347, 68.9022, 0.37", "-139.357, 20.5853, 68.9296, 0.37", "-139.635, 21.0922, 69.1788, 0.52", "-139.676, 21.1659, 69.2069, 0.52", "-140.207, 22.0952, 69.4801, 0.44", "-140.269, 22.2028, 69.5018, 0.44", "-140.737, 22.9697, 69.5559, 0.44", "-140.871, 23.2052, 69.5725, 0.44", "-141.476, 24.4091, 69.6602, 0.44", "-141.502, 24.4661, 69.6647, 0.44", "-141.743, 25.0577, 69.718, 0.52", "-141.787, 25.1837, 69.7262, 0.52", "-142.033, 25.9641, 69.7714, 0.37", "-142.282, 26.875, 69.8055, 0.74", "-142.297, 26.9358, 69.8078, 0.74", "-142.4, 27.3578, 69.8239, 0.74", "-142.855, 29.3579, 69.9671, 0.52", "-142.868, 29.419, 69.9729, 0.52", "-143.198, 31.0715, 70.1768, 0.52", "-143.571, 33.0287, 70.4652, 0.52", "-143.586, 33.1075, 70.4785, 0.52", "-143.81, 34.3737, 70.7235, 0.88", "-143.856, 34.6468, 70.7866, 0.88", "-144.106, 36.1791, 71.1377, 0.52", "-144.256, 37.1541, 71.3583, 0.52", "-144.279, 37.3349, 71.4052, 0.52", "-144.402, 38.2386, 71.614, 0.52", "-144.446, 38.4894, 71.6619, 0.52", "-144.582, 39.1103, 71.7802, 0.59", "-144.758, 39.8281, 71.9115, 0.37", "-145.058, 40.9804, 72.1161, 0.44", "-145.382, 42.2302, 72.3248, 0.22", "-145.678, 43.3543, 72.5021, 0.22", "-145.801, 43.832, 72.5832, 0.37", "-146.086, 44.943, 72.7781, 0.22", "-146.114, 45.0551, 72.7976, 0.22", "-146.323, 45.9925, 73.0047, 0.22", "-146.333, 46.0515, 73.0238, 0.22", "-146.445, 47.0108, 73.3568, 0.22", "-146.45, 47.0621, 73.3746, 0.22", "-146.57, 48.3165, 73.8155, 0.22", "-146.695, 49.7279, 74.2939, 0.66", "-146.742, 50.2687, 74.4699, 0.96", "-146.823, 51.2647, 74.8032, 0.22", "-146.894, 52.1208, 75.0888, 0.22", "-146.9, 52.1878, 75.1121, 0.22", "-146.942, 52.6841, 75.2908, 0.59", "-147.003, 53.1143, 75.4126, 0.88", "-147.187, 54.127, 75.6696, 0.44", "-147.316, 54.7335, 75.8031, 0.29", "-147.357, 54.9207, 75.8355, 0.29", "-147.45, 55.3626, 75.8925, 0.29", "-147.651, 56.4808, 75.9192, 0.74", "-147.733, 57.0188, 75.8835, 0.29", "-147.813, 57.5748, 75.8106, 0.44", "-147.872, 58.0243, 75.752, 0.59", "-147.879, 58.0862, 75.7456, 0.59", "-148.032, 59.4342, 75.6431, 0.22", "-148.055, 59.6336, 75.638, 0.22", "-148.188, 60.762, 75.6977, 0.22", "-148.194, 60.8221, 75.7053, 0.22", "-148.242, 61.4957, 75.8352, 0.44", "-148.245, 61.5644, 75.8532, 0.44", "-148.249, 61.9213, 75.9846, 0.44", "-148.201, 63.0836, 76.4486, 0.29", "-148.146, 63.5096, 76.6453, 0.44", "-148.128, 63.629, 76.7035, 0.44", "-148.014, 64.1735, 76.9983, 0.44" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "30.3051, -261.159, -96.403, 0.29", "29.7899, -261.289, -96.4124, 0.29", "29.1806, -261.537, -96.4432, 0.29", "29.0705, -261.589, -96.45, 0.59", "28.6793, -261.784, -96.4751, 0.66", "28.6025, -261.821, -96.4876, 0.66", "28.2055, -262.006, -96.567, 0.66", "27.5141, -262.359, -96.7271, 0.22", "27.2316, -262.512, -96.7953, 0.66", "26.9006, -262.692, -96.8788, 0.66", "26.0167, -263.169, -97.115, 0.22", "25.5037, -263.439, -97.2567, 0.22", "24.7877, -263.802, -97.4658, 0.22", "24.2861, -264.035, -97.6137, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "30.3051, -261.159, -96.403, 0.29", "30.622, -262.673, -96.7816, 0.29", "30.8687, -263.593, -97.063, 0.29", "30.9708, -264.051, -97.1988, 0.74", "31.0484, -264.458, -97.338, 0.88", "31.0655, -264.559, -97.3744, 0.88", "31.1608, -265.272, -97.6185, 0.88", "31.355, -266.51, -97.9698, 0.22", "31.4506, -267.218, -98.175, 0.22", "31.5493, -268.035, -98.4371, 0.88", "31.5604, -268.102, -98.4582, 0.88", "31.7387, -268.942, -98.7141, 0.74", "32.0584, -269.966, -98.9966, 0.37", "32.0913, -270.028, -99.0098, 0.37", "33.0831, -271.281, -99.1358, 0.29", "33.6314, -271.845, -99.1376, 0.59", "33.7968, -271.995, -99.1321, 0.59", "34.6169, -272.649, -99.0837, 0.88", "35.8446, -273.532, -98.8169, 0.74", "37.294, -274.504, -98.3607, 0.29", "38.0649, -274.991, -98.0665, 0.74", "38.1217, -275.028, -98.0433, 0.74", "38.5853, -275.321, -97.8331, 0.74", "40.6623, -276.573, -96.7042, 0.44", "41.3343, -276.966, -96.2474, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-148.014, 64.1735, 76.9983, 0.29", "-146.826, 63.536, 76.986, 0.29", "-146.691, 63.4594, 76.9766, 0.29", "-146.273, 63.2209, 76.9377, 0.29", "-146.206, 63.1824, 76.9315, 0.29", "-145.243, 62.6322, 76.8418, 0.29", "-144.825, 62.3935, 76.8029, 0.81", "-144.351, 62.1433, 76.6988, 1.03", "-144.285, 62.1045, 76.6833, 1.03", "-135.88, 56.157, 73.9584, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-148.014, 64.1735, 76.9983, 0.44", "-148.21, 65.0305, 76.992, 0.44", "-148.421, 65.9893, 76.9763, 0.37", "-148.77, 67.753, 76.9976, 0.29", "-149.087, 69.3213, 77.0498, 0.29", "-149.222, 70.0287, 77.0759, 0.74", "-149.285, 70.3754, 77.0891, 0.74", "-149.355, 70.8227, 77.0981, 0.44", "-149.468, 71.8566, 77.1169, 0.37", "-149.536, 72.9424, 77.1302, 0.29", "-149.587, 74.032, 77.1389, 0.29", "-149.589, 74.1418, 77.1409, 0.29", "-149.599, 75.6523, 77.1769, 0.29", "-149.597, 75.9396, 77.1818, 0.29", "-149.589, 76.8734, 77.1796, 0.29", "-149.587, 76.9205, 77.1807, 0.29", "-149.632, 77.8138, 77.2511, 0.29", "-149.728, 78.2865, 77.3053, 0.44", "-149.762, 78.3819, 77.3199, 0.44", "-149.908, 78.7195, 77.3701, 0.29", "-149.936, 78.7756, 77.3776, 0.29", "-150.395, 79.6381, 77.4333, 0.29", "-151.213, 81.092, 77.439, 0.29", "-151.305, 81.2612, 77.4365, 0.29", "-151.582, 81.7836, 77.4217, 0.74", "-151.803, 82.2193, 77.406, 0.88", "-152.24, 83.0935, 77.3701, 0.52", "-152.63, 83.8857, 77.3356, 0.37", "-153.174, 84.9821, 77.3099, 0.29", "-153.26, 85.1548, 77.31, 0.29", "-153.953, 86.5643, 77.3449, 0.29", "-154.01, 86.6828, 77.3517, 0.29", "-154.468, 87.6637, 77.4562, 0.29", "-154.644, 88.0428, 77.5169, 0.52", "-154.783, 88.342, 77.5868, 0.66", "-154.825, 88.4332, 77.6139, 0.66", "-154.974, 88.7666, 77.7499, 0.66", "-155.001, 88.8244, 77.7737, 0.66", "-155.307, 89.3954, 77.9937, 0.29", "-155.409, 89.5712, 78.0592, 0.22", "-155.607, 89.898, 78.1849, 0.52", "-155.714, 90.0827, 78.2508, 0.52", "-155.974, 90.5461, 78.4069, 0.29", "-156.31, 91.1733, 78.5862, 0.29", "-156.785, 92.1562, 78.8474, 0.29", "-156.812, 92.2167, 78.864, 0.29", "-157.228, 93.2436, 79.1439, 0.29", "-157.263, 93.3379, 79.1694, 0.29", "-157.646, 94.4671, 79.4639, 0.29", "-157.948, 95.4119, 79.6841, 0.29", "-157.992, 95.5493, 79.7032, 0.29", "-158.147, 96.0146, 79.7356, 0.29", "-158.16, 96.053, 79.7355, 0.29", "-158.369, 96.6552, 79.6984, 0.88", "-158.432, 96.8352, 79.6748, 0.88", "-158.73, 97.6848, 79.534, 0.22", "-159.018, 98.5167, 79.3672, 0.22", "-159.062, 98.644, 79.3396, 0.22", "-159.371, 99.5576, 79.1358, 0.22", "-159.384, 99.5967, 79.127, 0.22", "-159.831, 100.803, 78.7778, 0.52", "-160.179, 101.666, 78.4949, 0.29", "-160.349, 102.046, 78.3481, 0.37", "-160.384, 102.121, 78.3165, 0.37", "-160.59, 102.535, 78.1347, 0.37", "-161.254, 103.78, 77.5026, 0.22", "-161.662, 104.518, 77.1087, 0.22", "-161.683, 104.557, 77.0892, 0.22", "-161.88, 104.959, 76.8956, 0.52", "-162.148, 105.529, 76.6372, 0.66", "-162.679, 106.683, 76.085, 0.15", "-163.088, 107.639, 75.6415, 0.15", "-163.303, 108.111, 75.3854, 0.29", "-163.322, 108.15, 75.3633, 0.29", "-163.464, 108.428, 75.196, 0.29", "-163.924, 109.281, 74.6746, 0.44", "-164.061, 109.504, 74.5084, 0.44", "-164.445, 110.046, 74.084, 0.22", "-164.656, 110.342, 73.8707, 0.52", "-164.68, 110.377, 73.8472, 0.52", "-164.858, 110.639, 73.6968, 0.88", "-165.876, 112.227, 72.9828, 0.29", "-166.718, 113.562, 72.435, 0.29", "-166.988, 114.042, 72.2693, 0.29", "-167.007, 114.085, 72.2568, 0.29", "-167.339, 114.952, 72.048, 0.29", "-167.546, 115.746, 71.9084, 0.29", "-167.551, 115.785, 71.9049, 0.29", "-167.567, 116.979, 71.7645, 0.29", "-167.542, 117.873, 71.6507, 0.59", "-167.518, 118.318, 71.5895, 0.59", "-167.483, 119.088, 71.4842, 0.22", "-167.46, 119.957, 71.3697, 0.22", "-167.461, 120.065, 71.3564, 0.22", "-167.515, 121.393, 71.2082, 0.22", "-167.523, 121.496, 71.1978, 0.22", "-167.724, 123.579, 71.0043, 0.22", "-167.732, 123.633, 71.0001, 0.22", "-167.958, 124.864, 70.9213, 0.22", "-167.991, 125.006, 70.9145, 0.22", "-168.051, 125.21, 70.9088, 0.59", "-168.189, 125.629, 70.9028, 0.59", "-168.604, 126.646, 70.8332, 0.29", "-168.809, 127.101, 70.783, 0.59", "-169.153, 127.8, 70.6835, 0.52", "-169.449, 128.406, 70.5823, 0.74", "-169.702, 128.928, 70.4815, 0.74", "-170.183, 129.973, 70.2439, 0.22", "-170.371, 130.415, 70.1234, 0.44", "-170.528, 130.811, 70.0126, 0.74", "-170.611, 131.043, 69.9532, 1.03", "-170.624, 131.08, 69.9442, 1.03", "-170.788, 131.594, 69.8539, 1.03", "-170.801, 131.64, 69.8528, 1.03", "-170.999, 132.4, 69.8306, 0.37", "-171.202, 133.151, 69.8039, 0.29", "-172.239, 139.723, 69.5404, 0.29", "-173.854, 146.149, 70.2686, 0.29", "-175.218, 152.596, 71.2854, 0.29", "-176.082, 158.976, 73.0552, 0.29", "-176.21, 165.3, 75.2213, 0.29", "-176.683, 171.074, 78.6138, 0.29" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-135.88, 56.157, 73.9584, 0.22", "-127.073, 50.2452, 71.7701, 0.22", "-118.177, 44.1454, 70.7451, 0.22", "-108.663, 39.0337, 69.6156, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-135.88, 56.157, 73.9584, 0.22", "-129.873, 51.8445, 72.3884, 0.22", "-123.875, 47.4956, 70.8864, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "axon_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "axon_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_91", "dend_88", "dend_88", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_DBC_42ed26968e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_92, id: dend_92, parent: soma_0
create dend_92
public dend_92
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_92
create dend_98
public dend_98
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_102, id: dend_102, parent: dend_98
create dend_102
public dend_102
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_93
create dend_97
public dend_97
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_65, id: dend_65, parent: dend_41
create dend_65
public dend_65
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_87, id: dend_87, parent: dend_67
create dend_87
public dend_87
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_91, id: dend_91, parent: dend_87
create dend_91
public dend_91
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_72
create dend_86
public dend_86
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_83, id: dend_83, parent: dend_73
create dend_83
public dend_83
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_74
create dend_82
public dend_82
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_81, id: dend_81, parent: dend_75
create dend_81
public dend_81
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_92, dend_25, dend_0, axon_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, axon_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_107
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_92(0), soma_0(0.45000180399916434)
    connect dend_25(0), soma_0(0.45000180399916434)
    connect dend_0(0), soma_0(0.45000180399916434)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_102(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_65(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_87(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_91(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_86(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_83(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_81(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.46438, -10.9587, 0.660551, 2.48146 ) }
    soma_0 { pt3dadd( -1.32683, -9.87667, 0.597834, 3.97794 ) }
    soma_0 { pt3dadd( -1.18928, -8.79467, 0.535117, 5.03907 ) }
    soma_0 { pt3dadd( -1.05173, -7.71267, 0.4724, 6.13889 ) }
    soma_0 { pt3dadd( -0.914177, -6.63067, 0.409682, 7.21767 ) }
    soma_0 { pt3dadd( -0.776625, -5.54866, 0.346965, 8.03623 ) }
    soma_0 { pt3dadd( -0.639073, -4.46666, 0.284248, 8.69756 ) }
    soma_0 { pt3dadd( -0.501522, -3.38466, 0.221531, 9.05897 ) }
    soma_0 { pt3dadd( -0.36397, -2.30266, 0.158814, 9.32273 ) }
    soma_0 { pt3dadd( -0.226418, -1.22066, 0.0960968, 9.64559 ) }
    soma_0 { pt3dadd( -0.0888665, -0.138661, 0.0333797, 9.88524 ) }
    soma_0 { pt3dadd( 0.0486852, 0.943339, -0.0293375, 9.94228 ) }
    soma_0 { pt3dadd( 0.186237, 2.02534, -0.0920546, 10.0768 ) }
    soma_0 { pt3dadd( 0.323789, 3.10734, -0.154772, 10.303 ) }
    soma_0 { pt3dadd( 0.46134, 4.18934, -0.217489, 10.477 ) }
    soma_0 { pt3dadd( 0.598892, 5.27134, -0.280206, 10.0133 ) }
    soma_0 { pt3dadd( 0.736444, 6.35334, -0.342923, 9.03357 ) }
    soma_0 { pt3dadd( 0.873996, 7.43534, -0.40564, 7.79644 ) }
    soma_0 { pt3dadd( 1.01155, 8.51734, -0.468357, 6.40893 ) }
    soma_0 { pt3dadd( 1.1491, 9.59934, -0.531074, 4.35077 ) }
    soma_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 2.55388 ) }
    // Section: dend_92, id: dend_92, parent: soma_0 (entry count 21/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 2.53825, -1.03725, -8.8572, 1.11 ) }
    dend_92 { pt3dadd( 2.585, -1.88054, -8.96141, 1.11 ) }
    dend_92 { pt3dadd( 2.66485, -3.45619, -9.20275, 1.11 ) }
    dend_92 { pt3dadd( 2.71495, -4.34597, -9.37001, 1.03 ) }
    dend_92 { pt3dadd( 2.77954, -5.51863, -9.60167, 1.03 ) }
    dend_92 { pt3dadd( 2.83548, -6.95339, -10.0449, 1.03 ) }
    dend_92 { pt3dadd( 2.83653, -8.11536, -10.5056, 1.18 ) }
    dend_92 { pt3dadd( 2.79878, -9.23811, -11.0451, 1.18 ) }
    dend_92 { pt3dadd( 2.7204, -10.3745, -11.7082, 1.4 ) }
    dend_92 { pt3dadd( 2.62363, -11.0304, -12.2516, 1.55 ) }
    dend_92 { pt3dadd( 2.17466, -13.1591, -14.4463, 1.25 ) }
    dend_92 { pt3dadd( 1.90325, -14.2428, -15.879, 1.25 ) }
    dend_92 { pt3dadd( 1.78754, -14.7064, -16.6332, 1.47 ) }
    dend_92 { pt3dadd( 1.60005, -15.7478, -18.5095, 1.69 ) }
    dend_92 { pt3dadd( 1.40623, -17.8329, -22.3936, 1.69 ) }
    dend_92 { pt3dadd( 1.40644, -17.8607, -22.4448, 1.69 ) }
    dend_92 { pt3dadd( 1.60509, -19.6618, -25.5624, 1.33 ) }
    dend_92 { pt3dadd( 1.82463, -20.8782, -27.4828, 1.11 ) }
    dend_92 { pt3dadd( 2.04933, -22.0186, -29.0426, 1.25 ) }
    dend_92 { pt3dadd( 2.26245, -23.1317, -30.1837, 1.4 ) }
    dend_92 { pt3dadd( 2.35371, -23.8925, -30.6993, 1.4 ) }
    dend_92 { pt3dadd( 2.35441, -24.8585, -31.2435, 1.33 ) }
    dend_92 { pt3dadd( 2.1538, -26.1627, -31.7527, 1.18 ) }
    dend_92 { pt3dadd( 1.84979, -27.1489, -32.1345, 1.18 ) }
    dend_92 { pt3dadd( 1.34596, -28.3229, -32.6792, 1.33 ) }
    dend_92 { pt3dadd( 0.667867, -29.817, -33.4781, 1.03 ) }
    dend_92 { pt3dadd( 0.20201, -30.9387, -34.1085, 1.25 ) }
    dend_92 { pt3dadd( -0.0391821, -31.6421, -34.5089, 1.62 ) }
    dend_92 { pt3dadd( -0.473215, -33.2649, -35.4183, 1.62 ) }
    dend_92 { pt3dadd( -0.686787, -34.4294, -36.0221, 1.03 ) }
    dend_92 { pt3dadd( -0.862985, -36.363, -36.8823, 1.03 ) }
    dend_92 { pt3dadd( -0.883003, -37.8303, -37.4145, 1.18 ) }
    dend_92 { pt3dadd( -0.821772, -39.2046, -37.8358, 1.18 ) }
    dend_92 { pt3dadd( -0.781288, -39.6833, -37.9659, 1.55 ) }
    dend_92 { pt3dadd( -0.699648, -40.4925, -38.1376, 1.55 ) }
    dend_92 { pt3dadd( -0.601975, -41.5994, -38.3779, 1.69 ) }
    dend_92 { pt3dadd( -0.531812, -42.7443, -38.7103, 1.84 ) }
    dend_92 { pt3dadd( -0.493825, -43.7871, -39.1175, 1.47 ) }
    dend_92 { pt3dadd( -0.45892, -45.2133, -39.7477, 1.18 ) }
    dend_92 { pt3dadd( -0.45855, -46.4402, -40.3457, 1.18 ) }
    dend_92 { pt3dadd( -0.487679, -47.8398, -41.0902, 1.18 ) }
    dend_92 { pt3dadd( -0.490859, -49.3961, -41.8502, 1.33 ) }
    dend_92 { pt3dadd( -0.420741, -50.6891, -42.3426, 1.03 ) }
    dend_92 { pt3dadd( -0.318114, -51.6795, -42.6959, 1.03 ) }
    dend_92 { pt3dadd( -0.168517, -52.7168, -43.0172, 1.03 ) }
    dend_92 { pt3dadd( 0.0307639, -54.0213, -43.3933, 1.33 ) }
    dend_92 { pt3dadd( 0.378505, -56.6929, -44.1578, 1.33 ) }
    dend_92 { pt3dadd( 0.60536, -59.0398, -44.905, 1.33 ) }
    dend_92 { pt3dadd( 0.718113, -60.7114, -45.5168, 1.18 ) }
    dend_92 { pt3dadd( 0.776007, -61.6641, -45.9155, 1.4 ) }
    dend_92 { pt3dadd( 0.901467, -63.4124, -46.8025, 1.4 ) }
    dend_92 { pt3dadd( 1.03722, -65.2412, -47.9071, 1.33 ) }
    dend_92 { pt3dadd( 1.1626, -66.8549, -49.0961, 1.18 ) }
    dend_92 { pt3dadd( 1.16915, -66.9153, -49.1443, 1.18 ) }
    dend_92 { pt3dadd( 1.33004, -67.9873, -49.9941, 1.47 ) }
    dend_92 { pt3dadd( 1.64206, -69.5235, -51.2466, 1.84 ) }
    dend_92 { pt3dadd( 1.90778, -70.4587, -51.9877, 1.62 ) }
    dend_92 { pt3dadd( 2.31161, -71.5832, -52.8446, 1.55 ) }
    dend_92 { pt3dadd( 2.80755, -72.8952, -53.8382, 1.33 ) }
    dend_92 { pt3dadd( 3.19281, -74.0316, -54.726, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.511751, -9.861, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.495567, -9.91906, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.363895, -10.3914, 0.0228061, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 84/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.07825, 10.4385, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 1.44377, 11.1833, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 2.13325, 12.5707, 0.142806, 2.14 ) }
    dend_0 { pt3dadd( 2.61395, 13.5692, 0.147596, 1.92 ) }
    dend_0 { pt3dadd( 2.79364, 13.9536, 0.150543, 1.92 ) }
    dend_0 { pt3dadd( 3.05725, 14.5026, 0.155554, 1.92 ) }
    dend_0 { pt3dadd( 3.23488, 14.8611, 0.158987, 1.92 ) }
    dend_0 { pt3dadd( 3.51577, 15.3983, 0.164882, 1.92 ) }
    dend_0 { pt3dadd( 3.74278, 15.819, 0.169628, 1.99 ) }
    dend_0 { pt3dadd( 4.08401, 16.4503, 0.17591, 1.99 ) }
    dend_0 { pt3dadd( 4.58599, 17.4299, 0.183994, 1.99 ) }
    dend_0 { pt3dadd( 4.99823, 18.2447, 0.189505, 1.99 ) }
    dend_0 { pt3dadd( 5.43373, 19.146, 0.193961, 1.99 ) }
    dend_0 { pt3dadd( 5.91122, 20.2163, 0.176381, 2.21 ) }
    dend_0 { pt3dadd( 6.31423, 21.246, 0.140635, 2.21 ) }
    dend_0 { pt3dadd( 6.56834, 22.0185, 0.0906724, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 6.65561, 22.3551, 0.0544847, 1.99 ) }
    dend_0 { pt3dadd( 6.81197, 23.1076, -0.0484912, 1.99 ) }
    dend_0 { pt3dadd( 6.96264, 24.0731, -0.196777, 2.06 ) }
    dend_0 { pt3dadd( 7.10107, 25.2808, -0.415038, 1.92 ) }
    dend_0 { pt3dadd( 7.20488, 26.4482, -0.66276, 1.92 ) }
    dend_0 { pt3dadd( 7.30868, 27.7521, -0.990397, 1.99 ) }
    dend_0 { pt3dadd( 7.3551, 28.4362, -1.18993, 2.14 ) }
    dend_0 { pt3dadd( 7.42925, 29.5815, -1.54058, 2.14 ) }
    dend_0 { pt3dadd( 7.51535, 30.9928, -1.98814, 1.99 ) }
    dend_0 { pt3dadd( 7.55539, 31.8525, -2.28956, 2.06 ) }
    dend_0 { pt3dadd( 7.57204, 32.8805, -2.67098, 2.43 ) }
    dend_0 { pt3dadd( 7.57365, 33.6783, -3.0008, 2.65 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 0.551589 ) }
    axon_0 { pt3dadd( 3.17833, 25.5615, -0.593792, 0.551589 ) }
    axon_0 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.551589 ) }
    // Section: dend_98, id: dend_98, parent: dend_92 (entry count 15/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 3.19281, -74.0316, -54.726, 0.52 ) }
    dend_98 { pt3dadd( 2.11714, -75.3547, -56.1932, 0.52 ) }
    dend_98 { pt3dadd( 1.41071, -76.453, -57.3363, 0.52 ) }
    dend_98 { pt3dadd( 1.04505, -77.3205, -58.2104, 0.52 ) }
    dend_98 { pt3dadd( 0.733968, -78.6329, -59.5216, 0.52 ) }
    dend_98 { pt3dadd( 0.668909, -79.2883, -60.1861, 1.11 ) }
    dend_98 { pt3dadd( 0.649123, -80.0865, -60.9583, 1.4 ) }
    dend_98 { pt3dadd( 0.772435, -80.7055, -61.5057, 1.69 ) }
    dend_98 { pt3dadd( 1.17009, -81.8745, -62.4726, 1.62 ) }
    dend_98 { pt3dadd( 1.58545, -82.8314, -63.2407, 1.4 ) }
    dend_98 { pt3dadd( 2.19724, -84.1082, -64.2145, 0.88 ) }
    dend_98 { pt3dadd( 2.58217, -84.9138, -64.8242, 0.66 ) }
    dend_98 { pt3dadd( 3.11847, -86.0777, -65.6389, 0.66 ) }
    dend_98 { pt3dadd( 3.42946, -86.7798, -66.1264, 0.88 ) }
    dend_98 { pt3dadd( 3.78006, -87.6117, -66.6576, 1.11 ) }
    dend_98 { pt3dadd( 4.09928, -88.3085, -67.0628, 1.18 ) }
    dend_98 { pt3dadd( 4.44757, -88.9777, -67.4231, 1.18 ) }
    dend_98 { pt3dadd( 4.74202, -89.4863, -67.7335, 1.18 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 33/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 3.19281, -74.0316, -54.726, 0.66 ) }
    dend_93 { pt3dadd( 2.6744, -75.1882, -54.2373, 0.66 ) }
    dend_93 { pt3dadd( 2.16775, -76.0091, -53.8068, 0.52 ) }
    dend_93 { pt3dadd( 2.12477, -76.0678, -53.7766, 0.52 ) }
    dend_93 { pt3dadd( 1.31044, -77.074, -53.2548, 0.74 ) }
    dend_93 { pt3dadd( 0.516094, -78.0406, -52.7996, 0.88 ) }
    dend_93 { pt3dadd( -0.0866871, -78.7674, -52.4423, 0.74 ) }
    dend_93 { pt3dadd( -0.934121, -79.7334, -51.8928, 0.37 ) }
    dend_93 { pt3dadd( -1.53681, -80.4483, -51.4458, 1.18 ) }
    dend_93 { pt3dadd( -2.15043, -81.2851, -50.9031, 1.4 ) }
    dend_93 { pt3dadd( -2.76287, -82.2471, -50.2612, 0.96 ) }
    dend_93 { pt3dadd( -3.25632, -83.2807, -49.4325, 0.74 ) }
    dend_93 { pt3dadd( -3.59651, -84.3305, -48.4376, 0.29 ) }
    dend_93 { pt3dadd( -3.7851, -85.3186, -47.4345, 0.74 ) }
    dend_93 { pt3dadd( -3.84526, -85.9833, -46.7304, 0.96 ) }
    dend_93 { pt3dadd( -3.84627, -86.0305, -46.6827, 0.96 ) }
    dend_93 { pt3dadd( -3.84833, -87.9012, -44.9816, 0.59 ) }
    dend_93 { pt3dadd( -3.87622, -88.7524, -44.393, 1.11 ) }
    dend_93 { pt3dadd( -3.94153, -89.4495, -44.0227, 1.25 ) }
    dend_93 { pt3dadd( -4.08468, -90.1546, -43.7667, 1.18 ) }
    dend_93 { pt3dadd( -4.46735, -91.3955, -43.4149, 0.81 ) }
    dend_93 { pt3dadd( -4.87704, -92.4664, -43.1939, 0.59 ) }
    dend_93 { pt3dadd( -5.40548, -93.6051, -43.0751, 0.44 ) }
    dend_93 { pt3dadd( -5.44748, -93.6858, -43.0667, 0.44 ) }
    dend_93 { pt3dadd( -5.96709, -94.5273, -42.9443, 0.29 ) }
    dend_93 { pt3dadd( -6.86502, -95.7774, -42.7232, 0.29 ) }
    dend_93 { pt3dadd( -7.45085, -96.5398, -42.5719, 0.81 ) }
    dend_93 { pt3dadd( -7.89286, -97.1477, -42.4523, 1.33 ) }
    dend_93 { pt3dadd( -8.32811, -97.8372, -42.3751, 1.33 ) }
    dend_93 { pt3dadd( -8.92705, -99.0192, -42.4082, 0.96 ) }
    dend_93 { pt3dadd( -9.23547, -99.8623, -42.5434, 0.81 ) }
    dend_93 { pt3dadd( -9.46275, -100.782, -42.7953, 0.81 ) }
    dend_93 { pt3dadd( -9.65511, -101.913, -43.1801, 0.74 ) }
    dend_93 { pt3dadd( -9.82278, -103.433, -43.7578, 0.44 ) }
    dend_93 { pt3dadd( -9.91016, -104.8, -44.3596, 0.66 ) }
    dend_93 { pt3dadd( -9.94027, -105.683, -44.8005, 0.74 ) }
    dend_93 { pt3dadd( -9.98369, -106.482, -45.2082, 1.03 ) }
    dend_93 { pt3dadd( -10.0857, -107.412, -45.6753, 1.25 ) }
    dend_93 { pt3dadd( -10.2641, -108.385, -46.1171, 1.11 ) }
    dend_93 { pt3dadd( -10.5598, -109.572, -46.5788, 0.59 ) }
    dend_93 { pt3dadd( -10.8326, -110.538, -46.9142, 0.59 ) }
    dend_93 { pt3dadd( -11.1338, -111.553, -47.2815, 0.66 ) }
    dend_93 { pt3dadd( -11.355, -112.289, -47.5438, 0.66 ) }
    dend_93 { pt3dadd( -11.674, -113.417, -47.9075, 0.52 ) }
    dend_93 { pt3dadd( -11.9389, -114.465, -48.2352, 0.52 ) }
    dend_93 { pt3dadd( -12.1273, -115.39, -48.4925, 0.59 ) }
    dend_93 { pt3dadd( -12.3014, -116.587, -48.8493, 1.25 ) }
    dend_93 { pt3dadd( -12.3454, -117.048, -48.9982, 1.4 ) }
    dend_93 { pt3dadd( -12.3914, -117.884, -49.278, 1.4 ) }
    dend_93 { pt3dadd( -12.4486, -119.106, -49.6318, 0.88 ) }
    dend_93 { pt3dadd( -12.4931, -119.888, -49.8139, 0.52 ) }
    dend_93 { pt3dadd( -12.6315, -121.242, -50.0686, 0.52 ) }
    dend_93 { pt3dadd( -12.7934, -122.088, -50.0956, 0.52 ) }
    dend_93 { pt3dadd( -12.818, -122.175, -50.0844, 0.52 ) }
    dend_93 { pt3dadd( -13.2659, -123.47, -49.6688, 0.52 ) }
    dend_93 { pt3dadd( -13.2899, -123.539, -49.6383, 0.52 ) }
    dend_93 { pt3dadd( -13.4797, -124.096, -49.3545, 0.96 ) }
    dend_93 { pt3dadd( -13.9312, -125.593, -48.5325, 1.33 ) }
    dend_93 { pt3dadd( -14.2137, -126.731, -47.9659, 0.66 ) }
    dend_93 { pt3dadd( -14.4497, -127.842, -47.4984, 0.59 ) }
    dend_93 { pt3dadd( -14.644, -128.922, -47.1455, 0.74 ) }
    dend_93 { pt3dadd( -14.6598, -129.009, -47.1222, 0.74 ) }
    dend_93 { pt3dadd( -14.8333, -129.924, -46.9469, 0.74 ) }
    dend_93 { pt3dadd( -15.0003, -130.653, -46.883, 1.03 ) }
    dend_93 { pt3dadd( -15.1981, -131.243, -46.8486, 1.25 ) }
    dend_93 { pt3dadd( -15.5203, -131.993, -46.8373, 1.18 ) }
    dend_93 { pt3dadd( -15.8744, -132.678, -46.8394, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_93 { pt3dadd( -16.2786, -133.371, -46.8568, 0.29 ) }
    dend_93 { pt3dadd( -16.6527, -133.946, -46.8867, 0.29 ) }
    dend_93 { pt3dadd( -16.9524, -134.383, -46.9146, 0.81 ) }
    dend_93 { pt3dadd( -17.2119, -134.762, -46.9421, 1.11 ) }
    dend_93 { pt3dadd( -17.5886, -135.358, -46.9893, 1.11 ) }
    dend_93 { pt3dadd( -17.9797, -136.124, -47.0436, 0.59 ) }
    dend_93 { pt3dadd( -18.006, -136.209, -47.0481, 0.59 ) }
    dend_93 { pt3dadd( -18.0818, -136.973, -47.0726, 0.44 ) }
    dend_93 { pt3dadd( -18.0729, -137.051, -47.0733, 0.44 ) }
    dend_93 { pt3dadd( -17.835, -137.838, -47.0632, 0.44 ) }
    dend_93 { pt3dadd( -17.5396, -138.501, -47.0588, 0.81 ) }
    dend_93 { pt3dadd( -17.1822, -139.185, -47.0572, 1.11 ) }
    dend_93 { pt3dadd( -16.9529, -139.615, -47.0754, 1.11 ) }
    dend_93 { pt3dadd( -16.636, -140.218, -47.1338, 0.88 ) }
    dend_93 { pt3dadd( -16.3746, -140.774, -47.2102, 0.66 ) }
    dend_93 { pt3dadd( -16.0729, -141.509, -47.3364, 0.66 ) }
    dend_93 { pt3dadd( -15.8144, -142.267, -47.4792, 0.44 ) }
    dend_93 { pt3dadd( -15.5931, -143.086, -47.635, 0.29 ) }
    dend_93 { pt3dadd( -15.4191, -144.015, -47.8039, 0.88 ) }
    dend_93 { pt3dadd( -15.3474, -144.724, -47.9155, 0.88 ) }
    dend_93 { pt3dadd( -15.3396, -145.295, -47.9885, 0.88 ) }
    dend_93 { pt3dadd( -15.3884, -146.102, -48.0609, 0.74 ) }
    dend_93 { pt3dadd( -15.4806, -146.911, -48.1108, 0.37 ) }
    dend_93 { pt3dadd( -15.5897, -147.668, -48.1274, 0.29 ) }
    dend_93 { pt3dadd( -15.759, -148.773, -48.132, 0.29 ) }
    dend_93 { pt3dadd( -15.8934, -149.676, -48.1355, 0.81 ) }
    dend_93 { pt3dadd( -16.0012, -150.511, -48.138, 1.03 ) }
    dend_93 { pt3dadd( -16.0084, -150.601, -48.138, 1.03 ) }
    dend_93 { pt3dadd( -16.0158, -151.324, -48.1347, 1.18 ) }
    dend_93 { pt3dadd( -15.9889, -152.135, -48.1299, 1.33 ) }
    dend_93 { pt3dadd( -15.9444, -152.844, -48.1259, 1.33 ) }
    dend_93 { pt3dadd( -15.855, -153.924, -48.1285, 0.59 ) }
    dend_93 { pt3dadd( -15.7669, -154.992, -48.1386, 0.44 ) }
    dend_93 { pt3dadd( -15.6972, -155.943, -48.153, 0.44 ) }
    dend_93 { pt3dadd( -15.6386, -156.814, -48.1673, 0.81 ) }
    dend_93 { pt3dadd( -15.5826, -157.791, -48.1843, 1.11 ) }
    dend_93 { pt3dadd( -15.5578, -158.691, -48.2021, 1.11 ) }
    dend_93 { pt3dadd( -15.583, -159.252, -48.217, 1.25 ) }
    dend_93 { pt3dadd( -15.7174, -160.142, -48.2483, 1.11 ) }
    dend_93 { pt3dadd( -15.982, -161.241, -48.3191, 0.66 ) }
    dend_93 { pt3dadd( -16.2178, -162.021, -48.3873, 0.37 ) }
    dend_93 { pt3dadd( -16.503, -162.764, -48.4687, 0.29 ) }
    dend_93 { pt3dadd( -16.923, -163.831, -48.5923, 0.37 ) }
    dend_93 { pt3dadd( -17.157, -164.593, -48.7196, 0.52 ) }
    dend_93 { pt3dadd( -17.2968, -165.408, -48.8553, 0.88 ) }
    dend_93 { pt3dadd( -17.3155, -165.966, -48.9416, 1.03 ) }
    dend_93 { pt3dadd( -17.2925, -166.209, -48.9752, 1.03 ) }
    dend_93 { pt3dadd( -17.1186, -167.472, -49.0443, 0.74 ) }
    dend_93 { pt3dadd( -16.908, -168.908, -49.0412, 0.59 ) }
    dend_93 { pt3dadd( -16.7664, -170.038, -49.0054, 0.59 ) }
    dend_93 { pt3dadd( -16.7085, -170.64, -48.9407, 1.4 ) }
    dend_93 { pt3dadd( -16.6533, -171.323, -48.8395, 1.77 ) }
    dend_93 { pt3dadd( -16.5516, -173.205, -48.4457, 0.81 ) }
    dend_93 { pt3dadd( -16.5373, -174.165, -48.1827, 0.81 ) }
    dend_93 { pt3dadd( -16.564, -175.483, -47.6968, 0.81 ) }
    dend_93 { pt3dadd( -16.5765, -176.768, -47.1724, 1.11 ) }
    dend_93 { pt3dadd( -16.5624, -177.405, -46.8881, 1.11 ) }
    dend_93 { pt3dadd( -16.4982, -178.411, -46.4145, 0.88 ) }
    dend_93 { pt3dadd( -16.4886, -178.53, -46.3556, 0.88 ) }
    dend_93 { pt3dadd( -16.4641, -179.527, -45.8431, 0.59 ) }
    dend_93 { pt3dadd( -16.5383, -180.557, -45.3457, 0.59 ) }
    dend_93 { pt3dadd( -16.63, -181.367, -45.0023, 0.52 ) }
    dend_93 { pt3dadd( -16.7318, -182.059, -44.7241, 0.52 ) }
    dend_93 { pt3dadd( -16.9851, -183.692, -44.1544, 0.74 ) }
    dend_93 { pt3dadd( -17.1099, -184.444, -43.9156, 1.33 ) }
    dend_93 { pt3dadd( -17.2988, -185.422, -43.6542, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 66/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.363895, -10.3914, 0.0228061, 2.73 ) }
    dend_41 { pt3dadd( -0.0846646, -12.5439, 0.107562, 2.73 ) }
    dend_41 { pt3dadd( 0.174031, -14.7449, 0.187782, 2.14 ) }
    dend_41 { pt3dadd( 0.351102, -16.4785, 0.244554, 2.14 ) }
    dend_41 { pt3dadd( 0.529696, -18.4629, 0.303751, 2.28 ) }
    dend_41 { pt3dadd( 0.688692, -20.3593, 0.332794, 2.14 ) }
    dend_41 { pt3dadd( 0.893728, -22.8186, 0.352878, 1.92 ) }
    dend_41 { pt3dadd( 1.02379, -24.6259, 0.327656, 2.06 ) }
    dend_41 { pt3dadd( 1.17008, -27.1389, 0.246646, 1.84 ) }
    dend_41 { pt3dadd( 1.25449, -29.4831, 0.095846, 1.84 ) }
    dend_41 { pt3dadd( 1.28734, -31.251, -0.0628267, 1.84 ) }
    dend_41 { pt3dadd( 1.28508, -33.4781, -0.334163, 1.92 ) }
    dend_41 { pt3dadd( 1.21949, -35.6173, -0.703749, 1.92 ) }
    dend_41 { pt3dadd( 1.08477, -37.3805, -1.10374, 1.92 ) }
    dend_41 { pt3dadd( 0.823547, -39.1507, -1.58606, 1.84 ) }
    dend_41 { pt3dadd( 0.431992, -41.0436, -2.16185, 1.84 ) }
    dend_41 { pt3dadd( 0.12536, -42.1824, -2.54422, 1.77 ) }
    dend_41 { pt3dadd( -0.619716, -44.5539, -3.4117, 1.69 ) }
    dend_41 { pt3dadd( -1.48977, -47.0315, -4.35708, 1.69 ) }
    dend_41 { pt3dadd( -2.26094, -49.0501, -5.17281, 1.84 ) }
    dend_41 { pt3dadd( -2.29212, -49.121, -5.20194, 1.84 ) }
    dend_41 { pt3dadd( -2.77124, -50.047, -5.61905, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 88/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.363895, -10.3914, 0.0228061, 0.96 ) }
    dend_26 { pt3dadd( -0.57252, -11.576, -0.626394, 0.96 ) }
    dend_26 { pt3dadd( -0.817819, -12.766, -1.1487, 1.25 ) }
    dend_26 { pt3dadd( -1.16635, -14.1706, -1.64201, 0.96 ) }
    dend_26 { pt3dadd( -1.42521, -15.0856, -1.85189, 1.25 ) }
    dend_26 { pt3dadd( -1.63549, -15.7324, -1.95297, 1.47 ) }
    dend_26 { pt3dadd( -1.92637, -16.568, -2.05166, 1.11 ) }
    dend_26 { pt3dadd( -2.33839, -17.6412, -2.07527, 0.96 ) }
    dend_26 { pt3dadd( -2.79898, -18.6658, -2.00378, 1.11 ) }
    dend_26 { pt3dadd( -3.48075, -19.9616, -1.84781, 1.11 ) }
    dend_26 { pt3dadd( -3.98203, -20.8009, -1.75072, 1.11 ) }
    dend_26 { pt3dadd( -4.02488, -20.8654, -1.74376, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( -4.62154, -21.644, -1.67166, 0.96 ) }
    dend_26 { pt3dadd( -4.6502, -21.6764, -1.67069, 0.96 ) }
    dend_26 { pt3dadd( -5.24733, -22.2363, -1.70707, 1.03 ) }
    dend_26 { pt3dadd( -5.69675, -22.6207, -1.78269, 1.25 ) }
    dend_26 { pt3dadd( -5.74031, -22.6606, -1.79089, 1.25 ) }
    dend_26 { pt3dadd( -6.35103, -23.2473, -1.91395, 0.88 ) }
    dend_26 { pt3dadd( -6.93064, -23.8427, -2.04322, 0.88 ) }
    dend_26 { pt3dadd( -7.6682, -24.6516, -2.24336, 1.11 ) }
    dend_26 { pt3dadd( -8.24694, -25.3452, -2.42324, 1.11 ) }
    dend_26 { pt3dadd( -8.79587, -26.0511, -2.61287, 1.25 ) }
    dend_26 { pt3dadd( -8.84701, -26.127, -2.63205, 1.25 ) }
    dend_26 { pt3dadd( -9.32162, -26.986, -2.85109, 0.96 ) }
    dend_26 { pt3dadd( -9.74098, -27.8847, -3.0661, 0.96 ) }
    dend_26 { pt3dadd( -10.0484, -28.6373, -3.23667, 1.03 ) }
    dend_26 { pt3dadd( -10.0698, -28.6911, -3.24802, 1.03 ) }
    dend_26 { pt3dadd( -10.4454, -29.6278, -3.42915, 1.03 ) }
    dend_26 { pt3dadd( -10.7362, -30.3595, -3.54947, 1.03 ) }
    dend_26 { pt3dadd( -10.9877, -31.0123, -3.61941, 1.25 ) }
    dend_26 { pt3dadd( -11.2451, -31.7015, -3.6543, 1.62 ) }
    dend_26 { pt3dadd( -11.6456, -32.7358, -3.67093, 1.25 ) }
    dend_26 { pt3dadd( -11.9523, -33.4959, -3.65974, 1.18 ) }
    dend_26 { pt3dadd( -12.1981, -34.0447, -3.61123, 1.18 ) }
    dend_26 { pt3dadd( -12.5194, -34.7124, -3.49859, 1.33 ) }
    dend_26 { pt3dadd( -12.9274, -35.4755, -3.32676, 1.33 ) }
    dend_26 { pt3dadd( -13.3094, -36.1409, -3.16586, 1.03 ) }
    dend_26 { pt3dadd( -13.3329, -36.1787, -3.15621, 1.03 ) }
    dend_26 { pt3dadd( -13.7759, -36.877, -3.03186, 0.81 ) }
    dend_26 { pt3dadd( -14.1154, -37.4149, -3.01108, 0.66 ) }
    dend_26 { pt3dadd( -14.4631, -37.9639, -3.09804, 0.81 ) }
    dend_26 { pt3dadd( -14.8957, -38.6497, -3.35183, 1.03 ) }
    dend_26 { pt3dadd( -15.1223, -39.0261, -3.54666, 1.33 ) }
    dend_26 { pt3dadd( -15.3849, -39.5341, -3.86085, 1.62 ) }
    dend_26 { pt3dadd( -15.6423, -40.135, -4.26801, 1.55 ) }
    dend_26 { pt3dadd( -15.8851, -40.8103, -4.70746, 1.18 ) }
    dend_26 { pt3dadd( -16.1401, -41.6179, -5.17727, 0.96 ) }
    dend_26 { pt3dadd( -16.1532, -41.6631, -5.20007, 0.96 ) }
    dend_26 { pt3dadd( -16.4318, -42.7119, -5.65631, 0.88 ) }
    dend_26 { pt3dadd( -16.6587, -43.6168, -5.96751, 0.88 ) }
    dend_26 { pt3dadd( -16.8298, -44.4093, -6.17057, 1.18 ) }
    dend_26 { pt3dadd( -16.9767, -45.2091, -6.33356, 1.4 ) }
    dend_26 { pt3dadd( -17.1408, -46.1, -6.49495, 1.4 ) }
    dend_26 { pt3dadd( -17.2784, -46.7167, -6.61698, 1.18 ) }
    dend_26 { pt3dadd( -17.4818, -47.4233, -6.76207, 0.96 ) }
    dend_26 { pt3dadd( -17.7179, -48.0579, -6.9215, 1.11 ) }
    dend_26 { pt3dadd( -18.1116, -48.8503, -7.20242, 0.88 ) }
    dend_26 { pt3dadd( -18.4567, -49.4577, -7.44928, 0.74 ) }
    dend_26 { pt3dadd( -18.8742, -50.059, -7.72741, 0.96 ) }
    dend_26 { pt3dadd( -19.2028, -50.4493, -7.94483, 1.25 ) }
    dend_26 { pt3dadd( -19.707, -50.9283, -8.27275, 1.33 ) }
    dend_26 { pt3dadd( -20.3783, -51.4186, -8.67645, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.57365, 33.6783, -3.0008, 1.4 ) }
    dend_14 { pt3dadd( 7.18869, 34.9595, -3.57725, 1.4 ) }
    dend_14 { pt3dadd( 6.96314, 35.859, -3.89921, 1.4 ) }
    dend_14 { pt3dadd( 6.63623, 37.181, -4.1682, 1.25 ) }
    dend_14 { pt3dadd( 6.58201, 37.3912, -4.17429, 1.25 ) }
    dend_14 { pt3dadd( 6.41458, 38.0323, -4.13378, 1.03 ) }
    dend_14 { pt3dadd( 6.21218, 38.8062, -4.05323, 1.03 ) }
    dend_14 { pt3dadd( 6.03653, 39.5589, -3.88927, 1.18 ) }
    dend_14 { pt3dadd( 5.72209, 40.7498, -3.44572, 1.33 ) }
    dend_14 { pt3dadd( 5.40389, 41.8428, -2.88876, 1.33 ) }
    dend_14 { pt3dadd( 5.18221, 42.612, -2.46665, 1.47 ) }
    dend_14 { pt3dadd( 5.03315, 43.1802, -2.14829, 1.47 ) }
    dend_14 { pt3dadd( 4.86543, 43.9672, -1.73336, 1.47 ) }
    dend_14 { pt3dadd( 4.60098, 45.6686, -0.941242, 1.4 ) }
    dend_14 { pt3dadd( 4.50297, 46.7359, -0.525534, 1.4 ) }
    dend_14 { pt3dadd( 4.47709, 47.4393, -0.300817, 1.4 ) }
    dend_14 { pt3dadd( 4.48825, 48.411, -0.034518, 1.62 ) }
    dend_14 { pt3dadd( 4.54686, 49.5364, 0.205522, 1.18 ) }
    dend_14 { pt3dadd( 4.64103, 50.4503, 0.319793, 1.18 ) }
    dend_14 { pt3dadd( 4.65235, 50.5234, 0.320995, 1.18 ) }
    dend_14 { pt3dadd( 4.82528, 51.7314, 0.300712, 1.18 ) }
    dend_14 { pt3dadd( 4.93776, 52.7003, 0.281352, 1.47 ) }
    dend_14 { pt3dadd( 4.96578, 53.0041, 0.274167, 1.47 ) }
    dend_14 { pt3dadd( 5.05186, 54.0338, 0.249394, 1.4 ) }
    dend_14 { pt3dadd( 5.14266, 55.1245, 0.2253, 1.33 ) }
    dend_14 { pt3dadd( 5.24719, 56.4323, 0.197613, 1.33 ) }
    dend_14 { pt3dadd( 5.33317, 57.6621, 0.172759, 1.62 ) }
    dend_14 { pt3dadd( 5.37597, 58.5567, 0.151847, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 78/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.57365, 33.6783, -3.0008, 1.18 ) }
    dend_1 { pt3dadd( 8.56032, 33.8723, -2.80518, 1.18 ) }
    dend_1 { pt3dadd( 9.48559, 34.0076, -2.47256, 0.96 ) }
    dend_1 { pt3dadd( 9.99199, 34.0718, -2.27784, 1.25 ) }
    dend_1 { pt3dadd( 10.0503, 34.0816, -2.25094, 1.25 ) }
    dend_1 { pt3dadd( 10.896, 34.2526, -1.85568, 1.25 ) }
    dend_1 { pt3dadd( 11.6823, 34.4539, -1.49344, 1.25 ) }
    dend_1 { pt3dadd( 13.1026, 34.8465, -0.84187, 1.18 ) }
    dend_1 { pt3dadd( 13.7605, 35.0623, -0.547341, 0.81 ) }
    dend_1 { pt3dadd( 14.6705, 35.4209, -0.131367, 0.96 ) }
    dend_1 { pt3dadd( 15.3683, 35.7703, 0.160496, 0.96 ) }
    dend_1 { pt3dadd( 15.9176, 36.1554, 0.346085, 0.96 ) }
    dend_1 { pt3dadd( 15.9546, 36.1874, 0.351905, 0.96 ) }
    dend_1 { pt3dadd( 16.5514, 36.7491, 0.303717, 0.96 ) }
    dend_1 { pt3dadd( 16.5913, 36.7886, 0.296847, 0.96 ) }
    dend_1 { pt3dadd( 17.1163, 37.3077, 0.154015, 1.18 ) }
    dend_1 { pt3dadd( 17.7969, 37.9777, -0.0368534, 1.4 ) }
    dend_1 { pt3dadd( 18.3628, 38.5083, -0.191871, 1.33 ) }
    dend_1 { pt3dadd( 18.4282, 38.5669, -0.205375, 1.33 ) }
    dend_1 { pt3dadd( 19.076, 39.0999, -0.28828, 1.18 ) }
    dend_1 { pt3dadd( 19.1896, 39.1789, -0.284568, 1.18 ) }
    dend_1 { pt3dadd( 19.699, 39.4815, -0.196307, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 19.8377, 39.5507, -0.145218, 1.18 ) }
    dend_1 { pt3dadd( 20.5459, 39.8752, 0.208871, 0.96 ) }
    dend_1 { pt3dadd( 21.2308, 40.1853, 0.600118, 0.96 ) }
    dend_1 { pt3dadd( 22.1798, 40.6459, 1.23132, 1.03 ) }
    dend_1 { pt3dadd( 22.25, 40.6861, 1.27934, 1.03 ) }
    dend_1 { pt3dadd( 23.2924, 41.4147, 1.99412, 1.03 ) }
    dend_1 { pt3dadd( 23.3583, 41.4635, 2.04048, 1.03 ) }
    dend_1 { pt3dadd( 23.7317, 41.7788, 2.31206, 1.03 ) }
    dend_1 { pt3dadd( 24.2261, 42.2773, 2.68098, 1.18 ) }
    dend_1 { pt3dadd( 24.8356, 43.0436, 3.04688, 1.4 ) }
    dend_1 { pt3dadd( 25.3229, 43.7103, 3.27516, 1.62 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 6.9617, 55.322, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 8.85338, 70.2023, -0.593792, 0.15 ) }
    // Section: dend_102, id: dend_102, parent: dend_98 (entry count 14/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 4.74202, -89.4863, -67.7335, 0.52 ) }
    dend_102 { pt3dadd( 4.11961, -89.8675, -68.2923, 0.52 ) }
    dend_102 { pt3dadd( 3.327, -90.3858, -68.9411, 0.52 ) }
    dend_102 { pt3dadd( 3.02387, -90.6249, -69.213, 0.96 ) }
    dend_102 { pt3dadd( 2.39764, -91.2522, -69.8889, 1.33 ) }
    dend_102 { pt3dadd( 2.07397, -91.6605, -70.2964, 0.81 ) }
    dend_102 { pt3dadd( 1.70448, -92.2768, -70.8538, 0.52 ) }
    dend_102 { pt3dadd( 1.69415, -92.3147, -70.8804, 0.52 ) }
    dend_102 { pt3dadd( 1.7525, -93.2191, -71.4782, 0.88 ) }
    dend_102 { pt3dadd( 1.96116, -93.9016, -71.9323, 1.25 ) }
    dend_102 { pt3dadd( 2.15491, -94.2804, -72.1924, 1.47 ) }
    dend_102 { pt3dadd( 2.48826, -94.7912, -72.5742, 1.47 ) }
    dend_102 { pt3dadd( 2.92909, -95.3644, -73.0161, 0.88 ) }
    dend_102 { pt3dadd( 3.60438, -96.195, -73.6766, 0.88 ) }
    dend_102 { pt3dadd( 3.95783, -96.6111, -74.0435, 0.37 ) }
    dend_102 { pt3dadd( 4.32587, -97.094, -74.5017, 0.66 ) }
    dend_102 { pt3dadd( 4.35033, -97.1348, -74.5447, 0.66 ) }
    dend_102 { pt3dadd( 4.45616, -97.4057, -74.842, 0.96 ) }
    dend_102 { pt3dadd( 4.57505, -98.1335, -75.5883, 1.11 ) }
    dend_102 { pt3dadd( 4.50745, -99.1706, -76.4993, 0.44 ) }
    dend_102 { pt3dadd( 4.40301, -99.7278, -76.9362, 0.44 ) }
    dend_102 { pt3dadd( 4.2066, -100.558, -77.5631, 0.52 ) }
    dend_102 { pt3dadd( 4.09444, -101.016, -77.9095, 0.74 ) }
    dend_102 { pt3dadd( 3.94274, -101.523, -78.27, 0.74 ) }
    dend_102 { pt3dadd( 3.72063, -102.158, -78.7151, 1.03 ) }
    dend_102 { pt3dadd( 3.38787, -103.22, -79.4814, 0.88 ) }
    dend_102 { pt3dadd( 3.13782, -104.25, -80.2646, 1.18 ) }
    dend_102 { pt3dadd( 2.9908, -105.246, -81.0984, 0.96 ) }
    dend_102 { pt3dadd( 2.96824, -106.06, -81.9388, 0.59 ) }
    dend_102 { pt3dadd( 3.01418, -106.963, -83.0214, 0.29 ) }
    dend_102 { pt3dadd( 3.08682, -107.628, -83.9099, 0.88 ) }
    dend_102 { pt3dadd( 3.10864, -107.824, -84.1917, 1.47 ) }
    dend_102 { pt3dadd( 3.19378, -108.636, -85.3825, 1.33 ) }
    dend_102 { pt3dadd( 3.28107, -109.845, -87.1389, 0.52 ) }
    dend_102 { pt3dadd( 3.28506, -110.167, -87.582, 0.29 ) }
    dend_102 { pt3dadd( 3.24548, -110.447, -87.8942, 0.96 ) }
    dend_102 { pt3dadd( 3.02476, -111.226, -88.632, 1.77 ) }
    dend_102 { pt3dadd( 2.92771, -111.555, -88.9259, 1.77 ) }
    dend_102 { pt3dadd( 2.69466, -112.282, -89.4937, 1.11 ) }
    dend_102 { pt3dadd( 2.55035, -112.881, -90.02, 0.37 ) }
    dend_102 { pt3dadd( 2.52508, -113.293, -90.5368, 0.29 ) }
    dend_102 { pt3dadd( 2.5667, -113.9, -91.4569, 0.74 ) }
    dend_102 { pt3dadd( 2.75491, -114.777, -92.9283, 1.33 ) }
    dend_102 { pt3dadd( 2.76323, -114.803, -92.9768, 1.33 ) }
    dend_102 { pt3dadd( 3.11115, -115.612, -94.6534, 1.55 ) }
    dend_102 { pt3dadd( 3.60155, -116.632, -96.9101, 0.96 ) }
    dend_102 { pt3dadd( 3.61259, -116.656, -96.9647, 0.96 ) }
    dend_102 { pt3dadd( 3.72003, -116.97, -97.5958, 1.18 ) }
    dend_102 { pt3dadd( 3.72565, -116.995, -97.6373, 1.18 ) }
    dend_102 { pt3dadd( 3.83533, -117.993, -99.0105, 0.44 ) }
    dend_102 { pt3dadd( 3.76569, -118.523, -99.5191, 0.37 ) }
    dend_102 { pt3dadd( 3.66632, -118.969, -99.9999, 0.52 ) }
    dend_102 { pt3dadd( 3.59789, -119.318, -100.459, 0.81 ) }
    dend_102 { pt3dadd( 3.5272, -119.735, -101.032, 1.33 ) }
    dend_102 { pt3dadd( 3.49764, -120.02, -101.43, 0.96 ) }
    dend_102 { pt3dadd( 3.49155, -120.93, -102.697, 1.25 ) }
    dend_102 { pt3dadd( 3.69581, -122.836, -105.377, 0.52 ) }
    dend_102 { pt3dadd( 3.88006, -123.733, -106.675, 0.44 ) }
    dend_102 { pt3dadd( 4.02141, -124.183, -107.334, 0.59 ) }
    dend_102 { pt3dadd( 4.34008, -124.937, -108.439, 0.59 ) }
    dend_102 { pt3dadd( 4.74097, -125.665, -109.461, 0.74 ) }
    dend_102 { pt3dadd( 5.00835, -126.048, -109.937, 1.18 ) }
    dend_102 { pt3dadd( 5.03563, -126.085, -109.97, 1.18 ) }
    dend_102 { pt3dadd( 5.34477, -126.445, -110.263, 1.47 ) }
    dend_102 { pt3dadd( 5.37794, -126.48, -110.292, 1.47 ) }
    dend_102 { pt3dadd( 6.13747, -127.316, -110.82, 1.18 ) }
    dend_102 { pt3dadd( 6.16994, -127.359, -110.842, 1.18 ) }
    dend_102 { pt3dadd( 6.45984, -127.852, -111.06, 1.18 ) }
    dend_102 { pt3dadd( 6.80533, -128.689, -111.438, 0.52 ) }
    dend_102 { pt3dadd( 6.92869, -129.238, -111.692, 0.29 ) }
    dend_102 { pt3dadd( 7.00042, -129.862, -112.003, 0.29 ) }
    dend_102 { pt3dadd( 7.01916, -130.288, -112.228, 0.88 ) }
    dend_102 { pt3dadd( 7.01927, -130.87, -112.572, 1.11 ) }
    dend_102 { pt3dadd( 6.96813, -131.978, -113.274, 0.81 ) }
    dend_102 { pt3dadd( 6.93437, -132.682, -113.801, 0.37 ) }
    dend_102 { pt3dadd( 6.93482, -133.426, -114.603, 0.29 ) }
    dend_102 { pt3dadd( 6.94391, -133.766, -115.078, 0.96 ) }
    dend_102 { pt3dadd( 6.94437, -133.798, -115.136, 0.96 ) }
    dend_102 { pt3dadd( 6.93031, -134.071, -115.729, 1.18 ) }
    dend_102 { pt3dadd( 6.81829, -134.64, -117.112, 1.11 ) }
    dend_102 { pt3dadd( 6.45038, -135.611, -119.612, 0.44 ) }
    dend_102 { pt3dadd( 6.27761, -135.903, -120.39, 0.74 ) }
    dend_102 { pt3dadd( 5.90782, -136.403, -121.647, 0.59 ) }
    dend_102 { pt3dadd( 5.66185, -136.696, -122.314, 0.81 ) }
    dend_102 { pt3dadd( 5.25304, -137.112, -123.132, 0.44 ) }
    dend_102 { pt3dadd( 4.95508, -137.416, -123.518, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_102 { pt3dadd( 4.9223, -137.457, -123.542, 0.59 ) }
    dend_102 { pt3dadd( 4.55044, -138.067, -123.805, 0.52 ) }
    dend_102 { pt3dadd( 4.31356, -138.563, -123.972, 1.03 ) }
    dend_102 { pt3dadd( 4.09156, -139.156, -124.17, 1.4 ) }
    dend_102 { pt3dadd( 3.79921, -140.071, -124.453, 1.33 ) }
    dend_102 { pt3dadd( 3.61931, -140.71, -124.698, 1.11 ) }
    dend_102 { pt3dadd( 3.5063, -141.345, -125.045, 0.59 ) }
    dend_102 { pt3dadd( 3.50354, -141.393, -125.077, 0.59 ) }
    dend_102 { pt3dadd( 3.54085, -141.821, -125.446, 0.44 ) }
    dend_102 { pt3dadd( 3.70493, -142.507, -126.179, 0.44 ) }
    dend_102 { pt3dadd( 3.97519, -143.265, -127.127, 0.74 ) }
    dend_102 { pt3dadd( 4.41915, -144.338, -128.58, 0.74 ) }
    dend_102 { pt3dadd( 4.52955, -144.595, -128.929, 1.25 ) }
    dend_102 { pt3dadd( 4.84941, -145.388, -130.015, 1.55 ) }
    dend_102 { pt3dadd( 5.16934, -146.239, -131.201, 1.77 ) }
    dend_102 { pt3dadd( 5.48769, -147.271, -132.674, 0.74 ) }
    dend_102 { pt3dadd( 5.57624, -147.819, -133.41, 0.52 ) }
    dend_102 { pt3dadd( 5.57001, -148.188, -133.871, 0.52 ) }
    dend_102 { pt3dadd( 5.4577, -148.968, -134.818, 0.96 ) }
    dend_102 { pt3dadd( 5.35617, -149.296, -135.176, 1.18 ) }
    dend_102 { pt3dadd( 4.96441, -150.086, -135.993, 0.52 ) }
    dend_102 { pt3dadd( 4.704, -150.465, -136.385, 0.52 ) }
    dend_102 { pt3dadd( 4.51557, -150.69, -136.634, 0.66 ) }
    dend_102 { pt3dadd( 4.48496, -150.72, -136.67, 0.66 ) }
    dend_102 { pt3dadd( 4.21768, -150.945, -136.935, 0.44 ) }
    dend_102 { pt3dadd( 3.50949, -151.452, -137.548, 0.29 ) }
    dend_102 { pt3dadd( 3.46588, -151.476, -137.575, 0.29 ) }
    dend_102 { pt3dadd( 3.12511, -151.623, -137.766, 0.52 ) }
    dend_102 { pt3dadd( 2.77457, -151.76, -137.927, 0.81 ) }
    dend_102 { pt3dadd( 2.34648, -151.942, -138.067, 0.96 ) }
    dend_102 { pt3dadd( 1.92081, -152.132, -138.153, 1.11 ) }
    dend_102 { pt3dadd( 1.32901, -152.429, -138.195, 0.29 ) }
    dend_102 { pt3dadd( 1.25364, -152.471, -138.197, 0.29 ) }
    dend_102 { pt3dadd( 0.596928, -152.844, -138.19, 0.29 ) }
    dend_102 { pt3dadd( -0.00524795, -153.177, -138.167, 0.88 ) }
    dend_102 { pt3dadd( -0.223147, -153.295, -138.153, 1.03 ) }
    dend_102 { pt3dadd( -0.718384, -153.534, -138.121, 1.18 ) }
    dend_102 { pt3dadd( -1.47074, -153.83, -138.101, 0.29 ) }
    dend_102 { pt3dadd( -2.36311, -154.107, -138.119, 0.29 ) }
    dend_102 { pt3dadd( -2.73, -154.194, -138.158, 0.59 ) }
    dend_102 { pt3dadd( -2.78438, -154.206, -138.169, 0.59 ) }
    dend_102 { pt3dadd( -3.41004, -154.341, -138.356, 0.59 ) }
    dend_102 { pt3dadd( -4.01816, -154.509, -138.601, 1.11 ) }
    dend_102 { pt3dadd( -4.5291, -154.699, -138.857, 1.4 ) }
    dend_102 { pt3dadd( -5.1454, -154.994, -139.21, 0.96 ) }
    dend_102 { pt3dadd( -5.76431, -155.365, -139.585, 0.59 ) }
    dend_102 { pt3dadd( -6.47842, -155.88, -140.027, 0.37 ) }
    dend_102 { pt3dadd( -7.01805, -156.35, -140.359, 0.37 ) }
    dend_102 { pt3dadd( -7.34871, -156.663, -140.533, 0.74 ) }
    dend_102 { pt3dadd( -7.38724, -156.703, -140.55, 0.74 ) }
    dend_102 { pt3dadd( -7.77457, -157.134, -140.666, 0.74 ) }
    dend_102 { pt3dadd( -8.07951, -157.486, -140.731, 1.03 ) }
    dend_102 { pt3dadd( -8.43472, -157.902, -140.777, 1.33 ) }
    dend_102 { pt3dadd( -8.97261, -158.463, -140.822, 1.47 ) }
    dend_102 { pt3dadd( -9.57646, -159.045, -140.868, 0.37 ) }
    dend_102 { pt3dadd( -10.3165, -159.737, -140.926, 1.18 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 56/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 4.74202, -89.4863, -67.7335, 0.52 ) }
    dend_99 { pt3dadd( 5.52461, -90.4611, -66.1663, 0.52 ) }
    dend_99 { pt3dadd( 6.43404, -91.7038, -64.5336, 0.44 ) }
    dend_99 { pt3dadd( 6.89558, -92.4116, -63.8011, 0.88 ) }
    dend_99 { pt3dadd( 6.93153, -92.4745, -63.7489, 0.88 ) }
    dend_99 { pt3dadd( 7.22981, -93.0473, -63.3467, 1.03 ) }
    dend_99 { pt3dadd( 7.54071, -93.7083, -62.9525, 0.81 ) }
    dend_99 { pt3dadd( 7.88076, -94.6118, -62.6633, 0.29 ) }
    dend_99 { pt3dadd( 8.20346, -95.6278, -62.4759, 0.22 ) }
    dend_99 { pt3dadd( 8.42283, -96.4056, -62.3568, 0.52 ) }
    dend_99 { pt3dadd( 8.52457, -96.8245, -62.2933, 0.74 ) }
    dend_99 { pt3dadd( 8.73374, -97.9152, -62.1338, 0.29 ) }
    dend_99 { pt3dadd( 8.86325, -98.8717, -61.9918, 0.29 ) }
    dend_99 { pt3dadd( 8.94372, -99.8211, -61.859, 0.74 ) }
    dend_99 { pt3dadd( 8.96568, -100.362, -61.7777, 1.03 ) }
    dend_99 { pt3dadd( 8.9808, -101.034, -61.6742, 0.96 ) }
    dend_99 { pt3dadd( 8.97752, -101.742, -61.5669, 0.59 ) }
    dend_99 { pt3dadd( 8.97373, -102.746, -61.3834, 0.22 ) }
    dend_99 { pt3dadd( 8.99674, -103.363, -61.2475, 0.37 ) }
    dend_99 { pt3dadd( 9.01662, -103.52, -61.2095, 0.37 ) }
    dend_99 { pt3dadd( 9.18282, -104.156, -61.0632, 0.37 ) }
    dend_99 { pt3dadd( 9.21483, -104.233, -61.048, 0.37 ) }
    dend_99 { pt3dadd( 9.83076, -105.364, -60.9914, 0.29 ) }
    dend_99 { pt3dadd( 10.3108, -106.126, -61.04, 0.88 ) }
    dend_99 { pt3dadd( 10.6189, -106.606, -61.1014, 1.18 ) }
    dend_99 { pt3dadd( 11.2107, -107.563, -61.2646, 0.29 ) }
    dend_99 { pt3dadd( 11.7598, -108.471, -61.4589, 0.29 ) }
    dend_99 { pt3dadd( 12.5624, -109.871, -61.722, 0.52 ) }
    dend_99 { pt3dadd( 12.8983, -110.505, -61.8274, 0.81 ) }
    dend_99 { pt3dadd( 13.4134, -111.537, -61.9365, 0.22 ) }
    dend_99 { pt3dadd( 13.6368, -112.025, -61.9568, 0.59 ) }
    dend_99 { pt3dadd( 13.6803, -112.131, -61.9561, 0.59 ) }
    dend_99 { pt3dadd( 14.2895, -113.81, -61.8878, 0.44 ) }
    dend_99 { pt3dadd( 14.6853, -114.995, -61.8, 0.66 ) }
    dend_99 { pt3dadd( 14.9446, -115.796, -61.7577, 0.59 ) }
    dend_99 { pt3dadd( 15.1614, -116.47, -61.7588, 0.44 ) }
    dend_99 { pt3dadd( 15.5131, -117.573, -61.8218, 0.96 ) }
    dend_99 { pt3dadd( 15.8183, -118.412, -61.9709, 1.33 ) }
    dend_99 { pt3dadd( 16.2071, -119.254, -62.2703, 0.59 ) }
    dend_99 { pt3dadd( 16.2553, -119.334, -62.307, 0.59 ) }
    dend_99 { pt3dadd( 16.7767, -120.013, -62.7041, 0.59 ) }
    dend_99 { pt3dadd( 16.8201, -120.065, -62.7421, 0.59 ) }
    dend_99 { pt3dadd( 17.7068, -121.166, -63.7026, 0.29 ) }
    dend_99 { pt3dadd( 18.0833, -121.701, -64.2129, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_99 { pt3dadd( 18.3787, -122.206, -64.6508, 0.44 ) }
    dend_99 { pt3dadd( 18.764, -122.971, -65.2528, 0.44 ) }
    dend_99 { pt3dadd( 19.17, -123.968, -65.9346, 1.33 ) }
    dend_99 { pt3dadd( 19.6162, -125.172, -66.6705, 1.11 ) }
    dend_99 { pt3dadd( 19.9789, -126.298, -67.2687, 0.52 ) }
    dend_99 { pt3dadd( 20.3389, -127.327, -67.8043, 0.29 ) }
    dend_99 { pt3dadd( 20.365, -127.401, -67.8406, 0.29 ) }
    dend_99 { pt3dadd( 20.629, -128.036, -68.0901, 0.29 ) }
    dend_99 { pt3dadd( 21.1563, -128.863, -68.3096, 0.29 ) }
    dend_99 { pt3dadd( 21.5313, -129.252, -68.3349, 0.96 ) }
    dend_99 { pt3dadd( 22.0499, -129.566, -68.3004, 1.25 ) }
    // Section: dend_97, id: dend_97, parent: dend_93 (entry count 11/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -17.2988, -185.422, -43.6542, 0.29 ) }
    dend_97 { pt3dadd( -18.7429, -185.992, -42.6884, 0.29 ) }
    dend_97 { pt3dadd( -19.6225, -186.462, -42.0017, 0.29 ) }
    dend_97 { pt3dadd( -19.8893, -186.616, -41.7918, 0.74 ) }
    dend_97 { pt3dadd( -19.9573, -186.656, -41.7394, 0.74 ) }
    dend_97 { pt3dadd( -20.3985, -186.909, -41.4219, 0.74 ) }
    dend_97 { pt3dadd( -21.3881, -187.397, -40.8713, 0.29 ) }
    dend_97 { pt3dadd( -22.1746, -187.772, -40.5992, 0.29 ) }
    dend_97 { pt3dadd( -22.5643, -187.921, -40.5192, 0.74 ) }
    dend_97 { pt3dadd( -22.9069, -188.018, -40.491, 1.11 ) }
    dend_97 { pt3dadd( -23.4849, -188.175, -40.4719, 1.11 ) }
    dend_97 { pt3dadd( -25.0003, -188.577, -40.5054, 0.29 ) }
    dend_97 { pt3dadd( -25.4952, -188.727, -40.5234, 0.37 ) }
    dend_97 { pt3dadd( -26.1922, -189.008, -40.4637, 0.37 ) }
    dend_97 { pt3dadd( -26.9653, -189.412, -40.2895, 0.66 ) }
    dend_97 { pt3dadd( -27.7377, -189.918, -40.0209, 0.52 ) }
    dend_97 { pt3dadd( -28.1877, -190.257, -39.8171, 0.96 ) }
    dend_97 { pt3dadd( -28.9914, -190.918, -39.3888, 1.33 ) }
    dend_97 { pt3dadd( -30.1717, -191.848, -38.7982, 0.59 ) }
    dend_97 { pt3dadd( -30.7019, -192.257, -38.5087, 0.37 ) }
    dend_97 { pt3dadd( -31.1262, -192.574, -38.27, 0.22 ) }
    dend_97 { pt3dadd( -31.8774, -193.113, -37.8692, 0.22 ) }
    dend_97 { pt3dadd( -32.5198, -193.578, -37.5423, 0.66 ) }
    dend_97 { pt3dadd( -33.3379, -194.215, -37.1736, 0.66 ) }
    dend_97 { pt3dadd( -34.5681, -195.304, -36.6775, 0.52 ) }
    dend_97 { pt3dadd( -34.7396, -195.477, -36.6057, 0.29 ) }
    dend_97 { pt3dadd( -35.1965, -195.995, -36.4362, 0.74 ) }
    dend_97 { pt3dadd( -35.3888, -196.241, -36.343, 0.74 ) }
    dend_97 { pt3dadd( -36.2471, -197.42, -35.8865, 0.37 ) }
    dend_97 { pt3dadd( -36.9521, -198.457, -35.5157, 0.44 ) }
    dend_97 { pt3dadd( -37.3052, -198.969, -35.3708, 0.59 ) }
    dend_97 { pt3dadd( -37.9253, -199.849, -35.1273, 0.52 ) }
    dend_97 { pt3dadd( -39.2722, -201.638, -34.6346, 0.37 ) }
    dend_97 { pt3dadd( -39.9002, -202.392, -34.4258, 0.37 ) }
    dend_97 { pt3dadd( -40.6544, -203.195, -34.2105, 0.29 ) }
    dend_97 { pt3dadd( -41.6195, -204.124, -33.964, 0.59 ) }
    dend_97 { pt3dadd( -41.8157, -204.308, -33.9228, 0.88 ) }
    dend_97 { pt3dadd( -42.4535, -204.861, -33.8341, 0.66 ) }
    dend_97 { pt3dadd( -43.2252, -205.474, -33.8425, 0.15 ) }
    dend_97 { pt3dadd( -44.1147, -206.056, -33.8337, 0.15 ) }
    dend_97 { pt3dadd( -44.1876, -206.092, -33.8324, 0.15 ) }
    dend_97 { pt3dadd( -45.0599, -206.45, -33.8715, 0.59 ) }
    dend_97 { pt3dadd( -45.6472, -206.701, -33.9472, 0.88 ) }
    dend_97 { pt3dadd( -45.7114, -206.733, -33.9605, 0.88 ) }
    dend_97 { pt3dadd( -46.1858, -206.999, -34.0919, 0.88 ) }
    dend_97 { pt3dadd( -46.9037, -207.482, -34.3387, 0.88 ) }
    dend_97 { pt3dadd( -47.9748, -208.39, -34.7749, 0.29 ) }
    dend_97 { pt3dadd( -48.4988, -208.917, -35.0121, 0.29 ) }
    dend_97 { pt3dadd( -48.9257, -209.443, -35.2206, 0.66 ) }
    dend_97 { pt3dadd( -49.2598, -209.908, -35.3757, 0.81 ) }
    dend_97 { pt3dadd( -49.6942, -210.631, -35.5709, 0.66 ) }
    dend_97 { pt3dadd( -50.2071, -211.616, -35.7725, 0.29 ) }
    dend_97 { pt3dadd( -50.4558, -212.136, -35.8475, 0.81 ) }
    dend_97 { pt3dadd( -50.6425, -212.514, -35.8945, 0.81 ) }
    dend_97 { pt3dadd( -51.1395, -213.392, -35.979, 0.22 ) }
    dend_97 { pt3dadd( -51.5189, -213.971, -35.9715, 0.22 ) }
    dend_97 { pt3dadd( -51.7633, -214.317, -35.9263, 0.81 ) }
    dend_97 { pt3dadd( -51.9879, -214.597, -35.8634, 0.96 ) }
    dend_97 { pt3dadd( -52.7532, -215.425, -35.5044, 0.22 ) }
    dend_97 { pt3dadd( -53.2552, -215.843, -35.0858, 0.22 ) }
    dend_97 { pt3dadd( -53.9632, -216.284, -34.2526, 0.74 ) }
    dend_97 { pt3dadd( -54.2078, -216.411, -33.9272, 1.18 ) }
    dend_97 { pt3dadd( -54.6335, -216.613, -33.3235, 0.74 ) }
    dend_97 { pt3dadd( -55.6344, -217.029, -31.8684, 0.59 ) }
    dend_97 { pt3dadd( -56.9996, -217.549, -29.8801, 0.44 ) }
    dend_97 { pt3dadd( -58.1032, -218.018, -28.3244, 0.37 ) }
    dend_97 { pt3dadd( -58.1596, -218.046, -28.2529, 0.37 ) }
    dend_97 { pt3dadd( -58.4678, -218.22, -27.8923, 0.66 ) }
    dend_97 { pt3dadd( -58.7449, -218.458, -27.5444, 0.74 ) }
    dend_97 { pt3dadd( -59.4138, -219.237, -26.6927, 0.29 ) }
    dend_97 { pt3dadd( -59.8663, -219.875, -26.1021, 0.29 ) }
    dend_97 { pt3dadd( -60.3243, -220.509, -25.472, 0.29 ) }
    dend_97 { pt3dadd( -60.4377, -220.672, -25.2984, 0.74 ) }
    dend_97 { pt3dadd( -61.4857, -222.331, -23.3549, 0.66 ) }
    dend_97 { pt3dadd( -61.8975, -223.086, -22.361, 0.22 ) }
    dend_97 { pt3dadd( -61.9925, -223.295, -22.0136, 0.22 ) }
    dend_97 { pt3dadd( -62.1842, -223.694, -21.0872, 0.44 ) }
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 88/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -17.2988, -185.422, -43.6542, 0.37 ) }
    dend_94 { pt3dadd( -16.9091, -186.957, -44.8215, 0.37 ) }
    dend_94 { pt3dadd( -16.7083, -187.803, -45.3954, 0.37 ) }
    dend_94 { pt3dadd( -16.6981, -187.854, -45.4251, 0.37 ) }
    dend_94 { pt3dadd( -16.6115, -188.4, -45.7097, 0.81 ) }
    dend_94 { pt3dadd( -16.4983, -189.216, -46.0987, 0.88 ) }
    dend_94 { pt3dadd( -16.4562, -189.557, -46.2484, 0.88 ) }
    dend_94 { pt3dadd( -16.3849, -190.253, -46.4962, 0.52 ) }
    dend_94 { pt3dadd( -16.3301, -191.045, -46.7693, 0.52 ) }
    dend_94 { pt3dadd( -16.3157, -191.773, -47.0546, 0.52 ) }
    dend_94 { pt3dadd( -16.3424, -192.174, -47.2284, 0.96 ) }
    dend_94 { pt3dadd( -16.3942, -192.523, -47.384, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_94 { pt3dadd( -16.5923, -193.462, -47.8409, 0.37 ) }
    dend_94 { pt3dadd( -16.7534, -194.016, -48.129, 0.29 ) }
    dend_94 { pt3dadd( -16.9622, -194.557, -48.4403, 0.59 ) }
    dend_94 { pt3dadd( -17.2092, -195.053, -48.7347, 0.96 ) }
    dend_94 { pt3dadd( -17.4188, -195.409, -48.9423, 1.18 ) }
    dend_94 { pt3dadd( -17.4496, -195.456, -48.9668, 1.18 ) }
    dend_94 { pt3dadd( -17.6455, -195.737, -49.1133, 1.18 ) }
    dend_94 { pt3dadd( -17.9591, -196.256, -49.3857, 1.03 ) }
    dend_94 { pt3dadd( -18.2725, -196.874, -49.6852, 0.59 ) }
    dend_94 { pt3dadd( -18.4546, -197.293, -49.8551, 0.52 ) }
    dend_94 { pt3dadd( -18.6013, -197.642, -49.9695, 0.66 ) }
    dend_94 { pt3dadd( -18.9978, -198.53, -50.1933, 0.29 ) }
    dend_94 { pt3dadd( -19.295, -199.145, -50.289, 0.44 ) }
    dend_94 { pt3dadd( -19.4397, -199.427, -50.2971, 0.52 ) }
    dend_94 { pt3dadd( -19.9378, -200.319, -50.2443, 0.66 ) }
    dend_94 { pt3dadd( -20.2485, -200.822, -50.1881, 0.37 ) }
    dend_94 { pt3dadd( -20.6249, -201.377, -50.1058, 0.88 ) }
    dend_94 { pt3dadd( -20.862, -201.691, -50.0518, 1.18 ) }
    dend_94 { pt3dadd( -21.3449, -202.304, -49.9676, 0.96 ) }
    dend_94 { pt3dadd( -21.6728, -202.741, -49.9289, 0.66 ) }
    dend_94 { pt3dadd( -21.8905, -203.07, -49.9036, 1.03 ) }
    dend_94 { pt3dadd( -22.2339, -203.7, -49.8316, 0.52 ) }
    dend_94 { pt3dadd( -22.5712, -204.504, -49.7112, 0.52 ) }
    dend_94 { pt3dadd( -22.7356, -205.058, -49.6212, 1.11 ) }
    dend_94 { pt3dadd( -22.8309, -205.613, -49.5221, 1.11 ) }
    dend_94 { pt3dadd( -22.9066, -206.504, -49.3644, 0.74 ) }
    dend_94 { pt3dadd( -22.923, -207.009, -49.279, 0.44 ) }
    dend_94 { pt3dadd( -22.923, -207.779, -49.1565, 0.59 ) }
    dend_94 { pt3dadd( -22.9235, -208.83, -49.0188, 0.59 ) }
    dend_94 { pt3dadd( -22.9651, -209.829, -48.9303, 0.59 ) }
    dend_94 { pt3dadd( -23.0374, -210.673, -48.8834, 0.52 ) }
    dend_94 { pt3dadd( -23.1148, -211.21, -48.8772, 1.18 ) }
    dend_94 { pt3dadd( -23.1822, -211.553, -48.8777, 1.33 ) }
    dend_94 { pt3dadd( -23.4233, -212.472, -48.8969, 1.18 ) }
    dend_94 { pt3dadd( -23.6613, -213.198, -48.9164, 0.88 ) }
    dend_94 { pt3dadd( -23.8757, -213.777, -48.9344, 0.52 ) }
    dend_94 { pt3dadd( -24.1061, -214.427, -48.9536, 0.66 ) }
    dend_94 { pt3dadd( -24.1248, -214.495, -48.952, 0.66 ) }
    dend_94 { pt3dadd( -24.2175, -215.069, -48.9117, 0.81 ) }
    dend_94 { pt3dadd( -24.2911, -215.731, -48.8506, 0.44 ) }
    dend_94 { pt3dadd( -24.3366, -216.453, -48.7684, 0.44 ) }
    dend_94 { pt3dadd( -24.3587, -217.34, -48.6496, 0.44 ) }
    dend_94 { pt3dadd( -24.3277, -218.473, -48.4662, 0.37 ) }
    dend_94 { pt3dadd( -24.2834, -219.216, -48.3292, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_41 (entry count 44/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -2.77124, -50.047, -5.61905, 1.03 ) }
    dend_65 { pt3dadd( -3.80715, -50.3492, -5.59944, 1.03 ) }
    dend_65 { pt3dadd( -4.52583, -50.659, -5.47945, 1.03 ) }
    dend_65 { pt3dadd( -5.40478, -51.1512, -5.28138, 0.96 ) }
    dend_65 { pt3dadd( -5.98445, -51.5597, -5.14139, 0.96 ) }
    dend_65 { pt3dadd( -6.0599, -51.6186, -5.12265, 0.96 ) }
    dend_65 { pt3dadd( -7.53531, -52.9289, -4.7618, 0.81 ) }
    dend_65 { pt3dadd( -8.06729, -53.5371, -4.60633, 1.11 ) }
    dend_65 { pt3dadd( -8.58559, -54.1994, -4.44603, 1.11 ) }
    dend_65 { pt3dadd( -9.24844, -55.0832, -4.24282, 1.03 ) }
    dend_65 { pt3dadd( -9.2815, -55.1253, -4.234, 1.03 ) }
    dend_65 { pt3dadd( -9.99267, -55.9531, -4.05436, 1.03 ) }
    dend_65 { pt3dadd( -10.5068, -56.5256, -3.95871, 1.25 ) }
    dend_65 { pt3dadd( -10.9501, -56.9975, -3.84059, 1.4 ) }
    dend_65 { pt3dadd( -11.2578, -57.3113, -3.73693, 1.4 ) }
    dend_65 { pt3dadd( -11.8531, -57.9314, -3.47235, 1.25 ) }
    dend_65 { pt3dadd( -12.4663, -58.6666, -3.14213, 1.11 ) }
    dend_65 { pt3dadd( -12.7901, -59.1316, -2.93174, 1.11 ) }
    dend_65 { pt3dadd( -13.1283, -59.7512, -2.66962, 1.03 ) }
    dend_65 { pt3dadd( -13.1683, -59.843, -2.63811, 1.03 ) }
    dend_65 { pt3dadd( -13.423, -60.5205, -2.49619, 0.81 ) }
    dend_65 { pt3dadd( -13.6736, -61.263, -2.43306, 0.96 ) }
    dend_65 { pt3dadd( -13.927, -62.0737, -2.43049, 0.96 ) }
    dend_65 { pt3dadd( -14.1975, -62.9941, -2.45459, 0.81 ) }
    dend_65 { pt3dadd( -14.3608, -63.6708, -2.50135, 0.74 ) }
    dend_65 { pt3dadd( -14.574, -64.6847, -2.60606, 0.81 ) }
    dend_65 { pt3dadd( -14.665, -65.2375, -2.68246, 1.11 ) }
    dend_65 { pt3dadd( -14.7532, -66.0321, -2.79782, 1.11 ) }
    dend_65 { pt3dadd( -14.7856, -66.634, -2.8853, 1.11 ) }
    dend_65 { pt3dadd( -14.8007, -67.802, -3.04712, 0.88 ) }
    dend_65 { pt3dadd( -14.7931, -68.3888, -3.10064, 1.11 ) }
    dend_65 { pt3dadd( -14.7688, -69.0775, -3.14996, 1.11 ) }
    dend_65 { pt3dadd( -14.7449, -69.6107, -3.1951, 1.33 ) }
    dend_65 { pt3dadd( -14.7285, -70.1638, -3.24471, 0.96 ) }
    dend_65 { pt3dadd( -14.7226, -70.8257, -3.30452, 1.11 ) }
    dend_65 { pt3dadd( -14.7109, -71.6339, -3.37076, 1.11 ) }
    dend_65 { pt3dadd( -14.6827, -72.3079, -3.43655, 1.4 ) }
    dend_65 { pt3dadd( -14.6558, -72.8995, -3.5084, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -2.77124, -50.047, -5.61905, 1.47 ) }
    dend_42 { pt3dadd( -2.71717, -51.6753, -5.65783, 1.47 ) }
    dend_42 { pt3dadd( -2.68385, -52.6789, -5.68173, 1.47 ) }
    dend_42 { pt3dadd( -2.61125, -54.8651, -5.7338, 1.47 ) }
    dend_42 { pt3dadd( -2.56284, -56.3231, -5.76852, 1.62 ) }
    dend_42 { pt3dadd( -2.50358, -58.1075, -5.81102, 1.92 ) }
    dend_42 { pt3dadd( -2.44626, -59.8337, -5.85213, 1.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -20.3783, -51.4186, -8.67645, 0.88 ) }
    dend_30 { pt3dadd( -22.314, -51.5452, -8.56328, 0.88 ) }
    dend_30 { pt3dadd( -22.8916, -51.6168, -8.57071, 1.11 ) }
    dend_30 { pt3dadd( -23.5508, -51.734, -8.64525, 0.88 ) }
    dend_30 { pt3dadd( -24.3745, -51.8978, -8.76755, 0.81 ) }
    dend_30 { pt3dadd( -25.3331, -52.1432, -8.95222, 0.74 ) }
    dend_30 { pt3dadd( -26.2393, -52.4433, -9.1473, 0.96 ) }
    dend_30 { pt3dadd( -27.1152, -52.8389, -9.42461, 0.96 ) }
    dend_30 { pt3dadd( -28.2921, -53.5004, -9.81112, 0.81 ) }
    dend_30 { pt3dadd( -28.3457, -53.538, -9.82857, 0.81 ) }
    dend_30 { pt3dadd( -29.2804, -54.3171, -10.1272, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -30.0742, -55.0669, -10.3736, 0.74 ) }
    dend_30 { pt3dadd( -30.3565, -55.3433, -10.4489, 1.03 ) }
    dend_30 { pt3dadd( -30.8969, -55.8552, -10.5745, 1.11 ) }
    dend_30 { pt3dadd( -31.8193, -56.6608, -10.7471, 1.11 ) }
    dend_30 { pt3dadd( -31.8914, -56.7176, -10.7615, 1.11 ) }
    dend_30 { pt3dadd( -32.9811, -57.4564, -10.9784, 0.88 ) }
    dend_30 { pt3dadd( -34.271, -58.2572, -11.2502, 0.88 ) }
    dend_30 { pt3dadd( -34.8429, -58.5891, -11.3754, 1.25 ) }
    dend_30 { pt3dadd( -35.5634, -58.9719, -11.5409, 1.25 ) }
    dend_30 { pt3dadd( -36.5572, -59.4615, -11.7792, 1.4 ) }
    dend_30 { pt3dadd( -37.291, -59.8212, -11.9529, 1.62 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -20.3783, -51.4186, -8.67645, 0.74 ) }
    dend_27 { pt3dadd( -20.0684, -51.9416, -9.63656, 0.74 ) }
    dend_27 { pt3dadd( -19.677, -52.6321, -10.9224, 0.44 ) }
    dend_27 { pt3dadd( -19.6502, -52.6812, -11.009, 0.44 ) }
    dend_27 { pt3dadd( -19.3729, -53.1858, -11.8104, 0.44 ) }
    dend_27 { pt3dadd( -18.8649, -54.0974, -13.1699, 1.03 ) }
    dend_27 { pt3dadd( -17.9044, -55.9494, -15.7701, 1.03 ) }
    dend_27 { pt3dadd( -17.6199, -56.5544, -16.6106, 1.33 ) }
    dend_27 { pt3dadd( -17.2729, -57.4193, -17.7635, 1.11 ) }
    dend_27 { pt3dadd( -17.0683, -58.0371, -18.6258, 0.59 ) }
    dend_27 { pt3dadd( -16.8276, -58.9671, -19.9606, 0.44 ) }
    dend_27 { pt3dadd( -16.6475, -60.1975, -21.6419, 0.44 ) }
    dend_27 { pt3dadd( -16.5933, -61.0122, -22.7584, 0.88 ) }
    dend_27 { pt3dadd( -16.6068, -61.3905, -23.3251, 1.25 ) }
    dend_27 { pt3dadd( -16.8155, -62.8643, -25.6111, 1.25 ) }
    dend_27 { pt3dadd( -16.8243, -62.9024, -25.6725, 1.25 ) }
    dend_27 { pt3dadd( -16.8745, -63.0783, -25.9341, 1.25 ) }
    dend_27 { pt3dadd( -16.8848, -63.1193, -25.9834, 1.25 ) }
    dend_27 { pt3dadd( -17.0735, -64.5085, -27.0422, 0.74 ) }
    dend_27 { pt3dadd( -17.1331, -65.345, -27.5259, 0.74 ) }
    dend_27 { pt3dadd( -17.1368, -65.4104, -27.5534, 0.74 ) }
    dend_27 { pt3dadd( -17.1637, -66.0027, -27.8533, 0.74 ) }
    dend_27 { pt3dadd( -17.1995, -66.8401, -28.4144, 0.81 ) }
    dend_27 { pt3dadd( -17.2539, -67.5477, -28.9582, 0.81 ) }
    dend_27 { pt3dadd( -17.4476, -68.9759, -30.2406, 0.44 ) }
    dend_27 { pt3dadd( -17.4587, -69.0257, -30.2909, 0.44 ) }
    dend_27 { pt3dadd( -17.6991, -69.8963, -31.2243, 0.74 ) }
    dend_27 { pt3dadd( -18.0581, -71.0612, -32.5635, 0.88 ) }
    dend_27 { pt3dadd( -18.2215, -71.6119, -33.195, 1.03 ) }
    dend_27 { pt3dadd( -18.4687, -72.4991, -34.1526, 1.03 ) }
    dend_27 { pt3dadd( -18.5973, -73.0682, -34.661, 1.18 ) }
    dend_27 { pt3dadd( -18.6055, -73.1189, -34.7, 1.18 ) }
    dend_27 { pt3dadd( -18.663, -74.3028, -35.3687, 0.52 ) }
    dend_27 { pt3dadd( -18.533, -75.1633, -35.6845, 0.44 ) }
    dend_27 { pt3dadd( -18.3561, -75.616, -35.8293, 0.81 ) }
    dend_27 { pt3dadd( -18.152, -75.9903, -35.9354, 0.88 ) }
    dend_27 { pt3dadd( -18.0748, -76.1222, -35.9801, 0.88 ) }
    dend_27 { pt3dadd( -17.7333, -76.7447, -36.2022, 0.74 ) }
    dend_27 { pt3dadd( -17.3645, -77.5115, -36.4836, 0.44 ) }
    dend_27 { pt3dadd( -17.0689, -78.3075, -36.8018, 0.59 ) }
    dend_27 { pt3dadd( -16.7879, -79.4004, -37.2174, 0.52 ) }
    dend_27 { pt3dadd( -16.6353, -80.2679, -37.5467, 0.88 ) }
    dend_27 { pt3dadd( -16.5674, -80.8614, -37.7635, 1.18 ) }
    dend_27 { pt3dadd( -16.5243, -81.7161, -38.0915, 0.52 ) }
    dend_27 { pt3dadd( -16.5422, -82.2788, -38.307, 0.44 ) }
    dend_27 { pt3dadd( -16.6214, -83.1068, -38.5951, 0.44 ) }
    dend_27 { pt3dadd( -16.7272, -83.8382, -38.8295, 0.74 ) }
    dend_27 { pt3dadd( -16.8007, -84.25, -38.958, 0.74 ) }
    dend_27 { pt3dadd( -17.0631, -85.5677, -39.3953, 0.59 ) }
    dend_27 { pt3dadd( -17.2788, -86.5313, -39.7105, 0.66 ) }
    dend_27 { pt3dadd( -17.4013, -87.0777, -39.9044, 1.18 ) }
    dend_27 { pt3dadd( -17.5806, -87.915, -40.2012, 1.33 ) }
    dend_27 { pt3dadd( -17.7245, -88.7389, -40.4613, 1.11 ) }
    dend_27 { pt3dadd( -17.7309, -88.8069, -40.483, 1.11 ) }
    dend_27 { pt3dadd( -17.7397, -89.5802, -40.7044, 0.96 ) }
    dend_27 { pt3dadd( -17.6792, -90.593, -40.9945, 0.66 ) }
    dend_27 { pt3dadd( -17.6124, -91.3683, -41.245, 0.37 ) }
    dend_27 { pt3dadd( -17.5738, -92.1185, -41.5086, 0.29 ) }
    dend_27 { pt3dadd( -17.5733, -93.4369, -42.0379, 1.03 ) }
    dend_27 { pt3dadd( -17.6001, -94.0926, -42.3196, 1.33 ) }
    dend_27 { pt3dadd( -17.632, -94.619, -42.5534, 1.47 ) }
    dend_27 { pt3dadd( -17.7371, -95.9684, -43.1065, 0.37 ) }
    dend_27 { pt3dadd( -17.7917, -96.7899, -43.4545, 0.37 ) }
    dend_27 { pt3dadd( -17.8772, -97.9288, -43.9067, 0.29 ) }
    dend_27 { pt3dadd( -17.9041, -98.3549, -44.0483, 0.44 ) }
    dend_27 { pt3dadd( -17.9359, -98.9993, -44.231, 0.59 ) }
    dend_27 { pt3dadd( -17.9719, -100.015, -44.4679, 0.59 ) }
    dend_27 { pt3dadd( -17.9857, -101.301, -44.7175, 0.74 ) }
    dend_27 { pt3dadd( -17.9667, -102.25, -44.8806, 0.59 ) }
    dend_27 { pt3dadd( -17.9628, -103.105, -45.0036, 0.44 ) }
    dend_27 { pt3dadd( -17.9647, -104.253, -45.1775, 0.44 ) }
    dend_27 { pt3dadd( -17.9591, -104.329, -45.2117, 0.44 ) }
    dend_27 { pt3dadd( -17.8261, -105.092, -45.7471, 0.96 ) }
    dend_27 { pt3dadd( -17.702, -105.537, -46.1325, 1.4 ) }
    dend_27 { pt3dadd( -17.6833, -105.59, -46.1817, 1.4 ) }
    dend_27 { pt3dadd( -17.4891, -106.089, -46.6508, 1.18 ) }
    dend_27 { pt3dadd( -16.2937, -109.191, -49.5411, 0.59 ) }
    dend_27 { pt3dadd( -16.0567, -109.844, -50.127, 0.88 ) }
    dend_27 { pt3dadd( -15.8552, -110.455, -50.657, 1.03 ) }
    dend_27 { pt3dadd( -15.6637, -111.129, -51.2195, 0.52 ) }
    dend_27 { pt3dadd( -15.5045, -111.907, -51.7911, 0.37 ) }
    dend_27 { pt3dadd( -15.4285, -112.691, -52.2438, 0.37 ) }
    dend_27 { pt3dadd( -15.4291, -112.75, -52.2577, 0.37 ) }
    dend_27 { pt3dadd( -15.4336, -113.016, -52.317, 1.03 ) }
    dend_27 { pt3dadd( -15.4387, -113.583, -52.42, 1.03 ) }
    dend_27 { pt3dadd( -15.3937, -114.458, -52.5663, 0.44 ) }
    dend_27 { pt3dadd( -15.224, -115.396, -52.7786, 0.37 ) }
    dend_27 { pt3dadd( -14.9391, -116.319, -53.022, 0.88 ) }
    dend_27 { pt3dadd( -14.736, -116.865, -53.2151, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -14.5763, -117.273, -53.3841, 1.25 ) }
    dend_27 { pt3dadd( -14.2677, -118.054, -53.7668, 0.81 ) }
    dend_27 { pt3dadd( -13.7439, -119.504, -54.5422, 0.29 ) }
    dend_27 { pt3dadd( -13.6346, -119.887, -54.7461, 0.29 ) }
    dend_27 { pt3dadd( -13.4508, -120.779, -55.2431, 0.37 ) }
    dend_27 { pt3dadd( -13.3301, -121.598, -55.7213, 0.37 ) }
    dend_27 { pt3dadd( -13.2499, -122.434, -56.1914, 0.66 ) }
    dend_27 { pt3dadd( -13.2255, -123.128, -56.5364, 1.25 ) }
    dend_27 { pt3dadd( -13.2061, -123.847, -56.8192, 1.4 ) }
    dend_27 { pt3dadd( -13.1229, -125.127, -57.2598, 0.81 ) }
    dend_27 { pt3dadd( -12.9781, -126.291, -57.5939, 0.59 ) }
    dend_27 { pt3dadd( -12.8621, -126.936, -57.7561, 0.29 ) }
    dend_27 { pt3dadd( -12.6791, -127.767, -57.9302, 0.29 ) }
    dend_27 { pt3dadd( -12.4216, -128.735, -58.2835, 0.29 ) }
    dend_27 { pt3dadd( -12.3215, -129.07, -58.4601, 1.03 ) }
    dend_27 { pt3dadd( -12.3021, -129.129, -58.4973, 1.03 ) }
    dend_27 { pt3dadd( -12.1161, -129.663, -58.873, 1.4 ) }
    dend_27 { pt3dadd( -11.8582, -130.44, -59.4609, 1.4 ) }
    dend_27 { pt3dadd( -11.1097, -132.78, -61.2803, 0.52 ) }
    dend_27 { pt3dadd( -10.8504, -133.731, -61.9925, 0.74 ) }
    dend_27 { pt3dadd( -10.8285, -133.831, -62.061, 0.74 ) }
    dend_27 { pt3dadd( -10.6897, -134.579, -62.5364, 0.52 ) }
    dend_27 { pt3dadd( -10.5898, -135.336, -62.9646, 0.52 ) }
    dend_27 { pt3dadd( -10.5594, -135.969, -63.226, 0.74 ) }
    dend_27 { pt3dadd( -10.5707, -136.847, -63.473, 0.66 ) }
    dend_27 { pt3dadd( -10.5655, -138.277, -64.0503, 0.59 ) }
    dend_27 { pt3dadd( -10.5617, -138.33, -64.0797, 0.59 ) }
    dend_27 { pt3dadd( -10.4822, -138.957, -64.4843, 0.52 ) }
    dend_27 { pt3dadd( -10.3646, -139.636, -64.937, 1.18 ) }
    dend_27 { pt3dadd( -10.1332, -140.782, -65.6992, 1.62 ) }
    dend_27 { pt3dadd( -9.70421, -142.504, -66.8663, 1.18 ) }
    dend_27 { pt3dadd( -9.38223, -143.663, -67.6086, 0.52 ) }
    dend_27 { pt3dadd( -9.12962, -144.541, -68.1306, 0.37 ) }
    dend_27 { pt3dadd( -8.88553, -145.368, -68.5709, 0.74 ) }
    dend_27 { pt3dadd( -8.78516, -145.757, -68.7439, 1.11 ) }
    dend_27 { pt3dadd( -8.61196, -146.925, -69.0899, 0.88 ) }
    dend_27 { pt3dadd( -8.63436, -147.592, -69.2055, 0.81 ) }
    dend_27 { pt3dadd( -8.82601, -148.438, -69.3461, 0.44 ) }
    dend_27 { pt3dadd( -9.08337, -149.083, -69.474, 0.59 ) }
    dend_27 { pt3dadd( -9.4453, -149.76, -69.6617, 0.59 ) }
    dend_27 { pt3dadd( -9.92502, -150.53, -69.9025, 0.37 ) }
    dend_27 { pt3dadd( -10.5517, -151.454, -70.1874, 0.29 ) }
    dend_27 { pt3dadd( -10.9648, -152.066, -70.395, 0.81 ) }
    dend_27 { pt3dadd( -11.3097, -152.624, -70.6031, 1.11 ) }
    dend_27 { pt3dadd( -11.8886, -153.67, -70.9958, 1.4 ) }
    dend_27 { pt3dadd( -12.142, -154.18, -71.1785, 1.33 ) }
    dend_27 { pt3dadd( -12.5084, -155.018, -71.4386, 0.81 ) }
    dend_27 { pt3dadd( -12.8315, -155.827, -71.6278, 0.52 ) }
    dend_27 { pt3dadd( -13.244, -156.9, -71.7987, 0.44 ) }
    dend_27 { pt3dadd( -13.5359, -157.705, -71.8798, 0.37 ) }
    dend_27 { pt3dadd( -13.846, -158.635, -71.8658, 0.37 ) }
    dend_27 { pt3dadd( -14.1024, -159.513, -71.8009, 0.66 ) }
    dend_27 { pt3dadd( -14.3219, -160.437, -71.6763, 0.96 ) }
    dend_27 { pt3dadd( -14.444, -161.152, -71.5368, 1.03 ) }
    dend_27 { pt3dadd( -14.5196, -161.868, -71.3582, 1.25 ) }
    dend_27 { pt3dadd( -14.5078, -163.188, -71.01, 0.81 ) }
    dend_27 { pt3dadd( -14.4568, -163.758, -70.8641, 0.52 ) }
    dend_27 { pt3dadd( -14.3606, -164.551, -70.7034, 0.52 ) }
    dend_27 { pt3dadd( -14.2951, -165.14, -70.62, 0.29 ) }
    dend_27 { pt3dadd( -14.2516, -166.003, -70.5517, 0.29 ) }
    dend_27 { pt3dadd( -14.2847, -167.189, -70.577, 0.29 ) }
    dend_27 { pt3dadd( -14.4125, -167.944, -70.6838, 0.81 ) }
    dend_27 { pt3dadd( -14.6542, -168.716, -70.8356, 1.11 ) }
    dend_27 { pt3dadd( -14.9383, -169.341, -70.9918, 1.11 ) }
    dend_27 { pt3dadd( -15.2962, -169.956, -71.168, 0.74 ) }
    dend_27 { pt3dadd( -15.7502, -170.58, -71.3755, 0.37 ) }
    dend_27 { pt3dadd( -16.4214, -171.413, -71.7013, 0.29 ) }
    dend_27 { pt3dadd( -16.6272, -171.7, -71.809, 0.74 ) }
    dend_27 { pt3dadd( -16.667, -171.771, -71.8319, 0.74 ) }
    dend_27 { pt3dadd( -16.8454, -172.25, -72.0067, 0.96 ) }
    dend_27 { pt3dadd( -16.8743, -172.371, -72.0508, 0.96 ) }
    dend_27 { pt3dadd( -17.0599, -173.468, -72.4147, 0.29 ) }
    dend_27 { pt3dadd( -17.1884, -174.175, -72.6452, 0.29 ) }
    dend_27 { pt3dadd( -17.3027, -174.666, -72.7943, 0.81 ) }
    dend_27 { pt3dadd( -17.6183, -175.695, -73.0837, 1.03 ) }
    dend_27 { pt3dadd( -17.8665, -176.3, -73.2394, 0.81 ) }
    dend_27 { pt3dadd( -18.2801, -177.072, -73.4355, 0.29 ) }
    dend_27 { pt3dadd( -18.8295, -177.859, -73.629, 0.29 ) }
    dend_27 { pt3dadd( -19.173, -178.258, -73.7345, 0.44 ) }
    dend_27 { pt3dadd( -19.612, -178.725, -73.8535, 0.44 ) }
    dend_27 { pt3dadd( -20.1805, -179.25, -73.9698, 0.66 ) }
    dend_27 { pt3dadd( -20.8399, -179.782, -74.1158, 0.96 ) }
    dend_27 { pt3dadd( -21.1912, -180.025, -74.2042, 1.4 ) }
    dend_27 { pt3dadd( -22.1588, -180.637, -74.4838, 1.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 84/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.37597, 58.5567, 0.151847, 1.11 ) }
    dend_20 { pt3dadd( 4.96092, 60.4176, -0.0678319, 1.11 ) }
    dend_20 { pt3dadd( 4.83123, 60.9547, -0.147897, 0.96 ) }
    dend_20 { pt3dadd( 4.63567, 61.6481, -0.281833, 0.96 ) }
    dend_20 { pt3dadd( 4.40021, 62.421, -0.449052, 0.96 ) }
    dend_20 { pt3dadd( 4.09714, 63.3221, -0.66579, 0.96 ) }
    dend_20 { pt3dadd( 3.61003, 64.6827, -1.01468, 0.96 ) }
    dend_20 { pt3dadd( 3.57961, 64.7505, -1.03921, 0.96 ) }
    dend_20 { pt3dadd( 3.06359, 65.788, -1.44255, 1.11 ) }
    dend_20 { pt3dadd( 3.01058, 65.8855, -1.48252, 1.11 ) }
    dend_20 { pt3dadd( 2.55312, 66.6754, -1.81826, 1.11 ) }
    dend_20 { pt3dadd( 2.50852, 66.7464, -1.8497, 1.11 ) }
    dend_20 { pt3dadd( 2.0048, 67.5241, -2.19697, 1.33 ) }
    dend_20 { pt3dadd( 1.54764, 68.245, -2.5153, 1.18 ) }
    dend_20 { pt3dadd( 1.07961, 69.0568, -2.85066, 0.96 ) }
    dend_20 { pt3dadd( 1.04195, 69.135, -2.87929, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 0.76539, 69.8072, -3.0989, 0.88 ) }
    dend_20 { pt3dadd( 0.461568, 70.7057, -3.35828, 0.88 ) }
    dend_20 { pt3dadd( 0.444055, 70.779, -3.37551, 0.88 ) }
    dend_20 { pt3dadd( 0.263157, 71.9466, -3.59853, 0.88 ) }
    dend_20 { pt3dadd( 0.165224, 73.0974, -3.77766, 1.11 ) }
    dend_20 { pt3dadd( 0.161464, 73.2077, -3.79162, 1.11 ) }
    dend_20 { pt3dadd( 0.178388, 74.1698, -3.88569, 1.11 ) }
    dend_20 { pt3dadd( 0.220271, 74.9889, -3.94647, 1.33 ) }
    dend_20 { pt3dadd( 0.258003, 75.4994, -3.97527, 1.33 ) }
    dend_20 { pt3dadd( 0.39142, 76.4166, -4.02966, 1.18 ) }
    dend_20 { pt3dadd( 0.571753, 77.3145, -4.08832, 1.18 ) }
    dend_20 { pt3dadd( 0.602648, 77.4188, -4.09936, 1.18 ) }
    dend_20 { pt3dadd( 0.940512, 78.2902, -4.21546, 1.11 ) }
    dend_20 { pt3dadd( 1.34329, 79.1586, -4.34663, 1.11 ) }
    dend_20 { pt3dadd( 1.80622, 80.0227, -4.4847, 1.03 ) }
    dend_20 { pt3dadd( 2.25094, 80.8029, -4.62516, 0.88 ) }
    dend_20 { pt3dadd( 2.91465, 82.0016, -4.88028, 0.88 ) }
    dend_20 { pt3dadd( 2.98201, 82.1437, -4.91555, 0.88 ) }
    dend_20 { pt3dadd( 3.34227, 83.1514, -5.13428, 0.88 ) }
    dend_20 { pt3dadd( 3.35718, 83.2268, -5.14725, 0.88 ) }
    dend_20 { pt3dadd( 3.34138, 84.0549, -5.24778, 0.88 ) }
    dend_20 { pt3dadd( 3.13957, 85.1398, -5.35479, 0.88 ) }
    dend_20 { pt3dadd( 2.88392, 85.9178, -5.42455, 0.88 ) }
    dend_20 { pt3dadd( 2.41198, 87.1071, -5.58022, 0.96 ) }
    dend_20 { pt3dadd( 2.29926, 87.3322, -5.62478, 0.96 ) }
    dend_20 { pt3dadd( 1.94552, 87.9862, -5.785, 1.47 ) }
    dend_20 { pt3dadd( 1.59953, 88.5999, -5.94297, 1.62 ) }
    dend_20 { pt3dadd( 1.11131, 89.4117, -6.15338, 1.11 ) }
    dend_20 { pt3dadd( 0.633568, 90.2151, -6.3757, 1.11 ) }
    dend_20 { pt3dadd( 0.0503651, 91.2252, -6.68621, 1.11 ) }
    dend_20 { pt3dadd( -0.42277, 92.1054, -6.92347, 0.96 ) }
    dend_20 { pt3dadd( -0.836698, 92.9418, -7.11442, 0.96 ) }
    dend_20 { pt3dadd( -1.32268, 93.9467, -7.33101, 0.96 ) }
    dend_20 { pt3dadd( -1.35741, 94.0296, -7.34674, 0.96 ) }
    dend_20 { pt3dadd( -1.56149, 94.6389, -7.46928, 0.96 ) }
    dend_20 { pt3dadd( -1.80843, 95.7328, -7.76433, 1.18 ) }
    dend_20 { pt3dadd( -1.8243, 95.8363, -7.7994, 1.18 ) }
    dend_20 { pt3dadd( -1.97803, 97.1444, -8.31323, 1.18 ) }
    dend_20 { pt3dadd( -2.10375, 98.487, -8.87835, 1.03 ) }
    dend_20 { pt3dadd( -2.19836, 99.4457, -9.2858, 0.88 ) }
    dend_20 { pt3dadd( -2.32625, 100.743, -9.85002, 1.03 ) }
    dend_20 { pt3dadd( -2.41779, 101.641, -10.2417, 1.03 ) }
    dend_20 { pt3dadd( -2.46852, 102.15, -10.4437, 1.03 ) }
    dend_20 { pt3dadd( -2.477, 102.286, -10.487, 1.03 ) }
    dend_20 { pt3dadd( -2.54658, 103.147, -10.6975, 1.03 ) }
    dend_20 { pt3dadd( -2.56468, 103.31, -10.7253, 1.03 ) }
    dend_20 { pt3dadd( -2.71174, 104.093, -10.7866, 1.03 ) }
    dend_20 { pt3dadd( -3.00696, 105.43, -10.8647, 1.18 ) }
    dend_20 { pt3dadd( -3.30413, 106.617, -10.893, 1.18 ) }
    dend_20 { pt3dadd( -3.50391, 107.344, -10.8934, 1.18 ) }
    dend_20 { pt3dadd( -3.73901, 108.132, -10.8757, 1.18 ) }
    dend_20 { pt3dadd( -4.25184, 109.776, -10.8294, 1.18 ) }
    dend_20 { pt3dadd( -4.63391, 110.938, -10.7621, 1.18 ) }
    dend_20 { pt3dadd( -5.0294, 112.128, -10.6702, 1.18 ) }
    dend_20 { pt3dadd( -5.05368, 112.204, -10.6652, 1.18 ) }
    dend_20 { pt3dadd( -5.2497, 112.896, -10.6499, 1.18 ) }
    dend_20 { pt3dadd( -5.56156, 114.149, -10.6959, 1.47 ) }
    dend_20 { pt3dadd( -5.73183, 115.006, -10.7767, 1.47 ) }
    dend_20 { pt3dadd( -5.89189, 115.854, -10.8785, 1.33 ) }
    dend_20 { pt3dadd( -6.10228, 117.127, -11.057, 1.03 ) }
    dend_20 { pt3dadd( -6.38961, 118.88, -11.3192, 0.96 ) }
    dend_20 { pt3dadd( -6.62004, 120.316, -11.5482, 0.96 ) }
    dend_20 { pt3dadd( -6.77249, 121.334, -11.7426, 0.96 ) }
    dend_20 { pt3dadd( -6.89133, 122.19, -11.935, 1.11 ) }
    dend_20 { pt3dadd( -6.9542, 122.691, -12.051, 1.11 ) }
    dend_20 { pt3dadd( -7.05343, 123.714, -12.2922, 1.25 ) }
    dend_20 { pt3dadd( -7.08105, 124.176, -12.3981, 1.25 ) }
    dend_20 { pt3dadd( -7.14423, 125.335, -12.6899, 1.03 ) }
    dend_20 { pt3dadd( -7.15932, 125.51, -12.7391, 1.03 ) }
    dend_20 { pt3dadd( -7.22059, 126.041, -12.8732, 1.03 ) }
    dend_20 { pt3dadd( -7.2997, 126.572, -12.9905, 1.03 ) }
    dend_20 { pt3dadd( -7.41056, 127.213, -13.0659, 1.03 ) }
    dend_20 { pt3dadd( -7.6285, 128.271, -13.1049, 1.03 ) }
    dend_20 { pt3dadd( -7.80336, 129.061, -13.0713, 1.03 ) }
    dend_20 { pt3dadd( -7.99502, 129.798, -12.9727, 1.03 ) }
    dend_20 { pt3dadd( -8.03715, 129.943, -12.9431, 1.03 ) }
    dend_20 { pt3dadd( -8.38637, 131.083, -12.6566, 1.03 ) }
    dend_20 { pt3dadd( -8.41011, 131.155, -12.6358, 1.03 ) }
    dend_20 { pt3dadd( -8.8514, 132.412, -12.2861, 1.03 ) }
    dend_20 { pt3dadd( -9.30398, 133.706, -11.9916, 1.03 ) }
    dend_20 { pt3dadd( -9.33986, 133.817, -11.9758, 1.03 ) }
    dend_20 { pt3dadd( -9.55575, 134.681, -11.8935, 1.03 ) }
    dend_20 { pt3dadd( -9.56978, 134.76, -11.8871, 1.03 ) }
    dend_20 { pt3dadd( -9.70754, 136.198, -11.7512, 1.03 ) }
    dend_20 { pt3dadd( -9.70946, 136.364, -11.7354, 1.03 ) }
    dend_20 { pt3dadd( -9.66945, 137.352, -11.6684, 1.25 ) }
    dend_20 { pt3dadd( -9.60516, 138.797, -11.5774, 1.25 ) }
    dend_20 { pt3dadd( -9.54137, 140.013, -11.5005, 1.25 ) }
    dend_20 { pt3dadd( -9.50931, 141.116, -11.4564, 0.88 ) }
    dend_20 { pt3dadd( -9.50329, 142.202, -11.4675, 0.74 ) }
    dend_20 { pt3dadd( -9.53376, 143.104, -11.552, 1.18 ) }
    dend_20 { pt3dadd( -9.64175, 144.515, -11.8042, 1.4 ) }
    dend_20 { pt3dadd( -9.66412, 144.676, -11.8489, 1.4 ) }
    dend_20 { pt3dadd( -9.86777, 145.787, -12.2506, 1.4 ) }
    dend_20 { pt3dadd( -10.1499, 146.981, -12.7368, 1.18 ) }
    dend_20 { pt3dadd( -10.4283, 148.066, -13.2053, 1.03 ) }
    dend_20 { pt3dadd( -10.4463, 148.136, -13.2366, 1.03 ) }
    dend_20 { pt3dadd( -10.7088, 149.137, -13.71, 1.03 ) }
    dend_20 { pt3dadd( -10.8431, 149.657, -13.9506, 0.88 ) }
    dend_20 { pt3dadd( -11.2024, 151.121, -14.5804, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( -11.223, 151.194, -14.6064, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.37597, 58.5567, 0.151847, 0.52 ) }
    dend_15 { pt3dadd( 5.22857, 59.504, -0.870249, 0.52 ) }
    dend_15 { pt3dadd( 5.02515, 60.1924, -1.68429, 0.74 ) }
    dend_15 { pt3dadd( 4.77823, 60.6727, -2.37933, 0.74 ) }
    dend_15 { pt3dadd( 4.67194, 60.8343, -2.64061, 0.74 ) }
    dend_15 { pt3dadd( 4.50005, 61.084, -3.2109, 0.74 ) }
    dend_15 { pt3dadd( 4.27419, 61.4197, -4.26629, 0.44 ) }
    dend_15 { pt3dadd( 4.16139, 61.5596, -4.89657, 0.81 ) }
    dend_15 { pt3dadd( 3.98869, 61.7867, -6.07006, 0.81 ) }
    dend_15 { pt3dadd( 3.98284, 61.7997, -6.13879, 0.81 ) }
    dend_15 { pt3dadd( 3.82968, 62.3616, -8.64637, 1.03 ) }
    dend_15 { pt3dadd( 3.78183, 62.8484, -10.4424, 0.81 ) }
    dend_15 { pt3dadd( 3.78224, 63.0289, -10.9752, 0.81 ) }
    dend_15 { pt3dadd( 3.76945, 63.4901, -12.0797, 0.88 ) }
    dend_15 { pt3dadd( 3.70239, 64.088, -13.278, 0.81 ) }
    dend_15 { pt3dadd( 3.57061, 64.5397, -14.1464, 0.81 ) }
    dend_15 { pt3dadd( 3.24403, 65.1267, -15.2201, 0.59 ) }
    dend_15 { pt3dadd( 3.02395, 65.3694, -15.7917, 0.59 ) }
    dend_15 { pt3dadd( 2.63374, 65.5808, -16.7878, 0.88 ) }
    dend_15 { pt3dadd( 2.39558, 65.6192, -18.5328, 0.88 ) }
    dend_15 { pt3dadd( 2.36445, 65.5386, -20.134, 0.88 ) }
    dend_15 { pt3dadd( 2.40196, 65.4648, -21.0059, 1.25 ) }
    dend_15 { pt3dadd( 2.52844, 65.2917, -22.6771, 1.25 ) }
    dend_15 { pt3dadd( 2.73022, 65.0734, -24.7246, 1.11 ) }
    dend_15 { pt3dadd( 3.58966, 64.4581, -31.4572, 1.03 ) }
    dend_15 { pt3dadd( 3.89004, 64.3226, -33.3878, 0.66 ) }
    dend_15 { pt3dadd( 3.9057, 64.321, -33.4649, 0.66 ) }
    dend_15 { pt3dadd( 4.27065, 64.3761, -34.9643, 0.52 ) }
    dend_15 { pt3dadd( 4.45997, 64.4528, -35.6397, 0.52 ) }
    dend_15 { pt3dadd( 4.78618, 64.6837, -36.6399, 0.52 ) }
    dend_15 { pt3dadd( 4.81953, 64.7195, -36.7038, 0.52 ) }
    dend_15 { pt3dadd( 5.88284, 65.6985, -38.1894, 1.25 ) }
    dend_15 { pt3dadd( 6.12059, 65.9174, -38.5301, 1.69 ) }
    dend_15 { pt3dadd( 6.16838, 65.9594, -38.5952, 1.69 ) }
    dend_15 { pt3dadd( 6.4102, 66.185, -38.9621, 1.69 ) }
    dend_15 { pt3dadd( 7.31935, 67.2227, -40.8033, 0.88 ) }
    dend_15 { pt3dadd( 7.90403, 68.2979, -42.6385, 0.59 ) }
    dend_15 { pt3dadd( 7.99499, 68.6908, -43.3132, 0.81 ) }
    dend_15 { pt3dadd( 8.00314, 68.7337, -43.3931, 0.81 ) }
    dend_15 { pt3dadd( 8.099, 69.1194, -44.1634, 1.11 ) }
    dend_15 { pt3dadd( 8.3161, 69.9228, -45.7756, 1.11 ) }
    dend_15 { pt3dadd( 8.43319, 70.3752, -46.6348, 0.96 ) }
    dend_15 { pt3dadd( 8.75151, 71.2458, -48.2715, 0.88 ) }
    dend_15 { pt3dadd( 9.19883, 72.3406, -50.1639, 0.81 ) }
    dend_15 { pt3dadd( 9.68424, 73.3233, -51.781, 0.52 ) }
    dend_15 { pt3dadd( 9.90538, 73.6167, -52.296, 0.52 ) }
    dend_15 { pt3dadd( 10.2697, 73.9917, -52.9288, 0.59 ) }
    dend_15 { pt3dadd( 10.3596, 74.0678, -53.0475, 0.59 ) }
    dend_15 { pt3dadd( 11.0401, 74.5947, -53.7569, 0.59 ) }
    dend_15 { pt3dadd( 12.2124, 75.4683, -54.8487, 0.81 ) }
    dend_15 { pt3dadd( 13.9304, 76.625, -56.3407, 1.4 ) }
    dend_15 { pt3dadd( 14.5441, 76.9701, -56.8634, 1.62 ) }
    dend_15 { pt3dadd( 15.454, 77.3805, -57.5911, 1.84 ) }
    dend_15 { pt3dadd( 15.5139, 77.4031, -57.6364, 1.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 25.3229, 43.7103, 3.27516, 1.18 ) }
    dend_3 { pt3dadd( 24.6461, 45.7688, 4.53767, 1.18 ) }
    dend_3 { pt3dadd( 24.4138, 47.0332, 5.12479, 0.96 ) }
    dend_3 { pt3dadd( 24.4144, 47.131, 5.15584, 0.96 ) }
    dend_3 { pt3dadd( 24.6766, 48.4537, 5.45557, 0.74 ) }
    dend_3 { pt3dadd( 24.707, 48.5479, 5.47077, 0.74 ) }
    dend_3 { pt3dadd( 25.0167, 49.2609, 5.55808, 0.88 ) }
    dend_3 { pt3dadd( 25.6023, 50.214, 5.62457, 0.88 ) }
    dend_3 { pt3dadd( 26.2604, 51.1775, 5.73302, 0.59 ) }
    dend_3 { pt3dadd( 26.8675, 52.0629, 5.97947, 0.52 ) }
    dend_3 { pt3dadd( 27.3379, 52.7375, 6.2807, 0.81 ) }
    dend_3 { pt3dadd( 27.9556, 53.6437, 6.73391, 0.52 ) }
    dend_3 { pt3dadd( 28.9075, 55.0901, 7.61119, 0.88 ) }
    dend_3 { pt3dadd( 29.0389, 55.3182, 7.78191, 0.88 ) }
    dend_3 { pt3dadd( 29.6579, 56.6005, 8.97426, 1.33 ) }
    dend_3 { pt3dadd( 29.7297, 56.8037, 9.20397, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 25.3229, 43.7103, 3.27516, 1.11 ) }
    dend_2 { pt3dadd( 26.3439, 43.5604, 0.0798177, 1.11 ) }
    dend_2 { pt3dadd( 26.7686, 43.5341, -0.874432, 1.03 ) }
    dend_2 { pt3dadd( 27.3038, 43.4989, -1.89896, 0.88 ) }
    dend_2 { pt3dadd( 28.3982, 43.397, -3.61337, 0.59 ) }
    dend_2 { pt3dadd( 29.0375, 43.3036, -4.5539, 0.81 ) }
    dend_2 { pt3dadd( 29.6132, 43.1992, -5.39605, 0.81 ) }
    dend_2 { pt3dadd( 30.1401, 43.1036, -6.06598, 1.03 ) }
    dend_2 { pt3dadd( 30.3552, 43.0944, -6.36444, 1.03 ) }
    dend_2 { pt3dadd( 31.0344, 43.1513, -7.50617, 1.03 ) }
    dend_2 { pt3dadd( 31.9349, 43.2123, -9.34437, 0.66 ) }
    dend_2 { pt3dadd( 32.5454, 43.218, -10.8972, 0.81 ) }
    dend_2 { pt3dadd( 33.0456, 43.1525, -12.4745, 0.59 ) }
    dend_2 { pt3dadd( 33.4369, 43.0258, -14.0434, 0.96 ) }
    dend_2 { pt3dadd( 33.9001, 42.7495, -16.322, 0.59 ) }
    dend_2 { pt3dadd( 34.1566, 42.4801, -17.9639, 0.59 ) }
    dend_2 { pt3dadd( 34.4037, 42.1322, -19.5124, 0.96 ) }
    dend_2 { pt3dadd( 34.6731, 41.7421, -20.8281, 0.81 ) }
    dend_2 { pt3dadd( 35.0184, 41.291, -22.0032, 0.81 ) }
    dend_2 { pt3dadd( 35.2956, 41.0102, -22.6196, 0.96 ) }
    dend_2 { pt3dadd( 36.0509, 40.5285, -23.7841, 0.37 ) }
    dend_2 { pt3dadd( 36.8267, 40.2976, -24.7259, 0.37 ) }
    dend_2 { pt3dadd( 37.8241, 40.2171, -25.7307, 0.44 ) }
    dend_2 { pt3dadd( 38.5054, 40.2683, -26.3606, 0.81 ) }
    dend_2 { pt3dadd( 39.3094, 40.3943, -27.0749, 1.03 ) }
    dend_2 { pt3dadd( 40.487, 40.5889, -28.1481, 0.52 ) }
    dend_2 { pt3dadd( 40.8958, 40.6263, -28.5632, 0.44 ) }
    dend_2 { pt3dadd( 40.9441, 40.6227, -28.6283, 0.44 ) }
    dend_2 { pt3dadd( 41.8492, 40.2649, -30.0979, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 42.1507, 40.061, -30.6341, 0.88 ) }
    dend_2 { pt3dadd( 42.6883, 39.5756, -31.5569, 1.03 ) }
    dend_2 { pt3dadd( 43.4625, 38.8274, -32.6646, 1.03 ) }
    dend_2 { pt3dadd( 44.2035, 38.1482, -33.5865, 0.96 ) }
    dend_2 { pt3dadd( 45.0407, 37.5053, -34.4333, 0.52 ) }
    dend_2 { pt3dadd( 45.0947, 37.4691, -34.4769, 0.52 ) }
    dend_2 { pt3dadd( 45.8036, 37.1224, -34.9228, 0.59 ) }
    dend_2 { pt3dadd( 46.8255, 36.8, -35.3691, 0.59 ) }
    dend_2 { pt3dadd( 47.6131, 36.6334, -35.5933, 0.29 ) }
    dend_2 { pt3dadd( 48.8056, 36.442, -35.8505, 0.29 ) }
    dend_2 { pt3dadd( 48.8818, 36.4305, -35.8669, 0.29 ) }
    dend_2 { pt3dadd( 49.8221, 36.2444, -36.0873, 0.66 ) }
    dend_2 { pt3dadd( 50.5757, 36.0573, -36.2807, 0.81 ) }
    dend_2 { pt3dadd( 51.5062, 35.7138, -36.5463, 0.88 ) }
    dend_2 { pt3dadd( 51.643, 35.6408, -36.5805, 0.88 ) }
    dend_2 { pt3dadd( 52.3962, 35.134, -36.7644, 1.03 ) }
    dend_2 { pt3dadd( 52.9987, 34.7044, -36.922, 1.03 ) }
    dend_2 { pt3dadd( 53.0596, 34.6589, -36.9402, 1.03 ) }
    dend_2 { pt3dadd( 53.8351, 34.0683, -37.178, 0.81 ) }
    dend_2 { pt3dadd( 55.1066, 33.1227, -37.5823, 0.37 ) }
    dend_2 { pt3dadd( 55.7939, 32.6477, -37.8151, 0.66 ) }
    dend_2 { pt3dadd( 56.3658, 32.2739, -38.0243, 0.66 ) }
    dend_2 { pt3dadd( 57.1615, 31.7804, -38.3807, 0.52 ) }
    dend_2 { pt3dadd( 57.7916, 31.4191, -38.7347, 0.52 ) }
    dend_2 { pt3dadd( 58.665, 30.9372, -39.3284, 0.96 ) }
    dend_2 { pt3dadd( 59.2813, 30.5716, -39.8405, 1.25 ) }
    dend_2 { pt3dadd( 60.0231, 30.1, -40.4998, 1.03 ) }
    dend_2 { pt3dadd( 60.8084, 29.561, -41.2407, 0.81 ) }
    dend_2 { pt3dadd( 61.6393, 29.0004, -42.0478, 0.66 ) }
    dend_2 { pt3dadd( 62.0684, 28.741, -42.4509, 0.74 ) }
    dend_2 { pt3dadd( 62.5771, 28.4634, -42.8997, 0.74 ) }
    dend_2 { pt3dadd( 63.3621, 28.0785, -43.5014, 0.37 ) }
    dend_2 { pt3dadd( 63.4154, 28.0558, -43.5343, 0.37 ) }
    dend_2 { pt3dadd( 64.1855, 27.7623, -43.9114, 0.29 ) }
    dend_2 { pt3dadd( 65.269, 27.4208, -44.5056, 0.66 ) }
    dend_2 { pt3dadd( 66.0292, 27.2076, -44.988, 1.03 ) }
    dend_2 { pt3dadd( 66.8105, 26.99, -45.5369, 0.74 ) }
    dend_2 { pt3dadd( 67.7078, 26.7158, -46.2273, 0.74 ) }
    dend_2 { pt3dadd( 68.2555, 26.5107, -46.679, 0.96 ) }
    dend_2 { pt3dadd( 69.5398, 25.9047, -47.8197, 1.18 ) }
    dend_2 { pt3dadd( 70.0268, 25.6486, -48.2769, 0.96 ) }
    dend_2 { pt3dadd( 70.6538, 25.303, -48.8665, 0.44 ) }
    dend_2 { pt3dadd( 70.7142, 25.2689, -48.9229, 0.44 ) }
    dend_2 { pt3dadd( 71.462, 24.8263, -49.6384, 0.66 ) }
    dend_2 { pt3dadd( 71.9476, 24.5368, -50.1236, 0.81 ) }
    dend_2 { pt3dadd( 72.1733, 24.405, -50.3799, 0.81 ) }
    dend_2 { pt3dadd( 72.6839, 24.1345, -51.0385, 0.66 ) }
    dend_2 { pt3dadd( 72.8606, 24.0517, -51.2708, 0.66 ) }
    dend_2 { pt3dadd( 73.5381, 23.7602, -52.0806, 0.66 ) }
    dend_2 { pt3dadd( 74.3389, 23.4513, -52.958, 0.44 ) }
    dend_2 { pt3dadd( 75.6036, 22.9486, -54.231, 0.37 ) }
    dend_2 { pt3dadd( 76.277, 22.6491, -54.8731, 0.88 ) }
    dend_2 { pt3dadd( 77.2795, 22.1606, -55.7035, 0.88 ) }
    dend_2 { pt3dadd( 78.1266, 21.7471, -56.2877, 1.03 ) }
    dend_2 { pt3dadd( 78.835, 21.4084, -56.6725, 1.03 ) }
    dend_2 { pt3dadd( 79.5346, 21.1036, -56.9671, 0.74 ) }
    dend_2 { pt3dadd( 80.4231, 20.7543, -57.2646, 0.52 ) }
    dend_2 { pt3dadd( 81.5515, 20.35, -57.6433, 0.52 ) }
    dend_2 { pt3dadd( 82.5029, 20.0131, -57.9785, 0.29 ) }
    dend_2 { pt3dadd( 82.5825, 19.9843, -58.0138, 0.29 ) }
    dend_2 { pt3dadd( 83.2911, 19.6729, -58.3755, 0.29 ) }
    dend_2 { pt3dadd( 83.8769, 19.3438, -58.749, 0.59 ) }
    dend_2 { pt3dadd( 83.9591, 19.285, -58.8131, 0.59 ) }
    dend_2 { pt3dadd( 84.5094, 18.727, -59.4098, 0.88 ) }
    dend_2 { pt3dadd( 84.9871, 18.0618, -60.0368, 0.74 ) }
    dend_2 { pt3dadd( 85.3721, 17.3439, -60.7263, 0.44 ) }
    dend_2 { pt3dadd( 85.6146, 16.7204, -61.3288, 0.29 ) }
    dend_2 { pt3dadd( 85.7136, 16.3669, -61.6759, 0.59 ) }
    dend_2 { pt3dadd( 85.8, 15.8173, -62.2101, 0.44 ) }
    dend_2 { pt3dadd( 85.8084, 15.3458, -62.6703, 0.44 ) }
    dend_2 { pt3dadd( 85.705, 14.4234, -63.4993, 0.81 ) }
    dend_2 { pt3dadd( 85.6909, 14.3647, -63.5477, 0.81 ) }
    dend_2 { pt3dadd( 85.5221, 13.7819, -63.9415, 1.03 ) }
    dend_2 { pt3dadd( 85.3075, 13.0604, -64.3612, 0.88 ) }
    dend_2 { pt3dadd( 85.2905, 12.9941, -64.3951, 0.88 ) }
    dend_2 { pt3dadd( 85.1033, 12.0388, -64.8338, 0.59 ) }
    dend_2 { pt3dadd( 85.0245, 11.3464, -65.1114, 0.59 ) }
    dend_2 { pt3dadd( 84.9945, 10.5647, -65.4222, 0.88 ) }
    dend_2 { pt3dadd( 84.9996, 10.3482, -65.5074, 0.88 ) }
    dend_2 { pt3dadd( 85.1295, 9.28125, -65.9215, 0.37 ) }
    dend_2 { pt3dadd( 85.2595, 8.64261, -66.1797, 0.74 ) }
    dend_2 { pt3dadd( 85.4322, 8.03117, -66.4348, 0.96 ) }
    dend_2 { pt3dadd( 85.6725, 7.19373, -66.8272, 0.96 ) }
    dend_2 { pt3dadd( 85.6912, 7.12737, -66.8601, 0.96 ) }
    dend_2 { pt3dadd( 85.8846, 6.42569, -67.257, 1.25 ) }
    dend_2 { pt3dadd( 86.1932, 5.49563, -67.8523, 0.44 ) }
    dend_2 { pt3dadd( 86.4117, 4.94842, -68.2902, 0.37 ) }
    dend_2 { pt3dadd( 86.7827, 4.17373, -69.012, 0.96 ) }
    dend_2 { pt3dadd( 87.1451, 3.53586, -69.668, 0.96 ) }
    dend_2 { pt3dadd( 87.7311, 2.66619, -70.6753, 0.74 ) }
    dend_2 { pt3dadd( 88.22, 2.03855, -71.5241, 0.74 ) }
    dend_2 { pt3dadd( 88.8646, 1.32682, -72.5934, 0.29 ) }
    dend_2 { pt3dadd( 89.2087, 0.97531, -73.1051, 0.52 ) }
    dend_2 { pt3dadd( 89.758, 0.412672, -73.8451, 0.88 ) }
    dend_2 { pt3dadd( 90.2332, -0.0943189, -74.4492, 1.03 ) }
    dend_2 { pt3dadd( 91.0533, -1.05365, -75.4152, 0.29 ) }
    dend_2 { pt3dadd( 91.414, -1.51922, -75.7562, 0.88 ) }
    dend_2 { pt3dadd( 92.1627, -2.47001, -76.1573, 0.81 ) }
    dend_2 { pt3dadd( 92.6543, -3.02891, -76.2356, 0.96 ) }
    dend_2 { pt3dadd( 93.2718, -3.64391, -76.157, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 93.3377, -3.70376, -76.137, 0.59 ) }
    dend_2 { pt3dadd( 94.736, -4.87601, -75.5814, 0.52 ) }
    dend_2 { pt3dadd( 95.5232, -5.53026, -75.2871, 0.52 ) }
    dend_2 { pt3dadd( 96.4033, -6.28231, -75.0335, 0.88 ) }
    dend_2 { pt3dadd( 96.4602, -6.33481, -75.0231, 0.88 ) }
    dend_2 { pt3dadd( 96.758, -6.64499, -74.9887, 1.03 ) }
    dend_2 { pt3dadd( 97.3613, -7.37504, -74.9784, 1.03 ) }
    dend_2 { pt3dadd( 97.8884, -8.18947, -75.0317, 0.44 ) }
    dend_2 { pt3dadd( 98.375, -9.12068, -75.0898, 0.44 ) }
    dend_2 { pt3dadd( 98.7932, -10.019, -75.1494, 0.44 ) }
    dend_2 { pt3dadd( 99.2296, -10.9369, -75.1968, 0.52 ) }
    dend_2 { pt3dadd( 99.5603, -11.6043, -75.23, 0.44 ) }
    dend_2 { pt3dadd( 100.069, -12.5809, -75.2873, 0.44 ) }
    dend_2 { pt3dadd( 100.423, -13.2392, -75.3461, 0.81 ) }
    dend_2 { pt3dadd( 100.807, -13.9307, -75.4555, 0.81 ) }
    dend_2 { pt3dadd( 101.299, -14.7496, -75.6261, 0.37 ) }
    dend_2 { pt3dadd( 101.795, -15.5489, -75.8473, 0.81 ) }
    dend_2 { pt3dadd( 102.125, -16.0543, -76.0029, 0.88 ) }
    dend_2 { pt3dadd( 102.373, -16.4301, -76.1323, 0.88 ) }
    dend_2 { pt3dadd( 102.793, -17.0812, -76.3412, 0.66 ) }
    dend_2 { pt3dadd( 103.422, -18.0818, -76.6459, 0.44 ) }
    dend_2 { pt3dadd( 103.975, -18.9194, -76.9117, 0.29 ) }
    dend_2 { pt3dadd( 104.428, -19.536, -77.1686, 0.59 ) }
    dend_2 { pt3dadd( 104.867, -20.0989, -77.4549, 0.74 ) }
    dend_2 { pt3dadd( 104.961, -20.2171, -77.5245, 0.74 ) }
    dend_2 { pt3dadd( 105.373, -20.764, -77.9267, 0.59 ) }
    dend_2 { pt3dadd( 105.902, -21.5606, -78.6501, 0.44 ) }
    dend_2 { pt3dadd( 106.404, -22.4273, -79.4923, 0.44 ) }
    dend_2 { pt3dadd( 106.613, -22.8676, -79.9199, 0.44 ) }
    dend_2 { pt3dadd( 106.847, -23.4835, -80.4931, 0.74 ) }
    dend_2 { pt3dadd( 107.108, -24.3291, -81.2447, 0.74 ) }
    dend_2 { pt3dadd( 107.327, -25.2416, -82.0135, 0.29 ) }
    dend_2 { pt3dadd( 107.402, -25.6321, -82.3313, 0.96 ) }
    dend_2 { pt3dadd( 107.496, -26.0675, -82.6656, 0.96 ) }
    dend_2 { pt3dadd( 107.668, -26.6827, -83.15, 0.81 ) }
    dend_2 { pt3dadd( 107.691, -26.7432, -83.1964, 0.81 ) }
    dend_2 { pt3dadd( 107.939, -27.2233, -83.5202, 0.96 ) }
    dend_2 { pt3dadd( 108.354, -27.9137, -83.9995, 0.52 ) }
    dend_2 { pt3dadd( 108.663, -28.3903, -84.3481, 0.52 ) }
    dend_2 { pt3dadd( 108.693, -28.4376, -84.3823, 0.52 ) }
    dend_2 { pt3dadd( 109.064, -29.0953, -84.8712, 0.44 ) }
    dend_2 { pt3dadd( 109.454, -29.8766, -85.4577, 0.59 ) }
    dend_2 { pt3dadd( 109.982, -31.0384, -86.3173, 0.29 ) }
    dend_2 { pt3dadd( 110.164, -31.4586, -86.6228, 0.96 ) }
    dend_2 { pt3dadd( 110.445, -32.1573, -87.1284, 1.33 ) }
    dend_2 { pt3dadd( 110.903, -33.3453, -87.9691, 0.29 ) }
    dend_2 { pt3dadd( 111.31, -34.4155, -88.7076, 0.29 ) }
    dend_2 { pt3dadd( 111.544, -35.0257, -89.1136, 0.88 ) }
    dend_2 { pt3dadd( 111.57, -35.0912, -89.1508, 0.88 ) }
    dend_2 { pt3dadd( 111.866, -35.8495, -89.5082, 0.88 ) }
    dend_2 { pt3dadd( 112.333, -37.0562, -89.9431, 0.29 ) }
    dend_2 { pt3dadd( 112.698, -37.9972, -90.1703, 0.29 ) }
    dend_2 { pt3dadd( 112.808, -38.3019, -90.214, 0.66 ) }
    dend_2 { pt3dadd( 113.17, -39.4091, -90.3173, 0.66 ) }
    dend_2 { pt3dadd( 113.427, -40.2274, -90.3682, 0.66 ) }
    dend_2 { pt3dadd( 113.659, -40.9781, -90.3962, 0.96 ) }
    dend_2 { pt3dadd( 113.857, -41.6835, -90.4238, 0.74 ) }
    dend_2 { pt3dadd( 114.069, -42.4832, -90.4478, 0.52 ) }
    dend_2 { pt3dadd( 114.34, -43.4913, -90.4592, 0.44 ) }
    dend_2 { pt3dadd( 114.413, -43.7374, -90.467, 0.44 ) }
    dend_2 { pt3dadd( 114.738, -44.7575, -90.5457, 0.37 ) }
    dend_2 { pt3dadd( 115.15, -45.9627, -90.6858, 0.37 ) }
    dend_2 { pt3dadd( 115.591, -47.236, -90.8727, 0.74 ) }
    dend_2 { pt3dadd( 115.979, -48.2588, -91.1306, 0.29 ) }
    dend_2 { pt3dadd( 116.433, -49.2204, -91.4798, 0.29 ) }
    dend_2 { pt3dadd( 116.958, -50.1791, -91.9769, 0.74 ) }
    dend_2 { pt3dadd( 117.21, -50.5367, -92.2483, 1.03 ) }
    dend_2 { pt3dadd( 117.251, -50.5821, -92.2967, 1.03 ) }
    dend_2 { pt3dadd( 118.136, -51.3972, -93.3993, 0.22 ) }
    dend_2 { pt3dadd( 118.861, -52.0179, -94.3472, 0.22 ) }
    dend_2 { pt3dadd( 119.305, -52.3863, -94.9179, 0.81 ) }
    dend_2 { pt3dadd( 119.785, -52.8037, -95.5036, 0.81 ) }
    dend_2 { pt3dadd( 119.827, -52.8439, -95.5557, 0.81 ) }
    dend_2 { pt3dadd( 120.465, -53.5638, -96.3378, 0.29 ) }
    dend_2 { pt3dadd( 120.858, -54.1751, -96.9288, 0.44 ) }
    dend_2 { pt3dadd( 120.895, -54.2462, -97.0088, 0.44 ) }
    dend_2 { pt3dadd( 121.112, -54.6462, -97.5135, 0.44 ) }
    dend_2 { pt3dadd( 121.134, -54.6937, -97.588, 0.44 ) }
    dend_2 { pt3dadd( 121.33, -55.2396, -98.4892, 0.52 ) }
    dend_2 { pt3dadd( 121.515, -56.1084, -100.052, 0.52 ) }
    dend_2 { pt3dadd( 121.587, -56.6169, -101.115, 0.66 ) }
    dend_2 { pt3dadd( 121.623, -56.9113, -101.871, 0.59 ) }
    dend_2 { pt3dadd( 121.676, -57.5261, -103.742, 0.37 ) }
    dend_2 { pt3dadd( 121.702, -57.7942, -104.581, 0.29 ) }
    dend_2 { pt3dadd( 121.753, -58.3293, -106.3, 0.74 ) }
    dend_2 { pt3dadd( 121.834, -58.9963, -108.266, 0.81 ) }
    dend_2 { pt3dadd( 121.921, -59.8812, -110.734, 0.29 ) }
    dend_2 { pt3dadd( 121.929, -60.1931, -111.643, 0.66 ) }
    dend_2 { pt3dadd( 121.951, -60.5763, -112.769, 0.29 ) }
    dend_2 { pt3dadd( 121.979, -61.0022, -114.008, 0.59 ) }
    dend_2 { pt3dadd( 121.995, -61.2794, -114.769, 0.74 ) }
    dend_2 { pt3dadd( 122.007, -61.9882, -116.555, 1.33 ) }
    dend_2 { pt3dadd( 122.01, -63.1721, -119.444, 0.29 ) }
    dend_2 { pt3dadd( 122.02, -63.3873, -119.982, 0.59 ) }
    dend_2 { pt3dadd( 122.037, -63.5316, -120.349, 0.59 ) }
    dend_2 { pt3dadd( 122.247, -64.2411, -122.041, 0.52 ) }
    dend_2 { pt3dadd( 122.412, -64.5722, -122.774, 0.74 ) }
    dend_2 { pt3dadd( 122.605, -64.834, -123.249, 0.74 ) }
    dend_2 { pt3dadd( 123.118, -65.3705, -124.065, 0.37 ) }
    dend_2 { pt3dadd( 123.906, -66.1297, -125.264, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 124.52, -66.6673, -126.078, 0.37 ) }
    dend_2 { pt3dadd( 124.862, -66.948, -126.468, 0.66 ) }
    dend_2 { pt3dadd( 125.19, -67.2137, -126.847, 0.88 ) }
    dend_2 { pt3dadd( 125.45, -67.4299, -127.163, 0.88 ) }
    dend_2 { pt3dadd( 126.535, -68.3517, -128.51, 0.29 ) }
    dend_2 { pt3dadd( 127.421, -69.1624, -129.673, 0.22 ) }
    dend_2 { pt3dadd( 127.59, -69.3339, -129.908, 0.66 ) }
    dend_2 { pt3dadd( 128.18, -69.9875, -130.772, 0.22 ) }
    dend_2 { pt3dadd( 128.388, -70.2574, -131.126, 0.52 ) }
    dend_2 { pt3dadd( 128.723, -70.7925, -131.785, 0.29 ) }
    dend_2 { pt3dadd( 128.872, -71.1128, -132.127, 0.74 ) }
    dend_2 { pt3dadd( 128.985, -71.4706, -132.495, 0.74 ) }
    dend_2 { pt3dadd( 129.154, -72.2112, -133.251, 0.22 ) }
    dend_2 { pt3dadd( 129.308, -73.1144, -134.144, 0.37 ) }
    dend_2 { pt3dadd( 129.356, -73.5098, -134.571, 0.37 ) }
    dend_2 { pt3dadd( 129.384, -73.9431, -135.052, 0.59 ) }
    dend_2 { pt3dadd( 129.414, -74.3183, -135.466, 0.59 ) }
    dend_2 { pt3dadd( 129.456, -74.964, -136.167, 0.22 ) }
    dend_2 { pt3dadd( 129.484, -75.2551, -136.473, 0.52 ) }
    dend_2 { pt3dadd( 129.663, -76.2625, -137.529, 0.29 ) }
    dend_2 { pt3dadd( 129.764, -76.7421, -138.091, 1.11 ) }
    dend_2 { pt3dadd( 129.875, -77.2286, -138.719, 1.18 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 22/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -10.3165, -159.737, -140.926, 0.29 ) }
    dend_104 { pt3dadd( -10.5216, -161.34, -141.225, 0.29 ) }
    dend_104 { pt3dadd( -10.7037, -162.335, -141.407, 0.29 ) }
    dend_104 { pt3dadd( -11.0457, -163.516, -141.489, 0.22 ) }
    dend_104 { pt3dadd( -11.3625, -164.228, -141.427, 0.74 ) }
    dend_104 { pt3dadd( -11.6557, -164.752, -141.282, 0.88 ) }
    dend_104 { pt3dadd( -11.6963, -164.822, -141.257, 0.88 ) }
    dend_104 { pt3dadd( -11.9985, -165.231, -141.046, 0.88 ) }
    dend_104 { pt3dadd( -12.915, -166.31, -140.341, 0.29 ) }
    dend_104 { pt3dadd( -13.712, -167.191, -139.613, 0.29 ) }
    dend_104 { pt3dadd( -14.4914, -168.053, -138.796, 0.88 ) }
    dend_104 { pt3dadd( -14.9594, -168.565, -138.27, 0.88 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 34/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -10.3165, -159.737, -140.926, 0.59 ) }
    dend_103 { pt3dadd( -10.5483, -161.26, -145.686, 0.59 ) }
    dend_103 { pt3dadd( -10.6239, -161.671, -146.918, 0.37 ) }
    dend_103 { pt3dadd( -10.7788, -162.14, -148.383, 0.37 ) }
    dend_103 { pt3dadd( -11.0303, -162.761, -150.27, 0.96 ) }
    dend_103 { pt3dadd( -11.2901, -163.374, -152.027, 1.33 ) }
    dend_103 { pt3dadd( -11.8381, -164.714, -155.599, 0.59 ) }
    dend_103 { pt3dadd( -11.9848, -165.113, -156.432, 0.29 ) }
    dend_103 { pt3dadd( -12.1594, -165.748, -157.715, 0.29 ) }
    dend_103 { pt3dadd( -12.1986, -166.208, -158.621, 0.88 ) }
    dend_103 { pt3dadd( -12.1868, -166.506, -159.212, 0.88 ) }
    dend_103 { pt3dadd( -12.1076, -167.142, -160.465, 0.66 ) }
    dend_103 { pt3dadd( -11.9419, -167.965, -162.026, 0.88 ) }
    dend_103 { pt3dadd( -11.6259, -169.267, -164.401, 1.4 ) }
    dend_103 { pt3dadd( -10.9562, -171.799, -169.008, 0.59 ) }
    dend_103 { pt3dadd( -10.6955, -172.906, -171.161, 0.59 ) }
    dend_103 { pt3dadd( -10.5933, -173.333, -172.022, 0.52 ) }
    dend_103 { pt3dadd( -10.5171, -173.619, -172.599, 1.03 ) }
    dend_103 { pt3dadd( -10.421, -174.024, -173.411, 0.88 ) }
    dend_103 { pt3dadd( -10.1625, -175.461, -176.325, 0.22 ) }
    dend_103 { pt3dadd( -10.1421, -176.319, -178.134, 0.59 ) }
    dend_103 { pt3dadd( -10.1885, -177.186, -180.281, 0.74 ) }
    dend_103 { pt3dadd( -10.2501, -177.941, -182.389, 0.44 ) }
    dend_103 { pt3dadd( -10.3146, -178.364, -183.624, 0.74 ) }
    dend_103 { pt3dadd( -10.478, -179.172, -185.848, 1.11 ) }
    dend_103 { pt3dadd( -10.6118, -179.62, -186.93, 0.96 ) }
    dend_103 { pt3dadd( -11.283, -181.252, -190.5, 0.74 ) }
    dend_103 { pt3dadd( -11.304, -181.285, -190.57, 0.74 ) }
    dend_103 { pt3dadd( -11.7185, -181.834, -191.711, 0.74 ) }
    dend_103 { pt3dadd( -12.3357, -182.69, -193.303, 0.74 ) }
    dend_103 { pt3dadd( -13.024, -183.632, -194.794, 0.37 ) }
    dend_103 { pt3dadd( -13.3886, -184.177, -195.574, 1.03 ) }
    dend_103 { pt3dadd( -13.784, -184.779, -196.287, 1.18 ) }
    dend_103 { pt3dadd( -14.8717, -186.469, -198.306, 0.29 ) }
    dend_103 { pt3dadd( -15.2362, -187.031, -198.99, 0.59 ) }
    dend_103 { pt3dadd( -15.5477, -187.482, -199.504, 0.59 ) }
    dend_103 { pt3dadd( -16.0181, -188.197, -200.17, 0.44 ) }
    dend_103 { pt3dadd( -16.3951, -188.787, -200.629, 0.29 ) }
    dend_103 { pt3dadd( -16.4398, -188.853, -200.672, 0.29 ) }
    dend_103 { pt3dadd( -16.8286, -189.368, -200.965, 0.59 ) }
    dend_103 { pt3dadd( -17.1239, -189.947, -201.476, 0.59 ) }
    dend_103 { pt3dadd( -17.2344, -190.519, -202.116, 0.44 ) }
    dend_103 { pt3dadd( -17.1851, -191.14, -202.912, 0.29 ) }
    dend_103 { pt3dadd( -17.0066, -191.872, -203.996, 0.88 ) }
    dend_103 { pt3dadd( -16.7018, -192.683, -205.328, 1.11 ) }
    dend_103 { pt3dadd( -15.8331, -194.54, -208.627, 0.74 ) }
    dend_103 { pt3dadd( -15.3219, -195.59, -210.54, 0.59 ) }
    dend_103 { pt3dadd( -14.7508, -196.769, -212.724, 0.29 ) }
    dend_103 { pt3dadd( -14.1888, -198.031, -215.095, 0.74 ) }
    dend_103 { pt3dadd( -13.5742, -199.697, -218.239, 1.03 ) }
    dend_103 { pt3dadd( -13.2083, -201.321, -221.266, 0.52 ) }
    dend_103 { pt3dadd( -13.2385, -201.918, -222.297, 0.44 ) }
    dend_103 { pt3dadd( -13.3634, -202.311, -222.924, 0.88 ) }
    dend_103 { pt3dadd( -13.8063, -203.018, -223.897, 1.11 ) }
    dend_103 { pt3dadd( -14.1917, -203.409, -224.315, 1.11 ) }
    dend_103 { pt3dadd( -15.0966, -204.082, -224.857, 0.59 ) }
    dend_103 { pt3dadd( -16.137, -204.79, -225.31, 0.44 ) }
    dend_103 { pt3dadd( -16.7229, -205.224, -225.593, 0.66 ) }
    dend_103 { pt3dadd( -17.7419, -206.094, -226.121, 0.59 ) }
    dend_103 { pt3dadd( -18.3462, -206.836, -226.783, 0.37 ) }
    dend_103 { pt3dadd( -18.7662, -207.507, -227.549, 0.44 ) }
    dend_103 { pt3dadd( -19.1755, -208.338, -228.671, 0.66 ) }
    dend_103 { pt3dadd( -19.4291, -208.986, -229.634, 0.81 ) }
    dend_103 { pt3dadd( -19.6224, -209.604, -230.607, 0.88 ) }
    dend_103 { pt3dadd( -20.5299, -212.635, -235.77, 0.52 ) }
    dend_103 { pt3dadd( -20.6845, -213.07, -236.603, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_103 { pt3dadd( -20.7879, -213.294, -237.1, 0.59 ) }
    dend_103 { pt3dadd( -20.9548, -213.507, -237.659, 0.59 ) }
    dend_103 { pt3dadd( -21.5277, -213.874, -238.818, 0.37 ) }
    dend_103 { pt3dadd( -22.3037, -214.082, -239.739, 0.37 ) }
    dend_103 { pt3dadd( -23.3616, -214.138, -240.302, 0.37 ) }
    dend_103 { pt3dadd( -23.4518, -214.141, -240.35, 0.37 ) }
    dend_103 { pt3dadd( -24.8102, -214.141, -241.057, 0.22 ) }
    dend_103 { pt3dadd( -25.3546, -214.098, -241.323, 0.37 ) }
    dend_103 { pt3dadd( -25.8718, -213.998, -241.539, 0.37 ) }
    dend_103 { pt3dadd( -27.0633, -213.683, -242.058, 0.29 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 10/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 22.0499, -129.566, -68.3004, 0.29 ) }
    dend_101 { pt3dadd( 22.7774, -129.789, -68.7478, 0.29 ) }
    dend_101 { pt3dadd( 23.1016, -129.918, -68.9477, 0.37 ) }
    dend_101 { pt3dadd( 23.1551, -129.944, -68.9775, 0.37 ) }
    dend_101 { pt3dadd( 23.7984, -130.348, -69.342, 0.22 ) }
    dend_101 { pt3dadd( 23.8537, -130.385, -69.3732, 0.22 ) }
    dend_101 { pt3dadd( 24.2095, -130.635, -69.5689, 0.52 ) }
    dend_101 { pt3dadd( 24.2538, -130.674, -69.593, 0.52 ) }
    dend_101 { pt3dadd( 24.628, -131.015, -69.7566, 0.52 ) }
    dend_101 { pt3dadd( 25.2996, -131.608, -69.9962, 0.22 ) }
    dend_101 { pt3dadd( 25.3474, -131.648, -70.0101, 0.22 ) }
    dend_101 { pt3dadd( 25.5632, -131.832, -70.0726, 0.37 ) }
    dend_101 { pt3dadd( 25.9478, -132.161, -70.1829, 0.22 ) }
    dend_101 { pt3dadd( 26.7294, -132.825, -70.3922, 0.96 ) }
    dend_101 { pt3dadd( 26.7787, -132.867, -70.4031, 0.96 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 25/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 22.0499, -129.566, -68.3004, 0.37 ) }
    dend_100 { pt3dadd( 22.8213, -130.911, -69.5476, 0.37 ) }
    dend_100 { pt3dadd( 23.2903, -131.895, -70.4013, 0.66 ) }
    dend_100 { pt3dadd( 23.4968, -132.391, -70.8014, 0.88 ) }
    dend_100 { pt3dadd( 23.6967, -132.945, -71.2117, 1.18 ) }
    dend_100 { pt3dadd( 24.2455, -134.71, -72.4165, 0.44 ) }
    dend_100 { pt3dadd( 24.3813, -135.193, -72.7179, 0.29 ) }
    dend_100 { pt3dadd( 24.5195, -135.966, -73.1146, 0.88 ) }
    dend_100 { pt3dadd( 24.5807, -136.42, -73.3026, 1.11 ) }
    dend_100 { pt3dadd( 24.6593, -137.002, -73.4938, 0.66 ) }
    dend_100 { pt3dadd( 24.768, -137.764, -73.6494, 0.37 ) }
    dend_100 { pt3dadd( 24.912, -138.464, -73.656, 0.52 ) }
    dend_100 { pt3dadd( 24.9545, -138.598, -73.6482, 0.52 ) }
    dend_100 { pt3dadd( 25.317, -139.397, -73.5728, 0.59 ) }
    dend_100 { pt3dadd( 25.5902, -139.9, -73.5128, 0.66 ) }
    dend_100 { pt3dadd( 25.6576, -140.008, -73.4898, 0.66 ) }
    dend_100 { pt3dadd( 26.0495, -140.633, -73.3231, 0.37 ) }
    dend_100 { pt3dadd( 26.4646, -141.346, -72.9935, 0.37 ) }
    dend_100 { pt3dadd( 26.7717, -141.886, -72.6866, 0.37 ) }
    dend_100 { pt3dadd( 27.0939, -142.453, -72.3324, 0.96 ) }
    dend_100 { pt3dadd( 27.6065, -143.301, -71.7657, 1.25 ) }
    dend_100 { pt3dadd( 28.094, -144.038, -71.274, 0.96 ) }
    dend_100 { pt3dadd( 29.3319, -145.807, -69.9971, 0.52 ) }
    dend_100 { pt3dadd( 29.8556, -146.527, -69.4546, 0.59 ) }
    dend_100 { pt3dadd( 30.1783, -146.953, -69.1276, 0.74 ) }
    dend_100 { pt3dadd( 30.5967, -147.481, -68.7331, 0.74 ) }
    dend_100 { pt3dadd( 31.2888, -148.315, -68.1911, 0.29 ) }
    dend_100 { pt3dadd( 31.926, -149.046, -67.7743, 0.66 ) }
    dend_100 { pt3dadd( 31.9689, -149.098, -67.7571, 0.66 ) }
    dend_100 { pt3dadd( 32.2874, -149.577, -67.634, 0.29 ) }
    dend_100 { pt3dadd( 32.5626, -150.097, -67.5348, 0.74 ) }
    dend_100 { pt3dadd( 32.7962, -150.668, -67.4699, 0.88 ) }
    dend_100 { pt3dadd( 32.8208, -150.733, -67.4648, 0.88 ) }
    dend_100 { pt3dadd( 33.1207, -151.467, -67.4397, 0.37 ) }
    dend_100 { pt3dadd( 33.4706, -152.246, -67.4, 0.59 ) }
    dend_100 { pt3dadd( 33.6912, -152.696, -67.3705, 0.88 ) }
    dend_100 { pt3dadd( 34.0969, -153.463, -67.3132, 0.29 ) }
    dend_100 { pt3dadd( 34.4287, -154.052, -67.2432, 0.22 ) }
    dend_100 { pt3dadd( 34.5859, -154.322, -67.2034, 0.81 ) }
    dend_100 { pt3dadd( 34.8572, -154.763, -67.1246, 1.18 ) }
    dend_100 { pt3dadd( 34.8962, -154.822, -67.113, 1.18 ) }
    dend_100 { pt3dadd( 35.3448, -155.489, -66.969, 1.03 ) }
    dend_100 { pt3dadd( 35.9127, -156.423, -66.6841, 0.29 ) }
    dend_100 { pt3dadd( 36.3527, -157.309, -66.379, 0.22 ) }
    dend_100 { pt3dadd( 36.3859, -157.397, -66.3424, 0.22 ) }
    dend_100 { pt3dadd( 36.5854, -158.075, -66.0403, 0.29 ) }
    dend_100 { pt3dadd( 36.7415, -158.656, -65.7778, 1.18 ) }
    dend_100 { pt3dadd( 37.0754, -159.848, -65.1967, 0.74 ) }
    dend_100 { pt3dadd( 37.2558, -160.458, -64.8956, 0.52 ) }
    dend_100 { pt3dadd( 37.5155, -161.232, -64.4643, 0.29 ) }
    dend_100 { pt3dadd( 37.7422, -161.869, -64.0597, 0.52 ) }
    dend_100 { pt3dadd( 37.9949, -162.51, -63.5898, 0.96 ) }
    dend_100 { pt3dadd( 38.3974, -163.359, -62.9548, 1.18 ) }
    dend_100 { pt3dadd( 38.832, -164.149, -62.3205, 1.03 ) }
    dend_100 { pt3dadd( 39.4363, -165.208, -61.4254, 0.74 ) }
    dend_100 { pt3dadd( 40.0566, -166.348, -60.4716, 0.66 ) }
    dend_100 { pt3dadd( 40.3928, -167.061, -59.9063, 1.03 ) }
    dend_100 { pt3dadd( 40.8014, -168.067, -59.1855, 0.88 ) }
    dend_100 { pt3dadd( 41.2248, -169.235, -58.4821, 0.74 ) }
    dend_100 { pt3dadd( 41.5272, -170.127, -58.0608, 0.74 ) }
    dend_100 { pt3dadd( 41.7945, -170.967, -57.7935, 0.74 ) }
    dend_100 { pt3dadd( 42.1001, -171.984, -57.5889, 0.52 ) }
    dend_100 { pt3dadd( 42.3418, -172.808, -57.4746, 0.52 ) }
    dend_100 { pt3dadd( 42.596, -173.674, -57.3886, 0.44 ) }
    dend_100 { pt3dadd( 42.8534, -174.5, -57.3534, 0.74 ) }
    dend_100 { pt3dadd( 43.0643, -175.104, -57.3319, 0.96 ) }
    dend_100 { pt3dadd( 43.2705, -175.651, -57.312, 0.96 ) }
    dend_100 { pt3dadd( 43.7106, -176.771, -57.2728, 0.37 ) }
    dend_100 { pt3dadd( 44.1086, -177.707, -57.2449, 0.37 ) }
    dend_100 { pt3dadd( 44.133, -177.761, -57.2435, 0.37 ) }
    dend_100 { pt3dadd( 44.5157, -178.451, -57.229, 0.66 ) }
    dend_100 { pt3dadd( 44.8172, -178.963, -57.2218, 0.88 ) }
    dend_100 { pt3dadd( 45.2308, -179.612, -57.2235, 0.59 ) }
    dend_100 { pt3dadd( 45.6567, -180.215, -57.2509, 0.22 ) }
    dend_100 { pt3dadd( 45.7044, -180.269, -57.2528, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_100 { pt3dadd( 46.3191, -180.887, -57.2692, 0.22 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 1/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -24.2834, -219.216, -48.3292, 0.52 ) }
    dend_96 { pt3dadd( -22.4999, -219.488, -47.8862, 0.52 ) }
    dend_96 { pt3dadd( -21.6037, -219.7, -47.7031, 0.52 ) }
    dend_96 { pt3dadd( -20.6008, -220.007, -47.6219, 0.66 ) }
    dend_96 { pt3dadd( -19.542, -220.383, -47.6228, 0.59 ) }
    dend_96 { pt3dadd( -18.2436, -220.905, -47.6681, 0.29 ) }
    dend_96 { pt3dadd( -17.8456, -221.088, -47.7154, 0.59 ) }
    dend_96 { pt3dadd( -17.3553, -221.343, -47.8616, 0.59 ) }
    dend_96 { pt3dadd( -15.9782, -222.127, -48.3714, 0.29 ) }
    dend_96 { pt3dadd( -15.2197, -222.6, -48.6851, 0.88 ) }
    dend_96 { pt3dadd( -14.8928, -222.808, -48.8389, 0.88 ) }
    dend_96 { pt3dadd( -13.1243, -223.76, -49.8345, 0.29 ) }
    dend_96 { pt3dadd( -11.9546, -224.273, -50.5652, 0.59 ) }
    dend_96 { pt3dadd( -11.4325, -224.437, -50.9409, 0.44 ) }
    dend_96 { pt3dadd( -11.3793, -224.449, -50.9834, 0.44 ) }
    dend_96 { pt3dadd( -10.1806, -224.628, -51.9981, 0.44 ) }
    dend_96 { pt3dadd( -8.08385, -224.776, -53.8356, 0.29 ) }
    dend_96 { pt3dadd( -7.65055, -224.771, -54.2206, 0.29 ) }
    dend_96 { pt3dadd( -5.73136, -224.664, -55.8236, 0.29 ) }
    dend_96 { pt3dadd( -5.67224, -224.66, -55.8757, 0.29 ) }
    dend_96 { pt3dadd( -5.6181, -224.657, -55.922, 0.44 ) }
    dend_96 { pt3dadd( -5.51012, -224.651, -56.0111, 0.44 ) }
    dend_96 { pt3dadd( -4.69119, -224.61, -56.686, 0.29 ) }
    dend_96 { pt3dadd( -4.00217, -224.568, -57.2525, 0.81 ) }
    dend_96 { pt3dadd( 1.45568, -224.206, -61.728, 0.29 ) }
    dend_96 { pt3dadd( 2.62543, -224.123, -62.6924, 0.22 ) }
    dend_96 { pt3dadd( 3.85489, -224.052, -63.7243, 0.44 ) }
    dend_96 { pt3dadd( 6.20464, -223.976, -65.7875, 0.29 ) }
    dend_96 { pt3dadd( 6.65661, -223.97, -66.2021, 0.88 ) }
    dend_96 { pt3dadd( 6.96851, -223.99, -66.4997, 0.88 ) }
    dend_96 { pt3dadd( 7.01948, -223.997, -66.5461, 0.88 ) }
    dend_96 { pt3dadd( 9.50758, -224.394, -68.919, 0.29 ) }
    dend_96 { pt3dadd( 11.9109, -224.761, -71.3258, 0.52 ) }
    dend_96 { pt3dadd( 11.9583, -224.768, -71.3748, 0.52 ) }
    dend_96 { pt3dadd( 15.0489, -225.198, -74.6126, 0.22 ) }
    dend_96 { pt3dadd( 15.7672, -225.284, -75.3706, 0.37 ) }
    dend_96 { pt3dadd( 17.1496, -225.426, -76.8391, 0.96 ) }
    dend_96 { pt3dadd( 18.9579, -225.529, -78.7766, 0.22 ) }
    dend_96 { pt3dadd( 19.26, -225.527, -79.0979, 0.59 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 40/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -24.2834, -219.216, -48.3292, 0.81 ) }
    dend_95 { pt3dadd( -24.3042, -220.049, -48.5349, 0.81 ) }
    dend_95 { pt3dadd( -24.3078, -220.83, -48.7018, 1.03 ) }
    dend_95 { pt3dadd( -24.2894, -221.989, -48.9179, 0.96 ) }
    dend_95 { pt3dadd( -24.2444, -223.028, -49.0829, 0.74 ) }
    dend_95 { pt3dadd( -24.2075, -223.943, -49.1135, 0.29 ) }
    dend_95 { pt3dadd( -24.1912, -224.511, -49.0857, 0.29 ) }
    dend_95 { pt3dadd( -24.1808, -224.931, -49.0198, 0.52 ) }
    dend_95 { pt3dadd( -24.1945, -225.308, -48.9181, 0.52 ) }
    dend_95 { pt3dadd( -24.244, -225.792, -48.7405, 0.52 ) }
    dend_95 { pt3dadd( -24.4641, -227.458, -48.1029, 0.29 ) }
    dend_95 { pt3dadd( -24.5615, -228.204, -47.8389, 0.52 ) }
    dend_95 { pt3dadd( -24.6111, -228.657, -47.6781, 0.81 ) }
    dend_95 { pt3dadd( -24.6721, -229.524, -47.3488, 0.88 ) }
    dend_95 { pt3dadd( -24.6535, -230.216, -47.0791, 1.18 ) }
    dend_95 { pt3dadd( -24.5594, -231.108, -46.7322, 1.4 ) }
    dend_95 { pt3dadd( -24.292, -232.403, -46.2573, 0.52 ) }
    dend_95 { pt3dadd( -23.9444, -233.563, -45.8085, 0.52 ) }
    dend_95 { pt3dadd( -23.4325, -234.915, -45.2892, 0.52 ) }
    dend_95 { pt3dadd( -22.8394, -236.282, -44.7845, 0.74 ) }
    dend_95 { pt3dadd( -22.8028, -236.363, -44.7561, 0.74 ) }
    dend_95 { pt3dadd( -22.3922, -237.338, -44.4879, 0.29 ) }
    dend_95 { pt3dadd( -21.9917, -238.457, -44.2887, 0.29 ) }
    dend_95 { pt3dadd( -21.6194, -239.699, -44.2005, 0.66 ) }
    dend_95 { pt3dadd( -21.4573, -240.387, -44.2077, 0.88 ) }
    dend_95 { pt3dadd( -21.3088, -241.323, -44.2542, 0.88 ) }
    dend_95 { pt3dadd( -21.093, -242.765, -44.3951, 0.29 ) }
    dend_95 { pt3dadd( -20.9986, -243.37, -44.4801, 0.88 ) }
    dend_95 { pt3dadd( -20.9823, -243.461, -44.5029, 0.88 ) }
    dend_95 { pt3dadd( -20.8411, -244.084, -44.7044, 1.03 ) }
    dend_95 { pt3dadd( -20.8146, -244.183, -44.7383, 1.03 ) }
    dend_95 { pt3dadd( -20.4042, -245.663, -45.2171, 0.74 ) }
    dend_95 { pt3dadd( -20.0549, -246.735, -45.5017, 0.88 ) }
    dend_95 { pt3dadd( -19.5446, -248.177, -45.8302, 1.18 ) }
    dend_95 { pt3dadd( -19.2934, -248.885, -45.9595, 1.18 ) }
    dend_95 { pt3dadd( -19.0022, -249.705, -46.067, 0.66 ) }
    dend_95 { pt3dadd( -18.6163, -250.801, -46.1439, 0.29 ) }
    dend_95 { pt3dadd( -18.2406, -251.885, -46.1315, 0.29 ) }
    dend_95 { pt3dadd( -17.9973, -252.622, -46.0841, 0.59 ) }
    dend_95 { pt3dadd( -17.7089, -253.543, -45.9665, 0.74 ) }
    dend_95 { pt3dadd( -17.4354, -254.467, -45.8401, 0.74 ) }
    dend_95 { pt3dadd( -17.31, -255.023, -45.7098, 0.74 ) }
    dend_95 { pt3dadd( -17.2362, -255.603, -45.5376, 0.88 ) }
    dend_95 { pt3dadd( -17.1743, -256.544, -45.2115, 0.81 ) }
    dend_95 { pt3dadd( -17.1025, -257.687, -44.7536, 0.81 ) }
    dend_95 { pt3dadd( -17.0254, -258.8, -44.2464, 0.59 ) }
    dend_95 { pt3dadd( -16.849, -260.797, -43.2529, 0.37 ) }
    dend_95 { pt3dadd( -16.7443, -261.673, -42.7833, 0.52 ) }
    dend_95 { pt3dadd( -16.616, -262.379, -42.3822, 0.44 ) }
    dend_95 { pt3dadd( -16.439, -262.994, -42.0175, 0.52 ) }
    dend_95 { pt3dadd( -16.3725, -263.159, -41.923, 0.52 ) }
    dend_95 { pt3dadd( -16.044, -263.755, -41.6683, 0.37 ) }
    dend_95 { pt3dadd( -15.941, -263.924, -41.633, 0.37 ) }
    dend_95 { pt3dadd( -15.5801, -264.646, -41.5191, 0.81 ) }
    dend_95 { pt3dadd( -15.4133, -265.204, -41.5012, 0.96 ) }
    dend_95 { pt3dadd( -15.3991, -265.285, -41.5114, 0.96 ) }
    dend_95 { pt3dadd( -15.3614, -265.774, -41.6206, 0.81 ) }
    dend_95 { pt3dadd( -15.3387, -266.773, -41.9516, 0.52 ) }
    dend_95 { pt3dadd( -15.339, -267.443, -42.1966, 0.52 ) }
    dend_95 { pt3dadd( -15.3431, -268.614, -42.6393, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_95 { pt3dadd( -15.3403, -269.821, -43.0791, 0.74 ) }
    dend_95 { pt3dadd( -15.333, -270.654, -43.371, 0.88 ) }
    dend_95 { pt3dadd( -15.3168, -271.86, -43.7089, 0.52 ) }
    dend_95 { pt3dadd( -15.3007, -273.077, -43.9469, 0.52 ) }
    dend_95 { pt3dadd( -15.2986, -273.965, -44.0236, 0.74 ) }
    dend_95 { pt3dadd( -15.2989, -274.817, -44.0002, 0.44 ) }
    dend_95 { pt3dadd( -15.3005, -275.012, -43.9774, 0.44 ) }
    dend_95 { pt3dadd( -15.364, -276.559, -43.7287, 0.44 ) }
    dend_95 { pt3dadd( -15.4689, -277.476, -43.5355, 0.22 ) }
    dend_95 { pt3dadd( -15.6535, -278.346, -43.3645, 0.22 ) }
    dend_95 { pt3dadd( -15.8358, -278.984, -43.3041, 0.74 ) }
    dend_95 { pt3dadd( -15.8641, -279.071, -43.3052, 0.74 ) }
    dend_95 { pt3dadd( -16.1054, -279.785, -43.386, 0.96 ) }
    dend_95 { pt3dadd( -16.1358, -279.873, -43.4068, 0.96 ) }
    dend_95 { pt3dadd( -16.384, -280.709, -43.6075, 0.96 ) }
    dend_95 { pt3dadd( -16.6403, -282.164, -43.9637, 0.44 ) }
    dend_95 { pt3dadd( -16.7427, -282.931, -44.0713, 0.52 ) }
    dend_95 { pt3dadd( -16.7521, -283.023, -44.0777, 0.52 ) }
    dend_95 { pt3dadd( -16.8179, -283.788, -44.115, 0.81 ) }
    dend_95 { pt3dadd( -16.8754, -284.85, -44.1687, 0.74 ) }
    dend_95 { pt3dadd( -16.916, -286.375, -44.2295, 0.37 ) }
    dend_95 { pt3dadd( -16.9995, -288.308, -44.2824, 0.37 ) }
    dend_95 { pt3dadd( -17.0597, -289.024, -44.2785, 1.18 ) }
    dend_95 { pt3dadd( -17.2073, -290.332, -44.2464, 0.96 ) }
    dend_95 { pt3dadd( -17.4015, -291.734, -44.1911, 0.52 ) }
    dend_95 { pt3dadd( -17.6682, -293.329, -44.1089, 0.52 ) }
    dend_95 { pt3dadd( -18.0012, -295.117, -43.9739, 0.74 ) }
    dend_95 { pt3dadd( -18.3083, -296.993, -43.8366, 0.81 ) }
    dend_95 { pt3dadd( -18.3249, -297.096, -43.8229, 0.81 ) }
    dend_95 { pt3dadd( -18.4716, -297.921, -43.6259, 1.03 ) }
    dend_95 { pt3dadd( -18.4919, -298.022, -43.5936, 1.03 ) }
    dend_95 { pt3dadd( -18.6618, -298.956, -43.2546, 0.52 ) }
    dend_95 { pt3dadd( -18.7867, -299.854, -42.936, 0.37 ) }
    dend_95 { pt3dadd( -18.8652, -300.725, -42.6766, 0.88 ) }
    dend_95 { pt3dadd( -18.9451, -301.665, -42.41, 0.96 ) }
    dend_95 { pt3dadd( -18.9932, -302.395, -42.2033, 0.74 ) }
    dend_95 { pt3dadd( -19.0211, -303.257, -41.975, 0.22 ) }
    dend_95 { pt3dadd( -19.0048, -304.13, -41.7372, 0.22 ) }
    dend_95 { pt3dadd( -18.9044, -304.868, -41.5181, 0.74 ) }
    dend_95 { pt3dadd( -18.7572, -305.381, -41.3484, 1.03 ) }
    dend_95 { pt3dadd( -18.4915, -305.985, -41.1293, 1.03 ) }
    dend_95 { pt3dadd( -18.066, -306.714, -40.7758, 0.59 ) }
    dend_95 { pt3dadd( -17.3995, -307.692, -40.222, 0.37 ) }
    dend_95 { pt3dadd( -16.7148, -308.646, -39.6416, 0.22 ) }
    dend_95 { pt3dadd( -16.2265, -309.37, -39.2121, 0.81 ) }
    dend_95 { pt3dadd( -15.8558, -309.967, -38.8847, 0.81 ) }
    dend_95 { pt3dadd( -15.2504, -311.085, -38.3514, 0.29 ) }
    dend_95 { pt3dadd( -14.9674, -311.661, -38.11, 0.59 ) }
    dend_95 { pt3dadd( -14.6936, -312.271, -37.9094, 0.74 ) }
    dend_95 { pt3dadd( -14.3271, -313.236, -37.6596, 0.74 ) }
    dend_95 { pt3dadd( -14.0154, -314.124, -37.4953, 0.52 ) }
    dend_95 { pt3dadd( -13.4593, -315.579, -37.4138, 0.22 ) }
    dend_95 { pt3dadd( -13.1597, -316.338, -37.456, 0.22 ) }
    dend_95 { pt3dadd( -12.9472, -316.88, -37.5078, 0.74 ) }
    dend_95 { pt3dadd( -12.6783, -317.6, -37.6079, 0.74 ) }
    dend_95 { pt3dadd( -12.0663, -319.324, -37.9102, 0.22 ) }
    dend_95 { pt3dadd( -11.5102, -321.169, -38.2921, 0.81 ) }
    dend_95 { pt3dadd( -11.327, -321.937, -38.4555, 0.81 ) }
    dend_95 { pt3dadd( -11.0821, -323.258, -38.7043, 0.22 ) }
    dend_95 { pt3dadd( -10.932, -324.338, -38.8591, 0.22 ) }
    dend_95 { pt3dadd( -10.8849, -324.804, -38.9066, 0.81 ) }
    dend_95 { pt3dadd( -10.8452, -325.495, -38.9398, 1.03 ) }
    dend_95 { pt3dadd( -10.7979, -327.106, -38.9087, 0.29 ) }
    dend_95 { pt3dadd( -10.7766, -327.693, -38.8972, 0.29 ) }
    dend_95 { pt3dadd( -10.7346, -329.037, -38.8759, 0.29 ) }
    dend_95 { pt3dadd( -10.7155, -330.191, -38.8393, 0.15 ) }
    dend_95 { pt3dadd( -10.7157, -330.656, -38.8268, 0.52 ) }
    dend_95 { pt3dadd( -10.7132, -331.045, -38.8156, 0.66 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 68/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -14.6558, -72.8995, -3.5084, 0.96 ) }
    dend_67 { pt3dadd( -14.3926, -74.0588, -4.05008, 0.96 ) }
    dend_67 { pt3dadd( -14.1474, -75.2848, -4.58806, 0.96 ) }
    dend_67 { pt3dadd( -13.9153, -76.6578, -5.13855, 0.96 ) }
    dend_67 { pt3dadd( -13.7126, -78.0808, -5.66298, 0.81 ) }
    dend_67 { pt3dadd( -13.5487, -79.5081, -6.205, 0.66 ) }
    dend_67 { pt3dadd( -13.4397, -80.7153, -6.65517, 0.66 ) }
    dend_67 { pt3dadd( -13.4336, -80.8526, -6.70187, 0.66 ) }
    dend_67 { pt3dadd( -13.4117, -81.7523, -7.00409, 0.88 ) }
    dend_67 { pt3dadd( -13.3883, -82.3469, -7.2004, 1.03 ) }
    dend_67 { pt3dadd( -13.1877, -83.8671, -7.75135, 0.74 ) }
    dend_67 { pt3dadd( -12.9608, -84.7833, -8.1118, 0.74 ) }
    dend_67 { pt3dadd( -12.6075, -85.7557, -8.52316, 0.74 ) }
    dend_67 { pt3dadd( -12.0668, -86.9605, -9.04251, 0.96 ) }
    dend_67 { pt3dadd( -11.6808, -87.6713, -9.34876, 1.03 ) }
    dend_67 { pt3dadd( -11.1367, -88.6235, -9.7173, 1.03 ) }
    dend_67 { pt3dadd( -10.4856, -89.8258, -10.09, 0.88 ) }
    dend_67 { pt3dadd( -10.1221, -90.6346, -10.2952, 0.88 ) }
    dend_67 { pt3dadd( -10.0588, -90.8929, -10.3374, 0.88 ) }
    dend_67 { pt3dadd( -10.0862, -91.5447, -10.3128, 0.59 ) }
    dend_67 { pt3dadd( -10.539, -92.8197, -10.09, 0.52 ) }
    dend_67 { pt3dadd( -11.1475, -93.7809, -9.81834, 0.74 ) }
    dend_67 { pt3dadd( -11.6954, -94.4063, -9.53266, 0.66 ) }
    dend_67 { pt3dadd( -12.4733, -95.1657, -9.11404, 0.52 ) }
    dend_67 { pt3dadd( -13.7083, -96.2808, -8.40061, 0.52 ) }
    dend_67 { pt3dadd( -14.3312, -96.8202, -8.02406, 0.74 ) }
    dend_67 { pt3dadd( -15.1348, -97.52, -7.53848, 1.03 ) }
    dend_67 { pt3dadd( -16.1428, -98.4666, -6.95325, 1.03 ) }
    dend_67 { pt3dadd( -16.8333, -99.1705, -6.58434, 1.03 ) }
    dend_67 { pt3dadd( -17.7743, -100.24, -6.13521, 0.74 ) }
    dend_67 { pt3dadd( -18.3627, -100.984, -5.93094, 0.66 ) }
    dend_67 { pt3dadd( -18.9557, -101.841, -5.72177, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_67 { pt3dadd( -19.4196, -102.646, -5.5397, 0.52 ) }
    dend_67 { pt3dadd( -19.4507, -102.71, -5.52793, 0.52 ) }
    dend_67 { pt3dadd( -19.732, -103.395, -5.37116, 0.66 ) }
    dend_67 { pt3dadd( -19.9624, -104.077, -5.1967, 0.81 ) }
    dend_67 { pt3dadd( -20.2655, -105.026, -4.90058, 0.52 ) }
    dend_67 { pt3dadd( -20.6476, -106.193, -4.5811, 0.52 ) }
    dend_67 { pt3dadd( -20.7363, -106.428, -4.55572, 0.81 ) }
    dend_67 { pt3dadd( -21.0905, -107.181, -4.61569, 0.81 ) }
    dend_67 { pt3dadd( -21.4706, -107.787, -4.78876, 0.96 ) }
    dend_67 { pt3dadd( -22.1146, -108.547, -5.20093, 1.03 ) }
    dend_67 { pt3dadd( -23.0898, -109.368, -5.84395, 1.18 ) }
    dend_67 { pt3dadd( -24.3263, -110.209, -6.63534, 0.81 ) }
    dend_67 { pt3dadd( -24.9358, -110.571, -7.02309, 0.88 ) }
    dend_67 { pt3dadd( -25.7054, -110.965, -7.48612, 1.18 ) }
    dend_67 { pt3dadd( -26.5163, -111.359, -7.92847, 1.55 ) }
    dend_67 { pt3dadd( -27.6837, -111.954, -8.43477, 0.66 ) }
    dend_67 { pt3dadd( -28.2099, -112.273, -8.57931, 0.66 ) }
    dend_67 { pt3dadd( -28.6721, -112.639, -8.63097, 0.52 ) }
    dend_67 { pt3dadd( -29.4531, -113.431, -8.63735, 0.52 ) }
    dend_67 { pt3dadd( -30.0338, -114.194, -8.58148, 0.37 ) }
    dend_67 { pt3dadd( -30.6365, -115.234, -8.38981, 0.37 ) }
    dend_67 { pt3dadd( -30.9843, -116.008, -8.21384, 0.74 ) }
    dend_67 { pt3dadd( -31.3462, -116.917, -7.96212, 1.25 ) }
    dend_67 { pt3dadd( -31.3684, -116.971, -7.94517, 1.25 ) }
    dend_67 { pt3dadd( -31.7181, -117.755, -7.69489, 1.18 ) }
    dend_67 { pt3dadd( -32.2976, -118.877, -7.33823, 1.03 ) }
    dend_67 { pt3dadd( -32.7051, -119.552, -7.15, 0.66 ) }
    dend_67 { pt3dadd( -33.2224, -120.332, -6.9649, 0.37 ) }
    dend_67 { pt3dadd( -33.921, -121.317, -6.79345, 0.37 ) }
    dend_67 { pt3dadd( -34.418, -121.983, -6.71239, 0.44 ) }
    dend_67 { pt3dadd( -34.4704, -122.046, -6.70858, 0.44 ) }
    dend_67 { pt3dadd( -35.1507, -122.802, -6.72949, 0.37 ) }
    dend_67 { pt3dadd( -35.6573, -123.358, -6.76063, 0.59 ) }
    dend_67 { pt3dadd( -35.9682, -123.711, -6.79083, 0.59 ) }
    dend_67 { pt3dadd( -36.4929, -124.369, -6.86388, 0.44 ) }
    dend_67 { pt3dadd( -36.9181, -124.932, -6.9322, 0.66 ) }
    dend_67 { pt3dadd( -37.3897, -125.577, -7.00801, 0.88 ) }
    dend_67 { pt3dadd( -37.907, -126.314, -7.09255, 0.88 ) }
    dend_67 { pt3dadd( -38.6337, -127.35, -7.22894, 0.66 ) }
    dend_67 { pt3dadd( -39.1951, -128.174, -7.35876, 0.96 ) }
    dend_67 { pt3dadd( -39.6116, -128.767, -7.46547, 1.18 ) }
    dend_67 { pt3dadd( -40.5172, -129.939, -7.67527, 0.88 ) }
    dend_67 { pt3dadd( -40.8961, -130.355, -7.74871, 0.96 ) }
    dend_67 { pt3dadd( -41.8157, -131.146, -7.88178, 0.59 ) }
    dend_67 { pt3dadd( -41.869, -131.177, -7.88612, 0.59 ) }
    dend_67 { pt3dadd( -42.9393, -131.576, -7.88397, 0.59 ) }
    dend_67 { pt3dadd( -43.8764, -131.799, -7.84011, 0.52 ) }
    dend_67 { pt3dadd( -44.554, -131.913, -7.78462, 0.52 ) }
    dend_67 { pt3dadd( -45.2474, -132.041, -7.66728, 0.74 ) }
    dend_67 { pt3dadd( -45.9703, -132.196, -7.49464, 0.96 ) }
    dend_67 { pt3dadd( -46.6761, -132.378, -7.31524, 0.81 ) }
    dend_67 { pt3dadd( -47.9158, -132.78, -6.99081, 0.96 ) }
    dend_67 { pt3dadd( -48.7187, -133.101, -6.79355, 0.96 ) }
    dend_67 { pt3dadd( -49.9322, -133.645, -6.49365, 0.44 ) }
    dend_67 { pt3dadd( -50.6691, -134.015, -6.31931, 0.44 ) }
    dend_67 { pt3dadd( -51.4673, -134.451, -6.15605, 0.66 ) }
    dend_67 { pt3dadd( -52.1442, -134.817, -6.05882, 0.59 ) }
    dend_67 { pt3dadd( -52.9469, -135.252, -5.97608, 0.59 ) }
    dend_67 { pt3dadd( -53.0221, -135.291, -5.97291, 0.59 ) }
    dend_67 { pt3dadd( -53.652, -135.624, -6.00602, 0.88 ) }
    dend_67 { pt3dadd( -54.7862, -136.302, -6.09598, 0.96 ) }
    dend_67 { pt3dadd( -55.6226, -136.874, -6.18378, 0.37 ) }
    dend_67 { pt3dadd( -55.742, -136.973, -6.19072, 0.37 ) }
    dend_67 { pt3dadd( -56.4881, -137.757, -6.18731, 0.37 ) }
    dend_67 { pt3dadd( -57.0309, -138.465, -6.14499, 0.29 ) }
    dend_67 { pt3dadd( -57.4976, -139.239, -6.06403, 0.29 ) }
    dend_67 { pt3dadd( -57.8154, -139.853, -5.98043, 0.52 ) }
    dend_67 { pt3dadd( -58.4861, -141.161, -5.78464, 1.03 ) }
    dend_67 { pt3dadd( -58.8405, -141.801, -5.69017, 1.25 ) }
    dend_67 { pt3dadd( -59.1464, -142.3, -5.62617, 1.25 ) }
    dend_67 { pt3dadd( -59.7891, -143.145, -5.53337, 0.88 ) }
    dend_67 { pt3dadd( -60.4714, -143.855, -5.48848, 0.74 ) }
    dend_67 { pt3dadd( -61.2294, -144.508, -5.50963, 0.74 ) }
    dend_67 { pt3dadd( -61.856, -144.969, -5.57912, 0.96 ) }
    dend_67 { pt3dadd( -62.7367, -145.562, -5.69473, 0.66 ) }
    dend_67 { pt3dadd( -63.4842, -146.054, -5.84501, 0.74 ) }
    dend_67 { pt3dadd( -63.9292, -146.355, -5.95302, 1.03 ) }
    dend_67 { pt3dadd( -64.5526, -146.82, -6.1277, 1.4 ) }
    dend_67 { pt3dadd( -64.6006, -146.862, -6.1425, 1.4 ) }
    dend_67 { pt3dadd( -65.0465, -147.351, -6.28959, 1.4 ) }
    dend_67 { pt3dadd( -65.8276, -148.516, -6.54794, 0.52 ) }
    dend_67 { pt3dadd( -66.2014, -149.243, -6.68803, 0.81 ) }
    dend_67 { pt3dadd( -66.4485, -149.768, -6.7738, 0.88 ) }
    dend_67 { pt3dadd( -66.6896, -150.311, -6.84309, 0.52 ) }
    dend_67 { pt3dadd( -67.0638, -151.114, -6.93735, 0.44 ) }
    dend_67 { pt3dadd( -67.3922, -151.802, -7.00532, 0.44 ) }
    dend_67 { pt3dadd( -67.7182, -152.374, -7.03346, 0.44 ) }
    dend_67 { pt3dadd( -68.1216, -152.915, -7.08522, 0.66 ) }
    dend_67 { pt3dadd( -68.2308, -153.017, -7.08464, 0.66 ) }
    dend_67 { pt3dadd( -68.7028, -153.327, -7.039, 0.88 ) }
    dend_67 { pt3dadd( -68.7974, -153.373, -7.02437, 0.88 ) }
    dend_67 { pt3dadd( -69.4101, -153.666, -6.90166, 0.96 ) }
    dend_67 { pt3dadd( -69.7626, -153.857, -6.82192, 0.66 ) }
    dend_67 { pt3dadd( -70.628, -154.387, -6.62533, 0.52 ) }
    dend_67 { pt3dadd( -71.2174, -154.776, -6.50176, 0.44 ) }
    dend_67 { pt3dadd( -71.6506, -155.094, -6.42397, 0.74 ) }
    dend_67 { pt3dadd( -72.1996, -155.535, -6.34689, 0.81 ) }
    dend_67 { pt3dadd( -72.8812, -156.187, -6.28349, 0.52 ) }
    dend_67 { pt3dadd( -72.9372, -156.25, -6.28574, 0.52 ) }
    dend_67 { pt3dadd( -73.2938, -156.701, -6.35487, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_67 { pt3dadd( -73.8087, -157.437, -6.4944, 0.96 ) }
    dend_67 { pt3dadd( -74.0893, -157.889, -6.59197, 1.11 ) }
    dend_67 { pt3dadd( -74.5048, -158.566, -6.74005, 0.81 ) }
    dend_67 { pt3dadd( -75.0675, -159.434, -6.96584, 0.66 ) }
    dend_67 { pt3dadd( -75.1026, -159.482, -6.98095, 0.66 ) }
    dend_67 { pt3dadd( -75.6846, -160.15, -7.19463, 0.52 ) }
    dend_67 { pt3dadd( -76.3002, -160.647, -7.34785, 0.37 ) }
    dend_67 { pt3dadd( -76.8255, -160.91, -7.3703, 0.29 ) }
    dend_67 { pt3dadd( -77.7071, -161.19, -7.2653, 0.66 ) }
    dend_67 { pt3dadd( -78.223, -161.326, -7.14925, 0.74 ) }
    dend_67 { pt3dadd( -79.2548, -161.657, -6.82801, 0.29 ) }
    dend_67 { pt3dadd( -79.7302, -161.843, -6.65241, 0.66 ) }
    dend_67 { pt3dadd( -80.3769, -162.172, -6.39481, 0.88 ) }
    dend_67 { pt3dadd( -80.9981, -162.565, -6.14978, 0.88 ) }
    dend_67 { pt3dadd( -81.3473, -162.819, -6.01649, 0.88 ) }
    dend_67 { pt3dadd( -82.3628, -163.606, -5.69235, 0.58 ) }
    dend_67 { pt3dadd( -83.0216, -164.14, -5.54606, 0.81 ) }
    dend_67 { pt3dadd( -83.6124, -164.629, -5.44508, 1.11 ) }
    dend_67 { pt3dadd( -84.1449, -165.077, -5.38711, 0.74 ) }
    dend_67 { pt3dadd( -84.7475, -165.578, -5.32223, 0.88 ) }
    dend_67 { pt3dadd( -85.3492, -166.028, -5.26657, 0.81 ) }
    dend_67 { pt3dadd( -85.9462, -166.417, -5.22726, 0.74 ) }
    dend_67 { pt3dadd( -86.9125, -166.988, -5.15301, 0.44 ) }
    dend_67 { pt3dadd( -87.8118, -167.492, -5.07851, 0.74 ) }
    dend_67 { pt3dadd( -88.5368, -167.868, -5.00954, 0.88 ) }
    dend_67 { pt3dadd( -89.5116, -168.277, -4.82672, 0.52 ) }
    dend_67 { pt3dadd( -90.0656, -168.48, -4.66602, 0.59 ) }
    dend_67 { pt3dadd( -91.087, -168.827, -4.28646, 0.59 ) }
    dend_67 { pt3dadd( -91.1411, -168.846, -4.26297, 0.59 ) }
    dend_67 { pt3dadd( -91.6733, -169.095, -4.01188, 0.66 ) }
    dend_67 { pt3dadd( -93.1548, -170.088, -3.36768, 0.59 ) }
    dend_67 { pt3dadd( -93.8203, -170.684, -3.09923, 0.59 ) }
    dend_67 { pt3dadd( -94.2457, -171.148, -2.97431, 0.81 ) }
    dend_67 { pt3dadd( -94.8665, -171.915, -2.85601, 0.52 ) }
    dend_67 { pt3dadd( -95.5201, -172.78, -2.82276, 0.66 ) }
    dend_67 { pt3dadd( -96.2419, -173.815, -2.90243, 0.44 ) }
    dend_67 { pt3dadd( -96.6577, -174.481, -3.02355, 1.11 ) }
    dend_67 { pt3dadd( -97.4493, -175.759, -3.30021, 0.59 ) }
    dend_67 { pt3dadd( -97.4866, -175.819, -3.31194, 0.59 ) }
    dend_67 { pt3dadd( -97.9389, -176.512, -3.43016, 0.44 ) }
    dend_67 { pt3dadd( -98.1597, -176.814, -3.47007, 0.44 ) }
    dend_67 { pt3dadd( -98.8938, -177.673, -3.48307, 0.44 ) }
    dend_67 { pt3dadd( -99.408, -178.156, -3.43045, 0.37 ) }
    dend_67 { pt3dadd( -99.9965, -178.58, -3.30263, 0.29 ) }
    dend_67 { pt3dadd( -100.502, -178.891, -3.13244, 0.66 ) }
    dend_67 { pt3dadd( -101.001, -179.141, -2.92156, 1.03 ) }
    dend_67 { pt3dadd( -101.622, -179.4, -2.64433, 1.03 ) }
    dend_67 { pt3dadd( -102.086, -179.561, -2.43677, 0.81 ) }
    dend_67 { pt3dadd( -102.888, -179.856, -2.09634, 0.52 ) }
    dend_67 { pt3dadd( -103.768, -180.282, -1.76092, 0.66 ) }
    dend_67 { pt3dadd( -104.254, -180.606, -1.5894, 0.29 ) }
    dend_67 { pt3dadd( -104.494, -180.806, -1.51486, 0.59 ) }
    dend_67 { pt3dadd( -104.929, -181.192, -1.41786, 0.81 ) }
    dend_67 { pt3dadd( -105.44, -181.624, -1.33573, 0.81 ) }
    dend_67 { pt3dadd( -106.105, -182.096, -1.27928, 0.52 ) }
    dend_67 { pt3dadd( -106.942, -182.602, -1.27804, 0.74 ) }
    dend_67 { pt3dadd( -107.0, -182.633, -1.27786, 0.74 ) }
    dend_67 { pt3dadd( -107.878, -183.039, -1.27435, 0.44 ) }
    dend_67 { pt3dadd( -108.5, -183.318, -1.28047, 0.74 ) }
    dend_67 { pt3dadd( -109.179, -183.624, -1.29407, 1.11 ) }
    dend_67 { pt3dadd( -110.179, -184.106, -1.32218, 0.59 ) }
    dend_67 { pt3dadd( -110.771, -184.446, -1.34391, 0.66 ) }
    dend_67 { pt3dadd( -111.36, -184.873, -1.37107, 0.81 ) }
    dend_67 { pt3dadd( -112.034, -185.509, -1.4097, 0.52 ) }
    dend_67 { pt3dadd( -112.459, -185.982, -1.43737, 0.66 ) }
    dend_67 { pt3dadd( -112.835, -186.426, -1.46159, 0.66 ) }
    dend_67 { pt3dadd( -113.216, -186.85, -1.51239, 0.44 ) }
    dend_67 { pt3dadd( -113.267, -186.9, -1.52167, 0.44 ) }
    dend_67 { pt3dadd( -114.08, -187.529, -1.68882, 0.37 ) }
    dend_67 { pt3dadd( -114.219, -187.599, -1.71724, 0.37 ) }
    dend_67 { pt3dadd( -115.181, -187.815, -1.90203, 0.37 ) }
    dend_67 { pt3dadd( -116.067, -187.838, -2.11542, 0.29 ) }
    dend_67 { pt3dadd( -116.598, -187.798, -2.2568, 0.37 ) }
    dend_67 { pt3dadd( -117.161, -187.736, -2.38933, 0.44 ) }
    dend_67 { pt3dadd( -117.939, -187.59, -2.58097, 0.37 ) }
    dend_67 { pt3dadd( -119.002, -187.346, -2.84146, 0.29 ) }
    dend_67 { pt3dadd( -120.181, -186.987, -3.12038, 0.22 ) }
    dend_67 { pt3dadd( -120.423, -186.905, -3.16365, 0.44 ) }
    dend_67 { pt3dadd( -121.528, -186.5, -3.41369, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 79/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -14.6558, -72.8995, -3.5084, 0.74 ) }
    dend_66 { pt3dadd( -15.1037, -73.285, -3.42254, 0.74 ) }
    dend_66 { pt3dadd( -15.6503, -73.7584, -3.31824, 0.44 ) }
    dend_66 { pt3dadd( -16.1894, -74.217, -3.21684, 0.59 ) }
    dend_66 { pt3dadd( -16.8637, -74.7717, -3.12309, 0.37 ) }
    dend_66 { pt3dadd( -17.3802, -75.2014, -3.05227, 0.59 ) }
    dend_66 { pt3dadd( -17.6032, -75.385, -3.02218, 0.88 ) }
    dend_66 { pt3dadd( -17.6539, -75.4252, -3.01736, 0.88 ) }
    dend_66 { pt3dadd( -17.871, -75.5922, -3.00702, 1.11 ) }
    dend_66 { pt3dadd( -18.3627, -75.9067, -3.0025, 0.88 ) }
    dend_66 { pt3dadd( -18.9704, -76.198, -3.01041, 0.37 ) }
    dend_66 { pt3dadd( -19.3492, -76.3366, -3.0244, 0.66 ) }
    dend_66 { pt3dadd( -19.9389, -76.5111, -3.07401, 0.81 ) }
    dend_66 { pt3dadd( -20.4844, -76.6662, -3.13072, 0.74 ) }
    dend_66 { pt3dadd( -21.243, -76.8696, -3.21876, 0.88 ) }
    dend_66 { pt3dadd( -21.7777, -77.008, -3.28034, 0.74 ) }
    dend_66 { pt3dadd( -22.5957, -77.2313, -3.41205, 0.52 ) }
    dend_66 { pt3dadd( -23.5663, -77.5487, -3.5787, 0.52 ) }
    dend_66 { pt3dadd( -24.15, -77.7856, -3.65071, 0.74 ) }
    dend_66 { pt3dadd( -24.2017, -77.8125, -3.65069, 0.74 ) }
    dend_66 { pt3dadd( -24.6716, -78.1528, -3.33464, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_66 { pt3dadd( -25.2415, -78.6433, -2.61125, 1.03 ) }
    dend_66 { pt3dadd( -25.5737, -78.9453, -2.08186, 1.18 ) }
    dend_66 { pt3dadd( -26.0435, -79.3673, -1.23222, 0.96 ) }
    dend_66 { pt3dadd( -26.6799, -79.9203, -4.45369E-4, 1.18 ) }
    dend_66 { pt3dadd( -28.5335, -81.4512, 3.61321, 0.66 ) }
    dend_66 { pt3dadd( -28.7926, -81.6699, 4.15902, 0.66 ) }
    dend_66 { pt3dadd( -29.0637, -81.9057, 4.74519, 0.81 ) }
    dend_66 { pt3dadd( -29.3266, -82.1355, 5.27922, 0.81 ) }
    dend_66 { pt3dadd( -29.3602, -82.1667, 5.34008, 0.81 ) }
    dend_66 { pt3dadd( -29.7553, -82.5961, 5.99717, 0.88 ) }
    dend_66 { pt3dadd( -30.395, -83.3576, 7.08053, 0.88 ) }
    dend_66 { pt3dadd( -30.7438, -83.8344, 7.85094, 0.74 ) }
    dend_66 { pt3dadd( -30.8902, -84.054, 8.22724, 0.96 ) }
    dend_66 { pt3dadd( -31.5041, -85.0328, 9.89342, 0.44 ) }
    dend_66 { pt3dadd( -32.0253, -85.8955, 11.352, 1.25 ) }
    dend_66 { pt3dadd( -32.7159, -87.1059, 13.3587, 0.59 ) }
    dend_66 { pt3dadd( -33.1457, -87.822, 14.5044, 0.96 ) }
    dend_66 { pt3dadd( -33.1671, -87.8571, 14.5574, 0.96 ) }
    dend_66 { pt3dadd( -33.4672, -88.3372, 15.1848, 0.59 ) }
    dend_66 { pt3dadd( -33.7996, -88.8313, 15.6851, 0.52 ) }
    dend_66 { pt3dadd( -34.4557, -89.7754, 16.4176, 0.81 ) }
    dend_66 { pt3dadd( -35.2718, -91.0033, 17.149, 0.44 ) }
    dend_66 { pt3dadd( -35.6869, -91.6359, 17.4851, 0.59 ) }
    dend_66 { pt3dadd( -36.0466, -92.2173, 17.8128, 0.74 ) }
    dend_66 { pt3dadd( -36.4093, -92.8518, 18.2339, 0.44 ) }
    dend_66 { pt3dadd( -36.8005, -93.5927, 18.7713, 0.44 ) }
    dend_66 { pt3dadd( -37.2167, -94.4378, 19.392, 0.29 ) }
    dend_66 { pt3dadd( -37.5424, -95.2065, 19.9789, 0.44 ) }
    dend_66 { pt3dadd( -37.9037, -96.1853, 20.8227, 0.81 ) }
    dend_66 { pt3dadd( -38.2575, -97.3093, 21.9217, 1.03 ) }
    dend_66 { pt3dadd( -38.2667, -97.3477, 21.9643, 1.03 ) }
    dend_66 { pt3dadd( -42.6275, -103.662, 26.9828, 1.03 ) }
    dend_66 { pt3dadd( -47.4647, -109.824, 31.7588, 1.03 ) }
    dend_66 { pt3dadd( -51.7091, -116.972, 35.5501, 1.03 ) }
    dend_66 { pt3dadd( -57.119, -123.597, 38.8175, 1.03 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 35/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -2.44626, -59.8337, -5.85213, 1.4 ) }
    dend_48 { pt3dadd( -1.88492, -60.3562, -6.02507, 1.4 ) }
    dend_48 { pt3dadd( -0.991848, -61.1634, -6.4063, 1.11 ) }
    dend_48 { pt3dadd( 0.0519065, -62.189, -7.05386, 0.96 ) }
    dend_48 { pt3dadd( 0.820499, -63.0304, -7.70144, 0.96 ) }
    dend_48 { pt3dadd( 1.40101, -63.7587, -8.34708, 1.11 ) }
    dend_48 { pt3dadd( 2.0332, -64.6138, -9.12915, 1.25 ) }
    dend_48 { pt3dadd( 2.80342, -65.7506, -10.2357, 1.18 ) }
    dend_48 { pt3dadd( 3.61552, -67.1015, -11.5369, 1.18 ) }
    dend_48 { pt3dadd( 4.18845, -68.2422, -12.5599, 1.03 ) }
    dend_48 { pt3dadd( 4.79954, -69.7739, -13.7708, 0.88 ) }
    dend_48 { pt3dadd( 5.03261, -70.5276, -14.2587, 0.96 ) }
    dend_48 { pt3dadd( 5.38113, -71.9326, -14.9795, 1.11 ) }
    dend_48 { pt3dadd( 5.67059, -73.4329, -15.5525, 1.11 ) }
    dend_48 { pt3dadd( 5.82256, -74.4884, -15.8135, 0.96 ) }
    dend_48 { pt3dadd( 5.95025, -75.9014, -16.0335, 1.11 ) }
    dend_48 { pt3dadd( 5.98481, -77.8657, -16.2435, 1.18 ) }
    dend_48 { pt3dadd( 5.93145, -78.8363, -16.3518, 1.18 ) }
    dend_48 { pt3dadd( 5.80821, -79.9277, -16.4846, 1.18 ) }
    dend_48 { pt3dadd( 5.50623, -82.007, -16.7625, 0.96 ) }
    dend_48 { pt3dadd( 5.28298, -83.3951, -16.9676, 1.03 ) }
    dend_48 { pt3dadd( 4.91258, -85.5277, -17.3371, 1.03 ) }
    dend_48 { pt3dadd( 4.61536, -87.0663, -17.6467, 1.33 ) }
    dend_48 { pt3dadd( 4.40093, -88.1928, -17.9063, 1.55 ) }
    dend_48 { pt3dadd( 4.24453, -89.1155, -18.1603, 1.33 ) }
    dend_48 { pt3dadd( 4.02987, -90.5826, -18.6206, 1.03 ) }
    dend_48 { pt3dadd( 3.90611, -91.8094, -19.0151, 1.33 ) }
    dend_48 { pt3dadd( 3.84158, -92.8951, -19.3649, 1.33 ) }
    dend_48 { pt3dadd( 3.74391, -94.9501, -19.9895, 1.25 ) }
    dend_48 { pt3dadd( 3.60892, -97.1663, -20.6775, 1.03 ) }
    dend_48 { pt3dadd( 3.50389, -98.4244, -21.0742, 0.96 ) }
    dend_48 { pt3dadd( 3.31395, -100.011, -21.5795, 0.96 ) }
    dend_48 { pt3dadd( 3.15346, -100.989, -21.8863, 0.96 ) }
    dend_48 { pt3dadd( 2.87893, -102.434, -22.3602, 0.96 ) }
    dend_48 { pt3dadd( 2.53013, -103.787, -22.8104, 1.11 ) }
    dend_48 { pt3dadd( 2.28895, -104.445, -23.023, 1.25 ) }
    dend_48 { pt3dadd( 1.72445, -105.589, -23.431, 1.4 ) }
    dend_48 { pt3dadd( 1.25177, -106.275, -23.7185, 1.4 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -2.44626, -59.8337, -5.85213, 1.11 ) }
    dend_43 { pt3dadd( -4.06267, -62.5058, -3.71593, 1.11 ) }
    dend_43 { pt3dadd( -4.30135, -63.1257, -3.37657, 1.11 ) }
    dend_43 { pt3dadd( -4.61151, -64.132, -2.91233, 1.03 ) }
    dend_43 { pt3dadd( -4.95189, -65.6782, -2.32908, 1.11 ) }
    dend_43 { pt3dadd( -4.96231, -65.7501, -2.30761, 1.11 ) }
    dend_43 { pt3dadd( -5.11118, -67.0485, -1.99065, 1.11 ) }
    dend_43 { pt3dadd( -5.13545, -68.5219, -1.79052, 1.11 ) }
    dend_43 { pt3dadd( -5.13644, -68.5991, -1.78045, 1.11 ) }
    dend_43 { pt3dadd( -5.15404, -69.9237, -1.62503, 1.11 ) }
    dend_43 { pt3dadd( -5.1707, -71.5677, -1.47596, 1.03 ) }
    dend_43 { pt3dadd( -5.19013, -72.6282, -1.40175, 1.33 ) }
    dend_43 { pt3dadd( -5.25761, -73.8907, -1.34608, 1.18 ) }
    dend_43 { pt3dadd( -5.46445, -75.4827, -1.34266, 0.88 ) }
    dend_43 { pt3dadd( -5.47812, -75.5594, -1.34485, 0.88 ) }
    dend_43 { pt3dadd( -5.92898, -77.2903, -1.43924, 0.88 ) }
    dend_43 { pt3dadd( -6.38334, -78.6493, -1.55275, 0.88 ) }
    dend_43 { pt3dadd( -6.86256, -79.8318, -1.69131, 1.11 ) }
    dend_43 { pt3dadd( -7.60151, -81.4172, -1.84462, 0.88 ) }
    dend_43 { pt3dadd( -7.63324, -81.4773, -1.84741, 0.88 ) }
    dend_43 { pt3dadd( -8.22363, -82.5906, -1.83436, 0.88 ) }
    dend_43 { pt3dadd( -8.33485, -82.7935, -1.81713, 0.88 ) }
    dend_43 { pt3dadd( -8.77047, -83.745, -1.65571, 0.96 ) }
    dend_43 { pt3dadd( -9.43541, -85.6815, -1.20912, 0.81 ) }
    dend_43 { pt3dadd( -9.58685, -86.2631, -1.0627, 1.18 ) }
    dend_43 { pt3dadd( -9.80015, -87.2321, -0.829917, 0.96 ) }
    dend_43 { pt3dadd( -9.82549, -87.38, -0.79838, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_43 { pt3dadd( -10.0086, -88.7761, -0.531911, 0.74 ) }
    dend_43 { pt3dadd( -10.0682, -89.7519, -0.440548, 0.96 ) }
    dend_43 { pt3dadd( -10.0738, -90.5842, -0.467238, 1.03 ) }
    dend_43 { pt3dadd( -10.066, -90.7355, -0.489703, 1.03 ) }
    dend_43 { pt3dadd( -9.97412, -91.7222, -0.715234, 1.33 ) }
    dend_43 { pt3dadd( -9.83436, -92.7242, -1.01331, 1.55 ) }
    dend_43 { pt3dadd( -9.56257, -94.2464, -1.55705, 1.25 ) }
    dend_43 { pt3dadd( -9.27529, -95.3847, -1.98094, 1.4 ) }
    dend_43 { pt3dadd( -8.81158, -96.9813, -2.56047, 1.55 ) }
    dend_43 { pt3dadd( -8.46136, -98.1234, -2.9666, 1.11 ) }
    dend_43 { pt3dadd( -7.9834, -99.5687, -3.47912, 0.74 ) }
    dend_43 { pt3dadd( -7.95931, -99.6477, -3.50491, 0.74 ) }
    dend_43 { pt3dadd( -7.69166, -100.65, -3.80315, 0.74 ) }
    dend_43 { pt3dadd( -7.54411, -101.367, -3.94508, 0.96 ) }
    dend_43 { pt3dadd( -7.53116, -101.467, -3.95237, 0.96 ) }
    dend_43 { pt3dadd( -7.42914, -102.82, -3.99016, 1.11 ) }
    dend_43 { pt3dadd( -7.32111, -103.95, -3.95217, 1.11 ) }
    dend_43 { pt3dadd( -7.11156, -105.469, -3.98098, 1.25 ) }
    dend_43 { pt3dadd( -6.73786, -107.776, -4.0998, 0.96 ) }
    dend_43 { pt3dadd( -6.40221, -109.395, -4.23734, 0.96 ) }
    dend_43 { pt3dadd( -6.11969, -110.565, -4.36022, 1.11 ) }
    dend_43 { pt3dadd( -5.4711, -112.913, -4.63883, 1.11 ) }
    dend_43 { pt3dadd( -4.77736, -115.141, -4.96845, 1.25 ) }
    dend_43 { pt3dadd( -4.56224, -115.803, -5.08539, 1.55 ) }
    dend_43 { pt3dadd( -4.12728, -117.144, -5.43635, 1.47 ) }
    dend_43 { pt3dadd( -4.10885, -117.216, -5.45214, 1.47 ) }
    dend_43 { pt3dadd( -3.98568, -118.06, -5.57953, 0.88 ) }
    dend_43 { pt3dadd( -4.03045, -119.196, -5.58552, 0.59 ) }
    dend_43 { pt3dadd( -4.20838, -120.356, -5.39356, 0.74 ) }
    dend_43 { pt3dadd( -4.38085, -121.178, -5.20873, 1.03 ) }
    dend_43 { pt3dadd( -4.76535, -122.788, -4.80543, 1.03 ) }
    dend_43 { pt3dadd( -4.93983, -123.493, -4.62894, 1.25 ) }
    dend_43 { pt3dadd( -5.34639, -125.108, -4.21693, 1.25 ) }
    dend_43 { pt3dadd( -5.6557, -126.339, -3.89679, 0.74 ) }
    dend_43 { pt3dadd( -5.89295, -127.355, -3.68798, 0.74 ) }
    dend_43 { pt3dadd( -6.06997, -128.401, -3.61507, 0.96 ) }
    dend_43 { pt3dadd( -6.07473, -128.468, -3.62209, 0.96 ) }
    dend_43 { pt3dadd( -6.05981, -129.659, -3.8632, 1.18 ) }
    dend_43 { pt3dadd( -6.05152, -129.744, -3.88705, 1.18 ) }
    dend_43 { pt3dadd( -5.81405, -131.256, -4.32278, 1.33 ) }
    dend_43 { pt3dadd( -5.4799, -133.062, -4.78758, 1.03 ) }
    dend_43 { pt3dadd( -5.21363, -134.542, -5.1128, 0.88 ) }
    dend_43 { pt3dadd( -5.12572, -135.099, -5.22016, 1.33 ) }
    dend_43 { pt3dadd( -4.98633, -136.236, -5.40845, 1.33 ) }
    dend_43 { pt3dadd( -4.89761, -137.512, -5.57586, 1.55 ) }
    dend_43 { pt3dadd( -4.92632, -138.771, -5.67441, 1.33 ) }
    dend_43 { pt3dadd( -5.09044, -139.915, -5.73888, 1.11 ) }
    dend_43 { pt3dadd( -5.40332, -141.135, -5.82411, 0.66 ) }
    dend_43 { pt3dadd( -5.82503, -142.33, -5.93551, 0.66 ) }
    dend_43 { pt3dadd( -6.33856, -143.474, -6.06766, 0.74 ) }
    dend_43 { pt3dadd( -6.95946, -144.675, -6.2212, 0.59 ) }
    dend_43 { pt3dadd( -7.38152, -145.478, -6.3103, 0.88 ) }
    dend_43 { pt3dadd( -7.75188, -146.294, -6.37351, 0.96 ) }
    dend_43 { pt3dadd( -7.99462, -147.092, -6.39151, 0.88 ) }
    dend_43 { pt3dadd( -8.00291, -147.166, -6.38123, 0.88 ) }
    dend_43 { pt3dadd( -7.95606, -148.232, -6.11079, 0.74 ) }
    dend_43 { pt3dadd( -7.8327, -149.25, -5.80543, 1.25 ) }
    dend_43 { pt3dadd( -7.69815, -150.355, -5.45102, 1.25 ) }
    dend_43 { pt3dadd( -7.60249, -151.585, -5.06664, 1.03 ) }
    dend_43 { pt3dadd( -7.61235, -153.651, -4.48307, 0.74 ) }
    dend_43 { pt3dadd( -7.72025, -154.823, -4.19408, 0.59 ) }
    dend_43 { pt3dadd( -7.86829, -155.513, -4.06363, 0.81 ) }
    dend_43 { pt3dadd( -8.21405, -156.48, -3.96988, 0.88 ) }
    dend_43 { pt3dadd( -8.72342, -157.6, -3.9594, 1.03 ) }
    dend_43 { pt3dadd( -9.14768, -158.547, -4.01678, 1.11 ) }
    dend_43 { pt3dadd( -9.22834, -158.761, -4.05658, 1.11 ) }
    dend_43 { pt3dadd( -9.52552, -159.819, -4.34123, 0.96 ) }
    dend_43 { pt3dadd( -9.76489, -161.02, -4.72476, 1.11 ) }
    dend_43 { pt3dadd( -9.90199, -162.228, -5.14954, 0.96 ) }
    dend_43 { pt3dadd( -9.99118, -163.993, -5.79855, 1.18 ) }
    dend_43 { pt3dadd( -10.0814, -165.886, -6.42695, 1.03 ) }
    dend_43 { pt3dadd( -10.1845, -167.829, -7.03018, 0.96 ) }
    dend_43 { pt3dadd( -10.1891, -167.963, -7.0673, 0.96 ) }
    dend_43 { pt3dadd( -10.2101, -169.375, -7.37083, 0.96 ) }
    dend_43 { pt3dadd( -10.2284, -170.408, -7.46554, 1.4 ) }
    dend_43 { pt3dadd( -10.2639, -172.423, -7.35379, 1.11 ) }
    dend_43 { pt3dadd( -10.2647, -172.523, -7.33493, 1.11 ) }
    dend_43 { pt3dadd( -10.2571, -173.696, -7.04398, 1.25 ) }
    dend_43 { pt3dadd( -10.2246, -175.222, -6.66503, 1.11 ) }
    dend_43 { pt3dadd( -10.1409, -176.899, -6.26388, 0.88 ) }
    dend_43 { pt3dadd( -10.0604, -177.818, -6.07058, 1.18 ) }
    dend_43 { pt3dadd( -9.84382, -179.277, -5.82492, 1.25 ) }
    dend_43 { pt3dadd( -9.70712, -180.275, -5.67513, 1.4 ) }
    dend_43 { pt3dadd( -9.69756, -180.36, -5.66554, 1.4 ) }
    dend_43 { pt3dadd( -9.58985, -181.836, -5.54199, 1.03 ) }
    dend_43 { pt3dadd( -9.58779, -182.066, -5.53409, 1.03 ) }
    dend_43 { pt3dadd( -9.68044, -183.326, -5.5093, 0.74 ) }
    dend_43 { pt3dadd( -9.8889, -184.408, -5.45902, 0.74 ) }
    dend_43 { pt3dadd( -10.1633, -185.25, -5.41456, 0.96 ) }
    dend_43 { pt3dadd( -10.7012, -186.498, -5.3516, 0.88 ) }
    dend_43 { pt3dadd( -11.3145, -187.622, -5.30056, 0.88 ) }
    dend_43 { pt3dadd( -11.9023, -188.581, -5.26401, 0.88 ) }
    dend_43 { pt3dadd( -12.7791, -189.837, -5.22555, 1.11 ) }
    dend_43 { pt3dadd( -13.4027, -190.714, -5.20211, 1.25 ) }
    dend_43 { pt3dadd( -13.9714, -191.551, -5.18973, 1.4 ) }
    dend_43 { pt3dadd( -14.1268, -191.803, -5.20294, 1.4 ) }
    dend_43 { pt3dadd( -14.4764, -192.518, -5.26295, 1.4 ) }
    dend_43 { pt3dadd( -14.5468, -192.734, -5.31289, 1.4 ) }
    dend_43 { pt3dadd( -14.7532, -194.009, -5.80061, 1.25 ) }
    dend_43 { pt3dadd( -14.8157, -194.976, -6.22436, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -14.7818, -195.838, -6.6508, 0.96 ) }
    dend_43 { pt3dadd( -14.664, -197.06, -7.29573, 0.96 ) }
    dend_43 { pt3dadd( -14.3481, -199.122, -8.52455, 0.81 ) }
    dend_43 { pt3dadd( -13.9866, -200.85, -9.67157, 0.81 ) }
    dend_43 { pt3dadd( -13.807, -201.622, -10.2355, 1.03 ) }
    dend_43 { pt3dadd( -13.4119, -203.447, -11.5896, 1.03 ) }
    dend_43 { pt3dadd( -13.395, -203.536, -11.6532, 1.03 ) }
    dend_43 { pt3dadd( -13.1551, -205.065, -12.6905, 1.55 ) }
    dend_43 { pt3dadd( -12.9698, -206.895, -13.7472, 0.88 ) }
    dend_43 { pt3dadd( -12.8625, -208.626, -14.6584, 0.81 ) }
    dend_43 { pt3dadd( -12.8185, -209.971, -15.3533, 0.81 ) }
    dend_43 { pt3dadd( -12.8182, -210.961, -15.8366, 0.96 ) }
    dend_43 { pt3dadd( -12.8283, -211.996, -16.3058, 0.96 ) }
    dend_43 { pt3dadd( -12.8531, -213.051, -16.7127, 0.74 ) }
    dend_43 { pt3dadd( -12.8959, -214.779, -17.3193, 1.25 ) }
    dend_43 { pt3dadd( -12.8735, -216.441, -17.8689, 0.81 ) }
    dend_43 { pt3dadd( -12.8718, -216.513, -17.8917, 0.81 ) }
    dend_43 { pt3dadd( -12.8916, -217.712, -18.1703, 0.81 ) }
    dend_43 { pt3dadd( -12.9619, -218.65, -18.3183, 1.18 ) }
    dend_43 { pt3dadd( -12.9795, -218.794, -18.3265, 1.18 ) }
    dend_43 { pt3dadd( -13.1435, -219.806, -18.2882, 1.18 ) }
    dend_43 { pt3dadd( -13.425, -221.571, -18.1232, 0.81 ) }
    dend_43 { pt3dadd( -13.6914, -223.301, -17.9616, 0.81 ) }
    dend_43 { pt3dadd( -13.8333, -224.24, -17.87, 1.11 ) }
    dend_43 { pt3dadd( -14.0637, -225.812, -17.7457, 1.11 ) }
    dend_43 { pt3dadd( -14.0872, -225.976, -17.7296, 1.11 ) }
    dend_43 { pt3dadd( -14.3064, -227.343, -17.4735, 0.96 ) }
    dend_43 { pt3dadd( -14.4077, -228.01, -17.3034, 1.25 ) }
    dend_43 { pt3dadd( -14.4188, -228.082, -17.2837, 1.25 ) }
    dend_43 { pt3dadd( -14.6275, -229.337, -16.8992, 1.25 ) }
    dend_43 { pt3dadd( -15.0259, -231.35, -16.2665, 1.03 ) }
    dend_43 { pt3dadd( -15.5441, -233.763, -15.5093, 0.81 ) }
    dend_43 { pt3dadd( -15.7181, -234.597, -15.254, 1.11 ) }
    dend_43 { pt3dadd( -15.9766, -236.043, -14.8547, 0.96 ) }
    dend_43 { pt3dadd( -16.0133, -236.279, -14.801, 0.96 ) }
    dend_43 { pt3dadd( -16.1734, -237.511, -14.5818, 0.81 ) }
    dend_43 { pt3dadd( -16.1826, -237.612, -14.5761, 0.81 ) }
    dend_43 { pt3dadd( -16.3036, -239.331, -14.6364, 0.96 ) }
    dend_43 { pt3dadd( -16.3734, -240.436, -14.6747, 1.18 ) }
    dend_43 { pt3dadd( -16.4355, -241.623, -14.7131, 1.03 ) }
    dend_43 { pt3dadd( -16.4408, -241.7, -14.716, 1.03 ) }
    dend_43 { pt3dadd( -16.5665, -243.063, -14.7746, 0.74 ) }
    dend_43 { pt3dadd( -16.7741, -244.903, -14.891, 0.74 ) }
    dend_43 { pt3dadd( -16.8871, -245.907, -15.0074, 0.81 ) }
    dend_43 { pt3dadd( -16.8964, -246.007, -15.022, 0.81 ) }
    dend_43 { pt3dadd( -16.9443, -246.977, -15.1808, 0.81 ) }
    dend_43 { pt3dadd( -16.945, -248.428, -15.4251, 0.81 ) }
    dend_43 { pt3dadd( -16.815, -250.123, -15.7394, 1.03 ) }
    dend_43 { pt3dadd( -16.6374, -251.57, -16.0273, 1.03 ) }
    dend_43 { pt3dadd( -16.629, -251.644, -16.0424, 1.03 ) }
    dend_43 { pt3dadd( -16.554, -252.639, -16.2509, 1.25 ) }
    dend_43 { pt3dadd( -16.5068, -253.579, -16.4509, 0.96 ) }
    dend_43 { pt3dadd( -16.5208, -254.834, -16.6965, 0.81 ) }
    dend_43 { pt3dadd( -16.589, -255.637, -16.8408, 1.11 ) }
    dend_43 { pt3dadd( -16.7258, -256.838, -17.0264, 1.33 ) }
    dend_43 { pt3dadd( -16.8683, -258.006, -17.2211, 1.33 ) }
    dend_43 { pt3dadd( -16.8774, -258.091, -17.2371, 1.33 ) }
    dend_43 { pt3dadd( -17.0071, -259.688, -17.5441, 0.74 ) }
    dend_43 { pt3dadd( -17.0355, -261.359, -17.8753, 0.96 ) }
    dend_43 { pt3dadd( -16.923, -262.751, -18.1426, 0.96 ) }
    dend_43 { pt3dadd( -16.9014, -262.887, -18.1616, 0.96 ) }
    dend_43 { pt3dadd( -16.602, -264.302, -18.2878, 0.96 ) }
    dend_43 { pt3dadd( -16.3422, -265.571, -18.2915, 0.81 ) }
    dend_43 { pt3dadd( -16.0997, -266.937, -18.1859, 0.66 ) }
    dend_43 { pt3dadd( -15.9467, -268.274, -17.9965, 0.66 ) }
    dend_43 { pt3dadd( -15.8901, -269.551, -17.7776, 1.33 ) }
    dend_43 { pt3dadd( -15.931, -270.62, -17.5485, 1.33 ) }
    dend_43 { pt3dadd( -16.1739, -272.546, -17.0589, 1.11 ) }
    dend_43 { pt3dadd( -16.3993, -273.925, -16.6827, 1.18 ) }
    dend_43 { pt3dadd( -16.5401, -274.696, -16.4704, 1.4 ) }
    dend_43 { pt3dadd( -16.719, -275.888, -16.183, 1.11 ) }
    dend_43 { pt3dadd( -16.8072, -277.286, -15.9144, 0.59 ) }
    dend_43 { pt3dadd( -16.769, -278.192, -15.7738, 0.52 ) }
    dend_43 { pt3dadd( -16.5828, -279.433, -15.6309, 0.88 ) }
    dend_43 { pt3dadd( -16.2966, -280.655, -15.5285, 1.18 ) }
    dend_43 { pt3dadd( -15.951, -281.982, -15.4703, 1.03 ) }
    dend_43 { pt3dadd( -15.4835, -283.66, -15.4691, 0.96 ) }
    dend_43 { pt3dadd( -15.0258, -285.324, -15.585, 0.81 ) }
    dend_43 { pt3dadd( -14.7883, -286.306, -15.6994, 1.11 ) }
    dend_43 { pt3dadd( -14.5833, -287.449, -15.8947, 1.69 ) }
    dend_43 { pt3dadd( -14.4211, -288.729, -16.1813, 1.18 ) }
    dend_43 { pt3dadd( -14.4188, -288.814, -16.1998, 1.18 ) }
    dend_43 { pt3dadd( -14.5106, -290.147, -16.4332, 0.59 ) }
    dend_43 { pt3dadd( -14.5225, -290.221, -16.4312, 0.59 ) }
    dend_43 { pt3dadd( -14.7521, -291.348, -16.1588, 1.03 ) }
    dend_43 { pt3dadd( -14.7798, -291.476, -16.1089, 1.03 ) }
    dend_43 { pt3dadd( -15.062, -293.122, -15.3272, 1.25 ) }
    dend_43 { pt3dadd( -15.1588, -293.828, -14.9741, 1.25 ) }
    dend_43 { pt3dadd( -15.3526, -295.509, -14.1201, 0.96 ) }
    dend_43 { pt3dadd( -15.4582, -296.467, -13.6865, 0.66 ) }
    dend_43 { pt3dadd( -15.546, -297.322, -13.3593, 0.66 ) }
    dend_43 { pt3dadd( -15.618, -298.064, -13.153, 0.37 ) }
    dend_43 { pt3dadd( -15.6805, -299.079, -13.0819, 0.52 ) }
    dend_43 { pt3dadd( -15.7718, -300.261, -13.1768, 0.81 ) }
    dend_43 { pt3dadd( -15.8887, -301.199, -13.3888, 1.11 ) }
    dend_43 { pt3dadd( -16.0257, -302.13, -13.6955, 1.4 ) }
    dend_43 { pt3dadd( -16.197, -303.283, -14.1319, 1.4 ) }
    dend_43 { pt3dadd( -16.5146, -305.293, -14.9741, 0.81 ) }
    dend_43 { pt3dadd( -16.6614, -306.428, -15.482, 0.66 ) }
    dend_43 { pt3dadd( -16.7326, -307.515, -15.9709, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -16.6934, -308.999, -16.584, 0.37 ) }
    dend_43 { pt3dadd( -16.6118, -309.822, -16.8955, 0.88 ) }
    dend_43 { pt3dadd( -16.6029, -309.894, -16.918, 0.88 ) }
    dend_43 { pt3dadd( -16.5485, -310.655, -17.0721, 1.25 ) }
    dend_43 { pt3dadd( -16.5335, -311.541, -17.2294, 1.25 ) }
    dend_43 { pt3dadd( -16.5983, -312.547, -17.3891, 0.88 ) }
    dend_43 { pt3dadd( -16.901, -314.25, -17.641, 0.66 ) }
    dend_43 { pt3dadd( -17.3257, -315.839, -17.9084, 0.66 ) }
    dend_43 { pt3dadd( -17.831, -317.341, -18.2048, 0.88 ) }
    dend_43 { pt3dadd( -18.2366, -318.416, -18.481, 0.88 ) }
    dend_43 { pt3dadd( -18.5797, -319.306, -18.775, 1.11 ) }
    dend_43 { pt3dadd( -18.8681, -320.115, -19.0693, 1.18 ) }
    dend_43 { pt3dadd( -19.0698, -320.749, -19.2742, 1.18 ) }
    dend_43 { pt3dadd( -19.5554, -322.65, -19.8463, 0.88 ) }
    dend_43 { pt3dadd( -19.8565, -324.273, -20.2793, 1.25 ) }
    dend_43 { pt3dadd( -20.0835, -326.06, -20.6742, 0.74 ) }
    dend_43 { pt3dadd( -20.215, -327.526, -20.933, 0.59 ) }
    dend_43 { pt3dadd( -20.3212, -329.207, -21.1521, 1.03 ) }
    dend_43 { pt3dadd( -20.3785, -330.222, -21.211, 0.74 ) }
    dend_43 { pt3dadd( -20.4548, -331.382, -21.1516, 0.59 ) }
    dend_43 { pt3dadd( -20.4853, -331.617, -21.1193, 0.59 ) }
    dend_43 { pt3dadd( -20.7405, -332.813, -20.9097, 0.74 ) }
    dend_43 { pt3dadd( -20.7636, -332.887, -20.907, 0.74 ) }
    dend_43 { pt3dadd( -21.1166, -333.978, -21.0568, 0.59 ) }
    dend_43 { pt3dadd( -21.1433, -334.061, -21.0745, 0.59 ) }
    dend_43 { pt3dadd( -21.5455, -335.5, -21.4344, 0.74 ) }
    dend_43 { pt3dadd( -21.8797, -336.955, -21.8189, 0.59 ) }
    dend_43 { pt3dadd( -22.1697, -338.847, -22.336, 0.59 ) }
    dend_43 { pt3dadd( -22.3412, -340.562, -22.8302, 0.59 ) }
    dend_43 { pt3dadd( -22.372, -341.778, -23.1969, 0.59 ) }
    dend_43 { pt3dadd( -22.3364, -342.848, -23.5245, 0.81 ) }
    dend_43 { pt3dadd( -22.3103, -343.075, -23.5949, 0.81 ) }
    dend_43 { pt3dadd( -22.1222, -343.976, -23.8558, 0.81 ) }
    dend_43 { pt3dadd( -22.1068, -344.039, -23.8652, 0.81 ) }
    dend_43 { pt3dadd( -21.9483, -345.132, -23.9174, 0.81 ) }
    dend_43 { pt3dadd( -21.9485, -345.2, -23.9135, 0.81 ) }
    dend_43 { pt3dadd( -22.0553, -346.349, -23.7947, 0.66 ) }
    dend_43 { pt3dadd( -22.0621, -346.416, -23.7864, 0.66 ) }
    dend_43 { pt3dadd( -22.2106, -347.746, -23.6006, 0.66 ) }
    dend_43 { pt3dadd( -22.3244, -349.374, -23.3496, 0.44 ) }
    dend_43 { pt3dadd( -22.4151, -351.542, -22.9859, 0.66 ) }
    dend_43 { pt3dadd( -22.3834, -353.413, -22.5924, 0.96 ) }
    dend_43 { pt3dadd( -22.2684, -354.998, -22.1951, 0.96 ) }
    dend_43 { pt3dadd( -22.2537, -355.115, -22.1629, 0.96 ) }
    dend_43 { pt3dadd( -21.9352, -356.646, -21.6799, 0.81 ) }
    dend_43 { pt3dadd( -21.8935, -356.789, -21.6326, 0.81 ) }
    dend_43 { pt3dadd( -21.33, -358.359, -21.1748, 0.74 ) }
    dend_43 { pt3dadd( -21.3041, -358.43, -21.1531, 0.74 ) }
    dend_43 { pt3dadd( -21.0934, -359.17, -20.9571, 0.96 ) }
    dend_43 { pt3dadd( -21.0565, -359.32, -20.9351, 0.96 ) }
    dend_43 { pt3dadd( -20.8422, -360.598, -20.8341, 0.96 ) }
    dend_43 { pt3dadd( -20.7216, -361.508, -20.8225, 0.96 ) }
    dend_43 { pt3dadd( -20.716, -361.586, -20.8304, 0.96 ) }
    dend_43 { pt3dadd( -20.632, -362.746, -20.9599, 0.52 ) }
    dend_43 { pt3dadd( -20.5353, -364.024, -21.1232, 0.52 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -37.291, -59.8212, -11.9529, 0.74 ) }
    dend_34 { pt3dadd( -37.9997, -59.6966, -11.5407, 0.74 ) }
    dend_34 { pt3dadd( -38.0627, -59.6945, -11.4876, 0.74 ) }
    dend_34 { pt3dadd( -38.9222, -59.7693, -10.6035, 0.52 ) }
    dend_34 { pt3dadd( -39.3712, -59.8324, -10.1338, 0.44 ) }
    dend_34 { pt3dadd( -40.1227, -59.946, -9.38726, 0.44 ) }
    dend_34 { pt3dadd( -40.8525, -60.0578, -8.71395, 0.96 ) }
    dend_34 { pt3dadd( -42.2, -60.3402, -7.52501, 0.74 ) }
    dend_34 { pt3dadd( -43.0226, -60.5406, -6.87192, 0.74 ) }
    dend_34 { pt3dadd( -43.4316, -60.6652, -6.59357, 0.74 ) }
    dend_34 { pt3dadd( -44.0234, -60.8385, -6.25248, 0.59 ) }
    dend_34 { pt3dadd( -44.5452, -60.9629, -6.0057, 0.52 ) }
    dend_34 { pt3dadd( -45.2911, -61.1025, -5.72703, 0.52 ) }
    dend_34 { pt3dadd( -45.7978, -61.1793, -5.58666, 0.88 ) }
    dend_34 { pt3dadd( -46.6429, -61.2747, -5.36496, 0.59 ) }
    dend_34 { pt3dadd( -47.9262, -61.3633, -4.95216, 0.96 ) }
    dend_34 { pt3dadd( -49.3562, -61.4202, -4.41588, 1.33 ) }
    dend_34 { pt3dadd( -49.9011, -61.4316, -4.18527, 1.33 ) }
    dend_34 { pt3dadd( -50.7798, -61.4473, -3.79284, 0.44 ) }
    dend_34 { pt3dadd( -51.2993, -61.4433, -3.56361, 0.44 ) }
    dend_34 { pt3dadd( -52.427, -61.4058, -3.1174, 0.44 ) }
    dend_34 { pt3dadd( -52.4842, -61.404, -3.09957, 0.44 ) }
    dend_34 { pt3dadd( -53.3974, -61.3537, -2.89467, 0.81 ) }
    dend_34 { pt3dadd( -54.0275, -61.3102, -2.6969, 0.96 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 79/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -37.291, -59.8212, -11.9529, 0.59 ) }
    dend_31 { pt3dadd( -38.7133, -61.097, -12.4873, 0.59 ) }
    dend_31 { pt3dadd( -39.4723, -61.8184, -12.7169, 0.52 ) }
    dend_31 { pt3dadd( -39.9239, -62.2493, -12.858, 0.88 ) }
    dend_31 { pt3dadd( -40.7778, -63.008, -13.1935, 0.88 ) }
    dend_31 { pt3dadd( -41.3783, -63.5076, -13.5655, 0.88 ) }
    dend_31 { pt3dadd( -41.9202, -63.9178, -13.9785, 1.03 ) }
    dend_31 { pt3dadd( -42.6986, -64.3665, -14.6475, 0.59 ) }
    dend_31 { pt3dadd( -43.3627, -64.6182, -15.3775, 0.44 ) }
    dend_31 { pt3dadd( -44.2328, -64.7451, -16.4689, 0.74 ) }
    dend_31 { pt3dadd( -45.687, -64.6056, -18.5226, 0.44 ) }
    dend_31 { pt3dadd( -46.0535, -64.4866, -19.0482, 0.44 ) }
    dend_31 { pt3dadd( -46.4703, -64.2968, -19.6278, 0.44 ) }
    dend_31 { pt3dadd( -46.9563, -64.0405, -20.2458, 0.74 ) }
    dend_31 { pt3dadd( -47.2946, -63.8708, -20.601, 0.96 ) }
    dend_31 { pt3dadd( -47.3553, -63.8494, -20.6446, 0.96 ) }
    dend_31 { pt3dadd( -48.02, -63.7117, -20.9494, 0.88 ) }
    dend_31 { pt3dadd( -49.4418, -63.4858, -21.5903, 0.44 ) }
    dend_31 { pt3dadd( -49.8768, -63.4123, -21.7835, 0.44 ) }
    dend_31 { pt3dadd( -49.9441, -63.3961, -21.8238, 0.44 ) }
    dend_31 { pt3dadd( -50.4256, -63.2334, -22.1531, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_31 { pt3dadd( -51.1285, -62.9229, -22.6907, 0.44 ) }
    dend_31 { pt3dadd( -51.5851, -62.662, -23.0565, 0.81 ) }
    dend_31 { pt3dadd( -51.996, -62.3662, -23.4185, 1.33 ) }
    dend_31 { pt3dadd( -53.3329, -61.3357, -24.6662, 1.33 ) }
    dend_31 { pt3dadd( -53.8906, -60.9193, -25.1721, 1.25 ) }
    dend_31 { pt3dadd( -54.5372, -60.4614, -25.74, 0.96 ) }
    dend_31 { pt3dadd( -55.235, -60.0158, -26.3506, 0.88 ) }
    dend_31 { pt3dadd( -56.0458, -59.5373, -27.0213, 0.74 ) }
    dend_31 { pt3dadd( -56.6842, -59.1879, -27.5012, 0.74 ) }
    dend_31 { pt3dadd( -57.5744, -58.7248, -28.1167, 0.66 ) }
    dend_31 { pt3dadd( -58.0563, -58.4783, -28.478, 0.52 ) }
    dend_31 { pt3dadd( -58.8436, -58.0683, -29.0731, 0.29 ) }
    dend_31 { pt3dadd( -59.3487, -57.7771, -29.5389, 0.37 ) }
    dend_31 { pt3dadd( -59.4041, -57.7404, -29.5972, 0.37 ) }
    dend_31 { pt3dadd( -60.202, -57.0375, -30.6337, 0.88 ) }
    dend_31 { pt3dadd( -60.4312, -56.7519, -31.0631, 1.25 ) }
    dend_31 { pt3dadd( -60.7269, -56.3404, -31.7579, 1.18 ) }
    dend_31 { pt3dadd( -61.2972, -55.5997, -33.0956, 0.66 ) }
    dend_31 { pt3dadd( -61.3276, -55.5659, -33.1611, 0.66 ) }
    dend_31 { pt3dadd( -61.7457, -55.1655, -33.9273, 0.74 ) }
    dend_31 { pt3dadd( -62.6784, -54.4375, -35.3545, 0.88 ) }
    dend_31 { pt3dadd( -63.3873, -53.9538, -36.3542, 0.52 ) }
    dend_31 { pt3dadd( -63.957, -53.6595, -37.0124, 0.88 ) }
    dend_31 { pt3dadd( -64.6254, -53.4459, -37.5855, 1.03 ) }
    dend_31 { pt3dadd( -65.3694, -53.286, -38.137, 1.33 ) }
    dend_31 { pt3dadd( -66.0628, -53.2008, -38.5581, 0.88 ) }
    dend_31 { pt3dadd( -66.1333, -53.1933, -38.5956, 0.88 ) }
    dend_31 { pt3dadd( -67.0357, -53.0945, -39.114, 0.59 ) }
    dend_31 { pt3dadd( -68.1709, -52.9676, -39.891, 0.52 ) }
    dend_31 { pt3dadd( -68.2968, -52.9505, -39.9888, 0.52 ) }
    dend_31 { pt3dadd( -68.6791, -52.8704, -40.3127, 0.81 ) }
    dend_31 { pt3dadd( -69.8974, -52.4496, -41.5617, 0.29 ) }
    dend_31 { pt3dadd( -69.9462, -52.4308, -41.6193, 0.29 ) }
    dend_31 { pt3dadd( -70.346, -52.2607, -42.2461, 0.29 ) }
    dend_31 { pt3dadd( -70.4983, -52.1975, -42.5201, 0.88 ) }
    dend_31 { pt3dadd( -70.6694, -52.1558, -42.8724, 1.18 ) }
    dend_31 { pt3dadd( -71.4666, -52.0829, -44.6228, 0.37 ) }
    dend_31 { pt3dadd( -71.9612, -52.1166, -45.6818, 0.74 ) }
    dend_31 { pt3dadd( -72.6413, -52.2689, -47.1343, 1.03 ) }
    dend_31 { pt3dadd( -72.6752, -52.2808, -47.2033, 1.03 ) }
    dend_31 { pt3dadd( -73.4388, -52.6103, -48.6327, 0.44 ) }
    dend_31 { pt3dadd( -73.6496, -52.704, -48.9815, 1.18 ) }
    dend_31 { pt3dadd( -74.0466, -52.8605, -49.5036, 1.47 ) }
    dend_31 { pt3dadd( -75.0641, -53.198, -51.0554, 0.81 ) }
    dend_31 { pt3dadd( -75.4903, -53.3187, -51.7335, 0.52 ) }
    dend_31 { pt3dadd( -76.0917, -53.4723, -52.7138, 0.37 ) }
    dend_31 { pt3dadd( -76.4495, -53.5546, -53.2927, 0.37 ) }
    dend_31 { pt3dadd( -76.9069, -53.6638, -54.0432, 1.18 ) }
    dend_31 { pt3dadd( -79.2398, -54.2729, -57.9849, 0.81 ) }
    dend_31 { pt3dadd( -79.3198, -54.2949, -58.1189, 0.81 ) }
    dend_31 { pt3dadd( -79.7659, -54.4367, -58.8699, 0.81 ) }
    dend_31 { pt3dadd( -80.0861, -54.5369, -59.3624, 0.88 ) }
    dend_31 { pt3dadd( -80.4251, -54.6595, -59.8599, 0.81 ) }
    dend_31 { pt3dadd( -81.2246, -54.9909, -60.856, 0.29 ) }
    dend_31 { pt3dadd( -81.4211, -55.0669, -61.0163, 0.29 ) }
    dend_31 { pt3dadd( -81.7522, -55.2299, -61.3457, 0.29 ) }
    dend_31 { pt3dadd( -82.3473, -55.5956, -62.0135, 1.18 ) }
    dend_31 { pt3dadd( -83.6037, -56.5683, -63.4644, 0.59 ) }
    dend_31 { pt3dadd( -83.9989, -56.9433, -63.8944, 1.33 ) }
    dend_31 { pt3dadd( -84.0482, -56.9975, -63.9432, 1.33 ) }
    dend_31 { pt3dadd( -85.0011, -58.1196, -64.8025, 0.74 ) }
    dend_31 { pt3dadd( -85.4794, -58.7254, -65.2033, 0.66 ) }
    dend_31 { pt3dadd( -86.0309, -59.4591, -65.6828, 0.37 ) }
    dend_31 { pt3dadd( -86.5981, -60.1939, -66.1263, 0.88 ) }
    dend_31 { pt3dadd( -87.1862, -60.9527, -66.6064, 1.03 ) }
    dend_31 { pt3dadd( -87.6718, -61.5855, -67.0348, 0.88 ) }
    dend_31 { pt3dadd( -87.7116, -61.64, -67.0718, 0.88 ) }
    dend_31 { pt3dadd( -88.6506, -63.1089, -68.1182, 0.74 ) }
    dend_31 { pt3dadd( -89.0812, -63.8521, -68.7685, 0.44 ) }
    dend_31 { pt3dadd( -89.3106, -64.2519, -69.1708, 1.47 ) }
    dend_31 { pt3dadd( -89.7909, -65.0403, -70.0803, 1.03 ) }
    dend_31 { pt3dadd( -90.0883, -65.4477, -70.6274, 0.74 ) }
    dend_31 { pt3dadd( -90.38, -65.7324, -71.0749, 0.74 ) }
    dend_31 { pt3dadd( -91.5766, -66.4894, -72.633, 0.52 ) }
    dend_31 { pt3dadd( -92.1686, -66.749, -73.4011, 0.66 ) }
    dend_31 { pt3dadd( -92.7157, -66.9663, -74.1439, 0.37 ) }
    dend_31 { pt3dadd( -93.1061, -67.1518, -74.7999, 0.29 ) }
    dend_31 { pt3dadd( -93.4541, -67.3385, -75.4657, 0.29 ) }
    dend_31 { pt3dadd( -93.8487, -67.5782, -76.2994, 0.74 ) }
    dend_31 { pt3dadd( -94.3795, -67.9659, -77.5191, 0.96 ) }
    dend_31 { pt3dadd( -95.0611, -68.5011, -79.2319, 0.96 ) }
    dend_31 { pt3dadd( -96.0205, -69.2362, -81.8154, 0.88 ) }
    dend_31 { pt3dadd( -96.0435, -69.2507, -81.8756, 0.88 ) }
    dend_31 { pt3dadd( -96.4719, -69.4543, -82.9488, 0.88 ) }
    dend_31 { pt3dadd( -96.6827, -69.5158, -83.4208, 1.03 ) }
    dend_31 { pt3dadd( -97.0544, -69.5826, -84.1233, 1.03 ) }
    dend_31 { pt3dadd( -97.6979, -69.6942, -85.131, 0.74 ) }
    dend_31 { pt3dadd( -98.4438, -69.9022, -86.184, 0.37 ) }
    dend_31 { pt3dadd( -98.4854, -69.9222, -86.2495, 0.37 ) }
    dend_31 { pt3dadd( -99.257, -70.4247, -87.5653, 0.37 ) }
    dend_31 { pt3dadd( -99.9218, -70.9663, -88.8155, 0.37 ) }
    dend_31 { pt3dadd( -100.523, -71.5207, -89.9763, 0.88 ) }
    dend_31 { pt3dadd( -101.112, -72.0522, -91.0454, 1.18 ) }
    dend_31 { pt3dadd( -101.974, -72.7988, -92.762, 0.59 ) }
    dend_31 { pt3dadd( -102.008, -72.8221, -92.8307, 0.59 ) }
    dend_31 { pt3dadd( -102.786, -73.1464, -94.3655, 0.44 ) }
    dend_31 { pt3dadd( -103.01, -73.1839, -94.88, 0.37 ) }
    dend_31 { pt3dadd( -103.388, -73.1633, -95.8657, 0.37 ) }
    dend_31 { pt3dadd( -104.242, -72.9642, -98.1355, 1.03 ) }
    dend_31 { pt3dadd( -104.681, -72.8112, -99.2637, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -105.067, -72.6898, -100.18, 1.25 ) }
    dend_31 { pt3dadd( -106.029, -72.494, -102.467, 1.18 ) }
    dend_31 { pt3dadd( -106.058, -72.4964, -102.539, 1.18 ) }
    dend_31 { pt3dadd( -106.509, -72.6485, -103.574, 0.59 ) }
    dend_31 { pt3dadd( -106.798, -72.8034, -104.146, 0.74 ) }
    dend_31 { pt3dadd( -107.123, -73.0293, -104.757, 0.74 ) }
    dend_31 { pt3dadd( -108.207, -73.902, -106.784, 0.88 ) }
    dend_31 { pt3dadd( -109.151, -74.8137, -109.06, 0.52 ) }
    dend_31 { pt3dadd( -109.386, -75.0751, -109.734, 1.18 ) }
    dend_31 { pt3dadd( -109.75, -75.5602, -111.028, 1.55 ) }
    dend_31 { pt3dadd( -109.924, -75.8126, -111.718, 1.25 ) }
    dend_31 { pt3dadd( -110.541, -76.736, -114.197, 0.74 ) }
    dend_31 { pt3dadd( -111.707, -78.5339, -118.851, 0.74 ) }
    dend_31 { pt3dadd( -111.843, -78.7572, -119.428, 1.4 ) }
    dend_31 { pt3dadd( -112.465, -79.8339, -122.31, 0.74 ) }
    dend_31 { pt3dadd( -112.499, -79.8884, -122.465, 0.74 ) }
    dend_31 { pt3dadd( -112.711, -80.1929, -123.418, 0.59 ) }
    dend_31 { pt3dadd( -112.733, -80.2148, -123.492, 0.59 ) }
    dend_31 { pt3dadd( -113.776, -80.84, -125.707, 0.59 ) }
    dend_31 { pt3dadd( -113.838, -80.871, -125.819, 0.59 ) }
    dend_31 { pt3dadd( -114.478, -81.1231, -126.843, 0.66 ) }
    dend_31 { pt3dadd( -114.854, -81.2633, -127.453, 0.88 ) }
    dend_31 { pt3dadd( -116.192, -81.7085, -129.636, 0.44 ) }
    dend_31 { pt3dadd( -116.374, -81.7672, -129.898, 1.03 ) }
    dend_31 { pt3dadd( -117.444, -82.0942, -131.031, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 25/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -22.1588, -180.637, -74.4838, 0.29 ) }
    dend_29 { pt3dadd( -23.3375, -181.078, -74.9314, 0.29 ) }
    dend_29 { pt3dadd( -24.0668, -181.325, -75.1953, 0.29 ) }
    dend_29 { pt3dadd( -25.1105, -181.657, -75.6538, 0.22 ) }
    dend_29 { pt3dadd( -25.5681, -181.823, -75.8625, 0.81 ) }
    dend_29 { pt3dadd( -26.0162, -182.002, -76.0671, 0.81 ) }
    dend_29 { pt3dadd( -26.3919, -182.165, -76.2688, 0.81 ) }
    dend_29 { pt3dadd( -27.0167, -182.465, -76.6618, 0.52 ) }
    dend_29 { pt3dadd( -28.2162, -183.107, -77.5227, 0.22 ) }
    dend_29 { pt3dadd( -29.0073, -183.578, -78.1251, 0.22 ) }
    dend_29 { pt3dadd( -29.3734, -183.817, -78.4179, 0.81 ) }
    dend_29 { pt3dadd( -30.412, -184.539, -79.2658, 0.96 ) }
    dend_29 { pt3dadd( -30.6601, -184.73, -79.4995, 1.11 ) }
    dend_29 { pt3dadd( -31.4513, -185.432, -80.4172, 0.22 ) }
    dend_29 { pt3dadd( -31.8337, -185.792, -80.8917, 0.22 ) }
    dend_29 { pt3dadd( -32.046, -185.991, -81.166, 0.74 ) }
    dend_29 { pt3dadd( -32.2805, -186.224, -81.4794, 0.96 ) }
    dend_29 { pt3dadd( -33.1151, -187.12, -82.6708, 0.59 ) }
    dend_29 { pt3dadd( -33.8786, -187.974, -83.8463, 0.29 ) }
    dend_29 { pt3dadd( -34.3898, -188.568, -84.7634, 0.22 ) }
    dend_29 { pt3dadd( -34.5234, -188.72, -85.0148, 0.37 ) }
    dend_29 { pt3dadd( -35.1456, -189.387, -86.1937, 0.22 ) }
    dend_29 { pt3dadd( -35.6588, -189.927, -87.176, 0.81 ) }
    dend_29 { pt3dadd( -35.8844, -190.161, -87.5923, 1.03 ) }
    dend_29 { pt3dadd( -36.6341, -191.019, -89.1967, 0.37 ) }
    dend_29 { pt3dadd( -36.8852, -191.326, -89.7896, 0.52 ) }
    dend_29 { pt3dadd( -37.4721, -192.051, -91.1891, 0.29 ) }
    dend_29 { pt3dadd( -37.7143, -192.335, -91.721, 0.66 ) }
    dend_29 { pt3dadd( -37.9205, -192.577, -92.1446, 0.81 ) }
    dend_29 { pt3dadd( -38.7877, -193.708, -94.1053, 0.29 ) }
    dend_29 { pt3dadd( -39.0001, -194.02, -94.6042, 0.44 ) }
    dend_29 { pt3dadd( -39.0252, -194.064, -94.675, 0.44 ) }
    dend_29 { pt3dadd( -39.2525, -194.487, -95.3333, 0.59 ) }
    dend_29 { pt3dadd( -39.5014, -195.091, -96.2421, 1.03 ) }
    dend_29 { pt3dadd( -39.8014, -196.279, -97.9666, 1.03 ) }
    dend_29 { pt3dadd( -39.923, -197.335, -99.436, 0.29 ) }
    dend_29 { pt3dadd( -39.9633, -198.316, -100.792, 0.88 ) }
    dend_29 { pt3dadd( -39.9734, -198.67, -101.282, 1.25 ) }
    dend_29 { pt3dadd( -40.0663, -200.961, -104.479, 0.29 ) }
    dend_29 { pt3dadd( -40.1377, -202.387, -106.467, 0.37 ) }
    dend_29 { pt3dadd( -40.2229, -203.432, -107.877, 0.81 ) }
    dend_29 { pt3dadd( -40.327, -204.385, -109.171, 0.44 ) }
    dend_29 { pt3dadd( -40.4294, -204.97, -109.953, 0.37 ) }
    dend_29 { pt3dadd( -40.6337, -205.792, -111.022, 0.37 ) }
    dend_29 { pt3dadd( -41.0622, -206.837, -112.263, 0.37 ) }
    dend_29 { pt3dadd( -41.4859, -207.63, -113.138, 0.37 ) }
    dend_29 { pt3dadd( -41.8475, -208.28, -113.807, 1.11 ) }
    dend_29 { pt3dadd( -42.0879, -208.706, -114.231, 1.25 ) }
    dend_29 { pt3dadd( -42.6816, -209.698, -115.275, 0.81 ) }
    dend_29 { pt3dadd( -43.269, -210.566, -116.201, 0.52 ) }
    dend_29 { pt3dadd( -43.5913, -210.938, -116.578, 0.52 ) }
    dend_29 { pt3dadd( -43.6368, -210.988, -116.633, 0.52 ) }
    dend_29 { pt3dadd( -44.215, -211.6, -117.303, 0.52 ) }
    dend_29 { pt3dadd( -45.2261, -212.629, -118.513, 0.44 ) }
    dend_29 { pt3dadd( -45.7092, -213.102, -119.071, 0.44 ) }
    dend_29 { pt3dadd( -46.4942, -213.921, -120.118, 0.74 ) }
    dend_29 { pt3dadd( -47.4619, -215.003, -121.538, 0.74 ) }
    dend_29 { pt3dadd( -47.4946, -215.043, -121.589, 0.74 ) }
    dend_29 { pt3dadd( -48.2504, -216.051, -122.838, 0.37 ) }
    dend_29 { pt3dadd( -48.5323, -216.438, -123.323, 0.81 ) }
    dend_29 { pt3dadd( -49.4664, -217.636, -125.008, 0.29 ) }
    dend_29 { pt3dadd( -49.7914, -218.005, -125.593, 0.29 ) }
    dend_29 { pt3dadd( -50.1313, -218.358, -126.098, 0.88 ) }
    dend_29 { pt3dadd( -50.2692, -218.506, -126.304, 1.25 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -22.1588, -180.637, -74.4838, 0.59 ) }
    dend_28 { pt3dadd( -21.8423, -183.004, -75.0491, 0.59 ) }
    dend_28 { pt3dadd( -21.728, -183.985, -75.241, 0.59 ) }
    dend_28 { pt3dadd( -21.6929, -184.259, -75.2858, 0.81 ) }
    dend_28 { pt3dadd( -21.5958, -184.892, -75.3692, 0.81 ) }
    dend_28 { pt3dadd( -21.4346, -185.808, -75.4708, 0.15 ) }
    dend_28 { pt3dadd( -21.2619, -186.646, -75.545, 0.15 ) }
    dend_28 { pt3dadd( -21.2467, -186.705, -75.538, 0.15 ) }
    dend_28 { pt3dadd( -21.1416, -187.054, -75.4985, 0.59 ) }
    dend_28 { pt3dadd( -20.9765, -187.571, -75.4436, 0.88 ) }
    dend_28 { pt3dadd( -20.9354, -187.704, -75.4307, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_28 { pt3dadd( -20.8258, -188.168, -75.393, 0.88 ) }
    dend_28 { pt3dadd( -20.6781, -189.145, -75.301, 0.52 ) }
    dend_28 { pt3dadd( -20.6333, -189.946, -75.2215, 0.44 ) }
    dend_28 { pt3dadd( -20.6468, -190.395, -75.1762, 0.74 ) }
    dend_28 { pt3dadd( -20.7029, -190.962, -75.1166, 0.44 ) }
    dend_28 { pt3dadd( -20.8305, -191.742, -74.9961, 0.29 ) }
    dend_28 { pt3dadd( -20.9646, -192.272, -74.895, 0.88 ) }
    dend_28 { pt3dadd( -21.0921, -192.761, -74.782, 0.96 ) }
    dend_28 { pt3dadd( -21.2545, -193.519, -74.5835, 0.81 ) }
    dend_28 { pt3dadd( -21.3777, -194.394, -74.3472, 0.29 ) }
    dend_28 { pt3dadd( -21.4214, -195.314, -74.1173, 0.44 ) }
    dend_28 { pt3dadd( -21.3906, -195.969, -73.9543, 0.22 ) }
    dend_28 { pt3dadd( -21.2362, -197.014, -73.7114, 0.22 ) }
    dend_28 { pt3dadd( -21.0597, -197.649, -73.5651, 0.59 ) }
    dend_28 { pt3dadd( -20.7683, -198.362, -73.3643, 0.81 ) }
    dend_28 { pt3dadd( -20.4531, -198.981, -73.173, 0.81 ) }
    dend_28 { pt3dadd( -20.1944, -199.454, -73.0275, 0.88 ) }
    dend_28 { pt3dadd( -19.7639, -200.343, -72.7385, 0.37 ) }
    dend_28 { pt3dadd( -19.4919, -201.243, -72.4552, 0.59 ) }
    dend_28 { pt3dadd( -19.3535, -202.135, -72.2078, 0.96 ) }
    dend_28 { pt3dadd( -19.3253, -202.771, -72.0501, 0.59 ) }
    dend_28 { pt3dadd( -19.3738, -203.542, -71.8894, 0.29 ) }
    dend_28 { pt3dadd( -19.5354, -204.62, -71.7881, 0.29 ) }
    dend_28 { pt3dadd( -19.796, -205.799, -71.7813, 0.74 ) }
    dend_28 { pt3dadd( -19.9648, -206.487, -71.8271, 0.96 ) }
    dend_28 { pt3dadd( -19.9878, -206.59, -71.8365, 0.96 ) }
    dend_28 { pt3dadd( -20.0978, -207.147, -71.8783, 0.96 ) }
    dend_28 { pt3dadd( -20.2776, -208.173, -71.9377, 0.44 ) }
    dend_28 { pt3dadd( -20.3866, -208.88, -71.9607, 0.29 ) }
    dend_28 { pt3dadd( -20.5895, -209.827, -71.9239, 0.59 ) }
    dend_28 { pt3dadd( -20.8279, -210.595, -71.8366, 1.03 ) }
    dend_28 { pt3dadd( -20.9196, -210.828, -71.7992, 1.11 ) }
    dend_28 { pt3dadd( -21.1214, -211.283, -71.7032, 0.96 ) }
    dend_28 { pt3dadd( -21.3803, -211.824, -71.5646, 0.96 ) }
    dend_28 { pt3dadd( -21.791, -212.63, -71.3516, 0.37 ) }
    dend_28 { pt3dadd( -22.2032, -213.423, -71.1544, 0.22 ) }
    dend_28 { pt3dadd( -22.4492, -213.934, -71.0453, 0.44 ) }
    dend_28 { pt3dadd( -22.8283, -214.809, -70.861, 0.44 ) }
    dend_28 { pt3dadd( -23.038, -215.432, -70.7306, 0.66 ) }
    dend_28 { pt3dadd( -23.174, -216.074, -70.6031, 0.88 ) }
    dend_28 { pt3dadd( -23.2663, -216.758, -70.4899, 0.29 ) }
    dend_28 { pt3dadd( -23.3601, -217.516, -70.2906, 0.29 ) }
    dend_28 { pt3dadd( -23.369, -217.599, -70.2625, 0.29 ) }
    dend_28 { pt3dadd( -23.4594, -218.315, -69.986, 0.29 ) }
    dend_28 { pt3dadd( -23.5919, -219.225, -69.625, 0.29 ) }
    dend_28 { pt3dadd( -23.7552, -220.254, -69.2168, 0.29 ) }
    dend_28 { pt3dadd( -24.0335, -221.542, -68.6365, 0.59 ) }
    dend_28 { pt3dadd( -24.1358, -221.864, -68.4829, 0.74 ) }
    dend_28 { pt3dadd( -24.4594, -222.699, -68.0907, 0.29 ) }
    dend_28 { pt3dadd( -24.7483, -223.351, -67.8026, 0.29 ) }
    dend_28 { pt3dadd( -24.7717, -223.413, -67.778, 0.29 ) }
    dend_28 { pt3dadd( -24.9425, -224.205, -67.5503, 0.81 ) }
    dend_28 { pt3dadd( -24.9905, -224.707, -67.4731, 1.25 ) }
    dend_28 { pt3dadd( -25.01, -225.262, -67.4272, 0.88 ) }
    dend_28 { pt3dadd( -24.963, -226.197, -67.3959, 0.52 ) }
    dend_28 { pt3dadd( -24.8364, -227.342, -67.3494, 0.29 ) }
    dend_28 { pt3dadd( -24.7532, -227.918, -67.3277, 0.66 ) }
    dend_28 { pt3dadd( -24.5909, -228.675, -67.3055, 0.74 ) }
    dend_28 { pt3dadd( -24.2172, -229.925, -67.2316, 0.22 ) }
    dend_28 { pt3dadd( -23.9553, -230.651, -67.1686, 0.22 ) }
    dend_28 { pt3dadd( -23.6485, -231.375, -67.0475, 0.88 ) }
    dend_28 { pt3dadd( -23.619, -231.446, -67.0288, 0.88 ) }
    dend_28 { pt3dadd( -23.3552, -232.079, -66.8052, 0.81 ) }
    dend_28 { pt3dadd( -23.0738, -232.756, -66.5435, 0.74 ) }
    dend_28 { pt3dadd( -23.0521, -232.819, -66.5186, 0.74 ) }
    dend_28 { pt3dadd( -22.8712, -233.745, -66.2295, 0.29 ) }
    dend_28 { pt3dadd( -22.7852, -234.659, -66.0102, 0.74 ) }
    dend_28 { pt3dadd( -22.7894, -234.973, -65.9447, 0.81 ) }
    dend_28 { pt3dadd( -22.9154, -235.869, -65.8164, 0.22 ) }
    dend_28 { pt3dadd( -23.0302, -236.315, -65.7807, 0.66 ) }
    dend_28 { pt3dadd( -23.1725, -236.769, -65.7703, 0.74 ) }
    dend_28 { pt3dadd( -23.1947, -236.826, -65.7735, 0.74 ) }
    dend_28 { pt3dadd( -23.4859, -237.483, -65.8344, 0.74 ) }
    dend_28 { pt3dadd( -23.8751, -238.242, -65.9241, 0.22 ) }
    dend_28 { pt3dadd( -24.2371, -238.856, -66.0805, 0.22 ) }
    dend_28 { pt3dadd( -24.2659, -238.904, -66.0978, 0.22 ) }
    dend_28 { pt3dadd( -24.4477, -239.258, -66.2483, 0.66 ) }
    dend_28 { pt3dadd( -24.4718, -239.327, -66.2785, 0.66 ) }
    dend_28 { pt3dadd( -24.5459, -239.705, -66.4518, 0.66 ) }
    dend_28 { pt3dadd( -24.6965, -240.764, -66.8989, 0.52 ) }
    dend_28 { pt3dadd( -24.7037, -240.817, -66.9301, 0.52 ) }
    dend_28 { pt3dadd( -24.8239, -241.53, -67.3616, 0.22 ) }
    dend_28 { pt3dadd( -24.9439, -242.111, -67.7075, 1.03 ) }
    dend_28 { pt3dadd( -25.0151, -242.468, -67.9263, 1.11 ) }
    dend_28 { pt3dadd( -25.1437, -243.122, -68.3114, 0.88 ) }
    dend_28 { pt3dadd( -25.5831, -245.219, -69.4362, 0.22 ) }
    dend_28 { pt3dadd( -25.6881, -245.723, -69.6952, 0.88 ) }
    dend_28 { pt3dadd( -25.8076, -246.266, -69.9753, 0.59 ) }
    dend_28 { pt3dadd( -25.9735, -247.075, -70.3703, 0.52 ) }
    dend_28 { pt3dadd( -26.0912, -247.808, -70.681, 0.81 ) }
    dend_28 { pt3dadd( -26.1232, -248.349, -70.9331, 0.81 ) }
    dend_28 { pt3dadd( -26.0966, -249.502, -71.5908, 0.29 ) }
    dend_28 { pt3dadd( -26.0921, -249.55, -71.624, 0.29 ) }
    dend_28 { pt3dadd( -26.0195, -249.972, -71.9675, 0.96 ) }
    dend_28 { pt3dadd( -25.9196, -250.387, -72.3571, 1.25 ) }
    dend_28 { pt3dadd( -25.3387, -252.259, -74.2985, 0.52 ) }
    dend_28 { pt3dadd( -24.8891, -253.487, -75.652, 0.44 ) }
    dend_28 { pt3dadd( -24.7432, -253.823, -76.0282, 0.66 ) }
    dend_28 { pt3dadd( -24.2699, -254.816, -77.1217, 0.52 ) }
    dend_28 { pt3dadd( -23.699, -255.883, -78.2679, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_28 { pt3dadd( -23.5485, -256.139, -78.5247, 0.59 ) }
    dend_28 { pt3dadd( -23.4813, -256.248, -78.6109, 0.59 ) }
    dend_28 { pt3dadd( -22.778, -257.296, -79.309, 0.22 ) }
    dend_28 { pt3dadd( -22.738, -257.356, -79.3465, 0.22 ) }
    dend_28 { pt3dadd( -22.4467, -257.781, -79.5204, 0.59 ) }
    dend_28 { pt3dadd( -22.3521, -257.909, -79.5486, 0.59 ) }
    dend_28 { pt3dadd( -22.2214, -258.084, -79.5903, 0.59 ) }
    dend_28 { pt3dadd( -22.1788, -258.14, -79.6022, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.223, 151.194, -14.6064, 0.29 ) }
    dend_24 { pt3dadd( -12.1963, 152.014, -16.0799, 0.29 ) }
    dend_24 { pt3dadd( -12.9255, 152.57, -17.0163, 0.29 ) }
    dend_24 { pt3dadd( -13.9781, 153.335, -18.252, 0.66 ) }
    dend_24 { pt3dadd( -14.878, 153.998, -19.3554, 0.29 ) }
    dend_24 { pt3dadd( -15.3261, 154.333, -19.9128, 0.37 ) }
    dend_24 { pt3dadd( -16.253, 155.033, -21.0628, 0.37 ) }
    dend_24 { pt3dadd( -17.2457, 155.804, -22.2051, 0.59 ) }
    dend_24 { pt3dadd( -17.7423, 156.196, -22.78, 0.81 ) }
    dend_24 { pt3dadd( -18.5991, 156.868, -23.741, 0.37 ) }
    dend_24 { pt3dadd( -18.8818, 157.111, -24.0304, 0.88 ) }
    dend_24 { pt3dadd( -19.2812, 157.504, -24.4606, 1.03 ) }
    dend_24 { pt3dadd( -19.7757, 158.069, -25.0124, 0.81 ) }
    dend_24 { pt3dadd( -20.1683, 158.568, -25.4405, 0.37 ) }
    dend_24 { pt3dadd( -20.218, 158.641, -25.4888, 0.37 ) }
    dend_24 { pt3dadd( -20.7264, 159.53, -25.9174, 0.37 ) }
    dend_24 { pt3dadd( -20.7768, 159.638, -25.9635, 0.37 ) }
    dend_24 { pt3dadd( -21.1931, 160.539, -26.1958, 0.37 ) }
    dend_24 { pt3dadd( -21.23, 160.621, -26.2054, 0.37 ) }
    dend_24 { pt3dadd( -21.8272, 161.852, -26.2434, 0.22 ) }
    dend_24 { pt3dadd( -22.1717, 162.534, -26.2393, 0.74 ) }
    dend_24 { pt3dadd( -22.2119, 162.615, -26.2359, 0.74 ) }
    dend_24 { pt3dadd( -23.1333, 164.501, -26.1624, 0.29 ) }
    dend_24 { pt3dadd( -23.3177, 164.883, -26.1348, 0.66 ) }
    dend_24 { pt3dadd( -23.5757, 165.405, -26.0955, 0.66 ) }
    dend_24 { pt3dadd( -24.0485, 166.329, -26.0297, 0.37 ) }
    dend_24 { pt3dadd( -24.3628, 166.991, -25.9984, 0.29 ) }
    dend_24 { pt3dadd( -24.6338, 167.659, -26.0062, 0.29 ) }
    dend_24 { pt3dadd( -24.9414, 168.645, -26.0852, 0.96 ) }
    dend_24 { pt3dadd( -24.9677, 168.728, -26.0919, 0.96 ) }
    dend_24 { pt3dadd( -25.1174, 169.267, -26.1269, 0.66 ) }
    dend_24 { pt3dadd( -25.3251, 170.092, -26.1739, 0.29 ) }
    dend_24 { pt3dadd( -25.5303, 170.906, -26.2483, 0.29 ) }
    dend_24 { pt3dadd( -25.5502, 170.989, -26.2617, 0.29 ) }
    dend_24 { pt3dadd( -25.7241, 171.811, -26.4472, 1.11 ) }
    dend_24 { pt3dadd( -25.8303, 172.598, -26.6086, 1.47 ) }
    dend_24 { pt3dadd( -25.8453, 172.814, -26.6481, 1.47 ) }
    dend_24 { pt3dadd( -25.8814, 173.914, -26.8386, 0.66 ) }
    dend_24 { pt3dadd( -25.8959, 174.773, -26.9767, 0.37 ) }
    dend_24 { pt3dadd( -25.9127, 175.854, -27.1449, 0.37 ) }
    dend_24 { pt3dadd( -25.8702, 177.529, -27.4917, 0.29 ) }
    dend_24 { pt3dadd( -25.7974, 179.293, -27.9348, 0.29 ) }
    dend_24 { pt3dadd( -25.788, 179.474, -27.9812, 0.29 ) }
    dend_24 { pt3dadd( -25.6959, 180.605, -28.2736, 0.96 ) }
    dend_24 { pt3dadd( -25.6383, 181.214, -28.4386, 1.18 ) }
    dend_24 { pt3dadd( -25.4192, 183.192, -29.0995, 0.37 ) }
    dend_24 { pt3dadd( -25.3541, 183.835, -29.4107, 0.37 ) }
    dend_24 { pt3dadd( -30.48, 193.733, -34.9789, 0.37 ) }
    dend_24 { pt3dadd( -32.8313, 204.522, -40.6591, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.223, 151.194, -14.6064, 1.03 ) }
    dend_21 { pt3dadd( -11.3854, 151.784, -14.5468, 1.03 ) }
    dend_21 { pt3dadd( -11.7886, 153.193, -14.4721, 1.4 ) }
    dend_21 { pt3dadd( -12.2423, 154.959, -14.4358, 1.4 ) }
    dend_21 { pt3dadd( -12.2676, 155.069, -14.4352, 1.4 ) }
    dend_21 { pt3dadd( -12.5842, 156.67, -14.449, 1.25 ) }
    dend_21 { pt3dadd( -12.8709, 158.365, -14.4375, 0.81 ) }
    dend_21 { pt3dadd( -12.8885, 158.476, -14.4307, 0.81 ) }
    dend_21 { pt3dadd( -13.0674, 159.741, -14.3207, 0.96 ) }
    dend_21 { pt3dadd( -13.1138, 160.188, -14.2832, 0.96 ) }
    dend_21 { pt3dadd( -13.2374, 161.446, -14.1566, 1.18 ) }
    dend_21 { pt3dadd( -13.3599, 162.89, -13.963, 0.96 ) }
    dend_21 { pt3dadd( -13.516, 164.924, -13.7788, 1.18 ) }
    dend_21 { pt3dadd( -13.5299, 165.09, -13.7721, 1.18 ) }
    dend_21 { pt3dadd( -13.6286, 166.441, -13.812, 1.18 ) }
    dend_21 { pt3dadd( -13.6695, 167.966, -13.9993, 0.96 ) }
    dend_21 { pt3dadd( -13.6667, 168.102, -14.0292, 0.96 ) }
    dend_21 { pt3dadd( -13.5331, 169.923, -14.546, 1.47 ) }
    dend_21 { pt3dadd( -13.5199, 170.029, -14.5803, 1.47 ) }
    dend_21 { pt3dadd( -13.2538, 171.707, -15.0438, 1.18 ) }
    dend_21 { pt3dadd( -12.8851, 173.443, -15.4476, 0.81 ) }
    dend_21 { pt3dadd( -12.8344, 173.637, -15.4755, 0.81 ) }
    dend_21 { pt3dadd( -12.5885, 174.867, -15.4564, 0.74 ) }
    dend_21 { pt3dadd( -12.5788, 174.966, -15.4369, 0.74 ) }
    dend_21 { pt3dadd( -12.6151, 175.821, -15.2262, 0.74 ) }
    dend_21 { pt3dadd( -12.639, 175.927, -15.1988, 0.74 ) }
    dend_21 { pt3dadd( -12.9521, 176.812, -15.0348, 0.81 ) }
    dend_21 { pt3dadd( -13.7765, 178.735, -14.8501, 1.18 ) }
    dend_21 { pt3dadd( -14.1481, 179.501, -14.8291, 1.4 ) }
    dend_21 { pt3dadd( -14.8339, 180.876, -14.8478, 0.96 ) }
    dend_21 { pt3dadd( -15.5021, 182.201, -14.9099, 0.96 ) }
    dend_21 { pt3dadd( -16.0763, 183.377, -15.0082, 0.96 ) }
    dend_21 { pt3dadd( -16.7365, 184.838, -15.2201, 0.96 ) }
    dend_21 { pt3dadd( -16.7802, 184.94, -15.2318, 0.96 ) }
    dend_21 { pt3dadd( -17.1095, 185.713, -15.2455, 0.96 ) }
    dend_21 { pt3dadd( -17.3474, 186.291, -15.213, 1.18 ) }
    dend_21 { pt3dadd( -17.4572, 186.567, -15.1779, 1.18 ) }
    dend_21 { pt3dadd( -17.9042, 187.716, -15.0161, 1.18 ) }
    dend_21 { pt3dadd( -18.7651, 190.031, -14.7342, 0.96 ) }
    dend_21 { pt3dadd( -19.4772, 191.929, -14.5053, 0.66 ) }
    dend_21 { pt3dadd( -19.8253, 192.839, -14.3975, 0.66 ) }
    dend_21 { pt3dadd( -20.284, 194.05, -14.2912, 0.88 ) }
    dend_21 { pt3dadd( -20.7262, 195.279, -14.213, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_21 { pt3dadd( -21.1188, 196.444, -14.1706, 1.03 ) }
    dend_21 { pt3dadd( -21.4867, 197.702, -14.1988, 1.03 ) }
    dend_21 { pt3dadd( -21.5143, 197.797, -14.1993, 1.03 ) }
    dend_21 { pt3dadd( -21.8179, 198.872, -14.2297, 1.11 ) }
    dend_21 { pt3dadd( -22.1223, 200.006, -14.3057, 1.11 ) }
    dend_21 { pt3dadd( -22.166, 200.167, -14.3203, 1.11 ) }
    dend_21 { pt3dadd( -22.607, 201.822, -14.5268, 0.96 ) }
    dend_21 { pt3dadd( -22.9339, 202.977, -14.6511, 0.96 ) }
    dend_21 { pt3dadd( -23.3747, 204.549, -14.7708, 1.4 ) }
    dend_21 { pt3dadd( -23.679, 205.655, -14.8263, 1.03 ) }
    dend_21 { pt3dadd( -24.0205, 207.034, -14.8796, 1.25 ) }
    dend_21 { pt3dadd( -24.3534, 208.733, -14.9085, 0.88 ) }
    dend_21 { pt3dadd( -24.5528, 210.326, -14.8856, 0.88 ) }
    dend_21 { pt3dadd( -24.6499, 211.711, -14.8114, 0.88 ) }
    dend_21 { pt3dadd( -24.6487, 212.031, -14.7815, 0.88 ) }
    dend_21 { pt3dadd( -24.5844, 213.184, -14.6692, 0.88 ) }
    dend_21 { pt3dadd( -24.4739, 214.757, -14.5735, 0.81 ) }
    dend_21 { pt3dadd( -24.362, 216.206, -14.5574, 0.81 ) }
    dend_21 { pt3dadd( -24.3581, 216.304, -14.5649, 0.81 ) }
    dend_21 { pt3dadd( -24.4169, 217.263, -14.6292, 0.96 ) }
    dend_21 { pt3dadd( -24.6774, 218.908, -14.7543, 0.96 ) }
    dend_21 { pt3dadd( -25.0871, 220.67, -14.9029, 1.03 ) }
    dend_21 { pt3dadd( -25.1108, 220.755, -14.9103, 1.03 ) }
    dend_21 { pt3dadd( -25.7835, 222.896, -15.1148, 1.03 ) }
    dend_21 { pt3dadd( -26.3364, 224.67, -15.2898, 1.03 ) }
    dend_21 { pt3dadd( -26.8521, 226.441, -15.4551, 1.03 ) }
    dend_21 { pt3dadd( -27.0138, 227.108, -15.5037, 1.03 ) }
    dend_21 { pt3dadd( -27.156, 227.945, -15.5494, 1.03 ) }
    dend_21 { pt3dadd( -27.3105, 229.292, -15.6215, 0.88 ) }
    dend_21 { pt3dadd( -27.3641, 230.935, -15.7148, 0.88 ) }
    dend_21 { pt3dadd( -27.306, 232.345, -15.8338, 1.11 ) }
    dend_21 { pt3dadd( -27.2392, 232.922, -15.8894, 1.11 ) }
    dend_21 { pt3dadd( -27.0178, 234.46, -16.0874, 1.11 ) }
    dend_21 { pt3dadd( -26.9804, 234.666, -16.1187, 1.11 ) }
    dend_21 { pt3dadd( -26.7542, 235.733, -16.3045, 0.96 ) }
    dend_21 { pt3dadd( -26.7372, 235.813, -16.3219, 0.96 ) }
    dend_21 { pt3dadd( -26.4354, 237.499, -16.7448, 0.88 ) }
    dend_21 { pt3dadd( -26.254, 238.776, -17.0908, 0.66 ) }
    dend_21 { pt3dadd( -26.2328, 238.971, -17.1432, 0.66 ) }
    dend_21 { pt3dadd( -26.1116, 240.165, -17.4263, 0.66 ) }
    dend_21 { pt3dadd( -26.101, 240.275, -17.4472, 0.66 ) }
    dend_21 { pt3dadd( -25.9549, 241.551, -17.5916, 0.96 ) }
    dend_21 { pt3dadd( -25.9289, 241.749, -17.596, 0.96 ) }
    dend_21 { pt3dadd( -25.6826, 243.02, -17.5853, 0.96 ) }
    dend_21 { pt3dadd( -25.6303, 243.254, -17.5803, 0.96 ) }
    dend_21 { pt3dadd( -25.4772, 243.93, -17.5625, 0.96 ) }
    dend_21 { pt3dadd( -25.2352, 245.226, -17.4705, 0.96 ) }
    dend_21 { pt3dadd( -25.0853, 246.168, -17.3721, 1.18 ) }
    dend_21 { pt3dadd( -24.9545, 247.278, -17.2522, 0.74 ) }
    dend_21 { pt3dadd( -24.8783, 248.594, -17.1336, 0.74 ) }
    dend_21 { pt3dadd( -24.8876, 249.599, -17.0771, 1.18 ) }
    dend_21 { pt3dadd( -25.0588, 251.153, -17.0834, 0.66 ) }
    dend_21 { pt3dadd( -25.3096, 252.311, -17.1697, 0.66 ) }
    dend_21 { pt3dadd( -25.7151, 253.692, -17.3563, 0.66 ) }
    dend_21 { pt3dadd( -26.1997, 255.039, -17.6073, 1.18 ) }
    dend_21 { pt3dadd( -26.5726, 256.002, -17.8524, 1.18 ) }
    dend_21 { pt3dadd( -27.3037, 257.873, -18.4448, 0.96 ) }
    dend_21 { pt3dadd( -27.8026, 259.147, -18.8678, 0.96 ) }
    dend_21 { pt3dadd( -28.165, 260.077, -19.1435, 0.66 ) }
    dend_21 { pt3dadd( -28.1931, 260.154, -19.1628, 0.66 ) }
    dend_21 { pt3dadd( -28.6992, 261.678, -19.4722, 0.59 ) }
    dend_21 { pt3dadd( -28.9943, 262.657, -19.6283, 1.03 ) }
    dend_21 { pt3dadd( -29.5665, 264.469, -19.7625, 0.81 ) }
    dend_21 { pt3dadd( -29.902, 265.44, -19.7852, 1.03 ) }
    dend_21 { pt3dadd( -29.9746, 265.63, -19.7868, 1.03 ) }
    dend_21 { pt3dadd( -30.4601, 266.819, -19.8046, 1.03 ) }
    dend_21 { pt3dadd( -30.6404, 267.219, -19.8132, 1.03 ) }
    dend_21 { pt3dadd( -31.3776, 268.823, -19.908, 0.96 ) }
    dend_21 { pt3dadd( -31.9793, 270.263, -20.0598, 0.96 ) }
    dend_21 { pt3dadd( -32.3706, 271.367, -20.1699, 0.96 ) }
    dend_21 { pt3dadd( -32.6981, 272.485, -20.2752, 1.11 ) }
    dend_21 { pt3dadd( -32.8702, 273.301, -20.3471, 1.33 ) }
    dend_21 { pt3dadd( -32.8857, 273.412, -20.3581, 1.33 ) }
    dend_21 { pt3dadd( -32.9295, 274.908, -20.5334, 0.88 ) }
    dend_21 { pt3dadd( -32.8878, 276.063, -20.6239, 1.11 ) }
    dend_21 { pt3dadd( -32.8675, 276.276, -20.6228, 1.11 ) }
    dend_21 { pt3dadd( -32.7169, 277.209, -20.5357, 1.11 ) }
    dend_21 { pt3dadd( -32.6954, 277.303, -20.5194, 1.11 ) }
    dend_21 { pt3dadd( -32.4732, 278.269, -20.2163, 0.88 ) }
    dend_21 { pt3dadd( -32.4523, 278.358, -20.1795, 0.81 ) }
    dend_21 { pt3dadd( -32.2321, 279.347, -19.7672, 1.03 ) }
    dend_21 { pt3dadd( -32.0893, 280.07, -19.4636, 1.03 ) }
    dend_21 { pt3dadd( -31.8976, 281.268, -18.9921, 0.81 ) }
    dend_21 { pt3dadd( -31.6931, 283.077, -18.3677, 0.74 ) }
    dend_21 { pt3dadd( -31.6091, 284.389, -17.9912, 0.74 ) }
    dend_21 { pt3dadd( -31.5946, 285.716, -17.6517, 0.88 ) }
    dend_21 { pt3dadd( -31.614, 286.457, -17.4909, 0.88 ) }
    dend_21 { pt3dadd( -31.7063, 287.56, -17.2828, 0.88 ) }
    dend_21 { pt3dadd( -31.7895, 288.284, -17.1745, 0.88 ) }
    dend_21 { pt3dadd( -31.8653, 289.278, -17.0661, 0.88 ) }
    dend_21 { pt3dadd( -31.9012, 290.699, -16.8878, 0.88 ) }
    dend_21 { pt3dadd( -31.881, 291.43, -16.7546, 0.88 ) }
    dend_21 { pt3dadd( -31.8661, 291.64, -16.7136, 0.88 ) }
    dend_21 { pt3dadd( -31.7266, 292.925, -16.4368, 0.88 ) }
    dend_21 { pt3dadd( -31.5581, 294.274, -16.165, 0.88 ) }
    dend_21 { pt3dadd( -31.3468, 295.747, -15.8926, 0.44 ) }
    dend_21 { pt3dadd( -31.1938, 297.091, -15.6646, 0.81 ) }
    dend_21 { pt3dadd( -31.1452, 298.105, -15.5077, 1.25 ) }
    dend_21 { pt3dadd( -31.1465, 299.377, -15.3259, 0.96 ) }
    dend_21 { pt3dadd( -31.2549, 301.026, -15.1345, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_21 { pt3dadd( -31.3161, 301.534, -15.0905, 1.47 ) }
    dend_21 { pt3dadd( -31.6418, 303.658, -14.9916, 1.11 ) }
    dend_21 { pt3dadd( -31.8599, 304.931, -14.9976, 0.96 ) }
    dend_21 { pt3dadd( -31.8775, 305.028, -14.9997, 0.96 ) }
    dend_21 { pt3dadd( -32.0495, 306.149, -15.0532, 0.96 ) }
    dend_21 { pt3dadd( -32.0589, 306.236, -15.0596, 0.96 ) }
    dend_21 { pt3dadd( -32.1211, 307.662, -15.1738, 0.96 ) }
    dend_21 { pt3dadd( -32.1116, 307.86, -15.1953, 0.96 ) }
    dend_21 { pt3dadd( -31.9326, 309.71, -15.3906, 0.96 ) }
    dend_21 { pt3dadd( -31.6115, 311.813, -15.6741, 0.96 ) }
    dend_21 { pt3dadd( -31.2413, 313.695, -15.9642, 0.96 ) }
    dend_21 { pt3dadd( -31.0099, 314.832, -16.1156, 0.96 ) }
    dend_21 { pt3dadd( -30.7846, 315.846, -16.2346, 0.96 ) }
    dend_21 { pt3dadd( -30.4672, 317.227, -16.3706, 1.11 ) }
    dend_21 { pt3dadd( -29.9764, 319.287, -16.5314, 1.11 ) }
    dend_21 { pt3dadd( -29.9595, 319.373, -16.5312, 1.11 ) }
    dend_21 { pt3dadd( -29.7285, 321.244, -16.3036, 1.11 ) }
    dend_21 { pt3dadd( -29.7246, 321.34, -16.2832, 1.11 ) }
    dend_21 { pt3dadd( -29.7533, 322.566, -15.9242, 1.11 ) }
    dend_21 { pt3dadd( -29.8104, 323.577, -15.581, 1.18 ) }
    dend_21 { pt3dadd( -29.9724, 325.305, -14.9457, 0.88 ) }
    dend_21 { pt3dadd( -30.062, 326.514, -14.544, 0.66 ) }
    dend_21 { pt3dadd( -30.0679, 326.613, -14.5186, 0.66 ) }
    dend_21 { pt3dadd( -30.1769, 327.527, -14.3523, 0.81 ) }
    dend_21 { pt3dadd( -30.3583, 328.695, -14.2315, 0.81 ) }
    dend_21 { pt3dadd( -30.3733, 328.796, -14.2286, 0.81 ) }
    dend_21 { pt3dadd( -30.5058, 329.879, -14.2849, 0.66 ) }
    dend_21 { pt3dadd( -30.6141, 331.017, -14.3785, 1.18 ) }
    dend_21 { pt3dadd( -30.7628, 332.819, -14.5377, 1.03 ) }
    dend_21 { pt3dadd( -30.8406, 333.957, -14.6465, 0.88 ) }
    dend_21 { pt3dadd( -30.8892, 335.4, -14.8153, 0.74 ) }
    dend_21 { pt3dadd( -30.8866, 337.044, -15.0324, 1.25 ) }
    dend_21 { pt3dadd( -30.8581, 337.916, -15.1684, 1.03 ) }
    dend_21 { pt3dadd( -30.8429, 338.124, -15.2006, 1.03 ) }
    dend_21 { pt3dadd( -30.671, 339.555, -15.4525, 1.03 ) }
    dend_21 { pt3dadd( -30.583, 340.72, -15.5915, 1.03 ) }
    dend_21 { pt3dadd( -30.5774, 340.821, -15.591, 1.03 ) }
    dend_21 { pt3dadd( -30.5217, 342.334, -15.3988, 1.25 ) }
    dend_21 { pt3dadd( -30.5188, 342.429, -15.3732, 1.25 ) }
    dend_21 { pt3dadd( -30.462, 344.011, -14.8112, 1.4 ) }
    dend_21 { pt3dadd( -30.3741, 346.455, -13.7338, 0.74 ) }
    dend_21 { pt3dadd( -30.33, 347.949, -13.0249, 0.59 ) }
    dend_21 { pt3dadd( -30.3249, 348.079, -12.9622, 0.59 ) }
    dend_21 { pt3dadd( -30.2045, 349.829, -12.1069, 0.59 ) }
    dend_21 { pt3dadd( -30.1157, 350.811, -11.6844, 0.81 ) }
    dend_21 { pt3dadd( -30.1056, 350.905, -11.6524, 0.81 ) }
    dend_21 { pt3dadd( -29.9452, 352.028, -11.4703, 0.81 ) }
    dend_21 { pt3dadd( -29.9114, 352.326, -11.4533, 0.81 ) }
    dend_21 { pt3dadd( -29.7879, 353.561, -11.4508, 1.03 ) }
    dend_21 { pt3dadd( -29.6673, 354.79, -11.5146, 1.25 ) }
    dend_21 { pt3dadd( -29.5819, 355.735, -11.5024, 1.25 ) }
    dend_21 { pt3dadd( -29.574, 355.819, -11.4971, 1.25 ) }
    dend_21 { pt3dadd( -29.5011, 357.04, -11.3077, 0.96 ) }
    dend_21 { pt3dadd( -29.4388, 358.819, -10.9279, 0.74 ) }
    dend_21 { pt3dadd( -29.4654, 359.624, -10.688, 0.74 ) }
    dend_21 { pt3dadd( -29.602, 361.428, -10.0517, 0.88 ) }
    dend_21 { pt3dadd( -29.703, 362.326, -9.72167, 0.74 ) }
    dend_21 { pt3dadd( -29.9558, 364.212, -9.03795, 0.74 ) }
    dend_21 { pt3dadd( -30.1117, 365.156, -8.70789, 0.74 ) }
    dend_21 { pt3dadd( -30.4751, 367.025, -8.11787, 0.96 ) }
    dend_21 { pt3dadd( -30.7, 368.131, -7.83455, 1.03 ) }
    dend_21 { pt3dadd( -30.927, 369.231, -7.65376, 1.03 ) }
    dend_21 { pt3dadd( -31.1265, 370.322, -7.53711, 1.18 ) }
    dend_21 { pt3dadd( -31.2592, 371.504, -7.50489, 0.59 ) }
    dend_21 { pt3dadd( -31.3001, 372.204, -7.50862, 0.37 ) }
    dend_21 { pt3dadd( -31.2887, 372.764, -7.53806, 0.81 ) }
    dend_21 { pt3dadd( -31.2512, 373.347, -7.57497, 0.81 ) }
    dend_21 { pt3dadd( -31.1645, 374.437, -7.66698, 0.81 ) }
    dend_21 { pt3dadd( -31.1117, 375.445, -7.79496, 0.81 ) }
    dend_21 { pt3dadd( -31.122, 376.282, -7.95083, 0.88 ) }
    dend_21 { pt3dadd( -31.1989, 376.949, -8.12181, 0.81 ) }
    dend_21 { pt3dadd( -31.4353, 378.019, -8.46787, 0.74 ) }
    dend_21 { pt3dadd( -31.758, 379.065, -8.86017, 0.74 ) }
    dend_21 { pt3dadd( -32.1853, 380.129, -9.31345, 0.96 ) }
    dend_21 { pt3dadd( -32.6682, 381.189, -9.78211, 0.44 ) }
    dend_21 { pt3dadd( -33.1561, 382.194, -10.2247, 0.44 ) }
    dend_21 { pt3dadd( -33.6254, 383.152, -10.622, 0.96 ) }
    dend_21 { pt3dadd( -33.6736, 383.25, -10.6589, 0.96 ) }
    dend_21 { pt3dadd( -33.989, 383.974, -10.9056, 0.96 ) }
    dend_21 { pt3dadd( -34.3365, 384.901, -11.1864, 0.96 ) }
    dend_21 { pt3dadd( -34.4278, 385.179, -11.2473, 0.96 ) }
    dend_21 { pt3dadd( -34.7467, 386.032, -11.4156, 0.81 ) }
    dend_21 { pt3dadd( -34.8695, 386.318, -11.4455, 0.81 ) }
    dend_21 { pt3dadd( -35.4717, 387.576, -11.519, 0.81 ) }
    dend_21 { pt3dadd( -35.5151, 387.664, -11.5206, 0.81 ) }
    dend_21 { pt3dadd( -36.0958, 388.824, -11.5077, 0.96 ) }
    dend_21 { pt3dadd( -36.7242, 390.158, -11.4696, 0.81 ) }
    dend_21 { pt3dadd( -37.4964, 391.9, -11.3803, 0.81 ) }
    dend_21 { pt3dadd( -37.532, 391.992, -11.3746, 0.81 ) }
    dend_21 { pt3dadd( -37.8835, 393.198, -11.2908, 0.81 ) }
    dend_21 { pt3dadd( -37.9011, 393.295, -11.2869, 0.81 ) }
    dend_21 { pt3dadd( -37.9005, 394.442, -11.3707, 0.59 ) }
    dend_21 { pt3dadd( -37.8883, 394.589, -11.3855, 0.59 ) }
    dend_21 { pt3dadd( -37.7768, 395.39, -11.5385, 0.59 ) }
    dend_21 { pt3dadd( -37.5997, 396.527, -11.7719, 0.59 ) }
    dend_21 { pt3dadd( -37.3509, 397.858, -12.0841, 0.81 ) }
    dend_21 { pt3dadd( -36.9415, 399.775, -12.5705, 0.81 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 97/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 15.5139, 77.4031, -57.6364, 0.52 ) }
    dend_17 { pt3dadd( 16.92, 78.2497, -58.5882, 0.52 ) }
    dend_17 { pt3dadd( 16.9544, 78.2745, -58.6131, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_17 { pt3dadd( 17.5993, 78.8742, -59.1086, 0.44 ) }
    dend_17 { pt3dadd( 17.6361, 78.9175, -59.1398, 0.44 ) }
    dend_17 { pt3dadd( 17.9703, 79.2986, -59.4239, 0.88 ) }
    dend_17 { pt3dadd( 18.3149, 79.6508, -59.6839, 1.11 ) }
    dend_17 { pt3dadd( 18.3485, 79.6889, -59.7083, 1.11 ) }
    dend_17 { pt3dadd( 18.8057, 80.1294, -59.9859, 1.03 ) }
    dend_17 { pt3dadd( 19.5337, 80.7274, -60.3567, 0.37 ) }
    dend_17 { pt3dadd( 20.5186, 81.3579, -60.8116, 0.44 ) }
    dend_17 { pt3dadd( 21.0783, 81.6451, -61.0436, 0.44 ) }
    dend_17 { pt3dadd( 21.1685, 81.6885, -61.0805, 0.44 ) }
    dend_17 { pt3dadd( 21.6494, 81.9391, -61.3242, 0.44 ) }
    dend_17 { pt3dadd( 21.7039, 81.9752, -61.3638, 0.44 ) }
    dend_17 { pt3dadd( 22.3371, 82.5421, -61.9919, 0.96 ) }
    dend_17 { pt3dadd( 22.4982, 82.7631, -62.2128, 1.33 ) }
    dend_17 { pt3dadd( 22.8025, 83.285, -62.6961, 1.18 ) }
    dend_17 { pt3dadd( 23.2071, 84.0789, -63.3857, 0.81 ) }
    dend_17 { pt3dadd( 23.5789, 84.9474, -64.0624, 0.37 ) }
    dend_17 { pt3dadd( 23.5991, 84.9976, -64.0976, 0.37 ) }
    dend_17 { pt3dadd( 23.7794, 85.5089, -64.3962, 0.66 ) }
    dend_17 { pt3dadd( 23.9167, 85.8454, -64.578, 0.88 ) }
    dend_17 { pt3dadd( 23.9641, 85.9574, -64.6269, 0.88 ) }
    dend_17 { pt3dadd( 24.1921, 86.4727, -64.829, 0.88 ) }
    dend_17 { pt3dadd( 24.479, 87.1167, -65.09, 0.74 ) }
    dend_17 { pt3dadd( 24.7059, 87.679, -65.3375, 0.59 ) }
    dend_17 { pt3dadd( 24.9885, 88.4683, -65.7065, 1.03 ) }
    dend_17 { pt3dadd( 25.1588, 89.0786, -66.0012, 0.29 ) }
    dend_17 { pt3dadd( 25.3103, 89.7913, -66.3296, 0.81 ) }
    dend_17 { pt3dadd( 25.3609, 90.1614, -66.4891, 0.88 ) }
    dend_17 { pt3dadd( 25.3844, 90.5966, -66.6517, 0.96 ) }
    dend_17 { pt3dadd( 25.3966, 91.0296, -66.8139, 0.66 ) }
    dend_17 { pt3dadd( 25.3971, 91.8029, -67.0744, 0.22 ) }
    dend_17 { pt3dadd( 25.4092, 92.5236, -67.3036, 1.62 ) }
    dend_17 { pt3dadd( 25.4237, 93.0235, -67.4424, 1.99 ) }
    dend_17 { pt3dadd( 25.4381, 93.4708, -67.5545, 1.77 ) }
    dend_17 { pt3dadd( 25.4499, 94.4046, -67.7642, 1.25 ) }
    dend_17 { pt3dadd( 25.4365, 95.0998, -67.8923, 0.81 ) }
    dend_17 { pt3dadd( 25.4112, 95.6346, -67.9669, 0.66 ) }
    dend_17 { pt3dadd( 25.3648, 96.2056, -68.0299, 0.81 ) }
    dend_17 { pt3dadd( 25.2974, 96.8846, -68.0771, 0.29 ) }
    dend_17 { pt3dadd( 25.1972, 97.692, -68.097, 0.29 ) }
    dend_17 { pt3dadd( 25.1283, 98.1131, -68.0743, 0.44 ) }
    dend_17 { pt3dadd( 25.1199, 98.1685, -68.0705, 0.44 ) }
    dend_17 { pt3dadd( 25.0296, 98.8049, -68.0353, 0.59 ) }
    dend_17 { pt3dadd( 24.9806, 99.2336, -68.0216, 1.11 ) }
    dend_17 { pt3dadd( 24.9379, 99.7085, -68.0229, 1.11 ) }
    dend_17 { pt3dadd( 24.891, 100.317, -68.0345, 0.88 ) }
    dend_17 { pt3dadd( 24.8269, 101.196, -68.0669, 0.52 ) }
    dend_17 { pt3dadd( 24.757, 102.178, -68.1093, 0.52 ) }
    dend_17 { pt3dadd( 24.6985, 103.083, -68.1526, 0.66 ) }
    dend_17 { pt3dadd( 24.6606, 103.832, -68.1932, 0.29 ) }
    dend_17 { pt3dadd( 24.6431, 104.553, -68.2383, 0.81 ) }
    dend_17 { pt3dadd( 24.6444, 104.611, -68.2426, 0.81 ) }
    dend_17 { pt3dadd( 24.6817, 104.99, -68.2734, 1.03 ) }
    dend_17 { pt3dadd( 24.7089, 105.122, -68.2856, 1.03 ) }
    dend_17 { pt3dadd( 24.8294, 105.569, -68.3398, 1.03 ) }
    dend_17 { pt3dadd( 24.9819, 106.063, -68.4093, 0.96 ) }
    dend_17 { pt3dadd( 25.1044, 106.499, -68.4863, 0.66 ) }
    dend_17 { pt3dadd( 25.2165, 107.068, -68.606, 0.52 ) }
    dend_17 { pt3dadd( 25.242, 107.462, -68.7064, 0.44 ) }
    dend_17 { pt3dadd( 25.2164, 108.197, -68.9165, 0.44 ) }
    dend_17 { pt3dadd( 25.196, 108.311, -68.9526, 0.44 ) }
    dend_17 { pt3dadd( 25.0609, 108.736, -69.0903, 0.37 ) }
    dend_17 { pt3dadd( 24.8292, 109.259, -69.2557, 0.37 ) }
    dend_17 { pt3dadd( 24.4843, 109.926, -69.4404, 1.03 ) }
    dend_17 { pt3dadd( 24.46, 109.975, -69.4527, 1.03 ) }
    dend_17 { pt3dadd( 24.2734, 110.405, -69.5463, 1.18 ) }
    dend_17 { pt3dadd( 24.1156, 110.841, -69.6284, 0.59 ) }
    dend_17 { pt3dadd( 23.9731, 111.352, -69.7074, 0.37 ) }
    dend_17 { pt3dadd( 23.8653, 111.92, -69.7787, 0.29 ) }
    dend_17 { pt3dadd( 23.7643, 112.686, -69.8333, 0.22 ) }
    dend_17 { pt3dadd( 23.7196, 113.053, -69.8504, 0.44 ) }
    dend_17 { pt3dadd( 23.7069, 113.175, -69.854, 0.44 ) }
    dend_17 { pt3dadd( 23.6362, 113.687, -69.8167, 0.44 ) }
    dend_17 { pt3dadd( 23.6262, 113.741, -69.8051, 0.44 ) }
    dend_17 { pt3dadd( 23.4616, 114.499, -69.5757, 0.74 ) }
    dend_17 { pt3dadd( 23.3141, 115.098, -69.3669, 1.33 ) }
    dend_17 { pt3dadd( 23.1268, 115.839, -69.0894, 1.4 ) }
    dend_17 { pt3dadd( 22.836, 116.994, -68.6494, 0.52 ) }
    dend_17 { pt3dadd( 22.6483, 117.743, -68.3726, 0.59 ) }
    dend_17 { pt3dadd( 22.5121, 118.299, -68.1872, 0.74 ) }
    dend_17 { pt3dadd( 22.4276, 118.68, -68.0808, 0.74 ) }
    dend_17 { pt3dadd( 22.4149, 118.743, -68.0679, 0.74 ) }
    dend_17 { pt3dadd( 22.3335, 119.195, -68.0234, 0.44 ) }
    dend_17 { pt3dadd( 22.2395, 119.828, -68.058, 0.52 ) }
    dend_17 { pt3dadd( 22.1901, 120.244, -68.0997, 0.66 ) }
    dend_17 { pt3dadd( 22.1477, 120.622, -68.122, 0.44 ) }
    dend_17 { pt3dadd( 22.0909, 121.145, -68.138, 0.22 ) }
    dend_17 { pt3dadd( 22.0038, 121.877, -68.1495, 0.66 ) }
    dend_17 { pt3dadd( 21.955, 122.239, -68.1623, 0.88 ) }
    dend_17 { pt3dadd( 21.8793, 122.745, -68.1893, 0.29 ) }
    dend_17 { pt3dadd( 21.7754, 123.356, -68.2306, 0.22 ) }
    dend_17 { pt3dadd( 21.6996, 123.762, -68.2654, 0.37 ) }
    dend_17 { pt3dadd( 21.6217, 124.177, -68.3248, 0.52 ) }
    dend_17 { pt3dadd( 21.5132, 124.803, -68.4705, 0.29 ) }
    dend_17 { pt3dadd( 21.4633, 125.13, -68.5552, 0.59 ) }
    dend_17 { pt3dadd( 21.4494, 125.257, -68.5835, 0.59 ) }
    dend_17 { pt3dadd( 21.4401, 125.605, -68.6414, 0.59 ) }
    dend_17 { pt3dadd( 21.442, 125.66, -68.6463, 0.59 ) }
    dend_17 { pt3dadd( 21.4748, 126.179, -68.6636, 0.59 ) }
    dend_17 { pt3dadd( 21.5217, 126.948, -68.6321, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_17 { pt3dadd( 21.5509, 127.58, -68.5932, 0.59 ) }
    dend_17 { pt3dadd( 21.5662, 128.105, -68.5585, 1.03 ) }
    dend_17 { pt3dadd( 21.5668, 128.63, -68.5256, 1.03 ) }
    dend_17 { pt3dadd( 21.5456, 129.155, -68.5013, 0.81 ) }
    dend_17 { pt3dadd( 21.4981, 129.708, -68.4882, 0.59 ) }
    dend_17 { pt3dadd( 21.4186, 130.29, -68.4991, 0.37 ) }
    dend_17 { pt3dadd( 21.275, 131.11, -68.554, 0.37 ) }
    dend_17 { pt3dadd( 21.1464, 131.783, -68.6115, 0.37 ) }
    dend_17 { pt3dadd( 21.0399, 132.324, -68.6676, 0.44 ) }
    dend_17 { pt3dadd( 20.9298, 132.893, -68.7371, 0.44 ) }
    dend_17 { pt3dadd( 20.8402, 133.43, -68.7975, 0.29 ) }
    dend_17 { pt3dadd( 20.737, 134.127, -68.8561, 0.29 ) }
    dend_17 { pt3dadd( 20.6811, 134.668, -68.8808, 0.81 ) }
    dend_17 { pt3dadd( 20.6484, 135.192, -68.8674, 1.11 ) }
    dend_17 { pt3dadd( 20.6316, 135.723, -68.8249, 0.81 ) }
    dend_17 { pt3dadd( 20.6164, 136.504, -68.7347, 0.52 ) }
    dend_17 { pt3dadd( 20.6157, 136.559, -68.7268, 0.52 ) }
    dend_17 { pt3dadd( 20.5855, 137.255, -68.6242, 0.52 ) }
    dend_17 { pt3dadd( 20.515, 138.009, -68.5285, 0.29 ) }
    dend_17 { pt3dadd( 20.4446, 138.527, -68.4759, 0.59 ) }
    dend_17 { pt3dadd( 20.3401, 139.043, -68.4544, 0.81 ) }
    dend_17 { pt3dadd( 20.31, 139.151, -68.4585, 0.81 ) }
    dend_17 { pt3dadd( 20.1765, 139.628, -68.4902, 0.81 ) }
    dend_17 { pt3dadd( 20.0635, 140.089, -68.5321, 0.66 ) }
    dend_17 { pt3dadd( 20.0511, 140.151, -68.5396, 0.66 ) }
    dend_17 { pt3dadd( 19.9496, 140.727, -68.6025, 0.44 ) }
    dend_17 { pt3dadd( 19.8329, 141.418, -68.6765, 0.37 ) }
    dend_17 { pt3dadd( 19.7301, 142.059, -68.7445, 0.37 ) }
    dend_17 { pt3dadd( 19.62, 142.754, -68.8193, 0.52 ) }
    dend_17 { pt3dadd( 19.5243, 143.316, -68.8841, 0.37 ) }
    dend_17 { pt3dadd( 19.4337, 143.763, -68.9438, 0.37 ) }
    dend_17 { pt3dadd( 19.3316, 144.231, -69.0129, 0.81 ) }
    dend_17 { pt3dadd( 19.2258, 144.666, -69.0857, 0.88 ) }
    dend_17 { pt3dadd( 19.1188, 145.043, -69.1549, 0.59 ) }
    dend_17 { pt3dadd( 19.0517, 145.267, -69.1974, 0.44 ) }
    dend_17 { pt3dadd( 18.8801, 145.948, -69.3138, 0.37 ) }
    dend_17 { pt3dadd( 18.7251, 146.763, -69.433, 0.37 ) }
    dend_17 { pt3dadd( 18.6875, 147.17, -69.4922, 0.66 ) }
    dend_17 { pt3dadd( 18.6864, 147.233, -69.5014, 0.66 ) }
    dend_17 { pt3dadd( 18.7392, 147.857, -69.5799, 0.74 ) }
    dend_17 { pt3dadd( 18.7801, 148.174, -69.6185, 0.88 ) }
    dend_17 { pt3dadd( 18.9217, 148.894, -69.7037, 0.59 ) }
    dend_17 { pt3dadd( 19.0991, 149.607, -69.7934, 0.29 ) }
    dend_17 { pt3dadd( 19.1173, 149.668, -69.801, 0.29 ) }
    dend_17 { pt3dadd( 19.4368, 150.622, -69.9215, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 15.5139, 77.4031, -57.6364, 0.59 ) }
    dend_16 { pt3dadd( 15.742, 78.3179, -57.5033, 0.59 ) }
    dend_16 { pt3dadd( 15.8945, 78.9777, -57.3924, 0.29 ) }
    dend_16 { pt3dadd( 16.0138, 79.5297, -57.3008, 0.29 ) }
    dend_16 { pt3dadd( 16.1607, 80.2579, -57.1851, 0.29 ) }
    dend_16 { pt3dadd( 16.4662, 81.9354, -56.9281, 0.29 ) }
    dend_16 { pt3dadd( 16.6481, 83.0237, -56.7715, 0.74 ) }
    dend_16 { pt3dadd( 16.7382, 83.7393, -56.6839, 0.74 ) }
    dend_16 { pt3dadd( 16.8132, 84.4805, -56.6146, 0.52 ) }
    dend_16 { pt3dadd( 16.8522, 84.9302, -56.5898, 0.44 ) }
    dend_16 { pt3dadd( 16.8965, 85.4881, -56.5746, 0.29 ) }
    dend_16 { pt3dadd( 16.9488, 86.1453, -56.5849, 0.29 ) }
    dend_16 { pt3dadd( 17.0328, 87.0122, -56.6241, 0.66 ) }
    dend_16 { pt3dadd( 17.1008, 87.5741, -56.6377, 0.96 ) }
    dend_16 { pt3dadd( 17.1894, 88.0911, -56.6324, 0.66 ) }
    dend_16 { pt3dadd( 17.2299, 88.2804, -56.6253, 0.66 ) }
    dend_16 { pt3dadd( 17.3703, 88.8498, -56.5906, 0.44 ) }
    dend_16 { pt3dadd( 17.5044, 89.4366, -56.5433, 0.29 ) }
    dend_16 { pt3dadd( 17.6233, 90.0181, -56.4895, 0.22 ) }
    dend_16 { pt3dadd( 17.7493, 90.9792, -56.3391, 0.29 ) }
    dend_16 { pt3dadd( 17.7532, 91.0579, -56.3245, 0.29 ) }
    dend_16 { pt3dadd( 17.7527, 91.8051, -56.1749, 0.37 ) }
    dend_16 { pt3dadd( 17.7014, 92.6232, -56.0164, 0.66 ) }
    dend_16 { pt3dadd( 17.6377, 93.1944, -55.9099, 0.96 ) }
    dend_16 { pt3dadd( 17.489, 94.4951, -55.6855, 0.81 ) }
    dend_16 { pt3dadd( 17.4201, 95.3167, -55.5536, 0.59 ) }
    dend_16 { pt3dadd( 17.4189, 95.4055, -55.5416, 0.59 ) }
    dend_16 { pt3dadd( 17.4753, 96.3521, -55.4397, 0.59 ) }
    dend_16 { pt3dadd( 17.5568, 96.9396, -55.3964, 0.66 ) }
    dend_16 { pt3dadd( 17.826, 98.171, -55.3437, 0.22 ) }
    dend_16 { pt3dadd( 18.0186, 98.7744, -55.3456, 0.22 ) }
    dend_16 { pt3dadd( 18.3063, 99.5144, -55.3363, 0.74 ) }
    dend_16 { pt3dadd( 18.5624, 100.139, -55.324, 0.81 ) }
    dend_16 { pt3dadd( 18.5978, 100.224, -55.3218, 0.81 ) }
    dend_16 { pt3dadd( 18.8547, 100.913, -55.3069, 0.88 ) }
    dend_16 { pt3dadd( 19.0406, 101.473, -55.2903, 0.81 ) }
    dend_16 { pt3dadd( 19.2519, 102.154, -55.2767, 0.29 ) }
    dend_16 { pt3dadd( 19.5373, 103.336, -55.2702, 0.29 ) }
    dend_16 { pt3dadd( 19.8703, 105.034, -55.281, 0.74 ) }
    dend_16 { pt3dadd( 19.994, 105.861, -55.2971, 1.11 ) }
    dend_16 { pt3dadd( 20.0644, 106.594, -55.3244, 0.88 ) }
    dend_16 { pt3dadd( 20.1201, 107.806, -55.375, 0.22 ) }
    dend_16 { pt3dadd( 20.1327, 109.077, -55.4335, 0.22 ) }
    dend_16 { pt3dadd( 20.1327, 109.204, -55.4435, 0.22 ) }
    dend_16 { pt3dadd( 20.1365, 109.522, -55.4941, 0.22 ) }
    dend_16 { pt3dadd( 20.1641, 110.244, -55.6434, 0.74 ) }
    dend_16 { pt3dadd( 20.1817, 110.697, -55.749, 1.11 ) }
    dend_16 { pt3dadd( 20.2149, 111.556, -56.0028, 1.25 ) }
    dend_16 { pt3dadd( 20.2666, 112.534, -56.3158, 0.74 ) }
    dend_16 { pt3dadd( 20.3309, 113.85, -56.7803, 0.22 ) }
    dend_16 { pt3dadd( 20.3636, 114.64, -57.0688, 0.37 ) }
    dend_16 { pt3dadd( 20.3967, 115.696, -57.4541, 0.37 ) }
    dend_16 { pt3dadd( 20.4293, 117.205, -57.9783, 0.52 ) }
    dend_16 { pt3dadd( 20.4402, 117.821, -58.1745, 0.88 ) }
    dend_16 { pt3dadd( 20.4563, 119.119, -58.5278, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_16 { pt3dadd( 20.4767, 119.938, -58.7201, 0.66 ) }
    dend_16 { pt3dadd( 20.5127, 120.854, -58.9139, 0.29 ) }
    dend_16 { pt3dadd( 20.5697, 121.875, -59.097, 0.22 ) }
    dend_16 { pt3dadd( 20.6198, 122.742, -59.2064, 0.22 ) }
    dend_16 { pt3dadd( 20.6713, 123.573, -59.2964, 0.44 ) }
    dend_16 { pt3dadd( 20.7148, 124.126, -59.3403, 0.59 ) }
    dend_16 { pt3dadd( 20.8045, 124.919, -59.4079, 0.37 ) }
    dend_16 { pt3dadd( 20.9198, 125.693, -59.4745, 0.29 ) }
    dend_16 { pt3dadd( 21.0962, 126.601, -59.5504, 0.44 ) }
    dend_16 { pt3dadd( 21.3199, 127.449, -59.6448, 0.29 ) }
    dend_16 { pt3dadd( 21.6676, 128.368, -59.8243, 0.66 ) }
    dend_16 { pt3dadd( 21.8897, 128.928, -59.9674, 1.03 ) }
    dend_16 { pt3dadd( 22.0343, 129.279, -60.0731, 1.25 ) }
    dend_16 { pt3dadd( 22.3004, 129.979, -60.3051, 0.44 ) }
    dend_16 { pt3dadd( 22.648, 131.056, -60.6865, 0.52 ) }
    dend_16 { pt3dadd( 22.9753, 132.331, -61.159, 0.29 ) }
    dend_16 { pt3dadd( 23.2877, 133.857, -61.7224, 0.29 ) }
    dend_16 { pt3dadd( 23.3095, 133.969, -61.7603, 0.29 ) }
    dend_16 { pt3dadd( 23.4438, 134.664, -61.9942, 0.29 ) }
    dend_16 { pt3dadd( 23.6799, 135.625, -62.287, 0.81 ) }
    dend_16 { pt3dadd( 23.7068, 135.712, -62.3063, 0.81 ) }
    dend_16 { pt3dadd( 23.94, 136.26, -62.4175, 0.88 ) }
    dend_16 { pt3dadd( 24.3791, 137.049, -62.6564, 0.88 ) }
    dend_16 { pt3dadd( 24.7588, 137.735, -62.896, 0.44 ) }
    dend_16 { pt3dadd( 25.2537, 138.652, -63.2461, 0.22 ) }
    dend_16 { pt3dadd( 25.6934, 139.546, -63.6718, 0.22 ) }
    dend_16 { pt3dadd( 26.1868, 140.678, -64.2785, 0.81 ) }
    dend_16 { pt3dadd( 26.517, 141.595, -64.8074, 0.88 ) }
    dend_16 { pt3dadd( 26.694, 142.244, -65.1794, 0.96 ) }
    dend_16 { pt3dadd( 26.8152, 142.802, -65.487, 0.96 ) }
    dend_16 { pt3dadd( 27.0372, 144.189, -66.2634, 0.44 ) }
    dend_16 { pt3dadd( 27.0505, 144.267, -66.3043, 0.44 ) }
    dend_16 { pt3dadd( 27.1979, 145.031, -66.6187, 0.44 ) }
    dend_16 { pt3dadd( 27.4246, 146.102, -66.99, 0.66 ) }
    dend_16 { pt3dadd( 27.4644, 146.28, -67.0481, 0.66 ) }
    dend_16 { pt3dadd( 27.5778, 146.774, -67.241, 0.88 ) }
    dend_16 { pt3dadd( 27.7747, 147.617, -67.585, 0.52 ) }
    dend_16 { pt3dadd( 27.9721, 148.366, -67.9384, 0.37 ) }
    dend_16 { pt3dadd( 28.4138, 150.055, -68.8549, 1.11 ) }
    dend_16 { pt3dadd( 28.5034, 150.456, -69.093, 1.25 ) }
    dend_16 { pt3dadd( 28.7741, 152.056, -70.0587, 0.22 ) }
    dend_16 { pt3dadd( 28.7802, 152.132, -70.1063, 0.22 ) }
    dend_16 { pt3dadd( 28.7571, 152.689, -70.494, 0.22 ) }
    dend_16 { pt3dadd( 28.6587, 153.37, -70.9822, 0.22 ) }
    dend_16 { pt3dadd( 28.5461, 153.819, -71.2645, 0.74 ) }
    dend_16 { pt3dadd( 28.4208, 154.243, -71.5201, 1.03 ) }
    dend_16 { pt3dadd( 28.2084, 154.894, -71.8658, 0.81 ) }
    dend_16 { pt3dadd( 27.8668, 156.019, -72.4702, 0.52 ) }
    dend_16 { pt3dadd( 27.7583, 156.41, -72.7283, 0.37 ) }
    dend_16 { pt3dadd( 27.5995, 157.155, -73.2962, 0.29 ) }
    dend_16 { pt3dadd( 27.5011, 157.91, -73.8932, 0.59 ) }
    dend_16 { pt3dadd( 27.4924, 158.371, -74.2464, 0.96 ) }
    dend_16 { pt3dadd( 27.5288, 158.823, -74.5754, 1.11 ) }
    dend_16 { pt3dadd( 27.7113, 160.222, -75.4474, 0.37 ) }
    dend_16 { pt3dadd( 27.7226, 160.3, -75.4924, 0.37 ) }
    dend_16 { pt3dadd( 27.8207, 161.154, -75.9162, 0.29 ) }
    dend_16 { pt3dadd( 27.8693, 162.048, -76.2193, 0.29 ) }
    dend_16 { pt3dadd( 27.8644, 162.134, -76.2385, 0.29 ) }
    dend_16 { pt3dadd( 27.7151, 163.047, -76.3448, 0.37 ) }
    dend_16 { pt3dadd( 27.6216, 163.51, -76.3554, 0.59 ) }
    dend_16 { pt3dadd( 27.4211, 164.453, -76.3679, 0.74 ) }
    dend_16 { pt3dadd( 27.2397, 165.225, -76.3725, 0.52 ) }
    dend_16 { pt3dadd( 26.9778, 166.399, -76.3742, 0.22 ) }
    dend_16 { pt3dadd( 26.8383, 167.223, -76.3765, 0.22 ) }
    dend_16 { pt3dadd( 26.7607, 167.881, -76.4136, 0.22 ) }
    dend_16 { pt3dadd( 26.6848, 168.839, -76.5209, 0.74 ) }
    dend_16 { pt3dadd( 26.6526, 169.666, -76.6562, 0.88 ) }
    dend_16 { pt3dadd( 26.6404, 170.411, -76.8124, 0.74 ) }
    dend_16 { pt3dadd( 26.6414, 171.328, -77.0266, 0.66 ) }
    dend_16 { pt3dadd( 26.6178, 172.864, -77.4124, 0.29 ) }
    dend_16 { pt3dadd( 26.5674, 173.896, -77.6854, 0.29 ) }
    dend_16 { pt3dadd( 26.5392, 174.437, -77.8348, 0.44 ) }
    dend_16 { pt3dadd( 26.531, 174.624, -77.8855, 0.44 ) }
    dend_16 { pt3dadd( 26.518, 175.165, -78.0155, 0.44 ) }
    dend_16 { pt3dadd( 26.5249, 175.686, -78.1106, 0.29 ) }
    dend_16 { pt3dadd( 26.5704, 176.211, -78.1588, 0.74 ) }
    dend_16 { pt3dadd( 26.7043, 176.949, -78.2054, 0.96 ) }
    dend_16 { pt3dadd( 26.7968, 177.325, -78.225, 0.88 ) }
    dend_16 { pt3dadd( 27.0531, 178.226, -78.2674, 0.29 ) }
    dend_16 { pt3dadd( 27.2463, 178.839, -78.2937, 0.44 ) }
    dend_16 { pt3dadd( 27.5057, 179.623, -78.3244, 0.29 ) }
    dend_16 { pt3dadd( 27.8473, 180.774, -78.3678, 0.37 ) }
    dend_16 { pt3dadd( 27.9905, 181.262, -78.3843, 0.59 ) }
    dend_16 { pt3dadd( 28.2172, 181.976, -78.4072, 0.74 ) }
    dend_16 { pt3dadd( 28.3571, 182.423, -78.4216, 0.52 ) }
    dend_16 { pt3dadd( 28.529, 182.979, -78.427, 0.37 ) }
    dend_16 { pt3dadd( 28.9162, 184.301, -78.3827, 0.52 ) }
    dend_16 { pt3dadd( 29.2267, 185.39, -78.31, 0.44 ) }
    dend_16 { pt3dadd( 29.6872, 186.987, -78.1694, 0.88 ) }
    dend_16 { pt3dadd( 29.8801, 187.625, -78.1038, 1.25 ) }
    dend_16 { pt3dadd( 30.0708, 188.266, -78.0347, 1.03 ) }
    dend_16 { pt3dadd( 30.3677, 189.276, -77.9195, 0.29 ) }
    dend_16 { pt3dadd( 30.61, 190.153, -77.8197, 0.44 ) }
    dend_16 { pt3dadd( 30.8099, 191.157, -77.7483, 0.37 ) }
    dend_16 { pt3dadd( 30.9444, 192.129, -77.7269, 0.74 ) }
    dend_16 { pt3dadd( 31.0554, 193.143, -77.7609, 0.74 ) }
    dend_16 { pt3dadd( 31.061, 193.231, -77.7694, 0.74 ) }
    dend_16 { pt3dadd( 31.0807, 194.241, -77.9074, 0.74 ) }
    dend_16 { pt3dadd( 31.0617, 195.354, -78.0688, 0.22 ) }
    dend_16 { pt3dadd( 31.0489, 195.931, -78.152, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_16 { pt3dadd( 31.037, 196.579, -78.2392, 0.96 ) }
    dend_16 { pt3dadd( 31.0331, 197.588, -78.3614, 0.22 ) }
    dend_16 { pt3dadd( 31.0515, 198.41, -78.4448, 0.66 ) }
    dend_16 { pt3dadd( 31.0969, 199.157, -78.5004, 1.03 ) }
    dend_16 { pt3dadd( 31.1919, 200.196, -78.4991, 0.81 ) }
    dend_16 { pt3dadd( 31.2928, 201.324, -78.4522, 0.52 ) }
    dend_16 { pt3dadd( 31.3395, 201.965, -78.4209, 0.44 ) }
    dend_16 { pt3dadd( 31.402, 203.297, -78.3562, 0.37 ) }
    dend_16 { pt3dadd( 31.4202, 204.475, -78.3039, 0.88 ) }
    dend_16 { pt3dadd( 31.4254, 205.765, -78.2524, 1.25 ) }
    dend_16 { pt3dadd( 31.4339, 206.521, -78.2274, 0.88 ) }
    dend_16 { pt3dadd( 31.473, 207.538, -78.2064, 0.44 ) }
    dend_16 { pt3dadd( 31.5254, 208.643, -78.2072, 0.59 ) }
    dend_16 { pt3dadd( 31.5664, 209.298, -78.2249, 0.81 ) }
    dend_16 { pt3dadd( 31.6293, 210.022, -78.2675, 0.59 ) }
    dend_16 { pt3dadd( 31.7414, 210.931, -78.3485, 0.37 ) }
    dend_16 { pt3dadd( 31.9818, 212.407, -78.4377, 0.52 ) }
    dend_16 { pt3dadd( 32.1437, 213.352, -78.4628, 0.37 ) }
    dend_16 { pt3dadd( 32.2075, 213.788, -78.4737, 0.74 ) }
    dend_16 { pt3dadd( 32.2591, 214.442, -78.4922, 0.88 ) }
    dend_16 { pt3dadd( 32.2513, 214.801, -78.5202, 0.88 ) }
    dend_16 { pt3dadd( 32.2037, 215.444, -78.6583, 1.11 ) }
    dend_16 { pt3dadd( 32.1788, 216.092, -78.8659, 1.03 ) }
    dend_16 { pt3dadd( 32.1796, 216.701, -79.0969, 0.37 ) }
    dend_16 { pt3dadd( 32.2087, 217.429, -79.3942, 0.37 ) }
    dend_16 { pt3dadd( 32.3235, 218.516, -79.8814, 0.66 ) }
    dend_16 { pt3dadd( 32.5726, 220.174, -80.6262, 0.29 ) }
    dend_16 { pt3dadd( 32.7719, 221.27, -81.1028, 0.52 ) }
    dend_16 { pt3dadd( 32.7868, 221.343, -81.1328, 0.52 ) }
    dend_16 { pt3dadd( 32.9209, 221.954, -81.3581, 0.66 ) }
    dend_16 { pt3dadd( 33.1583, 223.028, -81.6784, 0.37 ) }
    dend_16 { pt3dadd( 33.405, 224.253, -81.941, 0.66 ) }
    dend_16 { pt3dadd( 33.5553, 225.16, -82.0734, 0.59 ) }
    dend_16 { pt3dadd( 33.6407, 225.815, -82.1354, 0.74 ) }
    dend_16 { pt3dadd( 33.7402, 226.689, -82.1744, 0.37 ) }
    dend_16 { pt3dadd( 33.8569, 227.881, -82.0767, 0.59 ) }
    dend_16 { pt3dadd( 33.8724, 228.059, -82.0433, 0.59 ) }
    dend_16 { pt3dadd( 33.935, 228.754, -81.8817, 0.37 ) }
    dend_16 { pt3dadd( 34.0667, 230.132, -81.5289, 0.29 ) }
    dend_16 { pt3dadd( 34.1828, 231.317, -81.2425, 0.52 ) }
    dend_16 { pt3dadd( 34.3687, 233.212, -80.8034, 0.22 ) }
    dend_16 { pt3dadd( 34.5136, 234.38, -80.563, 0.52 ) }
    dend_16 { pt3dadd( 34.5858, 234.998, -80.4656, 0.81 ) }
    dend_16 { pt3dadd( 34.648, 235.718, -80.4003, 0.52 ) }
    dend_16 { pt3dadd( 34.7294, 236.993, -80.4067, 0.74 ) }
    dend_16 { pt3dadd( 34.7304, 237.082, -80.4156, 0.74 ) }
    dend_16 { pt3dadd( 34.6476, 238.253, -80.6447, 1.33 ) }
    dend_16 { pt3dadd( 34.5245, 239.162, -80.8202, 0.88 ) }
    dend_16 { pt3dadd( 34.3216, 240.191, -81.0053, 0.66 ) }
    dend_16 { pt3dadd( 34.0591, 241.182, -81.1565, 0.52 ) }
    dend_16 { pt3dadd( 33.7033, 242.334, -81.3219, 0.52 ) }
    dend_16 { pt3dadd( 33.3864, 243.271, -81.4604, 0.52 ) }
    dend_16 { pt3dadd( 32.9802, 244.312, -81.6231, 0.29 ) }
    dend_16 { pt3dadd( 32.7103, 245.04, -81.7359, 0.52 ) }
    dend_16 { pt3dadd( 32.4485, 245.721, -81.8356, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 29.7297, 56.8037, 9.20397, 0.59 ) }
    dend_11 { pt3dadd( 31.1212, 57.2172, 6.41601, 0.59 ) }
    dend_11 { pt3dadd( 31.8955, 57.4637, 5.09429, 0.74 ) }
    dend_11 { pt3dadd( 31.9297, 57.475, 5.04154, 0.74 ) }
    dend_11 { pt3dadd( 32.2948, 57.6088, 4.53657, 0.74 ) }
    dend_11 { pt3dadd( 32.93, 57.8253, 3.77606, 0.96 ) }
    dend_11 { pt3dadd( 32.9724, 57.8365, 3.72965, 0.96 ) }
    dend_11 { pt3dadd( 33.5178, 57.9249, 3.37134, 0.96 ) }
    dend_11 { pt3dadd( 33.5711, 57.9312, 3.33672, 0.96 ) }
    dend_11 { pt3dadd( 34.586, 58.0622, 2.62395, 0.52 ) }
    dend_11 { pt3dadd( 35.238, 58.1556, 2.12963, 0.52 ) }
    dend_11 { pt3dadd( 36.1118, 58.2904, 1.44973, 0.81 ) }
    dend_11 { pt3dadd( 36.591, 58.3734, 1.08487, 0.88 ) }
    dend_11 { pt3dadd( 37.4191, 58.5028, 0.425289, 0.52 ) }
    dend_11 { pt3dadd( 37.6703, 58.5453, 0.234635, 0.74 ) }
    dend_11 { pt3dadd( 37.7642, 58.5644, 0.15006, 0.74 ) }
    dend_11 { pt3dadd( 38.0893, 58.6614, -0.203442, 0.29 ) }
    dend_11 { pt3dadd( 38.482, 58.8183, -0.670695, 0.59 ) }
    dend_11 { pt3dadd( 39.1195, 59.1272, -1.61453, 0.74 ) }
    dend_11 { pt3dadd( 39.4644, 59.3123, -2.16602, 0.59 ) }
    dend_11 { pt3dadd( 40.2589, 59.7736, -3.54819, 1.03 ) }
    dend_11 { pt3dadd( 40.3074, 59.8045, -3.63389, 1.03 ) }
    dend_11 { pt3dadd( 40.4602, 59.9124, -3.91506, 0.74 ) }
    dend_11 { pt3dadd( 41.0742, 60.4259, -5.06716, 0.44 ) }
    dend_11 { pt3dadd( 41.3105, 60.655, -5.48008, 0.59 ) }
    dend_11 { pt3dadd( 41.7729, 61.0849, -6.20259, 0.66 ) }
    dend_11 { pt3dadd( 42.0946, 61.3485, -6.5753, 0.74 ) }
    dend_11 { pt3dadd( 42.1323, 61.3769, -6.61585, 0.74 ) }
    dend_11 { pt3dadd( 42.2784, 61.4806, -6.75764, 0.74 ) }
    dend_11 { pt3dadd( 42.3159, 61.506, -6.78701, 0.74 ) }
    dend_11 { pt3dadd( 43.0882, 62.102, -7.54919, 0.29 ) }
    dend_11 { pt3dadd( 43.2741, 62.3133, -7.82649, 0.66 ) }
    dend_11 { pt3dadd( 43.3154, 62.3865, -7.92884, 0.66 ) }
    dend_11 { pt3dadd( 43.4028, 62.554, -8.20726, 0.88 ) }
    dend_11 { pt3dadd( 43.4139, 62.5848, -8.27045, 0.88 ) }
    dend_11 { pt3dadd( 43.5537, 63.1887, -9.56973, 0.29 ) }
    dend_11 { pt3dadd( 43.6159, 63.7096, -10.7297, 0.29 ) }
    dend_11 { pt3dadd( 43.6493, 64.3241, -12.1491, 1.11 ) }
    dend_11 { pt3dadd( 43.6524, 64.8977, -13.5106, 0.96 ) }
    dend_11 { pt3dadd( 43.5991, 65.9968, -16.0863, 0.66 ) }
    dend_11 { pt3dadd( 43.5775, 66.2135, -16.581, 0.66 ) }
    dend_11 { pt3dadd( 43.5651, 66.2878, -16.7396, 0.66 ) }
    dend_11 { pt3dadd( 43.4967, 66.6941, -17.5284, 0.59 ) }
    dend_11 { pt3dadd( 43.4865, 66.7726, -17.6514, 0.59 ) }
    dend_11 { pt3dadd( 43.4294, 67.5304, -18.485, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_11 { pt3dadd( 43.4336, 67.5668, -18.5135, 0.52 ) }
    dend_11 { pt3dadd( 43.5192, 67.9674, -18.821, 0.96 ) }
    dend_11 { pt3dadd( 43.6594, 68.4435, -19.1622, 1.11 ) }
    dend_11 { pt3dadd( 44.0341, 69.4354, -19.7921, 0.29 ) }
    dend_11 { pt3dadd( 44.0553, 69.4773, -19.8219, 0.29 ) }
    dend_11 { pt3dadd( 44.261, 69.7389, -20.0708, 0.52 ) }
    dend_11 { pt3dadd( 44.2898, 69.7685, -20.1063, 0.52 ) }
    dend_11 { pt3dadd( 44.402, 69.8668, -20.2448, 0.74 ) }
    dend_11 { pt3dadd( 44.4336, 69.8966, -20.2893, 0.74 ) }
    dend_11 { pt3dadd( 44.9115, 70.4497, -20.9758, 0.74 ) }
    dend_11 { pt3dadd( 45.2784, 71.006, -21.5558, 0.59 ) }
    dend_11 { pt3dadd( 45.3007, 71.0483, -21.595, 0.59 ) }
    dend_11 { pt3dadd( 45.4935, 71.4494, -21.9172, 0.29 ) }
    dend_11 { pt3dadd( 45.7832, 72.1325, -22.3799, 0.29 ) }
    dend_11 { pt3dadd( 45.9937, 72.7085, -22.726, 0.88 ) }
    dend_11 { pt3dadd( 46.0958, 73.0499, -22.8809, 1.11 ) }
    dend_11 { pt3dadd( 46.1094, 73.0981, -22.9003, 1.11 ) }
    dend_11 { pt3dadd( 46.2677, 73.5773, -23.0964, 0.88 ) }
    dend_11 { pt3dadd( 46.348, 73.7611, -23.1895, 0.52 ) }
    dend_11 { pt3dadd( 46.7498, 74.4424, -23.5763, 0.37 ) }
    dend_11 { pt3dadd( 47.1413, 75.0011, -23.9484, 0.22 ) }
    dend_11 { pt3dadd( 47.1747, 75.0449, -23.9794, 0.22 ) }
    dend_11 { pt3dadd( 47.3873, 75.3311, -24.1741, 0.74 ) }
    dend_11 { pt3dadd( 47.8275, 76.0026, -24.6507, 0.88 ) }
    dend_11 { pt3dadd( 48.0457, 76.3331, -24.8823, 0.22 ) }
    dend_11 { pt3dadd( 48.2681, 76.6275, -25.1172, 0.29 ) }
    dend_11 { pt3dadd( 48.3019, 76.6651, -25.153, 0.29 ) }
    dend_11 { pt3dadd( 48.5643, 76.9319, -25.5105, 0.29 ) }
    dend_11 { pt3dadd( 49.0713, 77.3769, -26.3768, 0.88 ) }
    dend_11 { pt3dadd( 49.2609, 77.5173, -26.713, 1.18 ) }
    dend_11 { pt3dadd( 49.842, 77.8933, -27.778, 0.29 ) }
    dend_11 { pt3dadd( 50.103, 78.048, -28.2577, 0.88 ) }
    dend_11 { pt3dadd( 50.996, 78.5766, -29.8639, 1.33 ) }
    dend_11 { pt3dadd( 51.7403, 78.9959, -31.1526, 0.52 ) }
    dend_11 { pt3dadd( 51.9975, 79.1445, -31.5802, 1.25 ) }
    dend_11 { pt3dadd( 52.0243, 79.1629, -31.6242, 1.25 ) }
    dend_11 { pt3dadd( 52.6239, 79.681, -32.5965, 0.29 ) }
    dend_11 { pt3dadd( 52.9155, 79.9738, -33.0403, 0.29 ) }
    dend_11 { pt3dadd( 53.1929, 80.2862, -33.3531, 0.59 ) }
    dend_11 { pt3dadd( 53.3442, 80.474, -33.5111, 0.96 ) }
    dend_11 { pt3dadd( 53.6532, 80.8557, -33.8375, 0.96 ) }
    dend_11 { pt3dadd( 54.1692, 81.423, -34.359, 0.59 ) }
    dend_11 { pt3dadd( 54.2067, 81.4586, -34.3933, 0.59 ) }
    dend_11 { pt3dadd( 54.5063, 81.723, -34.6561, 0.29 ) }
    dend_11 { pt3dadd( 54.9338, 82.1084, -35.0094, 0.44 ) }
    dend_11 { pt3dadd( 55.1958, 82.3488, -35.2107, 0.66 ) }
    dend_11 { pt3dadd( 55.5786, 82.7413, -35.5079, 0.29 ) }
    dend_11 { pt3dadd( 55.8291, 83.0042, -35.6793, 0.22 ) }
    dend_11 { pt3dadd( 56.1561, 83.3582, -35.9097, 0.66 ) }
    dend_11 { pt3dadd( 56.3312, 83.5465, -36.032, 0.74 ) }
    dend_11 { pt3dadd( 56.5122, 83.7488, -36.1541, 0.59 ) }
    dend_11 { pt3dadd( 57.1594, 84.4185, -36.5747, 0.22 ) }
    dend_11 { pt3dadd( 57.4592, 84.6514, -36.7676, 0.44 ) }
    dend_11 { pt3dadd( 57.5086, 84.6761, -36.7993, 0.44 ) }
    dend_11 { pt3dadd( 57.7967, 84.7676, -36.9726, 0.59 ) }
    dend_11 { pt3dadd( 57.8422, 84.7793, -37.0007, 0.59 ) }
    dend_11 { pt3dadd( 58.2856, 84.8719, -37.2709, 0.59 ) }
    dend_11 { pt3dadd( 59.0068, 85.0121, -37.686, 0.22 ) }
    dend_11 { pt3dadd( 59.3953, 85.1212, -37.9152, 0.59 ) }
    dend_11 { pt3dadd( 59.6519, 85.2088, -38.0639, 0.66 ) }
    dend_11 { pt3dadd( 60.1277, 85.4196, -38.3823, 0.66 ) }
    dend_11 { pt3dadd( 60.1698, 85.4425, -38.4118, 0.66 ) }
    dend_11 { pt3dadd( 60.7128, 85.8069, -38.8242, 0.22 ) }
    dend_11 { pt3dadd( 61.0943, 86.0987, -39.1116, 0.66 ) }
    dend_11 { pt3dadd( 61.2627, 86.2346, -39.2419, 0.96 ) }
    dend_11 { pt3dadd( 62.142, 86.9652, -39.9179, 0.22 ) }
    dend_11 { pt3dadd( 62.441, 87.2237, -40.1801, 0.22 ) }
    dend_11 { pt3dadd( 62.8591, 87.6183, -40.678, 0.59 ) }
    dend_11 { pt3dadd( 63.043, 87.8138, -40.9791, 0.96 ) }
    dend_11 { pt3dadd( 63.1268, 87.9044, -41.139, 1.18 ) }
    dend_11 { pt3dadd( 63.149, 87.9274, -41.1832, 1.18 ) }
    dend_11 { pt3dadd( 63.7624, 88.4454, -42.294, 0.44 ) }
    dend_11 { pt3dadd( 64.3008, 88.8019, -43.1676, 0.37 ) }
    dend_11 { pt3dadd( 64.7305, 89.035, -43.7937, 0.29 ) }
    dend_11 { pt3dadd( 65.0057, 89.1665, -44.1482, 0.44 ) }
    dend_11 { pt3dadd( 65.2135, 89.2666, -44.398, 0.44 ) }
    dend_11 { pt3dadd( 65.8345, 89.5595, -45.0226, 0.22 ) }
    dend_11 { pt3dadd( 66.3292, 89.7487, -45.3864, 0.81 ) }
    dend_11 { pt3dadd( 66.4247, 89.7801, -45.4464, 0.81 ) }
    dend_11 { pt3dadd( 66.7386, 89.8604, -45.6352, 0.96 ) }
    dend_11 { pt3dadd( 67.9408, 90.126, -46.3623, 0.37 ) }
    dend_11 { pt3dadd( 68.632, 90.2903, -46.7854, 0.37 ) }
    dend_11 { pt3dadd( 69.2803, 90.4782, -47.2439, 0.29 ) }
    dend_11 { pt3dadd( 69.3163, 90.4878, -47.2727, 0.29 ) }
    dend_11 { pt3dadd( 69.7741, 90.5984, -47.6562, 0.29 ) }
    dend_11 { pt3dadd( 70.1289, 90.6773, -47.9513, 0.74 ) }
    dend_11 { pt3dadd( 70.5943, 90.7712, -48.2681, 1.03 ) }
    dend_11 { pt3dadd( 71.444, 90.9618, -48.8226, 0.88 ) }
    dend_11 { pt3dadd( 72.6277, 91.2532, -49.4104, 0.29 ) }
    dend_11 { pt3dadd( 73.0514, 91.3416, -49.5582, 0.44 ) }
    dend_11 { pt3dadd( 73.665, 91.4401, -49.6976, 0.29 ) }
    dend_11 { pt3dadd( 74.6674, 91.5329, -49.806, 1.33 ) }
    dend_11 { pt3dadd( 75.0347, 91.5389, -49.8002, 1.69 ) }
    dend_11 { pt3dadd( 76.2604, 91.5157, -49.6425, 0.29 ) }
    dend_11 { pt3dadd( 76.7922, 91.4987, -49.5351, 0.29 ) }
    dend_11 { pt3dadd( 77.1154, 91.4772, -49.4772, 0.66 ) }
    dend_11 { pt3dadd( 77.1638, 91.4721, -49.4713, 0.66 ) }
    dend_11 { pt3dadd( 77.5224, 91.4263, -49.4746, 0.66 ) }
    dend_11 { pt3dadd( 78.1434, 91.3255, -49.5338, 0.22 ) }
    dend_11 { pt3dadd( 78.5196, 91.2288, -49.6079, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( 78.5802, 91.2114, -49.6175, 0.44 ) }
    dend_11 { pt3dadd( 79.0275, 91.0696, -49.6749, 0.44 ) }
    dend_11 { pt3dadd( 79.071, 91.0558, -49.6866, 0.44 ) }
    dend_11 { pt3dadd( 79.6226, 90.8973, -49.8834, 0.29 ) }
    dend_11 { pt3dadd( 80.212, 90.7301, -50.168, 0.29 ) }
    dend_11 { pt3dadd( 80.6397, 90.6108, -50.4129, 0.74 ) }
    dend_11 { pt3dadd( 80.8727, 90.548, -50.5563, 0.96 ) }
    dend_11 { pt3dadd( 82.0772, 90.2491, -51.3827, 0.37 ) }
    dend_11 { pt3dadd( 82.3407, 90.1957, -51.5818, 1.03 ) }
    dend_11 { pt3dadd( 82.9722, 90.1224, -52.1495, 1.03 ) }
    dend_11 { pt3dadd( 83.2449, 90.1135, -52.4423, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 11/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 29.7297, 56.8037, 9.20397, 0.88 ) }
    dend_4 { pt3dadd( 30.071, 59.1551, 11.8874, 0.88 ) }
    dend_4 { pt3dadd( 30.3806, 60.3192, 13.0435, 0.66 ) }
    dend_4 { pt3dadd( 30.5733, 61.0133, 13.6208, 0.66 ) }
    dend_4 { pt3dadd( 30.5925, 61.0825, 13.6688, 0.66 ) }
    dend_4 { pt3dadd( 30.8256, 61.9414, 14.1409, 0.66 ) }
    dend_4 { pt3dadd( 30.8473, 62.0194, 14.1768, 0.66 ) }
    dend_4 { pt3dadd( 31.168, 63.0578, 14.4293, 0.74 ) }
    dend_4 { pt3dadd( 31.5611, 64.784, 14.7783, 0.44 ) }
    dend_4 { pt3dadd( 31.6939, 65.5795, 14.9444, 0.37 ) }
    dend_4 { pt3dadd( 31.8534, 66.7283, 15.1974, 0.37 ) }
    dend_4 { pt3dadd( 31.9183, 67.2698, 15.3184, 0.59 ) }
    dend_4 { pt3dadd( 32.0766, 68.5564, 15.5985, 0.59 ) }
    dend_4 { pt3dadd( 32.207, 69.4824, 15.7942, 0.59 ) }
    dend_4 { pt3dadd( 32.3093, 69.8899, 15.8739, 0.88 ) }
    dend_4 { pt3dadd( 32.3369, 69.9791, 15.9007, 0.88 ) }
    dend_4 { pt3dadd( 32.5796, 70.8096, 16.2757, 1.18 ) }
    dend_4 { pt3dadd( 32.6183, 70.9711, 16.3665, 1.18 ) }
    dend_4 { pt3dadd( 32.7087, 71.4655, 16.6737, 0.88 ) }
    dend_4 { pt3dadd( 32.8764, 72.5397, 17.3612, 0.44 ) }
    dend_4 { pt3dadd( 33.0967, 73.7766, 18.1505, 0.74 ) }
    dend_4 { pt3dadd( 33.3953, 75.3764, 19.1914, 1.33 ) }
    dend_4 { pt3dadd( 33.6793, 76.8224, 20.123, 0.96 ) }
    dend_4 { pt3dadd( 33.9869, 78.3059, 21.0482, 0.52 ) }
    dend_4 { pt3dadd( 34.1837, 79.2274, 21.5829, 0.44 ) }
    dend_4 { pt3dadd( 34.4293, 80.4642, 22.2696, 0.37 ) }
    dend_4 { pt3dadd( 34.6233, 81.7419, 22.9254, 0.37 ) }
    dend_4 { pt3dadd( 34.698, 82.6087, 23.3557, 0.37 ) }
    dend_4 { pt3dadd( 34.6953, 82.8453, 23.4704, 0.37 ) }
    dend_4 { pt3dadd( 34.5923, 83.6586, 23.8826, 0.59 ) }
    dend_4 { pt3dadd( 34.1312, 85.509, 24.8357, 0.88 ) }
    dend_4 { pt3dadd( 33.6264, 86.9292, 25.556, 0.88 ) }
    dend_4 { pt3dadd( 33.1635, 88.0409, 26.0789, 0.52 ) }
    dend_4 { pt3dadd( 32.8524, 88.7178, 26.3976, 0.52 ) }
    dend_4 { pt3dadd( 32.8256, 88.7804, 26.4247, 0.52 ) }
    dend_4 { pt3dadd( 32.6545, 89.3342, 26.6035, 0.52 ) }
    dend_4 { pt3dadd( 32.6599, 89.4193, 26.6065, 0.52 ) }
    dend_4 { pt3dadd( 32.8556, 89.9558, 26.5598, 0.74 ) }
    dend_4 { pt3dadd( 32.9131, 90.0696, 26.5457, 0.74 ) }
    dend_4 { pt3dadd( 33.3165, 90.7649, 26.48, 0.37 ) }
    dend_4 { pt3dadd( 33.9461, 91.7935, 26.3936, 0.44 ) }
    dend_4 { pt3dadd( 34.5318, 92.6226, 26.2924, 0.44 ) }
    dend_4 { pt3dadd( 35.0393, 93.2872, 26.1888, 0.74 ) }
    dend_4 { pt3dadd( 35.1478, 93.4177, 26.165, 0.74 ) }
    dend_4 { pt3dadd( 35.8413, 94.2361, 25.9715, 0.74 ) }
    dend_4 { pt3dadd( 35.8965, 94.2993, 25.9538, 0.74 ) }
    dend_4 { pt3dadd( 36.7041, 95.2439, 25.659, 0.66 ) }
    dend_4 { pt3dadd( 36.7575, 95.3107, 25.6377, 0.66 ) }
    dend_4 { pt3dadd( 37.209, 95.9066, 25.4738, 0.74 ) }
    dend_4 { pt3dadd( 37.9784, 97.0049, 25.2081, 0.29 ) }
    dend_4 { pt3dadd( 38.3951, 97.7017, 25.0987, 0.44 ) }
    dend_4 { pt3dadd( 38.8274, 98.5445, 25.0265, 0.22 ) }
    dend_4 { pt3dadd( 39.0957, 99.2052, 25.0169, 0.66 ) }
    dend_4 { pt3dadd( 39.2745, 99.718, 25.018, 0.66 ) }
    dend_4 { pt3dadd( 39.2989, 99.8144, 25.0195, 0.66 ) }
    dend_4 { pt3dadd( 39.5555, 101.057, 25.1106, 0.44 ) }
    dend_4 { pt3dadd( 39.5789, 101.142, 25.1161, 0.44 ) }
    dend_4 { pt3dadd( 39.7356, 101.556, 25.14, 0.52 ) }
    dend_4 { pt3dadd( 39.8498, 101.8, 25.14, 0.52 ) }
    dend_4 { pt3dadd( 40.0973, 102.266, 25.1055, 0.52 ) }
    dend_4 { pt3dadd( 40.6521, 103.281, 24.9648, 0.29 ) }
    dend_4 { pt3dadd( 41.1496, 104.253, 24.773, 0.29 ) }
    dend_4 { pt3dadd( 41.1761, 104.32, 24.7586, 0.29 ) }
    dend_4 { pt3dadd( 41.4113, 105.075, 24.5842, 0.44 ) }
    dend_4 { pt3dadd( 41.4671, 105.34, 24.5172, 0.44 ) }
    dend_4 { pt3dadd( 41.5319, 106.189, 24.3284, 0.44 ) }
    dend_4 { pt3dadd( 41.4906, 106.998, 24.1567, 0.59 ) }
    dend_4 { pt3dadd( 41.4179, 107.733, 24.0784, 0.74 ) }
    dend_4 { pt3dadd( 41.4122, 107.83, 24.0762, 0.74 ) }
    dend_4 { pt3dadd( 41.4267, 108.554, 24.1263, 0.74 ) }
    dend_4 { pt3dadd( 41.5072, 109.662, 24.4304, 0.52 ) }
    dend_4 { pt3dadd( 41.5176, 109.741, 24.4631, 0.52 ) }
    dend_4 { pt3dadd( 41.6777, 110.639, 24.8652, 0.44 ) }
    dend_4 { pt3dadd( 41.7556, 111.15, 25.1073, 0.29 ) }
    dend_4 { pt3dadd( 41.8486, 111.978, 25.4673, 0.29 ) }
    dend_4 { pt3dadd( 41.9033, 113.795, 26.2817, 0.29 ) }
    dend_4 { pt3dadd( 41.9015, 114.47, 26.5616, 0.37 ) }
    dend_4 { pt3dadd( 41.8964, 115.399, 26.924, 0.44 ) }
    dend_4 { pt3dadd( 41.8721, 116.752, 27.4138, 0.96 ) }
    dend_4 { pt3dadd( 41.8732, 117.587, 27.7158, 1.25 ) }
    dend_4 { pt3dadd( 41.9963, 119.645, 28.5332, 0.52 ) }
    dend_4 { pt3dadd( 42.1315, 120.479, 28.8628, 0.52 ) }
    dend_4 { pt3dadd( 42.3039, 121.159, 29.1787, 0.66 ) }
    dend_4 { pt3dadd( 42.3338, 121.241, 29.2241, 0.66 ) }
    dend_4 { pt3dadd( 42.7054, 121.982, 29.6416, 0.44 ) }
    dend_4 { pt3dadd( 43.3194, 123.034, 30.2284, 0.29 ) }
    dend_4 { pt3dadd( 43.5217, 123.393, 30.378, 0.52 ) }
    dend_4 { pt3dadd( 43.8033, 124.023, 30.6177, 0.52 ) }
    dend_4 { pt3dadd( 44.121, 124.841, 30.9066, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_4 { pt3dadd( 44.3778, 125.464, 31.1132, 0.29 ) }
    dend_4 { pt3dadd( 44.5819, 125.993, 31.3206, 0.52 ) }
    dend_4 { pt3dadd( 45.0523, 127.065, 31.7742, 0.88 ) }
    dend_4 { pt3dadd( 45.2988, 127.576, 32.015, 0.52 ) }
    dend_4 { pt3dadd( 45.8725, 128.629, 32.5695, 0.44 ) }
    dend_4 { pt3dadd( 46.3538, 129.402, 33.0061, 0.59 ) }
    dend_4 { pt3dadd( 47.2246, 130.671, 33.8516, 0.29 ) }
    dend_4 { pt3dadd( 47.8596, 131.525, 34.5053, 0.29 ) }
    dend_4 { pt3dadd( 50.2493, 142.868, 38.0781, 0.29 ) }
    dend_4 { pt3dadd( 53.04, 154.586, 38.9371, 0.29 ) }
    // Section: dend_87, id: dend_87, parent: dend_67 (entry count 10/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -121.528, -186.5, -3.41369, 0.29 ) }
    dend_87 { pt3dadd( -121.751, -187.563, -3.21, 0.29 ) }
    dend_87 { pt3dadd( -121.827, -187.924, -3.14063, 0.74 ) }
    dend_87 { pt3dadd( -121.969, -188.602, -3.01079, 0.29 ) }
    dend_87 { pt3dadd( -122.103, -189.239, -2.88876, 0.29 ) }
    dend_87 { pt3dadd( -122.285, -190.104, -2.72282, 0.37 ) }
    dend_87 { pt3dadd( -124.254, -198.971, -2.27954, 0.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 17/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -121.528, -186.5, -3.41369, 0.37 ) }
    dend_68 { pt3dadd( -122.589, -186.711, -2.2672, 0.37 ) }
    dend_68 { pt3dadd( -123.171, -186.822, -1.70901, 0.37 ) }
    dend_68 { pt3dadd( -124.249, -186.991, -0.680502, 0.44 ) }
    dend_68 { pt3dadd( -125.01, -187.109, 0.0152434, 0.37 ) }
    dend_68 { pt3dadd( -126.524, -187.381, 1.34727, 0.88 ) }
    dend_68 { pt3dadd( -127.052, -187.502, 1.84773, 1.11 ) }
    dend_68 { pt3dadd( -127.695, -187.671, 2.45497, 0.81 ) }
    dend_68 { pt3dadd( -129.203, -188.181, 3.99434, 0.29 ) }
    dend_68 { pt3dadd( -129.691, -188.358, 4.47081, 0.29 ) }
    dend_68 { pt3dadd( -130.124, -188.516, 4.90625, 0.74 ) }
    dend_68 { pt3dadd( -131.588, -189.027, 6.27216, 0.44 ) }
    dend_68 { pt3dadd( -132.042, -189.174, 6.70063, 0.44 ) }
    dend_68 { pt3dadd( -133.049, -189.429, 7.5834, 0.29 ) }
    dend_68 { pt3dadd( -134.127, -189.722, 8.61902, 0.29 ) }
    dend_68 { pt3dadd( -134.829, -189.903, 9.48885, 0.59 ) }
    dend_68 { pt3dadd( -135.305, -190.009, 10.134, 0.66 ) }
    dend_68 { pt3dadd( -136.006, -190.14, 11.1028, 0.44 ) }
    dend_68 { pt3dadd( -136.65, -190.258, 12.078, 0.37 ) }
    dend_68 { pt3dadd( -138.192, -190.56, 14.6172, 0.66 ) }
    dend_68 { pt3dadd( -139.667, -190.895, 17.1696, 0.81 ) }
    dend_68 { pt3dadd( -140.003, -190.961, 17.7214, 0.88 ) }
    dend_68 { pt3dadd( -140.294, -191.016, 18.2239, 0.88 ) }
    dend_68 { pt3dadd( -140.343, -191.025, 18.3096, 0.88 ) }
    dend_68 { pt3dadd( -141.221, -191.157, 19.7303, 0.52 ) }
    dend_68 { pt3dadd( -141.788, -191.148, 20.3101, 0.52 ) }
    dend_68 { pt3dadd( -143.736, -191.138, 21.8481, 1.69 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 44/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 1.25177, -106.275, -23.7185, 0.74 ) }
    dend_52 { pt3dadd( 1.15747, -107.481, -24.2945, 0.74 ) }
    dend_52 { pt3dadd( 1.17956, -108.461, -24.7487, 0.74 ) }
    dend_52 { pt3dadd( 1.28225, -109.804, -25.3327, 0.88 ) }
    dend_52 { pt3dadd( 1.37525, -110.627, -25.6736, 0.88 ) }
    dend_52 { pt3dadd( 1.52772, -111.977, -26.2324, 0.81 ) }
    dend_52 { pt3dadd( 1.73456, -113.807, -26.9904, 0.88 ) }
    dend_52 { pt3dadd( 1.95416, -114.926, -27.423, 0.88 ) }
    dend_52 { pt3dadd( 2.16249, -115.707, -27.7248, 1.33 ) }
    dend_52 { pt3dadd( 2.42904, -116.531, -28.0145, 1.18 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 54/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 1.25177, -106.275, -23.7185, 0.59 ) }
    dend_49 { pt3dadd( 1.32667, -107.086, -23.9278, 0.59 ) }
    dend_49 { pt3dadd( 1.38718, -108.144, -24.3697, 0.52 ) }
    dend_49 { pt3dadd( 1.47727, -109.205, -24.8646, 0.44 ) }
    dend_49 { pt3dadd( 1.56723, -110.12, -25.3098, 0.44 ) }
    dend_49 { pt3dadd( 1.73485, -111.359, -25.8945, 0.59 ) }
    dend_49 { pt3dadd( 1.97259, -112.837, -26.6047, 0.74 ) }
    dend_49 { pt3dadd( 2.1768, -113.943, -27.1832, 0.59 ) }
    dend_49 { pt3dadd( 2.34907, -114.741, -27.6225, 0.59 ) }
    dend_49 { pt3dadd( 2.36602, -114.805, -27.6563, 0.59 ) }
    dend_49 { pt3dadd( 2.7544, -116.035, -28.234, 0.59 ) }
    dend_49 { pt3dadd( 3.25337, -117.352, -28.6887, 0.74 ) }
    dend_49 { pt3dadd( 3.57815, -118.1, -28.8861, 0.74 ) }
    dend_49 { pt3dadd( 4.13856, -119.312, -29.1638, 0.66 ) }
    dend_49 { pt3dadd( 4.67729, -120.424, -29.399, 0.59 ) }
    dend_49 { pt3dadd( 4.75529, -120.562, -29.4186, 0.59 ) }
    dend_49 { pt3dadd( 5.48708, -121.574, -29.4634, 0.59 ) }
    dend_49 { pt3dadd( 5.80743, -121.923, -29.4354, 0.81 ) }
    dend_49 { pt3dadd( 5.86826, -121.984, -29.4275, 0.81 ) }
    dend_49 { pt3dadd( 6.45178, -122.561, -29.3533, 0.81 ) }
    dend_49 { pt3dadd( 7.50997, -123.66, -29.3145, 0.66 ) }
    dend_49 { pt3dadd( 8.25317, -124.529, -29.3441, 0.66 ) }
    dend_49 { pt3dadd( 8.88243, -125.386, -29.3703, 0.66 ) }
    dend_49 { pt3dadd( 9.51884, -126.354, -29.3496, 0.81 ) }
    dend_49 { pt3dadd( 9.97524, -127.128, -29.3133, 0.96 ) }
    dend_49 { pt3dadd( 10.5752, -128.285, -29.2468, 0.52 ) }
    dend_49 { pt3dadd( 10.9969, -129.197, -29.2021, 0.52 ) }
    dend_49 { pt3dadd( 11.5288, -130.396, -29.0845, 0.81 ) }
    dend_49 { pt3dadd( 11.9758, -131.353, -28.9578, 0.81 ) }
    dend_49 { pt3dadd( 12.3942, -132.231, -28.8216, 0.81 ) }
    dend_49 { pt3dadd( 12.4286, -132.309, -28.8088, 0.81 ) }
    dend_49 { pt3dadd( 12.9184, -133.493, -28.6372, 0.81 ) }
    dend_49 { pt3dadd( 12.9716, -133.632, -28.6263, 0.81 ) }
    dend_49 { pt3dadd( 13.4342, -135.032, -28.5839, 0.81 ) }
    dend_49 { pt3dadd( 13.7226, -136.096, -28.5587, 0.81 ) }
    dend_49 { pt3dadd( 13.9528, -137.101, -28.5138, 0.66 ) }
    dend_49 { pt3dadd( 13.9699, -137.185, -28.5052, 0.66 ) }
    dend_49 { pt3dadd( 14.1608, -138.256, -28.3497, 0.37 ) }
    dend_49 { pt3dadd( 14.4, -139.526, -28.145, 0.66 ) }
    dend_49 { pt3dadd( 14.5134, -140.111, -28.039, 0.96 ) }
    dend_49 { pt3dadd( 14.7777, -141.263, -27.7765, 0.74 ) }
    dend_49 { pt3dadd( 15.1242, -142.649, -27.4163, 0.96 ) }
    dend_49 { pt3dadd( 15.3809, -143.71, -27.1503, 0.81 ) }
    dend_49 { pt3dadd( 15.6761, -144.963, -26.8538, 0.74 ) }
    dend_49 { pt3dadd( 15.6883, -145.025, -26.8441, 0.74 ) }
    dend_49 { pt3dadd( 15.9172, -146.339, -26.7486, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_49 { pt3dadd( 15.9312, -146.413, -26.7519, 0.74 ) }
    dend_49 { pt3dadd( 16.2272, -147.679, -27.093, 0.44 ) }
    dend_49 { pt3dadd( 16.4029, -148.328, -27.3465, 0.44 ) }
    dend_49 { pt3dadd( 16.7839, -149.639, -27.9793, 1.4 ) }
    dend_49 { pt3dadd( 17.0624, -150.468, -28.4747, 1.18 ) }
    dend_49 { pt3dadd( 17.4516, -151.476, -29.2243, 1.03 ) }
    dend_49 { pt3dadd( 18.2114, -153.105, -30.5769, 0.66 ) }
    dend_49 { pt3dadd( 18.556, -153.705, -31.109, 0.66 ) }
    dend_49 { pt3dadd( 18.6432, -153.839, -31.2286, 0.66 ) }
    dend_49 { pt3dadd( 19.5032, -155.041, -32.2623, 0.81 ) }
    dend_49 { pt3dadd( 20.1422, -155.924, -33.064, 0.96 ) }
    dend_49 { pt3dadd( 20.9891, -157.064, -34.1379, 0.74 ) }
    dend_49 { pt3dadd( 21.6773, -157.918, -34.9215, 0.74 ) }
    dend_49 { pt3dadd( 22.2211, -158.564, -35.5069, 0.96 ) }
    dend_49 { pt3dadd( 22.6416, -159.058, -35.9103, 1.25 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 15/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -20.5353, -364.024, -21.1232, 0.29 ) }
    dend_47 { pt3dadd( -19.4361, -364.02, -20.6117, 0.29 ) }
    dend_47 { pt3dadd( -18.7698, -364.018, -20.3017, 0.29 ) }
    dend_47 { pt3dadd( -17.4687, -364.013, -19.6962, 0.22 ) }
    dend_47 { pt3dadd( -16.8316, -364.011, -19.3997, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 20/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -20.5353, -364.024, -21.1232, 0.59 ) }
    dend_44 { pt3dadd( -20.7086, -365.052, -21.3131, 0.59 ) }
    dend_44 { pt3dadd( -20.7228, -365.119, -21.3266, 0.59 ) }
    dend_44 { pt3dadd( -20.9939, -366.174, -21.5446, 0.52 ) }
    dend_44 { pt3dadd( -21.2828, -367.24, -21.7631, 0.66 ) }
    dend_44 { pt3dadd( -21.5371, -368.248, -21.9467, 0.66 ) }
    dend_44 { pt3dadd( -21.7895, -369.292, -22.1241, 0.81 ) }
    dend_44 { pt3dadd( -21.8475, -369.503, -22.1577, 0.81 ) }
    dend_44 { pt3dadd( -22.1224, -370.56, -22.2478, 0.81 ) }
    dend_44 { pt3dadd( -22.1547, -370.701, -22.2479, 0.81 ) }
    dend_44 { pt3dadd( -22.3541, -371.93, -22.0438, 0.81 ) }
    dend_44 { pt3dadd( -22.3606, -372.006, -22.0314, 0.81 ) }
    dend_44 { pt3dadd( -22.3531, -373.121, -21.9941, 0.59 ) }
    dend_44 { pt3dadd( -22.2949, -374.236, -22.0679, 0.37 ) }
    dend_44 { pt3dadd( -22.1922, -374.917, -22.2244, 0.74 ) }
    dend_44 { pt3dadd( -21.8394, -376.267, -22.9026, 0.81 ) }
    dend_44 { pt3dadd( -21.3255, -377.68, -23.855, 0.52 ) }
    dend_44 { pt3dadd( -20.5443, -379.37, -25.161, 0.52 ) }
    dend_44 { pt3dadd( -20.5219, -379.413, -25.1982, 0.52 ) }
    dend_44 { pt3dadd( -19.7241, -380.642, -26.4991, 0.96 ) }
    dend_44 { pt3dadd( -18.5428, -382.096, -28.2937, 1.69 ) }
    dend_44 { pt3dadd( -17.9907, -382.639, -29.056, 0.37 ) }
    dend_44 { pt3dadd( -17.1216, -383.323, -30.1206, 0.37 ) }
    dend_44 { pt3dadd( -16.6837, -383.623, -30.6012, 0.66 ) }
    dend_44 { pt3dadd( -14.5417, -384.994, -32.7963, 1.25 ) }
    dend_44 { pt3dadd( -12.9881, -385.904, -34.2719, 0.44 ) }
    dend_44 { pt3dadd( -11.9895, -386.46, -35.1489, 0.81 ) }
    dend_44 { pt3dadd( -10.0597, -387.523, -36.7934, 0.37 ) }
    dend_44 { pt3dadd( -9.29008, -387.939, -37.3964, 0.29 ) }
    dend_44 { pt3dadd( -8.19145, -388.521, -38.1283, 0.29 ) }
    dend_44 { pt3dadd( -7.68791, -388.812, -38.377, 0.96 ) }
    dend_44 { pt3dadd( -7.15682, -389.122, -38.5839, 0.96 ) }
    dend_44 { pt3dadd( -6.03826, -389.835, -38.9462, 0.44 ) }
    dend_44 { pt3dadd( -5.61884, -390.079, -39.0944, 0.81 ) }
    dend_44 { pt3dadd( -5.02159, -390.381, -39.336, 1.03 ) }
    dend_44 { pt3dadd( -4.95381, -390.415, -39.3627, 1.03 ) }
    dend_44 { pt3dadd( -3.16344, -391.38, -40.0363, 0.37 ) }
    dend_44 { pt3dadd( -1.96744, -392.07, -40.4762, 1.4 ) }
    dend_44 { pt3dadd( 0.155737, -393.454, -41.436, 0.37 ) }
    dend_44 { pt3dadd( 0.750269, -393.892, -41.7395, 0.66 ) }
    dend_44 { pt3dadd( 1.58886, -394.579, -42.1736, 0.29 ) }
    dend_44 { pt3dadd( 2.26604, -395.192, -42.4779, 0.96 ) }
    dend_44 { pt3dadd( 2.55186, -395.487, -42.5773, 0.96 ) }
    dend_44 { pt3dadd( 4.56199, -397.846, -43.0873, 0.37 ) }
    dend_44 { pt3dadd( 4.80099, -398.184, -43.1142, 0.59 ) }
    dend_44 { pt3dadd( 5.47643, -399.116, -43.198, 0.29 ) }
    dend_44 { pt3dadd( 6.24107, -400.052, -43.3309, 0.96 ) }
    dend_44 { pt3dadd( 6.28622, -400.102, -43.3386, 0.96 ) }
    dend_44 { pt3dadd( 6.65323, -400.534, -43.2874, 1.33 ) }
    dend_44 { pt3dadd( 6.6827, -400.582, -43.2456, 1.33 ) }
    dend_44 { pt3dadd( 6.86816, -400.915, -42.9413, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -54.0275, -61.3102, -2.6969, 0.29 ) }
    dend_40 { pt3dadd( -53.713, -62.4162, -2.18744, 0.29 ) }
    dend_40 { pt3dadd( -53.4888, -63.2042, -1.82443, 0.37 ) }
    dend_40 { pt3dadd( -53.2819, -63.9317, -1.48933, 0.37 ) }
    dend_40 { pt3dadd( -52.9855, -64.9736, -1.00937, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -54.0275, -61.3102, -2.6969, 0.37 ) }
    dend_35 { pt3dadd( -55.2413, -61.968, -2.38954, 0.37 ) }
    dend_35 { pt3dadd( -56.0815, -62.3262, -2.07395, 0.37 ) }
    dend_35 { pt3dadd( -57.0419, -62.6373, -1.67823, 0.81 ) }
    dend_35 { pt3dadd( -57.6939, -62.7846, -1.29495, 1.25 ) }
    dend_35 { pt3dadd( -58.1832, -62.8685, -0.959311, 1.25 ) }
    dend_35 { pt3dadd( -60.2653, -63.2285, 0.4933, 0.44 ) }
    dend_35 { pt3dadd( -60.4085, -63.2453, 0.600246, 0.44 ) }
    dend_35 { pt3dadd( -60.8917, -63.2869, 0.963064, 0.74 ) }
    dend_35 { pt3dadd( -62.803, -63.4695, 2.33738, 0.52 ) }
    dend_35 { pt3dadd( -63.8086, -63.6277, 3.00009, 0.59 ) }
    dend_35 { pt3dadd( -64.5624, -63.8443, 3.35799, 0.44 ) }
    dend_35 { pt3dadd( -65.1772, -64.1328, 3.48206, 0.29 ) }
    dend_35 { pt3dadd( -65.8361, -64.5191, 3.52826, 0.29 ) }
    dend_35 { pt3dadd( -66.6607, -65.132, 3.4684, 1.11 ) }
    dend_35 { pt3dadd( -67.1722, -65.5971, 3.3529, 1.33 ) }
    dend_35 { pt3dadd( -68.3721, -66.9451, 3.01312, 0.74 ) }
    dend_35 { pt3dadd( -68.9589, -67.748, 2.84947, 0.74 ) }
    dend_35 { pt3dadd( -69.2687, -68.2678, 2.77177, 1.11 ) }
    dend_35 { pt3dadd( -69.6143, -68.9166, 2.72638, 0.88 ) }
    dend_35 { pt3dadd( -70.0045, -69.7144, 2.73136, 0.66 ) }
    dend_35 { pt3dadd( -70.435, -70.6589, 2.79654, 0.37 ) }
    dend_35 { pt3dadd( -70.6764, -71.2939, 2.89094, 0.37 ) }
    dend_35 { pt3dadd( -71.0101, -72.2831, 3.04367, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_35 { pt3dadd( -71.3282, -73.3838, 3.21283, 0.37 ) }
    dend_35 { pt3dadd( -71.5382, -74.2045, 3.33446, 0.29 ) }
    dend_35 { pt3dadd( -71.701, -74.9903, 3.47301, 0.59 ) }
    dend_35 { pt3dadd( -71.8443, -75.7877, 3.65605, 0.81 ) }
    dend_35 { pt3dadd( -71.8514, -75.8528, 3.67172, 0.81 ) }
    dend_35 { pt3dadd( -71.8862, -76.7389, 3.92109, 0.74 ) }
    dend_35 { pt3dadd( -71.8742, -77.3013, 4.08362, 1.11 ) }
    dend_35 { pt3dadd( -71.821, -78.5391, 4.4686, 0.59 ) }
    dend_35 { pt3dadd( -71.8021, -79.1033, 4.6552, 1.03 ) }
    dend_35 { pt3dadd( -71.7991, -80.1946, 5.05261, 0.52 ) }
    dend_35 { pt3dadd( -71.8215, -81.1023, 5.39463, 0.74 ) }
    dend_35 { pt3dadd( -71.8565, -81.741, 5.63384, 0.66 ) }
    dend_35 { pt3dadd( -71.944, -82.9003, 6.05722, 0.44 ) }
    dend_35 { pt3dadd( -72.0781, -83.9231, 6.42121, 0.44 ) }
    dend_35 { pt3dadd( -72.3165, -84.9817, 6.7968, 0.44 ) }
    dend_35 { pt3dadd( -72.4644, -85.4027, 6.94472, 0.81 ) }
    dend_35 { pt3dadd( -72.8025, -86.154, 7.18654, 1.18 ) }
    dend_35 { pt3dadd( -72.9609, -86.4338, 7.27705, 1.33 ) }
    dend_35 { pt3dadd( -73.6973, -87.5555, 7.66253, 0.44 ) }
    dend_35 { pt3dadd( -74.3087, -88.4306, 7.95733, 0.59 ) }
    dend_35 { pt3dadd( -74.7956, -89.0604, 8.25811, 0.81 ) }
    dend_35 { pt3dadd( -75.0505, -89.3466, 8.43376, 0.81 ) }
    dend_35 { pt3dadd( -75.713, -89.9513, 8.93888, 0.37 ) }
    dend_35 { pt3dadd( -76.4612, -90.5193, 9.49955, 0.74 ) }
    dend_35 { pt3dadd( -76.7704, -90.711, 9.7265, 0.96 ) }
    dend_35 { pt3dadd( -78.5035, -91.6701, 11.0386, 0.59 ) }
    dend_35 { pt3dadd( -79.2605, -92.0418, 11.6076, 0.81 ) }
    dend_35 { pt3dadd( -80.7754, -92.6958, 12.7339, 0.52 ) }
    dend_35 { pt3dadd( -81.6995, -93.0246, 13.3946, 0.52 ) }
    dend_35 { pt3dadd( -82.5154, -93.2658, 13.9237, 0.74 ) }
    dend_35 { pt3dadd( -88.8265, -100.971, 19.3543, 0.74 ) }
    dend_35 { pt3dadd( -95.4803, -109.091, 23.615, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -117.444, -82.0942, -131.031, 0.52 ) }
    dend_33 { pt3dadd( -117.03, -83.605, -131.758, 0.52 ) }
    dend_33 { pt3dadd( -116.527, -85.3546, -132.562, 0.88 ) }
    dend_33 { pt3dadd( -116.255, -86.1749, -132.905, 0.88 ) }
    dend_33 { pt3dadd( -115.739, -87.5403, -133.459, 0.37 ) }
    dend_33 { pt3dadd( -115.502, -88.1354, -133.683, 0.29 ) }
    dend_33 { pt3dadd( -115.293, -88.6863, -133.875, 0.88 ) }
    dend_33 { pt3dadd( -115.25, -88.7993, -133.909, 0.88 ) }
    dend_33 { pt3dadd( -114.938, -89.6976, -134.073, 0.88 ) }
    dend_33 { pt3dadd( -114.58, -90.8887, -134.232, 0.29 ) }
    dend_33 { pt3dadd( -114.375, -91.7148, -134.273, 0.29 ) }
    dend_33 { pt3dadd( -114.231, -92.4783, -134.294, 0.22 ) }
    dend_33 { pt3dadd( -114.122, -93.3535, -134.3, 0.22 ) }
    dend_33 { pt3dadd( -114.101, -93.7771, -134.295, 0.81 ) }
    dend_33 { pt3dadd( -114.126, -94.5451, -134.269, 1.25 ) }
    dend_33 { pt3dadd( -114.213, -95.8046, -134.182, 0.37 ) }
    dend_33 { pt3dadd( -114.314, -96.9821, -134.104, 0.22 ) }
    dend_33 { pt3dadd( -114.383, -97.7017, -134.056, 0.66 ) }
    dend_33 { pt3dadd( -114.462, -98.3797, -134.014, 0.81 ) }
    dend_33 { pt3dadd( -114.653, -99.7408, -133.935, 0.22 ) }
    dend_33 { pt3dadd( -114.77, -100.403, -133.9, 0.88 ) }
    dend_33 { pt3dadd( -114.85, -100.77, -133.883, 1.03 ) }
    dend_33 { pt3dadd( -114.959, -101.323, -133.861, 1.03 ) }
    dend_33 { pt3dadd( -115.05, -101.905, -133.834, 0.74 ) }
    dend_33 { pt3dadd( -115.056, -102.0, -133.829, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 57/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -117.444, -82.0942, -131.031, 0.22 ) }
    dend_32 { pt3dadd( -118.57, -82.2809, -132.76, 0.22 ) }
    dend_32 { pt3dadd( -119.032, -82.3822, -133.398, 0.22 ) }
    dend_32 { pt3dadd( -119.545, -82.5036, -134.019, 0.81 ) }
    dend_32 { pt3dadd( -119.83, -82.5753, -134.318, 1.11 ) }
    dend_32 { pt3dadd( -120.189, -82.6702, -134.644, 1.03 ) }
    dend_32 { pt3dadd( -121.218, -82.9398, -135.478, 0.22 ) }
    dend_32 { pt3dadd( -121.417, -82.9992, -135.593, 0.66 ) }
    dend_32 { pt3dadd( -121.865, -83.1479, -135.842, 0.96 ) }
    dend_32 { pt3dadd( -122.382, -83.2882, -136.095, 0.29 ) }
    dend_32 { pt3dadd( -122.971, -83.4034, -136.384, 0.29 ) }
    dend_32 { pt3dadd( -123.195, -83.4281, -136.487, 0.96 ) }
    dend_32 { pt3dadd( -123.642, -83.4445, -136.697, 1.18 ) }
    dend_32 { pt3dadd( -123.683, -83.4435, -136.722, 1.18 ) }
    dend_32 { pt3dadd( -124.212, -83.4034, -137.078, 0.88 ) }
    dend_32 { pt3dadd( -124.291, -83.3963, -137.133, 0.88 ) }
    dend_32 { pt3dadd( -124.623, -83.3797, -137.356, 0.66 ) }
    dend_32 { pt3dadd( -125.426, -83.4221, -137.914, 0.29 ) }
    dend_32 { pt3dadd( -125.579, -83.4377, -138.016, 0.29 ) }
    dend_32 { pt3dadd( -126.216, -83.5312, -138.439, 0.29 ) }
    dend_32 { pt3dadd( -126.54, -83.5808, -138.712, 0.59 ) }
    dend_32 { pt3dadd( -126.794, -83.6088, -138.954, 0.59 ) }
    dend_32 { pt3dadd( -127.536, -83.6695, -139.742, 0.29 ) }
    dend_32 { pt3dadd( -127.737, -83.6765, -139.963, 1.03 ) }
    dend_32 { pt3dadd( -128.019, -83.6669, -140.346, 1.33 ) }
    dend_32 { pt3dadd( -128.807, -83.5437, -141.739, 0.29 ) }
    dend_32 { pt3dadd( -128.944, -83.5034, -142.004, 0.29 ) }
    dend_32 { pt3dadd( -128.969, -83.4936, -142.056, 0.29 ) }
    dend_32 { pt3dadd( -129.177, -83.4257, -142.543, 0.59 ) }
    dend_32 { pt3dadd( -129.673, -83.3395, -143.73, 0.81 ) }
    dend_32 { pt3dadd( -130.011, -83.3681, -144.593, 0.52 ) }
    dend_32 { pt3dadd( -130.185, -83.441, -145.043, 1.11 ) }
    dend_32 { pt3dadd( -130.497, -83.6547, -145.908, 1.4 ) }
    dend_32 { pt3dadd( -130.949, -84.0111, -147.214, 0.29 ) }
    dend_32 { pt3dadd( -131.051, -84.1118, -147.53, 0.88 ) }
    dend_32 { pt3dadd( -131.482, -84.6474, -148.808, 0.52 ) }
    dend_32 { pt3dadd( -131.813, -85.1668, -149.824, 0.81 ) }
    dend_32 { pt3dadd( -131.927, -85.3932, -150.215, 0.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -36.9415, 399.775, -12.5705, 0.37 ) }
    dend_23 { pt3dadd( -36.4534, 399.742, -12.7934, 0.37 ) }
    dend_23 { pt3dadd( -35.5136, 399.618, -13.2177, 0.66 ) }
    dend_23 { pt3dadd( -35.4515, 399.606, -13.2437, 0.66 ) }
    dend_23 { pt3dadd( -34.9991, 399.517, -13.4318, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_23 { pt3dadd( -34.9263, 399.503, -13.4616, 0.29 ) }
    dend_23 { pt3dadd( -33.7097, 399.31, -14.0258, 0.29 ) }
    dend_23 { pt3dadd( -33.6489, 399.303, -14.0549, 0.29 ) }
    dend_23 { pt3dadd( -33.3603, 399.297, -14.188, 0.66 ) }
    dend_23 { pt3dadd( -33.0204, 399.3, -14.3583, 0.52 ) }
    dend_23 { pt3dadd( -32.9591, 399.304, -14.3929, 0.52 ) }
    dend_23 { pt3dadd( -31.8311, 399.485, -15.0333, 0.22 ) }
    dend_23 { pt3dadd( -31.2793, 399.697, -15.338, 0.22 ) }
    dend_23 { pt3dadd( -30.9813, 399.824, -15.5109, 0.29 ) }
    dend_23 { pt3dadd( -22.0055, 401.861, -18.4984, 0.29 ) }
    dend_23 { pt3dadd( -13.5209, 405.646, -21.0999, 0.29 ) }
    dend_23 { pt3dadd( -5.98668, 409.931, -25.3009, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -36.9415, 399.775, -12.5705, 0.29 ) }
    dend_22 { pt3dadd( -36.607, 401.577, -12.6379, 0.29 ) }
    dend_22 { pt3dadd( -36.5236, 402.183, -12.6834, 0.29 ) }
    dend_22 { pt3dadd( -36.5204, 402.264, -12.6876, 0.29 ) }
    dend_22 { pt3dadd( -36.5396, 403.198, -12.7253, 0.29 ) }
    dend_22 { pt3dadd( -36.5442, 403.267, -12.7278, 0.29 ) }
    dend_22 { pt3dadd( -36.7083, 404.529, -12.7257, 0.29 ) }
    dend_22 { pt3dadd( -36.7288, 404.595, -12.7255, 0.29 ) }
    dend_22 { pt3dadd( -36.9674, 405.385, -12.6573, 0.52 ) }
    dend_22 { pt3dadd( -37.0068, 405.543, -12.637, 0.52 ) }
    dend_22 { pt3dadd( -37.0616, 405.876, -12.5928, 0.52 ) }
    dend_22 { pt3dadd( -37.1425, 406.681, -12.4975, 0.22 ) }
    dend_22 { pt3dadd( -37.1661, 407.465, -12.4366, 0.22 ) }
    dend_22 { pt3dadd( -37.1617, 408.245, -12.3917, 0.44 ) }
    dend_22 { pt3dadd( -37.1213, 408.841, -12.3803, 0.44 ) }
    dend_22 { pt3dadd( -37.0448, 409.684, -12.3769, 0.22 ) }
    dend_22 { pt3dadd( -37.0343, 409.767, -12.3794, 0.22 ) }
    dend_22 { pt3dadd( -36.8168, 410.927, -12.5165, 0.22 ) }
    dend_22 { pt3dadd( -37.1876, 422.292, -13.9124, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 19.4368, 150.622, -69.9215, 0.66 ) }
    dend_19 { pt3dadd( 19.3864, 151.422, -69.9955, 0.66 ) }
    dend_19 { pt3dadd( 19.3718, 152.186, -70.0473, 0.29 ) }
    dend_19 { pt3dadd( 19.3727, 152.268, -70.0515, 0.29 ) }
    dend_19 { pt3dadd( 19.3974, 153.065, -70.0831, 0.29 ) }
    dend_19 { pt3dadd( 19.4147, 154.44, -70.1533, 0.29 ) }
    dend_19 { pt3dadd( 19.4023, 155.033, -70.1957, 0.52 ) }
    dend_19 { pt3dadd( 19.3934, 155.228, -70.2123, 0.52 ) }
    dend_19 { pt3dadd( 19.3787, 155.511, -70.2389, 0.52 ) }
    dend_19 { pt3dadd( 19.3422, 156.029, -70.2933, 0.37 ) }
    dend_19 { pt3dadd( 19.2619, 156.742, -70.3858, 0.37 ) }
    dend_19 { pt3dadd( 19.0012, 157.791, -70.6053, 0.88 ) }
    dend_19 { pt3dadd( 18.956, 157.932, -70.6381, 0.88 ) }
    dend_19 { pt3dadd( 18.7613, 158.498, -70.7697, 1.03 ) }
    dend_19 { pt3dadd( 18.578, 159.045, -70.8879, 1.18 ) }
    dend_19 { pt3dadd( 18.3951, 159.647, -71.0014, 0.66 ) }
    dend_19 { pt3dadd( 18.1985, 160.401, -71.118, 0.52 ) }
    dend_19 { pt3dadd( 18.1189, 160.77, -71.1633, 0.59 ) }
    dend_19 { pt3dadd( 18.0661, 161.177, -71.1978, 0.44 ) }
    dend_19 { pt3dadd( 18.0265, 162.293, -71.2451, 0.29 ) }
    dend_19 { pt3dadd( 18.044, 162.726, -71.2511, 0.37 ) }
    dend_19 { pt3dadd( 18.0533, 162.809, -71.2552, 0.37 ) }
    dend_19 { pt3dadd( 18.1118, 163.296, -71.303, 0.22 ) }
    dend_19 { pt3dadd( 18.1657, 164.255, -71.416, 0.59 ) }
    dend_19 { pt3dadd( 18.1673, 164.753, -71.4797, 0.88 ) }
    dend_19 { pt3dadd( 18.127, 165.589, -71.5897, 0.52 ) }
    dend_19 { pt3dadd( 18.0318, 166.638, -71.7293, 0.29 ) }
    dend_19 { pt3dadd( 17.9297, 167.408, -71.831, 0.29 ) }
    dend_19 { pt3dadd( 17.7368, 168.432, -71.9716, 0.59 ) }
    dend_19 { pt3dadd( 17.7145, 168.513, -71.9786, 0.59 ) }
    dend_19 { pt3dadd( 17.5337, 169.065, -71.9925, 0.29 ) }
    dend_19 { pt3dadd( 17.4912, 169.182, -71.9861, 0.29 ) }
    dend_19 { pt3dadd( 17.2387, 170.066, -71.8506, 0.52 ) }
    dend_19 { pt3dadd( 17.1606, 170.477, -71.8017, 0.66 ) }
    dend_19 { pt3dadd( 17.0191, 171.466, -71.7443, 0.52 ) }
    dend_19 { pt3dadd( 17.0081, 171.549, -71.7411, 0.52 ) }
    dend_19 { pt3dadd( 16.9335, 172.141, -71.7367, 0.29 ) }
    dend_19 { pt3dadd( 16.799, 173.563, -71.8482, 0.29 ) }
    dend_19 { pt3dadd( 16.7338, 174.59, -72.0249, 0.66 ) }
    dend_19 { pt3dadd( 16.704, 174.959, -72.0983, 0.88 ) }
    dend_19 { pt3dadd( 16.6967, 175.038, -72.1163, 0.88 ) }
    dend_19 { pt3dadd( 16.5789, 175.774, -72.2828, 0.52 ) }
    dend_19 { pt3dadd( 16.3473, 176.722, -72.5046, 0.52 ) }
    dend_19 { pt3dadd( 16.1155, 177.516, -72.6798, 0.29 ) }
    dend_19 { pt3dadd( 15.8299, 178.565, -72.8664, 0.29 ) }
    dend_19 { pt3dadd( 15.6205, 179.385, -72.9766, 1.03 ) }
    dend_19 { pt3dadd( 15.4111, 180.263, -73.0653, 0.74 ) }
    dend_19 { pt3dadd( 15.185, 181.266, -73.0833, 0.29 ) }
    dend_19 { pt3dadd( 14.891, 182.682, -73.0153, 0.44 ) }
    dend_19 { pt3dadd( 14.7627, 183.42, -72.9504, 0.37 ) }
    dend_19 { pt3dadd( 14.642, 184.294, -72.8563, 0.37 ) }
    dend_19 { pt3dadd( 14.5349, 185.236, -72.7004, 0.96 ) }
    dend_19 { pt3dadd( 14.4459, 186.509, -72.4107, 0.37 ) }
    dend_19 { pt3dadd( 14.4099, 187.359, -72.1719, 0.37 ) }
    dend_19 { pt3dadd( 14.3914, 188.105, -71.9285, 0.59 ) }
    dend_19 { pt3dadd( 14.3976, 188.512, -71.7947, 0.88 ) }
    dend_19 { pt3dadd( 14.4093, 188.757, -71.7189, 0.88 ) }
    dend_19 { pt3dadd( 14.4729, 189.532, -71.4995, 0.59 ) }
    dend_19 { pt3dadd( 14.4806, 189.599, -71.4846, 0.52 ) }
    dend_19 { pt3dadd( 14.7091, 191.278, -71.1211, 0.15 ) }
    dend_19 { pt3dadd( 14.8267, 192.046, -70.9815, 0.59 ) }
    dend_19 { pt3dadd( 14.8397, 192.126, -70.9678, 0.59 ) }
    dend_19 { pt3dadd( 14.9772, 192.723, -70.8594, 0.59 ) }
    dend_19 { pt3dadd( 14.9999, 192.8, -70.8453, 0.59 ) }
    dend_19 { pt3dadd( 15.2122, 193.425, -70.7341, 0.88 ) }
    dend_19 { pt3dadd( 15.5332, 194.309, -70.6028, 1.18 ) }
    dend_19 { pt3dadd( 15.6706, 194.708, -70.5479, 1.18 ) }
    dend_19 { pt3dadd( 16.1195, 196.235, -70.3564, 0.15 ) }
    dend_19 { pt3dadd( 16.3832, 197.376, -70.2401, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_19 { pt3dadd( 16.4812, 198.008, -70.1979, 0.52 ) }
    dend_19 { pt3dadd( 16.5445, 198.758, -70.1719, 0.66 ) }
    dend_19 { pt3dadd( 16.547, 199.195, -70.1745, 0.74 ) }
    dend_19 { pt3dadd( 16.4862, 200.079, -70.2148, 0.29 ) }
    dend_19 { pt3dadd( 16.3862, 200.915, -70.2765, 0.37 ) }
    dend_19 { pt3dadd( 16.2679, 201.999, -70.2837, 0.29 ) }
    dend_19 { pt3dadd( 16.2609, 202.091, -70.278, 0.29 ) }
    dend_19 { pt3dadd( 16.2866, 203.324, -70.0859, 0.52 ) }
    dend_19 { pt3dadd( 16.2963, 203.403, -70.0668, 0.52 ) }
    dend_19 { pt3dadd( 16.5405, 204.455, -69.724, 0.81 ) }
    dend_19 { pt3dadd( 16.8776, 205.531, -69.2943, 0.37 ) }
    dend_19 { pt3dadd( 16.9028, 205.602, -69.2615, 0.37 ) }
    dend_19 { pt3dadd( 17.2412, 206.695, -68.806, 0.29 ) }
    dend_19 { pt3dadd( 17.3754, 207.205, -68.6171, 0.37 ) }
    dend_19 { pt3dadd( 17.3893, 207.271, -68.5979, 0.37 ) }
    dend_19 { pt3dadd( 17.5215, 207.998, -68.4484, 0.37 ) }
    dend_19 { pt3dadd( 17.6898, 209.165, -68.181, 0.29 ) }
    dend_19 { pt3dadd( 17.8626, 210.454, -67.7995, 0.37 ) }
    dend_19 { pt3dadd( 17.9208, 210.932, -67.6437, 0.88 ) }
    dend_19 { pt3dadd( 18.0062, 211.462, -67.4539, 0.96 ) }
    dend_19 { pt3dadd( 18.2833, 212.701, -66.8994, 0.52 ) }
    dend_19 { pt3dadd( 18.7298, 214.196, -66.105, 0.66 ) }
    dend_19 { pt3dadd( 18.9293, 214.744, -65.7605, 0.66 ) }
    dend_19 { pt3dadd( 19.2254, 215.424, -65.2642, 0.29 ) }
    dend_19 { pt3dadd( 19.5794, 216.181, -64.6714, 0.44 ) }
    dend_19 { pt3dadd( 19.9945, 217.049, -63.9612, 1.11 ) }
    dend_19 { pt3dadd( 20.3212, 217.743, -63.3895, 1.11 ) }
    dend_19 { pt3dadd( 20.8338, 218.831, -62.5465, 1.11 ) }
    dend_19 { pt3dadd( 21.0376, 219.299, -62.1571, 1.55 ) }
    dend_19 { pt3dadd( 21.3659, 220.055, -61.4573, 1.55 ) }
    dend_19 { pt3dadd( 21.4068, 220.146, -61.359, 1.55 ) }
    dend_19 { pt3dadd( 21.6329, 220.665, -60.7034, 1.55 ) }
    dend_19 { pt3dadd( 21.6508, 220.704, -60.6473, 1.55 ) }
    dend_19 { pt3dadd( 21.9335, 221.267, -59.7315, 2.06 ) }
    dend_19 { pt3dadd( 21.9529, 221.307, -59.6612, 2.06 ) }
    dend_19 { pt3dadd( 22.4756, 222.339, -57.6914, 0.52 ) }
    dend_19 { pt3dadd( 22.7947, 222.927, -56.5061, 0.74 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 19.4368, 150.622, -69.9215, 0.74 ) }
    dend_18 { pt3dadd( 19.7342, 149.323, -69.429, 0.74 ) }
    dend_18 { pt3dadd( 19.7477, 149.251, -69.4053, 0.74 ) }
    dend_18 { pt3dadd( 19.8968, 148.349, -69.1345, 0.37 ) }
    dend_18 { pt3dadd( 20.0776, 147.038, -68.7758, 0.22 ) }
    dend_18 { pt3dadd( 20.1409, 146.405, -68.6241, 0.37 ) }
    dend_18 { pt3dadd( 20.2072, 145.622, -68.4571, 0.15 ) }
    dend_18 { pt3dadd( 20.2713, 144.41, -68.2593, 0.15 ) }
    dend_18 { pt3dadd( 20.2964, 143.871, -68.1731, 0.44 ) }
    dend_18 { pt3dadd( 20.3116, 143.282, -68.0853, 0.44 ) }
    dend_18 { pt3dadd( 20.3035, 142.137, -67.9456, 0.22 ) }
    dend_18 { pt3dadd( 20.2881, 140.807, -67.8353, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 83.2449, 90.1135, -52.4423, 0.22 ) }
    dend_13 { pt3dadd( 84.1508, 90.594, -54.1249, 0.22 ) }
    dend_13 { pt3dadd( 84.4709, 90.7639, -54.7196, 0.74 ) }
    dend_13 { pt3dadd( 84.6409, 90.8541, -55.0353, 0.74 ) }
    dend_13 { pt3dadd( 85.9764, 91.5626, -57.5161, 0.29 ) }
    dend_13 { pt3dadd( 86.3044, 91.7366, -58.1253, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 83.2449, 90.1135, -52.4423, 0.22 ) }
    dend_12 { pt3dadd( 84.4666, 89.5628, -52.8283, 0.22 ) }
    dend_12 { pt3dadd( 85.3483, 89.2262, -53.1759, 0.66 ) }
    dend_12 { pt3dadd( 85.932, 89.0243, -53.4175, 0.66 ) }
    dend_12 { pt3dadd( 86.6177, 88.8273, -53.6984, 0.52 ) }
    dend_12 { pt3dadd( 87.9772, 88.5905, -54.2896, 0.22 ) }
    dend_12 { pt3dadd( 88.6302, 88.5624, -54.5744, 0.22 ) }
    dend_12 { pt3dadd( 89.5648, 88.7404, -54.9613, 0.59 ) }
    dend_12 { pt3dadd( 90.0296, 88.8936, -55.1336, 0.74 ) }
    dend_12 { pt3dadd( 90.6867, 89.1525, -55.3306, 0.74 ) }
    dend_12 { pt3dadd( 91.9991, 89.7454, -55.6222, 0.29 ) }
    dend_12 { pt3dadd( 93.0995, 90.3114, -55.7733, 0.29 ) }
    dend_12 { pt3dadd( 94.4464, 91.0377, -55.9159, 0.59 ) }
    dend_12 { pt3dadd( 95.065, 91.3832, -55.9496, 0.52 ) }
    dend_12 { pt3dadd( 96.2822, 92.0618, -55.9921, 0.22 ) }
    dend_12 { pt3dadd( 96.9555, 92.4023, -55.9874, 0.29 ) }
    dend_12 { pt3dadd( 97.8877, 92.7713, -55.9028, 0.29 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 53.04, 154.586, 38.9371, 0.29 ) }
    dend_6 { pt3dadd( 54.6564, 161.745, 40.8464, 0.29 ) }
    dend_6 { pt3dadd( 56.4035, 169.084, 41.2244, 0.29 ) }
    dend_6 { pt3dadd( 57.8573, 176.481, 41.7282, 0.29 ) }
    dend_6 { pt3dadd( 58.1515, 184.013, 42.3318, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 77/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 53.04, 154.586, 38.9371, 0.44 ) }
    dend_5 { pt3dadd( 55.403, 163.211, 42.1193, 0.29 ) }
    dend_5 { pt3dadd( 58.105, 171.802, 45.1112, 0.29 ) }
    dend_5 { pt3dadd( 62.2005, 180.174, 46.8484, 0.29 ) }
    dend_5 { pt3dadd( 65.2226, 189.114, 46.7744, 0.29 ) }
    dend_5 { pt3dadd( 69.4469, 197.395, 45.1109, 0.29 ) }
    dend_5 { pt3dadd( 73.137, 205.973, 43.7524, 0.29 ) }
    dend_5 { pt3dadd( 75.6526, 214.977, 42.5682, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_87 (entry count 85/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -124.254, -198.971, -2.27954, 0.29 ) }
    dend_91 { pt3dadd( -124.762, -208.883, -1.52204, 0.29 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 87/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -124.254, -198.971, -2.27954, 0.44 ) }
    dend_88 { pt3dadd( -132.111, -207.756, -4.26161, 0.29 ) }
    dend_88 { pt3dadd( -139.074, -216.259, -8.9295, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 90/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -143.736, -191.138, 21.8481, 0.66 ) }
    dend_72 { pt3dadd( -143.868, -190.022, 22.9544, 0.66 ) }
    dend_72 { pt3dadd( -143.882, -189.323, 23.5429, 0.29 ) }
    dend_72 { pt3dadd( -143.874, -188.516, 24.1191, 0.29 ) }
    dend_72 { pt3dadd( -143.876, -188.448, 24.1587, 0.29 ) }
    dend_72 { pt3dadd( -143.928, -187.143, 24.8294, 0.52 ) }
    dend_72 { pt3dadd( -143.943, -186.885, 24.9491, 0.74 ) }
    dend_72 { pt3dadd( -143.989, -185.852, 25.2935, 0.37 ) }
    dend_72 { pt3dadd( -144.031, -184.957, 25.5533, 0.37 ) }
    dend_72 { pt3dadd( -144.104, -184.068, 25.7762, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_72 { pt3dadd( -144.141, -183.52, 25.8862, 0.59 ) }
    dend_72 { pt3dadd( -144.168, -182.907, 25.9672, 0.59 ) }
    dend_72 { pt3dadd( -144.14, -182.198, 26.0535, 0.59 ) }
    dend_72 { pt3dadd( -144.0, -181.259, 26.1578, 0.52 ) }
    dend_72 { pt3dadd( -143.814, -180.568, 26.2297, 0.96 ) }
    dend_72 { pt3dadd( -143.514, -179.75, 26.3171, 0.37 ) }
    dend_72 { pt3dadd( -143.292, -179.243, 26.3617, 0.29 ) }
    dend_72 { pt3dadd( -142.815, -178.29, 26.4301, 0.29 ) }
    dend_72 { pt3dadd( -142.415, -177.517, 26.4826, 0.29 ) }
    dend_72 { pt3dadd( -142.157, -177.012, 26.5176, 0.52 ) }
    dend_72 { pt3dadd( -142.129, -176.942, 26.5229, 0.52 ) }
    dend_72 { pt3dadd( -141.998, -176.52, 26.5589, 0.52 ) }
    dend_72 { pt3dadd( -141.817, -175.689, 26.6455, 0.37 ) }
    dend_72 { pt3dadd( -141.655, -174.734, 26.7532, 0.37 ) }
    dend_72 { pt3dadd( -141.646, -174.657, 26.7628, 0.37 ) }
    dend_72 { pt3dadd( -141.503, -173.122, 26.9689, 0.37 ) }
    dend_72 { pt3dadd( -141.423, -171.745, 27.1701, 0.37 ) }
    dend_72 { pt3dadd( -141.376, -170.032, 27.4366, 0.37 ) }
    dend_72 { pt3dadd( -141.374, -169.891, 27.4596, 0.37 ) }
    dend_72 { pt3dadd( -141.32, -168.561, 27.6559, 0.37 ) }
    dend_72 { pt3dadd( -141.316, -168.494, 27.6652, 0.37 ) }
    dend_72 { pt3dadd( -141.231, -167.642, 27.7753, 0.88 ) }
    dend_72 { pt3dadd( -141.208, -167.47, 27.7939, 0.88 ) }
    dend_72 { pt3dadd( -140.988, -166.407, 27.8779, 0.29 ) }
    dend_72 { pt3dadd( -140.638, -165.075, 27.9644, 0.29 ) }
    dend_72 { pt3dadd( -140.363, -164.228, 28.0056, 0.44 ) }
    dend_72 { pt3dadd( -140.148, -163.6, 28.0362, 0.44 ) }
    dend_72 { pt3dadd( -139.893, -162.857, 28.0523, 0.29 ) }
    dend_72 { pt3dadd( -139.862, -162.761, 28.0534, 0.29 ) }
    dend_72 { pt3dadd( -139.475, -161.695, 28.0381, 0.66 ) }
    dend_72 { pt3dadd( -139.362, -161.436, 28.0428, 0.66 ) }
    dend_72 { pt3dadd( -139.147, -160.989, 28.0588, 0.59 ) }
    dend_72 { pt3dadd( -138.601, -159.867, 28.1333, 0.37 ) }
    dend_72 { pt3dadd( -138.566, -159.798, 28.1432, 0.37 ) }
    dend_72 { pt3dadd( -137.771, -158.243, 28.4762, 0.37 ) }
    dend_72 { pt3dadd( -137.327, -157.353, 28.7497, 0.37 ) }
    dend_72 { pt3dadd( -137.015, -156.756, 28.9635, 0.37 ) }
    dend_72 { pt3dadd( -136.887, -156.53, 29.0658, 0.88 ) }
    dend_72 { pt3dadd( -136.475, -155.854, 29.4973, 0.74 ) }
    dend_72 { pt3dadd( -136.445, -155.795, 29.5401, 0.74 ) }
    dend_72 { pt3dadd( -136.397, -155.363, 30.0062, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 41/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -143.736, -191.138, 21.8481, 0.52 ) }
    dend_69 { pt3dadd( -144.309, -191.622, 21.8025, 0.52 ) }
    dend_69 { pt3dadd( -144.861, -192.035, 21.7536, 0.29 ) }
    dend_69 { pt3dadd( -145.399, -192.412, 21.7038, 0.29 ) }
    dend_69 { pt3dadd( -146.242, -192.969, 21.6269, 0.44 ) }
    dend_69 { pt3dadd( -146.952, -193.434, 21.564, 0.37 ) }
    dend_69 { pt3dadd( -147.264, -193.638, 21.5369, 0.66 ) }
    dend_69 { pt3dadd( -147.548, -193.799, 21.5112, 0.88 ) }
    dend_69 { pt3dadd( -147.91, -193.978, 21.449, 0.88 ) }
    dend_69 { pt3dadd( -148.442, -194.22, 21.3173, 0.44 ) }
    dend_69 { pt3dadd( -149.086, -194.519, 21.1137, 0.44 ) }
    dend_69 { pt3dadd( -149.132, -194.54, 21.0972, 0.44 ) }
    dend_69 { pt3dadd( -149.683, -194.788, 20.88, 0.44 ) }
    dend_69 { pt3dadd( -150.584, -195.174, 20.5108, 0.29 ) }
    dend_69 { pt3dadd( -151.148, -195.396, 20.2771, 0.29 ) }
    dend_69 { pt3dadd( -151.867, -195.628, 20.0297, 0.29 ) }
    dend_69 { pt3dadd( -151.924, -195.643, 20.0149, 0.74 ) }
    dend_69 { pt3dadd( -151.973, -195.654, 20.006, 0.74 ) }
    dend_69 { pt3dadd( -152.489, -195.79, 19.92, 0.74 ) }
    dend_69 { pt3dadd( -152.943, -195.942, 19.8611, 0.74 ) }
    dend_69 { pt3dadd( -153.87, -196.315, 19.706, 0.29 ) }
    dend_69 { pt3dadd( -154.357, -196.561, 19.5828, 0.29 ) }
    dend_69 { pt3dadd( -155.015, -196.946, 19.3697, 0.29 ) }
    dend_69 { pt3dadd( -155.844, -197.502, 19.0424, 0.29 ) }
    dend_69 { pt3dadd( -156.232, -197.785, 18.8927, 0.59 ) }
    dend_69 { pt3dadd( -156.418, -197.92, 18.8223, 0.59 ) }
    dend_69 { pt3dadd( -156.978, -198.297, 18.617, 0.37 ) }
    dend_69 { pt3dadd( -157.081, -198.339, 18.6094, 0.37 ) }
    dend_69 { pt3dadd( -157.654, -198.422, 18.7197, 0.37 ) }
    dend_69 { pt3dadd( -158.603, -198.451, 18.9822, 0.29 ) }
    dend_69 { pt3dadd( -159.2, -198.451, 19.2398, 0.29 ) }
    dend_69 { pt3dadd( -159.664, -198.446, 19.4916, 0.59 ) }
    dend_69 { pt3dadd( -160.587, -198.465, 20.1001, 0.59 ) }
    dend_69 { pt3dadd( -161.095, -198.498, 20.4775, 0.59 ) }
    dend_69 { pt3dadd( -161.481, -198.559, 20.8269, 0.59 ) }
    dend_69 { pt3dadd( -162.526, -198.878, 21.8809, 0.44 ) }
    dend_69 { pt3dadd( -162.554, -198.891, 21.9111, 0.44 ) }
    dend_69 { pt3dadd( -162.97, -199.127, 22.3586, 0.44 ) }
    dend_69 { pt3dadd( -162.998, -199.145, 22.3866, 0.44 ) }
    dend_69 { pt3dadd( -163.597, -199.506, 22.9181, 0.59 ) }
    dend_69 { pt3dadd( -163.999, -199.726, 23.2003, 0.59 ) }
    dend_69 { pt3dadd( -164.587, -200.006, 23.4602, 0.29 ) }
    dend_69 { pt3dadd( -164.631, -200.024, 23.4779, 0.29 ) }
    dend_69 { pt3dadd( -165.664, -200.389, 23.7932, 0.44 ) }
    dend_69 { pt3dadd( -166.118, -200.549, 23.882, 0.96 ) }
    dend_69 { pt3dadd( -166.572, -200.705, 23.9232, 1.33 ) }
    dend_69 { pt3dadd( -167.162, -200.915, 23.9544, 0.88 ) }
    dend_69 { pt3dadd( -168.125, -201.298, 23.9592, 0.44 ) }
    dend_69 { pt3dadd( -168.876, -201.623, 23.9179, 0.44 ) }
    dend_69 { pt3dadd( -169.683, -201.993, 23.8118, 0.52 ) }
    dend_69 { pt3dadd( -170.265, -202.237, 23.7232, 0.52 ) }
    dend_69 { pt3dadd( -170.314, -202.256, 23.7147, 0.52 ) }
    dend_69 { pt3dadd( -171.067, -202.494, 23.5598, 0.37 ) }
    dend_69 { pt3dadd( -171.619, -202.635, 23.4264, 0.37 ) }
    dend_69 { pt3dadd( -172.206, -202.733, 23.3158, 0.37 ) }
    dend_69 { pt3dadd( -173.031, -202.791, 23.2138, 0.52 ) }
    dend_69 { pt3dadd( -173.297, -202.795, 23.1847, 0.96 ) }
    dend_69 { pt3dadd( -173.591, -202.789, 23.1448, 0.96 ) }
    dend_69 { pt3dadd( -173.978, -202.767, 23.0806, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_69 { pt3dadd( -174.493, -202.752, 22.9841, 0.81 ) }
    dend_69 { pt3dadd( -175.366, -202.794, 22.8069, 0.37 ) }
    dend_69 { pt3dadd( -175.408, -202.801, 22.7979, 0.37 ) }
    dend_69 { pt3dadd( -176.129, -202.949, 22.6385, 0.37 ) }
    dend_69 { pt3dadd( -176.546, -203.056, 22.5441, 0.59 ) }
    dend_69 { pt3dadd( -176.852, -203.14, 22.4729, 0.66 ) }
    dend_69 { pt3dadd( -177.328, -203.27, 22.359, 0.52 ) }
    dend_69 { pt3dadd( -177.922, -203.412, 22.1784, 0.29 ) }
    dend_69 { pt3dadd( -177.978, -203.422, 22.1611, 0.29 ) }
    dend_69 { pt3dadd( -178.536, -203.49, 21.9967, 0.29 ) }
    dend_69 { pt3dadd( -179.095, -203.557, 21.8586, 0.44 ) }
    dend_69 { pt3dadd( -179.472, -203.61, 21.7782, 0.44 ) }
    dend_69 { pt3dadd( -180.238, -203.733, 21.6388, 0.44 ) }
    dend_69 { pt3dadd( -181.009, -203.886, 21.5227, 0.37 ) }
    dend_69 { pt3dadd( -181.367, -203.962, 21.498, 0.37 ) }
    dend_69 { pt3dadd( -182.416, -204.167, 21.5673, 0.37 ) }
    dend_69 { pt3dadd( -182.903, -204.252, 21.6646, 0.37 ) }
    dend_69 { pt3dadd( -183.404, -204.322, 21.8269, 0.37 ) }
    dend_69 { pt3dadd( -183.849, -204.354, 22.0254, 0.37 ) }
    dend_69 { pt3dadd( -184.582, -204.343, 22.4113, 0.37 ) }
    dend_69 { pt3dadd( -185.388, -204.265, 22.8622, 0.37 ) }
    dend_69 { pt3dadd( -185.648, -204.228, 23.0197, 0.81 ) }
    dend_69 { pt3dadd( -185.842, -204.219, 23.1349, 1.11 ) }
    dend_69 { pt3dadd( -186.238, -204.252, 23.3603, 1.11 ) }
    dend_69 { pt3dadd( -186.277, -204.26, 23.378, 1.11 ) }
    dend_69 { pt3dadd( -186.891, -204.457, 23.6009, 0.59 ) }
    dend_69 { pt3dadd( -187.812, -204.81, 23.9187, 0.44 ) }
    dend_69 { pt3dadd( -188.422, -205.036, 24.1511, 0.66 ) }
    dend_69 { pt3dadd( -188.462, -205.05, 24.1663, 0.66 ) }
    dend_69 { pt3dadd( -188.888, -205.192, 24.3047, 0.66 ) }
    dend_69 { pt3dadd( -189.58, -205.385, 24.4809, 0.44 ) }
    dend_69 { pt3dadd( -189.662, -205.406, 24.5024, 0.44 ) }
    dend_69 { pt3dadd( -190.332, -205.584, 24.6653, 0.37 ) }
    dend_69 { pt3dadd( -191.033, -205.79, 24.8451, 0.37 ) }
    dend_69 { pt3dadd( -191.682, -206.005, 25.0079, 0.88 ) }
    dend_69 { pt3dadd( -192.127, -206.169, 25.1135, 1.18 ) }
    dend_69 { pt3dadd( -193.441, -206.652, 25.4076, 0.37 ) }
    dend_69 { pt3dadd( -194.034, -206.856, 25.5456, 0.29 ) }
    dend_69 { pt3dadd( -194.412, -206.977, 25.637, 0.81 ) }
    dend_69 { pt3dadd( -194.468, -206.991, 25.6527, 0.81 ) }
    dend_69 { pt3dadd( -194.71, -207.052, 25.7347, 0.81 ) }
    dend_69 { pt3dadd( -195.713, -207.288, 26.0864, 0.37 ) }
    dend_69 { pt3dadd( -196.092, -207.365, 26.2144, 0.74 ) }
    dend_69 { pt3dadd( -196.5, -207.454, 26.3633, 0.74 ) }
    dend_69 { pt3dadd( -197.243, -207.616, 26.6293, 0.81 ) }
    dend_69 { pt3dadd( -198.248, -207.853, 26.9869, 0.29 ) }
    dend_69 { pt3dadd( -198.59, -207.941, 27.1094, 0.29 ) }
    dend_69 { pt3dadd( -198.63, -207.954, 27.1225, 0.29 ) }
    dend_69 { pt3dadd( -199.082, -208.108, 27.2564, 0.74 ) }
    dend_69 { pt3dadd( -199.434, -208.224, 27.357, 0.81 ) }
    dend_69 { pt3dadd( -200.319, -208.463, 27.5812, 0.37 ) }
    dend_69 { pt3dadd( -200.369, -208.473, 27.5932, 0.37 ) }
    dend_69 { pt3dadd( -200.908, -208.577, 27.7356, 0.29 ) }
    dend_69 { pt3dadd( -201.335, -208.655, 27.8555, 0.29 ) }
    dend_69 { pt3dadd( -201.987, -208.76, 28.0696, 0.52 ) }
    dend_69 { pt3dadd( -202.543, -208.852, 28.2743, 0.88 ) }
    dend_69 { pt3dadd( -202.747, -208.872, 28.3519, 1.03 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 57/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 2.42904, -116.531, -28.0145, 0.96 ) }
    dend_62 { pt3dadd( 2.41633, -118.407, -27.4749, 0.96 ) }
    dend_62 { pt3dadd( 2.44445, -119.567, -27.1404, 0.96 ) }
    dend_62 { pt3dadd( 2.50162, -120.571, -26.8626, 1.03 ) }
    dend_62 { pt3dadd( 2.56174, -121.169, -26.7103, 1.25 ) }
    dend_62 { pt3dadd( 2.65485, -121.925, -26.527, 1.11 ) }
    dend_62 { pt3dadd( 2.82484, -123.017, -26.2456, 0.74 ) }
    dend_62 { pt3dadd( 3.0246, -123.893, -26.07, 0.96 ) }
    dend_62 { pt3dadd( 3.21432, -124.522, -25.9324, 0.74 ) }
    dend_62 { pt3dadd( 3.55964, -125.483, -25.734, 0.59 ) }
    dend_62 { pt3dadd( 3.57971, -125.533, -25.7268, 0.59 ) }
    dend_62 { pt3dadd( 4.04695, -126.678, -25.6369, 0.59 ) }
    dend_62 { pt3dadd( 4.4315, -127.692, -25.682, 0.59 ) }
    dend_62 { pt3dadd( 4.44627, -127.737, -25.6895, 0.59 ) }
    dend_62 { pt3dadd( 4.68036, -128.672, -25.8581, 0.88 ) }
    dend_62 { pt3dadd( 4.85091, -129.595, -26.0382, 0.88 ) }
    dend_62 { pt3dadd( 4.93231, -130.154, -26.154, 0.88 ) }
    dend_62 { pt3dadd( 5.02375, -131.061, -26.3271, 0.66 ) }
    dend_62 { pt3dadd( 5.10097, -132.006, -26.4053, 0.52 ) }
    dend_62 { pt3dadd( 5.18366, -132.938, -26.3853, 1.11 ) }
    dend_62 { pt3dadd( 5.22315, -133.378, -26.3272, 1.11 ) }
    dend_62 { pt3dadd( 5.28966, -134.067, -26.1924, 0.88 ) }
    dend_62 { pt3dadd( 5.40574, -134.984, -25.9978, 0.81 ) }
    dend_62 { pt3dadd( 5.53162, -135.812, -25.8335, 0.88 ) }
    dend_62 { pt3dadd( 5.65222, -136.424, -25.7739, 1.03 ) }
    dend_62 { pt3dadd( 5.87114, -137.372, -25.7806, 0.74 ) }
    dend_62 { pt3dadd( 6.05236, -138.076, -25.8271, 0.59 ) }
    dend_62 { pt3dadd( 6.29476, -138.888, -25.9264, 0.52 ) }
    dend_62 { pt3dadd( 6.50561, -139.513, -26.0578, 0.74 ) }
    dend_62 { pt3dadd( 6.9124, -140.607, -26.3524, 0.66 ) }
    dend_62 { pt3dadd( 7.20895, -141.37, -26.5756, 0.74 ) }
    dend_62 { pt3dadd( 7.47052, -142.032, -26.7604, 0.81 ) }
    dend_62 { pt3dadd( 7.70315, -142.655, -26.8937, 1.11 ) }
    dend_62 { pt3dadd( 7.94209, -143.335, -26.9927, 0.88 ) }
    dend_62 { pt3dadd( 7.95869, -143.386, -27.0019, 0.88 ) }
    dend_62 { pt3dadd( 8.19563, -144.16, -27.2252, 0.59 ) }
    dend_62 { pt3dadd( 8.42525, -144.942, -27.5392, 0.59 ) }
    dend_62 { pt3dadd( 8.6512, -145.736, -27.909, 0.81 ) }
    dend_62 { pt3dadd( 8.9286, -146.706, -28.384, 1.03 ) }
    dend_62 { pt3dadd( 9.48374, -148.455, -29.2988, 1.03 ) }
    dend_62 { pt3dadd( 9.92963, -149.728, -29.9841, 0.81 ) }
    dend_62 { pt3dadd( 10.3397, -150.769, -30.5731, 0.59 ) }
    dend_62 { pt3dadd( 10.3586, -150.815, -30.5993, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_62 { pt3dadd( 10.6693, -151.578, -31.0063, 0.74 ) }
    dend_62 { pt3dadd( 11.0267, -152.454, -31.3767, 0.66 ) }
    dend_62 { pt3dadd( 11.3949, -153.338, -31.6132, 0.66 ) }
    dend_62 { pt3dadd( 11.7594, -154.229, -31.8023, 0.66 ) }
    dend_62 { pt3dadd( 12.0477, -155.009, -31.9538, 0.96 ) }
    dend_62 { pt3dadd( 12.2283, -155.656, -32.0771, 1.18 ) }
    dend_62 { pt3dadd( 12.3543, -156.467, -32.2477, 1.03 ) }
    dend_62 { pt3dadd( 12.3553, -157.181, -32.4196, 0.88 ) }
    dend_62 { pt3dadd( 12.249, -158.013, -32.6647, 0.66 ) }
    dend_62 { pt3dadd( 12.1339, -158.53, -32.829, 0.74 ) }
    dend_62 { pt3dadd( 11.8719, -159.528, -33.1624, 0.74 ) }
    dend_62 { pt3dadd( 11.6563, -160.299, -33.4078, 0.81 ) }
    dend_62 { pt3dadd( 11.3624, -161.357, -33.7099, 0.81 ) }
    dend_62 { pt3dadd( 11.1504, -162.295, -33.9329, 1.03 ) }
    dend_62 { pt3dadd( 11.0574, -162.958, -34.0511, 1.11 ) }
    dend_62 { pt3dadd( 11.0346, -163.678, -34.1536, 0.81 ) }
    dend_62 { pt3dadd( 11.1138, -164.808, -34.266, 0.66 ) }
    dend_62 { pt3dadd( 11.2585, -165.699, -34.3007, 0.81 ) }
    dend_62 { pt3dadd( 11.4309, -166.329, -34.3027, 0.81 ) }
    dend_62 { pt3dadd( 11.6697, -166.965, -34.3026, 0.81 ) }
    dend_62 { pt3dadd( 11.8675, -167.383, -34.3043, 1.03 ) }
    dend_62 { pt3dadd( 11.8954, -167.431, -34.3048, 1.03 ) }
    dend_62 { pt3dadd( 12.3204, -168.026, -34.3156, 0.74 ) }
    dend_62 { pt3dadd( 12.8403, -168.667, -34.3801, 0.44 ) }
    dend_62 { pt3dadd( 13.0198, -168.879, -34.4173, 0.74 ) }
    dend_62 { pt3dadd( 13.0558, -168.921, -34.4295, 0.74 ) }
    dend_62 { pt3dadd( 13.3351, -169.266, -34.5472, 0.74 ) }
    dend_62 { pt3dadd( 13.3712, -169.314, -34.5637, 0.74 ) }
    dend_62 { pt3dadd( 14.0421, -170.303, -34.8495, 0.59 ) }
    dend_62 { pt3dadd( 14.2301, -170.611, -34.9244, 0.88 ) }
    dend_62 { pt3dadd( 14.5985, -171.299, -35.0647, 0.88 ) }
    dend_62 { pt3dadd( 15.0192, -172.208, -35.2103, 0.66 ) }
    dend_62 { pt3dadd( 15.27, -172.857, -35.2866, 0.74 ) }
    dend_62 { pt3dadd( 15.5453, -173.719, -35.3873, 0.88 ) }
    dend_62 { pt3dadd( 15.6876, -174.329, -35.4859, 0.44 ) }
    dend_62 { pt3dadd( 15.7836, -174.881, -35.6331, 0.44 ) }
    dend_62 { pt3dadd( 15.8544, -175.515, -35.8525, 0.52 ) }
    dend_62 { pt3dadd( 15.8949, -176.028, -36.0942, 0.81 ) }
    dend_62 { pt3dadd( 15.9662, -176.927, -36.5872, 1.03 ) }
    dend_62 { pt3dadd( 16.0812, -177.931, -37.1851, 0.88 ) }
    dend_62 { pt3dadd( 16.2457, -178.874, -37.745, 0.59 ) }
    dend_62 { pt3dadd( 16.3691, -179.386, -38.0428, 0.74 ) }
    dend_62 { pt3dadd( 16.6706, -180.302, -38.5092, 0.52 ) }
    dend_62 { pt3dadd( 16.8839, -180.803, -38.7036, 0.52 ) }
    dend_62 { pt3dadd( 17.2363, -181.466, -38.836, 0.81 ) }
    dend_62 { pt3dadd( 17.5478, -181.952, -38.8582, 1.03 ) }
    dend_62 { pt3dadd( 17.7762, -182.261, -38.8408, 1.03 ) }
    dend_62 { pt3dadd( 18.4442, -183.098, -38.7521, 0.52 ) }
    dend_62 { pt3dadd( 18.7018, -183.425, -38.7138, 0.66 ) }
    dend_62 { pt3dadd( 19.1123, -183.978, -38.6751, 0.66 ) }
    dend_62 { pt3dadd( 19.1479, -184.031, -38.6739, 0.66 ) }
    dend_62 { pt3dadd( 19.4707, -184.542, -38.6836, 0.81 ) }
    dend_62 { pt3dadd( 19.8689, -185.217, -38.7258, 0.59 ) }
    dend_62 { pt3dadd( 20.341, -186.064, -38.8202, 0.37 ) }
    dend_62 { pt3dadd( 20.5922, -186.508, -38.8711, 0.88 ) }
    dend_62 { pt3dadd( 20.9186, -187.031, -38.9477, 1.18 ) }
    dend_62 { pt3dadd( 20.9503, -187.074, -38.9549, 1.18 ) }
    dend_62 { pt3dadd( 21.2718, -187.465, -39.0842, 1.11 ) }
    dend_62 { pt3dadd( 21.6295, -187.866, -39.3058, 0.96 ) }
    dend_62 { pt3dadd( 21.6633, -187.903, -39.3315, 0.96 ) }
    dend_62 { pt3dadd( 22.276, -188.616, -39.8784, 0.59 ) }
    dend_62 { pt3dadd( 22.6229, -189.064, -40.2206, 0.81 ) }
    dend_62 { pt3dadd( 23.3898, -190.228, -41.0324, 0.59 ) }
    dend_62 { pt3dadd( 23.7041, -190.814, -41.3941, 0.88 ) }
    dend_62 { pt3dadd( 23.8736, -191.234, -41.6137, 0.88 ) }
    dend_62 { pt3dadd( 24.0173, -191.715, -41.8145, 0.81 ) }
    dend_62 { pt3dadd( 24.1392, -192.39, -42.0134, 0.59 ) }
    dend_62 { pt3dadd( 24.2197, -193.107, -42.145, 0.66 ) }
    dend_62 { pt3dadd( 24.2855, -193.945, -42.2049, 1.03 ) }
    dend_62 { pt3dadd( 24.3319, -194.473, -42.2339, 1.33 ) }
    dend_62 { pt3dadd( 24.3733, -194.922, -42.2683, 1.18 ) }
    dend_62 { pt3dadd( 24.4329, -195.527, -42.3526, 0.81 ) }
    dend_62 { pt3dadd( 24.5416, -196.296, -42.5625, 0.59 ) }
    dend_62 { pt3dadd( 24.7183, -197.018, -42.8342, 0.74 ) }
    dend_62 { pt3dadd( 24.8752, -197.456, -43.0054, 0.96 ) }
    dend_62 { pt3dadd( 24.8934, -197.496, -43.0201, 0.96 ) }
    dend_62 { pt3dadd( 25.3106, -198.28, -43.2797, 0.96 ) }
    dend_62 { pt3dadd( 26.0641, -199.512, -43.6541, 0.74 ) }
    dend_62 { pt3dadd( 26.6763, -200.389, -43.9008, 0.74 ) }
    dend_62 { pt3dadd( 27.2638, -201.169, -44.0936, 0.88 ) }
    dend_62 { pt3dadd( 27.7807, -201.869, -44.1653, 0.88 ) }
    dend_62 { pt3dadd( 28.2978, -202.599, -44.1317, 0.59 ) }
    dend_62 { pt3dadd( 28.6312, -203.145, -43.9676, 0.59 ) }
    dend_62 { pt3dadd( 28.8534, -203.649, -43.6958, 0.59 ) }
    dend_62 { pt3dadd( 28.8629, -203.687, -43.6716, 0.59 ) }
    dend_62 { pt3dadd( 28.9846, -205.31, -42.6274, 0.52 ) }
    dend_62 { pt3dadd( 28.928, -206.012, -42.1783, 0.52 ) }
    dend_62 { pt3dadd( 28.6552, -207.377, -41.452, 1.18 ) }
    dend_62 { pt3dadd( 28.4357, -208.194, -41.1158, 1.18 ) }
    dend_62 { pt3dadd( 28.2355, -208.912, -40.9513, 0.52 ) }
    dend_62 { pt3dadd( 27.9978, -209.974, -40.9753, 0.52 ) }
    dend_62 { pt3dadd( 27.8705, -210.815, -41.1954, 0.66 ) }
    dend_62 { pt3dadd( 27.7661, -212.167, -41.7313, 0.66 ) }
    dend_62 { pt3dadd( 27.7819, -212.928, -42.1528, 0.66 ) }
    dend_62 { pt3dadd( 27.9266, -214.24, -42.9713, 0.66 ) }
    dend_62 { pt3dadd( 28.2323, -215.614, -43.8994, 0.74 ) }
    dend_62 { pt3dadd( 28.3995, -216.094, -44.2399, 1.03 ) }
    dend_62 { pt3dadd( 28.5979, -216.527, -44.5493, 1.03 ) }
    dend_62 { pt3dadd( 29.0711, -217.386, -45.1346, 0.66 ) }
    dend_62 { pt3dadd( 29.4281, -217.975, -45.5369, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_62 { pt3dadd( 29.7717, -218.514, -45.8505, 0.74 ) }
    dend_62 { pt3dadd( 30.0759, -218.987, -46.0818, 1.03 ) }
    dend_62 { pt3dadd( 30.1044, -219.028, -46.102, 1.03 ) }
    dend_62 { pt3dadd( 30.2516, -219.203, -46.1753, 1.25 ) }
    dend_62 { pt3dadd( 30.2989, -219.245, -46.1818, 1.25 ) }
    dend_62 { pt3dadd( 30.6238, -219.507, -46.1907, 1.25 ) }
    dend_62 { pt3dadd( 30.6645, -219.544, -46.1889, 1.25 ) }
    dend_62 { pt3dadd( 30.9737, -219.86, -46.1673, 1.25 ) }
    dend_62 { pt3dadd( 31.2591, -220.206, -46.1428, 1.25 ) }
    dend_62 { pt3dadd( 31.9057, -221.121, -46.0385, 0.59 ) }
    dend_62 { pt3dadd( 32.3961, -221.842, -45.9386, 0.59 ) }
    dend_62 { pt3dadd( 32.924, -222.652, -45.8115, 0.66 ) }
    dend_62 { pt3dadd( 33.3332, -223.269, -45.7048, 0.66 ) }
    dend_62 { pt3dadd( 33.8689, -224.043, -45.5566, 0.59 ) }
    dend_62 { pt3dadd( 34.3211, -224.665, -45.4239, 0.44 ) }
    dend_62 { pt3dadd( 34.7667, -225.176, -45.2935, 0.29 ) }
    dend_62 { pt3dadd( 34.8047, -225.206, -45.2838, 0.29 ) }
    dend_62 { pt3dadd( 35.4496, -225.485, -45.1319, 0.59 ) }
    dend_62 { pt3dadd( 36.0743, -225.693, -45.0003, 0.74 ) }
    dend_62 { pt3dadd( 36.1271, -225.71, -44.9865, 0.74 ) }
    dend_62 { pt3dadd( 36.8997, -225.971, -44.7668, 0.74 ) }
    dend_62 { pt3dadd( 36.9474, -225.99, -44.7479, 0.74 ) }
    dend_62 { pt3dadd( 38.066, -226.46, -44.1692, 0.59 ) }
    dend_62 { pt3dadd( 38.6203, -226.703, -43.8293, 0.81 ) }
    dend_62 { pt3dadd( 39.4834, -227.128, -43.2294, 0.66 ) }
    dend_62 { pt3dadd( 39.5309, -227.152, -43.1956, 0.66 ) }
    dend_62 { pt3dadd( 40.3815, -227.557, -42.5471, 1.03 ) }
    dend_62 { pt3dadd( 41.0095, -227.814, -42.0123, 1.47 ) }
    dend_62 { pt3dadd( 41.3157, -227.933, -41.6892, 1.55 ) }
    dend_62 { pt3dadd( 41.9486, -228.181, -40.9328, 0.29 ) }
    dend_62 { pt3dadd( 42.3898, -228.363, -40.367, 0.59 ) }
    dend_62 { pt3dadd( 43.0315, -228.643, -39.5313, 0.81 ) }
    dend_62 { pt3dadd( 43.7866, -228.99, -38.5154, 1.18 ) }
    dend_62 { pt3dadd( 44.7418, -229.47, -37.2185, 0.44 ) }
    dend_62 { pt3dadd( 45.3765, -229.808, -36.3405, 0.59 ) }
    dend_62 { pt3dadd( 45.4086, -229.826, -36.2972, 0.59 ) }
    dend_62 { pt3dadd( 45.7859, -230.094, -35.8259, 0.81 ) }
    dend_62 { pt3dadd( 45.8138, -230.119, -35.7977, 0.81 ) }
    dend_62 { pt3dadd( 46.2487, -230.532, -35.4696, 0.37 ) }
    dend_62 { pt3dadd( 46.7487, -230.996, -35.1829, 0.88 ) }
    dend_62 { pt3dadd( 47.1166, -231.372, -34.9835, 1.33 ) }
    dend_62 { pt3dadd( 47.4708, -231.783, -34.7902, 1.47 ) }
    dend_62 { pt3dadd( 48.1942, -232.7, -34.4486, 0.88 ) }
    dend_62 { pt3dadd( 48.2274, -232.744, -34.4359, 0.88 ) }
    dend_62 { pt3dadd( 48.539, -233.155, -34.3503, 1.03 ) }
    dend_62 { pt3dadd( 49.0472, -233.836, -34.2924, 0.44 ) }
    dend_62 { pt3dadd( 49.5684, -234.54, -34.2927, 0.44 ) }
    dend_62 { pt3dadd( 50.0124, -235.156, -34.3523, 0.66 ) }
    dend_62 { pt3dadd( 50.0443, -235.2, -34.3609, 0.66 ) }
    dend_62 { pt3dadd( 50.3522, -235.599, -34.4311, 0.44 ) }
    dend_62 { pt3dadd( 50.7017, -236.031, -34.4995, 0.81 ) }
    dend_62 { pt3dadd( 50.9277, -236.285, -34.5288, 0.96 ) }
    dend_62 { pt3dadd( 51.2752, -236.665, -34.55, 1.11 ) }
    dend_62 { pt3dadd( 51.7114, -237.162, -34.5378, 0.29 ) }
    dend_62 { pt3dadd( 52.0685, -237.584, -34.5279, 0.22 ) }
    dend_62 { pt3dadd( 52.1036, -237.628, -34.5269, 0.22 ) }
    dend_62 { pt3dadd( 52.5489, -238.156, -34.5147, 1.47 ) }
    dend_62 { pt3dadd( 52.586, -238.196, -34.5136, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 2.42904, -116.531, -28.0145, 0.44 ) }
    dend_53 { pt3dadd( 2.72601, -117.34, -28.675, 0.44 ) }
    dend_53 { pt3dadd( 3.05291, -118.147, -29.3241, 0.59 ) }
    dend_53 { pt3dadd( 3.98081, -120.26, -30.9549, 0.59 ) }
    dend_53 { pt3dadd( 4.43025, -121.24, -31.6735, 0.81 ) }
    dend_53 { pt3dadd( 5.0253, -122.483, -32.5525, 0.81 ) }
    dend_53 { pt3dadd( 5.59088, -123.647, -33.3432, 0.88 ) }
    dend_53 { pt3dadd( 5.91802, -124.317, -33.7673, 1.03 ) }
    dend_53 { pt3dadd( 6.43999, -125.311, -34.3433, 0.52 ) }
    dend_53 { pt3dadd( 6.68907, -125.763, -34.5456, 0.88 ) }
    dend_53 { pt3dadd( 7.08684, -126.482, -34.8543, 0.88 ) }
    dend_53 { pt3dadd( 7.27327, -126.88, -35.017, 0.88 ) }
    dend_53 { pt3dadd( 7.28594, -126.931, -35.0421, 0.88 ) }
    dend_53 { pt3dadd( 7.29504, -127.611, -35.5499, 0.44 ) }
    dend_53 { pt3dadd( 7.25521, -128.069, -35.9936, 0.74 ) }
    dend_53 { pt3dadd( 7.25051, -128.602, -36.5406, 0.74 ) }
    dend_53 { pt3dadd( 7.32278, -129.273, -37.2384, 0.96 ) }
    dend_53 { pt3dadd( 7.55808, -130.203, -38.1962, 0.96 ) }
    dend_53 { pt3dadd( 7.92834, -131.158, -39.1045, 0.96 ) }
    dend_53 { pt3dadd( 8.3881, -132.105, -39.9604, 0.96 ) }
    dend_53 { pt3dadd( 8.98707, -133.198, -40.8314, 0.88 ) }
    dend_53 { pt3dadd( 9.60662, -134.253, -41.5587, 0.88 ) }
    dend_53 { pt3dadd( 10.1585, -135.199, -42.1118, 0.59 ) }
    dend_53 { pt3dadd( 10.7091, -136.163, -42.612, 0.59 ) }
    dend_53 { pt3dadd( 11.1037, -136.914, -42.9754, 0.96 ) }
    dend_53 { pt3dadd( 11.4507, -137.679, -43.3313, 1.25 ) }
    dend_53 { pt3dadd( 11.7268, -138.426, -43.6802, 1.33 ) }
    dend_53 { pt3dadd( 12.0697, -139.512, -44.1606, 0.96 ) }
    dend_53 { pt3dadd( 12.3156, -140.345, -44.5176, 0.81 ) }
    dend_53 { pt3dadd( 12.6055, -141.256, -44.9122, 0.88 ) }
    dend_53 { pt3dadd( 12.7948, -141.685, -45.0614, 1.11 ) }
    dend_53 { pt3dadd( 12.8178, -141.722, -45.0736, 1.11 ) }
    dend_53 { pt3dadd( 13.2724, -142.259, -45.2092, 1.11 ) }
    dend_53 { pt3dadd( 13.6731, -142.639, -45.241, 1.25 ) }
    dend_53 { pt3dadd( 13.7693, -142.717, -45.2468, 1.25 ) }
    dend_53 { pt3dadd( 14.4729, -143.242, -45.355, 1.33 ) }
    dend_53 { pt3dadd( 15.219, -143.803, -45.5853, 1.03 ) }
    dend_53 { pt3dadd( 15.6504, -144.154, -45.802, 0.59 ) }
    dend_53 { pt3dadd( 15.9785, -144.443, -46.0427, 0.81 ) }
    dend_53 { pt3dadd( 16.7529, -145.231, -46.8704, 0.81 ) }
    dend_53 { pt3dadd( 17.2468, -145.845, -47.6264, 1.11 ) }
    dend_53 { pt3dadd( 17.6408, -146.492, -48.4975, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_53 { pt3dadd( 18.0046, -147.265, -49.5372, 0.59 ) }
    dend_53 { pt3dadd( 18.201, -147.722, -50.1535, 0.81 ) }
    dend_53 { pt3dadd( 18.5442, -148.504, -51.2194, 0.96 ) }
    dend_53 { pt3dadd( 18.8447, -149.167, -52.0632, 0.81 ) }
    dend_53 { pt3dadd( 19.2693, -150.066, -53.0679, 0.37 ) }
    dend_53 { pt3dadd( 19.7031, -150.902, -53.8667, 1.03 ) }
    dend_53 { pt3dadd( 20.3767, -152.105, -54.7987, 0.96 ) }
    dend_53 { pt3dadd( 21.1148, -153.328, -55.579, 1.18 ) }
    dend_53 { pt3dadd( 21.7036, -154.228, -56.071, 1.18 ) }
    dend_53 { pt3dadd( 22.3553, -155.168, -56.5323, 1.18 ) }
    dend_53 { pt3dadd( 22.9935, -156.057, -56.9349, 0.81 ) }
    dend_53 { pt3dadd( 23.6997, -157.042, -57.33, 0.66 ) }
    dend_53 { pt3dadd( 24.0827, -157.593, -57.5165, 0.96 ) }
    dend_53 { pt3dadd( 24.82, -158.654, -57.8218, 1.25 ) }
    dend_53 { pt3dadd( 24.8532, -158.7, -57.8359, 1.25 ) }
    dend_53 { pt3dadd( 25.4836, -159.519, -58.0542, 1.11 ) }
    dend_53 { pt3dadd( 25.9393, -160.159, -58.1707, 0.81 ) }
    dend_53 { pt3dadd( 26.2116, -160.591, -58.2229, 1.25 ) }
    dend_53 { pt3dadd( 26.4936, -161.136, -58.2437, 1.25 ) }
    dend_53 { pt3dadd( 26.6963, -161.692, -58.2227, 0.66 ) }
    dend_53 { pt3dadd( 26.8401, -162.265, -58.2566, 0.59 ) }
    dend_53 { pt3dadd( 26.8974, -162.99, -58.3799, 0.59 ) }
    dend_53 { pt3dadd( 26.8833, -163.338, -58.4887, 0.88 ) }
    dend_53 { pt3dadd( 26.8784, -163.391, -58.5097, 0.88 ) }
    dend_53 { pt3dadd( 26.8337, -164.054, -58.821, 0.88 ) }
    dend_53 { pt3dadd( 26.8741, -165.246, -59.3925, 0.59 ) }
    dend_53 { pt3dadd( 26.979, -165.775, -59.6444, 0.44 ) }
    dend_53 { pt3dadd( 27.0093, -165.87, -59.6841, 0.44 ) }
    dend_53 { pt3dadd( 27.1993, -166.357, -59.8627, 0.74 ) }
    dend_53 { pt3dadd( 27.5136, -167.12, -60.0984, 0.96 ) }
    dend_53 { pt3dadd( 27.7972, -167.76, -60.2958, 0.96 ) }
    dend_53 { pt3dadd( 28.2085, -168.734, -60.5528, 0.59 ) }
    dend_53 { pt3dadd( 28.4097, -169.248, -60.6995, 0.88 ) }
    dend_53 { pt3dadd( 28.4278, -169.299, -60.7149, 0.88 ) }
    dend_53 { pt3dadd( 28.6027, -169.849, -60.8727, 0.96 ) }
    dend_53 { pt3dadd( 28.9591, -171.119, -61.2622, 0.59 ) }
    dend_53 { pt3dadd( 29.1584, -171.84, -61.4949, 1.03 ) }
    dend_53 { pt3dadd( 29.3269, -172.402, -61.6627, 1.18 ) }
    dend_53 { pt3dadd( 29.6393, -173.338, -61.9364, 0.88 ) }
    dend_53 { pt3dadd( 29.9039, -174.14, -62.1613, 0.74 ) }
    dend_53 { pt3dadd( 30.1766, -175.006, -62.3915, 0.66 ) }
    dend_53 { pt3dadd( 30.469, -176.107, -62.6552, 0.52 ) }
    dend_53 { pt3dadd( 30.6108, -176.78, -62.8315, 0.81 ) }
    dend_53 { pt3dadd( 30.7058, -177.478, -63.0404, 0.37 ) }
    dend_53 { pt3dadd( 30.7133, -178.066, -63.2512, 0.37 ) }
    dend_53 { pt3dadd( 30.6782, -178.483, -63.4212, 0.88 ) }
    dend_53 { pt3dadd( 30.6084, -178.875, -63.6017, 1.18 ) }
    dend_53 { pt3dadd( 30.4764, -179.334, -63.8484, 1.33 ) }
    dend_53 { pt3dadd( 30.2535, -180.119, -64.3063, 0.88 ) }
    dend_53 { pt3dadd( 30.0616, -180.982, -64.8337, 0.74 ) }
    dend_53 { pt3dadd( 30.0521, -181.03, -64.8643, 0.74 ) }
    dend_53 { pt3dadd( 29.8557, -182.178, -65.6024, 0.52 ) }
    dend_53 { pt3dadd( 29.7438, -182.907, -66.0795, 0.66 ) }
    dend_53 { pt3dadd( 29.5621, -184.229, -66.9431, 0.59 ) }
    dend_53 { pt3dadd( 29.4837, -184.983, -67.3998, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 22.6416, -159.058, -35.9103, 0.37 ) }
    dend_51 { pt3dadd( 23.7506, -159.184, -35.9494, 0.37 ) }
    dend_51 { pt3dadd( 24.9704, -159.399, -35.9961, 0.59 ) }
    dend_51 { pt3dadd( 25.7093, -159.538, -36.0411, 0.59 ) }
    dend_51 { pt3dadd( 27.0223, -159.765, -36.1549, 0.59 ) }
    dend_51 { pt3dadd( 27.1974, -159.794, -36.1728, 0.59 ) }
    dend_51 { pt3dadd( 28.1246, -159.937, -36.3089, 0.22 ) }
    dend_51 { pt3dadd( 28.5724, -159.978, -36.4542, 0.44 ) }
    dend_51 { pt3dadd( 29.2329, -159.991, -36.8351, 0.44 ) }
    dend_51 { pt3dadd( 29.6979, -159.981, -37.2078, 0.81 ) }
    dend_51 { pt3dadd( 29.7711, -159.972, -37.2786, 0.81 ) }
    dend_51 { pt3dadd( 30.2536, -159.821, -37.8417, 0.96 ) }
    dend_51 { pt3dadd( 31.2153, -159.359, -39.2515, 0.52 ) }
    dend_51 { pt3dadd( 31.5191, -159.19, -39.734, 0.52 ) }
    dend_51 { pt3dadd( 31.5602, -159.166, -39.8012, 0.52 ) }
    dend_51 { pt3dadd( 32.0675, -158.859, -40.6357, 0.44 ) }
    dend_51 { pt3dadd( 33.0165, -158.267, -42.1291, 0.74 ) }
    dend_51 { pt3dadd( 33.8871, -157.694, -43.542, 0.29 ) }
    dend_51 { pt3dadd( 34.2661, -157.428, -44.1432, 0.29 ) }
    dend_51 { pt3dadd( 34.5263, -157.262, -44.5527, 0.59 ) }
    dend_51 { pt3dadd( 34.5635, -157.243, -44.6109, 0.59 ) }
    dend_51 { pt3dadd( 34.8345, -157.155, -45.0749, 1.18 ) }
    dend_51 { pt3dadd( 35.7356, -157.01, -46.4915, 1.11 ) }
    dend_51 { pt3dadd( 36.2331, -156.989, -47.2927, 0.37 ) }
    dend_51 { pt3dadd( 36.9275, -157.006, -48.4214, 0.29 ) }
    dend_51 { pt3dadd( 37.7533, -157.058, -49.6982, 1.11 ) }
    dend_51 { pt3dadd( 38.8903, -157.137, -51.3413, 0.66 ) }
    dend_51 { pt3dadd( 39.6367, -157.204, -52.3593, 0.44 ) }
    dend_51 { pt3dadd( 40.6083, -157.298, -53.6591, 1.18 ) }
    dend_51 { pt3dadd( 40.9703, -157.332, -54.1666, 1.62 ) }
    dend_51 { pt3dadd( 41.5081, -157.35, -54.9144, 1.18 ) }
    dend_51 { pt3dadd( 42.1541, -157.324, -55.7437, 0.74 ) }
    dend_51 { pt3dadd( 42.2008, -157.319, -55.7988, 0.74 ) }
    dend_51 { pt3dadd( 43.3417, -157.156, -57.3744, 0.59 ) }
    dend_51 { pt3dadd( 43.3822, -157.147, -57.4336, 0.59 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 90/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 22.6416, -159.058, -35.9103, 0.59 ) }
    dend_50 { pt3dadd( 22.845, -161.367, -35.283, 0.59 ) }
    dend_50 { pt3dadd( 23.0382, -162.532, -34.6233, 0.66 ) }
    dend_50 { pt3dadd( 23.1849, -163.114, -34.1443, 1.03 ) }
    dend_50 { pt3dadd( 23.2345, -163.334, -33.9444, 1.03 ) }
    dend_50 { pt3dadd( 23.3086, -163.762, -33.4216, 1.03 ) }
    dend_50 { pt3dadd( 23.4716, -164.886, -31.8613, 0.74 ) }
    dend_50 { pt3dadd( 23.6273, -166.495, -29.1289, 1.03 ) }
    dend_50 { pt3dadd( 23.8134, -167.434, -27.0749, 1.11 ) }
    dend_50 { pt3dadd( 23.9042, -167.83, -26.1833, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_50 { pt3dadd( 24.2188, -169.568, -22.4026, 0.74 ) }
    dend_50 { pt3dadd( 24.2284, -169.634, -22.2598, 0.74 ) }
    dend_50 { pt3dadd( 24.3129, -170.381, -20.7593, 0.66 ) }
    dend_50 { pt3dadd( 24.6945, -173.74, -15.2623, 0.66 ) }
    dend_50 { pt3dadd( 24.8335, -174.757, -13.9284, 0.52 ) }
    dend_50 { pt3dadd( 25.0694, -176.059, -12.5957, 0.74 ) }
    dend_50 { pt3dadd( 25.0846, -176.133, -12.5436, 0.74 ) }
    dend_50 { pt3dadd( 25.3115, -177.195, -11.9674, 0.88 ) }
    dend_50 { pt3dadd( 25.9171, -179.908, -10.9521, 0.52 ) }
    dend_50 { pt3dadd( 26.1689, -181.218, -10.7251, 0.52 ) }
    dend_50 { pt3dadd( 26.4706, -182.587, -10.4894, 0.52 ) }
    dend_50 { pt3dadd( 26.7926, -183.908, -10.298, 0.44 ) }
    dend_50 { pt3dadd( 27.0169, -184.934, -10.1734, 0.37 ) }
    dend_50 { pt3dadd( 27.3921, -186.737, -9.95145, 0.37 ) }
    dend_50 { pt3dadd( 27.7034, -188.171, -9.81856, 0.59 ) }
    dend_50 { pt3dadd( 27.9089, -189.014, -9.71134, 0.88 ) }
    dend_50 { pt3dadd( 27.9347, -189.102, -9.69238, 0.88 ) }
    dend_50 { pt3dadd( 28.186, -189.831, -9.48513, 0.96 ) }
    dend_50 { pt3dadd( 28.9445, -191.786, -8.62202, 0.44 ) }
    dend_50 { pt3dadd( 29.3972, -192.824, -8.0565, 0.59 ) }
    dend_50 { pt3dadd( 29.4282, -192.887, -8.01322, 0.59 ) }
    dend_50 { pt3dadd( 30.2296, -194.401, -6.96682, 0.81 ) }
    dend_50 { pt3dadd( 30.4941, -194.927, -6.60792, 0.96 ) }
    dend_50 { pt3dadd( 31.5597, -197.176, -5.13264, 0.52 ) }
    dend_50 { pt3dadd( 31.7809, -197.71, -4.81083, 0.74 ) }
    dend_50 { pt3dadd( 32.439, -199.55, -3.80267, 0.52 ) }
    dend_50 { pt3dadd( 32.8221, -200.746, -3.29757, 0.74 ) }
    dend_50 { pt3dadd( 33.1303, -201.84, -2.92914, 0.44 ) }
    dend_50 { pt3dadd( 33.3643, -202.796, -2.57984, 0.29 ) }
    dend_50 { pt3dadd( 33.497, -203.402, -2.32059, 0.37 ) }
    dend_50 { pt3dadd( 33.6927, -204.296, -1.75118, 0.59 ) }
    dend_50 { pt3dadd( 33.9674, -205.365, -0.920524, 0.59 ) }
    dend_50 { pt3dadd( 34.5426, -207.072, 0.579002, 0.81 ) }
    dend_50 { pt3dadd( 35.3678, -208.828, 2.26383, 0.44 ) }
    dend_50 { pt3dadd( 36.3855, -210.44, 3.9641, 0.88 ) }
    dend_50 { pt3dadd( 37.7563, -212.121, 5.89714, 0.74 ) }
    dend_50 { pt3dadd( 38.4462, -212.71, 6.64721, 0.29 ) }
    dend_50 { pt3dadd( 39.6768, -213.396, 7.60317, 0.37 ) }
    dend_50 { pt3dadd( 41.1085, -213.599, 7.86432, 0.37 ) }
    dend_50 { pt3dadd( 42.2791, -213.483, 7.68814, 0.66 ) }
    dend_50 { pt3dadd( 42.3696, -213.465, 7.66163, 0.66 ) }
    dend_50 { pt3dadd( 43.7528, -213.08, 7.08012, 0.29 ) }
    dend_50 { pt3dadd( 43.8498, -213.051, 7.04058, 0.29 ) }
    dend_50 { pt3dadd( 45.3923, -212.52, 6.50843, 0.15 ) }
    dend_50 { pt3dadd( 46.8269, -211.943, 5.92357, 0.15 ) }
    dend_50 { pt3dadd( 51.716, -221.183, 13.6954, 0.15 ) }
    dend_50 { pt3dadd( 55.4131, -230.649, 21.8354, 0.15 ) }
    dend_50 { pt3dadd( 60.5123, -240.932, 27.9056, 0.15 ) }
    dend_50 { pt3dadd( 68.1991, -248.881, 34.866, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 49/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 6.86816, -400.915, -42.9413, 1.18 ) }
    dend_46 { pt3dadd( 7.13527, -401.956, -42.3701, 1.18 ) }
    dend_46 { pt3dadd( 7.41196, -402.997, -41.7525, 0.96 ) }
    dend_46 { pt3dadd( 7.54096, -403.434, -41.4885, 1.47 ) }
    dend_46 { pt3dadd( 7.70917, -403.957, -41.1782, 1.84 ) }
    dend_46 { pt3dadd( 7.92473, -404.593, -40.8036, 1.33 ) }
    dend_46 { pt3dadd( 8.2388, -405.473, -40.3072, 0.74 ) }
    dend_46 { pt3dadd( 8.25955, -405.522, -40.2829, 0.74 ) }
    dend_46 { pt3dadd( 8.54703, -406.161, -39.9765, 0.81 ) }
    dend_46 { pt3dadd( 8.79733, -406.677, -39.7461, 0.44 ) }
    dend_46 { pt3dadd( 8.824, -406.726, -39.7292, 0.44 ) }
    dend_46 { pt3dadd( 9.28081, -407.564, -39.5369, 0.29 ) }
    dend_46 { pt3dadd( 9.72624, -408.319, -39.4274, 0.44 ) }
    dend_46 { pt3dadd( 10.0085, -408.79, -39.3703, 0.81 ) }
    dend_46 { pt3dadd( 10.2854, -409.234, -39.2949, 0.81 ) }
    dend_46 { pt3dadd( 10.8544, -410.076, -39.071, 0.37 ) }
    dend_46 { pt3dadd( 10.8901, -410.128, -39.0499, 0.37 ) }
    dend_46 { pt3dadd( 11.2642, -410.69, -38.761, 0.81 ) }
    dend_46 { pt3dadd( 11.6136, -411.272, -38.4291, 1.11 ) }
    dend_46 { pt3dadd( 12.0368, -412.11, -37.9461, 1.11 ) }
    dend_46 { pt3dadd( 12.4795, -413.22, -37.335, 0.29 ) }
    dend_46 { pt3dadd( 12.7283, -414.095, -36.8894, 0.29 ) }
    dend_46 { pt3dadd( 12.8377, -414.741, -36.5989, 0.66 ) }
    dend_46 { pt3dadd( 12.8721, -415.563, -36.2962, 0.88 ) }
    dend_46 { pt3dadd( 12.834, -416.268, -36.0907, 1.03 ) }
    dend_46 { pt3dadd( 12.7365, -416.862, -35.9871, 1.03 ) }
    dend_46 { pt3dadd( 12.5341, -417.56, -35.9161, 0.74 ) }
    dend_46 { pt3dadd( 12.1757, -418.534, -35.851, 0.22 ) }
    dend_46 { pt3dadd( 11.91, -419.156, -35.793, 0.74 ) }
    dend_46 { pt3dadd( 11.8814, -419.213, -35.7844, 0.74 ) }
    dend_46 { pt3dadd( 11.5939, -419.768, -35.6783, 0.74 ) }
    dend_46 { pt3dadd( 11.5662, -419.819, -35.6691, 0.74 ) }
    dend_46 { pt3dadd( 11.2191, -420.472, -35.5713, 0.29 ) }
    dend_46 { pt3dadd( 11.0129, -420.945, -35.5214, 0.29 ) }
    dend_46 { pt3dadd( 10.7985, -421.564, -35.4581, 1.03 ) }
    dend_46 { pt3dadd( 10.6494, -422.206, -35.4314, 1.4 ) }
    dend_46 { pt3dadd( 10.544, -422.929, -35.4409, 0.52 ) }
    dend_46 { pt3dadd( 10.49, -423.39, -35.482, 0.29 ) }
    dend_46 { pt3dadd( 10.4384, -424.145, -35.6784, 0.37 ) }
    dend_46 { pt3dadd( 10.4344, -424.614, -35.8948, 0.66 ) }
    dend_46 { pt3dadd( 10.5036, -425.338, -36.3937, 0.37 ) }
    dend_46 { pt3dadd( 10.5885, -425.666, -36.7083, 0.96 ) }
    dend_46 { pt3dadd( 10.7042, -425.986, -37.052, 0.96 ) }
    dend_46 { pt3dadd( 11.0297, -426.782, -37.9824, 0.37 ) }
    dend_46 { pt3dadd( 11.3834, -427.526, -38.9001, 0.74 ) }
    dend_46 { pt3dadd( 11.8234, -428.333, -39.8982, 1.25 ) }
    dend_46 { pt3dadd( 12.7662, -429.795, -41.675, 0.29 ) }
    dend_46 { pt3dadd( 13.119, -430.288, -42.2774, 0.29 ) }
    dend_46 { pt3dadd( 13.1486, -430.325, -42.3225, 0.29 ) }
    dend_46 { pt3dadd( 13.6107, -430.857, -42.9241, 0.88 ) }
    dend_46 { pt3dadd( 13.8467, -431.107, -43.1852, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_46 { pt3dadd( 14.6081, -431.84, -43.8504, 0.52 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 1/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 6.86816, -400.915, -42.9413, 0.44 ) }
    dend_45 { pt3dadd( 7.73043, -401.77, -42.7244, 0.44 ) }
    dend_45 { pt3dadd( 8.76347, -402.837, -42.4352, 0.44 ) }
    dend_45 { pt3dadd( 8.8211, -402.902, -42.4171, 0.44 ) }
    dend_45 { pt3dadd( 9.21712, -403.369, -42.2859, 0.29 ) }
    dend_45 { pt3dadd( 9.70451, -403.928, -42.1201, 0.81 ) }
    dend_45 { pt3dadd( 10.2693, -404.542, -41.9263, 1.11 ) }
    dend_45 { pt3dadd( 10.3117, -404.593, -41.9081, 1.11 ) }
    dend_45 { pt3dadd( 10.9155, -405.328, -41.6611, 0.44 ) }
    dend_45 { pt3dadd( 10.9616, -405.387, -41.6436, 0.44 ) }
    dend_45 { pt3dadd( 11.5273, -406.127, -41.4496, 0.37 ) }
    dend_45 { pt3dadd( 11.9097, -406.675, -41.3185, 0.37 ) }
    dend_45 { pt3dadd( 12.5092, -407.626, -41.1144, 0.29 ) }
    dend_45 { pt3dadd( 12.855, -408.175, -41.0082, 0.74 ) }
    dend_45 { pt3dadd( 13.0608, -408.494, -40.9509, 0.81 ) }
    dend_45 { pt3dadd( 13.1533, -408.633, -40.9337, 0.81 ) }
    dend_45 { pt3dadd( 13.6964, -409.415, -40.8682, 0.44 ) }
    dend_45 { pt3dadd( 14.1993, -410.095, -40.8271, 0.29 ) }
    dend_45 { pt3dadd( 14.7892, -410.802, -40.7892, 0.52 ) }
    dend_45 { pt3dadd( 15.139, -411.182, -40.768, 0.52 ) }
    dend_45 { pt3dadd( 16.073, -412.16, -40.7476, 0.29 ) }
    dend_45 { pt3dadd( 16.7508, -412.858, -40.7824, 0.59 ) }
    dend_45 { pt3dadd( 16.8045, -412.915, -40.7926, 0.59 ) }
    dend_45 { pt3dadd( 17.1205, -413.3, -40.8814, 0.59 ) }
    dend_45 { pt3dadd( 17.1654, -413.36, -40.8971, 0.59 ) }
    dend_45 { pt3dadd( 17.9799, -414.527, -41.2419, 0.81 ) }
    dend_45 { pt3dadd( 18.4044, -415.192, -41.4592, 1.03 ) }
    dend_45 { pt3dadd( 18.9879, -416.156, -41.8329, 0.59 ) }
    dend_45 { pt3dadd( 19.6062, -417.212, -42.2611, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 30/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -95.4803, -109.091, 23.615, 0.37 ) }
    dend_39 { pt3dadd( -104.181, -117.125, 28.0521, 0.37 ) }
    dend_39 { pt3dadd( -114.748, -123.983, 29.7264, 0.37 ) }
    dend_39 { pt3dadd( -126.21, -129.57, 29.4151, 0.37 ) }
    dend_39 { pt3dadd( -137.183, -135.681, 31.4662, 0.37 ) }
    dend_39 { pt3dadd( -148.309, -141.4, 33.847, 0.37 ) }
    dend_39 { pt3dadd( -158.276, -148.892, 36.1699, 0.37 ) }
    dend_39 { pt3dadd( -167.26, -157.067, 39.7034, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 38/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -95.4803, -109.091, 23.615, 0.29 ) }
    dend_36 { pt3dadd( -101.039, -114.938, 26.9092, 0.37 ) }
    dend_36 { pt3dadd( -105.649, -121.518, 30.2089, 0.37 ) }
    dend_36 { pt3dadd( -109.91, -128.582, 32.8767, 0.37 ) }
    dend_36 { pt3dadd( -114.77, -134.927, 36.2986, 0.37 ) }
    dend_36 { pt3dadd( -120.157, -141.509, 38.1053, 0.37 ) }
    dend_36 { pt3dadd( -125.71, -147.549, 41.0256, 0.37 ) }
    dend_36 { pt3dadd( -131.499, -152.668, 45.0996, 0.37 ) }
    dend_36 { pt3dadd( -137.442, -157.573, 49.2272, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 58.1515, 184.013, 42.3318, 0.29 ) }
    dend_8 { pt3dadd( 60.311, 196.85, 43.9862, 0.29 ) }
    dend_8 { pt3dadd( 61.5489, 209.499, 47.4042, 0.29 ) }
    dend_8 { pt3dadd( 62.0455, 222.403, 49.8613, 0.29 ) }
    dend_8 { pt3dadd( 63.0278, 235.049, 53.3919, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 58.1515, 184.013, 42.3318, 0.44 ) }
    dend_7 { pt3dadd( 59.2811, 190.592, 43.0374, 0.29 ) }
    dend_7 { pt3dadd( 59.7835, 197.277, 43.2164, 0.29 ) }
    dend_7 { pt3dadd( 59.797, 203.911, 44.3047, 0.29 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 56/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -139.074, -216.259, -8.9295, 0.29 ) }
    dend_90 { pt3dadd( -145.811, -223.969, -12.0911, 0.29 ) }
    dend_90 { pt3dadd( -153.283, -230.451, -16.3173, 0.29 ) }
    dend_90 { pt3dadd( -160.334, -236.501, -21.759, 0.29 ) }
    dend_90 { pt3dadd( -168.198, -243.132, -24.8959, 0.29 ) }
    dend_90 { pt3dadd( -175.948, -249.913, -27.9785, 0.29 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 62/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -139.074, -216.259, -8.9295, 0.44 ) }
    dend_89 { pt3dadd( -144.456, -224.518, -12.2171, 0.29 ) }
    dend_89 { pt3dadd( -149.229, -233.017, -15.7863, 0.29 ) }
    dend_89 { pt3dadd( -152.792, -242.223, -18.8964, 0.29 ) }
    dend_89 { pt3dadd( -156.918, -251.395, -21.3644, 0.29 ) }
    dend_89 { pt3dadd( -161.043, -260.723, -23.13, 0.29 ) }
    // Section: dend_86, id: dend_86, parent: dend_72 (entry count 68/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -136.397, -155.363, 30.0062, 0.22 ) }
    dend_86 { pt3dadd( -135.157, -154.795, 30.5076, 0.22 ) }
    dend_86 { pt3dadd( -134.595, -154.543, 30.7147, 0.52 ) }
    dend_86 { pt3dadd( -134.189, -154.371, 30.8316, 0.74 ) }
    dend_86 { pt3dadd( -132.906, -153.874, 31.1203, 0.37 ) }
    dend_86 { pt3dadd( -131.47, -153.323, 31.3734, 0.37 ) }
    dend_86 { pt3dadd( -130.939, -153.12, 31.4668, 0.37 ) }
    dend_86 { pt3dadd( -130.715, -153.04, 31.4903, 0.37 ) }
    dend_86 { pt3dadd( -129.637, -152.692, 31.583, 0.37 ) }
    dend_86 { pt3dadd( -129.138, -152.545, 31.5998, 0.88 ) }
    dend_86 { pt3dadd( -128.414, -152.329, 31.5051, 0.88 ) }
    dend_86 { pt3dadd( -118.014, -149.979, 34.1273, 0.88 ) }
    dend_86 { pt3dadd( -108.238, -145.574, 36.2995, 0.88 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -136.397, -155.363, 30.0062, 0.44 ) }
    dend_73 { pt3dadd( -136.447, -154.111, 30.0291, 0.44 ) }
    dend_73 { pt3dadd( -136.444, -152.903, 30.0617, 0.37 ) }
    dend_73 { pt3dadd( -136.441, -152.847, 30.0659, 0.37 ) }
    dend_73 { pt3dadd( -136.408, -151.88, 30.1755, 0.37 ) }
    dend_73 { pt3dadd( -136.408, -151.782, 30.1926, 0.37 ) }
    dend_73 { pt3dadd( -136.439, -150.612, 30.4374, 0.37 ) }
    dend_73 { pt3dadd( -136.44, -150.55, 30.4565, 0.37 ) }
    dend_73 { pt3dadd( -136.508, -149.794, 30.7306, 0.29 ) }
    dend_73 { pt3dadd( -136.627, -148.993, 31.0292, 0.29 ) }
    dend_73 { pt3dadd( -136.785, -148.259, 31.3137, 0.29 ) }
    dend_73 { pt3dadd( -136.836, -148.084, 31.3814, 0.66 ) }
    dend_73 { pt3dadd( -136.885, -147.953, 31.4265, 0.66 ) }
    dend_73 { pt3dadd( -137.064, -147.506, 31.543, 0.66 ) }
    dend_73 { pt3dadd( -137.374, -146.785, 31.6613, 0.29 ) }
    dend_73 { pt3dadd( -137.519, -146.479, 31.6945, 0.44 ) }
    dend_73 { pt3dadd( -137.578, -146.366, 31.7032, 0.44 ) }
    dend_73 { pt3dadd( -137.9, -145.828, 31.7545, 0.37 ) }
    dend_73 { pt3dadd( -138.281, -145.24, 31.8238, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_73 { pt3dadd( -138.316, -145.189, 31.8312, 0.37 ) }
    dend_73 { pt3dadd( -139.004, -144.244, 31.9944, 0.29 ) }
    dend_73 { pt3dadd( -139.412, -143.679, 32.1023, 0.44 ) }
    dend_73 { pt3dadd( -139.528, -143.512, 32.1415, 0.44 ) }
    dend_73 { pt3dadd( -139.892, -142.978, 32.2961, 0.44 ) }
    dend_73 { pt3dadd( -140.237, -142.45, 32.4584, 0.29 ) }
    dend_73 { pt3dadd( -140.308, -142.336, 32.4948, 0.29 ) }
    dend_73 { pt3dadd( -140.492, -142.003, 32.6064, 0.44 ) }
    dend_73 { pt3dadd( -140.69, -141.633, 32.7331, 0.44 ) }
    dend_73 { pt3dadd( -140.722, -141.57, 32.7542, 0.44 ) }
    dend_73 { pt3dadd( -140.928, -141.124, 32.8944, 0.44 ) }
    dend_73 { pt3dadd( -141.111, -140.638, 33.0511, 0.44 ) }
    dend_73 { pt3dadd( -141.127, -140.578, 33.069, 0.44 ) }
    dend_73 { pt3dadd( -141.231, -140.02, 33.2172, 0.37 ) }
    dend_73 { pt3dadd( -141.274, -139.746, 33.2818, 0.37 ) }
    dend_73 { pt3dadd( -141.369, -139.036, 33.422, 0.44 ) }
    dend_73 { pt3dadd( -141.435, -138.405, 33.5314, 0.44 ) }
    dend_73 { pt3dadd( -141.498, -137.71, 33.581, 0.44 ) }
    dend_73 { pt3dadd( -141.583, -136.733, 33.592, 0.44 ) }
    dend_73 { pt3dadd( -141.676, -135.83, 33.5643, 0.74 ) }
    dend_73 { pt3dadd( -141.823, -134.624, 33.4816, 0.81 ) }
    dend_73 { pt3dadd( -141.895, -134.128, 33.425, 0.74 ) }
    dend_73 { pt3dadd( -142.187, -132.386, 33.1353, 0.29 ) }
    dend_73 { pt3dadd( -142.197, -132.332, 33.1243, 0.29 ) }
    dend_73 { pt3dadd( -142.266, -131.938, 33.0332, 0.29 ) }
    dend_73 { pt3dadd( -142.286, -131.804, 33.0059, 0.29 ) }
    dend_73 { pt3dadd( -142.327, -131.474, 32.9752, 0.44 ) }
    dend_73 { pt3dadd( -142.332, -131.411, 32.9741, 0.44 ) }
    dend_73 { pt3dadd( -142.354, -130.962, 33.0024, 0.44 ) }
    dend_73 { pt3dadd( -142.366, -130.234, 33.0378, 0.88 ) }
    dend_73 { pt3dadd( -142.35, -129.208, 33.0744, 0.52 ) }
    dend_73 { pt3dadd( -142.329, -128.41, 33.1015, 0.52 ) }
    dend_73 { pt3dadd( -142.312, -127.764, 33.1113, 0.44 ) }
    dend_73 { pt3dadd( -142.304, -127.055, 33.1157, 0.29 ) }
    dend_73 { pt3dadd( -142.305, -126.522, 33.1135, 0.59 ) }
    dend_73 { pt3dadd( -142.311, -126.316, 33.1119, 0.59 ) }
    dend_73 { pt3dadd( -142.346, -125.797, 33.1106, 0.59 ) }
    dend_73 { pt3dadd( -142.383, -125.281, 33.1107, 0.29 ) }
    dend_73 { pt3dadd( -142.435, -124.577, 33.1279, 0.29 ) }
    dend_73 { pt3dadd( -142.439, -124.503, 33.1299, 0.29 ) }
    dend_73 { pt3dadd( -142.463, -123.971, 33.1379, 0.59 ) }
    dend_73 { pt3dadd( -142.465, -123.887, 33.1388, 0.59 ) }
    dend_73 { pt3dadd( -142.482, -123.293, 33.1532, 0.66 ) }
    dend_73 { pt3dadd( -142.495, -122.635, 33.1792, 0.66 ) }
    dend_73 { pt3dadd( -142.501, -121.937, 33.2054, 0.29 ) }
    dend_73 { pt3dadd( -142.503, -120.962, 33.2433, 0.29 ) }
    dend_73 { pt3dadd( -142.502, -120.889, 33.2462, 0.29 ) }
    dend_73 { pt3dadd( -142.454, -119.655, 33.3406, 0.29 ) }
    dend_73 { pt3dadd( -142.448, -119.516, 33.3565, 0.29 ) }
    dend_73 { pt3dadd( -142.417, -118.731, 33.4753, 0.52 ) }
    dend_73 { pt3dadd( -142.414, -118.595, 33.5014, 0.52 ) }
    dend_73 { pt3dadd( -142.409, -117.785, 33.6878, 0.81 ) }
    dend_73 { pt3dadd( -142.434, -117.016, 33.8698, 0.52 ) }
    dend_73 { pt3dadd( -142.477, -116.387, 34.025, 0.52 ) }
    dend_73 { pt3dadd( -142.536, -115.805, 34.1572, 0.74 ) }
    dend_73 { pt3dadd( -142.625, -115.11, 34.2915, 0.88 ) }
    dend_73 { pt3dadd( -142.652, -114.848, 34.3214, 0.88 ) }
    dend_73 { pt3dadd( -142.674, -114.006, 34.3112, 0.88 ) }
    dend_73 { pt3dadd( -142.669, -113.942, 34.3034, 0.88 ) }
    dend_73 { pt3dadd( -142.591, -113.494, 34.2241, 0.66 ) }
    dend_73 { pt3dadd( -142.421, -112.811, 34.1232, 0.44 ) }
    dend_73 { pt3dadd( -142.12, -111.802, 34.0471, 0.37 ) }
    dend_73 { pt3dadd( -141.821, -110.813, 34.0391, 0.29 ) }
    dend_73 { pt3dadd( -141.61, -110.144, 34.0654, 0.29 ) }
    dend_73 { pt3dadd( -141.592, -110.082, 34.0711, 0.29 ) }
    dend_73 { pt3dadd( -141.31, -108.951, 34.2428, 0.29 ) }
    dend_73 { pt3dadd( -141.014, -107.534, 34.5323, 0.29 ) }
    dend_73 { pt3dadd( -140.901, -106.706, 34.744, 0.37 ) }
    dend_73 { pt3dadd( -140.891, -106.573, 34.7794, 0.37 ) }
    dend_73 { pt3dadd( -140.866, -105.871, 34.9415, 0.37 ) }
    dend_73 { pt3dadd( -140.84, -105.175, 35.0926, 0.37 ) }
    dend_73 { pt3dadd( -140.835, -105.048, 35.1167, 0.37 ) }
    dend_73 { pt3dadd( -140.823, -104.086, 35.3218, 0.52 ) }
    dend_73 { pt3dadd( -140.833, -103.108, 35.5496, 0.44 ) }
    dend_73 { pt3dadd( -140.86, -102.08, 35.8023, 1.11 ) }
    dend_73 { pt3dadd( -140.887, -100.705, 36.1476, 0.29 ) }
    dend_73 { pt3dadd( -140.887, -100.635, 36.1682, 0.29 ) }
    dend_73 { pt3dadd( -140.861, -99.5864, 36.494, 0.29 ) }
    dend_73 { pt3dadd( -140.829, -98.9929, 36.6831, 0.29 ) }
    dend_73 { pt3dadd( -140.825, -98.9414, 36.6993, 0.29 ) }
    dend_73 { pt3dadd( -140.731, -97.8815, 37.0083, 0.37 ) }
    dend_73 { pt3dadd( -140.58, -96.299, 37.417, 0.37 ) }
    dend_73 { pt3dadd( -140.445, -95.1754, 37.6886, 0.37 ) }
    dend_73 { pt3dadd( -140.304, -94.2761, 37.8916, 0.81 ) }
    dend_73 { pt3dadd( -140.205, -93.6825, 38.0178, 1.03 ) }
    dend_73 { pt3dadd( -140.048, -92.6785, 38.2122, 0.29 ) }
    dend_73 { pt3dadd( -139.953, -91.9943, 38.325, 0.29 ) }
    dend_73 { pt3dadd( -139.901, -91.5289, 38.374, 0.44 ) }
    dend_73 { pt3dadd( -139.896, -91.4667, 38.381, 0.44 ) }
    dend_73 { pt3dadd( -139.886, -91.1316, 38.4211, 0.44 ) }
    dend_73 { pt3dadd( -139.899, -90.2994, 38.5613, 0.29 ) }
    dend_73 { pt3dadd( -139.906, -90.1751, 38.5874, 0.29 ) }
    dend_73 { pt3dadd( -139.983, -89.1409, 38.8345, 0.29 ) }
    dend_73 { pt3dadd( -139.99, -89.0785, 38.8504, 0.29 ) }
    dend_73 { pt3dadd( -140.14, -87.9545, 39.1492, 0.29 ) }
    dend_73 { pt3dadd( -140.233, -87.297, 39.3268, 0.66 ) }
    dend_73 { pt3dadd( -140.295, -86.8223, 39.4541, 0.74 ) }
    dend_73 { pt3dadd( -140.305, -86.6992, 39.4845, 0.74 ) }
    dend_73 { pt3dadd( -140.323, -85.5464, 39.7361, 0.29 ) }
    dend_73 { pt3dadd( -140.318, -85.4276, 39.7578, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_73 { pt3dadd( -140.267, -84.705, 39.8495, 0.29 ) }
    dend_73 { pt3dadd( -140.225, -84.1986, 39.8947, 0.74 ) }
    dend_73 { pt3dadd( -140.135, -83.3956, 39.9561, 0.22 ) }
    dend_73 { pt3dadd( -139.966, -82.2389, 40.0317, 0.22 ) }
    dend_73 { pt3dadd( -139.741, -81.1881, 40.0849, 1.03 ) }
    dend_73 { pt3dadd( -139.484, -80.1308, 40.1317, 0.29 ) }
    dend_73 { pt3dadd( -139.431, -79.9325, 40.1398, 0.29 ) }
    dend_73 { pt3dadd( -139.128, -78.8612, 40.1809, 0.29 ) }
    dend_73 { pt3dadd( -139.068, -78.6652, 40.1882, 0.29 ) }
    dend_73 { pt3dadd( -138.511, -76.996, 40.2474, 0.29 ) }
    dend_73 { pt3dadd( -138.454, -76.8298, 40.2554, 0.29 ) }
    dend_73 { pt3dadd( -138.073, -75.6655, 40.2905, 0.29 ) }
    dend_73 { pt3dadd( -138.052, -75.5949, 40.2909, 0.29 ) }
    dend_73 { pt3dadd( -137.843, -74.6746, 40.2729, 0.44 ) }
    dend_73 { pt3dadd( -137.832, -74.6109, 40.2703, 0.44 ) }
    dend_73 { pt3dadd( -137.743, -73.8342, 40.2182, 0.44 ) }
    dend_73 { pt3dadd( -137.658, -73.0275, 40.1563, 0.74 ) }
    dend_73 { pt3dadd( -137.653, -72.9632, 40.1506, 0.74 ) }
    dend_73 { pt3dadd( -137.632, -72.5852, 40.1205, 1.03 ) }
    dend_73 { pt3dadd( -137.614, -71.8875, 40.0835, 0.59 ) }
    dend_73 { pt3dadd( -137.618, -71.1625, 40.1544, 0.29 ) }
    dend_73 { pt3dadd( -137.622, -71.0289, 40.1884, 0.29 ) }
    dend_73 { pt3dadd( -137.653, -70.5729, 40.371, 0.29 ) }
    dend_73 { pt3dadd( -137.659, -70.5064, 40.4014, 0.29 ) }
    dend_73 { pt3dadd( -137.74, -69.8079, 40.7534, 0.88 ) }
    dend_73 { pt3dadd( -137.87, -68.7905, 41.2618, 0.88 ) }
    dend_73 { pt3dadd( -137.885, -68.6756, 41.315, 0.88 ) }
    dend_73 { pt3dadd( -137.939, -68.1915, 41.5208, 0.66 ) }
    dend_73 { pt3dadd( -137.963, -67.7132, 41.7328, 0.29 ) }
    dend_73 { pt3dadd( -137.963, -67.2167, 41.9524, 0.29 ) }
    dend_73 { pt3dadd( -137.921, -66.2585, 42.3591, 0.29 ) }
    dend_73 { pt3dadd( -137.881, -65.7725, 42.5454, 0.44 ) }
    dend_73 { pt3dadd( -137.874, -65.7053, 42.5739, 0.44 ) }
    dend_73 { pt3dadd( -137.729, -64.7306, 43.0996, 0.37 ) }
    dend_73 { pt3dadd( -137.645, -64.0762, 43.4897, 0.29 ) }
    dend_73 { pt3dadd( -137.641, -64.0206, 43.5229, 0.29 ) }
    dend_73 { pt3dadd( -137.627, -63.5685, 43.7893, 0.74 ) }
    dend_73 { pt3dadd( -137.63, -63.5211, 43.8138, 0.74 ) }
    dend_73 { pt3dadd( -137.792, -62.288, 44.3796, 0.29 ) }
    dend_73 { pt3dadd( -138.013, -61.1498, 44.8099, 0.29 ) }
    dend_73 { pt3dadd( -138.21, -60.1953, 45.1682, 0.22 ) }
    dend_73 { pt3dadd( -138.25, -60.0113, 45.2377, 0.22 ) }
    dend_73 { pt3dadd( -138.542, -58.7491, 45.6944, 0.29 ) }
    dend_73 { pt3dadd( -138.557, -58.6812, 45.7174, 0.29 ) }
    dend_73 { pt3dadd( -138.817, -57.579, 46.0434, 0.29 ) }
    dend_73 { pt3dadd( -139.025, -56.6494, 46.3552, 0.29 ) }
    dend_73 { pt3dadd( -139.22, -55.7012, 46.7131, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 47/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -202.747, -208.872, 28.3519, 0.37 ) }
    dend_71 { pt3dadd( -202.734, -209.611, 28.2414, 0.37 ) }
    dend_71 { pt3dadd( -202.816, -211.165, 27.988, 0.37 ) }
    dend_71 { pt3dadd( -202.93, -212.463, 27.8078, 0.29 ) }
    dend_71 { pt3dadd( -203.003, -213.238, 27.6848, 0.44 ) }
    dend_71 { pt3dadd( -203.079, -214.006, 27.5703, 0.44 ) }
    dend_71 { pt3dadd( -203.243, -215.513, 27.367, 0.29 ) }
    dend_71 { pt3dadd( -203.325, -216.063, 27.2933, 0.37 ) }
    dend_71 { pt3dadd( -203.492, -216.83, 27.2067, 0.37 ) }
    dend_71 { pt3dadd( -203.817, -218.402, 26.9701, 0.37 ) }
    dend_71 { pt3dadd( -203.954, -219.139, 26.8458, 0.37 ) }
    dend_71 { pt3dadd( -204.036, -219.665, 26.7591, 0.66 ) }
    dend_71 { pt3dadd( -204.048, -219.736, 26.7483, 0.66 ) }
    dend_71 { pt3dadd( -204.14, -220.213, 26.6542, 0.74 ) }
    dend_71 { pt3dadd( -204.421, -221.423, 26.3529, 0.37 ) }
    dend_71 { pt3dadd( -204.642, -222.129, 26.165, 0.37 ) }
    dend_71 { pt3dadd( -204.667, -222.206, 26.136, 0.37 ) }
    dend_71 { pt3dadd( -204.854, -222.773, 25.8861, 0.37 ) }
    dend_71 { pt3dadd( -206.312, -233.018, 26.0493, 0.37 ) }
    dend_71 { pt3dadd( -207.28, -243.084, 28.1031, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 67/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -202.747, -208.872, 28.3519, 0.29 ) }
    dend_70 { pt3dadd( -204.091, -208.646, 28.5469, 0.29 ) }
    dend_70 { pt3dadd( -205.343, -208.472, 28.8739, 0.52 ) }
    dend_70 { pt3dadd( -207.121, -208.325, 29.3618, 0.44 ) }
    dend_70 { pt3dadd( -207.743, -208.336, 29.5314, 0.29 ) }
    dend_70 { pt3dadd( -208.909, -208.443, 29.8165, 0.29 ) }
    dend_70 { pt3dadd( -209.868, -208.545, 30.0733, 0.44 ) }
    dend_70 { pt3dadd( -212.185, -208.846, 30.7844, 0.29 ) }
    dend_70 { pt3dadd( -213.149, -208.976, 31.0583, 0.29 ) }
    dend_70 { pt3dadd( -214.542, -209.19, 31.4472, 0.29 ) }
    dend_70 { pt3dadd( -215.875, -209.385, 31.8753, 0.29 ) }
    dend_70 { pt3dadd( -217.285, -209.566, 32.3579, 0.29 ) }
    dend_70 { pt3dadd( -217.354, -209.575, 32.3816, 0.29 ) }
    dend_70 { pt3dadd( -218.569, -209.674, 32.7494, 0.44 ) }
    dend_70 { pt3dadd( -220.356, -209.643, 33.3667, 0.44 ) }
    dend_70 { pt3dadd( -220.531, -209.619, 33.4327, 0.44 ) }
    dend_70 { pt3dadd( -221.502, -209.463, 33.8367, 0.66 ) }
    dend_70 { pt3dadd( -222.514, -209.411, 34.1575, 0.66 ) }
    dend_70 { pt3dadd( -234.088, -209.458, 37.844, 0.66 ) }
    dend_70 { pt3dadd( -244.559, -208.784, 43.9655, 0.66 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 87/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 52.586, -238.196, -34.5136, 0.52 ) }
    dend_64 { pt3dadd( 51.4332, -239.187, -34.4384, 0.52 ) }
    dend_64 { pt3dadd( 50.5442, -239.995, -34.4045, 0.29 ) }
    dend_64 { pt3dadd( 49.6153, -240.924, -34.4069, 0.22 ) }
    dend_64 { pt3dadd( 49.1439, -241.42, -34.3915, 0.52 ) }
    dend_64 { pt3dadd( 48.7222, -241.874, -34.3678, 0.74 ) }
    dend_64 { pt3dadd( 48.1888, -242.459, -34.3337, 0.81 ) }
    dend_64 { pt3dadd( 47.6912, -243.003, -34.3057, 0.66 ) }
    dend_64 { pt3dadd( 46.9874, -243.79, -34.2949, 0.29 ) }
    dend_64 { pt3dadd( 46.2112, -244.79, -34.2645, 0.29 ) }
    dend_64 { pt3dadd( 46.1635, -244.856, -34.2623, 0.29 ) }
    dend_64 { pt3dadd( 46.0161, -245.069, -34.2557, 0.66 ) }
    dend_64 { pt3dadd( 45.5903, -245.678, -34.2346, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_64 { pt3dadd( 45.0519, -246.428, -34.2143, 0.22 ) }
    dend_64 { pt3dadd( 44.586, -247.075, -34.2175, 0.22 ) }
    dend_64 { pt3dadd( 44.3748, -247.398, -34.2539, 0.52 ) }
    dend_64 { pt3dadd( 44.1189, -247.804, -34.3003, 0.52 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 52.586, -238.196, -34.5136, 1.18 ) }
    dend_63 { pt3dadd( 53.1199, -239.017, -34.3188, 1.18 ) }
    dend_63 { pt3dadd( 53.3282, -239.402, -34.2263, 1.4 ) }
    dend_63 { pt3dadd( 53.6356, -240.143, -33.9994, 0.37 ) }
    dend_63 { pt3dadd( 53.7896, -240.835, -33.7193, 0.44 ) }
    dend_63 { pt3dadd( 53.8205, -241.422, -33.4618, 0.66 ) }
    dend_63 { pt3dadd( 53.7355, -242.264, -33.0364, 0.66 ) }
    dend_63 { pt3dadd( 53.6259, -242.696, -32.8076, 0.66 ) }
    dend_63 { pt3dadd( 53.3096, -243.681, -32.2856, 0.59 ) }
    dend_63 { pt3dadd( 52.8488, -244.957, -31.6133, 0.37 ) }
    dend_63 { pt3dadd( 52.5737, -245.712, -31.2186, 1.55 ) }
    dend_63 { pt3dadd( 52.1556, -247.064, -30.5481, 0.37 ) }
    dend_63 { pt3dadd( 51.9734, -247.916, -30.1811, 0.44 ) }
    dend_63 { pt3dadd( 51.9005, -248.769, -29.8695, 0.44 ) }
    dend_63 { pt3dadd( 51.9339, -249.25, -29.7476, 0.88 ) }
    dend_63 { pt3dadd( 52.0266, -249.693, -29.6784, 1.03 ) }
    dend_63 { pt3dadd( 52.2402, -250.56, -29.5876, 0.37 ) }
    dend_63 { pt3dadd( 52.4023, -251.234, -29.5679, 0.37 ) }
    dend_63 { pt3dadd( 52.4686, -251.571, -29.5561, 0.88 ) }
    dend_63 { pt3dadd( 52.5444, -252.029, -29.5388, 0.96 ) }
    dend_63 { pt3dadd( 52.6373, -252.787, -29.5105, 0.96 ) }
    dend_63 { pt3dadd( 52.7416, -253.727, -29.4756, 0.29 ) }
    dend_63 { pt3dadd( 52.8635, -254.685, -29.3667, 0.29 ) }
    dend_63 { pt3dadd( 52.9146, -255.029, -29.3042, 0.66 ) }
    dend_63 { pt3dadd( 52.9779, -255.423, -29.1863, 0.88 ) }
    dend_63 { pt3dadd( 52.988, -255.481, -29.1632, 0.88 ) }
    dend_63 { pt3dadd( 53.078, -255.959, -28.9308, 0.74 ) }
    dend_63 { pt3dadd( 53.2512, -257.156, -28.2775, 0.29 ) }
    dend_63 { pt3dadd( 53.3043, -257.791, -27.9297, 0.29 ) }
    dend_63 { pt3dadd( 53.4082, -258.64, -27.5077, 1.11 ) }
    dend_63 { pt3dadd( 53.4981, -259.057, -27.3227, 1.11 ) }
    dend_63 { pt3dadd( 53.5159, -259.115, -27.3012, 1.11 ) }
    dend_63 { pt3dadd( 53.7079, -259.6, -27.1593, 1.11 ) }
    dend_63 { pt3dadd( 54.2572, -260.716, -26.8671, 0.29 ) }
    dend_63 { pt3dadd( 54.7579, -261.656, -26.6174, 0.29 ) }
    dend_63 { pt3dadd( 55.1925, -262.478, -26.4015, 0.29 ) }
    dend_63 { pt3dadd( 55.4239, -262.938, -26.2709, 0.81 ) }
    dend_63 { pt3dadd( 55.6799, -263.501, -26.0821, 0.96 ) }
    dend_63 { pt3dadd( 56.1461, -264.586, -25.5626, 0.96 ) }
    dend_63 { pt3dadd( 56.3835, -265.229, -25.1872, 0.37 ) }
    dend_63 { pt3dadd( 56.5689, -265.87, -24.7714, 0.88 ) }
    dend_63 { pt3dadd( 56.6868, -266.391, -24.4239, 0.88 ) }
    dend_63 { pt3dadd( 56.8815, -267.428, -23.7422, 0.59 ) }
    dend_63 { pt3dadd( 57.0986, -268.835, -22.8863, 0.44 ) }
    dend_63 { pt3dadd( 57.176, -269.395, -22.6004, 0.59 ) }
    dend_63 { pt3dadd( 57.2249, -269.85, -22.4051, 0.59 ) }
    dend_63 { pt3dadd( 57.2805, -270.574, -22.1791, 0.88 ) }
    dend_63 { pt3dadd( 57.333, -271.227, -22.0566, 0.29 ) }
    dend_63 { pt3dadd( 57.3964, -271.989, -21.9975, 0.29 ) }
    dend_63 { pt3dadd( 57.4716, -272.779, -21.9553, 0.37 ) }
    dend_63 { pt3dadd( 57.5739, -273.641, -21.8712, 0.96 ) }
    dend_63 { pt3dadd( 57.6551, -274.264, -21.7893, 1.33 ) }
    dend_63 { pt3dadd( 57.7998, -275.298, -21.5712, 0.37 ) }
    dend_63 { pt3dadd( 57.8893, -276.04, -21.3671, 0.52 ) }
    dend_63 { pt3dadd( 57.9762, -277.002, -21.0534, 0.44 ) }
    dend_63 { pt3dadd( 58.0142, -277.508, -20.8707, 0.29 ) }
    dend_63 { pt3dadd( 58.0611, -278.055, -20.6636, 0.88 ) }
    dend_63 { pt3dadd( 58.1287, -279.026, -20.2999, 0.74 ) }
    dend_63 { pt3dadd( 58.1832, -279.662, -20.0374, 0.29 ) }
    dend_63 { pt3dadd( 58.2798, -280.253, -19.7986, 0.59 ) }
    dend_63 { pt3dadd( 58.4011, -280.891, -19.5559, 0.74 ) }
    dend_63 { pt3dadd( 58.5029, -281.408, -19.3316, 0.88 ) }
    dend_63 { pt3dadd( 58.5138, -281.471, -19.3028, 0.88 ) }
    dend_63 { pt3dadd( 58.6507, -282.77, -18.7361, 0.52 ) }
    dend_63 { pt3dadd( 58.6422, -283.283, -18.4986, 0.52 ) }
    dend_63 { pt3dadd( 58.5128, -284.051, -18.1057, 0.52 ) }
    dend_63 { pt3dadd( 58.3211, -284.846, -17.7009, 0.96 ) }
    dend_63 { pt3dadd( 58.2103, -285.259, -17.4623, 1.33 ) }
    dend_63 { pt3dadd( 58.0666, -285.847, -17.0965, 0.59 ) }
    dend_63 { pt3dadd( 57.8941, -286.594, -16.6348, 0.37 ) }
    dend_63 { pt3dadd( 57.718, -287.664, -15.9645, 0.44 ) }
    dend_63 { pt3dadd( 57.6685, -288.297, -15.5984, 0.66 ) }
    dend_63 { pt3dadd( 57.6684, -289.466, -15.0251, 0.96 ) }
    dend_63 { pt3dadd( 57.7401, -290.65, -14.4917, 0.44 ) }
    dend_63 { pt3dadd( 57.8035, -291.256, -14.2492, 1.03 ) }
    dend_63 { pt3dadd( 57.923, -291.976, -14.0126, 1.18 ) }
    dend_63 { pt3dadd( 58.1101, -292.965, -13.8077, 0.29 ) }
    dend_63 { pt3dadd( 58.2842, -293.908, -13.7304, 0.29 ) }
    dend_63 { pt3dadd( 58.3097, -294.049, -13.7382, 0.88 ) }
    dend_63 { pt3dadd( 58.3598, -294.385, -13.7794, 1.25 ) }
    dend_63 { pt3dadd( 58.4382, -295.08, -13.8432, 0.66 ) }
    dend_63 { pt3dadd( 58.4894, -295.844, -13.8872, 0.59 ) }
    dend_63 { pt3dadd( 58.5221, -296.905, -13.9123, 0.52 ) }
    dend_63 { pt3dadd( 58.5138, -297.535, -13.9163, 0.52 ) }
    dend_63 { pt3dadd( 58.4856, -298.44, -13.9068, 0.52 ) }
    dend_63 { pt3dadd( 58.4482, -299.294, -13.8545, 0.37 ) }
    dend_63 { pt3dadd( 58.3967, -300.084, -13.8168, 0.29 ) }
    dend_63 { pt3dadd( 58.3813, -300.397, -13.8087, 0.74 ) }
    dend_63 { pt3dadd( 58.3781, -300.583, -13.8108, 0.74 ) }
    dend_63 { pt3dadd( 58.3876, -301.097, -13.8511, 0.74 ) }
    dend_63 { pt3dadd( 58.4378, -301.924, -13.9757, 0.81 ) }
    dend_63 { pt3dadd( 58.5197, -303.192, -14.2733, 0.81 ) }
    dend_63 { pt3dadd( 58.6019, -304.015, -14.4898, 0.81 ) }
    dend_63 { pt3dadd( 58.7236, -304.927, -14.7348, 0.81 ) }
    dend_63 { pt3dadd( 58.7327, -304.986, -14.7505, 0.81 ) }
    dend_63 { pt3dadd( 58.8733, -305.785, -14.9589, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_63 { pt3dadd( 59.0746, -306.78, -15.2112, 0.44 ) }
    dend_63 { pt3dadd( 59.2247, -307.419, -15.3188, 0.44 ) }
    dend_63 { pt3dadd( 59.4202, -308.152, -15.4157, 0.29 ) }
    dend_63 { pt3dadd( 59.5875, -308.773, -15.4677, 0.74 ) }
    dend_63 { pt3dadd( 59.6731, -309.146, -15.4867, 0.96 ) }
    dend_63 { pt3dadd( 59.6833, -309.206, -15.484, 0.96 ) }
    dend_63 { pt3dadd( 59.7336, -309.848, -15.4069, 0.52 ) }
    dend_63 { pt3dadd( 59.718, -310.793, -15.2257, 0.52 ) }
    dend_63 { pt3dadd( 59.6626, -311.678, -15.0026, 0.52 ) }
    dend_63 { pt3dadd( 59.6295, -312.264, -14.8372, 0.59 ) }
    dend_63 { pt3dadd( 59.6077, -313.271, -14.5391, 0.74 ) }
    dend_63 { pt3dadd( 59.6222, -313.824, -14.372, 0.52 ) }
    dend_63 { pt3dadd( 59.6889, -314.839, -14.0819, 0.37 ) }
    dend_63 { pt3dadd( 59.6957, -314.9, -14.066, 0.37 ) }
    dend_63 { pt3dadd( 59.8893, -315.819, -13.8773, 0.44 ) }
    dend_63 { pt3dadd( 60.0956, -316.474, -13.7943, 0.37 ) }
    dend_63 { pt3dadd( 60.2773, -316.929, -13.7912, 0.74 ) }
    dend_63 { pt3dadd( 60.5618, -317.621, -13.8233, 0.29 ) }
    dend_63 { pt3dadd( 60.5795, -317.67, -13.8288, 0.29 ) }
    dend_63 { pt3dadd( 60.6824, -317.997, -13.8654, 0.44 ) }
    dend_63 { pt3dadd( 60.6934, -318.048, -13.8709, 0.44 ) }
    dend_63 { pt3dadd( 60.7538, -318.504, -13.9189, 0.44 ) }
    dend_63 { pt3dadd( 60.8444, -319.402, -13.991, 0.22 ) }
    dend_63 { pt3dadd( 60.9207, -320.037, -14.0045, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 29.4837, -184.983, -67.3998, 0.29 ) }
    dend_61 { pt3dadd( 29.2546, -184.647, -68.3066, 0.29 ) }
    dend_61 { pt3dadd( 29.2186, -184.604, -68.4176, 0.29 ) }
    dend_61 { pt3dadd( 29.028, -184.389, -68.9193, 0.29 ) }
    dend_61 { pt3dadd( 28.5352, -183.825, -70.0719, 0.29 ) }
    dend_61 { pt3dadd( 28.367, -183.6, -70.4946, 0.59 ) }
    dend_61 { pt3dadd( 27.9109, -182.901, -71.6602, 0.59 ) }
    dend_61 { pt3dadd( 27.673, -182.454, -72.2888, 0.37 ) }
    dend_61 { pt3dadd( 27.5608, -182.183, -72.6248, 0.66 ) }
    dend_61 { pt3dadd( 27.4581, -181.875, -72.9832, 0.88 ) }
    dend_61 { pt3dadd( 27.146, -180.747, -74.2201, 0.22 ) }
    dend_61 { pt3dadd( 27.0497, -180.307, -74.6877, 0.44 ) }
    dend_61 { pt3dadd( 26.9832, -179.91, -75.0754, 0.59 ) }
    dend_61 { pt3dadd( 26.9279, -179.231, -75.7762, 0.29 ) }
    dend_61 { pt3dadd( 26.902, -178.646, -76.4252, 0.74 ) }
    dend_61 { pt3dadd( 26.8894, -177.973, -77.2294, 1.03 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 40/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 29.4837, -184.983, -67.3998, 0.52 ) }
    dend_54 { pt3dadd( 29.7586, -186.574, -69.5401, 0.52 ) }
    dend_54 { pt3dadd( 29.7581, -186.62, -69.5897, 0.52 ) }
    dend_54 { pt3dadd( 29.7211, -187.058, -69.985, 0.52 ) }
    dend_54 { pt3dadd( 29.5619, -188.607, -71.1925, 1.33 ) }
    dend_54 { pt3dadd( 29.4937, -189.209, -71.6252, 1.77 ) }
    dend_54 { pt3dadd( 29.4053, -190.104, -72.1859, 0.66 ) }
    dend_54 { pt3dadd( 29.2493, -191.227, -72.711, 0.66 ) }
    dend_54 { pt3dadd( 29.1149, -192.738, -73.3991, 0.66 ) }
    dend_54 { pt3dadd( 29.12, -193.567, -73.7747, 0.88 ) }
    dend_54 { pt3dadd( 29.1474, -193.784, -73.863, 0.88 ) }
    dend_54 { pt3dadd( 29.4412, -195.125, -74.3954, 0.88 ) }
    dend_54 { pt3dadd( 29.4563, -195.177, -74.4163, 0.88 ) }
    dend_54 { pt3dadd( 30.0493, -196.803, -75.0243, 0.66 ) }
    dend_54 { pt3dadd( 30.6169, -198.064, -75.5146, 0.44 ) }
    dend_54 { pt3dadd( 31.0014, -198.824, -75.8507, 0.96 ) }
    dend_54 { pt3dadd( 31.5854, -199.903, -76.3691, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -137.442, -157.573, 49.2272, 0.29 ) }
    dend_38 { pt3dadd( -141.156, -162.156, 58.9343, 0.29 ) }
    dend_38 { pt3dadd( -145.419, -166.093, 68.7161, 0.29 ) }
    dend_38 { pt3dadd( -149.931, -170.374, 78.2294, 0.29 ) }
    dend_38 { pt3dadd( -155.752, -176.937, 85.3576, 0.29 ) }
    dend_38 { pt3dadd( -160.722, -183.385, 93.2039, 0.29 ) }
    dend_38 { pt3dadd( -165.399, -189.62, 101.403, 0.29 ) }
    dend_38 { pt3dadd( -170.214, -195.43, 109.849, 0.29 ) }
    dend_38 { pt3dadd( -174.761, -201.856, 117.965, 0.29 ) }
    dend_38 { pt3dadd( -178.979, -208.75, 125.851, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -137.442, -157.573, 49.2272, 0.44 ) }
    dend_37 { pt3dadd( -143.717, -165.166, 47.4892, 0.29 ) }
    dend_37 { pt3dadd( -150.905, -171.702, 44.9499, 0.29 ) }
    dend_37 { pt3dadd( -157.623, -178.739, 42.5348, 0.29 ) }
    dend_37 { pt3dadd( -163.04, -186.498, 39.2895, 0.29 ) }
    dend_37 { pt3dadd( -167.166, -194.519, 34.9717, 0.29 ) }
    dend_37 { pt3dadd( -170.466, -202.411, 29.7711, 0.29 ) }
    dend_37 { pt3dadd( -174.131, -209.448, 23.6124, 0.29 ) }
    dend_37 { pt3dadd( -178.813, -215.825, 17.3912, 0.29 ) }
    dend_37 { pt3dadd( -182.41, -223.745, 12.4419, 0.29 ) }
    dend_37 { pt3dadd( -186.26, -232.399, 9.33244, 0.29 ) }
    dend_37 { pt3dadd( -190.749, -241.192, 8.08298, 0.29 ) }
    dend_37 { pt3dadd( -196.85, -249.076, 8.55404, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 80/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 63.0278, 235.049, 53.3919, 0.29 ) }
    dend_10 { pt3dadd( 63.8139, 244.474, 54.7384, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 63.0278, 235.049, 53.3919, 0.44 ) }
    dend_9 { pt3dadd( 64.2518, 242.846, 56.2868, 0.29 ) }
    dend_9 { pt3dadd( 65.9386, 250.389, 59.629, 0.29 ) }
    dend_9 { pt3dadd( 67.2294, 257.98, 63.0363, 0.29 ) }
    dend_9 { pt3dadd( 68.7902, 265.096, 67.3077, 0.29 ) }
    dend_9 { pt3dadd( 68.7428, 272.546, 71.2501, 0.29 ) }
    dend_9 { pt3dadd( 68.776, 279.544, 75.9886, 0.29 ) }
    dend_9 { pt3dadd( 67.3732, 286.962, 79.7358, 0.29 ) }
    dend_9 { pt3dadd( 65.6305, 294.043, 83.9927, 0.29 ) }
    dend_9 { pt3dadd( 63.4031, 300.052, 89.5583, 0.29 ) }
    dend_9 { pt3dadd( 62.2372, 306.411, 95.0421, 0.29 ) }
    dend_9 { pt3dadd( 63.0766, 312.43, 100.972, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_73 (entry count 94/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -139.22, -55.7012, 46.7131, 0.22 ) }
    dend_83 { pt3dadd( -139.85, -55.7351, 46.8032, 0.22 ) }
    dend_83 { pt3dadd( -140.891, -55.7913, 46.9523, 0.22 ) }
    dend_83 { pt3dadd( -141.347, -55.8159, 47.0175, 0.52 ) }
    dend_83 { pt3dadd( -141.627, -55.8311, 47.0576, 0.74 ) }
    dend_83 { pt3dadd( -147.562, -55.1815, 48.4892, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_83 { pt3dadd( -153.394, -54.848, 50.3871, 0.74 ) }
    dend_83 { pt3dadd( -158.839, -53.7108, 52.9754, 0.74 ) }
    dend_83 { pt3dadd( -164.013, -53.3502, 56.264, 0.74 ) }
    dend_83 { pt3dadd( -168.818, -51.9375, 59.8001, 0.74 ) }
    dend_83 { pt3dadd( -172.777, -50.6008, 64.2883, 0.74 ) }
    dend_83 { pt3dadd( -175.722, -48.9403, 69.3984, 0.74 ) }
    dend_83 { pt3dadd( -178.461, -46.7895, 74.4283, 0.74 ) }
    dend_83 { pt3dadd( -181.44, -44.2064, 79.0944, 0.74 ) }
    dend_83 { pt3dadd( -183.984, -42.1743, 84.2771, 0.74 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 9/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -139.22, -55.7012, 46.7131, 0.44 ) }
    dend_74 { pt3dadd( -139.205, -54.8498, 46.8535, 0.44 ) }
    dend_74 { pt3dadd( -139.205, -54.2302, 46.9459, 0.66 ) }
    dend_74 { pt3dadd( -139.208, -54.1156, 46.9617, 0.66 ) }
    dend_74 { pt3dadd( -139.22, -53.7694, 47.0072, 0.59 ) }
    dend_74 { pt3dadd( -139.241, -52.975, 47.1043, 0.29 ) }
    dend_74 { pt3dadd( -139.245, -51.7026, 47.245, 0.29 ) }
    dend_74 { pt3dadd( -139.244, -51.5693, 47.2639, 0.29 ) }
    dend_74 { pt3dadd( -139.238, -50.641, 47.4257, 0.52 ) }
    dend_74 { pt3dadd( -139.237, -50.5709, 47.4394, 0.52 ) }
    dend_74 { pt3dadd( -139.212, -49.6188, 47.643, 0.52 ) }
    dend_74 { pt3dadd( -139.152, -48.462, 47.9045, 1.03 ) }
    dend_74 { pt3dadd( -139.022, -47.0487, 48.2485, 0.29 ) }
    dend_74 { pt3dadd( -139.015, -46.9878, 48.2639, 0.29 ) }
    dend_74 { pt3dadd( -138.872, -46.1699, 48.4928, 0.29 ) }
    dend_74 { pt3dadd( -138.734, -45.5974, 48.6508, 0.52 ) }
    dend_74 { pt3dadd( -138.557, -45.0177, 48.8104, 0.52 ) }
    dend_74 { pt3dadd( -138.326, -44.3887, 48.9628, 0.96 ) }
    dend_74 { pt3dadd( -138.307, -44.341, 48.9721, 0.96 ) }
    dend_74 { pt3dadd( -137.739, -42.9066, 49.2473, 0.29 ) }
    dend_74 { pt3dadd( -137.275, -41.7127, 49.4739, 0.29 ) }
    dend_74 { pt3dadd( -137.252, -41.6459, 49.4862, 0.29 ) }
    dend_74 { pt3dadd( -136.955, -40.5374, 49.6764, 0.29 ) }
    dend_74 { pt3dadd( -136.893, -40.1632, 49.7305, 0.59 ) }
    dend_74 { pt3dadd( -136.881, -39.9758, 49.7547, 0.59 ) }
    dend_74 { pt3dadd( -136.921, -39.4713, 49.8083, 0.52 ) }
    dend_74 { pt3dadd( -137.006, -38.94, 49.8721, 0.66 ) }
    dend_74 { pt3dadd( -137.101, -38.3798, 49.9403, 0.66 ) }
    dend_74 { pt3dadd( -137.267, -37.5137, 50.0483, 0.29 ) }
    dend_74 { pt3dadd( -137.288, -37.3827, 50.0724, 0.29 ) }
    dend_74 { pt3dadd( -137.354, -36.8196, 50.2015, 0.29 ) }
    dend_74 { pt3dadd( -137.381, -36.3865, 50.3586, 0.52 ) }
    dend_74 { pt3dadd( -137.382, -36.3306, 50.3841, 0.52 ) }
    dend_74 { pt3dadd( -137.343, -35.5352, 50.7874, 0.37 ) }
    dend_74 { pt3dadd( -137.251, -34.5868, 51.3068, 0.59 ) }
    dend_74 { pt3dadd( -137.186, -34.1202, 51.5595, 0.96 ) }
    dend_74 { pt3dadd( -136.961, -32.8203, 52.265, 0.37 ) }
    dend_74 { pt3dadd( -136.944, -32.7438, 52.3085, 0.37 ) }
    dend_74 { pt3dadd( -136.702, -31.8666, 52.8087, 0.37 ) }
    dend_74 { pt3dadd( -136.684, -31.8137, 52.8388, 0.37 ) }
    dend_74 { pt3dadd( -136.466, -31.1955, 53.1502, 0.37 ) }
    dend_74 { pt3dadd( -136.416, -31.0186, 53.219, 0.37 ) }
    dend_74 { pt3dadd( -136.196, -29.715, 53.5438, 0.59 ) }
    dend_74 { pt3dadd( -136.169, -29.4719, 53.5979, 0.88 ) }
    dend_74 { pt3dadd( -136.164, -29.41, 53.6092, 0.88 ) }
    dend_74 { pt3dadd( -136.127, -28.9046, 53.6861, 0.88 ) }
    dend_74 { pt3dadd( -135.995, -27.0666, 53.9012, 0.29 ) }
    dend_74 { pt3dadd( -135.857, -25.4602, 53.9839, 0.29 ) }
    dend_74 { pt3dadd( -135.835, -25.2308, 53.9831, 0.29 ) }
    dend_74 { pt3dadd( -135.65, -23.3682, 54.0129, 0.29 ) }
    dend_74 { pt3dadd( -135.63, -23.1089, 54.0225, 0.29 ) }
    dend_74 { pt3dadd( -135.556, -21.8774, 54.0892, 0.37 ) }
    dend_74 { pt3dadd( -135.514, -20.3553, 54.2139, 0.37 ) }
    dend_74 { pt3dadd( -135.521, -19.6139, 54.3371, 0.37 ) }
    dend_74 { pt3dadd( -135.573, -18.4834, 54.6139, 0.29 ) }
    dend_74 { pt3dadd( -135.695, -17.379, 54.9646, 0.29 ) }
    dend_74 { pt3dadd( -135.713, -17.2543, 55.0127, 0.29 ) }
    dend_74 { pt3dadd( -135.843, -16.7065, 55.3083, 0.29 ) }
    dend_74 { pt3dadd( -136.239, -15.4619, 56.2413, 1.18 ) }
    dend_74 { pt3dadd( -136.314, -15.2207, 56.4324, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 69/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 31.5854, -199.903, -76.3691, 0.88 ) }
    dend_56 { pt3dadd( 31.2316, -201.179, -77.0538, 0.88 ) }
    dend_56 { pt3dadd( 30.9996, -202.092, -77.4797, 1.47 ) }
    dend_56 { pt3dadd( 30.8172, -202.991, -77.8454, 1.69 ) }
    dend_56 { pt3dadd( 30.5471, -204.837, -78.4885, 0.59 ) }
    dend_56 { pt3dadd( 30.5412, -204.9, -78.51, 0.59 ) }
    dend_56 { pt3dadd( 30.4769, -206.034, -78.8868, 0.29 ) }
    dend_56 { pt3dadd( 30.4822, -206.93, -79.1477, 0.44 ) }
    dend_56 { pt3dadd( 30.5488, -207.712, -79.431, 0.66 ) }
    dend_56 { pt3dadd( 30.6964, -208.564, -79.8622, 1.11 ) }
    dend_56 { pt3dadd( 30.8905, -209.394, -80.3243, 1.47 ) }
    dend_56 { pt3dadd( 30.9844, -209.816, -80.5781, 1.47 ) }
    dend_56 { pt3dadd( 30.998, -209.884, -80.6207, 1.47 ) }
    dend_56 { pt3dadd( 31.2945, -211.874, -81.8122, 1.11 ) }
    dend_56 { pt3dadd( 31.4088, -213.684, -82.7552, 0.59 ) }
    dend_56 { pt3dadd( 31.4311, -214.62, -83.1382, 0.81 ) }
    dend_56 { pt3dadd( 31.4424, -215.484, -83.3981, 1.11 ) }
    dend_56 { pt3dadd( 31.4708, -216.373, -83.5817, 1.25 ) }
    dend_56 { pt3dadd( 31.5266, -217.676, -83.728, 0.66 ) }
    dend_56 { pt3dadd( 31.5896, -219.158, -83.7142, 0.52 ) }
    dend_56 { pt3dadd( 31.6664, -220.571, -83.6246, 1.03 ) }
    dend_56 { pt3dadd( 31.7154, -221.265, -83.5993, 1.25 ) }
    dend_56 { pt3dadd( 31.8586, -222.725, -83.5845, 0.66 ) }
    dend_56 { pt3dadd( 31.9085, -223.163, -83.6056, 0.44 ) }
    dend_56 { pt3dadd( 31.999, -223.733, -83.6651, 0.96 ) }
    dend_56 { pt3dadd( 32.0935, -224.23, -83.7433, 1.25 ) }
    dend_56 { pt3dadd( 32.3258, -225.514, -83.998, 1.11 ) }
    dend_56 { pt3dadd( 32.5033, -226.531, -84.237, 0.96 ) }
    dend_56 { pt3dadd( 32.6963, -227.639, -84.4693, 0.66 ) }
    dend_56 { pt3dadd( 32.8843, -228.801, -84.6617, 0.59 ) }
    dend_56 { pt3dadd( 32.8964, -228.88, -84.6716, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_56 { pt3dadd( 32.9942, -229.775, -84.7333, 0.59 ) }
    dend_56 { pt3dadd( 32.9878, -230.976, -84.7148, 0.52 ) }
    dend_56 { pt3dadd( 32.7973, -232.147, -84.6251, 0.81 ) }
    dend_56 { pt3dadd( 32.4989, -233.011, -84.5063, 1.03 ) }
    dend_56 { pt3dadd( 32.4424, -233.12, -84.4897, 1.03 ) }
    dend_56 { pt3dadd( 31.9752, -233.916, -84.3608, 1.03 ) }
    dend_56 { pt3dadd( 31.23, -234.949, -84.172, 0.52 ) }
    dend_56 { pt3dadd( 30.7531, -235.508, -84.0554, 1.11 ) }
    dend_56 { pt3dadd( 30.1864, -236.102, -83.9966, 1.33 ) }
    dend_56 { pt3dadd( 30.128, -236.158, -83.99, 1.33 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 10/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 31.5854, -199.903, -76.3691, 0.52 ) }
    dend_55 { pt3dadd( 31.9061, -200.075, -76.0203, 0.52 ) }
    dend_55 { pt3dadd( 32.4797, -200.388, -75.351, 0.29 ) }
    dend_55 { pt3dadd( 32.8192, -200.581, -74.9608, 0.59 ) }
    dend_55 { pt3dadd( 33.0175, -200.698, -74.7145, 0.96 ) }
    dend_55 { pt3dadd( 33.6195, -201.059, -73.9578, 0.22 ) }
    dend_55 { pt3dadd( 34.0337, -201.302, -73.4459, 0.59 ) }
    dend_55 { pt3dadd( 34.0558, -201.315, -73.4183, 0.59 ) }
    dend_55 { pt3dadd( 34.3705, -201.49, -73.0651, 0.52 ) }
    dend_55 { pt3dadd( 34.8299, -201.79, -72.5368, 0.37 ) }
    dend_55 { pt3dadd( 35.0276, -201.939, -72.3201, 0.81 ) }
    dend_55 { pt3dadd( 35.1932, -202.074, -72.1686, 0.96 ) }
    dend_55 { pt3dadd( 35.6224, -202.439, -71.8167, 0.37 ) }
    dend_55 { pt3dadd( 36.0427, -202.775, -71.565, 0.37 ) }
    dend_55 { pt3dadd( 36.4753, -203.106, -71.4054, 0.44 ) }
    dend_55 { pt3dadd( 36.744, -203.301, -71.3629, 0.44 ) }
    dend_55 { pt3dadd( 37.109, -203.566, -71.3117, 0.22 ) }
    dend_55 { pt3dadd( 37.3717, -203.745, -71.2779, 0.44 ) }
    dend_55 { pt3dadd( 38.3645, -204.358, -71.1624, 0.37 ) }
    dend_55 { pt3dadd( 38.7623, -204.583, -71.1165, 0.52 ) }
    dend_55 { pt3dadd( 39.2102, -204.818, -71.0635, 0.59 ) }
    dend_55 { pt3dadd( 39.7116, -205.064, -70.9771, 0.81 ) }
    dend_55 { pt3dadd( 40.2207, -205.305, -70.8532, 0.29 ) }
    dend_55 { pt3dadd( 40.6623, -205.502, -70.7015, 0.52 ) }
    dend_55 { pt3dadd( 40.8901, -205.597, -70.5916, 0.81 ) }
    dend_55 { pt3dadd( 41.1293, -205.674, -70.4857, 1.11 ) }
    dend_55 { pt3dadd( 41.2341, -205.7, -70.4449, 1.11 ) }
    dend_55 { pt3dadd( 41.4471, -205.74, -70.3752, 0.96 ) }
    dend_55 { pt3dadd( 41.827, -205.784, -70.2086, 0.59 ) }
    dend_55 { pt3dadd( 42.4137, -205.799, -69.8353, 0.29 ) }
    dend_55 { pt3dadd( 42.6907, -205.804, -69.6251, 0.52 ) }
    dend_55 { pt3dadd( 42.901, -205.809, -69.4489, 0.66 ) }
    dend_55 { pt3dadd( 42.9281, -205.811, -69.4246, 0.66 ) }
    dend_55 { pt3dadd( 43.5912, -205.895, -68.7816, 0.52 ) }
    dend_55 { pt3dadd( 44.0848, -205.982, -68.2747, 0.74 ) }
    dend_55 { pt3dadd( 44.5671, -206.079, -67.77, 0.22 ) }
    dend_55 { pt3dadd( 44.7021, -206.113, -67.6395, 0.74 ) }
    dend_55 { pt3dadd( 44.9521, -206.193, -67.4107, 0.81 ) }
    dend_55 { pt3dadd( 45.5187, -206.419, -66.9396, 0.22 ) }
    dend_55 { pt3dadd( 45.703, -206.514, -66.8154, 0.66 ) }
    dend_55 { pt3dadd( 45.8791, -206.618, -66.7071, 0.74 ) }
    dend_55 { pt3dadd( 46.2985, -206.908, -66.4396, 0.22 ) }
    dend_55 { pt3dadd( 46.6519, -207.192, -66.1947, 0.66 ) }
    dend_55 { pt3dadd( 46.7728, -207.3, -66.1085, 0.81 ) }
    dend_55 { pt3dadd( 46.9843, -207.524, -65.9574, 0.52 ) }
    dend_55 { pt3dadd( 47.0028, -207.544, -65.9438, 0.52 ) }
    dend_55 { pt3dadd( 47.2911, -207.874, -65.7479, 0.22 ) }
    dend_55 { pt3dadd( 47.6783, -208.332, -65.5188, 0.74 ) }
    dend_55 { pt3dadd( 47.9058, -208.571, -65.4415, 0.81 ) }
    dend_55 { pt3dadd( 47.9573, -208.62, -65.4293, 0.81 ) }
    dend_55 { pt3dadd( 48.2237, -208.844, -65.3963, 0.59 ) }
    dend_55 { pt3dadd( 48.5064, -209.047, -65.4151, 0.29 ) }
    dend_55 { pt3dadd( 48.8249, -209.258, -65.4834, 1.03 ) }
    dend_55 { pt3dadd( 49.3187, -209.607, -65.6427, 1.03 ) }
    dend_55 { pt3dadd( 49.409, -209.679, -65.6767, 1.25 ) }
    dend_55 { pt3dadd( 49.7281, -209.989, -65.8044, 0.66 ) }
    dend_55 { pt3dadd( 50.2219, -210.56, -66.0099, 0.52 ) }
    dend_55 { pt3dadd( 50.5006, -210.947, -66.1171, 0.37 ) }
    dend_55 { pt3dadd( 50.6909, -211.273, -66.1892, 0.29 ) }
    dend_55 { pt3dadd( 50.8333, -211.611, -66.2315, 0.29 ) }
    dend_55 { pt3dadd( 51.0295, -212.212, -66.2748, 0.29 ) }
    dend_55 { pt3dadd( 51.0869, -212.423, -66.2873, 0.81 ) }
    dend_55 { pt3dadd( 51.1624, -212.717, -66.2968, 1.03 ) }
    dend_55 { pt3dadd( 51.1744, -212.751, -66.2981, 1.03 ) }
    dend_55 { pt3dadd( 51.3904, -213.226, -66.3188, 0.59 ) }
    dend_55 { pt3dadd( 51.6251, -213.667, -66.3124, 0.44 ) }
    dend_55 { pt3dadd( 51.8939, -214.161, -66.2813, 0.88 ) }
    dend_55 { pt3dadd( 51.9702, -214.301, -66.267, 1.25 ) }
    dend_55 { pt3dadd( 52.106, -214.547, -66.2179, 1.55 ) }
    dend_55 { pt3dadd( 52.2862, -214.855, -66.1248, 0.29 ) }
    dend_55 { pt3dadd( 52.5602, -215.33, -65.838, 0.29 ) }
    dend_55 { pt3dadd( 52.7765, -215.725, -65.5166, 0.29 ) }
    dend_55 { pt3dadd( 52.7891, -215.75, -65.4944, 0.29 ) }
    dend_55 { pt3dadd( 52.976, -216.14, -65.1482, 1.47 ) }
    dend_55 { pt3dadd( 53.1319, -216.48, -64.8528, 1.77 ) }
    dend_55 { pt3dadd( 53.5417, -217.369, -64.0841, 0.37 ) }
    dend_55 { pt3dadd( 53.6831, -217.673, -63.8195, 0.22 ) }
    dend_55 { pt3dadd( 53.8677, -218.074, -63.4606, 0.29 ) }
    dend_55 { pt3dadd( 53.9492, -218.263, -63.302, 0.52 ) }
    dend_55 { pt3dadd( 54.0488, -218.526, -63.1148, 0.66 ) }
    dend_55 { pt3dadd( 54.0582, -218.556, -63.0966, 0.66 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 91/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -183.984, -42.1743, 84.2771, 0.37 ) }
    dend_85 { pt3dadd( -191.526, -39.54, 88.9195, 0.37 ) }
    dend_85 { pt3dadd( -199.48, -38.174, 93.4433, 0.37 ) }
    dend_85 { pt3dadd( -206.409, -35.6817, 99.0373, 0.37 ) }
    dend_85 { pt3dadd( -213.495, -34.4835, 104.87, 0.37 ) }
    dend_85 { pt3dadd( -221.184, -35.5334, 109.911, 0.37 ) }
    dend_85 { pt3dadd( -228.211, -35.9, 115.923, 0.37 ) }
    dend_85 { pt3dadd( -234.503, -36.8169, 122.639, 0.37 ) }
    dend_85 { pt3dadd( -238.803, -37.9374, 130.734, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_85 { pt3dadd( -242.105, -41.2788, 138.629, 0.37 ) }
    dend_85 { pt3dadd( -244.997, -46.1819, 145.787, 0.37 ) }
    dend_85 { pt3dadd( -247.024, -50.8608, 153.374, 0.37 ) }
    dend_85 { pt3dadd( -249.015, -55.4971, 160.998, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 4/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -183.984, -42.1743, 84.2771, 0.29 ) }
    dend_84 { pt3dadd( -191.488, -39.5864, 89.5619, 0.37 ) }
    dend_84 { pt3dadd( -199.39, -37.0911, 94.2807, 0.37 ) }
    dend_84 { pt3dadd( -207.605, -35.5362, 98.8884, 0.37 ) }
    dend_84 { pt3dadd( -214.569, -32.1345, 104.426, 0.37 ) }
    dend_84 { pt3dadd( -220.766, -28.8621, 110.887, 0.37 ) }
    dend_84 { pt3dadd( -227.225, -26.7596, 117.596, 0.37 ) }
    dend_84 { pt3dadd( -234.98, -24.2487, 122.545, 0.37 ) }
    dend_84 { pt3dadd( -243.612, -21.443, 125.431, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_74 (entry count 13/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -136.314, -15.2207, 56.4324, 0.59 ) }
    dend_82 { pt3dadd( -135.263, -14.8248, 57.0104, 0.59 ) }
    dend_82 { pt3dadd( -135.216, -14.8079, 57.037, 0.59 ) }
    dend_82 { pt3dadd( -134.283, -14.3863, 57.5605, 0.29 ) }
    dend_82 { pt3dadd( -133.8, -14.1053, 57.8098, 0.29 ) }
    dend_82 { pt3dadd( -133.756, -14.0765, 57.8321, 0.29 ) }
    dend_82 { pt3dadd( -132.801, -13.3626, 58.2546, 0.29 ) }
    dend_82 { pt3dadd( -132.772, -13.3347, 58.2652, 0.29 ) }
    dend_82 { pt3dadd( -131.991, -12.5064, 58.5025, 0.29 ) }
    dend_82 { pt3dadd( -131.127, -11.5482, 58.6727, 0.29 ) }
    dend_82 { pt3dadd( -131.056, -11.47, 58.6819, 0.29 ) }
    dend_82 { pt3dadd( -130.289, -10.6593, 58.7485, 0.74 ) }
    dend_82 { pt3dadd( -129.628, -10.0017, 58.8002, 0.29 ) }
    dend_82 { pt3dadd( -129.434, -9.83446, 58.8311, 0.29 ) }
    dend_82 { pt3dadd( -128.44, -9.06248, 58.999, 0.29 ) }
    dend_82 { pt3dadd( -127.961, -8.73094, 59.0947, 0.29 ) }
    dend_82 { pt3dadd( -127.163, -8.23365, 59.283, 0.29 ) }
    dend_82 { pt3dadd( -126.154, -7.72056, 59.5971, 0.29 ) }
    dend_82 { pt3dadd( -125.276, -7.33864, 59.9153, 0.88 ) }
    dend_82 { pt3dadd( -120.96, -2.3835, 62.0889, 0.88 ) }
    dend_82 { pt3dadd( -117.466, 2.58635, 65.3887, 0.88 ) }
    dend_82 { pt3dadd( -113.754, 7.77204, 68.0479, 0.88 ) }
    dend_82 { pt3dadd( -109.542, 12.7761, 70.3049, 0.88 ) }
    dend_82 { pt3dadd( -105.125, 17.403, 72.9718, 0.88 ) }
    dend_82 { pt3dadd( -101.191, 22.4613, 75.5712, 0.88 ) }
    dend_82 { pt3dadd( -96.8227, 27.086, 78.3198, 0.88 ) }
    dend_82 { pt3dadd( -91.7549, 30.997, 81.0392, 0.88 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 40/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -136.314, -15.2207, 56.4324, 0.59 ) }
    dend_75 { pt3dadd( -136.535, -14.6001, 56.8341, 0.59 ) }
    dend_75 { pt3dadd( -136.704, -14.0533, 57.21, 0.59 ) }
    dend_75 { pt3dadd( -136.838, -13.5262, 57.6064, 0.37 ) }
    dend_75 { pt3dadd( -136.989, -12.8563, 58.1229, 0.29 ) }
    dend_75 { pt3dadd( -137.09, -12.2363, 58.6382, 0.29 ) }
    dend_75 { pt3dadd( -137.096, -12.1933, 58.6752, 0.29 ) }
    dend_75 { pt3dadd( -137.13, -11.6623, 59.1645, 0.29 ) }
    dend_75 { pt3dadd( -137.152, -11.2021, 59.6102, 0.66 ) }
    dend_75 { pt3dadd( -137.158, -10.9055, 59.88, 0.81 ) }
    dend_75 { pt3dadd( -137.179, -10.2125, 60.4181, 0.29 ) }
    dend_75 { pt3dadd( -137.182, -10.1669, 60.452, 0.29 ) }
    dend_75 { pt3dadd( -137.221, -9.53574, 60.8614, 0.29 ) }
    dend_75 { pt3dadd( -137.224, -9.49171, 60.8851, 0.29 ) }
    dend_75 { pt3dadd( -137.276, -8.75589, 61.1958, 0.52 ) }
    dend_75 { pt3dadd( -137.325, -8.23546, 61.3776, 0.74 ) }
    dend_75 { pt3dadd( -137.333, -8.18153, 61.3928, 0.74 ) }
    dend_75 { pt3dadd( -137.422, -7.69642, 61.5595, 0.74 ) }
    dend_75 { pt3dadd( -137.431, -7.65042, 61.5771, 0.74 ) }
    dend_75 { pt3dadd( -137.591, -6.99468, 61.8527, 0.29 ) }
    dend_75 { pt3dadd( -137.787, -6.32031, 62.1596, 0.29 ) }
    dend_75 { pt3dadd( -138.078, -5.41794, 62.5848, 0.29 ) }
    dend_75 { pt3dadd( -138.316, -4.6358, 62.9406, 0.29 ) }
    dend_75 { pt3dadd( -138.338, -4.54664, 62.9809, 0.29 ) }
    dend_75 { pt3dadd( -138.439, -3.80273, 63.293, 0.29 ) }
    dend_75 { pt3dadd( -138.443, -3.75635, 63.3116, 0.29 ) }
    dend_75 { pt3dadd( -138.405, -2.99693, 63.5837, 0.29 ) }
    dend_75 { pt3dadd( -138.265, -1.84332, 63.9586, 0.29 ) }
    dend_75 { pt3dadd( -138.057, -0.313743, 64.4034, 0.29 ) }
    dend_75 { pt3dadd( -137.849, 1.08494, 64.8013, 0.29 ) }
    dend_75 { pt3dadd( -137.836, 1.17812, 64.8297, 0.29 ) }
    dend_75 { pt3dadd( -137.658, 2.5603, 65.2735, 0.29 ) }
    dend_75 { pt3dadd( -137.646, 2.65944, 65.3065, 0.29 ) }
    dend_75 { pt3dadd( -137.522, 4.26107, 65.8616, 0.29 ) }
    dend_75 { pt3dadd( -137.52, 4.31446, 65.8804, 0.29 ) }
    dend_75 { pt3dadd( -137.565, 5.74244, 66.424, 0.29 ) }
    dend_75 { pt3dadd( -137.571, 5.79492, 66.4448, 0.29 ) }
    dend_75 { pt3dadd( -137.794, 6.87178, 66.8644, 0.29 ) }
    dend_75 { pt3dadd( -137.86, 7.15119, 66.9642, 0.74 ) }
    dend_75 { pt3dadd( -137.873, 7.20339, 66.9819, 0.74 ) }
    dend_75 { pt3dadd( -137.974, 7.55775, 67.0864, 0.59 ) }
    dend_75 { pt3dadd( -138.291, 8.47233, 67.2484, 0.29 ) }
    dend_75 { pt3dadd( -138.524, 9.02329, 67.3394, 0.88 ) }
    dend_75 { pt3dadd( -138.737, 9.35849, 67.3841, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 84/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 30.128, -236.158, -83.99, 0.52 ) }
    dend_60 { pt3dadd( 29.7125, -236.85, -83.8682, 0.52 ) }
    dend_60 { pt3dadd( 29.4006, -237.404, -83.7768, 0.37 ) }
    dend_60 { pt3dadd( 29.119, -237.941, -83.6676, 0.29 ) }
    dend_60 { pt3dadd( 28.8948, -238.35, -83.5765, 0.66 ) }
    dend_60 { pt3dadd( 28.6959, -238.706, -83.4949, 0.66 ) }
    dend_60 { pt3dadd( 28.6679, -238.755, -83.4837, 0.66 ) }
    dend_60 { pt3dadd( 28.4843, -239.089, -83.407, 0.59 ) }
    dend_60 { pt3dadd( 28.1457, -239.674, -83.2836, 0.29 ) }
    dend_60 { pt3dadd( 27.8009, -240.287, -83.1622, 0.29 ) }
    dend_60 { pt3dadd( 27.6655, -240.545, -83.1158, 0.66 ) }
    dend_60 { pt3dadd( 27.4608, -240.97, -83.0478, 0.96 ) }
    dend_60 { pt3dadd( 27.3165, -241.327, -82.9967, 1.18 ) }
    dend_60 { pt3dadd( 27.058, -242.076, -82.9063, 0.29 ) }
    dend_60 { pt3dadd( 26.9148, -242.569, -82.8634, 0.29 ) }
    dend_60 { pt3dadd( 26.8374, -242.861, -82.836, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_60 { pt3dadd( 26.8051, -242.961, -82.8128, 0.52 ) }
    dend_60 { pt3dadd( 26.6469, -243.328, -82.6717, 0.22 ) }
    dend_60 { pt3dadd( 26.4673, -243.625, -82.5091, 0.44 ) }
    dend_60 { pt3dadd( 26.278, -243.87, -82.3128, 0.66 ) }
    dend_60 { pt3dadd( 26.0106, -244.17, -82.0523, 0.66 ) }
    dend_60 { pt3dadd( 25.345, -244.875, -81.4476, 0.29 ) }
    dend_60 { pt3dadd( 25.1538, -245.082, -81.2812, 0.96 ) }
    dend_60 { pt3dadd( 24.9621, -245.307, -81.1154, 1.25 ) }
    dend_60 { pt3dadd( 24.37, -246.132, -80.5737, 0.52 ) }
    dend_60 { pt3dadd( 24.0441, -246.679, -80.2721, 0.52 ) }
    dend_60 { pt3dadd( 23.7996, -247.15, -80.0618, 0.29 ) }
    dend_60 { pt3dadd( 23.5896, -247.57, -79.9284, 0.37 ) }
    dend_60 { pt3dadd( 23.357, -248.01, -79.8084, 0.44 ) }
    dend_60 { pt3dadd( 23.1662, -248.303, -79.7453, 0.44 ) }
    dend_60 { pt3dadd( 22.8251, -248.724, -79.6958, 0.22 ) }
    dend_60 { pt3dadd( 22.6016, -248.935, -79.67, 0.37 ) }
    dend_60 { pt3dadd( 22.1951, -249.243, -79.595, 0.59 ) }
    dend_60 { pt3dadd( 21.6346, -249.604, -79.4685, 1.18 ) }
    dend_60 { pt3dadd( 21.0965, -249.924, -79.3045, 0.74 ) }
    dend_60 { pt3dadd( 21.0486, -249.951, -79.2867, 0.74 ) }
    dend_60 { pt3dadd( 20.2872, -250.411, -78.9453, 0.37 ) }
    dend_60 { pt3dadd( 19.5787, -250.894, -78.5621, 0.29 ) }
    dend_60 { pt3dadd( 19.4109, -251.015, -78.4426, 0.59 ) }
    dend_60 { pt3dadd( 19.0169, -251.28, -78.0718, 0.74 ) }
    dend_60 { pt3dadd( 18.9742, -251.305, -78.0206, 0.74 ) }
    dend_60 { pt3dadd( 18.7624, -251.409, -77.6891, 0.74 ) }
    dend_60 { pt3dadd( 18.7417, -251.416, -77.6527, 0.74 ) }
    dend_60 { pt3dadd( 18.3451, -251.493, -76.9594, 0.29 ) }
    dend_60 { pt3dadd( 17.8806, -251.554, -76.1462, 0.59 ) }
    dend_60 { pt3dadd( 17.4876, -251.587, -75.4494, 0.96 ) }
    dend_60 { pt3dadd( 16.8096, -251.63, -74.2224, 0.59 ) }
    dend_60 { pt3dadd( 16.5336, -251.639, -73.7072, 0.29 ) }
    dend_60 { pt3dadd( 16.5096, -251.641, -73.6617, 0.29 ) }
    dend_60 { pt3dadd( 16.0795, -251.684, -72.8059, 0.88 ) }
    dend_60 { pt3dadd( 15.7069, -251.719, -72.0137, 1.03 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 30.128, -236.158, -83.99, 0.52 ) }
    dend_57 { pt3dadd( 30.3441, -236.868, -84.609, 0.52 ) }
    dend_57 { pt3dadd( 30.3537, -236.907, -84.638, 0.52 ) }
    dend_57 { pt3dadd( 30.473, -237.479, -85.0448, 0.66 ) }
    dend_57 { pt3dadd( 30.6841, -238.738, -85.8573, 0.44 ) }
    dend_57 { pt3dadd( 30.8046, -239.675, -86.446, 0.37 ) }
    dend_57 { pt3dadd( 30.8474, -240.189, -86.7488, 0.66 ) }
    dend_57 { pt3dadd( 30.8552, -240.769, -87.0447, 0.88 ) }
    dend_57 { pt3dadd( 30.831, -241.424, -87.3645, 0.88 ) }
    dend_57 { pt3dadd( 30.7799, -242.009, -87.6297, 0.88 ) }
    dend_57 { pt3dadd( 30.7073, -242.81, -87.9697, 0.59 ) }
    dend_57 { pt3dadd( 30.6757, -243.543, -88.2929, 0.37 ) }
    dend_57 { pt3dadd( 30.6898, -244.309, -88.6642, 0.37 ) }
    dend_57 { pt3dadd( 30.7756, -245.133, -89.0957, 0.74 ) }
    dend_57 { pt3dadd( 30.839, -245.486, -89.2804, 1.11 ) }
    dend_57 { pt3dadd( 31.1313, -246.726, -89.9824, 0.74 ) }
    dend_57 { pt3dadd( 31.2883, -247.313, -90.3252, 0.44 ) }
    dend_57 { pt3dadd( 31.2988, -247.354, -90.3492, 0.44 ) }
    dend_57 { pt3dadd( 31.5011, -248.228, -90.8415, 1.03 ) }
    dend_57 { pt3dadd( 31.5802, -248.695, -91.067, 1.33 ) }
    dend_57 { pt3dadd( 31.6531, -249.742, -91.4925, 0.66 ) }
    dend_57 { pt3dadd( 31.6239, -250.689, -91.7748, 0.66 ) }
    dend_57 { pt3dadd( 31.5498, -251.626, -92.0142, 0.88 ) }
    dend_57 { pt3dadd( 31.5463, -251.675, -92.0237, 0.88 ) }
    dend_57 { pt3dadd( 31.4954, -252.406, -92.1266, 1.11 ) }
    dend_57 { pt3dadd( 31.4373, -253.502, -92.2367, 1.03 ) }
    dend_57 { pt3dadd( 31.4079, -254.319, -92.2631, 0.52 ) }
    dend_57 { pt3dadd( 31.4066, -254.368, -92.2686, 0.52 ) }
    dend_57 { pt3dadd( 31.3801, -255.204, -92.442, 0.88 ) }
    dend_57 { pt3dadd( 31.356, -255.739, -92.5875, 0.96 ) }
    dend_57 { pt3dadd( 31.3297, -256.215, -92.7806, 0.96 ) }
    dend_57 { pt3dadd( 31.2855, -256.701, -93.0586, 0.66 ) }
    dend_57 { pt3dadd( 31.0692, -258.063, -93.9602, 0.44 ) }
    dend_57 { pt3dadd( 30.9746, -258.561, -94.3051, 0.96 ) }
    dend_57 { pt3dadd( 30.8645, -259.014, -94.6426, 1.25 ) }
    dend_57 { pt3dadd( 30.6288, -259.94, -95.3561, 1.11 ) }
    dend_57 { pt3dadd( 30.422, -260.742, -96.028, 0.74 ) }
    dend_57 { pt3dadd( 30.3051, -261.159, -96.403, 0.74 ) }
    // Section: dend_81, id: dend_81, parent: dend_75 (entry count 73/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -138.737, 9.35849, 67.3841, 0.29 ) }
    dend_81 { pt3dadd( -140.692, 9.60402, 67.5854, 0.29 ) }
    dend_81 { pt3dadd( -140.808, 9.61382, 67.6, 0.29 ) }
    dend_81 { pt3dadd( -142.279, 9.74611, 67.5862, 0.29 ) }
    dend_81 { pt3dadd( -142.396, 9.75686, 67.5798, 0.29 ) }
    dend_81 { pt3dadd( -143.739, 9.9509, 67.5007, 0.66 ) }
    dend_81 { pt3dadd( -144.764, 10.1362, 67.4426, 0.81 ) }
    dend_81 { pt3dadd( -144.852, 10.1536, 67.4378, 0.81 ) }
    dend_81 { pt3dadd( -147.503, 10.7589, 67.4506, 0.29 ) }
    dend_81 { pt3dadd( -147.743, 10.8205, 67.4607, 0.29 ) }
    dend_81 { pt3dadd( -149.657, 11.3788, 67.6237, 0.29 ) }
    dend_81 { pt3dadd( -151.849, 12.1169, 67.8992, 0.29 ) }
    dend_81 { pt3dadd( -151.944, 12.1523, 67.9172, 0.29 ) }
    dend_81 { pt3dadd( -153.892, 12.901, 68.4274, 0.44 ) }
    dend_81 { pt3dadd( -153.981, 12.9402, 68.4613, 0.44 ) }
    dend_81 { pt3dadd( -154.696, 13.2782, 68.7345, 0.44 ) }
    dend_81 { pt3dadd( -154.78, 13.3217, 68.7677, 0.44 ) }
    dend_81 { pt3dadd( -156.277, 14.2185, 69.334, 0.29 ) }
    dend_81 { pt3dadd( -156.458, 14.3333, 69.3816, 0.29 ) }
    dend_81 { pt3dadd( -157.666, 15.1488, 69.5531, 0.29 ) }
    dend_81 { pt3dadd( -158.264, 15.5672, 69.6313, 0.59 ) }
    dend_81 { pt3dadd( -158.44, 15.696, 69.6522, 0.59 ) }
    dend_81 { pt3dadd( -158.971, 16.0748, 69.7146, 0.59 ) }
    dend_81 { pt3dadd( -160.277, 16.9877, 69.8628, 0.37 ) }
    dend_81 { pt3dadd( -160.47, 17.1138, 69.8867, 0.37 ) }
    dend_81 { pt3dadd( -161.513, 17.7872, 69.9366, 0.37 ) }
    dend_81 { pt3dadd( -161.598, 17.8437, 69.9365, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_81 { pt3dadd( -162.789, 18.5858, 69.9099, 0.37 ) }
    dend_81 { pt3dadd( -162.979, 18.699, 69.9019, 0.37 ) }
    dend_81 { pt3dadd( -164.227, 19.3706, 69.8864, 0.37 ) }
    dend_81 { pt3dadd( -165.879, 20.1706, 69.9143, 0.22 ) }
    dend_81 { pt3dadd( -166.092, 20.2586, 69.9294, 0.22 ) }
    dend_81 { pt3dadd( -167.27, 20.6813, 70.0774, 0.22 ) }
    dend_81 { pt3dadd( -167.367, 20.7104, 70.097, 0.22 ) }
    dend_81 { pt3dadd( -168.589, 20.9064, 70.6661, 0.81 ) }
    dend_81 { pt3dadd( -168.989, 20.9311, 70.9271, 0.81 ) }
    dend_81 { pt3dadd( -170.083, 20.9094, 71.7203, 0.22 ) }
    dend_81 { pt3dadd( -170.167, 20.9004, 71.7804, 0.22 ) }
    dend_81 { pt3dadd( -171.091, 20.7341, 72.4911, 0.22 ) }
    dend_81 { pt3dadd( -173.677, 20.1795, 74.4282, 0.22 ) }
    dend_81 { pt3dadd( -173.853, 20.1388, 74.5564, 0.22 ) }
    dend_81 { pt3dadd( -175.11, 19.8441, 75.4566, 0.22 ) }
    dend_81 { pt3dadd( -176.315, 19.5554, 76.2991, 0.22 ) }
    dend_81 { pt3dadd( -178.161, 19.1425, 77.5364, 0.22 ) }
    dend_81 { pt3dadd( -179.497, 18.877, 78.3767, 0.22 ) }
    dend_81 { pt3dadd( -179.601, 18.8648, 78.4314, 0.22 ) }
    dend_81 { pt3dadd( -181.184, 18.9143, 79.1978, 0.52 ) }
    dend_81 { pt3dadd( -181.663, 19.0507, 79.3971, 0.81 ) }
    dend_81 { pt3dadd( -181.848, 19.1473, 79.4562, 0.81 ) }
    dend_81 { pt3dadd( -182.296, 19.4476, 79.5411, 0.81 ) }
    dend_81 { pt3dadd( -182.392, 19.5137, 79.5447, 0.81 ) }
    dend_81 { pt3dadd( -183.863, 20.4558, 79.4566, 0.37 ) }
    dend_81 { pt3dadd( -184.69, 20.9817, 79.3326, 0.59 ) }
    dend_81 { pt3dadd( -184.776, 21.0355, 79.3161, 0.59 ) }
    dend_81 { pt3dadd( -185.851, 21.7285, 79.0891, 0.44 ) }
    dend_81 { pt3dadd( -187.675, 22.8454, 78.4718, 0.29 ) }
    dend_81 { pt3dadd( -187.853, 22.9506, 78.396, 0.29 ) }
    dend_81 { pt3dadd( -188.893, 23.4558, 77.763, 0.29 ) }
    dend_81 { pt3dadd( -188.962, 23.4861, 77.7148, 0.29 ) }
    dend_81 { pt3dadd( -190.023, 23.9094, 76.9597, 0.29 ) }
    dend_81 { pt3dadd( -191.828, 24.513, 75.3613, 0.29 ) }
    dend_81 { pt3dadd( -191.889, 24.5296, 75.3037, 0.29 ) }
    dend_81 { pt3dadd( -194.056, 24.9359, 73.2529, 0.29 ) }
    dend_81 { pt3dadd( -194.119, 24.9432, 73.1955, 0.29 ) }
    dend_81 { pt3dadd( -194.771, 25.0041, 72.6454, 0.66 ) }
    dend_81 { pt3dadd( -197.791, 25.1603, 70.2916, 0.37 ) }
    dend_81 { pt3dadd( -197.984, 25.1673, 70.1626, 0.37 ) }
    dend_81 { pt3dadd( -199.075, 25.1854, 69.5386, 0.29 ) }
    dend_81 { pt3dadd( -200.156, 25.2068, 69.0984, 0.15 ) }
    dend_81 { pt3dadd( -200.82, 25.2204, 68.8818, 0.74 ) }
    dend_81 { pt3dadd( -201.123, 25.2249, 68.8293, 0.74 ) }
    dend_81 { pt3dadd( -203.111, 25.2505, 68.8439, 0.37 ) }
    dend_81 { pt3dadd( -204.055, 25.3025, 68.8564, 0.29 ) }
    dend_81 { pt3dadd( -205.319, 25.4559, 68.931, 0.29 ) }
    dend_81 { pt3dadd( -205.463, 25.4786, 68.9475, 0.29 ) }
    dend_81 { pt3dadd( -207.253, 25.8127, 69.2926, 0.29 ) }
    dend_81 { pt3dadd( -207.461, 25.8628, 69.3494, 0.29 ) }
    dend_81 { pt3dadd( -208.597, 26.2044, 69.761, 0.29 ) }
    dend_81 { pt3dadd( -209.698, 26.5603, 70.1521, 0.29 ) }
    dend_81 { pt3dadd( -209.794, 26.5875, 70.1798, 0.29 ) }
    dend_81 { pt3dadd( -211.3, 26.9834, 70.5275, 0.29 ) }
    dend_81 { pt3dadd( -212.77, 27.3194, 70.7307, 0.29 ) }
    dend_81 { pt3dadd( -213.058, 27.3729, 70.7557, 0.29 ) }
    dend_81 { pt3dadd( -214.424, 27.6212, 70.7273, 0.29 ) }
    dend_81 { pt3dadd( -215.96, 27.9699, 70.5791, 0.52 ) }
    dend_81 { pt3dadd( -216.741, 28.1971, 70.475, 0.66 ) }
    dend_81 { pt3dadd( -218.544, 28.8347, 70.1606, 0.29 ) }
    dend_81 { pt3dadd( -220.554, 29.6362, 69.7679, 1.11 ) }
    dend_81 { pt3dadd( -222.6, 30.4791, 69.2706, 0.29 ) }
    dend_81 { pt3dadd( -223.703, 30.9574, 68.9606, 0.29 ) }
    dend_81 { pt3dadd( -224.65, 31.3873, 68.6962, 0.74 ) }
    dend_81 { pt3dadd( -224.854, 31.4797, 68.6344, 0.74 ) }
    dend_81 { pt3dadd( -225.429, 31.7416, 68.4498, 0.74 ) }
    dend_81 { pt3dadd( -228.391, 32.9441, 67.4312, 0.29 ) }
    dend_81 { pt3dadd( -228.531, 32.9911, 67.3885, 0.29 ) }
    dend_81 { pt3dadd( -229.603, 33.3181, 67.0585, 0.29 ) }
    dend_81 { pt3dadd( -229.682, 33.3431, 67.0341, 0.29 ) }
    dend_81 { pt3dadd( -231.03, 33.7984, 66.6355, 0.59 ) }
    dend_81 { pt3dadd( -233.559, 34.7897, 65.9589, 0.29 ) }
    dend_81 { pt3dadd( -233.661, 34.8431, 65.9401, 0.29 ) }
    dend_81 { pt3dadd( -234.399, 35.3089, 65.8151, 0.29 ) }
    dend_81 { pt3dadd( -234.79, 35.6485, 65.7484, 0.59 ) }
    dend_81 { pt3dadd( -234.869, 35.7323, 65.7373, 0.59 ) }
    dend_81 { pt3dadd( -235.472, 36.4975, 65.6755, 0.59 ) }
    dend_81 { pt3dadd( -236.045, 37.3205, 65.6418, 0.29 ) }
    dend_81 { pt3dadd( -236.564, 37.9753, 65.611, 0.29 ) }
    dend_81 { pt3dadd( -238.235, 39.8251, 65.5173, 0.29 ) }
    dend_81 { pt3dadd( -238.301, 39.8856, 65.5156, 0.29 ) }
    dend_81 { pt3dadd( -239.241, 40.654, 65.5088, 0.29 ) }
    dend_81 { pt3dadd( -239.677, 40.953, 65.5159, 0.29 ) }
    dend_81 { pt3dadd( -240.914, 41.6225, 65.5745, 0.52 ) }
    dend_81 { pt3dadd( -241.461, 41.8554, 65.6299, 0.59 ) }
    dend_81 { pt3dadd( -243.063, 42.3993, 65.8915, 0.22 ) }
    dend_81 { pt3dadd( -243.499, 42.5475, 65.9449, 0.22 ) }
    dend_81 { pt3dadd( -244.393, 42.9012, 66.0275, 0.22 ) }
    dend_81 { pt3dadd( -245.241, 43.3135, 66.0754, 0.81 ) }
    dend_81 { pt3dadd( -245.825, 43.6364, 66.0869, 1.03 ) }
    dend_81 { pt3dadd( -246.772, 44.1706, 66.0806, 0.52 ) }
    dend_81 { pt3dadd( -248.517, 45.1396, 66.0372, 0.29 ) }
    dend_81 { pt3dadd( -250.523, 46.2167, 65.9811, 0.22 ) }
    dend_81 { pt3dadd( -252.451, 47.3104, 65.8962, 0.22 ) }
    dend_81 { pt3dadd( -252.68, 47.4497, 65.883, 0.22 ) }
    dend_81 { pt3dadd( -253.638, 48.0499, 65.8245, 0.74 ) }
    dend_81 { pt3dadd( -254.157, 48.3706, 65.8021, 0.74 ) }
    dend_81 { pt3dadd( -254.79, 48.7347, 65.8445, 0.74 ) }
    dend_81 { pt3dadd( -268.234, 53.0624, 64.2749, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 99/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -138.737, 9.35849, 67.3841, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_76 { pt3dadd( -138.64, 10.0874, 67.4052, 0.29 ) }
    dend_76 { pt3dadd( -138.458, 11.3697, 67.3883, 0.29 ) }
    dend_76 { pt3dadd( -138.45, 11.4236, 67.387, 0.29 ) }
    dend_76 { pt3dadd( -138.286, 12.6308, 67.3551, 0.29 ) }
    dend_76 { pt3dadd( -138.279, 12.6913, 67.3539, 0.29 ) }
    dend_76 { pt3dadd( -138.124, 14.4895, 67.3346, 0.52 ) }
    dend_76 { pt3dadd( -138.073, 15.4992, 67.3392, 0.52 ) }
    dend_76 { pt3dadd( -138.067, 16.2271, 67.3458, 0.52 ) }
    dend_76 { pt3dadd( -138.074, 16.4323, 67.3462, 0.52 ) }
    dend_76 { pt3dadd( -138.148, 17.313, 67.4219, 0.52 ) }
    dend_76 { pt3dadd( -138.243, 17.9784, 67.5412, 0.81 ) }
    dend_76 { pt3dadd( -138.276, 18.1015, 67.5823, 0.81 ) }
    dend_76 { pt3dadd( -138.453, 18.6086, 67.821, 0.66 ) }
    dend_76 { pt3dadd( -138.659, 19.0904, 68.0781, 0.37 ) }
    dend_76 { pt3dadd( -139.332, 20.5347, 68.9022, 0.37 ) }
    dend_76 { pt3dadd( -139.357, 20.5853, 68.9296, 0.37 ) }
    dend_76 { pt3dadd( -139.635, 21.0922, 69.1788, 0.52 ) }
    dend_76 { pt3dadd( -139.676, 21.1659, 69.2069, 0.52 ) }
    dend_76 { pt3dadd( -140.207, 22.0952, 69.4801, 0.44 ) }
    dend_76 { pt3dadd( -140.269, 22.2028, 69.5018, 0.44 ) }
    dend_76 { pt3dadd( -140.737, 22.9697, 69.5559, 0.44 ) }
    dend_76 { pt3dadd( -140.871, 23.2052, 69.5725, 0.44 ) }
    dend_76 { pt3dadd( -141.476, 24.4091, 69.6602, 0.44 ) }
    dend_76 { pt3dadd( -141.502, 24.4661, 69.6647, 0.44 ) }
    dend_76 { pt3dadd( -141.743, 25.0577, 69.718, 0.52 ) }
    dend_76 { pt3dadd( -141.787, 25.1837, 69.7262, 0.52 ) }
    dend_76 { pt3dadd( -142.033, 25.9641, 69.7714, 0.37 ) }
    dend_76 { pt3dadd( -142.282, 26.875, 69.8055, 0.74 ) }
    dend_76 { pt3dadd( -142.297, 26.9358, 69.8078, 0.74 ) }
    dend_76 { pt3dadd( -142.4, 27.3578, 69.8239, 0.74 ) }
    dend_76 { pt3dadd( -142.855, 29.3579, 69.9671, 0.52 ) }
    dend_76 { pt3dadd( -142.868, 29.419, 69.9729, 0.52 ) }
    dend_76 { pt3dadd( -143.198, 31.0715, 70.1768, 0.52 ) }
    dend_76 { pt3dadd( -143.571, 33.0287, 70.4652, 0.52 ) }
    dend_76 { pt3dadd( -143.586, 33.1075, 70.4785, 0.52 ) }
    dend_76 { pt3dadd( -143.81, 34.3737, 70.7235, 0.88 ) }
    dend_76 { pt3dadd( -143.856, 34.6468, 70.7866, 0.88 ) }
    dend_76 { pt3dadd( -144.106, 36.1791, 71.1377, 0.52 ) }
    dend_76 { pt3dadd( -144.256, 37.1541, 71.3583, 0.52 ) }
    dend_76 { pt3dadd( -144.279, 37.3349, 71.4052, 0.52 ) }
    dend_76 { pt3dadd( -144.402, 38.2386, 71.614, 0.52 ) }
    dend_76 { pt3dadd( -144.446, 38.4894, 71.6619, 0.52 ) }
    dend_76 { pt3dadd( -144.582, 39.1103, 71.7802, 0.59 ) }
    dend_76 { pt3dadd( -144.758, 39.8281, 71.9115, 0.37 ) }
    dend_76 { pt3dadd( -145.058, 40.9804, 72.1161, 0.44 ) }
    dend_76 { pt3dadd( -145.382, 42.2302, 72.3248, 0.22 ) }
    dend_76 { pt3dadd( -145.678, 43.3543, 72.5021, 0.22 ) }
    dend_76 { pt3dadd( -145.801, 43.832, 72.5832, 0.37 ) }
    dend_76 { pt3dadd( -146.086, 44.943, 72.7781, 0.22 ) }
    dend_76 { pt3dadd( -146.114, 45.0551, 72.7976, 0.22 ) }
    dend_76 { pt3dadd( -146.323, 45.9925, 73.0047, 0.22 ) }
    dend_76 { pt3dadd( -146.333, 46.0515, 73.0238, 0.22 ) }
    dend_76 { pt3dadd( -146.445, 47.0108, 73.3568, 0.22 ) }
    dend_76 { pt3dadd( -146.45, 47.0621, 73.3746, 0.22 ) }
    dend_76 { pt3dadd( -146.57, 48.3165, 73.8155, 0.22 ) }
    dend_76 { pt3dadd( -146.695, 49.7279, 74.2939, 0.66 ) }
    dend_76 { pt3dadd( -146.742, 50.2687, 74.4699, 0.96 ) }
    dend_76 { pt3dadd( -146.823, 51.2647, 74.8032, 0.22 ) }
    dend_76 { pt3dadd( -146.894, 52.1208, 75.0888, 0.22 ) }
    dend_76 { pt3dadd( -146.9, 52.1878, 75.1121, 0.22 ) }
    dend_76 { pt3dadd( -146.942, 52.6841, 75.2908, 0.59 ) }
    dend_76 { pt3dadd( -147.003, 53.1143, 75.4126, 0.88 ) }
    dend_76 { pt3dadd( -147.187, 54.127, 75.6696, 0.44 ) }
    dend_76 { pt3dadd( -147.316, 54.7335, 75.8031, 0.29 ) }
    dend_76 { pt3dadd( -147.357, 54.9207, 75.8355, 0.29 ) }
    dend_76 { pt3dadd( -147.45, 55.3626, 75.8925, 0.29 ) }
    dend_76 { pt3dadd( -147.651, 56.4808, 75.9192, 0.74 ) }
    dend_76 { pt3dadd( -147.733, 57.0188, 75.8835, 0.29 ) }
    dend_76 { pt3dadd( -147.813, 57.5748, 75.8106, 0.44 ) }
    dend_76 { pt3dadd( -147.872, 58.0243, 75.752, 0.59 ) }
    dend_76 { pt3dadd( -147.879, 58.0862, 75.7456, 0.59 ) }
    dend_76 { pt3dadd( -148.032, 59.4342, 75.6431, 0.22 ) }
    dend_76 { pt3dadd( -148.055, 59.6336, 75.638, 0.22 ) }
    dend_76 { pt3dadd( -148.188, 60.762, 75.6977, 0.22 ) }
    dend_76 { pt3dadd( -148.194, 60.8221, 75.7053, 0.22 ) }
    dend_76 { pt3dadd( -148.242, 61.4957, 75.8352, 0.44 ) }
    dend_76 { pt3dadd( -148.245, 61.5644, 75.8532, 0.44 ) }
    dend_76 { pt3dadd( -148.249, 61.9213, 75.9846, 0.44 ) }
    dend_76 { pt3dadd( -148.201, 63.0836, 76.4486, 0.29 ) }
    dend_76 { pt3dadd( -148.146, 63.5096, 76.6453, 0.44 ) }
    dend_76 { pt3dadd( -148.128, 63.629, 76.7035, 0.44 ) }
    dend_76 { pt3dadd( -148.014, 64.1735, 76.9983, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 30.3051, -261.159, -96.403, 0.29 ) }
    dend_59 { pt3dadd( 29.7899, -261.289, -96.4124, 0.29 ) }
    dend_59 { pt3dadd( 29.1806, -261.537, -96.4432, 0.29 ) }
    dend_59 { pt3dadd( 29.0705, -261.589, -96.45, 0.59 ) }
    dend_59 { pt3dadd( 28.6793, -261.784, -96.4751, 0.66 ) }
    dend_59 { pt3dadd( 28.6025, -261.821, -96.4876, 0.66 ) }
    dend_59 { pt3dadd( 28.2055, -262.006, -96.567, 0.66 ) }
    dend_59 { pt3dadd( 27.5141, -262.359, -96.7271, 0.22 ) }
    dend_59 { pt3dadd( 27.2316, -262.512, -96.7953, 0.66 ) }
    dend_59 { pt3dadd( 26.9006, -262.692, -96.8788, 0.66 ) }
    dend_59 { pt3dadd( 26.0167, -263.169, -97.115, 0.22 ) }
    dend_59 { pt3dadd( 25.5037, -263.439, -97.2567, 0.22 ) }
    dend_59 { pt3dadd( 24.7877, -263.802, -97.4658, 0.22 ) }
    dend_59 { pt3dadd( 24.2861, -264.035, -97.6137, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 96/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 30.3051, -261.159, -96.403, 0.29 ) }
    dend_58 { pt3dadd( 30.622, -262.673, -96.7816, 0.29 ) }
    dend_58 { pt3dadd( 30.8687, -263.593, -97.063, 0.29 ) }
    dend_58 { pt3dadd( 30.9708, -264.051, -97.1988, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_58 { pt3dadd( 31.0484, -264.458, -97.338, 0.88 ) }
    dend_58 { pt3dadd( 31.0655, -264.559, -97.3744, 0.88 ) }
    dend_58 { pt3dadd( 31.1608, -265.272, -97.6185, 0.88 ) }
    dend_58 { pt3dadd( 31.355, -266.51, -97.9698, 0.22 ) }
    dend_58 { pt3dadd( 31.4506, -267.218, -98.175, 0.22 ) }
    dend_58 { pt3dadd( 31.5493, -268.035, -98.4371, 0.88 ) }
    dend_58 { pt3dadd( 31.5604, -268.102, -98.4582, 0.88 ) }
    dend_58 { pt3dadd( 31.7387, -268.942, -98.7141, 0.74 ) }
    dend_58 { pt3dadd( 32.0584, -269.966, -98.9966, 0.37 ) }
    dend_58 { pt3dadd( 32.0913, -270.028, -99.0098, 0.37 ) }
    dend_58 { pt3dadd( 33.0831, -271.281, -99.1358, 0.29 ) }
    dend_58 { pt3dadd( 33.6314, -271.845, -99.1376, 0.59 ) }
    dend_58 { pt3dadd( 33.7968, -271.995, -99.1321, 0.59 ) }
    dend_58 { pt3dadd( 34.6169, -272.649, -99.0837, 0.88 ) }
    dend_58 { pt3dadd( 35.8446, -273.532, -98.8169, 0.74 ) }
    dend_58 { pt3dadd( 37.294, -274.504, -98.3607, 0.29 ) }
    dend_58 { pt3dadd( 38.0649, -274.991, -98.0665, 0.74 ) }
    dend_58 { pt3dadd( 38.1217, -275.028, -98.0433, 0.74 ) }
    dend_58 { pt3dadd( 38.5853, -275.321, -97.8331, 0.74 ) }
    dend_58 { pt3dadd( 40.6623, -276.573, -96.7042, 0.44 ) }
    dend_58 { pt3dadd( 41.3343, -276.966, -96.2474, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -148.014, 64.1735, 76.9983, 0.29 ) }
    dend_78 { pt3dadd( -146.826, 63.536, 76.986, 0.29 ) }
    dend_78 { pt3dadd( -146.691, 63.4594, 76.9766, 0.29 ) }
    dend_78 { pt3dadd( -146.273, 63.2209, 76.9377, 0.29 ) }
    dend_78 { pt3dadd( -146.206, 63.1824, 76.9315, 0.29 ) }
    dend_78 { pt3dadd( -145.243, 62.6322, 76.8418, 0.29 ) }
    dend_78 { pt3dadd( -144.825, 62.3935, 76.8029, 0.81 ) }
    dend_78 { pt3dadd( -144.351, 62.1433, 76.6988, 1.03 ) }
    dend_78 { pt3dadd( -144.285, 62.1045, 76.6833, 1.03 ) }
    dend_78 { pt3dadd( -135.88, 56.157, 73.9584, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 31/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -148.014, 64.1735, 76.9983, 0.44 ) }
    dend_77 { pt3dadd( -148.21, 65.0305, 76.992, 0.44 ) }
    dend_77 { pt3dadd( -148.421, 65.9893, 76.9763, 0.37 ) }
    dend_77 { pt3dadd( -148.77, 67.753, 76.9976, 0.29 ) }
    dend_77 { pt3dadd( -149.087, 69.3213, 77.0498, 0.29 ) }
    dend_77 { pt3dadd( -149.222, 70.0287, 77.0759, 0.74 ) }
    dend_77 { pt3dadd( -149.285, 70.3754, 77.0891, 0.74 ) }
    dend_77 { pt3dadd( -149.355, 70.8227, 77.0981, 0.44 ) }
    dend_77 { pt3dadd( -149.468, 71.8566, 77.1169, 0.37 ) }
    dend_77 { pt3dadd( -149.536, 72.9424, 77.1302, 0.29 ) }
    dend_77 { pt3dadd( -149.587, 74.032, 77.1389, 0.29 ) }
    dend_77 { pt3dadd( -149.589, 74.1418, 77.1409, 0.29 ) }
    dend_77 { pt3dadd( -149.599, 75.6523, 77.1769, 0.29 ) }
    dend_77 { pt3dadd( -149.597, 75.9396, 77.1818, 0.29 ) }
    dend_77 { pt3dadd( -149.589, 76.8734, 77.1796, 0.29 ) }
    dend_77 { pt3dadd( -149.587, 76.9205, 77.1807, 0.29 ) }
    dend_77 { pt3dadd( -149.632, 77.8138, 77.2511, 0.29 ) }
    dend_77 { pt3dadd( -149.728, 78.2865, 77.3053, 0.44 ) }
    dend_77 { pt3dadd( -149.762, 78.3819, 77.3199, 0.44 ) }
    dend_77 { pt3dadd( -149.908, 78.7195, 77.3701, 0.29 ) }
    dend_77 { pt3dadd( -149.936, 78.7756, 77.3776, 0.29 ) }
    dend_77 { pt3dadd( -150.395, 79.6381, 77.4333, 0.29 ) }
    dend_77 { pt3dadd( -151.213, 81.092, 77.439, 0.29 ) }
    dend_77 { pt3dadd( -151.305, 81.2612, 77.4365, 0.29 ) }
    dend_77 { pt3dadd( -151.582, 81.7836, 77.4217, 0.74 ) }
    dend_77 { pt3dadd( -151.803, 82.2193, 77.406, 0.88 ) }
    dend_77 { pt3dadd( -152.24, 83.0935, 77.3701, 0.52 ) }
    dend_77 { pt3dadd( -152.63, 83.8857, 77.3356, 0.37 ) }
    dend_77 { pt3dadd( -153.174, 84.9821, 77.3099, 0.29 ) }
    dend_77 { pt3dadd( -153.26, 85.1548, 77.31, 0.29 ) }
    dend_77 { pt3dadd( -153.953, 86.5643, 77.3449, 0.29 ) }
    dend_77 { pt3dadd( -154.01, 86.6828, 77.3517, 0.29 ) }
    dend_77 { pt3dadd( -154.468, 87.6637, 77.4562, 0.29 ) }
    dend_77 { pt3dadd( -154.644, 88.0428, 77.5169, 0.52 ) }
    dend_77 { pt3dadd( -154.783, 88.342, 77.5868, 0.66 ) }
    dend_77 { pt3dadd( -154.825, 88.4332, 77.6139, 0.66 ) }
    dend_77 { pt3dadd( -154.974, 88.7666, 77.7499, 0.66 ) }
    dend_77 { pt3dadd( -155.001, 88.8244, 77.7737, 0.66 ) }
    dend_77 { pt3dadd( -155.307, 89.3954, 77.9937, 0.29 ) }
    dend_77 { pt3dadd( -155.409, 89.5712, 78.0592, 0.22 ) }
    dend_77 { pt3dadd( -155.607, 89.898, 78.1849, 0.52 ) }
    dend_77 { pt3dadd( -155.714, 90.0827, 78.2508, 0.52 ) }
    dend_77 { pt3dadd( -155.974, 90.5461, 78.4069, 0.29 ) }
    dend_77 { pt3dadd( -156.31, 91.1733, 78.5862, 0.29 ) }
    dend_77 { pt3dadd( -156.785, 92.1562, 78.8474, 0.29 ) }
    dend_77 { pt3dadd( -156.812, 92.2167, 78.864, 0.29 ) }
    dend_77 { pt3dadd( -157.228, 93.2436, 79.1439, 0.29 ) }
    dend_77 { pt3dadd( -157.263, 93.3379, 79.1694, 0.29 ) }
    dend_77 { pt3dadd( -157.646, 94.4671, 79.4639, 0.29 ) }
    dend_77 { pt3dadd( -157.948, 95.4119, 79.6841, 0.29 ) }
    dend_77 { pt3dadd( -157.992, 95.5493, 79.7032, 0.29 ) }
    dend_77 { pt3dadd( -158.147, 96.0146, 79.7356, 0.29 ) }
    dend_77 { pt3dadd( -158.16, 96.053, 79.7355, 0.29 ) }
    dend_77 { pt3dadd( -158.369, 96.6552, 79.6984, 0.88 ) }
    dend_77 { pt3dadd( -158.432, 96.8352, 79.6748, 0.88 ) }
    dend_77 { pt3dadd( -158.73, 97.6848, 79.534, 0.22 ) }
    dend_77 { pt3dadd( -159.018, 98.5167, 79.3672, 0.22 ) }
    dend_77 { pt3dadd( -159.062, 98.644, 79.3396, 0.22 ) }
    dend_77 { pt3dadd( -159.371, 99.5576, 79.1358, 0.22 ) }
    dend_77 { pt3dadd( -159.384, 99.5967, 79.127, 0.22 ) }
    dend_77 { pt3dadd( -159.831, 100.803, 78.7778, 0.52 ) }
    dend_77 { pt3dadd( -160.179, 101.666, 78.4949, 0.29 ) }
    dend_77 { pt3dadd( -160.349, 102.046, 78.3481, 0.37 ) }
    dend_77 { pt3dadd( -160.384, 102.121, 78.3165, 0.37 ) }
    dend_77 { pt3dadd( -160.59, 102.535, 78.1347, 0.37 ) }
    dend_77 { pt3dadd( -161.254, 103.78, 77.5026, 0.22 ) }
    dend_77 { pt3dadd( -161.662, 104.518, 77.1087, 0.22 ) }
    dend_77 { pt3dadd( -161.683, 104.557, 77.0892, 0.22 ) }
    dend_77 { pt3dadd( -161.88, 104.959, 76.8956, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_77 { pt3dadd( -162.148, 105.529, 76.6372, 0.66 ) }
    dend_77 { pt3dadd( -162.679, 106.683, 76.085, 0.15 ) }
    dend_77 { pt3dadd( -163.088, 107.639, 75.6415, 0.15 ) }
    dend_77 { pt3dadd( -163.303, 108.111, 75.3854, 0.29 ) }
    dend_77 { pt3dadd( -163.322, 108.15, 75.3633, 0.29 ) }
    dend_77 { pt3dadd( -163.464, 108.428, 75.196, 0.29 ) }
    dend_77 { pt3dadd( -163.924, 109.281, 74.6746, 0.44 ) }
    dend_77 { pt3dadd( -164.061, 109.504, 74.5084, 0.44 ) }
    dend_77 { pt3dadd( -164.445, 110.046, 74.084, 0.22 ) }
    dend_77 { pt3dadd( -164.656, 110.342, 73.8707, 0.52 ) }
    dend_77 { pt3dadd( -164.68, 110.377, 73.8472, 0.52 ) }
    dend_77 { pt3dadd( -164.858, 110.639, 73.6968, 0.88 ) }
    dend_77 { pt3dadd( -165.876, 112.227, 72.9828, 0.29 ) }
    dend_77 { pt3dadd( -166.718, 113.562, 72.435, 0.29 ) }
    dend_77 { pt3dadd( -166.988, 114.042, 72.2693, 0.29 ) }
    dend_77 { pt3dadd( -167.007, 114.085, 72.2568, 0.29 ) }
    dend_77 { pt3dadd( -167.339, 114.952, 72.048, 0.29 ) }
    dend_77 { pt3dadd( -167.546, 115.746, 71.9084, 0.29 ) }
    dend_77 { pt3dadd( -167.551, 115.785, 71.9049, 0.29 ) }
    dend_77 { pt3dadd( -167.567, 116.979, 71.7645, 0.29 ) }
    dend_77 { pt3dadd( -167.542, 117.873, 71.6507, 0.59 ) }
    dend_77 { pt3dadd( -167.518, 118.318, 71.5895, 0.59 ) }
    dend_77 { pt3dadd( -167.483, 119.088, 71.4842, 0.22 ) }
    dend_77 { pt3dadd( -167.46, 119.957, 71.3697, 0.22 ) }
    dend_77 { pt3dadd( -167.461, 120.065, 71.3564, 0.22 ) }
    dend_77 { pt3dadd( -167.515, 121.393, 71.2082, 0.22 ) }
    dend_77 { pt3dadd( -167.523, 121.496, 71.1978, 0.22 ) }
    dend_77 { pt3dadd( -167.724, 123.579, 71.0043, 0.22 ) }
    dend_77 { pt3dadd( -167.732, 123.633, 71.0001, 0.22 ) }
    dend_77 { pt3dadd( -167.958, 124.864, 70.9213, 0.22 ) }
    dend_77 { pt3dadd( -167.991, 125.006, 70.9145, 0.22 ) }
    dend_77 { pt3dadd( -168.051, 125.21, 70.9088, 0.59 ) }
    dend_77 { pt3dadd( -168.189, 125.629, 70.9028, 0.59 ) }
    dend_77 { pt3dadd( -168.604, 126.646, 70.8332, 0.29 ) }
    dend_77 { pt3dadd( -168.809, 127.101, 70.783, 0.59 ) }
    dend_77 { pt3dadd( -169.153, 127.8, 70.6835, 0.52 ) }
    dend_77 { pt3dadd( -169.449, 128.406, 70.5823, 0.74 ) }
    dend_77 { pt3dadd( -169.702, 128.928, 70.4815, 0.74 ) }
    dend_77 { pt3dadd( -170.183, 129.973, 70.2439, 0.22 ) }
    dend_77 { pt3dadd( -170.371, 130.415, 70.1234, 0.44 ) }
    dend_77 { pt3dadd( -170.528, 130.811, 70.0126, 0.74 ) }
    dend_77 { pt3dadd( -170.611, 131.043, 69.9532, 1.03 ) }
    dend_77 { pt3dadd( -170.624, 131.08, 69.9442, 1.03 ) }
    dend_77 { pt3dadd( -170.788, 131.594, 69.8539, 1.03 ) }
    dend_77 { pt3dadd( -170.801, 131.64, 69.8528, 1.03 ) }
    dend_77 { pt3dadd( -170.999, 132.4, 69.8306, 0.37 ) }
    dend_77 { pt3dadd( -171.202, 133.151, 69.8039, 0.29 ) }
    dend_77 { pt3dadd( -172.239, 139.723, 69.5404, 0.29 ) }
    dend_77 { pt3dadd( -173.854, 146.149, 70.2686, 0.29 ) }
    dend_77 { pt3dadd( -175.218, 152.596, 71.2854, 0.29 ) }
    dend_77 { pt3dadd( -176.082, 158.976, 73.0552, 0.29 ) }
    dend_77 { pt3dadd( -176.21, 165.3, 75.2213, 0.29 ) }
    dend_77 { pt3dadd( -176.683, 171.074, 78.6138, 0.29 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -135.88, 56.157, 73.9584, 0.22 ) }
    dend_80 { pt3dadd( -127.073, 50.2452, 71.7701, 0.22 ) }
    dend_80 { pt3dadd( -118.177, 44.1454, 70.7451, 0.22 ) }
    dend_80 { pt3dadd( -108.663, 39.0337, 69.6156, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 57/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -135.88, 56.157, 73.9584, 0.22 ) }
    dend_79 { pt3dadd( -129.873, 51.8445, 72.3884, 0.22 ) }
    dend_79 { pt3dadd( -123.875, 47.4956, 70.8864, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_92 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_81 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_92, dend_25, dend_0, axon_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, axon_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_5 = new SectionList()
    dend_92 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_54 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_92 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_93 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_102 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_99 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_97 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_15 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_103 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_100 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_96 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_95 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_67 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_66 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_48 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_35 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_5 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_53 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_50 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_39 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_8 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_73 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_70 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_63 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_38 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_37 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_9 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_83 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_74 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_85 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_84 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_82 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_81 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_76 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_77 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_65 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_98 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_101 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_51 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_6 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_61 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_54 OneSecGrp_SectionRef_86.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_7 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_104 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_33 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_94 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_32 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_55 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_56 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_87 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_10 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_91 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_64 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_68 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_88 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_60 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_57 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_59 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_58 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_72 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_86 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_71 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_45 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_46 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_75 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_78 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_79 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_80 OneSecGrp_SectionRef_107.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_65 all.append()
    dend_65 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_91 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_92 nseg = 5
    dend_93 nseg = 7
    dend_41 nseg = 3
    dend_26 nseg = 3
    dend_102 nseg = 5
    dend_99 nseg = 3
    dend_97 nseg = 3
    dend_27 nseg = 7
    dend_20 nseg = 5
    dend_15 nseg = 3
    dend_2 nseg = 13
    dend_103 nseg = 7
    dend_100 nseg = 3
    dend_96 nseg = 3
    dend_95 nseg = 5
    dend_67 nseg = 9
    dend_66 nseg = 5
    dend_48 nseg = 3
    dend_43 nseg = 17
    dend_31 nseg = 7
    dend_29 nseg = 3
    dend_28 nseg = 5
    dend_24 nseg = 3
    dend_21 nseg = 13
    dend_17 nseg = 5
    dend_16 nseg = 9
    dend_11 nseg = 5
    dend_4 nseg = 5
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_35 nseg = 3
    dend_19 nseg = 3
    dend_5 nseg = 3
    dend_69 nseg = 3
    dend_62 nseg = 7
    dend_53 nseg = 5
    dend_50 nseg = 7
    dend_39 nseg = 5
    dend_36 nseg = 3
    dend_8 nseg = 3
    dend_90 nseg = 3
    dend_89 nseg = 3
    dend_73 nseg = 5
    dend_70 nseg = 3
    dend_63 nseg = 5
    dend_38 nseg = 5
    dend_37 nseg = 7
    dend_9 nseg = 5
    dend_83 nseg = 3
    dend_74 nseg = 3
    dend_85 nseg = 5
    dend_84 nseg = 3
    dend_82 nseg = 3
    dend_81 nseg = 7
    dend_76 nseg = 3
    dend_77 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_DBC_42ed26968e_0_0


