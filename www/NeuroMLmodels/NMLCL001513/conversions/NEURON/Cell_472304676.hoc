// Cell: Cell_472304676
/*
{
  "id" : "Cell_472304676",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "441.092, 327.708, 31.6865, 12.6742", "447.429, 327.708, 31.6865, 12.6742", "453.766, 327.708, 31.6865, 12.6742" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "447.429, 327.708, 31.6865, 1.0", "453.27, 341.524, 31.6865, 1.0", "459.112, 355.34, 31.6865, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999978
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "450.235, 333.198, 30.942, 0.2796", "450.759, 334.21, 30.7373, 0.356", "451.355, 335.154, 30.3884, 0.4322", "451.791, 335.801, 28.4323, 0.4068", "451.756, 336.206, 25.8426, 0.356", "451.533, 336.855, 24.0358, 0.305", "451.615, 337.832, 24.8259, 0.305", "451.295, 338.504, 26.9461, 0.2796", "450.887, 339.107, 29.0956, 0.2796", "450.726, 339.94, 30.4931, 0.2796", "451.046, 341.021, 30.2761, 0.305", "451.118, 342.116, 29.8824, 0.2796", "450.857, 343.17, 30.4923, 0.2796", "450.811, 344.214, 31.2794, 0.2796", "451.133, 345.254, 30.8157, 0.305", "451.059, 346.274, 29.8379, 0.305", "450.96, 347.364, 29.9975, 0.356", "450.92, 348.456, 30.8216, 0.4068", "450.686, 349.531, 31.5356, 0.4576", "450.206, 350.532, 31.2012, 0.4068", "449.679, 351.519, 31.5246, 0.356", "449.195, 352.498, 30.9151, 0.305", "448.57, 352.545, 28.5785, 0.3304", "448.791, 353.083, 29.68, 0.356", "448.765, 354.116, 30.1666, 0.356", "448.677, 354.782, 31.0223, 0.3304", "448.234, 355.362, 30.5967, 0.305", "448.175, 356.125, 30.0905, 0.305", "447.989, 357.089, 29.7086, 0.3304", "447.533, 357.918, 30.1157, 0.356", "446.964, 358.539, 29.7626, 0.3814", "447.384, 359.205, 28.1224, 0.3304", "446.603, 359.965, 28.3161, 0.305", "446.161, 360.457, 30.0994, 0.2796", "445.794, 361.192, 31.789, 0.305", "445.555, 362.139, 31.3844, 0.305", "445.261, 363.215, 31.4532, 0.305", "445.009, 364.125, 30.8, 0.305", "444.902, 365.165, 31.36, 0.2796", "444.444, 366.047, 32.76, 0.2542", "444.35, 367.184, 32.76, 0.2288", "444.168, 368.312, 32.76, 0.2288", "444.089, 369.447, 32.76, 0.2288", "443.684, 370.504, 32.76, 0.2288", "442.785, 371.162, 32.76, 0.2288", "442.728, 372.292, 32.76, 0.2288", "442.728, 373.436, 32.76, 0.2288", "442.647, 374.565, 32.76, 0.2288", "442.385, 375.659, 32.9524, 0.2288", "442.385, 376.802, 33.04, 0.2288", "442.27, 377.936, 33.04, 0.2288", "441.709, 378.854, 33.04, 0.2288", "441.347, 379.893, 33.04, 0.2288", "440.554, 380.568, 33.04, 0.2288", "440.44, 381.704, 33.04, 0.2288", "440.433, 382.848, 33.04, 0.2288", "440.188, 383.952, 33.04, 0.2288", "440.012, 385.082, 33.04, 0.2288", "439.982, 386.224, 33.04, 0.2288", "439.973, 387.368, 33.04, 0.2288", "439.868, 388.505, 33.04, 0.2288", "439.868, 389.649, 33.04, 0.2288", "439.868, 390.793, 33.04, 0.2288", "439.868, 391.937, 33.04, 0.2288", "439.868, 393.081, 33.04, 0.2288", "439.868, 394.225, 33.04, 0.2288", "439.868, 395.369, 33.04, 0.2288", "440.037, 396.499, 33.04, 0.2288", "440.264, 397.611, 33.04, 0.2288", "440.705, 398.641, 33.04, 0.2288", "441.012, 399.599, 33.04, 0.2288", "440.98, 399.989, 33.7366, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999978,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "453.12, 331.797, 31.7604, 0.4322", "453.988, 332.18, 30.7812, 0.4068", "454.388, 332.494, 28.336, 0.3304", "454.86, 333.159, 26.9604, 0.2542", "455.698, 333.105, 27.9686, 0.2542", "456.402, 332.412, 29.3594, 0.305", "457.3, 331.976, 30.3783, 0.356", "458.362, 331.668, 30.1666, 0.356", "459.43, 331.331, 29.6624, 0.305", "460.129, 331.376, 31.2021, 0.2542", "460.651, 331.758, 33.493, 0.2796", "461.336, 332.221, 35.3657, 0.3814", "462.294, 332.594, 36.456, 0.483", "463.305, 332.831, 37.5295, 0.483", "464.142, 332.977, 39.3565, 0.4068", "464.907, 333.414, 39.7244, 0.356", "465.899, 333.588, 39.3851, 0.356", "466.939, 333.415, 40.348, 0.356", "467.779, 333.404, 42.1879, 0.305", "468.569, 333.636, 44.1129, 0.305", "469.552, 333.753, 45.4426, 0.3304", "470.508, 333.398, 46.653, 0.4068", "471.44, 333.372, 48.2454, 0.4068", "472.565, 333.442, 48.4982, 0.4322", "473.654, 333.764, 48.7712, 0.4068", "474.778, 333.926, 49.1014, 0.3814", "475.815, 333.82, 50.2516, 0.305", "476.849, 333.819, 51.4436, 0.2542", "477.963, 333.819, 52.08, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999978,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "453.05, 325.494, 30.8, 0.4576", "453.806, 324.641, 30.7992, 0.4576", "454.65, 323.871, 30.7952, 0.4576", "455.413, 323.019, 30.7779, 0.4322", "456.24, 322.232, 30.7107, 0.483", "457.163, 321.602, 30.3895, 0.483" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999978
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "441.537, 331.179, 30.1423, 0.5084", "440.523, 331.61, 30.5651, 0.6102", "439.702, 332.378, 30.8196, 0.6356", "438.845, 333.126, 31.0148, 0.661", "437.8, 333.344, 31.6442, 0.661", "436.677, 333.362, 32.1311, 0.6864", "435.562, 333.362, 32.7197, 0.661", "434.433, 333.363, 33.0417, 0.6356", "433.292, 333.374, 33.2349, 0.6356", "432.154, 333.438, 33.2024, 0.6864", "431.047, 333.677, 32.9263, 0.7372", "429.961, 333.8, 32.2137, 0.788", "428.884, 333.777, 31.2754, 0.7626", "427.783, 333.585, 30.9792, 0.7118", "426.681, 333.363, 31.4997, 0.6102", "425.568, 333.362, 30.8624, 0.5848", "424.424, 333.363, 30.7994, 0.5592" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999978
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "444.588, 322.307, 31.9463, 0.3304", "443.94, 321.367, 32.0597, 0.4576", "443.181, 320.57, 32.8087, 0.5848", "442.682, 319.669, 34.0189, 0.661", "441.853, 318.884, 34.1242, 0.7118", "440.897, 318.26, 34.0113, 0.7372", "439.969, 317.635, 33.4379, 0.788", "439.078, 316.935, 33.0736, 0.8136", "438.2, 316.202, 33.1047, 0.8136", "437.134, 315.844, 33.5591, 0.7118", "436.237, 315.213, 34.2922, 0.5338" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999978
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "444.627, 321.624, 29.6702, 0.2796", "444.727, 320.485, 29.6559, 0.4322", "444.561, 319.371, 29.5478, 0.6864", "444.052, 318.381, 29.0556, 0.9406", "443.452, 317.423, 28.656, 1.0932", "442.99, 316.384, 28.6006, 1.144", "442.053, 314.337, 29.384, 1.1694", "441.424, 312.17, 29.1609, 1.1694", "440.989, 311.136, 28.6084, 1.0424", "440.354, 310.197, 28.3469, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999978
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "459.112, 355.34, 31.6865, 1.0", "464.953, 369.156, 31.6865, 1.0", "470.794, 382.972, 31.6865, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "440.98, 399.989, 33.7366, 0.2288", "441.679, 400.346, 34.9726, 0.2288", "442.489, 401.147, 34.9726, 0.2288", "443.521, 401.639, 34.9726, 0.2288", "444.357, 402.399, 35.3486, 0.2288", "445.177, 403.179, 35.7526, 0.2288", "445.897, 404.047, 35.9719, 0.2288", "446.499, 405.021, 35.9719, 0.2288", "446.731, 406.072, 35.9719, 0.2288", "446.58, 407.207, 35.9719, 0.2288", "446.787, 407.355, 36.4994, 0.2288", "447.47, 408.27, 36.6985, 0.2288", "448.153, 409.185, 36.8976, 0.2288", "448.835, 410.099, 37.0966, 0.2288", "449.518, 411.013, 37.2957, 0.2542", "450.201, 411.928, 37.4948, 0.2796", "450.882, 412.842, 37.6936, 0.305", "451.565, 413.756, 37.8927, 0.2796", "451.831, 414.811, 37.9702, 0.2542", "451.831, 415.955, 37.9702, 0.2288", "451.846, 417.098, 37.9702, 0.2288", "452.109, 418.211, 37.9702, 0.2288", "452.372, 419.324, 37.9702, 0.2288", "452.636, 420.437, 37.9702, 0.2288", "452.899, 421.55, 37.9702, 0.2288", "453.159, 422.664, 37.9702, 0.2288", "453.416, 423.779, 37.9702, 0.2288", "453.674, 424.894, 37.9702, 0.2288", "454.302, 425.817, 38.0755, 0.2288", "455.055, 426.678, 38.2158, 0.2542", "455.806, 427.538, 38.3558, 0.2796", "456.542, 428.412, 38.4698, 0.305", "457.2, 429.348, 38.4698, 0.2796", "457.858, 430.282, 38.4698, 0.2542", "458.516, 431.218, 38.4698, 0.2542", "459.039, 432.225, 38.4698, 0.2796", "459.435, 433.298, 38.4698, 0.305", "459.881, 434.347, 38.4698, 0.2796", "460.47, 435.329, 38.4698, 0.2542", "460.735, 436.436, 38.241, 0.2288", "460.987, 437.547, 38.005, 0.2288", "461.241, 438.659, 37.7686, 0.2288", "461.495, 439.77, 37.5326, 0.2288", "461.748, 440.882, 37.2966, 0.2288", "462.002, 441.992, 37.0605, 0.2288", "462.302, 443.094, 36.9709, 0.2288", "462.631, 444.19, 36.9709, 0.2288", "463.039, 445.25, 36.9709, 0.2288", "463.627, 446.232, 36.9709, 0.2288", "464.216, 447.212, 36.9709, 0.2288", "464.804, 448.194, 36.9709, 0.2288", "465.521, 449.062, 36.9709, 0.2288", "466.414, 449.777, 36.9709, 0.2288" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "440.98, 399.989, 33.7366, 0.2288", "440.882, 401.075, 34.5901, 0.2288", "440.591, 402.142, 34.9726, 0.2542", "440.145, 403.196, 34.9726, 0.2796", "439.699, 404.25, 34.9726, 0.305", "439.489, 405.366, 34.9726, 0.2796", "439.348, 406.501, 34.9726, 0.2542", "439.206, 407.637, 34.9726, 0.2288", "439.052, 407.996, 35.4421, 0.2288", "438.877, 409.124, 35.2682, 0.2288", "438.701, 410.253, 35.0941, 0.2288", "438.525, 411.381, 34.9202, 0.2288", "438.35, 412.509, 34.746, 0.2288", "438.174, 413.637, 34.5722, 0.2288", "437.999, 414.765, 34.398, 0.2288", "437.823, 415.894, 34.2241, 0.2542", "437.646, 417.022, 34.05, 0.2796", "437.378, 418.13, 33.9732, 0.305", "437.034, 419.221, 33.9732, 0.2796", "436.691, 420.312, 33.9732, 0.2542", "436.349, 421.404, 33.9732, 0.2288", "436.031, 422.502, 33.9732, 0.2288", "435.74, 423.609, 33.9732, 0.2288", "435.449, 424.716, 33.9732, 0.2288", "435.158, 425.822, 33.9732, 0.2542", "434.878, 426.931, 33.9732, 0.305", "434.663, 428.054, 33.9732, 0.356", "434.447, 429.177, 33.9732, 0.4068", "434.217, 430.297, 33.9732, 0.4576", "433.939, 431.407, 33.9732, 0.5084", "433.615, 432.473, 33.5894, 0.483", "433.223, 433.475, 32.6348, 0.3814", "432.829, 434.476, 31.6803, 0.305", "432.267, 435.34, 30.9756, 0.2796", "431.228, 435.819, 30.9756, 0.305", "430.234, 436.381, 30.9756, 0.2796", "429.26, 436.982, 30.9756, 0.2542" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "457.163, 321.602, 30.3895, 0.483", "457.103, 320.138, 30.5094, 0.5084", "456.921, 319.165, 30.2935, 0.5084", "456.474, 318.22, 30.6244, 0.4322", "456.011, 317.608, 32.3187, 0.4576", "455.653, 317.079, 31.9376, 0.5084", "454.953, 316.425, 31.92, 0.6102", "454.318, 315.575, 31.64, 0.661", "453.63, 314.953, 32.0438, 0.6864", "453.323, 314.254, 30.672, 0.661", "452.442, 313.597, 30.6132, 0.6356", "451.959, 312.615, 30.5393, 0.5848", "451.753, 311.518, 30.5528, 0.5592", "451.338, 310.885, 29.3709, 0.483", "450.99, 310.443, 30.9725, 0.4576", "450.532, 309.566, 30.7997, 0.4068", "450.066, 308.778, 30.9406, 0.4068", "449.711, 307.99, 29.384, 0.356", "449.363, 306.965, 28.5858, 0.3304", "448.894, 306.249, 27.855, 0.305", "448.302, 305.633, 29.4, 0.2796", "447.647, 304.873, 29.267, 0.2796", "447.226, 304.295, 30.6989, 0.3304", "446.846, 303.443, 29.7671, 0.4322", "446.625, 302.466, 30.3204, 0.5338", "446.251, 301.534, 29.9085, 0.5338", "446.016, 300.643, 29.1444, 0.5084", "445.205, 300.64, 30.4987, 0.4322", "445.133, 300.132, 29.68, 0.4322", "444.892, 299.557, 28.2346, 0.4068", "444.326, 298.86, 27.4137, 0.3814", "443.776, 298.091, 26.88, 0.305", "443.214, 297.336, 27.7421, 0.2796", "442.957, 296.868, 27.3428, 0.305", "442.544, 296.234, 26.812, 0.356", "442.125, 295.298, 26.1789, 0.3814", "441.646, 294.541, 26.4362, 0.3814", "441.018, 293.887, 26.1948, 0.4068", "440.638, 292.94, 26.5804, 0.4322", "440.056, 291.992, 26.098, 0.4576", "439.744, 291.119, 27.5562, 0.4576", "439.41, 290.29, 26.5289, 0.4576", "438.838, 289.832, 25.795, 0.4576", "438.635, 289.232, 25.5066, 0.4576", "438.089, 288.307, 25.3215, 0.4322", "437.829, 287.606, 26.2478, 0.3814", "437.356, 286.805, 26.32, 0.3304", "436.872, 285.909, 27.0897, 0.3304", "436.145, 285.073, 26.887, 0.3814", "435.957, 284.271, 27.1496, 0.4322", "435.526, 283.648, 26.7072, 0.483", "435.063, 282.865, 26.593, 0.5084", "434.504, 282.243, 27.309, 0.5084", "434.14, 281.419, 27.5954, 0.4322", "433.569, 280.831, 26.9377, 0.3304", "433.004, 280.253, 26.0932, 0.2796", "432.541, 279.404, 26.8923, 0.305", "432.005, 278.501, 27.5461, 0.4068", "431.749, 277.564, 27.2969, 0.483", "431.751, 276.642, 26.2956, 0.5084", "431.365, 275.704, 25.2932, 0.5084", "430.7, 274.775, 25.2, 0.483" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "457.163, 321.602, 30.3895, 0.483", "458.294, 321.565, 30.4464, 0.5084", "459.337, 321.999, 30.8053, 0.4322", "460.372, 322.472, 30.5586, 0.3814", "460.585, 322.844, 28.798, 0.3304", "460.856, 323.474, 26.5647, 0.356", "461.098, 324.302, 24.7993, 0.4068", "461.356, 325.216, 23.2518, 0.3814", "461.582, 326.103, 21.5793, 0.356", "462.097, 326.952, 21.1554, 0.2796", "463.057, 327.285, 21.7748, 0.305", "464.017, 327.362, 22.9289, 0.356", "464.525, 327.938, 24.8662, 0.483", "464.553, 328.799, 26.5924, 0.5338", "464.957, 329.26, 28.5351, 0.5592", "465.908, 329.598, 29.5218, 0.5338", "466.85, 330.216, 29.5302, 0.5592", "467.649, 330.978, 28.8736, 0.5592", "467.962, 331.082, 28.4144, 0.5084", "468.91, 331.716, 28.2092, 0.3814", "469.857, 332.353, 28.0036, 0.2796", "470.805, 332.987, 27.7984, 0.2288", "471.752, 333.622, 27.5929, 0.2288", "472.653, 334.32, 27.4784, 0.2288", "473.492, 335.097, 27.4784, 0.2288", "474.333, 335.873, 27.4784, 0.2542", "475.173, 336.65, 27.4784, 0.2796", "475.966, 337.472, 27.4784, 0.305", "476.723, 338.33, 27.4784, 0.2796", "477.5, 339.165, 27.4784, 0.2542", "478.447, 339.807, 27.4784, 0.2288", "479.394, 340.449, 27.4784, 0.2288", "480.223, 341.191, 27.2521, 0.2288", "480.828, 342.126, 26.6031, 0.2288", "481.433, 343.059, 25.9543, 0.2288", "482.098, 343.955, 25.48, 0.2288", "482.92, 344.751, 25.48, 0.2288", "483.816, 345.444, 25.3795, 0.2288", "484.809, 346.004, 25.1454, 0.2288", "485.802, 346.563, 24.9113, 0.2288", "486.796, 347.122, 24.6772, 0.2542", "487.772, 347.708, 24.4807, 0.3304", "488.654, 348.436, 24.4807, 0.4068", "489.526, 349.177, 24.4807, 0.4322", "490.282, 350.006, 24.4807, 0.356", "490.752, 351.048, 24.4807, 0.2796", "491.387, 351.958, 24.0551, 0.2288", "492.127, 352.783, 23.3576, 0.2288", "492.866, 353.608, 22.6601, 0.2288", "493.606, 354.433, 21.9626, 0.2288", "494.346, 355.258, 21.2654, 0.2288", "495.262, 355.836, 20.5957, 0.2288", "496.296, 356.246, 19.9447, 0.2288", "497.362, 356.537, 19.4846, 0.2542", "498.506, 356.541, 19.4846, 0.2796", "499.593, 356.772, 19.1769, 0.305", "500.632, 357.192, 18.6133, 0.2796", "501.67, 357.612, 18.0499, 0.2542", "502.709, 358.032, 17.4863, 0.2288" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "424.424, 333.363, 30.7994, 0.5592", "423.972, 333.833, 31.673, 0.5084", "423.545, 334.876, 31.4983, 0.5084", "423.116, 335.91, 31.6568, 0.5338", "422.765, 336.983, 32.0491, 0.5084", "422.526, 338.074, 32.6077, 0.5084", "422.261, 339.166, 32.6306, 0.5338", "422.133, 340.26, 31.9724, 0.5592", "422.042, 341.273, 30.7376, 0.5084", "421.561, 342.016, 29.0982, 0.3814", "421.331, 343.042, 28.8663, 0.305", "421.798, 343.814, 30.245, 0.3304", "422.49, 344.1, 32.3243, 0.4576", "422.708, 345.124, 32.986, 0.5338", "423.119, 346.187, 32.9571, 0.5592", "423.424, 347.284, 32.704, 0.5338", "423.206, 348.389, 33.0484, 0.5592", "422.849, 349.474, 33.2298, 0.5848", "422.422, 350.484, 34.0194, 0.6102", "422.19, 351.599, 33.8044, 0.6102", "422.594, 352.047, 31.6635, 0.5338", "422.594, 353.182, 31.894, 0.483", "422.486, 354.149, 32.3638, 0.4322", "421.907, 354.294, 33.9234, 0.3814", "421.793, 355.099, 35.3542, 0.356", "422.049, 356.003, 34.4058, 0.3814", "422.335, 357.077, 33.88, 0.4576", "422.166, 358.116, 34.3526, 0.483", "421.961, 359.161, 34.72, 0.4576", "421.823, 360.029, 35.6709, 0.4322", "421.794, 361.112, 35.9136, 0.4068", "421.907, 361.884, 34.1911, 0.4322", "421.309, 362.513, 34.9359, 0.3814", "421.335, 363.551, 35.3189, 0.3814", "421.557, 364.449, 36.3258, 0.356", "421.221, 364.946, 34.5262, 0.4068", "420.994, 365.727, 34.4271, 0.4068", "420.992, 366.652, 35.28, 0.4068", "420.878, 368.03, 35.0, 0.3304", "420.958, 369.17, 35.0, 0.2796", "420.992, 370.313, 35.0, 0.2542", "420.992, 371.457, 35.0, 0.2288", "420.992, 372.601, 35.0, 0.2288", "420.992, 373.741, 34.8239, 0.2288", "420.992, 374.884, 34.72, 0.2288", "420.992, 376.028, 34.72, 0.2288", "420.992, 377.163, 35.0, 0.2288", "420.992, 378.307, 35.0, 0.2288", "420.992, 379.45, 35.0263, 0.2288", "420.992, 380.591, 35.2458, 0.2288", "420.992, 381.733, 35.28, 0.2288", "420.992, 382.877, 35.28, 0.2288", "420.992, 384.021, 35.28, 0.2288", "420.992, 385.165, 35.28, 0.2288", "420.992, 386.309, 35.28, 0.2288", "420.992, 387.453, 35.28, 0.2288", "420.992, 388.597, 35.28, 0.2542", "420.992, 389.741, 35.28, 0.2796", "420.992, 390.885, 35.28, 0.305", "421.008, 392.028, 35.28, 0.2796", "421.164, 393.161, 35.28, 0.2542", "421.422, 394.273, 35.28, 0.2542", "421.715, 395.379, 35.28, 0.2796", "422.058, 396.469, 35.28, 0.305", "422.136, 397.609, 35.28, 0.2796", "422.261, 398.742, 35.28, 0.2542", "422.554, 399.842, 35.28, 0.2288", "422.979, 400.891, 35.28, 0.2288", "423.394, 401.927, 35.28, 0.2288", "423.723, 402.983, 35.28, 0.2288", "423.949, 404.104, 35.28, 0.2288", "424.424, 405.118, 35.28, 0.2288", "424.661, 406.228, 35.28, 0.2288", "425.035, 407.267, 35.28, 0.2288", "425.41, 408.252, 35.28, 0.2288", "425.682, 409.323, 35.28, 0.2288", "425.74, 410.106, 35.4721, 0.2288", "426.161, 411.17, 35.4721, 0.2288", "426.631, 412.213, 35.4721, 0.2288", "427.1, 413.256, 35.4721, 0.2288", "427.569, 414.3, 35.4721, 0.2288", "427.977, 415.359, 35.1848, 0.2288", "428.374, 416.423, 34.837, 0.2288", "428.77, 417.487, 34.4893, 0.2796", "429.166, 418.551, 34.1415, 0.3304", "429.563, 419.615, 33.7938, 0.3814", "429.961, 420.678, 33.4737, 0.3304", "430.381, 421.742, 33.4737, 0.2796", "430.598, 422.83, 33.4737, 0.2288", "430.436, 423.963, 33.4737, 0.2288", "430.23, 425.086, 33.4737, 0.2288", "429.945, 426.194, 33.4737, 0.2288", "429.686, 427.308, 33.4737, 0.2288", "429.479, 428.433, 33.4737, 0.2542", "429.272, 429.558, 33.4737, 0.2796" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "424.424, 333.363, 30.7994, 0.5592", "423.053, 333.378, 30.7938, 0.839", "421.892, 333.482, 30.746, 0.7626" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "436.237, 315.213, 34.2922, 0.5338", "435.92, 315.6, 34.2059, 0.4576", "435.275, 316.179, 34.743, 0.4322", "435.691, 316.54, 36.9113, 0.483", "436.516, 316.594, 38.36, 0.5338", "436.324, 317.629, 37.814, 0.5592", "436.417, 318.464, 38.5154, 0.5848", "436.594, 318.406, 40.3684, 0.5592", "437.556, 318.604, 41.2698, 0.5592", "438.149, 317.947, 40.5143, 0.5338", "439.067, 317.918, 39.2, 0.5084", "439.413, 317.803, 40.6, 0.483", "439.901, 317.952, 42.3139, 0.4322", "440.646, 318.162, 43.3252, 0.4322", "441.005, 319.06, 42.0585, 0.4322", "441.698, 319.634, 42.28, 0.4576" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "436.237, 315.213, 34.2922, 0.5338", "435.883, 314.19, 35.0571, 0.5592", "435.849, 313.058, 34.858, 0.5084", "435.707, 311.928, 35.0641, 0.5338", "435.087, 310.972, 35.2797, 0.5592", "434.447, 310.024, 35.2803, 0.6356", "433.439, 308.92, 35.2831, 0.661", "432.742, 308.016, 35.2948, 0.6102", "432.135, 307.048, 35.3646, 0.5592", "432.011, 306.001, 36.0189, 0.5084", "432.12, 304.939, 37.0303, 0.483", "431.877, 303.896, 36.5504, 0.4576", "431.152, 303.113, 35.6857, 0.5084", "430.276, 302.39, 35.5264, 0.5592", "429.913, 301.364, 36.167, 0.6102", "429.638, 299.937, 37.69, 0.6102", "429.833, 298.895, 37.24, 0.5592", "429.698, 298.166, 36.7321, 0.4576" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "440.354, 310.197, 28.3469, 0.6864", "439.171, 309.373, 28.28, 0.5084", "438.146, 308.879, 28.28, 0.483", "437.337, 308.076, 28.28, 0.483", "436.644, 307.17, 28.28, 0.4576", "436.052, 306.203, 28.28, 0.4068", "435.524, 305.195, 28.28, 0.305", "434.816, 304.33, 28.28, 0.2796", "434.147, 303.423, 28.28, 0.3304", "433.585, 302.439, 28.28, 0.4322", "432.908, 301.524, 28.28, 0.5084", "432.239, 300.607, 28.28, 0.483", "431.382, 299.849, 28.28, 0.4068", "430.462, 299.172, 28.28, 0.305" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "440.354, 310.197, 28.3469, 0.6864", "440.137, 309.136, 27.6704, 0.4322" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "421.892, 333.482, 30.746, 0.7626", "422.249, 333.761, 31.3023, 0.5338", "421.51, 333.378, 32.6421, 0.5338", "421.577, 332.417, 34.1468, 0.5084", "421.511, 331.442, 35.5544, 0.4068", "420.649, 331.211, 37.0409, 0.3814", "419.545, 331.036, 37.4979, 0.3814", "418.848, 330.142, 37.4573, 0.5084", "418.043, 329.343, 37.1417, 0.661", "417.028, 328.824, 37.1958, 0.8136", "415.907, 328.717, 37.6527, 0.8136", "414.827, 328.496, 38.4014, 0.6864" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "421.892, 333.482, 30.746, 0.7626", "420.795, 333.275, 30.4662, 0.483", "419.997, 332.505, 29.7732, 0.5084", "418.933, 332.093, 29.9205, 0.6102", "418.324, 331.825, 30.3416, 0.6102", "417.248, 331.519, 30.1185, 0.6102", "416.156, 331.232, 29.6629, 0.5592", "415.048, 331.083, 29.0987, 0.5592", "413.923, 331.009, 28.6283, 0.6356", "412.815, 330.751, 28.5132, 0.7118", "411.684, 330.676, 28.2316, 0.7118", "410.593, 330.854, 27.5722, 0.661", "409.478, 330.697, 27.3171, 0.5848", "408.35, 330.623, 27.1323, 0.5848", "407.222, 330.606, 26.7719, 0.5848", "406.12, 330.555, 26.0302, 0.5848", "404.928, 330.229, 26.2077, 0.4576", "403.832, 330.018, 25.6012, 0.4576", "402.971, 329.638, 25.2185, 0.5084", "401.936, 329.148, 25.2073, 0.5848", "400.848, 328.795, 25.2459, 0.5592", "399.714, 328.688, 25.4716, 0.5592" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "429.698, 298.166, 36.7321, 0.4576", "429.77, 298.332, 35.28, 0.4322", "428.8, 298.279, 36.0847, 0.3814", "428.28, 298.404, 34.2182, 0.3304", "427.587, 297.823, 35.4099, 0.3304", "426.903, 297.696, 36.0872, 0.356", "426.034, 297.326, 35.1294, 0.3814", "425.369, 296.875, 33.6274, 0.3814", "424.701, 296.094, 34.4747, 0.3814", "424.006, 295.327, 35.2145, 0.3814", "423.492, 294.556, 36.143, 0.3814", "423.234, 293.56, 36.668, 0.4322", "422.941, 292.567, 37.3285, 0.5084", "422.981, 291.625, 37.9728, 0.6102", "422.303, 290.984, 37.1039, 0.661", "421.586, 290.279, 37.5931, 0.6864", "420.789, 289.718, 37.9599, 0.6864", "420.274, 288.953, 37.2761, 0.661", "419.779, 288.14, 37.0782, 0.6356", "419.238, 287.325, 38.0456, 0.6102", "419.04, 286.305, 37.9218, 0.5848", "419.004, 285.222, 37.9686, 0.5338", "418.569, 284.337, 38.0822, 0.4322", "418.01, 283.641, 38.6879, 0.4068", "417.506, 282.838, 39.6486, 0.4322", "416.798, 282.161, 39.261, 0.5338", "416.551, 281.265, 39.657, 0.5592", "415.995, 280.32, 39.401, 0.5338", "415.468, 279.661, 41.1354, 0.483", "414.931, 278.707, 41.4142, 0.4576", "414.444, 278.09, 40.0627, 0.4576", "413.685, 277.836, 41.375, 0.4576", "412.879, 277.322, 41.4602, 0.483", "412.055, 277.077, 41.1914, 0.5084", "411.271, 276.507, 42.0, 0.5338", "410.296, 276.419, 42.254, 0.5084", "409.363, 276.627, 42.3452, 0.483", "408.767, 276.586, 43.4, 0.4322", "408.127, 276.583, 44.8563, 0.3814", "407.407, 276.76, 46.1832, 0.356", "406.825, 276.644, 44.394, 0.356", "406.04, 276.888, 44.6639, 0.4068", "404.994, 276.689, 44.8269, 0.4068", "404.595, 276.166, 46.0995, 0.4068", "403.655, 275.94, 46.9468, 0.356", "403.146, 276.162, 47.6, 0.3304", "402.924, 275.884, 48.4179, 0.305", "402.23, 275.839, 47.3486, 0.3304", "402.039, 276.483, 48.9227, 0.356", "401.283, 276.58, 49.4155, 0.4068", "400.251, 276.279, 50.2152, 0.4322", "399.235, 275.912, 50.3524, 0.4322", "398.357, 275.253, 49.8711, 0.4068", "397.496, 274.953, 50.6341, 0.3814", "396.624, 274.459, 51.0485, 0.3814", "395.863, 273.668, 51.4318, 0.356", "394.806, 273.444, 51.8773, 0.305", "393.674, 273.405, 51.9061, 0.2542", "392.663, 273.194, 52.8066, 0.2288", "391.69, 273.2, 53.76, 0.2288", "390.677, 272.844, 54.04, 0.2288", "389.62, 272.501, 54.6703, 0.2288", "388.492, 272.386, 54.88, 0.2542", "387.497, 271.955, 54.9993, 0.2796", "386.521, 271.396, 55.16, 0.3304", "385.447, 271.054, 55.44, 0.356", "384.452, 270.599, 56.0087, 0.3814", "383.595, 269.93, 56.7484, 0.356", "383.303, 268.984, 57.7226, 0.356", "382.988, 268.136, 57.423, 0.3814", "382.246, 267.721, 58.52, 0.4322", "382.332, 266.998, 60.3414, 0.4322", "382.069, 266.196, 61.2399, 0.3814", "381.397, 265.335, 61.04, 0.3304", "380.637, 264.962, 62.2924, 0.2796", "380.041, 264.378, 63.6398, 0.2542", "379.22, 264.261, 65.2089, 0.2288", "378.487, 263.608, 64.3387, 0.2288", "377.546, 263.126, 64.925, 0.2542", "376.615, 262.725, 64.6036, 0.2796", "375.552, 262.414, 65.2557, 0.305", "374.621, 261.8, 65.7636, 0.2796", "373.879, 261.189, 67.1376, 0.2542", "373.173, 260.718, 67.48, 0.2288", "372.615, 259.696, 68.6924, 0.2542", "372.031, 258.827, 68.88, 0.2796", "371.789, 257.905, 69.3283, 0.3304", "371.59, 256.904, 70.1999, 0.3304", "371.432, 256.574, 69.0214, 0.356", "370.937, 255.985, 68.6711, 0.3814", "370.235, 255.357, 68.6, 0.3814", "369.273, 254.746, 68.4594, 0.4322", "368.304, 254.18, 68.0579, 0.4322", "367.469, 253.52, 68.6, 0.4576", "366.53, 253.061, 68.6, 0.4322", "365.637, 252.485, 68.2592, 0.3814", "364.794, 252.326, 68.8178, 0.3304", "363.974, 251.589, 69.358, 0.305", "363.102, 250.878, 69.7418, 0.2796", "362.474, 250.3, 68.88, 0.2542", "361.531, 249.918, 69.8572, 0.2542", "360.599, 249.506, 70.0795, 0.2796", "359.504, 249.473, 70.8159, 0.3304", "358.594, 248.872, 70.56, 0.356", "357.556, 248.594, 70.1954, 0.3814", "356.563, 248.477, 71.1054, 0.356", "355.605, 248.373, 70.2999, 0.3304", "354.744, 248.209, 70.1996, 0.305", "353.934, 247.917, 70.56, 0.3304", "352.946, 247.905, 71.5137, 0.356", "351.949, 248.204, 71.4773, 0.3814", "350.972, 247.855, 71.7111, 0.356", "349.888, 247.539, 71.7948, 0.305", "348.941, 247.148, 72.5152, 0.2542", "347.831, 247.016, 72.585, 0.2288", "346.756, 246.74, 72.9618, 0.2542", "345.831, 246.646, 73.36, 0.2796" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "429.698, 298.166, 36.7321, 0.4576", "429.598, 297.401, 36.1032, 0.5338", "430.264, 296.701, 35.7552, 0.5084", "430.408, 295.739, 37.1246, 0.5084", "430.141, 294.932, 36.8684, 0.4576", "430.095, 294.242, 35.28, 0.4576", "429.928, 293.252, 36.006, 0.4576", "429.907, 292.498, 35.6546, 0.4576", "429.733, 291.49, 35.5799, 0.483", "429.971, 290.503, 34.9241, 0.5338", "429.857, 289.678, 36.321, 0.5848", "429.915, 288.958, 34.9622, 0.5848" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "430.462, 299.172, 28.28, 0.305", "429.575, 298.451, 28.28, 0.356", "428.655, 297.784, 28.28, 0.2542", "427.807, 297.02, 28.28, 0.2542", "427.067, 296.172, 28.28, 0.2796", "426.457, 295.211, 28.28, 0.356", "425.797, 294.351, 28.28, 0.3814", "425.146, 293.612, 28.4777, 0.4068", "424.341, 292.799, 28.4777, 0.3304", "423.532, 291.99, 28.4777, 0.2796", "423.102, 290.961, 28.4777, 0.2288", "422.801, 289.858, 28.4777, 0.2542", "422.391, 288.809, 28.4777, 0.305", "421.693, 287.901, 28.4777, 0.356", "420.997, 286.994, 28.4777, 0.356", "420.303, 286.087, 28.6328, 0.305", "419.611, 285.179, 28.8047, 0.2542", "418.919, 284.27, 28.9766, 0.2288", "418.227, 283.362, 29.1486, 0.2288", "417.535, 282.454, 29.3202, 0.2288", "416.843, 281.545, 29.4921, 0.2288", "416.151, 280.638, 29.664, 0.2288", "415.458, 279.73, 29.836, 0.2288", "414.766, 278.821, 30.0079, 0.2542", "414.074, 277.913, 30.1798, 0.305", "413.382, 277.005, 30.3514, 0.3814", "412.701, 276.087, 30.476, 0.4322", "412.052, 275.146, 30.476, 0.4322", "411.403, 274.204, 30.476, 0.3814", "410.879, 273.191, 30.476, 0.3304", "410.403, 272.151, 30.476, 0.3304", "409.927, 271.11, 30.476, 0.356", "409.451, 270.071, 30.4951, 0.356", "408.959, 269.053, 30.9352, 0.305", "408.469, 268.036, 31.3751, 0.2542", "407.977, 267.019, 31.815, 0.2288", "407.485, 266.002, 32.2552, 0.2288", "406.993, 264.985, 32.695, 0.2288", "406.46, 263.986, 33.0604, 0.2288", "405.857, 263.019, 33.2959, 0.2288", "405.253, 262.053, 33.5317, 0.2288", "404.649, 261.085, 33.7672, 0.2288", "404.045, 260.118, 34.0029, 0.2542", "403.441, 259.151, 34.2384, 0.305", "402.837, 258.185, 34.473, 0.356", "402.132, 257.283, 34.473, 0.3814", "401.427, 256.383, 34.473, 0.356", "400.903, 255.374, 34.704, 0.3304", "400.408, 254.349, 34.9723, 0.2796", "399.914, 253.323, 35.2402, 0.2542", "399.42, 252.298, 35.5085, 0.2288", "398.924, 251.272, 35.7764, 0.2542", "398.43, 250.247, 36.0447, 0.2796", "397.935, 249.22, 36.3129, 0.3304", "397.397, 248.216, 36.4714, 0.356", "396.795, 247.242, 36.4714, 0.4322", "396.195, 246.27, 36.4714, 0.483", "395.742, 245.245, 36.738, 0.5084", "395.462, 244.162, 37.3142, 0.4322", "395.182, 243.077, 37.8902, 0.356", "394.903, 241.993, 38.4664, 0.3304", "394.632, 240.904, 38.9693, 0.4068", "394.42, 239.779, 38.9693, 0.4576", "393.453, 239.238, 38.9693, 0.483", "392.479, 238.67, 38.9693, 0.4322", "391.748, 237.791, 38.96, 0.4068", "391.052, 236.888, 38.7148, 0.356", "390.357, 235.986, 38.4698, 0.356", "389.787, 234.85, 39.2291, 0.4068", "389.281, 233.846, 39.6836, 0.3814", "388.714, 232.857, 39.8174, 0.356", "388.048, 231.941, 40.1044, 0.2796", "387.405, 231.134, 41.1284, 0.2796", "386.861, 230.473, 42.9789, 0.305", "386.254, 229.737, 44.1963, 0.356", "385.652, 228.767, 44.2142, 0.4068", "385.144, 227.744, 44.0952, 0.4068", "384.805, 226.697, 43.3952, 0.4068", "384.43, 225.736, 42.3707, 0.3304", "383.837, 224.778, 42.119, 0.2796", "383.421, 223.747, 42.5345, 0.2288", "382.927, 222.919, 42.3116, 0.2542", "382.109, 222.273, 41.2742, 0.2796", "381.436, 221.389, 41.2149, 0.3304", "380.898, 220.406, 41.7679, 0.3304", "380.492, 219.354, 42.1025, 0.3304", "380.275, 218.266, 42.6348, 0.2796", "380.089, 217.239, 43.6509, 0.305", "379.571, 216.27, 43.7861, 0.3304", "378.948, 215.428, 42.8635, 0.3814", "378.838, 214.375, 42.7557, 0.3304", "379.057, 213.426, 44.1638, 0.3304", "379.284, 212.496, 45.4152, 0.356", "379.352, 211.361, 45.6789, 0.4576", "379.361, 210.233, 46.1272, 0.483", "379.425, 209.107, 46.4579, 0.483", "379.5, 207.969, 46.356, 0.4322", "379.344, 206.866, 45.9508, 0.4068", "378.903, 205.847, 45.8867, 0.4068", "378.445, 204.83, 45.9158, 0.4576", "377.931, 203.832, 45.6243, 0.483", "377.131, 203.069, 45.9794, 0.4576", "376.208, 202.425, 46.4002, 0.4068", "375.369, 201.659, 46.4999, 0.4322", "374.625, 200.791, 46.5805, 0.5084", "373.885, 199.945, 47.0252, 0.5592", "373.197, 199.096, 46.7956, 0.5084", "372.87, 199.186, 44.84, 0.4322", "372.029, 199.514, 44.24, 0.3814" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "430.462, 299.172, 28.28, 0.305", "429.861, 298.618, 27.5019, 0.3304", "429.62, 298.083, 25.2538, 0.3304", "428.932, 297.69, 23.6986, 0.356", "427.825, 297.605, 23.0768, 0.3814", "426.721, 297.379, 22.7349, 0.356", "425.67, 297.024, 22.1231, 0.4068", "424.596, 296.759, 21.7608, 0.4576" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "440.137, 309.136, 27.6704, 0.4322", "440.005, 308.18, 26.6325, 0.3814", "439.892, 307.069, 26.3175, 0.4322", "439.484, 306.019, 26.3054, 0.483", "438.77, 305.134, 26.2606, 0.5592", "438.001, 304.291, 26.098, 0.5848", "437.345, 303.393, 25.5069, 0.6102", "436.612, 302.533, 25.1975, 0.6102", "435.812, 301.715, 25.1628, 0.6102", "435.035, 300.878, 25.0485, 0.6102", "434.423, 299.945, 24.4376, 0.6102", "434.034, 298.896, 23.8638, 0.5592", "433.788, 297.841, 22.9634, 0.483", "433.487, 296.812, 21.9929, 0.356" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "440.137, 309.136, 27.6704, 0.4322", "440.923, 308.005, 28.1162, 0.356" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "414.827, 328.496, 38.4014, 0.6864", "413.968, 328.793, 39.5072, 0.4068", "413.021, 328.996, 40.32, 0.483", "412.307, 329.471, 39.4094, 0.5338", "411.222, 329.583, 40.0529, 0.4576", "410.509, 330.153, 40.6, 0.3814", "410.385, 330.697, 41.9535, 0.2796", "410.121, 331.444, 43.0945, 0.2542", "409.876, 332.072, 42.2836, 0.2542", "409.79, 332.627, 43.9807, 0.305", "410.576, 332.935, 45.1248, 0.356", "409.6, 333.08, 45.5638, 0.356", "408.576, 333.006, 46.0096, 0.3304", "407.835, 332.636, 47.7896, 0.356", "407.522, 331.821, 47.32, 0.4576", "407.046, 330.926, 47.32, 0.5338", "406.464, 330.273, 47.3595, 0.5338", "405.717, 329.737, 48.0634, 0.4576", "405.213, 329.027, 48.986, 0.4068", "404.918, 328.51, 50.1166, 0.3814", "405.13, 328.377, 52.1587, 0.3814", "404.984, 327.818, 53.7578, 0.3814", "404.379, 327.133, 54.7064, 0.4068", "403.975, 326.499, 53.2081, 0.4322", "404.149, 325.784, 51.8025, 0.483", "403.395, 325.486, 51.2711, 0.4576", "403.015, 324.736, 52.4754, 0.4322", "402.989, 323.788, 53.436, 0.356", "402.423, 323.019, 53.067, 0.3304", "401.718, 322.491, 54.2223, 0.2796", "400.972, 322.15, 55.16, 0.2542" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "414.827, 328.496, 38.4014, 0.6864", "414.928, 328.283, 39.4024, 0.2542", "414.742, 327.424, 40.8274, 0.305", "415.055, 327.184, 43.2536, 0.3814", "415.881, 327.197, 42.2615, 0.4322", "416.53, 326.567, 41.8916, 0.4576", "416.645, 325.848, 43.9575, 0.4576", "416.835, 325.525, 45.7517, 0.483", "417.613, 325.304, 46.7678, 0.5338", "417.934, 325.454, 49.2022, 0.5848", "419.003, 325.354, 50.0794, 0.5848", "419.727, 325.164, 51.7513, 0.5084", "419.39, 324.246, 51.9268, 0.4322", "419.727, 323.751, 53.3478, 0.4068", "419.721, 323.433, 54.7837, 0.4322", "419.053, 323.368, 56.0689, 0.4322", "418.79, 322.327, 56.0918, 0.3814", "418.488, 321.707, 54.32, 0.3814", "418.226, 321.093, 55.6931, 0.4576", "417.559, 320.539, 56.6661, 0.5592", "416.651, 320.146, 57.4165, 0.6102", "416.301, 319.479, 58.6107, 0.6102", "416.131, 318.398, 58.8126, 0.6102", "416.479, 317.343, 59.3401, 0.5848", "417.022, 316.363, 59.3555, 0.5084", "417.541, 315.368, 59.36, 0.4322", "417.736, 314.714, 60.4038, 0.4068", "417.903, 314.257, 61.88, 0.4576" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "399.714, 328.688, 25.4716, 0.5592", "398.333, 328.784, 24.9864, 0.4576", "397.191, 328.764, 24.8399, 0.305", "396.103, 328.589, 24.3779, 0.2542", "395.171, 328.227, 23.1952, 0.2796", "394.089, 328.401, 22.9768, 0.356", "393.126, 329.0, 23.0773, 0.3814", "392.049, 329.299, 23.4951, 0.4322", "390.962, 329.244, 24.1301, 0.4068", "389.915, 328.805, 24.2547, 0.4068", "388.918, 328.253, 24.0848, 0.4068", "387.847, 327.854, 24.1091, 0.4322", "386.732, 327.606, 24.2108, 0.483", "385.633, 327.296, 24.3214, 0.483", "384.562, 326.915, 24.0481, 0.4576", "383.556, 326.387, 23.8638, 0.4068", "382.606, 325.806, 23.2364, 0.356", "381.571, 325.362, 22.8813, 0.3814", "380.473, 325.092, 22.6355, 0.3814", "379.467, 324.582, 22.4476, 0.4322", "378.491, 324.027, 22.9062, 0.4322", "377.578, 323.341, 22.9824, 0.4576", "376.742, 322.562, 23.0602, 0.4576", "375.91, 321.831, 23.5418, 0.4068", "375.162, 321.109, 24.4006, 0.4068", "374.539, 320.156, 24.204, 0.4322", "373.921, 319.203, 24.2637, 0.5592", "373.185, 318.348, 24.684, 0.6356", "372.365, 317.595, 25.0368, 0.6356", "371.542, 316.861, 24.659, 0.5848", "370.984, 315.895, 24.2494, 0.5084", "370.339, 315.006, 24.6123, 0.5084", "369.494, 314.272, 25.102, 0.483", "368.731, 313.425, 25.2, 0.5084", "367.928, 312.63, 25.2, 0.5338", "366.993, 311.97, 25.2, 0.5848", "366.152, 311.207, 25.2, 0.6102", "365.399, 310.345, 25.2011, 0.5848", "364.574, 309.557, 25.205, 0.5338", "363.635, 308.912, 25.2263, 0.4576", "362.662, 308.316, 25.338, 0.4068", "361.737, 307.687, 25.8255, 0.3814", "360.887, 306.973, 26.2934, 0.3814", "360.027, 306.229, 26.32, 0.3814", "358.996, 305.783, 26.32, 0.4068", "357.884, 305.516, 26.3194, 0.4068", "356.785, 305.202, 26.3172, 0.4068", "355.708, 304.816, 26.3046, 0.356", "354.697, 304.293, 26.2391, 0.3304", "353.72, 303.726, 25.8734, 0.2796", "352.767, 303.134, 25.3677, 0.305", "351.804, 302.526, 25.1877, 0.356", "350.833, 301.923, 25.079, 0.4322", "350.004, 301.188, 24.5339, 0.4068", "349.328, 300.29, 24.143, 0.356", "348.6, 299.412, 24.0601, 0.305", "347.825, 298.571, 23.9887, 0.305", "347.132, 297.702, 23.4242, 0.2796", "346.205, 297.116, 22.9852, 0.2796", "345.133, 296.788, 22.4854, 0.305", "344.361, 296.019, 22.7007, 0.356", "343.716, 295.08, 22.9172, 0.356", "342.966, 294.22, 22.913, 0.3304", "342.194, 293.376, 22.7679, 0.305", "341.54, 292.473, 22.1984, 0.3304", "340.802, 291.607, 22.0822, 0.356", "340.087, 290.767, 22.7612, 0.4068", "339.336, 289.916, 22.9494, 0.4576", "338.544, 289.09, 22.9622, 0.5338", "337.748, 288.267, 22.9715, 0.5848", "336.77, 287.686, 23.0272, 0.5848", "335.804, 287.107, 23.5024, 0.5084", "334.824, 286.53, 23.347, 0.4322", "333.771, 286.094, 23.5452, 0.356", "332.818, 285.494, 24.0304, 0.3304", "331.882, 284.838, 24.0783, 0.2796", "330.857, 284.331, 24.0769, 0.2796", "329.796, 283.908, 24.0601, 0.2796", "328.707, 283.558, 23.9462, 0.305", "327.642, 283.483, 22.96, 0.2796", "326.82, 282.884, 22.7856, 0.2542", "325.892, 282.22, 22.566, 0.2288", "324.965, 281.557, 22.3465, 0.2288", "324.038, 280.893, 22.127, 0.2288", "323.11, 280.23, 21.9075, 0.2288", "322.182, 279.565, 21.6877, 0.2288", "321.256, 278.901, 21.4682, 0.2542", "320.328, 278.238, 21.2486, 0.2796", "319.4, 277.574, 21.0291, 0.305", "318.408, 277.016, 21.1658, 0.2796", "317.399, 276.485, 21.3959, 0.2542", "316.39, 275.954, 21.6261, 0.2288", "315.381, 275.424, 21.8562, 0.2288", "314.462, 274.768, 21.9828, 0.2288", "313.653, 273.959, 21.9828, 0.2288", "312.759, 273.255, 21.9828, 0.2288", "311.726, 272.776, 21.9828, 0.2288", "310.65, 272.406, 21.873, 0.2288", "309.547, 272.164, 21.434, 0.2288", "308.443, 271.922, 20.9947, 0.2288", "307.312, 272.074, 20.9835, 0.2288", "306.185, 272.27, 20.9835, 0.2288", "305.066, 272.508, 20.9835, 0.2288", "303.958, 272.473, 20.2885, 0.2288", "302.851, 272.439, 19.5919, 0.2288", "301.749, 272.462, 18.9384, 0.2288", "300.691, 272.87, 18.576, 0.2288", "299.633, 273.278, 18.214, 0.2288", "298.574, 273.686, 17.8517, 0.2288", "297.516, 274.093, 17.4896, 0.2288", "296.457, 274.502, 17.1273, 0.2288", "295.346, 274.694, 16.9868, 0.2288", "294.211, 274.601, 16.9868, 0.2288", "293.084, 274.411, 16.9868, 0.2542", "291.966, 274.167, 16.9868, 0.2796", "290.886, 273.807, 17.122, 0.305", "289.829, 273.378, 17.3401, 0.2796", "288.773, 272.949, 17.5582, 0.2542", "287.716, 272.52, 17.7764, 0.2288", "286.659, 272.091, 17.9945, 0.2288", "285.602, 271.662, 18.2126, 0.2288", "284.546, 271.233, 18.4307, 0.2288", "283.489, 270.804, 18.6488, 0.2288", "282.432, 270.375, 18.8672, 0.2288", "281.375, 269.946, 19.0854, 0.2288", "280.319, 269.517, 19.3035, 0.2288", "279.262, 269.088, 19.5216, 0.2288", "278.205, 268.659, 19.7397, 0.2288", "277.148, 268.23, 19.9578, 0.2542", "276.131, 267.747, 20.4327, 0.305", "275.118, 267.258, 20.9429, 0.3814", "274.106, 266.767, 21.4533, 0.4068", "272.977, 266.824, 21.483, 0.4068", "271.846, 266.986, 21.483, 0.356", "270.777, 266.756, 21.6636, 0.356", "269.827, 266.148, 22.141, 0.356", "268.877, 265.541, 22.6181, 0.4322", "267.937, 264.922, 23.1134, 0.5084", "267.027, 264.267, 23.6676, 0.5592", "266.039, 263.743, 23.9812, 0.5084", "264.952, 263.389, 23.9812, 0.3814", "263.843, 263.134, 24.1676, 0.305", "262.723, 262.938, 24.4714, 0.2796", "261.603, 262.744, 24.7752, 0.305", "260.475, 262.626, 24.9805, 0.2796", "259.333, 262.691, 24.9805, 0.2796", "258.205, 262.879, 24.9805, 0.2796", "257.142, 263.286, 24.9805, 0.305", "256.162, 262.837, 24.9805, 0.3304", "255.341, 262.054, 24.9805, 0.356", "254.969, 261.028, 24.9805, 0.4068", "254.79, 259.898, 24.9805, 0.4068", "254.764, 258.799, 24.9805, 0.4322", "255.162, 257.746, 24.9805, 0.4322", "254.896, 256.748, 24.7702, 0.4322", "254.055, 256.011, 24.1732, 0.3814", "253.45, 255.074, 23.9812, 0.3304", "253.069, 253.999, 23.9812, 0.305", "252.744, 252.902, 23.9812, 0.305" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "399.714, 328.688, 25.4716, 0.5592", "399.27, 328.59, 25.9092, 0.4068", "398.341, 327.945, 26.3326, 0.4322", "397.601, 327.423, 26.3662, 0.3814", "396.571, 326.931, 26.5586, 0.3304", "395.571, 326.448, 27.2359, 0.3304", "394.706, 325.703, 27.0838, 0.356", "393.372, 325.157, 27.5069, 0.4322", "392.383, 324.666, 28.0602, 0.4576", "391.36, 324.219, 28.6429, 0.4322", "390.293, 323.914, 29.2222, 0.3814", "389.248, 323.534, 28.9864, 0.3304", "388.183, 323.17, 29.1096, 0.3304", "387.145, 322.711, 29.0763, 0.3814", "386.148, 322.176, 29.3591, 0.4322", "385.18, 321.578, 29.6492, 0.4576", "384.17, 321.049, 29.7973, 0.483", "383.15, 320.59, 30.3327, 0.483", "382.13, 320.119, 30.8549, 0.483", "381.094, 319.69, 31.407, 0.4322", "380.005, 319.388, 31.2687, 0.4322", "378.904, 319.198, 31.7355, 0.4322", "377.771, 319.118, 31.9561, 0.483", "376.678, 318.821, 32.244, 0.5338", "375.674, 318.343, 32.858, 0.5848", "374.691, 317.771, 33.0467, 0.5848", "373.652, 317.296, 33.1486, 0.5592", "372.62, 316.857, 33.6801, 0.5338", "371.601, 316.371, 34.1093, 0.5084", "370.531, 315.972, 34.1804, 0.483", "369.462, 315.569, 34.2885, 0.4576", "368.615, 314.861, 34.9233, 0.5084", "367.772, 314.105, 35.2932, 0.5592", "366.784, 313.542, 35.5169, 0.6102", "366.004, 312.767, 36.2412, 0.5848", "365.175, 311.987, 36.3958, 0.5592", "364.257, 311.305, 36.416, 0.5084", "363.485, 310.463, 36.4711, 0.483", "362.921, 309.479, 36.8007, 0.4322", "362.351, 308.522, 37.4237, 0.4068", "361.848, 307.497, 37.5707, 0.4068", "361.266, 306.535, 38.0724, 0.4068" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "429.915, 288.958, 34.9622, 0.5848", "429.757, 288.139, 35.2671, 0.305", "430.675, 288.038, 36.0038, 0.305", "431.42, 287.323, 35.8812, 0.3304", "431.739, 286.397, 36.68, 0.3304", "431.746, 285.296, 36.7329, 0.356", "431.849, 284.505, 36.6374, 0.356", "432.297, 283.601, 36.433, 0.4068", "432.318, 282.61, 37.24, 0.4322", "431.974, 281.79, 38.3323, 0.4322", "432.067, 280.906, 37.5452, 0.3814", "431.974, 279.896, 38.1749, 0.3304", "432.135, 279.566, 40.2514, 0.305", "432.47, 278.694, 40.0019, 0.3304", "432.316, 277.834, 38.5496, 0.356", "432.212, 276.749, 39.2092, 0.4068", "432.121, 275.782, 39.8476, 0.4322", "431.517, 275.161, 39.2207, 0.483", "431.434, 274.085, 38.9357, 0.483", "431.322, 273.165, 39.8507, 0.483", "430.954, 272.472, 39.6668, 0.4322", "430.813, 271.38, 39.7578, 0.4322", "430.602, 270.413, 39.9272, 0.4322", "430.318, 269.477, 40.6734, 0.4322", "430.419, 268.396, 40.8626, 0.4068", "430.698, 267.657, 42.1061, 0.4068", "430.936, 266.895, 41.8972, 0.483", "431.076, 266.519, 40.2416, 0.5338", "431.675, 265.835, 41.391, 0.5592", "432.24, 265.011, 42.03, 0.5084", "432.762, 264.679, 42.023, 0.5084", "433.112, 263.357, 42.2957, 0.4068", "433.128, 262.243, 42.9083, 0.305", "433.396, 261.196, 43.2312, 0.2796", "434.25, 260.484, 43.5982, 0.305", "435.246, 260.003, 44.2322, 0.3814", "436.194, 259.396, 44.665, 0.4322", "437.098, 258.761, 45.2802, 0.4576", "437.94, 257.991, 45.365, 0.4322", "438.765, 257.207, 45.3872, 0.4068", "439.654, 256.495, 45.5188, 0.356", "440.516, 255.811, 46.032, 0.3814", "441.378, 255.358, 47.3379, 0.4068", "441.307, 254.748, 48.8886, 0.483", "440.414, 254.141, 49.6583, 0.4576", "439.485, 253.507, 49.9934, 0.4068", "438.805, 252.751, 50.9793, 0.3304", "438.63, 251.744, 51.6138, 0.3304", "438.749, 250.611, 51.8014, 0.356", "439.2, 249.649, 52.6212, 0.356", "440.161, 249.256, 53.2106, 0.305", "441.248, 249.333, 53.9773, 0.2796", "442.055, 249.026, 55.6872, 0.2796", "442.473, 248.453, 57.2818, 0.305", "443.054, 247.522, 57.4832, 0.2796", "443.945, 247.023, 57.9085, 0.2796", "444.435, 246.048, 57.96, 0.2796", "444.902, 245.207, 58.5262, 0.3304", "445.101, 244.259, 59.5848, 0.356", "445.524, 243.338, 59.3491, 0.3814", "446.024, 242.363, 59.6884, 0.3814", "446.476, 241.385, 59.6322, 0.356", "446.846, 240.386, 59.6924, 0.356", "446.679, 239.439, 60.4397, 0.3304", "446.194, 238.69, 61.3116, 0.3304", "446.143, 237.667, 62.0712, 0.2796", "446.142, 236.547, 61.9517, 0.2542", "445.588, 235.893, 61.32, 0.2288", "445.693, 234.941, 63.28, 0.2288", "445.806, 233.805, 63.28, 0.2288", "445.962, 232.683, 63.28, 0.2288", "446.316, 231.596, 63.28, 0.2288", "446.618, 230.516, 63.28, 0.2288", "447.734, 230.305, 63.28, 0.2288", "448.703, 229.951, 63.28, 0.2796", "449.478, 229.143, 63.28, 0.356" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "429.915, 288.958, 34.9622, 0.5848", "429.683, 287.97, 35.0, 0.305", "428.929, 287.318, 34.4784, 0.305", "428.82, 286.366, 35.0605, 0.305", "428.493, 285.319, 34.8933, 0.3304", "428.311, 284.249, 34.9588, 0.356", "427.801, 283.41, 35.8319, 0.3814", "427.109, 282.657, 35.5888, 0.4068", "426.753, 281.746, 34.4526, 0.483", "426.252, 281.185, 36.0528, 0.5592", "425.721, 280.518, 34.974, 0.6102", "425.685, 279.464, 35.0736, 0.5592", "425.267, 278.569, 34.16, 0.483", "425.106, 277.76, 35.3749, 0.356", "424.8, 276.812, 35.3091, 0.3304", "424.226, 276.201, 36.7044, 0.356", "424.234, 275.267, 36.1222, 0.4576", "423.966, 274.41, 36.4434, 0.483", "423.65, 273.604, 35.9296, 0.5084", "423.743, 272.645, 36.0648, 0.5084", "423.056, 271.853, 36.0461, 0.5338", "422.588, 270.943, 35.0266, 0.5084", "421.819, 270.228, 34.86, 0.5084", "421.49, 269.197, 34.6262, 0.5084", "420.914, 268.421, 35.2271, 0.5592", "420.715, 267.384, 34.72, 0.5592", "420.274, 266.738, 35.9887, 0.5338", "419.631, 265.491, 36.4767, 0.483", "419.077, 264.504, 36.7668, 0.5084", "418.666, 263.47, 37.3232, 0.5338", "418.487, 262.35, 37.394, 0.5084" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "424.596, 296.759, 21.7608, 0.4576", "424.798, 296.688, 20.3764, 0.3814", "423.783, 296.64, 20.44, 0.3304", "422.845, 296.765, 19.7005, 0.305", "422.012, 296.868, 20.4775, 0.305", "421.193, 296.572, 19.7557, 0.356", "420.227, 296.309, 19.4768, 0.3814", "419.265, 296.541, 18.6939, 0.356", "418.22, 296.45, 17.9696, 0.3304", "417.725, 295.989, 16.8, 0.305", "416.859, 295.861, 17.6442, 0.305", "415.946, 296.185, 18.9241, 0.305", "414.94, 296.514, 18.3896, 0.2796", "413.855, 296.53, 18.76, 0.2796", "412.943, 297.117, 18.4612, 0.2796", "411.884, 297.255, 18.7597, 0.305", "410.807, 297.326, 19.2699, 0.2796", "410.174, 297.442, 18.7494, 0.2796", "409.209, 297.433, 19.4793, 0.2796", "408.701, 297.539, 19.931, 0.305", "407.603, 297.44, 19.32, 0.2796", "406.459, 297.44, 19.32, 0.2542", "405.315, 297.44, 19.32, 0.2288", "404.262, 297.44, 18.3285, 0.2288", "403.16, 297.231, 18.3826, 0.2542", "402.03, 297.187, 18.7975, 0.2796", "401.022, 297.258, 18.9767, 0.3304", "400.165, 297.661, 19.4261, 0.3304", "399.203, 297.669, 18.9232, 0.3304", "398.242, 297.773, 19.5006, 0.3304", "397.212, 298.005, 19.7392, 0.3814", "396.203, 297.975, 20.9017, 0.4322", "395.283, 297.751, 21.4214, 0.4068", "394.256, 297.725, 22.342, 0.356", "393.153, 297.781, 22.6506, 0.305", "392.311, 298.012, 22.2275, 0.305", "391.614, 298.126, 22.1892, 0.305", "390.844, 298.583, 22.6621, 0.3304", "389.911, 298.872, 22.4487, 0.3814", "388.846, 298.698, 23.24, 0.4322", "388.346, 298.57, 22.4711, 0.4322", "387.601, 298.21, 23.3596, 0.3814", "386.826, 298.087, 21.6149, 0.3304", "386.284, 297.802, 23.0678, 0.305", "385.196, 297.669, 23.399, 0.305", "384.255, 297.669, 24.337, 0.305", "383.282, 297.848, 23.3472, 0.305", "382.456, 297.934, 24.7052, 0.305", "381.771, 298.506, 24.1884, 0.2796", "380.955, 298.362, 25.6068, 0.2796", "380.415, 297.677, 24.4846, 0.305", "379.552, 297.086, 25.2, 0.356", "378.709, 296.818, 24.1433, 0.3814", "377.83, 296.768, 24.4653, 0.356", "377.354, 296.55, 24.4219, 0.356", "376.357, 296.533, 24.7296, 0.356", "375.305, 296.469, 24.6616, 0.4068", "374.255, 296.182, 25.303, 0.4068", "373.459, 296.296, 25.037, 0.3814", "372.568, 295.869, 24.9553, 0.305", "371.49, 295.616, 24.92, 0.2542", "370.385, 295.661, 25.1748, 0.2542", "369.561, 295.845, 25.0589, 0.2796", "368.51, 296.063, 25.8936, 0.305", "367.497, 296.039, 25.6396, 0.3304", "366.61, 296.092, 26.5275, 0.3814", "365.812, 296.582, 25.9462, 0.4322", "364.888, 296.551, 26.5972, 0.4068", "364.105, 296.597, 24.9239, 0.356", "363.152, 296.851, 25.8787, 0.3304", "362.911, 297.662, 26.1766, 0.3814", "362.499, 298.61, 26.8282, 0.4068", "361.767, 299.313, 25.7608, 0.4068", "361.026, 300.016, 25.7194, 0.356", "360.246, 300.648, 26.04, 0.356", "359.616, 301.439, 25.8532, 0.356", "359.033, 301.999, 24.8662, 0.3814", "358.268, 302.303, 23.1918, 0.356", "357.406, 302.428, 23.2677, 0.305", "356.544, 302.81, 23.6082, 0.2796", "355.472, 302.661, 24.3676, 0.305", "354.536, 302.927, 24.5176, 0.356", "353.679, 303.274, 22.9947, 0.356", "352.851, 302.927, 22.2762, 0.3304", "351.799, 302.934, 22.9502, 0.3304", "350.685, 303.142, 23.0807, 0.3814", "349.62, 303.159, 23.5158, 0.4068", "348.61, 303.03, 23.7112, 0.3814", "347.875, 303.534, 23.4315, 0.305", "347.114, 304.178, 23.52, 0.2542", "346.031, 304.471, 23.6634, 0.2542", "345.122, 304.655, 23.7079, 0.305", "344.422, 305.065, 23.7958, 0.356", "343.651, 305.273, 22.787, 0.3814", "342.819, 305.219, 21.9341, 0.356", "342.177, 305.321, 23.0874, 0.356", "341.484, 305.448, 23.52, 0.4068" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "424.596, 296.759, 21.7608, 0.4576", "423.582, 296.407, 22.47, 0.483", "422.833, 295.691, 23.6135, 0.5338", "421.99, 294.949, 23.898, 0.4576", "421.493, 293.942, 23.9014, 0.4068", "421.021, 292.906, 24.155, 0.3814", "420.611, 291.864, 24.7153, 0.4576", "419.983, 290.931, 25.1532, 0.5338", "419.239, 290.064, 25.1826, 0.5592", "418.729, 289.043, 25.0802, 0.5848", "418.109, 288.087, 24.8626, 0.5848", "417.764, 287.271, 26.6246, 0.6356", "416.829, 286.42, 26.8408, 0.5848", "416.163, 285.891, 27.7746, 0.483", "415.233, 286.018, 28.8635, 0.4068", "414.692, 285.348, 29.96, 0.4068", "414.172, 285.314, 28.4259, 0.4322", "413.632, 284.698, 27.183, 0.483", "412.811, 283.964, 27.3986, 0.5338", "412.105, 283.267, 28.1324, 0.6102", "411.484, 282.669, 28.0, 0.6102", "411.154, 281.652, 28.0409, 0.5592", "410.627, 281.072, 29.577, 0.483", "409.849, 280.536, 30.4634, 0.483", "409.134, 279.901, 29.701, 0.5084", "408.651, 279.158, 31.0909, 0.5338", "408.053, 278.641, 32.5399, 0.5338", "407.194, 278.054, 32.6348, 0.5084", "406.416, 277.288, 32.319, 0.4322", "405.907, 276.539, 33.6025, 0.3304", "405.247, 275.964, 33.817, 0.2796", "404.446, 275.25, 33.628, 0.2796", "403.79, 274.612, 34.1348, 0.3304", "403.374, 273.821, 33.8957, 0.3304", "402.94, 273.562, 35.0, 0.356", "402.45, 272.677, 35.0, 0.3304", "401.934, 272.0, 36.111, 0.3304", "401.198, 271.149, 35.9324, 0.2796", "400.634, 270.319, 36.3322, 0.2542", "400.171, 269.469, 36.4, 0.2542", "399.72, 268.879, 37.7376, 0.2796", "399.164, 268.84, 35.8711, 0.305", "398.57, 268.374, 35.6821, 0.305", "398.112, 267.969, 35.3441, 0.3304", "398.226, 267.25, 37.4618, 0.356", "397.746, 266.552, 37.084, 0.3814", "396.876, 266.033, 37.875, 0.3814", "396.349, 265.369, 38.5325, 0.4322", "395.789, 264.542, 38.0842, 0.483", "395.061, 263.997, 38.92, 0.5084", "393.78, 263.46, 38.3827, 0.3304", "392.931, 263.17, 37.5824, 0.2542", "392.18, 262.398, 38.2668, 0.2288", "391.591, 261.781, 39.4962, 0.2542", "391.569, 261.364, 41.7959, 0.2796", "390.558, 260.98, 42.2624, 0.305", "390.015, 260.361, 41.2314, 0.2796", "389.301, 259.697, 41.3899, 0.2542", "388.731, 258.922, 42.0454, 0.2288", "387.969, 258.288, 41.7679, 0.2288", "387.205, 257.473, 41.9754, 0.2288", "386.577, 256.734, 42.5314, 0.2542", "385.614, 256.224, 43.1301, 0.305", "384.72, 255.797, 43.3605, 0.3814", "384.371, 255.01, 42.28, 0.4322", "383.518, 254.452, 43.458, 0.4322", "382.848, 253.886, 44.8, 0.3814", "382.09, 253.076, 44.6555, 0.305", "381.277, 252.308, 44.9949, 0.2542", "380.763, 251.909, 43.7125, 0.2542", "379.962, 251.304, 44.5141, 0.2796", "379.092, 251.01, 44.7605, 0.305", "378.775, 250.357, 42.9783, 0.305", "378.317, 249.735, 43.7984, 0.3304", "377.402, 249.482, 44.52, 0.356", "376.924, 248.656, 45.3589, 0.356", "376.375, 247.822, 45.1312, 0.3304", "376.075, 246.945, 44.9985, 0.305", "375.572, 246.051, 45.0892, 0.3304", "375.195, 245.105, 45.0517, 0.3814", "374.674, 244.226, 45.5174, 0.4576", "374.21, 243.634, 44.0191, 0.5338", "373.503, 242.983, 45.183, 0.5592", "373.053, 242.178, 46.2, 0.5338", "372.611, 241.498, 45.4188, 0.4322", "371.81, 241.289, 43.7472, 0.3814", "371.046, 240.624, 43.9424, 0.3814", "370.781, 240.24, 46.3565, 0.4322", "370.371, 239.317, 47.04, 0.4322", "369.947, 238.477, 47.4099, 0.4068", "369.569, 237.803, 48.6951, 0.4068", "368.826, 237.151, 49.0, 0.4068" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "433.487, 296.812, 21.9929, 0.356", "433.84, 296.747, 21.224, 0.2542", "434.707, 296.31, 19.8985, 0.2542", "435.427, 295.428, 19.8355, 0.305", "436.328, 294.776, 19.896, 0.356", "437.353, 294.398, 19.1478, 0.3814", "438.361, 294.152, 18.6068, 0.3814", "439.218, 294.204, 16.9056, 0.4068", "440.152, 293.708, 16.2487, 0.4576", "440.989, 292.951, 16.2652, 0.5338", "442.021, 292.474, 16.394, 0.5592", "443.048, 292.075, 16.9697, 0.5338", "443.843, 291.358, 17.8942, 0.483", "444.386, 290.4, 17.5666, 0.4576", "445.255, 289.705, 17.5218, 0.4576", "446.327, 289.339, 17.7509, 0.4322", "447.143, 288.707, 16.751, 0.4322", "447.731, 287.918, 17.9211, 0.4322" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "433.487, 296.812, 21.9929, 0.356", "432.703, 295.611, 22.3513, 0.5084", "432.106, 294.658, 22.8491, 0.6102", "431.226, 293.952, 22.5809, 0.6102", "430.285, 293.362, 21.9251, 0.6356", "429.556, 292.488, 21.7529, 0.6356", "429.103, 291.456, 21.2962, 0.7118", "429.001, 290.341, 20.7304, 0.7118", "429.003, 289.198, 20.72, 0.7372", "429.023, 288.053, 20.72, 0.7118", "429.178, 286.921, 20.7197, 0.6864", "429.305, 285.784, 20.7183, 0.5592" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "440.923, 308.005, 28.1162, 0.356", "441.19, 306.741, 28.2702, 0.5084", "441.816, 305.831, 27.6665, 0.5084", "442.448, 304.898, 27.3084, 0.5084", "443.056, 303.931, 27.2583, 0.4322", "443.636, 303.025, 28.0932, 0.4576", "444.338, 302.197, 27.6111, 0.4576", "444.865, 301.204, 27.2331, 0.4576", "445.647, 300.477, 26.6459, 0.356", "446.271, 299.592, 27.3952, 0.305", "446.546, 298.528, 27.9093, 0.305", "446.976, 297.498, 27.7802, 0.4068", "447.625, 296.605, 28.4861, 0.4576", "448.113, 295.669, 29.2776, 0.483", "448.21, 294.923, 30.6121, 0.4322", "448.098, 294.714, 29.5229, 0.4576", "447.961, 293.917, 30.5085, 0.483", "447.764, 293.073, 31.08, 0.5084", "447.995, 292.408, 29.4378, 0.4322", "448.267, 291.758, 30.777, 0.356", "449.339, 291.582, 30.8552, 0.3304", "450.069, 291.449, 31.1035, 0.3814", "450.61, 290.832, 31.7654, 0.4576", "451.148, 290.415, 31.8889, 0.483", "451.315, 290.284, 29.96, 0.483", "451.651, 289.542, 30.6186, 0.4322", "452.343, 289.048, 31.08, 0.4068", "452.455, 288.288, 30.7339, 0.356", "452.917, 288.094, 28.6065, 0.305", "453.642, 287.59, 27.1869, 0.2542", "453.81, 287.16, 28.245, 0.2288", "453.935, 286.693, 29.3779, 0.2288", "453.777, 286.2, 31.5759, 0.2288", "454.091, 285.666, 33.7397, 0.2288", "454.682, 285.156, 35.2072, 0.2288", "455.193, 284.295, 35.1086, 0.2796", "455.762, 284.038, 33.2934, 0.356", "456.122, 283.247, 33.9343, 0.4576", "456.63, 282.591, 35.2142, 0.4576", "457.221, 281.883, 33.7456, 0.4068", "457.831, 281.106, 34.2605, 0.305", "458.685, 280.725, 34.4876, 0.2542", "459.37, 280.038, 34.6811, 0.2288", "459.893, 279.274, 34.2866, 0.2288", "460.589, 278.575, 33.8635, 0.2288", "460.918, 278.221, 34.3442, 0.2796", "461.415, 277.65, 34.0371, 0.356", "462.044, 276.975, 33.066, 0.483", "462.405, 276.252, 33.5434, 0.5338", "462.993, 275.444, 33.3824, 0.5592", "463.583, 274.838, 34.3364, 0.483", "464.107, 273.882, 34.2104, 0.4322", "464.581, 273.125, 32.6203, 0.356" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "440.923, 308.005, 28.1162, 0.356", "441.238, 307.928, 27.7928, 0.356", "442.281, 308.108, 26.784, 0.3304", "443.35, 307.799, 27.172, 0.3814", "444.379, 307.498, 26.2486, 0.3814", "444.876, 307.981, 24.045, 0.4068", "445.783, 308.084, 22.4778, 0.356", "446.861, 307.801, 22.0394, 0.356", "447.996, 307.729, 21.8002, 0.4068", "449.074, 307.679, 20.8872, 0.483", "450.173, 307.395, 20.6497, 0.5338", "451.278, 307.19, 20.1424, 0.483", "452.361, 306.88, 20.0214, 0.4068", "453.421, 306.758, 21.0053, 0.305", "454.404, 306.521, 21.9145, 0.2542", "455.406, 306.372, 20.6511, 0.2542", "456.354, 306.433, 19.1041, 0.2796", "457.267, 306.732, 18.0088, 0.356", "458.22, 306.968, 18.704, 0.3814", "459.231, 306.676, 19.607, 0.4322", "460.314, 306.351, 19.9122, 0.4068", "461.3, 305.846, 19.9354, 0.4322", "462.294, 305.454, 19.2643, 0.4068", "463.402, 305.231, 19.2856, 0.4068", "464.457, 304.845, 18.7566, 0.356", "465.527, 304.541, 18.2031, 0.356", "466.606, 304.53, 17.2701, 0.3304", "467.096, 304.533, 16.3898, 0.2796", "468.041, 304.615, 17.222, 0.2796", "469.031, 304.53, 17.4854, 0.2796", "469.821, 303.912, 16.8244, 0.3304", "470.22, 303.286, 15.7161, 0.356", "471.232, 303.151, 14.947, 0.3814", "472.043, 303.049, 16.3111, 0.4068", "472.888, 302.58, 17.0699, 0.4576", "473.626, 302.181, 16.5676, 0.5084", "474.315, 301.843, 17.0545, 0.5592", "475.009, 301.095, 17.7156, 0.5592", "475.969, 300.544, 18.1941, 0.6102", "476.489, 299.825, 17.64, 0.5592", "477.297, 299.258, 17.9099, 0.5084", "477.506, 298.6, 16.52, 0.3814", "477.987, 298.584, 16.7342, 0.356", "478.599, 298.19, 18.2, 0.356", "479.41, 298.326, 17.1016, 0.356", "480.084, 298.047, 15.6632, 0.305", "480.407, 297.321, 15.379, 0.2542", "481.098, 297.211, 16.4629, 0.2288", "481.589, 296.472, 17.2953, 0.2288", "482.681, 296.313, 16.8423, 0.2796", "483.6, 296.021, 17.334, 0.3304", "484.071, 295.333, 16.2669, 0.4068", "484.93, 295.001, 16.945, 0.3814", "485.588, 294.788, 15.8763, 0.3814", "486.147, 293.97, 16.8, 0.3304", "486.799, 293.642, 15.8343, 0.356", "486.765, 293.069, 14.5079, 0.356", "487.66, 292.697, 15.0086, 0.3814", "488.22, 291.988, 16.1566, 0.356", "488.903, 291.487, 16.7168, 0.305", "489.289, 291.148, 18.2, 0.305" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "361.266, 306.535, 38.0724, 0.4068", "360.618, 306.468, 37.8958, 0.2796", "359.861, 306.185, 37.3293, 0.2542", "358.843, 305.713, 37.52, 0.2542", "357.832, 305.382, 37.52, 0.2796", "356.854, 304.819, 37.4732, 0.305", "355.943, 304.155, 37.5169, 0.2796", "355.238, 303.389, 37.52, 0.2542", "354.277, 303.046, 37.52, 0.2288", "353.32, 302.446, 37.52, 0.2288", "353.257, 301.312, 37.52, 0.2288", "352.23, 301.099, 37.5222, 0.2288", "351.314, 300.507, 37.6155, 0.2542", "350.564, 299.674, 38.08, 0.305", "350.138, 298.735, 37.2411, 0.356", "349.395, 298.192, 37.8602, 0.356", "348.784, 297.265, 38.0696, 0.3304", "348.09, 296.384, 38.2987, 0.305", "347.311, 295.563, 38.1016, 0.3304", "346.422, 294.899, 38.054, 0.3814", "345.79, 294.371, 37.676, 0.4576", "345.043, 293.779, 37.8, 0.483", "344.195, 293.418, 36.9692, 0.4576", "343.387, 292.845, 37.1515, 0.4068", "342.612, 292.241, 37.3584, 0.4068", "341.565, 292.276, 37.7199, 0.4322", "340.719, 291.834, 37.9632, 0.4322", "340.178, 291.38, 37.3416, 0.3814", "339.293, 291.232, 37.6334, 0.3304", "338.323, 290.875, 37.562, 0.3304", "337.382, 290.282, 37.8778, 0.356", "336.328, 289.894, 37.4634, 0.3814", "335.421, 289.437, 36.4, 0.3814", "334.326, 289.318, 36.7601, 0.4068", "333.465, 289.089, 36.3104, 0.4068", "332.49, 288.86, 36.8012, 0.3814", "331.802, 288.653, 36.5974, 0.3304", "330.945, 288.609, 36.2765, 0.305", "330.166, 288.429, 35.0, 0.305", "329.042, 288.278, 35.0, 0.305", "328.535, 287.661, 36.2939, 0.3304", "327.789, 286.993, 35.537, 0.356", "326.86, 286.414, 35.1691, 0.3814", "326.38, 286.017, 36.668, 0.356", "325.541, 285.446, 35.9517, 0.3304", "324.674, 285.771, 36.1287, 0.2796", "323.981, 285.314, 36.12, 0.2542", "323.58, 284.434, 35.9719, 0.2542", "322.573, 283.933, 35.9719, 0.2796", "321.473, 283.616, 35.9719, 0.305", "320.422, 283.168, 35.9719, 0.2796", "319.395, 282.671, 35.8663, 0.2542", "318.403, 282.11, 35.6112, 0.2288", "317.411, 281.551, 35.3562, 0.2288", "316.418, 280.99, 35.1011, 0.2288", "315.426, 280.431, 34.846, 0.2288", "314.434, 279.87, 34.5906, 0.2288", "313.516, 279.202, 34.473, 0.2288", "312.662, 278.443, 34.473, 0.2288", "311.876, 277.618, 34.473, 0.2288", "311.189, 276.704, 34.473, 0.2288", "310.5, 275.79, 34.473, 0.2288", "309.811, 274.877, 34.473, 0.2288", "309.064, 274.03, 34.918, 0.2288", "308.315, 273.187, 35.3805, 0.2288", "307.565, 272.344, 35.8431, 0.2288", "306.691, 271.679, 36.5428, 0.2288", "305.77, 271.085, 37.3338, 0.2288", "304.847, 270.488, 38.1251, 0.2288", "303.925, 269.894, 38.9164, 0.2288", "303.003, 269.299, 39.7074, 0.2288", "302.074, 268.737, 40.4681, 0.2288", "300.965, 269.018, 40.4681, 0.2542", "299.841, 269.229, 40.4681, 0.2796", "298.703, 269.2, 40.4681, 0.3304", "297.567, 269.065, 40.4681, 0.3304", "296.436, 269.089, 40.4681, 0.3304", "295.557, 269.712, 40.4681, 0.2796", "294.507, 270.029, 40.4681, 0.2542", "293.405, 269.733, 40.4984, 0.2288", "292.341, 269.315, 40.6112, 0.2288", "291.278, 268.895, 40.7238, 0.2288", "290.215, 268.475, 40.8363, 0.2288", "289.152, 268.055, 40.9492, 0.2288", "288.089, 267.635, 41.0617, 0.2288", "287.025, 267.217, 41.1743, 0.2288", "285.962, 266.797, 41.2868, 0.2288", "284.898, 266.377, 41.3997, 0.2288", "283.825, 265.982, 41.4674, 0.2288", "282.738, 265.626, 41.4674, 0.2542", "281.632, 265.372, 41.4674, 0.2796", "280.502, 265.288, 41.7211, 0.3304", "279.381, 265.17, 42.1991, 0.3304", "278.26, 265.052, 42.677, 0.3814", "277.139, 264.934, 43.155, 0.3814", "276.031, 264.775, 43.7175, 0.4068", "274.951, 264.539, 44.4371, 0.356", "273.871, 264.302, 45.1567, 0.3304", "272.763, 264.297, 45.4644, 0.305", "271.631, 264.468, 45.4644, 0.2796", "270.508, 264.671, 45.5375, 0.2542", "269.407, 264.964, 45.8055, 0.2288", "268.307, 265.257, 46.0734, 0.2542", "267.206, 265.55, 46.3411, 0.3304", "266.106, 265.843, 46.6091, 0.4068", "265.007, 266.134, 46.877, 0.4576", "263.882, 266.321, 46.963, 0.4068", "262.746, 266.456, 46.963, 0.356", "261.655, 266.729, 47.2791, 0.2796", "260.599, 267.107, 47.8332, 0.2542", "259.543, 267.483, 48.3874, 0.2288", "258.487, 267.86, 48.9415, 0.2542", "257.4, 268.216, 48.9616, 0.2796", "256.287, 268.413, 48.9616, 0.305", "255.227, 268.163, 49.3769, 0.2796", "254.246, 267.673, 50.1684, 0.2796", "253.264, 267.182, 50.96, 0.2796" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "361.266, 306.535, 38.0724, 0.4068", "361.504, 305.448, 38.64, 0.305", "361.923, 304.345, 37.7754, 0.2796", "361.872, 303.25, 37.8, 0.2796", "361.625, 302.351, 38.6635, 0.305", "361.846, 301.258, 39.1051, 0.305", "361.933, 300.23, 38.8055, 0.305", "361.774, 299.268, 39.0286, 0.305", "361.607, 298.145, 39.2384, 0.2796", "361.504, 297.044, 39.9165, 0.2796", "361.602, 296.029, 40.3066, 0.305", "361.883, 294.949, 40.7123, 0.356", "362.076, 293.984, 41.44, 0.356", "362.149, 292.848, 41.5699, 0.305", "362.234, 291.774, 42.3108, 0.2796", "361.841, 290.775, 42.8246, 0.305", "361.733, 289.987, 44.2347, 0.356", "361.464, 289.044, 44.039, 0.356", "361.271, 288.285, 44.8, 0.3304", "361.29, 287.154, 45.0769, 0.305", "362.165, 286.49, 44.9319, 0.305", "362.725, 285.732, 45.5372, 0.305", "362.941, 284.79, 45.1861, 0.305", "363.591, 284.698, 46.48, 0.305", "364.151, 284.139, 45.5988, 0.305", "364.25, 283.09, 46.3557, 0.3304", "364.478, 282.574, 48.519, 0.3814", "364.68, 281.503, 48.9028, 0.4068", "364.876, 280.536, 49.8764, 0.3814", "365.337, 279.541, 50.12, 0.305", "365.286, 278.484, 50.4431, 0.2542", "365.508, 277.395, 50.6167, 0.2288", "365.357, 276.339, 50.68, 0.2288", "365.402, 275.329, 51.2336, 0.2288", "365.394, 274.186, 51.3136, 0.2542", "365.346, 273.065, 51.751, 0.2796", "365.086, 271.978, 52.1002, 0.305", "364.593, 271.078, 52.8377, 0.2796", "364.593, 269.96, 53.2, 0.2542", "364.593, 268.816, 53.2, 0.2288", "364.52, 267.72, 53.5539, 0.2288", "363.792, 267.209, 53.76, 0.2288", "363.461, 266.233, 53.9689, 0.2288", "363.668, 265.304, 54.4695, 0.2288", "363.996, 264.247, 54.1229, 0.2288", "364.47, 263.343, 54.2615, 0.2542", "363.794, 262.553, 53.76, 0.305", "363.792, 261.899, 54.3976, 0.3814", "364.23, 261.165, 55.1886, 0.4322", "364.81, 260.544, 54.2914, 0.4322", "365.418, 259.922, 54.3528, 0.3814", "366.184, 259.139, 54.4897, 0.305", "366.79, 258.312, 54.192, 0.2796", "367.544, 257.545, 54.5465, 0.2796", "368.227, 256.828, 54.0159, 0.3304", "369.057, 256.559, 54.4076, 0.356", "369.854, 256.082, 54.5678, 0.3814", "370.793, 255.748, 54.3413, 0.356", "371.61, 255.109, 55.13, 0.305", "372.289, 254.581, 54.3791, 0.2796", "372.938, 254.177, 54.8355, 0.2796", "373.637, 253.569, 55.631, 0.305", "374.241, 252.743, 55.5422, 0.305", "374.889, 251.909, 55.44, 0.356" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "418.487, 262.35, 37.394, 0.5084", "417.732, 262.143, 37.0471, 0.4576", "416.795, 261.737, 36.68, 0.4576", "415.914, 261.404, 35.84, 0.4322", "414.838, 261.1, 36.12, 0.4068", "413.742, 260.807, 36.1421, 0.4576", "412.777, 260.404, 36.4843, 0.5084", "412.047, 259.617, 36.9902, 0.5084", "411.165, 259.266, 37.5306, 0.4576", "410.339, 258.784, 36.9687, 0.3814", "409.49, 258.295, 38.0769, 0.3304", "408.868, 257.496, 37.8, 0.3304", "408.098, 256.844, 38.1732, 0.356", "407.876, 255.858, 38.08, 0.3814", "407.242, 255.162, 37.3562, 0.3814", "406.773, 254.167, 37.2635, 0.4322", "406.19, 253.618, 38.974, 0.483", "405.803, 252.801, 38.5053, 0.5338", "405.335, 251.967, 38.2228, 0.5084", "405.098, 250.957, 38.477, 0.4576", "404.725, 249.909, 38.61, 0.4068", "404.175, 249.163, 38.92, 0.356", "404.31, 248.936, 40.0632, 0.356", "404.518, 247.937, 41.0603, 0.3814", "404.146, 247.283, 41.16, 0.4576", "403.764, 246.394, 40.364, 0.483", "403.152, 245.58, 40.416, 0.4576", "402.932, 244.589, 40.6571, 0.4068", "402.456, 243.717, 41.0668, 0.4068", "401.804, 242.888, 40.6, 0.4322", "401.19, 242.094, 40.2094, 0.4322", "400.616, 241.438, 39.4654, 0.4068", "399.845, 241.062, 40.6, 0.3814", "399.326, 240.456, 41.16, 0.3814", "399.107, 239.689, 39.7939, 0.3814", "398.914, 238.964, 39.48, 0.356", "398.449, 238.756, 38.4768, 0.356", "397.835, 238.149, 39.9148, 0.356", "397.342, 237.32, 40.7672, 0.4068", "396.626, 236.764, 41.249, 0.4322", "396.014, 236.054, 41.6018, 0.4576", "395.203, 235.336, 40.9786, 0.4576", "394.57, 234.948, 42.5216, 0.4322", "393.679, 234.324, 42.6258, 0.4068", "393.132, 233.522, 42.56, 0.356", "392.355, 233.036, 43.377, 0.3304", "391.448, 232.854, 42.8971, 0.3304", "390.562, 232.575, 42.84, 0.356" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "418.487, 262.35, 37.394, 0.5084", "418.552, 261.238, 36.8068, 0.3814", "418.797, 260.141, 36.4832, 0.3814", "418.929, 259.015, 36.6139, 0.4068", "418.983, 257.927, 37.3901, 0.483", "419.212, 256.877, 38.3057, 0.5848", "419.552, 255.803, 38.6333, 0.6864", "419.919, 254.721, 38.7607, 0.7372", "420.445, 253.751, 39.37, 0.6864", "420.883, 252.714, 39.5643, 0.5592", "421.237, 251.663, 38.9673, 0.3814", "421.613, 250.606, 39.1168, 0.3304", "422.105, 249.589, 38.8993, 0.3304", "422.661, 248.594, 38.7192, 0.4068", "423.283, 247.638, 38.8847, 0.4068", "423.78, 246.618, 39.1992, 0.4322", "423.955, 245.509, 38.8503, 0.4068", "424.022, 244.421, 39.5436, 0.3814", "424.304, 243.325, 39.8196, 0.3304", "424.513, 242.217, 40.2657, 0.3304", "424.832, 241.124, 40.1072, 0.3814", "424.973, 239.999, 39.7858, 0.4322", "425.297, 238.904, 39.76, 0.4322", "425.533, 237.785, 39.76, 0.3814", "425.784, 236.668, 39.7597, 0.3304", "425.835, 235.527, 39.7589, 0.356", "426.056, 234.406, 39.753, 0.4068", "426.241, 233.277, 39.7099, 0.4576", "426.226, 232.143, 39.3546, 0.4068", "426.019, 231.02, 39.4769, 0.356", "425.339, 230.173, 38.64, 0.2796", "424.933, 229.122, 39.0603, 0.2288", "424.775, 228.337, 39.8986, 0.2542", "424.767, 227.346, 39.1031, 0.305", "425.086, 226.294, 39.023, 0.3814", "425.545, 225.32, 39.0152, 0.4322", "425.34, 224.373, 39.1009, 0.4576", "425.554, 223.461, 38.9827, 0.4322", "425.266, 222.664, 38.5039, 0.4068", "425.526, 221.622, 38.2404, 0.356", "426.004, 220.827, 37.6894, 0.3304", "425.581, 219.91, 37.8, 0.305", "425.697, 218.915, 36.6934, 0.3304", "426.018, 217.91, 36.6962, 0.3814", "426.108, 216.875, 37.1235, 0.4322", "426.483, 215.927, 36.4, 0.4322", "426.658, 214.819, 36.5879, 0.4576", "426.536, 213.711, 36.3852, 0.5338", "426.344, 212.739, 37.4956, 0.661", "425.899, 211.637, 37.359, 0.6864", "425.717, 210.521, 36.9328, 0.6356", "425.397, 209.439, 36.4756, 0.6102", "425.042, 208.372, 36.2306, 0.5848", "425.227, 207.285, 35.5009, 0.5592", "425.251, 206.159, 35.1008, 0.483", "425.074, 205.081, 34.4008, 0.4068", "425.118, 204.102, 33.0033, 0.305", "424.9, 203.142, 31.9684, 0.2542", "424.876, 202.059, 32.8471, 0.2542", "424.848, 200.994, 33.6958, 0.305", "424.708, 199.874, 33.4466, 0.356", "424.47, 198.785, 32.8924, 0.4068", "424.419, 197.654, 32.8174, 0.4068", "424.392, 196.538, 33.4124, 0.4322", "424.225, 195.472, 34.2597, 0.3814", "423.885, 194.432, 34.6097, 0.4068", "423.604, 193.343, 34.2056, 0.4322", "423.257, 192.254, 34.239, 0.5338", "423.039, 191.159, 34.732, 0.5592", "422.838, 190.073, 35.4581, 0.5592", "422.604, 188.996, 36.1427, 0.5084", "422.596, 187.859, 35.9117, 0.5084", "422.608, 186.765, 35.0946, 0.5084", "422.686, 185.653, 34.615, 0.5338", "422.966, 184.567, 35.0549, 0.5338", "423.208, 183.477, 34.5514, 0.5338", "423.78, 182.502, 34.1597, 0.5338", "424.316, 181.499, 34.1589, 0.5084", "424.648, 180.409, 34.1519, 0.4576", "425.194, 179.404, 34.1174, 0.4068", "425.708, 178.411, 33.9058, 0.4068", "425.8, 177.309, 33.2116, 0.4576", "425.809, 176.212, 32.4134, 0.5338", "425.883, 175.073, 32.5069, 0.5338", "426.176, 174.007, 33.1761, 0.483", "426.285, 172.886, 33.6406, 0.3814", "426.49, 171.779, 33.224, 0.3304", "426.706, 170.684, 33.7968, 0.2796", "426.728, 169.57, 34.433, 0.2796", "426.805, 168.433, 34.2871, 0.305", "427.04, 167.316, 34.1256, 0.3814", "426.683, 166.234, 33.9354, 0.4068", "426.261, 165.282, 32.821, 0.3814", "426.051, 164.816, 30.6816, 0.3304", "426.313, 164.688, 33.3794, 0.3304", "426.366, 163.649, 33.889, 0.3814", "426.593, 162.573, 33.1377, 0.4322", "426.828, 161.455, 33.028, 0.4322", "427.242, 160.389, 32.9627, 0.3814", "427.608, 159.443, 32.8401, 0.356", "427.975, 158.367, 33.0246, 0.4068", "428.165, 157.257, 33.4872, 0.5084", "428.627, 156.218, 33.3194, 0.5848", "429.317, 155.356, 34.02, 0.5848", "429.816, 154.335, 34.3216, 0.5848", "430.183, 153.286, 34.9807, 0.5592", "430.714, 152.273, 34.9653, 0.5592", "430.582, 151.963, 35.8305, 0.483", "430.721, 150.973, 36.0108, 0.4322", "430.729, 149.993, 37.2159, 0.3814", "431.059, 149.199, 37.4732, 0.3814", "430.604, 148.432, 37.8798, 0.3814", "430.711, 147.587, 37.6799, 0.356", "431.067, 146.878, 36.7234, 0.3304", "431.26, 146.432, 37.8302, 0.305", "431.383, 145.981, 40.0789, 0.3304", "430.578, 145.488, 40.5734, 0.3814", "430.455, 144.51, 41.2899, 0.4068", "430.453, 143.705, 42.6975, 0.4322", "430.608, 143.083, 43.2888, 0.4322", "430.411, 142.316, 44.52, 0.483", "430.057, 141.727, 43.4039, 0.4576", "429.872, 140.785, 42.6569, 0.4322", "429.591, 139.698, 42.56, 0.3814", "429.634, 138.991, 42.8042, 0.3814", "429.744, 138.232, 43.68, 0.3814", "429.572, 137.27, 44.6418, 0.356", "429.27, 136.199, 44.3708, 0.3304", "429.343, 135.335, 44.8, 0.305" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "429.305, 285.784, 20.7183, 0.5592", "429.628, 284.98, 20.958, 0.483", "430.406, 284.195, 21.6191, 0.483", "430.895, 283.188, 21.2481, 0.483", "431.253, 282.122, 20.7404, 0.4576", "431.486, 281.003, 20.6791, 0.5084", "431.732, 279.889, 20.4856, 0.5592", "431.738, 278.776, 19.8568, 0.5848", "431.687, 277.703, 20.7718, 0.5084", "432.105, 277.148, 20.7315, 0.4322", "432.519, 276.091, 20.7234, 0.4068", "432.744, 274.971, 20.7416, 0.4576", "433.06, 273.874, 20.862, 0.5338", "433.241, 272.771, 21.3948, 0.5592", "433.526, 271.701, 22.0718, 0.5592", "433.489, 270.575, 22.3978, 0.5084", "433.147, 269.513, 22.7576, 0.483", "432.974, 268.412, 22.9538, 0.4576", "433.041, 267.272, 22.9692, 0.4322", "432.891, 266.151, 23.0182, 0.3814", "432.702, 265.035, 23.3803, 0.3304", "432.644, 263.951, 24.2136, 0.3304", "432.535, 262.834, 24.3852, 0.3814", "432.294, 261.74, 24.808, 0.4576", "432.214, 260.616, 25.142, 0.483", "432.24, 259.473, 25.2, 0.4576", "432.447, 258.352, 25.2, 0.3814", "432.7, 257.238, 25.2, 0.356", "432.986, 256.132, 25.2003, 0.3814", "433.338, 255.044, 25.2008, 0.4322", "433.543, 253.927, 25.2059, 0.4322", "433.575, 252.784, 25.2412, 0.4068", "433.565, 251.645, 25.4318, 0.3814", "433.505, 250.511, 25.4332, 0.3814", "433.24, 249.416, 25.3596, 0.356", "432.846, 248.401, 26.0476, 0.305", "432.564, 247.435, 27.3588, 0.2796", "432.521, 246.641, 26.3953, 0.305", "432.275, 245.681, 25.3417, 0.3814", "431.847, 244.627, 25.1994, 0.4322", "431.476, 243.547, 25.1972, 0.4576", "431.216, 242.434, 25.181, 0.4576", "430.827, 241.362, 25.0883, 0.4576", "430.357, 240.342, 24.5986, 0.4322", "429.993, 239.265, 24.4742, 0.4068", "429.891, 238.133, 24.3751, 0.3814", "429.726, 237.02, 23.9078, 0.3814", "429.27, 235.981, 24.0646, 0.3814", "428.755, 234.96, 24.1284, 0.4068", "428.258, 233.934, 24.3471, 0.4576", "427.827, 232.917, 25.0558, 0.483", "427.31, 231.908, 24.8147, 0.4576", "427.094, 230.804, 24.3608, 0.3814", "427.029, 229.689, 24.9049, 0.3304", "427.055, 228.548, 25.0334, 0.2796", "426.691, 227.473, 25.1894, 0.2796", "426.126, 226.48, 25.2095, 0.2796", "425.804, 225.384, 25.289, 0.305", "425.798, 224.262, 25.8171, 0.305", "425.805, 223.12, 25.9619, 0.3304", "425.851, 221.993, 26.4337, 0.4068", "426.146, 221.052, 27.0236, 0.483", "426.004, 219.943, 26.6101, 0.5338", "425.51, 218.946, 27.1723, 0.5084", "424.928, 217.964, 27.3588, 0.483", "424.512, 216.914, 26.9497, 0.4576", "424.064, 216.033, 25.5475, 0.4576" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "429.305, 285.784, 20.7183, 0.5592", "428.5, 284.464, 20.6954, 0.3814", "427.702, 283.649, 20.5383, 0.3304", "426.934, 282.871, 19.7798, 0.305", "426.506, 282.021, 18.2428, 0.3304" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "464.581, 273.125, 32.6203, 0.356", "465.417, 272.684, 33.021, 0.2796", "466.026, 272.164, 33.04, 0.3304", "466.638, 271.531, 33.605, 0.3814", "467.198, 270.923, 32.5744, 0.483", "468.165, 270.553, 32.2213, 0.5848" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "464.581, 273.125, 32.6203, 0.356", "465.053, 273.135, 31.08, 0.356" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "424.064, 216.033, 25.5475, 0.4576", "424.107, 215.833, 24.3712, 0.4576", "424.084, 215.31, 22.0825, 0.483", "423.512, 214.417, 21.0482, 0.483", "422.88, 213.621, 20.1555, 0.483", "422.079, 212.837, 20.5408, 0.5338", "421.245, 212.093, 20.1513, 0.5592", "420.363, 211.391, 19.7112, 0.5592", "419.514, 210.629, 19.6241, 0.5084", "418.667, 209.86, 19.7089, 0.483", "417.844, 209.09, 20.1188, 0.4322", "416.982, 208.375, 19.9044, 0.4322", "416.221, 207.542, 19.6277, 0.4576", "415.502, 206.654, 19.549, 0.5592", "414.719, 205.825, 19.3852, 0.6102", "413.93, 205.039, 18.7944, 0.5848", "413.136, 204.261, 18.1499, 0.5084", "412.318, 203.519, 18.475, 0.5084", "411.599, 202.701, 19.299, 0.5848", "410.933, 201.79, 19.586, 0.5848", "410.124, 200.992, 19.598, 0.5084", "409.241, 200.264, 19.5916, 0.4068", "408.433, 199.459, 19.5636, 0.3814", "407.767, 198.536, 19.4048, 0.356", "407.167, 197.586, 18.9115, 0.356", "406.616, 196.63, 19.3253, 0.356", "405.994, 195.687, 19.3886, 0.3814" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "424.064, 216.033, 25.5475, 0.4576", "424.206, 215.542, 26.2909, 0.3304", "424.357, 214.421, 25.725, 0.356", "423.946, 213.446, 25.1367, 0.3814", "423.455, 212.524, 25.8916, 0.483", "423.162, 211.507, 26.8976, 0.6102", "423.01, 210.395, 27.1897, 0.661", "422.757, 209.29, 27.3157, 0.661", "422.641, 208.256, 28.2864, 0.5592", "422.899, 207.395, 27.2034, 0.5338", "422.832, 206.327, 27.1603, 0.483", "422.29, 205.359, 27.8099, 0.4576", "421.945, 204.294, 28.3665, 0.4068", "422.048, 203.247, 27.3277, 0.3814", "421.966, 202.195, 26.3276, 0.4576", "421.524, 201.14, 26.3194, 0.5848", "421.168, 200.054, 26.3166, 0.7118", "420.887, 198.945, 26.2948, 0.7118", "420.644, 197.827, 26.1859, 0.5848", "420.105, 196.874, 25.4142, 0.4322", "419.782, 195.796, 24.9385, 0.356", "419.454, 194.706, 24.6646, 0.3814", "419.123, 193.646, 25.3361, 0.483", "418.892, 192.58, 26.1716, 0.5592", "418.604, 191.558, 27.1365, 0.661", "418.411, 190.459, 26.5359, 0.7372", "418.161, 189.347, 26.318, 0.788", "418.028, 188.214, 26.3054, 0.7118", "418.003, 187.072, 26.2408, 0.5848", "417.924, 185.938, 26.1167, 0.483", "417.704, 184.875, 26.9366, 0.483", "417.899, 183.764, 27.2689, 0.4576", "418.09, 182.675, 26.5933, 0.4322", "418.315, 181.655, 25.5948, 0.3814", "418.582, 180.554, 25.8042, 0.4068", "418.504, 179.466, 25.2798, 0.4576", "418.115, 178.513, 25.0152, 0.483", "417.896, 177.576, 26.5303, 0.4576", "417.804, 176.563, 27.6545, 0.3814", "417.782, 175.461, 28.301, 0.3814", "417.442, 174.415, 28.9713, 0.4322", "417.129, 173.353, 29.6562, 0.483", "417.235, 172.218, 29.6853, 0.483", "417.074, 171.086, 29.7139, 0.4576", "416.707, 170.005, 29.8852, 0.4576", "416.351, 168.96, 30.6113, 0.4322", "415.945, 167.893, 30.7947, 0.4322", "415.242, 166.991, 30.7787, 0.483", "414.333, 165.706, 31.2502, 0.6864", "413.479, 164.352, 30.24, 0.5848", "413.161, 163.298, 30.5542, 0.5338", "412.817, 162.457, 31.89, 0.5084", "412.159, 161.76, 30.7751, 0.5338", "411.668, 161.12, 30.8039, 0.5084", "411.057, 160.396, 30.8686, 0.483" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "426.506, 282.021, 18.2428, 0.3304", "426.695, 282.14, 17.4863, 0.4322", "426.142, 281.263, 16.3072, 0.3814", "425.918, 280.194, 15.9874, 0.3304", "425.817, 279.055, 15.9874, 0.305", "425.799, 277.913, 15.9874, 0.305", "425.846, 276.77, 15.9874, 0.305", "425.886, 275.627, 15.9874, 0.3304", "425.78, 274.488, 15.9874, 0.4068", "425.341, 273.452, 15.9874, 0.4576", "424.79, 272.448, 15.9874, 0.483", "424.378, 271.382, 15.9874, 0.4068", "423.966, 270.315, 15.9874, 0.3814", "423.493, 269.274, 15.9874, 0.3814", "423.148, 268.208, 15.9874, 0.4322", "423.14, 267.066, 15.9874, 0.4322", "422.991, 266.394, 15.8424, 0.4068", "422.55, 265.362, 16.0546, 0.4576", "422.047, 264.345, 16.24, 0.5592", "421.383, 263.428, 16.2397, 0.6864", "420.525, 262.686, 16.2392, 0.7118", "419.562, 262.07, 16.2366, 0.7118", "418.547, 261.547, 16.2226, 0.661", "417.541, 261.01, 16.151, 0.6102", "416.565, 260.447, 15.7629, 0.5338", "415.582, 259.906, 15.2393, 0.483", "414.6, 259.322, 15.094, 0.4576", "413.666, 258.669, 14.9652, 0.4576", "412.773, 257.975, 14.5298, 0.4322", "411.865, 257.319, 14.1739, 0.3814", "410.985, 256.65, 14.7815, 0.3814", "410.109, 256.08, 15.8802, 0.4322", "409.156, 255.519, 16.5721, 0.5084", "408.289, 254.823, 17.1811, 0.483", "407.377, 254.157, 17.4056, 0.4068", "406.356, 253.666, 17.6655, 0.356", "405.357, 253.14, 17.7878, 0.356", "404.363, 252.596, 18.0046, 0.4068", "403.431, 251.955, 18.3784, 0.4068", "402.654, 251.129, 18.4811, 0.4576", "401.804, 250.372, 18.4848, 0.483", "400.869, 249.714, 18.5116, 0.5338", "399.922, 249.073, 18.5898, 0.483", "399.015, 248.407, 19.0887, 0.4322", "398.213, 247.62, 19.6031, 0.3814", "397.299, 246.931, 19.6218, 0.4068", "396.485, 246.128, 19.6874, 0.4068", "395.73, 245.274, 19.9315, 0.4322", "395.306, 244.529, 20.7144, 0.4068", "394.745, 243.602, 21.6163, 0.4068", "393.986, 242.752, 21.8386, 0.356", "393.17, 241.95, 21.8436, 0.3304", "392.336, 241.168, 21.8546, 0.3304", "391.404, 240.504, 21.9106, 0.4068", "390.487, 239.83, 22.2043, 0.5084", "389.749, 239.18, 23.2089, 0.5338", "389.081, 238.638, 23.4847, 0.483", "388.299, 238.41, 22.3423, 0.3814", "387.488, 237.802, 22.6078, 0.3304", "386.839, 237.494, 23.7166, 0.305", "386.209, 236.829, 23.4021, 0.3304", "385.257, 236.386, 23.0927, 0.356", "384.309, 236.172, 22.2622, 0.356", "383.588, 235.779, 21.5533, 0.356", "382.866, 235.44, 22.9765, 0.356", "382.004, 235.014, 23.6323, 0.3814", "381.209, 234.981, 22.3037, 0.356", "380.714, 234.554, 24.0064, 0.3304", "380.185, 234.3, 22.2673, 0.305", "379.808, 233.506, 23.4646, 0.2796", "379.009, 232.821, 23.2341, 0.305", "378.166, 232.324, 24.1318, 0.356", "377.32, 231.66, 24.92, 0.4576", "376.58, 230.885, 25.48, 0.483", "375.931, 230.176, 24.8511, 0.483", "375.332, 229.335, 24.7887, 0.4576", "374.454, 228.991, 25.3268, 0.4576", "373.964, 228.079, 25.1112, 0.4576", "373.259, 227.511, 24.649, 0.4576", "372.377, 226.973, 24.425, 0.4576", "371.76, 226.32, 25.4814, 0.4576", "371.046, 225.506, 25.76, 0.4576", "371.158, 224.454, 25.4668, 0.4322", "370.611, 223.671, 25.1661, 0.4322", "369.965, 222.765, 24.8567, 0.4576", "370.054, 221.748, 25.0827, 0.5084", "369.97, 220.775, 26.1405, 0.5338", "370.077, 219.671, 25.8712, 0.5084", "369.661, 219.069, 26.9391, 0.5084", "369.626, 218.065, 26.8246, 0.5084", "369.341, 217.439, 26.0966, 0.5338", "369.067, 216.369, 26.2343, 0.5338", "368.648, 215.395, 26.8909, 0.5592", "368.016, 214.725, 26.4256, 0.6102", "367.714, 213.872, 25.8787, 0.661", "367.199, 213.171, 27.2003, 0.6102", "366.374, 212.646, 28.2128, 0.5084", "365.807, 211.894, 27.813, 0.4322", "364.928, 211.407, 28.0064, 0.483", "364.2, 210.644, 28.548, 0.5592", "363.57, 209.716, 28.3903, 0.6102", "362.892, 208.811, 28.28, 0.6102", "362.077, 208.416, 27.7435, 0.661", "361.618, 207.594, 27.3706, 0.7118", "361.122, 206.945, 27.44, 0.7372", "360.818, 206.088, 27.7388, 0.6356", "360.287, 205.31, 27.8678, 0.5084", "359.525, 204.592, 27.809, 0.3814", "358.46, 204.339, 27.5066, 0.3814", "357.665, 203.665, 27.4302, 0.4068", "356.828, 203.169, 27.0096, 0.4576", "356.297, 202.488, 27.7147, 0.4322", "356.013, 202.548, 25.5956, 0.4068", "355.441, 202.306, 25.6228, 0.3814", "354.827, 201.609, 24.9231, 0.356", "354.227, 200.844, 24.9413, 0.3304", "353.574, 200.429, 24.7386, 0.305", "352.952, 200.372, 25.8689, 0.3304", "352.232, 200.208, 27.116, 0.356", "352.102, 199.562, 27.4478, 0.3814", "351.138, 199.183, 27.4887, 0.3814", "350.112, 199.281, 28.3198, 0.3814", "349.132, 198.952, 28.7193, 0.4068", "348.252, 199.07, 29.3936, 0.4576", "347.563, 199.514, 29.96, 0.5084", "346.716, 199.034, 29.7063, 0.5338", "345.841, 199.045, 29.7206, 0.5084", "344.998, 198.898, 29.96, 0.483", "344.183, 198.328, 30.221, 0.4322", "343.574, 197.738, 28.84, 0.4068", "342.628, 197.502, 29.4, 0.3814", "341.791, 197.23, 29.3373, 0.4068", "340.931, 196.997, 29.458, 0.4068", "340.266, 196.984, 27.9734, 0.3814", "339.394, 196.997, 29.0945, 0.3304", "338.28, 196.844, 29.3527, 0.3304", "337.47, 196.782, 28.28, 0.356", "336.645, 197.095, 27.9146, 0.356", "335.748, 196.895, 28.8403, 0.3304", "334.955, 196.887, 29.5753, 0.3304", "334.043, 196.708, 30.2753, 0.3814", "333.206, 196.539, 28.8711, 0.4068", "332.275, 195.936, 28.6728, 0.4068", "331.318, 195.452, 27.9334, 0.3814", "330.403, 194.788, 27.8351, 0.3814", "329.653, 194.06, 28.28, 0.356", "328.75, 193.525, 29.0206, 0.3304", "327.756, 193.071, 29.659, 0.356", "326.662, 193.083, 29.7564, 0.4322", "325.976, 193.144, 28.0297, 0.5084", "324.952, 193.025, 28.7879, 0.5084", "324.012, 192.931, 29.5725, 0.4576", "322.964, 192.993, 29.0464, 0.4068", "321.827, 192.989, 29.12, 0.4068", "320.913, 192.531, 29.8155, 0.483", "319.822, 192.36, 29.864, 0.5338", "318.732, 192.471, 29.1382, 0.5592", "318.261, 192.764, 30.24, 0.5338" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "426.506, 282.021, 18.2428, 0.3304", "426.254, 280.981, 17.3608, 0.3304", "426.249, 279.837, 17.3662, 0.356", "426.209, 278.696, 17.4084, 0.3814", "425.938, 277.653, 17.7173, 0.356", "425.11, 277.105, 19.0862, 0.305", "424.397, 276.289, 19.5804, 0.305", "423.549, 275.534, 19.6336, 0.356", "422.512, 275.085, 19.7893, 0.4576", "421.431, 274.837, 20.4064, 0.483", "420.303, 274.769, 20.608, 0.483", "419.185, 274.676, 20.1488, 0.4322", "418.122, 274.313, 19.7663, 0.4068", "417.24, 273.636, 20.1412, 0.4068", "416.63, 272.7, 20.6394, 0.483", "415.72, 272.046, 20.7304, 0.5338", "414.716, 271.501, 20.7771, 0.5848", "413.713, 270.957, 20.9647, 0.5592", "412.804, 270.376, 21.6558, 0.6356", "412.0, 269.716, 22.7777, 0.6356", "410.983, 269.213, 22.9309, 0.6356", "410.061, 268.543, 22.8659, 0.5338", "409.472, 267.578, 23.1168, 0.5084", "409.027, 266.602, 24.0744, 0.5338", "408.402, 265.667, 24.561, 0.5592", "407.733, 264.767, 25.1219, 0.5592", "406.943, 263.943, 25.2157, 0.5592", "406.136, 263.13, 25.2664, 0.5848", "405.341, 262.315, 25.4982, 0.6102", "404.669, 261.444, 26.2696, 0.5848", "403.97, 260.54, 26.3217, 0.5592", "403.152, 259.741, 26.329, 0.5084", "402.293, 258.984, 26.3738, 0.5084", "401.824, 258.684, 25.48, 0.5338", "401.086, 258.318, 26.5451, 0.5848", "401.113, 257.583, 27.4926, 0.5592", "400.605, 256.667, 27.491, 0.483", "400.104, 256.02, 26.4415, 0.4068", "399.408, 255.298, 26.8372, 0.4322", "399.123, 254.666, 27.4618, 0.483", "398.455, 254.346, 27.16, 0.5338", "398.011, 253.802, 26.6969, 0.5084", "397.402, 253.243, 27.2303, 0.4576", "396.998, 252.301, 27.8172, 0.4068", "396.61, 251.568, 29.2088, 0.3814", "396.172, 250.668, 29.0018, 0.4068", "396.015, 249.8, 29.0777, 0.4068", "395.379, 249.165, 28.2892, 0.4068", "395.055, 248.225, 28.84, 0.4068", "394.559, 247.385, 29.68, 0.4576", "393.688, 246.669, 29.3093, 0.5084", "393.491, 246.078, 30.1608, 0.483", "392.754, 245.421, 30.7166, 0.4068", "392.304, 244.925, 31.5384, 0.305", "392.069, 244.317, 31.3342, 0.2796", "391.63, 243.721, 32.7258, 0.3304", "391.711, 243.118, 31.36, 0.4068", "391.412, 242.16, 31.0579, 0.4322", "390.835, 241.819, 32.2574, 0.3814", "390.182, 241.197, 32.7158, 0.3304", "389.82, 240.13, 32.4638, 0.3304", "389.418, 239.209, 32.6295, 0.356", "388.851, 238.588, 33.0187, 0.4068", "388.267, 238.0, 33.0708, 0.4068", "387.347, 237.394, 33.32, 0.4068", "386.539, 236.647, 33.32, 0.3814", "385.823, 236.427, 34.8947, 0.4322", "385.114, 235.844, 35.0406, 0.5084", "384.807, 234.967, 35.2822, 0.6102", "384.019, 233.955, 35.2948, 0.7118", "383.207, 233.15, 35.3405, 0.7372", "382.348, 232.408, 35.5499, 0.7372", "381.386, 231.868, 36.286, 0.6864", "380.426, 231.34, 36.9802, 0.5848", "379.499, 230.672, 36.8029, 0.5084", "378.679, 229.921, 37.4349, 0.4576", "377.735, 229.277, 37.5186, 0.5084", "376.723, 228.744, 37.5211, 0.5592", "375.72, 228.194, 37.5267, 0.6102", "374.836, 227.468, 37.5502, 0.5848", "374.046, 226.642, 37.6502, 0.5592", "373.368, 225.745, 38.1668, 0.483", "372.808, 224.795, 38.9043, 0.4322", "372.324, 224.277, 39.3358, 0.3814", "371.59, 223.426, 39.5892, 0.4068", "370.846, 222.601, 39.0457, 0.4068" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "468.165, 270.553, 32.2213, 0.5848", "468.849, 270.518, 31.64, 0.2796", "469.718, 270.534, 31.985, 0.2288", "470.42, 270.113, 33.32, 0.2542", "471.457, 269.984, 34.1508, 0.2796", "472.448, 269.961, 34.3832, 0.3304", "473.338, 269.85, 34.2496, 0.3304", "474.261, 270.076, 34.3664, 0.3304", "474.882, 270.098, 34.9978, 0.2796", "475.95, 269.984, 34.2079, 0.2542", "477.088, 269.984, 34.2913, 0.2288", "478.228, 269.984, 34.4686, 0.2288", "479.351, 270.116, 34.7063, 0.2288", "480.152, 270.454, 35.0008, 0.2288", "481.229, 270.368, 35.5351, 0.2288", "482.296, 270.213, 35.84, 0.2288", "483.372, 270.01, 36.12, 0.2288", "484.486, 269.87, 36.12, 0.2542", "485.63, 269.87, 36.12, 0.2796", "486.603, 269.87, 37.3733, 0.305", "487.67, 269.612, 37.3859, 0.305", "488.558, 269.051, 38.0044, 0.305", "489.293, 268.349, 37.4388, 0.305", "490.207, 268.154, 36.12, 0.2796", "491.351, 268.154, 36.12, 0.2542", "492.494, 268.118, 36.12, 0.2288", "493.62, 268.268, 36.12, 0.2288", "494.745, 268.434, 36.1539, 0.2288", "495.874, 268.588, 36.391, 0.2288", "497.017, 268.611, 36.4, 0.2288", "498.16, 268.611, 36.4, 0.2288", "499.305, 268.611, 36.4, 0.2288", "500.448, 268.611, 36.4, 0.2542", "501.588, 268.611, 36.4952, 0.3304", "502.559, 268.726, 37.52, 0.4322" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "468.165, 270.553, 32.2213, 0.5848", "468.563, 269.717, 32.6124, 0.5084", "469.12, 269.167, 32.0034, 0.483", "469.88, 268.496, 32.5724, 0.4322", "470.503, 267.841, 31.36, 0.356", "471.447, 267.44, 32.2246, 0.356", "472.177, 266.618, 32.3963, 0.3304", "472.764, 265.755, 31.92, 0.356", "473.206, 264.742, 32.2109, 0.356", "473.645, 263.723, 32.72, 0.3814", "473.738, 262.627, 32.8104, 0.3814", "474.441, 262.042, 32.4288, 0.356", "475.168, 261.658, 33.3802, 0.3304", "475.974, 261.054, 33.5768, 0.305", "476.844, 260.365, 33.6, 0.305", "477.758, 259.838, 33.3511, 0.305", "478.724, 259.473, 33.3446, 0.2796", "479.635, 258.788, 33.32, 0.2542", "480.707, 258.514, 33.32, 0.2288", "481.603, 258.086, 33.1792, 0.2288", "482.722, 258.086, 32.7774, 0.2288", "483.631, 257.669, 33.2562, 0.2288", "484.757, 257.629, 33.04, 0.2288", "485.812, 257.242, 33.2024, 0.2288", "486.826, 256.828, 33.8615, 0.2288", "487.879, 256.938, 34.16, 0.2288", "489.023, 256.942, 34.16, 0.2796", "490.156, 256.968, 33.9763, 0.3304", "490.809, 257.384, 32.9627, 0.4068", "491.437, 257.4, 31.9883, 0.3814", "492.533, 257.297, 32.3991, 0.356", "493.665, 257.336, 32.3456, 0.2796", "494.711, 256.98, 32.466, 0.2542", "495.502, 256.182, 32.2, 0.2288", "496.095, 255.391, 32.2, 0.2288", "497.234, 255.331, 32.2776, 0.2288", "498.15, 254.771, 32.6844, 0.2288", "499.121, 254.311, 33.0179, 0.2288", "499.958, 253.818, 32.5399, 0.2542", "500.906, 253.378, 32.7936, 0.2796", "501.768, 252.837, 31.9978, 0.305", "502.387, 252.11, 31.6019, 0.2796", "502.559, 251.076, 31.3855, 0.2542", "503.001, 250.216, 30.6376, 0.2288", "502.902, 249.16, 30.0622, 0.2288", "503.281, 248.242, 30.6603, 0.2288", "503.81, 247.269, 30.6827, 0.2288", "504.144, 246.303, 30.8, 0.2542", "504.275, 245.213, 30.7754, 0.2796", "504.38, 244.09, 30.52, 0.305", "504.733, 243.165, 29.6862, 0.2796", "504.904, 242.074, 29.68, 0.2542", "505.631, 241.21, 29.6386, 0.2288", "506.317, 240.409, 28.698, 0.2288", "507.245, 239.978, 28.84, 0.2288", "507.543, 239.017, 28.9187, 0.2542", "508.412, 238.587, 28.1943, 0.2796", "508.958, 237.695, 27.6956, 0.305", "509.626, 236.846, 26.9993, 0.2796", "510.224, 235.992, 27.1018, 0.2542", "510.532, 235.432, 26.9858, 0.2542", "510.829, 234.647, 26.8996, 0.2796", "511.253, 233.662, 26.8206, 0.305", "511.399, 232.666, 26.0775, 0.2796", "511.596, 231.615, 26.6042, 0.2542", "511.598, 230.651, 27.44, 0.2288", "511.667, 229.551, 27.8012, 0.2542", "511.94, 228.686, 28.56, 0.2796", "511.711, 227.656, 28.56, 0.305", "511.711, 226.512, 28.56, 0.2796", "511.711, 225.368, 28.56, 0.2796" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "465.053, 273.135, 31.08, 0.356", "465.125, 274.243, 31.5557, 0.4576", "465.01, 275.242, 31.2483, 0.483", "465.282, 275.585, 30.9011, 0.483", "465.707, 276.604, 31.6296, 0.4576", "466.095, 277.676, 31.8688, 0.483", "466.555, 278.723, 31.9108, 0.483", "467.048, 279.755, 31.9267, 0.483", "467.444, 280.814, 32.3548, 0.4322", "467.834, 281.888, 32.3394, 0.4068", "468.197, 282.966, 32.1115, 0.3814", "468.545, 284.031, 32.5822, 0.356", "468.799, 285.119, 32.0102, 0.356", "468.902, 286.256, 31.9323, 0.3304", "468.849, 287.398, 31.8805, 0.3304", "468.748, 288.525, 31.5123, 0.305", "468.55, 289.608, 30.9207, 0.305", "468.753, 290.732, 30.8188, 0.305", "468.767, 291.871, 30.8025, 0.2796", "468.542, 292.993, 30.8006, 0.2542", "468.379, 294.124, 30.8, 0.2796", "468.365, 295.267, 30.8, 0.356", "468.449, 296.404, 30.7952, 0.4576", "468.713, 297.318, 30.7712, 0.483", "469.035, 298.12, 30.4856, 0.483", "468.811, 299.026, 29.2034, 0.4322", "469.307, 299.941, 29.4, 0.4068", "469.599, 300.74, 30.8311, 0.356", "469.024, 301.445, 31.0845, 0.3304", "469.102, 302.455, 31.066, 0.305", "468.993, 303.256, 31.9158, 0.3304", "468.919, 303.961, 30.0919, 0.3814", "469.176, 305.05, 30.1014, 0.4068", "469.498, 306.037, 29.7987, 0.3814", "469.647, 307.067, 30.4931, 0.305", "469.605, 307.964, 30.0734, 0.2796", "469.529, 308.738, 31.3429, 0.305", "469.316, 309.815, 31.08, 0.4068", "469.498, 310.554, 29.6299, 0.4576", "469.448, 311.639, 29.02, 0.4576", "469.383, 312.675, 28.9864, 0.4068", "469.125, 313.578, 29.493, 0.3814", "469.45, 314.489, 29.2029, 0.3814", "469.627, 314.808, 29.8066, 0.3304" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "465.053, 273.135, 31.08, 0.356", "464.737, 272.267, 31.4457, 0.305", "465.036, 271.641, 30.2711, 0.3814", "464.933, 270.732, 31.5353, 0.4322", "465.036, 269.657, 31.2273, 0.4322", "465.297, 268.668, 30.5827, 0.3814", "465.351, 267.719, 30.8, 0.305", "466.211, 267.038, 30.4766, 0.2796", "466.618, 266.208, 29.4672, 0.2796", "467.016, 265.223, 30.4217, 0.356", "467.696, 264.722, 31.134, 0.3814", "468.365, 264.264, 30.5564, 0.4322", "469.025, 263.809, 30.371, 0.4068", "469.564, 263.059, 29.9681, 0.4322", "469.841, 262.16, 31.2444, 0.4322", "470.184, 261.518, 31.0822, 0.4576", "470.541, 260.934, 30.5914, 0.4576", "471.182, 260.266, 31.6364, 0.4322", "471.328, 259.17, 31.36, 0.4068", "471.021, 258.203, 31.8209, 0.3814", "470.993, 257.577, 30.8566, 0.4322", "470.939, 256.62, 31.7458, 0.5084", "470.87, 255.964, 31.1657, 0.5848", "471.266, 255.313, 31.831, 0.5848", "471.328, 254.421, 30.5584, 0.5084", "471.519, 253.43, 30.8137, 0.4068", "471.679, 252.413, 31.1556, 0.305", "472.108, 251.506, 30.7289, 0.2542", "472.13, 250.495, 30.2117, 0.2542", "472.387, 249.443, 30.2641, 0.2796", "472.433, 248.334, 30.7644, 0.3304", "472.377, 247.437, 30.8938, 0.3304", "472.752, 246.645, 29.8021, 0.356", "473.546, 245.99, 29.9398, 0.3304", "473.986, 245.012, 29.2491, 0.356", "474.649, 244.259, 29.6993, 0.3304", "475.103, 243.354, 29.0567, 0.3304", "475.316, 242.337, 28.3732, 0.305", "475.532, 241.313, 28.2876, 0.305", "475.152, 240.455, 28.6143, 0.3304", "475.56, 239.787, 27.6556, 0.356", "475.874, 238.865, 27.7547, 0.3814", "476.018, 238.033, 27.7301, 0.3814", "476.196, 237.024, 28.0272, 0.3814", "475.961, 236.095, 27.7438, 0.4068", "475.637, 235.086, 28.1985, 0.4322", "475.77, 234.086, 28.5034, 0.4322", "476.205, 233.117, 28.023, 0.3814", "476.724, 232.153, 28.28, 0.305", "476.958, 231.313, 27.3512, 0.2796", "477.136, 230.309, 28.0277, 0.2796", "477.022, 229.429, 28.6395, 0.305", "476.937, 228.484, 28.0106, 0.2796", "477.048, 227.427, 27.72, 0.2796" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "405.994, 195.687, 19.3886, 0.3814", "405.375, 195.706, 23.24, 0.305" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "405.994, 195.687, 19.3886, 0.3814", "405.395, 194.748, 18.7986, 0.3814", "404.796, 193.786, 18.492, 0.4576", "404.269, 192.774, 18.3436, 0.5338", "403.842, 191.741, 17.7974, 0.6102", "403.419, 190.688, 17.5235, 0.6356", "402.951, 189.668, 17.969, 0.5848", "402.524, 188.635, 18.5629, 0.483", "402.171, 187.553, 18.6715, 0.4068", "401.538, 186.615, 18.4912, 0.3814", "400.948, 185.638, 18.3812, 0.4068", "400.589, 184.558, 18.2277, 0.4576", "400.187, 183.493, 18.4456, 0.5338", "399.77, 182.429, 18.48, 0.5592", "399.65, 181.296, 18.4803, 0.5084", "399.333, 180.201, 18.4825, 0.4322", "398.968, 179.116, 18.4957, 0.356", "399.183, 178.009, 18.5942, 0.356", "399.714, 177.091, 19.6, 0.3814" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "411.057, 160.396, 30.8686, 0.483", "411.405, 160.693, 33.6, 0.3304", "411.726, 159.684, 33.6, 0.2796", "411.726, 158.54, 33.6, 0.2288", "412.191, 157.536, 33.6, 0.2288", "412.446, 156.441, 33.6, 0.2288", "412.807, 155.372, 33.6, 0.2288", "413.525, 154.503, 33.6, 0.2288", "414.081, 153.504, 33.6, 0.2288", "414.563, 152.47, 33.6, 0.2288", "414.975, 151.421, 33.6, 0.2288", "415.732, 150.594, 33.6, 0.2288", "416.187, 149.615, 33.6, 0.2288", "416.187, 148.471, 33.6, 0.2288", "416.273, 147.333, 33.6, 0.2288", "416.472, 146.207, 33.6, 0.2288", "416.836, 145.135, 33.6, 0.2542", "417.446, 144.173, 33.6, 0.2796", "417.789, 143.102, 33.6, 0.305", "418.068, 142.022, 33.6, 0.2796", "418.594, 141.088, 33.6, 0.2542", "419.253, 140.167, 33.6, 0.2288", "419.79, 139.162, 33.6, 0.2288", "420.194, 138.106, 33.6, 0.2288", "420.815, 137.301, 33.6, 0.2288", "421.957, 137.28, 33.6, 0.2288", "422.937, 137.527, 33.6, 0.2288", "422.937, 138.671, 33.6, 0.2288", "422.937, 139.797, 33.88, 0.2288" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "411.057, 160.396, 30.8686, 0.483", "410.353, 159.677, 30.7938, 0.2542", "409.933, 158.748, 30.4506, 0.305", "409.535, 157.872, 30.7983, 0.356", "409.478, 156.752, 30.6662, 0.356", "409.438, 155.635, 30.4223, 0.3304", "409.523, 154.546, 30.3425, 0.3304", "409.462, 153.567, 29.9104, 0.3814", "409.494, 152.455, 30.1283, 0.4068", "409.6, 151.358, 29.9667, 0.3814", "409.968, 150.33, 30.0098, 0.305", "410.059, 149.202, 30.2968, 0.2796", "410.292, 148.102, 30.326, 0.305", "410.688, 147.049, 30.5295, 0.3814", "410.969, 145.998, 30.3332, 0.4322", "411.619, 145.166, 31.08, 0.4322", "412.481, 144.478, 31.36, 0.3814", "412.228, 143.915, 32.6553, 0.305", "412.852, 143.883, 34.5481, 0.2796", "413.098, 144.83, 35.28, 0.2796" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "370.846, 222.601, 39.0457, 0.4068", "371.321, 221.4, 39.0309, 0.483", "371.247, 220.353, 39.6085, 0.4322", "371.453, 219.332, 40.6, 0.4322", "371.14, 218.584, 39.76, 0.5338", "371.14, 217.914, 41.5489, 0.6356", "371.342, 216.968, 41.6455, 0.661", "372.029, 216.277, 42.0, 0.6356", "371.926, 215.141, 42.0034, 0.5592", "371.326, 214.494, 42.6437, 0.483", "371.117, 213.405, 43.052, 0.3814", "370.965, 212.784, 44.9408, 0.356", "370.198, 212.356, 45.684, 0.356", "370.002, 211.561, 44.9173, 0.3814", "370.155, 210.787, 44.1734, 0.356", "370.568, 209.73, 43.8738, 0.356", "370.842, 208.643, 44.2596, 0.3814", "370.927, 207.629, 44.0177, 0.4322", "370.553, 206.721, 44.2957, 0.4576", "370.416, 206.212, 46.1605, 0.4322", "370.656, 205.25, 46.471, 0.4576", "370.722, 204.151, 46.6799, 0.5084", "370.434, 203.406, 45.4902, 0.6102", "370.178, 202.554, 44.5284, 0.6356", "369.903, 201.477, 44.8084, 0.5848", "370.084, 200.683, 46.2, 0.483", "370.313, 199.583, 46.7312, 0.3814", "370.46, 198.635, 46.3963, 0.356", "370.885, 197.798, 46.76, 0.356" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "370.846, 222.601, 39.0457, 0.4068", "370.018, 221.841, 38.6798, 0.3814", "369.108, 221.151, 38.64, 0.3814", "368.212, 220.442, 38.64, 0.4068", "367.315, 219.736, 38.64, 0.4576", "366.376, 219.083, 38.64, 0.483", "365.431, 218.439, 38.6394, 0.483", "364.483, 217.798, 38.6372, 0.4576", "363.582, 217.098, 38.628, 0.5084", "362.745, 216.318, 38.5904, 0.5338", "361.931, 215.52, 38.3992, 0.5592", "361.07, 214.805, 37.8795, 0.5084", "360.156, 214.146, 37.5656, 0.5084", "359.201, 213.523, 37.693, 0.5592", "358.173, 213.099, 38.1718, 0.661", "357.13, 212.706, 38.617, 0.7372", "356.152, 212.114, 38.626, 0.7372", "355.236, 211.433, 38.5714, 0.661", "354.417, 210.654, 38.2794, 0.6102", "353.612, 209.876, 37.8412, 0.5592", "352.649, 209.302, 38.0041, 0.5592", "351.606, 208.895, 38.5101, 0.5084", "350.511, 208.573, 38.6347, 0.4576", "349.404, 208.287, 38.6117, 0.4576", "348.311, 207.96, 38.4513, 0.483", "347.234, 207.639, 37.9473, 0.5592", "346.166, 207.283, 37.5337, 0.5848", "345.121, 206.822, 37.6076, 0.5848", "344.111, 206.338, 37.9618, 0.5592", "343.23, 205.668, 38.5958, 0.5084", "342.267, 205.054, 38.7386, 0.483", "341.346, 204.409, 39.0944, 0.4576", "340.537, 203.646, 39.6752, 0.4322", "339.688, 202.88, 39.7001, 0.3814", "338.855, 202.109, 39.4632, 0.305", "338.019, 201.361, 39.1471, 0.2542", "337.12, 200.767, 39.3453, 0.2542", "336.12, 200.479, 38.6688, 0.305", "335.455, 199.71, 38.5314, 0.3814", "334.881, 198.763, 39.2274, 0.4322", "334.208, 197.862, 39.6544, 0.4576", "333.463, 196.996, 39.76, 0.483", "332.769, 196.089, 39.76, 0.5084", "332.017, 195.23, 39.76, 0.5338", "331.185, 194.446, 39.76, 0.5084", "330.266, 193.77, 39.76, 0.5084", "329.351, 193.087, 39.76, 0.5084", "328.36, 192.531, 39.76, 0.5338", "327.417, 191.898, 39.7603, 0.5084", "326.593, 191.109, 39.7611, 0.483", "325.858, 190.234, 39.7662, 0.483", "325.048, 189.432, 39.7953, 0.5338", "324.186, 188.683, 39.9319, 0.5848", "323.416, 187.909, 40.6585, 0.5848", "322.765, 187.058, 41.6242, 0.5592", "322.16, 186.116, 41.7197, 0.5338", "321.494, 185.222, 41.1429, 0.5592", "320.775, 184.344, 41.0292, 0.5848", "320.151, 183.407, 41.4422, 0.6102", "319.648, 182.436, 40.9167, 0.5848", "319.147, 181.445, 40.255, 0.5338", "318.587, 180.457, 40.2506, 0.5084", "317.962, 179.518, 39.8941, 0.5084", "317.264, 178.62, 39.935, 0.5592", "316.833, 177.587, 40.3642, 0.5848", "316.586, 176.477, 40.3052, 0.6102", "316.234, 175.391, 40.189, 0.6102", "315.852, 174.316, 39.9862, 0.5592", "315.442, 173.29, 40.6398, 0.483", "315.329, 172.183, 40.2013, 0.3814", "315.744, 171.142, 39.76, 0.3304" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "469.627, 314.808, 29.8066, 0.3304", "468.994, 315.688, 30.6667, 0.6864", "468.228, 316.537, 30.7625, 0.788", "467.466, 317.383, 30.6228, 0.8644", "466.837, 318.296, 29.941, 0.9152", "466.04, 319.112, 29.7514, 0.839", "465.217, 319.717, 29.5722, 0.7118", "465.661, 320.262, 27.811, 0.5592", "465.791, 321.215, 26.4015, 0.4576", "465.605, 321.97, 24.5577, 0.4068", "465.29, 322.713, 22.6814, 0.3304", "465.471, 323.501, 20.7897, 0.305", "465.915, 324.388, 19.4818, 0.2796", "466.6, 325.223, 18.7953, 0.305", "467.41, 325.983, 19.0002, 0.2796", "467.364, 326.753, 20.3045, 0.2542", "467.234, 327.727, 21.4054, 0.2288", "467.595, 328.714, 20.9012, 0.2288", "467.716, 329.552, 19.1064, 0.2288", "467.905, 330.338, 17.2348, 0.2796", "466.89, 330.808, 17.019, 0.3814", "466.267, 331.576, 18.247, 0.483", "466.169, 332.691, 18.1804, 0.483", "466.56, 333.719, 17.477, 0.3814", "466.896, 334.772, 17.5277, 0.305", "466.602, 335.792, 18.2706, 0.2796", "466.039, 336.604, 19.6179, 0.305", "465.844, 337.587, 20.6856, 0.2796", "466.096, 338.605, 21.6454, 0.2796", "465.951, 339.704, 21.8058, 0.2796", "465.805, 340.771, 21.5844, 0.3304", "466.205, 341.493, 20.2675, 0.3304", "466.616, 341.789, 17.7853, 0.356", "466.452, 342.51, 16.5556, 0.3304", "466.14, 343.578, 16.8874, 0.3304", "466.068, 344.676, 17.6165, 0.305", "466.078, 345.726, 18.697, 0.305", "466.157, 346.804, 18.7611, 0.3304", "466.379, 347.91, 18.3865, 0.3304", "466.784, 348.847, 17.3205, 0.3304", "466.448, 349.72, 16.1955, 0.2796", "466.523, 350.293, 14.0, 0.305" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "469.627, 314.808, 29.8066, 0.3304", "470.681, 314.935, 28.8744, 0.356" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "477.048, 227.427, 27.72, 0.2796", "476.339, 226.473, 26.88, 0.2796", "475.609, 225.632, 26.88, 0.2796", "475.055, 224.653, 26.88, 0.3304", "474.583, 223.642, 26.8624, 0.4068", "474.302, 222.654, 26.6, 0.3814", "474.302, 221.52, 26.2979, 0.356", "474.302, 220.635, 24.8573, 0.2796", "474.302, 219.505, 24.64, 0.2542", "474.671, 218.455, 24.64, 0.2542", "474.76, 217.326, 24.6341, 0.2796", "474.76, 216.213, 24.1805, 0.305", "474.723, 215.079, 24.08, 0.356", "474.646, 213.942, 24.0489, 0.4068", "474.252, 213.025, 22.9466, 0.4576", "473.712, 212.031, 22.68, 0.4068", "473.384, 210.935, 22.68, 0.356", "472.654, 210.062, 22.68, 0.305", "472.472, 208.949, 22.68, 0.3304", "472.472, 207.805, 22.68, 0.356", "472.386, 206.674, 22.68, 0.3814", "471.996, 205.605, 22.68, 0.3304", "471.807, 204.476, 22.68, 0.2796", "471.482, 203.435, 22.68, 0.2288", "470.493, 202.894, 22.68, 0.2542", "469.739, 202.054, 22.68, 0.2796", "469.498, 200.961, 22.4106, 0.305", "469.498, 199.85, 21.8761, 0.2796", "469.503, 198.707, 21.84, 0.2542", "469.79, 197.623, 21.84, 0.2288", "470.111, 196.535, 21.5897, 0.2288", "470.184, 195.395, 21.56, 0.2288", "470.184, 194.251, 21.56, 0.2288", "470.184, 193.107, 21.56, 0.2288", "470.184, 191.963, 21.56, 0.2288", "469.962, 192.251, 19.88, 0.2288", "469.756, 191.176, 19.1604, 0.2542", "469.726, 190.045, 19.0319, 0.2796", "469.612, 188.989, 18.48, 0.305" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "477.048, 227.427, 27.72, 0.2796", "476.988, 227.028, 27.6223, 0.2796", "477.135, 225.922, 27.72, 0.2542", "477.389, 224.807, 27.72, 0.2288", "477.391, 223.663, 27.72, 0.2542", "477.391, 222.519, 27.72, 0.2796", "477.36, 221.378, 27.72, 0.3304", "477.279, 220.238, 27.72, 0.356", "477.277, 219.094, 27.72, 0.4068", "477.277, 217.95, 27.72, 0.4322", "477.362, 216.811, 27.72, 0.4322", "477.391, 215.668, 27.72, 0.3814", "477.853, 214.709, 27.72, 0.305", "478.333, 213.693, 27.72, 0.2542", "479.052, 212.818, 27.72, 0.2288", "479.466, 211.757, 27.72, 0.2288", "479.729, 210.648, 27.72, 0.2542", "479.908, 209.526, 27.72, 0.3304", "479.908, 208.382, 27.72, 0.4068", "479.913, 207.238, 27.72, 0.4322", "480.236, 206.178, 27.72, 0.3814", "480.915, 205.325, 27.72, 0.3304", "481.319, 204.344, 27.9684, 0.305", "481.772, 203.298, 28.0, 0.2796", "482.456, 202.391, 28.0, 0.2542", "482.85, 201.336, 28.0, 0.2288", "483.34, 200.314, 28.0, 0.2288", "483.868, 199.304, 28.0, 0.2288", "484.503, 198.381, 28.0, 0.2542", "485.161, 197.53, 28.0, 0.2796", "485.275, 196.4, 28.0, 0.305", "485.305, 195.257, 28.0, 0.305", "485.396, 194.12, 28.0, 0.305", "485.399, 193.014, 28.5802, 0.305", "485.517, 191.916, 28.84, 0.2796", "486.414, 191.245, 28.84, 0.2542", "487.115, 190.487, 28.84, 0.2288", "487.344, 189.388, 28.84, 0.2542", "487.344, 188.244, 28.84, 0.305", "487.344, 187.1, 28.84, 0.4068", "487.344, 185.956, 28.84, 0.483", "487.344, 184.817, 28.7431, 0.5338", "487.344, 183.69, 28.2999, 0.483", "487.344, 182.55, 28.0521, 0.4068", "487.389, 181.421, 28.0, 0.305", "487.995, 180.467, 28.0, 0.2796", "488.335, 179.384, 28.0, 0.3304", "488.374, 178.243, 28.0, 0.4322", "488.374, 177.099, 28.0, 0.483", "488.375, 175.955, 28.033, 0.4322", "488.728, 174.907, 28.56, 0.356", "489.424, 174.015, 28.56, 0.305", "490.436, 173.53, 28.56, 0.305", "491.307, 172.832, 29.0696, 0.2796", "492.366, 172.63, 29.4, 0.2542", "493.508, 172.564, 29.4, 0.2542", "494.619, 172.316, 29.4213, 0.2796", "495.684, 172.172, 30.3089, 0.305", "496.792, 172.071, 30.8, 0.2796", "497.649, 171.486, 30.8, 0.2542", "498.784, 171.371, 30.8, 0.2288", "499.928, 171.371, 30.8, 0.2542" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "405.375, 195.706, 23.24, 0.305", "405.868, 196.721, 23.6625, 0.4576", "406.147, 197.766, 24.5112, 0.4576", "406.682, 198.261, 26.1055, 0.4576", "406.715, 199.017, 28.019, 0.4322", "406.722, 199.766, 26.5723, 0.4068", "406.621, 200.52, 24.7755, 0.356", "406.558, 201.55, 25.1087, 0.3304", "406.463, 202.591, 24.8069, 0.2796", "406.396, 203.715, 24.4639, 0.2796", "406.71, 204.652, 25.1992, 0.2796", "407.428, 204.998, 24.442, 0.3304", "407.678, 205.294, 26.6, 0.356", "407.95, 205.615, 24.8942, 0.4068", "408.223, 206.111, 23.8958, 0.4576", "408.522, 207.135, 23.8493, 0.483", "408.522, 208.251, 24.341, 0.483", "408.708, 209.235, 24.071, 0.4322", "409.018, 210.193, 24.6428, 0.4576", "409.197, 211.13, 25.1272, 0.483", "409.536, 212.09, 26.01, 0.5338", "409.989, 212.858, 26.3858, 0.5084", "410.243, 213.876, 26.4732, 0.5084", "410.28, 214.715, 25.8709, 0.483", "410.598, 215.598, 26.5689, 0.483", "410.146, 216.372, 26.0764, 0.4322", "410.325, 217.37, 26.88, 0.4322", "410.353, 218.498, 26.7182, 0.4068", "410.74, 219.46, 27.6612, 0.4322", "410.81, 220.525, 27.3868, 0.4068", "411.3, 221.203, 26.0448, 0.4068", "411.497, 222.294, 26.3004, 0.3304", "411.641, 223.222, 26.7887, 0.305", "411.723, 224.222, 26.6613, 0.305", "411.611, 225.227, 27.7122, 0.4068", "411.814, 226.201, 27.3067, 0.4576", "412.087, 227.1, 27.1071, 0.5084", "412.467, 228.11, 27.106, 0.5084", "412.928, 229.013, 26.6582, 0.5338", "413.381, 230.018, 26.5591, 0.5084", "413.486, 231.115, 26.2875, 0.4322", "413.639, 231.895, 25.2, 0.3814", "413.776, 232.934, 25.0858, 0.356", "413.889, 233.975, 26.035, 0.4322", "413.927, 235.025, 25.8964, 0.483", "414.192, 235.945, 26.32, 0.5338", "414.501, 236.844, 25.4391, 0.5084", "414.814, 237.781, 25.5419, 0.483", "414.927, 238.753, 26.0372, 0.483", "415.209, 238.867, 26.32, 0.483", "415.615, 239.93, 26.0616, 0.5084", "415.734, 240.961, 24.9292, 0.483", "415.935, 242.057, 24.6764, 0.5084", "416.257, 243.133, 25.1448, 0.5084", "416.674, 244.194, 25.1896, 0.5592", "417.097, 245.256, 25.198, 0.5592", "417.643, 246.255, 25.1997, 0.5084", "418.304, 247.185, 25.1754, 0.3814", "419.172, 247.909, 24.8116, 0.3304", "419.858, 248.779, 24.1604, 0.3814", "420.673, 249.579, 24.0873, 0.5338", "421.348, 250.502, 24.0495, 0.5848", "421.98, 251.442, 23.7342, 0.5592", "422.73, 252.261, 23.0997, 0.4576", "423.542, 253.064, 23.0384, 0.4068", "424.411, 253.794, 23.3596, 0.3814", "425.254, 254.515, 23.7196, 0.3814", "425.813, 255.49, 23.2098, 0.3814", "426.277, 256.531, 23.0028, 0.3814", "426.632, 257.612, 22.9676, 0.3814", "426.763, 258.749, 22.9611, 0.4068", "426.816, 259.888, 22.9603, 0.4322", "426.725, 261.023, 23.0793, 0.483", "426.744, 262.142, 23.6362, 0.5084", "426.908, 263.24, 24.283, 0.5084", "427.124, 264.312, 25.062, 0.483", "427.182, 265.433, 25.4318, 0.4576", "427.218, 265.866, 25.3165, 0.4576", "427.623, 266.935, 25.2244, 0.4068", "427.994, 268.016, 25.2112, 0.356", "428.077, 269.136, 25.7373, 0.3304", "428.224, 270.125, 25.9781, 0.356", "428.187, 271.23, 25.3148, 0.356", "428.842, 272.166, 25.2297, 0.305", "429.63, 272.901, 25.4366, 0.2796" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "405.375, 195.706, 23.24, 0.305", "404.981, 194.669, 23.6006, 0.305", "405.373, 193.934, 24.9539, 0.356", "405.024, 193.282, 25.4531, 0.4068", "404.294, 192.544, 25.9823, 0.4068", "404.175, 191.485, 26.1209, 0.4322", "404.084, 190.812, 27.72, 0.4068", "403.958, 190.022, 27.2726, 0.4068", "403.419, 189.182, 27.8466, 0.4068", "403.247, 188.381, 28.7762, 0.4068", "402.959, 187.32, 29.0424, 0.4576", "402.504, 186.573, 28.8089, 0.4576", "402.301, 185.537, 28.2937, 0.5084", "401.674, 184.647, 28.8683, 0.483", "401.225, 183.863, 28.294, 0.483", "401.144, 182.873, 28.9663, 0.4576", "400.366, 182.092, 29.5571, 0.5084", "399.953, 181.14, 30.0493, 0.5592", "399.714, 180.3, 29.1376, 0.6356", "399.413, 179.431, 28.0795, 0.6102", "398.851, 178.57, 28.56, 0.5848", "398.698, 177.813, 29.4059, 0.5084", "398.477, 176.829, 29.6612, 0.483", "398.334, 175.829, 30.2666, 0.4322", "397.883, 174.918, 31.08, 0.3814", "397.654, 174.221, 33.04, 0.305", "397.37, 173.18, 33.04, 0.2542", "396.739, 172.286, 33.04, 0.2542" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "470.681, 314.935, 28.8744, 0.356", "470.85, 315.067, 27.9241, 0.3304", "471.183, 315.655, 25.8972, 0.3814", "471.584, 316.574, 24.8156, 0.356", "472.398, 317.314, 24.0906, 0.3304", "473.244, 318.013, 23.3041, 0.3304", "473.618, 319.066, 22.8382, 0.3304", "473.131, 319.91, 21.7087, 0.3304", "473.603, 320.226, 19.2945, 0.2796", "474.269, 320.739, 17.4818, 0.2542", "475.147, 321.165, 17.1886, 0.2542", "476.024, 320.744, 17.6602, 0.2796", "476.911, 320.258, 16.8454, 0.305", "478.0, 320.079, 16.63, 0.305", "479.078, 319.995, 15.7366, 0.3304", "480.036, 320.161, 15.9774, 0.356", "480.771, 320.931, 16.5208, 0.3814", "481.026, 321.978, 16.9795, 0.356", "480.734, 323.05, 17.2836, 0.356", "480.336, 324.119, 17.187, 0.3304", "479.988, 325.153, 16.4304, 0.3304", "479.748, 326.238, 15.8141, 0.2796", "479.303, 327.159, 16.7233, 0.2796", "478.904, 328.193, 16.7202, 0.2796", "478.614, 329.295, 16.8392, 0.3304", "478.387, 330.414, 17.0215, 0.3304", "478.128, 331.52, 17.3438, 0.3304", "477.966, 332.652, 17.3597, 0.2796", "477.937, 333.795, 17.3589, 0.2542", "477.763, 334.925, 17.3524, 0.2288", "477.504, 336.04, 17.3124, 0.2288", "477.411, 337.17, 16.9694, 0.2288", "477.048, 337.938, 15.12, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "470.681, 314.935, 28.8744, 0.356", "471.025, 314.804, 29.1869, 0.2288", "471.965, 314.427, 30.3783, 0.2542", "472.772, 314.135, 32.2028, 0.2796", "473.688, 313.833, 33.1559, 0.305", "474.546, 313.29, 32.1325, 0.2796", "475.386, 313.16, 30.3556, 0.2796", "476.419, 313.191, 29.6789, 0.3304", "477.484, 313.002, 30.4091, 0.4068", "478.401, 312.603, 31.7262, 0.4322", "479.318, 312.288, 33.1635, 0.3814", "480.235, 311.826, 33.3024, 0.356", "480.975, 311.003, 32.7317, 0.3814", "481.688, 310.118, 32.6348, 0.4322", "482.309, 309.172, 32.9182, 0.4322", "483.068, 308.339, 33.04, 0.4322", "483.953, 307.615, 33.04, 0.4068", "484.791, 306.837, 33.04, 0.4322", "485.574, 306.004, 33.04, 0.4068", "486.249, 305.084, 33.04, 0.4068", "486.83, 304.099, 33.04, 0.356", "487.076, 303.003, 33.0403, 0.305", "487.083, 301.862, 33.0431, 0.2542", "486.897, 300.737, 33.0604, 0.2796", "486.72, 299.609, 33.1789, 0.3304", "486.783, 298.499, 33.7095, 0.3814", "486.733, 297.384, 33.5544, 0.3304", "486.717, 296.494, 31.9558, 0.2796", "487.067, 295.756, 30.0468, 0.2542", "487.651, 294.853, 29.2855, 0.2796", "487.899, 294.42, 35.0263, 0.305", "488.826, 294.256, 34.5391, 0.2796", "489.093, 293.731, 33.6185, 0.305", "489.253, 292.695, 34.4089, 0.3304", "489.927, 291.892, 34.0816, 0.3814", "490.213, 290.983, 34.5332, 0.3814", "490.464, 290.113, 34.1328, 0.3814", "490.417, 289.133, 33.9945, 0.3814", "490.561, 288.266, 34.9852, 0.3304", "491.287, 287.432, 34.932, 0.2796", "491.599, 286.39, 34.44, 0.2542", "492.099, 285.435, 34.9474, 0.2796", "492.591, 284.543, 34.5766, 0.305", "493.316, 283.823, 34.4109, 0.305", "494.27, 283.319, 34.44, 0.305", "494.455, 282.484, 35.0, 0.305", "495.374, 281.906, 34.5094, 0.2796", "496.415, 281.464, 34.72, 0.2796", "497.211, 280.953, 35.1882, 0.305", "498.289, 280.639, 35.28, 0.3814", "499.374, 280.358, 35.7078, 0.4068", "500.412, 280.319, 35.567, 0.3814", "501.476, 280.623, 35.56, 0.305", "502.62, 280.623, 35.56, 0.2542", "503.36, 281.109, 35.56, 0.2542", "504.172, 281.755, 35.56, 0.2796", "504.933, 281.767, 36.6489, 0.305", "506.027, 281.882, 36.232, 0.2796", "507.166, 281.882, 36.4, 0.2542", "508.31, 281.882, 36.4039, 0.2288", "509.443, 281.882, 36.68, 0.2288", "510.447, 282.238, 37.24, 0.2288", "511.578, 282.339, 37.2792, 0.2288", "512.714, 282.339, 37.52, 0.2288", "513.859, 282.339, 37.52, 0.2288", "515.003, 282.339, 37.52, 0.2288", "515.587, 282.511, 38.5694, 0.2542", "515.885, 283.36, 39.739, 0.2796", "516.674, 283.68, 38.64, 0.305", "517.504, 283.473, 38.3158, 0.2796", "518.245, 283.328, 38.8021, 0.2796", "518.795, 282.692, 39.4394, 0.305", "519.681, 282.072, 39.4573, 0.3814", "520.466, 281.64, 39.3887, 0.4322", "521.338, 281.093, 39.1986, 0.4576", "522.433, 281.014, 39.1838, 0.4576", "523.325, 280.481, 39.8804, 0.4322", "524.141, 280.055, 39.6466, 0.3814", "524.962, 280.307, 40.1887, 0.3304", "525.861, 280.274, 40.04, 0.3304", "526.714, 279.687, 40.04, 0.356", "527.641, 279.587, 40.1999, 0.356", "528.517, 279.462, 38.6224, 0.356", "529.172, 279.102, 39.4282, 0.356", "529.838, 278.564, 40.3365, 0.4068", "530.636, 278.45, 40.9578, 0.3814", "531.779, 278.45, 40.88, 0.4068", "532.595, 278.45, 41.2367, 0.3814", "533.602, 278.669, 41.9205, 0.4068", "534.356, 278.907, 41.44, 0.356", "535.451, 278.967, 41.5332, 0.356", "536.345, 278.818, 42.6829, 0.356", "537.115, 278.901, 44.4063, 0.356", "537.555, 279.333, 46.3543, 0.305", "538.366, 278.924, 46.2, 0.2542", "538.366, 277.998, 47.32, 0.2542", "538.463, 277.411, 46.1188, 0.2796", "538.903, 277.121, 47.32, 0.305", "539.625, 276.996, 46.1009, 0.2796", "540.376, 276.724, 46.0096, 0.2542", "541.215, 276.867, 46.2255, 0.2288", "542.168, 276.663, 46.2022, 0.2288", "542.942, 276.962, 46.2, 0.2796" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_63", "dend_62", "dend_59", "dend_48", "dend_39", "dend_0", "dend_65", "dend_64", "dend_61", "dend_60", "dend_58", "dend_49", "dend_47", "dend_40", "dend_34", "dend_1", "dend_55", "dend_50", "dend_46", "dend_41", "dend_38", "dend_35", "dend_17", "dend_2", "dend_57", "dend_56", "dend_54", "dend_51", "dend_45", "dend_42", "dend_37", "dend_36", "dend_33", "dend_18", "dend_4", "dend_3", "dend_53", "dend_52", "dend_44", "dend_43", "dend_24", "dend_19", "dend_14", "dend_5", "dend_28", "dend_25", "dend_23", "dend_20", "dend_16", "dend_15", "dend_9", "dend_6", "dend_30", "dend_29", "dend_27", "dend_26", "dend_22", "dend_21", "dend_13", "dend_10", "dend_8", "dend_7", "dend_32", "dend_31", "dend_12", "dend_11" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21481",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_1", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_2", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.9200001"
  }, {
    "group" : "axon",
    "value" : "1.9200001"
  }, {
    "group" : "dend",
    "value" : "1.9200001"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "30.79"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.0739593E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.077333845",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.005871E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.21179648",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.589116",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.018146025",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.3201281E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "8.566431E-4",
    "erev" : "-85.911095"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "6.059588E-4",
    "erev" : "-85.911095"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.1584476E-7",
    "erev" : "-85.911095"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "9.018702E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0054861936",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472304676

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_63, id: dend_63, parent: soma_0
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: soma_0
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: soma_0
create dend_59
public dend_59
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_58, id: dend_58, parent: dend_48
create dend_58
public dend_58
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_39
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_34, id: dend_34, parent: dend_0
create dend_34
public dend_34
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_17, id: dend_17, parent: dend_1
create dend_17
public dend_17
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_17
create dend_33
public dend_33
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_4
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_63, dend_62, dend_59, dend_48, dend_39, dend_0, dend_65, dend_64, dend_61, dend_60, dend_58, dend_49, dend_47, dend_40, dend_34, dend_1, dend_55, dend_50, dend_46, dend_41, dend_38, dend_35, dend_17, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_42, dend_37, dend_36, dend_33, dend_18, dend_4, dend_3, dend_53, dend_52, dend_44, dend_43, dend_24, dend_19, dend_14, dend_5, dend_28, dend_25, dend_23, dend_20, dend_16, dend_15, dend_9, dend_6, dend_30, dend_29, dend_27, dend_26, dend_22, dend_21, dend_13, dend_10, dend_8, dend_7, dend_32, dend_31, dend_12, dend_11]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_21481, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_21481
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_1, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.4999999999999978)
    connect dend_63(0), soma_0(0.4999999999999978)
    connect dend_62(0), soma_0(0.4999999999999978)
    connect dend_59(0), soma_0(0.4999999999999978)
    connect dend_48(0), soma_0(0.4999999999999978)
    connect dend_39(0), soma_0(0.4999999999999978)
    connect dend_0(0), soma_0(0.4999999999999978)
    connect axon_1(0), axon_0(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_58(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_34(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_17(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 441.092, 327.708, 31.6865, 12.6742 ) }
    soma_0 { pt3dadd( 447.429, 327.708, 31.6865, 12.6742 ) }
    soma_0 { pt3dadd( 453.766, 327.708, 31.6865, 12.6742 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 447.429, 327.708, 31.6865, 1.0 ) }
    axon_0 { pt3dadd( 453.27, 341.524, 31.6865, 1.0 ) }
    axon_0 { pt3dadd( 459.112, 355.34, 31.6865, 1.0 ) }
    // Section: dend_63, id: dend_63, parent: soma_0 (entry count 6/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 450.235, 333.198, 30.942, 0.2796 ) }
    dend_63 { pt3dadd( 450.759, 334.21, 30.7373, 0.356 ) }
    dend_63 { pt3dadd( 451.355, 335.154, 30.3884, 0.4322 ) }
    dend_63 { pt3dadd( 451.791, 335.801, 28.4323, 0.4068 ) }
    dend_63 { pt3dadd( 451.756, 336.206, 25.8426, 0.356 ) }
    dend_63 { pt3dadd( 451.533, 336.855, 24.0358, 0.305 ) }
    dend_63 { pt3dadd( 451.615, 337.832, 24.8259, 0.305 ) }
    dend_63 { pt3dadd( 451.295, 338.504, 26.9461, 0.2796 ) }
    dend_63 { pt3dadd( 450.887, 339.107, 29.0956, 0.2796 ) }
    dend_63 { pt3dadd( 450.726, 339.94, 30.4931, 0.2796 ) }
    dend_63 { pt3dadd( 451.046, 341.021, 30.2761, 0.305 ) }
    dend_63 { pt3dadd( 451.118, 342.116, 29.8824, 0.2796 ) }
    dend_63 { pt3dadd( 450.857, 343.17, 30.4923, 0.2796 ) }
    dend_63 { pt3dadd( 450.811, 344.214, 31.2794, 0.2796 ) }
    dend_63 { pt3dadd( 451.133, 345.254, 30.8157, 0.305 ) }
    dend_63 { pt3dadd( 451.059, 346.274, 29.8379, 0.305 ) }
    dend_63 { pt3dadd( 450.96, 347.364, 29.9975, 0.356 ) }
    dend_63 { pt3dadd( 450.92, 348.456, 30.8216, 0.4068 ) }
    dend_63 { pt3dadd( 450.686, 349.531, 31.5356, 0.4576 ) }
    dend_63 { pt3dadd( 450.206, 350.532, 31.2012, 0.4068 ) }
    dend_63 { pt3dadd( 449.679, 351.519, 31.5246, 0.356 ) }
    dend_63 { pt3dadd( 449.195, 352.498, 30.9151, 0.305 ) }
    dend_63 { pt3dadd( 448.57, 352.545, 28.5785, 0.3304 ) }
    dend_63 { pt3dadd( 448.791, 353.083, 29.68, 0.356 ) }
    dend_63 { pt3dadd( 448.765, 354.116, 30.1666, 0.356 ) }
    dend_63 { pt3dadd( 448.677, 354.782, 31.0223, 0.3304 ) }
    dend_63 { pt3dadd( 448.234, 355.362, 30.5967, 0.305 ) }
    dend_63 { pt3dadd( 448.175, 356.125, 30.0905, 0.305 ) }
    dend_63 { pt3dadd( 447.989, 357.089, 29.7086, 0.3304 ) }
    dend_63 { pt3dadd( 447.533, 357.918, 30.1157, 0.356 ) }
    dend_63 { pt3dadd( 446.964, 358.539, 29.7626, 0.3814 ) }
    dend_63 { pt3dadd( 447.384, 359.205, 28.1224, 0.3304 ) }
    dend_63 { pt3dadd( 446.603, 359.965, 28.3161, 0.305 ) }
    dend_63 { pt3dadd( 446.161, 360.457, 30.0994, 0.2796 ) }
    dend_63 { pt3dadd( 445.794, 361.192, 31.789, 0.305 ) }
    dend_63 { pt3dadd( 445.555, 362.139, 31.3844, 0.305 ) }
    dend_63 { pt3dadd( 445.261, 363.215, 31.4532, 0.305 ) }
    dend_63 { pt3dadd( 445.009, 364.125, 30.8, 0.305 ) }
    dend_63 { pt3dadd( 444.902, 365.165, 31.36, 0.2796 ) }
    dend_63 { pt3dadd( 444.444, 366.047, 32.76, 0.2542 ) }
    dend_63 { pt3dadd( 444.35, 367.184, 32.76, 0.2288 ) }
    dend_63 { pt3dadd( 444.168, 368.312, 32.76, 0.2288 ) }
    dend_63 { pt3dadd( 444.089, 369.447, 32.76, 0.2288 ) }
    dend_63 { pt3dadd( 443.684, 370.504, 32.76, 0.2288 ) }
    dend_63 { pt3dadd( 442.785, 371.162, 32.76, 0.2288 ) }
    dend_63 { pt3dadd( 442.728, 372.292, 32.76, 0.2288 ) }
    dend_63 { pt3dadd( 442.728, 373.436, 32.76, 0.2288 ) }
    dend_63 { pt3dadd( 442.647, 374.565, 32.76, 0.2288 ) }
    dend_63 { pt3dadd( 442.385, 375.659, 32.9524, 0.2288 ) }
    dend_63 { pt3dadd( 442.385, 376.802, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 442.27, 377.936, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 441.709, 378.854, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 441.347, 379.893, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 440.554, 380.568, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 440.44, 381.704, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 440.433, 382.848, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 440.188, 383.952, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 440.012, 385.082, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 439.982, 386.224, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 439.973, 387.368, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 439.868, 388.505, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 439.868, 389.649, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 439.868, 390.793, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 439.868, 391.937, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 439.868, 393.081, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 439.868, 394.225, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 439.868, 395.369, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 440.037, 396.499, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 440.264, 397.611, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 440.705, 398.641, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 441.012, 399.599, 33.04, 0.2288 ) }
    dend_63 { pt3dadd( 440.98, 399.989, 33.7366, 0.2288 ) }
    // Section: dend_62, id: dend_62, parent: soma_0 (entry count 78/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 453.12, 331.797, 31.7604, 0.4322 ) }
    dend_62 { pt3dadd( 453.988, 332.18, 30.7812, 0.4068 ) }
    dend_62 { pt3dadd( 454.388, 332.494, 28.336, 0.3304 ) }
    dend_62 { pt3dadd( 454.86, 333.159, 26.9604, 0.2542 ) }
    dend_62 { pt3dadd( 455.698, 333.105, 27.9686, 0.2542 ) }
    dend_62 { pt3dadd( 456.402, 332.412, 29.3594, 0.305 ) }
    dend_62 { pt3dadd( 457.3, 331.976, 30.3783, 0.356 ) }
    dend_62 { pt3dadd( 458.362, 331.668, 30.1666, 0.356 ) }
    dend_62 { pt3dadd( 459.43, 331.331, 29.6624, 0.305 ) }
    dend_62 { pt3dadd( 460.129, 331.376, 31.2021, 0.2542 ) }
    dend_62 { pt3dadd( 460.651, 331.758, 33.493, 0.2796 ) }
    dend_62 { pt3dadd( 461.336, 332.221, 35.3657, 0.3814 ) }
    dend_62 { pt3dadd( 462.294, 332.594, 36.456, 0.483 ) }
    dend_62 { pt3dadd( 463.305, 332.831, 37.5295, 0.483 ) }
    dend_62 { pt3dadd( 464.142, 332.977, 39.3565, 0.4068 ) }
    dend_62 { pt3dadd( 464.907, 333.414, 39.7244, 0.356 ) }
    dend_62 { pt3dadd( 465.899, 333.588, 39.3851, 0.356 ) }
    dend_62 { pt3dadd( 466.939, 333.415, 40.348, 0.356 ) }
    dend_62 { pt3dadd( 467.779, 333.404, 42.1879, 0.305 ) }
    dend_62 { pt3dadd( 468.569, 333.636, 44.1129, 0.305 ) }
    dend_62 { pt3dadd( 469.552, 333.753, 45.4426, 0.3304 ) }
    dend_62 { pt3dadd( 470.508, 333.398, 46.653, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_62 { pt3dadd( 471.44, 333.372, 48.2454, 0.4068 ) }
    dend_62 { pt3dadd( 472.565, 333.442, 48.4982, 0.4322 ) }
    dend_62 { pt3dadd( 473.654, 333.764, 48.7712, 0.4068 ) }
    dend_62 { pt3dadd( 474.778, 333.926, 49.1014, 0.3814 ) }
    dend_62 { pt3dadd( 475.815, 333.82, 50.2516, 0.305 ) }
    dend_62 { pt3dadd( 476.849, 333.819, 51.4436, 0.2542 ) }
    dend_62 { pt3dadd( 477.963, 333.819, 52.08, 0.2288 ) }
    // Section: dend_59, id: dend_59, parent: soma_0 (entry count 7/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 453.05, 325.494, 30.8, 0.4576 ) }
    dend_59 { pt3dadd( 453.806, 324.641, 30.7992, 0.4576 ) }
    dend_59 { pt3dadd( 454.65, 323.871, 30.7952, 0.4576 ) }
    dend_59 { pt3dadd( 455.413, 323.019, 30.7779, 0.4322 ) }
    dend_59 { pt3dadd( 456.24, 322.232, 30.7107, 0.483 ) }
    dend_59 { pt3dadd( 457.163, 321.602, 30.3895, 0.483 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 441.537, 331.179, 30.1423, 0.5084 ) }
    dend_48 { pt3dadd( 440.523, 331.61, 30.5651, 0.6102 ) }
    dend_48 { pt3dadd( 439.702, 332.378, 30.8196, 0.6356 ) }
    dend_48 { pt3dadd( 438.845, 333.126, 31.0148, 0.661 ) }
    dend_48 { pt3dadd( 437.8, 333.344, 31.6442, 0.661 ) }
    dend_48 { pt3dadd( 436.677, 333.362, 32.1311, 0.6864 ) }
    dend_48 { pt3dadd( 435.562, 333.362, 32.7197, 0.661 ) }
    dend_48 { pt3dadd( 434.433, 333.363, 33.0417, 0.6356 ) }
    dend_48 { pt3dadd( 433.292, 333.374, 33.2349, 0.6356 ) }
    dend_48 { pt3dadd( 432.154, 333.438, 33.2024, 0.6864 ) }
    dend_48 { pt3dadd( 431.047, 333.677, 32.9263, 0.7372 ) }
    dend_48 { pt3dadd( 429.961, 333.8, 32.2137, 0.788 ) }
    dend_48 { pt3dadd( 428.884, 333.777, 31.2754, 0.7626 ) }
    dend_48 { pt3dadd( 427.783, 333.585, 30.9792, 0.7118 ) }
    dend_48 { pt3dadd( 426.681, 333.363, 31.4997, 0.6102 ) }
    dend_48 { pt3dadd( 425.568, 333.362, 30.8624, 0.5848 ) }
    dend_48 { pt3dadd( 424.424, 333.363, 30.7994, 0.5592 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 30/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 444.588, 322.307, 31.9463, 0.3304 ) }
    dend_39 { pt3dadd( 443.94, 321.367, 32.0597, 0.4576 ) }
    dend_39 { pt3dadd( 443.181, 320.57, 32.8087, 0.5848 ) }
    dend_39 { pt3dadd( 442.682, 319.669, 34.0189, 0.661 ) }
    dend_39 { pt3dadd( 441.853, 318.884, 34.1242, 0.7118 ) }
    dend_39 { pt3dadd( 440.897, 318.26, 34.0113, 0.7372 ) }
    dend_39 { pt3dadd( 439.969, 317.635, 33.4379, 0.788 ) }
    dend_39 { pt3dadd( 439.078, 316.935, 33.0736, 0.8136 ) }
    dend_39 { pt3dadd( 438.2, 316.202, 33.1047, 0.8136 ) }
    dend_39 { pt3dadd( 437.134, 315.844, 33.5591, 0.7118 ) }
    dend_39 { pt3dadd( 436.237, 315.213, 34.2922, 0.5338 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 41/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 444.627, 321.624, 29.6702, 0.2796 ) }
    dend_0 { pt3dadd( 444.727, 320.485, 29.6559, 0.4322 ) }
    dend_0 { pt3dadd( 444.561, 319.371, 29.5478, 0.6864 ) }
    dend_0 { pt3dadd( 444.052, 318.381, 29.0556, 0.9406 ) }
    dend_0 { pt3dadd( 443.452, 317.423, 28.656, 1.0932 ) }
    dend_0 { pt3dadd( 442.99, 316.384, 28.6006, 1.144 ) }
    dend_0 { pt3dadd( 442.053, 314.337, 29.384, 1.1694 ) }
    dend_0 { pt3dadd( 441.424, 312.17, 29.1609, 1.1694 ) }
    dend_0 { pt3dadd( 440.989, 311.136, 28.6084, 1.0424 ) }
    dend_0 { pt3dadd( 440.354, 310.197, 28.3469, 0.6864 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 51/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 459.112, 355.34, 31.6865, 1.0 ) }
    axon_1 { pt3dadd( 464.953, 369.156, 31.6865, 1.0 ) }
    axon_1 { pt3dadd( 470.794, 382.972, 31.6865, 1.0 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 54/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 440.98, 399.989, 33.7366, 0.2288 ) }
    dend_65 { pt3dadd( 441.679, 400.346, 34.9726, 0.2288 ) }
    dend_65 { pt3dadd( 442.489, 401.147, 34.9726, 0.2288 ) }
    dend_65 { pt3dadd( 443.521, 401.639, 34.9726, 0.2288 ) }
    dend_65 { pt3dadd( 444.357, 402.399, 35.3486, 0.2288 ) }
    dend_65 { pt3dadd( 445.177, 403.179, 35.7526, 0.2288 ) }
    dend_65 { pt3dadd( 445.897, 404.047, 35.9719, 0.2288 ) }
    dend_65 { pt3dadd( 446.499, 405.021, 35.9719, 0.2288 ) }
    dend_65 { pt3dadd( 446.731, 406.072, 35.9719, 0.2288 ) }
    dend_65 { pt3dadd( 446.58, 407.207, 35.9719, 0.2288 ) }
    dend_65 { pt3dadd( 446.787, 407.355, 36.4994, 0.2288 ) }
    dend_65 { pt3dadd( 447.47, 408.27, 36.6985, 0.2288 ) }
    dend_65 { pt3dadd( 448.153, 409.185, 36.8976, 0.2288 ) }
    dend_65 { pt3dadd( 448.835, 410.099, 37.0966, 0.2288 ) }
    dend_65 { pt3dadd( 449.518, 411.013, 37.2957, 0.2542 ) }
    dend_65 { pt3dadd( 450.201, 411.928, 37.4948, 0.2796 ) }
    dend_65 { pt3dadd( 450.882, 412.842, 37.6936, 0.305 ) }
    dend_65 { pt3dadd( 451.565, 413.756, 37.8927, 0.2796 ) }
    dend_65 { pt3dadd( 451.831, 414.811, 37.9702, 0.2542 ) }
    dend_65 { pt3dadd( 451.831, 415.955, 37.9702, 0.2288 ) }
    dend_65 { pt3dadd( 451.846, 417.098, 37.9702, 0.2288 ) }
    dend_65 { pt3dadd( 452.109, 418.211, 37.9702, 0.2288 ) }
    dend_65 { pt3dadd( 452.372, 419.324, 37.9702, 0.2288 ) }
    dend_65 { pt3dadd( 452.636, 420.437, 37.9702, 0.2288 ) }
    dend_65 { pt3dadd( 452.899, 421.55, 37.9702, 0.2288 ) }
    dend_65 { pt3dadd( 453.159, 422.664, 37.9702, 0.2288 ) }
    dend_65 { pt3dadd( 453.416, 423.779, 37.9702, 0.2288 ) }
    dend_65 { pt3dadd( 453.674, 424.894, 37.9702, 0.2288 ) }
    dend_65 { pt3dadd( 454.302, 425.817, 38.0755, 0.2288 ) }
    dend_65 { pt3dadd( 455.055, 426.678, 38.2158, 0.2542 ) }
    dend_65 { pt3dadd( 455.806, 427.538, 38.3558, 0.2796 ) }
    dend_65 { pt3dadd( 456.542, 428.412, 38.4698, 0.305 ) }
    dend_65 { pt3dadd( 457.2, 429.348, 38.4698, 0.2796 ) }
    dend_65 { pt3dadd( 457.858, 430.282, 38.4698, 0.2542 ) }
    dend_65 { pt3dadd( 458.516, 431.218, 38.4698, 0.2542 ) }
    dend_65 { pt3dadd( 459.039, 432.225, 38.4698, 0.2796 ) }
    dend_65 { pt3dadd( 459.435, 433.298, 38.4698, 0.305 ) }
    dend_65 { pt3dadd( 459.881, 434.347, 38.4698, 0.2796 ) }
    dend_65 { pt3dadd( 460.47, 435.329, 38.4698, 0.2542 ) }
    dend_65 { pt3dadd( 460.735, 436.436, 38.241, 0.2288 ) }
    dend_65 { pt3dadd( 460.987, 437.547, 38.005, 0.2288 ) }
    dend_65 { pt3dadd( 461.241, 438.659, 37.7686, 0.2288 ) }
    dend_65 { pt3dadd( 461.495, 439.77, 37.5326, 0.2288 ) }
    dend_65 { pt3dadd( 461.748, 440.882, 37.2966, 0.2288 ) }
    dend_65 { pt3dadd( 462.002, 441.992, 37.0605, 0.2288 ) }
    dend_65 { pt3dadd( 462.302, 443.094, 36.9709, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_65 { pt3dadd( 462.631, 444.19, 36.9709, 0.2288 ) }
    dend_65 { pt3dadd( 463.039, 445.25, 36.9709, 0.2288 ) }
    dend_65 { pt3dadd( 463.627, 446.232, 36.9709, 0.2288 ) }
    dend_65 { pt3dadd( 464.216, 447.212, 36.9709, 0.2288 ) }
    dend_65 { pt3dadd( 464.804, 448.194, 36.9709, 0.2288 ) }
    dend_65 { pt3dadd( 465.521, 449.062, 36.9709, 0.2288 ) }
    dend_65 { pt3dadd( 466.414, 449.777, 36.9709, 0.2288 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 7/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 440.98, 399.989, 33.7366, 0.2288 ) }
    dend_64 { pt3dadd( 440.882, 401.075, 34.5901, 0.2288 ) }
    dend_64 { pt3dadd( 440.591, 402.142, 34.9726, 0.2542 ) }
    dend_64 { pt3dadd( 440.145, 403.196, 34.9726, 0.2796 ) }
    dend_64 { pt3dadd( 439.699, 404.25, 34.9726, 0.305 ) }
    dend_64 { pt3dadd( 439.489, 405.366, 34.9726, 0.2796 ) }
    dend_64 { pt3dadd( 439.348, 406.501, 34.9726, 0.2542 ) }
    dend_64 { pt3dadd( 439.206, 407.637, 34.9726, 0.2288 ) }
    dend_64 { pt3dadd( 439.052, 407.996, 35.4421, 0.2288 ) }
    dend_64 { pt3dadd( 438.877, 409.124, 35.2682, 0.2288 ) }
    dend_64 { pt3dadd( 438.701, 410.253, 35.0941, 0.2288 ) }
    dend_64 { pt3dadd( 438.525, 411.381, 34.9202, 0.2288 ) }
    dend_64 { pt3dadd( 438.35, 412.509, 34.746, 0.2288 ) }
    dend_64 { pt3dadd( 438.174, 413.637, 34.5722, 0.2288 ) }
    dend_64 { pt3dadd( 437.999, 414.765, 34.398, 0.2288 ) }
    dend_64 { pt3dadd( 437.823, 415.894, 34.2241, 0.2542 ) }
    dend_64 { pt3dadd( 437.646, 417.022, 34.05, 0.2796 ) }
    dend_64 { pt3dadd( 437.378, 418.13, 33.9732, 0.305 ) }
    dend_64 { pt3dadd( 437.034, 419.221, 33.9732, 0.2796 ) }
    dend_64 { pt3dadd( 436.691, 420.312, 33.9732, 0.2542 ) }
    dend_64 { pt3dadd( 436.349, 421.404, 33.9732, 0.2288 ) }
    dend_64 { pt3dadd( 436.031, 422.502, 33.9732, 0.2288 ) }
    dend_64 { pt3dadd( 435.74, 423.609, 33.9732, 0.2288 ) }
    dend_64 { pt3dadd( 435.449, 424.716, 33.9732, 0.2288 ) }
    dend_64 { pt3dadd( 435.158, 425.822, 33.9732, 0.2542 ) }
    dend_64 { pt3dadd( 434.878, 426.931, 33.9732, 0.305 ) }
    dend_64 { pt3dadd( 434.663, 428.054, 33.9732, 0.356 ) }
    dend_64 { pt3dadd( 434.447, 429.177, 33.9732, 0.4068 ) }
    dend_64 { pt3dadd( 434.217, 430.297, 33.9732, 0.4576 ) }
    dend_64 { pt3dadd( 433.939, 431.407, 33.9732, 0.5084 ) }
    dend_64 { pt3dadd( 433.615, 432.473, 33.5894, 0.483 ) }
    dend_64 { pt3dadd( 433.223, 433.475, 32.6348, 0.3814 ) }
    dend_64 { pt3dadd( 432.829, 434.476, 31.6803, 0.305 ) }
    dend_64 { pt3dadd( 432.267, 435.34, 30.9756, 0.2796 ) }
    dend_64 { pt3dadd( 431.228, 435.819, 30.9756, 0.305 ) }
    dend_64 { pt3dadd( 430.234, 436.381, 30.9756, 0.2796 ) }
    dend_64 { pt3dadd( 429.26, 436.982, 30.9756, 0.2542 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 44/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 457.163, 321.602, 30.3895, 0.483 ) }
    dend_61 { pt3dadd( 457.103, 320.138, 30.5094, 0.5084 ) }
    dend_61 { pt3dadd( 456.921, 319.165, 30.2935, 0.5084 ) }
    dend_61 { pt3dadd( 456.474, 318.22, 30.6244, 0.4322 ) }
    dend_61 { pt3dadd( 456.011, 317.608, 32.3187, 0.4576 ) }
    dend_61 { pt3dadd( 455.653, 317.079, 31.9376, 0.5084 ) }
    dend_61 { pt3dadd( 454.953, 316.425, 31.92, 0.6102 ) }
    dend_61 { pt3dadd( 454.318, 315.575, 31.64, 0.661 ) }
    dend_61 { pt3dadd( 453.63, 314.953, 32.0438, 0.6864 ) }
    dend_61 { pt3dadd( 453.323, 314.254, 30.672, 0.661 ) }
    dend_61 { pt3dadd( 452.442, 313.597, 30.6132, 0.6356 ) }
    dend_61 { pt3dadd( 451.959, 312.615, 30.5393, 0.5848 ) }
    dend_61 { pt3dadd( 451.753, 311.518, 30.5528, 0.5592 ) }
    dend_61 { pt3dadd( 451.338, 310.885, 29.3709, 0.483 ) }
    dend_61 { pt3dadd( 450.99, 310.443, 30.9725, 0.4576 ) }
    dend_61 { pt3dadd( 450.532, 309.566, 30.7997, 0.4068 ) }
    dend_61 { pt3dadd( 450.066, 308.778, 30.9406, 0.4068 ) }
    dend_61 { pt3dadd( 449.711, 307.99, 29.384, 0.356 ) }
    dend_61 { pt3dadd( 449.363, 306.965, 28.5858, 0.3304 ) }
    dend_61 { pt3dadd( 448.894, 306.249, 27.855, 0.305 ) }
    dend_61 { pt3dadd( 448.302, 305.633, 29.4, 0.2796 ) }
    dend_61 { pt3dadd( 447.647, 304.873, 29.267, 0.2796 ) }
    dend_61 { pt3dadd( 447.226, 304.295, 30.6989, 0.3304 ) }
    dend_61 { pt3dadd( 446.846, 303.443, 29.7671, 0.4322 ) }
    dend_61 { pt3dadd( 446.625, 302.466, 30.3204, 0.5338 ) }
    dend_61 { pt3dadd( 446.251, 301.534, 29.9085, 0.5338 ) }
    dend_61 { pt3dadd( 446.016, 300.643, 29.1444, 0.5084 ) }
    dend_61 { pt3dadd( 445.205, 300.64, 30.4987, 0.4322 ) }
    dend_61 { pt3dadd( 445.133, 300.132, 29.68, 0.4322 ) }
    dend_61 { pt3dadd( 444.892, 299.557, 28.2346, 0.4068 ) }
    dend_61 { pt3dadd( 444.326, 298.86, 27.4137, 0.3814 ) }
    dend_61 { pt3dadd( 443.776, 298.091, 26.88, 0.305 ) }
    dend_61 { pt3dadd( 443.214, 297.336, 27.7421, 0.2796 ) }
    dend_61 { pt3dadd( 442.957, 296.868, 27.3428, 0.305 ) }
    dend_61 { pt3dadd( 442.544, 296.234, 26.812, 0.356 ) }
    dend_61 { pt3dadd( 442.125, 295.298, 26.1789, 0.3814 ) }
    dend_61 { pt3dadd( 441.646, 294.541, 26.4362, 0.3814 ) }
    dend_61 { pt3dadd( 441.018, 293.887, 26.1948, 0.4068 ) }
    dend_61 { pt3dadd( 440.638, 292.94, 26.5804, 0.4322 ) }
    dend_61 { pt3dadd( 440.056, 291.992, 26.098, 0.4576 ) }
    dend_61 { pt3dadd( 439.744, 291.119, 27.5562, 0.4576 ) }
    dend_61 { pt3dadd( 439.41, 290.29, 26.5289, 0.4576 ) }
    dend_61 { pt3dadd( 438.838, 289.832, 25.795, 0.4576 ) }
    dend_61 { pt3dadd( 438.635, 289.232, 25.5066, 0.4576 ) }
    dend_61 { pt3dadd( 438.089, 288.307, 25.3215, 0.4322 ) }
    dend_61 { pt3dadd( 437.829, 287.606, 26.2478, 0.3814 ) }
    dend_61 { pt3dadd( 437.356, 286.805, 26.32, 0.3304 ) }
    dend_61 { pt3dadd( 436.872, 285.909, 27.0897, 0.3304 ) }
    dend_61 { pt3dadd( 436.145, 285.073, 26.887, 0.3814 ) }
    dend_61 { pt3dadd( 435.957, 284.271, 27.1496, 0.4322 ) }
    dend_61 { pt3dadd( 435.526, 283.648, 26.7072, 0.483 ) }
    dend_61 { pt3dadd( 435.063, 282.865, 26.593, 0.5084 ) }
    dend_61 { pt3dadd( 434.504, 282.243, 27.309, 0.5084 ) }
    dend_61 { pt3dadd( 434.14, 281.419, 27.5954, 0.4322 ) }
    dend_61 { pt3dadd( 433.569, 280.831, 26.9377, 0.3304 ) }
    dend_61 { pt3dadd( 433.004, 280.253, 26.0932, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_61 { pt3dadd( 432.541, 279.404, 26.8923, 0.305 ) }
    dend_61 { pt3dadd( 432.005, 278.501, 27.5461, 0.4068 ) }
    dend_61 { pt3dadd( 431.749, 277.564, 27.2969, 0.483 ) }
    dend_61 { pt3dadd( 431.751, 276.642, 26.2956, 0.5084 ) }
    dend_61 { pt3dadd( 431.365, 275.704, 25.2932, 0.5084 ) }
    dend_61 { pt3dadd( 430.7, 274.775, 25.2, 0.483 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 6/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 457.163, 321.602, 30.3895, 0.483 ) }
    dend_60 { pt3dadd( 458.294, 321.565, 30.4464, 0.5084 ) }
    dend_60 { pt3dadd( 459.337, 321.999, 30.8053, 0.4322 ) }
    dend_60 { pt3dadd( 460.372, 322.472, 30.5586, 0.3814 ) }
    dend_60 { pt3dadd( 460.585, 322.844, 28.798, 0.3304 ) }
    dend_60 { pt3dadd( 460.856, 323.474, 26.5647, 0.356 ) }
    dend_60 { pt3dadd( 461.098, 324.302, 24.7993, 0.4068 ) }
    dend_60 { pt3dadd( 461.356, 325.216, 23.2518, 0.3814 ) }
    dend_60 { pt3dadd( 461.582, 326.103, 21.5793, 0.356 ) }
    dend_60 { pt3dadd( 462.097, 326.952, 21.1554, 0.2796 ) }
    dend_60 { pt3dadd( 463.057, 327.285, 21.7748, 0.305 ) }
    dend_60 { pt3dadd( 464.017, 327.362, 22.9289, 0.356 ) }
    dend_60 { pt3dadd( 464.525, 327.938, 24.8662, 0.483 ) }
    dend_60 { pt3dadd( 464.553, 328.799, 26.5924, 0.5338 ) }
    dend_60 { pt3dadd( 464.957, 329.26, 28.5351, 0.5592 ) }
    dend_60 { pt3dadd( 465.908, 329.598, 29.5218, 0.5338 ) }
    dend_60 { pt3dadd( 466.85, 330.216, 29.5302, 0.5592 ) }
    dend_60 { pt3dadd( 467.649, 330.978, 28.8736, 0.5592 ) }
    dend_60 { pt3dadd( 467.962, 331.082, 28.4144, 0.5084 ) }
    dend_60 { pt3dadd( 468.91, 331.716, 28.2092, 0.3814 ) }
    dend_60 { pt3dadd( 469.857, 332.353, 28.0036, 0.2796 ) }
    dend_60 { pt3dadd( 470.805, 332.987, 27.7984, 0.2288 ) }
    dend_60 { pt3dadd( 471.752, 333.622, 27.5929, 0.2288 ) }
    dend_60 { pt3dadd( 472.653, 334.32, 27.4784, 0.2288 ) }
    dend_60 { pt3dadd( 473.492, 335.097, 27.4784, 0.2288 ) }
    dend_60 { pt3dadd( 474.333, 335.873, 27.4784, 0.2542 ) }
    dend_60 { pt3dadd( 475.173, 336.65, 27.4784, 0.2796 ) }
    dend_60 { pt3dadd( 475.966, 337.472, 27.4784, 0.305 ) }
    dend_60 { pt3dadd( 476.723, 338.33, 27.4784, 0.2796 ) }
    dend_60 { pt3dadd( 477.5, 339.165, 27.4784, 0.2542 ) }
    dend_60 { pt3dadd( 478.447, 339.807, 27.4784, 0.2288 ) }
    dend_60 { pt3dadd( 479.394, 340.449, 27.4784, 0.2288 ) }
    dend_60 { pt3dadd( 480.223, 341.191, 27.2521, 0.2288 ) }
    dend_60 { pt3dadd( 480.828, 342.126, 26.6031, 0.2288 ) }
    dend_60 { pt3dadd( 481.433, 343.059, 25.9543, 0.2288 ) }
    dend_60 { pt3dadd( 482.098, 343.955, 25.48, 0.2288 ) }
    dend_60 { pt3dadd( 482.92, 344.751, 25.48, 0.2288 ) }
    dend_60 { pt3dadd( 483.816, 345.444, 25.3795, 0.2288 ) }
    dend_60 { pt3dadd( 484.809, 346.004, 25.1454, 0.2288 ) }
    dend_60 { pt3dadd( 485.802, 346.563, 24.9113, 0.2288 ) }
    dend_60 { pt3dadd( 486.796, 347.122, 24.6772, 0.2542 ) }
    dend_60 { pt3dadd( 487.772, 347.708, 24.4807, 0.3304 ) }
    dend_60 { pt3dadd( 488.654, 348.436, 24.4807, 0.4068 ) }
    dend_60 { pt3dadd( 489.526, 349.177, 24.4807, 0.4322 ) }
    dend_60 { pt3dadd( 490.282, 350.006, 24.4807, 0.356 ) }
    dend_60 { pt3dadd( 490.752, 351.048, 24.4807, 0.2796 ) }
    dend_60 { pt3dadd( 491.387, 351.958, 24.0551, 0.2288 ) }
    dend_60 { pt3dadd( 492.127, 352.783, 23.3576, 0.2288 ) }
    dend_60 { pt3dadd( 492.866, 353.608, 22.6601, 0.2288 ) }
    dend_60 { pt3dadd( 493.606, 354.433, 21.9626, 0.2288 ) }
    dend_60 { pt3dadd( 494.346, 355.258, 21.2654, 0.2288 ) }
    dend_60 { pt3dadd( 495.262, 355.836, 20.5957, 0.2288 ) }
    dend_60 { pt3dadd( 496.296, 356.246, 19.9447, 0.2288 ) }
    dend_60 { pt3dadd( 497.362, 356.537, 19.4846, 0.2542 ) }
    dend_60 { pt3dadd( 498.506, 356.541, 19.4846, 0.2796 ) }
    dend_60 { pt3dadd( 499.593, 356.772, 19.1769, 0.305 ) }
    dend_60 { pt3dadd( 500.632, 357.192, 18.6133, 0.2796 ) }
    dend_60 { pt3dadd( 501.67, 357.612, 18.0499, 0.2542 ) }
    dend_60 { pt3dadd( 502.709, 358.032, 17.4863, 0.2288 ) }
    // Section: dend_58, id: dend_58, parent: dend_48 (entry count 65/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 424.424, 333.363, 30.7994, 0.5592 ) }
    dend_58 { pt3dadd( 423.972, 333.833, 31.673, 0.5084 ) }
    dend_58 { pt3dadd( 423.545, 334.876, 31.4983, 0.5084 ) }
    dend_58 { pt3dadd( 423.116, 335.91, 31.6568, 0.5338 ) }
    dend_58 { pt3dadd( 422.765, 336.983, 32.0491, 0.5084 ) }
    dend_58 { pt3dadd( 422.526, 338.074, 32.6077, 0.5084 ) }
    dend_58 { pt3dadd( 422.261, 339.166, 32.6306, 0.5338 ) }
    dend_58 { pt3dadd( 422.133, 340.26, 31.9724, 0.5592 ) }
    dend_58 { pt3dadd( 422.042, 341.273, 30.7376, 0.5084 ) }
    dend_58 { pt3dadd( 421.561, 342.016, 29.0982, 0.3814 ) }
    dend_58 { pt3dadd( 421.331, 343.042, 28.8663, 0.305 ) }
    dend_58 { pt3dadd( 421.798, 343.814, 30.245, 0.3304 ) }
    dend_58 { pt3dadd( 422.49, 344.1, 32.3243, 0.4576 ) }
    dend_58 { pt3dadd( 422.708, 345.124, 32.986, 0.5338 ) }
    dend_58 { pt3dadd( 423.119, 346.187, 32.9571, 0.5592 ) }
    dend_58 { pt3dadd( 423.424, 347.284, 32.704, 0.5338 ) }
    dend_58 { pt3dadd( 423.206, 348.389, 33.0484, 0.5592 ) }
    dend_58 { pt3dadd( 422.849, 349.474, 33.2298, 0.5848 ) }
    dend_58 { pt3dadd( 422.422, 350.484, 34.0194, 0.6102 ) }
    dend_58 { pt3dadd( 422.19, 351.599, 33.8044, 0.6102 ) }
    dend_58 { pt3dadd( 422.594, 352.047, 31.6635, 0.5338 ) }
    dend_58 { pt3dadd( 422.594, 353.182, 31.894, 0.483 ) }
    dend_58 { pt3dadd( 422.486, 354.149, 32.3638, 0.4322 ) }
    dend_58 { pt3dadd( 421.907, 354.294, 33.9234, 0.3814 ) }
    dend_58 { pt3dadd( 421.793, 355.099, 35.3542, 0.356 ) }
    dend_58 { pt3dadd( 422.049, 356.003, 34.4058, 0.3814 ) }
    dend_58 { pt3dadd( 422.335, 357.077, 33.88, 0.4576 ) }
    dend_58 { pt3dadd( 422.166, 358.116, 34.3526, 0.483 ) }
    dend_58 { pt3dadd( 421.961, 359.161, 34.72, 0.4576 ) }
    dend_58 { pt3dadd( 421.823, 360.029, 35.6709, 0.4322 ) }
    dend_58 { pt3dadd( 421.794, 361.112, 35.9136, 0.4068 ) }
    dend_58 { pt3dadd( 421.907, 361.884, 34.1911, 0.4322 ) }
    dend_58 { pt3dadd( 421.309, 362.513, 34.9359, 0.3814 ) }
    dend_58 { pt3dadd( 421.335, 363.551, 35.3189, 0.3814 ) }
    dend_58 { pt3dadd( 421.557, 364.449, 36.3258, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_58 { pt3dadd( 421.221, 364.946, 34.5262, 0.4068 ) }
    dend_58 { pt3dadd( 420.994, 365.727, 34.4271, 0.4068 ) }
    dend_58 { pt3dadd( 420.992, 366.652, 35.28, 0.4068 ) }
    dend_58 { pt3dadd( 420.878, 368.03, 35.0, 0.3304 ) }
    dend_58 { pt3dadd( 420.958, 369.17, 35.0, 0.2796 ) }
    dend_58 { pt3dadd( 420.992, 370.313, 35.0, 0.2542 ) }
    dend_58 { pt3dadd( 420.992, 371.457, 35.0, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 372.601, 35.0, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 373.741, 34.8239, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 374.884, 34.72, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 376.028, 34.72, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 377.163, 35.0, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 378.307, 35.0, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 379.45, 35.0263, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 380.591, 35.2458, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 381.733, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 382.877, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 384.021, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 385.165, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 386.309, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 387.453, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 420.992, 388.597, 35.28, 0.2542 ) }
    dend_58 { pt3dadd( 420.992, 389.741, 35.28, 0.2796 ) }
    dend_58 { pt3dadd( 420.992, 390.885, 35.28, 0.305 ) }
    dend_58 { pt3dadd( 421.008, 392.028, 35.28, 0.2796 ) }
    dend_58 { pt3dadd( 421.164, 393.161, 35.28, 0.2542 ) }
    dend_58 { pt3dadd( 421.422, 394.273, 35.28, 0.2542 ) }
    dend_58 { pt3dadd( 421.715, 395.379, 35.28, 0.2796 ) }
    dend_58 { pt3dadd( 422.058, 396.469, 35.28, 0.305 ) }
    dend_58 { pt3dadd( 422.136, 397.609, 35.28, 0.2796 ) }
    dend_58 { pt3dadd( 422.261, 398.742, 35.28, 0.2542 ) }
    dend_58 { pt3dadd( 422.554, 399.842, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 422.979, 400.891, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 423.394, 401.927, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 423.723, 402.983, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 423.949, 404.104, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 424.424, 405.118, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 424.661, 406.228, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 425.035, 407.267, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 425.41, 408.252, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 425.682, 409.323, 35.28, 0.2288 ) }
    dend_58 { pt3dadd( 425.74, 410.106, 35.4721, 0.2288 ) }
    dend_58 { pt3dadd( 426.161, 411.17, 35.4721, 0.2288 ) }
    dend_58 { pt3dadd( 426.631, 412.213, 35.4721, 0.2288 ) }
    dend_58 { pt3dadd( 427.1, 413.256, 35.4721, 0.2288 ) }
    dend_58 { pt3dadd( 427.569, 414.3, 35.4721, 0.2288 ) }
    dend_58 { pt3dadd( 427.977, 415.359, 35.1848, 0.2288 ) }
    dend_58 { pt3dadd( 428.374, 416.423, 34.837, 0.2288 ) }
    dend_58 { pt3dadd( 428.77, 417.487, 34.4893, 0.2796 ) }
    dend_58 { pt3dadd( 429.166, 418.551, 34.1415, 0.3304 ) }
    dend_58 { pt3dadd( 429.563, 419.615, 33.7938, 0.3814 ) }
    dend_58 { pt3dadd( 429.961, 420.678, 33.4737, 0.3304 ) }
    dend_58 { pt3dadd( 430.381, 421.742, 33.4737, 0.2796 ) }
    dend_58 { pt3dadd( 430.598, 422.83, 33.4737, 0.2288 ) }
    dend_58 { pt3dadd( 430.436, 423.963, 33.4737, 0.2288 ) }
    dend_58 { pt3dadd( 430.23, 425.086, 33.4737, 0.2288 ) }
    dend_58 { pt3dadd( 429.945, 426.194, 33.4737, 0.2288 ) }
    dend_58 { pt3dadd( 429.686, 427.308, 33.4737, 0.2288 ) }
    dend_58 { pt3dadd( 429.479, 428.433, 33.4737, 0.2542 ) }
    dend_58 { pt3dadd( 429.272, 429.558, 33.4737, 0.2796 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 60/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 424.424, 333.363, 30.7994, 0.5592 ) }
    dend_49 { pt3dadd( 423.053, 333.378, 30.7938, 0.839 ) }
    dend_49 { pt3dadd( 421.892, 333.482, 30.746, 0.7626 ) }
    // Section: dend_47, id: dend_47, parent: dend_39 (entry count 63/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 436.237, 315.213, 34.2922, 0.5338 ) }
    dend_47 { pt3dadd( 435.92, 315.6, 34.2059, 0.4576 ) }
    dend_47 { pt3dadd( 435.275, 316.179, 34.743, 0.4322 ) }
    dend_47 { pt3dadd( 435.691, 316.54, 36.9113, 0.483 ) }
    dend_47 { pt3dadd( 436.516, 316.594, 38.36, 0.5338 ) }
    dend_47 { pt3dadd( 436.324, 317.629, 37.814, 0.5592 ) }
    dend_47 { pt3dadd( 436.417, 318.464, 38.5154, 0.5848 ) }
    dend_47 { pt3dadd( 436.594, 318.406, 40.3684, 0.5592 ) }
    dend_47 { pt3dadd( 437.556, 318.604, 41.2698, 0.5592 ) }
    dend_47 { pt3dadd( 438.149, 317.947, 40.5143, 0.5338 ) }
    dend_47 { pt3dadd( 439.067, 317.918, 39.2, 0.5084 ) }
    dend_47 { pt3dadd( 439.413, 317.803, 40.6, 0.483 ) }
    dend_47 { pt3dadd( 439.901, 317.952, 42.3139, 0.4322 ) }
    dend_47 { pt3dadd( 440.646, 318.162, 43.3252, 0.4322 ) }
    dend_47 { pt3dadd( 441.005, 319.06, 42.0585, 0.4322 ) }
    dend_47 { pt3dadd( 441.698, 319.634, 42.28, 0.4576 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 79/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 436.237, 315.213, 34.2922, 0.5338 ) }
    dend_40 { pt3dadd( 435.883, 314.19, 35.0571, 0.5592 ) }
    dend_40 { pt3dadd( 435.849, 313.058, 34.858, 0.5084 ) }
    dend_40 { pt3dadd( 435.707, 311.928, 35.0641, 0.5338 ) }
    dend_40 { pt3dadd( 435.087, 310.972, 35.2797, 0.5592 ) }
    dend_40 { pt3dadd( 434.447, 310.024, 35.2803, 0.6356 ) }
    dend_40 { pt3dadd( 433.439, 308.92, 35.2831, 0.661 ) }
    dend_40 { pt3dadd( 432.742, 308.016, 35.2948, 0.6102 ) }
    dend_40 { pt3dadd( 432.135, 307.048, 35.3646, 0.5592 ) }
    dend_40 { pt3dadd( 432.011, 306.001, 36.0189, 0.5084 ) }
    dend_40 { pt3dadd( 432.12, 304.939, 37.0303, 0.483 ) }
    dend_40 { pt3dadd( 431.877, 303.896, 36.5504, 0.4576 ) }
    dend_40 { pt3dadd( 431.152, 303.113, 35.6857, 0.5084 ) }
    dend_40 { pt3dadd( 430.276, 302.39, 35.5264, 0.5592 ) }
    dend_40 { pt3dadd( 429.913, 301.364, 36.167, 0.6102 ) }
    dend_40 { pt3dadd( 429.638, 299.937, 37.69, 0.6102 ) }
    dend_40 { pt3dadd( 429.833, 298.895, 37.24, 0.5592 ) }
    dend_40 { pt3dadd( 429.698, 298.166, 36.7321, 0.4576 ) }
    // Section: dend_34, id: dend_34, parent: dend_0 (entry count 97/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 440.354, 310.197, 28.3469, 0.6864 ) }
    dend_34 { pt3dadd( 439.171, 309.373, 28.28, 0.5084 ) }
    dend_34 { pt3dadd( 438.146, 308.879, 28.28, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_34 { pt3dadd( 437.337, 308.076, 28.28, 0.483 ) }
    dend_34 { pt3dadd( 436.644, 307.17, 28.28, 0.4576 ) }
    dend_34 { pt3dadd( 436.052, 306.203, 28.28, 0.4068 ) }
    dend_34 { pt3dadd( 435.524, 305.195, 28.28, 0.305 ) }
    dend_34 { pt3dadd( 434.816, 304.33, 28.28, 0.2796 ) }
    dend_34 { pt3dadd( 434.147, 303.423, 28.28, 0.3304 ) }
    dend_34 { pt3dadd( 433.585, 302.439, 28.28, 0.4322 ) }
    dend_34 { pt3dadd( 432.908, 301.524, 28.28, 0.5084 ) }
    dend_34 { pt3dadd( 432.239, 300.607, 28.28, 0.483 ) }
    dend_34 { pt3dadd( 431.382, 299.849, 28.28, 0.4068 ) }
    dend_34 { pt3dadd( 430.462, 299.172, 28.28, 0.305 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 11/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 440.354, 310.197, 28.3469, 0.6864 ) }
    dend_1 { pt3dadd( 440.137, 309.136, 27.6704, 0.4322 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 421.892, 333.482, 30.746, 0.7626 ) }
    dend_55 { pt3dadd( 422.249, 333.761, 31.3023, 0.5338 ) }
    dend_55 { pt3dadd( 421.51, 333.378, 32.6421, 0.5338 ) }
    dend_55 { pt3dadd( 421.577, 332.417, 34.1468, 0.5084 ) }
    dend_55 { pt3dadd( 421.511, 331.442, 35.5544, 0.4068 ) }
    dend_55 { pt3dadd( 420.649, 331.211, 37.0409, 0.3814 ) }
    dend_55 { pt3dadd( 419.545, 331.036, 37.4979, 0.3814 ) }
    dend_55 { pt3dadd( 418.848, 330.142, 37.4573, 0.5084 ) }
    dend_55 { pt3dadd( 418.043, 329.343, 37.1417, 0.661 ) }
    dend_55 { pt3dadd( 417.028, 328.824, 37.1958, 0.8136 ) }
    dend_55 { pt3dadd( 415.907, 328.717, 37.6527, 0.8136 ) }
    dend_55 { pt3dadd( 414.827, 328.496, 38.4014, 0.6864 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 25/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 421.892, 333.482, 30.746, 0.7626 ) }
    dend_50 { pt3dadd( 420.795, 333.275, 30.4662, 0.483 ) }
    dend_50 { pt3dadd( 419.997, 332.505, 29.7732, 0.5084 ) }
    dend_50 { pt3dadd( 418.933, 332.093, 29.9205, 0.6102 ) }
    dend_50 { pt3dadd( 418.324, 331.825, 30.3416, 0.6102 ) }
    dend_50 { pt3dadd( 417.248, 331.519, 30.1185, 0.6102 ) }
    dend_50 { pt3dadd( 416.156, 331.232, 29.6629, 0.5592 ) }
    dend_50 { pt3dadd( 415.048, 331.083, 29.0987, 0.5592 ) }
    dend_50 { pt3dadd( 413.923, 331.009, 28.6283, 0.6356 ) }
    dend_50 { pt3dadd( 412.815, 330.751, 28.5132, 0.7118 ) }
    dend_50 { pt3dadd( 411.684, 330.676, 28.2316, 0.7118 ) }
    dend_50 { pt3dadd( 410.593, 330.854, 27.5722, 0.661 ) }
    dend_50 { pt3dadd( 409.478, 330.697, 27.3171, 0.5848 ) }
    dend_50 { pt3dadd( 408.35, 330.623, 27.1323, 0.5848 ) }
    dend_50 { pt3dadd( 407.222, 330.606, 26.7719, 0.5848 ) }
    dend_50 { pt3dadd( 406.12, 330.555, 26.0302, 0.5848 ) }
    dend_50 { pt3dadd( 404.928, 330.229, 26.2077, 0.4576 ) }
    dend_50 { pt3dadd( 403.832, 330.018, 25.6012, 0.4576 ) }
    dend_50 { pt3dadd( 402.971, 329.638, 25.2185, 0.5084 ) }
    dend_50 { pt3dadd( 401.936, 329.148, 25.2073, 0.5848 ) }
    dend_50 { pt3dadd( 400.848, 328.795, 25.2459, 0.5592 ) }
    dend_50 { pt3dadd( 399.714, 328.688, 25.4716, 0.5592 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 47/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 429.698, 298.166, 36.7321, 0.4576 ) }
    dend_46 { pt3dadd( 429.77, 298.332, 35.28, 0.4322 ) }
    dend_46 { pt3dadd( 428.8, 298.279, 36.0847, 0.3814 ) }
    dend_46 { pt3dadd( 428.28, 298.404, 34.2182, 0.3304 ) }
    dend_46 { pt3dadd( 427.587, 297.823, 35.4099, 0.3304 ) }
    dend_46 { pt3dadd( 426.903, 297.696, 36.0872, 0.356 ) }
    dend_46 { pt3dadd( 426.034, 297.326, 35.1294, 0.3814 ) }
    dend_46 { pt3dadd( 425.369, 296.875, 33.6274, 0.3814 ) }
    dend_46 { pt3dadd( 424.701, 296.094, 34.4747, 0.3814 ) }
    dend_46 { pt3dadd( 424.006, 295.327, 35.2145, 0.3814 ) }
    dend_46 { pt3dadd( 423.492, 294.556, 36.143, 0.3814 ) }
    dend_46 { pt3dadd( 423.234, 293.56, 36.668, 0.4322 ) }
    dend_46 { pt3dadd( 422.941, 292.567, 37.3285, 0.5084 ) }
    dend_46 { pt3dadd( 422.981, 291.625, 37.9728, 0.6102 ) }
    dend_46 { pt3dadd( 422.303, 290.984, 37.1039, 0.661 ) }
    dend_46 { pt3dadd( 421.586, 290.279, 37.5931, 0.6864 ) }
    dend_46 { pt3dadd( 420.789, 289.718, 37.9599, 0.6864 ) }
    dend_46 { pt3dadd( 420.274, 288.953, 37.2761, 0.661 ) }
    dend_46 { pt3dadd( 419.779, 288.14, 37.0782, 0.6356 ) }
    dend_46 { pt3dadd( 419.238, 287.325, 38.0456, 0.6102 ) }
    dend_46 { pt3dadd( 419.04, 286.305, 37.9218, 0.5848 ) }
    dend_46 { pt3dadd( 419.004, 285.222, 37.9686, 0.5338 ) }
    dend_46 { pt3dadd( 418.569, 284.337, 38.0822, 0.4322 ) }
    dend_46 { pt3dadd( 418.01, 283.641, 38.6879, 0.4068 ) }
    dend_46 { pt3dadd( 417.506, 282.838, 39.6486, 0.4322 ) }
    dend_46 { pt3dadd( 416.798, 282.161, 39.261, 0.5338 ) }
    dend_46 { pt3dadd( 416.551, 281.265, 39.657, 0.5592 ) }
    dend_46 { pt3dadd( 415.995, 280.32, 39.401, 0.5338 ) }
    dend_46 { pt3dadd( 415.468, 279.661, 41.1354, 0.483 ) }
    dend_46 { pt3dadd( 414.931, 278.707, 41.4142, 0.4576 ) }
    dend_46 { pt3dadd( 414.444, 278.09, 40.0627, 0.4576 ) }
    dend_46 { pt3dadd( 413.685, 277.836, 41.375, 0.4576 ) }
    dend_46 { pt3dadd( 412.879, 277.322, 41.4602, 0.483 ) }
    dend_46 { pt3dadd( 412.055, 277.077, 41.1914, 0.5084 ) }
    dend_46 { pt3dadd( 411.271, 276.507, 42.0, 0.5338 ) }
    dend_46 { pt3dadd( 410.296, 276.419, 42.254, 0.5084 ) }
    dend_46 { pt3dadd( 409.363, 276.627, 42.3452, 0.483 ) }
    dend_46 { pt3dadd( 408.767, 276.586, 43.4, 0.4322 ) }
    dend_46 { pt3dadd( 408.127, 276.583, 44.8563, 0.3814 ) }
    dend_46 { pt3dadd( 407.407, 276.76, 46.1832, 0.356 ) }
    dend_46 { pt3dadd( 406.825, 276.644, 44.394, 0.356 ) }
    dend_46 { pt3dadd( 406.04, 276.888, 44.6639, 0.4068 ) }
    dend_46 { pt3dadd( 404.994, 276.689, 44.8269, 0.4068 ) }
    dend_46 { pt3dadd( 404.595, 276.166, 46.0995, 0.4068 ) }
    dend_46 { pt3dadd( 403.655, 275.94, 46.9468, 0.356 ) }
    dend_46 { pt3dadd( 403.146, 276.162, 47.6, 0.3304 ) }
    dend_46 { pt3dadd( 402.924, 275.884, 48.4179, 0.305 ) }
    dend_46 { pt3dadd( 402.23, 275.839, 47.3486, 0.3304 ) }
    dend_46 { pt3dadd( 402.039, 276.483, 48.9227, 0.356 ) }
    dend_46 { pt3dadd( 401.283, 276.58, 49.4155, 0.4068 ) }
    dend_46 { pt3dadd( 400.251, 276.279, 50.2152, 0.4322 ) }
    dend_46 { pt3dadd( 399.235, 275.912, 50.3524, 0.4322 ) }
    dend_46 { pt3dadd( 398.357, 275.253, 49.8711, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( 397.496, 274.953, 50.6341, 0.3814 ) }
    dend_46 { pt3dadd( 396.624, 274.459, 51.0485, 0.3814 ) }
    dend_46 { pt3dadd( 395.863, 273.668, 51.4318, 0.356 ) }
    dend_46 { pt3dadd( 394.806, 273.444, 51.8773, 0.305 ) }
    dend_46 { pt3dadd( 393.674, 273.405, 51.9061, 0.2542 ) }
    dend_46 { pt3dadd( 392.663, 273.194, 52.8066, 0.2288 ) }
    dend_46 { pt3dadd( 391.69, 273.2, 53.76, 0.2288 ) }
    dend_46 { pt3dadd( 390.677, 272.844, 54.04, 0.2288 ) }
    dend_46 { pt3dadd( 389.62, 272.501, 54.6703, 0.2288 ) }
    dend_46 { pt3dadd( 388.492, 272.386, 54.88, 0.2542 ) }
    dend_46 { pt3dadd( 387.497, 271.955, 54.9993, 0.2796 ) }
    dend_46 { pt3dadd( 386.521, 271.396, 55.16, 0.3304 ) }
    dend_46 { pt3dadd( 385.447, 271.054, 55.44, 0.356 ) }
    dend_46 { pt3dadd( 384.452, 270.599, 56.0087, 0.3814 ) }
    dend_46 { pt3dadd( 383.595, 269.93, 56.7484, 0.356 ) }
    dend_46 { pt3dadd( 383.303, 268.984, 57.7226, 0.356 ) }
    dend_46 { pt3dadd( 382.988, 268.136, 57.423, 0.3814 ) }
    dend_46 { pt3dadd( 382.246, 267.721, 58.52, 0.4322 ) }
    dend_46 { pt3dadd( 382.332, 266.998, 60.3414, 0.4322 ) }
    dend_46 { pt3dadd( 382.069, 266.196, 61.2399, 0.3814 ) }
    dend_46 { pt3dadd( 381.397, 265.335, 61.04, 0.3304 ) }
    dend_46 { pt3dadd( 380.637, 264.962, 62.2924, 0.2796 ) }
    dend_46 { pt3dadd( 380.041, 264.378, 63.6398, 0.2542 ) }
    dend_46 { pt3dadd( 379.22, 264.261, 65.2089, 0.2288 ) }
    dend_46 { pt3dadd( 378.487, 263.608, 64.3387, 0.2288 ) }
    dend_46 { pt3dadd( 377.546, 263.126, 64.925, 0.2542 ) }
    dend_46 { pt3dadd( 376.615, 262.725, 64.6036, 0.2796 ) }
    dend_46 { pt3dadd( 375.552, 262.414, 65.2557, 0.305 ) }
    dend_46 { pt3dadd( 374.621, 261.8, 65.7636, 0.2796 ) }
    dend_46 { pt3dadd( 373.879, 261.189, 67.1376, 0.2542 ) }
    dend_46 { pt3dadd( 373.173, 260.718, 67.48, 0.2288 ) }
    dend_46 { pt3dadd( 372.615, 259.696, 68.6924, 0.2542 ) }
    dend_46 { pt3dadd( 372.031, 258.827, 68.88, 0.2796 ) }
    dend_46 { pt3dadd( 371.789, 257.905, 69.3283, 0.3304 ) }
    dend_46 { pt3dadd( 371.59, 256.904, 70.1999, 0.3304 ) }
    dend_46 { pt3dadd( 371.432, 256.574, 69.0214, 0.356 ) }
    dend_46 { pt3dadd( 370.937, 255.985, 68.6711, 0.3814 ) }
    dend_46 { pt3dadd( 370.235, 255.357, 68.6, 0.3814 ) }
    dend_46 { pt3dadd( 369.273, 254.746, 68.4594, 0.4322 ) }
    dend_46 { pt3dadd( 368.304, 254.18, 68.0579, 0.4322 ) }
    dend_46 { pt3dadd( 367.469, 253.52, 68.6, 0.4576 ) }
    dend_46 { pt3dadd( 366.53, 253.061, 68.6, 0.4322 ) }
    dend_46 { pt3dadd( 365.637, 252.485, 68.2592, 0.3814 ) }
    dend_46 { pt3dadd( 364.794, 252.326, 68.8178, 0.3304 ) }
    dend_46 { pt3dadd( 363.974, 251.589, 69.358, 0.305 ) }
    dend_46 { pt3dadd( 363.102, 250.878, 69.7418, 0.2796 ) }
    dend_46 { pt3dadd( 362.474, 250.3, 68.88, 0.2542 ) }
    dend_46 { pt3dadd( 361.531, 249.918, 69.8572, 0.2542 ) }
    dend_46 { pt3dadd( 360.599, 249.506, 70.0795, 0.2796 ) }
    dend_46 { pt3dadd( 359.504, 249.473, 70.8159, 0.3304 ) }
    dend_46 { pt3dadd( 358.594, 248.872, 70.56, 0.356 ) }
    dend_46 { pt3dadd( 357.556, 248.594, 70.1954, 0.3814 ) }
    dend_46 { pt3dadd( 356.563, 248.477, 71.1054, 0.356 ) }
    dend_46 { pt3dadd( 355.605, 248.373, 70.2999, 0.3304 ) }
    dend_46 { pt3dadd( 354.744, 248.209, 70.1996, 0.305 ) }
    dend_46 { pt3dadd( 353.934, 247.917, 70.56, 0.3304 ) }
    dend_46 { pt3dadd( 352.946, 247.905, 71.5137, 0.356 ) }
    dend_46 { pt3dadd( 351.949, 248.204, 71.4773, 0.3814 ) }
    dend_46 { pt3dadd( 350.972, 247.855, 71.7111, 0.356 ) }
    dend_46 { pt3dadd( 349.888, 247.539, 71.7948, 0.305 ) }
    dend_46 { pt3dadd( 348.941, 247.148, 72.5152, 0.2542 ) }
    dend_46 { pt3dadd( 347.831, 247.016, 72.585, 0.2288 ) }
    dend_46 { pt3dadd( 346.756, 246.74, 72.9618, 0.2542 ) }
    dend_46 { pt3dadd( 345.831, 246.646, 73.36, 0.2796 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 64/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 429.698, 298.166, 36.7321, 0.4576 ) }
    dend_41 { pt3dadd( 429.598, 297.401, 36.1032, 0.5338 ) }
    dend_41 { pt3dadd( 430.264, 296.701, 35.7552, 0.5084 ) }
    dend_41 { pt3dadd( 430.408, 295.739, 37.1246, 0.5084 ) }
    dend_41 { pt3dadd( 430.141, 294.932, 36.8684, 0.4576 ) }
    dend_41 { pt3dadd( 430.095, 294.242, 35.28, 0.4576 ) }
    dend_41 { pt3dadd( 429.928, 293.252, 36.006, 0.4576 ) }
    dend_41 { pt3dadd( 429.907, 292.498, 35.6546, 0.4576 ) }
    dend_41 { pt3dadd( 429.733, 291.49, 35.5799, 0.483 ) }
    dend_41 { pt3dadd( 429.971, 290.503, 34.9241, 0.5338 ) }
    dend_41 { pt3dadd( 429.857, 289.678, 36.321, 0.5848 ) }
    dend_41 { pt3dadd( 429.915, 288.958, 34.9622, 0.5848 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 76/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 430.462, 299.172, 28.28, 0.305 ) }
    dend_38 { pt3dadd( 429.575, 298.451, 28.28, 0.356 ) }
    dend_38 { pt3dadd( 428.655, 297.784, 28.28, 0.2542 ) }
    dend_38 { pt3dadd( 427.807, 297.02, 28.28, 0.2542 ) }
    dend_38 { pt3dadd( 427.067, 296.172, 28.28, 0.2796 ) }
    dend_38 { pt3dadd( 426.457, 295.211, 28.28, 0.356 ) }
    dend_38 { pt3dadd( 425.797, 294.351, 28.28, 0.3814 ) }
    dend_38 { pt3dadd( 425.146, 293.612, 28.4777, 0.4068 ) }
    dend_38 { pt3dadd( 424.341, 292.799, 28.4777, 0.3304 ) }
    dend_38 { pt3dadd( 423.532, 291.99, 28.4777, 0.2796 ) }
    dend_38 { pt3dadd( 423.102, 290.961, 28.4777, 0.2288 ) }
    dend_38 { pt3dadd( 422.801, 289.858, 28.4777, 0.2542 ) }
    dend_38 { pt3dadd( 422.391, 288.809, 28.4777, 0.305 ) }
    dend_38 { pt3dadd( 421.693, 287.901, 28.4777, 0.356 ) }
    dend_38 { pt3dadd( 420.997, 286.994, 28.4777, 0.356 ) }
    dend_38 { pt3dadd( 420.303, 286.087, 28.6328, 0.305 ) }
    dend_38 { pt3dadd( 419.611, 285.179, 28.8047, 0.2542 ) }
    dend_38 { pt3dadd( 418.919, 284.27, 28.9766, 0.2288 ) }
    dend_38 { pt3dadd( 418.227, 283.362, 29.1486, 0.2288 ) }
    dend_38 { pt3dadd( 417.535, 282.454, 29.3202, 0.2288 ) }
    dend_38 { pt3dadd( 416.843, 281.545, 29.4921, 0.2288 ) }
    dend_38 { pt3dadd( 416.151, 280.638, 29.664, 0.2288 ) }
    dend_38 { pt3dadd( 415.458, 279.73, 29.836, 0.2288 ) }
    dend_38 { pt3dadd( 414.766, 278.821, 30.0079, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 414.074, 277.913, 30.1798, 0.305 ) }
    dend_38 { pt3dadd( 413.382, 277.005, 30.3514, 0.3814 ) }
    dend_38 { pt3dadd( 412.701, 276.087, 30.476, 0.4322 ) }
    dend_38 { pt3dadd( 412.052, 275.146, 30.476, 0.4322 ) }
    dend_38 { pt3dadd( 411.403, 274.204, 30.476, 0.3814 ) }
    dend_38 { pt3dadd( 410.879, 273.191, 30.476, 0.3304 ) }
    dend_38 { pt3dadd( 410.403, 272.151, 30.476, 0.3304 ) }
    dend_38 { pt3dadd( 409.927, 271.11, 30.476, 0.356 ) }
    dend_38 { pt3dadd( 409.451, 270.071, 30.4951, 0.356 ) }
    dend_38 { pt3dadd( 408.959, 269.053, 30.9352, 0.305 ) }
    dend_38 { pt3dadd( 408.469, 268.036, 31.3751, 0.2542 ) }
    dend_38 { pt3dadd( 407.977, 267.019, 31.815, 0.2288 ) }
    dend_38 { pt3dadd( 407.485, 266.002, 32.2552, 0.2288 ) }
    dend_38 { pt3dadd( 406.993, 264.985, 32.695, 0.2288 ) }
    dend_38 { pt3dadd( 406.46, 263.986, 33.0604, 0.2288 ) }
    dend_38 { pt3dadd( 405.857, 263.019, 33.2959, 0.2288 ) }
    dend_38 { pt3dadd( 405.253, 262.053, 33.5317, 0.2288 ) }
    dend_38 { pt3dadd( 404.649, 261.085, 33.7672, 0.2288 ) }
    dend_38 { pt3dadd( 404.045, 260.118, 34.0029, 0.2542 ) }
    dend_38 { pt3dadd( 403.441, 259.151, 34.2384, 0.305 ) }
    dend_38 { pt3dadd( 402.837, 258.185, 34.473, 0.356 ) }
    dend_38 { pt3dadd( 402.132, 257.283, 34.473, 0.3814 ) }
    dend_38 { pt3dadd( 401.427, 256.383, 34.473, 0.356 ) }
    dend_38 { pt3dadd( 400.903, 255.374, 34.704, 0.3304 ) }
    dend_38 { pt3dadd( 400.408, 254.349, 34.9723, 0.2796 ) }
    dend_38 { pt3dadd( 399.914, 253.323, 35.2402, 0.2542 ) }
    dend_38 { pt3dadd( 399.42, 252.298, 35.5085, 0.2288 ) }
    dend_38 { pt3dadd( 398.924, 251.272, 35.7764, 0.2542 ) }
    dend_38 { pt3dadd( 398.43, 250.247, 36.0447, 0.2796 ) }
    dend_38 { pt3dadd( 397.935, 249.22, 36.3129, 0.3304 ) }
    dend_38 { pt3dadd( 397.397, 248.216, 36.4714, 0.356 ) }
    dend_38 { pt3dadd( 396.795, 247.242, 36.4714, 0.4322 ) }
    dend_38 { pt3dadd( 396.195, 246.27, 36.4714, 0.483 ) }
    dend_38 { pt3dadd( 395.742, 245.245, 36.738, 0.5084 ) }
    dend_38 { pt3dadd( 395.462, 244.162, 37.3142, 0.4322 ) }
    dend_38 { pt3dadd( 395.182, 243.077, 37.8902, 0.356 ) }
    dend_38 { pt3dadd( 394.903, 241.993, 38.4664, 0.3304 ) }
    dend_38 { pt3dadd( 394.632, 240.904, 38.9693, 0.4068 ) }
    dend_38 { pt3dadd( 394.42, 239.779, 38.9693, 0.4576 ) }
    dend_38 { pt3dadd( 393.453, 239.238, 38.9693, 0.483 ) }
    dend_38 { pt3dadd( 392.479, 238.67, 38.9693, 0.4322 ) }
    dend_38 { pt3dadd( 391.748, 237.791, 38.96, 0.4068 ) }
    dend_38 { pt3dadd( 391.052, 236.888, 38.7148, 0.356 ) }
    dend_38 { pt3dadd( 390.357, 235.986, 38.4698, 0.356 ) }
    dend_38 { pt3dadd( 389.787, 234.85, 39.2291, 0.4068 ) }
    dend_38 { pt3dadd( 389.281, 233.846, 39.6836, 0.3814 ) }
    dend_38 { pt3dadd( 388.714, 232.857, 39.8174, 0.356 ) }
    dend_38 { pt3dadd( 388.048, 231.941, 40.1044, 0.2796 ) }
    dend_38 { pt3dadd( 387.405, 231.134, 41.1284, 0.2796 ) }
    dend_38 { pt3dadd( 386.861, 230.473, 42.9789, 0.305 ) }
    dend_38 { pt3dadd( 386.254, 229.737, 44.1963, 0.356 ) }
    dend_38 { pt3dadd( 385.652, 228.767, 44.2142, 0.4068 ) }
    dend_38 { pt3dadd( 385.144, 227.744, 44.0952, 0.4068 ) }
    dend_38 { pt3dadd( 384.805, 226.697, 43.3952, 0.4068 ) }
    dend_38 { pt3dadd( 384.43, 225.736, 42.3707, 0.3304 ) }
    dend_38 { pt3dadd( 383.837, 224.778, 42.119, 0.2796 ) }
    dend_38 { pt3dadd( 383.421, 223.747, 42.5345, 0.2288 ) }
    dend_38 { pt3dadd( 382.927, 222.919, 42.3116, 0.2542 ) }
    dend_38 { pt3dadd( 382.109, 222.273, 41.2742, 0.2796 ) }
    dend_38 { pt3dadd( 381.436, 221.389, 41.2149, 0.3304 ) }
    dend_38 { pt3dadd( 380.898, 220.406, 41.7679, 0.3304 ) }
    dend_38 { pt3dadd( 380.492, 219.354, 42.1025, 0.3304 ) }
    dend_38 { pt3dadd( 380.275, 218.266, 42.6348, 0.2796 ) }
    dend_38 { pt3dadd( 380.089, 217.239, 43.6509, 0.305 ) }
    dend_38 { pt3dadd( 379.571, 216.27, 43.7861, 0.3304 ) }
    dend_38 { pt3dadd( 378.948, 215.428, 42.8635, 0.3814 ) }
    dend_38 { pt3dadd( 378.838, 214.375, 42.7557, 0.3304 ) }
    dend_38 { pt3dadd( 379.057, 213.426, 44.1638, 0.3304 ) }
    dend_38 { pt3dadd( 379.284, 212.496, 45.4152, 0.356 ) }
    dend_38 { pt3dadd( 379.352, 211.361, 45.6789, 0.4576 ) }
    dend_38 { pt3dadd( 379.361, 210.233, 46.1272, 0.483 ) }
    dend_38 { pt3dadd( 379.425, 209.107, 46.4579, 0.483 ) }
    dend_38 { pt3dadd( 379.5, 207.969, 46.356, 0.4322 ) }
    dend_38 { pt3dadd( 379.344, 206.866, 45.9508, 0.4068 ) }
    dend_38 { pt3dadd( 378.903, 205.847, 45.8867, 0.4068 ) }
    dend_38 { pt3dadd( 378.445, 204.83, 45.9158, 0.4576 ) }
    dend_38 { pt3dadd( 377.931, 203.832, 45.6243, 0.483 ) }
    dend_38 { pt3dadd( 377.131, 203.069, 45.9794, 0.4576 ) }
    dend_38 { pt3dadd( 376.208, 202.425, 46.4002, 0.4068 ) }
    dend_38 { pt3dadd( 375.369, 201.659, 46.4999, 0.4322 ) }
    dend_38 { pt3dadd( 374.625, 200.791, 46.5805, 0.5084 ) }
    dend_38 { pt3dadd( 373.885, 199.945, 47.0252, 0.5592 ) }
    dend_38 { pt3dadd( 373.197, 199.096, 46.7956, 0.5084 ) }
    dend_38 { pt3dadd( 372.87, 199.186, 44.84, 0.4322 ) }
    dend_38 { pt3dadd( 372.029, 199.514, 44.24, 0.3814 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 85/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 430.462, 299.172, 28.28, 0.305 ) }
    dend_35 { pt3dadd( 429.861, 298.618, 27.5019, 0.3304 ) }
    dend_35 { pt3dadd( 429.62, 298.083, 25.2538, 0.3304 ) }
    dend_35 { pt3dadd( 428.932, 297.69, 23.6986, 0.356 ) }
    dend_35 { pt3dadd( 427.825, 297.605, 23.0768, 0.3814 ) }
    dend_35 { pt3dadd( 426.721, 297.379, 22.7349, 0.356 ) }
    dend_35 { pt3dadd( 425.67, 297.024, 22.1231, 0.4068 ) }
    dend_35 { pt3dadd( 424.596, 296.759, 21.7608, 0.4576 ) }
    // Section: dend_17, id: dend_17, parent: dend_1 (entry count 93/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 440.137, 309.136, 27.6704, 0.4322 ) }
    dend_17 { pt3dadd( 440.005, 308.18, 26.6325, 0.3814 ) }
    dend_17 { pt3dadd( 439.892, 307.069, 26.3175, 0.4322 ) }
    dend_17 { pt3dadd( 439.484, 306.019, 26.3054, 0.483 ) }
    dend_17 { pt3dadd( 438.77, 305.134, 26.2606, 0.5592 ) }
    dend_17 { pt3dadd( 438.001, 304.291, 26.098, 0.5848 ) }
    dend_17 { pt3dadd( 437.345, 303.393, 25.5069, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 436.612, 302.533, 25.1975, 0.6102 ) }
    dend_17 { pt3dadd( 435.812, 301.715, 25.1628, 0.6102 ) }
    dend_17 { pt3dadd( 435.035, 300.878, 25.0485, 0.6102 ) }
    dend_17 { pt3dadd( 434.423, 299.945, 24.4376, 0.6102 ) }
    dend_17 { pt3dadd( 434.034, 298.896, 23.8638, 0.5592 ) }
    dend_17 { pt3dadd( 433.788, 297.841, 22.9634, 0.483 ) }
    dend_17 { pt3dadd( 433.487, 296.812, 21.9929, 0.356 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 7/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 440.137, 309.136, 27.6704, 0.4322 ) }
    dend_2 { pt3dadd( 440.923, 308.005, 28.1162, 0.356 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 9/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 414.827, 328.496, 38.4014, 0.6864 ) }
    dend_57 { pt3dadd( 413.968, 328.793, 39.5072, 0.4068 ) }
    dend_57 { pt3dadd( 413.021, 328.996, 40.32, 0.483 ) }
    dend_57 { pt3dadd( 412.307, 329.471, 39.4094, 0.5338 ) }
    dend_57 { pt3dadd( 411.222, 329.583, 40.0529, 0.4576 ) }
    dend_57 { pt3dadd( 410.509, 330.153, 40.6, 0.3814 ) }
    dend_57 { pt3dadd( 410.385, 330.697, 41.9535, 0.2796 ) }
    dend_57 { pt3dadd( 410.121, 331.444, 43.0945, 0.2542 ) }
    dend_57 { pt3dadd( 409.876, 332.072, 42.2836, 0.2542 ) }
    dend_57 { pt3dadd( 409.79, 332.627, 43.9807, 0.305 ) }
    dend_57 { pt3dadd( 410.576, 332.935, 45.1248, 0.356 ) }
    dend_57 { pt3dadd( 409.6, 333.08, 45.5638, 0.356 ) }
    dend_57 { pt3dadd( 408.576, 333.006, 46.0096, 0.3304 ) }
    dend_57 { pt3dadd( 407.835, 332.636, 47.7896, 0.356 ) }
    dend_57 { pt3dadd( 407.522, 331.821, 47.32, 0.4576 ) }
    dend_57 { pt3dadd( 407.046, 330.926, 47.32, 0.5338 ) }
    dend_57 { pt3dadd( 406.464, 330.273, 47.3595, 0.5338 ) }
    dend_57 { pt3dadd( 405.717, 329.737, 48.0634, 0.4576 ) }
    dend_57 { pt3dadd( 405.213, 329.027, 48.986, 0.4068 ) }
    dend_57 { pt3dadd( 404.918, 328.51, 50.1166, 0.3814 ) }
    dend_57 { pt3dadd( 405.13, 328.377, 52.1587, 0.3814 ) }
    dend_57 { pt3dadd( 404.984, 327.818, 53.7578, 0.3814 ) }
    dend_57 { pt3dadd( 404.379, 327.133, 54.7064, 0.4068 ) }
    dend_57 { pt3dadd( 403.975, 326.499, 53.2081, 0.4322 ) }
    dend_57 { pt3dadd( 404.149, 325.784, 51.8025, 0.483 ) }
    dend_57 { pt3dadd( 403.395, 325.486, 51.2711, 0.4576 ) }
    dend_57 { pt3dadd( 403.015, 324.736, 52.4754, 0.4322 ) }
    dend_57 { pt3dadd( 402.989, 323.788, 53.436, 0.356 ) }
    dend_57 { pt3dadd( 402.423, 323.019, 53.067, 0.3304 ) }
    dend_57 { pt3dadd( 401.718, 322.491, 54.2223, 0.2796 ) }
    dend_57 { pt3dadd( 400.972, 322.15, 55.16, 0.2542 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 40/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 414.827, 328.496, 38.4014, 0.6864 ) }
    dend_56 { pt3dadd( 414.928, 328.283, 39.4024, 0.2542 ) }
    dend_56 { pt3dadd( 414.742, 327.424, 40.8274, 0.305 ) }
    dend_56 { pt3dadd( 415.055, 327.184, 43.2536, 0.3814 ) }
    dend_56 { pt3dadd( 415.881, 327.197, 42.2615, 0.4322 ) }
    dend_56 { pt3dadd( 416.53, 326.567, 41.8916, 0.4576 ) }
    dend_56 { pt3dadd( 416.645, 325.848, 43.9575, 0.4576 ) }
    dend_56 { pt3dadd( 416.835, 325.525, 45.7517, 0.483 ) }
    dend_56 { pt3dadd( 417.613, 325.304, 46.7678, 0.5338 ) }
    dend_56 { pt3dadd( 417.934, 325.454, 49.2022, 0.5848 ) }
    dend_56 { pt3dadd( 419.003, 325.354, 50.0794, 0.5848 ) }
    dend_56 { pt3dadd( 419.727, 325.164, 51.7513, 0.5084 ) }
    dend_56 { pt3dadd( 419.39, 324.246, 51.9268, 0.4322 ) }
    dend_56 { pt3dadd( 419.727, 323.751, 53.3478, 0.4068 ) }
    dend_56 { pt3dadd( 419.721, 323.433, 54.7837, 0.4322 ) }
    dend_56 { pt3dadd( 419.053, 323.368, 56.0689, 0.4322 ) }
    dend_56 { pt3dadd( 418.79, 322.327, 56.0918, 0.3814 ) }
    dend_56 { pt3dadd( 418.488, 321.707, 54.32, 0.3814 ) }
    dend_56 { pt3dadd( 418.226, 321.093, 55.6931, 0.4576 ) }
    dend_56 { pt3dadd( 417.559, 320.539, 56.6661, 0.5592 ) }
    dend_56 { pt3dadd( 416.651, 320.146, 57.4165, 0.6102 ) }
    dend_56 { pt3dadd( 416.301, 319.479, 58.6107, 0.6102 ) }
    dend_56 { pt3dadd( 416.131, 318.398, 58.8126, 0.6102 ) }
    dend_56 { pt3dadd( 416.479, 317.343, 59.3401, 0.5848 ) }
    dend_56 { pt3dadd( 417.022, 316.363, 59.3555, 0.5084 ) }
    dend_56 { pt3dadd( 417.541, 315.368, 59.36, 0.4322 ) }
    dend_56 { pt3dadd( 417.736, 314.714, 60.4038, 0.4068 ) }
    dend_56 { pt3dadd( 417.903, 314.257, 61.88, 0.4576 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 68/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 399.714, 328.688, 25.4716, 0.5592 ) }
    dend_54 { pt3dadd( 398.333, 328.784, 24.9864, 0.4576 ) }
    dend_54 { pt3dadd( 397.191, 328.764, 24.8399, 0.305 ) }
    dend_54 { pt3dadd( 396.103, 328.589, 24.3779, 0.2542 ) }
    dend_54 { pt3dadd( 395.171, 328.227, 23.1952, 0.2796 ) }
    dend_54 { pt3dadd( 394.089, 328.401, 22.9768, 0.356 ) }
    dend_54 { pt3dadd( 393.126, 329.0, 23.0773, 0.3814 ) }
    dend_54 { pt3dadd( 392.049, 329.299, 23.4951, 0.4322 ) }
    dend_54 { pt3dadd( 390.962, 329.244, 24.1301, 0.4068 ) }
    dend_54 { pt3dadd( 389.915, 328.805, 24.2547, 0.4068 ) }
    dend_54 { pt3dadd( 388.918, 328.253, 24.0848, 0.4068 ) }
    dend_54 { pt3dadd( 387.847, 327.854, 24.1091, 0.4322 ) }
    dend_54 { pt3dadd( 386.732, 327.606, 24.2108, 0.483 ) }
    dend_54 { pt3dadd( 385.633, 327.296, 24.3214, 0.483 ) }
    dend_54 { pt3dadd( 384.562, 326.915, 24.0481, 0.4576 ) }
    dend_54 { pt3dadd( 383.556, 326.387, 23.8638, 0.4068 ) }
    dend_54 { pt3dadd( 382.606, 325.806, 23.2364, 0.356 ) }
    dend_54 { pt3dadd( 381.571, 325.362, 22.8813, 0.3814 ) }
    dend_54 { pt3dadd( 380.473, 325.092, 22.6355, 0.3814 ) }
    dend_54 { pt3dadd( 379.467, 324.582, 22.4476, 0.4322 ) }
    dend_54 { pt3dadd( 378.491, 324.027, 22.9062, 0.4322 ) }
    dend_54 { pt3dadd( 377.578, 323.341, 22.9824, 0.4576 ) }
    dend_54 { pt3dadd( 376.742, 322.562, 23.0602, 0.4576 ) }
    dend_54 { pt3dadd( 375.91, 321.831, 23.5418, 0.4068 ) }
    dend_54 { pt3dadd( 375.162, 321.109, 24.4006, 0.4068 ) }
    dend_54 { pt3dadd( 374.539, 320.156, 24.204, 0.4322 ) }
    dend_54 { pt3dadd( 373.921, 319.203, 24.2637, 0.5592 ) }
    dend_54 { pt3dadd( 373.185, 318.348, 24.684, 0.6356 ) }
    dend_54 { pt3dadd( 372.365, 317.595, 25.0368, 0.6356 ) }
    dend_54 { pt3dadd( 371.542, 316.861, 24.659, 0.5848 ) }
    dend_54 { pt3dadd( 370.984, 315.895, 24.2494, 0.5084 ) }
    dend_54 { pt3dadd( 370.339, 315.006, 24.6123, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_54 { pt3dadd( 369.494, 314.272, 25.102, 0.483 ) }
    dend_54 { pt3dadd( 368.731, 313.425, 25.2, 0.5084 ) }
    dend_54 { pt3dadd( 367.928, 312.63, 25.2, 0.5338 ) }
    dend_54 { pt3dadd( 366.993, 311.97, 25.2, 0.5848 ) }
    dend_54 { pt3dadd( 366.152, 311.207, 25.2, 0.6102 ) }
    dend_54 { pt3dadd( 365.399, 310.345, 25.2011, 0.5848 ) }
    dend_54 { pt3dadd( 364.574, 309.557, 25.205, 0.5338 ) }
    dend_54 { pt3dadd( 363.635, 308.912, 25.2263, 0.4576 ) }
    dend_54 { pt3dadd( 362.662, 308.316, 25.338, 0.4068 ) }
    dend_54 { pt3dadd( 361.737, 307.687, 25.8255, 0.3814 ) }
    dend_54 { pt3dadd( 360.887, 306.973, 26.2934, 0.3814 ) }
    dend_54 { pt3dadd( 360.027, 306.229, 26.32, 0.3814 ) }
    dend_54 { pt3dadd( 358.996, 305.783, 26.32, 0.4068 ) }
    dend_54 { pt3dadd( 357.884, 305.516, 26.3194, 0.4068 ) }
    dend_54 { pt3dadd( 356.785, 305.202, 26.3172, 0.4068 ) }
    dend_54 { pt3dadd( 355.708, 304.816, 26.3046, 0.356 ) }
    dend_54 { pt3dadd( 354.697, 304.293, 26.2391, 0.3304 ) }
    dend_54 { pt3dadd( 353.72, 303.726, 25.8734, 0.2796 ) }
    dend_54 { pt3dadd( 352.767, 303.134, 25.3677, 0.305 ) }
    dend_54 { pt3dadd( 351.804, 302.526, 25.1877, 0.356 ) }
    dend_54 { pt3dadd( 350.833, 301.923, 25.079, 0.4322 ) }
    dend_54 { pt3dadd( 350.004, 301.188, 24.5339, 0.4068 ) }
    dend_54 { pt3dadd( 349.328, 300.29, 24.143, 0.356 ) }
    dend_54 { pt3dadd( 348.6, 299.412, 24.0601, 0.305 ) }
    dend_54 { pt3dadd( 347.825, 298.571, 23.9887, 0.305 ) }
    dend_54 { pt3dadd( 347.132, 297.702, 23.4242, 0.2796 ) }
    dend_54 { pt3dadd( 346.205, 297.116, 22.9852, 0.2796 ) }
    dend_54 { pt3dadd( 345.133, 296.788, 22.4854, 0.305 ) }
    dend_54 { pt3dadd( 344.361, 296.019, 22.7007, 0.356 ) }
    dend_54 { pt3dadd( 343.716, 295.08, 22.9172, 0.356 ) }
    dend_54 { pt3dadd( 342.966, 294.22, 22.913, 0.3304 ) }
    dend_54 { pt3dadd( 342.194, 293.376, 22.7679, 0.305 ) }
    dend_54 { pt3dadd( 341.54, 292.473, 22.1984, 0.3304 ) }
    dend_54 { pt3dadd( 340.802, 291.607, 22.0822, 0.356 ) }
    dend_54 { pt3dadd( 340.087, 290.767, 22.7612, 0.4068 ) }
    dend_54 { pt3dadd( 339.336, 289.916, 22.9494, 0.4576 ) }
    dend_54 { pt3dadd( 338.544, 289.09, 22.9622, 0.5338 ) }
    dend_54 { pt3dadd( 337.748, 288.267, 22.9715, 0.5848 ) }
    dend_54 { pt3dadd( 336.77, 287.686, 23.0272, 0.5848 ) }
    dend_54 { pt3dadd( 335.804, 287.107, 23.5024, 0.5084 ) }
    dend_54 { pt3dadd( 334.824, 286.53, 23.347, 0.4322 ) }
    dend_54 { pt3dadd( 333.771, 286.094, 23.5452, 0.356 ) }
    dend_54 { pt3dadd( 332.818, 285.494, 24.0304, 0.3304 ) }
    dend_54 { pt3dadd( 331.882, 284.838, 24.0783, 0.2796 ) }
    dend_54 { pt3dadd( 330.857, 284.331, 24.0769, 0.2796 ) }
    dend_54 { pt3dadd( 329.796, 283.908, 24.0601, 0.2796 ) }
    dend_54 { pt3dadd( 328.707, 283.558, 23.9462, 0.305 ) }
    dend_54 { pt3dadd( 327.642, 283.483, 22.96, 0.2796 ) }
    dend_54 { pt3dadd( 326.82, 282.884, 22.7856, 0.2542 ) }
    dend_54 { pt3dadd( 325.892, 282.22, 22.566, 0.2288 ) }
    dend_54 { pt3dadd( 324.965, 281.557, 22.3465, 0.2288 ) }
    dend_54 { pt3dadd( 324.038, 280.893, 22.127, 0.2288 ) }
    dend_54 { pt3dadd( 323.11, 280.23, 21.9075, 0.2288 ) }
    dend_54 { pt3dadd( 322.182, 279.565, 21.6877, 0.2288 ) }
    dend_54 { pt3dadd( 321.256, 278.901, 21.4682, 0.2542 ) }
    dend_54 { pt3dadd( 320.328, 278.238, 21.2486, 0.2796 ) }
    dend_54 { pt3dadd( 319.4, 277.574, 21.0291, 0.305 ) }
    dend_54 { pt3dadd( 318.408, 277.016, 21.1658, 0.2796 ) }
    dend_54 { pt3dadd( 317.399, 276.485, 21.3959, 0.2542 ) }
    dend_54 { pt3dadd( 316.39, 275.954, 21.6261, 0.2288 ) }
    dend_54 { pt3dadd( 315.381, 275.424, 21.8562, 0.2288 ) }
    dend_54 { pt3dadd( 314.462, 274.768, 21.9828, 0.2288 ) }
    dend_54 { pt3dadd( 313.653, 273.959, 21.9828, 0.2288 ) }
    dend_54 { pt3dadd( 312.759, 273.255, 21.9828, 0.2288 ) }
    dend_54 { pt3dadd( 311.726, 272.776, 21.9828, 0.2288 ) }
    dend_54 { pt3dadd( 310.65, 272.406, 21.873, 0.2288 ) }
    dend_54 { pt3dadd( 309.547, 272.164, 21.434, 0.2288 ) }
    dend_54 { pt3dadd( 308.443, 271.922, 20.9947, 0.2288 ) }
    dend_54 { pt3dadd( 307.312, 272.074, 20.9835, 0.2288 ) }
    dend_54 { pt3dadd( 306.185, 272.27, 20.9835, 0.2288 ) }
    dend_54 { pt3dadd( 305.066, 272.508, 20.9835, 0.2288 ) }
    dend_54 { pt3dadd( 303.958, 272.473, 20.2885, 0.2288 ) }
    dend_54 { pt3dadd( 302.851, 272.439, 19.5919, 0.2288 ) }
    dend_54 { pt3dadd( 301.749, 272.462, 18.9384, 0.2288 ) }
    dend_54 { pt3dadd( 300.691, 272.87, 18.576, 0.2288 ) }
    dend_54 { pt3dadd( 299.633, 273.278, 18.214, 0.2288 ) }
    dend_54 { pt3dadd( 298.574, 273.686, 17.8517, 0.2288 ) }
    dend_54 { pt3dadd( 297.516, 274.093, 17.4896, 0.2288 ) }
    dend_54 { pt3dadd( 296.457, 274.502, 17.1273, 0.2288 ) }
    dend_54 { pt3dadd( 295.346, 274.694, 16.9868, 0.2288 ) }
    dend_54 { pt3dadd( 294.211, 274.601, 16.9868, 0.2288 ) }
    dend_54 { pt3dadd( 293.084, 274.411, 16.9868, 0.2542 ) }
    dend_54 { pt3dadd( 291.966, 274.167, 16.9868, 0.2796 ) }
    dend_54 { pt3dadd( 290.886, 273.807, 17.122, 0.305 ) }
    dend_54 { pt3dadd( 289.829, 273.378, 17.3401, 0.2796 ) }
    dend_54 { pt3dadd( 288.773, 272.949, 17.5582, 0.2542 ) }
    dend_54 { pt3dadd( 287.716, 272.52, 17.7764, 0.2288 ) }
    dend_54 { pt3dadd( 286.659, 272.091, 17.9945, 0.2288 ) }
    dend_54 { pt3dadd( 285.602, 271.662, 18.2126, 0.2288 ) }
    dend_54 { pt3dadd( 284.546, 271.233, 18.4307, 0.2288 ) }
    dend_54 { pt3dadd( 283.489, 270.804, 18.6488, 0.2288 ) }
    dend_54 { pt3dadd( 282.432, 270.375, 18.8672, 0.2288 ) }
    dend_54 { pt3dadd( 281.375, 269.946, 19.0854, 0.2288 ) }
    dend_54 { pt3dadd( 280.319, 269.517, 19.3035, 0.2288 ) }
    dend_54 { pt3dadd( 279.262, 269.088, 19.5216, 0.2288 ) }
    dend_54 { pt3dadd( 278.205, 268.659, 19.7397, 0.2288 ) }
    dend_54 { pt3dadd( 277.148, 268.23, 19.9578, 0.2542 ) }
    dend_54 { pt3dadd( 276.131, 267.747, 20.4327, 0.305 ) }
    dend_54 { pt3dadd( 275.118, 267.258, 20.9429, 0.3814 ) }
    dend_54 { pt3dadd( 274.106, 266.767, 21.4533, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_54 { pt3dadd( 272.977, 266.824, 21.483, 0.4068 ) }
    dend_54 { pt3dadd( 271.846, 266.986, 21.483, 0.356 ) }
    dend_54 { pt3dadd( 270.777, 266.756, 21.6636, 0.356 ) }
    dend_54 { pt3dadd( 269.827, 266.148, 22.141, 0.356 ) }
    dend_54 { pt3dadd( 268.877, 265.541, 22.6181, 0.4322 ) }
    dend_54 { pt3dadd( 267.937, 264.922, 23.1134, 0.5084 ) }
    dend_54 { pt3dadd( 267.027, 264.267, 23.6676, 0.5592 ) }
    dend_54 { pt3dadd( 266.039, 263.743, 23.9812, 0.5084 ) }
    dend_54 { pt3dadd( 264.952, 263.389, 23.9812, 0.3814 ) }
    dend_54 { pt3dadd( 263.843, 263.134, 24.1676, 0.305 ) }
    dend_54 { pt3dadd( 262.723, 262.938, 24.4714, 0.2796 ) }
    dend_54 { pt3dadd( 261.603, 262.744, 24.7752, 0.305 ) }
    dend_54 { pt3dadd( 260.475, 262.626, 24.9805, 0.2796 ) }
    dend_54 { pt3dadd( 259.333, 262.691, 24.9805, 0.2796 ) }
    dend_54 { pt3dadd( 258.205, 262.879, 24.9805, 0.2796 ) }
    dend_54 { pt3dadd( 257.142, 263.286, 24.9805, 0.305 ) }
    dend_54 { pt3dadd( 256.162, 262.837, 24.9805, 0.3304 ) }
    dend_54 { pt3dadd( 255.341, 262.054, 24.9805, 0.356 ) }
    dend_54 { pt3dadd( 254.969, 261.028, 24.9805, 0.4068 ) }
    dend_54 { pt3dadd( 254.79, 259.898, 24.9805, 0.4068 ) }
    dend_54 { pt3dadd( 254.764, 258.799, 24.9805, 0.4322 ) }
    dend_54 { pt3dadd( 255.162, 257.746, 24.9805, 0.4322 ) }
    dend_54 { pt3dadd( 254.896, 256.748, 24.7702, 0.4322 ) }
    dend_54 { pt3dadd( 254.055, 256.011, 24.1732, 0.3814 ) }
    dend_54 { pt3dadd( 253.45, 255.074, 23.9812, 0.3304 ) }
    dend_54 { pt3dadd( 253.069, 253.999, 23.9812, 0.305 ) }
    dend_54 { pt3dadd( 252.744, 252.902, 23.9812, 0.305 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 27/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 399.714, 328.688, 25.4716, 0.5592 ) }
    dend_51 { pt3dadd( 399.27, 328.59, 25.9092, 0.4068 ) }
    dend_51 { pt3dadd( 398.341, 327.945, 26.3326, 0.4322 ) }
    dend_51 { pt3dadd( 397.601, 327.423, 26.3662, 0.3814 ) }
    dend_51 { pt3dadd( 396.571, 326.931, 26.5586, 0.3304 ) }
    dend_51 { pt3dadd( 395.571, 326.448, 27.2359, 0.3304 ) }
    dend_51 { pt3dadd( 394.706, 325.703, 27.0838, 0.356 ) }
    dend_51 { pt3dadd( 393.372, 325.157, 27.5069, 0.4322 ) }
    dend_51 { pt3dadd( 392.383, 324.666, 28.0602, 0.4576 ) }
    dend_51 { pt3dadd( 391.36, 324.219, 28.6429, 0.4322 ) }
    dend_51 { pt3dadd( 390.293, 323.914, 29.2222, 0.3814 ) }
    dend_51 { pt3dadd( 389.248, 323.534, 28.9864, 0.3304 ) }
    dend_51 { pt3dadd( 388.183, 323.17, 29.1096, 0.3304 ) }
    dend_51 { pt3dadd( 387.145, 322.711, 29.0763, 0.3814 ) }
    dend_51 { pt3dadd( 386.148, 322.176, 29.3591, 0.4322 ) }
    dend_51 { pt3dadd( 385.18, 321.578, 29.6492, 0.4576 ) }
    dend_51 { pt3dadd( 384.17, 321.049, 29.7973, 0.483 ) }
    dend_51 { pt3dadd( 383.15, 320.59, 30.3327, 0.483 ) }
    dend_51 { pt3dadd( 382.13, 320.119, 30.8549, 0.483 ) }
    dend_51 { pt3dadd( 381.094, 319.69, 31.407, 0.4322 ) }
    dend_51 { pt3dadd( 380.005, 319.388, 31.2687, 0.4322 ) }
    dend_51 { pt3dadd( 378.904, 319.198, 31.7355, 0.4322 ) }
    dend_51 { pt3dadd( 377.771, 319.118, 31.9561, 0.483 ) }
    dend_51 { pt3dadd( 376.678, 318.821, 32.244, 0.5338 ) }
    dend_51 { pt3dadd( 375.674, 318.343, 32.858, 0.5848 ) }
    dend_51 { pt3dadd( 374.691, 317.771, 33.0467, 0.5848 ) }
    dend_51 { pt3dadd( 373.652, 317.296, 33.1486, 0.5592 ) }
    dend_51 { pt3dadd( 372.62, 316.857, 33.6801, 0.5338 ) }
    dend_51 { pt3dadd( 371.601, 316.371, 34.1093, 0.5084 ) }
    dend_51 { pt3dadd( 370.531, 315.972, 34.1804, 0.483 ) }
    dend_51 { pt3dadd( 369.462, 315.569, 34.2885, 0.4576 ) }
    dend_51 { pt3dadd( 368.615, 314.861, 34.9233, 0.5084 ) }
    dend_51 { pt3dadd( 367.772, 314.105, 35.2932, 0.5592 ) }
    dend_51 { pt3dadd( 366.784, 313.542, 35.5169, 0.6102 ) }
    dend_51 { pt3dadd( 366.004, 312.767, 36.2412, 0.5848 ) }
    dend_51 { pt3dadd( 365.175, 311.987, 36.3958, 0.5592 ) }
    dend_51 { pt3dadd( 364.257, 311.305, 36.416, 0.5084 ) }
    dend_51 { pt3dadd( 363.485, 310.463, 36.4711, 0.483 ) }
    dend_51 { pt3dadd( 362.921, 309.479, 36.8007, 0.4322 ) }
    dend_51 { pt3dadd( 362.351, 308.522, 37.4237, 0.4068 ) }
    dend_51 { pt3dadd( 361.848, 307.497, 37.5707, 0.4068 ) }
    dend_51 { pt3dadd( 361.266, 306.535, 38.0724, 0.4068 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 69/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 429.915, 288.958, 34.9622, 0.5848 ) }
    dend_45 { pt3dadd( 429.757, 288.139, 35.2671, 0.305 ) }
    dend_45 { pt3dadd( 430.675, 288.038, 36.0038, 0.305 ) }
    dend_45 { pt3dadd( 431.42, 287.323, 35.8812, 0.3304 ) }
    dend_45 { pt3dadd( 431.739, 286.397, 36.68, 0.3304 ) }
    dend_45 { pt3dadd( 431.746, 285.296, 36.7329, 0.356 ) }
    dend_45 { pt3dadd( 431.849, 284.505, 36.6374, 0.356 ) }
    dend_45 { pt3dadd( 432.297, 283.601, 36.433, 0.4068 ) }
    dend_45 { pt3dadd( 432.318, 282.61, 37.24, 0.4322 ) }
    dend_45 { pt3dadd( 431.974, 281.79, 38.3323, 0.4322 ) }
    dend_45 { pt3dadd( 432.067, 280.906, 37.5452, 0.3814 ) }
    dend_45 { pt3dadd( 431.974, 279.896, 38.1749, 0.3304 ) }
    dend_45 { pt3dadd( 432.135, 279.566, 40.2514, 0.305 ) }
    dend_45 { pt3dadd( 432.47, 278.694, 40.0019, 0.3304 ) }
    dend_45 { pt3dadd( 432.316, 277.834, 38.5496, 0.356 ) }
    dend_45 { pt3dadd( 432.212, 276.749, 39.2092, 0.4068 ) }
    dend_45 { pt3dadd( 432.121, 275.782, 39.8476, 0.4322 ) }
    dend_45 { pt3dadd( 431.517, 275.161, 39.2207, 0.483 ) }
    dend_45 { pt3dadd( 431.434, 274.085, 38.9357, 0.483 ) }
    dend_45 { pt3dadd( 431.322, 273.165, 39.8507, 0.483 ) }
    dend_45 { pt3dadd( 430.954, 272.472, 39.6668, 0.4322 ) }
    dend_45 { pt3dadd( 430.813, 271.38, 39.7578, 0.4322 ) }
    dend_45 { pt3dadd( 430.602, 270.413, 39.9272, 0.4322 ) }
    dend_45 { pt3dadd( 430.318, 269.477, 40.6734, 0.4322 ) }
    dend_45 { pt3dadd( 430.419, 268.396, 40.8626, 0.4068 ) }
    dend_45 { pt3dadd( 430.698, 267.657, 42.1061, 0.4068 ) }
    dend_45 { pt3dadd( 430.936, 266.895, 41.8972, 0.483 ) }
    dend_45 { pt3dadd( 431.076, 266.519, 40.2416, 0.5338 ) }
    dend_45 { pt3dadd( 431.675, 265.835, 41.391, 0.5592 ) }
    dend_45 { pt3dadd( 432.24, 265.011, 42.03, 0.5084 ) }
    dend_45 { pt3dadd( 432.762, 264.679, 42.023, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 433.112, 263.357, 42.2957, 0.4068 ) }
    dend_45 { pt3dadd( 433.128, 262.243, 42.9083, 0.305 ) }
    dend_45 { pt3dadd( 433.396, 261.196, 43.2312, 0.2796 ) }
    dend_45 { pt3dadd( 434.25, 260.484, 43.5982, 0.305 ) }
    dend_45 { pt3dadd( 435.246, 260.003, 44.2322, 0.3814 ) }
    dend_45 { pt3dadd( 436.194, 259.396, 44.665, 0.4322 ) }
    dend_45 { pt3dadd( 437.098, 258.761, 45.2802, 0.4576 ) }
    dend_45 { pt3dadd( 437.94, 257.991, 45.365, 0.4322 ) }
    dend_45 { pt3dadd( 438.765, 257.207, 45.3872, 0.4068 ) }
    dend_45 { pt3dadd( 439.654, 256.495, 45.5188, 0.356 ) }
    dend_45 { pt3dadd( 440.516, 255.811, 46.032, 0.3814 ) }
    dend_45 { pt3dadd( 441.378, 255.358, 47.3379, 0.4068 ) }
    dend_45 { pt3dadd( 441.307, 254.748, 48.8886, 0.483 ) }
    dend_45 { pt3dadd( 440.414, 254.141, 49.6583, 0.4576 ) }
    dend_45 { pt3dadd( 439.485, 253.507, 49.9934, 0.4068 ) }
    dend_45 { pt3dadd( 438.805, 252.751, 50.9793, 0.3304 ) }
    dend_45 { pt3dadd( 438.63, 251.744, 51.6138, 0.3304 ) }
    dend_45 { pt3dadd( 438.749, 250.611, 51.8014, 0.356 ) }
    dend_45 { pt3dadd( 439.2, 249.649, 52.6212, 0.356 ) }
    dend_45 { pt3dadd( 440.161, 249.256, 53.2106, 0.305 ) }
    dend_45 { pt3dadd( 441.248, 249.333, 53.9773, 0.2796 ) }
    dend_45 { pt3dadd( 442.055, 249.026, 55.6872, 0.2796 ) }
    dend_45 { pt3dadd( 442.473, 248.453, 57.2818, 0.305 ) }
    dend_45 { pt3dadd( 443.054, 247.522, 57.4832, 0.2796 ) }
    dend_45 { pt3dadd( 443.945, 247.023, 57.9085, 0.2796 ) }
    dend_45 { pt3dadd( 444.435, 246.048, 57.96, 0.2796 ) }
    dend_45 { pt3dadd( 444.902, 245.207, 58.5262, 0.3304 ) }
    dend_45 { pt3dadd( 445.101, 244.259, 59.5848, 0.356 ) }
    dend_45 { pt3dadd( 445.524, 243.338, 59.3491, 0.3814 ) }
    dend_45 { pt3dadd( 446.024, 242.363, 59.6884, 0.3814 ) }
    dend_45 { pt3dadd( 446.476, 241.385, 59.6322, 0.356 ) }
    dend_45 { pt3dadd( 446.846, 240.386, 59.6924, 0.356 ) }
    dend_45 { pt3dadd( 446.679, 239.439, 60.4397, 0.3304 ) }
    dend_45 { pt3dadd( 446.194, 238.69, 61.3116, 0.3304 ) }
    dend_45 { pt3dadd( 446.143, 237.667, 62.0712, 0.2796 ) }
    dend_45 { pt3dadd( 446.142, 236.547, 61.9517, 0.2542 ) }
    dend_45 { pt3dadd( 445.588, 235.893, 61.32, 0.2288 ) }
    dend_45 { pt3dadd( 445.693, 234.941, 63.28, 0.2288 ) }
    dend_45 { pt3dadd( 445.806, 233.805, 63.28, 0.2288 ) }
    dend_45 { pt3dadd( 445.962, 232.683, 63.28, 0.2288 ) }
    dend_45 { pt3dadd( 446.316, 231.596, 63.28, 0.2288 ) }
    dend_45 { pt3dadd( 446.618, 230.516, 63.28, 0.2288 ) }
    dend_45 { pt3dadd( 447.734, 230.305, 63.28, 0.2288 ) }
    dend_45 { pt3dadd( 448.703, 229.951, 63.28, 0.2796 ) }
    dend_45 { pt3dadd( 449.478, 229.143, 63.28, 0.356 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 45/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 429.915, 288.958, 34.9622, 0.5848 ) }
    dend_42 { pt3dadd( 429.683, 287.97, 35.0, 0.305 ) }
    dend_42 { pt3dadd( 428.929, 287.318, 34.4784, 0.305 ) }
    dend_42 { pt3dadd( 428.82, 286.366, 35.0605, 0.305 ) }
    dend_42 { pt3dadd( 428.493, 285.319, 34.8933, 0.3304 ) }
    dend_42 { pt3dadd( 428.311, 284.249, 34.9588, 0.356 ) }
    dend_42 { pt3dadd( 427.801, 283.41, 35.8319, 0.3814 ) }
    dend_42 { pt3dadd( 427.109, 282.657, 35.5888, 0.4068 ) }
    dend_42 { pt3dadd( 426.753, 281.746, 34.4526, 0.483 ) }
    dend_42 { pt3dadd( 426.252, 281.185, 36.0528, 0.5592 ) }
    dend_42 { pt3dadd( 425.721, 280.518, 34.974, 0.6102 ) }
    dend_42 { pt3dadd( 425.685, 279.464, 35.0736, 0.5592 ) }
    dend_42 { pt3dadd( 425.267, 278.569, 34.16, 0.483 ) }
    dend_42 { pt3dadd( 425.106, 277.76, 35.3749, 0.356 ) }
    dend_42 { pt3dadd( 424.8, 276.812, 35.3091, 0.3304 ) }
    dend_42 { pt3dadd( 424.226, 276.201, 36.7044, 0.356 ) }
    dend_42 { pt3dadd( 424.234, 275.267, 36.1222, 0.4576 ) }
    dend_42 { pt3dadd( 423.966, 274.41, 36.4434, 0.483 ) }
    dend_42 { pt3dadd( 423.65, 273.604, 35.9296, 0.5084 ) }
    dend_42 { pt3dadd( 423.743, 272.645, 36.0648, 0.5084 ) }
    dend_42 { pt3dadd( 423.056, 271.853, 36.0461, 0.5338 ) }
    dend_42 { pt3dadd( 422.588, 270.943, 35.0266, 0.5084 ) }
    dend_42 { pt3dadd( 421.819, 270.228, 34.86, 0.5084 ) }
    dend_42 { pt3dadd( 421.49, 269.197, 34.6262, 0.5084 ) }
    dend_42 { pt3dadd( 420.914, 268.421, 35.2271, 0.5592 ) }
    dend_42 { pt3dadd( 420.715, 267.384, 34.72, 0.5592 ) }
    dend_42 { pt3dadd( 420.274, 266.738, 35.9887, 0.5338 ) }
    dend_42 { pt3dadd( 419.631, 265.491, 36.4767, 0.483 ) }
    dend_42 { pt3dadd( 419.077, 264.504, 36.7668, 0.5084 ) }
    dend_42 { pt3dadd( 418.666, 263.47, 37.3232, 0.5338 ) }
    dend_42 { pt3dadd( 418.487, 262.35, 37.394, 0.5084 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 424.596, 296.759, 21.7608, 0.4576 ) }
    dend_37 { pt3dadd( 424.798, 296.688, 20.3764, 0.3814 ) }
    dend_37 { pt3dadd( 423.783, 296.64, 20.44, 0.3304 ) }
    dend_37 { pt3dadd( 422.845, 296.765, 19.7005, 0.305 ) }
    dend_37 { pt3dadd( 422.012, 296.868, 20.4775, 0.305 ) }
    dend_37 { pt3dadd( 421.193, 296.572, 19.7557, 0.356 ) }
    dend_37 { pt3dadd( 420.227, 296.309, 19.4768, 0.3814 ) }
    dend_37 { pt3dadd( 419.265, 296.541, 18.6939, 0.356 ) }
    dend_37 { pt3dadd( 418.22, 296.45, 17.9696, 0.3304 ) }
    dend_37 { pt3dadd( 417.725, 295.989, 16.8, 0.305 ) }
    dend_37 { pt3dadd( 416.859, 295.861, 17.6442, 0.305 ) }
    dend_37 { pt3dadd( 415.946, 296.185, 18.9241, 0.305 ) }
    dend_37 { pt3dadd( 414.94, 296.514, 18.3896, 0.2796 ) }
    dend_37 { pt3dadd( 413.855, 296.53, 18.76, 0.2796 ) }
    dend_37 { pt3dadd( 412.943, 297.117, 18.4612, 0.2796 ) }
    dend_37 { pt3dadd( 411.884, 297.255, 18.7597, 0.305 ) }
    dend_37 { pt3dadd( 410.807, 297.326, 19.2699, 0.2796 ) }
    dend_37 { pt3dadd( 410.174, 297.442, 18.7494, 0.2796 ) }
    dend_37 { pt3dadd( 409.209, 297.433, 19.4793, 0.2796 ) }
    dend_37 { pt3dadd( 408.701, 297.539, 19.931, 0.305 ) }
    dend_37 { pt3dadd( 407.603, 297.44, 19.32, 0.2796 ) }
    dend_37 { pt3dadd( 406.459, 297.44, 19.32, 0.2542 ) }
    dend_37 { pt3dadd( 405.315, 297.44, 19.32, 0.2288 ) }
    dend_37 { pt3dadd( 404.262, 297.44, 18.3285, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_37 { pt3dadd( 403.16, 297.231, 18.3826, 0.2542 ) }
    dend_37 { pt3dadd( 402.03, 297.187, 18.7975, 0.2796 ) }
    dend_37 { pt3dadd( 401.022, 297.258, 18.9767, 0.3304 ) }
    dend_37 { pt3dadd( 400.165, 297.661, 19.4261, 0.3304 ) }
    dend_37 { pt3dadd( 399.203, 297.669, 18.9232, 0.3304 ) }
    dend_37 { pt3dadd( 398.242, 297.773, 19.5006, 0.3304 ) }
    dend_37 { pt3dadd( 397.212, 298.005, 19.7392, 0.3814 ) }
    dend_37 { pt3dadd( 396.203, 297.975, 20.9017, 0.4322 ) }
    dend_37 { pt3dadd( 395.283, 297.751, 21.4214, 0.4068 ) }
    dend_37 { pt3dadd( 394.256, 297.725, 22.342, 0.356 ) }
    dend_37 { pt3dadd( 393.153, 297.781, 22.6506, 0.305 ) }
    dend_37 { pt3dadd( 392.311, 298.012, 22.2275, 0.305 ) }
    dend_37 { pt3dadd( 391.614, 298.126, 22.1892, 0.305 ) }
    dend_37 { pt3dadd( 390.844, 298.583, 22.6621, 0.3304 ) }
    dend_37 { pt3dadd( 389.911, 298.872, 22.4487, 0.3814 ) }
    dend_37 { pt3dadd( 388.846, 298.698, 23.24, 0.4322 ) }
    dend_37 { pt3dadd( 388.346, 298.57, 22.4711, 0.4322 ) }
    dend_37 { pt3dadd( 387.601, 298.21, 23.3596, 0.3814 ) }
    dend_37 { pt3dadd( 386.826, 298.087, 21.6149, 0.3304 ) }
    dend_37 { pt3dadd( 386.284, 297.802, 23.0678, 0.305 ) }
    dend_37 { pt3dadd( 385.196, 297.669, 23.399, 0.305 ) }
    dend_37 { pt3dadd( 384.255, 297.669, 24.337, 0.305 ) }
    dend_37 { pt3dadd( 383.282, 297.848, 23.3472, 0.305 ) }
    dend_37 { pt3dadd( 382.456, 297.934, 24.7052, 0.305 ) }
    dend_37 { pt3dadd( 381.771, 298.506, 24.1884, 0.2796 ) }
    dend_37 { pt3dadd( 380.955, 298.362, 25.6068, 0.2796 ) }
    dend_37 { pt3dadd( 380.415, 297.677, 24.4846, 0.305 ) }
    dend_37 { pt3dadd( 379.552, 297.086, 25.2, 0.356 ) }
    dend_37 { pt3dadd( 378.709, 296.818, 24.1433, 0.3814 ) }
    dend_37 { pt3dadd( 377.83, 296.768, 24.4653, 0.356 ) }
    dend_37 { pt3dadd( 377.354, 296.55, 24.4219, 0.356 ) }
    dend_37 { pt3dadd( 376.357, 296.533, 24.7296, 0.356 ) }
    dend_37 { pt3dadd( 375.305, 296.469, 24.6616, 0.4068 ) }
    dend_37 { pt3dadd( 374.255, 296.182, 25.303, 0.4068 ) }
    dend_37 { pt3dadd( 373.459, 296.296, 25.037, 0.3814 ) }
    dend_37 { pt3dadd( 372.568, 295.869, 24.9553, 0.305 ) }
    dend_37 { pt3dadd( 371.49, 295.616, 24.92, 0.2542 ) }
    dend_37 { pt3dadd( 370.385, 295.661, 25.1748, 0.2542 ) }
    dend_37 { pt3dadd( 369.561, 295.845, 25.0589, 0.2796 ) }
    dend_37 { pt3dadd( 368.51, 296.063, 25.8936, 0.305 ) }
    dend_37 { pt3dadd( 367.497, 296.039, 25.6396, 0.3304 ) }
    dend_37 { pt3dadd( 366.61, 296.092, 26.5275, 0.3814 ) }
    dend_37 { pt3dadd( 365.812, 296.582, 25.9462, 0.4322 ) }
    dend_37 { pt3dadd( 364.888, 296.551, 26.5972, 0.4068 ) }
    dend_37 { pt3dadd( 364.105, 296.597, 24.9239, 0.356 ) }
    dend_37 { pt3dadd( 363.152, 296.851, 25.8787, 0.3304 ) }
    dend_37 { pt3dadd( 362.911, 297.662, 26.1766, 0.3814 ) }
    dend_37 { pt3dadd( 362.499, 298.61, 26.8282, 0.4068 ) }
    dend_37 { pt3dadd( 361.767, 299.313, 25.7608, 0.4068 ) }
    dend_37 { pt3dadd( 361.026, 300.016, 25.7194, 0.356 ) }
    dend_37 { pt3dadd( 360.246, 300.648, 26.04, 0.356 ) }
    dend_37 { pt3dadd( 359.616, 301.439, 25.8532, 0.356 ) }
    dend_37 { pt3dadd( 359.033, 301.999, 24.8662, 0.3814 ) }
    dend_37 { pt3dadd( 358.268, 302.303, 23.1918, 0.356 ) }
    dend_37 { pt3dadd( 357.406, 302.428, 23.2677, 0.305 ) }
    dend_37 { pt3dadd( 356.544, 302.81, 23.6082, 0.2796 ) }
    dend_37 { pt3dadd( 355.472, 302.661, 24.3676, 0.305 ) }
    dend_37 { pt3dadd( 354.536, 302.927, 24.5176, 0.356 ) }
    dend_37 { pt3dadd( 353.679, 303.274, 22.9947, 0.356 ) }
    dend_37 { pt3dadd( 352.851, 302.927, 22.2762, 0.3304 ) }
    dend_37 { pt3dadd( 351.799, 302.934, 22.9502, 0.3304 ) }
    dend_37 { pt3dadd( 350.685, 303.142, 23.0807, 0.3814 ) }
    dend_37 { pt3dadd( 349.62, 303.159, 23.5158, 0.4068 ) }
    dend_37 { pt3dadd( 348.61, 303.03, 23.7112, 0.3814 ) }
    dend_37 { pt3dadd( 347.875, 303.534, 23.4315, 0.305 ) }
    dend_37 { pt3dadd( 347.114, 304.178, 23.52, 0.2542 ) }
    dend_37 { pt3dadd( 346.031, 304.471, 23.6634, 0.2542 ) }
    dend_37 { pt3dadd( 345.122, 304.655, 23.7079, 0.305 ) }
    dend_37 { pt3dadd( 344.422, 305.065, 23.7958, 0.356 ) }
    dend_37 { pt3dadd( 343.651, 305.273, 22.787, 0.3814 ) }
    dend_37 { pt3dadd( 342.819, 305.219, 21.9341, 0.356 ) }
    dend_37 { pt3dadd( 342.177, 305.321, 23.0874, 0.356 ) }
    dend_37 { pt3dadd( 341.484, 305.448, 23.52, 0.4068 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 424.596, 296.759, 21.7608, 0.4576 ) }
    dend_36 { pt3dadd( 423.582, 296.407, 22.47, 0.483 ) }
    dend_36 { pt3dadd( 422.833, 295.691, 23.6135, 0.5338 ) }
    dend_36 { pt3dadd( 421.99, 294.949, 23.898, 0.4576 ) }
    dend_36 { pt3dadd( 421.493, 293.942, 23.9014, 0.4068 ) }
    dend_36 { pt3dadd( 421.021, 292.906, 24.155, 0.3814 ) }
    dend_36 { pt3dadd( 420.611, 291.864, 24.7153, 0.4576 ) }
    dend_36 { pt3dadd( 419.983, 290.931, 25.1532, 0.5338 ) }
    dend_36 { pt3dadd( 419.239, 290.064, 25.1826, 0.5592 ) }
    dend_36 { pt3dadd( 418.729, 289.043, 25.0802, 0.5848 ) }
    dend_36 { pt3dadd( 418.109, 288.087, 24.8626, 0.5848 ) }
    dend_36 { pt3dadd( 417.764, 287.271, 26.6246, 0.6356 ) }
    dend_36 { pt3dadd( 416.829, 286.42, 26.8408, 0.5848 ) }
    dend_36 { pt3dadd( 416.163, 285.891, 27.7746, 0.483 ) }
    dend_36 { pt3dadd( 415.233, 286.018, 28.8635, 0.4068 ) }
    dend_36 { pt3dadd( 414.692, 285.348, 29.96, 0.4068 ) }
    dend_36 { pt3dadd( 414.172, 285.314, 28.4259, 0.4322 ) }
    dend_36 { pt3dadd( 413.632, 284.698, 27.183, 0.483 ) }
    dend_36 { pt3dadd( 412.811, 283.964, 27.3986, 0.5338 ) }
    dend_36 { pt3dadd( 412.105, 283.267, 28.1324, 0.6102 ) }
    dend_36 { pt3dadd( 411.484, 282.669, 28.0, 0.6102 ) }
    dend_36 { pt3dadd( 411.154, 281.652, 28.0409, 0.5592 ) }
    dend_36 { pt3dadd( 410.627, 281.072, 29.577, 0.483 ) }
    dend_36 { pt3dadd( 409.849, 280.536, 30.4634, 0.483 ) }
    dend_36 { pt3dadd( 409.134, 279.901, 29.701, 0.5084 ) }
    dend_36 { pt3dadd( 408.651, 279.158, 31.0909, 0.5338 ) }
    dend_36 { pt3dadd( 408.053, 278.641, 32.5399, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_36 { pt3dadd( 407.194, 278.054, 32.6348, 0.5084 ) }
    dend_36 { pt3dadd( 406.416, 277.288, 32.319, 0.4322 ) }
    dend_36 { pt3dadd( 405.907, 276.539, 33.6025, 0.3304 ) }
    dend_36 { pt3dadd( 405.247, 275.964, 33.817, 0.2796 ) }
    dend_36 { pt3dadd( 404.446, 275.25, 33.628, 0.2796 ) }
    dend_36 { pt3dadd( 403.79, 274.612, 34.1348, 0.3304 ) }
    dend_36 { pt3dadd( 403.374, 273.821, 33.8957, 0.3304 ) }
    dend_36 { pt3dadd( 402.94, 273.562, 35.0, 0.356 ) }
    dend_36 { pt3dadd( 402.45, 272.677, 35.0, 0.3304 ) }
    dend_36 { pt3dadd( 401.934, 272.0, 36.111, 0.3304 ) }
    dend_36 { pt3dadd( 401.198, 271.149, 35.9324, 0.2796 ) }
    dend_36 { pt3dadd( 400.634, 270.319, 36.3322, 0.2542 ) }
    dend_36 { pt3dadd( 400.171, 269.469, 36.4, 0.2542 ) }
    dend_36 { pt3dadd( 399.72, 268.879, 37.7376, 0.2796 ) }
    dend_36 { pt3dadd( 399.164, 268.84, 35.8711, 0.305 ) }
    dend_36 { pt3dadd( 398.57, 268.374, 35.6821, 0.305 ) }
    dend_36 { pt3dadd( 398.112, 267.969, 35.3441, 0.3304 ) }
    dend_36 { pt3dadd( 398.226, 267.25, 37.4618, 0.356 ) }
    dend_36 { pt3dadd( 397.746, 266.552, 37.084, 0.3814 ) }
    dend_36 { pt3dadd( 396.876, 266.033, 37.875, 0.3814 ) }
    dend_36 { pt3dadd( 396.349, 265.369, 38.5325, 0.4322 ) }
    dend_36 { pt3dadd( 395.789, 264.542, 38.0842, 0.483 ) }
    dend_36 { pt3dadd( 395.061, 263.997, 38.92, 0.5084 ) }
    dend_36 { pt3dadd( 393.78, 263.46, 38.3827, 0.3304 ) }
    dend_36 { pt3dadd( 392.931, 263.17, 37.5824, 0.2542 ) }
    dend_36 { pt3dadd( 392.18, 262.398, 38.2668, 0.2288 ) }
    dend_36 { pt3dadd( 391.591, 261.781, 39.4962, 0.2542 ) }
    dend_36 { pt3dadd( 391.569, 261.364, 41.7959, 0.2796 ) }
    dend_36 { pt3dadd( 390.558, 260.98, 42.2624, 0.305 ) }
    dend_36 { pt3dadd( 390.015, 260.361, 41.2314, 0.2796 ) }
    dend_36 { pt3dadd( 389.301, 259.697, 41.3899, 0.2542 ) }
    dend_36 { pt3dadd( 388.731, 258.922, 42.0454, 0.2288 ) }
    dend_36 { pt3dadd( 387.969, 258.288, 41.7679, 0.2288 ) }
    dend_36 { pt3dadd( 387.205, 257.473, 41.9754, 0.2288 ) }
    dend_36 { pt3dadd( 386.577, 256.734, 42.5314, 0.2542 ) }
    dend_36 { pt3dadd( 385.614, 256.224, 43.1301, 0.305 ) }
    dend_36 { pt3dadd( 384.72, 255.797, 43.3605, 0.3814 ) }
    dend_36 { pt3dadd( 384.371, 255.01, 42.28, 0.4322 ) }
    dend_36 { pt3dadd( 383.518, 254.452, 43.458, 0.4322 ) }
    dend_36 { pt3dadd( 382.848, 253.886, 44.8, 0.3814 ) }
    dend_36 { pt3dadd( 382.09, 253.076, 44.6555, 0.305 ) }
    dend_36 { pt3dadd( 381.277, 252.308, 44.9949, 0.2542 ) }
    dend_36 { pt3dadd( 380.763, 251.909, 43.7125, 0.2542 ) }
    dend_36 { pt3dadd( 379.962, 251.304, 44.5141, 0.2796 ) }
    dend_36 { pt3dadd( 379.092, 251.01, 44.7605, 0.305 ) }
    dend_36 { pt3dadd( 378.775, 250.357, 42.9783, 0.305 ) }
    dend_36 { pt3dadd( 378.317, 249.735, 43.7984, 0.3304 ) }
    dend_36 { pt3dadd( 377.402, 249.482, 44.52, 0.356 ) }
    dend_36 { pt3dadd( 376.924, 248.656, 45.3589, 0.356 ) }
    dend_36 { pt3dadd( 376.375, 247.822, 45.1312, 0.3304 ) }
    dend_36 { pt3dadd( 376.075, 246.945, 44.9985, 0.305 ) }
    dend_36 { pt3dadd( 375.572, 246.051, 45.0892, 0.3304 ) }
    dend_36 { pt3dadd( 375.195, 245.105, 45.0517, 0.3814 ) }
    dend_36 { pt3dadd( 374.674, 244.226, 45.5174, 0.4576 ) }
    dend_36 { pt3dadd( 374.21, 243.634, 44.0191, 0.5338 ) }
    dend_36 { pt3dadd( 373.503, 242.983, 45.183, 0.5592 ) }
    dend_36 { pt3dadd( 373.053, 242.178, 46.2, 0.5338 ) }
    dend_36 { pt3dadd( 372.611, 241.498, 45.4188, 0.4322 ) }
    dend_36 { pt3dadd( 371.81, 241.289, 43.7472, 0.3814 ) }
    dend_36 { pt3dadd( 371.046, 240.624, 43.9424, 0.3814 ) }
    dend_36 { pt3dadd( 370.781, 240.24, 46.3565, 0.4322 ) }
    dend_36 { pt3dadd( 370.371, 239.317, 47.04, 0.4322 ) }
    dend_36 { pt3dadd( 369.947, 238.477, 47.4099, 0.4068 ) }
    dend_36 { pt3dadd( 369.569, 237.803, 48.6951, 0.4068 ) }
    dend_36 { pt3dadd( 368.826, 237.151, 49.0, 0.4068 ) }
    // Section: dend_33, id: dend_33, parent: dend_17 (entry count 65/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 433.487, 296.812, 21.9929, 0.356 ) }
    dend_33 { pt3dadd( 433.84, 296.747, 21.224, 0.2542 ) }
    dend_33 { pt3dadd( 434.707, 296.31, 19.8985, 0.2542 ) }
    dend_33 { pt3dadd( 435.427, 295.428, 19.8355, 0.305 ) }
    dend_33 { pt3dadd( 436.328, 294.776, 19.896, 0.356 ) }
    dend_33 { pt3dadd( 437.353, 294.398, 19.1478, 0.3814 ) }
    dend_33 { pt3dadd( 438.361, 294.152, 18.6068, 0.3814 ) }
    dend_33 { pt3dadd( 439.218, 294.204, 16.9056, 0.4068 ) }
    dend_33 { pt3dadd( 440.152, 293.708, 16.2487, 0.4576 ) }
    dend_33 { pt3dadd( 440.989, 292.951, 16.2652, 0.5338 ) }
    dend_33 { pt3dadd( 442.021, 292.474, 16.394, 0.5592 ) }
    dend_33 { pt3dadd( 443.048, 292.075, 16.9697, 0.5338 ) }
    dend_33 { pt3dadd( 443.843, 291.358, 17.8942, 0.483 ) }
    dend_33 { pt3dadd( 444.386, 290.4, 17.5666, 0.4576 ) }
    dend_33 { pt3dadd( 445.255, 289.705, 17.5218, 0.4576 ) }
    dend_33 { pt3dadd( 446.327, 289.339, 17.7509, 0.4322 ) }
    dend_33 { pt3dadd( 447.143, 288.707, 16.751, 0.4322 ) }
    dend_33 { pt3dadd( 447.731, 287.918, 17.9211, 0.4322 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 83/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 433.487, 296.812, 21.9929, 0.356 ) }
    dend_18 { pt3dadd( 432.703, 295.611, 22.3513, 0.5084 ) }
    dend_18 { pt3dadd( 432.106, 294.658, 22.8491, 0.6102 ) }
    dend_18 { pt3dadd( 431.226, 293.952, 22.5809, 0.6102 ) }
    dend_18 { pt3dadd( 430.285, 293.362, 21.9251, 0.6356 ) }
    dend_18 { pt3dadd( 429.556, 292.488, 21.7529, 0.6356 ) }
    dend_18 { pt3dadd( 429.103, 291.456, 21.2962, 0.7118 ) }
    dend_18 { pt3dadd( 429.001, 290.341, 20.7304, 0.7118 ) }
    dend_18 { pt3dadd( 429.003, 289.198, 20.72, 0.7372 ) }
    dend_18 { pt3dadd( 429.023, 288.053, 20.72, 0.7118 ) }
    dend_18 { pt3dadd( 429.178, 286.921, 20.7197, 0.6864 ) }
    dend_18 { pt3dadd( 429.305, 285.784, 20.7183, 0.5592 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 95/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 440.923, 308.005, 28.1162, 0.356 ) }
    dend_4 { pt3dadd( 441.19, 306.741, 28.2702, 0.5084 ) }
    dend_4 { pt3dadd( 441.816, 305.831, 27.6665, 0.5084 ) }
    dend_4 { pt3dadd( 442.448, 304.898, 27.3084, 0.5084 ) }
    dend_4 { pt3dadd( 443.056, 303.931, 27.2583, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_4 { pt3dadd( 443.636, 303.025, 28.0932, 0.4576 ) }
    dend_4 { pt3dadd( 444.338, 302.197, 27.6111, 0.4576 ) }
    dend_4 { pt3dadd( 444.865, 301.204, 27.2331, 0.4576 ) }
    dend_4 { pt3dadd( 445.647, 300.477, 26.6459, 0.356 ) }
    dend_4 { pt3dadd( 446.271, 299.592, 27.3952, 0.305 ) }
    dend_4 { pt3dadd( 446.546, 298.528, 27.9093, 0.305 ) }
    dend_4 { pt3dadd( 446.976, 297.498, 27.7802, 0.4068 ) }
    dend_4 { pt3dadd( 447.625, 296.605, 28.4861, 0.4576 ) }
    dend_4 { pt3dadd( 448.113, 295.669, 29.2776, 0.483 ) }
    dend_4 { pt3dadd( 448.21, 294.923, 30.6121, 0.4322 ) }
    dend_4 { pt3dadd( 448.098, 294.714, 29.5229, 0.4576 ) }
    dend_4 { pt3dadd( 447.961, 293.917, 30.5085, 0.483 ) }
    dend_4 { pt3dadd( 447.764, 293.073, 31.08, 0.5084 ) }
    dend_4 { pt3dadd( 447.995, 292.408, 29.4378, 0.4322 ) }
    dend_4 { pt3dadd( 448.267, 291.758, 30.777, 0.356 ) }
    dend_4 { pt3dadd( 449.339, 291.582, 30.8552, 0.3304 ) }
    dend_4 { pt3dadd( 450.069, 291.449, 31.1035, 0.3814 ) }
    dend_4 { pt3dadd( 450.61, 290.832, 31.7654, 0.4576 ) }
    dend_4 { pt3dadd( 451.148, 290.415, 31.8889, 0.483 ) }
    dend_4 { pt3dadd( 451.315, 290.284, 29.96, 0.483 ) }
    dend_4 { pt3dadd( 451.651, 289.542, 30.6186, 0.4322 ) }
    dend_4 { pt3dadd( 452.343, 289.048, 31.08, 0.4068 ) }
    dend_4 { pt3dadd( 452.455, 288.288, 30.7339, 0.356 ) }
    dend_4 { pt3dadd( 452.917, 288.094, 28.6065, 0.305 ) }
    dend_4 { pt3dadd( 453.642, 287.59, 27.1869, 0.2542 ) }
    dend_4 { pt3dadd( 453.81, 287.16, 28.245, 0.2288 ) }
    dend_4 { pt3dadd( 453.935, 286.693, 29.3779, 0.2288 ) }
    dend_4 { pt3dadd( 453.777, 286.2, 31.5759, 0.2288 ) }
    dend_4 { pt3dadd( 454.091, 285.666, 33.7397, 0.2288 ) }
    dend_4 { pt3dadd( 454.682, 285.156, 35.2072, 0.2288 ) }
    dend_4 { pt3dadd( 455.193, 284.295, 35.1086, 0.2796 ) }
    dend_4 { pt3dadd( 455.762, 284.038, 33.2934, 0.356 ) }
    dend_4 { pt3dadd( 456.122, 283.247, 33.9343, 0.4576 ) }
    dend_4 { pt3dadd( 456.63, 282.591, 35.2142, 0.4576 ) }
    dend_4 { pt3dadd( 457.221, 281.883, 33.7456, 0.4068 ) }
    dend_4 { pt3dadd( 457.831, 281.106, 34.2605, 0.305 ) }
    dend_4 { pt3dadd( 458.685, 280.725, 34.4876, 0.2542 ) }
    dend_4 { pt3dadd( 459.37, 280.038, 34.6811, 0.2288 ) }
    dend_4 { pt3dadd( 459.893, 279.274, 34.2866, 0.2288 ) }
    dend_4 { pt3dadd( 460.589, 278.575, 33.8635, 0.2288 ) }
    dend_4 { pt3dadd( 460.918, 278.221, 34.3442, 0.2796 ) }
    dend_4 { pt3dadd( 461.415, 277.65, 34.0371, 0.356 ) }
    dend_4 { pt3dadd( 462.044, 276.975, 33.066, 0.483 ) }
    dend_4 { pt3dadd( 462.405, 276.252, 33.5434, 0.5338 ) }
    dend_4 { pt3dadd( 462.993, 275.444, 33.3824, 0.5592 ) }
    dend_4 { pt3dadd( 463.583, 274.838, 34.3364, 0.483 ) }
    dend_4 { pt3dadd( 464.107, 273.882, 34.2104, 0.4322 ) }
    dend_4 { pt3dadd( 464.581, 273.125, 32.6203, 0.356 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 48/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 440.923, 308.005, 28.1162, 0.356 ) }
    dend_3 { pt3dadd( 441.238, 307.928, 27.7928, 0.356 ) }
    dend_3 { pt3dadd( 442.281, 308.108, 26.784, 0.3304 ) }
    dend_3 { pt3dadd( 443.35, 307.799, 27.172, 0.3814 ) }
    dend_3 { pt3dadd( 444.379, 307.498, 26.2486, 0.3814 ) }
    dend_3 { pt3dadd( 444.876, 307.981, 24.045, 0.4068 ) }
    dend_3 { pt3dadd( 445.783, 308.084, 22.4778, 0.356 ) }
    dend_3 { pt3dadd( 446.861, 307.801, 22.0394, 0.356 ) }
    dend_3 { pt3dadd( 447.996, 307.729, 21.8002, 0.4068 ) }
    dend_3 { pt3dadd( 449.074, 307.679, 20.8872, 0.483 ) }
    dend_3 { pt3dadd( 450.173, 307.395, 20.6497, 0.5338 ) }
    dend_3 { pt3dadd( 451.278, 307.19, 20.1424, 0.483 ) }
    dend_3 { pt3dadd( 452.361, 306.88, 20.0214, 0.4068 ) }
    dend_3 { pt3dadd( 453.421, 306.758, 21.0053, 0.305 ) }
    dend_3 { pt3dadd( 454.404, 306.521, 21.9145, 0.2542 ) }
    dend_3 { pt3dadd( 455.406, 306.372, 20.6511, 0.2542 ) }
    dend_3 { pt3dadd( 456.354, 306.433, 19.1041, 0.2796 ) }
    dend_3 { pt3dadd( 457.267, 306.732, 18.0088, 0.356 ) }
    dend_3 { pt3dadd( 458.22, 306.968, 18.704, 0.3814 ) }
    dend_3 { pt3dadd( 459.231, 306.676, 19.607, 0.4322 ) }
    dend_3 { pt3dadd( 460.314, 306.351, 19.9122, 0.4068 ) }
    dend_3 { pt3dadd( 461.3, 305.846, 19.9354, 0.4322 ) }
    dend_3 { pt3dadd( 462.294, 305.454, 19.2643, 0.4068 ) }
    dend_3 { pt3dadd( 463.402, 305.231, 19.2856, 0.4068 ) }
    dend_3 { pt3dadd( 464.457, 304.845, 18.7566, 0.356 ) }
    dend_3 { pt3dadd( 465.527, 304.541, 18.2031, 0.356 ) }
    dend_3 { pt3dadd( 466.606, 304.53, 17.2701, 0.3304 ) }
    dend_3 { pt3dadd( 467.096, 304.533, 16.3898, 0.2796 ) }
    dend_3 { pt3dadd( 468.041, 304.615, 17.222, 0.2796 ) }
    dend_3 { pt3dadd( 469.031, 304.53, 17.4854, 0.2796 ) }
    dend_3 { pt3dadd( 469.821, 303.912, 16.8244, 0.3304 ) }
    dend_3 { pt3dadd( 470.22, 303.286, 15.7161, 0.356 ) }
    dend_3 { pt3dadd( 471.232, 303.151, 14.947, 0.3814 ) }
    dend_3 { pt3dadd( 472.043, 303.049, 16.3111, 0.4068 ) }
    dend_3 { pt3dadd( 472.888, 302.58, 17.0699, 0.4576 ) }
    dend_3 { pt3dadd( 473.626, 302.181, 16.5676, 0.5084 ) }
    dend_3 { pt3dadd( 474.315, 301.843, 17.0545, 0.5592 ) }
    dend_3 { pt3dadd( 475.009, 301.095, 17.7156, 0.5592 ) }
    dend_3 { pt3dadd( 475.969, 300.544, 18.1941, 0.6102 ) }
    dend_3 { pt3dadd( 476.489, 299.825, 17.64, 0.5592 ) }
    dend_3 { pt3dadd( 477.297, 299.258, 17.9099, 0.5084 ) }
    dend_3 { pt3dadd( 477.506, 298.6, 16.52, 0.3814 ) }
    dend_3 { pt3dadd( 477.987, 298.584, 16.7342, 0.356 ) }
    dend_3 { pt3dadd( 478.599, 298.19, 18.2, 0.356 ) }
    dend_3 { pt3dadd( 479.41, 298.326, 17.1016, 0.356 ) }
    dend_3 { pt3dadd( 480.084, 298.047, 15.6632, 0.305 ) }
    dend_3 { pt3dadd( 480.407, 297.321, 15.379, 0.2542 ) }
    dend_3 { pt3dadd( 481.098, 297.211, 16.4629, 0.2288 ) }
    dend_3 { pt3dadd( 481.589, 296.472, 17.2953, 0.2288 ) }
    dend_3 { pt3dadd( 482.681, 296.313, 16.8423, 0.2796 ) }
    dend_3 { pt3dadd( 483.6, 296.021, 17.334, 0.3304 ) }
    dend_3 { pt3dadd( 484.071, 295.333, 16.2669, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_3 { pt3dadd( 484.93, 295.001, 16.945, 0.3814 ) }
    dend_3 { pt3dadd( 485.588, 294.788, 15.8763, 0.3814 ) }
    dend_3 { pt3dadd( 486.147, 293.97, 16.8, 0.3304 ) }
    dend_3 { pt3dadd( 486.799, 293.642, 15.8343, 0.356 ) }
    dend_3 { pt3dadd( 486.765, 293.069, 14.5079, 0.356 ) }
    dend_3 { pt3dadd( 487.66, 292.697, 15.0086, 0.3814 ) }
    dend_3 { pt3dadd( 488.22, 291.988, 16.1566, 0.356 ) }
    dend_3 { pt3dadd( 488.903, 291.487, 16.7168, 0.305 ) }
    dend_3 { pt3dadd( 489.289, 291.148, 18.2, 0.305 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 9/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 361.266, 306.535, 38.0724, 0.4068 ) }
    dend_53 { pt3dadd( 360.618, 306.468, 37.8958, 0.2796 ) }
    dend_53 { pt3dadd( 359.861, 306.185, 37.3293, 0.2542 ) }
    dend_53 { pt3dadd( 358.843, 305.713, 37.52, 0.2542 ) }
    dend_53 { pt3dadd( 357.832, 305.382, 37.52, 0.2796 ) }
    dend_53 { pt3dadd( 356.854, 304.819, 37.4732, 0.305 ) }
    dend_53 { pt3dadd( 355.943, 304.155, 37.5169, 0.2796 ) }
    dend_53 { pt3dadd( 355.238, 303.389, 37.52, 0.2542 ) }
    dend_53 { pt3dadd( 354.277, 303.046, 37.52, 0.2288 ) }
    dend_53 { pt3dadd( 353.32, 302.446, 37.52, 0.2288 ) }
    dend_53 { pt3dadd( 353.257, 301.312, 37.52, 0.2288 ) }
    dend_53 { pt3dadd( 352.23, 301.099, 37.5222, 0.2288 ) }
    dend_53 { pt3dadd( 351.314, 300.507, 37.6155, 0.2542 ) }
    dend_53 { pt3dadd( 350.564, 299.674, 38.08, 0.305 ) }
    dend_53 { pt3dadd( 350.138, 298.735, 37.2411, 0.356 ) }
    dend_53 { pt3dadd( 349.395, 298.192, 37.8602, 0.356 ) }
    dend_53 { pt3dadd( 348.784, 297.265, 38.0696, 0.3304 ) }
    dend_53 { pt3dadd( 348.09, 296.384, 38.2987, 0.305 ) }
    dend_53 { pt3dadd( 347.311, 295.563, 38.1016, 0.3304 ) }
    dend_53 { pt3dadd( 346.422, 294.899, 38.054, 0.3814 ) }
    dend_53 { pt3dadd( 345.79, 294.371, 37.676, 0.4576 ) }
    dend_53 { pt3dadd( 345.043, 293.779, 37.8, 0.483 ) }
    dend_53 { pt3dadd( 344.195, 293.418, 36.9692, 0.4576 ) }
    dend_53 { pt3dadd( 343.387, 292.845, 37.1515, 0.4068 ) }
    dend_53 { pt3dadd( 342.612, 292.241, 37.3584, 0.4068 ) }
    dend_53 { pt3dadd( 341.565, 292.276, 37.7199, 0.4322 ) }
    dend_53 { pt3dadd( 340.719, 291.834, 37.9632, 0.4322 ) }
    dend_53 { pt3dadd( 340.178, 291.38, 37.3416, 0.3814 ) }
    dend_53 { pt3dadd( 339.293, 291.232, 37.6334, 0.3304 ) }
    dend_53 { pt3dadd( 338.323, 290.875, 37.562, 0.3304 ) }
    dend_53 { pt3dadd( 337.382, 290.282, 37.8778, 0.356 ) }
    dend_53 { pt3dadd( 336.328, 289.894, 37.4634, 0.3814 ) }
    dend_53 { pt3dadd( 335.421, 289.437, 36.4, 0.3814 ) }
    dend_53 { pt3dadd( 334.326, 289.318, 36.7601, 0.4068 ) }
    dend_53 { pt3dadd( 333.465, 289.089, 36.3104, 0.4068 ) }
    dend_53 { pt3dadd( 332.49, 288.86, 36.8012, 0.3814 ) }
    dend_53 { pt3dadd( 331.802, 288.653, 36.5974, 0.3304 ) }
    dend_53 { pt3dadd( 330.945, 288.609, 36.2765, 0.305 ) }
    dend_53 { pt3dadd( 330.166, 288.429, 35.0, 0.305 ) }
    dend_53 { pt3dadd( 329.042, 288.278, 35.0, 0.305 ) }
    dend_53 { pt3dadd( 328.535, 287.661, 36.2939, 0.3304 ) }
    dend_53 { pt3dadd( 327.789, 286.993, 35.537, 0.356 ) }
    dend_53 { pt3dadd( 326.86, 286.414, 35.1691, 0.3814 ) }
    dend_53 { pt3dadd( 326.38, 286.017, 36.668, 0.356 ) }
    dend_53 { pt3dadd( 325.541, 285.446, 35.9517, 0.3304 ) }
    dend_53 { pt3dadd( 324.674, 285.771, 36.1287, 0.2796 ) }
    dend_53 { pt3dadd( 323.981, 285.314, 36.12, 0.2542 ) }
    dend_53 { pt3dadd( 323.58, 284.434, 35.9719, 0.2542 ) }
    dend_53 { pt3dadd( 322.573, 283.933, 35.9719, 0.2796 ) }
    dend_53 { pt3dadd( 321.473, 283.616, 35.9719, 0.305 ) }
    dend_53 { pt3dadd( 320.422, 283.168, 35.9719, 0.2796 ) }
    dend_53 { pt3dadd( 319.395, 282.671, 35.8663, 0.2542 ) }
    dend_53 { pt3dadd( 318.403, 282.11, 35.6112, 0.2288 ) }
    dend_53 { pt3dadd( 317.411, 281.551, 35.3562, 0.2288 ) }
    dend_53 { pt3dadd( 316.418, 280.99, 35.1011, 0.2288 ) }
    dend_53 { pt3dadd( 315.426, 280.431, 34.846, 0.2288 ) }
    dend_53 { pt3dadd( 314.434, 279.87, 34.5906, 0.2288 ) }
    dend_53 { pt3dadd( 313.516, 279.202, 34.473, 0.2288 ) }
    dend_53 { pt3dadd( 312.662, 278.443, 34.473, 0.2288 ) }
    dend_53 { pt3dadd( 311.876, 277.618, 34.473, 0.2288 ) }
    dend_53 { pt3dadd( 311.189, 276.704, 34.473, 0.2288 ) }
    dend_53 { pt3dadd( 310.5, 275.79, 34.473, 0.2288 ) }
    dend_53 { pt3dadd( 309.811, 274.877, 34.473, 0.2288 ) }
    dend_53 { pt3dadd( 309.064, 274.03, 34.918, 0.2288 ) }
    dend_53 { pt3dadd( 308.315, 273.187, 35.3805, 0.2288 ) }
    dend_53 { pt3dadd( 307.565, 272.344, 35.8431, 0.2288 ) }
    dend_53 { pt3dadd( 306.691, 271.679, 36.5428, 0.2288 ) }
    dend_53 { pt3dadd( 305.77, 271.085, 37.3338, 0.2288 ) }
    dend_53 { pt3dadd( 304.847, 270.488, 38.1251, 0.2288 ) }
    dend_53 { pt3dadd( 303.925, 269.894, 38.9164, 0.2288 ) }
    dend_53 { pt3dadd( 303.003, 269.299, 39.7074, 0.2288 ) }
    dend_53 { pt3dadd( 302.074, 268.737, 40.4681, 0.2288 ) }
    dend_53 { pt3dadd( 300.965, 269.018, 40.4681, 0.2542 ) }
    dend_53 { pt3dadd( 299.841, 269.229, 40.4681, 0.2796 ) }
    dend_53 { pt3dadd( 298.703, 269.2, 40.4681, 0.3304 ) }
    dend_53 { pt3dadd( 297.567, 269.065, 40.4681, 0.3304 ) }
    dend_53 { pt3dadd( 296.436, 269.089, 40.4681, 0.3304 ) }
    dend_53 { pt3dadd( 295.557, 269.712, 40.4681, 0.2796 ) }
    dend_53 { pt3dadd( 294.507, 270.029, 40.4681, 0.2542 ) }
    dend_53 { pt3dadd( 293.405, 269.733, 40.4984, 0.2288 ) }
    dend_53 { pt3dadd( 292.341, 269.315, 40.6112, 0.2288 ) }
    dend_53 { pt3dadd( 291.278, 268.895, 40.7238, 0.2288 ) }
    dend_53 { pt3dadd( 290.215, 268.475, 40.8363, 0.2288 ) }
    dend_53 { pt3dadd( 289.152, 268.055, 40.9492, 0.2288 ) }
    dend_53 { pt3dadd( 288.089, 267.635, 41.0617, 0.2288 ) }
    dend_53 { pt3dadd( 287.025, 267.217, 41.1743, 0.2288 ) }
    dend_53 { pt3dadd( 285.962, 266.797, 41.2868, 0.2288 ) }
    dend_53 { pt3dadd( 284.898, 266.377, 41.3997, 0.2288 ) }
    dend_53 { pt3dadd( 283.825, 265.982, 41.4674, 0.2288 ) }
    dend_53 { pt3dadd( 282.738, 265.626, 41.4674, 0.2542 ) }
    dend_53 { pt3dadd( 281.632, 265.372, 41.4674, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_53 { pt3dadd( 280.502, 265.288, 41.7211, 0.3304 ) }
    dend_53 { pt3dadd( 279.381, 265.17, 42.1991, 0.3304 ) }
    dend_53 { pt3dadd( 278.26, 265.052, 42.677, 0.3814 ) }
    dend_53 { pt3dadd( 277.139, 264.934, 43.155, 0.3814 ) }
    dend_53 { pt3dadd( 276.031, 264.775, 43.7175, 0.4068 ) }
    dend_53 { pt3dadd( 274.951, 264.539, 44.4371, 0.356 ) }
    dend_53 { pt3dadd( 273.871, 264.302, 45.1567, 0.3304 ) }
    dend_53 { pt3dadd( 272.763, 264.297, 45.4644, 0.305 ) }
    dend_53 { pt3dadd( 271.631, 264.468, 45.4644, 0.2796 ) }
    dend_53 { pt3dadd( 270.508, 264.671, 45.5375, 0.2542 ) }
    dend_53 { pt3dadd( 269.407, 264.964, 45.8055, 0.2288 ) }
    dend_53 { pt3dadd( 268.307, 265.257, 46.0734, 0.2542 ) }
    dend_53 { pt3dadd( 267.206, 265.55, 46.3411, 0.3304 ) }
    dend_53 { pt3dadd( 266.106, 265.843, 46.6091, 0.4068 ) }
    dend_53 { pt3dadd( 265.007, 266.134, 46.877, 0.4576 ) }
    dend_53 { pt3dadd( 263.882, 266.321, 46.963, 0.4068 ) }
    dend_53 { pt3dadd( 262.746, 266.456, 46.963, 0.356 ) }
    dend_53 { pt3dadd( 261.655, 266.729, 47.2791, 0.2796 ) }
    dend_53 { pt3dadd( 260.599, 267.107, 47.8332, 0.2542 ) }
    dend_53 { pt3dadd( 259.543, 267.483, 48.3874, 0.2288 ) }
    dend_53 { pt3dadd( 258.487, 267.86, 48.9415, 0.2542 ) }
    dend_53 { pt3dadd( 257.4, 268.216, 48.9616, 0.2796 ) }
    dend_53 { pt3dadd( 256.287, 268.413, 48.9616, 0.305 ) }
    dend_53 { pt3dadd( 255.227, 268.163, 49.3769, 0.2796 ) }
    dend_53 { pt3dadd( 254.246, 267.673, 50.1684, 0.2796 ) }
    dend_53 { pt3dadd( 253.264, 267.182, 50.96, 0.2796 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 26/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 361.266, 306.535, 38.0724, 0.4068 ) }
    dend_52 { pt3dadd( 361.504, 305.448, 38.64, 0.305 ) }
    dend_52 { pt3dadd( 361.923, 304.345, 37.7754, 0.2796 ) }
    dend_52 { pt3dadd( 361.872, 303.25, 37.8, 0.2796 ) }
    dend_52 { pt3dadd( 361.625, 302.351, 38.6635, 0.305 ) }
    dend_52 { pt3dadd( 361.846, 301.258, 39.1051, 0.305 ) }
    dend_52 { pt3dadd( 361.933, 300.23, 38.8055, 0.305 ) }
    dend_52 { pt3dadd( 361.774, 299.268, 39.0286, 0.305 ) }
    dend_52 { pt3dadd( 361.607, 298.145, 39.2384, 0.2796 ) }
    dend_52 { pt3dadd( 361.504, 297.044, 39.9165, 0.2796 ) }
    dend_52 { pt3dadd( 361.602, 296.029, 40.3066, 0.305 ) }
    dend_52 { pt3dadd( 361.883, 294.949, 40.7123, 0.356 ) }
    dend_52 { pt3dadd( 362.076, 293.984, 41.44, 0.356 ) }
    dend_52 { pt3dadd( 362.149, 292.848, 41.5699, 0.305 ) }
    dend_52 { pt3dadd( 362.234, 291.774, 42.3108, 0.2796 ) }
    dend_52 { pt3dadd( 361.841, 290.775, 42.8246, 0.305 ) }
    dend_52 { pt3dadd( 361.733, 289.987, 44.2347, 0.356 ) }
    dend_52 { pt3dadd( 361.464, 289.044, 44.039, 0.356 ) }
    dend_52 { pt3dadd( 361.271, 288.285, 44.8, 0.3304 ) }
    dend_52 { pt3dadd( 361.29, 287.154, 45.0769, 0.305 ) }
    dend_52 { pt3dadd( 362.165, 286.49, 44.9319, 0.305 ) }
    dend_52 { pt3dadd( 362.725, 285.732, 45.5372, 0.305 ) }
    dend_52 { pt3dadd( 362.941, 284.79, 45.1861, 0.305 ) }
    dend_52 { pt3dadd( 363.591, 284.698, 46.48, 0.305 ) }
    dend_52 { pt3dadd( 364.151, 284.139, 45.5988, 0.305 ) }
    dend_52 { pt3dadd( 364.25, 283.09, 46.3557, 0.3304 ) }
    dend_52 { pt3dadd( 364.478, 282.574, 48.519, 0.3814 ) }
    dend_52 { pt3dadd( 364.68, 281.503, 48.9028, 0.4068 ) }
    dend_52 { pt3dadd( 364.876, 280.536, 49.8764, 0.3814 ) }
    dend_52 { pt3dadd( 365.337, 279.541, 50.12, 0.305 ) }
    dend_52 { pt3dadd( 365.286, 278.484, 50.4431, 0.2542 ) }
    dend_52 { pt3dadd( 365.508, 277.395, 50.6167, 0.2288 ) }
    dend_52 { pt3dadd( 365.357, 276.339, 50.68, 0.2288 ) }
    dend_52 { pt3dadd( 365.402, 275.329, 51.2336, 0.2288 ) }
    dend_52 { pt3dadd( 365.394, 274.186, 51.3136, 0.2542 ) }
    dend_52 { pt3dadd( 365.346, 273.065, 51.751, 0.2796 ) }
    dend_52 { pt3dadd( 365.086, 271.978, 52.1002, 0.305 ) }
    dend_52 { pt3dadd( 364.593, 271.078, 52.8377, 0.2796 ) }
    dend_52 { pt3dadd( 364.593, 269.96, 53.2, 0.2542 ) }
    dend_52 { pt3dadd( 364.593, 268.816, 53.2, 0.2288 ) }
    dend_52 { pt3dadd( 364.52, 267.72, 53.5539, 0.2288 ) }
    dend_52 { pt3dadd( 363.792, 267.209, 53.76, 0.2288 ) }
    dend_52 { pt3dadd( 363.461, 266.233, 53.9689, 0.2288 ) }
    dend_52 { pt3dadd( 363.668, 265.304, 54.4695, 0.2288 ) }
    dend_52 { pt3dadd( 363.996, 264.247, 54.1229, 0.2288 ) }
    dend_52 { pt3dadd( 364.47, 263.343, 54.2615, 0.2542 ) }
    dend_52 { pt3dadd( 363.794, 262.553, 53.76, 0.305 ) }
    dend_52 { pt3dadd( 363.792, 261.899, 54.3976, 0.3814 ) }
    dend_52 { pt3dadd( 364.23, 261.165, 55.1886, 0.4322 ) }
    dend_52 { pt3dadd( 364.81, 260.544, 54.2914, 0.4322 ) }
    dend_52 { pt3dadd( 365.418, 259.922, 54.3528, 0.3814 ) }
    dend_52 { pt3dadd( 366.184, 259.139, 54.4897, 0.305 ) }
    dend_52 { pt3dadd( 366.79, 258.312, 54.192, 0.2796 ) }
    dend_52 { pt3dadd( 367.544, 257.545, 54.5465, 0.2796 ) }
    dend_52 { pt3dadd( 368.227, 256.828, 54.0159, 0.3304 ) }
    dend_52 { pt3dadd( 369.057, 256.559, 54.4076, 0.356 ) }
    dend_52 { pt3dadd( 369.854, 256.082, 54.5678, 0.3814 ) }
    dend_52 { pt3dadd( 370.793, 255.748, 54.3413, 0.356 ) }
    dend_52 { pt3dadd( 371.61, 255.109, 55.13, 0.305 ) }
    dend_52 { pt3dadd( 372.289, 254.581, 54.3791, 0.2796 ) }
    dend_52 { pt3dadd( 372.938, 254.177, 54.8355, 0.2796 ) }
    dend_52 { pt3dadd( 373.637, 253.569, 55.631, 0.305 ) }
    dend_52 { pt3dadd( 374.241, 252.743, 55.5422, 0.305 ) }
    dend_52 { pt3dadd( 374.889, 251.909, 55.44, 0.356 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 90/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 418.487, 262.35, 37.394, 0.5084 ) }
    dend_44 { pt3dadd( 417.732, 262.143, 37.0471, 0.4576 ) }
    dend_44 { pt3dadd( 416.795, 261.737, 36.68, 0.4576 ) }
    dend_44 { pt3dadd( 415.914, 261.404, 35.84, 0.4322 ) }
    dend_44 { pt3dadd( 414.838, 261.1, 36.12, 0.4068 ) }
    dend_44 { pt3dadd( 413.742, 260.807, 36.1421, 0.4576 ) }
    dend_44 { pt3dadd( 412.777, 260.404, 36.4843, 0.5084 ) }
    dend_44 { pt3dadd( 412.047, 259.617, 36.9902, 0.5084 ) }
    dend_44 { pt3dadd( 411.165, 259.266, 37.5306, 0.4576 ) }
    dend_44 { pt3dadd( 410.339, 258.784, 36.9687, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_44 { pt3dadd( 409.49, 258.295, 38.0769, 0.3304 ) }
    dend_44 { pt3dadd( 408.868, 257.496, 37.8, 0.3304 ) }
    dend_44 { pt3dadd( 408.098, 256.844, 38.1732, 0.356 ) }
    dend_44 { pt3dadd( 407.876, 255.858, 38.08, 0.3814 ) }
    dend_44 { pt3dadd( 407.242, 255.162, 37.3562, 0.3814 ) }
    dend_44 { pt3dadd( 406.773, 254.167, 37.2635, 0.4322 ) }
    dend_44 { pt3dadd( 406.19, 253.618, 38.974, 0.483 ) }
    dend_44 { pt3dadd( 405.803, 252.801, 38.5053, 0.5338 ) }
    dend_44 { pt3dadd( 405.335, 251.967, 38.2228, 0.5084 ) }
    dend_44 { pt3dadd( 405.098, 250.957, 38.477, 0.4576 ) }
    dend_44 { pt3dadd( 404.725, 249.909, 38.61, 0.4068 ) }
    dend_44 { pt3dadd( 404.175, 249.163, 38.92, 0.356 ) }
    dend_44 { pt3dadd( 404.31, 248.936, 40.0632, 0.356 ) }
    dend_44 { pt3dadd( 404.518, 247.937, 41.0603, 0.3814 ) }
    dend_44 { pt3dadd( 404.146, 247.283, 41.16, 0.4576 ) }
    dend_44 { pt3dadd( 403.764, 246.394, 40.364, 0.483 ) }
    dend_44 { pt3dadd( 403.152, 245.58, 40.416, 0.4576 ) }
    dend_44 { pt3dadd( 402.932, 244.589, 40.6571, 0.4068 ) }
    dend_44 { pt3dadd( 402.456, 243.717, 41.0668, 0.4068 ) }
    dend_44 { pt3dadd( 401.804, 242.888, 40.6, 0.4322 ) }
    dend_44 { pt3dadd( 401.19, 242.094, 40.2094, 0.4322 ) }
    dend_44 { pt3dadd( 400.616, 241.438, 39.4654, 0.4068 ) }
    dend_44 { pt3dadd( 399.845, 241.062, 40.6, 0.3814 ) }
    dend_44 { pt3dadd( 399.326, 240.456, 41.16, 0.3814 ) }
    dend_44 { pt3dadd( 399.107, 239.689, 39.7939, 0.3814 ) }
    dend_44 { pt3dadd( 398.914, 238.964, 39.48, 0.356 ) }
    dend_44 { pt3dadd( 398.449, 238.756, 38.4768, 0.356 ) }
    dend_44 { pt3dadd( 397.835, 238.149, 39.9148, 0.356 ) }
    dend_44 { pt3dadd( 397.342, 237.32, 40.7672, 0.4068 ) }
    dend_44 { pt3dadd( 396.626, 236.764, 41.249, 0.4322 ) }
    dend_44 { pt3dadd( 396.014, 236.054, 41.6018, 0.4576 ) }
    dend_44 { pt3dadd( 395.203, 235.336, 40.9786, 0.4576 ) }
    dend_44 { pt3dadd( 394.57, 234.948, 42.5216, 0.4322 ) }
    dend_44 { pt3dadd( 393.679, 234.324, 42.6258, 0.4068 ) }
    dend_44 { pt3dadd( 393.132, 233.522, 42.56, 0.356 ) }
    dend_44 { pt3dadd( 392.355, 233.036, 43.377, 0.3304 ) }
    dend_44 { pt3dadd( 391.448, 232.854, 42.8971, 0.3304 ) }
    dend_44 { pt3dadd( 390.562, 232.575, 42.84, 0.356 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 38/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 418.487, 262.35, 37.394, 0.5084 ) }
    dend_43 { pt3dadd( 418.552, 261.238, 36.8068, 0.3814 ) }
    dend_43 { pt3dadd( 418.797, 260.141, 36.4832, 0.3814 ) }
    dend_43 { pt3dadd( 418.929, 259.015, 36.6139, 0.4068 ) }
    dend_43 { pt3dadd( 418.983, 257.927, 37.3901, 0.483 ) }
    dend_43 { pt3dadd( 419.212, 256.877, 38.3057, 0.5848 ) }
    dend_43 { pt3dadd( 419.552, 255.803, 38.6333, 0.6864 ) }
    dend_43 { pt3dadd( 419.919, 254.721, 38.7607, 0.7372 ) }
    dend_43 { pt3dadd( 420.445, 253.751, 39.37, 0.6864 ) }
    dend_43 { pt3dadd( 420.883, 252.714, 39.5643, 0.5592 ) }
    dend_43 { pt3dadd( 421.237, 251.663, 38.9673, 0.3814 ) }
    dend_43 { pt3dadd( 421.613, 250.606, 39.1168, 0.3304 ) }
    dend_43 { pt3dadd( 422.105, 249.589, 38.8993, 0.3304 ) }
    dend_43 { pt3dadd( 422.661, 248.594, 38.7192, 0.4068 ) }
    dend_43 { pt3dadd( 423.283, 247.638, 38.8847, 0.4068 ) }
    dend_43 { pt3dadd( 423.78, 246.618, 39.1992, 0.4322 ) }
    dend_43 { pt3dadd( 423.955, 245.509, 38.8503, 0.4068 ) }
    dend_43 { pt3dadd( 424.022, 244.421, 39.5436, 0.3814 ) }
    dend_43 { pt3dadd( 424.304, 243.325, 39.8196, 0.3304 ) }
    dend_43 { pt3dadd( 424.513, 242.217, 40.2657, 0.3304 ) }
    dend_43 { pt3dadd( 424.832, 241.124, 40.1072, 0.3814 ) }
    dend_43 { pt3dadd( 424.973, 239.999, 39.7858, 0.4322 ) }
    dend_43 { pt3dadd( 425.297, 238.904, 39.76, 0.4322 ) }
    dend_43 { pt3dadd( 425.533, 237.785, 39.76, 0.3814 ) }
    dend_43 { pt3dadd( 425.784, 236.668, 39.7597, 0.3304 ) }
    dend_43 { pt3dadd( 425.835, 235.527, 39.7589, 0.356 ) }
    dend_43 { pt3dadd( 426.056, 234.406, 39.753, 0.4068 ) }
    dend_43 { pt3dadd( 426.241, 233.277, 39.7099, 0.4576 ) }
    dend_43 { pt3dadd( 426.226, 232.143, 39.3546, 0.4068 ) }
    dend_43 { pt3dadd( 426.019, 231.02, 39.4769, 0.356 ) }
    dend_43 { pt3dadd( 425.339, 230.173, 38.64, 0.2796 ) }
    dend_43 { pt3dadd( 424.933, 229.122, 39.0603, 0.2288 ) }
    dend_43 { pt3dadd( 424.775, 228.337, 39.8986, 0.2542 ) }
    dend_43 { pt3dadd( 424.767, 227.346, 39.1031, 0.305 ) }
    dend_43 { pt3dadd( 425.086, 226.294, 39.023, 0.3814 ) }
    dend_43 { pt3dadd( 425.545, 225.32, 39.0152, 0.4322 ) }
    dend_43 { pt3dadd( 425.34, 224.373, 39.1009, 0.4576 ) }
    dend_43 { pt3dadd( 425.554, 223.461, 38.9827, 0.4322 ) }
    dend_43 { pt3dadd( 425.266, 222.664, 38.5039, 0.4068 ) }
    dend_43 { pt3dadd( 425.526, 221.622, 38.2404, 0.356 ) }
    dend_43 { pt3dadd( 426.004, 220.827, 37.6894, 0.3304 ) }
    dend_43 { pt3dadd( 425.581, 219.91, 37.8, 0.305 ) }
    dend_43 { pt3dadd( 425.697, 218.915, 36.6934, 0.3304 ) }
    dend_43 { pt3dadd( 426.018, 217.91, 36.6962, 0.3814 ) }
    dend_43 { pt3dadd( 426.108, 216.875, 37.1235, 0.4322 ) }
    dend_43 { pt3dadd( 426.483, 215.927, 36.4, 0.4322 ) }
    dend_43 { pt3dadd( 426.658, 214.819, 36.5879, 0.4576 ) }
    dend_43 { pt3dadd( 426.536, 213.711, 36.3852, 0.5338 ) }
    dend_43 { pt3dadd( 426.344, 212.739, 37.4956, 0.661 ) }
    dend_43 { pt3dadd( 425.899, 211.637, 37.359, 0.6864 ) }
    dend_43 { pt3dadd( 425.717, 210.521, 36.9328, 0.6356 ) }
    dend_43 { pt3dadd( 425.397, 209.439, 36.4756, 0.6102 ) }
    dend_43 { pt3dadd( 425.042, 208.372, 36.2306, 0.5848 ) }
    dend_43 { pt3dadd( 425.227, 207.285, 35.5009, 0.5592 ) }
    dend_43 { pt3dadd( 425.251, 206.159, 35.1008, 0.483 ) }
    dend_43 { pt3dadd( 425.074, 205.081, 34.4008, 0.4068 ) }
    dend_43 { pt3dadd( 425.118, 204.102, 33.0033, 0.305 ) }
    dend_43 { pt3dadd( 424.9, 203.142, 31.9684, 0.2542 ) }
    dend_43 { pt3dadd( 424.876, 202.059, 32.8471, 0.2542 ) }
    dend_43 { pt3dadd( 424.848, 200.994, 33.6958, 0.305 ) }
    dend_43 { pt3dadd( 424.708, 199.874, 33.4466, 0.356 ) }
    dend_43 { pt3dadd( 424.47, 198.785, 32.8924, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_43 { pt3dadd( 424.419, 197.654, 32.8174, 0.4068 ) }
    dend_43 { pt3dadd( 424.392, 196.538, 33.4124, 0.4322 ) }
    dend_43 { pt3dadd( 424.225, 195.472, 34.2597, 0.3814 ) }
    dend_43 { pt3dadd( 423.885, 194.432, 34.6097, 0.4068 ) }
    dend_43 { pt3dadd( 423.604, 193.343, 34.2056, 0.4322 ) }
    dend_43 { pt3dadd( 423.257, 192.254, 34.239, 0.5338 ) }
    dend_43 { pt3dadd( 423.039, 191.159, 34.732, 0.5592 ) }
    dend_43 { pt3dadd( 422.838, 190.073, 35.4581, 0.5592 ) }
    dend_43 { pt3dadd( 422.604, 188.996, 36.1427, 0.5084 ) }
    dend_43 { pt3dadd( 422.596, 187.859, 35.9117, 0.5084 ) }
    dend_43 { pt3dadd( 422.608, 186.765, 35.0946, 0.5084 ) }
    dend_43 { pt3dadd( 422.686, 185.653, 34.615, 0.5338 ) }
    dend_43 { pt3dadd( 422.966, 184.567, 35.0549, 0.5338 ) }
    dend_43 { pt3dadd( 423.208, 183.477, 34.5514, 0.5338 ) }
    dend_43 { pt3dadd( 423.78, 182.502, 34.1597, 0.5338 ) }
    dend_43 { pt3dadd( 424.316, 181.499, 34.1589, 0.5084 ) }
    dend_43 { pt3dadd( 424.648, 180.409, 34.1519, 0.4576 ) }
    dend_43 { pt3dadd( 425.194, 179.404, 34.1174, 0.4068 ) }
    dend_43 { pt3dadd( 425.708, 178.411, 33.9058, 0.4068 ) }
    dend_43 { pt3dadd( 425.8, 177.309, 33.2116, 0.4576 ) }
    dend_43 { pt3dadd( 425.809, 176.212, 32.4134, 0.5338 ) }
    dend_43 { pt3dadd( 425.883, 175.073, 32.5069, 0.5338 ) }
    dend_43 { pt3dadd( 426.176, 174.007, 33.1761, 0.483 ) }
    dend_43 { pt3dadd( 426.285, 172.886, 33.6406, 0.3814 ) }
    dend_43 { pt3dadd( 426.49, 171.779, 33.224, 0.3304 ) }
    dend_43 { pt3dadd( 426.706, 170.684, 33.7968, 0.2796 ) }
    dend_43 { pt3dadd( 426.728, 169.57, 34.433, 0.2796 ) }
    dend_43 { pt3dadd( 426.805, 168.433, 34.2871, 0.305 ) }
    dend_43 { pt3dadd( 427.04, 167.316, 34.1256, 0.3814 ) }
    dend_43 { pt3dadd( 426.683, 166.234, 33.9354, 0.4068 ) }
    dend_43 { pt3dadd( 426.261, 165.282, 32.821, 0.3814 ) }
    dend_43 { pt3dadd( 426.051, 164.816, 30.6816, 0.3304 ) }
    dend_43 { pt3dadd( 426.313, 164.688, 33.3794, 0.3304 ) }
    dend_43 { pt3dadd( 426.366, 163.649, 33.889, 0.3814 ) }
    dend_43 { pt3dadd( 426.593, 162.573, 33.1377, 0.4322 ) }
    dend_43 { pt3dadd( 426.828, 161.455, 33.028, 0.4322 ) }
    dend_43 { pt3dadd( 427.242, 160.389, 32.9627, 0.3814 ) }
    dend_43 { pt3dadd( 427.608, 159.443, 32.8401, 0.356 ) }
    dend_43 { pt3dadd( 427.975, 158.367, 33.0246, 0.4068 ) }
    dend_43 { pt3dadd( 428.165, 157.257, 33.4872, 0.5084 ) }
    dend_43 { pt3dadd( 428.627, 156.218, 33.3194, 0.5848 ) }
    dend_43 { pt3dadd( 429.317, 155.356, 34.02, 0.5848 ) }
    dend_43 { pt3dadd( 429.816, 154.335, 34.3216, 0.5848 ) }
    dend_43 { pt3dadd( 430.183, 153.286, 34.9807, 0.5592 ) }
    dend_43 { pt3dadd( 430.714, 152.273, 34.9653, 0.5592 ) }
    dend_43 { pt3dadd( 430.582, 151.963, 35.8305, 0.483 ) }
    dend_43 { pt3dadd( 430.721, 150.973, 36.0108, 0.4322 ) }
    dend_43 { pt3dadd( 430.729, 149.993, 37.2159, 0.3814 ) }
    dend_43 { pt3dadd( 431.059, 149.199, 37.4732, 0.3814 ) }
    dend_43 { pt3dadd( 430.604, 148.432, 37.8798, 0.3814 ) }
    dend_43 { pt3dadd( 430.711, 147.587, 37.6799, 0.356 ) }
    dend_43 { pt3dadd( 431.067, 146.878, 36.7234, 0.3304 ) }
    dend_43 { pt3dadd( 431.26, 146.432, 37.8302, 0.305 ) }
    dend_43 { pt3dadd( 431.383, 145.981, 40.0789, 0.3304 ) }
    dend_43 { pt3dadd( 430.578, 145.488, 40.5734, 0.3814 ) }
    dend_43 { pt3dadd( 430.455, 144.51, 41.2899, 0.4068 ) }
    dend_43 { pt3dadd( 430.453, 143.705, 42.6975, 0.4322 ) }
    dend_43 { pt3dadd( 430.608, 143.083, 43.2888, 0.4322 ) }
    dend_43 { pt3dadd( 430.411, 142.316, 44.52, 0.483 ) }
    dend_43 { pt3dadd( 430.057, 141.727, 43.4039, 0.4576 ) }
    dend_43 { pt3dadd( 429.872, 140.785, 42.6569, 0.4322 ) }
    dend_43 { pt3dadd( 429.591, 139.698, 42.56, 0.3814 ) }
    dend_43 { pt3dadd( 429.634, 138.991, 42.8042, 0.3814 ) }
    dend_43 { pt3dadd( 429.744, 138.232, 43.68, 0.3814 ) }
    dend_43 { pt3dadd( 429.572, 137.27, 44.6418, 0.356 ) }
    dend_43 { pt3dadd( 429.27, 136.199, 44.3708, 0.3304 ) }
    dend_43 { pt3dadd( 429.343, 135.335, 44.8, 0.305 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 429.305, 285.784, 20.7183, 0.5592 ) }
    dend_24 { pt3dadd( 429.628, 284.98, 20.958, 0.483 ) }
    dend_24 { pt3dadd( 430.406, 284.195, 21.6191, 0.483 ) }
    dend_24 { pt3dadd( 430.895, 283.188, 21.2481, 0.483 ) }
    dend_24 { pt3dadd( 431.253, 282.122, 20.7404, 0.4576 ) }
    dend_24 { pt3dadd( 431.486, 281.003, 20.6791, 0.5084 ) }
    dend_24 { pt3dadd( 431.732, 279.889, 20.4856, 0.5592 ) }
    dend_24 { pt3dadd( 431.738, 278.776, 19.8568, 0.5848 ) }
    dend_24 { pt3dadd( 431.687, 277.703, 20.7718, 0.5084 ) }
    dend_24 { pt3dadd( 432.105, 277.148, 20.7315, 0.4322 ) }
    dend_24 { pt3dadd( 432.519, 276.091, 20.7234, 0.4068 ) }
    dend_24 { pt3dadd( 432.744, 274.971, 20.7416, 0.4576 ) }
    dend_24 { pt3dadd( 433.06, 273.874, 20.862, 0.5338 ) }
    dend_24 { pt3dadd( 433.241, 272.771, 21.3948, 0.5592 ) }
    dend_24 { pt3dadd( 433.526, 271.701, 22.0718, 0.5592 ) }
    dend_24 { pt3dadd( 433.489, 270.575, 22.3978, 0.5084 ) }
    dend_24 { pt3dadd( 433.147, 269.513, 22.7576, 0.483 ) }
    dend_24 { pt3dadd( 432.974, 268.412, 22.9538, 0.4576 ) }
    dend_24 { pt3dadd( 433.041, 267.272, 22.9692, 0.4322 ) }
    dend_24 { pt3dadd( 432.891, 266.151, 23.0182, 0.3814 ) }
    dend_24 { pt3dadd( 432.702, 265.035, 23.3803, 0.3304 ) }
    dend_24 { pt3dadd( 432.644, 263.951, 24.2136, 0.3304 ) }
    dend_24 { pt3dadd( 432.535, 262.834, 24.3852, 0.3814 ) }
    dend_24 { pt3dadd( 432.294, 261.74, 24.808, 0.4576 ) }
    dend_24 { pt3dadd( 432.214, 260.616, 25.142, 0.483 ) }
    dend_24 { pt3dadd( 432.24, 259.473, 25.2, 0.4576 ) }
    dend_24 { pt3dadd( 432.447, 258.352, 25.2, 0.3814 ) }
    dend_24 { pt3dadd( 432.7, 257.238, 25.2, 0.356 ) }
    dend_24 { pt3dadd( 432.986, 256.132, 25.2003, 0.3814 ) }
    dend_24 { pt3dadd( 433.338, 255.044, 25.2008, 0.4322 ) }
    dend_24 { pt3dadd( 433.543, 253.927, 25.2059, 0.4322 ) }
    dend_24 { pt3dadd( 433.575, 252.784, 25.2412, 0.4068 ) }
    dend_24 { pt3dadd( 433.565, 251.645, 25.4318, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_24 { pt3dadd( 433.505, 250.511, 25.4332, 0.3814 ) }
    dend_24 { pt3dadd( 433.24, 249.416, 25.3596, 0.356 ) }
    dend_24 { pt3dadd( 432.846, 248.401, 26.0476, 0.305 ) }
    dend_24 { pt3dadd( 432.564, 247.435, 27.3588, 0.2796 ) }
    dend_24 { pt3dadd( 432.521, 246.641, 26.3953, 0.305 ) }
    dend_24 { pt3dadd( 432.275, 245.681, 25.3417, 0.3814 ) }
    dend_24 { pt3dadd( 431.847, 244.627, 25.1994, 0.4322 ) }
    dend_24 { pt3dadd( 431.476, 243.547, 25.1972, 0.4576 ) }
    dend_24 { pt3dadd( 431.216, 242.434, 25.181, 0.4576 ) }
    dend_24 { pt3dadd( 430.827, 241.362, 25.0883, 0.4576 ) }
    dend_24 { pt3dadd( 430.357, 240.342, 24.5986, 0.4322 ) }
    dend_24 { pt3dadd( 429.993, 239.265, 24.4742, 0.4068 ) }
    dend_24 { pt3dadd( 429.891, 238.133, 24.3751, 0.3814 ) }
    dend_24 { pt3dadd( 429.726, 237.02, 23.9078, 0.3814 ) }
    dend_24 { pt3dadd( 429.27, 235.981, 24.0646, 0.3814 ) }
    dend_24 { pt3dadd( 428.755, 234.96, 24.1284, 0.4068 ) }
    dend_24 { pt3dadd( 428.258, 233.934, 24.3471, 0.4576 ) }
    dend_24 { pt3dadd( 427.827, 232.917, 25.0558, 0.483 ) }
    dend_24 { pt3dadd( 427.31, 231.908, 24.8147, 0.4576 ) }
    dend_24 { pt3dadd( 427.094, 230.804, 24.3608, 0.3814 ) }
    dend_24 { pt3dadd( 427.029, 229.689, 24.9049, 0.3304 ) }
    dend_24 { pt3dadd( 427.055, 228.548, 25.0334, 0.2796 ) }
    dend_24 { pt3dadd( 426.691, 227.473, 25.1894, 0.2796 ) }
    dend_24 { pt3dadd( 426.126, 226.48, 25.2095, 0.2796 ) }
    dend_24 { pt3dadd( 425.804, 225.384, 25.289, 0.305 ) }
    dend_24 { pt3dadd( 425.798, 224.262, 25.8171, 0.305 ) }
    dend_24 { pt3dadd( 425.805, 223.12, 25.9619, 0.3304 ) }
    dend_24 { pt3dadd( 425.851, 221.993, 26.4337, 0.4068 ) }
    dend_24 { pt3dadd( 426.146, 221.052, 27.0236, 0.483 ) }
    dend_24 { pt3dadd( 426.004, 219.943, 26.6101, 0.5338 ) }
    dend_24 { pt3dadd( 425.51, 218.946, 27.1723, 0.5084 ) }
    dend_24 { pt3dadd( 424.928, 217.964, 27.3588, 0.483 ) }
    dend_24 { pt3dadd( 424.512, 216.914, 26.9497, 0.4576 ) }
    dend_24 { pt3dadd( 424.064, 216.033, 25.5475, 0.4576 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 34/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 429.305, 285.784, 20.7183, 0.5592 ) }
    dend_19 { pt3dadd( 428.5, 284.464, 20.6954, 0.3814 ) }
    dend_19 { pt3dadd( 427.702, 283.649, 20.5383, 0.3304 ) }
    dend_19 { pt3dadd( 426.934, 282.871, 19.7798, 0.305 ) }
    dend_19 { pt3dadd( 426.506, 282.021, 18.2428, 0.3304 ) }
    // Section: dend_14, id: dend_14, parent: dend_4 (entry count 39/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 464.581, 273.125, 32.6203, 0.356 ) }
    dend_14 { pt3dadd( 465.417, 272.684, 33.021, 0.2796 ) }
    dend_14 { pt3dadd( 466.026, 272.164, 33.04, 0.3304 ) }
    dend_14 { pt3dadd( 466.638, 271.531, 33.605, 0.3814 ) }
    dend_14 { pt3dadd( 467.198, 270.923, 32.5744, 0.483 ) }
    dend_14 { pt3dadd( 468.165, 270.553, 32.2213, 0.5848 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 45/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 464.581, 273.125, 32.6203, 0.356 ) }
    dend_5 { pt3dadd( 465.053, 273.135, 31.08, 0.356 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 424.064, 216.033, 25.5475, 0.4576 ) }
    dend_28 { pt3dadd( 424.107, 215.833, 24.3712, 0.4576 ) }
    dend_28 { pt3dadd( 424.084, 215.31, 22.0825, 0.483 ) }
    dend_28 { pt3dadd( 423.512, 214.417, 21.0482, 0.483 ) }
    dend_28 { pt3dadd( 422.88, 213.621, 20.1555, 0.483 ) }
    dend_28 { pt3dadd( 422.079, 212.837, 20.5408, 0.5338 ) }
    dend_28 { pt3dadd( 421.245, 212.093, 20.1513, 0.5592 ) }
    dend_28 { pt3dadd( 420.363, 211.391, 19.7112, 0.5592 ) }
    dend_28 { pt3dadd( 419.514, 210.629, 19.6241, 0.5084 ) }
    dend_28 { pt3dadd( 418.667, 209.86, 19.7089, 0.483 ) }
    dend_28 { pt3dadd( 417.844, 209.09, 20.1188, 0.4322 ) }
    dend_28 { pt3dadd( 416.982, 208.375, 19.9044, 0.4322 ) }
    dend_28 { pt3dadd( 416.221, 207.542, 19.6277, 0.4576 ) }
    dend_28 { pt3dadd( 415.502, 206.654, 19.549, 0.5592 ) }
    dend_28 { pt3dadd( 414.719, 205.825, 19.3852, 0.6102 ) }
    dend_28 { pt3dadd( 413.93, 205.039, 18.7944, 0.5848 ) }
    dend_28 { pt3dadd( 413.136, 204.261, 18.1499, 0.5084 ) }
    dend_28 { pt3dadd( 412.318, 203.519, 18.475, 0.5084 ) }
    dend_28 { pt3dadd( 411.599, 202.701, 19.299, 0.5848 ) }
    dend_28 { pt3dadd( 410.933, 201.79, 19.586, 0.5848 ) }
    dend_28 { pt3dadd( 410.124, 200.992, 19.598, 0.5084 ) }
    dend_28 { pt3dadd( 409.241, 200.264, 19.5916, 0.4068 ) }
    dend_28 { pt3dadd( 408.433, 199.459, 19.5636, 0.3814 ) }
    dend_28 { pt3dadd( 407.767, 198.536, 19.4048, 0.356 ) }
    dend_28 { pt3dadd( 407.167, 197.586, 18.9115, 0.356 ) }
    dend_28 { pt3dadd( 406.616, 196.63, 19.3253, 0.356 ) }
    dend_28 { pt3dadd( 405.994, 195.687, 19.3886, 0.3814 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 74/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 424.064, 216.033, 25.5475, 0.4576 ) }
    dend_25 { pt3dadd( 424.206, 215.542, 26.2909, 0.3304 ) }
    dend_25 { pt3dadd( 424.357, 214.421, 25.725, 0.356 ) }
    dend_25 { pt3dadd( 423.946, 213.446, 25.1367, 0.3814 ) }
    dend_25 { pt3dadd( 423.455, 212.524, 25.8916, 0.483 ) }
    dend_25 { pt3dadd( 423.162, 211.507, 26.8976, 0.6102 ) }
    dend_25 { pt3dadd( 423.01, 210.395, 27.1897, 0.661 ) }
    dend_25 { pt3dadd( 422.757, 209.29, 27.3157, 0.661 ) }
    dend_25 { pt3dadd( 422.641, 208.256, 28.2864, 0.5592 ) }
    dend_25 { pt3dadd( 422.899, 207.395, 27.2034, 0.5338 ) }
    dend_25 { pt3dadd( 422.832, 206.327, 27.1603, 0.483 ) }
    dend_25 { pt3dadd( 422.29, 205.359, 27.8099, 0.4576 ) }
    dend_25 { pt3dadd( 421.945, 204.294, 28.3665, 0.4068 ) }
    dend_25 { pt3dadd( 422.048, 203.247, 27.3277, 0.3814 ) }
    dend_25 { pt3dadd( 421.966, 202.195, 26.3276, 0.4576 ) }
    dend_25 { pt3dadd( 421.524, 201.14, 26.3194, 0.5848 ) }
    dend_25 { pt3dadd( 421.168, 200.054, 26.3166, 0.7118 ) }
    dend_25 { pt3dadd( 420.887, 198.945, 26.2948, 0.7118 ) }
    dend_25 { pt3dadd( 420.644, 197.827, 26.1859, 0.5848 ) }
    dend_25 { pt3dadd( 420.105, 196.874, 25.4142, 0.4322 ) }
    dend_25 { pt3dadd( 419.782, 195.796, 24.9385, 0.356 ) }
    dend_25 { pt3dadd( 419.454, 194.706, 24.6646, 0.3814 ) }
    dend_25 { pt3dadd( 419.123, 193.646, 25.3361, 0.483 ) }
    dend_25 { pt3dadd( 418.892, 192.58, 26.1716, 0.5592 ) }
    dend_25 { pt3dadd( 418.604, 191.558, 27.1365, 0.661 ) }
    dend_25 { pt3dadd( 418.411, 190.459, 26.5359, 0.7372 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_25 { pt3dadd( 418.161, 189.347, 26.318, 0.788 ) }
    dend_25 { pt3dadd( 418.028, 188.214, 26.3054, 0.7118 ) }
    dend_25 { pt3dadd( 418.003, 187.072, 26.2408, 0.5848 ) }
    dend_25 { pt3dadd( 417.924, 185.938, 26.1167, 0.483 ) }
    dend_25 { pt3dadd( 417.704, 184.875, 26.9366, 0.483 ) }
    dend_25 { pt3dadd( 417.899, 183.764, 27.2689, 0.4576 ) }
    dend_25 { pt3dadd( 418.09, 182.675, 26.5933, 0.4322 ) }
    dend_25 { pt3dadd( 418.315, 181.655, 25.5948, 0.3814 ) }
    dend_25 { pt3dadd( 418.582, 180.554, 25.8042, 0.4068 ) }
    dend_25 { pt3dadd( 418.504, 179.466, 25.2798, 0.4576 ) }
    dend_25 { pt3dadd( 418.115, 178.513, 25.0152, 0.483 ) }
    dend_25 { pt3dadd( 417.896, 177.576, 26.5303, 0.4576 ) }
    dend_25 { pt3dadd( 417.804, 176.563, 27.6545, 0.3814 ) }
    dend_25 { pt3dadd( 417.782, 175.461, 28.301, 0.3814 ) }
    dend_25 { pt3dadd( 417.442, 174.415, 28.9713, 0.4322 ) }
    dend_25 { pt3dadd( 417.129, 173.353, 29.6562, 0.483 ) }
    dend_25 { pt3dadd( 417.235, 172.218, 29.6853, 0.483 ) }
    dend_25 { pt3dadd( 417.074, 171.086, 29.7139, 0.4576 ) }
    dend_25 { pt3dadd( 416.707, 170.005, 29.8852, 0.4576 ) }
    dend_25 { pt3dadd( 416.351, 168.96, 30.6113, 0.4322 ) }
    dend_25 { pt3dadd( 415.945, 167.893, 30.7947, 0.4322 ) }
    dend_25 { pt3dadd( 415.242, 166.991, 30.7787, 0.483 ) }
    dend_25 { pt3dadd( 414.333, 165.706, 31.2502, 0.6864 ) }
    dend_25 { pt3dadd( 413.479, 164.352, 30.24, 0.5848 ) }
    dend_25 { pt3dadd( 413.161, 163.298, 30.5542, 0.5338 ) }
    dend_25 { pt3dadd( 412.817, 162.457, 31.89, 0.5084 ) }
    dend_25 { pt3dadd( 412.159, 161.76, 30.7751, 0.5338 ) }
    dend_25 { pt3dadd( 411.668, 161.12, 30.8039, 0.5084 ) }
    dend_25 { pt3dadd( 411.057, 160.396, 30.8686, 0.483 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 29/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 426.506, 282.021, 18.2428, 0.3304 ) }
    dend_23 { pt3dadd( 426.695, 282.14, 17.4863, 0.4322 ) }
    dend_23 { pt3dadd( 426.142, 281.263, 16.3072, 0.3814 ) }
    dend_23 { pt3dadd( 425.918, 280.194, 15.9874, 0.3304 ) }
    dend_23 { pt3dadd( 425.817, 279.055, 15.9874, 0.305 ) }
    dend_23 { pt3dadd( 425.799, 277.913, 15.9874, 0.305 ) }
    dend_23 { pt3dadd( 425.846, 276.77, 15.9874, 0.305 ) }
    dend_23 { pt3dadd( 425.886, 275.627, 15.9874, 0.3304 ) }
    dend_23 { pt3dadd( 425.78, 274.488, 15.9874, 0.4068 ) }
    dend_23 { pt3dadd( 425.341, 273.452, 15.9874, 0.4576 ) }
    dend_23 { pt3dadd( 424.79, 272.448, 15.9874, 0.483 ) }
    dend_23 { pt3dadd( 424.378, 271.382, 15.9874, 0.4068 ) }
    dend_23 { pt3dadd( 423.966, 270.315, 15.9874, 0.3814 ) }
    dend_23 { pt3dadd( 423.493, 269.274, 15.9874, 0.3814 ) }
    dend_23 { pt3dadd( 423.148, 268.208, 15.9874, 0.4322 ) }
    dend_23 { pt3dadd( 423.14, 267.066, 15.9874, 0.4322 ) }
    dend_23 { pt3dadd( 422.991, 266.394, 15.8424, 0.4068 ) }
    dend_23 { pt3dadd( 422.55, 265.362, 16.0546, 0.4576 ) }
    dend_23 { pt3dadd( 422.047, 264.345, 16.24, 0.5592 ) }
    dend_23 { pt3dadd( 421.383, 263.428, 16.2397, 0.6864 ) }
    dend_23 { pt3dadd( 420.525, 262.686, 16.2392, 0.7118 ) }
    dend_23 { pt3dadd( 419.562, 262.07, 16.2366, 0.7118 ) }
    dend_23 { pt3dadd( 418.547, 261.547, 16.2226, 0.661 ) }
    dend_23 { pt3dadd( 417.541, 261.01, 16.151, 0.6102 ) }
    dend_23 { pt3dadd( 416.565, 260.447, 15.7629, 0.5338 ) }
    dend_23 { pt3dadd( 415.582, 259.906, 15.2393, 0.483 ) }
    dend_23 { pt3dadd( 414.6, 259.322, 15.094, 0.4576 ) }
    dend_23 { pt3dadd( 413.666, 258.669, 14.9652, 0.4576 ) }
    dend_23 { pt3dadd( 412.773, 257.975, 14.5298, 0.4322 ) }
    dend_23 { pt3dadd( 411.865, 257.319, 14.1739, 0.3814 ) }
    dend_23 { pt3dadd( 410.985, 256.65, 14.7815, 0.3814 ) }
    dend_23 { pt3dadd( 410.109, 256.08, 15.8802, 0.4322 ) }
    dend_23 { pt3dadd( 409.156, 255.519, 16.5721, 0.5084 ) }
    dend_23 { pt3dadd( 408.289, 254.823, 17.1811, 0.483 ) }
    dend_23 { pt3dadd( 407.377, 254.157, 17.4056, 0.4068 ) }
    dend_23 { pt3dadd( 406.356, 253.666, 17.6655, 0.356 ) }
    dend_23 { pt3dadd( 405.357, 253.14, 17.7878, 0.356 ) }
    dend_23 { pt3dadd( 404.363, 252.596, 18.0046, 0.4068 ) }
    dend_23 { pt3dadd( 403.431, 251.955, 18.3784, 0.4068 ) }
    dend_23 { pt3dadd( 402.654, 251.129, 18.4811, 0.4576 ) }
    dend_23 { pt3dadd( 401.804, 250.372, 18.4848, 0.483 ) }
    dend_23 { pt3dadd( 400.869, 249.714, 18.5116, 0.5338 ) }
    dend_23 { pt3dadd( 399.922, 249.073, 18.5898, 0.483 ) }
    dend_23 { pt3dadd( 399.015, 248.407, 19.0887, 0.4322 ) }
    dend_23 { pt3dadd( 398.213, 247.62, 19.6031, 0.3814 ) }
    dend_23 { pt3dadd( 397.299, 246.931, 19.6218, 0.4068 ) }
    dend_23 { pt3dadd( 396.485, 246.128, 19.6874, 0.4068 ) }
    dend_23 { pt3dadd( 395.73, 245.274, 19.9315, 0.4322 ) }
    dend_23 { pt3dadd( 395.306, 244.529, 20.7144, 0.4068 ) }
    dend_23 { pt3dadd( 394.745, 243.602, 21.6163, 0.4068 ) }
    dend_23 { pt3dadd( 393.986, 242.752, 21.8386, 0.356 ) }
    dend_23 { pt3dadd( 393.17, 241.95, 21.8436, 0.3304 ) }
    dend_23 { pt3dadd( 392.336, 241.168, 21.8546, 0.3304 ) }
    dend_23 { pt3dadd( 391.404, 240.504, 21.9106, 0.4068 ) }
    dend_23 { pt3dadd( 390.487, 239.83, 22.2043, 0.5084 ) }
    dend_23 { pt3dadd( 389.749, 239.18, 23.2089, 0.5338 ) }
    dend_23 { pt3dadd( 389.081, 238.638, 23.4847, 0.483 ) }
    dend_23 { pt3dadd( 388.299, 238.41, 22.3423, 0.3814 ) }
    dend_23 { pt3dadd( 387.488, 237.802, 22.6078, 0.3304 ) }
    dend_23 { pt3dadd( 386.839, 237.494, 23.7166, 0.305 ) }
    dend_23 { pt3dadd( 386.209, 236.829, 23.4021, 0.3304 ) }
    dend_23 { pt3dadd( 385.257, 236.386, 23.0927, 0.356 ) }
    dend_23 { pt3dadd( 384.309, 236.172, 22.2622, 0.356 ) }
    dend_23 { pt3dadd( 383.588, 235.779, 21.5533, 0.356 ) }
    dend_23 { pt3dadd( 382.866, 235.44, 22.9765, 0.356 ) }
    dend_23 { pt3dadd( 382.004, 235.014, 23.6323, 0.3814 ) }
    dend_23 { pt3dadd( 381.209, 234.981, 22.3037, 0.356 ) }
    dend_23 { pt3dadd( 380.714, 234.554, 24.0064, 0.3304 ) }
    dend_23 { pt3dadd( 380.185, 234.3, 22.2673, 0.305 ) }
    dend_23 { pt3dadd( 379.808, 233.506, 23.4646, 0.2796 ) }
    dend_23 { pt3dadd( 379.009, 232.821, 23.2341, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_23 { pt3dadd( 378.166, 232.324, 24.1318, 0.356 ) }
    dend_23 { pt3dadd( 377.32, 231.66, 24.92, 0.4576 ) }
    dend_23 { pt3dadd( 376.58, 230.885, 25.48, 0.483 ) }
    dend_23 { pt3dadd( 375.931, 230.176, 24.8511, 0.483 ) }
    dend_23 { pt3dadd( 375.332, 229.335, 24.7887, 0.4576 ) }
    dend_23 { pt3dadd( 374.454, 228.991, 25.3268, 0.4576 ) }
    dend_23 { pt3dadd( 373.964, 228.079, 25.1112, 0.4576 ) }
    dend_23 { pt3dadd( 373.259, 227.511, 24.649, 0.4576 ) }
    dend_23 { pt3dadd( 372.377, 226.973, 24.425, 0.4576 ) }
    dend_23 { pt3dadd( 371.76, 226.32, 25.4814, 0.4576 ) }
    dend_23 { pt3dadd( 371.046, 225.506, 25.76, 0.4576 ) }
    dend_23 { pt3dadd( 371.158, 224.454, 25.4668, 0.4322 ) }
    dend_23 { pt3dadd( 370.611, 223.671, 25.1661, 0.4322 ) }
    dend_23 { pt3dadd( 369.965, 222.765, 24.8567, 0.4576 ) }
    dend_23 { pt3dadd( 370.054, 221.748, 25.0827, 0.5084 ) }
    dend_23 { pt3dadd( 369.97, 220.775, 26.1405, 0.5338 ) }
    dend_23 { pt3dadd( 370.077, 219.671, 25.8712, 0.5084 ) }
    dend_23 { pt3dadd( 369.661, 219.069, 26.9391, 0.5084 ) }
    dend_23 { pt3dadd( 369.626, 218.065, 26.8246, 0.5084 ) }
    dend_23 { pt3dadd( 369.341, 217.439, 26.0966, 0.5338 ) }
    dend_23 { pt3dadd( 369.067, 216.369, 26.2343, 0.5338 ) }
    dend_23 { pt3dadd( 368.648, 215.395, 26.8909, 0.5592 ) }
    dend_23 { pt3dadd( 368.016, 214.725, 26.4256, 0.6102 ) }
    dend_23 { pt3dadd( 367.714, 213.872, 25.8787, 0.661 ) }
    dend_23 { pt3dadd( 367.199, 213.171, 27.2003, 0.6102 ) }
    dend_23 { pt3dadd( 366.374, 212.646, 28.2128, 0.5084 ) }
    dend_23 { pt3dadd( 365.807, 211.894, 27.813, 0.4322 ) }
    dend_23 { pt3dadd( 364.928, 211.407, 28.0064, 0.483 ) }
    dend_23 { pt3dadd( 364.2, 210.644, 28.548, 0.5592 ) }
    dend_23 { pt3dadd( 363.57, 209.716, 28.3903, 0.6102 ) }
    dend_23 { pt3dadd( 362.892, 208.811, 28.28, 0.6102 ) }
    dend_23 { pt3dadd( 362.077, 208.416, 27.7435, 0.661 ) }
    dend_23 { pt3dadd( 361.618, 207.594, 27.3706, 0.7118 ) }
    dend_23 { pt3dadd( 361.122, 206.945, 27.44, 0.7372 ) }
    dend_23 { pt3dadd( 360.818, 206.088, 27.7388, 0.6356 ) }
    dend_23 { pt3dadd( 360.287, 205.31, 27.8678, 0.5084 ) }
    dend_23 { pt3dadd( 359.525, 204.592, 27.809, 0.3814 ) }
    dend_23 { pt3dadd( 358.46, 204.339, 27.5066, 0.3814 ) }
    dend_23 { pt3dadd( 357.665, 203.665, 27.4302, 0.4068 ) }
    dend_23 { pt3dadd( 356.828, 203.169, 27.0096, 0.4576 ) }
    dend_23 { pt3dadd( 356.297, 202.488, 27.7147, 0.4322 ) }
    dend_23 { pt3dadd( 356.013, 202.548, 25.5956, 0.4068 ) }
    dend_23 { pt3dadd( 355.441, 202.306, 25.6228, 0.3814 ) }
    dend_23 { pt3dadd( 354.827, 201.609, 24.9231, 0.356 ) }
    dend_23 { pt3dadd( 354.227, 200.844, 24.9413, 0.3304 ) }
    dend_23 { pt3dadd( 353.574, 200.429, 24.7386, 0.305 ) }
    dend_23 { pt3dadd( 352.952, 200.372, 25.8689, 0.3304 ) }
    dend_23 { pt3dadd( 352.232, 200.208, 27.116, 0.356 ) }
    dend_23 { pt3dadd( 352.102, 199.562, 27.4478, 0.3814 ) }
    dend_23 { pt3dadd( 351.138, 199.183, 27.4887, 0.3814 ) }
    dend_23 { pt3dadd( 350.112, 199.281, 28.3198, 0.3814 ) }
    dend_23 { pt3dadd( 349.132, 198.952, 28.7193, 0.4068 ) }
    dend_23 { pt3dadd( 348.252, 199.07, 29.3936, 0.4576 ) }
    dend_23 { pt3dadd( 347.563, 199.514, 29.96, 0.5084 ) }
    dend_23 { pt3dadd( 346.716, 199.034, 29.7063, 0.5338 ) }
    dend_23 { pt3dadd( 345.841, 199.045, 29.7206, 0.5084 ) }
    dend_23 { pt3dadd( 344.998, 198.898, 29.96, 0.483 ) }
    dend_23 { pt3dadd( 344.183, 198.328, 30.221, 0.4322 ) }
    dend_23 { pt3dadd( 343.574, 197.738, 28.84, 0.4068 ) }
    dend_23 { pt3dadd( 342.628, 197.502, 29.4, 0.3814 ) }
    dend_23 { pt3dadd( 341.791, 197.23, 29.3373, 0.4068 ) }
    dend_23 { pt3dadd( 340.931, 196.997, 29.458, 0.4068 ) }
    dend_23 { pt3dadd( 340.266, 196.984, 27.9734, 0.3814 ) }
    dend_23 { pt3dadd( 339.394, 196.997, 29.0945, 0.3304 ) }
    dend_23 { pt3dadd( 338.28, 196.844, 29.3527, 0.3304 ) }
    dend_23 { pt3dadd( 337.47, 196.782, 28.28, 0.356 ) }
    dend_23 { pt3dadd( 336.645, 197.095, 27.9146, 0.356 ) }
    dend_23 { pt3dadd( 335.748, 196.895, 28.8403, 0.3304 ) }
    dend_23 { pt3dadd( 334.955, 196.887, 29.5753, 0.3304 ) }
    dend_23 { pt3dadd( 334.043, 196.708, 30.2753, 0.3814 ) }
    dend_23 { pt3dadd( 333.206, 196.539, 28.8711, 0.4068 ) }
    dend_23 { pt3dadd( 332.275, 195.936, 28.6728, 0.4068 ) }
    dend_23 { pt3dadd( 331.318, 195.452, 27.9334, 0.3814 ) }
    dend_23 { pt3dadd( 330.403, 194.788, 27.8351, 0.3814 ) }
    dend_23 { pt3dadd( 329.653, 194.06, 28.28, 0.356 ) }
    dend_23 { pt3dadd( 328.75, 193.525, 29.0206, 0.3304 ) }
    dend_23 { pt3dadd( 327.756, 193.071, 29.659, 0.356 ) }
    dend_23 { pt3dadd( 326.662, 193.083, 29.7564, 0.4322 ) }
    dend_23 { pt3dadd( 325.976, 193.144, 28.0297, 0.5084 ) }
    dend_23 { pt3dadd( 324.952, 193.025, 28.7879, 0.5084 ) }
    dend_23 { pt3dadd( 324.012, 192.931, 29.5725, 0.4576 ) }
    dend_23 { pt3dadd( 322.964, 192.993, 29.0464, 0.4068 ) }
    dend_23 { pt3dadd( 321.827, 192.989, 29.12, 0.4068 ) }
    dend_23 { pt3dadd( 320.913, 192.531, 29.8155, 0.483 ) }
    dend_23 { pt3dadd( 319.822, 192.36, 29.864, 0.5338 ) }
    dend_23 { pt3dadd( 318.732, 192.471, 29.1382, 0.5592 ) }
    dend_23 { pt3dadd( 318.261, 192.764, 30.24, 0.5338 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 87/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 426.506, 282.021, 18.2428, 0.3304 ) }
    dend_20 { pt3dadd( 426.254, 280.981, 17.3608, 0.3304 ) }
    dend_20 { pt3dadd( 426.249, 279.837, 17.3662, 0.356 ) }
    dend_20 { pt3dadd( 426.209, 278.696, 17.4084, 0.3814 ) }
    dend_20 { pt3dadd( 425.938, 277.653, 17.7173, 0.356 ) }
    dend_20 { pt3dadd( 425.11, 277.105, 19.0862, 0.305 ) }
    dend_20 { pt3dadd( 424.397, 276.289, 19.5804, 0.305 ) }
    dend_20 { pt3dadd( 423.549, 275.534, 19.6336, 0.356 ) }
    dend_20 { pt3dadd( 422.512, 275.085, 19.7893, 0.4576 ) }
    dend_20 { pt3dadd( 421.431, 274.837, 20.4064, 0.483 ) }
    dend_20 { pt3dadd( 420.303, 274.769, 20.608, 0.483 ) }
    dend_20 { pt3dadd( 419.185, 274.676, 20.1488, 0.4322 ) }
    dend_20 { pt3dadd( 418.122, 274.313, 19.7663, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_20 { pt3dadd( 417.24, 273.636, 20.1412, 0.4068 ) }
    dend_20 { pt3dadd( 416.63, 272.7, 20.6394, 0.483 ) }
    dend_20 { pt3dadd( 415.72, 272.046, 20.7304, 0.5338 ) }
    dend_20 { pt3dadd( 414.716, 271.501, 20.7771, 0.5848 ) }
    dend_20 { pt3dadd( 413.713, 270.957, 20.9647, 0.5592 ) }
    dend_20 { pt3dadd( 412.804, 270.376, 21.6558, 0.6356 ) }
    dend_20 { pt3dadd( 412.0, 269.716, 22.7777, 0.6356 ) }
    dend_20 { pt3dadd( 410.983, 269.213, 22.9309, 0.6356 ) }
    dend_20 { pt3dadd( 410.061, 268.543, 22.8659, 0.5338 ) }
    dend_20 { pt3dadd( 409.472, 267.578, 23.1168, 0.5084 ) }
    dend_20 { pt3dadd( 409.027, 266.602, 24.0744, 0.5338 ) }
    dend_20 { pt3dadd( 408.402, 265.667, 24.561, 0.5592 ) }
    dend_20 { pt3dadd( 407.733, 264.767, 25.1219, 0.5592 ) }
    dend_20 { pt3dadd( 406.943, 263.943, 25.2157, 0.5592 ) }
    dend_20 { pt3dadd( 406.136, 263.13, 25.2664, 0.5848 ) }
    dend_20 { pt3dadd( 405.341, 262.315, 25.4982, 0.6102 ) }
    dend_20 { pt3dadd( 404.669, 261.444, 26.2696, 0.5848 ) }
    dend_20 { pt3dadd( 403.97, 260.54, 26.3217, 0.5592 ) }
    dend_20 { pt3dadd( 403.152, 259.741, 26.329, 0.5084 ) }
    dend_20 { pt3dadd( 402.293, 258.984, 26.3738, 0.5084 ) }
    dend_20 { pt3dadd( 401.824, 258.684, 25.48, 0.5338 ) }
    dend_20 { pt3dadd( 401.086, 258.318, 26.5451, 0.5848 ) }
    dend_20 { pt3dadd( 401.113, 257.583, 27.4926, 0.5592 ) }
    dend_20 { pt3dadd( 400.605, 256.667, 27.491, 0.483 ) }
    dend_20 { pt3dadd( 400.104, 256.02, 26.4415, 0.4068 ) }
    dend_20 { pt3dadd( 399.408, 255.298, 26.8372, 0.4322 ) }
    dend_20 { pt3dadd( 399.123, 254.666, 27.4618, 0.483 ) }
    dend_20 { pt3dadd( 398.455, 254.346, 27.16, 0.5338 ) }
    dend_20 { pt3dadd( 398.011, 253.802, 26.6969, 0.5084 ) }
    dend_20 { pt3dadd( 397.402, 253.243, 27.2303, 0.4576 ) }
    dend_20 { pt3dadd( 396.998, 252.301, 27.8172, 0.4068 ) }
    dend_20 { pt3dadd( 396.61, 251.568, 29.2088, 0.3814 ) }
    dend_20 { pt3dadd( 396.172, 250.668, 29.0018, 0.4068 ) }
    dend_20 { pt3dadd( 396.015, 249.8, 29.0777, 0.4068 ) }
    dend_20 { pt3dadd( 395.379, 249.165, 28.2892, 0.4068 ) }
    dend_20 { pt3dadd( 395.055, 248.225, 28.84, 0.4068 ) }
    dend_20 { pt3dadd( 394.559, 247.385, 29.68, 0.4576 ) }
    dend_20 { pt3dadd( 393.688, 246.669, 29.3093, 0.5084 ) }
    dend_20 { pt3dadd( 393.491, 246.078, 30.1608, 0.483 ) }
    dend_20 { pt3dadd( 392.754, 245.421, 30.7166, 0.4068 ) }
    dend_20 { pt3dadd( 392.304, 244.925, 31.5384, 0.305 ) }
    dend_20 { pt3dadd( 392.069, 244.317, 31.3342, 0.2796 ) }
    dend_20 { pt3dadd( 391.63, 243.721, 32.7258, 0.3304 ) }
    dend_20 { pt3dadd( 391.711, 243.118, 31.36, 0.4068 ) }
    dend_20 { pt3dadd( 391.412, 242.16, 31.0579, 0.4322 ) }
    dend_20 { pt3dadd( 390.835, 241.819, 32.2574, 0.3814 ) }
    dend_20 { pt3dadd( 390.182, 241.197, 32.7158, 0.3304 ) }
    dend_20 { pt3dadd( 389.82, 240.13, 32.4638, 0.3304 ) }
    dend_20 { pt3dadd( 389.418, 239.209, 32.6295, 0.356 ) }
    dend_20 { pt3dadd( 388.851, 238.588, 33.0187, 0.4068 ) }
    dend_20 { pt3dadd( 388.267, 238.0, 33.0708, 0.4068 ) }
    dend_20 { pt3dadd( 387.347, 237.394, 33.32, 0.4068 ) }
    dend_20 { pt3dadd( 386.539, 236.647, 33.32, 0.3814 ) }
    dend_20 { pt3dadd( 385.823, 236.427, 34.8947, 0.4322 ) }
    dend_20 { pt3dadd( 385.114, 235.844, 35.0406, 0.5084 ) }
    dend_20 { pt3dadd( 384.807, 234.967, 35.2822, 0.6102 ) }
    dend_20 { pt3dadd( 384.019, 233.955, 35.2948, 0.7118 ) }
    dend_20 { pt3dadd( 383.207, 233.15, 35.3405, 0.7372 ) }
    dend_20 { pt3dadd( 382.348, 232.408, 35.5499, 0.7372 ) }
    dend_20 { pt3dadd( 381.386, 231.868, 36.286, 0.6864 ) }
    dend_20 { pt3dadd( 380.426, 231.34, 36.9802, 0.5848 ) }
    dend_20 { pt3dadd( 379.499, 230.672, 36.8029, 0.5084 ) }
    dend_20 { pt3dadd( 378.679, 229.921, 37.4349, 0.4576 ) }
    dend_20 { pt3dadd( 377.735, 229.277, 37.5186, 0.5084 ) }
    dend_20 { pt3dadd( 376.723, 228.744, 37.5211, 0.5592 ) }
    dend_20 { pt3dadd( 375.72, 228.194, 37.5267, 0.6102 ) }
    dend_20 { pt3dadd( 374.836, 227.468, 37.5502, 0.5848 ) }
    dend_20 { pt3dadd( 374.046, 226.642, 37.6502, 0.5592 ) }
    dend_20 { pt3dadd( 373.368, 225.745, 38.1668, 0.483 ) }
    dend_20 { pt3dadd( 372.808, 224.795, 38.9043, 0.4322 ) }
    dend_20 { pt3dadd( 372.324, 224.277, 39.3358, 0.3814 ) }
    dend_20 { pt3dadd( 371.59, 223.426, 39.5892, 0.4068 ) }
    dend_20 { pt3dadd( 370.846, 222.601, 39.0457, 0.4068 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 468.165, 270.553, 32.2213, 0.5848 ) }
    dend_16 { pt3dadd( 468.849, 270.518, 31.64, 0.2796 ) }
    dend_16 { pt3dadd( 469.718, 270.534, 31.985, 0.2288 ) }
    dend_16 { pt3dadd( 470.42, 270.113, 33.32, 0.2542 ) }
    dend_16 { pt3dadd( 471.457, 269.984, 34.1508, 0.2796 ) }
    dend_16 { pt3dadd( 472.448, 269.961, 34.3832, 0.3304 ) }
    dend_16 { pt3dadd( 473.338, 269.85, 34.2496, 0.3304 ) }
    dend_16 { pt3dadd( 474.261, 270.076, 34.3664, 0.3304 ) }
    dend_16 { pt3dadd( 474.882, 270.098, 34.9978, 0.2796 ) }
    dend_16 { pt3dadd( 475.95, 269.984, 34.2079, 0.2542 ) }
    dend_16 { pt3dadd( 477.088, 269.984, 34.2913, 0.2288 ) }
    dend_16 { pt3dadd( 478.228, 269.984, 34.4686, 0.2288 ) }
    dend_16 { pt3dadd( 479.351, 270.116, 34.7063, 0.2288 ) }
    dend_16 { pt3dadd( 480.152, 270.454, 35.0008, 0.2288 ) }
    dend_16 { pt3dadd( 481.229, 270.368, 35.5351, 0.2288 ) }
    dend_16 { pt3dadd( 482.296, 270.213, 35.84, 0.2288 ) }
    dend_16 { pt3dadd( 483.372, 270.01, 36.12, 0.2288 ) }
    dend_16 { pt3dadd( 484.486, 269.87, 36.12, 0.2542 ) }
    dend_16 { pt3dadd( 485.63, 269.87, 36.12, 0.2796 ) }
    dend_16 { pt3dadd( 486.603, 269.87, 37.3733, 0.305 ) }
    dend_16 { pt3dadd( 487.67, 269.612, 37.3859, 0.305 ) }
    dend_16 { pt3dadd( 488.558, 269.051, 38.0044, 0.305 ) }
    dend_16 { pt3dadd( 489.293, 268.349, 37.4388, 0.305 ) }
    dend_16 { pt3dadd( 490.207, 268.154, 36.12, 0.2796 ) }
    dend_16 { pt3dadd( 491.351, 268.154, 36.12, 0.2542 ) }
    dend_16 { pt3dadd( 492.494, 268.118, 36.12, 0.2288 ) }
    dend_16 { pt3dadd( 493.62, 268.268, 36.12, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_16 { pt3dadd( 494.745, 268.434, 36.1539, 0.2288 ) }
    dend_16 { pt3dadd( 495.874, 268.588, 36.391, 0.2288 ) }
    dend_16 { pt3dadd( 497.017, 268.611, 36.4, 0.2288 ) }
    dend_16 { pt3dadd( 498.16, 268.611, 36.4, 0.2288 ) }
    dend_16 { pt3dadd( 499.305, 268.611, 36.4, 0.2288 ) }
    dend_16 { pt3dadd( 500.448, 268.611, 36.4, 0.2542 ) }
    dend_16 { pt3dadd( 501.588, 268.611, 36.4952, 0.3304 ) }
    dend_16 { pt3dadd( 502.559, 268.726, 37.52, 0.4322 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 8/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 468.165, 270.553, 32.2213, 0.5848 ) }
    dend_15 { pt3dadd( 468.563, 269.717, 32.6124, 0.5084 ) }
    dend_15 { pt3dadd( 469.12, 269.167, 32.0034, 0.483 ) }
    dend_15 { pt3dadd( 469.88, 268.496, 32.5724, 0.4322 ) }
    dend_15 { pt3dadd( 470.503, 267.841, 31.36, 0.356 ) }
    dend_15 { pt3dadd( 471.447, 267.44, 32.2246, 0.356 ) }
    dend_15 { pt3dadd( 472.177, 266.618, 32.3963, 0.3304 ) }
    dend_15 { pt3dadd( 472.764, 265.755, 31.92, 0.356 ) }
    dend_15 { pt3dadd( 473.206, 264.742, 32.2109, 0.356 ) }
    dend_15 { pt3dadd( 473.645, 263.723, 32.72, 0.3814 ) }
    dend_15 { pt3dadd( 473.738, 262.627, 32.8104, 0.3814 ) }
    dend_15 { pt3dadd( 474.441, 262.042, 32.4288, 0.356 ) }
    dend_15 { pt3dadd( 475.168, 261.658, 33.3802, 0.3304 ) }
    dend_15 { pt3dadd( 475.974, 261.054, 33.5768, 0.305 ) }
    dend_15 { pt3dadd( 476.844, 260.365, 33.6, 0.305 ) }
    dend_15 { pt3dadd( 477.758, 259.838, 33.3511, 0.305 ) }
    dend_15 { pt3dadd( 478.724, 259.473, 33.3446, 0.2796 ) }
    dend_15 { pt3dadd( 479.635, 258.788, 33.32, 0.2542 ) }
    dend_15 { pt3dadd( 480.707, 258.514, 33.32, 0.2288 ) }
    dend_15 { pt3dadd( 481.603, 258.086, 33.1792, 0.2288 ) }
    dend_15 { pt3dadd( 482.722, 258.086, 32.7774, 0.2288 ) }
    dend_15 { pt3dadd( 483.631, 257.669, 33.2562, 0.2288 ) }
    dend_15 { pt3dadd( 484.757, 257.629, 33.04, 0.2288 ) }
    dend_15 { pt3dadd( 485.812, 257.242, 33.2024, 0.2288 ) }
    dend_15 { pt3dadd( 486.826, 256.828, 33.8615, 0.2288 ) }
    dend_15 { pt3dadd( 487.879, 256.938, 34.16, 0.2288 ) }
    dend_15 { pt3dadd( 489.023, 256.942, 34.16, 0.2796 ) }
    dend_15 { pt3dadd( 490.156, 256.968, 33.9763, 0.3304 ) }
    dend_15 { pt3dadd( 490.809, 257.384, 32.9627, 0.4068 ) }
    dend_15 { pt3dadd( 491.437, 257.4, 31.9883, 0.3814 ) }
    dend_15 { pt3dadd( 492.533, 257.297, 32.3991, 0.356 ) }
    dend_15 { pt3dadd( 493.665, 257.336, 32.3456, 0.2796 ) }
    dend_15 { pt3dadd( 494.711, 256.98, 32.466, 0.2542 ) }
    dend_15 { pt3dadd( 495.502, 256.182, 32.2, 0.2288 ) }
    dend_15 { pt3dadd( 496.095, 255.391, 32.2, 0.2288 ) }
    dend_15 { pt3dadd( 497.234, 255.331, 32.2776, 0.2288 ) }
    dend_15 { pt3dadd( 498.15, 254.771, 32.6844, 0.2288 ) }
    dend_15 { pt3dadd( 499.121, 254.311, 33.0179, 0.2288 ) }
    dend_15 { pt3dadd( 499.958, 253.818, 32.5399, 0.2542 ) }
    dend_15 { pt3dadd( 500.906, 253.378, 32.7936, 0.2796 ) }
    dend_15 { pt3dadd( 501.768, 252.837, 31.9978, 0.305 ) }
    dend_15 { pt3dadd( 502.387, 252.11, 31.6019, 0.2796 ) }
    dend_15 { pt3dadd( 502.559, 251.076, 31.3855, 0.2542 ) }
    dend_15 { pt3dadd( 503.001, 250.216, 30.6376, 0.2288 ) }
    dend_15 { pt3dadd( 502.902, 249.16, 30.0622, 0.2288 ) }
    dend_15 { pt3dadd( 503.281, 248.242, 30.6603, 0.2288 ) }
    dend_15 { pt3dadd( 503.81, 247.269, 30.6827, 0.2288 ) }
    dend_15 { pt3dadd( 504.144, 246.303, 30.8, 0.2542 ) }
    dend_15 { pt3dadd( 504.275, 245.213, 30.7754, 0.2796 ) }
    dend_15 { pt3dadd( 504.38, 244.09, 30.52, 0.305 ) }
    dend_15 { pt3dadd( 504.733, 243.165, 29.6862, 0.2796 ) }
    dend_15 { pt3dadd( 504.904, 242.074, 29.68, 0.2542 ) }
    dend_15 { pt3dadd( 505.631, 241.21, 29.6386, 0.2288 ) }
    dend_15 { pt3dadd( 506.317, 240.409, 28.698, 0.2288 ) }
    dend_15 { pt3dadd( 507.245, 239.978, 28.84, 0.2288 ) }
    dend_15 { pt3dadd( 507.543, 239.017, 28.9187, 0.2542 ) }
    dend_15 { pt3dadd( 508.412, 238.587, 28.1943, 0.2796 ) }
    dend_15 { pt3dadd( 508.958, 237.695, 27.6956, 0.305 ) }
    dend_15 { pt3dadd( 509.626, 236.846, 26.9993, 0.2796 ) }
    dend_15 { pt3dadd( 510.224, 235.992, 27.1018, 0.2542 ) }
    dend_15 { pt3dadd( 510.532, 235.432, 26.9858, 0.2542 ) }
    dend_15 { pt3dadd( 510.829, 234.647, 26.8996, 0.2796 ) }
    dend_15 { pt3dadd( 511.253, 233.662, 26.8206, 0.305 ) }
    dend_15 { pt3dadd( 511.399, 232.666, 26.0775, 0.2796 ) }
    dend_15 { pt3dadd( 511.596, 231.615, 26.6042, 0.2542 ) }
    dend_15 { pt3dadd( 511.598, 230.651, 27.44, 0.2288 ) }
    dend_15 { pt3dadd( 511.667, 229.551, 27.8012, 0.2542 ) }
    dend_15 { pt3dadd( 511.94, 228.686, 28.56, 0.2796 ) }
    dend_15 { pt3dadd( 511.711, 227.656, 28.56, 0.305 ) }
    dend_15 { pt3dadd( 511.711, 226.512, 28.56, 0.2796 ) }
    dend_15 { pt3dadd( 511.711, 225.368, 28.56, 0.2796 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 465.053, 273.135, 31.08, 0.356 ) }
    dend_9 { pt3dadd( 465.125, 274.243, 31.5557, 0.4576 ) }
    dend_9 { pt3dadd( 465.01, 275.242, 31.2483, 0.483 ) }
    dend_9 { pt3dadd( 465.282, 275.585, 30.9011, 0.483 ) }
    dend_9 { pt3dadd( 465.707, 276.604, 31.6296, 0.4576 ) }
    dend_9 { pt3dadd( 466.095, 277.676, 31.8688, 0.483 ) }
    dend_9 { pt3dadd( 466.555, 278.723, 31.9108, 0.483 ) }
    dend_9 { pt3dadd( 467.048, 279.755, 31.9267, 0.483 ) }
    dend_9 { pt3dadd( 467.444, 280.814, 32.3548, 0.4322 ) }
    dend_9 { pt3dadd( 467.834, 281.888, 32.3394, 0.4068 ) }
    dend_9 { pt3dadd( 468.197, 282.966, 32.1115, 0.3814 ) }
    dend_9 { pt3dadd( 468.545, 284.031, 32.5822, 0.356 ) }
    dend_9 { pt3dadd( 468.799, 285.119, 32.0102, 0.356 ) }
    dend_9 { pt3dadd( 468.902, 286.256, 31.9323, 0.3304 ) }
    dend_9 { pt3dadd( 468.849, 287.398, 31.8805, 0.3304 ) }
    dend_9 { pt3dadd( 468.748, 288.525, 31.5123, 0.305 ) }
    dend_9 { pt3dadd( 468.55, 289.608, 30.9207, 0.305 ) }
    dend_9 { pt3dadd( 468.753, 290.732, 30.8188, 0.305 ) }
    dend_9 { pt3dadd( 468.767, 291.871, 30.8025, 0.2796 ) }
    dend_9 { pt3dadd( 468.542, 292.993, 30.8006, 0.2542 ) }
    dend_9 { pt3dadd( 468.379, 294.124, 30.8, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_9 { pt3dadd( 468.365, 295.267, 30.8, 0.356 ) }
    dend_9 { pt3dadd( 468.449, 296.404, 30.7952, 0.4576 ) }
    dend_9 { pt3dadd( 468.713, 297.318, 30.7712, 0.483 ) }
    dend_9 { pt3dadd( 469.035, 298.12, 30.4856, 0.483 ) }
    dend_9 { pt3dadd( 468.811, 299.026, 29.2034, 0.4322 ) }
    dend_9 { pt3dadd( 469.307, 299.941, 29.4, 0.4068 ) }
    dend_9 { pt3dadd( 469.599, 300.74, 30.8311, 0.356 ) }
    dend_9 { pt3dadd( 469.024, 301.445, 31.0845, 0.3304 ) }
    dend_9 { pt3dadd( 469.102, 302.455, 31.066, 0.305 ) }
    dend_9 { pt3dadd( 468.993, 303.256, 31.9158, 0.3304 ) }
    dend_9 { pt3dadd( 468.919, 303.961, 30.0919, 0.3814 ) }
    dend_9 { pt3dadd( 469.176, 305.05, 30.1014, 0.4068 ) }
    dend_9 { pt3dadd( 469.498, 306.037, 29.7987, 0.3814 ) }
    dend_9 { pt3dadd( 469.647, 307.067, 30.4931, 0.305 ) }
    dend_9 { pt3dadd( 469.605, 307.964, 30.0734, 0.2796 ) }
    dend_9 { pt3dadd( 469.529, 308.738, 31.3429, 0.305 ) }
    dend_9 { pt3dadd( 469.316, 309.815, 31.08, 0.4068 ) }
    dend_9 { pt3dadd( 469.498, 310.554, 29.6299, 0.4576 ) }
    dend_9 { pt3dadd( 469.448, 311.639, 29.02, 0.4576 ) }
    dend_9 { pt3dadd( 469.383, 312.675, 28.9864, 0.4068 ) }
    dend_9 { pt3dadd( 469.125, 313.578, 29.493, 0.3814 ) }
    dend_9 { pt3dadd( 469.45, 314.489, 29.2029, 0.3814 ) }
    dend_9 { pt3dadd( 469.627, 314.808, 29.8066, 0.3304 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 23/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 465.053, 273.135, 31.08, 0.356 ) }
    dend_6 { pt3dadd( 464.737, 272.267, 31.4457, 0.305 ) }
    dend_6 { pt3dadd( 465.036, 271.641, 30.2711, 0.3814 ) }
    dend_6 { pt3dadd( 464.933, 270.732, 31.5353, 0.4322 ) }
    dend_6 { pt3dadd( 465.036, 269.657, 31.2273, 0.4322 ) }
    dend_6 { pt3dadd( 465.297, 268.668, 30.5827, 0.3814 ) }
    dend_6 { pt3dadd( 465.351, 267.719, 30.8, 0.305 ) }
    dend_6 { pt3dadd( 466.211, 267.038, 30.4766, 0.2796 ) }
    dend_6 { pt3dadd( 466.618, 266.208, 29.4672, 0.2796 ) }
    dend_6 { pt3dadd( 467.016, 265.223, 30.4217, 0.356 ) }
    dend_6 { pt3dadd( 467.696, 264.722, 31.134, 0.3814 ) }
    dend_6 { pt3dadd( 468.365, 264.264, 30.5564, 0.4322 ) }
    dend_6 { pt3dadd( 469.025, 263.809, 30.371, 0.4068 ) }
    dend_6 { pt3dadd( 469.564, 263.059, 29.9681, 0.4322 ) }
    dend_6 { pt3dadd( 469.841, 262.16, 31.2444, 0.4322 ) }
    dend_6 { pt3dadd( 470.184, 261.518, 31.0822, 0.4576 ) }
    dend_6 { pt3dadd( 470.541, 260.934, 30.5914, 0.4576 ) }
    dend_6 { pt3dadd( 471.182, 260.266, 31.6364, 0.4322 ) }
    dend_6 { pt3dadd( 471.328, 259.17, 31.36, 0.4068 ) }
    dend_6 { pt3dadd( 471.021, 258.203, 31.8209, 0.3814 ) }
    dend_6 { pt3dadd( 470.993, 257.577, 30.8566, 0.4322 ) }
    dend_6 { pt3dadd( 470.939, 256.62, 31.7458, 0.5084 ) }
    dend_6 { pt3dadd( 470.87, 255.964, 31.1657, 0.5848 ) }
    dend_6 { pt3dadd( 471.266, 255.313, 31.831, 0.5848 ) }
    dend_6 { pt3dadd( 471.328, 254.421, 30.5584, 0.5084 ) }
    dend_6 { pt3dadd( 471.519, 253.43, 30.8137, 0.4068 ) }
    dend_6 { pt3dadd( 471.679, 252.413, 31.1556, 0.305 ) }
    dend_6 { pt3dadd( 472.108, 251.506, 30.7289, 0.2542 ) }
    dend_6 { pt3dadd( 472.13, 250.495, 30.2117, 0.2542 ) }
    dend_6 { pt3dadd( 472.387, 249.443, 30.2641, 0.2796 ) }
    dend_6 { pt3dadd( 472.433, 248.334, 30.7644, 0.3304 ) }
    dend_6 { pt3dadd( 472.377, 247.437, 30.8938, 0.3304 ) }
    dend_6 { pt3dadd( 472.752, 246.645, 29.8021, 0.356 ) }
    dend_6 { pt3dadd( 473.546, 245.99, 29.9398, 0.3304 ) }
    dend_6 { pt3dadd( 473.986, 245.012, 29.2491, 0.356 ) }
    dend_6 { pt3dadd( 474.649, 244.259, 29.6993, 0.3304 ) }
    dend_6 { pt3dadd( 475.103, 243.354, 29.0567, 0.3304 ) }
    dend_6 { pt3dadd( 475.316, 242.337, 28.3732, 0.305 ) }
    dend_6 { pt3dadd( 475.532, 241.313, 28.2876, 0.305 ) }
    dend_6 { pt3dadd( 475.152, 240.455, 28.6143, 0.3304 ) }
    dend_6 { pt3dadd( 475.56, 239.787, 27.6556, 0.356 ) }
    dend_6 { pt3dadd( 475.874, 238.865, 27.7547, 0.3814 ) }
    dend_6 { pt3dadd( 476.018, 238.033, 27.7301, 0.3814 ) }
    dend_6 { pt3dadd( 476.196, 237.024, 28.0272, 0.3814 ) }
    dend_6 { pt3dadd( 475.961, 236.095, 27.7438, 0.4068 ) }
    dend_6 { pt3dadd( 475.637, 235.086, 28.1985, 0.4322 ) }
    dend_6 { pt3dadd( 475.77, 234.086, 28.5034, 0.4322 ) }
    dend_6 { pt3dadd( 476.205, 233.117, 28.023, 0.3814 ) }
    dend_6 { pt3dadd( 476.724, 232.153, 28.28, 0.305 ) }
    dend_6 { pt3dadd( 476.958, 231.313, 27.3512, 0.2796 ) }
    dend_6 { pt3dadd( 477.136, 230.309, 28.0277, 0.2796 ) }
    dend_6 { pt3dadd( 477.022, 229.429, 28.6395, 0.305 ) }
    dend_6 { pt3dadd( 476.937, 228.484, 28.0106, 0.2796 ) }
    dend_6 { pt3dadd( 477.048, 227.427, 27.72, 0.2796 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 77/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 405.994, 195.687, 19.3886, 0.3814 ) }
    dend_30 { pt3dadd( 405.375, 195.706, 23.24, 0.305 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 79/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 405.994, 195.687, 19.3886, 0.3814 ) }
    dend_29 { pt3dadd( 405.395, 194.748, 18.7986, 0.3814 ) }
    dend_29 { pt3dadd( 404.796, 193.786, 18.492, 0.4576 ) }
    dend_29 { pt3dadd( 404.269, 192.774, 18.3436, 0.5338 ) }
    dend_29 { pt3dadd( 403.842, 191.741, 17.7974, 0.6102 ) }
    dend_29 { pt3dadd( 403.419, 190.688, 17.5235, 0.6356 ) }
    dend_29 { pt3dadd( 402.951, 189.668, 17.969, 0.5848 ) }
    dend_29 { pt3dadd( 402.524, 188.635, 18.5629, 0.483 ) }
    dend_29 { pt3dadd( 402.171, 187.553, 18.6715, 0.4068 ) }
    dend_29 { pt3dadd( 401.538, 186.615, 18.4912, 0.3814 ) }
    dend_29 { pt3dadd( 400.948, 185.638, 18.3812, 0.4068 ) }
    dend_29 { pt3dadd( 400.589, 184.558, 18.2277, 0.4576 ) }
    dend_29 { pt3dadd( 400.187, 183.493, 18.4456, 0.5338 ) }
    dend_29 { pt3dadd( 399.77, 182.429, 18.48, 0.5592 ) }
    dend_29 { pt3dadd( 399.65, 181.296, 18.4803, 0.5084 ) }
    dend_29 { pt3dadd( 399.333, 180.201, 18.4825, 0.4322 ) }
    dend_29 { pt3dadd( 398.968, 179.116, 18.4957, 0.356 ) }
    dend_29 { pt3dadd( 399.183, 178.009, 18.5942, 0.356 ) }
    dend_29 { pt3dadd( 399.714, 177.091, 19.6, 0.3814 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 98/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 411.057, 160.396, 30.8686, 0.483 ) }
    dend_27 { pt3dadd( 411.405, 160.693, 33.6, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_27 { pt3dadd( 411.726, 159.684, 33.6, 0.2796 ) }
    dend_27 { pt3dadd( 411.726, 158.54, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 412.191, 157.536, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 412.446, 156.441, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 412.807, 155.372, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 413.525, 154.503, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 414.081, 153.504, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 414.563, 152.47, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 414.975, 151.421, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 415.732, 150.594, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 416.187, 149.615, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 416.187, 148.471, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 416.273, 147.333, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 416.472, 146.207, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 416.836, 145.135, 33.6, 0.2542 ) }
    dend_27 { pt3dadd( 417.446, 144.173, 33.6, 0.2796 ) }
    dend_27 { pt3dadd( 417.789, 143.102, 33.6, 0.305 ) }
    dend_27 { pt3dadd( 418.068, 142.022, 33.6, 0.2796 ) }
    dend_27 { pt3dadd( 418.594, 141.088, 33.6, 0.2542 ) }
    dend_27 { pt3dadd( 419.253, 140.167, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 419.79, 139.162, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 420.194, 138.106, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 420.815, 137.301, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 421.957, 137.28, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 422.937, 137.527, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 422.937, 138.671, 33.6, 0.2288 ) }
    dend_27 { pt3dadd( 422.937, 139.797, 33.88, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 27/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 411.057, 160.396, 30.8686, 0.483 ) }
    dend_26 { pt3dadd( 410.353, 159.677, 30.7938, 0.2542 ) }
    dend_26 { pt3dadd( 409.933, 158.748, 30.4506, 0.305 ) }
    dend_26 { pt3dadd( 409.535, 157.872, 30.7983, 0.356 ) }
    dend_26 { pt3dadd( 409.478, 156.752, 30.6662, 0.356 ) }
    dend_26 { pt3dadd( 409.438, 155.635, 30.4223, 0.3304 ) }
    dend_26 { pt3dadd( 409.523, 154.546, 30.3425, 0.3304 ) }
    dend_26 { pt3dadd( 409.462, 153.567, 29.9104, 0.3814 ) }
    dend_26 { pt3dadd( 409.494, 152.455, 30.1283, 0.4068 ) }
    dend_26 { pt3dadd( 409.6, 151.358, 29.9667, 0.3814 ) }
    dend_26 { pt3dadd( 409.968, 150.33, 30.0098, 0.305 ) }
    dend_26 { pt3dadd( 410.059, 149.202, 30.2968, 0.2796 ) }
    dend_26 { pt3dadd( 410.292, 148.102, 30.326, 0.305 ) }
    dend_26 { pt3dadd( 410.688, 147.049, 30.5295, 0.3814 ) }
    dend_26 { pt3dadd( 410.969, 145.998, 30.3332, 0.4322 ) }
    dend_26 { pt3dadd( 411.619, 145.166, 31.08, 0.4322 ) }
    dend_26 { pt3dadd( 412.481, 144.478, 31.36, 0.3814 ) }
    dend_26 { pt3dadd( 412.228, 143.915, 32.6553, 0.305 ) }
    dend_26 { pt3dadd( 412.852, 143.883, 34.5481, 0.2796 ) }
    dend_26 { pt3dadd( 413.098, 144.83, 35.28, 0.2796 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 47/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 370.846, 222.601, 39.0457, 0.4068 ) }
    dend_22 { pt3dadd( 371.321, 221.4, 39.0309, 0.483 ) }
    dend_22 { pt3dadd( 371.247, 220.353, 39.6085, 0.4322 ) }
    dend_22 { pt3dadd( 371.453, 219.332, 40.6, 0.4322 ) }
    dend_22 { pt3dadd( 371.14, 218.584, 39.76, 0.5338 ) }
    dend_22 { pt3dadd( 371.14, 217.914, 41.5489, 0.6356 ) }
    dend_22 { pt3dadd( 371.342, 216.968, 41.6455, 0.661 ) }
    dend_22 { pt3dadd( 372.029, 216.277, 42.0, 0.6356 ) }
    dend_22 { pt3dadd( 371.926, 215.141, 42.0034, 0.5592 ) }
    dend_22 { pt3dadd( 371.326, 214.494, 42.6437, 0.483 ) }
    dend_22 { pt3dadd( 371.117, 213.405, 43.052, 0.3814 ) }
    dend_22 { pt3dadd( 370.965, 212.784, 44.9408, 0.356 ) }
    dend_22 { pt3dadd( 370.198, 212.356, 45.684, 0.356 ) }
    dend_22 { pt3dadd( 370.002, 211.561, 44.9173, 0.3814 ) }
    dend_22 { pt3dadd( 370.155, 210.787, 44.1734, 0.356 ) }
    dend_22 { pt3dadd( 370.568, 209.73, 43.8738, 0.356 ) }
    dend_22 { pt3dadd( 370.842, 208.643, 44.2596, 0.3814 ) }
    dend_22 { pt3dadd( 370.927, 207.629, 44.0177, 0.4322 ) }
    dend_22 { pt3dadd( 370.553, 206.721, 44.2957, 0.4576 ) }
    dend_22 { pt3dadd( 370.416, 206.212, 46.1605, 0.4322 ) }
    dend_22 { pt3dadd( 370.656, 205.25, 46.471, 0.4576 ) }
    dend_22 { pt3dadd( 370.722, 204.151, 46.6799, 0.5084 ) }
    dend_22 { pt3dadd( 370.434, 203.406, 45.4902, 0.6102 ) }
    dend_22 { pt3dadd( 370.178, 202.554, 44.5284, 0.6356 ) }
    dend_22 { pt3dadd( 369.903, 201.477, 44.8084, 0.5848 ) }
    dend_22 { pt3dadd( 370.084, 200.683, 46.2, 0.483 ) }
    dend_22 { pt3dadd( 370.313, 199.583, 46.7312, 0.3814 ) }
    dend_22 { pt3dadd( 370.46, 198.635, 46.3963, 0.356 ) }
    dend_22 { pt3dadd( 370.885, 197.798, 46.76, 0.356 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 76/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 370.846, 222.601, 39.0457, 0.4068 ) }
    dend_21 { pt3dadd( 370.018, 221.841, 38.6798, 0.3814 ) }
    dend_21 { pt3dadd( 369.108, 221.151, 38.64, 0.3814 ) }
    dend_21 { pt3dadd( 368.212, 220.442, 38.64, 0.4068 ) }
    dend_21 { pt3dadd( 367.315, 219.736, 38.64, 0.4576 ) }
    dend_21 { pt3dadd( 366.376, 219.083, 38.64, 0.483 ) }
    dend_21 { pt3dadd( 365.431, 218.439, 38.6394, 0.483 ) }
    dend_21 { pt3dadd( 364.483, 217.798, 38.6372, 0.4576 ) }
    dend_21 { pt3dadd( 363.582, 217.098, 38.628, 0.5084 ) }
    dend_21 { pt3dadd( 362.745, 216.318, 38.5904, 0.5338 ) }
    dend_21 { pt3dadd( 361.931, 215.52, 38.3992, 0.5592 ) }
    dend_21 { pt3dadd( 361.07, 214.805, 37.8795, 0.5084 ) }
    dend_21 { pt3dadd( 360.156, 214.146, 37.5656, 0.5084 ) }
    dend_21 { pt3dadd( 359.201, 213.523, 37.693, 0.5592 ) }
    dend_21 { pt3dadd( 358.173, 213.099, 38.1718, 0.661 ) }
    dend_21 { pt3dadd( 357.13, 212.706, 38.617, 0.7372 ) }
    dend_21 { pt3dadd( 356.152, 212.114, 38.626, 0.7372 ) }
    dend_21 { pt3dadd( 355.236, 211.433, 38.5714, 0.661 ) }
    dend_21 { pt3dadd( 354.417, 210.654, 38.2794, 0.6102 ) }
    dend_21 { pt3dadd( 353.612, 209.876, 37.8412, 0.5592 ) }
    dend_21 { pt3dadd( 352.649, 209.302, 38.0041, 0.5592 ) }
    dend_21 { pt3dadd( 351.606, 208.895, 38.5101, 0.5084 ) }
    dend_21 { pt3dadd( 350.511, 208.573, 38.6347, 0.4576 ) }
    dend_21 { pt3dadd( 349.404, 208.287, 38.6117, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_21 { pt3dadd( 348.311, 207.96, 38.4513, 0.483 ) }
    dend_21 { pt3dadd( 347.234, 207.639, 37.9473, 0.5592 ) }
    dend_21 { pt3dadd( 346.166, 207.283, 37.5337, 0.5848 ) }
    dend_21 { pt3dadd( 345.121, 206.822, 37.6076, 0.5848 ) }
    dend_21 { pt3dadd( 344.111, 206.338, 37.9618, 0.5592 ) }
    dend_21 { pt3dadd( 343.23, 205.668, 38.5958, 0.5084 ) }
    dend_21 { pt3dadd( 342.267, 205.054, 38.7386, 0.483 ) }
    dend_21 { pt3dadd( 341.346, 204.409, 39.0944, 0.4576 ) }
    dend_21 { pt3dadd( 340.537, 203.646, 39.6752, 0.4322 ) }
    dend_21 { pt3dadd( 339.688, 202.88, 39.7001, 0.3814 ) }
    dend_21 { pt3dadd( 338.855, 202.109, 39.4632, 0.305 ) }
    dend_21 { pt3dadd( 338.019, 201.361, 39.1471, 0.2542 ) }
    dend_21 { pt3dadd( 337.12, 200.767, 39.3453, 0.2542 ) }
    dend_21 { pt3dadd( 336.12, 200.479, 38.6688, 0.305 ) }
    dend_21 { pt3dadd( 335.455, 199.71, 38.5314, 0.3814 ) }
    dend_21 { pt3dadd( 334.881, 198.763, 39.2274, 0.4322 ) }
    dend_21 { pt3dadd( 334.208, 197.862, 39.6544, 0.4576 ) }
    dend_21 { pt3dadd( 333.463, 196.996, 39.76, 0.483 ) }
    dend_21 { pt3dadd( 332.769, 196.089, 39.76, 0.5084 ) }
    dend_21 { pt3dadd( 332.017, 195.23, 39.76, 0.5338 ) }
    dend_21 { pt3dadd( 331.185, 194.446, 39.76, 0.5084 ) }
    dend_21 { pt3dadd( 330.266, 193.77, 39.76, 0.5084 ) }
    dend_21 { pt3dadd( 329.351, 193.087, 39.76, 0.5084 ) }
    dend_21 { pt3dadd( 328.36, 192.531, 39.76, 0.5338 ) }
    dend_21 { pt3dadd( 327.417, 191.898, 39.7603, 0.5084 ) }
    dend_21 { pt3dadd( 326.593, 191.109, 39.7611, 0.483 ) }
    dend_21 { pt3dadd( 325.858, 190.234, 39.7662, 0.483 ) }
    dend_21 { pt3dadd( 325.048, 189.432, 39.7953, 0.5338 ) }
    dend_21 { pt3dadd( 324.186, 188.683, 39.9319, 0.5848 ) }
    dend_21 { pt3dadd( 323.416, 187.909, 40.6585, 0.5848 ) }
    dend_21 { pt3dadd( 322.765, 187.058, 41.6242, 0.5592 ) }
    dend_21 { pt3dadd( 322.16, 186.116, 41.7197, 0.5338 ) }
    dend_21 { pt3dadd( 321.494, 185.222, 41.1429, 0.5592 ) }
    dend_21 { pt3dadd( 320.775, 184.344, 41.0292, 0.5848 ) }
    dend_21 { pt3dadd( 320.151, 183.407, 41.4422, 0.6102 ) }
    dend_21 { pt3dadd( 319.648, 182.436, 40.9167, 0.5848 ) }
    dend_21 { pt3dadd( 319.147, 181.445, 40.255, 0.5338 ) }
    dend_21 { pt3dadd( 318.587, 180.457, 40.2506, 0.5084 ) }
    dend_21 { pt3dadd( 317.962, 179.518, 39.8941, 0.5084 ) }
    dend_21 { pt3dadd( 317.264, 178.62, 39.935, 0.5592 ) }
    dend_21 { pt3dadd( 316.833, 177.587, 40.3642, 0.5848 ) }
    dend_21 { pt3dadd( 316.586, 176.477, 40.3052, 0.6102 ) }
    dend_21 { pt3dadd( 316.234, 175.391, 40.189, 0.6102 ) }
    dend_21 { pt3dadd( 315.852, 174.316, 39.9862, 0.5592 ) }
    dend_21 { pt3dadd( 315.442, 173.29, 40.6398, 0.483 ) }
    dend_21 { pt3dadd( 315.329, 172.183, 40.2013, 0.3814 ) }
    dend_21 { pt3dadd( 315.744, 171.142, 39.76, 0.3304 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 469.627, 314.808, 29.8066, 0.3304 ) }
    dend_13 { pt3dadd( 468.994, 315.688, 30.6667, 0.6864 ) }
    dend_13 { pt3dadd( 468.228, 316.537, 30.7625, 0.788 ) }
    dend_13 { pt3dadd( 467.466, 317.383, 30.6228, 0.8644 ) }
    dend_13 { pt3dadd( 466.837, 318.296, 29.941, 0.9152 ) }
    dend_13 { pt3dadd( 466.04, 319.112, 29.7514, 0.839 ) }
    dend_13 { pt3dadd( 465.217, 319.717, 29.5722, 0.7118 ) }
    dend_13 { pt3dadd( 465.661, 320.262, 27.811, 0.5592 ) }
    dend_13 { pt3dadd( 465.791, 321.215, 26.4015, 0.4576 ) }
    dend_13 { pt3dadd( 465.605, 321.97, 24.5577, 0.4068 ) }
    dend_13 { pt3dadd( 465.29, 322.713, 22.6814, 0.3304 ) }
    dend_13 { pt3dadd( 465.471, 323.501, 20.7897, 0.305 ) }
    dend_13 { pt3dadd( 465.915, 324.388, 19.4818, 0.2796 ) }
    dend_13 { pt3dadd( 466.6, 325.223, 18.7953, 0.305 ) }
    dend_13 { pt3dadd( 467.41, 325.983, 19.0002, 0.2796 ) }
    dend_13 { pt3dadd( 467.364, 326.753, 20.3045, 0.2542 ) }
    dend_13 { pt3dadd( 467.234, 327.727, 21.4054, 0.2288 ) }
    dend_13 { pt3dadd( 467.595, 328.714, 20.9012, 0.2288 ) }
    dend_13 { pt3dadd( 467.716, 329.552, 19.1064, 0.2288 ) }
    dend_13 { pt3dadd( 467.905, 330.338, 17.2348, 0.2796 ) }
    dend_13 { pt3dadd( 466.89, 330.808, 17.019, 0.3814 ) }
    dend_13 { pt3dadd( 466.267, 331.576, 18.247, 0.483 ) }
    dend_13 { pt3dadd( 466.169, 332.691, 18.1804, 0.483 ) }
    dend_13 { pt3dadd( 466.56, 333.719, 17.477, 0.3814 ) }
    dend_13 { pt3dadd( 466.896, 334.772, 17.5277, 0.305 ) }
    dend_13 { pt3dadd( 466.602, 335.792, 18.2706, 0.2796 ) }
    dend_13 { pt3dadd( 466.039, 336.604, 19.6179, 0.305 ) }
    dend_13 { pt3dadd( 465.844, 337.587, 20.6856, 0.2796 ) }
    dend_13 { pt3dadd( 466.096, 338.605, 21.6454, 0.2796 ) }
    dend_13 { pt3dadd( 465.951, 339.704, 21.8058, 0.2796 ) }
    dend_13 { pt3dadd( 465.805, 340.771, 21.5844, 0.3304 ) }
    dend_13 { pt3dadd( 466.205, 341.493, 20.2675, 0.3304 ) }
    dend_13 { pt3dadd( 466.616, 341.789, 17.7853, 0.356 ) }
    dend_13 { pt3dadd( 466.452, 342.51, 16.5556, 0.3304 ) }
    dend_13 { pt3dadd( 466.14, 343.578, 16.8874, 0.3304 ) }
    dend_13 { pt3dadd( 466.068, 344.676, 17.6165, 0.305 ) }
    dend_13 { pt3dadd( 466.078, 345.726, 18.697, 0.305 ) }
    dend_13 { pt3dadd( 466.157, 346.804, 18.7611, 0.3304 ) }
    dend_13 { pt3dadd( 466.379, 347.91, 18.3865, 0.3304 ) }
    dend_13 { pt3dadd( 466.784, 348.847, 17.3205, 0.3304 ) }
    dend_13 { pt3dadd( 466.448, 349.72, 16.1955, 0.2796 ) }
    dend_13 { pt3dadd( 466.523, 350.293, 14.0, 0.305 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 469.627, 314.808, 29.8066, 0.3304 ) }
    dend_10 { pt3dadd( 470.681, 314.935, 28.8744, 0.356 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 91/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 477.048, 227.427, 27.72, 0.2796 ) }
    dend_8 { pt3dadd( 476.339, 226.473, 26.88, 0.2796 ) }
    dend_8 { pt3dadd( 475.609, 225.632, 26.88, 0.2796 ) }
    dend_8 { pt3dadd( 475.055, 224.653, 26.88, 0.3304 ) }
    dend_8 { pt3dadd( 474.583, 223.642, 26.8624, 0.4068 ) }
    dend_8 { pt3dadd( 474.302, 222.654, 26.6, 0.3814 ) }
    dend_8 { pt3dadd( 474.302, 221.52, 26.2979, 0.356 ) }
    dend_8 { pt3dadd( 474.302, 220.635, 24.8573, 0.2796 ) }
    dend_8 { pt3dadd( 474.302, 219.505, 24.64, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_8 { pt3dadd( 474.671, 218.455, 24.64, 0.2542 ) }
    dend_8 { pt3dadd( 474.76, 217.326, 24.6341, 0.2796 ) }
    dend_8 { pt3dadd( 474.76, 216.213, 24.1805, 0.305 ) }
    dend_8 { pt3dadd( 474.723, 215.079, 24.08, 0.356 ) }
    dend_8 { pt3dadd( 474.646, 213.942, 24.0489, 0.4068 ) }
    dend_8 { pt3dadd( 474.252, 213.025, 22.9466, 0.4576 ) }
    dend_8 { pt3dadd( 473.712, 212.031, 22.68, 0.4068 ) }
    dend_8 { pt3dadd( 473.384, 210.935, 22.68, 0.356 ) }
    dend_8 { pt3dadd( 472.654, 210.062, 22.68, 0.305 ) }
    dend_8 { pt3dadd( 472.472, 208.949, 22.68, 0.3304 ) }
    dend_8 { pt3dadd( 472.472, 207.805, 22.68, 0.356 ) }
    dend_8 { pt3dadd( 472.386, 206.674, 22.68, 0.3814 ) }
    dend_8 { pt3dadd( 471.996, 205.605, 22.68, 0.3304 ) }
    dend_8 { pt3dadd( 471.807, 204.476, 22.68, 0.2796 ) }
    dend_8 { pt3dadd( 471.482, 203.435, 22.68, 0.2288 ) }
    dend_8 { pt3dadd( 470.493, 202.894, 22.68, 0.2542 ) }
    dend_8 { pt3dadd( 469.739, 202.054, 22.68, 0.2796 ) }
    dend_8 { pt3dadd( 469.498, 200.961, 22.4106, 0.305 ) }
    dend_8 { pt3dadd( 469.498, 199.85, 21.8761, 0.2796 ) }
    dend_8 { pt3dadd( 469.503, 198.707, 21.84, 0.2542 ) }
    dend_8 { pt3dadd( 469.79, 197.623, 21.84, 0.2288 ) }
    dend_8 { pt3dadd( 470.111, 196.535, 21.5897, 0.2288 ) }
    dend_8 { pt3dadd( 470.184, 195.395, 21.56, 0.2288 ) }
    dend_8 { pt3dadd( 470.184, 194.251, 21.56, 0.2288 ) }
    dend_8 { pt3dadd( 470.184, 193.107, 21.56, 0.2288 ) }
    dend_8 { pt3dadd( 470.184, 191.963, 21.56, 0.2288 ) }
    dend_8 { pt3dadd( 469.962, 192.251, 19.88, 0.2288 ) }
    dend_8 { pt3dadd( 469.756, 191.176, 19.1604, 0.2542 ) }
    dend_8 { pt3dadd( 469.726, 190.045, 19.0319, 0.2796 ) }
    dend_8 { pt3dadd( 469.612, 188.989, 18.48, 0.305 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 30/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 477.048, 227.427, 27.72, 0.2796 ) }
    dend_7 { pt3dadd( 476.988, 227.028, 27.6223, 0.2796 ) }
    dend_7 { pt3dadd( 477.135, 225.922, 27.72, 0.2542 ) }
    dend_7 { pt3dadd( 477.389, 224.807, 27.72, 0.2288 ) }
    dend_7 { pt3dadd( 477.391, 223.663, 27.72, 0.2542 ) }
    dend_7 { pt3dadd( 477.391, 222.519, 27.72, 0.2796 ) }
    dend_7 { pt3dadd( 477.36, 221.378, 27.72, 0.3304 ) }
    dend_7 { pt3dadd( 477.279, 220.238, 27.72, 0.356 ) }
    dend_7 { pt3dadd( 477.277, 219.094, 27.72, 0.4068 ) }
    dend_7 { pt3dadd( 477.277, 217.95, 27.72, 0.4322 ) }
    dend_7 { pt3dadd( 477.362, 216.811, 27.72, 0.4322 ) }
    dend_7 { pt3dadd( 477.391, 215.668, 27.72, 0.3814 ) }
    dend_7 { pt3dadd( 477.853, 214.709, 27.72, 0.305 ) }
    dend_7 { pt3dadd( 478.333, 213.693, 27.72, 0.2542 ) }
    dend_7 { pt3dadd( 479.052, 212.818, 27.72, 0.2288 ) }
    dend_7 { pt3dadd( 479.466, 211.757, 27.72, 0.2288 ) }
    dend_7 { pt3dadd( 479.729, 210.648, 27.72, 0.2542 ) }
    dend_7 { pt3dadd( 479.908, 209.526, 27.72, 0.3304 ) }
    dend_7 { pt3dadd( 479.908, 208.382, 27.72, 0.4068 ) }
    dend_7 { pt3dadd( 479.913, 207.238, 27.72, 0.4322 ) }
    dend_7 { pt3dadd( 480.236, 206.178, 27.72, 0.3814 ) }
    dend_7 { pt3dadd( 480.915, 205.325, 27.72, 0.3304 ) }
    dend_7 { pt3dadd( 481.319, 204.344, 27.9684, 0.305 ) }
    dend_7 { pt3dadd( 481.772, 203.298, 28.0, 0.2796 ) }
    dend_7 { pt3dadd( 482.456, 202.391, 28.0, 0.2542 ) }
    dend_7 { pt3dadd( 482.85, 201.336, 28.0, 0.2288 ) }
    dend_7 { pt3dadd( 483.34, 200.314, 28.0, 0.2288 ) }
    dend_7 { pt3dadd( 483.868, 199.304, 28.0, 0.2288 ) }
    dend_7 { pt3dadd( 484.503, 198.381, 28.0, 0.2542 ) }
    dend_7 { pt3dadd( 485.161, 197.53, 28.0, 0.2796 ) }
    dend_7 { pt3dadd( 485.275, 196.4, 28.0, 0.305 ) }
    dend_7 { pt3dadd( 485.305, 195.257, 28.0, 0.305 ) }
    dend_7 { pt3dadd( 485.396, 194.12, 28.0, 0.305 ) }
    dend_7 { pt3dadd( 485.399, 193.014, 28.5802, 0.305 ) }
    dend_7 { pt3dadd( 485.517, 191.916, 28.84, 0.2796 ) }
    dend_7 { pt3dadd( 486.414, 191.245, 28.84, 0.2542 ) }
    dend_7 { pt3dadd( 487.115, 190.487, 28.84, 0.2288 ) }
    dend_7 { pt3dadd( 487.344, 189.388, 28.84, 0.2542 ) }
    dend_7 { pt3dadd( 487.344, 188.244, 28.84, 0.305 ) }
    dend_7 { pt3dadd( 487.344, 187.1, 28.84, 0.4068 ) }
    dend_7 { pt3dadd( 487.344, 185.956, 28.84, 0.483 ) }
    dend_7 { pt3dadd( 487.344, 184.817, 28.7431, 0.5338 ) }
    dend_7 { pt3dadd( 487.344, 183.69, 28.2999, 0.483 ) }
    dend_7 { pt3dadd( 487.344, 182.55, 28.0521, 0.4068 ) }
    dend_7 { pt3dadd( 487.389, 181.421, 28.0, 0.305 ) }
    dend_7 { pt3dadd( 487.995, 180.467, 28.0, 0.2796 ) }
    dend_7 { pt3dadd( 488.335, 179.384, 28.0, 0.3304 ) }
    dend_7 { pt3dadd( 488.374, 178.243, 28.0, 0.4322 ) }
    dend_7 { pt3dadd( 488.374, 177.099, 28.0, 0.483 ) }
    dend_7 { pt3dadd( 488.375, 175.955, 28.033, 0.4322 ) }
    dend_7 { pt3dadd( 488.728, 174.907, 28.56, 0.356 ) }
    dend_7 { pt3dadd( 489.424, 174.015, 28.56, 0.305 ) }
    dend_7 { pt3dadd( 490.436, 173.53, 28.56, 0.305 ) }
    dend_7 { pt3dadd( 491.307, 172.832, 29.0696, 0.2796 ) }
    dend_7 { pt3dadd( 492.366, 172.63, 29.4, 0.2542 ) }
    dend_7 { pt3dadd( 493.508, 172.564, 29.4, 0.2542 ) }
    dend_7 { pt3dadd( 494.619, 172.316, 29.4213, 0.2796 ) }
    dend_7 { pt3dadd( 495.684, 172.172, 30.3089, 0.305 ) }
    dend_7 { pt3dadd( 496.792, 172.071, 30.8, 0.2796 ) }
    dend_7 { pt3dadd( 497.649, 171.486, 30.8, 0.2542 ) }
    dend_7 { pt3dadd( 498.784, 171.371, 30.8, 0.2288 ) }
    dend_7 { pt3dadd( 499.928, 171.371, 30.8, 0.2542 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 92/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 405.375, 195.706, 23.24, 0.305 ) }
    dend_32 { pt3dadd( 405.868, 196.721, 23.6625, 0.4576 ) }
    dend_32 { pt3dadd( 406.147, 197.766, 24.5112, 0.4576 ) }
    dend_32 { pt3dadd( 406.682, 198.261, 26.1055, 0.4576 ) }
    dend_32 { pt3dadd( 406.715, 199.017, 28.019, 0.4322 ) }
    dend_32 { pt3dadd( 406.722, 199.766, 26.5723, 0.4068 ) }
    dend_32 { pt3dadd( 406.621, 200.52, 24.7755, 0.356 ) }
    dend_32 { pt3dadd( 406.558, 201.55, 25.1087, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_32 { pt3dadd( 406.463, 202.591, 24.8069, 0.2796 ) }
    dend_32 { pt3dadd( 406.396, 203.715, 24.4639, 0.2796 ) }
    dend_32 { pt3dadd( 406.71, 204.652, 25.1992, 0.2796 ) }
    dend_32 { pt3dadd( 407.428, 204.998, 24.442, 0.3304 ) }
    dend_32 { pt3dadd( 407.678, 205.294, 26.6, 0.356 ) }
    dend_32 { pt3dadd( 407.95, 205.615, 24.8942, 0.4068 ) }
    dend_32 { pt3dadd( 408.223, 206.111, 23.8958, 0.4576 ) }
    dend_32 { pt3dadd( 408.522, 207.135, 23.8493, 0.483 ) }
    dend_32 { pt3dadd( 408.522, 208.251, 24.341, 0.483 ) }
    dend_32 { pt3dadd( 408.708, 209.235, 24.071, 0.4322 ) }
    dend_32 { pt3dadd( 409.018, 210.193, 24.6428, 0.4576 ) }
    dend_32 { pt3dadd( 409.197, 211.13, 25.1272, 0.483 ) }
    dend_32 { pt3dadd( 409.536, 212.09, 26.01, 0.5338 ) }
    dend_32 { pt3dadd( 409.989, 212.858, 26.3858, 0.5084 ) }
    dend_32 { pt3dadd( 410.243, 213.876, 26.4732, 0.5084 ) }
    dend_32 { pt3dadd( 410.28, 214.715, 25.8709, 0.483 ) }
    dend_32 { pt3dadd( 410.598, 215.598, 26.5689, 0.483 ) }
    dend_32 { pt3dadd( 410.146, 216.372, 26.0764, 0.4322 ) }
    dend_32 { pt3dadd( 410.325, 217.37, 26.88, 0.4322 ) }
    dend_32 { pt3dadd( 410.353, 218.498, 26.7182, 0.4068 ) }
    dend_32 { pt3dadd( 410.74, 219.46, 27.6612, 0.4322 ) }
    dend_32 { pt3dadd( 410.81, 220.525, 27.3868, 0.4068 ) }
    dend_32 { pt3dadd( 411.3, 221.203, 26.0448, 0.4068 ) }
    dend_32 { pt3dadd( 411.497, 222.294, 26.3004, 0.3304 ) }
    dend_32 { pt3dadd( 411.641, 223.222, 26.7887, 0.305 ) }
    dend_32 { pt3dadd( 411.723, 224.222, 26.6613, 0.305 ) }
    dend_32 { pt3dadd( 411.611, 225.227, 27.7122, 0.4068 ) }
    dend_32 { pt3dadd( 411.814, 226.201, 27.3067, 0.4576 ) }
    dend_32 { pt3dadd( 412.087, 227.1, 27.1071, 0.5084 ) }
    dend_32 { pt3dadd( 412.467, 228.11, 27.106, 0.5084 ) }
    dend_32 { pt3dadd( 412.928, 229.013, 26.6582, 0.5338 ) }
    dend_32 { pt3dadd( 413.381, 230.018, 26.5591, 0.5084 ) }
    dend_32 { pt3dadd( 413.486, 231.115, 26.2875, 0.4322 ) }
    dend_32 { pt3dadd( 413.639, 231.895, 25.2, 0.3814 ) }
    dend_32 { pt3dadd( 413.776, 232.934, 25.0858, 0.356 ) }
    dend_32 { pt3dadd( 413.889, 233.975, 26.035, 0.4322 ) }
    dend_32 { pt3dadd( 413.927, 235.025, 25.8964, 0.483 ) }
    dend_32 { pt3dadd( 414.192, 235.945, 26.32, 0.5338 ) }
    dend_32 { pt3dadd( 414.501, 236.844, 25.4391, 0.5084 ) }
    dend_32 { pt3dadd( 414.814, 237.781, 25.5419, 0.483 ) }
    dend_32 { pt3dadd( 414.927, 238.753, 26.0372, 0.483 ) }
    dend_32 { pt3dadd( 415.209, 238.867, 26.32, 0.483 ) }
    dend_32 { pt3dadd( 415.615, 239.93, 26.0616, 0.5084 ) }
    dend_32 { pt3dadd( 415.734, 240.961, 24.9292, 0.483 ) }
    dend_32 { pt3dadd( 415.935, 242.057, 24.6764, 0.5084 ) }
    dend_32 { pt3dadd( 416.257, 243.133, 25.1448, 0.5084 ) }
    dend_32 { pt3dadd( 416.674, 244.194, 25.1896, 0.5592 ) }
    dend_32 { pt3dadd( 417.097, 245.256, 25.198, 0.5592 ) }
    dend_32 { pt3dadd( 417.643, 246.255, 25.1997, 0.5084 ) }
    dend_32 { pt3dadd( 418.304, 247.185, 25.1754, 0.3814 ) }
    dend_32 { pt3dadd( 419.172, 247.909, 24.8116, 0.3304 ) }
    dend_32 { pt3dadd( 419.858, 248.779, 24.1604, 0.3814 ) }
    dend_32 { pt3dadd( 420.673, 249.579, 24.0873, 0.5338 ) }
    dend_32 { pt3dadd( 421.348, 250.502, 24.0495, 0.5848 ) }
    dend_32 { pt3dadd( 421.98, 251.442, 23.7342, 0.5592 ) }
    dend_32 { pt3dadd( 422.73, 252.261, 23.0997, 0.4576 ) }
    dend_32 { pt3dadd( 423.542, 253.064, 23.0384, 0.4068 ) }
    dend_32 { pt3dadd( 424.411, 253.794, 23.3596, 0.3814 ) }
    dend_32 { pt3dadd( 425.254, 254.515, 23.7196, 0.3814 ) }
    dend_32 { pt3dadd( 425.813, 255.49, 23.2098, 0.3814 ) }
    dend_32 { pt3dadd( 426.277, 256.531, 23.0028, 0.3814 ) }
    dend_32 { pt3dadd( 426.632, 257.612, 22.9676, 0.3814 ) }
    dend_32 { pt3dadd( 426.763, 258.749, 22.9611, 0.4068 ) }
    dend_32 { pt3dadd( 426.816, 259.888, 22.9603, 0.4322 ) }
    dend_32 { pt3dadd( 426.725, 261.023, 23.0793, 0.483 ) }
    dend_32 { pt3dadd( 426.744, 262.142, 23.6362, 0.5084 ) }
    dend_32 { pt3dadd( 426.908, 263.24, 24.283, 0.5084 ) }
    dend_32 { pt3dadd( 427.124, 264.312, 25.062, 0.483 ) }
    dend_32 { pt3dadd( 427.182, 265.433, 25.4318, 0.4576 ) }
    dend_32 { pt3dadd( 427.218, 265.866, 25.3165, 0.4576 ) }
    dend_32 { pt3dadd( 427.623, 266.935, 25.2244, 0.4068 ) }
    dend_32 { pt3dadd( 427.994, 268.016, 25.2112, 0.356 ) }
    dend_32 { pt3dadd( 428.077, 269.136, 25.7373, 0.3304 ) }
    dend_32 { pt3dadd( 428.224, 270.125, 25.9781, 0.356 ) }
    dend_32 { pt3dadd( 428.187, 271.23, 25.3148, 0.356 ) }
    dend_32 { pt3dadd( 428.842, 272.166, 25.2297, 0.305 ) }
    dend_32 { pt3dadd( 429.63, 272.901, 25.4366, 0.2796 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 77/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 405.375, 195.706, 23.24, 0.305 ) }
    dend_31 { pt3dadd( 404.981, 194.669, 23.6006, 0.305 ) }
    dend_31 { pt3dadd( 405.373, 193.934, 24.9539, 0.356 ) }
    dend_31 { pt3dadd( 405.024, 193.282, 25.4531, 0.4068 ) }
    dend_31 { pt3dadd( 404.294, 192.544, 25.9823, 0.4068 ) }
    dend_31 { pt3dadd( 404.175, 191.485, 26.1209, 0.4322 ) }
    dend_31 { pt3dadd( 404.084, 190.812, 27.72, 0.4068 ) }
    dend_31 { pt3dadd( 403.958, 190.022, 27.2726, 0.4068 ) }
    dend_31 { pt3dadd( 403.419, 189.182, 27.8466, 0.4068 ) }
    dend_31 { pt3dadd( 403.247, 188.381, 28.7762, 0.4068 ) }
    dend_31 { pt3dadd( 402.959, 187.32, 29.0424, 0.4576 ) }
    dend_31 { pt3dadd( 402.504, 186.573, 28.8089, 0.4576 ) }
    dend_31 { pt3dadd( 402.301, 185.537, 28.2937, 0.5084 ) }
    dend_31 { pt3dadd( 401.674, 184.647, 28.8683, 0.483 ) }
    dend_31 { pt3dadd( 401.225, 183.863, 28.294, 0.483 ) }
    dend_31 { pt3dadd( 401.144, 182.873, 28.9663, 0.4576 ) }
    dend_31 { pt3dadd( 400.366, 182.092, 29.5571, 0.5084 ) }
    dend_31 { pt3dadd( 399.953, 181.14, 30.0493, 0.5592 ) }
    dend_31 { pt3dadd( 399.714, 180.3, 29.1376, 0.6356 ) }
    dend_31 { pt3dadd( 399.413, 179.431, 28.0795, 0.6102 ) }
    dend_31 { pt3dadd( 398.851, 178.57, 28.56, 0.5848 ) }
    dend_31 { pt3dadd( 398.698, 177.813, 29.4059, 0.5084 ) }
    dend_31 { pt3dadd( 398.477, 176.829, 29.6612, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_31 { pt3dadd( 398.334, 175.829, 30.2666, 0.4322 ) }
    dend_31 { pt3dadd( 397.883, 174.918, 31.08, 0.3814 ) }
    dend_31 { pt3dadd( 397.654, 174.221, 33.04, 0.305 ) }
    dend_31 { pt3dadd( 397.37, 173.18, 33.04, 0.2542 ) }
    dend_31 { pt3dadd( 396.739, 172.286, 33.04, 0.2542 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 5/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 470.681, 314.935, 28.8744, 0.356 ) }
    dend_12 { pt3dadd( 470.85, 315.067, 27.9241, 0.3304 ) }
    dend_12 { pt3dadd( 471.183, 315.655, 25.8972, 0.3814 ) }
    dend_12 { pt3dadd( 471.584, 316.574, 24.8156, 0.356 ) }
    dend_12 { pt3dadd( 472.398, 317.314, 24.0906, 0.3304 ) }
    dend_12 { pt3dadd( 473.244, 318.013, 23.3041, 0.3304 ) }
    dend_12 { pt3dadd( 473.618, 319.066, 22.8382, 0.3304 ) }
    dend_12 { pt3dadd( 473.131, 319.91, 21.7087, 0.3304 ) }
    dend_12 { pt3dadd( 473.603, 320.226, 19.2945, 0.2796 ) }
    dend_12 { pt3dadd( 474.269, 320.739, 17.4818, 0.2542 ) }
    dend_12 { pt3dadd( 475.147, 321.165, 17.1886, 0.2542 ) }
    dend_12 { pt3dadd( 476.024, 320.744, 17.6602, 0.2796 ) }
    dend_12 { pt3dadd( 476.911, 320.258, 16.8454, 0.305 ) }
    dend_12 { pt3dadd( 478.0, 320.079, 16.63, 0.305 ) }
    dend_12 { pt3dadd( 479.078, 319.995, 15.7366, 0.3304 ) }
    dend_12 { pt3dadd( 480.036, 320.161, 15.9774, 0.356 ) }
    dend_12 { pt3dadd( 480.771, 320.931, 16.5208, 0.3814 ) }
    dend_12 { pt3dadd( 481.026, 321.978, 16.9795, 0.356 ) }
    dend_12 { pt3dadd( 480.734, 323.05, 17.2836, 0.356 ) }
    dend_12 { pt3dadd( 480.336, 324.119, 17.187, 0.3304 ) }
    dend_12 { pt3dadd( 479.988, 325.153, 16.4304, 0.3304 ) }
    dend_12 { pt3dadd( 479.748, 326.238, 15.8141, 0.2796 ) }
    dend_12 { pt3dadd( 479.303, 327.159, 16.7233, 0.2796 ) }
    dend_12 { pt3dadd( 478.904, 328.193, 16.7202, 0.2796 ) }
    dend_12 { pt3dadd( 478.614, 329.295, 16.8392, 0.3304 ) }
    dend_12 { pt3dadd( 478.387, 330.414, 17.0215, 0.3304 ) }
    dend_12 { pt3dadd( 478.128, 331.52, 17.3438, 0.3304 ) }
    dend_12 { pt3dadd( 477.966, 332.652, 17.3597, 0.2796 ) }
    dend_12 { pt3dadd( 477.937, 333.795, 17.3589, 0.2542 ) }
    dend_12 { pt3dadd( 477.763, 334.925, 17.3524, 0.2288 ) }
    dend_12 { pt3dadd( 477.504, 336.04, 17.3124, 0.2288 ) }
    dend_12 { pt3dadd( 477.411, 337.17, 16.9694, 0.2288 ) }
    dend_12 { pt3dadd( 477.048, 337.938, 15.12, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 38/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 470.681, 314.935, 28.8744, 0.356 ) }
    dend_11 { pt3dadd( 471.025, 314.804, 29.1869, 0.2288 ) }
    dend_11 { pt3dadd( 471.965, 314.427, 30.3783, 0.2542 ) }
    dend_11 { pt3dadd( 472.772, 314.135, 32.2028, 0.2796 ) }
    dend_11 { pt3dadd( 473.688, 313.833, 33.1559, 0.305 ) }
    dend_11 { pt3dadd( 474.546, 313.29, 32.1325, 0.2796 ) }
    dend_11 { pt3dadd( 475.386, 313.16, 30.3556, 0.2796 ) }
    dend_11 { pt3dadd( 476.419, 313.191, 29.6789, 0.3304 ) }
    dend_11 { pt3dadd( 477.484, 313.002, 30.4091, 0.4068 ) }
    dend_11 { pt3dadd( 478.401, 312.603, 31.7262, 0.4322 ) }
    dend_11 { pt3dadd( 479.318, 312.288, 33.1635, 0.3814 ) }
    dend_11 { pt3dadd( 480.235, 311.826, 33.3024, 0.356 ) }
    dend_11 { pt3dadd( 480.975, 311.003, 32.7317, 0.3814 ) }
    dend_11 { pt3dadd( 481.688, 310.118, 32.6348, 0.4322 ) }
    dend_11 { pt3dadd( 482.309, 309.172, 32.9182, 0.4322 ) }
    dend_11 { pt3dadd( 483.068, 308.339, 33.04, 0.4322 ) }
    dend_11 { pt3dadd( 483.953, 307.615, 33.04, 0.4068 ) }
    dend_11 { pt3dadd( 484.791, 306.837, 33.04, 0.4322 ) }
    dend_11 { pt3dadd( 485.574, 306.004, 33.04, 0.4068 ) }
    dend_11 { pt3dadd( 486.249, 305.084, 33.04, 0.4068 ) }
    dend_11 { pt3dadd( 486.83, 304.099, 33.04, 0.356 ) }
    dend_11 { pt3dadd( 487.076, 303.003, 33.0403, 0.305 ) }
    dend_11 { pt3dadd( 487.083, 301.862, 33.0431, 0.2542 ) }
    dend_11 { pt3dadd( 486.897, 300.737, 33.0604, 0.2796 ) }
    dend_11 { pt3dadd( 486.72, 299.609, 33.1789, 0.3304 ) }
    dend_11 { pt3dadd( 486.783, 298.499, 33.7095, 0.3814 ) }
    dend_11 { pt3dadd( 486.733, 297.384, 33.5544, 0.3304 ) }
    dend_11 { pt3dadd( 486.717, 296.494, 31.9558, 0.2796 ) }
    dend_11 { pt3dadd( 487.067, 295.756, 30.0468, 0.2542 ) }
    dend_11 { pt3dadd( 487.651, 294.853, 29.2855, 0.2796 ) }
    dend_11 { pt3dadd( 487.899, 294.42, 35.0263, 0.305 ) }
    dend_11 { pt3dadd( 488.826, 294.256, 34.5391, 0.2796 ) }
    dend_11 { pt3dadd( 489.093, 293.731, 33.6185, 0.305 ) }
    dend_11 { pt3dadd( 489.253, 292.695, 34.4089, 0.3304 ) }
    dend_11 { pt3dadd( 489.927, 291.892, 34.0816, 0.3814 ) }
    dend_11 { pt3dadd( 490.213, 290.983, 34.5332, 0.3814 ) }
    dend_11 { pt3dadd( 490.464, 290.113, 34.1328, 0.3814 ) }
    dend_11 { pt3dadd( 490.417, 289.133, 33.9945, 0.3814 ) }
    dend_11 { pt3dadd( 490.561, 288.266, 34.9852, 0.3304 ) }
    dend_11 { pt3dadd( 491.287, 287.432, 34.932, 0.2796 ) }
    dend_11 { pt3dadd( 491.599, 286.39, 34.44, 0.2542 ) }
    dend_11 { pt3dadd( 492.099, 285.435, 34.9474, 0.2796 ) }
    dend_11 { pt3dadd( 492.591, 284.543, 34.5766, 0.305 ) }
    dend_11 { pt3dadd( 493.316, 283.823, 34.4109, 0.305 ) }
    dend_11 { pt3dadd( 494.27, 283.319, 34.44, 0.305 ) }
    dend_11 { pt3dadd( 494.455, 282.484, 35.0, 0.305 ) }
    dend_11 { pt3dadd( 495.374, 281.906, 34.5094, 0.2796 ) }
    dend_11 { pt3dadd( 496.415, 281.464, 34.72, 0.2796 ) }
    dend_11 { pt3dadd( 497.211, 280.953, 35.1882, 0.305 ) }
    dend_11 { pt3dadd( 498.289, 280.639, 35.28, 0.3814 ) }
    dend_11 { pt3dadd( 499.374, 280.358, 35.7078, 0.4068 ) }
    dend_11 { pt3dadd( 500.412, 280.319, 35.567, 0.3814 ) }
    dend_11 { pt3dadd( 501.476, 280.623, 35.56, 0.305 ) }
    dend_11 { pt3dadd( 502.62, 280.623, 35.56, 0.2542 ) }
    dend_11 { pt3dadd( 503.36, 281.109, 35.56, 0.2542 ) }
    dend_11 { pt3dadd( 504.172, 281.755, 35.56, 0.2796 ) }
    dend_11 { pt3dadd( 504.933, 281.767, 36.6489, 0.305 ) }
    dend_11 { pt3dadd( 506.027, 281.882, 36.232, 0.2796 ) }
    dend_11 { pt3dadd( 507.166, 281.882, 36.4, 0.2542 ) }
    dend_11 { pt3dadd( 508.31, 281.882, 36.4039, 0.2288 ) }
    dend_11 { pt3dadd( 509.443, 281.882, 36.68, 0.2288 ) }
    dend_11 { pt3dadd( 510.447, 282.238, 37.24, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_11 { pt3dadd( 511.578, 282.339, 37.2792, 0.2288 ) }
    dend_11 { pt3dadd( 512.714, 282.339, 37.52, 0.2288 ) }
    dend_11 { pt3dadd( 513.859, 282.339, 37.52, 0.2288 ) }
    dend_11 { pt3dadd( 515.003, 282.339, 37.52, 0.2288 ) }
    dend_11 { pt3dadd( 515.587, 282.511, 38.5694, 0.2542 ) }
    dend_11 { pt3dadd( 515.885, 283.36, 39.739, 0.2796 ) }
    dend_11 { pt3dadd( 516.674, 283.68, 38.64, 0.305 ) }
    dend_11 { pt3dadd( 517.504, 283.473, 38.3158, 0.2796 ) }
    dend_11 { pt3dadd( 518.245, 283.328, 38.8021, 0.2796 ) }
    dend_11 { pt3dadd( 518.795, 282.692, 39.4394, 0.305 ) }
    dend_11 { pt3dadd( 519.681, 282.072, 39.4573, 0.3814 ) }
    dend_11 { pt3dadd( 520.466, 281.64, 39.3887, 0.4322 ) }
    dend_11 { pt3dadd( 521.338, 281.093, 39.1986, 0.4576 ) }
    dend_11 { pt3dadd( 522.433, 281.014, 39.1838, 0.4576 ) }
    dend_11 { pt3dadd( 523.325, 280.481, 39.8804, 0.4322 ) }
    dend_11 { pt3dadd( 524.141, 280.055, 39.6466, 0.3814 ) }
    dend_11 { pt3dadd( 524.962, 280.307, 40.1887, 0.3304 ) }
    dend_11 { pt3dadd( 525.861, 280.274, 40.04, 0.3304 ) }
    dend_11 { pt3dadd( 526.714, 279.687, 40.04, 0.356 ) }
    dend_11 { pt3dadd( 527.641, 279.587, 40.1999, 0.356 ) }
    dend_11 { pt3dadd( 528.517, 279.462, 38.6224, 0.356 ) }
    dend_11 { pt3dadd( 529.172, 279.102, 39.4282, 0.356 ) }
    dend_11 { pt3dadd( 529.838, 278.564, 40.3365, 0.4068 ) }
    dend_11 { pt3dadd( 530.636, 278.45, 40.9578, 0.3814 ) }
    dend_11 { pt3dadd( 531.779, 278.45, 40.88, 0.4068 ) }
    dend_11 { pt3dadd( 532.595, 278.45, 41.2367, 0.3814 ) }
    dend_11 { pt3dadd( 533.602, 278.669, 41.9205, 0.4068 ) }
    dend_11 { pt3dadd( 534.356, 278.907, 41.44, 0.356 ) }
    dend_11 { pt3dadd( 535.451, 278.967, 41.5332, 0.356 ) }
    dend_11 { pt3dadd( 536.345, 278.818, 42.6829, 0.356 ) }
    dend_11 { pt3dadd( 537.115, 278.901, 44.4063, 0.356 ) }
    dend_11 { pt3dadd( 537.555, 279.333, 46.3543, 0.305 ) }
    dend_11 { pt3dadd( 538.366, 278.924, 46.2, 0.2542 ) }
    dend_11 { pt3dadd( 538.366, 277.998, 47.32, 0.2542 ) }
    dend_11 { pt3dadd( 538.463, 277.411, 46.1188, 0.2796 ) }
    dend_11 { pt3dadd( 538.903, 277.121, 47.32, 0.305 ) }
    dend_11 { pt3dadd( 539.625, 276.996, 46.1009, 0.2796 ) }
    dend_11 { pt3dadd( 540.376, 276.724, 46.0096, 0.2542 ) }
    dend_11 { pt3dadd( 541.215, 276.867, 46.2255, 0.2288 ) }
    dend_11 { pt3dadd( 542.168, 276.663, 46.2022, 0.2288 ) }
    dend_11 { pt3dadd( 542.942, 276.962, 46.2, 0.2796 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_63, dend_62, dend_59, dend_48, dend_39, dend_0, dend_65, dend_64, dend_61, dend_60, dend_58, dend_49, dend_47, dend_40, dend_34, dend_1, dend_55, dend_50, dend_46, dend_41, dend_38, dend_35, dend_17, dend_2, dend_57, dend_56, dend_54, dend_51, dend_45, dend_42, dend_37, dend_36, dend_33, dend_18, dend_4, dend_3, dend_53, dend_52, dend_44, dend_43, dend_24, dend_19, dend_14, dend_5, dend_28, dend_25, dend_23, dend_20, dend_16, dend_15, dend_9, dend_6, dend_30, dend_29, dend_27, dend_26, dend_22, dend_21, dend_13, dend_10, dend_8, dend_7, dend_32, dend_31, dend_12, dend_11]}
    dend = new SectionList()
    dend_63 dend.append()
    dend_62 dend.append()
    dend_59 dend.append()
    dend_48 dend.append()
    dend_39 dend.append()
    dend_0 dend.append()
    dend_65 dend.append()
    dend_64 dend.append()
    dend_61 dend.append()
    dend_60 dend.append()
    dend_58 dend.append()
    dend_49 dend.append()
    dend_47 dend.append()
    dend_40 dend.append()
    dend_34 dend.append()
    dend_1 dend.append()
    dend_55 dend.append()
    dend_50 dend.append()
    dend_46 dend.append()
    dend_41 dend.append()
    dend_38 dend.append()
    dend_35 dend.append()
    dend_17 dend.append()
    dend_2 dend.append()
    dend_57 dend.append()
    dend_56 dend.append()
    dend_54 dend.append()
    dend_51 dend.append()
    dend_45 dend.append()
    dend_42 dend.append()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_33 dend.append()
    dend_18 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_53 dend.append()
    dend_52 dend.append()
    dend_44 dend.append()
    dend_43 dend.append()
    dend_24 dend.append()
    dend_19 dend.append()
    dend_14 dend.append()
    dend_5 dend.append()
    dend_28 dend.append()
    dend_25 dend.append()
    dend_23 dend.append()
    dend_20 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_9 dend.append()
    dend_6 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_27 dend.append()
    dend_26 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_21481, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_21481 = new SectionList()
    soma_0 OneSecGrp_SectionRef_21481.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_1, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_1 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_2 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.9200001  // units: uF/cm2
    forsec axon cm = 1.9200001  // units: uF/cm2
    forsec dend cm = 1.9200001  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 30.79  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 2.0739593E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.077333845  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 4.005871E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.21179648  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.589116  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.018146025  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 2.3201281E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 8.566431E-4  // units: S cm-2
        e_pas_nml2 = -85.911095  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 6.059588E-4  // units: S cm-2
        e_pas_nml2 = -85.911095  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.1584476E-7  // units: S cm-2
        e_pas_nml2 = -85.911095  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 9.018702E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0054861936  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_63 nseg = 5
    dend_62 nseg = 3
    dend_65 nseg = 3
    dend_64 nseg = 3
    dend_61 nseg = 3
    dend_60 nseg = 3
    dend_58 nseg = 5
    dend_46 nseg = 7
    dend_38 nseg = 7
    dend_54 nseg = 9
    dend_51 nseg = 3
    dend_45 nseg = 5
    dend_37 nseg = 5
    dend_36 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_53 nseg = 7
    dend_52 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 7
    dend_24 nseg = 3
    dend_25 nseg = 3
    dend_23 nseg = 9
    dend_20 nseg = 5
    dend_15 nseg = 3
    dend_9 nseg = 3
    dend_6 nseg = 3
    dend_21 nseg = 5
    dend_13 nseg = 3
    dend_8 nseg = 3
    dend_7 nseg = 3
    dend_32 nseg = 5
    dend_12 nseg = 3
    dend_11 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472304676


