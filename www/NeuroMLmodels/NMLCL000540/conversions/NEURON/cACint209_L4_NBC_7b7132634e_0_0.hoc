// Cell: cACint209_L4_NBC_7b7132634e_0_0
/*
{
  "id" : "cACint209_L4_NBC_7b7132634e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.49041, 11.0652, -2.71254, 3.25215", "-5.9849, 9.8974, -2.44278, 5.32263", "-5.47938, 8.72963, -2.17303, 7.86794", "-4.97387, 7.56187, -1.90327, 9.54929", "-4.46836, 6.3941, -1.63352, 10.4694", "-3.96284, 5.22633, -1.36376, 11.3603", "-3.45733, 4.05856, -1.094, 12.3104", "-2.95181, 2.89079, -0.824248, 12.9638", "-2.4463, 1.72302, -0.554492, 13.5833", "-1.94079, 0.555256, -0.284737, 14.0962", "-1.43527, -0.612513, -0.0149809, 14.3542", "-0.929761, -1.78028, 0.254775, 14.3687", "-0.424248, -2.94805, 0.524531, 14.253", "0.0812657, -4.11582, 0.794286, 13.7298", "0.586779, -5.28359, 1.06404, 13.1099", "1.09229, -6.45135, 1.3338, 12.1759", "1.59781, -7.61912, 1.60355, 10.8379", "2.10332, -8.78689, 1.87331, 9.17912", "2.60883, -9.95466, 2.14307, 6.96846", "3.11435, -11.1224, 2.41282, 4.29687", "3.61986, -12.2902, 2.68258, 2.60358" ]
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-1.00308, -3.88096, 19.7562, 1.92", "-1.00308, -3.88096, 19.7562, 1.92", "-1.9654, -4.16321, 20.1792, 2.06", "-3.7217, -4.38869, 21.201, 0.66", "-4.66111, -4.3306, 21.9656, 1.11", "-5.08156, -4.17574, 22.4575, 1.18", "-5.82637, -3.62114, 23.6062, 0.74", "-6.62973, -2.58179, 25.2591, 1.4", "-7.01396, -1.7592, 26.3501, 1.69", "-7.40341, -0.43114, 27.9387, 0.74", "-7.63262, 0.834202, 29.404, 1.11", "-7.71064, 1.78821, 30.4912, 1.55", "-7.70862, 1.82957, 30.5364, 1.55", "-7.54772, 2.7423, 31.4789, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000452740349
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.30692, -3.14596, -5.80388, 1.11", "5.0282, -3.99423, -5.80388, 1.11", "5.92937, -5.07526, -5.80388, 1.25", "6.72764, -6.02194, -5.80388, 1.47", "7.48024, -6.92792, -5.83985, 1.69", "8.31185, -7.9784, -5.90309, 1.84", "9.00926, -8.89515, -5.97939, 1.47", "9.09903, -9.02054, -5.99281, 1.47", "9.61144, -9.77899, -6.08596, 1.47", "10.4256, -10.9963, -6.25004, 0.88", "11.1918, -12.151, -6.41158, 0.66", "11.919, -13.2121, -6.56002, 0.66", "12.5838, -14.1346, -6.65723, 1.55", "13.2037, -14.949, -6.70474, 2.36", "13.4867, -15.2895, -6.70586, 2.14", "14.0005, -15.8301, -6.67468, 1.77", "14.5641, -16.3582, -6.63127, 1.11", "15.3682, -17.0588, -6.55722, 0.96", "16.3555, -17.8822, -6.46207, 0.52", "17.1182, -18.4992, -6.3879, 0.52", "17.8713, -19.1055, -6.31786, 1.4", "18.6159, -19.693, -6.25809, 1.92", "19.0452, -20.0377, -6.23818, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000452740349
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "2.80693, -13.1524, 1.50612, 2.58", "2.80693, -13.1524, 1.50612, 2.58", "3.09458, -14.2885, 1.53994, 2.5", "3.56275, -16.1373, 1.59497, 2.36", "4.07755, -18.1704, 1.65548, 2.36", "4.63365, -20.3665, 1.72085, 2.73", "4.84523, -21.202, 1.74572, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000452740349
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.46308, 9.75854, -5.86388, 3.9", "-0.943077, 10.4516, -5.86388, 3.9" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000452740349
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.19308, 11.5436, -2.61388, 1.62", "-7.19308, 11.5436, -2.61388, 1.62", "-7.16932, 12.2959, -2.72206, 1.4", "-7.10674, 13.2081, -2.86539, 1.25", "-6.99949, 14.546, -3.08233, 1.47", "-6.85645, 15.9879, -3.30202, 1.77", "-6.70329, 17.3199, -3.48807, 2.14", "-6.56005, 18.3237, -3.61617, 2.14", "-6.33467, 19.643, -3.73119, 1.84", "-6.31476, 19.7525, -3.73673, 1.84", "-6.0934, 20.9553, -3.74065, 1.4", "-5.90326, 22.116, -3.72122, 1.25", "-5.75846, 23.2001, -3.6799, 1.25", "-5.55947, 24.8618, -3.59688, 1.25", "-5.54117, 25.0388, -3.58518, 1.25", "-5.4263, 26.2585, -3.50989, 1.62", "-5.31468, 27.989, -3.4211, 2.43", "-5.27798, 28.8944, -3.38754, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000452740349
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.61986, -12.2902, 2.68258, 0.782107", "9.57881, -26.0558, 2.68258, 0.782107", "15.5378, -39.8213, 2.68258, 0.782107" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-7.54772, 2.7423, 31.4789, 0.74", "-6.91286, 3.68895, 31.988, 0.74", "-6.50985, 4.30209, 32.3095, 0.37", "-5.76271, 5.50639, 32.8839, 0.37", "-5.47308, 5.99083, 33.1018, 0.66", "-4.89813, 6.91873, 33.5469, 0.66", "-4.65233, 7.26678, 33.7193, 0.96", "-4.5458, 7.37672, 33.78, 0.96", "-3.88677, 7.7938, 34.0975, 1.18", "-3.82316, 7.81177, 34.1212, 1.18", "-2.82674, 7.88947, 34.4616, 0.81", "-1.68236, 7.75313, 34.7997, 0.37", "-0.31093, 7.3595, 35.2455, 0.37", "0.571437, 7.04213, 35.6132, 1.18", "0.977255, 6.88978, 35.8009, 1.47", "1.11966, 6.84689, 35.8748, 1.47", "1.95074, 6.5706, 36.3315, 1.33", "2.98155, 6.22223, 37.0298, 0.74", "4.33952, 5.92639, 38.1413, 0.29", "5.01178, 5.89098, 38.7163, 0.29", "6.07853, 5.99182, 39.7036, 0.29", "15.0019, 6.6181, 44.1776, 0.29", "24.0587, 6.11921, 48.3906, 0.29", "33.5569, 5.75433, 51.499, 0.29", "42.6365, 4.60198, 55.5435, 0.29", "51.184, 3.78891, 60.6757, 0.29", "59.5855, 4.30582, 66.0768, 0.29", "68.0032, 2.7501, 71.2679, 0.29", "76.5752, 1.85129, 76.3462, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-7.54772, 2.7423, 31.4789, 0.44", "-8.95045, 3.47054, 31.3511, 0.44", "-10.0416, 4.10764, 31.2523, 0.44", "-10.8466, 4.61742, 31.1792, 0.29", "-11.4441, 5.06389, 31.1827, 0.29", "-11.5029, 5.11955, 31.1942, 0.29", "-11.9692, 5.62396, 31.3448, 0.29", "-12.2145, 5.97296, 31.4964, 0.59", "-12.2719, 6.06324, 31.5423, 0.59", "-13.042, 7.2319, 32.1552, 0.59", "-13.8119, 8.21305, 32.6617, 0.44", "-14.3854, 8.78349, 32.9531, 0.96", "-14.8251, 9.13038, 33.1206, 1.03", "-15.7917, 9.78896, 33.3937, 0.74", "-16.4709, 10.1983, 33.5199, 0.74", "-17.4618, 10.6968, 33.6073, 0.29", "-18.28, 11.0694, 33.6489, 0.29", "-19.2091, 11.4616, 33.6873, 0.29", "-19.8365, 11.7181, 33.7066, 0.88", "-20.8515, 12.1266, 33.7163, 0.44", "-21.6716, 12.4673, 33.7256, 0.74", "-22.3427, 12.7845, 33.7352, 0.52", "-22.9561, 13.0795, 33.7459, 0.44", "-30.0207, 20.2351, 35.656, 0.44", "-36.5888, 27.8596, 37.6888, 0.44", "-43.8241, 35.1074, 37.6334, 0.44", "-50.3908, 43.0263, 37.6428, 0.44", "-56.8566, 50.818, 35.8745, 0.44", "-63.297, 58.616, 34.0396, 0.44", "-70.3846, 65.6235, 31.7537, 0.44", "-77.9025, 72.3379, 30.1444, 0.44", "-85.3629, 79.081, 28.3835, 0.44", "-94.2982, 83.6415, 27.2456, 0.44", "-103.836, 86.7423, 26.6884, 0.44", "-113.302, 90.0045, 25.8287, 0.44", "-121.857, 95.4, 26.4685, 0.44", "-130.517, 100.621, 25.9454, 0.44", "-138.645, 106.663, 26.8596, 0.44", "-147.086, 111.918, 28.785, 0.44", "-155.146, 117.083, 32.0764, 0.44", "-163.506, 121.613, 35.4682, 0.44", "-172.161, 125.225, 39.1094, 0.44", "-180.37, 130.605, 41.628, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "19.0452, -20.0377, -6.23818, 0.29", "19.9243, -20.267, -7.54514, 0.29", "20.5958, -20.4802, -8.51444, 0.88", "21.6435, -20.8461, -10.0049, 1.55", "22.304, -21.107, -10.9223, 1.25", "23.9952, -21.9104, -13.1066, 0.22", "24.7254, -22.3024, -13.9879, 1.47", "25.0794, -22.5519, -14.3849, 2.06", "25.1223, -22.5875, -14.4286, 2.06", "26.1216, -23.4928, -15.2768, 0.22", "27.2346, -24.5174, -16.0559, 0.22", "28.0268, -25.2502, -16.5189, 1.4", "28.6612, -25.8263, -16.8796, 1.77", "30.1684, -27.0995, -17.7647, 0.22", "30.8898, -27.6789, -18.1882, 0.22", "31.8718, -28.4311, -18.7611, 1.99", "31.9232, -28.4671, -18.7939, 1.99", "32.7284, -28.9966, -19.3199, 2.43", "35.1407, -30.4375, -20.9855, 0.37", "36.3202, -31.1078, -21.7984, 0.22", "36.373, -31.1355, -21.8361, 0.22", "37.9048, -31.913, -22.9455, 1.62", "38.0869, -32.0016, -23.0778, 2.14", "40.0728, -32.8429, -24.5573, 0.22", "40.7677, -33.0734, -25.0691, 0.22", "41.4328, -33.2552, -25.5503, 1.4", "41.5956, -33.2939, -25.6695, 1.84", "41.6608, -33.3046, -25.7148, 1.84", "43.552, -33.494, -27.0187, 0.22", "43.9856, -33.5008, -27.3057, 1.11", "44.198, -33.5023, -27.4559, 1.11", "45.7127, -33.5555, -28.5366, 0.29", "46.4078, -33.6222, -29.1521, 0.22", "46.6167, -33.656, -29.3507, 0.37", "47.3042, -33.8049, -30.0395, 0.22", "48.2957, -34.0289, -31.0749, 1.55", "48.5182, -34.0791, -31.309, 1.84", "51.2731, -34.756, -34.2662, 0.22", "52.2967, -35.0306, -35.4009, 1.84", "53.845, -35.4436, -37.1767, 0.22", "54.4024, -35.5818, -37.8231, 0.52", "54.6858, -35.6496, -38.1338, 0.52", "55.7686, -35.8999, -39.2729, 0.29", "56.765, -36.133, -40.2443, 1.4", "57.9042, -36.385, -41.4074, 1.55", "58.9929, -36.625, -42.4821, 0.22", "59.8757, -36.816, -43.3388, 0.22", "60.5289, -36.9624, -43.9537, 0.81", "60.5873, -36.9763, -44.0067, 0.81", "62.5619, -37.5161, -45.7273, 0.22", "63.4501, -37.8332, -46.4835, 1.55", "65.4336, -38.7467, -48.1613, 0.22", "66.0695, -39.1015, -48.6763, 0.22", "67.1392, -39.7939, -49.4572, 1.55", "67.6645, -40.1743, -49.8082, 2.21", "69.215, -41.5127, -50.7105, 0.29", "70.0923, -42.3387, -51.1635, 0.29", "71.1409, -43.3796, -51.5996, 0.66", "71.6555, -43.8706, -51.79, 0.88", "72.6719, -44.7122, -52.0489, 0.22", "73.3396, -45.183, -52.168, 0.22", "74.3676, -45.7883, -52.2578, 1.11", "74.8036, -46.0259, -52.2852, 1.69", "75.4274, -46.3708, -52.3015, 1.47", "77.1807, -47.4136, -52.2751, 0.22", "77.8745, -47.8581, -52.2322, 0.22", "77.9422, -47.9028, -52.2282, 0.22", "78.9318, -48.6286, -52.187, 0.22", "79.7986, -49.313, -52.1687, 1.18", "80.2115, -49.6661, -52.17, 1.4", "81.5891, -50.9702, -52.2204, 0.22", "81.6423, -51.0179, -52.2227, 0.22", "82.376, -51.6018, -52.3119, 0.22", "82.7977, -51.9173, -52.3967, 0.96", "83.1629, -52.1999, -52.4983, 1.4", "83.216, -52.2437, -52.5166, 1.4", "83.7401, -52.723, -52.7344, 1.11", "84.7711, -53.6493, -53.1885, 0.22", "85.4196, -54.3098, -53.4929, 0.22", "85.9834, -54.9286, -53.7684, 1.03", "86.0298, -54.9788, -53.79, 1.03", "86.4284, -55.394, -53.96, 1.03", "87.5467, -56.4402, -54.3367, 0.22", "88.3784, -57.1569, -54.5657, 0.22", "88.44, -57.2072, -54.5832, 0.22", "88.9513, -57.6142, -54.7531, 0.52", "89.0053, -57.6555, -54.774, 0.52", "89.9727, -58.3844, -55.1841, 0.22", "93.9203, -61.2702, -56.9892, 0.96", "93.9817, -61.3112, -57.0224, 0.96", "94.7768, -61.8146, -57.4915, 0.74", "96.0516, -62.5321, -58.2895, 0.29", "96.2235, -62.6148, -58.4018, 0.29", "96.9535, -62.8888, -58.9811, 0.29", "98.3034, -63.223, -60.1556, 0.29", "99.0994, -63.4116, -60.8176, 0.29", "100.673, -63.7493, -62.0482, 1.18", "101.064, -63.8206, -62.362, 1.69", "103.631, -64.256, -64.4542, 0.22", "104.257, -64.3707, -64.9767, 0.59", "104.894, -64.5085, -65.5073, 0.22", "105.497, -64.6559, -66.0365, 1.55", "107.976, -65.3147, -68.3528, 0.29", "107.976, -65.3147, -68.3528, 0.52", "108.968, -65.5835, -69.1962, 0.22", "109.502, -65.7489, -69.6769, 1.18", "109.811, -65.867, -69.9554, 1.18", "111.774, -66.7645, -71.6586, 0.22", "112.118, -66.9431, -71.9218, 0.96", "112.612, -67.2051, -72.2872, 1.18", "113.506, -67.6814, -72.8864, 0.22", "114.15, -68.0295, -73.3011, 0.22", "114.665, -68.3166, -73.5953, 1.18", "115.048, -68.5546, -73.8055, 1.18", "115.099, -68.5899, -73.8384, 1.18", "116.327, -69.4769, -74.6927, 0.22", "117.023, -69.977, -75.1734, 0.96", "117.292, -70.1741, -75.3627, 0.96", "118.513, -71.1004, -76.1848, 0.15", "118.972, -71.4762, -76.5486, 0.15", "119.039, -71.5371, -76.6066, 0.15", "119.535, -72.0294, -77.0663, 0.15", "119.979, -72.483, -77.4639, 0.81", "120.301, -72.805, -77.7466, 1.11", "121.835, -74.4132, -79.4119, 0.22", "122.076, -74.6741, -79.7171, 0.74", "122.115, -74.7201, -79.7717, 0.74", "122.619, -75.3566, -80.5387, 0.15", "123.073, -75.9483, -81.2937, 1.47", "124.321, -77.6138, -83.4419, 0.22", "124.357, -77.6587, -83.4994, 0.22", "124.739, -78.0869, -84.0972, 0.22", "125.072, -78.424, -84.5884, 0.88", "126.278, -79.511, -86.2684, 0.22", "126.393, -79.5947, -86.4081, 0.59", "127.157, -80.0278, -87.172, 0.15", "128.086, -80.4449, -88.0293, 1.4", "128.423, -80.5702, -88.3254, 1.4", "128.477, -80.5885, -88.3672, 1.4", "130.424, -81.1606, -89.5918, 0.22", "130.742, -81.2506, -89.7748, 1.03", "132.488, -81.7327, -90.6586, 0.22", "132.636, -81.7695, -90.7257, 0.59", "133.892, -82.1074, -91.2654, 0.15", "134.691, -82.3351, -91.5699, 1.11", "134.973, -82.4232, -91.6613, 1.55", "135.457, -82.5861, -91.8182, 1.25", "137.21, -83.1953, -92.4378, 0.22", "138.167, -83.5013, -92.7872, 0.22", "138.714, -83.6666, -92.9962, 0.22", "139.553, -83.9151, -93.3421, 1.03", "140.209, -84.0977, -93.6369, 1.03", "142.111, -84.5865, -94.5312, 0.22", "142.963, -84.8219, -94.9407, 1.11", "143.015, -84.8356, -94.9675, 1.11", "143.44, -84.9654, -95.1936, 1.11", "144.867, -85.474, -95.9386, 0.22", "145.117, -85.5845, -96.0669, 0.52", "146.17, -86.2194, -96.56, 0.22", "146.233, -86.2627, -96.5879, 0.22", "146.691, -86.5978, -96.7679, 0.22", "147.556, -87.2695, -97.0659, 1.47", "147.934, -87.5929, -97.1823, 1.47", "149.628, -89.0839, -97.703, 0.22", "149.979, -89.3936, -97.8032, 0.66", "150.8, -90.1399, -98.0239, 0.22", "150.851, -90.1878, -98.0364, 0.22", "151.314, -90.6741, -98.1207, 0.22", "151.362, -90.7272, -98.1268, 0.22", "152.051, -91.466, -98.1468, 0.22", "152.489, -91.8829, -98.1526, 0.96", "152.984, -92.2962, -98.1526, 0.96", "154.307, -93.2579, -98.1526, 0.15", "154.367, -93.2951, -98.1531, 0.15", "155.246, -93.8033, -98.1637, 0.29", "156.52, -94.4784, -98.2018, 0.22", "157.001, -94.7137, -98.236, 0.81", "157.573, -94.9702, -98.3332, 1.11", "158.725, -95.4387, -98.6045, 0.22", "159.188, -95.639, -98.77, 0.59", "160.572, -96.3057, -99.453, 0.22", "161.483, -96.7941, -99.987, 1.55", "163.094, -97.6947, -101.008, 0.22", "163.267, -97.7934, -101.129, 0.44", "164.821, -98.6998, -102.338, 0.22", "165.796, -99.2683, -103.164, 1.03", "166.406, -99.6563, -103.766, 1.62" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "19.0452, -20.0377, -6.23818, 2.21", "19.0842, -20.3016, -6.49027, 2.21", "18.9978, -21.2226, -7.54792, 0.88", "18.8758, -21.7947, -8.23405, 0.52", "18.7034, -22.4612, -9.04035, 0.52", "18.4966, -23.272, -9.95742, 0.96", "18.0915, -24.9732, -11.7273, 0.59", "17.8494, -25.8968, -12.6274, 0.37", "17.585, -26.8632, -13.5264, 0.37", "17.5674, -26.9223, -13.5805, 0.37", "17.2787, -27.9571, -14.4776, 1.25", "17.1587, -28.6363, -14.9552, 2.14", "17.091, -29.8996, -15.5749, 1.92", "17.1689, -31.6618, -16.3653, 0.81" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "4.84523, -21.202, 1.74572, 0.37", "4.70803, -23.0828, 3.64282, 0.37", "4.69264, -23.785, 4.28582, 0.74", "4.73803, -24.32, 4.73953, 1.03", "4.97995, -25.4668, 5.65858, 1.18", "5.37359, -26.6863, 6.59314, 0.52", "5.87686, -27.955, 7.53728, 0.44", "6.32265, -28.7872, 8.08427, 0.37", "7.12142, -29.7369, 8.63184, 0.59", "8.10389, -30.4783, 8.93894, 1.25", "8.79904, -30.7859, 8.97129, 1.47", "8.86685, -30.8028, 8.96464, 1.47", "9.6617, -30.9016, 8.8403, 1.47", "10.7256, -30.9684, 8.65167, 1.25", "12.137, -31.059, 8.38964, 0.66", "13.3699, -31.1484, 8.15589, 0.44", "14.7444, -31.3054, 7.89068, 0.37", "15.8269, -31.4675, 7.68745, 0.29", "15.9227, -31.4873, 7.67089, 0.29", "17.4098, -31.9008, 7.42919, 0.29", "17.4749, -31.9241, 7.41617, 0.29", "18.9519, -32.513, 7.13409, 1.03", "19.1561, -32.5943, 7.10719, 1.03", "19.9949, -32.9166, 7.03325, 1.33", "20.9901, -33.2767, 6.98277, 1.55", "22.8947, -33.9134, 6.98023, 0.37", "24.7768, -34.5145, 7.05594, 0.81", "26.414, -35.0113, 7.19511, 0.37", "27.1987, -35.2537, 7.28519, 0.66", "28.2385, -35.5723, 7.44177, 0.96", "29.1733, -35.872, 7.62172, 1.11", "30.0879, -36.1942, 7.82, 1.4", "30.456, -36.343, 7.8816, 1.4", "32.3011, -37.1393, 8.15047, 0.15", "32.356, -37.1633, 8.15833, 0.15", "32.9854, -37.4501, 8.24139, 0.15", "33.4104, -37.6521, 8.28598, 0.74", "33.5576, -37.7196, 8.30012, 0.74", "33.8993, -37.866, 8.32665, 0.74", "35.1974, -38.3423, 8.37944, 0.29", "35.4457, -38.4255, 8.38766, 0.66", "35.5224, -38.4491, 8.39142, 0.66", "36.3678, -38.708, 8.53779, 0.66", "36.4328, -38.7299, 8.55317, 0.66", "36.9661, -38.902, 8.76124, 1.4", "37.5665, -39.1044, 9.04761, 1.4", "39.1068, -39.6724, 9.84484, 0.22", "40.536, -40.2956, 10.6993, 1.25", "41.1868, -40.6138, 11.1359, 1.99", "43.2593, -41.7454, 12.7195, 0.22", "43.5685, -41.9378, 12.9829, 0.81", "43.9696, -42.2226, 13.3706, 0.81", "44.8961, -42.9836, 14.3117, 0.22", "44.981, -43.0604, 14.3957, 0.22", "45.8067, -43.8495, 15.2244, 1.11", "46.3048, -44.3629, 15.6809, 1.92", "47.1566, -45.1729, 16.3787, 0.66", "48.0519, -45.9705, 17.0655, 0.22", "48.8706, -46.6663, 17.6174, 0.88", "48.9193, -46.7078, 17.6484, 0.88", "49.5947, -47.2706, 18.0241, 1.18", "50.1701, -47.7348, 18.3098, 1.18", "51.5833, -48.8488, 18.8932, 0.29", "52.074, -49.2227, 19.073, 0.52", "52.2612, -49.3594, 19.1259, 0.52", "53.0387, -49.8729, 19.2248, 0.22", "53.8501, -50.3216, 19.1398, 1.77", "53.9116, -50.3506, 19.1211, 1.77", "54.3595, -50.5398, 18.8963, 2.06", "54.4254, -50.5671, 18.8593, 2.06", "56.1627, -51.2582, 17.8545, 0.29", "57.1225, -51.6261, 17.2553, 0.44", "57.6305, -51.8165, 16.9304, 0.44", "58.6564, -52.1914, 16.2639, 0.29", "59.5868, -52.532, 15.6586, 0.59", "60.1249, -52.7293, 15.3259, 0.59", "61.2765, -53.1534, 14.6762, 0.29", "61.3424, -53.1784, 14.6377, 0.29", "61.8454, -53.3678, 14.3249, 0.96", "62.2371, -53.5063, 14.1008, 1.33", "62.7334, -53.6764, 13.826, 1.33", "62.7937, -53.6965, 13.7961, 1.33", "64.2163, -54.14, 13.216, 0.29", "64.2887, -54.1623, 13.1894, 0.29", "65.4106, -54.4938, 12.9098, 0.29", "65.4775, -54.5119, 12.8987, 0.29", "67.0086, -54.899, 12.7544, 1.18", "67.4681, -55.0078, 12.7393, 2.28", "68.0126, -55.1204, 12.7615, 2.28", "69.5715, -55.4377, 12.8286, 0.29", "70.512, -55.6426, 12.8915, 0.22", "71.236, -55.8066, 12.9543, 0.88", "71.3039, -55.8223, 12.962, 0.88", "72.1542, -56.0067, 13.1058, 0.88", "73.2757, -56.2336, 13.3374, 0.22", "74.2623, -56.4174, 13.5591, 1.33", "74.3288, -56.4281, 13.5782, 1.33", "75.1067, -56.5295, 13.8258, 1.33", "76.8306, -56.6975, 14.3774, 0.29", "77.4462, -56.7581, 14.6188, 0.22", "78.2613, -56.8554, 14.9638, 0.22", "79.062, -56.9627, 15.3062, 1.03", "79.7376, -57.0753, 15.5883, 1.33", "81.4343, -57.4119, 16.2858, 0.29", "83.2984, -57.8748, 16.9963, 0.29", "84.4088, -58.1878, 17.4339, 0.29", "84.4626, -58.2052, 17.4548, 0.29", "85.441, -58.5191, 17.774, 0.29", "85.5058, -58.5389, 17.7927, 0.29", "86.9148, -58.8948, 18.088, 1.18", "86.9933, -58.9083, 18.0961, 1.18", "87.7805, -59.0006, 18.1614, 2.28", "89.6222, -59.1884, 18.2786, 0.22", "89.6919, -59.1943, 18.2816, 0.22", "90.3857, -59.2465, 18.2957, 0.37", "90.4656, -59.2479, 18.2916, 0.37", "91.2973, -59.2204, 18.2032, 0.37", "91.8293, -59.1694, 18.1169, 0.59", "92.2073, -59.119, 18.0337, 0.59", "92.2836, -59.1043, 18.0141, 0.59", "93.7572, -58.745, 17.5913, 0.22", "94.4304, -58.5361, 17.3943, 1.11", "94.7914, -58.3998, 17.2839, 1.47", "94.8539, -58.3739, 17.2642, 1.47", "96.4629, -57.6684, 16.7547, 0.22", "96.5573, -57.6269, 16.7263, 0.22", "97.1844, -57.3552, 16.5685, 0.22", "97.2488, -57.3303, 16.5547, 0.22", "106.546, -59.679, 19.4797, 0.22", "115.437, -62.0259, 23.4749, 0.22", "124.545, -65.4467, 26.0098, 0.22", "133.667, -67.3883, 29.6671, 0.22", "143.294, -67.6458, 32.3613, 0.22", "152.422, -67.0103, 36.399, 0.22", "161.818, -67.219, 39.8163, 0.22", "171.535, -68.822, 41.6185, 0.22", "181.028, -72.1231, 41.7339, 0.22", "190.523, -74.8541, 43.4865, 0.22", "199.608, -79.0653, 44.6589, 0.22", "208.386, -84.0942, 44.7935, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "4.84523, -21.202, 1.74572, 1.62", "3.4907, -22.6308, 0.532078, 1.62", "2.54116, -23.6324, -0.318704, 1.47", "1.64511, -24.5776, -1.12156, 1.84", "0.622597, -25.6562, -2.03771, 2.43", "-0.101774, -26.4202, -2.68674, 2.73", "-1.29543, -27.6793, -3.75625, 2.43" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.943077, 10.4516, -5.86388, 1.18", "1.41612, 10.9811, -6.17453, 1.18", "2.46189, 11.2158, -6.31223, 1.18", "2.53948, 11.2332, -6.32245, 1.18", "3.8392, 11.5249, -6.49359, 1.33", "5.19326, 11.8289, -6.67189, 1.47", "5.818, 11.9691, -6.75416, 1.47" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.943077, 10.4516, -5.86388, 1.11", "-0.698638, 12.3925, -6.33645, 1.11", "-0.491543, 13.329, -6.59921, 0.88", "-0.147434, 14.4476, -6.95319, 0.88", "0.073001, 15.0825, -7.16259, 1.47", "0.610411, 16.4496, -7.62886, 1.62", "0.875893, 17.074, -7.85063, 1.99", "1.47801, 18.2808, -8.36003, 1.99", "2.01129, 19.3542, -8.85252, 0.74", "2.03607, 19.4056, -8.87672, 0.74", "2.48661, 20.505, -9.39933, 0.74", "2.7949, 21.5664, -9.88722, 1.11", "3.01319, 22.8393, -10.4423, 1.33", "3.06623, 24.0078, -10.8922, 1.77", "3.06275, 24.0866, -10.9197, 1.77", "2.95151, 25.1035, -11.2182, 2.06", "2.73949, 26.175, -11.4401, 2.43", "2.57607, 26.8704, -11.5145, 2.36", "2.42369, 27.6363, -11.5236, 2.06", "2.41293, 27.7089, -11.5208, 2.06", "2.33857, 28.6374, -11.4755, 1.69", "2.30314, 29.6354, -11.4096, 1.18", "2.31111, 30.5449, -11.3295, 1.03", "2.3613, 31.6898, -11.2293, 1.03", "2.45995, 32.9857, -11.1248, 1.25", "2.50656, 33.4331, -11.0967, 1.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-5.27798, 28.8944, -3.38754, 1.55", "-5.89152, 30.5959, 2.71935, 1.55", "-6.05315, 31.0442, 4.32814, 2.5" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-5.27798, 28.8944, -3.38754, 2.95", "-5.21228, 29.4576, -3.31982, 2.95", "-5.03542, 30.5401, -3.2041, 2.43", "-4.78422, 31.7962, -3.08072, 1.11", "-4.4326, 33.3206, -2.94365, 0.96", "-4.4135, 33.391, -2.93724, 0.96", "-4.10264, 34.3237, -2.80139, 0.96", "-3.78564, 35.0802, -2.66578, 1.33", "-3.40176, 35.7805, -2.49695, 1.18", "-3.04589, 36.3094, -2.28236, 0.96", "-2.51469, 37.0361, -1.8876, 0.74", "-1.74035, 38.2015, -1.18335, 0.59", "-1.70995, 38.2563, -1.14796, 0.59", "-1.51184, 38.756, -0.857553, 0.59", "-1.17641, 40.0559, -0.215373, 0.88", "-1.0874, 41.3655, 0.213226, 1.55", "-1.1626, 42.1374, 0.309661, 1.55", "-1.3147, 42.9352, 0.280576, 1.25", "-1.51581, 43.8479, 0.184012, 1.11", "-1.54701, 43.9776, 0.158022, 1.11", "-1.84384, 44.9992, -0.159241, 1.11", "-2.21501, 46.0388, -0.488931, 1.47", "-2.54791, 46.8659, -0.748492, 1.25", "-2.57684, 46.9304, -0.765571, 1.25", "-3.10166, 47.928, -0.97269, 0.81", "-3.67284, 48.8934, -1.09856, 0.81", "-4.41541, 49.9805, -1.15374, 1.25", "-4.80144, 50.5082, -1.11178, 1.62", "-5.22257, 51.094, -1.01009, 1.62", "-5.71206, 51.8661, -0.844846, 1.25", "-6.13278, 52.6637, -0.637667, 0.81", "-6.3594, 53.2508, -0.484827, 0.66", "-6.59796, 54.3331, -0.237979, 0.52", "-6.65067, 54.9455, -0.137974, 0.81", "-6.62982, 56.2528, -0.0283524, 0.81", "-6.56163, 56.9382, -0.00447047, 0.59", "-6.55065, 57.0107, -0.00589137, 0.59", "-6.34633, 58.0944, -0.0553467, 0.59", "-6.1223, 59.1896, -0.124199, 0.96", "-6.01095, 59.7864, -0.155426, 1.4", "-5.91924, 60.4023, -0.177695, 1.4", "-5.90408, 60.5294, -0.179659, 1.4", "-5.84108, 61.1498, -0.179417, 1.47", "-5.74548, 62.2018, -0.157911, 0.96", "-5.72649, 62.4317, -0.148406, 0.96", "-5.67984, 63.3436, -0.127932, 0.96", "-5.65262, 64.3401, -0.160194, 1.18", "-5.66319, 64.8824, -0.219723, 1.33", "-5.67511, 65.0418, -0.256185, 1.33", "-5.79256, 65.9105, -0.53191, 0.74", "-6.06174, 67.3153, -1.1266, 0.37", "-6.26036, 68.1117, -1.54691, 0.37", "-6.53465, 69.0459, -2.0991, 1.55", "-6.8635, 70.0853, -2.73134, 2.14", "-7.12746, 70.8791, -3.22665, 1.47", "-7.54923, 72.113, -3.99647, 0.96", "-7.79809, 72.8684, -4.43262, 0.66", "-7.94275, 73.3483, -4.66238, 0.59", "-8.13416, 74.1163, -4.96119, 0.59", "-8.26653, 74.7468, -5.14238, 0.59", "-8.41491, 75.6351, -5.34632, 0.59", "-8.64326, 77.3071, -5.60126, 1.47", "-8.72414, 78.0096, -5.66434, 2.21", "-8.78123, 78.6946, -5.6695, 2.21", "-8.82985, 79.5979, -5.59737, 1.18", "-8.84671, 80.3503, -5.46531, 0.59", "-8.82915, 80.8198, -5.33926, 0.44", "-8.7121, 81.7491, -4.99513, 0.44", "-8.50885, 82.8507, -4.55708, 1.03", "-8.40668, 83.2559, -4.37208, 1.33", "-8.38204, 83.3275, -4.33824, 1.33", "-8.11332, 83.9607, -3.98678, 1.47", "-7.878, 84.4678, -3.71894, 1.33", "-7.85086, 84.5291, -3.6913, 1.33", "-7.38812, 85.7438, -3.21721, 0.81", "-7.18178, 86.3964, -3.02972, 0.37", "-6.95464, 87.3277, -2.83638, 0.29", "-6.80072, 88.3153, -2.71897, 0.29", "-6.71943, 89.2438, -2.70365, 0.29", "-6.68638, 90.3143, -2.77376, 1.33", "-6.7468, 91.85, -2.99156, 1.99", "-6.81662, 92.5496, -3.11038, 1.77", "-6.94671, 93.4828, -3.29966, 0.96", "-7.14122, 94.6545, -3.51612, 0.44", "-7.31784, 95.6346, -3.66587, 0.44", "-7.45428, 96.3323, -3.75244, 0.29", "-7.64655, 97.2724, -3.80073, 0.29", "-7.66332, 97.3545, -3.80336, 0.29", "-7.88764, 98.4484, -3.77459, 2.06", "-8.079, 99.2643, -3.69769, 2.43" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "15.5378, -39.8213, 2.68258, 0.424038", "21.4967, -53.5869, 2.68258, 0.424038", "27.4557, -67.3525, 2.68258, 0.424038" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "76.5752, 1.85129, 76.3462, 0.29", "85.4032, 4.62457, 80.2307, 0.29", "93.4114, 7.99364, 85.2878, 0.29", "101.192, 10.8895, 90.9321, 0.29", "108.131, 15.032, 96.9561, 0.29", "114.306, 19.1002, 103.801, 0.29", "119.522, 24.4122, 110.672, 0.29", "124.716, 29.8414, 117.475, 0.29", "130.743, 35.5366, 123.328, 0.29" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "76.5752, 1.85129, 76.3462, 0.29", "84.9589, -0.280615, 81.4048, 0.29", "93.876, -3.88647, 84.353, 0.29", "102.41, -8.30816, 87.4268, 0.29", "110.537, -14.369, 88.2149, 0.29", "118.425, -20.3695, 90.48, 0.29", "125.998, -25.9373, 94.2918, 0.29", "133.065, -31.4533, 99.0304, 0.29", "138.906, -37.0959, 105.114, 0.29", "145.392, -43.2469, 109.974, 0.29" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-180.37, 130.605, 41.628, 0.29", "-188.585, 136.57, 42.1168, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-180.37, 130.605, 41.628, 0.29", "-188.419, 136.818, 42.0861, 0.29", "-196.551, 142.874, 42.8588, 0.29", "-205.354, 147.714, 43.9796, 0.29", "-215.033, 150.308, 44.4551, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "166.406, -99.6563, -103.766, 0.22", "167.765, -101.937, -105.99, 0.22", "167.964, -102.262, -106.292, 0.59", "168.347, -102.871, -106.83, 0.22", "168.537, -103.151, -107.042, 0.59", "169.441, -104.417, -107.888, 0.22", "169.838, -104.963, -108.207, 0.22", "170.32, -105.58, -108.422, 0.88", "170.574, -105.909, -108.495, 0.88", "171.599, -107.354, -108.626, 0.22", "171.957, -107.888, -108.613, 0.22", "172.279, -108.399, -108.551, 1.03", "172.47, -108.713, -108.504, 1.03", "173.488, -110.456, -108.177, 0.22", "174.415, -112.15, -107.845, 0.22", "174.815, -112.973, -107.674, 0.81", "175.027, -113.429, -107.582, 1.03" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "166.406, -99.6563, -103.766, 0.29", "168.616, -99.8944, -104.264, 0.29", "169.767, -100.017, -104.51, 0.22", "171.294, -100.185, -104.823, 0.22", "172.805, -100.385, -105.114, 0.88", "172.873, -100.395, -105.127, 0.88", "173.873, -100.566, -105.319, 0.22", "174.421, -100.666, -105.387, 0.66", "174.714, -100.727, -105.422, 0.66", "175.76, -100.995, -105.589, 0.22", "175.816, -101.015, -105.6, 0.22", "176.457, -101.286, -105.724, 1.03" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "17.1689, -31.6618, -16.3653, 0.29", "17.3185, -32.3987, -16.1426, 0.29", "17.3311, -32.4982, -16.1169, 0.29", "17.3583, -33.2892, -15.8928, 0.29", "17.3584, -33.4298, -15.8518, 0.29", "17.3369, -34.863, -15.4046, 1.33", "17.312, -35.701, -15.1457, 2.06", "17.2799, -36.5729, -14.8762, 2.36", "17.2202, -38.1972, -14.3914, 0.74", "17.2171, -38.2675, -14.3712, 0.74", "17.1935, -39.4575, -14.0641, 0.22", "17.2009, -40.2953, -13.9128, 0.22", "17.2343, -40.9419, -13.8295, 0.22", "17.3049, -41.7231, -13.8102, 0.22", "17.3433, -42.0239, -13.8345, 0.88", "17.4433, -42.7903, -13.9332, 1.25", "17.5791, -43.7947, -14.1233, 1.33", "17.6696, -44.4662, -14.2591, 0.74", "17.809, -45.6941, -14.5305, 0.22", "17.8175, -45.7639, -14.5507, 0.22", "17.913, -46.5606, -14.8294, 0.22", "17.9743, -47.0769, -15.031, 0.81", "18.0427, -47.5711, -15.2279, 1.03", "18.2077, -48.6179, -15.6945, 0.29", "18.4205, -49.8279, -16.2705, 0.22", "18.5605, -50.4631, -16.5836, 1.33", "18.6758, -50.8452, -16.7935, 1.4", "18.9118, -51.4896, -17.1678, 0.59", "19.3236, -52.3327, -17.6609, 0.22", "19.4052, -52.4386, -17.7362, 0.22", "19.8908, -52.9474, -18.1345, 0.22", "20.6383, -53.5908, -18.7041, 2.06", "20.6882, -53.6269, -18.7391, 2.06", "21.4354, -54.1, -19.2346, 2.5", "23.6179, -55.3908, -20.4528, 0.29", "23.6738, -55.4244, -20.4803, 0.29", "24.2652, -55.7925, -20.7257, 0.15", "25.0854, -56.3515, -20.9483, 0.15", "25.1499, -56.3999, -20.9594, 0.15", "26.3032, -57.3594, -21.0006, 0.74", "26.7991, -57.829, -20.9124, 1.03", "27.3924, -58.43, -20.7857, 0.66", "28.2674, -59.394, -20.513, 0.22", "28.3754, -59.5179, -20.4703, 0.22", "28.591, -59.7619, -20.3749, 0.22", "29.0859, -60.3117, -20.1422, 1.4", "29.4743, -60.7345, -19.9798, 2.06", "30.3013, -61.6411, -19.6699, 2.14", "30.3712, -61.7208, -19.6444, 2.14", "30.734, -62.1589, -19.5123, 2.14", "31.8312, -63.5808, -19.1269, 0.29", "32.7232, -64.8308, -18.8483, 0.29", "33.2321, -65.5635, -18.7195, 0.96", "33.7858, -66.3887, -18.6388, 1.47", "34.2777, -67.1305, -18.5911, 1.47", "34.6673, -67.7354, -18.5745, 0.59", "35.3835, -68.8867, -18.6183, 0.29", "36.0601, -69.9641, -18.7168, 0.15", "36.7187, -70.9198, -18.8562, 1.33", "36.7611, -70.977, -18.8674, 1.33", "37.145, -71.4779, -18.967, 1.77", "38.4032, -73.0418, -19.2589, 0.22", "38.4485, -73.0971, -19.2675, 0.22", "39.0029, -73.8237, -19.3437, 0.22", "39.1325, -74.0084, -19.3699, 0.22", "39.9475, -75.2794, -19.5898, 0.22", "40.3769, -76.033, -19.6927, 1.62", "40.7161, -76.7049, -19.767, 1.84", "41.6533, -78.7507, -19.9471, 0.22", "42.2743, -80.2985, -19.95, 0.81", "42.6161, -81.2177, -19.8469, 1.03", "43.1215, -82.7345, -19.4063, 0.29", "43.1437, -82.8076, -19.3737, 0.29", "43.3856, -83.7141, -18.8331, 0.29", "43.7675, -85.3488, -17.577, 1.84", "43.9799, -86.4065, -16.6769, 2.5", "44.232, -87.6535, -15.6111, 1.84", "44.2441, -87.7092, -15.5671, 1.84", "44.5027, -88.8841, -14.6981, 0.15", "44.5293, -89.0132, -14.6164, 0.15", "44.6768, -89.8107, -14.2589, 0.15", "44.7992, -90.8081, -13.8513, 0.15", "44.8763, -91.8257, -13.4135, 0.44", "44.8798, -91.9011, -13.3783, 0.44", "44.9071, -92.7272, -12.9805, 0.44", "44.9035, -94.356, -12.2374, 0.29", "44.855, -95.5908, -11.7301, 0.29", "44.753, -96.6661, -11.3394, 1.4", "44.6784, -97.3341, -11.1276, 1.77", "44.5799, -98.2115, -10.8658, 1.77", "44.3981, -99.7436, -10.4639, 0.29", "44.2241, -101.171, -10.2126, 0.22", "44.0998, -102.217, -10.0903, 1.62", "44.0247, -102.83, -10.0503, 1.92" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "17.1689, -31.6618, -16.3653, 0.22", "16.1949, -32.1743, -17.0445, 0.22", "15.3973, -32.646, -17.6544, 0.22", "14.4736, -33.2211, -18.3534, 0.88", "14.0017, -33.5297, -18.7558, 1.03", "12.672, -34.3993, -19.9857, 0.22", "11.8543, -34.9453, -20.7896, 0.22", "11.2777, -35.3568, -21.4461, 1.11", "10.8874, -35.6643, -21.9356, 1.11", "9.65898, -36.6716, -23.5361, 0.29", "8.70493, -37.4454, -24.7661, 1.77", "8.2142, -37.8362, -25.3716, 1.77", "7.323, -38.5033, -26.4375, 0.29", "6.78022, -38.9043, -27.0426, 0.81", "6.72957, -38.9413, -27.0935, 0.81", "6.41175, -39.1682, -27.355, 0.81", "5.38089, -39.938, -28.0896, 0.22", "4.63478, -40.4958, -28.5732, 1.62", "4.23696, -40.7931, -28.8067, 1.92", "2.90624, -41.7739, -29.5653, 0.22", "2.85434, -41.8117, -29.5955, 0.22", "2.17412, -42.306, -30.0032, 0.22", "1.38859, -42.8792, -30.4393, 0.66", "0.960526, -43.1879, -30.661, 0.66", "-0.338946, -44.0956, -31.2919, 0.22", "-1.32207, -44.791, -31.7205, 2.14", "-1.89498, -45.195, -31.9609, 2.28", "-3.38975, -46.2423, -32.5222, 0.22", "-3.45282, -46.2895, -32.5422, 0.22", "-4.18509, -46.9008, -32.7651, 1.18", "-4.65218, -47.3302, -32.8935, 0.88", "-4.70275, -47.379, -32.9068, 0.88", "-5.64689, -48.4065, -33.3037, 0.22", "-5.98021, -48.7932, -33.4797, 0.66", "-7.0435, -50.0704, -34.0979, 0.22", "-7.60723, -50.7815, -34.4548, 1.69", "-7.97451, -51.2584, -34.6973, 1.99", "-10.0868, -54.0286, -36.2631, 0.22", "-10.3518, -54.3778, -36.4778, 0.44", "-10.435, -54.487, -36.5468, 0.44", "-11.3188, -55.6426, -37.2983, 0.22", "-11.9331, -56.4404, -37.814, 1.62", "-13.3077, -58.1827, -38.9483, 0.22", "-13.5989, -58.5283, -39.1694, 0.44", "-13.8292, -58.7997, -39.349, 0.44", "-14.5216, -59.595, -39.8914, 0.22", "-15.0844, -60.2185, -40.3513, 1.4", "-15.4728, -60.6641, -40.6749, 1.4", "-15.5198, -60.7251, -40.7034, 1.4" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "208.386, -84.0942, 44.7935, 0.29", "217.901, -87.0102, 46.1154, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "208.386, -84.0942, 44.7935, 0.29", "217.435, -86.9381, 48.0773, 0.29", "226.334, -88.518, 52.3824, 0.29", "235.173, -91.6688, 55.97, 0.29", "244.525, -93.9003, 58.8021, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.29543, -27.6793, -3.75625, 0.29", "-2.06905, -28.274, -3.10185, 0.29", "-2.89609, -29.1286, -2.31868, 0.81", "-3.31831, -29.617, -1.89688, 1.11", "-3.69695, -30.1194, -1.50541, 1.03", "-5.06468, -32.0682, -0.0704131, 0.74", "-5.39771, -32.6063, 0.319541, 0.81", "-5.88433, -33.7795, 1.09684, 0.81", "-5.89871, -33.8313, 1.12784, 0.81", "-6.07403, -34.6727, 1.61574, 0.66", "-6.08423, -34.7364, 1.64921, 0.66", "-6.22934, -36.0819, 2.18128, 0.44", "-6.37783, -37.2924, 2.63556, 0.29", "-6.50977, -38.0807, 2.88833, 0.29", "-6.52825, -38.1595, 2.90882, 0.29", "-6.72432, -38.7752, 3.02811, 1.18", "-7.03032, -39.503, 3.11334, 1.47", "-7.35177, -40.0711, 3.14404, 1.62", "-7.82173, -40.7739, 3.1733, 1.47", "-8.49879, -41.625, 3.25724, 0.66", "-9.10312, -42.264, 3.49695, 0.44", "-9.72611, -42.8196, 4.30743, 0.44", "-10.1699, -43.2097, 5.07881, 0.59", "-10.1988, -43.2369, 5.13704, 0.59", "-10.645, -43.6947, 6.14371, 0.96", "-11.6714, -44.934, 8.81481, 2.28", "-13.4501, -47.4491, 14.0011, 0.66", "-13.7372, -47.9685, 15.0105, 0.88", "-14.0294, -48.575, 16.1561, 0.59", "-14.2837, -49.1655, 17.2203, 1.25", "-14.5698, -49.9385, 18.4889, 1.69", "-14.6913, -50.2842, 18.9744, 1.62", "-15.3725, -51.9936, 21.1021, 0.59", "-15.828, -52.8073, 22.2694, 0.29", "-15.8622, -52.845, 22.3322, 0.29", "-16.2535, -53.1334, 22.8717, 0.29", "-16.8968, -53.4659, 23.5042, 1.4", "-17.3591, -53.6933, 23.8729, 1.62", "-18.1091, -54.0603, 24.2999, 1.55", "-19.1438, -54.7334, 24.9482, 0.52", "-19.1915, -54.7719, 24.9839, 0.52", "-19.7594, -55.3955, 25.525, 0.52", "-20.1908, -56.0912, 26.0655, 0.44", "-20.2048, -56.1414, 26.099, 0.44", "-20.0802, -57.2726, 26.6051, 0.37", "-19.8801, -57.9436, 26.7735, 0.88", "-19.7455, -58.4092, 26.844, 1.03", "-19.7244, -58.4791, 26.8496, 1.03", "-19.4948, -59.4452, 26.8554, 0.59", "-19.2791, -60.8015, 26.8106, 0.29", "-19.2412, -61.9872, 26.7818, 0.29", "-19.3803, -63.1128, 26.8706, 0.44", "-19.4011, -63.1795, 26.8914, 0.44", "-19.7397, -63.7837, 27.2357, 0.88", "-19.964, -64.061, 27.4673, 0.88", "-20.8391, -64.9336, 28.3973, 0.96", "-21.3569, -65.3789, 28.9723, 1.25", "-22.4152, -66.2329, 30.1887, 1.25", "-23.2281, -66.8486, 31.1004, 0.37", "-24.0396, -67.4259, 32.0015, 0.37", "-24.65, -67.8298, 32.6492, 0.66", "-25.6258, -68.3823, 33.6062, 0.81", "-25.676, -68.4021, 33.6511, 0.81", "-26.1771, -68.5654, 34.0594, 0.81", "-26.2224, -68.5734, 34.0981, 0.81", "-26.9839, -68.6056, 34.7218, 0.96", "-28.1423, -68.5648, 35.6421, 1.33", "-29.2665, -68.4763, 36.5509, 1.99" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.29543, -27.6793, -3.75625, 0.59", "-1.788, -29.5368, -3.63856, 0.59", "-1.99827, -30.7276, -3.57119, 0.59", "-2.21547, -32.37, -3.51489, 0.96", "-2.3215, -33.3715, -3.49113, 1.25", "-2.44424, -34.7981, -3.47297, 1.25", "-2.56451, -36.4013, -3.46314, 1.25", "-2.59027, -38.2503, -3.43802, 1.25", "-2.5634, -39.6503, -3.45374, 2.06", "-2.54539, -40.4207, -3.4783, 2.21", "-2.52784, -41.357, -3.50514, 1.77", "-2.51048, -42.0527, -3.53903, 1.4", "-2.44842, -43.5378, -3.63957, 0.74", "-2.40162, -44.6073, -3.71366, 0.59", "-2.31152, -46.5549, -3.8398, 0.59", "-2.24529, -47.9809, -3.93578, 1.47", "-2.18175, -49.2475, -4.02192, 2.43", "-2.13524, -50.0211, -4.08106, 2.5" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "5.818, 11.9691, -6.75416, 0.81", "7.51214, 10.7672, -5.14486, 0.81", "7.55935, 10.725, -5.09429, 0.81", "8.70241, 9.60536, -3.80878, 0.74", "9.50206, 8.80425, -2.9083, 0.74", "10.5928, 7.74862, -1.66229, 0.59", "11.482, 6.93694, -0.597663, 0.44", "12.3376, 6.22309, 0.357449, 0.44", "12.379, 6.1941, 0.406661, 0.44", "12.9634, 5.88985, 1.11348, 1.18", "13.7283, 5.64237, 2.01603, 1.4", "14.7151, 5.49496, 3.00288, 0.37", "15.4892, 5.45206, 3.62401, 0.37", "16.7971, 5.38905, 4.47505, 0.37", "17.7559, 5.28721, 5.04922, 0.29", "17.8718, 5.27284, 5.12659, 0.29", "18.4576, 5.20241, 5.56709, 0.74", "19.0649, 5.14733, 6.07711, 0.88", "19.9762, 5.1174, 6.93954, 0.29", "20.9287, 5.16992, 7.90289, 1.25", "22.6682, 5.44125, 9.81828, 0.88", "23.6805, 5.71052, 10.9557, 0.44", "24.1788, 5.89615, 11.5367, 0.88", "24.5989, 6.09406, 12.0386, 0.88", "24.8423, 6.2172, 12.3275, 1.11", "24.9142, 6.24724, 12.4005, 1.11", "26.1647, 6.51257, 13.4129, 0.29", "26.3666, 6.51693, 13.5778, 0.59", "26.4651, 6.49047, 13.6741, 0.59", "27.3265, 6.03905, 14.5973, 0.29", "27.9598, 5.58511, 15.3031, 1.11", "28.3552, 5.23158, 15.7592, 1.33", "28.3916, 5.19, 15.804, 1.33", "29.2512, 4.15841, 16.8985, 0.22", "29.5329, 3.7953, 17.2612, 0.59", "29.613, 3.67729, 17.3605, 0.59", "29.6423, 3.62273, 17.3971, 0.59", "35.336, -0.236614, 24.7505, 0.59", "42.1482, -2.45223, 31.7605, 0.59", "49.2624, -3.61985, 38.6997, 0.59", "55.7659, -6.84702, 45.6465, 0.59", "62.1932, -10.5211, 52.4616, 0.59", "68.3811, -14.8688, 59.1373, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "5.818, 11.9691, -6.75416, 0.88", "8.36633, 11.3262, -9.14833, 0.88", "8.41986, 11.3145, -9.19204, 0.88", "10.0594, 11.0728, -10.4844, 0.88", "10.7583, 11.032, -11.0253, 0.88", "11.7612, 11.0405, -11.7901, 0.88", "12.5887, 11.1049, -12.4003, 1.03", "12.9824, 11.1917, -12.602, 1.03", "14.1371, 11.6067, -13.1767, 0.59", "14.8986, 12.0779, -13.5249, 0.52", "15.0807, 12.2048, -13.5995, 0.52", "15.6397, 12.5781, -13.7577, 0.52", "15.6998, 12.613, -13.7712, 0.52", "16.1415, 12.745, -13.8194, 0.44", "16.5815, 12.7501, -13.8194, 0.44", "17.5423, 12.6261, -13.7555, 1.18", "18.0967, 12.5313, -13.6985, 1.62", "18.175, 12.5177, -13.6885, 1.62", "18.9585, 12.4569, -13.579, 1.62", "19.5457, 12.4577, -13.4882, 1.18", "20.8259, 12.6158, -13.3168, 0.37", "21.4755, 12.7871, -13.2448, 0.37", "21.8828, 12.9595, -13.2168, 0.37", "22.9257, 13.5389, -13.2176, 0.37", "22.9837, 13.5797, -13.2217, 0.37", "23.6119, 14.075, -13.3426, 0.81", "23.7841, 14.2234, -13.4034, 1.33", "24.5366, 14.8285, -13.6945, 1.47", "25.1294, 15.2576, -13.9299, 1.77", "25.4705, 15.4756, -14.0661, 1.77", "26.3376, 15.9571, -14.3885, 0.96", "27.5155, 16.4731, -14.8198, 0.29", "28.0978, 16.6764, -15.0625, 0.52", "28.1636, 16.6949, -15.1045, 0.52", "28.5495, 16.8044, -15.3913, 0.52", "29.2247, 17.0011, -15.9408, 0.29", "30.2383, 17.2904, -16.7857, 1.33", "31.0249, 17.5316, -17.4656, 1.69", "32.9735, 18.2375, -19.1402, 0.66", "33.7441, 18.5413, -19.7736, 0.22", "33.8979, 18.6099, -19.9042, 0.22", "34.4758, 18.9015, -20.4041, 0.22", "35.6613, 19.5222, -21.3488, 2.06", "36.3046, 19.8338, -21.7497, 3.09", "36.8273, 20.0527, -21.9266, 3.39" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.50656, 33.4331, -11.0967, 0.29", "2.66817, 34.3267, -9.95772, 0.29", "2.73681, 34.7724, -9.41079, 0.52", "2.84896, 35.6926, -8.34731, 1.11", "2.95864, 36.7359, -7.18795, 1.55", "2.99936, 37.2638, -6.63492, 1.55", "3.14813, 39.7555, -4.12482, 0.44", "3.14427, 40.357, -3.5664, 0.44", "3.1275, 40.7814, -3.16638, 0.52", "3.12371, 40.8832, -3.06545, 0.52", "3.07327, 41.3414, -2.40603, 0.52", "3.06281, 41.3819, -2.31435, 0.52", "2.97711, 41.5884, -1.71763, 0.52", "2.96855, 41.6059, -1.66064, 0.52", "2.69777, 42.1375, -0.0181261, 1.4", "2.15118, 43.2404, 3.14714, 1.03", "1.87084, 43.8307, 4.73251, 1.18", "1.73976, 44.1231, 5.43369, 1.18", "1.47696, 44.8246, 6.86819, 1.25", "1.29867, 45.4676, 7.94046, 0.37", "1.24593, 45.7879, 8.35354, 0.74", "1.24812, 46.1052, 8.67337, 0.88", "1.27688, 46.3784, 8.93023, 0.88", "1.55724, 47.7476, 10.2038, 0.29", "1.78428, 48.4971, 10.8733, 0.29", "2.25938, 49.724, 12.008, 1.18", "2.30379, 49.8301, 12.1095, 1.18", "2.46774, 50.1928, 12.4756, 1.4", "2.67008, 50.5906, 12.8462, 1.62", "2.71702, 50.6707, 12.9034, 1.62", "2.92711, 51.0542, 13.1573, 1.62", "2.98882, 51.1958, 13.2593, 1.62", "3.21238, 52.1148, 14.0924, 1.25", "3.40333, 53.0198, 14.9753, 0.44", "3.48223, 53.5059, 15.4775, 0.59", "3.58754, 54.3715, 16.4046, 0.37", "3.64441, 55.3692, 17.5291, 0.96", "3.61579, 56.4466, 18.7592, 2.06" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.50656, 33.4331, -11.0967, 0.66", "2.8919, 33.8458, -11.27, 0.66", "3.84278, 34.7413, -11.6244, 0.37", "4.74277, 35.3919, -11.8987, 0.29", "4.81371, 35.4282, -11.9118, 0.22", "5.60462, 35.7664, -12.0163, 0.81", "5.73365, 35.8216, -12.0299, 0.81", "6.42397, 36.0682, -12.0659, 1.11", "7.35497, 36.3808, -12.0592, 0.88", "8.45294, 36.835, -12.001, 0.22", "8.51213, 36.8742, -11.9994, 0.22", "9.1192, 37.3804, -12.0011, 0.74", "9.50196, 37.7396, -12.0124, 1.11", "9.92854, 38.2271, -12.0489, 1.11", "10.25, 38.6632, -12.0921, 0.52", "10.7614, 39.4512, -12.2257, 0.22", "11.2378, 40.225, -12.3507, 0.22", "11.4836, 40.6339, -12.4135, 0.22", "11.9605, 41.4286, -12.5264, 1.11", "12.2323, 41.8976, -12.6062, 1.11", "12.8895, 42.9995, -12.8143, 0.22", "13.6649, 44.3027, -13.0738, 1.99", "13.865, 44.6475, -13.139, 2.73", "14.1383, 45.117, -13.1944, 2.8", "14.936, 46.4311, -13.2678, 0.29", "15.7673, 47.8137, -13.263, 0.22", "15.8179, 47.9029, -13.2586, 0.22", "16.4031, 49.0477, -13.1877, 0.22", "17.0175, 50.463, -13.0725, 0.22", "17.0407, 50.5318, -13.0648, 0.22", "17.2102, 51.2719, -12.9414, 0.22", "17.4859, 52.4693, -12.8575, 0.88", "17.5172, 52.5466, -12.8608, 0.88", "17.8093, 53.0587, -12.9462, 1.33", "18.0079, 53.3707, -13.0152, 1.33", "18.2133, 53.6807, -13.071, 1.33", "19.0547, 54.8899, -13.2386, 0.22", "19.5907, 55.689, -13.3071, 0.22", "19.6252, 55.7527, -13.3126, 0.22", "20.1177, 56.8739, -13.405, 1.25", "20.3429, 57.4879, -13.4674, 1.92", "20.5287, 58.0337, -13.5288, 2.14", "20.7123, 58.6512, -13.6009, 1.92", "21.268, 60.507, -13.8478, 0.22", "21.4592, 61.0867, -13.9301, 0.22", "21.7209, 61.8123, -14.0417, 0.22", "22.0197, 62.5932, -14.1585, 0.22", "22.0471, 62.6602, -14.1677, 0.22", "22.3868, 63.4488, -14.2618, 1.03", "22.6951, 64.1349, -14.3224, 1.55", "22.8689, 64.5637, -14.3604, 1.84", "23.1307, 65.3068, -14.4172, 1.62", "23.5956, 66.8228, -14.5417, 0.37", "23.6821, 67.1122, -14.5668, 0.59", "23.7895, 67.4821, -14.6022, 0.59", "24.1322, 68.7409, -14.7415, 0.29", "24.4406, 69.907, -14.8773, 1.33", "24.607, 70.5903, -14.961, 2.21", "24.6758, 70.8925, -14.9982, 2.73", "24.6902, 70.9532, -15.0058, 2.73", "24.8844, 71.7354, -15.101, 2.73" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-6.05315, 31.0442, 4.32814, 0.74", "-8.78384, 30.3157, 5.73459, 0.74", "-9.67253, 30.1421, 6.16715, 0.59", "-10.299, 30.0707, 6.53583, 0.88", "-11.2838, 30.0354, 7.18373, 0.59", "-11.8996, 30.0662, 7.60076, 0.74", "-12.5511, 30.1504, 8.07537, 0.96", "-13.1985, 30.3552, 8.51478, 1.18", "-14.3988, 30.9671, 9.59779, 0.59", "-14.7265, 31.1968, 10.0708, 0.29", "-15.0618, 31.4393, 10.7436, 0.81", "-15.4266, 31.672, 11.5611, 0.81", "-15.4551, 31.6873, 11.6233, 0.81", "-16.0817, 31.9658, 12.8674, 0.59", "-17.4775, 32.6045, 15.5932, 1.69", "-18.6591, 33.1102, 17.8566, 0.37", "-19.3798, 33.373, 19.2288, 0.29", "-19.8273, 33.5283, 20.0711, 0.22", "-20.2209, 33.6664, 20.7817, 0.22", "-21.445, 34.1421, 22.8565, 1.69", "-22.5772, 34.699, 24.6803, 1.11", "-23.5437, 35.2862, 26.3129, 1.84", "-24.3806, 35.8445, 27.7941, 2.36", "-25.2468, 36.4173, 29.3705, 0.29", "-25.7168, 36.7072, 30.2009, 0.29", "-26.209, 36.9572, 30.9321, 0.22", "-27.1073, 37.4247, 32.0527, 0.52", "-27.4126, 37.5564, 32.352, 0.88", "-27.9253, 37.6921, 32.7815, 0.88", "-27.9775, 37.6994, 32.8275, 0.88", "-28.7755, 37.7511, 33.648, 0.37", "-29.3814, 37.7795, 34.303, 0.37", "-30.1964, 37.9039, 35.2533, 0.29", "-30.994, 38.1004, 36.2522, 0.74", "-31.7118, 38.3307, 37.2016, 0.96", "-33.1208, 38.8835, 39.0398, 1.25", "-33.1609, 38.9012, 39.0946, 1.25", "-34.2403, 39.43, 40.6531, 0.15", "-34.6862, 39.6623, 41.2852, 0.15", "-34.7203, 39.6812, 41.3312, 0.15", "-35.5773, 40.2978, 42.3554, 1.62", "-41.4037, 40.0862, 50.4803, 1.62", "-47.6505, 41.3346, 58.198, 1.62", "-53.4094, 44.2968, 65.8711, 1.62", "-59.6502, 49.092, 72.2111, 1.62", "-66.1179, 52.888, 78.9267, 1.62", "-74.5294, 54.7121, 84.0481, 1.62", "-82.5222, 57.5155, 89.432, 1.62", "-90.2577, 60.6813, 95.0062, 1.62", "-97.675, 62.747, 101.418, 1.62", "-105.492, 65.0491, 107.257, 1.62", "-112.68, 66.2259, 114.118, 1.62", "-120.883, 69.1849, 119.095, 1.62", "-129.348, 73.2416, 122.758, 1.62", "-137.035, 77.094, 127.998, 1.62", "-145.11, 79.3642, 133.485, 1.62", "-153.286, 81.2458, 138.956, 1.62", "-161.116, 81.5521, 145.171, 1.62" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.05315, 31.0442, 4.32814, 0.59", "-5.37988, 33.8585, 7.30389, 0.59", "-5.28681, 34.6406, 8.03367, 0.59", "-5.36841, 35.8506, 8.96932, 0.29", "-5.37826, 35.9094, 9.01013, 0.29", "-5.51132, 36.4795, 9.3859, 0.29", "-5.59931, 36.8336, 9.6278, 0.52", "-5.89691, 37.4808, 10.1787, 0.52", "-6.37345, 38.3813, 11.2317, 0.52", "-6.39529, 38.423, 11.285, 0.52", "-6.68198, 39.0184, 12.0601, 0.96", "-7.00046, 39.7317, 13.0347, 1.55", "-7.85997, 41.6954, 15.8936, 0.59", "-8.09064, 42.2004, 16.7554, 0.29", "-8.29784, 42.6333, 17.635, 0.29", "-8.62292, 43.2728, 18.9586, 0.66", "-8.63993, 43.3016, 19.0208, 0.66", "-8.96051, 43.7545, 19.9971, 0.96", "-9.50698, 44.4908, 21.4379, 0.22", "-9.77608, 44.7151, 22.4745, 0.59", "-12.6752, 51.5625, 29.4793, 0.59", "-15.4422, 58.2065, 36.7116, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.079, 99.2643, -3.69769, 0.29", "-9.43277, 100.08, -3.42247, 0.29", "-10.0973, 100.51, -3.27927, 0.29", "-10.6699, 100.905, -3.1556, 0.22", "-11.2663, 101.343, -3.02776, 0.22", "-11.3469, 101.403, -3.01253, 0.22", "-12.0209, 101.906, -2.90261, 0.22", "-12.5174, 102.301, -2.8283, 0.66", "-12.7886, 102.552, -2.7852, 0.88", "-12.9469, 102.73, -2.75105, 0.88", "-13.507, 103.446, -2.62001, 0.22", "-13.9187, 104.017, -2.50682, 0.22", "-14.219, 104.467, -2.41299, 1.03", "-14.6267, 105.132, -2.26397, 1.03", "-15.4447, 106.567, -1.87656, 0.29", "-15.666, 106.973, -1.7556, 0.52", "-15.9708, 107.559, -1.5723, 0.52", "-16.3333, 108.218, -1.3548, 0.52", "-17.0288, 109.358, -0.986467, 0.15", "-17.6177, 110.248, -0.722054, 1.03", "-17.9819, 110.76, -0.578144, 1.4", "-18.3956, 111.306, -0.434825, 1.4", "-19.1866, 112.328, -0.195407, 0.29", "-19.9748, 113.325, -0.00872677, 0.22", "-20.4534, 113.916, 0.064353, 0.52", "-20.7821, 114.323, 0.0899904, 0.52", "-21.5229, 115.246, 0.0846084, 0.29", "-21.9055, 115.719, 0.0227626, 0.29", "-22.5814, 116.524, -0.186517, 1.47", "-22.9039, 116.863, -0.301726, 1.99", "-23.2712, 117.221, -0.479618, 1.99", "-24.0525, 117.964, -0.984714, 0.96", "-24.8723, 118.7, -1.7456, 0.29", "-25.4386, 119.192, -2.35909, 0.29", "-26.2451, 119.888, -3.36633, 0.22", "-27.0854, 120.652, -4.55441, 1.55", "-27.598, 121.149, -5.33026, 1.47", "-28.7372, 122.396, -7.30459, 0.29", "-28.9474, 122.636, -7.70798, 0.37", "-29.3906, 123.145, -8.5965, 0.29", "-29.9297, 123.76, -9.78835, 1.62", "-30.269, 124.11, -10.5058, 2.14", "-31.4741, 125.266, -12.9501, 0.22", "-32.0721, 125.813, -14.1594, 1.03", "-32.3224, 126.022, -14.6618, 1.33", "-34.1015, 127.197, -18.0044, 0.22", "-34.4258, 127.347, -18.5468, 1.03", "-34.7003, 127.425, -18.9482, 1.47", "-34.747, 127.431, -19.0, 1.47", "-35.0942, 127.463, -19.2803, 1.77", "-36.682, 127.565, -20.0413, 0.22", "-37.5517, 127.611, -20.1862, 0.22", "-38.443, 127.692, -20.1984, 1.18", "-39.0638, 127.782, -20.1381, 1.55", "-40.3556, 128.055, -19.9025, 0.22", "-41.4888, 128.386, -19.5955, 2.14", "-41.8698, 128.532, -19.4518, 2.73", "-43.757, 129.43, -18.6577, 0.22", "-44.5527, 129.892, -18.3109, 0.22", "-45.0002, 130.209, -18.1338, 0.22", "-45.3403, 130.504, -18.0192, 0.96", "-45.5513, 130.735, -17.9608, 0.96", "-46.3589, 131.845, -17.7972, 0.22", "-47.079, 133.036, -17.7778, 0.22", "-47.7914, 134.259, -17.8085, 1.11", "-48.0399, 134.67, -17.8494, 1.62", "-48.8716, 135.984, -18.1068, 0.22", "-49.7208, 137.292, -18.4745, 0.22", "-50.3907, 138.313, -18.8563, 1.18", "-50.6453, 138.67, -19.0369, 1.47", "-51.7335, 140.056, -19.9029, 0.15", "-52.3938, 140.831, -20.4561, 0.15", "-52.8299, 141.302, -20.8507, 0.66", "-52.9273, 141.406, -20.9407, 0.88", "-53.7469, 142.399, -21.7182, 0.74", "-53.9839, 142.739, -21.9517, 0.74", "-54.2217, 143.144, -22.1873, 0.44", "-54.8485, 144.275, -22.7818, 0.15", "-55.1464, 144.8, -23.0865, 0.37", "-55.4272, 145.246, -23.3493, 0.37", "-55.8945, 145.907, -23.7708, 0.15", "-56.3446, 146.457, -24.172, 0.96", "-56.5682, 146.697, -24.362, 1.25", "-57.627, 147.7, -25.2346, 0.22", "-58.2647, 148.297, -25.7469, 0.22", "-58.8563, 148.83, -26.2468, 1.11", "-59.0235, 148.968, -26.3976, 1.62", "-59.3741, 149.237, -26.706, 1.47", "-60.4578, 150.033, -27.6077, 0.15", "-61.1937, 150.578, -28.2234, 0.15", "-62.3758, 151.478, -29.2443, 0.15", "-62.8683, 151.851, -29.6496, 0.15", "-63.411, 152.282, -30.1414, 0.15", "-63.9769, 152.741, -30.663, 0.15", "-64.9197, 153.527, -31.5249, 1.03", "-65.2497, 153.806, -31.8191, 1.47", "-65.5142, 154.054, -32.0398, 1.69", "-67.112, 155.658, -33.2961, 0.22", "-67.6486, 156.197, -33.6924, 0.22", "-67.6956, 156.242, -33.7213, 0.22", "-68.0571, 156.56, -33.8622, 0.59", "-68.1738, 156.652, -33.896, 0.59", "-69.1897, 157.388, -34.1024, 0.22", "-69.661, 157.703, -34.1533, 1.11", "-70.2326, 158.084, -34.228, 1.55", "-71.2733, 158.79, -34.4197, 0.22", "-72.3117, 159.502, -34.6632, 0.22", "-73.3742, 160.244, -34.9937, 0.22", "-73.4371, 160.289, -35.0191, 0.22", "-73.8256, 160.591, -35.2007, 0.22", "-74.4607, 161.143, -35.5192, 1.11", "-74.5012, 161.185, -35.5399, 1.11", "-74.9614, 161.705, -35.7427, 1.55", "-75.231, 162.023, -35.8437, 1.55", "-76.2141, 163.191, -36.164, 0.22", "-76.8786, 164.006, -36.3396, 0.22", "-77.3441, 164.591, -36.4251, 0.22", "-78.0217, 165.484, -36.5276, 1.18", "-78.1833, 165.705, -36.5467, 1.77", "-78.2243, 165.764, -36.5514, 1.77", "-79.3743, 167.57, -36.6683, 0.22", "-80.1229, 168.819, -36.7416, 0.22", "-80.5948, 169.655, -36.7835, 0.22", "-80.6296, 169.719, -36.7865, 0.22", "-81.2837, 170.928, -36.8366, 0.59", "-81.8911, 172.075, -36.8726, 0.22", "-81.9967, 172.294, -36.8726, 0.66", "-82.1506, 172.644, -36.8726, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-8.079, 99.2643, -3.69769, 0.37", "-8.19361, 101.283, -3.14307, 0.37", "-8.2571, 102.154, -2.91133, 0.37", "-8.29051, 102.708, -2.73966, 0.37", "-8.30202, 103.065, -2.61172, 0.29", "-8.30937, 103.629, -2.40549, 0.29", "-8.31247, 105.031, -1.90311, 1.11", "-8.31039, 105.632, -1.69581, 1.33", "-8.27633, 106.707, -1.31246, 0.74", "-8.22989, 107.849, -0.90774, 0.52", "-8.19687, 108.505, -0.685829, 0.96", "-8.15644, 109.152, -0.485056, 1.11", "-8.12145, 109.822, -0.312665, 0.96", "-8.09647, 110.799, -0.0972287, 0.22", "-8.08331, 111.532, -7.85073E-4, 0.22", "-8.05515, 112.072, 0.0367404, 0.22", "-7.99716, 112.553, 0.0458994, 1.03", "-7.95072, 112.853, 0.0359214, 1.03", "-7.93723, 112.936, 0.029316, 1.03", "-7.7993, 113.785, -0.0739016, 0.22", "-7.67066, 114.663, -0.177796, 0.74", "-7.58895, 115.417, -0.2577, 0.29", "-7.51323, 116.171, -0.329026, 0.52", "-7.45941, 116.65, -0.37618, 0.52", "-7.3407, 117.516, -0.491201, 0.22", "-7.21427, 118.334, -0.620957, 0.66", "-7.13524, 118.747, -0.694747, 0.88", "-6.9659, 119.496, -0.829165, 0.88", "-6.76836, 120.308, -0.982533, 0.37", "-6.56038, 121.246, -1.11932, 0.22", "-6.5435, 121.348, -1.12761, 0.22", "-6.46934, 122.126, -1.14378, 0.22", "-6.44276, 123.007, -1.11858, 0.81", "-6.4717, 123.947, -1.03673, 0.81", "-6.54871, 124.976, -0.895217, 0.29", "-6.6369, 125.844, -0.744769, 0.22", "-6.69889, 126.61, -0.619814, 0.59", "-6.7028, 126.683, -0.608913, 0.59", "-6.70157, 126.927, -0.580929, 0.59", "-6.64575, 127.782, -0.567001, 0.22", "-6.63888, 127.855, -0.571938, 0.22", "-6.55203, 128.89, -0.679944, 1.18", "-6.52019, 129.421, -0.741163, 1.62", "-6.49835, 130.497, -0.865937, 1.03", "-6.52874, 131.799, -1.01248, 0.22", "-6.53238, 131.872, -1.02404, 0.22", "-6.58652, 132.783, -1.21492, 0.22", "-6.59787, 132.925, -1.25088, 0.22", "-6.64168, 133.808, -1.54092, 0.22", "-6.60951, 134.568, -1.90685, 1.03", "-6.48431, 135.631, -2.52139, 0.29", "-6.39627, 136.277, -2.91458, 0.29", "-6.38615, 136.336, -2.9538, 0.29", "-6.19426, 137.308, -3.58214, 1.18", "-5.74957, 138.758, -4.55729, 0.22", "-5.69249, 138.891, -4.64696, 0.22", "-5.19949, 139.858, -5.33015, 0.22", "-5.1683, 139.909, -5.3702, 0.22", "-4.59073, 140.686, -6.07159, 1.25", "-3.591, 141.807, -7.1661, 0.22", "-2.81905, 142.534, -7.93003, 0.66", "-2.0161, 143.236, -8.72693, 0.81", "-1.19924, 143.943, -9.57704, 0.22", "-0.56208, 144.546, -10.2918, 0.59", "-0.166732, 144.954, -10.7791, 0.22", "0.343713, 145.614, -11.473, 2.21", "1.03771, 146.73, -12.4912, 0.29", "1.51332, 147.631, -13.1723, 0.15", "1.67106, 147.949, -13.42, 0.15", "1.71281, 148.033, -13.4886, 0.15", "2.04081, 148.627, -14.103, 0.74", "2.07184, 148.673, -14.1621, 0.74", "2.24556, 148.907, -14.5821, 0.74", "2.88679, 149.752, -16.3251, 0.22", "3.1701, 150.146, -17.1847, 1.55", "3.44997, 150.611, -18.1802, 1.25", "3.46654, 150.646, -18.251, 1.25", "3.89813, 151.861, -20.4203, 0.22", "3.94559, 152.079, -20.7471, 0.22", "3.94918, 152.125, -20.8019, 0.22", "3.97728, 152.757, -21.5016, 1.11", "3.99454, 153.202, -21.9345, 1.4", "4.06737, 154.226, -22.8554, 0.52", "4.18098, 155.024, -23.4582, 0.15", "4.28863, 155.628, -23.9041, 0.96", "4.51389, 156.65, -24.6427, 0.22", "4.52865, 156.706, -24.6856, 0.22", "4.65136, 157.125, -25.0144, 0.22", "4.83762, 157.753, -25.5739, 0.52", "4.94368, 158.101, -25.8992, 0.52", "5.24904, 159.063, -26.8272, 0.29", "5.65468, 160.224, -28.0172, 1.4", "5.70964, 160.37, -28.1801, 1.62", "6.28855, 161.94, -29.9945, 0.29", "6.49383, 162.464, -30.7799, 0.29", "6.52587, 162.54, -30.9073, 0.29", "6.78888, 163.12, -31.9286, 0.29", "7.01045, 163.652, -32.8553, 0.88", "7.11617, 163.954, -33.3592, 1.03", "7.79763, 166.159, -36.9363, 0.15", "7.95883, 166.736, -37.8611, 1.47", "8.01499, 166.981, -38.2298, 1.62", "8.2078, 168.232, -39.8721, 0.29", "8.25488, 168.677, -40.3785, 0.37", "8.29086, 169.547, -41.2162, 0.22", "8.27061, 169.923, -41.4544, 0.22", "8.26335, 169.985, -41.4915, 0.22", "8.10371, 171.039, -42.0771, 1.25", "7.97925, 171.692, -42.4189, 1.47", "7.56953, 173.245, -43.2554, 0.29", "7.33908, 173.919, -43.6039, 0.29", "7.114, 174.502, -43.9333, 0.88", "7.01646, 174.745, -44.0791, 0.88", "6.57776, 175.812, -44.842, 0.22", "6.27706, 176.513, -45.3543, 0.22", "6.11463, 176.876, -45.6133, 0.22", "5.82985, 177.46, -46.0359, 1.03", "5.7112, 177.737, -46.2671, 1.03", "5.1878, 179.041, -47.4274, 0.22", "4.90205, 179.793, -48.1325, 0.22", "4.68288, 180.418, -48.7236, 1.03", "4.5569, 180.732, -49.0526, 1.47", "3.83768, 182.397, -50.8281, 0.29", "3.64854, 182.828, -51.2882, 0.29", "3.33832, 183.581, -52.0542, 1.18", "3.12949, 184.142, -52.5965, 1.69", "2.41025, 186.109, -54.3241, 0.15", "2.24613, 186.563, -54.705, 0.88", "2.11276, 186.918, -54.9606, 0.88", "1.76508, 187.891, -55.611, 0.22", "1.43321, 188.842, -56.2111, 1.4", "1.29691, 189.234, -56.4462, 1.69", "0.759294, 190.811, -57.2583, 0.81", "0.400621, 191.772, -57.7839, 0.29", "0.101069, 192.512, -58.2281, 0.29", "-0.218447, 193.272, -58.6959, 0.59", "-0.375726, 193.648, -58.9423, 0.88", "-0.495816, 193.942, -59.1503, 0.88", "-0.93173, 195.067, -59.9487, 0.29", "-1.2912, 196.146, -60.779, 1.18", "-1.41997, 196.619, -61.1379, 1.18", "-1.79216, 198.155, -62.2437, 0.22", "-2.02787, 199.362, -63.1037, 1.25", "-2.07532, 199.731, -63.3639, 1.69", "-2.17013, 201.432, -64.5065, 0.15", "-2.14472, 202.139, -64.991, 0.15", "-2.09318, 202.641, -65.3474, 0.88", "-1.83134, 203.938, -66.2497, 0.22", "-1.57363, 204.894, -66.928, 1.33", "-1.46334, 205.21, -67.1663, 1.62", "-0.509822, 207.225, -68.9911, 0.29", "-0.483882, 207.271, -69.0392, 0.29", "-0.193267, 207.699, -69.5233, 0.29", "-0.160922, 207.74, -69.5715, 0.29", "0.206188, 208.169, -70.0841, 0.52", "1.43786, 209.494, -71.7039, 0.22", "1.80053, 209.867, -72.145, 0.22", "2.14607, 210.269, -72.5895, 0.66", "2.24341, 210.406, -72.7263, 0.66", "2.3814, 210.627, -72.9272, 0.66", "2.85541, 211.54, -73.6411, 0.22", "3.20865, 212.298, -74.112, 1.03", "3.41222, 212.821, -74.4258, 1.03", "3.75055, 213.883, -75.0283, 0.22", "3.7703, 213.954, -75.0663, 0.22", "3.99159, 214.93, -75.5464, 1.62", "4.09336, 215.502, -75.7982, 1.92", "4.41314, 217.549, -76.6633, 0.22", "4.49046, 218.153, -76.9072, 0.44", "4.49733, 218.222, -76.9323, 0.44", "4.54892, 218.692, -77.085, 0.44", "4.68275, 220.08, -77.4375, 0.15", "4.68872, 220.151, -77.4508, 0.15", "4.74392, 220.88, -77.5145, 0.66", "4.77049, 221.265, -77.5476, 0.66", "4.81458, 222.249, -77.6221, 0.15", "4.82542, 223.248, -77.681, 0.15", "4.7947, 224.047, -77.7097, 0.96", "4.75793, 224.507, -77.7308, 1.18", "4.62423, 225.883, -77.8091, 0.22", "4.54346, 226.587, -77.8525, 0.22", "4.43581, 227.379, -77.8803, 0.66", "4.39823, 227.693, -77.8792, 0.81", "4.29334, 228.684, -77.8373, 0.22", "4.23497, 229.335, -77.7971, 0.22", "4.17902, 230.255, -77.7268, 0.22", "4.14388, 231.1, -77.6694, 0.22", "4.13109, 231.791, -77.6314, 1.03", "4.12859, 232.279, -77.627, 1.55", "4.14706, 234.365, -77.6745, 0.22", "4.17035, 235.825, -77.7344, 0.22", "4.17353, 235.909, -77.7393, 0.22", "4.25316, 237.286, -77.8482, 0.22", "4.40886, 239.369, -78.0371, 1.03", "4.44712, 239.784, -78.0769, 1.03", "4.57766, 241.261, -78.22, 0.15", "4.62019, 241.975, -78.302, 0.15", "4.6351, 242.444, -78.3602, 0.88", "4.63164, 243.084, -78.4455, 0.44", "4.56317, 244.746, -78.7407, 0.15", "4.49939, 245.555, -78.9192, 0.15", "4.37662, 246.578, -79.197, 0.59", "4.36839, 246.648, -79.2166, 0.59", "4.34389, 246.816, -79.2683, 0.59", "4.14525, 248.097, -79.6548, 0.15", "4.01832, 248.879, -79.9064, 1.03", "4.00586, 248.959, -79.9298, 1.03", "3.87742, 249.78, -80.1335, 1.03", "3.60838, 251.477, -80.4958, 0.15", "3.38564, 252.733, -80.748, 0.15", "3.35, 252.904, -80.7787, 0.15", "3.20334, 253.554, -80.9048, 0.15", "3.02945, 254.289, -81.039, 0.96", "2.90322, 254.799, -81.1261, 1.11", "2.54742, 256.435, -81.3499, 0.22", "2.51118, 256.586, -81.3716, 0.22", "2.26128, 257.741, -81.5188, 0.22", "2.16134, 258.26, -81.5761, 0.59", "2.14569, 258.342, -81.5831, 0.59", "2.03878, 258.971, -81.6162, 0.22", "1.97448, 259.52, -81.6162, 0.44", "1.87551, 260.765, -81.6162, 0.15", "1.84208, 261.3, -81.6162, 0.15", "1.81262, 261.815, -81.6364, 0.44", "1.80843, 261.888, -81.6413, 0.44", "1.74547, 263.257, -81.748, 0.15", "1.71871, 263.951, -81.8122, 0.52", "1.67828, 264.605, -81.8885, 0.22", "1.6243, 265.545, -82.015, 0.96", "1.60374, 266.006, -82.0866, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "44.0247, -102.83, -10.0503, 0.44", "44.352, -105.498, -12.5417, 0.44", "44.4205, -106.032, -12.9626, 0.66", "44.5612, -106.931, -13.5666, 0.22", "44.6577, -107.437, -13.8745, 0.22", "44.8247, -108.234, -14.3383, 0.81", "44.9487, -108.844, -14.6641, 1.03", "45.193, -109.977, -15.058, 0.22", "45.3702, -110.815, -15.3303, 0.22", "45.4487, -111.205, -15.4387, 0.44", "45.65, -112.36, -15.6999, 0.29", "45.8126, -113.408, -15.8932, 0.22", "45.8201, -113.48, -15.9053, 0.22", "45.8668, -114.24, -16.009, 1.47", "45.8842, -114.771, -16.071, 1.84", "45.9598, -116.688, -16.2436, 0.22", "46.0332, -117.803, -16.3064, 0.22", "46.1098, -118.562, -16.347, 0.22", "46.2363, -119.561, -16.3941, 1.03", "46.3242, -120.104, -16.4233, 1.25", "46.5122, -121.107, -16.4781, 0.44", "46.703, -121.964, -16.5241, 0.29", "46.9622, -122.972, -16.58, 0.29", "47.2644, -123.941, -16.6701, 0.29", "47.4582, -124.512, -16.7427, 0.44", "47.4942, -124.609, -16.7576, 0.44", "47.6702, -125.058, -16.8312, 0.44", "48.0191, -125.868, -16.9554, 0.29", "48.4698, -126.779, -17.0774, 1.69", "48.707, -127.228, -17.1289, 2.21", "48.9988, -127.804, -17.1588, 2.21", "49.7031, -129.305, -17.0915, 0.29", "50.2127, -130.462, -16.9367, 0.29", "50.63, -131.491, -16.6887, 0.29", "50.9292, -132.304, -16.4156, 0.22", "51.2623, -133.311, -15.9598, 0.37", "51.6235, -134.561, -15.217, 0.15", "51.6375, -134.624, -15.1655, 0.15", "51.6999, -134.994, -14.8131, 0.81", "51.7577, -135.502, -14.2884, 1.11", "51.854, -136.4, -13.3441, 0.37", "51.9194, -137.35, -12.4336, 0.22", "51.9277, -138.857, -11.1861, 0.22", "51.9233, -138.912, -11.1402, 0.22", "51.8479, -139.456, -10.6961, 1.25", "51.7943, -139.747, -10.4622, 1.4", "51.4817, -141.087, -9.4484, 0.22", "51.2051, -142.101, -8.72132, 0.22", "50.7232, -143.908, -7.56316, 1.18", "50.6592, -144.164, -7.39982, 1.4", "50.6103, -144.393, -7.25417, 1.4" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "44.0247, -102.83, -10.0503, 0.29", "43.847, -104.831, -9.43018, 0.29", "43.8342, -105.592, -9.21385, 0.81", "43.8723, -107.108, -8.81137, 0.22", "43.9253, -108.037, -8.57708, 0.22", "43.9348, -108.137, -8.55505, 0.22", "43.9908, -108.676, -8.44983, 0.22", "44.1041, -109.044, -8.41073, 0.52", "44.1455, -109.183, -8.3906, 0.52", "44.1716, -109.297, -8.37248, 0.52", "44.3861, -110.334, -8.16845, 0.22", "44.4524, -110.598, -8.11138, 0.66", "44.6071, -111.176, -7.98093, 0.81", "44.9115, -112.422, -7.69951, 0.22", "44.9225, -112.49, -7.67539, 0.22", "45.0075, -113.335, -7.31502, 0.22", "45.0287, -113.866, -7.06362, 0.22", "45.0151, -114.419, -6.81199, 0.88", "44.9035, -115.791, -6.23596, 0.22", "44.656, -117.897, -5.45759, 0.22", "44.5536, -118.638, -5.2032, 0.81", "44.4896, -119.049, -5.07319, 0.81", "44.2583, -120.69, -4.60811, 0.22", "44.1558, -121.584, -4.39807, 0.29", "44.0817, -122.485, -4.25249, 0.81", "44.066, -122.971, -4.21828, 1.18", "44.0842, -123.853, -4.1629, 0.44", "44.1639, -124.864, -4.09983, 0.22", "44.249, -125.47, -4.06343, 0.52", "44.2913, -125.696, -4.04592, 0.52", "44.451, -126.407, -3.98157, 0.22", "44.6443, -127.21, -3.90518, 0.22", "44.6706, -127.31, -3.89267, 0.52", "44.6901, -127.38, -3.88267, 0.52", "44.8747, -128.058, -3.77586, 0.22", "44.9922, -128.503, -3.70476, 0.81", "45.1237, -129.019, -3.62363, 1.03", "45.4848, -130.37, -3.43448, 0.22", "45.6091, -130.809, -3.37978, 0.22", "45.7274, -131.182, -3.34011, 0.96", "45.9109, -131.698, -3.31931, 1.33", "46.0975, -132.176, -3.32124, 0.96", "46.6874, -133.561, -3.39779, 0.22", "46.7169, -133.627, -3.4046, 0.22", "46.9697, -134.221, -3.46431, 0.22", "47.3569, -135.278, -3.56387, 1.33", "47.3817, -135.357, -3.571, 1.33", "47.525, -135.93, -3.60563, 1.62", "47.7552, -137.099, -3.64282, 0.44", "47.9334, -138.017, -3.61635, 0.15", "48.081, -138.802, -3.54541, 0.15", "48.0983, -138.871, -3.52867, 0.15", "48.4644, -140.016, -3.16492, 0.15", "48.4873, -140.067, -3.13933, 0.15", "48.8847, -140.762, -2.69685, 0.44", "49.1106, -141.072, -2.4798, 0.88", "50.2938, -142.429, -1.40561, 0.22", "50.5445, -142.692, -1.1846, 0.52", "51.6735, -143.788, -0.223611, 0.22", "51.9942, -144.106, 0.0445577, 0.96", "52.8308, -144.995, 0.757368, 0.74", "53.8571, -146.132, 1.62011, 0.22", "53.8988, -146.18, 1.6522, 0.22", "54.1605, -146.518, 1.86286, 1.03", "54.4475, -146.939, 2.09924, 1.03", "55.3224, -148.47, 2.93365, 0.22", "55.5098, -148.906, 3.17692, 0.81", "55.7334, -149.54, 3.51702, 0.81", "56.1309, -150.716, 4.26153, 0.22", "56.1706, -150.837, 4.34967, 0.22", "56.3986, -151.531, 4.92791, 0.22", "56.6465, -152.414, 5.77201, 0.37", "56.6614, -152.46, 5.8251, 0.37", "56.984, -153.229, 6.92787, 0.59", "57.0088, -153.261, 6.9854, 0.59", "57.1155, -153.346, 7.16008, 0.59", "57.1613, -153.369, 7.22197, 0.59", "57.9172, -153.77, 8.08265, 0.22", "57.9587, -153.798, 8.13251, 0.22", "58.2961, -154.073, 8.54506, 0.88", "58.4623, -154.229, 8.75776, 0.88", "59.7077, -155.552, 10.404, 0.22", "60.1414, -156.07, 10.9918, 0.22", "60.6649, -156.8, 11.651, 0.59", "60.9204, -157.162, 11.9767, 0.81", "60.9526, -157.21, 12.0191, 0.81", "61.0727, -157.396, 12.177, 0.81", "61.1051, -157.448, 12.2153, 0.81", "61.8508, -158.584, 13.0792, 0.22", "62.8071, -160.061, 14.0888, 0.59", "62.8411, -160.114, 14.1225, 0.59", "63.4887, -161.138, 14.7796, 0.22", "63.6728, -161.429, 14.9833, 0.59", "63.9884, -161.927, 15.3418, 0.59", "64.5693, -162.859, 16.0184, 0.29", "65.0268, -163.569, 16.5053, 0.22", "65.845, -164.786, 17.3704, 0.29", "66.5148, -165.714, 18.0782, 0.81", "66.7521, -166.032, 18.3482, 1.18", "66.8045, -166.1, 18.4147, 1.18", "67.267, -166.626, 19.0635, 1.18", "71.5488, -175.616, 21.9542, 1.18" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-29.2665, -68.4763, 36.5509, 0.29", "-28.7418, -70.5256, 37.1978, 0.29", "-28.5164, -71.2417, 37.3507, 0.29", "-28.4945, -71.3083, 37.3707, 0.29", "-28.3652, -71.8112, 37.587, 1.03", "-28.3019, -72.2458, 37.8007, 1.18", "-28.2002, -73.3264, 38.3686, 0.29", "-28.2044, -74.3545, 38.9478, 0.29", "-28.3103, -75.4984, 39.6542, 1.03", "-28.6296, -76.9519, 40.5843, 0.37", "-29.0317, -78.0718, 41.3529, 0.37", "-29.0821, -78.1625, 41.4193, 0.37", "-29.6438, -78.817, 41.9433, 0.37", "-29.6935, -78.8563, 41.9755, 0.37", "-30.6118, -79.373, 42.3073, 0.37", "-30.7826, -79.4193, 42.3416, 0.37", "-31.4429, -79.4493, 42.4718, 0.37", "-31.8343, -79.437, 42.55, 0.81", "-32.2653, -79.4133, 42.6358, 0.81", "-32.361, -79.4141, 42.6608, 0.81", "-33.3436, -79.5189, 42.9728, 0.29", "-34.7734, -79.8373, 43.4844, 0.29", "-35.4149, -80.0861, 43.767, 0.52", "-35.9483, -80.4918, 44.1703, 0.52", "-36.4986, -81.4081, 44.9528, 0.37", "-36.7273, -82.1911, 45.5678, 0.37", "-36.7374, -82.2768, 45.6351, 0.37", "-36.7736, -83.0653, 46.2277, 0.59", "-36.8591, -84.8253, 47.5075, 0.29", "-36.9305, -85.6455, 48.0525, 0.29", "-36.9417, -85.7172, 48.0926, 0.29", "-37.3116, -87.0615, 48.8575, 0.29", "-37.6271, -87.856, 49.3342, 0.74", "-37.9297, -88.431, 49.6924, 1.03", "-38.3597, -89.137, 50.1421, 0.88", "-38.6361, -89.5741, 50.4447, 0.44", "-39.592, -91.1056, 51.5579, 0.74", "-40.2507, -92.1725, 52.4104, 0.88", "-40.8235, -93.0633, 53.2852, 0.88", "-41.1022, -93.4656, 53.7538, 0.96", "-45.6319, -100.002, 60.1354, 0.96", "-52.0048, -106.654, 64.5227, 0.96", "-57.2077, -112.616, 70.9014, 0.96", "-61.8328, -118.56, 77.7252, 0.96", "-66.4999, -125.423, 83.6829, 0.96", "-69.835, -131.297, 91.2716, 0.96", "-73.9298, -136.017, 99.2103, 0.96", "-77.2102, -141.986, 106.755, 0.96", "-79.331, -149.175, 113.728, 0.96", "-81.8055, -154.994, 121.676, 0.96", "-83.8668, -159.834, 130.307, 0.96" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-29.2665, -68.4763, 36.5509, 0.29", "-30.5819, -68.0666, 37.3317, 0.29", "-31.2777, -67.939, 37.5693, 0.29", "-32.3255, -67.8117, 37.8993, 0.22", "-32.9579, -67.7525, 38.1242, 0.22", "-33.4835, -67.703, 38.3139, 1.11", "-33.8519, -67.6626, 38.4628, 1.25", "-35.1454, -67.5994, 38.9339, 0.22", "-36.1415, -67.5891, 39.2948, 0.52", "-37.1369, -67.5641, 39.6463, 0.37", "-37.6486, -67.5162, 39.8575, 0.37", "-38.8675, -67.3435, 40.4557, 0.37", "-47.7037, -65.0849, 44.6142, 0.37", "-55.7453, -61.5838, 49.5352, 0.37", "-63.5699, -57.2057, 54.16, 0.37", "-71.6251, -52.3398, 57.8529, 0.37", "-80.2886, -47.7952, 60.3451, 0.37", "-89.1332, -43.3535, 62.3148, 0.37", "-97.7263, -37.9836, 62.3706, 0.37", "-105.704, -31.9938, 64.3239, 0.37", "-112.613, -24.6143, 66.0162, 0.37", "-120.289, -17.9208, 66.6786, 0.37", "-128.337, -11.7273, 66.014, 0.37", "-136.173, -5.50582, 64.1464, 0.37", "-143.456, 0.887707, 61.0022, 0.37", "-150.972, 6.15398, 56.7187, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.13524, -50.0211, -4.08106, 0.29", "-3.23889, -51.6135, -4.70716, 0.29", "-4.11259, -52.8776, -5.29555, 0.22", "-4.52078, -53.4942, -5.62784, 1.18", "-4.80563, -53.9468, -5.88004, 1.47", "-5.16451, -54.5616, -6.24957, 1.11", "-5.78277, -55.6943, -6.9293, 0.22", "-6.28877, -56.7145, -7.58436, 0.22", "-6.77542, -57.7639, -8.21928, 1.62", "-6.93516, -58.131, -8.43338, 1.84", "-7.50127, -59.5347, -9.19534, 0.88", "-7.88045, -60.4724, -9.71581, 0.29", "-7.90702, -60.5309, -9.74887, 0.29", "-8.29803, -61.2646, -10.1447, 0.29", "-8.57747, -61.7174, -10.4227, 0.29", "-8.86374, -62.1524, -10.7065, 0.22", "-9.57962, -63.2711, -11.4663, 0.22", "-10.0855, -64.1125, -12.0665, 1.92", "-10.3923, -64.6795, -12.4614, 2.21", "-11.3308, -66.6607, -13.7814, 0.22", "-11.599, -67.323, -14.1727, 0.22", "-11.8484, -68.1157, -14.5516, 0.22", "-11.935, -68.4827, -14.6682, 0.96", "-12.0642, -69.1421, -14.8248, 1.18", "-12.1931, -69.8491, -14.9709, 0.74", "-12.2925, -70.3707, -15.0626, 0.37", "-12.493, -71.2293, -15.2407, 0.22", "-12.7393, -72.2088, -15.455, 0.22", "-13.0629, -73.317, -15.7216, 1.47", "-13.3182, -74.0648, -15.9129, 2.06", "-13.7142, -75.117, -16.199, 1.18", "-14.0918, -76.0685, -16.4739, 0.22", "-14.3207, -76.654, -16.6573, 0.22", "-14.6439, -77.6428, -17.0938, 0.22", "-14.8502, -78.3612, -17.438, 0.22", "-14.8644, -78.4223, -17.4742, 0.22", "-15.0529, -79.3692, -18.1119, 1.84", "-15.2216, -80.3061, -18.7954, 2.36", "-15.6783, -82.9563, -20.8767, 0.29", "-15.81, -83.826, -21.5909, 0.29", "-16.1027, -85.6176, -23.0853, 0.59", "-16.1135, -85.6725, -23.1306, 0.59", "-16.2426, -86.1859, -23.5436, 0.59", "-16.5935, -87.2705, -24.3691, 0.22", "-16.8746, -87.938, -24.8069, 2.06", "-17.204, -88.6463, -25.2178, 2.43", "-18.1268, -90.4902, -26.0134, 0.22", "-18.4951, -91.2517, -26.2952, 0.22", "-18.7284, -91.757, -26.4454, 0.22", "-19.1197, -92.6715, -26.6237, 1.11", "-19.3076, -93.1735, -26.7011, 1.55", "-19.5455, -93.9271, -26.783, 1.11", "-19.8128, -94.9841, -26.8377, 0.44", "-19.9433, -95.6679, -26.8668, 0.22", "-20.0424, -96.1995, -26.8856, 0.52", "-20.2205, -97.1082, -26.9325, 0.22", "-20.3379, -97.6351, -26.9629, 0.88", "-20.5137, -98.3401, -27.0101, 1.11", "-20.8249, -99.3589, -27.0851, 0.22", "-21.1162, -100.182, -27.16, 0.22", "-21.4667, -101.055, -27.1869, 0.96", "-21.4961, -101.122, -27.1854, 0.96", "-21.7084, -101.555, -27.1679, 1.25", "-22.3683, -102.803, -27.1078, 0.22", "-22.8753, -103.698, -27.0635, 0.22", "-23.5828, -104.92, -27.0004, 1.55", "-23.8333, -105.337, -26.976, 2.06", "-24.3653, -106.215, -26.9494, 1.92", "-25.117, -107.386, -26.9445, 0.22", "-25.5994, -108.108, -26.9588, 0.22", "-26.1271, -108.913, -27.027, 1.25", "-26.3452, -109.274, -27.0792, 1.4", "-26.7566, -110.04, -27.2046, 0.66", "-27.3551, -111.294, -27.4298, 0.22", "-27.6495, -112.085, -27.5574, 0.22", "-27.8916, -113.065, -27.6795, 1.25", "-27.986, -113.821, -27.7547, 1.47", "-28.0073, -114.71, -27.8535, 0.66", "-28.003, -114.783, -27.8618, 0.66", "-27.8151, -116.283, -28.0601, 0.22", "-27.6793, -117.318, -28.1933, 0.22", "-27.5481, -118.69, -28.3047, 1.11", "-27.4934, -119.826, -28.3398, 1.77", "-27.4911, -120.056, -28.3255, 1.84", "-27.5191, -121.005, -28.2149, 0.96", "-27.6173, -122.164, -28.0252, 0.22", "-27.8031, -123.775, -27.6369, 0.22", "-27.9337, -124.792, -27.3334, 0.74", "-28.1396, -126.43, -26.735, 0.15", "-28.2374, -127.288, -26.3945, 1.18", "-28.31, -128.029, -26.1068, 1.62", "-28.4523, -129.559, -25.5802, 0.37", "-28.5392, -130.445, -25.3388, 0.15", "-28.6965, -131.841, -25.0548, 0.15", "-28.764, -132.374, -25.0125, 1.25", "-28.8927, -133.712, -25.0293, 0.59", "-28.9151, -134.827, -25.5542, 0.22", "-28.898, -135.567, -26.1973, 0.22", "-28.8988, -135.978, -26.6313, 0.44", "-28.9397, -137.088, -27.9785, 1.55", "-28.9864, -137.738, -28.8417, 1.4", "-29.3338, -141.273, -33.778, 0.96", "-29.4395, -142.173, -35.1091, 0.15", "-29.5247, -142.743, -35.9678, 0.15", "-29.642, -143.31, -36.8083, 0.15", "-29.7907, -143.793, -37.4938, 1.03", "-30.0393, -144.361, -38.1461, 1.18", "-30.219, -144.696, -38.2949, 0.66", "-30.5718, -145.492, -38.5385, 0.15", "-30.7248, -146.043, -38.6807, 0.29", "-30.7891, -146.414, -38.7535, 0.29", "-30.7963, -146.486, -38.7667, 0.29", "-30.82, -147.246, -38.9172, 0.15", "-30.8074, -147.784, -39.0412, 0.07", "-30.7534, -148.557, -39.2246, 0.15", "-30.7028, -149.146, -39.3827, 0.88", "-30.6207, -149.99, -39.6078, 0.15", "-30.5585, -150.642, -39.7694, 0.15", "-30.4938, -151.364, -39.9501, 1.4", "-30.4366, -152.119, -40.1306, 1.77", "-30.3684, -152.987, -40.3141, 1.03", "-30.2763, -153.987, -40.5054, 0.22", "-30.1774, -154.974, -40.6809, 0.44", "-30.1146, -155.476, -40.7456, 0.74", "-30.0821, -155.704, -40.763, 0.74", "-29.9165, -156.772, -40.8134, 0.22", "-29.7987, -157.606, -40.838, 0.88", "-29.7437, -158.071, -40.8519, 1.25", "-29.6195, -159.604, -40.8908, 0.22", "-29.5888, -160.242, -40.9009, 0.59", "-29.5829, -160.547, -40.9081, 0.59", "-29.5861, -161.489, -40.939, 0.29", "-29.5864, -161.563, -40.9436, 0.29", "-29.5871, -162.101, -41.0013, 0.29", "-29.5719, -162.791, -41.0956, 0.22", "-29.5287, -163.324, -41.1671, 0.96", "-29.4563, -163.909, -41.2535, 0.88", "-29.2322, -165.107, -41.4242, 0.22", "-28.9895, -166.273, -41.5656, 1.55", "-28.7942, -167.141, -41.6592, 1.92", "-28.7267, -167.445, -41.6881, 1.62", "-28.4286, -168.827, -41.8003, 0.22", "-28.128, -170.332, -41.8822, 0.22", "-27.9546, -171.208, -41.8984, 0.66", "-27.8934, -171.517, -41.8929, 1.03", "-27.8122, -171.97, -41.8761, 1.03", "-27.79, -172.115, -41.8718, 1.03", "-27.6345, -173.418, -41.8328, 0.22", "-27.5871, -174.046, -41.8491, 0.22", "-27.556, -174.667, -41.9005, 1.11", "-27.5317, -175.282, -41.9638, 1.11", "-27.4883, -176.581, -42.1399, 0.22", "-27.4735, -177.034, -42.2061, 0.44", "-27.4409, -178.583, -42.4399, 0.22", "-27.4371, -179.862, -42.6228, 1.47", "-27.4381, -180.201, -42.6684, 1.77", "-27.484, -182.034, -42.8853, 0.22", "-27.5175, -183.316, -43.0035, 0.22", "-27.5148, -184.466, -43.096, 0.22", "-27.4813, -185.228, -43.1547, 1.18", "-27.435, -185.759, -43.2015, 1.55", "-27.3704, -186.413, -43.2691, 1.55", "-27.2087, -187.566, -43.4002, 0.22", "-26.9581, -188.873, -43.58, 0.22", "-26.6378, -190.253, -43.7777, 0.22", "-26.4849, -190.856, -43.864, 0.74", "-26.3252, -191.517, -43.934, 0.74", "-26.0618, -192.662, -44.0113, 0.22", "-25.9382, -193.51, -43.9782, 0.22", "-25.868, -194.339, -43.8692, 1.47", "-25.8624, -194.647, -43.805, 1.47", "-25.9275, -196.263, -43.3969, 0.22", "-26.0342, -197.401, -43.0693, 0.52", "-26.384, -199.296, -42.45, 0.22", "-26.4034, -199.36, -42.4212, 0.22", "-26.7425, -200.134, -41.9839, 0.22", "-26.9777, -200.541, -41.7159, 0.66", "-27.0104, -200.582, -41.6841, 0.66", "-27.157, -200.729, -41.5542, 0.66", "-28.4732, -201.948, -40.4947, 0.22", "-29.1192, -202.553, -39.967, 0.22", "-29.3242, -202.752, -39.7979, 0.96", "-29.5611, -202.982, -39.6122, 0.96", "-30.656, -204.087, -38.8258, 0.22", "-30.948, -204.417, -38.6535, 0.22", "-31.0148, -204.499, -38.6269, 0.22", "-31.5797, -205.238, -38.4236, 0.96", "-31.6266, -205.304, -38.4093, 0.96", "-31.8569, -205.701, -38.3572, 0.96", "-32.4314, -207.12, -38.2097, 0.22", "-32.4558, -207.199, -38.1993, 0.22", "-32.7165, -208.328, -38.0349, 0.22", "-32.7237, -208.4, -38.0226, 0.22", "-32.7426, -209.535, -37.8193, 0.22", "-32.6552, -210.932, -37.5609, 0.96", "-32.5853, -211.475, -37.459, 1.33", "-32.5183, -211.882, -37.3872, 1.33", "-32.1278, -213.72, -37.125, 0.29", "-31.8468, -215.065, -36.9797, 0.22", "-31.6641, -215.936, -36.9221, 0.88", "-31.5854, -216.315, -36.9173, 1.25", "-31.4343, -217.055, -36.9195, 0.74", "-31.1539, -218.463, -36.9538, 0.15", "-31.0416, -219.053, -36.9958, 0.15", "-30.8869, -219.906, -37.0657, 0.15", "-30.7361, -220.961, -37.1534, 0.81", "-30.7282, -221.034, -37.1589, 0.81", "-30.7155, -221.264, -37.1738, 0.81", "-30.7302, -222.668, -37.2877, 0.22", "-30.7986, -223.741, -37.3963, 0.22", "-30.9141, -224.508, -37.4836, 1.03", "-31.0421, -225.042, -37.5755, 1.11", "-31.191, -225.52, -37.6877, 1.11", "-31.7726, -227.154, -38.2511, 0.15", "-32.144, -227.987, -38.6791, 0.15", "-32.4502, -228.593, -39.1058, 0.59", "-33.0216, -229.641, -40.0614, 0.22", "-33.3514, -230.195, -40.6331, 0.66", "-34.251, -231.584, -42.1964, 0.22", "-35.1539, -232.781, -43.6322, 0.44", "-35.9864, -233.802, -44.8959, 1.33", "-37.4175, -235.45, -46.9108, 0.15", "-38.1298, -236.214, -47.7776, 1.4", "-38.4004, -236.482, -48.0561, 1.4", "-39.894, -237.788, -49.1497, 0.22", "-39.9446, -237.832, -49.1732, 0.22", "-40.4984, -238.322, -49.3047, 0.22", "-41.398, -239.162, -49.3296, 0.22", "-42.0995, -239.882, -49.2921, 1.11", "-43.2364, -241.147, -49.1335, 0.22", "-44.0147, -242.09, -48.9404, 0.22", "-44.3352, -242.456, -48.794, 0.66", "-45.1778, -243.354, -48.263, 0.22", "-45.2236, -243.397, -48.2298, 0.22", "-45.771, -243.887, -47.7823, 1.25", "-46.1088, -244.166, -47.4838, 1.47", "-48.0617, -245.605, -45.6084, 0.29", "-48.7699, -246.074, -44.9097, 0.15", "-49.5815, -246.541, -44.1058, 0.44" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-2.13524, -50.0211, -4.08106, 1.77", "-1.78284, -51.3042, -4.3968, 1.77", "-1.41542, -52.7318, -4.68802, 0.66", "-1.06666, -54.1516, -4.92806, 0.59", "-0.814398, -55.1397, -4.96921, 0.81", "-0.474936, -56.3402, -4.90238, 0.44", "-0.246832, -57.0044, -4.82555, 1.11", "-0.22283, -57.0602, -4.81142, 1.11", "0.0519742, -57.5749, -4.6037, 1.25", "1.03697, -59.0685, -3.8567, 0.81", "1.67016, -59.8521, -3.45097, 0.37", "2.47077, -60.7218, -3.03928, 0.37", "2.92197, -61.2055, -2.80974, 0.22", "2.96673, -61.2572, -2.78787, 0.22", "3.26628, -61.6345, -2.63579, 0.22", "3.82986, -62.4386, -2.36403, 1.69", "4.27563, -63.1538, -2.10207, 2.43", "4.90256, -64.2631, -1.68271, 2.43", "5.58313, -65.5256, -1.21595, 0.59", "6.03952, -66.375, -0.908431, 0.37", "6.47853, -67.1747, -0.630996, 0.29", "6.51374, -67.2348, -0.611608, 0.29", "6.93243, -67.8711, -0.42374, 1.62", "7.27204, -68.2853, -0.341281, 1.99", "7.3292, -68.3423, -0.327735, 1.99", "7.87149, -68.8381, -0.201436, 1.84", "7.92082, -68.8866, -0.183277, 1.84", "8.38004, -69.3893, 0.0263235, 1.92", "9.09368, -70.2472, 0.411184, 0.74", "10.1997, -71.719, 1.10089, 0.37", "10.238, -71.7743, 1.12676, 0.37", "10.9162, -72.8231, 1.57959, 0.66", "11.263, -73.3603, 1.7757, 0.66", "11.3058, -73.4279, 1.79642, 0.66", "11.98, -74.4858, 2.03232, 0.29", "12.8513, -75.7904, 2.18229, 1.03", "13.4142, -76.643, 2.21173, 1.69", "13.9824, -77.5441, 2.1765, 2.28", "14.1707, -77.8704, 2.15384, 2.28", "14.6751, -78.8289, 2.0626, 0.96", "15.0659, -79.6687, 1.95843, 0.29", "15.7618, -81.4172, 1.73495, 0.29", "16.2407, -82.7229, 1.59799, 0.29", "16.5275, -83.5605, 1.52153, 0.96", "16.7765, -84.2424, 1.45908, 1.33", "16.9433, -84.6679, 1.42001, 1.33", "17.4328, -85.7688, 1.33031, 0.37", "17.8142, -86.4807, 1.27505, 0.29", "17.892, -86.6147, 1.26262, 0.29", "18.3018, -87.3482, 1.19164, 0.29", "18.333, -87.4133, 1.18245, 0.29", "18.5908, -88.1189, 1.07274, 0.29", "18.9118, -89.4596, 0.860102, 1.33", "19.0278, -90.1463, 0.798957, 1.77", "19.125, -90.7767, 0.771333, 1.77", "19.2546, -91.6643, 0.767173, 0.96", "19.438, -92.6506, 0.797255, 0.29", "19.6445, -93.5498, 0.841908, 0.29", "19.9999, -94.7757, 0.936247, 0.66", "20.1878, -95.3445, 0.9783, 1.03", "20.4742, -96.1955, 0.9903, 0.29", "20.7387, -96.956, 0.947377, 0.22", "20.9536, -97.6064, 0.846077, 0.22", "21.1155, -98.1782, 0.729021, 1.33", "21.2689, -98.9044, 0.553058, 1.62", "21.4462, -100.316, 0.228203, 0.81", "21.4922, -101.29, 0.0244784, 0.37", "21.4579, -102.534, -0.18778, 0.29", "21.3754, -103.553, -0.312547, 0.29", "21.3248, -104.085, -0.374011, 0.81", "21.2552, -104.792, -0.439864, 0.96", "21.1758, -105.65, -0.480352, 0.59", "21.1286, -106.381, -0.518814, 0.29", "21.1585, -107.088, -0.576371, 0.29", "21.285, -108.052, -0.678967, 0.22", "21.422, -108.718, -0.749572, 0.96", "21.584, -109.352, -0.822874, 1.33", "21.7874, -110.063, -0.909277, 1.11", "22.142, -111.251, -1.04903, 0.29", "22.3423, -111.978, -1.11955, 0.29", "22.5022, -112.655, -1.15728, 0.29", "22.7192, -113.693, -1.20582, 1.62", "22.7317, -113.765, -1.21167, 1.62", "22.8334, -114.464, -1.28194, 1.92", "22.9217, -115.154, -1.33004, 1.62", "23.1041, -116.458, -1.39251, 0.29", "23.2572, -117.516, -1.43754, 0.29", "23.4584, -118.937, -1.45411, 0.29", "23.6437, -120.159, -1.4868, 1.18", "23.8259, -121.241, -1.52773, 1.69", "23.9312, -121.818, -1.55442, 1.99", "24.157, -123.018, -1.63561, 0.59", "24.392, -124.258, -1.72962, 0.22", "24.5777, -125.484, -1.82083, 0.59", "24.6281, -126.094, -1.87932, 0.74", "24.6343, -126.48, -1.92215, 0.74", "24.5874, -127.404, -1.99542, 0.22", "24.5247, -127.959, -2.01842, 0.22", "24.3753, -129.085, -2.04162, 0.22", "24.2065, -130.034, -2.00964, 1.18", "24.0159, -130.939, -1.96928, 1.92", "23.9181, -131.389, -1.94386, 1.92", "23.8984, -131.491, -1.93691, 1.92", "23.6704, -133.085, -1.87, 0.29", "23.5547, -134.372, -1.8548, 0.29", "23.5307, -134.888, -1.86566, 0.29", "23.5315, -134.961, -1.86777, 0.29", "23.6235, -136.062, -1.90536, 0.29", "23.7856, -136.955, -1.93885, 1.11", "24.0218, -137.746, -1.94566, 1.4", "24.2621, -138.388, -1.94075, 1.33", "24.5205, -139.048, -1.90688, 1.03", "24.7736, -139.672, -1.85365, 0.74", "25.232, -140.777, -1.73553, 0.37", "25.6934, -141.904, -1.63525, 0.29", "25.9849, -142.637, -1.61651, 0.29", "26.3598, -143.611, -1.63765, 1.33", "26.7058, -144.533, -1.70454, 1.77", "27.056, -145.439, -1.78462, 1.18", "27.4554, -146.428, -1.89095, 0.52", "28.0798, -147.84, -2.06709, 0.29", "28.1104, -147.906, -2.07498, 0.29", "28.7715, -149.251, -2.23566, 0.29", "29.3484, -150.379, -2.28667, 0.29", "29.7359, -151.061, -2.26053, 1.55", "30.238, -151.881, -2.16718, 1.84", "30.2761, -151.942, -2.15891, 1.84", "30.6728, -152.579, -2.08479, 1.4", "31.3805, -153.739, -1.981, 0.22", "32.1053, -154.999, -1.94275, 0.22", "32.1342, -155.055, -1.94205, 0.22", "32.4998, -155.9, -1.95419, 0.22", "32.5209, -155.97, -1.9576, 0.22", "32.5559, -156.37, -2.00232, 0.88", "32.5397, -156.43, -2.01035, 0.88", "32.3964, -156.72, -2.01944, 1.11", "32.2102, -157.168, -2.00252, 1.33", "31.8923, -157.981, -1.92825, 0.66", "31.8709, -158.05, -1.92132, 0.66", "31.6816, -158.938, -1.82559, 0.29", "31.5867, -159.66, -1.74567, 0.22", "31.5946, -160.715, -1.57498, 0.22", "31.6027, -160.787, -1.56129, 0.22", "31.702, -161.319, -1.45919, 0.88", "31.7973, -161.793, -1.37543, 1.03", "31.8128, -161.864, -1.36434, 1.03", "32.1376, -163.358, -1.12134, 0.22", "32.2748, -164.103, -0.959505, 0.81", "32.4322, -165.069, -0.735709, 1.47", "32.5065, -165.657, -0.604331, 1.69", "32.5753, -166.26, -0.485591, 1.62", "32.5867, -166.342, -0.473612, 1.62", "32.7996, -167.711, -0.326798, 0.96", "33.0625, -169.16, -0.240296, 0.29", "33.3442, -170.513, -0.216517, 0.29", "33.598, -171.67, -0.215387, 0.29", "33.9527, -173.213, -0.254239, 0.29", "33.9671, -173.274, -0.258373, 0.29", "34.2914, -174.502, -0.464509, 1.69", "34.4713, -175.077, -0.595251, 2.36" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "68.3811, -14.8688, 59.1373, 0.29", "75.3042, -18.1827, 65.6265, 0.29", "83.0979, -20.6847, 71.4213, 0.29", "91.9435, -23.1648, 75.4434, 0.29", "100.314, -26.8744, 79.6214, 0.29", "108.411, -30.073, 84.6377, 0.29", "116.629, -32.8318, 89.6925, 0.29", "124.633, -36.1725, 94.7732, 0.29", "133.162, -37.7105, 99.7855, 0.29", "141.278, -38.9621, 105.505, 0.29", "148.723, -41.9913, 111.525, 0.29", "155.815, -44.5927, 118.125, 0.29", "163.466, -47.7352, 123.827, 0.29", "169.623, -53.0249, 129.886, 0.29", "174.988, -57.5133, 137.162, 0.29", "180.272, -63.8188, 143.164, 0.29", "186.423, -71.2356, 146.667, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "68.3811, -14.8688, 59.1373, 0.29", "74.8078, -17.4112, 66.406, 0.29", "80.8487, -19.7722, 74.0513, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "36.8273, 20.0527, -21.9266, 0.29", "37.9481, 18.9515, -22.8466, 0.29", "38.7579, 18.2267, -23.5261, 0.29", "38.9929, 18.0293, -23.7236, 0.74", "39.6951, 17.5514, -24.3422, 0.59", "39.7506, 17.5182, -24.3904, 0.59", "40.4396, 17.1255, -25.0522, 0.29", "40.8985, 16.8751, -25.6045, 0.37", "40.9396, 16.847, -25.6677, 0.37", "41.5258, 16.3612, -26.6619, 0.66", "42.0408, 15.8618, -27.5754, 0.81", "42.912, 14.8332, -29.2482, 1.47", "43.4512, 14.147, -30.3215, 2.14", "44.5937, 12.5543, -32.7116, 0.22", "45.0956, 11.8191, -33.7661, 1.18", "45.3077, 11.479, -34.22, 1.62", "46.2069, 9.96379, -36.1673, 0.22", "46.3835, 9.62175, -36.7513, 0.22", "46.3977, 9.58674, -36.8227, 0.22", "46.4649, 9.36775, -37.308, 0.22", "46.5958, 8.71732, -38.7358, 1.99", "46.6543, 8.21877, -39.7753, 2.43", "46.7619, 4.97576, -46.0885, 0.88", "46.7615, 4.05506, -47.7511, 0.88", "46.756, 3.04901, -49.4696, 0.44", "46.741, 2.19664, -50.8396, 0.81", "46.7282, 1.26783, -52.1981, 0.29", "46.7353, 0.679267, -52.9465, 1.69", "46.7981, -0.0349267, -53.6156, 1.84", "47.1437, -2.21911, -55.7142, 0.22", "47.32, -3.02142, -56.5028, 1.25", "47.4734, -3.45882, -56.9817, 1.4", "47.4934, -3.50301, -57.034, 1.4", "48.2165, -4.82168, -58.661, 0.22", "48.7994, -5.78312, -59.8811, 1.11", "48.8817, -5.90133, -60.0316, 1.25", "50.1775, -7.53431, -62.2906, 0.88", "50.2091, -7.5701, -62.343, 0.88", "50.5015, -7.87487, -62.8188, 0.88", "51.6274, -8.86533, -64.4425, 0.29", "52.0002, -9.14116, -65.0201, 0.29", "52.6084, -9.55899, -66.1106, 1.33", "52.8748, -9.71568, -66.6203, 1.99", "54.3443, -10.4695, -69.453, 0.22", "54.8818, -10.6952, -70.5045, 0.66", "56.7887, -11.2799, -74.153, 1.99", "59.2033, -11.8095, -78.7283, 0.74", "60.1254, -11.934, -80.402, 1.18", "60.496, -11.9533, -81.0461, 1.33", "61.4927, -11.8947, -82.6603, 0.22", "62.1109, -11.8162, -83.6134, 1.33", "63.688, -11.511, -85.6067, 0.22", "64.3797, -11.3346, -86.3333, 0.74", "65.3781, -11.1131, -87.3326, 1.18", "66.8994, -10.7965, -88.7947, 0.15", "67.7996, -10.6243, -89.5852, 1.55", "68.3114, -10.5272, -90.015, 1.77", "69.7968, -10.1847, -91.1146, 0.22", "69.9177, -10.1509, -91.1974, 0.22", "70.6433, -9.88135, -91.5832, 0.59", "71.0049, -9.72522, -91.7417, 0.59", "72.264, -9.13674, -92.2941, 0.22", "72.3876, -9.07202, -92.3527, 0.22", "72.8173, -8.83842, -92.5614, 1.25", "73.2629, -8.60143, -92.7696, 1.62", "75.3336, -7.50421, -93.7051, 0.22", "75.799, -7.26194, -93.9018, 0.59", "76.1071, -7.10175, -94.0214, 0.59", "77.2985, -6.47547, -94.4682, 0.22", "77.9994, -6.09877, -94.7222, 0.96", "78.3451, -5.89933, -94.8343, 1.4", "79.801, -4.99587, -95.188, 0.22", "79.8685, -4.95398, -95.2042, 0.22", "80.349, -4.65644, -95.3137, 0.22", "80.409, -4.62, -95.3236, 0.22", "81.1065, -4.24757, -95.4019, 0.88", "81.1693, -4.21521, -95.4057, 0.88", "81.5707, -4.01234, -95.4057, 1.25", "81.6436, -3.97775, -95.4049, 1.25", "83.263, -3.26818, -95.3842, 0.22", "84.1075, -2.92095, -95.372, 0.22", "84.448, -2.78578, -95.3684, 0.74", "84.588, -2.72929, -95.3674, 0.74", "85.38, -2.40721, -95.364, 0.22", "85.8812, -2.21076, -95.3611, 0.81", "86.098, -2.13025, -95.3596, 0.81", "87.1242, -1.8456, -95.3906, 0.22", "87.6527, -1.74194, -95.4202, 0.22", "87.7217, -1.73183, -95.427, 0.22", "88.4705, -1.68355, -95.5374, 1.25", "88.8254, -1.69012, -95.5974, 1.25", "90.0977, -1.7944, -95.8369, 0.22", "90.4508, -1.86597, -95.9238, 0.52", "91.6214, -2.17952, -96.2603, 0.22", "92.1893, -2.36572, -96.4384, 0.96", "92.7739, -2.58737, -96.6527, 1.18", "92.8355, -2.61156, -96.6765, 1.18", "94.0943, -3.06061, -97.3002, 0.22", "94.1621, -3.08482, -97.3357, 0.22", "94.6006, -3.25225, -97.5808, 0.22", "95.3106, -3.47423, -97.9745, 1.4", "95.7459, -3.59177, -98.2154, 1.69", "97.9455, -4.1022, -99.4229, 0.22", "98.9581, -4.2896, -99.9562, 0.22", "99.9113, -4.45219, -100.454, 1.4", "100.645, -4.56863, -100.835, 1.4", "100.778, -4.59092, -100.901, 1.4", "102.012, -4.79936, -101.513, 0.22", "102.668, -4.89907, -101.818, 0.22", "103.26, -4.94267, -102.106, 1.11", "103.323, -4.94424, -102.136, 1.11", "103.713, -4.95494, -102.318, 1.4", "105.374, -4.92984, -103.052, 0.22", "105.439, -4.92552, -103.079, 0.22", "106.351, -4.8427, -103.465, 0.22", "107.087, -4.77634, -103.779, 1.11", "107.49, -4.74599, -103.952, 1.55", "107.757, -4.72758, -104.066, 1.55", "109.295, -4.72762, -104.771, 0.22", "109.357, -4.73542, -104.803, 0.22", "110.237, -4.97073, -105.315, 0.74", "110.452, -5.04398, -105.447, 0.74", "110.513, -5.07179, -105.491, 0.74", "111.42, -5.56632, -106.181, 0.52", "111.83, -5.84091, -106.533, 0.81", "111.875, -5.87439, -106.575, 0.81", "112.208, -6.13419, -106.889, 0.81", "113.366, -7.0244, -108.088, 0.22", "113.596, -7.19244, -108.326, 0.88", "114.214, -7.59664, -108.947, 0.22", "114.859, -7.97939, -109.582, 1.33", "115.105, -8.11676, -109.816, 1.62", "116.987, -8.97542, -111.526, 0.29", "117.439, -9.11416, -111.895, 0.44", "118.189, -9.26009, -112.465, 0.22", "118.556, -9.28127, -112.707, 0.88", "118.816, -9.26333, -112.856, 0.88", "120.191, -9.049, -113.546, 0.22", "120.894, -8.85964, -113.866, 0.96", "121.174, -8.77806, -114.004, 0.96", "122.194, -8.49618, -114.63, 0.22", "122.872, -8.31819, -115.095, 0.22", "122.927, -8.30449, -115.136, 0.22", "124.059, -8.05082, -115.99, 1.4", "124.407, -7.97281, -116.259, 1.4", "126.242, -7.5325, -117.737, 0.22", "126.613, -7.43431, -118.047, 0.59", "127.487, -7.17933, -118.759, 0.22", "127.576, -7.15306, -118.824, 0.74", "127.927, -7.04211, -119.05, 0.74", "129.848, -6.36961, -120.218, 0.22", "129.972, -6.31964, -120.287, 0.22", "130.539, -6.08009, -120.622, 0.22", "130.987, -5.88156, -120.891, 0.52", "132.282, -5.29756, -121.661, 0.22", "132.339, -5.27241, -121.693, 0.22", "133.153, -4.89532, -122.062, 1.18", "133.232, -4.86794, -122.116, 1.18", "133.518, -4.78557, -122.348, 1.55", "133.57, -4.77342, -122.393, 1.55", "135.188, -4.48358, -123.834, 0.15", "135.973, -4.37554, -124.499, 1.4", "139.009, -4.07408, -126.986, 0.15", "139.166, -4.06432, -127.114, 0.15", "139.965, -4.04209, -127.766, 0.15", "140.095, -4.04512, -127.869, 0.15", "141.024, -4.17073, -128.59, 0.52", "141.089, -4.18421, -128.635, 0.52", "142.066, -4.34649, -129.045, 0.22", "142.135, -4.3556, -129.084, 0.22", "142.596, -4.40174, -129.391, 0.96", "142.931, -4.42604, -129.646, 1.4", "143.057, -4.43387, -129.746, 1.4", "144.779, -4.55861, -131.078, 0.22", "145.652, -4.62263, -131.747, 0.81", "146.176, -4.67024, -132.146, 0.96", "147.439, -4.81575, -133.083, 0.22", "148.091, -4.90882, -133.529, 0.59", "148.447, -4.97767, -133.746, 0.59", "149.201, -5.17393, -134.114, 0.22", "149.434, -5.23916, -134.212, 0.44", "150.725, -5.61426, -134.714, 0.15", "151.332, -5.75643, -134.974, 0.15", "151.466, -5.78155, -135.037, 0.81", "151.794, -5.83281, -135.193, 1.03", "151.943, -5.854, -135.264, 1.03", "152.281, -5.89713, -135.429, 1.03", "155.107, -6.20506, -136.96, 0.22", "155.646, -6.24913, -137.24, 0.59", "155.909, -6.26304, -137.362, 0.59", "156.047, -6.26604, -137.421, 0.59", "156.121, -6.2657, -137.45, 0.59", "157.381, -6.21639, -137.881, 0.22", "159.972, -6.01048, -138.561, 0.15", "161.051, -5.91165, -138.849, 0.15", "161.465, -5.87181, -138.958, 0.96", "161.533, -5.86496, -138.975, 0.96", "161.835, -5.83144, -139.042, 0.96", "161.981, -5.81053, -139.058, 0.96" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "36.8273, 20.0527, -21.9266, 0.29", "36.3276, 23.6951, -25.1627, 0.29", "36.2401, 24.5093, -25.8233, 0.29", "36.1574, 25.6949, -26.6911, 1.55", "36.1274, 26.1173, -27.0032, 1.99", "35.9767, 27.6631, -28.1259, 0.22", "35.8886, 28.5118, -28.7116, 1.11", "35.7259, 29.8741, -29.4921, 0.22", "35.4776, 31.6951, -30.5554, 2.43", "35.129, 34.1196, -31.9504, 0.22", "34.9998, 34.903, -32.4192, 0.22", "34.7957, 35.9988, -33.0931, 0.22", "34.7817, 36.0594, -33.1301, 0.22", "34.3509, 37.2726, -33.8316, 1.03", "34.3235, 37.3313, -33.8635, 1.03", "34.0521, 37.856, -34.1068, 0.74", "34.0217, 37.9132, -34.1385, 0.74", "33.4934, 38.7935, -34.6882, 0.22", "32.9271, 39.7021, -35.223, 0.88", "32.6898, 40.0756, -35.4146, 1.11", "32.654, 40.1325, -35.4407, 1.11", "31.9339, 41.3586, -35.9236, 0.22", "31.9004, 41.4189, -35.9454, 0.22", "31.4051, 42.3893, -36.2447, 0.22", "31.0383, 43.166, -36.4765, 0.22", "30.8994, 43.5006, -36.5994, 0.22", "30.6541, 44.1042, -36.8334, 0.22", "30.6284, 44.1674, -36.8582, 0.22", "30.0663, 45.5622, -37.4469, 2.36", "29.7758, 46.3055, -37.7988, 2.5", "29.0683, 48.1497, -38.7018, 0.22", "28.6626, 49.1883, -39.206, 0.22", "28.5506, 49.4846, -39.3486, 0.44", "28.5283, 49.5479, -39.3764, 0.44", "28.3378, 50.1298, -39.597, 0.22", "28.076, 50.978, -39.8381, 0.88", "27.9772, 51.3593, -39.9404, 1.03", "27.7054, 52.6572, -40.3047, 0.22", "27.505, 53.6966, -40.5805, 0.22", "27.4169, 54.1573, -40.6966, 0.37", "27.2497, 54.9709, -40.8811, 0.15", "27.0038, 55.9873, -41.0893, 0.88", "26.8607, 56.4983, -41.1771, 1.11", "26.4071, 57.7385, -41.3909, 0.22", "26.3786, 57.8043, -41.4034, 0.22", "26.0086, 58.6022, -41.5489, 0.22", "25.3842, 59.831, -41.7608, 1.4", "25.0649, 60.4047, -41.844, 1.69", "24.1856, 61.9059, -42.0854, 0.29", "23.7491, 62.6217, -42.2059, 0.59", "23.1839, 63.579, -42.4495, 0.22", "23.1492, 63.6394, -42.469, 0.22", "22.5202, 64.6787, -42.8972, 0.22", "21.925, 65.6962, -43.4252, 1.18", "21.5186, 66.3999, -43.86, 1.55", "20.5026, 68.1202, -45.106, 0.22", "20.4721, 68.1706, -45.1469, 0.22", "19.9756, 68.9718, -45.8889, 0.22", "19.401, 69.8617, -46.8325, 0.22", "19.3765, 69.9023, -46.8856, 0.22", "19.178, 70.2487, -47.3719, 0.59", "19.0454, 70.4797, -47.6775, 0.66", "18.6083, 71.2587, -48.7714, 0.22", "18.373, 71.6936, -49.3971, 1.11", "17.5704, 73.1561, -51.421, 0.29", "17.4404, 73.4213, -51.7856, 1.25", "17.3034, 73.7781, -52.2886, 1.4", "16.8044, 75.4516, -54.6022, 0.22", "16.7943, 75.5012, -54.6659, 0.22", "16.6802, 76.1549, -55.4658, 0.96", "16.5795, 76.7782, -56.1388, 1.18", "16.4191, 78.2785, -57.6938, 0.22", "16.3785, 79.149, -58.525, 0.96", "16.3779, 80.1796, -59.3811, 0.15", "16.3657, 80.6546, -59.7545, 0.15", "16.3325, 81.2121, -60.1514, 0.59", "16.3001, 81.5634, -60.3423, 0.59", "16.1727, 82.8032, -60.8105, 0.22", "16.1667, 82.8729, -60.832, 0.22", "16.0892, 83.7611, -61.0811, 0.22", "16.0453, 84.443, -61.2667, 0.22", "15.969, 85.8827, -61.6241, 1.62", "15.9445, 86.5029, -61.7594, 1.84", "15.9551, 87.8156, -62.0369, 0.22", "15.96, 87.8869, -62.0531, 0.22", "16.0679, 88.616, -62.2313, 0.22", "16.2033, 89.3489, -62.4109, 0.66", "16.2174, 89.4191, -62.4263, 0.66", "16.4153, 90.3907, -62.6585, 0.22", "16.4877, 90.8617, -62.7566, 0.22", "16.4916, 90.9719, -62.7735, 0.22", "16.4487, 91.5498, -62.8347, 0.66", "16.4193, 91.8736, -62.8634, 0.66", "16.4104, 91.9568, -62.8692, 0.66", "16.2513, 93.2151, -62.9179, 0.22", "16.1329, 94.1501, -62.9625, 0.88", "16.082, 94.5412, -62.9836, 0.88", "15.9344, 95.8083, -63.0613, 0.22", "15.9225, 95.9103, -63.0764, 0.22", "15.8621, 96.3611, -63.1787, 0.22", "15.7653, 96.8794, -63.3508, 0.81", "15.6511, 97.2607, -63.5033, 0.96", "15.6249, 97.3229, -63.5299, 0.96", "14.8881, 98.6985, -64.1722, 0.15", "14.852, 98.7655, -64.2042, 0.15", "14.5063, 99.4438, -64.573, 0.15", "14.2695, 99.9349, -64.8553, 0.22", "14.1755, 100.163, -64.978, 0.22", "13.8106, 101.129, -65.4546, 1.33", "13.7127, 101.393, -65.5617, 1.33", "13.2378, 102.736, -66.1531, 0.22", "13.213, 102.808, -66.1856, 0.22", "12.9289, 103.57, -66.6019, 0.22", "12.8624, 103.736, -66.6997, 0.22", "12.453, 104.683, -67.2762, 0.22", "11.8079, 106.147, -68.1678, 1.11", "11.5784, 106.662, -68.4791, 1.4", "10.8657, 108.38, -69.5798, 0.22", "10.7331, 108.741, -69.8199, 0.22", "10.6983, 108.876, -69.9107, 0.22", "10.619, 109.496, -70.3329, 0.81", "10.6172, 109.623, -70.4214, 0.81", "10.7033, 110.356, -70.968, 0.22", "10.8213, 110.965, -71.4013, 0.59", "11.0331, 111.927, -72.1214, 0.22", "11.047, 111.982, -72.1659, 0.22", "11.3602, 113.129, -73.16, 0.96", "11.6978, 114.374, -74.2325, 0.22", "11.8372, 114.86, -74.6876, 0.52", "11.8862, 115.023, -74.8513, 0.52", "12.1905, 115.977, -75.8048, 0.22", "12.4656, 116.729, -76.5567, 0.96", "12.5877, 117.029, -76.8537, 1.18", "13.1985, 118.536, -78.3512, 0.59", "13.2216, 118.593, -78.4055, 0.59", "13.3685, 118.987, -78.7539, 0.59", "13.872, 120.419, -79.8039, 0.15", "13.92, 120.566, -79.8875, 0.15", "14.0717, 121.106, -80.1083, 0.15", "14.1753, 121.541, -80.2159, 0.66", "14.2747, 122.012, -80.3171, 0.44", "14.4225, 122.954, -80.5101, 0.22", "14.5406, 123.982, -80.6869, 1.03", "14.6223, 124.585, -80.7966, 1.18", "14.7623, 125.55, -81.0175, 0.22", "14.875, 126.215, -81.1839, 0.59", "15.0953, 127.407, -81.4915, 0.22", "15.2627, 128.281, -81.7347, 0.88", "15.3854, 128.902, -81.9157, 1.25", "15.677, 130.441, -82.3541, 0.15", "15.861, 131.459, -82.6185, 0.15", "15.9796, 132.05, -82.7667, 0.15", "15.9958, 132.12, -82.782, 0.15", "16.3064, 133.333, -83.0369, 1.25", "16.4318, 133.758, -83.1131, 1.55", "16.6506, 134.373, -83.1919, 0.96", "17.0849, 135.517, -83.3336, 0.22", "17.3842, 136.241, -83.4188, 0.66", "17.5574, 136.635, -83.4805, 0.66", "18.0305, 137.587, -83.6599, 0.22", "18.351, 138.172, -83.7967, 0.74", "18.5649, 138.56, -83.9047, 0.96", "18.5918, 138.613, -83.9235, 0.96", "19.0585, 139.642, -84.3783, 0.22", "19.083, 139.713, -84.4129, 0.22", "19.1704, 140.217, -84.7379, 0.22", "19.1949, 140.592, -85.0041, 0.22", "19.206, 141.201, -85.4263, 0.88", "19.2047, 141.329, -85.5129, 0.88", "19.177, 141.814, -85.8274, 0.88", "19.0551, 143.22, -86.7712, 0.22", "18.9053, 144.383, -87.5975, 1.03", "18.8609, 144.744, -87.8684, 1.4" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.61579, 56.4466, 18.7592, 0.29", "5.34783, 57.2536, 19.643, 0.29", "5.71488, 57.4299, 19.8316, 0.52", "6.85293, 57.9812, 20.4146, 0.29", "7.55459, 58.3365, 20.7605, 0.96", "7.64262, 58.3814, 20.802, 0.96", "7.98787, 58.5504, 20.954, 0.96", "8.97655, 58.9926, 21.2921, 0.37", "9.03901, 59.0194, 21.3107, 0.37", "9.58694, 59.2654, 21.5131, 0.29", "9.83243, 59.369, 21.6319, 0.52", "10.3339, 59.561, 21.8955, 0.74", "10.3941, 59.578, 21.9274, 0.74", "10.9785, 59.7014, 22.2332, 0.74", "12.3809, 60.0068, 22.9075, 0.81", "12.4522, 60.0271, 22.9381, 0.81", "13.3273, 60.3541, 23.2516, 0.22", "13.9314, 60.6259, 23.4306, 0.22", "13.9936, 60.6571, 23.4432, 0.22", "14.8695, 61.1616, 23.6289, 0.44", "15.7012, 61.7273, 23.7783, 0.29", "16.0598, 62.049, 23.918, 0.59", "16.1017, 62.1013, 23.9436, 0.59", "16.4482, 62.6157, 24.2122, 0.81", "17.1877, 63.8293, 24.8845, 0.29", "17.5517, 64.4956, 25.2758, 0.52", "18.1377, 65.7571, 25.9785, 0.88", "18.4855, 66.6343, 26.4581, 0.22", "18.5035, 66.6976, 26.4888, 0.22", "18.6313, 67.2655, 26.7857, 0.22", "18.7228, 67.7515, 27.0327, 0.81", "18.8672, 68.4699, 27.4791, 0.81", "19.0559, 69.337, 28.0951, 0.22", "19.3092, 70.4326, 28.9654, 0.22", "19.7182, 72.4183, 30.5483, 0.37", "19.8335, 73.0593, 31.0572, 0.74", "20.0585, 74.4501, 32.1436, 0.22", "20.2358, 75.5195, 32.9642, 0.29", "20.2455, 75.5785, 33.0047, 0.29", "20.4274, 76.6354, 33.6826, 0.52", "20.4991, 77.2428, 34.0, 0.81", "20.6542, 78.2387, 34.4849, 0.29", "20.6662, 78.306, 34.5103, 0.29", "20.8616, 79.2271, 34.8998, 0.66", "20.8776, 79.2909, 34.9306, 0.66", "21.1937, 80.4419, 35.5337, 0.44", "21.3385, 81.1329, 35.9158, 0.29", "21.4253, 81.8683, 36.3134, 0.52", "21.446, 82.9924, 36.8906, 0.66", "21.4215, 83.5627, 37.1679, 0.29", "21.4151, 84.3631, 37.4957, 0.29", "21.3581, 85.5145, 37.9162, 0.96", "21.3154, 86.0766, 38.1212, 1.11", "21.2683, 86.8279, 38.3804, 0.44", "21.2332, 88.0668, 38.7134, 0.29", "21.2569, 89.6886, 39.1523, 0.29", "25.5779, 96.9388, 44.9533, 0.29", "28.7473, 103.769, 51.8562, 0.29", "30.4016, 110.207, 59.5807, 0.29", "32.469, 118.186, 65.7428, 0.29", "36.2485, 124.378, 72.8798, 0.29", "41.4478, 128.117, 80.6447, 0.29", "44.6233, 133.409, 88.6765, 0.29", "46.3154, 137.901, 97.5553, 0.29", "49.2128, 141.688, 106.421, 0.29", "52.2693, 146.847, 114.577, 0.29", "55.7722, 150.539, 123.258, 0.29", "60.1429, 154.722, 131.322, 0.29", "64.4268, 159.235, 139.27, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.61579, 56.4466, 18.7592, 0.59", "4.81361, 58.5128, 21.5582, 0.59", "4.87027, 58.5985, 21.6705, 0.59", "5.34466, 59.2878, 22.5619, 0.52", "5.83743, 59.9811, 23.4522, 0.37", "5.86613, 60.0221, 23.5027, 0.37", "6.44205, 60.8596, 24.5063, 0.37", "6.50793, 60.9393, 24.572, 0.37", "6.83986, 61.4058, 24.9468, 0.66", "6.86841, 61.4671, 24.9934, 0.66", "6.84925, 61.8138, 25.2836, 0.66", "6.8181, 61.8724, 25.3318, 0.66", "6.36296, 62.1944, 25.6937, 0.37", "6.31186, 62.2217, 25.7339, 0.37", "5.77672, 62.4396, 26.1189, 0.29", "4.77759, 62.7877, 26.9923, 0.29", "4.25123, 62.9411, 27.4964, 0.29", "3.04759, 63.2657, 28.6762, 0.22", "2.53498, 63.3864, 29.1937, 0.66", "2.0326, 63.499, 29.7124, 0.66", "0.458444, 63.8195, 31.4223, 0.74", "-0.759373, 64.0643, 32.7578, 0.29", "-1.92683, 69.7858, 41.0611, 0.29", "-2.49155, 76.2359, 48.9316, 0.29", "-1.4558, 81.114, 57.7261, 0.29", "0.04931, 84.7301, 66.9929, 0.29", "1.07009, 87.8379, 76.4902, 0.29", "0.987005, 91.5096, 85.8585, 0.29", "0.106731, 95.0441, 95.2337, 0.29", "-0.733974, 98.3614, 104.684, 0.29", "-2.17834, 102.987, 113.545, 0.29", "-3.97517, 107.377, 122.449, 0.29", "-6.70066, 112.278, 130.863, 0.29", "-10.3404, 118.312, 138.192, 0.29", "-15.2288, 123.351, 145.478, 0.29", "-20.2856, 128.496, 152.579, 0.29", "-24.9456, 134.735, 159.134, 0.29", "-29.7386, 141.382, 165.213, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "24.8844, 71.7354, -15.101, 0.22", "26.1419, 73.0393, -16.9264, 0.22", "26.8407, 73.7751, -17.8865, 0.52", "27.271, 74.2023, -18.4182, 0.59", "27.9357, 74.8528, -19.1695, 0.29", "28.5184, 75.419, -19.781, 0.22", "29.2339, 76.1064, -20.4787, 0.88", "29.5757, 76.4139, -20.7457, 0.88", "30.5303, 77.2935, -21.3227, 0.22", "30.9546, 77.7176, -21.5548, 0.52", "31.223, 78.0181, -21.6967, 0.52", "31.9726, 78.8934, -22.0821, 0.22", "32.0164, 78.9468, -22.102, 0.22", "32.9277, 80.1535, -22.5287, 2.21", "33.9461, 81.729, -23.0764, 0.22", "34.2757, 82.3104, -23.2834, 0.22", "34.3038, 82.3728, -23.3076, 0.22", "34.4798, 82.9132, -23.5586, 0.66", "34.4941, 82.9754, -23.5931, 0.66", "34.6821, 84.3436, -24.5148, 0.07", "34.7428, 84.9576, -24.9477, 0.37", "34.8757, 86.1373, -25.8325, 0.15", "35.0265, 87.4158, -26.8153, 0.96", "35.224, 88.7937, -27.8517, 0.22", "35.4856, 90.1621, -28.8498, 0.22", "35.7183, 91.1484, -29.553, 1.77", "35.9884, 92.0447, -30.186, 0.66", "36.2732, 92.8236, -30.7101, 0.22", "36.783, 94.0518, -31.5074, 0.22", "37.4996, 95.5888, -32.4995, 0.22", "37.8681, 96.2936, -32.9639, 1.33", "38.4478, 97.3339, -33.679, 0.22", "38.4827, 97.3928, -33.7241, 0.22", "38.922, 98.0488, -34.314, 0.88", "39.106, 98.313, -34.5814, 0.96", "39.62, 99.0245, -35.3398, 0.15", "39.9386, 99.4498, -35.8071, 0.74", "41.1143, 101.014, -37.5682, 0.15", "41.6925, 101.767, -38.4289, 0.81" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "24.8844, 71.7354, -15.101, 0.22", "24.18, 73.7723, -14.2201, 0.22", "23.8805, 74.5934, -13.8713, 0.29", "23.8564, 74.6572, -13.8463, 0.29", "23.6301, 75.2524, -13.6021, 0.29", "23.3033, 76.0782, -13.2641, 0.29", "23.2781, 76.1415, -13.239, 0.29", "23.0539, 76.6536, -13.0391, 0.29", "22.7274, 77.4279, -12.7325, 0.66", "22.39, 78.2853, -12.4158, 0.22", "22.2514, 78.6647, -12.2801, 0.52", "22.1103, 79.0826, -12.1329, 0.52", "21.8384, 79.9993, -11.8061, 0.15", "21.6426, 80.7637, -11.5295, 1.25", "21.5808, 81.1323, -11.4019, 1.69", "21.4944, 82.1821, -11.0836, 0.29", "21.4782, 83.7461, -10.6412, 0.44", "21.4956, 84.1113, -10.5501, 0.59", "21.5105, 84.2202, -10.5318, 0.59", "21.8199, 85.8141, -10.3583, 0.22", "22.0174, 86.6693, -10.3354, 1.03", "22.1259, 87.0718, -10.3614, 1.18", "22.3512, 87.8704, -10.465, 0.44", "22.6831, 89.0142, -10.657, 0.22", "22.8645, 89.581, -10.7669, 0.44", "23.1501, 90.3938, -10.9734, 0.15", "23.3415, 90.8914, -11.1096, 0.88", "23.6595, 91.6623, -11.3291, 1.11", "24.2853, 93.0946, -11.7563, 0.15", "24.6481, 93.9199, -11.9979, 0.15", "24.965, 94.5934, -12.207, 0.66", "25.1269, 94.9217, -12.3095, 0.59", "25.1598, 94.9933, -12.3356, 0.59", "25.6599, 96.2546, -12.8345, 0.22", "25.6788, 96.3201, -12.8601, 0.22", "25.8007, 96.8466, -13.0655, 0.59", "25.9086, 97.3852, -13.2492, 0.59", "26.1178, 98.5514, -13.6221, 0.22", "26.1837, 98.9848, -13.7598, 0.59", "26.3705, 100.564, -14.2318, 0.15", "26.3766, 100.634, -14.2527, 0.15", "26.4482, 101.89, -14.616, 1.77", "26.4568, 102.253, -14.7129, 2.06", "26.4546, 104.527, -15.2479, 0.22", "26.4319, 105.427, -15.458, 0.44", "26.3501, 106.753, -15.7779, 0.15", "26.2865, 107.492, -15.976, 0.15", "26.1922, 108.279, -16.2047, 0.59", "26.1578, 108.504, -16.2834, 0.59", "26.1414, 108.579, -16.3136, 0.59", "25.8415, 109.592, -16.8523, 0.22", "25.4694, 110.578, -17.4785, 1.03", "25.2338, 111.093, -17.8818, 1.18", "24.6413, 112.353, -18.9655, 0.22", "24.4593, 112.731, -19.3045, 0.22", "23.8943, 113.877, -20.3579, 1.18", "23.7947, 114.057, -20.5356, 1.47", "23.1588, 115.072, -21.6176, 0.15", "22.8498, 115.493, -22.1412, 0.15", "22.7827, 115.573, -22.251, 0.15", "22.6322, 115.765, -22.5224, 0.15", "22.3494, 116.142, -23.0336, 0.66", "22.2207, 116.306, -23.2567, 0.88", "21.4105, 117.437, -24.5909, 0.15", "21.3896, 117.476, -24.6325, 0.15", "21.3159, 117.7, -24.837, 0.59", "21.266, 118.006, -25.0624, 0.59", "21.1899, 119.378, -25.9016, 0.29", "21.2002, 120.273, -26.3749, 0.29", "21.2837, 121.516, -26.9267, 1.33", "21.3626, 122.274, -27.2679, 0.88", "21.5291, 123.446, -27.8033, 0.22", "21.543, 123.511, -27.8323, 0.22", "21.9402, 124.855, -28.3826, 0.81", "22.0717, 125.218, -28.5348, 0.81", "22.6397, 126.463, -29.0274, 0.22", "22.7195, 126.584, -29.0815, 0.22", "23.1838, 127.14, -29.3576, 0.22", "23.472, 127.416, -29.5056, 0.22", "24.2228, 128.026, -29.8478, 1.25", "24.5778, 128.296, -30.0029, 1.62", "26.4646, 129.621, -30.8365, 0.22", "26.7485, 129.825, -30.9788, 0.44", "28.232, 130.921, -31.8883, 0.22", "28.2879, 130.964, -31.9282, 0.22", "28.5764, 131.221, -32.207, 0.44", "29.5634, 132.229, -33.404, 0.22", "30.1734, 132.967, -34.3022, 0.96", "30.9294, 134.0, -35.5396, 0.15", "31.2462, 134.519, -36.1344, 1.33", "32.2206, 136.273, -37.9956, 0.22", "32.2442, 136.322, -38.0416, 0.22", "32.5722, 137.165, -38.6904, 0.22", "32.8435, 137.985, -39.1353, 0.96", "32.9811, 138.47, -39.3016, 0.96", "33.2762, 139.743, -39.5026, 0.22", "33.4948, 140.904, -39.5248, 1.4", "33.557, 141.361, -39.5087, 1.69", "33.7094, 143.226, -39.3514, 0.22", "33.7301, 143.62, -39.3047, 0.37", "33.8025, 145.695, -39.0022, 0.15", "33.8029, 146.446, -38.8577, 0.44", "33.7815, 147.393, -38.6522, 0.22", "33.7543, 148.289, -38.4405, 0.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-15.4422, 58.2065, 36.7116, 0.29", "-17.0239, 64.6728, 44.4298, 0.29", "-18.7523, 72.0538, 51.329, 0.29", "-19.0298, 79.6057, 58.2713, 0.29", "-19.3725, 87.3949, 64.9683, 0.29", "-18.7603, 94.1597, 72.5919, 0.29", "-16.7639, 102.007, 78.9291, 0.29", "-14.2938, 109.772, 85.1911, 0.29", "-12.8554, 117.537, 91.7673, 0.29", "-10.3788, 125.661, 97.5981, 0.29", "-8.45259, 133.899, 103.491, 0.29", "-7.76135, 142.326, 109.417, 0.29", "-7.59816, 150.775, 115.353, 0.29", "-7.70763, 159.595, 120.778, 0.29", "-7.22464, 168.713, 125.713, 0.29", "-5.3351, 177.767, 130.411, 0.29", "-3.3113, 186.113, 136.131, 0.29", "-2.29468, 193.859, 142.805, 0.29", "0.384032, 200.239, 150.282, 0.29" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-15.4422, 58.2065, 36.7116, 0.29", "-18.1894, 64.5117, 44.2211, 0.29", "-21.6594, 71.7512, 50.5788, 0.29", "-25.9997, 80.3879, 54.2537, 0.29", "-31.4346, 88.2856, 57.9802, 0.29", "-35.0725, 96.9187, 62.3579, 0.29", "-37.9973, 105.161, 67.8202, 0.29", "-39.2293, 114.655, 71.9086, 0.29", "-40.2687, 123.297, 77.4931, 0.29" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "71.5488, -175.616, 21.9542, 0.29", "74.6234, -184.734, 25.8454, 0.29", "78.0135, -192.553, 31.5945, 0.29", "81.6556, -200.569, 36.9293, 0.29", "83.9242, -208.805, 42.7018, 0.29", "85.7385, -218.281, 46.61, 0.29", "89.023, -227.525, 50.0307, 0.29", "92.3922, -236.648, 53.6566, 0.29", "96.5081, -245.437, 57.2617, 0.29", "101.188, -253.916, 60.8522, 0.29", "104.782, -262.468, 65.4078, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "71.5488, -175.616, 21.9542, 0.66", "75.1769, -184.464, 25.9339, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "34.4713, -175.077, -0.595251, 0.29", "36.6598, -175.195, -2.34983, 0.29", "37.5628, -175.245, -3.04354, 0.29", "38.0982, -175.27, -3.43507, 0.88", "38.4614, -175.284, -3.69275, 0.88", "38.5273, -175.285, -3.73808, 0.88", "40.119, -175.221, -4.85898, 0.37", "40.9509, -175.138, -5.39513, 0.37", "41.2538, -175.073, -5.61355, 0.81", "41.3288, -175.054, -5.67561, 0.81", "41.5681, -174.968, -5.93745, 0.81", "42.4835, -174.577, -7.07035, 0.15", "42.5229, -174.557, -7.12494, 0.15", "42.8699, -174.344, -7.86283, 0.66", "43.5082, -173.918, -9.37916, 0.22", "44.4586, -173.397, -11.8675, 1.4", "44.5576, -173.353, -12.1369, 1.69", "44.5862, -173.345, -12.2112, 1.69", "47.0144, -172.902, -18.1625, 0.22", "47.2604, -172.891, -18.734, 1.18", "48.7671, -173.021, -22.0467, 0.29", "49.1414, -173.123, -22.7954, 0.81", "49.9374, -173.435, -24.2839, 0.22", "50.3068, -173.658, -24.9026, 0.81", "51.1698, -174.504, -25.9885, 0.15", "51.5842, -175.042, -26.5373, 0.15", "52.0313, -175.817, -27.1559, 1.4", "52.1451, -176.069, -27.3464, 1.55", "52.5989, -177.392, -28.3185, 0.22", "52.8947, -178.367, -28.992, 0.59", "53.3043, -179.72, -29.8747, 0.22", "53.5665, -180.525, -30.3885, 1.11", "53.646, -180.748, -30.5281, 1.55", "53.6681, -180.807, -30.5643, 1.55", "54.4223, -182.629, -31.5951, 0.22", "54.8861, -183.684, -32.094, 0.22", "55.4324, -184.847, -32.5389, 0.22", "55.6313, -185.262, -32.6767, 1.25", "55.853, -185.727, -32.8241, 1.47", "56.6242, -187.345, -33.2894, 0.22", "57.5357, -189.281, -33.7149, 0.22", "58.0099, -190.29, -33.8947, 1.55", "58.1796, -190.634, -33.9425, 1.99" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "34.4713, -175.077, -0.595251, 1.33", "34.3642, -176.643, -1.07392, 1.33", "34.3398, -177.545, -1.38247, 0.74", "34.3328, -178.578, -1.73862, 0.29", "34.3506, -179.506, -2.08662, 0.22", "34.4037, -180.512, -2.48021, 0.66", "34.466, -181.249, -2.77187, 1.11", "34.5822, -182.386, -3.1895, 1.47", "34.6412, -182.944, -3.41279, 1.25", "34.7517, -184.167, -3.90231, 1.03", "34.8122, -185.432, -4.39576, 0.22", "34.8017, -185.852, -4.55561, 0.22", "34.6651, -187.068, -4.99885, 0.22", "34.5162, -188.044, -5.31056, 1.33", "34.411, -188.62, -5.4894, 1.33", "34.2462, -189.393, -5.70912, 0.88", "33.9064, -190.921, -6.1604, 0.52", "33.7147, -191.857, -6.44087, 0.22", "33.554, -192.801, -6.72003, 0.22", "33.4043, -193.897, -7.01584, 1.11", "33.3691, -194.267, -7.12455, 1.11", "33.3166, -195.152, -7.38929, 0.74", "33.2982, -195.901, -7.60253, 0.22", "33.2879, -196.483, -7.79443, 0.22", "33.2727, -196.948, -7.95048, 0.22", "33.2772, -197.988, -8.31787, 0.96", "33.302, -198.707, -8.58041, 1.33", "33.3077, -198.786, -8.60854, 1.33", "33.4578, -199.864, -8.98952, 0.22", "33.615, -200.659, -9.24687, 0.15", "33.9689, -202.141, -9.69532, 0.15", "34.1042, -202.619, -9.82294, 1.03", "34.2554, -203.093, -9.94549, 1.47", "34.7503, -204.612, -10.3014, 0.29", "35.0663, -205.496, -10.484, 0.22", "35.3465, -206.256, -10.6281, 1.18", "35.5654, -206.834, -10.7172, 1.33", "35.9781, -207.965, -10.893, 0.22", "36.2075, -208.689, -10.9973, 0.22", "36.294, -209.027, -11.0377, 0.66", "36.3895, -209.482, -11.0829, 0.66", "36.5206, -210.2, -11.1306, 0.15", "36.5353, -210.272, -11.1354, 0.15", "36.7898, -211.336, -11.1771, 0.15", "36.8929, -211.718, -11.1883, 0.44", "37.0176, -212.188, -11.1978, 0.44", "37.0375, -212.258, -11.1986, 0.44", "37.3647, -213.335, -11.2051, 0.15", "37.6845, -214.187, -11.2115, 1.03", "37.966, -214.832, -11.1731, 1.25", "38.1136, -215.175, -11.1373, 1.25", "38.1399, -215.242, -11.1281, 1.25", "38.556, -216.533, -10.8349, 0.22", "38.7004, -217.104, -10.6596, 0.22", "39.0, -218.548, -10.1631, 0.22", "39.0615, -218.902, -10.0308, 0.44", "39.1562, -219.695, -9.71564, 0.44", "39.212, -221.088, -9.21267, 1.4", "39.1671, -221.736, -8.97258, 1.62", "39.1143, -222.098, -8.85007, 1.62", "39.1022, -222.167, -8.83005, 1.62", "38.9751, -222.955, -8.62322, 1.25", "38.7469, -224.469, -8.27681, 0.22", "38.604, -225.501, -8.10411, 0.52", "38.5448, -225.978, -8.03063, 0.29", "38.4797, -226.732, -7.93029, 0.22", "38.4676, -227.427, -7.88076, 0.66", "38.4748, -227.51, -7.88105, 0.66", "38.5399, -227.813, -7.92, 0.59", "38.6919, -228.272, -8.06491, 0.37", "38.9269, -228.832, -8.2766, 0.22", "39.3162, -229.691, -8.58706, 1.11", "39.4505, -229.968, -8.68273, 1.4", "39.9946, -231.027, -9.01718, 1.55", "40.7632, -232.412, -9.41907, 0.22", "41.366, -233.325, -9.64805, 0.22", "41.8797, -233.993, -9.77828, 0.22", "41.9277, -234.046, -9.78091, 0.22", "42.382, -234.491, -9.74702, 0.88", "42.6212, -234.694, -9.69731, 0.88", "43.56, -235.457, -9.43902, 0.22", "44.3248, -236.068, -9.22765, 0.22", "45.1991, -236.777, -9.00139, 1.18", "45.5049, -237.031, -8.91631, 1.18", "45.5801, -237.095, -8.89418, 1.18", "46.9165, -238.24, -8.46484, 0.22", "47.784, -239.003, -8.17327, 0.22", "48.2207, -239.373, -8.03441, 1.47", "48.2744, -239.417, -8.01928, 1.47", "48.654, -239.724, -7.90801, 1.47", "50.0177, -240.8, -7.51001, 0.22", "50.5108, -241.175, -7.37096, 0.66", "50.7717, -241.385, -7.30656, 0.66", "50.8242, -241.432, -7.29268, 0.66", "51.6121, -242.221, -7.0848, 0.22", "51.9703, -242.623, -6.99146, 0.22", "52.2975, -243.034, -6.91575, 0.96", "52.67, -243.503, -6.83773, 0.96", "53.7792, -244.928, -6.64745, 0.22", "54.4546, -245.805, -6.55079, 1.03", "54.8433, -246.329, -6.50703, 1.47", "55.9524, -247.863, -6.39823, 0.29", "56.7164, -248.943, -6.33743, 0.52", "57.3887, -249.935, -6.2899, 0.15", "57.442, -250.023, -6.28649, 0.15", "57.8488, -250.773, -6.22987, 0.74", "57.9988, -251.124, -6.23076, 0.74", "58.0236, -251.193, -6.23529, 0.74", "58.5385, -252.656, -6.40443, 0.15", "58.9096, -253.603, -6.54426, 1.4", "59.1602, -254.164, -6.65642, 1.69", "60.2597, -256.521, -7.20537, 0.22", "60.9417, -257.94, -7.56537, 0.22", "61.293, -258.655, -7.76226, 1.11", "61.5692, -259.183, -7.92325, 1.55", "62.3536, -260.605, -8.33418, 0.15", "62.9789, -261.696, -8.59346, 0.15", "63.2496, -262.165, -8.66252, 0.81", "63.3968, -262.438, -8.69889, 0.81", "63.9195, -263.439, -8.80433, 0.15", "64.5314, -264.618, -8.85637, 0.52", "65.3013, -266.066, -8.82215, 0.15", "65.423, -266.262, -8.80157, 0.96", "65.4698, -266.328, -8.7868, 0.96", "65.8544, -266.856, -8.64658, 1.11", "66.8721, -268.196, -8.18682, 0.22", "67.16, -268.543, -8.0314, 0.37", "68.4983, -270.054, -7.19124, 0.15", "69.3274, -270.944, -6.66765, 1.69" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "104.782, -262.468, 65.4078, 0.29", "108.676, -271.009, 69.7275, 0.29" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "104.782, -262.468, 65.4078, 0.29", "107.59, -271.409, 69.8358, 0.29" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "69.3274, -270.944, -6.66765, 0.22", "70.7897, -270.809, -5.0587, 0.22", "71.8205, -270.709, -3.92352, 0.59", "71.8586, -270.707, -3.87726, 0.59", "73.0098, -270.789, -2.33365, 0.96", "74.3716, -270.973, -0.499275, 0.22", "74.4446, -270.985, -0.402118, 0.59", "74.4853, -270.996, -0.346135, 0.59", "75.8465, -271.487, 1.46326, 0.44", "77.4553, -272.254, 3.53114, 0.15", "77.8507, -272.5, 4.02819, 0.66", "78.0189, -272.624, 4.24639, 0.66", "78.9476, -273.347, 5.45661, 0.22", "79.394, -273.702, 6.02638, 0.22", "80.4054, -274.535, 7.24896, 0.52", "81.5591, -275.535, 8.68561, 0.37", "82.5173, -276.422, 9.99407, 0.29", "82.5703, -276.474, 10.072, 0.29", "88.7859, -278.997, 17.5281, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "69.3274, -270.944, -6.66765, 0.15", "69.3885, -272.866, -6.1653, 0.15", "69.4044, -273.394, -6.00741, 0.44", "69.4148, -273.763, -5.89291, 0.44", "69.4637, -275.501, -5.35421, 0.22", "69.5039, -276.929, -4.91139, 0.22", "69.5056, -276.989, -4.89282, 0.22", "69.6118, -277.872, -4.49691, 0.81", "69.6506, -278.149, -4.35924, 0.81" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_39", "dend_24", "dend_9", "dend_0", "dend_56", "dend_53", "dend_49", "dend_40", "dend_36", "dend_25", "dend_17", "dend_10", "dend_4", "dend_1", "dend_58", "dend_57", "dend_55", "dend_54", "dend_51", "dend_50", "dend_42", "dend_41", "dend_38", "dend_37", "dend_33", "dend_26", "dend_21", "dend_18", "dend_14", "dend_11", "dend_8", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_35", "dend_34", "dend_32", "dend_27", "dend_23", "dend_22", "dend_20", "dend_19", "dend_16", "dend_15", "dend_13", "dend_12", "dend_7", "dend_6", "dend_45", "dend_44", "dend_31", "dend_28", "dend_47", "dend_46", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_52", "dend_39", "dend_24", "dend_9", "dend_0", "dend_56", "dend_53", "dend_49", "dend_40", "dend_36", "dend_25", "dend_17", "dend_10", "dend_4", "dend_1", "dend_58", "dend_57", "dend_55", "dend_54", "dend_51", "dend_50", "dend_42", "dend_41", "dend_38", "dend_37", "dend_33", "dend_26", "dend_21", "dend_18", "dend_14", "dend_11", "dend_8", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_35", "dend_34", "dend_32", "dend_27", "dend_23", "dend_22", "dend_20", "dend_19", "dend_16", "dend_15", "dend_13", "dend_12", "dend_7", "dend_6", "dend_45", "dend_44", "dend_31", "dend_28", "dend_47", "dend_46", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_39", "dend_24", "dend_9", "dend_0", "axon_0", "dend_56", "dend_53", "dend_49", "dend_40", "dend_36", "dend_25", "dend_17", "dend_10", "dend_4", "dend_1", "axon_1", "dend_58", "dend_57", "dend_55", "dend_54", "dend_51", "dend_50", "dend_42", "dend_41", "dend_38", "dend_37", "dend_33", "dend_26", "dend_21", "dend_18", "dend_14", "dend_11", "dend_8", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_35", "dend_34", "dend_32", "dend_27", "dend_23", "dend_22", "dend_20", "dend_19", "dend_16", "dend_15", "dend_13", "dend_12", "dend_7", "dend_6", "dend_45", "dend_44", "dend_31", "dend_28", "dend_47", "dend_46", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_47", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_NBC_7b7132634e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_49, id: dend_49, parent: dend_39
create dend_49
public dend_49
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_39, dend_24, dend_9, dend_0, dend_56, dend_53, dend_49, dend_40, dend_36, dend_25, dend_17, dend_10, dend_4, dend_1, dend_58, dend_57, dend_55, dend_54, dend_51, dend_50, dend_42, dend_41, dend_38, dend_37, dend_33, dend_26, dend_21, dend_18, dend_14, dend_11, dend_8, dend_5, dend_3, dend_2, dend_48, dend_43, dend_35, dend_34, dend_32, dend_27, dend_23, dend_22, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12, dend_7, dend_6, dend_45, dend_44, dend_31, dend_28, dend_47, dend_46, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_39, dend_24, dend_9, dend_0, dend_56, dend_53, dend_49, dend_40, dend_36, dend_25, dend_17, dend_10, dend_4, dend_1, dend_58, dend_57, dend_55, dend_54, dend_51, dend_50, dend_42, dend_41, dend_38, dend_37, dend_33, dend_26, dend_21, dend_18, dend_14, dend_11, dend_8, dend_5, dend_3, dend_2, dend_48, dend_43, dend_35, dend_34, dend_32, dend_27, dend_23, dend_22, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12, dend_7, dend_6, dend_45, dend_44, dend_31, dend_28, dend_47, dend_46, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_52, dend_39, dend_24, dend_9, dend_0, axon_0, dend_56, dend_53, dend_49, dend_40, dend_36, dend_25, dend_17, dend_10, dend_4, dend_1, axon_1, dend_58, dend_57, dend_55, dend_54, dend_51, dend_50, dend_42, dend_41, dend_38, dend_37, dend_33, dend_26, dend_21, dend_18, dend_14, dend_11, dend_8, dend_5, dend_3, dend_2, dend_48, dend_43, dend_35, dend_34, dend_32, dend_27, dend_23, dend_22, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12, dend_7, dend_6, dend_45, dend_44, dend_31, dend_28, dend_47, dend_46, dend_30, dend_29]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_47, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_52(0), soma_0(0.450000452740349)
    connect dend_39(0), soma_0(0.450000452740349)
    connect dend_24(0), soma_0(0.450000452740349)
    connect dend_9(0), soma_0(0.450000452740349)
    connect dend_0(0), soma_0(0.450000452740349)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_49(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.49041, 11.0652, -2.71254, 3.25215 ) }
    soma_0 { pt3dadd( -5.9849, 9.8974, -2.44278, 5.32263 ) }
    soma_0 { pt3dadd( -5.47938, 8.72963, -2.17303, 7.86794 ) }
    soma_0 { pt3dadd( -4.97387, 7.56187, -1.90327, 9.54929 ) }
    soma_0 { pt3dadd( -4.46836, 6.3941, -1.63352, 10.4694 ) }
    soma_0 { pt3dadd( -3.96284, 5.22633, -1.36376, 11.3603 ) }
    soma_0 { pt3dadd( -3.45733, 4.05856, -1.094, 12.3104 ) }
    soma_0 { pt3dadd( -2.95181, 2.89079, -0.824248, 12.9638 ) }
    soma_0 { pt3dadd( -2.4463, 1.72302, -0.554492, 13.5833 ) }
    soma_0 { pt3dadd( -1.94079, 0.555256, -0.284737, 14.0962 ) }
    soma_0 { pt3dadd( -1.43527, -0.612513, -0.0149809, 14.3542 ) }
    soma_0 { pt3dadd( -0.929761, -1.78028, 0.254775, 14.3687 ) }
    soma_0 { pt3dadd( -0.424248, -2.94805, 0.524531, 14.253 ) }
    soma_0 { pt3dadd( 0.0812657, -4.11582, 0.794286, 13.7298 ) }
    soma_0 { pt3dadd( 0.586779, -5.28359, 1.06404, 13.1099 ) }
    soma_0 { pt3dadd( 1.09229, -6.45135, 1.3338, 12.1759 ) }
    soma_0 { pt3dadd( 1.59781, -7.61912, 1.60355, 10.8379 ) }
    soma_0 { pt3dadd( 2.10332, -8.78689, 1.87331, 9.17912 ) }
    soma_0 { pt3dadd( 2.60883, -9.95466, 2.14307, 6.96846 ) }
    soma_0 { pt3dadd( 3.11435, -11.1224, 2.41282, 4.29687 ) }
    soma_0 { pt3dadd( 3.61986, -12.2902, 2.68258, 2.60358 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 21/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -1.00308, -3.88096, 19.7562, 1.92 ) }
    dend_52 { pt3dadd( -1.00308, -3.88096, 19.7562, 1.92 ) }
    dend_52 { pt3dadd( -1.9654, -4.16321, 20.1792, 2.06 ) }
    dend_52 { pt3dadd( -3.7217, -4.38869, 21.201, 0.66 ) }
    dend_52 { pt3dadd( -4.66111, -4.3306, 21.9656, 1.11 ) }
    dend_52 { pt3dadd( -5.08156, -4.17574, 22.4575, 1.18 ) }
    dend_52 { pt3dadd( -5.82637, -3.62114, 23.6062, 0.74 ) }
    dend_52 { pt3dadd( -6.62973, -2.58179, 25.2591, 1.4 ) }
    dend_52 { pt3dadd( -7.01396, -1.7592, 26.3501, 1.69 ) }
    dend_52 { pt3dadd( -7.40341, -0.43114, 27.9387, 0.74 ) }
    dend_52 { pt3dadd( -7.63262, 0.834202, 29.404, 1.11 ) }
    dend_52 { pt3dadd( -7.71064, 1.78821, 30.4912, 1.55 ) }
    dend_52 { pt3dadd( -7.70862, 1.82957, 30.5364, 1.55 ) }
    dend_52 { pt3dadd( -7.54772, 2.7423, 31.4789, 2.28 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 35/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.30692, -3.14596, -5.80388, 1.11 ) }
    dend_39 { pt3dadd( 5.0282, -3.99423, -5.80388, 1.11 ) }
    dend_39 { pt3dadd( 5.92937, -5.07526, -5.80388, 1.25 ) }
    dend_39 { pt3dadd( 6.72764, -6.02194, -5.80388, 1.47 ) }
    dend_39 { pt3dadd( 7.48024, -6.92792, -5.83985, 1.69 ) }
    dend_39 { pt3dadd( 8.31185, -7.9784, -5.90309, 1.84 ) }
    dend_39 { pt3dadd( 9.00926, -8.89515, -5.97939, 1.47 ) }
    dend_39 { pt3dadd( 9.09903, -9.02054, -5.99281, 1.47 ) }
    dend_39 { pt3dadd( 9.61144, -9.77899, -6.08596, 1.47 ) }
    dend_39 { pt3dadd( 10.4256, -10.9963, -6.25004, 0.88 ) }
    dend_39 { pt3dadd( 11.1918, -12.151, -6.41158, 0.66 ) }
    dend_39 { pt3dadd( 11.919, -13.2121, -6.56002, 0.66 ) }
    dend_39 { pt3dadd( 12.5838, -14.1346, -6.65723, 1.55 ) }
    dend_39 { pt3dadd( 13.2037, -14.949, -6.70474, 2.36 ) }
    dend_39 { pt3dadd( 13.4867, -15.2895, -6.70586, 2.14 ) }
    dend_39 { pt3dadd( 14.0005, -15.8301, -6.67468, 1.77 ) }
    dend_39 { pt3dadd( 14.5641, -16.3582, -6.63127, 1.11 ) }
    dend_39 { pt3dadd( 15.3682, -17.0588, -6.55722, 0.96 ) }
    dend_39 { pt3dadd( 16.3555, -17.8822, -6.46207, 0.52 ) }
    dend_39 { pt3dadd( 17.1182, -18.4992, -6.3879, 0.52 ) }
    dend_39 { pt3dadd( 17.8713, -19.1055, -6.31786, 1.4 ) }
    dend_39 { pt3dadd( 18.6159, -19.693, -6.25809, 1.92 ) }
    dend_39 { pt3dadd( 19.0452, -20.0377, -6.23818, 1.92 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 2.80693, -13.1524, 1.50612, 2.58 ) }
    dend_24 { pt3dadd( 2.80693, -13.1524, 1.50612, 2.58 ) }
    dend_24 { pt3dadd( 3.09458, -14.2885, 1.53994, 2.5 ) }
    dend_24 { pt3dadd( 3.56275, -16.1373, 1.59497, 2.36 ) }
    dend_24 { pt3dadd( 4.07755, -18.1704, 1.65548, 2.36 ) }
    dend_24 { pt3dadd( 4.63365, -20.3665, 1.72085, 2.73 ) }
    dend_24 { pt3dadd( 4.84523, -21.202, 1.74572, 2.73 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 65/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.46308, 9.75854, -5.86388, 3.9 ) }
    dend_9 { pt3dadd( -0.943077, 10.4516, -5.86388, 3.9 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 67/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.19308, 11.5436, -2.61388, 1.62 ) }
    dend_0 { pt3dadd( -7.19308, 11.5436, -2.61388, 1.62 ) }
    dend_0 { pt3dadd( -7.16932, 12.2959, -2.72206, 1.4 ) }
    dend_0 { pt3dadd( -7.10674, 13.2081, -2.86539, 1.25 ) }
    dend_0 { pt3dadd( -6.99949, 14.546, -3.08233, 1.47 ) }
    dend_0 { pt3dadd( -6.85645, 15.9879, -3.30202, 1.77 ) }
    dend_0 { pt3dadd( -6.70329, 17.3199, -3.48807, 2.14 ) }
    dend_0 { pt3dadd( -6.56005, 18.3237, -3.61617, 2.14 ) }
    dend_0 { pt3dadd( -6.33467, 19.643, -3.73119, 1.84 ) }
    dend_0 { pt3dadd( -6.31476, 19.7525, -3.73673, 1.84 ) }
    dend_0 { pt3dadd( -6.0934, 20.9553, -3.74065, 1.4 ) }
    dend_0 { pt3dadd( -5.90326, 22.116, -3.72122, 1.25 ) }
    dend_0 { pt3dadd( -5.75846, 23.2001, -3.6799, 1.25 ) }
    dend_0 { pt3dadd( -5.55947, 24.8618, -3.59688, 1.25 ) }
    dend_0 { pt3dadd( -5.54117, 25.0388, -3.58518, 1.25 ) }
    dend_0 { pt3dadd( -5.4263, 26.2585, -3.50989, 1.62 ) }
    dend_0 { pt3dadd( -5.31468, 27.989, -3.4211, 2.43 ) }
    dend_0 { pt3dadd( -5.27798, 28.8944, -3.38754, 2.43 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 85/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.61986, -12.2902, 2.68258, 0.782107 ) }
    axon_0 { pt3dadd( 9.57881, -26.0558, 2.68258, 0.782107 ) }
    axon_0 { pt3dadd( 15.5378, -39.8213, 2.68258, 0.782107 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 88/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -7.54772, 2.7423, 31.4789, 0.74 ) }
    dend_56 { pt3dadd( -6.91286, 3.68895, 31.988, 0.74 ) }
    dend_56 { pt3dadd( -6.50985, 4.30209, 32.3095, 0.37 ) }
    dend_56 { pt3dadd( -5.76271, 5.50639, 32.8839, 0.37 ) }
    dend_56 { pt3dadd( -5.47308, 5.99083, 33.1018, 0.66 ) }
    dend_56 { pt3dadd( -4.89813, 6.91873, 33.5469, 0.66 ) }
    dend_56 { pt3dadd( -4.65233, 7.26678, 33.7193, 0.96 ) }
    dend_56 { pt3dadd( -4.5458, 7.37672, 33.78, 0.96 ) }
    dend_56 { pt3dadd( -3.88677, 7.7938, 34.0975, 1.18 ) }
    dend_56 { pt3dadd( -3.82316, 7.81177, 34.1212, 1.18 ) }
    dend_56 { pt3dadd( -2.82674, 7.88947, 34.4616, 0.81 ) }
    dend_56 { pt3dadd( -1.68236, 7.75313, 34.7997, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( -0.31093, 7.3595, 35.2455, 0.37 ) }
    dend_56 { pt3dadd( 0.571437, 7.04213, 35.6132, 1.18 ) }
    dend_56 { pt3dadd( 0.977255, 6.88978, 35.8009, 1.47 ) }
    dend_56 { pt3dadd( 1.11966, 6.84689, 35.8748, 1.47 ) }
    dend_56 { pt3dadd( 1.95074, 6.5706, 36.3315, 1.33 ) }
    dend_56 { pt3dadd( 2.98155, 6.22223, 37.0298, 0.74 ) }
    dend_56 { pt3dadd( 4.33952, 5.92639, 38.1413, 0.29 ) }
    dend_56 { pt3dadd( 5.01178, 5.89098, 38.7163, 0.29 ) }
    dend_56 { pt3dadd( 6.07853, 5.99182, 39.7036, 0.29 ) }
    dend_56 { pt3dadd( 15.0019, 6.6181, 44.1776, 0.29 ) }
    dend_56 { pt3dadd( 24.0587, 6.11921, 48.3906, 0.29 ) }
    dend_56 { pt3dadd( 33.5569, 5.75433, 51.499, 0.29 ) }
    dend_56 { pt3dadd( 42.6365, 4.60198, 55.5435, 0.29 ) }
    dend_56 { pt3dadd( 51.184, 3.78891, 60.6757, 0.29 ) }
    dend_56 { pt3dadd( 59.5855, 4.30582, 66.0768, 0.29 ) }
    dend_56 { pt3dadd( 68.0032, 2.7501, 71.2679, 0.29 ) }
    dend_56 { pt3dadd( 76.5752, 1.85129, 76.3462, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 17/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -7.54772, 2.7423, 31.4789, 0.44 ) }
    dend_53 { pt3dadd( -8.95045, 3.47054, 31.3511, 0.44 ) }
    dend_53 { pt3dadd( -10.0416, 4.10764, 31.2523, 0.44 ) }
    dend_53 { pt3dadd( -10.8466, 4.61742, 31.1792, 0.29 ) }
    dend_53 { pt3dadd( -11.4441, 5.06389, 31.1827, 0.29 ) }
    dend_53 { pt3dadd( -11.5029, 5.11955, 31.1942, 0.29 ) }
    dend_53 { pt3dadd( -11.9692, 5.62396, 31.3448, 0.29 ) }
    dend_53 { pt3dadd( -12.2145, 5.97296, 31.4964, 0.59 ) }
    dend_53 { pt3dadd( -12.2719, 6.06324, 31.5423, 0.59 ) }
    dend_53 { pt3dadd( -13.042, 7.2319, 32.1552, 0.59 ) }
    dend_53 { pt3dadd( -13.8119, 8.21305, 32.6617, 0.44 ) }
    dend_53 { pt3dadd( -14.3854, 8.78349, 32.9531, 0.96 ) }
    dend_53 { pt3dadd( -14.8251, 9.13038, 33.1206, 1.03 ) }
    dend_53 { pt3dadd( -15.7917, 9.78896, 33.3937, 0.74 ) }
    dend_53 { pt3dadd( -16.4709, 10.1983, 33.5199, 0.74 ) }
    dend_53 { pt3dadd( -17.4618, 10.6968, 33.6073, 0.29 ) }
    dend_53 { pt3dadd( -18.28, 11.0694, 33.6489, 0.29 ) }
    dend_53 { pt3dadd( -19.2091, 11.4616, 33.6873, 0.29 ) }
    dend_53 { pt3dadd( -19.8365, 11.7181, 33.7066, 0.88 ) }
    dend_53 { pt3dadd( -20.8515, 12.1266, 33.7163, 0.44 ) }
    dend_53 { pt3dadd( -21.6716, 12.4673, 33.7256, 0.74 ) }
    dend_53 { pt3dadd( -22.3427, 12.7845, 33.7352, 0.52 ) }
    dend_53 { pt3dadd( -22.9561, 13.0795, 33.7459, 0.44 ) }
    dend_53 { pt3dadd( -30.0207, 20.2351, 35.656, 0.44 ) }
    dend_53 { pt3dadd( -36.5888, 27.8596, 37.6888, 0.44 ) }
    dend_53 { pt3dadd( -43.8241, 35.1074, 37.6334, 0.44 ) }
    dend_53 { pt3dadd( -50.3908, 43.0263, 37.6428, 0.44 ) }
    dend_53 { pt3dadd( -56.8566, 50.818, 35.8745, 0.44 ) }
    dend_53 { pt3dadd( -63.297, 58.616, 34.0396, 0.44 ) }
    dend_53 { pt3dadd( -70.3846, 65.6235, 31.7537, 0.44 ) }
    dend_53 { pt3dadd( -77.9025, 72.3379, 30.1444, 0.44 ) }
    dend_53 { pt3dadd( -85.3629, 79.081, 28.3835, 0.44 ) }
    dend_53 { pt3dadd( -94.2982, 83.6415, 27.2456, 0.44 ) }
    dend_53 { pt3dadd( -103.836, 86.7423, 26.6884, 0.44 ) }
    dend_53 { pt3dadd( -113.302, 90.0045, 25.8287, 0.44 ) }
    dend_53 { pt3dadd( -121.857, 95.4, 26.4685, 0.44 ) }
    dend_53 { pt3dadd( -130.517, 100.621, 25.9454, 0.44 ) }
    dend_53 { pt3dadd( -138.645, 106.663, 26.8596, 0.44 ) }
    dend_53 { pt3dadd( -147.086, 111.918, 28.785, 0.44 ) }
    dend_53 { pt3dadd( -155.146, 117.083, 32.0764, 0.44 ) }
    dend_53 { pt3dadd( -163.506, 121.613, 35.4682, 0.44 ) }
    dend_53 { pt3dadd( -172.161, 125.225, 39.1094, 0.44 ) }
    dend_53 { pt3dadd( -180.37, 130.605, 41.628, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_39 (entry count 60/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 19.0452, -20.0377, -6.23818, 0.29 ) }
    dend_49 { pt3dadd( 19.9243, -20.267, -7.54514, 0.29 ) }
    dend_49 { pt3dadd( 20.5958, -20.4802, -8.51444, 0.88 ) }
    dend_49 { pt3dadd( 21.6435, -20.8461, -10.0049, 1.55 ) }
    dend_49 { pt3dadd( 22.304, -21.107, -10.9223, 1.25 ) }
    dend_49 { pt3dadd( 23.9952, -21.9104, -13.1066, 0.22 ) }
    dend_49 { pt3dadd( 24.7254, -22.3024, -13.9879, 1.47 ) }
    dend_49 { pt3dadd( 25.0794, -22.5519, -14.3849, 2.06 ) }
    dend_49 { pt3dadd( 25.1223, -22.5875, -14.4286, 2.06 ) }
    dend_49 { pt3dadd( 26.1216, -23.4928, -15.2768, 0.22 ) }
    dend_49 { pt3dadd( 27.2346, -24.5174, -16.0559, 0.22 ) }
    dend_49 { pt3dadd( 28.0268, -25.2502, -16.5189, 1.4 ) }
    dend_49 { pt3dadd( 28.6612, -25.8263, -16.8796, 1.77 ) }
    dend_49 { pt3dadd( 30.1684, -27.0995, -17.7647, 0.22 ) }
    dend_49 { pt3dadd( 30.8898, -27.6789, -18.1882, 0.22 ) }
    dend_49 { pt3dadd( 31.8718, -28.4311, -18.7611, 1.99 ) }
    dend_49 { pt3dadd( 31.9232, -28.4671, -18.7939, 1.99 ) }
    dend_49 { pt3dadd( 32.7284, -28.9966, -19.3199, 2.43 ) }
    dend_49 { pt3dadd( 35.1407, -30.4375, -20.9855, 0.37 ) }
    dend_49 { pt3dadd( 36.3202, -31.1078, -21.7984, 0.22 ) }
    dend_49 { pt3dadd( 36.373, -31.1355, -21.8361, 0.22 ) }
    dend_49 { pt3dadd( 37.9048, -31.913, -22.9455, 1.62 ) }
    dend_49 { pt3dadd( 38.0869, -32.0016, -23.0778, 2.14 ) }
    dend_49 { pt3dadd( 40.0728, -32.8429, -24.5573, 0.22 ) }
    dend_49 { pt3dadd( 40.7677, -33.0734, -25.0691, 0.22 ) }
    dend_49 { pt3dadd( 41.4328, -33.2552, -25.5503, 1.4 ) }
    dend_49 { pt3dadd( 41.5956, -33.2939, -25.6695, 1.84 ) }
    dend_49 { pt3dadd( 41.6608, -33.3046, -25.7148, 1.84 ) }
    dend_49 { pt3dadd( 43.552, -33.494, -27.0187, 0.22 ) }
    dend_49 { pt3dadd( 43.9856, -33.5008, -27.3057, 1.11 ) }
    dend_49 { pt3dadd( 44.198, -33.5023, -27.4559, 1.11 ) }
    dend_49 { pt3dadd( 45.7127, -33.5555, -28.5366, 0.29 ) }
    dend_49 { pt3dadd( 46.4078, -33.6222, -29.1521, 0.22 ) }
    dend_49 { pt3dadd( 46.6167, -33.656, -29.3507, 0.37 ) }
    dend_49 { pt3dadd( 47.3042, -33.8049, -30.0395, 0.22 ) }
    dend_49 { pt3dadd( 48.2957, -34.0289, -31.0749, 1.55 ) }
    dend_49 { pt3dadd( 48.5182, -34.0791, -31.309, 1.84 ) }
    dend_49 { pt3dadd( 51.2731, -34.756, -34.2662, 0.22 ) }
    dend_49 { pt3dadd( 52.2967, -35.0306, -35.4009, 1.84 ) }
    dend_49 { pt3dadd( 53.845, -35.4436, -37.1767, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_49 { pt3dadd( 54.4024, -35.5818, -37.8231, 0.52 ) }
    dend_49 { pt3dadd( 54.6858, -35.6496, -38.1338, 0.52 ) }
    dend_49 { pt3dadd( 55.7686, -35.8999, -39.2729, 0.29 ) }
    dend_49 { pt3dadd( 56.765, -36.133, -40.2443, 1.4 ) }
    dend_49 { pt3dadd( 57.9042, -36.385, -41.4074, 1.55 ) }
    dend_49 { pt3dadd( 58.9929, -36.625, -42.4821, 0.22 ) }
    dend_49 { pt3dadd( 59.8757, -36.816, -43.3388, 0.22 ) }
    dend_49 { pt3dadd( 60.5289, -36.9624, -43.9537, 0.81 ) }
    dend_49 { pt3dadd( 60.5873, -36.9763, -44.0067, 0.81 ) }
    dend_49 { pt3dadd( 62.5619, -37.5161, -45.7273, 0.22 ) }
    dend_49 { pt3dadd( 63.4501, -37.8332, -46.4835, 1.55 ) }
    dend_49 { pt3dadd( 65.4336, -38.7467, -48.1613, 0.22 ) }
    dend_49 { pt3dadd( 66.0695, -39.1015, -48.6763, 0.22 ) }
    dend_49 { pt3dadd( 67.1392, -39.7939, -49.4572, 1.55 ) }
    dend_49 { pt3dadd( 67.6645, -40.1743, -49.8082, 2.21 ) }
    dend_49 { pt3dadd( 69.215, -41.5127, -50.7105, 0.29 ) }
    dend_49 { pt3dadd( 70.0923, -42.3387, -51.1635, 0.29 ) }
    dend_49 { pt3dadd( 71.1409, -43.3796, -51.5996, 0.66 ) }
    dend_49 { pt3dadd( 71.6555, -43.8706, -51.79, 0.88 ) }
    dend_49 { pt3dadd( 72.6719, -44.7122, -52.0489, 0.22 ) }
    dend_49 { pt3dadd( 73.3396, -45.183, -52.168, 0.22 ) }
    dend_49 { pt3dadd( 74.3676, -45.7883, -52.2578, 1.11 ) }
    dend_49 { pt3dadd( 74.8036, -46.0259, -52.2852, 1.69 ) }
    dend_49 { pt3dadd( 75.4274, -46.3708, -52.3015, 1.47 ) }
    dend_49 { pt3dadd( 77.1807, -47.4136, -52.2751, 0.22 ) }
    dend_49 { pt3dadd( 77.8745, -47.8581, -52.2322, 0.22 ) }
    dend_49 { pt3dadd( 77.9422, -47.9028, -52.2282, 0.22 ) }
    dend_49 { pt3dadd( 78.9318, -48.6286, -52.187, 0.22 ) }
    dend_49 { pt3dadd( 79.7986, -49.313, -52.1687, 1.18 ) }
    dend_49 { pt3dadd( 80.2115, -49.6661, -52.17, 1.4 ) }
    dend_49 { pt3dadd( 81.5891, -50.9702, -52.2204, 0.22 ) }
    dend_49 { pt3dadd( 81.6423, -51.0179, -52.2227, 0.22 ) }
    dend_49 { pt3dadd( 82.376, -51.6018, -52.3119, 0.22 ) }
    dend_49 { pt3dadd( 82.7977, -51.9173, -52.3967, 0.96 ) }
    dend_49 { pt3dadd( 83.1629, -52.1999, -52.4983, 1.4 ) }
    dend_49 { pt3dadd( 83.216, -52.2437, -52.5166, 1.4 ) }
    dend_49 { pt3dadd( 83.7401, -52.723, -52.7344, 1.11 ) }
    dend_49 { pt3dadd( 84.7711, -53.6493, -53.1885, 0.22 ) }
    dend_49 { pt3dadd( 85.4196, -54.3098, -53.4929, 0.22 ) }
    dend_49 { pt3dadd( 85.9834, -54.9286, -53.7684, 1.03 ) }
    dend_49 { pt3dadd( 86.0298, -54.9788, -53.79, 1.03 ) }
    dend_49 { pt3dadd( 86.4284, -55.394, -53.96, 1.03 ) }
    dend_49 { pt3dadd( 87.5467, -56.4402, -54.3367, 0.22 ) }
    dend_49 { pt3dadd( 88.3784, -57.1569, -54.5657, 0.22 ) }
    dend_49 { pt3dadd( 88.44, -57.2072, -54.5832, 0.22 ) }
    dend_49 { pt3dadd( 88.9513, -57.6142, -54.7531, 0.52 ) }
    dend_49 { pt3dadd( 89.0053, -57.6555, -54.774, 0.52 ) }
    dend_49 { pt3dadd( 89.9727, -58.3844, -55.1841, 0.22 ) }
    dend_49 { pt3dadd( 93.9203, -61.2702, -56.9892, 0.96 ) }
    dend_49 { pt3dadd( 93.9817, -61.3112, -57.0224, 0.96 ) }
    dend_49 { pt3dadd( 94.7768, -61.8146, -57.4915, 0.74 ) }
    dend_49 { pt3dadd( 96.0516, -62.5321, -58.2895, 0.29 ) }
    dend_49 { pt3dadd( 96.2235, -62.6148, -58.4018, 0.29 ) }
    dend_49 { pt3dadd( 96.9535, -62.8888, -58.9811, 0.29 ) }
    dend_49 { pt3dadd( 98.3034, -63.223, -60.1556, 0.29 ) }
    dend_49 { pt3dadd( 99.0994, -63.4116, -60.8176, 0.29 ) }
    dend_49 { pt3dadd( 100.673, -63.7493, -62.0482, 1.18 ) }
    dend_49 { pt3dadd( 101.064, -63.8206, -62.362, 1.69 ) }
    dend_49 { pt3dadd( 103.631, -64.256, -64.4542, 0.22 ) }
    dend_49 { pt3dadd( 104.257, -64.3707, -64.9767, 0.59 ) }
    dend_49 { pt3dadd( 104.894, -64.5085, -65.5073, 0.22 ) }
    dend_49 { pt3dadd( 105.497, -64.6559, -66.0365, 1.55 ) }
    dend_49 { pt3dadd( 107.976, -65.3147, -68.3528, 0.29 ) }
    dend_49 { pt3dadd( 107.976, -65.3147, -68.3528, 0.52 ) }
    dend_49 { pt3dadd( 108.968, -65.5835, -69.1962, 0.22 ) }
    dend_49 { pt3dadd( 109.502, -65.7489, -69.6769, 1.18 ) }
    dend_49 { pt3dadd( 109.811, -65.867, -69.9554, 1.18 ) }
    dend_49 { pt3dadd( 111.774, -66.7645, -71.6586, 0.22 ) }
    dend_49 { pt3dadd( 112.118, -66.9431, -71.9218, 0.96 ) }
    dend_49 { pt3dadd( 112.612, -67.2051, -72.2872, 1.18 ) }
    dend_49 { pt3dadd( 113.506, -67.6814, -72.8864, 0.22 ) }
    dend_49 { pt3dadd( 114.15, -68.0295, -73.3011, 0.22 ) }
    dend_49 { pt3dadd( 114.665, -68.3166, -73.5953, 1.18 ) }
    dend_49 { pt3dadd( 115.048, -68.5546, -73.8055, 1.18 ) }
    dend_49 { pt3dadd( 115.099, -68.5899, -73.8384, 1.18 ) }
    dend_49 { pt3dadd( 116.327, -69.4769, -74.6927, 0.22 ) }
    dend_49 { pt3dadd( 117.023, -69.977, -75.1734, 0.96 ) }
    dend_49 { pt3dadd( 117.292, -70.1741, -75.3627, 0.96 ) }
    dend_49 { pt3dadd( 118.513, -71.1004, -76.1848, 0.15 ) }
    dend_49 { pt3dadd( 118.972, -71.4762, -76.5486, 0.15 ) }
    dend_49 { pt3dadd( 119.039, -71.5371, -76.6066, 0.15 ) }
    dend_49 { pt3dadd( 119.535, -72.0294, -77.0663, 0.15 ) }
    dend_49 { pt3dadd( 119.979, -72.483, -77.4639, 0.81 ) }
    dend_49 { pt3dadd( 120.301, -72.805, -77.7466, 1.11 ) }
    dend_49 { pt3dadd( 121.835, -74.4132, -79.4119, 0.22 ) }
    dend_49 { pt3dadd( 122.076, -74.6741, -79.7171, 0.74 ) }
    dend_49 { pt3dadd( 122.115, -74.7201, -79.7717, 0.74 ) }
    dend_49 { pt3dadd( 122.619, -75.3566, -80.5387, 0.15 ) }
    dend_49 { pt3dadd( 123.073, -75.9483, -81.2937, 1.47 ) }
    dend_49 { pt3dadd( 124.321, -77.6138, -83.4419, 0.22 ) }
    dend_49 { pt3dadd( 124.357, -77.6587, -83.4994, 0.22 ) }
    dend_49 { pt3dadd( 124.739, -78.0869, -84.0972, 0.22 ) }
    dend_49 { pt3dadd( 125.072, -78.424, -84.5884, 0.88 ) }
    dend_49 { pt3dadd( 126.278, -79.511, -86.2684, 0.22 ) }
    dend_49 { pt3dadd( 126.393, -79.5947, -86.4081, 0.59 ) }
    dend_49 { pt3dadd( 127.157, -80.0278, -87.172, 0.15 ) }
    dend_49 { pt3dadd( 128.086, -80.4449, -88.0293, 1.4 ) }
    dend_49 { pt3dadd( 128.423, -80.5702, -88.3254, 1.4 ) }
    dend_49 { pt3dadd( 128.477, -80.5885, -88.3672, 1.4 ) }
    dend_49 { pt3dadd( 130.424, -81.1606, -89.5918, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_49 { pt3dadd( 130.742, -81.2506, -89.7748, 1.03 ) }
    dend_49 { pt3dadd( 132.488, -81.7327, -90.6586, 0.22 ) }
    dend_49 { pt3dadd( 132.636, -81.7695, -90.7257, 0.59 ) }
    dend_49 { pt3dadd( 133.892, -82.1074, -91.2654, 0.15 ) }
    dend_49 { pt3dadd( 134.691, -82.3351, -91.5699, 1.11 ) }
    dend_49 { pt3dadd( 134.973, -82.4232, -91.6613, 1.55 ) }
    dend_49 { pt3dadd( 135.457, -82.5861, -91.8182, 1.25 ) }
    dend_49 { pt3dadd( 137.21, -83.1953, -92.4378, 0.22 ) }
    dend_49 { pt3dadd( 138.167, -83.5013, -92.7872, 0.22 ) }
    dend_49 { pt3dadd( 138.714, -83.6666, -92.9962, 0.22 ) }
    dend_49 { pt3dadd( 139.553, -83.9151, -93.3421, 1.03 ) }
    dend_49 { pt3dadd( 140.209, -84.0977, -93.6369, 1.03 ) }
    dend_49 { pt3dadd( 142.111, -84.5865, -94.5312, 0.22 ) }
    dend_49 { pt3dadd( 142.963, -84.8219, -94.9407, 1.11 ) }
    dend_49 { pt3dadd( 143.015, -84.8356, -94.9675, 1.11 ) }
    dend_49 { pt3dadd( 143.44, -84.9654, -95.1936, 1.11 ) }
    dend_49 { pt3dadd( 144.867, -85.474, -95.9386, 0.22 ) }
    dend_49 { pt3dadd( 145.117, -85.5845, -96.0669, 0.52 ) }
    dend_49 { pt3dadd( 146.17, -86.2194, -96.56, 0.22 ) }
    dend_49 { pt3dadd( 146.233, -86.2627, -96.5879, 0.22 ) }
    dend_49 { pt3dadd( 146.691, -86.5978, -96.7679, 0.22 ) }
    dend_49 { pt3dadd( 147.556, -87.2695, -97.0659, 1.47 ) }
    dend_49 { pt3dadd( 147.934, -87.5929, -97.1823, 1.47 ) }
    dend_49 { pt3dadd( 149.628, -89.0839, -97.703, 0.22 ) }
    dend_49 { pt3dadd( 149.979, -89.3936, -97.8032, 0.66 ) }
    dend_49 { pt3dadd( 150.8, -90.1399, -98.0239, 0.22 ) }
    dend_49 { pt3dadd( 150.851, -90.1878, -98.0364, 0.22 ) }
    dend_49 { pt3dadd( 151.314, -90.6741, -98.1207, 0.22 ) }
    dend_49 { pt3dadd( 151.362, -90.7272, -98.1268, 0.22 ) }
    dend_49 { pt3dadd( 152.051, -91.466, -98.1468, 0.22 ) }
    dend_49 { pt3dadd( 152.489, -91.8829, -98.1526, 0.96 ) }
    dend_49 { pt3dadd( 152.984, -92.2962, -98.1526, 0.96 ) }
    dend_49 { pt3dadd( 154.307, -93.2579, -98.1526, 0.15 ) }
    dend_49 { pt3dadd( 154.367, -93.2951, -98.1531, 0.15 ) }
    dend_49 { pt3dadd( 155.246, -93.8033, -98.1637, 0.29 ) }
    dend_49 { pt3dadd( 156.52, -94.4784, -98.2018, 0.22 ) }
    dend_49 { pt3dadd( 157.001, -94.7137, -98.236, 0.81 ) }
    dend_49 { pt3dadd( 157.573, -94.9702, -98.3332, 1.11 ) }
    dend_49 { pt3dadd( 158.725, -95.4387, -98.6045, 0.22 ) }
    dend_49 { pt3dadd( 159.188, -95.639, -98.77, 0.59 ) }
    dend_49 { pt3dadd( 160.572, -96.3057, -99.453, 0.22 ) }
    dend_49 { pt3dadd( 161.483, -96.7941, -99.987, 1.55 ) }
    dend_49 { pt3dadd( 163.094, -97.6947, -101.008, 0.22 ) }
    dend_49 { pt3dadd( 163.267, -97.7934, -101.129, 0.44 ) }
    dend_49 { pt3dadd( 164.821, -98.6998, -102.338, 0.22 ) }
    dend_49 { pt3dadd( 165.796, -99.2683, -103.164, 1.03 ) }
    dend_49 { pt3dadd( 166.406, -99.6563, -103.766, 1.62 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 47/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 19.0452, -20.0377, -6.23818, 2.21 ) }
    dend_40 { pt3dadd( 19.0842, -20.3016, -6.49027, 2.21 ) }
    dend_40 { pt3dadd( 18.9978, -21.2226, -7.54792, 0.88 ) }
    dend_40 { pt3dadd( 18.8758, -21.7947, -8.23405, 0.52 ) }
    dend_40 { pt3dadd( 18.7034, -22.4612, -9.04035, 0.52 ) }
    dend_40 { pt3dadd( 18.4966, -23.272, -9.95742, 0.96 ) }
    dend_40 { pt3dadd( 18.0915, -24.9732, -11.7273, 0.59 ) }
    dend_40 { pt3dadd( 17.8494, -25.8968, -12.6274, 0.37 ) }
    dend_40 { pt3dadd( 17.585, -26.8632, -13.5264, 0.37 ) }
    dend_40 { pt3dadd( 17.5674, -26.9223, -13.5805, 0.37 ) }
    dend_40 { pt3dadd( 17.2787, -27.9571, -14.4776, 1.25 ) }
    dend_40 { pt3dadd( 17.1587, -28.6363, -14.9552, 2.14 ) }
    dend_40 { pt3dadd( 17.091, -29.8996, -15.5749, 1.92 ) }
    dend_40 { pt3dadd( 17.1689, -31.6618, -16.3653, 0.81 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 4.84523, -21.202, 1.74572, 0.37 ) }
    dend_36 { pt3dadd( 4.70803, -23.0828, 3.64282, 0.37 ) }
    dend_36 { pt3dadd( 4.69264, -23.785, 4.28582, 0.74 ) }
    dend_36 { pt3dadd( 4.73803, -24.32, 4.73953, 1.03 ) }
    dend_36 { pt3dadd( 4.97995, -25.4668, 5.65858, 1.18 ) }
    dend_36 { pt3dadd( 5.37359, -26.6863, 6.59314, 0.52 ) }
    dend_36 { pt3dadd( 5.87686, -27.955, 7.53728, 0.44 ) }
    dend_36 { pt3dadd( 6.32265, -28.7872, 8.08427, 0.37 ) }
    dend_36 { pt3dadd( 7.12142, -29.7369, 8.63184, 0.59 ) }
    dend_36 { pt3dadd( 8.10389, -30.4783, 8.93894, 1.25 ) }
    dend_36 { pt3dadd( 8.79904, -30.7859, 8.97129, 1.47 ) }
    dend_36 { pt3dadd( 8.86685, -30.8028, 8.96464, 1.47 ) }
    dend_36 { pt3dadd( 9.6617, -30.9016, 8.8403, 1.47 ) }
    dend_36 { pt3dadd( 10.7256, -30.9684, 8.65167, 1.25 ) }
    dend_36 { pt3dadd( 12.137, -31.059, 8.38964, 0.66 ) }
    dend_36 { pt3dadd( 13.3699, -31.1484, 8.15589, 0.44 ) }
    dend_36 { pt3dadd( 14.7444, -31.3054, 7.89068, 0.37 ) }
    dend_36 { pt3dadd( 15.8269, -31.4675, 7.68745, 0.29 ) }
    dend_36 { pt3dadd( 15.9227, -31.4873, 7.67089, 0.29 ) }
    dend_36 { pt3dadd( 17.4098, -31.9008, 7.42919, 0.29 ) }
    dend_36 { pt3dadd( 17.4749, -31.9241, 7.41617, 0.29 ) }
    dend_36 { pt3dadd( 18.9519, -32.513, 7.13409, 1.03 ) }
    dend_36 { pt3dadd( 19.1561, -32.5943, 7.10719, 1.03 ) }
    dend_36 { pt3dadd( 19.9949, -32.9166, 7.03325, 1.33 ) }
    dend_36 { pt3dadd( 20.9901, -33.2767, 6.98277, 1.55 ) }
    dend_36 { pt3dadd( 22.8947, -33.9134, 6.98023, 0.37 ) }
    dend_36 { pt3dadd( 24.7768, -34.5145, 7.05594, 0.81 ) }
    dend_36 { pt3dadd( 26.414, -35.0113, 7.19511, 0.37 ) }
    dend_36 { pt3dadd( 27.1987, -35.2537, 7.28519, 0.66 ) }
    dend_36 { pt3dadd( 28.2385, -35.5723, 7.44177, 0.96 ) }
    dend_36 { pt3dadd( 29.1733, -35.872, 7.62172, 1.11 ) }
    dend_36 { pt3dadd( 30.0879, -36.1942, 7.82, 1.4 ) }
    dend_36 { pt3dadd( 30.456, -36.343, 7.8816, 1.4 ) }
    dend_36 { pt3dadd( 32.3011, -37.1393, 8.15047, 0.15 ) }
    dend_36 { pt3dadd( 32.356, -37.1633, 8.15833, 0.15 ) }
    dend_36 { pt3dadd( 32.9854, -37.4501, 8.24139, 0.15 ) }
    dend_36 { pt3dadd( 33.4104, -37.6521, 8.28598, 0.74 ) }
    dend_36 { pt3dadd( 33.5576, -37.7196, 8.30012, 0.74 ) }
    dend_36 { pt3dadd( 33.8993, -37.866, 8.32665, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( 35.1974, -38.3423, 8.37944, 0.29 ) }
    dend_36 { pt3dadd( 35.4457, -38.4255, 8.38766, 0.66 ) }
    dend_36 { pt3dadd( 35.5224, -38.4491, 8.39142, 0.66 ) }
    dend_36 { pt3dadd( 36.3678, -38.708, 8.53779, 0.66 ) }
    dend_36 { pt3dadd( 36.4328, -38.7299, 8.55317, 0.66 ) }
    dend_36 { pt3dadd( 36.9661, -38.902, 8.76124, 1.4 ) }
    dend_36 { pt3dadd( 37.5665, -39.1044, 9.04761, 1.4 ) }
    dend_36 { pt3dadd( 39.1068, -39.6724, 9.84484, 0.22 ) }
    dend_36 { pt3dadd( 40.536, -40.2956, 10.6993, 1.25 ) }
    dend_36 { pt3dadd( 41.1868, -40.6138, 11.1359, 1.99 ) }
    dend_36 { pt3dadd( 43.2593, -41.7454, 12.7195, 0.22 ) }
    dend_36 { pt3dadd( 43.5685, -41.9378, 12.9829, 0.81 ) }
    dend_36 { pt3dadd( 43.9696, -42.2226, 13.3706, 0.81 ) }
    dend_36 { pt3dadd( 44.8961, -42.9836, 14.3117, 0.22 ) }
    dend_36 { pt3dadd( 44.981, -43.0604, 14.3957, 0.22 ) }
    dend_36 { pt3dadd( 45.8067, -43.8495, 15.2244, 1.11 ) }
    dend_36 { pt3dadd( 46.3048, -44.3629, 15.6809, 1.92 ) }
    dend_36 { pt3dadd( 47.1566, -45.1729, 16.3787, 0.66 ) }
    dend_36 { pt3dadd( 48.0519, -45.9705, 17.0655, 0.22 ) }
    dend_36 { pt3dadd( 48.8706, -46.6663, 17.6174, 0.88 ) }
    dend_36 { pt3dadd( 48.9193, -46.7078, 17.6484, 0.88 ) }
    dend_36 { pt3dadd( 49.5947, -47.2706, 18.0241, 1.18 ) }
    dend_36 { pt3dadd( 50.1701, -47.7348, 18.3098, 1.18 ) }
    dend_36 { pt3dadd( 51.5833, -48.8488, 18.8932, 0.29 ) }
    dend_36 { pt3dadd( 52.074, -49.2227, 19.073, 0.52 ) }
    dend_36 { pt3dadd( 52.2612, -49.3594, 19.1259, 0.52 ) }
    dend_36 { pt3dadd( 53.0387, -49.8729, 19.2248, 0.22 ) }
    dend_36 { pt3dadd( 53.8501, -50.3216, 19.1398, 1.77 ) }
    dend_36 { pt3dadd( 53.9116, -50.3506, 19.1211, 1.77 ) }
    dend_36 { pt3dadd( 54.3595, -50.5398, 18.8963, 2.06 ) }
    dend_36 { pt3dadd( 54.4254, -50.5671, 18.8593, 2.06 ) }
    dend_36 { pt3dadd( 56.1627, -51.2582, 17.8545, 0.29 ) }
    dend_36 { pt3dadd( 57.1225, -51.6261, 17.2553, 0.44 ) }
    dend_36 { pt3dadd( 57.6305, -51.8165, 16.9304, 0.44 ) }
    dend_36 { pt3dadd( 58.6564, -52.1914, 16.2639, 0.29 ) }
    dend_36 { pt3dadd( 59.5868, -52.532, 15.6586, 0.59 ) }
    dend_36 { pt3dadd( 60.1249, -52.7293, 15.3259, 0.59 ) }
    dend_36 { pt3dadd( 61.2765, -53.1534, 14.6762, 0.29 ) }
    dend_36 { pt3dadd( 61.3424, -53.1784, 14.6377, 0.29 ) }
    dend_36 { pt3dadd( 61.8454, -53.3678, 14.3249, 0.96 ) }
    dend_36 { pt3dadd( 62.2371, -53.5063, 14.1008, 1.33 ) }
    dend_36 { pt3dadd( 62.7334, -53.6764, 13.826, 1.33 ) }
    dend_36 { pt3dadd( 62.7937, -53.6965, 13.7961, 1.33 ) }
    dend_36 { pt3dadd( 64.2163, -54.14, 13.216, 0.29 ) }
    dend_36 { pt3dadd( 64.2887, -54.1623, 13.1894, 0.29 ) }
    dend_36 { pt3dadd( 65.4106, -54.4938, 12.9098, 0.29 ) }
    dend_36 { pt3dadd( 65.4775, -54.5119, 12.8987, 0.29 ) }
    dend_36 { pt3dadd( 67.0086, -54.899, 12.7544, 1.18 ) }
    dend_36 { pt3dadd( 67.4681, -55.0078, 12.7393, 2.28 ) }
    dend_36 { pt3dadd( 68.0126, -55.1204, 12.7615, 2.28 ) }
    dend_36 { pt3dadd( 69.5715, -55.4377, 12.8286, 0.29 ) }
    dend_36 { pt3dadd( 70.512, -55.6426, 12.8915, 0.22 ) }
    dend_36 { pt3dadd( 71.236, -55.8066, 12.9543, 0.88 ) }
    dend_36 { pt3dadd( 71.3039, -55.8223, 12.962, 0.88 ) }
    dend_36 { pt3dadd( 72.1542, -56.0067, 13.1058, 0.88 ) }
    dend_36 { pt3dadd( 73.2757, -56.2336, 13.3374, 0.22 ) }
    dend_36 { pt3dadd( 74.2623, -56.4174, 13.5591, 1.33 ) }
    dend_36 { pt3dadd( 74.3288, -56.4281, 13.5782, 1.33 ) }
    dend_36 { pt3dadd( 75.1067, -56.5295, 13.8258, 1.33 ) }
    dend_36 { pt3dadd( 76.8306, -56.6975, 14.3774, 0.29 ) }
    dend_36 { pt3dadd( 77.4462, -56.7581, 14.6188, 0.22 ) }
    dend_36 { pt3dadd( 78.2613, -56.8554, 14.9638, 0.22 ) }
    dend_36 { pt3dadd( 79.062, -56.9627, 15.3062, 1.03 ) }
    dend_36 { pt3dadd( 79.7376, -57.0753, 15.5883, 1.33 ) }
    dend_36 { pt3dadd( 81.4343, -57.4119, 16.2858, 0.29 ) }
    dend_36 { pt3dadd( 83.2984, -57.8748, 16.9963, 0.29 ) }
    dend_36 { pt3dadd( 84.4088, -58.1878, 17.4339, 0.29 ) }
    dend_36 { pt3dadd( 84.4626, -58.2052, 17.4548, 0.29 ) }
    dend_36 { pt3dadd( 85.441, -58.5191, 17.774, 0.29 ) }
    dend_36 { pt3dadd( 85.5058, -58.5389, 17.7927, 0.29 ) }
    dend_36 { pt3dadd( 86.9148, -58.8948, 18.088, 1.18 ) }
    dend_36 { pt3dadd( 86.9933, -58.9083, 18.0961, 1.18 ) }
    dend_36 { pt3dadd( 87.7805, -59.0006, 18.1614, 2.28 ) }
    dend_36 { pt3dadd( 89.6222, -59.1884, 18.2786, 0.22 ) }
    dend_36 { pt3dadd( 89.6919, -59.1943, 18.2816, 0.22 ) }
    dend_36 { pt3dadd( 90.3857, -59.2465, 18.2957, 0.37 ) }
    dend_36 { pt3dadd( 90.4656, -59.2479, 18.2916, 0.37 ) }
    dend_36 { pt3dadd( 91.2973, -59.2204, 18.2032, 0.37 ) }
    dend_36 { pt3dadd( 91.8293, -59.1694, 18.1169, 0.59 ) }
    dend_36 { pt3dadd( 92.2073, -59.119, 18.0337, 0.59 ) }
    dend_36 { pt3dadd( 92.2836, -59.1043, 18.0141, 0.59 ) }
    dend_36 { pt3dadd( 93.7572, -58.745, 17.5913, 0.22 ) }
    dend_36 { pt3dadd( 94.4304, -58.5361, 17.3943, 1.11 ) }
    dend_36 { pt3dadd( 94.7914, -58.3998, 17.2839, 1.47 ) }
    dend_36 { pt3dadd( 94.8539, -58.3739, 17.2642, 1.47 ) }
    dend_36 { pt3dadd( 96.4629, -57.6684, 16.7547, 0.22 ) }
    dend_36 { pt3dadd( 96.5573, -57.6269, 16.7263, 0.22 ) }
    dend_36 { pt3dadd( 97.1844, -57.3552, 16.5685, 0.22 ) }
    dend_36 { pt3dadd( 97.2488, -57.3303, 16.5547, 0.22 ) }
    dend_36 { pt3dadd( 106.546, -59.679, 19.4797, 0.22 ) }
    dend_36 { pt3dadd( 115.437, -62.0259, 23.4749, 0.22 ) }
    dend_36 { pt3dadd( 124.545, -65.4467, 26.0098, 0.22 ) }
    dend_36 { pt3dadd( 133.667, -67.3883, 29.6671, 0.22 ) }
    dend_36 { pt3dadd( 143.294, -67.6458, 32.3613, 0.22 ) }
    dend_36 { pt3dadd( 152.422, -67.0103, 36.399, 0.22 ) }
    dend_36 { pt3dadd( 161.818, -67.219, 39.8163, 0.22 ) }
    dend_36 { pt3dadd( 171.535, -68.822, 41.6185, 0.22 ) }
    dend_36 { pt3dadd( 181.028, -72.1231, 41.7339, 0.22 ) }
    dend_36 { pt3dadd( 190.523, -74.8541, 43.4865, 0.22 ) }
    dend_36 { pt3dadd( 199.608, -79.0653, 44.6589, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( 208.386, -84.0942, 44.7935, 0.22 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 1/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 4.84523, -21.202, 1.74572, 1.62 ) }
    dend_25 { pt3dadd( 3.4907, -22.6308, 0.532078, 1.62 ) }
    dend_25 { pt3dadd( 2.54116, -23.6324, -0.318704, 1.47 ) }
    dend_25 { pt3dadd( 1.64511, -24.5776, -1.12156, 1.84 ) }
    dend_25 { pt3dadd( 0.622597, -25.6562, -2.03771, 2.43 ) }
    dend_25 { pt3dadd( -0.101774, -26.4202, -2.68674, 2.73 ) }
    dend_25 { pt3dadd( -1.29543, -27.6793, -3.75625, 2.43 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 8/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.943077, 10.4516, -5.86388, 1.18 ) }
    dend_17 { pt3dadd( 1.41612, 10.9811, -6.17453, 1.18 ) }
    dend_17 { pt3dadd( 2.46189, 11.2158, -6.31223, 1.18 ) }
    dend_17 { pt3dadd( 2.53948, 11.2332, -6.32245, 1.18 ) }
    dend_17 { pt3dadd( 3.8392, 11.5249, -6.49359, 1.33 ) }
    dend_17 { pt3dadd( 5.19326, 11.8289, -6.67189, 1.47 ) }
    dend_17 { pt3dadd( 5.818, 11.9691, -6.75416, 1.47 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.943077, 10.4516, -5.86388, 1.11 ) }
    dend_10 { pt3dadd( -0.698638, 12.3925, -6.33645, 1.11 ) }
    dend_10 { pt3dadd( -0.491543, 13.329, -6.59921, 0.88 ) }
    dend_10 { pt3dadd( -0.147434, 14.4476, -6.95319, 0.88 ) }
    dend_10 { pt3dadd( 0.073001, 15.0825, -7.16259, 1.47 ) }
    dend_10 { pt3dadd( 0.610411, 16.4496, -7.62886, 1.62 ) }
    dend_10 { pt3dadd( 0.875893, 17.074, -7.85063, 1.99 ) }
    dend_10 { pt3dadd( 1.47801, 18.2808, -8.36003, 1.99 ) }
    dend_10 { pt3dadd( 2.01129, 19.3542, -8.85252, 0.74 ) }
    dend_10 { pt3dadd( 2.03607, 19.4056, -8.87672, 0.74 ) }
    dend_10 { pt3dadd( 2.48661, 20.505, -9.39933, 0.74 ) }
    dend_10 { pt3dadd( 2.7949, 21.5664, -9.88722, 1.11 ) }
    dend_10 { pt3dadd( 3.01319, 22.8393, -10.4423, 1.33 ) }
    dend_10 { pt3dadd( 3.06623, 24.0078, -10.8922, 1.77 ) }
    dend_10 { pt3dadd( 3.06275, 24.0866, -10.9197, 1.77 ) }
    dend_10 { pt3dadd( 2.95151, 25.1035, -11.2182, 2.06 ) }
    dend_10 { pt3dadd( 2.73949, 26.175, -11.4401, 2.43 ) }
    dend_10 { pt3dadd( 2.57607, 26.8704, -11.5145, 2.36 ) }
    dend_10 { pt3dadd( 2.42369, 27.6363, -11.5236, 2.06 ) }
    dend_10 { pt3dadd( 2.41293, 27.7089, -11.5208, 2.06 ) }
    dend_10 { pt3dadd( 2.33857, 28.6374, -11.4755, 1.69 ) }
    dend_10 { pt3dadd( 2.30314, 29.6354, -11.4096, 1.18 ) }
    dend_10 { pt3dadd( 2.31111, 30.5449, -11.3295, 1.03 ) }
    dend_10 { pt3dadd( 2.3613, 31.6898, -11.2293, 1.03 ) }
    dend_10 { pt3dadd( 2.45995, 32.9857, -11.1248, 1.25 ) }
    dend_10 { pt3dadd( 2.50656, 33.4331, -11.0967, 1.25 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 41/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -5.27798, 28.8944, -3.38754, 1.55 ) }
    dend_4 { pt3dadd( -5.89152, 30.5959, 2.71935, 1.55 ) }
    dend_4 { pt3dadd( -6.05315, 31.0442, 4.32814, 2.5 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -5.27798, 28.8944, -3.38754, 2.95 ) }
    dend_1 { pt3dadd( -5.21228, 29.4576, -3.31982, 2.95 ) }
    dend_1 { pt3dadd( -5.03542, 30.5401, -3.2041, 2.43 ) }
    dend_1 { pt3dadd( -4.78422, 31.7962, -3.08072, 1.11 ) }
    dend_1 { pt3dadd( -4.4326, 33.3206, -2.94365, 0.96 ) }
    dend_1 { pt3dadd( -4.4135, 33.391, -2.93724, 0.96 ) }
    dend_1 { pt3dadd( -4.10264, 34.3237, -2.80139, 0.96 ) }
    dend_1 { pt3dadd( -3.78564, 35.0802, -2.66578, 1.33 ) }
    dend_1 { pt3dadd( -3.40176, 35.7805, -2.49695, 1.18 ) }
    dend_1 { pt3dadd( -3.04589, 36.3094, -2.28236, 0.96 ) }
    dend_1 { pt3dadd( -2.51469, 37.0361, -1.8876, 0.74 ) }
    dend_1 { pt3dadd( -1.74035, 38.2015, -1.18335, 0.59 ) }
    dend_1 { pt3dadd( -1.70995, 38.2563, -1.14796, 0.59 ) }
    dend_1 { pt3dadd( -1.51184, 38.756, -0.857553, 0.59 ) }
    dend_1 { pt3dadd( -1.17641, 40.0559, -0.215373, 0.88 ) }
    dend_1 { pt3dadd( -1.0874, 41.3655, 0.213226, 1.55 ) }
    dend_1 { pt3dadd( -1.1626, 42.1374, 0.309661, 1.55 ) }
    dend_1 { pt3dadd( -1.3147, 42.9352, 0.280576, 1.25 ) }
    dend_1 { pt3dadd( -1.51581, 43.8479, 0.184012, 1.11 ) }
    dend_1 { pt3dadd( -1.54701, 43.9776, 0.158022, 1.11 ) }
    dend_1 { pt3dadd( -1.84384, 44.9992, -0.159241, 1.11 ) }
    dend_1 { pt3dadd( -2.21501, 46.0388, -0.488931, 1.47 ) }
    dend_1 { pt3dadd( -2.54791, 46.8659, -0.748492, 1.25 ) }
    dend_1 { pt3dadd( -2.57684, 46.9304, -0.765571, 1.25 ) }
    dend_1 { pt3dadd( -3.10166, 47.928, -0.97269, 0.81 ) }
    dend_1 { pt3dadd( -3.67284, 48.8934, -1.09856, 0.81 ) }
    dend_1 { pt3dadd( -4.41541, 49.9805, -1.15374, 1.25 ) }
    dend_1 { pt3dadd( -4.80144, 50.5082, -1.11178, 1.62 ) }
    dend_1 { pt3dadd( -5.22257, 51.094, -1.01009, 1.62 ) }
    dend_1 { pt3dadd( -5.71206, 51.8661, -0.844846, 1.25 ) }
    dend_1 { pt3dadd( -6.13278, 52.6637, -0.637667, 0.81 ) }
    dend_1 { pt3dadd( -6.3594, 53.2508, -0.484827, 0.66 ) }
    dend_1 { pt3dadd( -6.59796, 54.3331, -0.237979, 0.52 ) }
    dend_1 { pt3dadd( -6.65067, 54.9455, -0.137974, 0.81 ) }
    dend_1 { pt3dadd( -6.62982, 56.2528, -0.0283524, 0.81 ) }
    dend_1 { pt3dadd( -6.56163, 56.9382, -0.00447047, 0.59 ) }
    dend_1 { pt3dadd( -6.55065, 57.0107, -0.00589137, 0.59 ) }
    dend_1 { pt3dadd( -6.34633, 58.0944, -0.0553467, 0.59 ) }
    dend_1 { pt3dadd( -6.1223, 59.1896, -0.124199, 0.96 ) }
    dend_1 { pt3dadd( -6.01095, 59.7864, -0.155426, 1.4 ) }
    dend_1 { pt3dadd( -5.91924, 60.4023, -0.177695, 1.4 ) }
    dend_1 { pt3dadd( -5.90408, 60.5294, -0.179659, 1.4 ) }
    dend_1 { pt3dadd( -5.84108, 61.1498, -0.179417, 1.47 ) }
    dend_1 { pt3dadd( -5.74548, 62.2018, -0.157911, 0.96 ) }
    dend_1 { pt3dadd( -5.72649, 62.4317, -0.148406, 0.96 ) }
    dend_1 { pt3dadd( -5.67984, 63.3436, -0.127932, 0.96 ) }
    dend_1 { pt3dadd( -5.65262, 64.3401, -0.160194, 1.18 ) }
    dend_1 { pt3dadd( -5.66319, 64.8824, -0.219723, 1.33 ) }
    dend_1 { pt3dadd( -5.67511, 65.0418, -0.256185, 1.33 ) }
    dend_1 { pt3dadd( -5.79256, 65.9105, -0.53191, 0.74 ) }
    dend_1 { pt3dadd( -6.06174, 67.3153, -1.1266, 0.37 ) }
    dend_1 { pt3dadd( -6.26036, 68.1117, -1.54691, 0.37 ) }
    dend_1 { pt3dadd( -6.53465, 69.0459, -2.0991, 1.55 ) }
    dend_1 { pt3dadd( -6.8635, 70.0853, -2.73134, 2.14 ) }
    dend_1 { pt3dadd( -7.12746, 70.8791, -3.22665, 1.47 ) }
    dend_1 { pt3dadd( -7.54923, 72.113, -3.99647, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( -7.79809, 72.8684, -4.43262, 0.66 ) }
    dend_1 { pt3dadd( -7.94275, 73.3483, -4.66238, 0.59 ) }
    dend_1 { pt3dadd( -8.13416, 74.1163, -4.96119, 0.59 ) }
    dend_1 { pt3dadd( -8.26653, 74.7468, -5.14238, 0.59 ) }
    dend_1 { pt3dadd( -8.41491, 75.6351, -5.34632, 0.59 ) }
    dend_1 { pt3dadd( -8.64326, 77.3071, -5.60126, 1.47 ) }
    dend_1 { pt3dadd( -8.72414, 78.0096, -5.66434, 2.21 ) }
    dend_1 { pt3dadd( -8.78123, 78.6946, -5.6695, 2.21 ) }
    dend_1 { pt3dadd( -8.82985, 79.5979, -5.59737, 1.18 ) }
    dend_1 { pt3dadd( -8.84671, 80.3503, -5.46531, 0.59 ) }
    dend_1 { pt3dadd( -8.82915, 80.8198, -5.33926, 0.44 ) }
    dend_1 { pt3dadd( -8.7121, 81.7491, -4.99513, 0.44 ) }
    dend_1 { pt3dadd( -8.50885, 82.8507, -4.55708, 1.03 ) }
    dend_1 { pt3dadd( -8.40668, 83.2559, -4.37208, 1.33 ) }
    dend_1 { pt3dadd( -8.38204, 83.3275, -4.33824, 1.33 ) }
    dend_1 { pt3dadd( -8.11332, 83.9607, -3.98678, 1.47 ) }
    dend_1 { pt3dadd( -7.878, 84.4678, -3.71894, 1.33 ) }
    dend_1 { pt3dadd( -7.85086, 84.5291, -3.6913, 1.33 ) }
    dend_1 { pt3dadd( -7.38812, 85.7438, -3.21721, 0.81 ) }
    dend_1 { pt3dadd( -7.18178, 86.3964, -3.02972, 0.37 ) }
    dend_1 { pt3dadd( -6.95464, 87.3277, -2.83638, 0.29 ) }
    dend_1 { pt3dadd( -6.80072, 88.3153, -2.71897, 0.29 ) }
    dend_1 { pt3dadd( -6.71943, 89.2438, -2.70365, 0.29 ) }
    dend_1 { pt3dadd( -6.68638, 90.3143, -2.77376, 1.33 ) }
    dend_1 { pt3dadd( -6.7468, 91.85, -2.99156, 1.99 ) }
    dend_1 { pt3dadd( -6.81662, 92.5496, -3.11038, 1.77 ) }
    dend_1 { pt3dadd( -6.94671, 93.4828, -3.29966, 0.96 ) }
    dend_1 { pt3dadd( -7.14122, 94.6545, -3.51612, 0.44 ) }
    dend_1 { pt3dadd( -7.31784, 95.6346, -3.66587, 0.44 ) }
    dend_1 { pt3dadd( -7.45428, 96.3323, -3.75244, 0.29 ) }
    dend_1 { pt3dadd( -7.64655, 97.2724, -3.80073, 0.29 ) }
    dend_1 { pt3dadd( -7.66332, 97.3545, -3.80336, 0.29 ) }
    dend_1 { pt3dadd( -7.88764, 98.4484, -3.77459, 2.06 ) }
    dend_1 { pt3dadd( -8.079, 99.2643, -3.69769, 2.43 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 34/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 15.5378, -39.8213, 2.68258, 0.424038 ) }
    axon_1 { pt3dadd( 21.4967, -53.5869, 2.68258, 0.424038 ) }
    axon_1 { pt3dadd( 27.4557, -67.3525, 2.68258, 0.424038 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 37/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 76.5752, 1.85129, 76.3462, 0.29 ) }
    dend_58 { pt3dadd( 85.4032, 4.62457, 80.2307, 0.29 ) }
    dend_58 { pt3dadd( 93.4114, 7.99364, 85.2878, 0.29 ) }
    dend_58 { pt3dadd( 101.192, 10.8895, 90.9321, 0.29 ) }
    dend_58 { pt3dadd( 108.131, 15.032, 96.9561, 0.29 ) }
    dend_58 { pt3dadd( 114.306, 19.1002, 103.801, 0.29 ) }
    dend_58 { pt3dadd( 119.522, 24.4122, 110.672, 0.29 ) }
    dend_58 { pt3dadd( 124.716, 29.8414, 117.475, 0.29 ) }
    dend_58 { pt3dadd( 130.743, 35.5366, 123.328, 0.29 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 46/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 76.5752, 1.85129, 76.3462, 0.29 ) }
    dend_57 { pt3dadd( 84.9589, -0.280615, 81.4048, 0.29 ) }
    dend_57 { pt3dadd( 93.876, -3.88647, 84.353, 0.29 ) }
    dend_57 { pt3dadd( 102.41, -8.30816, 87.4268, 0.29 ) }
    dend_57 { pt3dadd( 110.537, -14.369, 88.2149, 0.29 ) }
    dend_57 { pt3dadd( 118.425, -20.3695, 90.48, 0.29 ) }
    dend_57 { pt3dadd( 125.998, -25.9373, 94.2918, 0.29 ) }
    dend_57 { pt3dadd( 133.065, -31.4533, 99.0304, 0.29 ) }
    dend_57 { pt3dadd( 138.906, -37.0959, 105.114, 0.29 ) }
    dend_57 { pt3dadd( 145.392, -43.2469, 109.974, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 56/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -180.37, 130.605, 41.628, 0.29 ) }
    dend_55 { pt3dadd( -188.585, 136.57, 42.1168, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 58/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -180.37, 130.605, 41.628, 0.29 ) }
    dend_54 { pt3dadd( -188.419, 136.818, 42.0861, 0.29 ) }
    dend_54 { pt3dadd( -196.551, 142.874, 42.8588, 0.29 ) }
    dend_54 { pt3dadd( -205.354, 147.714, 43.9796, 0.29 ) }
    dend_54 { pt3dadd( -215.033, 150.308, 44.4551, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 63/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 166.406, -99.6563, -103.766, 0.22 ) }
    dend_51 { pt3dadd( 167.765, -101.937, -105.99, 0.22 ) }
    dend_51 { pt3dadd( 167.964, -102.262, -106.292, 0.59 ) }
    dend_51 { pt3dadd( 168.347, -102.871, -106.83, 0.22 ) }
    dend_51 { pt3dadd( 168.537, -103.151, -107.042, 0.59 ) }
    dend_51 { pt3dadd( 169.441, -104.417, -107.888, 0.22 ) }
    dend_51 { pt3dadd( 169.838, -104.963, -108.207, 0.22 ) }
    dend_51 { pt3dadd( 170.32, -105.58, -108.422, 0.88 ) }
    dend_51 { pt3dadd( 170.574, -105.909, -108.495, 0.88 ) }
    dend_51 { pt3dadd( 171.599, -107.354, -108.626, 0.22 ) }
    dend_51 { pt3dadd( 171.957, -107.888, -108.613, 0.22 ) }
    dend_51 { pt3dadd( 172.279, -108.399, -108.551, 1.03 ) }
    dend_51 { pt3dadd( 172.47, -108.713, -108.504, 1.03 ) }
    dend_51 { pt3dadd( 173.488, -110.456, -108.177, 0.22 ) }
    dend_51 { pt3dadd( 174.415, -112.15, -107.845, 0.22 ) }
    dend_51 { pt3dadd( 174.815, -112.973, -107.674, 0.81 ) }
    dend_51 { pt3dadd( 175.027, -113.429, -107.582, 1.03 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 80/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 166.406, -99.6563, -103.766, 0.29 ) }
    dend_50 { pt3dadd( 168.616, -99.8944, -104.264, 0.29 ) }
    dend_50 { pt3dadd( 169.767, -100.017, -104.51, 0.22 ) }
    dend_50 { pt3dadd( 171.294, -100.185, -104.823, 0.22 ) }
    dend_50 { pt3dadd( 172.805, -100.385, -105.114, 0.88 ) }
    dend_50 { pt3dadd( 172.873, -100.395, -105.127, 0.88 ) }
    dend_50 { pt3dadd( 173.873, -100.566, -105.319, 0.22 ) }
    dend_50 { pt3dadd( 174.421, -100.666, -105.387, 0.66 ) }
    dend_50 { pt3dadd( 174.714, -100.727, -105.422, 0.66 ) }
    dend_50 { pt3dadd( 175.76, -100.995, -105.589, 0.22 ) }
    dend_50 { pt3dadd( 175.816, -101.015, -105.6, 0.22 ) }
    dend_50 { pt3dadd( 176.457, -101.286, -105.724, 1.03 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 92/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 17.1689, -31.6618, -16.3653, 0.29 ) }
    dend_42 { pt3dadd( 17.3185, -32.3987, -16.1426, 0.29 ) }
    dend_42 { pt3dadd( 17.3311, -32.4982, -16.1169, 0.29 ) }
    dend_42 { pt3dadd( 17.3583, -33.2892, -15.8928, 0.29 ) }
    dend_42 { pt3dadd( 17.3584, -33.4298, -15.8518, 0.29 ) }
    dend_42 { pt3dadd( 17.3369, -34.863, -15.4046, 1.33 ) }
    dend_42 { pt3dadd( 17.312, -35.701, -15.1457, 2.06 ) }
    dend_42 { pt3dadd( 17.2799, -36.5729, -14.8762, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_42 { pt3dadd( 17.2202, -38.1972, -14.3914, 0.74 ) }
    dend_42 { pt3dadd( 17.2171, -38.2675, -14.3712, 0.74 ) }
    dend_42 { pt3dadd( 17.1935, -39.4575, -14.0641, 0.22 ) }
    dend_42 { pt3dadd( 17.2009, -40.2953, -13.9128, 0.22 ) }
    dend_42 { pt3dadd( 17.2343, -40.9419, -13.8295, 0.22 ) }
    dend_42 { pt3dadd( 17.3049, -41.7231, -13.8102, 0.22 ) }
    dend_42 { pt3dadd( 17.3433, -42.0239, -13.8345, 0.88 ) }
    dend_42 { pt3dadd( 17.4433, -42.7903, -13.9332, 1.25 ) }
    dend_42 { pt3dadd( 17.5791, -43.7947, -14.1233, 1.33 ) }
    dend_42 { pt3dadd( 17.6696, -44.4662, -14.2591, 0.74 ) }
    dend_42 { pt3dadd( 17.809, -45.6941, -14.5305, 0.22 ) }
    dend_42 { pt3dadd( 17.8175, -45.7639, -14.5507, 0.22 ) }
    dend_42 { pt3dadd( 17.913, -46.5606, -14.8294, 0.22 ) }
    dend_42 { pt3dadd( 17.9743, -47.0769, -15.031, 0.81 ) }
    dend_42 { pt3dadd( 18.0427, -47.5711, -15.2279, 1.03 ) }
    dend_42 { pt3dadd( 18.2077, -48.6179, -15.6945, 0.29 ) }
    dend_42 { pt3dadd( 18.4205, -49.8279, -16.2705, 0.22 ) }
    dend_42 { pt3dadd( 18.5605, -50.4631, -16.5836, 1.33 ) }
    dend_42 { pt3dadd( 18.6758, -50.8452, -16.7935, 1.4 ) }
    dend_42 { pt3dadd( 18.9118, -51.4896, -17.1678, 0.59 ) }
    dend_42 { pt3dadd( 19.3236, -52.3327, -17.6609, 0.22 ) }
    dend_42 { pt3dadd( 19.4052, -52.4386, -17.7362, 0.22 ) }
    dend_42 { pt3dadd( 19.8908, -52.9474, -18.1345, 0.22 ) }
    dend_42 { pt3dadd( 20.6383, -53.5908, -18.7041, 2.06 ) }
    dend_42 { pt3dadd( 20.6882, -53.6269, -18.7391, 2.06 ) }
    dend_42 { pt3dadd( 21.4354, -54.1, -19.2346, 2.5 ) }
    dend_42 { pt3dadd( 23.6179, -55.3908, -20.4528, 0.29 ) }
    dend_42 { pt3dadd( 23.6738, -55.4244, -20.4803, 0.29 ) }
    dend_42 { pt3dadd( 24.2652, -55.7925, -20.7257, 0.15 ) }
    dend_42 { pt3dadd( 25.0854, -56.3515, -20.9483, 0.15 ) }
    dend_42 { pt3dadd( 25.1499, -56.3999, -20.9594, 0.15 ) }
    dend_42 { pt3dadd( 26.3032, -57.3594, -21.0006, 0.74 ) }
    dend_42 { pt3dadd( 26.7991, -57.829, -20.9124, 1.03 ) }
    dend_42 { pt3dadd( 27.3924, -58.43, -20.7857, 0.66 ) }
    dend_42 { pt3dadd( 28.2674, -59.394, -20.513, 0.22 ) }
    dend_42 { pt3dadd( 28.3754, -59.5179, -20.4703, 0.22 ) }
    dend_42 { pt3dadd( 28.591, -59.7619, -20.3749, 0.22 ) }
    dend_42 { pt3dadd( 29.0859, -60.3117, -20.1422, 1.4 ) }
    dend_42 { pt3dadd( 29.4743, -60.7345, -19.9798, 2.06 ) }
    dend_42 { pt3dadd( 30.3013, -61.6411, -19.6699, 2.14 ) }
    dend_42 { pt3dadd( 30.3712, -61.7208, -19.6444, 2.14 ) }
    dend_42 { pt3dadd( 30.734, -62.1589, -19.5123, 2.14 ) }
    dend_42 { pt3dadd( 31.8312, -63.5808, -19.1269, 0.29 ) }
    dend_42 { pt3dadd( 32.7232, -64.8308, -18.8483, 0.29 ) }
    dend_42 { pt3dadd( 33.2321, -65.5635, -18.7195, 0.96 ) }
    dend_42 { pt3dadd( 33.7858, -66.3887, -18.6388, 1.47 ) }
    dend_42 { pt3dadd( 34.2777, -67.1305, -18.5911, 1.47 ) }
    dend_42 { pt3dadd( 34.6673, -67.7354, -18.5745, 0.59 ) }
    dend_42 { pt3dadd( 35.3835, -68.8867, -18.6183, 0.29 ) }
    dend_42 { pt3dadd( 36.0601, -69.9641, -18.7168, 0.15 ) }
    dend_42 { pt3dadd( 36.7187, -70.9198, -18.8562, 1.33 ) }
    dend_42 { pt3dadd( 36.7611, -70.977, -18.8674, 1.33 ) }
    dend_42 { pt3dadd( 37.145, -71.4779, -18.967, 1.77 ) }
    dend_42 { pt3dadd( 38.4032, -73.0418, -19.2589, 0.22 ) }
    dend_42 { pt3dadd( 38.4485, -73.0971, -19.2675, 0.22 ) }
    dend_42 { pt3dadd( 39.0029, -73.8237, -19.3437, 0.22 ) }
    dend_42 { pt3dadd( 39.1325, -74.0084, -19.3699, 0.22 ) }
    dend_42 { pt3dadd( 39.9475, -75.2794, -19.5898, 0.22 ) }
    dend_42 { pt3dadd( 40.3769, -76.033, -19.6927, 1.62 ) }
    dend_42 { pt3dadd( 40.7161, -76.7049, -19.767, 1.84 ) }
    dend_42 { pt3dadd( 41.6533, -78.7507, -19.9471, 0.22 ) }
    dend_42 { pt3dadd( 42.2743, -80.2985, -19.95, 0.81 ) }
    dend_42 { pt3dadd( 42.6161, -81.2177, -19.8469, 1.03 ) }
    dend_42 { pt3dadd( 43.1215, -82.7345, -19.4063, 0.29 ) }
    dend_42 { pt3dadd( 43.1437, -82.8076, -19.3737, 0.29 ) }
    dend_42 { pt3dadd( 43.3856, -83.7141, -18.8331, 0.29 ) }
    dend_42 { pt3dadd( 43.7675, -85.3488, -17.577, 1.84 ) }
    dend_42 { pt3dadd( 43.9799, -86.4065, -16.6769, 2.5 ) }
    dend_42 { pt3dadd( 44.232, -87.6535, -15.6111, 1.84 ) }
    dend_42 { pt3dadd( 44.2441, -87.7092, -15.5671, 1.84 ) }
    dend_42 { pt3dadd( 44.5027, -88.8841, -14.6981, 0.15 ) }
    dend_42 { pt3dadd( 44.5293, -89.0132, -14.6164, 0.15 ) }
    dend_42 { pt3dadd( 44.6768, -89.8107, -14.2589, 0.15 ) }
    dend_42 { pt3dadd( 44.7992, -90.8081, -13.8513, 0.15 ) }
    dend_42 { pt3dadd( 44.8763, -91.8257, -13.4135, 0.44 ) }
    dend_42 { pt3dadd( 44.8798, -91.9011, -13.3783, 0.44 ) }
    dend_42 { pt3dadd( 44.9071, -92.7272, -12.9805, 0.44 ) }
    dend_42 { pt3dadd( 44.9035, -94.356, -12.2374, 0.29 ) }
    dend_42 { pt3dadd( 44.855, -95.5908, -11.7301, 0.29 ) }
    dend_42 { pt3dadd( 44.753, -96.6661, -11.3394, 1.4 ) }
    dend_42 { pt3dadd( 44.6784, -97.3341, -11.1276, 1.77 ) }
    dend_42 { pt3dadd( 44.5799, -98.2115, -10.8658, 1.77 ) }
    dend_42 { pt3dadd( 44.3981, -99.7436, -10.4639, 0.29 ) }
    dend_42 { pt3dadd( 44.2241, -101.171, -10.2126, 0.22 ) }
    dend_42 { pt3dadd( 44.0998, -102.217, -10.0903, 1.62 ) }
    dend_42 { pt3dadd( 44.0247, -102.83, -10.0503, 1.92 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 86/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 17.1689, -31.6618, -16.3653, 0.22 ) }
    dend_41 { pt3dadd( 16.1949, -32.1743, -17.0445, 0.22 ) }
    dend_41 { pt3dadd( 15.3973, -32.646, -17.6544, 0.22 ) }
    dend_41 { pt3dadd( 14.4736, -33.2211, -18.3534, 0.88 ) }
    dend_41 { pt3dadd( 14.0017, -33.5297, -18.7558, 1.03 ) }
    dend_41 { pt3dadd( 12.672, -34.3993, -19.9857, 0.22 ) }
    dend_41 { pt3dadd( 11.8543, -34.9453, -20.7896, 0.22 ) }
    dend_41 { pt3dadd( 11.2777, -35.3568, -21.4461, 1.11 ) }
    dend_41 { pt3dadd( 10.8874, -35.6643, -21.9356, 1.11 ) }
    dend_41 { pt3dadd( 9.65898, -36.6716, -23.5361, 0.29 ) }
    dend_41 { pt3dadd( 8.70493, -37.4454, -24.7661, 1.77 ) }
    dend_41 { pt3dadd( 8.2142, -37.8362, -25.3716, 1.77 ) }
    dend_41 { pt3dadd( 7.323, -38.5033, -26.4375, 0.29 ) }
    dend_41 { pt3dadd( 6.78022, -38.9043, -27.0426, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_41 { pt3dadd( 6.72957, -38.9413, -27.0935, 0.81 ) }
    dend_41 { pt3dadd( 6.41175, -39.1682, -27.355, 0.81 ) }
    dend_41 { pt3dadd( 5.38089, -39.938, -28.0896, 0.22 ) }
    dend_41 { pt3dadd( 4.63478, -40.4958, -28.5732, 1.62 ) }
    dend_41 { pt3dadd( 4.23696, -40.7931, -28.8067, 1.92 ) }
    dend_41 { pt3dadd( 2.90624, -41.7739, -29.5653, 0.22 ) }
    dend_41 { pt3dadd( 2.85434, -41.8117, -29.5955, 0.22 ) }
    dend_41 { pt3dadd( 2.17412, -42.306, -30.0032, 0.22 ) }
    dend_41 { pt3dadd( 1.38859, -42.8792, -30.4393, 0.66 ) }
    dend_41 { pt3dadd( 0.960526, -43.1879, -30.661, 0.66 ) }
    dend_41 { pt3dadd( -0.338946, -44.0956, -31.2919, 0.22 ) }
    dend_41 { pt3dadd( -1.32207, -44.791, -31.7205, 2.14 ) }
    dend_41 { pt3dadd( -1.89498, -45.195, -31.9609, 2.28 ) }
    dend_41 { pt3dadd( -3.38975, -46.2423, -32.5222, 0.22 ) }
    dend_41 { pt3dadd( -3.45282, -46.2895, -32.5422, 0.22 ) }
    dend_41 { pt3dadd( -4.18509, -46.9008, -32.7651, 1.18 ) }
    dend_41 { pt3dadd( -4.65218, -47.3302, -32.8935, 0.88 ) }
    dend_41 { pt3dadd( -4.70275, -47.379, -32.9068, 0.88 ) }
    dend_41 { pt3dadd( -5.64689, -48.4065, -33.3037, 0.22 ) }
    dend_41 { pt3dadd( -5.98021, -48.7932, -33.4797, 0.66 ) }
    dend_41 { pt3dadd( -7.0435, -50.0704, -34.0979, 0.22 ) }
    dend_41 { pt3dadd( -7.60723, -50.7815, -34.4548, 1.69 ) }
    dend_41 { pt3dadd( -7.97451, -51.2584, -34.6973, 1.99 ) }
    dend_41 { pt3dadd( -10.0868, -54.0286, -36.2631, 0.22 ) }
    dend_41 { pt3dadd( -10.3518, -54.3778, -36.4778, 0.44 ) }
    dend_41 { pt3dadd( -10.435, -54.487, -36.5468, 0.44 ) }
    dend_41 { pt3dadd( -11.3188, -55.6426, -37.2983, 0.22 ) }
    dend_41 { pt3dadd( -11.9331, -56.4404, -37.814, 1.62 ) }
    dend_41 { pt3dadd( -13.3077, -58.1827, -38.9483, 0.22 ) }
    dend_41 { pt3dadd( -13.5989, -58.5283, -39.1694, 0.44 ) }
    dend_41 { pt3dadd( -13.8292, -58.7997, -39.349, 0.44 ) }
    dend_41 { pt3dadd( -14.5216, -59.595, -39.8914, 0.22 ) }
    dend_41 { pt3dadd( -15.0844, -60.2185, -40.3513, 1.4 ) }
    dend_41 { pt3dadd( -15.4728, -60.6641, -40.6749, 1.4 ) }
    dend_41 { pt3dadd( -15.5198, -60.7251, -40.7034, 1.4 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 35/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 208.386, -84.0942, 44.7935, 0.29 ) }
    dend_38 { pt3dadd( 217.901, -87.0102, 46.1154, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 37/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 208.386, -84.0942, 44.7935, 0.29 ) }
    dend_37 { pt3dadd( 217.435, -86.9381, 48.0773, 0.29 ) }
    dend_37 { pt3dadd( 226.334, -88.518, 52.3824, 0.29 ) }
    dend_37 { pt3dadd( 235.173, -91.6688, 55.97, 0.29 ) }
    dend_37 { pt3dadd( 244.525, -93.9003, 58.8021, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 42/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.29543, -27.6793, -3.75625, 0.29 ) }
    dend_33 { pt3dadd( -2.06905, -28.274, -3.10185, 0.29 ) }
    dend_33 { pt3dadd( -2.89609, -29.1286, -2.31868, 0.81 ) }
    dend_33 { pt3dadd( -3.31831, -29.617, -1.89688, 1.11 ) }
    dend_33 { pt3dadd( -3.69695, -30.1194, -1.50541, 1.03 ) }
    dend_33 { pt3dadd( -5.06468, -32.0682, -0.0704131, 0.74 ) }
    dend_33 { pt3dadd( -5.39771, -32.6063, 0.319541, 0.81 ) }
    dend_33 { pt3dadd( -5.88433, -33.7795, 1.09684, 0.81 ) }
    dend_33 { pt3dadd( -5.89871, -33.8313, 1.12784, 0.81 ) }
    dend_33 { pt3dadd( -6.07403, -34.6727, 1.61574, 0.66 ) }
    dend_33 { pt3dadd( -6.08423, -34.7364, 1.64921, 0.66 ) }
    dend_33 { pt3dadd( -6.22934, -36.0819, 2.18128, 0.44 ) }
    dend_33 { pt3dadd( -6.37783, -37.2924, 2.63556, 0.29 ) }
    dend_33 { pt3dadd( -6.50977, -38.0807, 2.88833, 0.29 ) }
    dend_33 { pt3dadd( -6.52825, -38.1595, 2.90882, 0.29 ) }
    dend_33 { pt3dadd( -6.72432, -38.7752, 3.02811, 1.18 ) }
    dend_33 { pt3dadd( -7.03032, -39.503, 3.11334, 1.47 ) }
    dend_33 { pt3dadd( -7.35177, -40.0711, 3.14404, 1.62 ) }
    dend_33 { pt3dadd( -7.82173, -40.7739, 3.1733, 1.47 ) }
    dend_33 { pt3dadd( -8.49879, -41.625, 3.25724, 0.66 ) }
    dend_33 { pt3dadd( -9.10312, -42.264, 3.49695, 0.44 ) }
    dend_33 { pt3dadd( -9.72611, -42.8196, 4.30743, 0.44 ) }
    dend_33 { pt3dadd( -10.1699, -43.2097, 5.07881, 0.59 ) }
    dend_33 { pt3dadd( -10.1988, -43.2369, 5.13704, 0.59 ) }
    dend_33 { pt3dadd( -10.645, -43.6947, 6.14371, 0.96 ) }
    dend_33 { pt3dadd( -11.6714, -44.934, 8.81481, 2.28 ) }
    dend_33 { pt3dadd( -13.4501, -47.4491, 14.0011, 0.66 ) }
    dend_33 { pt3dadd( -13.7372, -47.9685, 15.0105, 0.88 ) }
    dend_33 { pt3dadd( -14.0294, -48.575, 16.1561, 0.59 ) }
    dend_33 { pt3dadd( -14.2837, -49.1655, 17.2203, 1.25 ) }
    dend_33 { pt3dadd( -14.5698, -49.9385, 18.4889, 1.69 ) }
    dend_33 { pt3dadd( -14.6913, -50.2842, 18.9744, 1.62 ) }
    dend_33 { pt3dadd( -15.3725, -51.9936, 21.1021, 0.59 ) }
    dend_33 { pt3dadd( -15.828, -52.8073, 22.2694, 0.29 ) }
    dend_33 { pt3dadd( -15.8622, -52.845, 22.3322, 0.29 ) }
    dend_33 { pt3dadd( -16.2535, -53.1334, 22.8717, 0.29 ) }
    dend_33 { pt3dadd( -16.8968, -53.4659, 23.5042, 1.4 ) }
    dend_33 { pt3dadd( -17.3591, -53.6933, 23.8729, 1.62 ) }
    dend_33 { pt3dadd( -18.1091, -54.0603, 24.2999, 1.55 ) }
    dend_33 { pt3dadd( -19.1438, -54.7334, 24.9482, 0.52 ) }
    dend_33 { pt3dadd( -19.1915, -54.7719, 24.9839, 0.52 ) }
    dend_33 { pt3dadd( -19.7594, -55.3955, 25.525, 0.52 ) }
    dend_33 { pt3dadd( -20.1908, -56.0912, 26.0655, 0.44 ) }
    dend_33 { pt3dadd( -20.2048, -56.1414, 26.099, 0.44 ) }
    dend_33 { pt3dadd( -20.0802, -57.2726, 26.6051, 0.37 ) }
    dend_33 { pt3dadd( -19.8801, -57.9436, 26.7735, 0.88 ) }
    dend_33 { pt3dadd( -19.7455, -58.4092, 26.844, 1.03 ) }
    dend_33 { pt3dadd( -19.7244, -58.4791, 26.8496, 1.03 ) }
    dend_33 { pt3dadd( -19.4948, -59.4452, 26.8554, 0.59 ) }
    dend_33 { pt3dadd( -19.2791, -60.8015, 26.8106, 0.29 ) }
    dend_33 { pt3dadd( -19.2412, -61.9872, 26.7818, 0.29 ) }
    dend_33 { pt3dadd( -19.3803, -63.1128, 26.8706, 0.44 ) }
    dend_33 { pt3dadd( -19.4011, -63.1795, 26.8914, 0.44 ) }
    dend_33 { pt3dadd( -19.7397, -63.7837, 27.2357, 0.88 ) }
    dend_33 { pt3dadd( -19.964, -64.061, 27.4673, 0.88 ) }
    dend_33 { pt3dadd( -20.8391, -64.9336, 28.3973, 0.96 ) }
    dend_33 { pt3dadd( -21.3569, -65.3789, 28.9723, 1.25 ) }
    dend_33 { pt3dadd( -22.4152, -66.2329, 30.1887, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_33 { pt3dadd( -23.2281, -66.8486, 31.1004, 0.37 ) }
    dend_33 { pt3dadd( -24.0396, -67.4259, 32.0015, 0.37 ) }
    dend_33 { pt3dadd( -24.65, -67.8298, 32.6492, 0.66 ) }
    dend_33 { pt3dadd( -25.6258, -68.3823, 33.6062, 0.81 ) }
    dend_33 { pt3dadd( -25.676, -68.4021, 33.6511, 0.81 ) }
    dend_33 { pt3dadd( -26.1771, -68.5654, 34.0594, 0.81 ) }
    dend_33 { pt3dadd( -26.2224, -68.5734, 34.0981, 0.81 ) }
    dend_33 { pt3dadd( -26.9839, -68.6056, 34.7218, 0.96 ) }
    dend_33 { pt3dadd( -28.1423, -68.5648, 35.6421, 1.33 ) }
    dend_33 { pt3dadd( -29.2665, -68.4763, 36.5509, 1.99 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 10/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.29543, -27.6793, -3.75625, 0.59 ) }
    dend_26 { pt3dadd( -1.788, -29.5368, -3.63856, 0.59 ) }
    dend_26 { pt3dadd( -1.99827, -30.7276, -3.57119, 0.59 ) }
    dend_26 { pt3dadd( -2.21547, -32.37, -3.51489, 0.96 ) }
    dend_26 { pt3dadd( -2.3215, -33.3715, -3.49113, 1.25 ) }
    dend_26 { pt3dadd( -2.44424, -34.7981, -3.47297, 1.25 ) }
    dend_26 { pt3dadd( -2.56451, -36.4013, -3.46314, 1.25 ) }
    dend_26 { pt3dadd( -2.59027, -38.2503, -3.43802, 1.25 ) }
    dend_26 { pt3dadd( -2.5634, -39.6503, -3.45374, 2.06 ) }
    dend_26 { pt3dadd( -2.54539, -40.4207, -3.4783, 2.21 ) }
    dend_26 { pt3dadd( -2.52784, -41.357, -3.50514, 1.77 ) }
    dend_26 { pt3dadd( -2.51048, -42.0527, -3.53903, 1.4 ) }
    dend_26 { pt3dadd( -2.44842, -43.5378, -3.63957, 0.74 ) }
    dend_26 { pt3dadd( -2.40162, -44.6073, -3.71366, 0.59 ) }
    dend_26 { pt3dadd( -2.31152, -46.5549, -3.8398, 0.59 ) }
    dend_26 { pt3dadd( -2.24529, -47.9809, -3.93578, 1.47 ) }
    dend_26 { pt3dadd( -2.18175, -49.2475, -4.02192, 2.43 ) }
    dend_26 { pt3dadd( -2.13524, -50.0211, -4.08106, 2.5 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 28/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 5.818, 11.9691, -6.75416, 0.81 ) }
    dend_21 { pt3dadd( 7.51214, 10.7672, -5.14486, 0.81 ) }
    dend_21 { pt3dadd( 7.55935, 10.725, -5.09429, 0.81 ) }
    dend_21 { pt3dadd( 8.70241, 9.60536, -3.80878, 0.74 ) }
    dend_21 { pt3dadd( 9.50206, 8.80425, -2.9083, 0.74 ) }
    dend_21 { pt3dadd( 10.5928, 7.74862, -1.66229, 0.59 ) }
    dend_21 { pt3dadd( 11.482, 6.93694, -0.597663, 0.44 ) }
    dend_21 { pt3dadd( 12.3376, 6.22309, 0.357449, 0.44 ) }
    dend_21 { pt3dadd( 12.379, 6.1941, 0.406661, 0.44 ) }
    dend_21 { pt3dadd( 12.9634, 5.88985, 1.11348, 1.18 ) }
    dend_21 { pt3dadd( 13.7283, 5.64237, 2.01603, 1.4 ) }
    dend_21 { pt3dadd( 14.7151, 5.49496, 3.00288, 0.37 ) }
    dend_21 { pt3dadd( 15.4892, 5.45206, 3.62401, 0.37 ) }
    dend_21 { pt3dadd( 16.7971, 5.38905, 4.47505, 0.37 ) }
    dend_21 { pt3dadd( 17.7559, 5.28721, 5.04922, 0.29 ) }
    dend_21 { pt3dadd( 17.8718, 5.27284, 5.12659, 0.29 ) }
    dend_21 { pt3dadd( 18.4576, 5.20241, 5.56709, 0.74 ) }
    dend_21 { pt3dadd( 19.0649, 5.14733, 6.07711, 0.88 ) }
    dend_21 { pt3dadd( 19.9762, 5.1174, 6.93954, 0.29 ) }
    dend_21 { pt3dadd( 20.9287, 5.16992, 7.90289, 1.25 ) }
    dend_21 { pt3dadd( 22.6682, 5.44125, 9.81828, 0.88 ) }
    dend_21 { pt3dadd( 23.6805, 5.71052, 10.9557, 0.44 ) }
    dend_21 { pt3dadd( 24.1788, 5.89615, 11.5367, 0.88 ) }
    dend_21 { pt3dadd( 24.5989, 6.09406, 12.0386, 0.88 ) }
    dend_21 { pt3dadd( 24.8423, 6.2172, 12.3275, 1.11 ) }
    dend_21 { pt3dadd( 24.9142, 6.24724, 12.4005, 1.11 ) }
    dend_21 { pt3dadd( 26.1647, 6.51257, 13.4129, 0.29 ) }
    dend_21 { pt3dadd( 26.3666, 6.51693, 13.5778, 0.59 ) }
    dend_21 { pt3dadd( 26.4651, 6.49047, 13.6741, 0.59 ) }
    dend_21 { pt3dadd( 27.3265, 6.03905, 14.5973, 0.29 ) }
    dend_21 { pt3dadd( 27.9598, 5.58511, 15.3031, 1.11 ) }
    dend_21 { pt3dadd( 28.3552, 5.23158, 15.7592, 1.33 ) }
    dend_21 { pt3dadd( 28.3916, 5.19, 15.804, 1.33 ) }
    dend_21 { pt3dadd( 29.2512, 4.15841, 16.8985, 0.22 ) }
    dend_21 { pt3dadd( 29.5329, 3.7953, 17.2612, 0.59 ) }
    dend_21 { pt3dadd( 29.613, 3.67729, 17.3605, 0.59 ) }
    dend_21 { pt3dadd( 29.6423, 3.62273, 17.3971, 0.59 ) }
    dend_21 { pt3dadd( 35.336, -0.236614, 24.7505, 0.59 ) }
    dend_21 { pt3dadd( 42.1482, -2.45223, 31.7605, 0.59 ) }
    dend_21 { pt3dadd( 49.2624, -3.61985, 38.6997, 0.59 ) }
    dend_21 { pt3dadd( 55.7659, -6.84702, 45.6465, 0.59 ) }
    dend_21 { pt3dadd( 62.1932, -10.5211, 52.4616, 0.59 ) }
    dend_21 { pt3dadd( 68.3811, -14.8688, 59.1373, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 71/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 5.818, 11.9691, -6.75416, 0.88 ) }
    dend_18 { pt3dadd( 8.36633, 11.3262, -9.14833, 0.88 ) }
    dend_18 { pt3dadd( 8.41986, 11.3145, -9.19204, 0.88 ) }
    dend_18 { pt3dadd( 10.0594, 11.0728, -10.4844, 0.88 ) }
    dend_18 { pt3dadd( 10.7583, 11.032, -11.0253, 0.88 ) }
    dend_18 { pt3dadd( 11.7612, 11.0405, -11.7901, 0.88 ) }
    dend_18 { pt3dadd( 12.5887, 11.1049, -12.4003, 1.03 ) }
    dend_18 { pt3dadd( 12.9824, 11.1917, -12.602, 1.03 ) }
    dend_18 { pt3dadd( 14.1371, 11.6067, -13.1767, 0.59 ) }
    dend_18 { pt3dadd( 14.8986, 12.0779, -13.5249, 0.52 ) }
    dend_18 { pt3dadd( 15.0807, 12.2048, -13.5995, 0.52 ) }
    dend_18 { pt3dadd( 15.6397, 12.5781, -13.7577, 0.52 ) }
    dend_18 { pt3dadd( 15.6998, 12.613, -13.7712, 0.52 ) }
    dend_18 { pt3dadd( 16.1415, 12.745, -13.8194, 0.44 ) }
    dend_18 { pt3dadd( 16.5815, 12.7501, -13.8194, 0.44 ) }
    dend_18 { pt3dadd( 17.5423, 12.6261, -13.7555, 1.18 ) }
    dend_18 { pt3dadd( 18.0967, 12.5313, -13.6985, 1.62 ) }
    dend_18 { pt3dadd( 18.175, 12.5177, -13.6885, 1.62 ) }
    dend_18 { pt3dadd( 18.9585, 12.4569, -13.579, 1.62 ) }
    dend_18 { pt3dadd( 19.5457, 12.4577, -13.4882, 1.18 ) }
    dend_18 { pt3dadd( 20.8259, 12.6158, -13.3168, 0.37 ) }
    dend_18 { pt3dadd( 21.4755, 12.7871, -13.2448, 0.37 ) }
    dend_18 { pt3dadd( 21.8828, 12.9595, -13.2168, 0.37 ) }
    dend_18 { pt3dadd( 22.9257, 13.5389, -13.2176, 0.37 ) }
    dend_18 { pt3dadd( 22.9837, 13.5797, -13.2217, 0.37 ) }
    dend_18 { pt3dadd( 23.6119, 14.075, -13.3426, 0.81 ) }
    dend_18 { pt3dadd( 23.7841, 14.2234, -13.4034, 1.33 ) }
    dend_18 { pt3dadd( 24.5366, 14.8285, -13.6945, 1.47 ) }
    dend_18 { pt3dadd( 25.1294, 15.2576, -13.9299, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_18 { pt3dadd( 25.4705, 15.4756, -14.0661, 1.77 ) }
    dend_18 { pt3dadd( 26.3376, 15.9571, -14.3885, 0.96 ) }
    dend_18 { pt3dadd( 27.5155, 16.4731, -14.8198, 0.29 ) }
    dend_18 { pt3dadd( 28.0978, 16.6764, -15.0625, 0.52 ) }
    dend_18 { pt3dadd( 28.1636, 16.6949, -15.1045, 0.52 ) }
    dend_18 { pt3dadd( 28.5495, 16.8044, -15.3913, 0.52 ) }
    dend_18 { pt3dadd( 29.2247, 17.0011, -15.9408, 0.29 ) }
    dend_18 { pt3dadd( 30.2383, 17.2904, -16.7857, 1.33 ) }
    dend_18 { pt3dadd( 31.0249, 17.5316, -17.4656, 1.69 ) }
    dend_18 { pt3dadd( 32.9735, 18.2375, -19.1402, 0.66 ) }
    dend_18 { pt3dadd( 33.7441, 18.5413, -19.7736, 0.22 ) }
    dend_18 { pt3dadd( 33.8979, 18.6099, -19.9042, 0.22 ) }
    dend_18 { pt3dadd( 34.4758, 18.9015, -20.4041, 0.22 ) }
    dend_18 { pt3dadd( 35.6613, 19.5222, -21.3488, 2.06 ) }
    dend_18 { pt3dadd( 36.3046, 19.8338, -21.7497, 3.09 ) }
    dend_18 { pt3dadd( 36.8273, 20.0527, -21.9266, 3.39 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 16/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.50656, 33.4331, -11.0967, 0.29 ) }
    dend_14 { pt3dadd( 2.66817, 34.3267, -9.95772, 0.29 ) }
    dend_14 { pt3dadd( 2.73681, 34.7724, -9.41079, 0.52 ) }
    dend_14 { pt3dadd( 2.84896, 35.6926, -8.34731, 1.11 ) }
    dend_14 { pt3dadd( 2.95864, 36.7359, -7.18795, 1.55 ) }
    dend_14 { pt3dadd( 2.99936, 37.2638, -6.63492, 1.55 ) }
    dend_14 { pt3dadd( 3.14813, 39.7555, -4.12482, 0.44 ) }
    dend_14 { pt3dadd( 3.14427, 40.357, -3.5664, 0.44 ) }
    dend_14 { pt3dadd( 3.1275, 40.7814, -3.16638, 0.52 ) }
    dend_14 { pt3dadd( 3.12371, 40.8832, -3.06545, 0.52 ) }
    dend_14 { pt3dadd( 3.07327, 41.3414, -2.40603, 0.52 ) }
    dend_14 { pt3dadd( 3.06281, 41.3819, -2.31435, 0.52 ) }
    dend_14 { pt3dadd( 2.97711, 41.5884, -1.71763, 0.52 ) }
    dend_14 { pt3dadd( 2.96855, 41.6059, -1.66064, 0.52 ) }
    dend_14 { pt3dadd( 2.69777, 42.1375, -0.0181261, 1.4 ) }
    dend_14 { pt3dadd( 2.15118, 43.2404, 3.14714, 1.03 ) }
    dend_14 { pt3dadd( 1.87084, 43.8307, 4.73251, 1.18 ) }
    dend_14 { pt3dadd( 1.73976, 44.1231, 5.43369, 1.18 ) }
    dend_14 { pt3dadd( 1.47696, 44.8246, 6.86819, 1.25 ) }
    dend_14 { pt3dadd( 1.29867, 45.4676, 7.94046, 0.37 ) }
    dend_14 { pt3dadd( 1.24593, 45.7879, 8.35354, 0.74 ) }
    dend_14 { pt3dadd( 1.24812, 46.1052, 8.67337, 0.88 ) }
    dend_14 { pt3dadd( 1.27688, 46.3784, 8.93023, 0.88 ) }
    dend_14 { pt3dadd( 1.55724, 47.7476, 10.2038, 0.29 ) }
    dend_14 { pt3dadd( 1.78428, 48.4971, 10.8733, 0.29 ) }
    dend_14 { pt3dadd( 2.25938, 49.724, 12.008, 1.18 ) }
    dend_14 { pt3dadd( 2.30379, 49.8301, 12.1095, 1.18 ) }
    dend_14 { pt3dadd( 2.46774, 50.1928, 12.4756, 1.4 ) }
    dend_14 { pt3dadd( 2.67008, 50.5906, 12.8462, 1.62 ) }
    dend_14 { pt3dadd( 2.71702, 50.6707, 12.9034, 1.62 ) }
    dend_14 { pt3dadd( 2.92711, 51.0542, 13.1573, 1.62 ) }
    dend_14 { pt3dadd( 2.98882, 51.1958, 13.2593, 1.62 ) }
    dend_14 { pt3dadd( 3.21238, 52.1148, 14.0924, 1.25 ) }
    dend_14 { pt3dadd( 3.40333, 53.0198, 14.9753, 0.44 ) }
    dend_14 { pt3dadd( 3.48223, 53.5059, 15.4775, 0.59 ) }
    dend_14 { pt3dadd( 3.58754, 54.3715, 16.4046, 0.37 ) }
    dend_14 { pt3dadd( 3.64441, 55.3692, 17.5291, 0.96 ) }
    dend_14 { pt3dadd( 3.61579, 56.4466, 18.7592, 2.06 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 54/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.50656, 33.4331, -11.0967, 0.66 ) }
    dend_11 { pt3dadd( 2.8919, 33.8458, -11.27, 0.66 ) }
    dend_11 { pt3dadd( 3.84278, 34.7413, -11.6244, 0.37 ) }
    dend_11 { pt3dadd( 4.74277, 35.3919, -11.8987, 0.29 ) }
    dend_11 { pt3dadd( 4.81371, 35.4282, -11.9118, 0.22 ) }
    dend_11 { pt3dadd( 5.60462, 35.7664, -12.0163, 0.81 ) }
    dend_11 { pt3dadd( 5.73365, 35.8216, -12.0299, 0.81 ) }
    dend_11 { pt3dadd( 6.42397, 36.0682, -12.0659, 1.11 ) }
    dend_11 { pt3dadd( 7.35497, 36.3808, -12.0592, 0.88 ) }
    dend_11 { pt3dadd( 8.45294, 36.835, -12.001, 0.22 ) }
    dend_11 { pt3dadd( 8.51213, 36.8742, -11.9994, 0.22 ) }
    dend_11 { pt3dadd( 9.1192, 37.3804, -12.0011, 0.74 ) }
    dend_11 { pt3dadd( 9.50196, 37.7396, -12.0124, 1.11 ) }
    dend_11 { pt3dadd( 9.92854, 38.2271, -12.0489, 1.11 ) }
    dend_11 { pt3dadd( 10.25, 38.6632, -12.0921, 0.52 ) }
    dend_11 { pt3dadd( 10.7614, 39.4512, -12.2257, 0.22 ) }
    dend_11 { pt3dadd( 11.2378, 40.225, -12.3507, 0.22 ) }
    dend_11 { pt3dadd( 11.4836, 40.6339, -12.4135, 0.22 ) }
    dend_11 { pt3dadd( 11.9605, 41.4286, -12.5264, 1.11 ) }
    dend_11 { pt3dadd( 12.2323, 41.8976, -12.6062, 1.11 ) }
    dend_11 { pt3dadd( 12.8895, 42.9995, -12.8143, 0.22 ) }
    dend_11 { pt3dadd( 13.6649, 44.3027, -13.0738, 1.99 ) }
    dend_11 { pt3dadd( 13.865, 44.6475, -13.139, 2.73 ) }
    dend_11 { pt3dadd( 14.1383, 45.117, -13.1944, 2.8 ) }
    dend_11 { pt3dadd( 14.936, 46.4311, -13.2678, 0.29 ) }
    dend_11 { pt3dadd( 15.7673, 47.8137, -13.263, 0.22 ) }
    dend_11 { pt3dadd( 15.8179, 47.9029, -13.2586, 0.22 ) }
    dend_11 { pt3dadd( 16.4031, 49.0477, -13.1877, 0.22 ) }
    dend_11 { pt3dadd( 17.0175, 50.463, -13.0725, 0.22 ) }
    dend_11 { pt3dadd( 17.0407, 50.5318, -13.0648, 0.22 ) }
    dend_11 { pt3dadd( 17.2102, 51.2719, -12.9414, 0.22 ) }
    dend_11 { pt3dadd( 17.4859, 52.4693, -12.8575, 0.88 ) }
    dend_11 { pt3dadd( 17.5172, 52.5466, -12.8608, 0.88 ) }
    dend_11 { pt3dadd( 17.8093, 53.0587, -12.9462, 1.33 ) }
    dend_11 { pt3dadd( 18.0079, 53.3707, -13.0152, 1.33 ) }
    dend_11 { pt3dadd( 18.2133, 53.6807, -13.071, 1.33 ) }
    dend_11 { pt3dadd( 19.0547, 54.8899, -13.2386, 0.22 ) }
    dend_11 { pt3dadd( 19.5907, 55.689, -13.3071, 0.22 ) }
    dend_11 { pt3dadd( 19.6252, 55.7527, -13.3126, 0.22 ) }
    dend_11 { pt3dadd( 20.1177, 56.8739, -13.405, 1.25 ) }
    dend_11 { pt3dadd( 20.3429, 57.4879, -13.4674, 1.92 ) }
    dend_11 { pt3dadd( 20.5287, 58.0337, -13.5288, 2.14 ) }
    dend_11 { pt3dadd( 20.7123, 58.6512, -13.6009, 1.92 ) }
    dend_11 { pt3dadd( 21.268, 60.507, -13.8478, 0.22 ) }
    dend_11 { pt3dadd( 21.4592, 61.0867, -13.9301, 0.22 ) }
    dend_11 { pt3dadd( 21.7209, 61.8123, -14.0417, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_11 { pt3dadd( 22.0197, 62.5932, -14.1585, 0.22 ) }
    dend_11 { pt3dadd( 22.0471, 62.6602, -14.1677, 0.22 ) }
    dend_11 { pt3dadd( 22.3868, 63.4488, -14.2618, 1.03 ) }
    dend_11 { pt3dadd( 22.6951, 64.1349, -14.3224, 1.55 ) }
    dend_11 { pt3dadd( 22.8689, 64.5637, -14.3604, 1.84 ) }
    dend_11 { pt3dadd( 23.1307, 65.3068, -14.4172, 1.62 ) }
    dend_11 { pt3dadd( 23.5956, 66.8228, -14.5417, 0.37 ) }
    dend_11 { pt3dadd( 23.6821, 67.1122, -14.5668, 0.59 ) }
    dend_11 { pt3dadd( 23.7895, 67.4821, -14.6022, 0.59 ) }
    dend_11 { pt3dadd( 24.1322, 68.7409, -14.7415, 0.29 ) }
    dend_11 { pt3dadd( 24.4406, 69.907, -14.8773, 1.33 ) }
    dend_11 { pt3dadd( 24.607, 70.5903, -14.961, 2.21 ) }
    dend_11 { pt3dadd( 24.6758, 70.8925, -14.9982, 2.73 ) }
    dend_11 { pt3dadd( 24.6902, 70.9532, -15.0058, 2.73 ) }
    dend_11 { pt3dadd( 24.8844, 71.7354, -15.101, 2.73 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 15/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -6.05315, 31.0442, 4.32814, 0.74 ) }
    dend_8 { pt3dadd( -8.78384, 30.3157, 5.73459, 0.74 ) }
    dend_8 { pt3dadd( -9.67253, 30.1421, 6.16715, 0.59 ) }
    dend_8 { pt3dadd( -10.299, 30.0707, 6.53583, 0.88 ) }
    dend_8 { pt3dadd( -11.2838, 30.0354, 7.18373, 0.59 ) }
    dend_8 { pt3dadd( -11.8996, 30.0662, 7.60076, 0.74 ) }
    dend_8 { pt3dadd( -12.5511, 30.1504, 8.07537, 0.96 ) }
    dend_8 { pt3dadd( -13.1985, 30.3552, 8.51478, 1.18 ) }
    dend_8 { pt3dadd( -14.3988, 30.9671, 9.59779, 0.59 ) }
    dend_8 { pt3dadd( -14.7265, 31.1968, 10.0708, 0.29 ) }
    dend_8 { pt3dadd( -15.0618, 31.4393, 10.7436, 0.81 ) }
    dend_8 { pt3dadd( -15.4266, 31.672, 11.5611, 0.81 ) }
    dend_8 { pt3dadd( -15.4551, 31.6873, 11.6233, 0.81 ) }
    dend_8 { pt3dadd( -16.0817, 31.9658, 12.8674, 0.59 ) }
    dend_8 { pt3dadd( -17.4775, 32.6045, 15.5932, 1.69 ) }
    dend_8 { pt3dadd( -18.6591, 33.1102, 17.8566, 0.37 ) }
    dend_8 { pt3dadd( -19.3798, 33.373, 19.2288, 0.29 ) }
    dend_8 { pt3dadd( -19.8273, 33.5283, 20.0711, 0.22 ) }
    dend_8 { pt3dadd( -20.2209, 33.6664, 20.7817, 0.22 ) }
    dend_8 { pt3dadd( -21.445, 34.1421, 22.8565, 1.69 ) }
    dend_8 { pt3dadd( -22.5772, 34.699, 24.6803, 1.11 ) }
    dend_8 { pt3dadd( -23.5437, 35.2862, 26.3129, 1.84 ) }
    dend_8 { pt3dadd( -24.3806, 35.8445, 27.7941, 2.36 ) }
    dend_8 { pt3dadd( -25.2468, 36.4173, 29.3705, 0.29 ) }
    dend_8 { pt3dadd( -25.7168, 36.7072, 30.2009, 0.29 ) }
    dend_8 { pt3dadd( -26.209, 36.9572, 30.9321, 0.22 ) }
    dend_8 { pt3dadd( -27.1073, 37.4247, 32.0527, 0.52 ) }
    dend_8 { pt3dadd( -27.4126, 37.5564, 32.352, 0.88 ) }
    dend_8 { pt3dadd( -27.9253, 37.6921, 32.7815, 0.88 ) }
    dend_8 { pt3dadd( -27.9775, 37.6994, 32.8275, 0.88 ) }
    dend_8 { pt3dadd( -28.7755, 37.7511, 33.648, 0.37 ) }
    dend_8 { pt3dadd( -29.3814, 37.7795, 34.303, 0.37 ) }
    dend_8 { pt3dadd( -30.1964, 37.9039, 35.2533, 0.29 ) }
    dend_8 { pt3dadd( -30.994, 38.1004, 36.2522, 0.74 ) }
    dend_8 { pt3dadd( -31.7118, 38.3307, 37.2016, 0.96 ) }
    dend_8 { pt3dadd( -33.1208, 38.8835, 39.0398, 1.25 ) }
    dend_8 { pt3dadd( -33.1609, 38.9012, 39.0946, 1.25 ) }
    dend_8 { pt3dadd( -34.2403, 39.43, 40.6531, 0.15 ) }
    dend_8 { pt3dadd( -34.6862, 39.6623, 41.2852, 0.15 ) }
    dend_8 { pt3dadd( -34.7203, 39.6812, 41.3312, 0.15 ) }
    dend_8 { pt3dadd( -35.5773, 40.2978, 42.3554, 1.62 ) }
    dend_8 { pt3dadd( -41.4037, 40.0862, 50.4803, 1.62 ) }
    dend_8 { pt3dadd( -47.6505, 41.3346, 58.198, 1.62 ) }
    dend_8 { pt3dadd( -53.4094, 44.2968, 65.8711, 1.62 ) }
    dend_8 { pt3dadd( -59.6502, 49.092, 72.2111, 1.62 ) }
    dend_8 { pt3dadd( -66.1179, 52.888, 78.9267, 1.62 ) }
    dend_8 { pt3dadd( -74.5294, 54.7121, 84.0481, 1.62 ) }
    dend_8 { pt3dadd( -82.5222, 57.5155, 89.432, 1.62 ) }
    dend_8 { pt3dadd( -90.2577, 60.6813, 95.0062, 1.62 ) }
    dend_8 { pt3dadd( -97.675, 62.747, 101.418, 1.62 ) }
    dend_8 { pt3dadd( -105.492, 65.0491, 107.257, 1.62 ) }
    dend_8 { pt3dadd( -112.68, 66.2259, 114.118, 1.62 ) }
    dend_8 { pt3dadd( -120.883, 69.1849, 119.095, 1.62 ) }
    dend_8 { pt3dadd( -129.348, 73.2416, 122.758, 1.62 ) }
    dend_8 { pt3dadd( -137.035, 77.094, 127.998, 1.62 ) }
    dend_8 { pt3dadd( -145.11, 79.3642, 133.485, 1.62 ) }
    dend_8 { pt3dadd( -153.286, 81.2458, 138.956, 1.62 ) }
    dend_8 { pt3dadd( -161.116, 81.5521, 145.171, 1.62 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 73/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.05315, 31.0442, 4.32814, 0.59 ) }
    dend_5 { pt3dadd( -5.37988, 33.8585, 7.30389, 0.59 ) }
    dend_5 { pt3dadd( -5.28681, 34.6406, 8.03367, 0.59 ) }
    dend_5 { pt3dadd( -5.36841, 35.8506, 8.96932, 0.29 ) }
    dend_5 { pt3dadd( -5.37826, 35.9094, 9.01013, 0.29 ) }
    dend_5 { pt3dadd( -5.51132, 36.4795, 9.3859, 0.29 ) }
    dend_5 { pt3dadd( -5.59931, 36.8336, 9.6278, 0.52 ) }
    dend_5 { pt3dadd( -5.89691, 37.4808, 10.1787, 0.52 ) }
    dend_5 { pt3dadd( -6.37345, 38.3813, 11.2317, 0.52 ) }
    dend_5 { pt3dadd( -6.39529, 38.423, 11.285, 0.52 ) }
    dend_5 { pt3dadd( -6.68198, 39.0184, 12.0601, 0.96 ) }
    dend_5 { pt3dadd( -7.00046, 39.7317, 13.0347, 1.55 ) }
    dend_5 { pt3dadd( -7.85997, 41.6954, 15.8936, 0.59 ) }
    dend_5 { pt3dadd( -8.09064, 42.2004, 16.7554, 0.29 ) }
    dend_5 { pt3dadd( -8.29784, 42.6333, 17.635, 0.29 ) }
    dend_5 { pt3dadd( -8.62292, 43.2728, 18.9586, 0.66 ) }
    dend_5 { pt3dadd( -8.63993, 43.3016, 19.0208, 0.66 ) }
    dend_5 { pt3dadd( -8.96051, 43.7545, 19.9971, 0.96 ) }
    dend_5 { pt3dadd( -9.50698, 44.4908, 21.4379, 0.22 ) }
    dend_5 { pt3dadd( -9.77608, 44.7151, 22.4745, 0.59 ) }
    dend_5 { pt3dadd( -12.6752, 51.5625, 29.4793, 0.59 ) }
    dend_5 { pt3dadd( -15.4422, 58.2065, 36.7116, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 95/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.079, 99.2643, -3.69769, 0.29 ) }
    dend_3 { pt3dadd( -9.43277, 100.08, -3.42247, 0.29 ) }
    dend_3 { pt3dadd( -10.0973, 100.51, -3.27927, 0.29 ) }
    dend_3 { pt3dadd( -10.6699, 100.905, -3.1556, 0.22 ) }
    dend_3 { pt3dadd( -11.2663, 101.343, -3.02776, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( -11.3469, 101.403, -3.01253, 0.22 ) }
    dend_3 { pt3dadd( -12.0209, 101.906, -2.90261, 0.22 ) }
    dend_3 { pt3dadd( -12.5174, 102.301, -2.8283, 0.66 ) }
    dend_3 { pt3dadd( -12.7886, 102.552, -2.7852, 0.88 ) }
    dend_3 { pt3dadd( -12.9469, 102.73, -2.75105, 0.88 ) }
    dend_3 { pt3dadd( -13.507, 103.446, -2.62001, 0.22 ) }
    dend_3 { pt3dadd( -13.9187, 104.017, -2.50682, 0.22 ) }
    dend_3 { pt3dadd( -14.219, 104.467, -2.41299, 1.03 ) }
    dend_3 { pt3dadd( -14.6267, 105.132, -2.26397, 1.03 ) }
    dend_3 { pt3dadd( -15.4447, 106.567, -1.87656, 0.29 ) }
    dend_3 { pt3dadd( -15.666, 106.973, -1.7556, 0.52 ) }
    dend_3 { pt3dadd( -15.9708, 107.559, -1.5723, 0.52 ) }
    dend_3 { pt3dadd( -16.3333, 108.218, -1.3548, 0.52 ) }
    dend_3 { pt3dadd( -17.0288, 109.358, -0.986467, 0.15 ) }
    dend_3 { pt3dadd( -17.6177, 110.248, -0.722054, 1.03 ) }
    dend_3 { pt3dadd( -17.9819, 110.76, -0.578144, 1.4 ) }
    dend_3 { pt3dadd( -18.3956, 111.306, -0.434825, 1.4 ) }
    dend_3 { pt3dadd( -19.1866, 112.328, -0.195407, 0.29 ) }
    dend_3 { pt3dadd( -19.9748, 113.325, -0.00872677, 0.22 ) }
    dend_3 { pt3dadd( -20.4534, 113.916, 0.064353, 0.52 ) }
    dend_3 { pt3dadd( -20.7821, 114.323, 0.0899904, 0.52 ) }
    dend_3 { pt3dadd( -21.5229, 115.246, 0.0846084, 0.29 ) }
    dend_3 { pt3dadd( -21.9055, 115.719, 0.0227626, 0.29 ) }
    dend_3 { pt3dadd( -22.5814, 116.524, -0.186517, 1.47 ) }
    dend_3 { pt3dadd( -22.9039, 116.863, -0.301726, 1.99 ) }
    dend_3 { pt3dadd( -23.2712, 117.221, -0.479618, 1.99 ) }
    dend_3 { pt3dadd( -24.0525, 117.964, -0.984714, 0.96 ) }
    dend_3 { pt3dadd( -24.8723, 118.7, -1.7456, 0.29 ) }
    dend_3 { pt3dadd( -25.4386, 119.192, -2.35909, 0.29 ) }
    dend_3 { pt3dadd( -26.2451, 119.888, -3.36633, 0.22 ) }
    dend_3 { pt3dadd( -27.0854, 120.652, -4.55441, 1.55 ) }
    dend_3 { pt3dadd( -27.598, 121.149, -5.33026, 1.47 ) }
    dend_3 { pt3dadd( -28.7372, 122.396, -7.30459, 0.29 ) }
    dend_3 { pt3dadd( -28.9474, 122.636, -7.70798, 0.37 ) }
    dend_3 { pt3dadd( -29.3906, 123.145, -8.5965, 0.29 ) }
    dend_3 { pt3dadd( -29.9297, 123.76, -9.78835, 1.62 ) }
    dend_3 { pt3dadd( -30.269, 124.11, -10.5058, 2.14 ) }
    dend_3 { pt3dadd( -31.4741, 125.266, -12.9501, 0.22 ) }
    dend_3 { pt3dadd( -32.0721, 125.813, -14.1594, 1.03 ) }
    dend_3 { pt3dadd( -32.3224, 126.022, -14.6618, 1.33 ) }
    dend_3 { pt3dadd( -34.1015, 127.197, -18.0044, 0.22 ) }
    dend_3 { pt3dadd( -34.4258, 127.347, -18.5468, 1.03 ) }
    dend_3 { pt3dadd( -34.7003, 127.425, -18.9482, 1.47 ) }
    dend_3 { pt3dadd( -34.747, 127.431, -19.0, 1.47 ) }
    dend_3 { pt3dadd( -35.0942, 127.463, -19.2803, 1.77 ) }
    dend_3 { pt3dadd( -36.682, 127.565, -20.0413, 0.22 ) }
    dend_3 { pt3dadd( -37.5517, 127.611, -20.1862, 0.22 ) }
    dend_3 { pt3dadd( -38.443, 127.692, -20.1984, 1.18 ) }
    dend_3 { pt3dadd( -39.0638, 127.782, -20.1381, 1.55 ) }
    dend_3 { pt3dadd( -40.3556, 128.055, -19.9025, 0.22 ) }
    dend_3 { pt3dadd( -41.4888, 128.386, -19.5955, 2.14 ) }
    dend_3 { pt3dadd( -41.8698, 128.532, -19.4518, 2.73 ) }
    dend_3 { pt3dadd( -43.757, 129.43, -18.6577, 0.22 ) }
    dend_3 { pt3dadd( -44.5527, 129.892, -18.3109, 0.22 ) }
    dend_3 { pt3dadd( -45.0002, 130.209, -18.1338, 0.22 ) }
    dend_3 { pt3dadd( -45.3403, 130.504, -18.0192, 0.96 ) }
    dend_3 { pt3dadd( -45.5513, 130.735, -17.9608, 0.96 ) }
    dend_3 { pt3dadd( -46.3589, 131.845, -17.7972, 0.22 ) }
    dend_3 { pt3dadd( -47.079, 133.036, -17.7778, 0.22 ) }
    dend_3 { pt3dadd( -47.7914, 134.259, -17.8085, 1.11 ) }
    dend_3 { pt3dadd( -48.0399, 134.67, -17.8494, 1.62 ) }
    dend_3 { pt3dadd( -48.8716, 135.984, -18.1068, 0.22 ) }
    dend_3 { pt3dadd( -49.7208, 137.292, -18.4745, 0.22 ) }
    dend_3 { pt3dadd( -50.3907, 138.313, -18.8563, 1.18 ) }
    dend_3 { pt3dadd( -50.6453, 138.67, -19.0369, 1.47 ) }
    dend_3 { pt3dadd( -51.7335, 140.056, -19.9029, 0.15 ) }
    dend_3 { pt3dadd( -52.3938, 140.831, -20.4561, 0.15 ) }
    dend_3 { pt3dadd( -52.8299, 141.302, -20.8507, 0.66 ) }
    dend_3 { pt3dadd( -52.9273, 141.406, -20.9407, 0.88 ) }
    dend_3 { pt3dadd( -53.7469, 142.399, -21.7182, 0.74 ) }
    dend_3 { pt3dadd( -53.9839, 142.739, -21.9517, 0.74 ) }
    dend_3 { pt3dadd( -54.2217, 143.144, -22.1873, 0.44 ) }
    dend_3 { pt3dadd( -54.8485, 144.275, -22.7818, 0.15 ) }
    dend_3 { pt3dadd( -55.1464, 144.8, -23.0865, 0.37 ) }
    dend_3 { pt3dadd( -55.4272, 145.246, -23.3493, 0.37 ) }
    dend_3 { pt3dadd( -55.8945, 145.907, -23.7708, 0.15 ) }
    dend_3 { pt3dadd( -56.3446, 146.457, -24.172, 0.96 ) }
    dend_3 { pt3dadd( -56.5682, 146.697, -24.362, 1.25 ) }
    dend_3 { pt3dadd( -57.627, 147.7, -25.2346, 0.22 ) }
    dend_3 { pt3dadd( -58.2647, 148.297, -25.7469, 0.22 ) }
    dend_3 { pt3dadd( -58.8563, 148.83, -26.2468, 1.11 ) }
    dend_3 { pt3dadd( -59.0235, 148.968, -26.3976, 1.62 ) }
    dend_3 { pt3dadd( -59.3741, 149.237, -26.706, 1.47 ) }
    dend_3 { pt3dadd( -60.4578, 150.033, -27.6077, 0.15 ) }
    dend_3 { pt3dadd( -61.1937, 150.578, -28.2234, 0.15 ) }
    dend_3 { pt3dadd( -62.3758, 151.478, -29.2443, 0.15 ) }
    dend_3 { pt3dadd( -62.8683, 151.851, -29.6496, 0.15 ) }
    dend_3 { pt3dadd( -63.411, 152.282, -30.1414, 0.15 ) }
    dend_3 { pt3dadd( -63.9769, 152.741, -30.663, 0.15 ) }
    dend_3 { pt3dadd( -64.9197, 153.527, -31.5249, 1.03 ) }
    dend_3 { pt3dadd( -65.2497, 153.806, -31.8191, 1.47 ) }
    dend_3 { pt3dadd( -65.5142, 154.054, -32.0398, 1.69 ) }
    dend_3 { pt3dadd( -67.112, 155.658, -33.2961, 0.22 ) }
    dend_3 { pt3dadd( -67.6486, 156.197, -33.6924, 0.22 ) }
    dend_3 { pt3dadd( -67.6956, 156.242, -33.7213, 0.22 ) }
    dend_3 { pt3dadd( -68.0571, 156.56, -33.8622, 0.59 ) }
    dend_3 { pt3dadd( -68.1738, 156.652, -33.896, 0.59 ) }
    dend_3 { pt3dadd( -69.1897, 157.388, -34.1024, 0.22 ) }
    dend_3 { pt3dadd( -69.661, 157.703, -34.1533, 1.11 ) }
    dend_3 { pt3dadd( -70.2326, 158.084, -34.228, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_3 { pt3dadd( -71.2733, 158.79, -34.4197, 0.22 ) }
    dend_3 { pt3dadd( -72.3117, 159.502, -34.6632, 0.22 ) }
    dend_3 { pt3dadd( -73.3742, 160.244, -34.9937, 0.22 ) }
    dend_3 { pt3dadd( -73.4371, 160.289, -35.0191, 0.22 ) }
    dend_3 { pt3dadd( -73.8256, 160.591, -35.2007, 0.22 ) }
    dend_3 { pt3dadd( -74.4607, 161.143, -35.5192, 1.11 ) }
    dend_3 { pt3dadd( -74.5012, 161.185, -35.5399, 1.11 ) }
    dend_3 { pt3dadd( -74.9614, 161.705, -35.7427, 1.55 ) }
    dend_3 { pt3dadd( -75.231, 162.023, -35.8437, 1.55 ) }
    dend_3 { pt3dadd( -76.2141, 163.191, -36.164, 0.22 ) }
    dend_3 { pt3dadd( -76.8786, 164.006, -36.3396, 0.22 ) }
    dend_3 { pt3dadd( -77.3441, 164.591, -36.4251, 0.22 ) }
    dend_3 { pt3dadd( -78.0217, 165.484, -36.5276, 1.18 ) }
    dend_3 { pt3dadd( -78.1833, 165.705, -36.5467, 1.77 ) }
    dend_3 { pt3dadd( -78.2243, 165.764, -36.5514, 1.77 ) }
    dend_3 { pt3dadd( -79.3743, 167.57, -36.6683, 0.22 ) }
    dend_3 { pt3dadd( -80.1229, 168.819, -36.7416, 0.22 ) }
    dend_3 { pt3dadd( -80.5948, 169.655, -36.7835, 0.22 ) }
    dend_3 { pt3dadd( -80.6296, 169.719, -36.7865, 0.22 ) }
    dend_3 { pt3dadd( -81.2837, 170.928, -36.8366, 0.59 ) }
    dend_3 { pt3dadd( -81.8911, 172.075, -36.8726, 0.22 ) }
    dend_3 { pt3dadd( -81.9967, 172.294, -36.8726, 0.66 ) }
    dend_3 { pt3dadd( -82.1506, 172.644, -36.8726, 1.03 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 23/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -8.079, 99.2643, -3.69769, 0.37 ) }
    dend_2 { pt3dadd( -8.19361, 101.283, -3.14307, 0.37 ) }
    dend_2 { pt3dadd( -8.2571, 102.154, -2.91133, 0.37 ) }
    dend_2 { pt3dadd( -8.29051, 102.708, -2.73966, 0.37 ) }
    dend_2 { pt3dadd( -8.30202, 103.065, -2.61172, 0.29 ) }
    dend_2 { pt3dadd( -8.30937, 103.629, -2.40549, 0.29 ) }
    dend_2 { pt3dadd( -8.31247, 105.031, -1.90311, 1.11 ) }
    dend_2 { pt3dadd( -8.31039, 105.632, -1.69581, 1.33 ) }
    dend_2 { pt3dadd( -8.27633, 106.707, -1.31246, 0.74 ) }
    dend_2 { pt3dadd( -8.22989, 107.849, -0.90774, 0.52 ) }
    dend_2 { pt3dadd( -8.19687, 108.505, -0.685829, 0.96 ) }
    dend_2 { pt3dadd( -8.15644, 109.152, -0.485056, 1.11 ) }
    dend_2 { pt3dadd( -8.12145, 109.822, -0.312665, 0.96 ) }
    dend_2 { pt3dadd( -8.09647, 110.799, -0.0972287, 0.22 ) }
    dend_2 { pt3dadd( -8.08331, 111.532, -7.85073E-4, 0.22 ) }
    dend_2 { pt3dadd( -8.05515, 112.072, 0.0367404, 0.22 ) }
    dend_2 { pt3dadd( -7.99716, 112.553, 0.0458994, 1.03 ) }
    dend_2 { pt3dadd( -7.95072, 112.853, 0.0359214, 1.03 ) }
    dend_2 { pt3dadd( -7.93723, 112.936, 0.029316, 1.03 ) }
    dend_2 { pt3dadd( -7.7993, 113.785, -0.0739016, 0.22 ) }
    dend_2 { pt3dadd( -7.67066, 114.663, -0.177796, 0.74 ) }
    dend_2 { pt3dadd( -7.58895, 115.417, -0.2577, 0.29 ) }
    dend_2 { pt3dadd( -7.51323, 116.171, -0.329026, 0.52 ) }
    dend_2 { pt3dadd( -7.45941, 116.65, -0.37618, 0.52 ) }
    dend_2 { pt3dadd( -7.3407, 117.516, -0.491201, 0.22 ) }
    dend_2 { pt3dadd( -7.21427, 118.334, -0.620957, 0.66 ) }
    dend_2 { pt3dadd( -7.13524, 118.747, -0.694747, 0.88 ) }
    dend_2 { pt3dadd( -6.9659, 119.496, -0.829165, 0.88 ) }
    dend_2 { pt3dadd( -6.76836, 120.308, -0.982533, 0.37 ) }
    dend_2 { pt3dadd( -6.56038, 121.246, -1.11932, 0.22 ) }
    dend_2 { pt3dadd( -6.5435, 121.348, -1.12761, 0.22 ) }
    dend_2 { pt3dadd( -6.46934, 122.126, -1.14378, 0.22 ) }
    dend_2 { pt3dadd( -6.44276, 123.007, -1.11858, 0.81 ) }
    dend_2 { pt3dadd( -6.4717, 123.947, -1.03673, 0.81 ) }
    dend_2 { pt3dadd( -6.54871, 124.976, -0.895217, 0.29 ) }
    dend_2 { pt3dadd( -6.6369, 125.844, -0.744769, 0.22 ) }
    dend_2 { pt3dadd( -6.69889, 126.61, -0.619814, 0.59 ) }
    dend_2 { pt3dadd( -6.7028, 126.683, -0.608913, 0.59 ) }
    dend_2 { pt3dadd( -6.70157, 126.927, -0.580929, 0.59 ) }
    dend_2 { pt3dadd( -6.64575, 127.782, -0.567001, 0.22 ) }
    dend_2 { pt3dadd( -6.63888, 127.855, -0.571938, 0.22 ) }
    dend_2 { pt3dadd( -6.55203, 128.89, -0.679944, 1.18 ) }
    dend_2 { pt3dadd( -6.52019, 129.421, -0.741163, 1.62 ) }
    dend_2 { pt3dadd( -6.49835, 130.497, -0.865937, 1.03 ) }
    dend_2 { pt3dadd( -6.52874, 131.799, -1.01248, 0.22 ) }
    dend_2 { pt3dadd( -6.53238, 131.872, -1.02404, 0.22 ) }
    dend_2 { pt3dadd( -6.58652, 132.783, -1.21492, 0.22 ) }
    dend_2 { pt3dadd( -6.59787, 132.925, -1.25088, 0.22 ) }
    dend_2 { pt3dadd( -6.64168, 133.808, -1.54092, 0.22 ) }
    dend_2 { pt3dadd( -6.60951, 134.568, -1.90685, 1.03 ) }
    dend_2 { pt3dadd( -6.48431, 135.631, -2.52139, 0.29 ) }
    dend_2 { pt3dadd( -6.39627, 136.277, -2.91458, 0.29 ) }
    dend_2 { pt3dadd( -6.38615, 136.336, -2.9538, 0.29 ) }
    dend_2 { pt3dadd( -6.19426, 137.308, -3.58214, 1.18 ) }
    dend_2 { pt3dadd( -5.74957, 138.758, -4.55729, 0.22 ) }
    dend_2 { pt3dadd( -5.69249, 138.891, -4.64696, 0.22 ) }
    dend_2 { pt3dadd( -5.19949, 139.858, -5.33015, 0.22 ) }
    dend_2 { pt3dadd( -5.1683, 139.909, -5.3702, 0.22 ) }
    dend_2 { pt3dadd( -4.59073, 140.686, -6.07159, 1.25 ) }
    dend_2 { pt3dadd( -3.591, 141.807, -7.1661, 0.22 ) }
    dend_2 { pt3dadd( -2.81905, 142.534, -7.93003, 0.66 ) }
    dend_2 { pt3dadd( -2.0161, 143.236, -8.72693, 0.81 ) }
    dend_2 { pt3dadd( -1.19924, 143.943, -9.57704, 0.22 ) }
    dend_2 { pt3dadd( -0.56208, 144.546, -10.2918, 0.59 ) }
    dend_2 { pt3dadd( -0.166732, 144.954, -10.7791, 0.22 ) }
    dend_2 { pt3dadd( 0.343713, 145.614, -11.473, 2.21 ) }
    dend_2 { pt3dadd( 1.03771, 146.73, -12.4912, 0.29 ) }
    dend_2 { pt3dadd( 1.51332, 147.631, -13.1723, 0.15 ) }
    dend_2 { pt3dadd( 1.67106, 147.949, -13.42, 0.15 ) }
    dend_2 { pt3dadd( 1.71281, 148.033, -13.4886, 0.15 ) }
    dend_2 { pt3dadd( 2.04081, 148.627, -14.103, 0.74 ) }
    dend_2 { pt3dadd( 2.07184, 148.673, -14.1621, 0.74 ) }
    dend_2 { pt3dadd( 2.24556, 148.907, -14.5821, 0.74 ) }
    dend_2 { pt3dadd( 2.88679, 149.752, -16.3251, 0.22 ) }
    dend_2 { pt3dadd( 3.1701, 150.146, -17.1847, 1.55 ) }
    dend_2 { pt3dadd( 3.44997, 150.611, -18.1802, 1.25 ) }
    dend_2 { pt3dadd( 3.46654, 150.646, -18.251, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 3.89813, 151.861, -20.4203, 0.22 ) }
    dend_2 { pt3dadd( 3.94559, 152.079, -20.7471, 0.22 ) }
    dend_2 { pt3dadd( 3.94918, 152.125, -20.8019, 0.22 ) }
    dend_2 { pt3dadd( 3.97728, 152.757, -21.5016, 1.11 ) }
    dend_2 { pt3dadd( 3.99454, 153.202, -21.9345, 1.4 ) }
    dend_2 { pt3dadd( 4.06737, 154.226, -22.8554, 0.52 ) }
    dend_2 { pt3dadd( 4.18098, 155.024, -23.4582, 0.15 ) }
    dend_2 { pt3dadd( 4.28863, 155.628, -23.9041, 0.96 ) }
    dend_2 { pt3dadd( 4.51389, 156.65, -24.6427, 0.22 ) }
    dend_2 { pt3dadd( 4.52865, 156.706, -24.6856, 0.22 ) }
    dend_2 { pt3dadd( 4.65136, 157.125, -25.0144, 0.22 ) }
    dend_2 { pt3dadd( 4.83762, 157.753, -25.5739, 0.52 ) }
    dend_2 { pt3dadd( 4.94368, 158.101, -25.8992, 0.52 ) }
    dend_2 { pt3dadd( 5.24904, 159.063, -26.8272, 0.29 ) }
    dend_2 { pt3dadd( 5.65468, 160.224, -28.0172, 1.4 ) }
    dend_2 { pt3dadd( 5.70964, 160.37, -28.1801, 1.62 ) }
    dend_2 { pt3dadd( 6.28855, 161.94, -29.9945, 0.29 ) }
    dend_2 { pt3dadd( 6.49383, 162.464, -30.7799, 0.29 ) }
    dend_2 { pt3dadd( 6.52587, 162.54, -30.9073, 0.29 ) }
    dend_2 { pt3dadd( 6.78888, 163.12, -31.9286, 0.29 ) }
    dend_2 { pt3dadd( 7.01045, 163.652, -32.8553, 0.88 ) }
    dend_2 { pt3dadd( 7.11617, 163.954, -33.3592, 1.03 ) }
    dend_2 { pt3dadd( 7.79763, 166.159, -36.9363, 0.15 ) }
    dend_2 { pt3dadd( 7.95883, 166.736, -37.8611, 1.47 ) }
    dend_2 { pt3dadd( 8.01499, 166.981, -38.2298, 1.62 ) }
    dend_2 { pt3dadd( 8.2078, 168.232, -39.8721, 0.29 ) }
    dend_2 { pt3dadd( 8.25488, 168.677, -40.3785, 0.37 ) }
    dend_2 { pt3dadd( 8.29086, 169.547, -41.2162, 0.22 ) }
    dend_2 { pt3dadd( 8.27061, 169.923, -41.4544, 0.22 ) }
    dend_2 { pt3dadd( 8.26335, 169.985, -41.4915, 0.22 ) }
    dend_2 { pt3dadd( 8.10371, 171.039, -42.0771, 1.25 ) }
    dend_2 { pt3dadd( 7.97925, 171.692, -42.4189, 1.47 ) }
    dend_2 { pt3dadd( 7.56953, 173.245, -43.2554, 0.29 ) }
    dend_2 { pt3dadd( 7.33908, 173.919, -43.6039, 0.29 ) }
    dend_2 { pt3dadd( 7.114, 174.502, -43.9333, 0.88 ) }
    dend_2 { pt3dadd( 7.01646, 174.745, -44.0791, 0.88 ) }
    dend_2 { pt3dadd( 6.57776, 175.812, -44.842, 0.22 ) }
    dend_2 { pt3dadd( 6.27706, 176.513, -45.3543, 0.22 ) }
    dend_2 { pt3dadd( 6.11463, 176.876, -45.6133, 0.22 ) }
    dend_2 { pt3dadd( 5.82985, 177.46, -46.0359, 1.03 ) }
    dend_2 { pt3dadd( 5.7112, 177.737, -46.2671, 1.03 ) }
    dend_2 { pt3dadd( 5.1878, 179.041, -47.4274, 0.22 ) }
    dend_2 { pt3dadd( 4.90205, 179.793, -48.1325, 0.22 ) }
    dend_2 { pt3dadd( 4.68288, 180.418, -48.7236, 1.03 ) }
    dend_2 { pt3dadd( 4.5569, 180.732, -49.0526, 1.47 ) }
    dend_2 { pt3dadd( 3.83768, 182.397, -50.8281, 0.29 ) }
    dend_2 { pt3dadd( 3.64854, 182.828, -51.2882, 0.29 ) }
    dend_2 { pt3dadd( 3.33832, 183.581, -52.0542, 1.18 ) }
    dend_2 { pt3dadd( 3.12949, 184.142, -52.5965, 1.69 ) }
    dend_2 { pt3dadd( 2.41025, 186.109, -54.3241, 0.15 ) }
    dend_2 { pt3dadd( 2.24613, 186.563, -54.705, 0.88 ) }
    dend_2 { pt3dadd( 2.11276, 186.918, -54.9606, 0.88 ) }
    dend_2 { pt3dadd( 1.76508, 187.891, -55.611, 0.22 ) }
    dend_2 { pt3dadd( 1.43321, 188.842, -56.2111, 1.4 ) }
    dend_2 { pt3dadd( 1.29691, 189.234, -56.4462, 1.69 ) }
    dend_2 { pt3dadd( 0.759294, 190.811, -57.2583, 0.81 ) }
    dend_2 { pt3dadd( 0.400621, 191.772, -57.7839, 0.29 ) }
    dend_2 { pt3dadd( 0.101069, 192.512, -58.2281, 0.29 ) }
    dend_2 { pt3dadd( -0.218447, 193.272, -58.6959, 0.59 ) }
    dend_2 { pt3dadd( -0.375726, 193.648, -58.9423, 0.88 ) }
    dend_2 { pt3dadd( -0.495816, 193.942, -59.1503, 0.88 ) }
    dend_2 { pt3dadd( -0.93173, 195.067, -59.9487, 0.29 ) }
    dend_2 { pt3dadd( -1.2912, 196.146, -60.779, 1.18 ) }
    dend_2 { pt3dadd( -1.41997, 196.619, -61.1379, 1.18 ) }
    dend_2 { pt3dadd( -1.79216, 198.155, -62.2437, 0.22 ) }
    dend_2 { pt3dadd( -2.02787, 199.362, -63.1037, 1.25 ) }
    dend_2 { pt3dadd( -2.07532, 199.731, -63.3639, 1.69 ) }
    dend_2 { pt3dadd( -2.17013, 201.432, -64.5065, 0.15 ) }
    dend_2 { pt3dadd( -2.14472, 202.139, -64.991, 0.15 ) }
    dend_2 { pt3dadd( -2.09318, 202.641, -65.3474, 0.88 ) }
    dend_2 { pt3dadd( -1.83134, 203.938, -66.2497, 0.22 ) }
    dend_2 { pt3dadd( -1.57363, 204.894, -66.928, 1.33 ) }
    dend_2 { pt3dadd( -1.46334, 205.21, -67.1663, 1.62 ) }
    dend_2 { pt3dadd( -0.509822, 207.225, -68.9911, 0.29 ) }
    dend_2 { pt3dadd( -0.483882, 207.271, -69.0392, 0.29 ) }
    dend_2 { pt3dadd( -0.193267, 207.699, -69.5233, 0.29 ) }
    dend_2 { pt3dadd( -0.160922, 207.74, -69.5715, 0.29 ) }
    dend_2 { pt3dadd( 0.206188, 208.169, -70.0841, 0.52 ) }
    dend_2 { pt3dadd( 1.43786, 209.494, -71.7039, 0.22 ) }
    dend_2 { pt3dadd( 1.80053, 209.867, -72.145, 0.22 ) }
    dend_2 { pt3dadd( 2.14607, 210.269, -72.5895, 0.66 ) }
    dend_2 { pt3dadd( 2.24341, 210.406, -72.7263, 0.66 ) }
    dend_2 { pt3dadd( 2.3814, 210.627, -72.9272, 0.66 ) }
    dend_2 { pt3dadd( 2.85541, 211.54, -73.6411, 0.22 ) }
    dend_2 { pt3dadd( 3.20865, 212.298, -74.112, 1.03 ) }
    dend_2 { pt3dadd( 3.41222, 212.821, -74.4258, 1.03 ) }
    dend_2 { pt3dadd( 3.75055, 213.883, -75.0283, 0.22 ) }
    dend_2 { pt3dadd( 3.7703, 213.954, -75.0663, 0.22 ) }
    dend_2 { pt3dadd( 3.99159, 214.93, -75.5464, 1.62 ) }
    dend_2 { pt3dadd( 4.09336, 215.502, -75.7982, 1.92 ) }
    dend_2 { pt3dadd( 4.41314, 217.549, -76.6633, 0.22 ) }
    dend_2 { pt3dadd( 4.49046, 218.153, -76.9072, 0.44 ) }
    dend_2 { pt3dadd( 4.49733, 218.222, -76.9323, 0.44 ) }
    dend_2 { pt3dadd( 4.54892, 218.692, -77.085, 0.44 ) }
    dend_2 { pt3dadd( 4.68275, 220.08, -77.4375, 0.15 ) }
    dend_2 { pt3dadd( 4.68872, 220.151, -77.4508, 0.15 ) }
    dend_2 { pt3dadd( 4.74392, 220.88, -77.5145, 0.66 ) }
    dend_2 { pt3dadd( 4.77049, 221.265, -77.5476, 0.66 ) }
    dend_2 { pt3dadd( 4.81458, 222.249, -77.6221, 0.15 ) }
    dend_2 { pt3dadd( 4.82542, 223.248, -77.681, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 4.7947, 224.047, -77.7097, 0.96 ) }
    dend_2 { pt3dadd( 4.75793, 224.507, -77.7308, 1.18 ) }
    dend_2 { pt3dadd( 4.62423, 225.883, -77.8091, 0.22 ) }
    dend_2 { pt3dadd( 4.54346, 226.587, -77.8525, 0.22 ) }
    dend_2 { pt3dadd( 4.43581, 227.379, -77.8803, 0.66 ) }
    dend_2 { pt3dadd( 4.39823, 227.693, -77.8792, 0.81 ) }
    dend_2 { pt3dadd( 4.29334, 228.684, -77.8373, 0.22 ) }
    dend_2 { pt3dadd( 4.23497, 229.335, -77.7971, 0.22 ) }
    dend_2 { pt3dadd( 4.17902, 230.255, -77.7268, 0.22 ) }
    dend_2 { pt3dadd( 4.14388, 231.1, -77.6694, 0.22 ) }
    dend_2 { pt3dadd( 4.13109, 231.791, -77.6314, 1.03 ) }
    dend_2 { pt3dadd( 4.12859, 232.279, -77.627, 1.55 ) }
    dend_2 { pt3dadd( 4.14706, 234.365, -77.6745, 0.22 ) }
    dend_2 { pt3dadd( 4.17035, 235.825, -77.7344, 0.22 ) }
    dend_2 { pt3dadd( 4.17353, 235.909, -77.7393, 0.22 ) }
    dend_2 { pt3dadd( 4.25316, 237.286, -77.8482, 0.22 ) }
    dend_2 { pt3dadd( 4.40886, 239.369, -78.0371, 1.03 ) }
    dend_2 { pt3dadd( 4.44712, 239.784, -78.0769, 1.03 ) }
    dend_2 { pt3dadd( 4.57766, 241.261, -78.22, 0.15 ) }
    dend_2 { pt3dadd( 4.62019, 241.975, -78.302, 0.15 ) }
    dend_2 { pt3dadd( 4.6351, 242.444, -78.3602, 0.88 ) }
    dend_2 { pt3dadd( 4.63164, 243.084, -78.4455, 0.44 ) }
    dend_2 { pt3dadd( 4.56317, 244.746, -78.7407, 0.15 ) }
    dend_2 { pt3dadd( 4.49939, 245.555, -78.9192, 0.15 ) }
    dend_2 { pt3dadd( 4.37662, 246.578, -79.197, 0.59 ) }
    dend_2 { pt3dadd( 4.36839, 246.648, -79.2166, 0.59 ) }
    dend_2 { pt3dadd( 4.34389, 246.816, -79.2683, 0.59 ) }
    dend_2 { pt3dadd( 4.14525, 248.097, -79.6548, 0.15 ) }
    dend_2 { pt3dadd( 4.01832, 248.879, -79.9064, 1.03 ) }
    dend_2 { pt3dadd( 4.00586, 248.959, -79.9298, 1.03 ) }
    dend_2 { pt3dadd( 3.87742, 249.78, -80.1335, 1.03 ) }
    dend_2 { pt3dadd( 3.60838, 251.477, -80.4958, 0.15 ) }
    dend_2 { pt3dadd( 3.38564, 252.733, -80.748, 0.15 ) }
    dend_2 { pt3dadd( 3.35, 252.904, -80.7787, 0.15 ) }
    dend_2 { pt3dadd( 3.20334, 253.554, -80.9048, 0.15 ) }
    dend_2 { pt3dadd( 3.02945, 254.289, -81.039, 0.96 ) }
    dend_2 { pt3dadd( 2.90322, 254.799, -81.1261, 1.11 ) }
    dend_2 { pt3dadd( 2.54742, 256.435, -81.3499, 0.22 ) }
    dend_2 { pt3dadd( 2.51118, 256.586, -81.3716, 0.22 ) }
    dend_2 { pt3dadd( 2.26128, 257.741, -81.5188, 0.22 ) }
    dend_2 { pt3dadd( 2.16134, 258.26, -81.5761, 0.59 ) }
    dend_2 { pt3dadd( 2.14569, 258.342, -81.5831, 0.59 ) }
    dend_2 { pt3dadd( 2.03878, 258.971, -81.6162, 0.22 ) }
    dend_2 { pt3dadd( 1.97448, 259.52, -81.6162, 0.44 ) }
    dend_2 { pt3dadd( 1.87551, 260.765, -81.6162, 0.15 ) }
    dend_2 { pt3dadd( 1.84208, 261.3, -81.6162, 0.15 ) }
    dend_2 { pt3dadd( 1.81262, 261.815, -81.6364, 0.44 ) }
    dend_2 { pt3dadd( 1.80843, 261.888, -81.6413, 0.44 ) }
    dend_2 { pt3dadd( 1.74547, 263.257, -81.748, 0.15 ) }
    dend_2 { pt3dadd( 1.71871, 263.951, -81.8122, 0.52 ) }
    dend_2 { pt3dadd( 1.67828, 264.605, -81.8885, 0.22 ) }
    dend_2 { pt3dadd( 1.6243, 265.545, -82.015, 0.96 ) }
    dend_2 { pt3dadd( 1.60374, 266.006, -82.0866, 0.96 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 44.0247, -102.83, -10.0503, 0.44 ) }
    dend_48 { pt3dadd( 44.352, -105.498, -12.5417, 0.44 ) }
    dend_48 { pt3dadd( 44.4205, -106.032, -12.9626, 0.66 ) }
    dend_48 { pt3dadd( 44.5612, -106.931, -13.5666, 0.22 ) }
    dend_48 { pt3dadd( 44.6577, -107.437, -13.8745, 0.22 ) }
    dend_48 { pt3dadd( 44.8247, -108.234, -14.3383, 0.81 ) }
    dend_48 { pt3dadd( 44.9487, -108.844, -14.6641, 1.03 ) }
    dend_48 { pt3dadd( 45.193, -109.977, -15.058, 0.22 ) }
    dend_48 { pt3dadd( 45.3702, -110.815, -15.3303, 0.22 ) }
    dend_48 { pt3dadd( 45.4487, -111.205, -15.4387, 0.44 ) }
    dend_48 { pt3dadd( 45.65, -112.36, -15.6999, 0.29 ) }
    dend_48 { pt3dadd( 45.8126, -113.408, -15.8932, 0.22 ) }
    dend_48 { pt3dadd( 45.8201, -113.48, -15.9053, 0.22 ) }
    dend_48 { pt3dadd( 45.8668, -114.24, -16.009, 1.47 ) }
    dend_48 { pt3dadd( 45.8842, -114.771, -16.071, 1.84 ) }
    dend_48 { pt3dadd( 45.9598, -116.688, -16.2436, 0.22 ) }
    dend_48 { pt3dadd( 46.0332, -117.803, -16.3064, 0.22 ) }
    dend_48 { pt3dadd( 46.1098, -118.562, -16.347, 0.22 ) }
    dend_48 { pt3dadd( 46.2363, -119.561, -16.3941, 1.03 ) }
    dend_48 { pt3dadd( 46.3242, -120.104, -16.4233, 1.25 ) }
    dend_48 { pt3dadd( 46.5122, -121.107, -16.4781, 0.44 ) }
    dend_48 { pt3dadd( 46.703, -121.964, -16.5241, 0.29 ) }
    dend_48 { pt3dadd( 46.9622, -122.972, -16.58, 0.29 ) }
    dend_48 { pt3dadd( 47.2644, -123.941, -16.6701, 0.29 ) }
    dend_48 { pt3dadd( 47.4582, -124.512, -16.7427, 0.44 ) }
    dend_48 { pt3dadd( 47.4942, -124.609, -16.7576, 0.44 ) }
    dend_48 { pt3dadd( 47.6702, -125.058, -16.8312, 0.44 ) }
    dend_48 { pt3dadd( 48.0191, -125.868, -16.9554, 0.29 ) }
    dend_48 { pt3dadd( 48.4698, -126.779, -17.0774, 1.69 ) }
    dend_48 { pt3dadd( 48.707, -127.228, -17.1289, 2.21 ) }
    dend_48 { pt3dadd( 48.9988, -127.804, -17.1588, 2.21 ) }
    dend_48 { pt3dadd( 49.7031, -129.305, -17.0915, 0.29 ) }
    dend_48 { pt3dadd( 50.2127, -130.462, -16.9367, 0.29 ) }
    dend_48 { pt3dadd( 50.63, -131.491, -16.6887, 0.29 ) }
    dend_48 { pt3dadd( 50.9292, -132.304, -16.4156, 0.22 ) }
    dend_48 { pt3dadd( 51.2623, -133.311, -15.9598, 0.37 ) }
    dend_48 { pt3dadd( 51.6235, -134.561, -15.217, 0.15 ) }
    dend_48 { pt3dadd( 51.6375, -134.624, -15.1655, 0.15 ) }
    dend_48 { pt3dadd( 51.6999, -134.994, -14.8131, 0.81 ) }
    dend_48 { pt3dadd( 51.7577, -135.502, -14.2884, 1.11 ) }
    dend_48 { pt3dadd( 51.854, -136.4, -13.3441, 0.37 ) }
    dend_48 { pt3dadd( 51.9194, -137.35, -12.4336, 0.22 ) }
    dend_48 { pt3dadd( 51.9277, -138.857, -11.1861, 0.22 ) }
    dend_48 { pt3dadd( 51.9233, -138.912, -11.1402, 0.22 ) }
    dend_48 { pt3dadd( 51.8479, -139.456, -10.6961, 1.25 ) }
    dend_48 { pt3dadd( 51.7943, -139.747, -10.4622, 1.4 ) }
    dend_48 { pt3dadd( 51.4817, -141.087, -9.4484, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_48 { pt3dadd( 51.2051, -142.101, -8.72132, 0.22 ) }
    dend_48 { pt3dadd( 50.7232, -143.908, -7.56316, 1.18 ) }
    dend_48 { pt3dadd( 50.6592, -144.164, -7.39982, 1.4 ) }
    dend_48 { pt3dadd( 50.6103, -144.393, -7.25417, 1.4 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 4/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 44.0247, -102.83, -10.0503, 0.29 ) }
    dend_43 { pt3dadd( 43.847, -104.831, -9.43018, 0.29 ) }
    dend_43 { pt3dadd( 43.8342, -105.592, -9.21385, 0.81 ) }
    dend_43 { pt3dadd( 43.8723, -107.108, -8.81137, 0.22 ) }
    dend_43 { pt3dadd( 43.9253, -108.037, -8.57708, 0.22 ) }
    dend_43 { pt3dadd( 43.9348, -108.137, -8.55505, 0.22 ) }
    dend_43 { pt3dadd( 43.9908, -108.676, -8.44983, 0.22 ) }
    dend_43 { pt3dadd( 44.1041, -109.044, -8.41073, 0.52 ) }
    dend_43 { pt3dadd( 44.1455, -109.183, -8.3906, 0.52 ) }
    dend_43 { pt3dadd( 44.1716, -109.297, -8.37248, 0.52 ) }
    dend_43 { pt3dadd( 44.3861, -110.334, -8.16845, 0.22 ) }
    dend_43 { pt3dadd( 44.4524, -110.598, -8.11138, 0.66 ) }
    dend_43 { pt3dadd( 44.6071, -111.176, -7.98093, 0.81 ) }
    dend_43 { pt3dadd( 44.9115, -112.422, -7.69951, 0.22 ) }
    dend_43 { pt3dadd( 44.9225, -112.49, -7.67539, 0.22 ) }
    dend_43 { pt3dadd( 45.0075, -113.335, -7.31502, 0.22 ) }
    dend_43 { pt3dadd( 45.0287, -113.866, -7.06362, 0.22 ) }
    dend_43 { pt3dadd( 45.0151, -114.419, -6.81199, 0.88 ) }
    dend_43 { pt3dadd( 44.9035, -115.791, -6.23596, 0.22 ) }
    dend_43 { pt3dadd( 44.656, -117.897, -5.45759, 0.22 ) }
    dend_43 { pt3dadd( 44.5536, -118.638, -5.2032, 0.81 ) }
    dend_43 { pt3dadd( 44.4896, -119.049, -5.07319, 0.81 ) }
    dend_43 { pt3dadd( 44.2583, -120.69, -4.60811, 0.22 ) }
    dend_43 { pt3dadd( 44.1558, -121.584, -4.39807, 0.29 ) }
    dend_43 { pt3dadd( 44.0817, -122.485, -4.25249, 0.81 ) }
    dend_43 { pt3dadd( 44.066, -122.971, -4.21828, 1.18 ) }
    dend_43 { pt3dadd( 44.0842, -123.853, -4.1629, 0.44 ) }
    dend_43 { pt3dadd( 44.1639, -124.864, -4.09983, 0.22 ) }
    dend_43 { pt3dadd( 44.249, -125.47, -4.06343, 0.52 ) }
    dend_43 { pt3dadd( 44.2913, -125.696, -4.04592, 0.52 ) }
    dend_43 { pt3dadd( 44.451, -126.407, -3.98157, 0.22 ) }
    dend_43 { pt3dadd( 44.6443, -127.21, -3.90518, 0.22 ) }
    dend_43 { pt3dadd( 44.6706, -127.31, -3.89267, 0.52 ) }
    dend_43 { pt3dadd( 44.6901, -127.38, -3.88267, 0.52 ) }
    dend_43 { pt3dadd( 44.8747, -128.058, -3.77586, 0.22 ) }
    dend_43 { pt3dadd( 44.9922, -128.503, -3.70476, 0.81 ) }
    dend_43 { pt3dadd( 45.1237, -129.019, -3.62363, 1.03 ) }
    dend_43 { pt3dadd( 45.4848, -130.37, -3.43448, 0.22 ) }
    dend_43 { pt3dadd( 45.6091, -130.809, -3.37978, 0.22 ) }
    dend_43 { pt3dadd( 45.7274, -131.182, -3.34011, 0.96 ) }
    dend_43 { pt3dadd( 45.9109, -131.698, -3.31931, 1.33 ) }
    dend_43 { pt3dadd( 46.0975, -132.176, -3.32124, 0.96 ) }
    dend_43 { pt3dadd( 46.6874, -133.561, -3.39779, 0.22 ) }
    dend_43 { pt3dadd( 46.7169, -133.627, -3.4046, 0.22 ) }
    dend_43 { pt3dadd( 46.9697, -134.221, -3.46431, 0.22 ) }
    dend_43 { pt3dadd( 47.3569, -135.278, -3.56387, 1.33 ) }
    dend_43 { pt3dadd( 47.3817, -135.357, -3.571, 1.33 ) }
    dend_43 { pt3dadd( 47.525, -135.93, -3.60563, 1.62 ) }
    dend_43 { pt3dadd( 47.7552, -137.099, -3.64282, 0.44 ) }
    dend_43 { pt3dadd( 47.9334, -138.017, -3.61635, 0.15 ) }
    dend_43 { pt3dadd( 48.081, -138.802, -3.54541, 0.15 ) }
    dend_43 { pt3dadd( 48.0983, -138.871, -3.52867, 0.15 ) }
    dend_43 { pt3dadd( 48.4644, -140.016, -3.16492, 0.15 ) }
    dend_43 { pt3dadd( 48.4873, -140.067, -3.13933, 0.15 ) }
    dend_43 { pt3dadd( 48.8847, -140.762, -2.69685, 0.44 ) }
    dend_43 { pt3dadd( 49.1106, -141.072, -2.4798, 0.88 ) }
    dend_43 { pt3dadd( 50.2938, -142.429, -1.40561, 0.22 ) }
    dend_43 { pt3dadd( 50.5445, -142.692, -1.1846, 0.52 ) }
    dend_43 { pt3dadd( 51.6735, -143.788, -0.223611, 0.22 ) }
    dend_43 { pt3dadd( 51.9942, -144.106, 0.0445577, 0.96 ) }
    dend_43 { pt3dadd( 52.8308, -144.995, 0.757368, 0.74 ) }
    dend_43 { pt3dadd( 53.8571, -146.132, 1.62011, 0.22 ) }
    dend_43 { pt3dadd( 53.8988, -146.18, 1.6522, 0.22 ) }
    dend_43 { pt3dadd( 54.1605, -146.518, 1.86286, 1.03 ) }
    dend_43 { pt3dadd( 54.4475, -146.939, 2.09924, 1.03 ) }
    dend_43 { pt3dadd( 55.3224, -148.47, 2.93365, 0.22 ) }
    dend_43 { pt3dadd( 55.5098, -148.906, 3.17692, 0.81 ) }
    dend_43 { pt3dadd( 55.7334, -149.54, 3.51702, 0.81 ) }
    dend_43 { pt3dadd( 56.1309, -150.716, 4.26153, 0.22 ) }
    dend_43 { pt3dadd( 56.1706, -150.837, 4.34967, 0.22 ) }
    dend_43 { pt3dadd( 56.3986, -151.531, 4.92791, 0.22 ) }
    dend_43 { pt3dadd( 56.6465, -152.414, 5.77201, 0.37 ) }
    dend_43 { pt3dadd( 56.6614, -152.46, 5.8251, 0.37 ) }
    dend_43 { pt3dadd( 56.984, -153.229, 6.92787, 0.59 ) }
    dend_43 { pt3dadd( 57.0088, -153.261, 6.9854, 0.59 ) }
    dend_43 { pt3dadd( 57.1155, -153.346, 7.16008, 0.59 ) }
    dend_43 { pt3dadd( 57.1613, -153.369, 7.22197, 0.59 ) }
    dend_43 { pt3dadd( 57.9172, -153.77, 8.08265, 0.22 ) }
    dend_43 { pt3dadd( 57.9587, -153.798, 8.13251, 0.22 ) }
    dend_43 { pt3dadd( 58.2961, -154.073, 8.54506, 0.88 ) }
    dend_43 { pt3dadd( 58.4623, -154.229, 8.75776, 0.88 ) }
    dend_43 { pt3dadd( 59.7077, -155.552, 10.404, 0.22 ) }
    dend_43 { pt3dadd( 60.1414, -156.07, 10.9918, 0.22 ) }
    dend_43 { pt3dadd( 60.6649, -156.8, 11.651, 0.59 ) }
    dend_43 { pt3dadd( 60.9204, -157.162, 11.9767, 0.81 ) }
    dend_43 { pt3dadd( 60.9526, -157.21, 12.0191, 0.81 ) }
    dend_43 { pt3dadd( 61.0727, -157.396, 12.177, 0.81 ) }
    dend_43 { pt3dadd( 61.1051, -157.448, 12.2153, 0.81 ) }
    dend_43 { pt3dadd( 61.8508, -158.584, 13.0792, 0.22 ) }
    dend_43 { pt3dadd( 62.8071, -160.061, 14.0888, 0.59 ) }
    dend_43 { pt3dadd( 62.8411, -160.114, 14.1225, 0.59 ) }
    dend_43 { pt3dadd( 63.4887, -161.138, 14.7796, 0.22 ) }
    dend_43 { pt3dadd( 63.6728, -161.429, 14.9833, 0.59 ) }
    dend_43 { pt3dadd( 63.9884, -161.927, 15.3418, 0.59 ) }
    dend_43 { pt3dadd( 64.5693, -162.859, 16.0184, 0.29 ) }
    dend_43 { pt3dadd( 65.0268, -163.569, 16.5053, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_43 { pt3dadd( 65.845, -164.786, 17.3704, 0.29 ) }
    dend_43 { pt3dadd( 66.5148, -165.714, 18.0782, 0.81 ) }
    dend_43 { pt3dadd( 66.7521, -166.032, 18.3482, 1.18 ) }
    dend_43 { pt3dadd( 66.8045, -166.1, 18.4147, 1.18 ) }
    dend_43 { pt3dadd( 67.267, -166.626, 19.0635, 1.18 ) }
    dend_43 { pt3dadd( 71.5488, -175.616, 21.9542, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -29.2665, -68.4763, 36.5509, 0.29 ) }
    dend_35 { pt3dadd( -28.7418, -70.5256, 37.1978, 0.29 ) }
    dend_35 { pt3dadd( -28.5164, -71.2417, 37.3507, 0.29 ) }
    dend_35 { pt3dadd( -28.4945, -71.3083, 37.3707, 0.29 ) }
    dend_35 { pt3dadd( -28.3652, -71.8112, 37.587, 1.03 ) }
    dend_35 { pt3dadd( -28.3019, -72.2458, 37.8007, 1.18 ) }
    dend_35 { pt3dadd( -28.2002, -73.3264, 38.3686, 0.29 ) }
    dend_35 { pt3dadd( -28.2044, -74.3545, 38.9478, 0.29 ) }
    dend_35 { pt3dadd( -28.3103, -75.4984, 39.6542, 1.03 ) }
    dend_35 { pt3dadd( -28.6296, -76.9519, 40.5843, 0.37 ) }
    dend_35 { pt3dadd( -29.0317, -78.0718, 41.3529, 0.37 ) }
    dend_35 { pt3dadd( -29.0821, -78.1625, 41.4193, 0.37 ) }
    dend_35 { pt3dadd( -29.6438, -78.817, 41.9433, 0.37 ) }
    dend_35 { pt3dadd( -29.6935, -78.8563, 41.9755, 0.37 ) }
    dend_35 { pt3dadd( -30.6118, -79.373, 42.3073, 0.37 ) }
    dend_35 { pt3dadd( -30.7826, -79.4193, 42.3416, 0.37 ) }
    dend_35 { pt3dadd( -31.4429, -79.4493, 42.4718, 0.37 ) }
    dend_35 { pt3dadd( -31.8343, -79.437, 42.55, 0.81 ) }
    dend_35 { pt3dadd( -32.2653, -79.4133, 42.6358, 0.81 ) }
    dend_35 { pt3dadd( -32.361, -79.4141, 42.6608, 0.81 ) }
    dend_35 { pt3dadd( -33.3436, -79.5189, 42.9728, 0.29 ) }
    dend_35 { pt3dadd( -34.7734, -79.8373, 43.4844, 0.29 ) }
    dend_35 { pt3dadd( -35.4149, -80.0861, 43.767, 0.52 ) }
    dend_35 { pt3dadd( -35.9483, -80.4918, 44.1703, 0.52 ) }
    dend_35 { pt3dadd( -36.4986, -81.4081, 44.9528, 0.37 ) }
    dend_35 { pt3dadd( -36.7273, -82.1911, 45.5678, 0.37 ) }
    dend_35 { pt3dadd( -36.7374, -82.2768, 45.6351, 0.37 ) }
    dend_35 { pt3dadd( -36.7736, -83.0653, 46.2277, 0.59 ) }
    dend_35 { pt3dadd( -36.8591, -84.8253, 47.5075, 0.29 ) }
    dend_35 { pt3dadd( -36.9305, -85.6455, 48.0525, 0.29 ) }
    dend_35 { pt3dadd( -36.9417, -85.7172, 48.0926, 0.29 ) }
    dend_35 { pt3dadd( -37.3116, -87.0615, 48.8575, 0.29 ) }
    dend_35 { pt3dadd( -37.6271, -87.856, 49.3342, 0.74 ) }
    dend_35 { pt3dadd( -37.9297, -88.431, 49.6924, 1.03 ) }
    dend_35 { pt3dadd( -38.3597, -89.137, 50.1421, 0.88 ) }
    dend_35 { pt3dadd( -38.6361, -89.5741, 50.4447, 0.44 ) }
    dend_35 { pt3dadd( -39.592, -91.1056, 51.5579, 0.74 ) }
    dend_35 { pt3dadd( -40.2507, -92.1725, 52.4104, 0.88 ) }
    dend_35 { pt3dadd( -40.8235, -93.0633, 53.2852, 0.88 ) }
    dend_35 { pt3dadd( -41.1022, -93.4656, 53.7538, 0.96 ) }
    dend_35 { pt3dadd( -45.6319, -100.002, 60.1354, 0.96 ) }
    dend_35 { pt3dadd( -52.0048, -106.654, 64.5227, 0.96 ) }
    dend_35 { pt3dadd( -57.2077, -112.616, 70.9014, 0.96 ) }
    dend_35 { pt3dadd( -61.8328, -118.56, 77.7252, 0.96 ) }
    dend_35 { pt3dadd( -66.4999, -125.423, 83.6829, 0.96 ) }
    dend_35 { pt3dadd( -69.835, -131.297, 91.2716, 0.96 ) }
    dend_35 { pt3dadd( -73.9298, -136.017, 99.2103, 0.96 ) }
    dend_35 { pt3dadd( -77.2102, -141.986, 106.755, 0.96 ) }
    dend_35 { pt3dadd( -79.331, -149.175, 113.728, 0.96 ) }
    dend_35 { pt3dadd( -81.8055, -154.994, 121.676, 0.96 ) }
    dend_35 { pt3dadd( -83.8668, -159.834, 130.307, 0.96 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 57/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -29.2665, -68.4763, 36.5509, 0.29 ) }
    dend_34 { pt3dadd( -30.5819, -68.0666, 37.3317, 0.29 ) }
    dend_34 { pt3dadd( -31.2777, -67.939, 37.5693, 0.29 ) }
    dend_34 { pt3dadd( -32.3255, -67.8117, 37.8993, 0.22 ) }
    dend_34 { pt3dadd( -32.9579, -67.7525, 38.1242, 0.22 ) }
    dend_34 { pt3dadd( -33.4835, -67.703, 38.3139, 1.11 ) }
    dend_34 { pt3dadd( -33.8519, -67.6626, 38.4628, 1.25 ) }
    dend_34 { pt3dadd( -35.1454, -67.5994, 38.9339, 0.22 ) }
    dend_34 { pt3dadd( -36.1415, -67.5891, 39.2948, 0.52 ) }
    dend_34 { pt3dadd( -37.1369, -67.5641, 39.6463, 0.37 ) }
    dend_34 { pt3dadd( -37.6486, -67.5162, 39.8575, 0.37 ) }
    dend_34 { pt3dadd( -38.8675, -67.3435, 40.4557, 0.37 ) }
    dend_34 { pt3dadd( -47.7037, -65.0849, 44.6142, 0.37 ) }
    dend_34 { pt3dadd( -55.7453, -61.5838, 49.5352, 0.37 ) }
    dend_34 { pt3dadd( -63.5699, -57.2057, 54.16, 0.37 ) }
    dend_34 { pt3dadd( -71.6251, -52.3398, 57.8529, 0.37 ) }
    dend_34 { pt3dadd( -80.2886, -47.7952, 60.3451, 0.37 ) }
    dend_34 { pt3dadd( -89.1332, -43.3535, 62.3148, 0.37 ) }
    dend_34 { pt3dadd( -97.7263, -37.9836, 62.3706, 0.37 ) }
    dend_34 { pt3dadd( -105.704, -31.9938, 64.3239, 0.37 ) }
    dend_34 { pt3dadd( -112.613, -24.6143, 66.0162, 0.37 ) }
    dend_34 { pt3dadd( -120.289, -17.9208, 66.6786, 0.37 ) }
    dend_34 { pt3dadd( -128.337, -11.7273, 66.014, 0.37 ) }
    dend_34 { pt3dadd( -136.173, -5.50582, 64.1464, 0.37 ) }
    dend_34 { pt3dadd( -143.456, 0.887707, 61.0022, 0.37 ) }
    dend_34 { pt3dadd( -150.972, 6.15398, 56.7187, 0.37 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 83/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.13524, -50.0211, -4.08106, 0.29 ) }
    dend_32 { pt3dadd( -3.23889, -51.6135, -4.70716, 0.29 ) }
    dend_32 { pt3dadd( -4.11259, -52.8776, -5.29555, 0.22 ) }
    dend_32 { pt3dadd( -4.52078, -53.4942, -5.62784, 1.18 ) }
    dend_32 { pt3dadd( -4.80563, -53.9468, -5.88004, 1.47 ) }
    dend_32 { pt3dadd( -5.16451, -54.5616, -6.24957, 1.11 ) }
    dend_32 { pt3dadd( -5.78277, -55.6943, -6.9293, 0.22 ) }
    dend_32 { pt3dadd( -6.28877, -56.7145, -7.58436, 0.22 ) }
    dend_32 { pt3dadd( -6.77542, -57.7639, -8.21928, 1.62 ) }
    dend_32 { pt3dadd( -6.93516, -58.131, -8.43338, 1.84 ) }
    dend_32 { pt3dadd( -7.50127, -59.5347, -9.19534, 0.88 ) }
    dend_32 { pt3dadd( -7.88045, -60.4724, -9.71581, 0.29 ) }
    dend_32 { pt3dadd( -7.90702, -60.5309, -9.74887, 0.29 ) }
    dend_32 { pt3dadd( -8.29803, -61.2646, -10.1447, 0.29 ) }
    dend_32 { pt3dadd( -8.57747, -61.7174, -10.4227, 0.29 ) }
    dend_32 { pt3dadd( -8.86374, -62.1524, -10.7065, 0.22 ) }
    dend_32 { pt3dadd( -9.57962, -63.2711, -11.4663, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_32 { pt3dadd( -10.0855, -64.1125, -12.0665, 1.92 ) }
    dend_32 { pt3dadd( -10.3923, -64.6795, -12.4614, 2.21 ) }
    dend_32 { pt3dadd( -11.3308, -66.6607, -13.7814, 0.22 ) }
    dend_32 { pt3dadd( -11.599, -67.323, -14.1727, 0.22 ) }
    dend_32 { pt3dadd( -11.8484, -68.1157, -14.5516, 0.22 ) }
    dend_32 { pt3dadd( -11.935, -68.4827, -14.6682, 0.96 ) }
    dend_32 { pt3dadd( -12.0642, -69.1421, -14.8248, 1.18 ) }
    dend_32 { pt3dadd( -12.1931, -69.8491, -14.9709, 0.74 ) }
    dend_32 { pt3dadd( -12.2925, -70.3707, -15.0626, 0.37 ) }
    dend_32 { pt3dadd( -12.493, -71.2293, -15.2407, 0.22 ) }
    dend_32 { pt3dadd( -12.7393, -72.2088, -15.455, 0.22 ) }
    dend_32 { pt3dadd( -13.0629, -73.317, -15.7216, 1.47 ) }
    dend_32 { pt3dadd( -13.3182, -74.0648, -15.9129, 2.06 ) }
    dend_32 { pt3dadd( -13.7142, -75.117, -16.199, 1.18 ) }
    dend_32 { pt3dadd( -14.0918, -76.0685, -16.4739, 0.22 ) }
    dend_32 { pt3dadd( -14.3207, -76.654, -16.6573, 0.22 ) }
    dend_32 { pt3dadd( -14.6439, -77.6428, -17.0938, 0.22 ) }
    dend_32 { pt3dadd( -14.8502, -78.3612, -17.438, 0.22 ) }
    dend_32 { pt3dadd( -14.8644, -78.4223, -17.4742, 0.22 ) }
    dend_32 { pt3dadd( -15.0529, -79.3692, -18.1119, 1.84 ) }
    dend_32 { pt3dadd( -15.2216, -80.3061, -18.7954, 2.36 ) }
    dend_32 { pt3dadd( -15.6783, -82.9563, -20.8767, 0.29 ) }
    dend_32 { pt3dadd( -15.81, -83.826, -21.5909, 0.29 ) }
    dend_32 { pt3dadd( -16.1027, -85.6176, -23.0853, 0.59 ) }
    dend_32 { pt3dadd( -16.1135, -85.6725, -23.1306, 0.59 ) }
    dend_32 { pt3dadd( -16.2426, -86.1859, -23.5436, 0.59 ) }
    dend_32 { pt3dadd( -16.5935, -87.2705, -24.3691, 0.22 ) }
    dend_32 { pt3dadd( -16.8746, -87.938, -24.8069, 2.06 ) }
    dend_32 { pt3dadd( -17.204, -88.6463, -25.2178, 2.43 ) }
    dend_32 { pt3dadd( -18.1268, -90.4902, -26.0134, 0.22 ) }
    dend_32 { pt3dadd( -18.4951, -91.2517, -26.2952, 0.22 ) }
    dend_32 { pt3dadd( -18.7284, -91.757, -26.4454, 0.22 ) }
    dend_32 { pt3dadd( -19.1197, -92.6715, -26.6237, 1.11 ) }
    dend_32 { pt3dadd( -19.3076, -93.1735, -26.7011, 1.55 ) }
    dend_32 { pt3dadd( -19.5455, -93.9271, -26.783, 1.11 ) }
    dend_32 { pt3dadd( -19.8128, -94.9841, -26.8377, 0.44 ) }
    dend_32 { pt3dadd( -19.9433, -95.6679, -26.8668, 0.22 ) }
    dend_32 { pt3dadd( -20.0424, -96.1995, -26.8856, 0.52 ) }
    dend_32 { pt3dadd( -20.2205, -97.1082, -26.9325, 0.22 ) }
    dend_32 { pt3dadd( -20.3379, -97.6351, -26.9629, 0.88 ) }
    dend_32 { pt3dadd( -20.5137, -98.3401, -27.0101, 1.11 ) }
    dend_32 { pt3dadd( -20.8249, -99.3589, -27.0851, 0.22 ) }
    dend_32 { pt3dadd( -21.1162, -100.182, -27.16, 0.22 ) }
    dend_32 { pt3dadd( -21.4667, -101.055, -27.1869, 0.96 ) }
    dend_32 { pt3dadd( -21.4961, -101.122, -27.1854, 0.96 ) }
    dend_32 { pt3dadd( -21.7084, -101.555, -27.1679, 1.25 ) }
    dend_32 { pt3dadd( -22.3683, -102.803, -27.1078, 0.22 ) }
    dend_32 { pt3dadd( -22.8753, -103.698, -27.0635, 0.22 ) }
    dend_32 { pt3dadd( -23.5828, -104.92, -27.0004, 1.55 ) }
    dend_32 { pt3dadd( -23.8333, -105.337, -26.976, 2.06 ) }
    dend_32 { pt3dadd( -24.3653, -106.215, -26.9494, 1.92 ) }
    dend_32 { pt3dadd( -25.117, -107.386, -26.9445, 0.22 ) }
    dend_32 { pt3dadd( -25.5994, -108.108, -26.9588, 0.22 ) }
    dend_32 { pt3dadd( -26.1271, -108.913, -27.027, 1.25 ) }
    dend_32 { pt3dadd( -26.3452, -109.274, -27.0792, 1.4 ) }
    dend_32 { pt3dadd( -26.7566, -110.04, -27.2046, 0.66 ) }
    dend_32 { pt3dadd( -27.3551, -111.294, -27.4298, 0.22 ) }
    dend_32 { pt3dadd( -27.6495, -112.085, -27.5574, 0.22 ) }
    dend_32 { pt3dadd( -27.8916, -113.065, -27.6795, 1.25 ) }
    dend_32 { pt3dadd( -27.986, -113.821, -27.7547, 1.47 ) }
    dend_32 { pt3dadd( -28.0073, -114.71, -27.8535, 0.66 ) }
    dend_32 { pt3dadd( -28.003, -114.783, -27.8618, 0.66 ) }
    dend_32 { pt3dadd( -27.8151, -116.283, -28.0601, 0.22 ) }
    dend_32 { pt3dadd( -27.6793, -117.318, -28.1933, 0.22 ) }
    dend_32 { pt3dadd( -27.5481, -118.69, -28.3047, 1.11 ) }
    dend_32 { pt3dadd( -27.4934, -119.826, -28.3398, 1.77 ) }
    dend_32 { pt3dadd( -27.4911, -120.056, -28.3255, 1.84 ) }
    dend_32 { pt3dadd( -27.5191, -121.005, -28.2149, 0.96 ) }
    dend_32 { pt3dadd( -27.6173, -122.164, -28.0252, 0.22 ) }
    dend_32 { pt3dadd( -27.8031, -123.775, -27.6369, 0.22 ) }
    dend_32 { pt3dadd( -27.9337, -124.792, -27.3334, 0.74 ) }
    dend_32 { pt3dadd( -28.1396, -126.43, -26.735, 0.15 ) }
    dend_32 { pt3dadd( -28.2374, -127.288, -26.3945, 1.18 ) }
    dend_32 { pt3dadd( -28.31, -128.029, -26.1068, 1.62 ) }
    dend_32 { pt3dadd( -28.4523, -129.559, -25.5802, 0.37 ) }
    dend_32 { pt3dadd( -28.5392, -130.445, -25.3388, 0.15 ) }
    dend_32 { pt3dadd( -28.6965, -131.841, -25.0548, 0.15 ) }
    dend_32 { pt3dadd( -28.764, -132.374, -25.0125, 1.25 ) }
    dend_32 { pt3dadd( -28.8927, -133.712, -25.0293, 0.59 ) }
    dend_32 { pt3dadd( -28.9151, -134.827, -25.5542, 0.22 ) }
    dend_32 { pt3dadd( -28.898, -135.567, -26.1973, 0.22 ) }
    dend_32 { pt3dadd( -28.8988, -135.978, -26.6313, 0.44 ) }
    dend_32 { pt3dadd( -28.9397, -137.088, -27.9785, 1.55 ) }
    dend_32 { pt3dadd( -28.9864, -137.738, -28.8417, 1.4 ) }
    dend_32 { pt3dadd( -29.3338, -141.273, -33.778, 0.96 ) }
    dend_32 { pt3dadd( -29.4395, -142.173, -35.1091, 0.15 ) }
    dend_32 { pt3dadd( -29.5247, -142.743, -35.9678, 0.15 ) }
    dend_32 { pt3dadd( -29.642, -143.31, -36.8083, 0.15 ) }
    dend_32 { pt3dadd( -29.7907, -143.793, -37.4938, 1.03 ) }
    dend_32 { pt3dadd( -30.0393, -144.361, -38.1461, 1.18 ) }
    dend_32 { pt3dadd( -30.219, -144.696, -38.2949, 0.66 ) }
    dend_32 { pt3dadd( -30.5718, -145.492, -38.5385, 0.15 ) }
    dend_32 { pt3dadd( -30.7248, -146.043, -38.6807, 0.29 ) }
    dend_32 { pt3dadd( -30.7891, -146.414, -38.7535, 0.29 ) }
    dend_32 { pt3dadd( -30.7963, -146.486, -38.7667, 0.29 ) }
    dend_32 { pt3dadd( -30.82, -147.246, -38.9172, 0.15 ) }
    dend_32 { pt3dadd( -30.8074, -147.784, -39.0412, 0.07 ) }
    dend_32 { pt3dadd( -30.7534, -148.557, -39.2246, 0.15 ) }
    dend_32 { pt3dadd( -30.7028, -149.146, -39.3827, 0.88 ) }
    dend_32 { pt3dadd( -30.6207, -149.99, -39.6078, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_32 { pt3dadd( -30.5585, -150.642, -39.7694, 0.15 ) }
    dend_32 { pt3dadd( -30.4938, -151.364, -39.9501, 1.4 ) }
    dend_32 { pt3dadd( -30.4366, -152.119, -40.1306, 1.77 ) }
    dend_32 { pt3dadd( -30.3684, -152.987, -40.3141, 1.03 ) }
    dend_32 { pt3dadd( -30.2763, -153.987, -40.5054, 0.22 ) }
    dend_32 { pt3dadd( -30.1774, -154.974, -40.6809, 0.44 ) }
    dend_32 { pt3dadd( -30.1146, -155.476, -40.7456, 0.74 ) }
    dend_32 { pt3dadd( -30.0821, -155.704, -40.763, 0.74 ) }
    dend_32 { pt3dadd( -29.9165, -156.772, -40.8134, 0.22 ) }
    dend_32 { pt3dadd( -29.7987, -157.606, -40.838, 0.88 ) }
    dend_32 { pt3dadd( -29.7437, -158.071, -40.8519, 1.25 ) }
    dend_32 { pt3dadd( -29.6195, -159.604, -40.8908, 0.22 ) }
    dend_32 { pt3dadd( -29.5888, -160.242, -40.9009, 0.59 ) }
    dend_32 { pt3dadd( -29.5829, -160.547, -40.9081, 0.59 ) }
    dend_32 { pt3dadd( -29.5861, -161.489, -40.939, 0.29 ) }
    dend_32 { pt3dadd( -29.5864, -161.563, -40.9436, 0.29 ) }
    dend_32 { pt3dadd( -29.5871, -162.101, -41.0013, 0.29 ) }
    dend_32 { pt3dadd( -29.5719, -162.791, -41.0956, 0.22 ) }
    dend_32 { pt3dadd( -29.5287, -163.324, -41.1671, 0.96 ) }
    dend_32 { pt3dadd( -29.4563, -163.909, -41.2535, 0.88 ) }
    dend_32 { pt3dadd( -29.2322, -165.107, -41.4242, 0.22 ) }
    dend_32 { pt3dadd( -28.9895, -166.273, -41.5656, 1.55 ) }
    dend_32 { pt3dadd( -28.7942, -167.141, -41.6592, 1.92 ) }
    dend_32 { pt3dadd( -28.7267, -167.445, -41.6881, 1.62 ) }
    dend_32 { pt3dadd( -28.4286, -168.827, -41.8003, 0.22 ) }
    dend_32 { pt3dadd( -28.128, -170.332, -41.8822, 0.22 ) }
    dend_32 { pt3dadd( -27.9546, -171.208, -41.8984, 0.66 ) }
    dend_32 { pt3dadd( -27.8934, -171.517, -41.8929, 1.03 ) }
    dend_32 { pt3dadd( -27.8122, -171.97, -41.8761, 1.03 ) }
    dend_32 { pt3dadd( -27.79, -172.115, -41.8718, 1.03 ) }
    dend_32 { pt3dadd( -27.6345, -173.418, -41.8328, 0.22 ) }
    dend_32 { pt3dadd( -27.5871, -174.046, -41.8491, 0.22 ) }
    dend_32 { pt3dadd( -27.556, -174.667, -41.9005, 1.11 ) }
    dend_32 { pt3dadd( -27.5317, -175.282, -41.9638, 1.11 ) }
    dend_32 { pt3dadd( -27.4883, -176.581, -42.1399, 0.22 ) }
    dend_32 { pt3dadd( -27.4735, -177.034, -42.2061, 0.44 ) }
    dend_32 { pt3dadd( -27.4409, -178.583, -42.4399, 0.22 ) }
    dend_32 { pt3dadd( -27.4371, -179.862, -42.6228, 1.47 ) }
    dend_32 { pt3dadd( -27.4381, -180.201, -42.6684, 1.77 ) }
    dend_32 { pt3dadd( -27.484, -182.034, -42.8853, 0.22 ) }
    dend_32 { pt3dadd( -27.5175, -183.316, -43.0035, 0.22 ) }
    dend_32 { pt3dadd( -27.5148, -184.466, -43.096, 0.22 ) }
    dend_32 { pt3dadd( -27.4813, -185.228, -43.1547, 1.18 ) }
    dend_32 { pt3dadd( -27.435, -185.759, -43.2015, 1.55 ) }
    dend_32 { pt3dadd( -27.3704, -186.413, -43.2691, 1.55 ) }
    dend_32 { pt3dadd( -27.2087, -187.566, -43.4002, 0.22 ) }
    dend_32 { pt3dadd( -26.9581, -188.873, -43.58, 0.22 ) }
    dend_32 { pt3dadd( -26.6378, -190.253, -43.7777, 0.22 ) }
    dend_32 { pt3dadd( -26.4849, -190.856, -43.864, 0.74 ) }
    dend_32 { pt3dadd( -26.3252, -191.517, -43.934, 0.74 ) }
    dend_32 { pt3dadd( -26.0618, -192.662, -44.0113, 0.22 ) }
    dend_32 { pt3dadd( -25.9382, -193.51, -43.9782, 0.22 ) }
    dend_32 { pt3dadd( -25.868, -194.339, -43.8692, 1.47 ) }
    dend_32 { pt3dadd( -25.8624, -194.647, -43.805, 1.47 ) }
    dend_32 { pt3dadd( -25.9275, -196.263, -43.3969, 0.22 ) }
    dend_32 { pt3dadd( -26.0342, -197.401, -43.0693, 0.52 ) }
    dend_32 { pt3dadd( -26.384, -199.296, -42.45, 0.22 ) }
    dend_32 { pt3dadd( -26.4034, -199.36, -42.4212, 0.22 ) }
    dend_32 { pt3dadd( -26.7425, -200.134, -41.9839, 0.22 ) }
    dend_32 { pt3dadd( -26.9777, -200.541, -41.7159, 0.66 ) }
    dend_32 { pt3dadd( -27.0104, -200.582, -41.6841, 0.66 ) }
    dend_32 { pt3dadd( -27.157, -200.729, -41.5542, 0.66 ) }
    dend_32 { pt3dadd( -28.4732, -201.948, -40.4947, 0.22 ) }
    dend_32 { pt3dadd( -29.1192, -202.553, -39.967, 0.22 ) }
    dend_32 { pt3dadd( -29.3242, -202.752, -39.7979, 0.96 ) }
    dend_32 { pt3dadd( -29.5611, -202.982, -39.6122, 0.96 ) }
    dend_32 { pt3dadd( -30.656, -204.087, -38.8258, 0.22 ) }
    dend_32 { pt3dadd( -30.948, -204.417, -38.6535, 0.22 ) }
    dend_32 { pt3dadd( -31.0148, -204.499, -38.6269, 0.22 ) }
    dend_32 { pt3dadd( -31.5797, -205.238, -38.4236, 0.96 ) }
    dend_32 { pt3dadd( -31.6266, -205.304, -38.4093, 0.96 ) }
    dend_32 { pt3dadd( -31.8569, -205.701, -38.3572, 0.96 ) }
    dend_32 { pt3dadd( -32.4314, -207.12, -38.2097, 0.22 ) }
    dend_32 { pt3dadd( -32.4558, -207.199, -38.1993, 0.22 ) }
    dend_32 { pt3dadd( -32.7165, -208.328, -38.0349, 0.22 ) }
    dend_32 { pt3dadd( -32.7237, -208.4, -38.0226, 0.22 ) }
    dend_32 { pt3dadd( -32.7426, -209.535, -37.8193, 0.22 ) }
    dend_32 { pt3dadd( -32.6552, -210.932, -37.5609, 0.96 ) }
    dend_32 { pt3dadd( -32.5853, -211.475, -37.459, 1.33 ) }
    dend_32 { pt3dadd( -32.5183, -211.882, -37.3872, 1.33 ) }
    dend_32 { pt3dadd( -32.1278, -213.72, -37.125, 0.29 ) }
    dend_32 { pt3dadd( -31.8468, -215.065, -36.9797, 0.22 ) }
    dend_32 { pt3dadd( -31.6641, -215.936, -36.9221, 0.88 ) }
    dend_32 { pt3dadd( -31.5854, -216.315, -36.9173, 1.25 ) }
    dend_32 { pt3dadd( -31.4343, -217.055, -36.9195, 0.74 ) }
    dend_32 { pt3dadd( -31.1539, -218.463, -36.9538, 0.15 ) }
    dend_32 { pt3dadd( -31.0416, -219.053, -36.9958, 0.15 ) }
    dend_32 { pt3dadd( -30.8869, -219.906, -37.0657, 0.15 ) }
    dend_32 { pt3dadd( -30.7361, -220.961, -37.1534, 0.81 ) }
    dend_32 { pt3dadd( -30.7282, -221.034, -37.1589, 0.81 ) }
    dend_32 { pt3dadd( -30.7155, -221.264, -37.1738, 0.81 ) }
    dend_32 { pt3dadd( -30.7302, -222.668, -37.2877, 0.22 ) }
    dend_32 { pt3dadd( -30.7986, -223.741, -37.3963, 0.22 ) }
    dend_32 { pt3dadd( -30.9141, -224.508, -37.4836, 1.03 ) }
    dend_32 { pt3dadd( -31.0421, -225.042, -37.5755, 1.11 ) }
    dend_32 { pt3dadd( -31.191, -225.52, -37.6877, 1.11 ) }
    dend_32 { pt3dadd( -31.7726, -227.154, -38.2511, 0.15 ) }
    dend_32 { pt3dadd( -32.144, -227.987, -38.6791, 0.15 ) }
    dend_32 { pt3dadd( -32.4502, -228.593, -39.1058, 0.59 ) }
    dend_32 { pt3dadd( -33.0216, -229.641, -40.0614, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_32 { pt3dadd( -33.3514, -230.195, -40.6331, 0.66 ) }
    dend_32 { pt3dadd( -34.251, -231.584, -42.1964, 0.22 ) }
    dend_32 { pt3dadd( -35.1539, -232.781, -43.6322, 0.44 ) }
    dend_32 { pt3dadd( -35.9864, -233.802, -44.8959, 1.33 ) }
    dend_32 { pt3dadd( -37.4175, -235.45, -46.9108, 0.15 ) }
    dend_32 { pt3dadd( -38.1298, -236.214, -47.7776, 1.4 ) }
    dend_32 { pt3dadd( -38.4004, -236.482, -48.0561, 1.4 ) }
    dend_32 { pt3dadd( -39.894, -237.788, -49.1497, 0.22 ) }
    dend_32 { pt3dadd( -39.9446, -237.832, -49.1732, 0.22 ) }
    dend_32 { pt3dadd( -40.4984, -238.322, -49.3047, 0.22 ) }
    dend_32 { pt3dadd( -41.398, -239.162, -49.3296, 0.22 ) }
    dend_32 { pt3dadd( -42.0995, -239.882, -49.2921, 1.11 ) }
    dend_32 { pt3dadd( -43.2364, -241.147, -49.1335, 0.22 ) }
    dend_32 { pt3dadd( -44.0147, -242.09, -48.9404, 0.22 ) }
    dend_32 { pt3dadd( -44.3352, -242.456, -48.794, 0.66 ) }
    dend_32 { pt3dadd( -45.1778, -243.354, -48.263, 0.22 ) }
    dend_32 { pt3dadd( -45.2236, -243.397, -48.2298, 0.22 ) }
    dend_32 { pt3dadd( -45.771, -243.887, -47.7823, 1.25 ) }
    dend_32 { pt3dadd( -46.1088, -244.166, -47.4838, 1.47 ) }
    dend_32 { pt3dadd( -48.0617, -245.605, -45.6084, 0.29 ) }
    dend_32 { pt3dadd( -48.7699, -246.074, -44.9097, 0.15 ) }
    dend_32 { pt3dadd( -49.5815, -246.541, -44.1058, 0.44 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 22/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -2.13524, -50.0211, -4.08106, 1.77 ) }
    dend_27 { pt3dadd( -1.78284, -51.3042, -4.3968, 1.77 ) }
    dend_27 { pt3dadd( -1.41542, -52.7318, -4.68802, 0.66 ) }
    dend_27 { pt3dadd( -1.06666, -54.1516, -4.92806, 0.59 ) }
    dend_27 { pt3dadd( -0.814398, -55.1397, -4.96921, 0.81 ) }
    dend_27 { pt3dadd( -0.474936, -56.3402, -4.90238, 0.44 ) }
    dend_27 { pt3dadd( -0.246832, -57.0044, -4.82555, 1.11 ) }
    dend_27 { pt3dadd( -0.22283, -57.0602, -4.81142, 1.11 ) }
    dend_27 { pt3dadd( 0.0519742, -57.5749, -4.6037, 1.25 ) }
    dend_27 { pt3dadd( 1.03697, -59.0685, -3.8567, 0.81 ) }
    dend_27 { pt3dadd( 1.67016, -59.8521, -3.45097, 0.37 ) }
    dend_27 { pt3dadd( 2.47077, -60.7218, -3.03928, 0.37 ) }
    dend_27 { pt3dadd( 2.92197, -61.2055, -2.80974, 0.22 ) }
    dend_27 { pt3dadd( 2.96673, -61.2572, -2.78787, 0.22 ) }
    dend_27 { pt3dadd( 3.26628, -61.6345, -2.63579, 0.22 ) }
    dend_27 { pt3dadd( 3.82986, -62.4386, -2.36403, 1.69 ) }
    dend_27 { pt3dadd( 4.27563, -63.1538, -2.10207, 2.43 ) }
    dend_27 { pt3dadd( 4.90256, -64.2631, -1.68271, 2.43 ) }
    dend_27 { pt3dadd( 5.58313, -65.5256, -1.21595, 0.59 ) }
    dend_27 { pt3dadd( 6.03952, -66.375, -0.908431, 0.37 ) }
    dend_27 { pt3dadd( 6.47853, -67.1747, -0.630996, 0.29 ) }
    dend_27 { pt3dadd( 6.51374, -67.2348, -0.611608, 0.29 ) }
    dend_27 { pt3dadd( 6.93243, -67.8711, -0.42374, 1.62 ) }
    dend_27 { pt3dadd( 7.27204, -68.2853, -0.341281, 1.99 ) }
    dend_27 { pt3dadd( 7.3292, -68.3423, -0.327735, 1.99 ) }
    dend_27 { pt3dadd( 7.87149, -68.8381, -0.201436, 1.84 ) }
    dend_27 { pt3dadd( 7.92082, -68.8866, -0.183277, 1.84 ) }
    dend_27 { pt3dadd( 8.38004, -69.3893, 0.0263235, 1.92 ) }
    dend_27 { pt3dadd( 9.09368, -70.2472, 0.411184, 0.74 ) }
    dend_27 { pt3dadd( 10.1997, -71.719, 1.10089, 0.37 ) }
    dend_27 { pt3dadd( 10.238, -71.7743, 1.12676, 0.37 ) }
    dend_27 { pt3dadd( 10.9162, -72.8231, 1.57959, 0.66 ) }
    dend_27 { pt3dadd( 11.263, -73.3603, 1.7757, 0.66 ) }
    dend_27 { pt3dadd( 11.3058, -73.4279, 1.79642, 0.66 ) }
    dend_27 { pt3dadd( 11.98, -74.4858, 2.03232, 0.29 ) }
    dend_27 { pt3dadd( 12.8513, -75.7904, 2.18229, 1.03 ) }
    dend_27 { pt3dadd( 13.4142, -76.643, 2.21173, 1.69 ) }
    dend_27 { pt3dadd( 13.9824, -77.5441, 2.1765, 2.28 ) }
    dend_27 { pt3dadd( 14.1707, -77.8704, 2.15384, 2.28 ) }
    dend_27 { pt3dadd( 14.6751, -78.8289, 2.0626, 0.96 ) }
    dend_27 { pt3dadd( 15.0659, -79.6687, 1.95843, 0.29 ) }
    dend_27 { pt3dadd( 15.7618, -81.4172, 1.73495, 0.29 ) }
    dend_27 { pt3dadd( 16.2407, -82.7229, 1.59799, 0.29 ) }
    dend_27 { pt3dadd( 16.5275, -83.5605, 1.52153, 0.96 ) }
    dend_27 { pt3dadd( 16.7765, -84.2424, 1.45908, 1.33 ) }
    dend_27 { pt3dadd( 16.9433, -84.6679, 1.42001, 1.33 ) }
    dend_27 { pt3dadd( 17.4328, -85.7688, 1.33031, 0.37 ) }
    dend_27 { pt3dadd( 17.8142, -86.4807, 1.27505, 0.29 ) }
    dend_27 { pt3dadd( 17.892, -86.6147, 1.26262, 0.29 ) }
    dend_27 { pt3dadd( 18.3018, -87.3482, 1.19164, 0.29 ) }
    dend_27 { pt3dadd( 18.333, -87.4133, 1.18245, 0.29 ) }
    dend_27 { pt3dadd( 18.5908, -88.1189, 1.07274, 0.29 ) }
    dend_27 { pt3dadd( 18.9118, -89.4596, 0.860102, 1.33 ) }
    dend_27 { pt3dadd( 19.0278, -90.1463, 0.798957, 1.77 ) }
    dend_27 { pt3dadd( 19.125, -90.7767, 0.771333, 1.77 ) }
    dend_27 { pt3dadd( 19.2546, -91.6643, 0.767173, 0.96 ) }
    dend_27 { pt3dadd( 19.438, -92.6506, 0.797255, 0.29 ) }
    dend_27 { pt3dadd( 19.6445, -93.5498, 0.841908, 0.29 ) }
    dend_27 { pt3dadd( 19.9999, -94.7757, 0.936247, 0.66 ) }
    dend_27 { pt3dadd( 20.1878, -95.3445, 0.9783, 1.03 ) }
    dend_27 { pt3dadd( 20.4742, -96.1955, 0.9903, 0.29 ) }
    dend_27 { pt3dadd( 20.7387, -96.956, 0.947377, 0.22 ) }
    dend_27 { pt3dadd( 20.9536, -97.6064, 0.846077, 0.22 ) }
    dend_27 { pt3dadd( 21.1155, -98.1782, 0.729021, 1.33 ) }
    dend_27 { pt3dadd( 21.2689, -98.9044, 0.553058, 1.62 ) }
    dend_27 { pt3dadd( 21.4462, -100.316, 0.228203, 0.81 ) }
    dend_27 { pt3dadd( 21.4922, -101.29, 0.0244784, 0.37 ) }
    dend_27 { pt3dadd( 21.4579, -102.534, -0.18778, 0.29 ) }
    dend_27 { pt3dadd( 21.3754, -103.553, -0.312547, 0.29 ) }
    dend_27 { pt3dadd( 21.3248, -104.085, -0.374011, 0.81 ) }
    dend_27 { pt3dadd( 21.2552, -104.792, -0.439864, 0.96 ) }
    dend_27 { pt3dadd( 21.1758, -105.65, -0.480352, 0.59 ) }
    dend_27 { pt3dadd( 21.1286, -106.381, -0.518814, 0.29 ) }
    dend_27 { pt3dadd( 21.1585, -107.088, -0.576371, 0.29 ) }
    dend_27 { pt3dadd( 21.285, -108.052, -0.678967, 0.22 ) }
    dend_27 { pt3dadd( 21.422, -108.718, -0.749572, 0.96 ) }
    dend_27 { pt3dadd( 21.584, -109.352, -0.822874, 1.33 ) }
    dend_27 { pt3dadd( 21.7874, -110.063, -0.909277, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_27 { pt3dadd( 22.142, -111.251, -1.04903, 0.29 ) }
    dend_27 { pt3dadd( 22.3423, -111.978, -1.11955, 0.29 ) }
    dend_27 { pt3dadd( 22.5022, -112.655, -1.15728, 0.29 ) }
    dend_27 { pt3dadd( 22.7192, -113.693, -1.20582, 1.62 ) }
    dend_27 { pt3dadd( 22.7317, -113.765, -1.21167, 1.62 ) }
    dend_27 { pt3dadd( 22.8334, -114.464, -1.28194, 1.92 ) }
    dend_27 { pt3dadd( 22.9217, -115.154, -1.33004, 1.62 ) }
    dend_27 { pt3dadd( 23.1041, -116.458, -1.39251, 0.29 ) }
    dend_27 { pt3dadd( 23.2572, -117.516, -1.43754, 0.29 ) }
    dend_27 { pt3dadd( 23.4584, -118.937, -1.45411, 0.29 ) }
    dend_27 { pt3dadd( 23.6437, -120.159, -1.4868, 1.18 ) }
    dend_27 { pt3dadd( 23.8259, -121.241, -1.52773, 1.69 ) }
    dend_27 { pt3dadd( 23.9312, -121.818, -1.55442, 1.99 ) }
    dend_27 { pt3dadd( 24.157, -123.018, -1.63561, 0.59 ) }
    dend_27 { pt3dadd( 24.392, -124.258, -1.72962, 0.22 ) }
    dend_27 { pt3dadd( 24.5777, -125.484, -1.82083, 0.59 ) }
    dend_27 { pt3dadd( 24.6281, -126.094, -1.87932, 0.74 ) }
    dend_27 { pt3dadd( 24.6343, -126.48, -1.92215, 0.74 ) }
    dend_27 { pt3dadd( 24.5874, -127.404, -1.99542, 0.22 ) }
    dend_27 { pt3dadd( 24.5247, -127.959, -2.01842, 0.22 ) }
    dend_27 { pt3dadd( 24.3753, -129.085, -2.04162, 0.22 ) }
    dend_27 { pt3dadd( 24.2065, -130.034, -2.00964, 1.18 ) }
    dend_27 { pt3dadd( 24.0159, -130.939, -1.96928, 1.92 ) }
    dend_27 { pt3dadd( 23.9181, -131.389, -1.94386, 1.92 ) }
    dend_27 { pt3dadd( 23.8984, -131.491, -1.93691, 1.92 ) }
    dend_27 { pt3dadd( 23.6704, -133.085, -1.87, 0.29 ) }
    dend_27 { pt3dadd( 23.5547, -134.372, -1.8548, 0.29 ) }
    dend_27 { pt3dadd( 23.5307, -134.888, -1.86566, 0.29 ) }
    dend_27 { pt3dadd( 23.5315, -134.961, -1.86777, 0.29 ) }
    dend_27 { pt3dadd( 23.6235, -136.062, -1.90536, 0.29 ) }
    dend_27 { pt3dadd( 23.7856, -136.955, -1.93885, 1.11 ) }
    dend_27 { pt3dadd( 24.0218, -137.746, -1.94566, 1.4 ) }
    dend_27 { pt3dadd( 24.2621, -138.388, -1.94075, 1.33 ) }
    dend_27 { pt3dadd( 24.5205, -139.048, -1.90688, 1.03 ) }
    dend_27 { pt3dadd( 24.7736, -139.672, -1.85365, 0.74 ) }
    dend_27 { pt3dadd( 25.232, -140.777, -1.73553, 0.37 ) }
    dend_27 { pt3dadd( 25.6934, -141.904, -1.63525, 0.29 ) }
    dend_27 { pt3dadd( 25.9849, -142.637, -1.61651, 0.29 ) }
    dend_27 { pt3dadd( 26.3598, -143.611, -1.63765, 1.33 ) }
    dend_27 { pt3dadd( 26.7058, -144.533, -1.70454, 1.77 ) }
    dend_27 { pt3dadd( 27.056, -145.439, -1.78462, 1.18 ) }
    dend_27 { pt3dadd( 27.4554, -146.428, -1.89095, 0.52 ) }
    dend_27 { pt3dadd( 28.0798, -147.84, -2.06709, 0.29 ) }
    dend_27 { pt3dadd( 28.1104, -147.906, -2.07498, 0.29 ) }
    dend_27 { pt3dadd( 28.7715, -149.251, -2.23566, 0.29 ) }
    dend_27 { pt3dadd( 29.3484, -150.379, -2.28667, 0.29 ) }
    dend_27 { pt3dadd( 29.7359, -151.061, -2.26053, 1.55 ) }
    dend_27 { pt3dadd( 30.238, -151.881, -2.16718, 1.84 ) }
    dend_27 { pt3dadd( 30.2761, -151.942, -2.15891, 1.84 ) }
    dend_27 { pt3dadd( 30.6728, -152.579, -2.08479, 1.4 ) }
    dend_27 { pt3dadd( 31.3805, -153.739, -1.981, 0.22 ) }
    dend_27 { pt3dadd( 32.1053, -154.999, -1.94275, 0.22 ) }
    dend_27 { pt3dadd( 32.1342, -155.055, -1.94205, 0.22 ) }
    dend_27 { pt3dadd( 32.4998, -155.9, -1.95419, 0.22 ) }
    dend_27 { pt3dadd( 32.5209, -155.97, -1.9576, 0.22 ) }
    dend_27 { pt3dadd( 32.5559, -156.37, -2.00232, 0.88 ) }
    dend_27 { pt3dadd( 32.5397, -156.43, -2.01035, 0.88 ) }
    dend_27 { pt3dadd( 32.3964, -156.72, -2.01944, 1.11 ) }
    dend_27 { pt3dadd( 32.2102, -157.168, -2.00252, 1.33 ) }
    dend_27 { pt3dadd( 31.8923, -157.981, -1.92825, 0.66 ) }
    dend_27 { pt3dadd( 31.8709, -158.05, -1.92132, 0.66 ) }
    dend_27 { pt3dadd( 31.6816, -158.938, -1.82559, 0.29 ) }
    dend_27 { pt3dadd( 31.5867, -159.66, -1.74567, 0.22 ) }
    dend_27 { pt3dadd( 31.5946, -160.715, -1.57498, 0.22 ) }
    dend_27 { pt3dadd( 31.6027, -160.787, -1.56129, 0.22 ) }
    dend_27 { pt3dadd( 31.702, -161.319, -1.45919, 0.88 ) }
    dend_27 { pt3dadd( 31.7973, -161.793, -1.37543, 1.03 ) }
    dend_27 { pt3dadd( 31.8128, -161.864, -1.36434, 1.03 ) }
    dend_27 { pt3dadd( 32.1376, -163.358, -1.12134, 0.22 ) }
    dend_27 { pt3dadd( 32.2748, -164.103, -0.959505, 0.81 ) }
    dend_27 { pt3dadd( 32.4322, -165.069, -0.735709, 1.47 ) }
    dend_27 { pt3dadd( 32.5065, -165.657, -0.604331, 1.69 ) }
    dend_27 { pt3dadd( 32.5753, -166.26, -0.485591, 1.62 ) }
    dend_27 { pt3dadd( 32.5867, -166.342, -0.473612, 1.62 ) }
    dend_27 { pt3dadd( 32.7996, -167.711, -0.326798, 0.96 ) }
    dend_27 { pt3dadd( 33.0625, -169.16, -0.240296, 0.29 ) }
    dend_27 { pt3dadd( 33.3442, -170.513, -0.216517, 0.29 ) }
    dend_27 { pt3dadd( 33.598, -171.67, -0.215387, 0.29 ) }
    dend_27 { pt3dadd( 33.9527, -173.213, -0.254239, 0.29 ) }
    dend_27 { pt3dadd( 33.9671, -173.274, -0.258373, 0.29 ) }
    dend_27 { pt3dadd( 34.2914, -174.502, -0.464509, 1.69 ) }
    dend_27 { pt3dadd( 34.4713, -175.077, -0.595251, 2.36 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 82/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 68.3811, -14.8688, 59.1373, 0.29 ) }
    dend_23 { pt3dadd( 75.3042, -18.1827, 65.6265, 0.29 ) }
    dend_23 { pt3dadd( 83.0979, -20.6847, 71.4213, 0.29 ) }
    dend_23 { pt3dadd( 91.9435, -23.1648, 75.4434, 0.29 ) }
    dend_23 { pt3dadd( 100.314, -26.8744, 79.6214, 0.29 ) }
    dend_23 { pt3dadd( 108.411, -30.073, 84.6377, 0.29 ) }
    dend_23 { pt3dadd( 116.629, -32.8318, 89.6925, 0.29 ) }
    dend_23 { pt3dadd( 124.633, -36.1725, 94.7732, 0.29 ) }
    dend_23 { pt3dadd( 133.162, -37.7105, 99.7855, 0.29 ) }
    dend_23 { pt3dadd( 141.278, -38.9621, 105.505, 0.29 ) }
    dend_23 { pt3dadd( 148.723, -41.9913, 111.525, 0.29 ) }
    dend_23 { pt3dadd( 155.815, -44.5927, 118.125, 0.29 ) }
    dend_23 { pt3dadd( 163.466, -47.7352, 123.827, 0.29 ) }
    dend_23 { pt3dadd( 169.623, -53.0249, 129.886, 0.29 ) }
    dend_23 { pt3dadd( 174.988, -57.5133, 137.162, 0.29 ) }
    dend_23 { pt3dadd( 180.272, -63.8188, 143.164, 0.29 ) }
    dend_23 { pt3dadd( 186.423, -71.2356, 146.667, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 99/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 68.3811, -14.8688, 59.1373, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_22 { pt3dadd( 74.8078, -17.4112, 66.406, 0.29 ) }
    dend_22 { pt3dadd( 80.8487, -19.7722, 74.0513, 0.29 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 36.8273, 20.0527, -21.9266, 0.29 ) }
    dend_20 { pt3dadd( 37.9481, 18.9515, -22.8466, 0.29 ) }
    dend_20 { pt3dadd( 38.7579, 18.2267, -23.5261, 0.29 ) }
    dend_20 { pt3dadd( 38.9929, 18.0293, -23.7236, 0.74 ) }
    dend_20 { pt3dadd( 39.6951, 17.5514, -24.3422, 0.59 ) }
    dend_20 { pt3dadd( 39.7506, 17.5182, -24.3904, 0.59 ) }
    dend_20 { pt3dadd( 40.4396, 17.1255, -25.0522, 0.29 ) }
    dend_20 { pt3dadd( 40.8985, 16.8751, -25.6045, 0.37 ) }
    dend_20 { pt3dadd( 40.9396, 16.847, -25.6677, 0.37 ) }
    dend_20 { pt3dadd( 41.5258, 16.3612, -26.6619, 0.66 ) }
    dend_20 { pt3dadd( 42.0408, 15.8618, -27.5754, 0.81 ) }
    dend_20 { pt3dadd( 42.912, 14.8332, -29.2482, 1.47 ) }
    dend_20 { pt3dadd( 43.4512, 14.147, -30.3215, 2.14 ) }
    dend_20 { pt3dadd( 44.5937, 12.5543, -32.7116, 0.22 ) }
    dend_20 { pt3dadd( 45.0956, 11.8191, -33.7661, 1.18 ) }
    dend_20 { pt3dadd( 45.3077, 11.479, -34.22, 1.62 ) }
    dend_20 { pt3dadd( 46.2069, 9.96379, -36.1673, 0.22 ) }
    dend_20 { pt3dadd( 46.3835, 9.62175, -36.7513, 0.22 ) }
    dend_20 { pt3dadd( 46.3977, 9.58674, -36.8227, 0.22 ) }
    dend_20 { pt3dadd( 46.4649, 9.36775, -37.308, 0.22 ) }
    dend_20 { pt3dadd( 46.5958, 8.71732, -38.7358, 1.99 ) }
    dend_20 { pt3dadd( 46.6543, 8.21877, -39.7753, 2.43 ) }
    dend_20 { pt3dadd( 46.7619, 4.97576, -46.0885, 0.88 ) }
    dend_20 { pt3dadd( 46.7615, 4.05506, -47.7511, 0.88 ) }
    dend_20 { pt3dadd( 46.756, 3.04901, -49.4696, 0.44 ) }
    dend_20 { pt3dadd( 46.741, 2.19664, -50.8396, 0.81 ) }
    dend_20 { pt3dadd( 46.7282, 1.26783, -52.1981, 0.29 ) }
    dend_20 { pt3dadd( 46.7353, 0.679267, -52.9465, 1.69 ) }
    dend_20 { pt3dadd( 46.7981, -0.0349267, -53.6156, 1.84 ) }
    dend_20 { pt3dadd( 47.1437, -2.21911, -55.7142, 0.22 ) }
    dend_20 { pt3dadd( 47.32, -3.02142, -56.5028, 1.25 ) }
    dend_20 { pt3dadd( 47.4734, -3.45882, -56.9817, 1.4 ) }
    dend_20 { pt3dadd( 47.4934, -3.50301, -57.034, 1.4 ) }
    dend_20 { pt3dadd( 48.2165, -4.82168, -58.661, 0.22 ) }
    dend_20 { pt3dadd( 48.7994, -5.78312, -59.8811, 1.11 ) }
    dend_20 { pt3dadd( 48.8817, -5.90133, -60.0316, 1.25 ) }
    dend_20 { pt3dadd( 50.1775, -7.53431, -62.2906, 0.88 ) }
    dend_20 { pt3dadd( 50.2091, -7.5701, -62.343, 0.88 ) }
    dend_20 { pt3dadd( 50.5015, -7.87487, -62.8188, 0.88 ) }
    dend_20 { pt3dadd( 51.6274, -8.86533, -64.4425, 0.29 ) }
    dend_20 { pt3dadd( 52.0002, -9.14116, -65.0201, 0.29 ) }
    dend_20 { pt3dadd( 52.6084, -9.55899, -66.1106, 1.33 ) }
    dend_20 { pt3dadd( 52.8748, -9.71568, -66.6203, 1.99 ) }
    dend_20 { pt3dadd( 54.3443, -10.4695, -69.453, 0.22 ) }
    dend_20 { pt3dadd( 54.8818, -10.6952, -70.5045, 0.66 ) }
    dend_20 { pt3dadd( 56.7887, -11.2799, -74.153, 1.99 ) }
    dend_20 { pt3dadd( 59.2033, -11.8095, -78.7283, 0.74 ) }
    dend_20 { pt3dadd( 60.1254, -11.934, -80.402, 1.18 ) }
    dend_20 { pt3dadd( 60.496, -11.9533, -81.0461, 1.33 ) }
    dend_20 { pt3dadd( 61.4927, -11.8947, -82.6603, 0.22 ) }
    dend_20 { pt3dadd( 62.1109, -11.8162, -83.6134, 1.33 ) }
    dend_20 { pt3dadd( 63.688, -11.511, -85.6067, 0.22 ) }
    dend_20 { pt3dadd( 64.3797, -11.3346, -86.3333, 0.74 ) }
    dend_20 { pt3dadd( 65.3781, -11.1131, -87.3326, 1.18 ) }
    dend_20 { pt3dadd( 66.8994, -10.7965, -88.7947, 0.15 ) }
    dend_20 { pt3dadd( 67.7996, -10.6243, -89.5852, 1.55 ) }
    dend_20 { pt3dadd( 68.3114, -10.5272, -90.015, 1.77 ) }
    dend_20 { pt3dadd( 69.7968, -10.1847, -91.1146, 0.22 ) }
    dend_20 { pt3dadd( 69.9177, -10.1509, -91.1974, 0.22 ) }
    dend_20 { pt3dadd( 70.6433, -9.88135, -91.5832, 0.59 ) }
    dend_20 { pt3dadd( 71.0049, -9.72522, -91.7417, 0.59 ) }
    dend_20 { pt3dadd( 72.264, -9.13674, -92.2941, 0.22 ) }
    dend_20 { pt3dadd( 72.3876, -9.07202, -92.3527, 0.22 ) }
    dend_20 { pt3dadd( 72.8173, -8.83842, -92.5614, 1.25 ) }
    dend_20 { pt3dadd( 73.2629, -8.60143, -92.7696, 1.62 ) }
    dend_20 { pt3dadd( 75.3336, -7.50421, -93.7051, 0.22 ) }
    dend_20 { pt3dadd( 75.799, -7.26194, -93.9018, 0.59 ) }
    dend_20 { pt3dadd( 76.1071, -7.10175, -94.0214, 0.59 ) }
    dend_20 { pt3dadd( 77.2985, -6.47547, -94.4682, 0.22 ) }
    dend_20 { pt3dadd( 77.9994, -6.09877, -94.7222, 0.96 ) }
    dend_20 { pt3dadd( 78.3451, -5.89933, -94.8343, 1.4 ) }
    dend_20 { pt3dadd( 79.801, -4.99587, -95.188, 0.22 ) }
    dend_20 { pt3dadd( 79.8685, -4.95398, -95.2042, 0.22 ) }
    dend_20 { pt3dadd( 80.349, -4.65644, -95.3137, 0.22 ) }
    dend_20 { pt3dadd( 80.409, -4.62, -95.3236, 0.22 ) }
    dend_20 { pt3dadd( 81.1065, -4.24757, -95.4019, 0.88 ) }
    dend_20 { pt3dadd( 81.1693, -4.21521, -95.4057, 0.88 ) }
    dend_20 { pt3dadd( 81.5707, -4.01234, -95.4057, 1.25 ) }
    dend_20 { pt3dadd( 81.6436, -3.97775, -95.4049, 1.25 ) }
    dend_20 { pt3dadd( 83.263, -3.26818, -95.3842, 0.22 ) }
    dend_20 { pt3dadd( 84.1075, -2.92095, -95.372, 0.22 ) }
    dend_20 { pt3dadd( 84.448, -2.78578, -95.3684, 0.74 ) }
    dend_20 { pt3dadd( 84.588, -2.72929, -95.3674, 0.74 ) }
    dend_20 { pt3dadd( 85.38, -2.40721, -95.364, 0.22 ) }
    dend_20 { pt3dadd( 85.8812, -2.21076, -95.3611, 0.81 ) }
    dend_20 { pt3dadd( 86.098, -2.13025, -95.3596, 0.81 ) }
    dend_20 { pt3dadd( 87.1242, -1.8456, -95.3906, 0.22 ) }
    dend_20 { pt3dadd( 87.6527, -1.74194, -95.4202, 0.22 ) }
    dend_20 { pt3dadd( 87.7217, -1.73183, -95.427, 0.22 ) }
    dend_20 { pt3dadd( 88.4705, -1.68355, -95.5374, 1.25 ) }
    dend_20 { pt3dadd( 88.8254, -1.69012, -95.5974, 1.25 ) }
    dend_20 { pt3dadd( 90.0977, -1.7944, -95.8369, 0.22 ) }
    dend_20 { pt3dadd( 90.4508, -1.86597, -95.9238, 0.52 ) }
    dend_20 { pt3dadd( 91.6214, -2.17952, -96.2603, 0.22 ) }
    dend_20 { pt3dadd( 92.1893, -2.36572, -96.4384, 0.96 ) }
    dend_20 { pt3dadd( 92.7739, -2.58737, -96.6527, 1.18 ) }
    dend_20 { pt3dadd( 92.8355, -2.61156, -96.6765, 1.18 ) }
    dend_20 { pt3dadd( 94.0943, -3.06061, -97.3002, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_20 { pt3dadd( 94.1621, -3.08482, -97.3357, 0.22 ) }
    dend_20 { pt3dadd( 94.6006, -3.25225, -97.5808, 0.22 ) }
    dend_20 { pt3dadd( 95.3106, -3.47423, -97.9745, 1.4 ) }
    dend_20 { pt3dadd( 95.7459, -3.59177, -98.2154, 1.69 ) }
    dend_20 { pt3dadd( 97.9455, -4.1022, -99.4229, 0.22 ) }
    dend_20 { pt3dadd( 98.9581, -4.2896, -99.9562, 0.22 ) }
    dend_20 { pt3dadd( 99.9113, -4.45219, -100.454, 1.4 ) }
    dend_20 { pt3dadd( 100.645, -4.56863, -100.835, 1.4 ) }
    dend_20 { pt3dadd( 100.778, -4.59092, -100.901, 1.4 ) }
    dend_20 { pt3dadd( 102.012, -4.79936, -101.513, 0.22 ) }
    dend_20 { pt3dadd( 102.668, -4.89907, -101.818, 0.22 ) }
    dend_20 { pt3dadd( 103.26, -4.94267, -102.106, 1.11 ) }
    dend_20 { pt3dadd( 103.323, -4.94424, -102.136, 1.11 ) }
    dend_20 { pt3dadd( 103.713, -4.95494, -102.318, 1.4 ) }
    dend_20 { pt3dadd( 105.374, -4.92984, -103.052, 0.22 ) }
    dend_20 { pt3dadd( 105.439, -4.92552, -103.079, 0.22 ) }
    dend_20 { pt3dadd( 106.351, -4.8427, -103.465, 0.22 ) }
    dend_20 { pt3dadd( 107.087, -4.77634, -103.779, 1.11 ) }
    dend_20 { pt3dadd( 107.49, -4.74599, -103.952, 1.55 ) }
    dend_20 { pt3dadd( 107.757, -4.72758, -104.066, 1.55 ) }
    dend_20 { pt3dadd( 109.295, -4.72762, -104.771, 0.22 ) }
    dend_20 { pt3dadd( 109.357, -4.73542, -104.803, 0.22 ) }
    dend_20 { pt3dadd( 110.237, -4.97073, -105.315, 0.74 ) }
    dend_20 { pt3dadd( 110.452, -5.04398, -105.447, 0.74 ) }
    dend_20 { pt3dadd( 110.513, -5.07179, -105.491, 0.74 ) }
    dend_20 { pt3dadd( 111.42, -5.56632, -106.181, 0.52 ) }
    dend_20 { pt3dadd( 111.83, -5.84091, -106.533, 0.81 ) }
    dend_20 { pt3dadd( 111.875, -5.87439, -106.575, 0.81 ) }
    dend_20 { pt3dadd( 112.208, -6.13419, -106.889, 0.81 ) }
    dend_20 { pt3dadd( 113.366, -7.0244, -108.088, 0.22 ) }
    dend_20 { pt3dadd( 113.596, -7.19244, -108.326, 0.88 ) }
    dend_20 { pt3dadd( 114.214, -7.59664, -108.947, 0.22 ) }
    dend_20 { pt3dadd( 114.859, -7.97939, -109.582, 1.33 ) }
    dend_20 { pt3dadd( 115.105, -8.11676, -109.816, 1.62 ) }
    dend_20 { pt3dadd( 116.987, -8.97542, -111.526, 0.29 ) }
    dend_20 { pt3dadd( 117.439, -9.11416, -111.895, 0.44 ) }
    dend_20 { pt3dadd( 118.189, -9.26009, -112.465, 0.22 ) }
    dend_20 { pt3dadd( 118.556, -9.28127, -112.707, 0.88 ) }
    dend_20 { pt3dadd( 118.816, -9.26333, -112.856, 0.88 ) }
    dend_20 { pt3dadd( 120.191, -9.049, -113.546, 0.22 ) }
    dend_20 { pt3dadd( 120.894, -8.85964, -113.866, 0.96 ) }
    dend_20 { pt3dadd( 121.174, -8.77806, -114.004, 0.96 ) }
    dend_20 { pt3dadd( 122.194, -8.49618, -114.63, 0.22 ) }
    dend_20 { pt3dadd( 122.872, -8.31819, -115.095, 0.22 ) }
    dend_20 { pt3dadd( 122.927, -8.30449, -115.136, 0.22 ) }
    dend_20 { pt3dadd( 124.059, -8.05082, -115.99, 1.4 ) }
    dend_20 { pt3dadd( 124.407, -7.97281, -116.259, 1.4 ) }
    dend_20 { pt3dadd( 126.242, -7.5325, -117.737, 0.22 ) }
    dend_20 { pt3dadd( 126.613, -7.43431, -118.047, 0.59 ) }
    dend_20 { pt3dadd( 127.487, -7.17933, -118.759, 0.22 ) }
    dend_20 { pt3dadd( 127.576, -7.15306, -118.824, 0.74 ) }
    dend_20 { pt3dadd( 127.927, -7.04211, -119.05, 0.74 ) }
    dend_20 { pt3dadd( 129.848, -6.36961, -120.218, 0.22 ) }
    dend_20 { pt3dadd( 129.972, -6.31964, -120.287, 0.22 ) }
    dend_20 { pt3dadd( 130.539, -6.08009, -120.622, 0.22 ) }
    dend_20 { pt3dadd( 130.987, -5.88156, -120.891, 0.52 ) }
    dend_20 { pt3dadd( 132.282, -5.29756, -121.661, 0.22 ) }
    dend_20 { pt3dadd( 132.339, -5.27241, -121.693, 0.22 ) }
    dend_20 { pt3dadd( 133.153, -4.89532, -122.062, 1.18 ) }
    dend_20 { pt3dadd( 133.232, -4.86794, -122.116, 1.18 ) }
    dend_20 { pt3dadd( 133.518, -4.78557, -122.348, 1.55 ) }
    dend_20 { pt3dadd( 133.57, -4.77342, -122.393, 1.55 ) }
    dend_20 { pt3dadd( 135.188, -4.48358, -123.834, 0.15 ) }
    dend_20 { pt3dadd( 135.973, -4.37554, -124.499, 1.4 ) }
    dend_20 { pt3dadd( 139.009, -4.07408, -126.986, 0.15 ) }
    dend_20 { pt3dadd( 139.166, -4.06432, -127.114, 0.15 ) }
    dend_20 { pt3dadd( 139.965, -4.04209, -127.766, 0.15 ) }
    dend_20 { pt3dadd( 140.095, -4.04512, -127.869, 0.15 ) }
    dend_20 { pt3dadd( 141.024, -4.17073, -128.59, 0.52 ) }
    dend_20 { pt3dadd( 141.089, -4.18421, -128.635, 0.52 ) }
    dend_20 { pt3dadd( 142.066, -4.34649, -129.045, 0.22 ) }
    dend_20 { pt3dadd( 142.135, -4.3556, -129.084, 0.22 ) }
    dend_20 { pt3dadd( 142.596, -4.40174, -129.391, 0.96 ) }
    dend_20 { pt3dadd( 142.931, -4.42604, -129.646, 1.4 ) }
    dend_20 { pt3dadd( 143.057, -4.43387, -129.746, 1.4 ) }
    dend_20 { pt3dadd( 144.779, -4.55861, -131.078, 0.22 ) }
    dend_20 { pt3dadd( 145.652, -4.62263, -131.747, 0.81 ) }
    dend_20 { pt3dadd( 146.176, -4.67024, -132.146, 0.96 ) }
    dend_20 { pt3dadd( 147.439, -4.81575, -133.083, 0.22 ) }
    dend_20 { pt3dadd( 148.091, -4.90882, -133.529, 0.59 ) }
    dend_20 { pt3dadd( 148.447, -4.97767, -133.746, 0.59 ) }
    dend_20 { pt3dadd( 149.201, -5.17393, -134.114, 0.22 ) }
    dend_20 { pt3dadd( 149.434, -5.23916, -134.212, 0.44 ) }
    dend_20 { pt3dadd( 150.725, -5.61426, -134.714, 0.15 ) }
    dend_20 { pt3dadd( 151.332, -5.75643, -134.974, 0.15 ) }
    dend_20 { pt3dadd( 151.466, -5.78155, -135.037, 0.81 ) }
    dend_20 { pt3dadd( 151.794, -5.83281, -135.193, 1.03 ) }
    dend_20 { pt3dadd( 151.943, -5.854, -135.264, 1.03 ) }
    dend_20 { pt3dadd( 152.281, -5.89713, -135.429, 1.03 ) }
    dend_20 { pt3dadd( 155.107, -6.20506, -136.96, 0.22 ) }
    dend_20 { pt3dadd( 155.646, -6.24913, -137.24, 0.59 ) }
    dend_20 { pt3dadd( 155.909, -6.26304, -137.362, 0.59 ) }
    dend_20 { pt3dadd( 156.047, -6.26604, -137.421, 0.59 ) }
    dend_20 { pt3dadd( 156.121, -6.2657, -137.45, 0.59 ) }
    dend_20 { pt3dadd( 157.381, -6.21639, -137.881, 0.22 ) }
    dend_20 { pt3dadd( 159.972, -6.01048, -138.561, 0.15 ) }
    dend_20 { pt3dadd( 161.051, -5.91165, -138.849, 0.15 ) }
    dend_20 { pt3dadd( 161.465, -5.87181, -138.958, 0.96 ) }
    dend_20 { pt3dadd( 161.533, -5.86496, -138.975, 0.96 ) }
    dend_20 { pt3dadd( 161.835, -5.83144, -139.042, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_20 { pt3dadd( 161.981, -5.81053, -139.058, 0.96 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 1/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 36.8273, 20.0527, -21.9266, 0.29 ) }
    dend_19 { pt3dadd( 36.3276, 23.6951, -25.1627, 0.29 ) }
    dend_19 { pt3dadd( 36.2401, 24.5093, -25.8233, 0.29 ) }
    dend_19 { pt3dadd( 36.1574, 25.6949, -26.6911, 1.55 ) }
    dend_19 { pt3dadd( 36.1274, 26.1173, -27.0032, 1.99 ) }
    dend_19 { pt3dadd( 35.9767, 27.6631, -28.1259, 0.22 ) }
    dend_19 { pt3dadd( 35.8886, 28.5118, -28.7116, 1.11 ) }
    dend_19 { pt3dadd( 35.7259, 29.8741, -29.4921, 0.22 ) }
    dend_19 { pt3dadd( 35.4776, 31.6951, -30.5554, 2.43 ) }
    dend_19 { pt3dadd( 35.129, 34.1196, -31.9504, 0.22 ) }
    dend_19 { pt3dadd( 34.9998, 34.903, -32.4192, 0.22 ) }
    dend_19 { pt3dadd( 34.7957, 35.9988, -33.0931, 0.22 ) }
    dend_19 { pt3dadd( 34.7817, 36.0594, -33.1301, 0.22 ) }
    dend_19 { pt3dadd( 34.3509, 37.2726, -33.8316, 1.03 ) }
    dend_19 { pt3dadd( 34.3235, 37.3313, -33.8635, 1.03 ) }
    dend_19 { pt3dadd( 34.0521, 37.856, -34.1068, 0.74 ) }
    dend_19 { pt3dadd( 34.0217, 37.9132, -34.1385, 0.74 ) }
    dend_19 { pt3dadd( 33.4934, 38.7935, -34.6882, 0.22 ) }
    dend_19 { pt3dadd( 32.9271, 39.7021, -35.223, 0.88 ) }
    dend_19 { pt3dadd( 32.6898, 40.0756, -35.4146, 1.11 ) }
    dend_19 { pt3dadd( 32.654, 40.1325, -35.4407, 1.11 ) }
    dend_19 { pt3dadd( 31.9339, 41.3586, -35.9236, 0.22 ) }
    dend_19 { pt3dadd( 31.9004, 41.4189, -35.9454, 0.22 ) }
    dend_19 { pt3dadd( 31.4051, 42.3893, -36.2447, 0.22 ) }
    dend_19 { pt3dadd( 31.0383, 43.166, -36.4765, 0.22 ) }
    dend_19 { pt3dadd( 30.8994, 43.5006, -36.5994, 0.22 ) }
    dend_19 { pt3dadd( 30.6541, 44.1042, -36.8334, 0.22 ) }
    dend_19 { pt3dadd( 30.6284, 44.1674, -36.8582, 0.22 ) }
    dend_19 { pt3dadd( 30.0663, 45.5622, -37.4469, 2.36 ) }
    dend_19 { pt3dadd( 29.7758, 46.3055, -37.7988, 2.5 ) }
    dend_19 { pt3dadd( 29.0683, 48.1497, -38.7018, 0.22 ) }
    dend_19 { pt3dadd( 28.6626, 49.1883, -39.206, 0.22 ) }
    dend_19 { pt3dadd( 28.5506, 49.4846, -39.3486, 0.44 ) }
    dend_19 { pt3dadd( 28.5283, 49.5479, -39.3764, 0.44 ) }
    dend_19 { pt3dadd( 28.3378, 50.1298, -39.597, 0.22 ) }
    dend_19 { pt3dadd( 28.076, 50.978, -39.8381, 0.88 ) }
    dend_19 { pt3dadd( 27.9772, 51.3593, -39.9404, 1.03 ) }
    dend_19 { pt3dadd( 27.7054, 52.6572, -40.3047, 0.22 ) }
    dend_19 { pt3dadd( 27.505, 53.6966, -40.5805, 0.22 ) }
    dend_19 { pt3dadd( 27.4169, 54.1573, -40.6966, 0.37 ) }
    dend_19 { pt3dadd( 27.2497, 54.9709, -40.8811, 0.15 ) }
    dend_19 { pt3dadd( 27.0038, 55.9873, -41.0893, 0.88 ) }
    dend_19 { pt3dadd( 26.8607, 56.4983, -41.1771, 1.11 ) }
    dend_19 { pt3dadd( 26.4071, 57.7385, -41.3909, 0.22 ) }
    dend_19 { pt3dadd( 26.3786, 57.8043, -41.4034, 0.22 ) }
    dend_19 { pt3dadd( 26.0086, 58.6022, -41.5489, 0.22 ) }
    dend_19 { pt3dadd( 25.3842, 59.831, -41.7608, 1.4 ) }
    dend_19 { pt3dadd( 25.0649, 60.4047, -41.844, 1.69 ) }
    dend_19 { pt3dadd( 24.1856, 61.9059, -42.0854, 0.29 ) }
    dend_19 { pt3dadd( 23.7491, 62.6217, -42.2059, 0.59 ) }
    dend_19 { pt3dadd( 23.1839, 63.579, -42.4495, 0.22 ) }
    dend_19 { pt3dadd( 23.1492, 63.6394, -42.469, 0.22 ) }
    dend_19 { pt3dadd( 22.5202, 64.6787, -42.8972, 0.22 ) }
    dend_19 { pt3dadd( 21.925, 65.6962, -43.4252, 1.18 ) }
    dend_19 { pt3dadd( 21.5186, 66.3999, -43.86, 1.55 ) }
    dend_19 { pt3dadd( 20.5026, 68.1202, -45.106, 0.22 ) }
    dend_19 { pt3dadd( 20.4721, 68.1706, -45.1469, 0.22 ) }
    dend_19 { pt3dadd( 19.9756, 68.9718, -45.8889, 0.22 ) }
    dend_19 { pt3dadd( 19.401, 69.8617, -46.8325, 0.22 ) }
    dend_19 { pt3dadd( 19.3765, 69.9023, -46.8856, 0.22 ) }
    dend_19 { pt3dadd( 19.178, 70.2487, -47.3719, 0.59 ) }
    dend_19 { pt3dadd( 19.0454, 70.4797, -47.6775, 0.66 ) }
    dend_19 { pt3dadd( 18.6083, 71.2587, -48.7714, 0.22 ) }
    dend_19 { pt3dadd( 18.373, 71.6936, -49.3971, 1.11 ) }
    dend_19 { pt3dadd( 17.5704, 73.1561, -51.421, 0.29 ) }
    dend_19 { pt3dadd( 17.4404, 73.4213, -51.7856, 1.25 ) }
    dend_19 { pt3dadd( 17.3034, 73.7781, -52.2886, 1.4 ) }
    dend_19 { pt3dadd( 16.8044, 75.4516, -54.6022, 0.22 ) }
    dend_19 { pt3dadd( 16.7943, 75.5012, -54.6659, 0.22 ) }
    dend_19 { pt3dadd( 16.6802, 76.1549, -55.4658, 0.96 ) }
    dend_19 { pt3dadd( 16.5795, 76.7782, -56.1388, 1.18 ) }
    dend_19 { pt3dadd( 16.4191, 78.2785, -57.6938, 0.22 ) }
    dend_19 { pt3dadd( 16.3785, 79.149, -58.525, 0.96 ) }
    dend_19 { pt3dadd( 16.3779, 80.1796, -59.3811, 0.15 ) }
    dend_19 { pt3dadd( 16.3657, 80.6546, -59.7545, 0.15 ) }
    dend_19 { pt3dadd( 16.3325, 81.2121, -60.1514, 0.59 ) }
    dend_19 { pt3dadd( 16.3001, 81.5634, -60.3423, 0.59 ) }
    dend_19 { pt3dadd( 16.1727, 82.8032, -60.8105, 0.22 ) }
    dend_19 { pt3dadd( 16.1667, 82.8729, -60.832, 0.22 ) }
    dend_19 { pt3dadd( 16.0892, 83.7611, -61.0811, 0.22 ) }
    dend_19 { pt3dadd( 16.0453, 84.443, -61.2667, 0.22 ) }
    dend_19 { pt3dadd( 15.969, 85.8827, -61.6241, 1.62 ) }
    dend_19 { pt3dadd( 15.9445, 86.5029, -61.7594, 1.84 ) }
    dend_19 { pt3dadd( 15.9551, 87.8156, -62.0369, 0.22 ) }
    dend_19 { pt3dadd( 15.96, 87.8869, -62.0531, 0.22 ) }
    dend_19 { pt3dadd( 16.0679, 88.616, -62.2313, 0.22 ) }
    dend_19 { pt3dadd( 16.2033, 89.3489, -62.4109, 0.66 ) }
    dend_19 { pt3dadd( 16.2174, 89.4191, -62.4263, 0.66 ) }
    dend_19 { pt3dadd( 16.4153, 90.3907, -62.6585, 0.22 ) }
    dend_19 { pt3dadd( 16.4877, 90.8617, -62.7566, 0.22 ) }
    dend_19 { pt3dadd( 16.4916, 90.9719, -62.7735, 0.22 ) }
    dend_19 { pt3dadd( 16.4487, 91.5498, -62.8347, 0.66 ) }
    dend_19 { pt3dadd( 16.4193, 91.8736, -62.8634, 0.66 ) }
    dend_19 { pt3dadd( 16.4104, 91.9568, -62.8692, 0.66 ) }
    dend_19 { pt3dadd( 16.2513, 93.2151, -62.9179, 0.22 ) }
    dend_19 { pt3dadd( 16.1329, 94.1501, -62.9625, 0.88 ) }
    dend_19 { pt3dadd( 16.082, 94.5412, -62.9836, 0.88 ) }
    dend_19 { pt3dadd( 15.9344, 95.8083, -63.0613, 0.22 ) }
    dend_19 { pt3dadd( 15.9225, 95.9103, -63.0764, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_19 { pt3dadd( 15.8621, 96.3611, -63.1787, 0.22 ) }
    dend_19 { pt3dadd( 15.7653, 96.8794, -63.3508, 0.81 ) }
    dend_19 { pt3dadd( 15.6511, 97.2607, -63.5033, 0.96 ) }
    dend_19 { pt3dadd( 15.6249, 97.3229, -63.5299, 0.96 ) }
    dend_19 { pt3dadd( 14.8881, 98.6985, -64.1722, 0.15 ) }
    dend_19 { pt3dadd( 14.852, 98.7655, -64.2042, 0.15 ) }
    dend_19 { pt3dadd( 14.5063, 99.4438, -64.573, 0.15 ) }
    dend_19 { pt3dadd( 14.2695, 99.9349, -64.8553, 0.22 ) }
    dend_19 { pt3dadd( 14.1755, 100.163, -64.978, 0.22 ) }
    dend_19 { pt3dadd( 13.8106, 101.129, -65.4546, 1.33 ) }
    dend_19 { pt3dadd( 13.7127, 101.393, -65.5617, 1.33 ) }
    dend_19 { pt3dadd( 13.2378, 102.736, -66.1531, 0.22 ) }
    dend_19 { pt3dadd( 13.213, 102.808, -66.1856, 0.22 ) }
    dend_19 { pt3dadd( 12.9289, 103.57, -66.6019, 0.22 ) }
    dend_19 { pt3dadd( 12.8624, 103.736, -66.6997, 0.22 ) }
    dend_19 { pt3dadd( 12.453, 104.683, -67.2762, 0.22 ) }
    dend_19 { pt3dadd( 11.8079, 106.147, -68.1678, 1.11 ) }
    dend_19 { pt3dadd( 11.5784, 106.662, -68.4791, 1.4 ) }
    dend_19 { pt3dadd( 10.8657, 108.38, -69.5798, 0.22 ) }
    dend_19 { pt3dadd( 10.7331, 108.741, -69.8199, 0.22 ) }
    dend_19 { pt3dadd( 10.6983, 108.876, -69.9107, 0.22 ) }
    dend_19 { pt3dadd( 10.619, 109.496, -70.3329, 0.81 ) }
    dend_19 { pt3dadd( 10.6172, 109.623, -70.4214, 0.81 ) }
    dend_19 { pt3dadd( 10.7033, 110.356, -70.968, 0.22 ) }
    dend_19 { pt3dadd( 10.8213, 110.965, -71.4013, 0.59 ) }
    dend_19 { pt3dadd( 11.0331, 111.927, -72.1214, 0.22 ) }
    dend_19 { pt3dadd( 11.047, 111.982, -72.1659, 0.22 ) }
    dend_19 { pt3dadd( 11.3602, 113.129, -73.16, 0.96 ) }
    dend_19 { pt3dadd( 11.6978, 114.374, -74.2325, 0.22 ) }
    dend_19 { pt3dadd( 11.8372, 114.86, -74.6876, 0.52 ) }
    dend_19 { pt3dadd( 11.8862, 115.023, -74.8513, 0.52 ) }
    dend_19 { pt3dadd( 12.1905, 115.977, -75.8048, 0.22 ) }
    dend_19 { pt3dadd( 12.4656, 116.729, -76.5567, 0.96 ) }
    dend_19 { pt3dadd( 12.5877, 117.029, -76.8537, 1.18 ) }
    dend_19 { pt3dadd( 13.1985, 118.536, -78.3512, 0.59 ) }
    dend_19 { pt3dadd( 13.2216, 118.593, -78.4055, 0.59 ) }
    dend_19 { pt3dadd( 13.3685, 118.987, -78.7539, 0.59 ) }
    dend_19 { pt3dadd( 13.872, 120.419, -79.8039, 0.15 ) }
    dend_19 { pt3dadd( 13.92, 120.566, -79.8875, 0.15 ) }
    dend_19 { pt3dadd( 14.0717, 121.106, -80.1083, 0.15 ) }
    dend_19 { pt3dadd( 14.1753, 121.541, -80.2159, 0.66 ) }
    dend_19 { pt3dadd( 14.2747, 122.012, -80.3171, 0.44 ) }
    dend_19 { pt3dadd( 14.4225, 122.954, -80.5101, 0.22 ) }
    dend_19 { pt3dadd( 14.5406, 123.982, -80.6869, 1.03 ) }
    dend_19 { pt3dadd( 14.6223, 124.585, -80.7966, 1.18 ) }
    dend_19 { pt3dadd( 14.7623, 125.55, -81.0175, 0.22 ) }
    dend_19 { pt3dadd( 14.875, 126.215, -81.1839, 0.59 ) }
    dend_19 { pt3dadd( 15.0953, 127.407, -81.4915, 0.22 ) }
    dend_19 { pt3dadd( 15.2627, 128.281, -81.7347, 0.88 ) }
    dend_19 { pt3dadd( 15.3854, 128.902, -81.9157, 1.25 ) }
    dend_19 { pt3dadd( 15.677, 130.441, -82.3541, 0.15 ) }
    dend_19 { pt3dadd( 15.861, 131.459, -82.6185, 0.15 ) }
    dend_19 { pt3dadd( 15.9796, 132.05, -82.7667, 0.15 ) }
    dend_19 { pt3dadd( 15.9958, 132.12, -82.782, 0.15 ) }
    dend_19 { pt3dadd( 16.3064, 133.333, -83.0369, 1.25 ) }
    dend_19 { pt3dadd( 16.4318, 133.758, -83.1131, 1.55 ) }
    dend_19 { pt3dadd( 16.6506, 134.373, -83.1919, 0.96 ) }
    dend_19 { pt3dadd( 17.0849, 135.517, -83.3336, 0.22 ) }
    dend_19 { pt3dadd( 17.3842, 136.241, -83.4188, 0.66 ) }
    dend_19 { pt3dadd( 17.5574, 136.635, -83.4805, 0.66 ) }
    dend_19 { pt3dadd( 18.0305, 137.587, -83.6599, 0.22 ) }
    dend_19 { pt3dadd( 18.351, 138.172, -83.7967, 0.74 ) }
    dend_19 { pt3dadd( 18.5649, 138.56, -83.9047, 0.96 ) }
    dend_19 { pt3dadd( 18.5918, 138.613, -83.9235, 0.96 ) }
    dend_19 { pt3dadd( 19.0585, 139.642, -84.3783, 0.22 ) }
    dend_19 { pt3dadd( 19.083, 139.713, -84.4129, 0.22 ) }
    dend_19 { pt3dadd( 19.1704, 140.217, -84.7379, 0.22 ) }
    dend_19 { pt3dadd( 19.1949, 140.592, -85.0041, 0.22 ) }
    dend_19 { pt3dadd( 19.206, 141.201, -85.4263, 0.88 ) }
    dend_19 { pt3dadd( 19.2047, 141.329, -85.5129, 0.88 ) }
    dend_19 { pt3dadd( 19.177, 141.814, -85.8274, 0.88 ) }
    dend_19 { pt3dadd( 19.0551, 143.22, -86.7712, 0.22 ) }
    dend_19 { pt3dadd( 18.9053, 144.383, -87.5975, 1.03 ) }
    dend_19 { pt3dadd( 18.8609, 144.744, -87.8684, 1.4 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 74/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.61579, 56.4466, 18.7592, 0.29 ) }
    dend_16 { pt3dadd( 5.34783, 57.2536, 19.643, 0.29 ) }
    dend_16 { pt3dadd( 5.71488, 57.4299, 19.8316, 0.52 ) }
    dend_16 { pt3dadd( 6.85293, 57.9812, 20.4146, 0.29 ) }
    dend_16 { pt3dadd( 7.55459, 58.3365, 20.7605, 0.96 ) }
    dend_16 { pt3dadd( 7.64262, 58.3814, 20.802, 0.96 ) }
    dend_16 { pt3dadd( 7.98787, 58.5504, 20.954, 0.96 ) }
    dend_16 { pt3dadd( 8.97655, 58.9926, 21.2921, 0.37 ) }
    dend_16 { pt3dadd( 9.03901, 59.0194, 21.3107, 0.37 ) }
    dend_16 { pt3dadd( 9.58694, 59.2654, 21.5131, 0.29 ) }
    dend_16 { pt3dadd( 9.83243, 59.369, 21.6319, 0.52 ) }
    dend_16 { pt3dadd( 10.3339, 59.561, 21.8955, 0.74 ) }
    dend_16 { pt3dadd( 10.3941, 59.578, 21.9274, 0.74 ) }
    dend_16 { pt3dadd( 10.9785, 59.7014, 22.2332, 0.74 ) }
    dend_16 { pt3dadd( 12.3809, 60.0068, 22.9075, 0.81 ) }
    dend_16 { pt3dadd( 12.4522, 60.0271, 22.9381, 0.81 ) }
    dend_16 { pt3dadd( 13.3273, 60.3541, 23.2516, 0.22 ) }
    dend_16 { pt3dadd( 13.9314, 60.6259, 23.4306, 0.22 ) }
    dend_16 { pt3dadd( 13.9936, 60.6571, 23.4432, 0.22 ) }
    dend_16 { pt3dadd( 14.8695, 61.1616, 23.6289, 0.44 ) }
    dend_16 { pt3dadd( 15.7012, 61.7273, 23.7783, 0.29 ) }
    dend_16 { pt3dadd( 16.0598, 62.049, 23.918, 0.59 ) }
    dend_16 { pt3dadd( 16.1017, 62.1013, 23.9436, 0.59 ) }
    dend_16 { pt3dadd( 16.4482, 62.6157, 24.2122, 0.81 ) }
    dend_16 { pt3dadd( 17.1877, 63.8293, 24.8845, 0.29 ) }
    dend_16 { pt3dadd( 17.5517, 64.4956, 25.2758, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_16 { pt3dadd( 18.1377, 65.7571, 25.9785, 0.88 ) }
    dend_16 { pt3dadd( 18.4855, 66.6343, 26.4581, 0.22 ) }
    dend_16 { pt3dadd( 18.5035, 66.6976, 26.4888, 0.22 ) }
    dend_16 { pt3dadd( 18.6313, 67.2655, 26.7857, 0.22 ) }
    dend_16 { pt3dadd( 18.7228, 67.7515, 27.0327, 0.81 ) }
    dend_16 { pt3dadd( 18.8672, 68.4699, 27.4791, 0.81 ) }
    dend_16 { pt3dadd( 19.0559, 69.337, 28.0951, 0.22 ) }
    dend_16 { pt3dadd( 19.3092, 70.4326, 28.9654, 0.22 ) }
    dend_16 { pt3dadd( 19.7182, 72.4183, 30.5483, 0.37 ) }
    dend_16 { pt3dadd( 19.8335, 73.0593, 31.0572, 0.74 ) }
    dend_16 { pt3dadd( 20.0585, 74.4501, 32.1436, 0.22 ) }
    dend_16 { pt3dadd( 20.2358, 75.5195, 32.9642, 0.29 ) }
    dend_16 { pt3dadd( 20.2455, 75.5785, 33.0047, 0.29 ) }
    dend_16 { pt3dadd( 20.4274, 76.6354, 33.6826, 0.52 ) }
    dend_16 { pt3dadd( 20.4991, 77.2428, 34.0, 0.81 ) }
    dend_16 { pt3dadd( 20.6542, 78.2387, 34.4849, 0.29 ) }
    dend_16 { pt3dadd( 20.6662, 78.306, 34.5103, 0.29 ) }
    dend_16 { pt3dadd( 20.8616, 79.2271, 34.8998, 0.66 ) }
    dend_16 { pt3dadd( 20.8776, 79.2909, 34.9306, 0.66 ) }
    dend_16 { pt3dadd( 21.1937, 80.4419, 35.5337, 0.44 ) }
    dend_16 { pt3dadd( 21.3385, 81.1329, 35.9158, 0.29 ) }
    dend_16 { pt3dadd( 21.4253, 81.8683, 36.3134, 0.52 ) }
    dend_16 { pt3dadd( 21.446, 82.9924, 36.8906, 0.66 ) }
    dend_16 { pt3dadd( 21.4215, 83.5627, 37.1679, 0.29 ) }
    dend_16 { pt3dadd( 21.4151, 84.3631, 37.4957, 0.29 ) }
    dend_16 { pt3dadd( 21.3581, 85.5145, 37.9162, 0.96 ) }
    dend_16 { pt3dadd( 21.3154, 86.0766, 38.1212, 1.11 ) }
    dend_16 { pt3dadd( 21.2683, 86.8279, 38.3804, 0.44 ) }
    dend_16 { pt3dadd( 21.2332, 88.0668, 38.7134, 0.29 ) }
    dend_16 { pt3dadd( 21.2569, 89.6886, 39.1523, 0.29 ) }
    dend_16 { pt3dadd( 25.5779, 96.9388, 44.9533, 0.29 ) }
    dend_16 { pt3dadd( 28.7473, 103.769, 51.8562, 0.29 ) }
    dend_16 { pt3dadd( 30.4016, 110.207, 59.5807, 0.29 ) }
    dend_16 { pt3dadd( 32.469, 118.186, 65.7428, 0.29 ) }
    dend_16 { pt3dadd( 36.2485, 124.378, 72.8798, 0.29 ) }
    dend_16 { pt3dadd( 41.4478, 128.117, 80.6447, 0.29 ) }
    dend_16 { pt3dadd( 44.6233, 133.409, 88.6765, 0.29 ) }
    dend_16 { pt3dadd( 46.3154, 137.901, 97.5553, 0.29 ) }
    dend_16 { pt3dadd( 49.2128, 141.688, 106.421, 0.29 ) }
    dend_16 { pt3dadd( 52.2693, 146.847, 114.577, 0.29 ) }
    dend_16 { pt3dadd( 55.7722, 150.539, 123.258, 0.29 ) }
    dend_16 { pt3dadd( 60.1429, 154.722, 131.322, 0.29 ) }
    dend_16 { pt3dadd( 64.4268, 159.235, 139.27, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 43/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.61579, 56.4466, 18.7592, 0.59 ) }
    dend_15 { pt3dadd( 4.81361, 58.5128, 21.5582, 0.59 ) }
    dend_15 { pt3dadd( 4.87027, 58.5985, 21.6705, 0.59 ) }
    dend_15 { pt3dadd( 5.34466, 59.2878, 22.5619, 0.52 ) }
    dend_15 { pt3dadd( 5.83743, 59.9811, 23.4522, 0.37 ) }
    dend_15 { pt3dadd( 5.86613, 60.0221, 23.5027, 0.37 ) }
    dend_15 { pt3dadd( 6.44205, 60.8596, 24.5063, 0.37 ) }
    dend_15 { pt3dadd( 6.50793, 60.9393, 24.572, 0.37 ) }
    dend_15 { pt3dadd( 6.83986, 61.4058, 24.9468, 0.66 ) }
    dend_15 { pt3dadd( 6.86841, 61.4671, 24.9934, 0.66 ) }
    dend_15 { pt3dadd( 6.84925, 61.8138, 25.2836, 0.66 ) }
    dend_15 { pt3dadd( 6.8181, 61.8724, 25.3318, 0.66 ) }
    dend_15 { pt3dadd( 6.36296, 62.1944, 25.6937, 0.37 ) }
    dend_15 { pt3dadd( 6.31186, 62.2217, 25.7339, 0.37 ) }
    dend_15 { pt3dadd( 5.77672, 62.4396, 26.1189, 0.29 ) }
    dend_15 { pt3dadd( 4.77759, 62.7877, 26.9923, 0.29 ) }
    dend_15 { pt3dadd( 4.25123, 62.9411, 27.4964, 0.29 ) }
    dend_15 { pt3dadd( 3.04759, 63.2657, 28.6762, 0.22 ) }
    dend_15 { pt3dadd( 2.53498, 63.3864, 29.1937, 0.66 ) }
    dend_15 { pt3dadd( 2.0326, 63.499, 29.7124, 0.66 ) }
    dend_15 { pt3dadd( 0.458444, 63.8195, 31.4223, 0.74 ) }
    dend_15 { pt3dadd( -0.759373, 64.0643, 32.7578, 0.29 ) }
    dend_15 { pt3dadd( -1.92683, 69.7858, 41.0611, 0.29 ) }
    dend_15 { pt3dadd( -2.49155, 76.2359, 48.9316, 0.29 ) }
    dend_15 { pt3dadd( -1.4558, 81.114, 57.7261, 0.29 ) }
    dend_15 { pt3dadd( 0.04931, 84.7301, 66.9929, 0.29 ) }
    dend_15 { pt3dadd( 1.07009, 87.8379, 76.4902, 0.29 ) }
    dend_15 { pt3dadd( 0.987005, 91.5096, 85.8585, 0.29 ) }
    dend_15 { pt3dadd( 0.106731, 95.0441, 95.2337, 0.29 ) }
    dend_15 { pt3dadd( -0.733974, 98.3614, 104.684, 0.29 ) }
    dend_15 { pt3dadd( -2.17834, 102.987, 113.545, 0.29 ) }
    dend_15 { pt3dadd( -3.97517, 107.377, 122.449, 0.29 ) }
    dend_15 { pt3dadd( -6.70066, 112.278, 130.863, 0.29 ) }
    dend_15 { pt3dadd( -10.3404, 118.312, 138.192, 0.29 ) }
    dend_15 { pt3dadd( -15.2288, 123.351, 145.478, 0.29 ) }
    dend_15 { pt3dadd( -20.2856, 128.496, 152.579, 0.29 ) }
    dend_15 { pt3dadd( -24.9456, 134.735, 159.134, 0.29 ) }
    dend_15 { pt3dadd( -29.7386, 141.382, 165.213, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 81/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 24.8844, 71.7354, -15.101, 0.22 ) }
    dend_13 { pt3dadd( 26.1419, 73.0393, -16.9264, 0.22 ) }
    dend_13 { pt3dadd( 26.8407, 73.7751, -17.8865, 0.52 ) }
    dend_13 { pt3dadd( 27.271, 74.2023, -18.4182, 0.59 ) }
    dend_13 { pt3dadd( 27.9357, 74.8528, -19.1695, 0.29 ) }
    dend_13 { pt3dadd( 28.5184, 75.419, -19.781, 0.22 ) }
    dend_13 { pt3dadd( 29.2339, 76.1064, -20.4787, 0.88 ) }
    dend_13 { pt3dadd( 29.5757, 76.4139, -20.7457, 0.88 ) }
    dend_13 { pt3dadd( 30.5303, 77.2935, -21.3227, 0.22 ) }
    dend_13 { pt3dadd( 30.9546, 77.7176, -21.5548, 0.52 ) }
    dend_13 { pt3dadd( 31.223, 78.0181, -21.6967, 0.52 ) }
    dend_13 { pt3dadd( 31.9726, 78.8934, -22.0821, 0.22 ) }
    dend_13 { pt3dadd( 32.0164, 78.9468, -22.102, 0.22 ) }
    dend_13 { pt3dadd( 32.9277, 80.1535, -22.5287, 2.21 ) }
    dend_13 { pt3dadd( 33.9461, 81.729, -23.0764, 0.22 ) }
    dend_13 { pt3dadd( 34.2757, 82.3104, -23.2834, 0.22 ) }
    dend_13 { pt3dadd( 34.3038, 82.3728, -23.3076, 0.22 ) }
    dend_13 { pt3dadd( 34.4798, 82.9132, -23.5586, 0.66 ) }
    dend_13 { pt3dadd( 34.4941, 82.9754, -23.5931, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_13 { pt3dadd( 34.6821, 84.3436, -24.5148, 0.07 ) }
    dend_13 { pt3dadd( 34.7428, 84.9576, -24.9477, 0.37 ) }
    dend_13 { pt3dadd( 34.8757, 86.1373, -25.8325, 0.15 ) }
    dend_13 { pt3dadd( 35.0265, 87.4158, -26.8153, 0.96 ) }
    dend_13 { pt3dadd( 35.224, 88.7937, -27.8517, 0.22 ) }
    dend_13 { pt3dadd( 35.4856, 90.1621, -28.8498, 0.22 ) }
    dend_13 { pt3dadd( 35.7183, 91.1484, -29.553, 1.77 ) }
    dend_13 { pt3dadd( 35.9884, 92.0447, -30.186, 0.66 ) }
    dend_13 { pt3dadd( 36.2732, 92.8236, -30.7101, 0.22 ) }
    dend_13 { pt3dadd( 36.783, 94.0518, -31.5074, 0.22 ) }
    dend_13 { pt3dadd( 37.4996, 95.5888, -32.4995, 0.22 ) }
    dend_13 { pt3dadd( 37.8681, 96.2936, -32.9639, 1.33 ) }
    dend_13 { pt3dadd( 38.4478, 97.3339, -33.679, 0.22 ) }
    dend_13 { pt3dadd( 38.4827, 97.3928, -33.7241, 0.22 ) }
    dend_13 { pt3dadd( 38.922, 98.0488, -34.314, 0.88 ) }
    dend_13 { pt3dadd( 39.106, 98.313, -34.5814, 0.96 ) }
    dend_13 { pt3dadd( 39.62, 99.0245, -35.3398, 0.15 ) }
    dend_13 { pt3dadd( 39.9386, 99.4498, -35.8071, 0.74 ) }
    dend_13 { pt3dadd( 41.1143, 101.014, -37.5682, 0.15 ) }
    dend_13 { pt3dadd( 41.6925, 101.767, -38.4289, 0.81 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 20/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 24.8844, 71.7354, -15.101, 0.22 ) }
    dend_12 { pt3dadd( 24.18, 73.7723, -14.2201, 0.22 ) }
    dend_12 { pt3dadd( 23.8805, 74.5934, -13.8713, 0.29 ) }
    dend_12 { pt3dadd( 23.8564, 74.6572, -13.8463, 0.29 ) }
    dend_12 { pt3dadd( 23.6301, 75.2524, -13.6021, 0.29 ) }
    dend_12 { pt3dadd( 23.3033, 76.0782, -13.2641, 0.29 ) }
    dend_12 { pt3dadd( 23.2781, 76.1415, -13.239, 0.29 ) }
    dend_12 { pt3dadd( 23.0539, 76.6536, -13.0391, 0.29 ) }
    dend_12 { pt3dadd( 22.7274, 77.4279, -12.7325, 0.66 ) }
    dend_12 { pt3dadd( 22.39, 78.2853, -12.4158, 0.22 ) }
    dend_12 { pt3dadd( 22.2514, 78.6647, -12.2801, 0.52 ) }
    dend_12 { pt3dadd( 22.1103, 79.0826, -12.1329, 0.52 ) }
    dend_12 { pt3dadd( 21.8384, 79.9993, -11.8061, 0.15 ) }
    dend_12 { pt3dadd( 21.6426, 80.7637, -11.5295, 1.25 ) }
    dend_12 { pt3dadd( 21.5808, 81.1323, -11.4019, 1.69 ) }
    dend_12 { pt3dadd( 21.4944, 82.1821, -11.0836, 0.29 ) }
    dend_12 { pt3dadd( 21.4782, 83.7461, -10.6412, 0.44 ) }
    dend_12 { pt3dadd( 21.4956, 84.1113, -10.5501, 0.59 ) }
    dend_12 { pt3dadd( 21.5105, 84.2202, -10.5318, 0.59 ) }
    dend_12 { pt3dadd( 21.8199, 85.8141, -10.3583, 0.22 ) }
    dend_12 { pt3dadd( 22.0174, 86.6693, -10.3354, 1.03 ) }
    dend_12 { pt3dadd( 22.1259, 87.0718, -10.3614, 1.18 ) }
    dend_12 { pt3dadd( 22.3512, 87.8704, -10.465, 0.44 ) }
    dend_12 { pt3dadd( 22.6831, 89.0142, -10.657, 0.22 ) }
    dend_12 { pt3dadd( 22.8645, 89.581, -10.7669, 0.44 ) }
    dend_12 { pt3dadd( 23.1501, 90.3938, -10.9734, 0.15 ) }
    dend_12 { pt3dadd( 23.3415, 90.8914, -11.1096, 0.88 ) }
    dend_12 { pt3dadd( 23.6595, 91.6623, -11.3291, 1.11 ) }
    dend_12 { pt3dadd( 24.2853, 93.0946, -11.7563, 0.15 ) }
    dend_12 { pt3dadd( 24.6481, 93.9199, -11.9979, 0.15 ) }
    dend_12 { pt3dadd( 24.965, 94.5934, -12.207, 0.66 ) }
    dend_12 { pt3dadd( 25.1269, 94.9217, -12.3095, 0.59 ) }
    dend_12 { pt3dadd( 25.1598, 94.9933, -12.3356, 0.59 ) }
    dend_12 { pt3dadd( 25.6599, 96.2546, -12.8345, 0.22 ) }
    dend_12 { pt3dadd( 25.6788, 96.3201, -12.8601, 0.22 ) }
    dend_12 { pt3dadd( 25.8007, 96.8466, -13.0655, 0.59 ) }
    dend_12 { pt3dadd( 25.9086, 97.3852, -13.2492, 0.59 ) }
    dend_12 { pt3dadd( 26.1178, 98.5514, -13.6221, 0.22 ) }
    dend_12 { pt3dadd( 26.1837, 98.9848, -13.7598, 0.59 ) }
    dend_12 { pt3dadd( 26.3705, 100.564, -14.2318, 0.15 ) }
    dend_12 { pt3dadd( 26.3766, 100.634, -14.2527, 0.15 ) }
    dend_12 { pt3dadd( 26.4482, 101.89, -14.616, 1.77 ) }
    dend_12 { pt3dadd( 26.4568, 102.253, -14.7129, 2.06 ) }
    dend_12 { pt3dadd( 26.4546, 104.527, -15.2479, 0.22 ) }
    dend_12 { pt3dadd( 26.4319, 105.427, -15.458, 0.44 ) }
    dend_12 { pt3dadd( 26.3501, 106.753, -15.7779, 0.15 ) }
    dend_12 { pt3dadd( 26.2865, 107.492, -15.976, 0.15 ) }
    dend_12 { pt3dadd( 26.1922, 108.279, -16.2047, 0.59 ) }
    dend_12 { pt3dadd( 26.1578, 108.504, -16.2834, 0.59 ) }
    dend_12 { pt3dadd( 26.1414, 108.579, -16.3136, 0.59 ) }
    dend_12 { pt3dadd( 25.8415, 109.592, -16.8523, 0.22 ) }
    dend_12 { pt3dadd( 25.4694, 110.578, -17.4785, 1.03 ) }
    dend_12 { pt3dadd( 25.2338, 111.093, -17.8818, 1.18 ) }
    dend_12 { pt3dadd( 24.6413, 112.353, -18.9655, 0.22 ) }
    dend_12 { pt3dadd( 24.4593, 112.731, -19.3045, 0.22 ) }
    dend_12 { pt3dadd( 23.8943, 113.877, -20.3579, 1.18 ) }
    dend_12 { pt3dadd( 23.7947, 114.057, -20.5356, 1.47 ) }
    dend_12 { pt3dadd( 23.1588, 115.072, -21.6176, 0.15 ) }
    dend_12 { pt3dadd( 22.8498, 115.493, -22.1412, 0.15 ) }
    dend_12 { pt3dadd( 22.7827, 115.573, -22.251, 0.15 ) }
    dend_12 { pt3dadd( 22.6322, 115.765, -22.5224, 0.15 ) }
    dend_12 { pt3dadd( 22.3494, 116.142, -23.0336, 0.66 ) }
    dend_12 { pt3dadd( 22.2207, 116.306, -23.2567, 0.88 ) }
    dend_12 { pt3dadd( 21.4105, 117.437, -24.5909, 0.15 ) }
    dend_12 { pt3dadd( 21.3896, 117.476, -24.6325, 0.15 ) }
    dend_12 { pt3dadd( 21.3159, 117.7, -24.837, 0.59 ) }
    dend_12 { pt3dadd( 21.266, 118.006, -25.0624, 0.59 ) }
    dend_12 { pt3dadd( 21.1899, 119.378, -25.9016, 0.29 ) }
    dend_12 { pt3dadd( 21.2002, 120.273, -26.3749, 0.29 ) }
    dend_12 { pt3dadd( 21.2837, 121.516, -26.9267, 1.33 ) }
    dend_12 { pt3dadd( 21.3626, 122.274, -27.2679, 0.88 ) }
    dend_12 { pt3dadd( 21.5291, 123.446, -27.8033, 0.22 ) }
    dend_12 { pt3dadd( 21.543, 123.511, -27.8323, 0.22 ) }
    dend_12 { pt3dadd( 21.9402, 124.855, -28.3826, 0.81 ) }
    dend_12 { pt3dadd( 22.0717, 125.218, -28.5348, 0.81 ) }
    dend_12 { pt3dadd( 22.6397, 126.463, -29.0274, 0.22 ) }
    dend_12 { pt3dadd( 22.7195, 126.584, -29.0815, 0.22 ) }
    dend_12 { pt3dadd( 23.1838, 127.14, -29.3576, 0.22 ) }
    dend_12 { pt3dadd( 23.472, 127.416, -29.5056, 0.22 ) }
    dend_12 { pt3dadd( 24.2228, 128.026, -29.8478, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_12 { pt3dadd( 24.5778, 128.296, -30.0029, 1.62 ) }
    dend_12 { pt3dadd( 26.4646, 129.621, -30.8365, 0.22 ) }
    dend_12 { pt3dadd( 26.7485, 129.825, -30.9788, 0.44 ) }
    dend_12 { pt3dadd( 28.232, 130.921, -31.8883, 0.22 ) }
    dend_12 { pt3dadd( 28.2879, 130.964, -31.9282, 0.22 ) }
    dend_12 { pt3dadd( 28.5764, 131.221, -32.207, 0.44 ) }
    dend_12 { pt3dadd( 29.5634, 132.229, -33.404, 0.22 ) }
    dend_12 { pt3dadd( 30.1734, 132.967, -34.3022, 0.96 ) }
    dend_12 { pt3dadd( 30.9294, 134.0, -35.5396, 0.15 ) }
    dend_12 { pt3dadd( 31.2462, 134.519, -36.1344, 1.33 ) }
    dend_12 { pt3dadd( 32.2206, 136.273, -37.9956, 0.22 ) }
    dend_12 { pt3dadd( 32.2442, 136.322, -38.0416, 0.22 ) }
    dend_12 { pt3dadd( 32.5722, 137.165, -38.6904, 0.22 ) }
    dend_12 { pt3dadd( 32.8435, 137.985, -39.1353, 0.96 ) }
    dend_12 { pt3dadd( 32.9811, 138.47, -39.3016, 0.96 ) }
    dend_12 { pt3dadd( 33.2762, 139.743, -39.5026, 0.22 ) }
    dend_12 { pt3dadd( 33.4948, 140.904, -39.5248, 1.4 ) }
    dend_12 { pt3dadd( 33.557, 141.361, -39.5087, 1.69 ) }
    dend_12 { pt3dadd( 33.7094, 143.226, -39.3514, 0.22 ) }
    dend_12 { pt3dadd( 33.7301, 143.62, -39.3047, 0.37 ) }
    dend_12 { pt3dadd( 33.8025, 145.695, -39.0022, 0.15 ) }
    dend_12 { pt3dadd( 33.8029, 146.446, -38.8577, 0.44 ) }
    dend_12 { pt3dadd( 33.7815, 147.393, -38.6522, 0.22 ) }
    dend_12 { pt3dadd( 33.7543, 148.289, -38.4405, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 24/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -15.4422, 58.2065, 36.7116, 0.29 ) }
    dend_7 { pt3dadd( -17.0239, 64.6728, 44.4298, 0.29 ) }
    dend_7 { pt3dadd( -18.7523, 72.0538, 51.329, 0.29 ) }
    dend_7 { pt3dadd( -19.0298, 79.6057, 58.2713, 0.29 ) }
    dend_7 { pt3dadd( -19.3725, 87.3949, 64.9683, 0.29 ) }
    dend_7 { pt3dadd( -18.7603, 94.1597, 72.5919, 0.29 ) }
    dend_7 { pt3dadd( -16.7639, 102.007, 78.9291, 0.29 ) }
    dend_7 { pt3dadd( -14.2938, 109.772, 85.1911, 0.29 ) }
    dend_7 { pt3dadd( -12.8554, 117.537, 91.7673, 0.29 ) }
    dend_7 { pt3dadd( -10.3788, 125.661, 97.5981, 0.29 ) }
    dend_7 { pt3dadd( -8.45259, 133.899, 103.491, 0.29 ) }
    dend_7 { pt3dadd( -7.76135, 142.326, 109.417, 0.29 ) }
    dend_7 { pt3dadd( -7.59816, 150.775, 115.353, 0.29 ) }
    dend_7 { pt3dadd( -7.70763, 159.595, 120.778, 0.29 ) }
    dend_7 { pt3dadd( -7.22464, 168.713, 125.713, 0.29 ) }
    dend_7 { pt3dadd( -5.3351, 177.767, 130.411, 0.29 ) }
    dend_7 { pt3dadd( -3.3113, 186.113, 136.131, 0.29 ) }
    dend_7 { pt3dadd( -2.29468, 193.859, 142.805, 0.29 ) }
    dend_7 { pt3dadd( 0.384032, 200.239, 150.282, 0.29 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 43/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -15.4422, 58.2065, 36.7116, 0.29 ) }
    dend_6 { pt3dadd( -18.1894, 64.5117, 44.2211, 0.29 ) }
    dend_6 { pt3dadd( -21.6594, 71.7512, 50.5788, 0.29 ) }
    dend_6 { pt3dadd( -25.9997, 80.3879, 54.2537, 0.29 ) }
    dend_6 { pt3dadd( -31.4346, 88.2856, 57.9802, 0.29 ) }
    dend_6 { pt3dadd( -35.0725, 96.9187, 62.3579, 0.29 ) }
    dend_6 { pt3dadd( -37.9973, 105.161, 67.8202, 0.29 ) }
    dend_6 { pt3dadd( -39.2293, 114.655, 71.9086, 0.29 ) }
    dend_6 { pt3dadd( -40.2687, 123.297, 77.4931, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 52/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 71.5488, -175.616, 21.9542, 0.29 ) }
    dend_45 { pt3dadd( 74.6234, -184.734, 25.8454, 0.29 ) }
    dend_45 { pt3dadd( 78.0135, -192.553, 31.5945, 0.29 ) }
    dend_45 { pt3dadd( 81.6556, -200.569, 36.9293, 0.29 ) }
    dend_45 { pt3dadd( 83.9242, -208.805, 42.7018, 0.29 ) }
    dend_45 { pt3dadd( 85.7385, -218.281, 46.61, 0.29 ) }
    dend_45 { pt3dadd( 89.023, -227.525, 50.0307, 0.29 ) }
    dend_45 { pt3dadd( 92.3922, -236.648, 53.6566, 0.29 ) }
    dend_45 { pt3dadd( 96.5081, -245.437, 57.2617, 0.29 ) }
    dend_45 { pt3dadd( 101.188, -253.916, 60.8522, 0.29 ) }
    dend_45 { pt3dadd( 104.782, -262.468, 65.4078, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 63/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 71.5488, -175.616, 21.9542, 0.66 ) }
    dend_44 { pt3dadd( 75.1769, -184.464, 25.9339, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 65/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 34.4713, -175.077, -0.595251, 0.29 ) }
    dend_31 { pt3dadd( 36.6598, -175.195, -2.34983, 0.29 ) }
    dend_31 { pt3dadd( 37.5628, -175.245, -3.04354, 0.29 ) }
    dend_31 { pt3dadd( 38.0982, -175.27, -3.43507, 0.88 ) }
    dend_31 { pt3dadd( 38.4614, -175.284, -3.69275, 0.88 ) }
    dend_31 { pt3dadd( 38.5273, -175.285, -3.73808, 0.88 ) }
    dend_31 { pt3dadd( 40.119, -175.221, -4.85898, 0.37 ) }
    dend_31 { pt3dadd( 40.9509, -175.138, -5.39513, 0.37 ) }
    dend_31 { pt3dadd( 41.2538, -175.073, -5.61355, 0.81 ) }
    dend_31 { pt3dadd( 41.3288, -175.054, -5.67561, 0.81 ) }
    dend_31 { pt3dadd( 41.5681, -174.968, -5.93745, 0.81 ) }
    dend_31 { pt3dadd( 42.4835, -174.577, -7.07035, 0.15 ) }
    dend_31 { pt3dadd( 42.5229, -174.557, -7.12494, 0.15 ) }
    dend_31 { pt3dadd( 42.8699, -174.344, -7.86283, 0.66 ) }
    dend_31 { pt3dadd( 43.5082, -173.918, -9.37916, 0.22 ) }
    dend_31 { pt3dadd( 44.4586, -173.397, -11.8675, 1.4 ) }
    dend_31 { pt3dadd( 44.5576, -173.353, -12.1369, 1.69 ) }
    dend_31 { pt3dadd( 44.5862, -173.345, -12.2112, 1.69 ) }
    dend_31 { pt3dadd( 47.0144, -172.902, -18.1625, 0.22 ) }
    dend_31 { pt3dadd( 47.2604, -172.891, -18.734, 1.18 ) }
    dend_31 { pt3dadd( 48.7671, -173.021, -22.0467, 0.29 ) }
    dend_31 { pt3dadd( 49.1414, -173.123, -22.7954, 0.81 ) }
    dend_31 { pt3dadd( 49.9374, -173.435, -24.2839, 0.22 ) }
    dend_31 { pt3dadd( 50.3068, -173.658, -24.9026, 0.81 ) }
    dend_31 { pt3dadd( 51.1698, -174.504, -25.9885, 0.15 ) }
    dend_31 { pt3dadd( 51.5842, -175.042, -26.5373, 0.15 ) }
    dend_31 { pt3dadd( 52.0313, -175.817, -27.1559, 1.4 ) }
    dend_31 { pt3dadd( 52.1451, -176.069, -27.3464, 1.55 ) }
    dend_31 { pt3dadd( 52.5989, -177.392, -28.3185, 0.22 ) }
    dend_31 { pt3dadd( 52.8947, -178.367, -28.992, 0.59 ) }
    dend_31 { pt3dadd( 53.3043, -179.72, -29.8747, 0.22 ) }
    dend_31 { pt3dadd( 53.5665, -180.525, -30.3885, 1.11 ) }
    dend_31 { pt3dadd( 53.646, -180.748, -30.5281, 1.55 ) }
    dend_31 { pt3dadd( 53.6681, -180.807, -30.5643, 1.55 ) }
    dend_31 { pt3dadd( 54.4223, -182.629, -31.5951, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_31 { pt3dadd( 54.8861, -183.684, -32.094, 0.22 ) }
    dend_31 { pt3dadd( 55.4324, -184.847, -32.5389, 0.22 ) }
    dend_31 { pt3dadd( 55.6313, -185.262, -32.6767, 1.25 ) }
    dend_31 { pt3dadd( 55.853, -185.727, -32.8241, 1.47 ) }
    dend_31 { pt3dadd( 56.6242, -187.345, -33.2894, 0.22 ) }
    dend_31 { pt3dadd( 57.5357, -189.281, -33.7149, 0.22 ) }
    dend_31 { pt3dadd( 58.0099, -190.29, -33.8947, 1.55 ) }
    dend_31 { pt3dadd( 58.1796, -190.634, -33.9425, 1.99 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 34.4713, -175.077, -0.595251, 1.33 ) }
    dend_28 { pt3dadd( 34.3642, -176.643, -1.07392, 1.33 ) }
    dend_28 { pt3dadd( 34.3398, -177.545, -1.38247, 0.74 ) }
    dend_28 { pt3dadd( 34.3328, -178.578, -1.73862, 0.29 ) }
    dend_28 { pt3dadd( 34.3506, -179.506, -2.08662, 0.22 ) }
    dend_28 { pt3dadd( 34.4037, -180.512, -2.48021, 0.66 ) }
    dend_28 { pt3dadd( 34.466, -181.249, -2.77187, 1.11 ) }
    dend_28 { pt3dadd( 34.5822, -182.386, -3.1895, 1.47 ) }
    dend_28 { pt3dadd( 34.6412, -182.944, -3.41279, 1.25 ) }
    dend_28 { pt3dadd( 34.7517, -184.167, -3.90231, 1.03 ) }
    dend_28 { pt3dadd( 34.8122, -185.432, -4.39576, 0.22 ) }
    dend_28 { pt3dadd( 34.8017, -185.852, -4.55561, 0.22 ) }
    dend_28 { pt3dadd( 34.6651, -187.068, -4.99885, 0.22 ) }
    dend_28 { pt3dadd( 34.5162, -188.044, -5.31056, 1.33 ) }
    dend_28 { pt3dadd( 34.411, -188.62, -5.4894, 1.33 ) }
    dend_28 { pt3dadd( 34.2462, -189.393, -5.70912, 0.88 ) }
    dend_28 { pt3dadd( 33.9064, -190.921, -6.1604, 0.52 ) }
    dend_28 { pt3dadd( 33.7147, -191.857, -6.44087, 0.22 ) }
    dend_28 { pt3dadd( 33.554, -192.801, -6.72003, 0.22 ) }
    dend_28 { pt3dadd( 33.4043, -193.897, -7.01584, 1.11 ) }
    dend_28 { pt3dadd( 33.3691, -194.267, -7.12455, 1.11 ) }
    dend_28 { pt3dadd( 33.3166, -195.152, -7.38929, 0.74 ) }
    dend_28 { pt3dadd( 33.2982, -195.901, -7.60253, 0.22 ) }
    dend_28 { pt3dadd( 33.2879, -196.483, -7.79443, 0.22 ) }
    dend_28 { pt3dadd( 33.2727, -196.948, -7.95048, 0.22 ) }
    dend_28 { pt3dadd( 33.2772, -197.988, -8.31787, 0.96 ) }
    dend_28 { pt3dadd( 33.302, -198.707, -8.58041, 1.33 ) }
    dend_28 { pt3dadd( 33.3077, -198.786, -8.60854, 1.33 ) }
    dend_28 { pt3dadd( 33.4578, -199.864, -8.98952, 0.22 ) }
    dend_28 { pt3dadd( 33.615, -200.659, -9.24687, 0.15 ) }
    dend_28 { pt3dadd( 33.9689, -202.141, -9.69532, 0.15 ) }
    dend_28 { pt3dadd( 34.1042, -202.619, -9.82294, 1.03 ) }
    dend_28 { pt3dadd( 34.2554, -203.093, -9.94549, 1.47 ) }
    dend_28 { pt3dadd( 34.7503, -204.612, -10.3014, 0.29 ) }
    dend_28 { pt3dadd( 35.0663, -205.496, -10.484, 0.22 ) }
    dend_28 { pt3dadd( 35.3465, -206.256, -10.6281, 1.18 ) }
    dend_28 { pt3dadd( 35.5654, -206.834, -10.7172, 1.33 ) }
    dend_28 { pt3dadd( 35.9781, -207.965, -10.893, 0.22 ) }
    dend_28 { pt3dadd( 36.2075, -208.689, -10.9973, 0.22 ) }
    dend_28 { pt3dadd( 36.294, -209.027, -11.0377, 0.66 ) }
    dend_28 { pt3dadd( 36.3895, -209.482, -11.0829, 0.66 ) }
    dend_28 { pt3dadd( 36.5206, -210.2, -11.1306, 0.15 ) }
    dend_28 { pt3dadd( 36.5353, -210.272, -11.1354, 0.15 ) }
    dend_28 { pt3dadd( 36.7898, -211.336, -11.1771, 0.15 ) }
    dend_28 { pt3dadd( 36.8929, -211.718, -11.1883, 0.44 ) }
    dend_28 { pt3dadd( 37.0176, -212.188, -11.1978, 0.44 ) }
    dend_28 { pt3dadd( 37.0375, -212.258, -11.1986, 0.44 ) }
    dend_28 { pt3dadd( 37.3647, -213.335, -11.2051, 0.15 ) }
    dend_28 { pt3dadd( 37.6845, -214.187, -11.2115, 1.03 ) }
    dend_28 { pt3dadd( 37.966, -214.832, -11.1731, 1.25 ) }
    dend_28 { pt3dadd( 38.1136, -215.175, -11.1373, 1.25 ) }
    dend_28 { pt3dadd( 38.1399, -215.242, -11.1281, 1.25 ) }
    dend_28 { pt3dadd( 38.556, -216.533, -10.8349, 0.22 ) }
    dend_28 { pt3dadd( 38.7004, -217.104, -10.6596, 0.22 ) }
    dend_28 { pt3dadd( 39.0, -218.548, -10.1631, 0.22 ) }
    dend_28 { pt3dadd( 39.0615, -218.902, -10.0308, 0.44 ) }
    dend_28 { pt3dadd( 39.1562, -219.695, -9.71564, 0.44 ) }
    dend_28 { pt3dadd( 39.212, -221.088, -9.21267, 1.4 ) }
    dend_28 { pt3dadd( 39.1671, -221.736, -8.97258, 1.62 ) }
    dend_28 { pt3dadd( 39.1143, -222.098, -8.85007, 1.62 ) }
    dend_28 { pt3dadd( 39.1022, -222.167, -8.83005, 1.62 ) }
    dend_28 { pt3dadd( 38.9751, -222.955, -8.62322, 1.25 ) }
    dend_28 { pt3dadd( 38.7469, -224.469, -8.27681, 0.22 ) }
    dend_28 { pt3dadd( 38.604, -225.501, -8.10411, 0.52 ) }
    dend_28 { pt3dadd( 38.5448, -225.978, -8.03063, 0.29 ) }
    dend_28 { pt3dadd( 38.4797, -226.732, -7.93029, 0.22 ) }
    dend_28 { pt3dadd( 38.4676, -227.427, -7.88076, 0.66 ) }
    dend_28 { pt3dadd( 38.4748, -227.51, -7.88105, 0.66 ) }
    dend_28 { pt3dadd( 38.5399, -227.813, -7.92, 0.59 ) }
    dend_28 { pt3dadd( 38.6919, -228.272, -8.06491, 0.37 ) }
    dend_28 { pt3dadd( 38.9269, -228.832, -8.2766, 0.22 ) }
    dend_28 { pt3dadd( 39.3162, -229.691, -8.58706, 1.11 ) }
    dend_28 { pt3dadd( 39.4505, -229.968, -8.68273, 1.4 ) }
    dend_28 { pt3dadd( 39.9946, -231.027, -9.01718, 1.55 ) }
    dend_28 { pt3dadd( 40.7632, -232.412, -9.41907, 0.22 ) }
    dend_28 { pt3dadd( 41.366, -233.325, -9.64805, 0.22 ) }
    dend_28 { pt3dadd( 41.8797, -233.993, -9.77828, 0.22 ) }
    dend_28 { pt3dadd( 41.9277, -234.046, -9.78091, 0.22 ) }
    dend_28 { pt3dadd( 42.382, -234.491, -9.74702, 0.88 ) }
    dend_28 { pt3dadd( 42.6212, -234.694, -9.69731, 0.88 ) }
    dend_28 { pt3dadd( 43.56, -235.457, -9.43902, 0.22 ) }
    dend_28 { pt3dadd( 44.3248, -236.068, -9.22765, 0.22 ) }
    dend_28 { pt3dadd( 45.1991, -236.777, -9.00139, 1.18 ) }
    dend_28 { pt3dadd( 45.5049, -237.031, -8.91631, 1.18 ) }
    dend_28 { pt3dadd( 45.5801, -237.095, -8.89418, 1.18 ) }
    dend_28 { pt3dadd( 46.9165, -238.24, -8.46484, 0.22 ) }
    dend_28 { pt3dadd( 47.784, -239.003, -8.17327, 0.22 ) }
    dend_28 { pt3dadd( 48.2207, -239.373, -8.03441, 1.47 ) }
    dend_28 { pt3dadd( 48.2744, -239.417, -8.01928, 1.47 ) }
    dend_28 { pt3dadd( 48.654, -239.724, -7.90801, 1.47 ) }
    dend_28 { pt3dadd( 50.0177, -240.8, -7.51001, 0.22 ) }
    dend_28 { pt3dadd( 50.5108, -241.175, -7.37096, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_28 { pt3dadd( 50.7717, -241.385, -7.30656, 0.66 ) }
    dend_28 { pt3dadd( 50.8242, -241.432, -7.29268, 0.66 ) }
    dend_28 { pt3dadd( 51.6121, -242.221, -7.0848, 0.22 ) }
    dend_28 { pt3dadd( 51.9703, -242.623, -6.99146, 0.22 ) }
    dend_28 { pt3dadd( 52.2975, -243.034, -6.91575, 0.96 ) }
    dend_28 { pt3dadd( 52.67, -243.503, -6.83773, 0.96 ) }
    dend_28 { pt3dadd( 53.7792, -244.928, -6.64745, 0.22 ) }
    dend_28 { pt3dadd( 54.4546, -245.805, -6.55079, 1.03 ) }
    dend_28 { pt3dadd( 54.8433, -246.329, -6.50703, 1.47 ) }
    dend_28 { pt3dadd( 55.9524, -247.863, -6.39823, 0.29 ) }
    dend_28 { pt3dadd( 56.7164, -248.943, -6.33743, 0.52 ) }
    dend_28 { pt3dadd( 57.3887, -249.935, -6.2899, 0.15 ) }
    dend_28 { pt3dadd( 57.442, -250.023, -6.28649, 0.15 ) }
    dend_28 { pt3dadd( 57.8488, -250.773, -6.22987, 0.74 ) }
    dend_28 { pt3dadd( 57.9988, -251.124, -6.23076, 0.74 ) }
    dend_28 { pt3dadd( 58.0236, -251.193, -6.23529, 0.74 ) }
    dend_28 { pt3dadd( 58.5385, -252.656, -6.40443, 0.15 ) }
    dend_28 { pt3dadd( 58.9096, -253.603, -6.54426, 1.4 ) }
    dend_28 { pt3dadd( 59.1602, -254.164, -6.65642, 1.69 ) }
    dend_28 { pt3dadd( 60.2597, -256.521, -7.20537, 0.22 ) }
    dend_28 { pt3dadd( 60.9417, -257.94, -7.56537, 0.22 ) }
    dend_28 { pt3dadd( 61.293, -258.655, -7.76226, 1.11 ) }
    dend_28 { pt3dadd( 61.5692, -259.183, -7.92325, 1.55 ) }
    dend_28 { pt3dadd( 62.3536, -260.605, -8.33418, 0.15 ) }
    dend_28 { pt3dadd( 62.9789, -261.696, -8.59346, 0.15 ) }
    dend_28 { pt3dadd( 63.2496, -262.165, -8.66252, 0.81 ) }
    dend_28 { pt3dadd( 63.3968, -262.438, -8.69889, 0.81 ) }
    dend_28 { pt3dadd( 63.9195, -263.439, -8.80433, 0.15 ) }
    dend_28 { pt3dadd( 64.5314, -264.618, -8.85637, 0.52 ) }
    dend_28 { pt3dadd( 65.3013, -266.066, -8.82215, 0.15 ) }
    dend_28 { pt3dadd( 65.423, -266.262, -8.80157, 0.96 ) }
    dend_28 { pt3dadd( 65.4698, -266.328, -8.7868, 0.96 ) }
    dend_28 { pt3dadd( 65.8544, -266.856, -8.64658, 1.11 ) }
    dend_28 { pt3dadd( 66.8721, -268.196, -8.18682, 0.22 ) }
    dend_28 { pt3dadd( 67.16, -268.543, -8.0314, 0.37 ) }
    dend_28 { pt3dadd( 68.4983, -270.054, -7.19124, 0.15 ) }
    dend_28 { pt3dadd( 69.3274, -270.944, -6.66765, 1.69 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 37/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 104.782, -262.468, 65.4078, 0.29 ) }
    dend_47 { pt3dadd( 108.676, -271.009, 69.7275, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 39/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 104.782, -262.468, 65.4078, 0.29 ) }
    dend_46 { pt3dadd( 107.59, -271.409, 69.8358, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 41/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 69.3274, -270.944, -6.66765, 0.22 ) }
    dend_30 { pt3dadd( 70.7897, -270.809, -5.0587, 0.22 ) }
    dend_30 { pt3dadd( 71.8205, -270.709, -3.92352, 0.59 ) }
    dend_30 { pt3dadd( 71.8586, -270.707, -3.87726, 0.59 ) }
    dend_30 { pt3dadd( 73.0098, -270.789, -2.33365, 0.96 ) }
    dend_30 { pt3dadd( 74.3716, -270.973, -0.499275, 0.22 ) }
    dend_30 { pt3dadd( 74.4446, -270.985, -0.402118, 0.59 ) }
    dend_30 { pt3dadd( 74.4853, -270.996, -0.346135, 0.59 ) }
    dend_30 { pt3dadd( 75.8465, -271.487, 1.46326, 0.44 ) }
    dend_30 { pt3dadd( 77.4553, -272.254, 3.53114, 0.15 ) }
    dend_30 { pt3dadd( 77.8507, -272.5, 4.02819, 0.66 ) }
    dend_30 { pt3dadd( 78.0189, -272.624, 4.24639, 0.66 ) }
    dend_30 { pt3dadd( 78.9476, -273.347, 5.45661, 0.22 ) }
    dend_30 { pt3dadd( 79.394, -273.702, 6.02638, 0.22 ) }
    dend_30 { pt3dadd( 80.4054, -274.535, 7.24896, 0.52 ) }
    dend_30 { pt3dadd( 81.5591, -275.535, 8.68561, 0.37 ) }
    dend_30 { pt3dadd( 82.5173, -276.422, 9.99407, 0.29 ) }
    dend_30 { pt3dadd( 82.5703, -276.474, 10.072, 0.29 ) }
    dend_30 { pt3dadd( 88.7859, -278.997, 17.5281, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 69.3274, -270.944, -6.66765, 0.15 ) }
    dend_29 { pt3dadd( 69.3885, -272.866, -6.1653, 0.15 ) }
    dend_29 { pt3dadd( 69.4044, -273.394, -6.00741, 0.44 ) }
    dend_29 { pt3dadd( 69.4148, -273.763, -5.89291, 0.44 ) }
    dend_29 { pt3dadd( 69.4637, -275.501, -5.35421, 0.22 ) }
    dend_29 { pt3dadd( 69.5039, -276.929, -4.91139, 0.22 ) }
    dend_29 { pt3dadd( 69.5056, -276.989, -4.89282, 0.22 ) }
    dend_29 { pt3dadd( 69.6118, -277.872, -4.49691, 0.81 ) }
    dend_29 { pt3dadd( 69.6506, -278.149, -4.35924, 0.81 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_39, dend_24, dend_9, dend_0, dend_56, dend_53, dend_49, dend_40, dend_36, dend_25, dend_17, dend_10, dend_4, dend_1, dend_58, dend_57, dend_55, dend_54, dend_51, dend_50, dend_42, dend_41, dend_38, dend_37, dend_33, dend_26, dend_21, dend_18, dend_14, dend_11, dend_8, dend_5, dend_3, dend_2, dend_48, dend_43, dend_35, dend_34, dend_32, dend_27, dend_23, dend_22, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12, dend_7, dend_6, dend_45, dend_44, dend_31, dend_28, dend_47, dend_46, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_52 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_39, dend_24, dend_9, dend_0, dend_56, dend_53, dend_49, dend_40, dend_36, dend_25, dend_17, dend_10, dend_4, dend_1, dend_58, dend_57, dend_55, dend_54, dend_51, dend_50, dend_42, dend_41, dend_38, dend_37, dend_33, dend_26, dend_21, dend_18, dend_14, dend_11, dend_8, dend_5, dend_3, dend_2, dend_48, dend_43, dend_35, dend_34, dend_32, dend_27, dend_23, dend_22, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12, dend_7, dend_6, dend_45, dend_44, dend_31, dend_28, dend_47, dend_46, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_52, dend_39, dend_24, dend_9, dend_0, axon_0, dend_56, dend_53, dend_49, dend_40, dend_36, dend_25, dend_17, dend_10, dend_4, dend_1, axon_1, dend_58, dend_57, dend_55, dend_54, dend_51, dend_50, dend_42, dend_41, dend_38, dend_37, dend_33, dend_26, dend_21, dend_18, dend_14, dend_11, dend_8, dend_5, dend_3, dend_2, dend_48, dend_43, dend_35, dend_34, dend_32, dend_27, dend_23, dend_22, dend_20, dend_19, dend_16, dend_15, dend_13, dend_12, dend_7, dend_6, dend_45, dend_44, dend_31, dend_28, dend_47, dend_46, dend_30, dend_29]}
    ModelViewParmSubset_5 = new SectionList()
    dend_52 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_53 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_49 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_58 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_57 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_54 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_42 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_41 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_33 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_21 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_11 OneSecGrp_SectionRef_34.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_5 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_3 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_2 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_48 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_43 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_35 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_34 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_32 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_27 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_23 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_20 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_19 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_16 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_15 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_13 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_12 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_7 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_6 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_45 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_31 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_28 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_17 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_52 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_25 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_4 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_26 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_18 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_22 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_44 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_50 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_51 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_55 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_29 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_30 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_47 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_46 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_47, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_56 nseg = 5
    dend_53 nseg = 11
    dend_49 nseg = 11
    dend_36 nseg = 11
    dend_1 nseg = 3
    dend_58 nseg = 5
    dend_57 nseg = 5
    dend_54 nseg = 3
    dend_42 nseg = 5
    dend_41 nseg = 3
    dend_37 nseg = 3
    dend_33 nseg = 3
    dend_21 nseg = 5
    dend_11 nseg = 3
    dend_8 nseg = 11
    dend_5 nseg = 3
    dend_3 nseg = 7
    dend_2 nseg = 11
    dend_48 nseg = 3
    dend_43 nseg = 5
    dend_35 nseg = 7
    dend_34 nseg = 7
    dend_32 nseg = 11
    dend_27 nseg = 7
    dend_23 nseg = 9
    dend_20 nseg = 9
    dend_19 nseg = 7
    dend_16 nseg = 9
    dend_15 nseg = 9
    dend_13 nseg = 3
    dend_12 nseg = 5
    dend_7 nseg = 9
    dend_6 nseg = 5
    dend_45 nseg = 5
    dend_31 nseg = 3
    dend_28 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_NBC_7b7132634e_0_0


