// Cell: bAC217_L23_NBC_421c200e4e_0_0
/*
{
  "id" : "bAC217_L23_NBC_421c200e4e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.72306, 5.30436, 4.20388, 2.54287", "-4.25223, 4.78627, 3.78879, 4.68725", "-3.7814, 4.26817, 3.37371, 6.22673", "-3.31057, 3.75008, 2.95862, 7.64701", "-2.83974, 3.23199, 2.54353, 8.55761", "-2.36891, 2.7139, 2.12844, 8.96549", "-1.89808, 2.19581, 1.71335, 9.2975", "-1.42725, 1.67772, 1.29826, 9.48549", "-0.956417, 1.15963, 0.883172, 9.67333", "-0.485586, 0.641536, 0.468083, 9.75336", "-0.0147564, 0.123445, 0.0529936, 9.80295", "0.456074, -0.394646, -0.362095, 9.88568", "0.926904, -0.912738, -0.777184, 9.94624", "1.39773, -1.43083, -1.19227, 9.39229", "1.86856, -1.94892, -1.60736, 8.64644", "2.33939, -2.46701, -2.02245, 7.85208", "2.81022, -2.9851, -2.43754, 7.02739", "3.28105, -3.50319, -2.85263, 6.08715", "3.75188, -4.02128, -3.26772, 4.76023", "4.22271, -4.53938, -3.68281, 3.42054", "4.69354, -5.05747, -4.0979, 1.96741" ]
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-2.10822, -3.15908, -18.4649, 1.11", "-3.94864, -4.22687, -29.8807, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "2.32178, -4.87908, -18.1149, 1.11", "3.07016, -5.73427, -18.1093, 1.11", "5.02187, -7.93148, -18.3897, 1.11", "5.96715, -8.98583, -18.779, 1.11", "8.29138, -11.4416, -19.9792, 0.83", "10.3102, -13.4881, -21.097, 0.83", "12.1063, -15.1894, -22.0481, 0.83", "14.538, -17.3677, -23.6005, 0.83", "17.8297, -20.1957, -25.9303, 0.83", "19.2495, -21.3843, -27.0388, 0.83", "20.543, -22.3895, -28.1745, 0.83", "23.2171, -24.2339, -30.643, 0.83", "25.9659, -25.8944, -33.0692, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "2.98178, 0.400921, -16.4649, 1.11", "4.78621, -0.088855, -16.4638, 1.11", "7.41569, -0.802569, -16.4622, 0.83", "10.0561, -1.51926, -16.4607, 0.55", "12.6219, -2.21568, -16.4592, 0.55", "15.0751, -2.88155, -16.4577, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-0.808223, 8.07092, 4.65513, 1.11", "-1.83213, 11.063, 4.70216, 1.11", "-2.70554, 13.6153, 4.74228, 0.55", "-3.29814, 15.3471, 4.76949, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.24177, -5.66908, 2.24513, 1.11", "2.67431, -8.26585, 3.15313, 1.11", "3.58723, -9.87918, 3.35708, 1.11", "4.32889, -11.0176, 3.38084, 0.83", "5.33536, -12.4833, 3.30586, 0.55", "6.46074, -13.9895, 3.18131, 0.28", "7.4466, -15.2966, 3.06983, 1.11", "9.92188, -18.4932, 2.70138, 0.55", "11.1824, -20.0789, 2.28675, 0.55", "12.7625, -22.2684, 1.29975, 0.83", "13.7178, -23.7739, 0.411717, 0.55", "14.6241, -25.1515, -0.623168, 0.83", "15.6753, -26.7043, -1.92333, 0.83", "17.879, -29.9742, -4.6401, 0.55", "19.8559, -32.944, -7.20632, 0.55", "20.6671, -34.1975, -8.31051, 0.55", "22.3843, -37.088, -10.6565, 0.83", "22.8074, -37.8199, -11.1599, 0.55", "23.8686, -39.7598, -12.0908, 0.83", "24.6912, -41.5215, -12.4387, 0.55", "25.5318, -43.2944, -12.6524, 0.55", "26.3427, -45.2981, -12.8925, 1.11", "27.0274, -47.4285, -13.1353, 1.11", "27.5351, -49.0713, -13.3802, 0.83", "28.1856, -51.1981, -13.761, 0.83", "29.2461, -54.2047, -14.3331, 0.55", "30.2097, -56.4762, -14.7496, 0.55", "30.8196, -57.8077, -14.9902, 0.28", "31.0753, -58.3503, -15.0872, 0.83", "31.9374, -60.0482, -15.3748, 0.55", "32.6063, -61.2536, -15.6441, 0.55", "33.4463, -62.8049, -16.0749, 0.28", "34.1149, -63.934, -16.5243, 1.11", "34.8178, -65.0833, -17.0733, 0.28", "35.3131, -65.8861, -17.4963, 0.55", "36.7623, -68.2855, -18.8184, 0.28", "37.2095, -69.0782, -19.2552, 0.83", "38.2449, -70.923, -20.299, 0.83", "39.0648, -72.3482, -21.0588, 0.28", "39.3008, -72.7947, -21.2529, 0.55", "39.7929, -73.8289, -21.5767, 0.28", "40.0362, -74.3598, -21.6645, 0.55", "40.6312, -75.7566, -21.8263, 0.28", "40.7642, -76.1062, -21.8703, 0.55", "41.4303, -77.915, -22.0849, 0.28", "41.7988, -78.8142, -22.1923, 0.55", "42.248, -79.841, -22.3087, 0.28", "43.0371, -81.5826, -22.4582, 0.83", "43.89, -83.4502, -22.5835, 0.28", "44.5111, -84.7796, -22.688, 0.55", "45.1221, -86.0529, -22.7988, 0.28", "45.6816, -87.3154, -22.9184, 0.83", "46.3405, -88.8891, -23.0621, 0.28", "46.8224, -90.0544, -23.147, 0.55", "47.6588, -92.1838, -23.2537, 0.28", "47.9312, -92.9529, -23.2884, 0.83", "48.3781, -94.344, -23.3421, 0.83", "48.9869, -96.2288, -23.3987, 0.83", "49.6558, -98.3244, -23.4378, 0.28", "50.0543, -99.3303, -23.4767, 0.83", "50.8201, -100.796, -23.5336, 0.28", "51.1591, -101.22, -23.5895, 0.55", "52.1539, -102.143, -23.7888, 0.28", "53.0041, -102.735, -24.1365, 0.55", "55.3413, -104.127, -25.3491, 0.28", "56.8534, -104.966, -26.3785, 0.83", "59.8684, -106.594, -28.7287, 0.28", "60.525, -106.985, -29.3297, 0.55", "64.1443, -109.407, -33.1033, 0.28", "64.442, -109.654, -33.4824, 0.55", "66.5266, -111.926, -36.816, 0.28", "66.8578, -112.418, -37.4375, 0.55", "67.5873, -113.905, -39.0, 0.28", "68.0302, -114.983, -39.9237, 0.83", "69.2087, -118.455, -42.1299, 0.28", "69.2858, -118.681, -42.2467, 0.55", "70.6922, -122.964, -43.9032, 0.28", "70.8609, -123.459, -44.0843, 0.83", "71.6124, -125.5, -44.7289, 0.28", "71.9003, -126.291, -44.9406, 0.83", "72.8816, -128.931, -45.2754, 0.28", "73.1825, -129.735, -45.3688, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "3.45178, 1.12092, -6.46487, 0.83", "5.66878, 1.35713, -6.42371, 0.83", "8.07108, 1.61308, -6.37911, 0.83", "10.6885, 1.89194, -6.33051, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-4.64822, 0.230921, 13.8451, 0.83", "-5.86737, -1.76946, 13.8451, 0.83", "-7.41053, -4.30145, 13.8451, 0.83", "-8.46319, -6.02863, 13.8451, 0.83", "-10.9026, -10.0312, 13.8451, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.04822, -6.61908, -6.38487, 2.49", "-2.87185, -9.44293, -6.38487, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.69354, -5.05747, -4.0979, 0.583783", "14.7817, -16.1583, -4.0979, 0.583783", "24.8699, -27.2591, -4.0979, 0.583783" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-3.94864, -4.22687, -29.8807, 1.11", "-4.53085, 0.950813, -19.6234, 1.11", "-4.57934, 1.88348, -18.351, 0.55", "-4.59693, 2.67634, -17.5881, 0.83", "-4.59821, 3.96171, -17.3761, 0.55", "-4.65741, 5.63763, -17.7964, 0.55", "-4.81699, 7.88374, -18.5681, 1.11", "-4.95441, 10.0143, -19.873, 0.83", "-4.86872, 13.7531, -22.8227, 0.55", "-4.7316, 14.591, -23.8184, 0.55", "-4.56891, 15.0866, -24.6714, 0.55", "-4.29195, 15.7143, -25.9646, 0.55", "-3.78767, 16.6436, -27.9754, 0.55", "-2.96062, 17.9793, -30.7289, 0.55", "-1.61935, 20.0744, -34.7772, 0.83", "-0.389836, 22.0778, -38.481, 0.28", "0.0579171, 22.8395, -39.8215, 0.83", "1.01883, 24.6781, -42.9288, 0.55", "1.16495, 25.0699, -43.5234, 0.55", "1.52476, 26.8397, -46.0838, 1.11", "1.77679, 28.3614, -48.2703, 0.28", "1.88547, 29.0539, -49.3695, 0.55", "1.97519, 29.5929, -50.2842, 0.28", "2.17103, 30.52, -52.0369, 0.55", "2.94134, 33.406, -57.4257, 0.28", "3.3834, 34.7863, -59.9483, 0.83", "3.92239, 36.2978, -62.6404, 0.28", "4.23752, 37.1693, -64.0857, 0.83", "5.40925, 40.4052, -68.9508, 0.28", "5.87277, 41.7572, -70.6502, 0.28", "6.36384, 43.5536, -72.4039, 1.38", "6.80594, 45.7773, -74.3097, 0.55", "7.04635, 47.3346, -75.5271, 0.28", "7.19374, 48.7864, -76.5419, 0.55", "7.31648, 51.3673, -77.9137, 0.28", "7.38839, 52.8665, -78.6047, 0.83", "7.50152, 54.8162, -79.307, 0.28", "7.55814, 55.5106, -79.4982, 0.55", "7.70767, 56.7481, -79.792, 0.28", "7.84584, 57.5169, -79.9355, 0.83", "8.66406, 61.1335, -80.4995, 0.28", "8.87114, 61.8246, -80.5863, 0.83", "9.72125, 64.0848, -80.8355, 0.28", "10.1167, 64.963, -80.9627, 0.55", "10.8959, 66.5217, -81.2626, 0.28", "11.1462, 67.0122, -81.3729, 0.55", "12.0992, 68.8784, -81.7867, 0.28", "12.5243, 69.6713, -81.9757, 0.55", "13.0131, 70.5294, -82.1998, 0.28", "13.6976, 71.7943, -82.5276, 0.55", "14.9906, 74.6185, -83.1934, 0.28", "15.4693, 75.8747, -83.4515, 0.83" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-3.94864, -4.22687, -29.8807, 0.55", "-6.66805, -3.6663, -32.2565, 0.55", "-11.3904, -3.1147, -35.8602, 0.55", "-13.1005, -2.98317, -37.0702, 0.83", "-14.835, -2.86054, -38.2104, 0.28", "-15.7534, -2.77828, -38.7809, 0.55", "-18.9027, -2.47317, -40.6411, 0.28", "-20.7605, -2.29545, -41.6119, 0.55", "-23.2547, -2.19859, -42.6711, 0.28", "-24.7395, -2.09776, -43.249, 0.55", "-27.3345, -1.79738, -44.2627, 0.28", "-28.2576, -1.64389, -44.6142, 0.55", "-29.6994, -1.30785, -45.1295, 0.28", "-31.4312, -0.964889, -45.7188, 0.55", "-34.2769, -0.506211, -46.5651, 0.28", "-35.2645, -0.389554, -46.9084, 0.55", "-37.3495, -0.18713, -47.6563, 0.28", "-38.2065, -0.102198, -47.9754, 0.55", "-42.6999, 0.27744, -49.8192, 0.28", "-44.1534, 0.382057, -50.4624, 0.55", "-48.1712, 0.573209, -52.5309, 0.28", "-50.3607, 0.612146, -53.7845, 0.28", "-51.4208, 0.603326, -54.545, 0.55", "-54.5044, 0.608025, -57.0013, 0.28", "-55.2654, 0.614047, -57.6536, 0.55", "-58.7984, 0.623081, -60.9538, 0.28", "-60.2668, 0.616206, -62.3518, 0.55", "-64.4708, 0.563749, -66.5445, 0.28", "-66.5189, 0.544915, -68.6104, 0.28", "-67.638, 0.542104, -69.7219, 0.55", "-72.0203, 0.578841, -74.2797, 0.28", "-73.3008, 0.598467, -75.5918, 0.28", "-73.7486, 0.588792, -76.0285, 0.55", "-75.36, 0.457621, -77.4733, 0.28", "-76.431, 0.336799, -78.4406, 0.55", "-81.4959, -0.331347, -82.7861, 0.28", "-83.091, -0.62552, -84.0427, 0.55", "-87.3534, -1.44519, -87.1714, 0.28", "-88.7633, -1.73044, -88.1216, 0.55", "-91.9802, -2.44295, -90.144, 0.28", "-93.3102, -2.77884, -90.9241, 0.55", "-96.4636, -3.66506, -92.4761, 0.28", "-98.9889, -4.37912, -93.7407, 0.28", "-100.016, -4.65038, -94.2517, 0.55", "-101.795, -5.17869, -95.1317, 0.28", "-103.091, -5.64225, -95.6874, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "25.9659, -25.8944, -33.0692, 0.55", "26.403, -26.3376, -33.8844, 0.55", "26.8011, -26.669, -34.4839, 0.55", "28.184, -27.9494, -36.9599, 0.55", "29.4502, -29.1223, -39.0287, 0.55", "29.9866, -29.655, -39.9522, 0.55", "30.5095, -30.186, -40.8193, 0.55", "31.7127, -31.4718, -42.8579, 0.55", "33.1082, -33.0444, -45.1713, 0.28", "34.3801, -34.4778, -47.0397, 0.83", "36.4095, -36.7508, -49.67, 0.55", "37.1846, -37.604, -50.5749, 0.55", "38.4731, -39.0898, -51.8553, 0.83", "39.142, -39.853, -52.3657, 0.83", "39.7809, -40.553, -52.7352, 0.55", "41.2128, -42.1259, -53.5266, 1.11", "42.6407, -43.6529, -54.0144, 0.55", "43.6184, -44.6723, -54.2859, 0.83", "44.0911, -45.1506, -54.386, 0.83", "45.3313, -46.4259, -54.7028, 0.55", "46.3279, -47.45, -55.0146, 0.28", "47.2198, -48.2842, -55.3246, 0.83", "48.0079, -48.9687, -55.5975, 0.28", "48.7523, -49.5407, -55.8539, 0.55", "50.5464, -50.8028, -56.3932, 0.28", "51.2069, -51.2237, -56.5404, 0.83", "52.4751, -52.0228, -56.7594, 0.28", "53.1634, -52.4402, -56.8614, 0.55", "54.3189, -53.1189, -56.9946, 0.28", "55.3775, -53.683, -57.0511, 1.38", "57.0655, -54.5009, -57.0601, 0.55", "57.8235, -54.8645, -57.0424, 0.55", "58.6042, -55.2284, -57.0062, 0.83", "59.5305, -55.6438, -56.9406, 0.83", "60.094, -55.9039, -56.8636, 0.28", "60.9303, -56.2998, -56.726, 0.55", "61.9453, -56.8404, -56.5378, 0.28", "62.3086, -57.0559, -56.467, 0.28", "62.859, -57.4312, -56.379, 0.55", "63.8203, -58.1328, -56.2849, 0.28", "64.6222, -58.7141, -56.2965, 0.83", "65.4165, -59.249, -56.3775, 0.28", "65.9073, -59.5532, -56.4897, 0.83", "66.8856, -60.1057, -56.7458, 0.28", "67.2562, -60.2871, -56.8486, 0.83", "68.5741, -60.8626, -57.2212, 0.28", "69.6484, -61.306, -57.5069, 0.83", "70.9421, -61.7906, -57.8519, 0.55", "72.3368, -62.2949, -58.2134, 0.83", "73.4784, -62.7331, -58.4904, 0.83", "74.0891, -62.9914, -58.6223, 0.83", "75.7572, -63.7383, -58.9941, 0.28", "76.5978, -64.1046, -59.1856, 0.28", "77.1369, -64.3207, -59.3218, 0.83", "78.4926, -64.8456, -60.0005, 0.28", "79.1581, -65.1166, -60.4779, 0.83", "80.1281, -65.5311, -61.3629, 0.55", "80.9366, -65.8969, -62.2527, 0.55", "81.8264, -66.3379, -63.3151, 0.83", "83.8922, -67.3227, -65.7485, 0.28", "84.5749, -67.5911, -66.4648, 0.55", "84.7721, -67.6637, -66.6357, 0.55", "85.1957, -67.843, -66.905, 0.55", "85.9686, -68.2111, -67.3081, 0.83", "87.1897, -68.7648, -67.8032, 0.55", "88.7315, -69.3978, -68.2762, 0.55", "90.0871, -69.9077, -68.7143, 0.28", "91.4533, -70.3829, -69.1604, 1.11", "93.4553, -71.0449, -69.8744, 0.28", "93.8333, -71.1649, -70.0186, 0.28", "94.5423, -71.4065, -70.3038, 0.55", "95.6034, -71.7921, -70.7338, 0.28", "96.6178, -72.1471, -71.1023, 0.83", "98.1863, -72.5927, -71.5939, 0.28", "98.5803, -72.7018, -71.6849, 0.55", "99.1126, -72.854, -71.8034, 0.28", "99.7348, -73.0582, -71.9258, 0.55", "100.894, -73.5164, -72.1095, 0.28", "102.095, -74.0921, -72.2254, 0.83", "102.806, -74.4485, -72.2585, 0.28", "103.589, -74.8596, -72.2764, 0.83", "105.0, -75.6273, -72.2849, 0.28", "105.581, -75.9908, -72.2694, 0.83", "107.234, -77.1467, -72.1728, 0.28", "107.566, -77.4018, -72.1493, 0.55", "109.058, -78.5336, -72.0455, 0.28", "109.472, -78.8597, -72.0854, 0.55", "110.339, -79.5641, -72.3701, 0.28", "110.768, -79.9266, -72.5584, 0.55", "111.594, -80.6866, -73.097, 0.28", "112.113, -81.2051, -73.5283, 0.55", "113.922, -83.1725, -75.7869, 0.28", "114.226, -83.5073, -76.2515, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "25.9659, -25.8944, -33.0692, 0.55", "28.5203, -26.3953, -37.4309, 0.55", "29.8874, -27.0162, -39.9338, 0.55", "30.763, -27.4046, -41.5557, 0.55", "32.5144, -28.0482, -44.791, 0.55", "33.8389, -28.3425, -47.1141, 0.83", "38.7483, -29.0256, -57.2699, 0.55", "39.914, -29.0177, -60.136, 0.55", "40.6867, -28.9454, -62.2073, 0.55", "41.309, -28.8551, -63.9457, 0.55", "42.4655, -28.6299, -67.0847, 0.55", "45.5494, -27.7477, -74.7109, 1.11", "46.8733, -27.1735, -77.5983, 0.55", "47.7783, -26.7462, -79.8998, 1.11", "49.0993, -26.1599, -83.4507, 0.55", "49.8031, -25.8766, -85.5474, 0.55", "51.4, -25.2996, -90.529, 1.11", "53.0849, -24.7063, -97.4854, 0.55", "54.1706, -24.264, -103.285, 0.28", "54.3963, -24.1252, -104.845, 1.11", "55.4071, -23.2628, -113.273, 0.55", "55.7135, -22.8117, -116.945, 0.83", "56.599, -20.3517, -133.406, 0.28", "56.6385, -20.0405, -135.32, 0.83", "56.646, -19.2633, -139.397, 0.28", "56.5949, -18.705, -141.775, 0.83", "56.3937, -17.527, -145.403, 0.28", "56.2898, -17.0018, -146.663, 0.55", "55.4691, -11.2323, -156.039, 0.28", "55.3253, -10.5417, -157.241, 0.55", "55.0346, -9.43547, -159.182, 0.28", "54.8416, -9.03395, -159.968, 0.55", "54.4732, -8.3819, -161.215, 0.28", "53.8929, -7.48916, -162.937, 0.55", "51.6512, -4.47687, -168.635, 0.28", "50.8896, -3.57313, -170.548, 1.11", "46.5833, 0.971083, -181.341, 0.28", "45.7995, 1.74984, -183.346, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "15.0751, -2.88155, -16.4577, 0.55", "15.8364, -2.38654, -18.8678, 0.55", "19.3502, -0.829909, -29.5866, 0.55", "20.5608, -0.472246, -33.1464, 0.55", "21.1608, -0.458877, -35.1849, 0.55", "23.0348, -0.696627, -41.8373, 0.83", "24.7232, -1.25872, -48.9668, 0.55", "25.6855, -1.8425, -53.3497, 0.28", "26.1472, -2.23982, -55.7607, 1.11", "28.4573, -4.53718, -68.801, 0.28", "28.8829, -4.96147, -71.238, 0.83", "31.714, -7.58759, -87.2387, 0.55", "32.7263, -8.43116, -92.6227, 0.83", "34.9767, -10.0017, -104.327, 0.28", "35.567, -10.3252, -107.15, 1.38", "37.2635, -10.9296, -114.021, 0.28", "37.5789, -11.0135, -115.155, 0.55", "39.1123, -11.1619, -119.221, 0.28", "39.3795, -11.1749, -119.802, 0.28", "40.3963, -11.3035, -121.419, 0.28", "40.7497, -11.4427, -122.039, 0.55", "41.3733, -11.7968, -123.168, 0.28", "41.7263, -12.0112, -123.772, 0.55", "44.1788, -13.5466, -127.82, 0.28", "45.0977, -14.1249, -129.356, 1.11", "50.9043, -17.8105, -139.381, 0.28", "51.3024, -18.0655, -140.084, 0.55", "55.208, -20.5735, -147.075, 0.28", "55.5346, -20.7941, -147.672, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "15.0751, -2.88155, -16.4577, 1.38", "15.0177, -1.87273, -17.4601, 1.38", "14.7764, 2.36969, -21.6753, 0.83", "14.6407, 4.75517, -24.0455, 0.83", "14.5217, 6.84698, -26.1239, 0.83", "14.409, 8.82767, -28.0918, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.29814, 15.3471, 4.76949, 0.55", "-2.64206, 17.8067, 6.53929, 0.55", "-2.32926, 18.9794, 7.38309, 0.55", "-1.9087, 20.5561, 8.51756, 0.55", "-1.16645, 23.3388, 10.5198, 0.55", "-0.217888, 26.8949, 13.0786, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-3.29814, 15.3471, 4.76949, 0.55", "-3.65482, 17.7527, 4.79407, 0.55", "-3.79853, 18.5751, 4.78694, 0.83", "-4.29475, 21.0739, 4.73597, 0.55", "-4.73652, 23.1971, 4.6824, 0.83", "-5.20219, 25.2835, 4.66926, 0.55", "-5.77233, 27.8806, 4.68989, 0.55", "-6.10089, 29.3073, 4.71047, 0.83", "-6.70198, 31.7885, 4.87241, 0.55", "-7.00402, 32.9664, 5.0036, 0.83", "-7.58735, 34.9747, 5.31214, 0.55", "-7.91154, 36.1257, 5.54503, 0.55", "-8.55729, 38.5466, 6.08981, 0.55", "-9.01884, 40.5394, 6.50329, 0.83", "-9.33335, 41.9899, 6.77637, 0.55", "-9.63839, 43.4622, 7.00085, 0.83", "-10.2356, 46.3894, 7.31694, 0.83", "-10.7511, 48.6498, 7.50662, 0.55", "-11.4155, 51.5432, 7.67242, 0.83", "-11.85, 53.4314, 7.69708, 0.55", "-12.3675, 55.5296, 7.69971, 0.28", "-12.8487, 57.4574, 7.69436, 0.55", "-13.2307, 59.0461, 7.68477, 0.28", "-13.434, 59.9135, 7.68421, 0.55", "-13.6952, 60.9431, 7.67375, 0.28", "-13.9774, 62.4123, 7.64808, 0.55", "-14.1596, 64.0303, 7.65682, 0.28", "-14.2079, 64.7008, 7.66746, 0.55", "-14.2864, 66.8008, 7.7424, 0.28", "-14.3261, 68.6237, 7.84759, 0.55", "-14.3712, 71.6038, 8.0681, 0.55", "-14.3986, 73.7754, 8.22476, 0.28", "-14.3911, 75.767, 8.37734, 0.28", "-14.2819, 78.7615, 8.65238, 1.11", "-14.1549, 80.8351, 8.90785, 0.55", "-14.0785, 82.0514, 9.08797, 0.55", "-14.0541, 83.2469, 9.33126, 0.83", "-14.0886, 85.0795, 9.74331, 0.28", "-14.1351, 85.9705, 10.0052, 0.55", "-14.2711, 87.238, 10.4701, 0.55", "-14.4633, 88.6186, 11.0335, 0.55", "-14.9465, 91.6536, 12.3886, 0.28", "-15.2227, 93.0653, 13.0711, 0.55", "-15.7456, 95.0719, 14.1001, 0.28", "-16.0387, 96.0812, 14.6296, 0.55", "-18.2308, 106.564, 14.0292, 0.55", "-18.9436, 117.267, 13.9333, 0.55", "-20.699, 127.829, 14.5802, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "10.6885, 1.89194, -6.33051, 0.55", "12.7307, 3.70894, -4.96385, 0.55", "14.5346, 5.18399, -3.89712, 0.55", "15.6082, 5.96282, -3.36878, 0.83", "18.2229, 7.63944, -2.33094, 0.55", "20.4925, 9.06832, -1.77202, 0.83", "23.2373, 10.8775, -1.35469, 0.55", "24.5903, 11.7847, -1.28684, 0.55", "27.0802, 13.4168, -1.4169, 0.55", "30.4525, 15.7351, -1.80895, 0.55", "34.6678, 18.8558, -2.55864, 0.55", "36.4727, 20.3312, -2.9159, 0.83", "38.7989, 22.3484, -3.32512, 0.55", "40.7969, 24.1054, -3.57869, 0.83", "42.8489, 26.003, -3.79733, 0.55", "43.7189, 26.7913, -3.84845, 0.55", "45.537, 28.2899, -3.8631, 0.83", "47.1322, 29.5391, -4.03897, 0.28", "48.1477, 30.4222, -4.30131, 0.55", "49.9584, 32.1642, -4.9581, 0.28", "51.1154, 33.3779, -5.47261, 0.55", "52.6152, 35.0171, -6.20679, 0.28", "53.4952, 36.0036, -6.62937, 0.55", "55.7507, 38.594, -7.68787, 0.28", "56.3791, 39.3406, -7.95536, 0.83", "58.6013, 41.9654, -8.71977, 0.28", "59.1077, 42.5768, -8.88434, 0.55", "61.6513, 45.5221, -9.5685, 0.28", "62.3562, 46.2437, -9.73148, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "10.6885, 1.89194, -6.33051, 0.55", "12.5883, 0.189577, -5.48222, 0.55", "13.554, -0.675755, -5.05102, 0.83", "14.6769, -1.68199, -4.54961, 0.83", "17.133, -3.88283, -3.45293, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.9026, -10.0312, 13.8451, 0.83", "-12.0593, -8.66849, 14.5672, 0.83", "-13.076, -7.45204, 15.2286, 0.83", "-13.6243, -6.81234, 15.5917, 0.83", "-15.1073, -5.18392, 16.5774, 0.55", "-16.3243, -3.86453, 17.3938, 0.83", "-17.3059, -2.75411, 18.0865, 0.55", "-18.3282, -1.6567, 18.8521, 0.55", "-19.1187, -0.785839, 19.5179, 0.83", "-19.8074, 0.100307, 20.2222, 0.55", "-20.1927, 0.722193, 20.7448, 0.55", "-20.7732, 1.84684, 21.7257, 0.55", "-21.4015, 3.19938, 22.9141, 0.55", "-22.1853, 4.72089, 24.3556, 0.83", "-22.8133, 5.7674, 25.5425, 0.83", "-23.4417, 6.71458, 26.7527, 0.55", "-23.6099, 6.93188, 27.0666, 0.55", "-24.4025, 7.84908, 28.4947, 0.55", "-25.3985, 8.94462, 30.2298, 0.55", "-26.7869, 10.141, 32.4126, 0.83", "-27.5168, 10.6047, 33.4228, 0.28", "-27.9215, 10.7854, 33.9174, 0.55", "-28.9052, 11.018, 35.0079, 0.28", "-29.5093, 10.9811, 35.5605, 0.55", "-30.7325, 10.6527, 36.3771, 0.28", "-32.1039, 10.0947, 37.04, 0.55", "-33.1401, 9.57555, 37.494, 0.55", "-34.4662, 8.87889, 38.0172, 0.55", "-35.906, 8.06837, 38.5292, 0.28", "-36.4487, 7.73957, 38.7001, 0.55", "-38.5114, 6.4143, 39.2541, 0.28", "-39.6499, 5.64339, 39.5312, 0.55", "-41.0044, 4.62494, 39.8121, 0.55", "-42.3492, 3.54525, 40.0375, 0.55", "-43.8883, 2.2317, 40.2354, 0.55", "-44.7159, 1.50866, 40.3183, 0.83", "-46.5383, -0.0379509, 40.4679, 0.55", "-48.2089, -1.33937, 40.6343, 0.28", "-49.8994, -2.51451, 40.8535, 0.55", "-51.6912, -3.5178, 41.1432, 0.55", "-52.9743, -4.055, 41.4044, 0.55", "-55.2436, -4.84175, 41.9027, 0.28", "-56.1232, -5.06725, 42.1101, 0.83", "-57.5875, -5.30177, 42.4843, 0.55", "-58.9161, -5.41934, 42.8711, 0.55", "-60.3502, -5.40273, 43.3634, 0.83", "-65.9336, -4.08791, 46.5239, 0.83", "-72.0119, -3.14212, 48.7715, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-10.9026, -10.0312, 13.8451, 0.55", "-12.0507, -11.5498, 13.7706, 0.55", "-13.5031, -13.4414, 13.7538, 0.55", "-15.2302, -15.5943, 13.7927, 0.55", "-16.5886, -17.1222, 13.8549, 0.83", "-17.9089, -18.5089, 13.9413, 0.83", "-20.2245, -20.8329, 14.1153, 0.83", "-21.6089, -22.0523, 14.2635, 0.83", "-23.0934, -23.1209, 14.4857, 0.55", "-24.8537, -24.3298, 14.7907, 0.55", "-26.2576, -25.2189, 15.0651, 0.55", "-27.401, -25.8101, 15.3025, 0.83", "-28.9668, -26.4005, 15.6617, 0.55", "-31.2227, -27.0992, 16.1405, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.87185, -9.44293, -6.38487, 0.83", "-5.04492, -10.5247, -7.35625, 0.83", "-6.64184, -11.3196, -8.07008, 0.83", "-8.81141, -12.3996, -9.03989, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-2.87185, -9.44293, -6.38487, 1.66", "-2.89645, -11.8603, -6.18771, 1.66", "-2.92145, -14.3173, -5.98731, 1.66", "-2.94648, -16.777, -5.7867, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "24.8699, -27.2591, -4.0979, 0.55", "34.9581, -38.36, -4.0979, 0.55", "45.0463, -49.4608, -4.0979, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "14.409, 8.82767, -28.0918, 0.55", "17.3753, 10.0478, -28.0872, 0.55", "18.1182, 10.2873, -28.1469, 0.83", "19.6149, 10.6983, -28.3079, 0.28", "20.9812, 11.042, -28.438, 0.55", "25.1024, 12.1044, -28.6937, 0.28", "26.509, 12.4623, -28.694, 0.55", "29.0854, 12.9605, -28.6235, 0.28", "30.4932, 13.1252, -28.5521, 0.55", "33.375, 13.2563, -28.3458, 0.28", "35.0491, 13.2408, -28.1924, 0.55", "37.6154, 12.9933, -27.9284, 0.55", "40.3446, 12.6081, -27.632, 0.28", "43.9808, 12.0042, -27.1748, 0.28", "45.5169, 11.7004, -27.0315, 0.28", "46.2629, 11.5338, -26.9825, 0.55", "49.3239, 10.7758, -26.8896, 0.28", "49.8092, 10.656, -26.8886, 0.55", "52.5606, 10.0708, -26.7462, 0.28", "53.9504, 9.93604, -26.6693, 0.28", "55.1351, 9.87118, -26.5882, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "14.409, 8.82767, -28.0918, 0.55", "14.1235, 11.7994, -28.6595, 0.55", "14.0349, 13.7788, -29.3065, 0.28", "14.0188, 15.1287, -29.8061, 0.55", "13.9949, 17.2578, -30.6072, 0.28", "13.9482, 18.815, -31.2525, 0.55", "13.6938, 22.2693, -33.1438, 0.55", "13.5039, 23.9462, -34.3328, 0.55", "13.4641, 24.2505, -34.6148, 0.83", "13.2914, 25.4428, -35.8435, 0.55", "13.0532, 27.1938, -37.73, 1.11", "12.591, 30.574, -41.2997, 0.28", "12.454, 31.5528, -42.2891, 0.83", "11.9383, 35.7248, -46.4984, 0.28", "11.8061, 37.0575, -47.7759, 0.83", "11.6461, 40.2066, -50.602, 0.28", "11.6502, 40.5856, -50.8829, 0.55", "11.7634, 42.3735, -51.89, 0.28", "11.8213, 43.2911, -52.2975, 0.55", "11.883, 44.673, -52.7091, 0.28", "11.9321, 45.8499, -53.0162, 0.83", "12.0835, 50.1719, -53.9225, 0.28", "12.1202, 51.5143, -54.2209, 0.83", "12.166, 53.2871, -54.655, 0.28", "12.1954, 54.7526, -55.0544, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-0.217888, 26.8949, 13.0786, 0.55", "1.28558, 27.3704, 13.2396, 0.55", "2.63936, 27.7105, 13.3331, 0.83", "4.53336, 28.2438, 13.4967, 0.55", "6.31592, 28.8692, 13.6596, 0.55", "8.52258, 29.7156, 13.9154, 0.55", "10.6335, 30.6256, 14.159, 0.55", "12.7942, 31.6669, 14.4023, 0.55", "14.6017, 32.5916, 14.6155, 0.55", "16.5838, 33.6342, 14.8309, 0.83", "18.9279, 35.0038, 15.0303, 0.55", "20.9043, 36.3063, 15.2253, 0.55", "21.5755, 36.7941, 15.3152, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-0.217888, 26.8949, 13.0786, 0.55", "-0.232393, 29.0628, 13.0558, 0.55", "-0.29808, 30.6028, 13.045, 0.55", "-0.488549, 32.8981, 13.0481, 0.55", "-0.568268, 34.4284, 13.0497, 0.83", "-0.640945, 35.7169, 13.066, 0.83", "-0.76048, 38.5112, 12.9045, 0.55", "-0.795587, 39.3057, 12.8119, 0.83", "-0.866289, 41.378, 12.4864, 0.55", "-0.907981, 44.511, 11.9222, 0.55", "-0.895999, 46.2316, 11.5887, 0.83", "-0.841469, 50.0073, 10.8514, 0.55", "-0.834826, 51.5066, 10.6025, 0.55", "-0.843629, 52.3541, 10.4976, 0.83", "-0.921008, 53.6333, 10.4032, 0.55", "-1.06808, 54.6663, 10.4109, 0.55", "-1.3062, 56.2084, 10.5506, 0.83", "-2.03632, 59.4867, 11.1083, 0.28", "-2.25622, 60.2777, 11.2344, 0.83", "-2.63168, 61.3462, 11.3516, 0.55", "-3.07095, 62.3455, 11.4175, 0.83", "-4.18287, 64.6608, 11.5092, 0.55", "-5.05489, 66.2917, 11.4591, 0.55", "-5.71132, 67.3812, 11.3457, 0.83", "-6.7447, 69.0099, 11.0186, 0.55", "-7.33006, 69.8853, 10.7733, 0.55", "-8.21597, 71.0956, 10.2833, 0.83", "-9.24088, 72.3555, 9.66347, 0.28", "-9.5641, 72.7735, 9.45026, 0.55", "-10.7256, 74.2173, 8.78447, 0.28", "-11.2876, 74.9169, 8.54493, 0.55", "-12.5097, 76.3732, 8.15912, 0.28", "-13.3727, 77.3525, 7.95739, 0.55", "-14.9807, 79.1677, 7.82211, 0.28", "-16.2807, 80.5996, 7.9168, 0.83", "-17.6148, 82.0331, 8.24775, 0.28", "-18.1196, 82.5979, 8.56047, 0.55", "-19.0609, 83.6867, 9.49393, 0.28", "-19.8035, 84.6781, 10.4887, 0.55", "-20.7774, 86.1875, 12.1661, 0.28", "-21.0645, 86.6706, 12.7445, 0.55", "-22.778, 89.6801, 16.6912, 0.28", "-22.8505, 89.8195, 16.8821, 0.55", "-23.5559, 91.3737, 19.1409, 0.28", "-23.7676, 91.9716, 19.924, 0.55", "-26.4101, 100.63, 21.2528, 0.55", "-29.8537, 109.098, 21.6449, 0.55", "-33.9151, 117.295, 21.7732, 0.55", "-37.1865, 125.739, 20.464, 0.55", "-39.1079, 134.678, 20.8141, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "17.133, -3.88283, -3.45293, 0.55", "21.1963, -6.38635, -2.38813, 0.55", "24.1005, -8.17577, -1.62706, 0.55", "26.4179, -9.6036, -1.01978, 0.55", "27.6357, -10.354, -0.700644, 0.55", "31.1803, -12.5379, 0.228234, 0.83" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "17.133, -3.88283, -3.45293, 0.55", "19.0116, -4.67325, -3.61137, 0.55", "20.782, -5.33756, -3.71831, 0.55", "22.013, -5.81102, -3.76173, 0.83", "24.4917, -6.77411, -3.79742, 0.55", "26.2457, -7.4867, -3.81786, 0.83", "28.3804, -8.28908, -3.81628, 0.28", "29.5965, -8.65928, -3.89146, 0.55", "32.4941, -9.4029, -4.22907, 0.28", "34.6823, -9.72343, -4.80381, 0.55", "36.5246, -9.86688, -5.50811, 0.55", "39.2173, -9.99598, -6.73371, 0.55", "43.4669, -10.0261, -8.86195, 0.28", "45.7358, -9.96288, -10.0231, 0.83", "51.5949, -9.47625, -12.9846, 0.55", "53.7768, -9.22001, -13.9864, 0.55", "56.2329, -8.86843, -14.9385, 0.83", "57.4837, -8.69808, -15.296, 0.83", "60.2629, -8.30678, -15.6195, 0.28", "62.3264, -7.94817, -15.7099, 0.83", "64.7079, -7.4903, -15.5468, 0.28", "66.0573, -7.12753, -15.5063, 0.55", "68.1464, -6.49723, -15.5648, 0.28", "69.4657, -6.07858, -15.7365, 0.83", "71.9823, -5.19804, -16.3251, 0.28", "72.7772, -4.90205, -16.6437, 0.55", "74.846, -4.08304, -17.6854, 0.28", "75.9724, -3.59826, -18.3443, 0.83", "78.6885, -2.34987, -20.0503, 0.28", "79.8152, -1.82977, -20.776, 0.83", "84.0441, 0.126823, -23.4698, 0.28", "84.385, 0.284154, -23.6933, 0.55", "88.9502, 2.44228, -26.7458, 0.28", "89.5252, 2.73598, -27.1513, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-31.2227, -27.0992, 16.1405, 0.55", "-35.7875, -27.1485, 17.6804, 0.55", "-38.7117, -27.1859, 18.6939, 0.55", "-40.0117, -27.2344, 19.1461, 0.55", "-44.7561, -27.3587, 20.7412, 0.55", "-46.4588, -27.447, 21.2774, 0.55", "-48.5373, -27.6116, 21.907, 0.83", "-51.9306, -28.0235, 22.8062, 0.55", "-53.2871, -28.2457, 23.1528, 0.55", "-55.81, -28.7342, 23.8031, 0.55", "-58.2463, -29.1908, 24.3745, 0.55", "-60.4668, -29.5076, 24.7967, 0.55", "-62.2733, -29.7429, 25.0638, 0.55", "-64.8899, -29.9627, 25.3831, 0.55", "-67.0107, -30.0744, 25.5852, 0.83", "-71.0089, -30.1757, 26.093, 0.55", "-74.1768, -30.1608, 26.5102, 0.55", "-76.1317, -30.0957, 26.7672, 0.55", "-78.9306, -29.9397, 27.0463, 0.55", "-82.8571, -29.6116, 27.3428, 0.83", "-86.5622, -29.1939, 27.532, 0.55", "-89.53, -28.8361, 27.6626, 0.55", "-93.5766, -28.2495, 27.7928, 0.55", "-96.9659, -27.5669, 27.8239, 0.55", "-98.9539, -27.049, 27.7988, 0.83", "-101.3, -26.2435, 27.7452, 0.55", "-102.591, -25.741, 27.6843, 0.55", "-104.62, -24.758, 27.7667, 0.83", "-106.39, -23.8683, 28.0037, 0.83", "-108.496, -22.7447, 28.4726, 0.28", "-109.284, -22.306, 28.6822, 0.28", "-110.859, -21.4392, 29.1768, 0.55", "-114.186, -19.4692, 30.3374, 0.28", "-115.469, -18.7027, 30.8651, 0.83", "-126.567, -18.9791, 31.9004, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-31.2227, -27.0992, 16.1405, 0.83", "-33.2492, -29.8098, 16.8221, 0.83", "-34.5908, -31.4888, 17.2202, 0.83", "-36.8282, -34.4029, 17.7558, 0.55", "-37.5845, -35.5022, 17.8958, 0.55", "-37.8469, -35.9218, 17.9355, 0.83", "-38.9449, -37.7427, 18.0814, 0.55", "-40.0402, -39.7251, 18.1203, 0.55", "-41.28, -42.1021, 18.1171, 0.55", "-42.238, -44.1846, 18.0285, 0.55", "-43.1211, -46.225, 17.8856, 0.83", "-43.8797, -48.0165, 17.6137, 0.83", "-44.3429, -49.006, 17.3785, 0.83", "-45.2101, -50.6738, 16.8702, 0.83", "-45.6556, -51.376, 16.6073, 0.55", "-46.2815, -52.2021, 16.2618, 0.83", "-48.4568, -54.9599, 14.9485, 0.55", "-49.9785, -56.8593, 14.0039, 0.55", "-50.9184, -58.0517, 13.4029, 0.83", "-51.9025, -59.3117, 12.8037, 0.83", "-53.8399, -61.8592, 11.736, 0.83", "-55.5247, -64.1205, 10.9001, 0.55", "-56.2075, -65.0805, 10.617, 1.11", "-57.3114, -66.7925, 10.1697, 0.83", "-59.1433, -69.6891, 9.53461, 0.55", "-60.1857, -71.3834, 9.27258, 0.55", "-60.5754, -72.0262, 9.23008, 0.55", "-61.2903, -73.1488, 9.27842, 0.83", "-61.8728, -74.0643, 9.4895, 0.83", "-63.0703, -75.8946, 10.2565, 0.55", "-63.5942, -76.7296, 10.7257, 0.83", "-64.2385, -77.7801, 11.3938, 0.55", "-64.514, -78.2847, 11.7115, 0.83", "-66.2667, -81.7402, 13.7867, 0.55", "-66.9864, -83.2153, 14.5894, 0.28", "-67.2864, -83.8379, 14.8511, 0.55", "-67.9772, -85.1942, 15.2225, 0.28", "-68.8677, -86.8772, 15.4654, 0.28", "-69.7057, -88.3527, 15.4509, 0.83", "-71.3058, -90.8407, 15.0045, 0.28", "-72.8525, -93.1673, 14.4681, 0.55", "-74.0914, -95.0491, 13.9771, 0.28", "-74.2712, -95.3425, 13.9102, 0.55", "-75.7559, -97.9836, 13.4583, 0.28", "-77.1481, -100.625, 13.0423, 0.55", "-77.9703, -102.346, 12.8132, 0.28", "-78.6345, -103.909, 12.6916, 0.55", "-80.2223, -108.155, 12.3303, 0.28", "-81.2298, -111.013, 12.1102, 0.83", "-87.9696, -117.943, 12.4539, 0.83", "-94.922, -124.669, 12.4487, 0.83", "-102.887, -129.99, 11.0998, 0.83", "-111.748, -133.82, 11.7159, 0.83", "-120.894, -136.955, 12.0115, 0.83", "-130.176, -139.626, 12.5409, 0.83", "-139.417, -141.02, 15.0366, 0.83", "-148.547, -141.362, 18.2151, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-8.81141, -12.3996, -9.03989, 1.11", "-8.98542, -15.2115, -10.5151, 1.11", "-9.21805, -18.9703, -12.487, 1.11", "-9.31259, -20.498, -13.2884, 1.38" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.81141, -12.3996, -9.03989, 0.55", "-10.1941, -12.1082, -9.78991, 0.55", "-11.0789, -11.9354, -10.2166, 0.55", "-12.2642, -11.7277, -10.7513, 0.83", "-14.1566, -11.4174, -11.5564, 0.55", "-16.3068, -11.117, -12.4272, 0.83", "-17.1263, -10.9984, -12.7237, 0.83", "-18.8268, -10.7745, -13.3599, 0.55", "-19.5269, -10.6731, -13.6335, 0.83", "-20.6374, -10.4629, -14.0805, 0.28", "-21.8511, -10.2215, -14.5435, 1.11", "-23.8362, -9.86328, -15.3637, 0.55", "-25.3579, -9.57107, -16.1853, 0.83", "-26.668, -9.27928, -17.0431, 0.28", "-27.2759, -9.16999, -17.4315, 0.55", "-28.3784, -9.03773, -18.1548, 0.28", "-29.708, -8.9885, -19.0308, 0.55", "-32.2839, -9.41438, -20.7936, 0.28", "-32.4832, -9.48476, -20.9203, 0.55", "-34.742, -10.7006, -22.3975, 0.55", "-35.6399, -11.2747, -22.9835, 0.28", "-36.3571, -11.7838, -23.4533, 0.83", "-38.5968, -13.4863, -24.8791, 0.28", "-39.526, -14.1983, -25.4632, 0.83", "-40.8912, -15.1702, -26.4497, 0.55", "-41.6514, -15.6861, -27.2791, 0.55", "-42.4874, -16.1578, -28.2345, 0.83", "-43.389, -16.5768, -29.3196, 0.28", "-43.9763, -16.7713, -30.0735, 0.55", "-45.0285, -17.073, -31.5877, 0.55", "-47.6281, -17.8484, -35.9536, 0.28", "-48.4815, -18.1762, -37.6842, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.94648, -16.777, -5.7867, 1.11", "-2.93315, -19.9101, -4.93391, 1.11", "-2.92474, -21.8867, -4.39591, 1.11", "-2.91102, -25.1129, -3.51777, 1.11", "-2.88847, -30.4121, -2.07537, 1.11", "-2.87129, -34.4491, -0.976527, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.94648, -16.777, -5.7867, 0.83", "-1.8696, -18.5909, -6.94816, 0.83", "-0.91402, -20.2005, -7.9788, 0.83", "-0.297234, -21.2394, -8.64404, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "21.5755, 36.7941, 15.3152, 0.55", "21.6392, 39.3132, 14.9808, 0.55", "21.6253, 41.765, 14.6329, 0.55", "21.6293, 42.8845, 14.4646, 0.83", "21.6096, 45.9199, 14.0544, 0.55", "21.5946, 48.5559, 13.6936, 0.83", "21.6582, 51.6432, 13.4134, 0.55", "21.6797, 53.7678, 13.2858, 0.55", "21.6822, 55.2617, 13.2115, 0.55", "21.7457, 57.3668, 13.1466, 0.55", "21.8748, 59.8898, 13.0873, 0.55", "22.1049, 63.9646, 12.8546, 0.55", "22.207, 65.9805, 12.7601, 0.55", "22.3624, 67.4274, 12.4379, 0.83", "22.7177, 70.0932, 11.307, 0.55", "22.9965, 71.6387, 10.4604, 0.55", "23.3328, 73.2382, 9.44964, 0.55", "23.6997, 74.9109, 8.27618, 0.55", "25.4449, 82.3056, 3.08758, 0.83", "25.9772, 84.6761, 1.45348, 0.55", "26.4792, 87.0407, -0.173085, 0.55", "27.0617, 89.3769, -1.61318, 0.55", "27.5342, 91.1317, -2.55689, 0.55", "27.7505, 91.9313, -2.87003, 0.83", "28.1749, 93.5787, -3.13667, 0.28", "28.4516, 94.4321, -3.28448, 0.55", "29.6624, 97.9401, -4.01342, 0.28", "29.7634, 98.225, -4.0662, 0.55", "30.7942, 100.997, -4.61685, 0.28", "31.2461, 102.173, -4.84239, 0.55", "31.6779, 103.309, -5.05531, 0.28", "31.845, 103.839, -5.15065, 0.55", "32.2972, 106.038, -5.61968, 0.28", "32.5259, 107.436, -5.95012, 0.55", "35.7506, 116.515, -8.98714, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "21.5755, 36.7941, 15.3152, 0.55", "25.0419, 38.1483, 15.8569, 0.55", "29.0403, 39.8322, 16.587, 0.55", "31.6473, 41.023, 17.0595, 0.55", "34.1664, 42.3463, 17.5186, 0.55", "36.2907, 43.5835, 17.8807, 0.55", "39.5014, 45.5219, 18.3895, 0.55", "41.3852, 46.8314, 18.6679, 0.55", "43.1652, 48.1521, 18.9333, 0.55", "45.2901, 49.635, 19.2465, 0.55", "48.0313, 51.403, 19.6366, 0.55", "49.2275, 52.1424, 19.7875, 0.55", "51.0266, 53.0973, 19.9482, 0.55", "53.1085, 54.1734, 20.1221, 0.55", "54.6974, 54.8297, 20.2914, 0.55", "57.0801, 55.4834, 20.5601, 0.55", "67.9165, 61.8422, 21.4412, 0.55", "78.8108, 67.9725, 22.982, 0.55", "90.8434, 71.6475, 23.5729, 0.55", "103.338, 73.2287, 23.6988, 0.55", "115.201, 77.2424, 22.3557, 0.55", "126.917, 81.1941, 19.9528, 0.55", "138.806, 85.3515, 19.9138, 0.55", "150.691, 89.3583, 21.06, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "31.1803, -12.5379, 0.228234, 0.55", "32.8148, -13.8734, 0.202209, 0.55", "34.2997, -15.0603, 0.165984, 0.55", "35.6591, -16.1228, 0.0868177, 0.55", "37.663, -17.6552, -0.0780033, 0.83", "39.7768, -19.2421, -0.276228, 0.55", "41.4538, -20.5449, -0.436461, 0.55", "42.2667, -21.1895, -0.525552, 0.83", "43.5977, -22.2678, -0.696865, 0.55", "45.4939, -23.7764, -0.965947, 0.55", "47.4152, -25.2276, -1.38154, 0.55", "49.0847, -26.4469, -1.84414, 0.55", "50.237, -27.2464, -2.19215, 1.11", "51.8551, -28.2682, -2.67296, 0.55", "52.7188, -28.7898, -2.92736, 0.55", "55.1992, -30.1955, -3.74773, 0.55", "56.9547, -31.1526, -4.36512, 0.83", "59.3287, -32.2526, -5.09475, 0.83", "60.8399, -32.9256, -5.44534, 0.55", "61.7266, -33.313, -5.58962, 0.55", "63.3893, -34.0013, -5.91123, 0.55", "64.5072, -34.4356, -6.1211, 0.83", "66.753, -35.2288, -6.79737, 0.55", "68.3509, -35.8018, -7.44228, 0.55", "69.8721, -36.3351, -8.15419, 0.83", "73.0147, -37.4005, -9.75922, 0.28", "74.0104, -37.7791, -10.3168, 0.55", "75.5755, -38.502, -11.3752, 0.28", "76.8597, -39.206, -12.3636, 0.28", "78.3611, -40.0754, -13.5581, 0.83", "79.5264, -40.825, -14.4782, 0.55", "80.4041, -41.4265, -15.1214, 0.55", "82.3912, -42.7851, -16.6076, 0.55", "83.2503, -43.3807, -17.2356, 0.83", "84.8477, -44.5908, -18.5195, 0.55", "85.4238, -45.041, -18.9789, 0.28", "85.6037, -45.1654, -19.1121, 0.55", "86.1546, -45.4425, -19.4442, 0.28", "86.6192, -45.6369, -19.6592, 0.55", "87.6387, -46.0054, -20.0847, 0.28", "88.3412, -46.21, -20.3309, 0.83", "90.4954, -46.8115, -20.9294, 0.28", "92.3421, -47.351, -21.3631, 0.83", "93.1458, -47.662, -21.499, 0.28", "93.7606, -47.9863, -21.5626, 0.28", "95.0152, -48.8224, -21.5382, 0.55", "96.5919, -50.0856, -21.3506, 0.28", "97.0969, -50.5565, -21.2376, 0.55", "98.9515, -52.4323, -20.754, 0.28", "100.195, -53.6361, -20.3953, 0.28", "101.223, -54.605, -20.0804, 0.28", "101.501, -54.8363, -19.99, 0.55", "102.795, -55.7406, -19.4717, 0.28", "102.993, -55.841, -19.3872, 1.11", "104.993, -56.599, -18.5283, 0.28", "105.415, -56.7427, -18.3372, 0.55", "107.994, -57.618, -17.1878, 0.28", "110.066, -58.3283, -16.2057, 0.83", "112.623, -59.1778, -14.8884, 0.28", "113.079, -59.3247, -14.6477, 0.28", "113.199, -59.3596, -14.5814, 0.55", "114.607, -59.7521, -13.7863, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "31.1803, -12.5379, 0.228234, 0.55", "35.4659, -10.6218, -0.0718003, 0.55", "38.1227, -9.66055, 0.355513, 0.55", "39.4859, -9.36733, 0.920644, 0.55", "40.4037, -9.24111, 1.36708, 0.55", "41.6361, -9.14611, 2.04764, 0.55", "43.0491, -9.03818, 2.85751, 0.55", "45.0575, -8.93862, 4.23163, 0.83", "47.3457, -8.84805, 5.75646, 0.55", "48.4676, -8.83851, 6.53921, 0.55", "50.1104, -8.83038, 7.64794, 0.55", "51.046, -8.84809, 8.24531, 0.28", "52.5604, -8.82009, 9.12135, 0.55", "53.9965, -8.68023, 9.77751, 0.28", "54.8482, -8.52131, 10.0889, 0.55", "55.7853, -8.33317, 10.431, 0.28", "56.2719, -8.23073, 10.583, 0.28", "56.6084, -8.14813, 10.7255, 0.55", "57.6524, -7.91816, 11.2768, 0.28", "57.9439, -7.84376, 11.4363, 0.55", "58.7999, -7.57868, 11.9712, 0.28", "59.1248, -7.47611, 12.2026, 0.83", "60.6868, -6.93875, 13.3384, 0.55", "62.1269, -6.49539, 14.4269, 0.55", "67.2461, -6.04509, 17.8698, 0.55", "72.4733, -5.45675, 21.1246, 0.55", "77.6085, -3.82204, 24.1609, 0.55", "82.6238, -1.38708, 26.8407, 0.55", "87.8147, 1.68979, 28.2007, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-9.31259, -20.498, -13.2884, 0.55", "-10.7204, -21.2194, -13.7606, 0.55", "-12.6785, -22.1311, -14.3546, 0.55", "-14.5415, -22.8866, -14.9242, 0.55", "-15.9957, -23.4598, -15.347, 0.83", "-18.7706, -24.6111, -16.1759, 0.83", "-19.9033, -25.0865, -16.5248, 0.83", "-22.216, -26.0869, -17.2574, 1.94", "-24.7253, -27.2148, -18.0529, 0.55", "-26.9502, -28.2305, -18.6739, 0.83", "-28.6889, -29.1175, -19.1071, 0.55", "-29.559, -29.598, -19.3034, 0.83", "-30.8699, -30.3666, -19.5884, 0.83", "-33.0394, -31.7604, -20.0559, 0.83", "-35.7453, -33.676, -20.5185, 0.83", "-36.7425, -34.3769, -20.6575, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-9.31259, -20.498, -13.2884, 0.55", "-9.05684, -21.114, -16.2638, 0.55", "-8.73206, -21.9449, -19.6393, 0.55", "-8.15697, -23.5632, -24.8799, 0.83", "-7.82137, -24.8623, -28.4993, 1.11", "-7.45621, -27.0712, -34.4086, 0.55", "-7.44456, -28.0295, -36.8665, 0.55", "-7.63296, -30.4181, -42.2639, 0.55", "-7.93524, -31.9713, -45.448, 1.11", "-8.28353, -33.0764, -47.6528, 0.55", "-8.70462, -33.9122, -49.3454, 0.55", "-9.84391, -35.3308, -52.2677, 0.55", "-11.0535, -36.6571, -55.1874, 1.11", "-12.5915, -37.9727, -58.6215, 0.55", "-13.0317, -38.2901, -59.6335, 0.83", "-14.2752, -39.2074, -62.8567, 0.55", "-14.9133, -39.7057, -64.6232, 0.55", "-15.8682, -40.348, -67.3296, 0.83", "-17.3117, -41.0248, -70.7989, 0.55", "-18.0454, -41.313, -72.3025, 0.83", "-18.9659, -41.7542, -74.1496, 0.28", "-19.7311, -42.0771, -75.5273, 0.55", "-20.6691, -42.4174, -77.0973, 0.28", "-21.7557, -42.8863, -79.1861, 0.55", "-22.1962, -43.2316, -80.2945, 0.55", "-23.1197, -44.3455, -83.3132, 0.28", "-23.5837, -45.355, -85.6483, 0.55", "-23.87, -46.5273, -88.0443, 1.66", "-23.9874, -50.1263, -94.1526, 0.83", "-23.8267, -52.0072, -97.0455, 0.55", "-23.6641, -53.1501, -98.6835, 0.55", "-23.2224, -55.5406, -101.743, 0.28", "-23.1349, -55.9492, -102.181, 0.83", "-22.2123, -60.3112, -106.067, 0.28", "-22.1752, -60.5211, -106.234, 0.55", "-22.0082, -61.5326, -107.164, 0.28", "-21.9062, -62.1054, -107.758, 0.55", "-21.8532, -63.8689, -110.334, 0.28", "-22.019, -65.1461, -112.999, 0.83", "-22.3073, -65.784, -115.178, 0.83", "-22.7499, -66.4341, -118.08, 0.28", "-22.9544, -66.5668, -119.204, 0.55", "-23.9901, -66.6911, -124.588, 0.28", "-24.1916, -66.5841, -125.426, 0.83", "-25.2037, -65.4695, -129.279, 0.28", "-25.3759, -65.1657, -130.033, 0.55", "-25.9163, -63.7927, -132.859, 0.28", "-26.4243, -61.9889, -135.6, 0.55", "-26.8553, -59.6944, -138.203, 0.28", "-27.1272, -58.0518, -139.912, 0.28", "-27.6081, -54.8685, -142.787, 0.28", "-27.6645, -54.4686, -143.162, 0.83", "-28.1155, -51.6986, -146.048, 0.28", "-28.3604, -50.7474, -146.913, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-48.4815, -18.1762, -37.6842, 0.28", "-48.4002, -17.9931, -39.9937, 0.28", "-48.3611, -17.9049, -41.1058, 0.55", "-48.2077, -17.5593, -45.4645, 0.28", "-48.0436, -17.1893, -50.1306, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-48.4815, -18.1762, -37.6842, 0.28", "-48.7294, -19.5765, -38.6013, 0.28", "-48.8065, -20.0122, -38.8867, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.87129, -34.4491, -0.976527, 0.83", "-3.78848, -36.9907, -1.27048, 0.83", "-4.48126, -38.9474, -1.53502, 0.83", "-5.82511, -42.8609, -2.06064, 0.83", "-6.51348, -45.0206, -2.3467, 0.83", "-7.3141, -47.708, -2.66038, 0.83", "-8.11732, -50.597, -2.9585, 0.83", "-8.67702, -52.7402, -3.15144, 0.83", "-9.32669, -55.3918, -3.26967, 1.38", "-10.0162, -58.0285, -3.15473, 0.83", "-10.9494, -61.5822, -2.84801, 0.83", "-11.1641, -62.4536, -2.75141, 0.83", "-11.9119, -65.5643, -2.38609, 0.83", "-12.4236, -67.4381, -2.02295, 0.83", "-13.6421, -71.3654, -1.01816, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.87129, -34.4491, -0.976527, 0.83", "-1.47924, -36.9084, -0.595071, 0.83", "-0.305816, -39.6616, -0.136191, 0.55", "0.197168, -41.2216, 0.14769, 0.55", "0.767813, -44.0804, 0.317892, 0.55", "1.62508, -48.375, 0.573578, 0.83", "2.21588, -51.3347, 0.749792, 0.55", "2.59649, -54.4597, 0.871765, 0.55", "2.7912, -57.5114, 0.918862, 0.55", "2.82408, -65.4431, 0.818374, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.297234, -21.2394, -8.64404, 0.83", "-0.765209, -19.8186, -10.5179, 0.83", "-0.902439, -18.4468, -13.0867, 0.83", "-0.459377, -17.3177, -17.915, 0.55", "-0.200164, -17.0087, -20.2138, 0.55", "-0.00538591, -16.8367, -21.7625, 0.55", "0.369327, -16.5801, -24.6552, 0.55", "0.846855, -16.391, -27.9767, 0.55", "2.11237, -16.0659, -35.3545, 0.55", "4.20298, -15.6593, -45.5569, 0.83", "5.73484, -15.4037, -52.6071, 0.28", "6.73516, -15.2507, -57.1152, 0.55", "7.47831, -15.1094, -60.2941, 0.28", "8.07647, -14.9631, -62.6548, 1.11", "9.81488, -14.4396, -68.3314, 0.28", "9.95548, -14.4067, -68.7288, 0.55", "10.6226, -14.2675, -70.5136, 0.28", "10.8869, -14.1954, -71.2768, 0.55", "11.2852, -14.1068, -72.4728, 0.28", "11.5113, -14.0753, -73.1312, 0.83", "15.1006, -13.5701, -83.2576, 0.28", "15.7654, -13.4933, -85.134, 0.55", "17.0573, -13.3341, -88.6375, 0.28", "17.9377, -13.2516, -90.8673, 0.55", "18.7015, -13.2194, -92.6499, 0.55", "20.6061, -13.1853, -96.5715, 0.28", "21.1647, -13.2262, -97.6213, 0.55", "22.3229, -13.4847, -100.209, 0.28", "22.6779, -13.6661, -101.206, 0.55", "23.4423, -14.4311, -104.467, 0.28", "23.6354, -14.8256, -106.21, 1.11", "24.1237, -16.4108, -113.06, 0.28", "24.2263, -16.7773, -115.004, 1.11", "24.3827, -17.4436, -119.141, 0.28", "24.5035, -17.879, -122.195, 1.38", "25.0442, -19.7352, -135.88, 0.28", "25.1115, -19.9369, -137.576, 1.11", "25.6146, -20.8138, -146.839, 0.28", "25.7837, -20.9923, -149.168, 0.55", "26.2016, -21.1688, -153.195, 0.28", "26.4214, -21.2134, -154.755, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.297234, -21.2394, -8.64404, 0.55", "0.515935, -22.3473, -9.51987, 0.55", "1.96168, -24.3171, -11.077, 1.11", "3.94454, -27.0187, -13.2127, 0.83", "5.98079, -29.793, -15.4059, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-36.7425, -34.3769, -20.6575, 0.55", "-39.5731, -33.5014, -23.5228, 0.55", "-42.6449, -32.7002, -26.748, 0.55", "-45.1677, -32.1521, -29.4074, 0.55", "-47.0258, -31.8718, -31.3815, 0.83", "-48.6678, -31.7108, -33.1427, 0.28", "-49.5449, -31.6549, -34.0756, 0.83", "-51.4688, -31.915, -36.3525, 0.55", "-52.1294, -32.1082, -37.1907, 0.55", "-53.1042, -32.5667, -38.8219, 0.55", "-53.8426, -33.0406, -40.4968, 0.55", "-54.5642, -33.5924, -42.4264, 0.83", "-55.6463, -34.5789, -46.0334, 0.55", "-56.0823, -34.9936, -47.7296, 0.55", "-57.3668, -36.09, -52.9807, 0.55", "-57.73, -36.3276, -54.4471, 0.55", "-58.1317, -36.5022, -55.9371, 0.55", "-59.3569, -36.7759, -60.1512, 0.28", "-59.7988, -36.7881, -61.4394, 0.55", "-60.3265, -36.7789, -62.8547, 0.28", "-61.0083, -36.6878, -64.2377, 1.11", "-63.0495, -36.519, -68.3435, 0.55", "-63.8465, -36.3888, -69.977, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-36.7425, -34.3769, -20.6575, 0.55", "-39.0969, -36.6771, -20.9052, 0.55", "-40.6837, -38.1256, -21.021, 0.55", "-42.8904, -40.038, -21.217, 0.83", "-45.207, -41.8196, -21.4632, 0.55", "-48.4287, -44.1652, -21.8647, 0.83", "-50.8358, -45.8271, -22.1794, 0.28", "-51.9241, -46.4946, -22.3267, 0.55", "-53.5442, -47.4028, -22.6344, 0.28", "-56.006, -48.7505, -23.2171, 0.83", "-58.4043, -50.0337, -24.0791, 0.28", "-59.752, -50.7796, -24.6327, 0.55", "-62.0361, -52.1395, -25.6674, 0.55", "-64.5059, -53.8208, -26.8667, 0.55", "-67.2061, -55.8495, -28.0549, 0.28", "-69.1504, -57.4613, -28.8499, 0.28", "-70.5583, -58.5644, -29.2887, 0.55", "-71.8087, -59.5189, -29.548, 0.55", "-74.2538, -61.2285, -29.4777, 0.28", "-76.6936, -62.7724, -28.9294, 0.28", "-77.344, -63.2196, -28.7543, 0.55", "-79.3301, -64.7554, -28.122, 0.28", "-80.0772, -65.4234, -27.923, 0.55", "-82.4537, -67.91, -27.136, 0.28", "-83.3637, -69.0029, -26.7947, 0.55", "-85.3226, -71.7858, -26.0752, 0.28", "-86.4175, -73.4588, -25.6393, 0.55", "-87.8546, -75.5711, -25.2141, 0.55", "-90.0734, -78.8478, -24.5714, 0.28", "-90.4715, -79.4299, -24.467, 0.55", "-92.6537, -82.4233, -23.8177, 0.28", "-94.9732, -85.3324, -23.0251, 0.28", "-99.0834, -90.2815, -21.875, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-13.6421, -71.3654, -1.01816, 0.55", "-14.2037, -73.219, -1.23641, 0.55", "-14.7133, -74.9005, -1.43332, 0.55", "-15.6156, -77.2689, -1.83129, 0.55", "-16.5267, -79.4693, -2.34117, 0.83", "-17.2485, -81.1496, -2.77487, 0.83", "-17.8203, -82.3354, -3.10525, 0.83", "-18.3782, -83.3001, -3.47417, 0.55", "-19.6239, -85.171, -4.26729, 0.55", "-20.6078, -86.6426, -4.94279, 0.55", "-21.0244, -87.1893, -5.24031, 0.55", "-22.0, -88.3723, -5.93078, 0.55", "-23.0415, -89.6377, -6.63986, 0.55", "-23.6235, -90.3478, -7.00409, 0.83", "-24.1621, -91.0272, -7.27906, 1.11", "-25.0132, -92.0586, -7.62118, 0.83", "-25.2485, -92.329, -7.70044, 0.83", "-25.8799, -93.0218, -7.86248, 0.55", "-27.2587, -94.3281, -8.01941, 0.83", "-28.1906, -95.1136, -8.08409, 0.83", "-28.7861, -95.5723, -8.13018, 0.55", "-30.2406, -96.6227, -8.24391, 0.83", "-31.2942, -97.4066, -8.33222, 0.83", "-32.4928, -98.3859, -8.51421, 0.55", "-33.6501, -99.4159, -8.77446, 0.83", "-34.9636, -100.569, -9.24067, 0.55", "-35.7139, -101.257, -9.54612, 0.55", "-36.5866, -102.168, -9.9711, 1.11", "-38.0846, -103.886, -10.7577, 0.55", "-38.7213, -104.645, -11.1379, 0.55", "-40.0066, -106.217, -11.9213, 0.55", "-41.2463, -107.8, -12.6403, 1.11", "-42.3614, -109.252, -13.2778, 0.55", "-43.6359, -110.833, -13.9034, 1.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-13.6421, -71.3654, -1.01816, 0.55", "-13.7606, -73.1831, -0.195096, 0.55", "-13.8219, -74.5681, 0.623065, 0.55", "-14.0279, -77.3345, 2.34666, 0.55", "-14.1914, -79.4992, 3.65088, 0.55", "-14.3714, -81.7033, 5.00646, 0.55", "-14.5395, -83.5572, 6.12108, 0.83", "-14.8455, -86.7693, 7.98414, 0.83", "-15.0055, -88.361, 8.88729, 0.83", "-15.2469, -90.4633, 9.92362, 0.83", "-15.3954, -91.8837, 10.5224, 0.83", "-15.6424, -93.5526, 11.1652, 0.83", "-16.151, -96.8342, 12.4275, 0.83", "-16.5425, -99.7317, 13.5126, 0.83", "-16.9236, -102.79, 14.7407, 0.83", "-17.3863, -105.737, 15.9348, 0.83", "-17.8942, -108.669, 17.0673, 0.55", "-18.3097, -110.989, 17.9696, 0.83", "-18.7175, -112.972, 18.708, 0.55", "-18.8743, -113.812, 19.0245, 0.55", "-19.3697, -116.488, 20.0584, 0.55", "-19.7361, -118.367, 20.7476, 0.55", "-20.0135, -119.749, 21.2301, 0.55", "-20.8786, -123.859, 22.6826, 0.55", "-21.3314, -126.643, 23.7866, 0.55", "-21.5628, -128.732, 24.7273, 0.55", "-21.6756, -130.336, 25.5306, 0.55", "-21.8353, -132.402, 26.6604, 0.55", "-21.9302, -133.62, 27.3541, 0.55", "-22.0483, -136.827, 29.0756, 0.55", "-22.1256, -137.918, 29.6334, 0.55", "-22.2164, -138.949, 30.1646, 0.83", "-22.3089, -140.624, 30.978, 0.55", "-22.3037, -141.585, 31.4168, 0.55", "-22.3157, -143.789, 32.1981, 0.55", "-22.3404, -146.559, 32.8604, 0.55", "-22.2679, -148.632, 33.2238, 0.55", "-22.1633, -150.822, 33.5339, 0.55", "-22.0839, -151.881, 33.6437, 0.55", "-21.8417, -154.407, 33.8453, 0.55", "-21.6489, -157.047, 34.1268, 0.55", "-21.6474, -158.819, 34.349, 0.55", "-21.8421, -160.272, 34.6112, 0.55", "-22.1362, -161.492, 34.859, 0.55", "-22.6402, -163.156, 35.3056, 0.55", "-23.7125, -166.15, 36.2029, 0.83", "-25.0063, -168.894, 37.0046, 0.55", "-26.4122, -171.152, 37.7394, 0.55", "-27.2636, -172.42, 38.1529, 0.83", "-28.9671, -174.706, 38.9114, 0.55", "-30.4074, -176.454, 39.4925, 0.55", "-32.34, -178.669, 40.0965, 0.55", "-34.9254, -181.359, 40.8359, 0.83", "-35.5, -189.55, 44.9859, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.82408, -65.4431, 0.818374, 0.55", "1.663, -67.416, 1.62862, 0.55", "0.539258, -69.1656, 2.35293, 0.55", "-1.09435, -71.4719, 3.38931, 0.83", "-2.15509, -72.8782, 4.07163, 0.55", "-3.28296, -74.3703, 4.81391, 0.83", "-4.84893, -76.4359, 5.92018, 0.83", "-5.89313, -77.8524, 6.80471, 0.55", "-7.15844, -79.5863, 7.9977, 0.83", "-8.33269, -81.2366, 9.13351, 0.55", "-8.83945, -82.0193, 9.64845, 0.55", "-9.90427, -83.6579, 10.7961, 0.83", "-10.9546, -85.3523, 11.9704, 0.83", "-12.0103, -87.172, 13.313, 0.55", "-12.2831, -87.6592, 13.6624, 0.55", "-13.1281, -89.1904, 14.7029, 0.83", "-14.6526, -91.9799, 16.4638, 0.55", "-15.1599, -92.9195, 16.96, 0.55", "-15.9596, -94.42, 17.6223, 0.55", "-16.3871, -95.2989, 17.9804, 0.55", "-16.9952, -96.4846, 18.5584, 0.55", "-17.4242, -97.3283, 19.0233, 0.55", "-18.0257, -98.515, 19.9392, 0.55", "-18.7315, -99.8051, 21.1908, 0.28", "-19.5893, -101.305, 22.8092, 0.83", "-20.6246, -102.985, 24.8797, 0.28", "-20.9177, -103.441, 25.4975, 0.55", "-22.6164, -106.087, 29.4045, 0.28", "-22.8132, -106.422, 29.8902, 0.83", "-23.5339, -107.677, 31.6327, 0.28", "-23.8906, -108.381, 32.4564, 0.55", "-24.3149, -109.296, 33.3541, 0.55", "-24.8017, -110.577, 34.3813, 0.55", "-25.2778, -112.536, 35.536, 0.28", "-25.3992, -113.058, 35.8379, 0.55", "-25.7858, -114.967, 36.8414, 0.28", "-25.8881, -115.604, 37.1141, 0.55", "-26.0811, -117.225, 37.6678, 0.28", "-26.1224, -117.877, 37.8147, 0.83", "-29.9706, -123.123, 41.5126, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.82408, -65.4431, 0.818374, 0.55", "3.10092, -66.4907, 1.31524, 0.55", "3.61707, -68.2054, 2.21382, 0.28", "4.1557, -70.1298, 3.14385, 0.83", "4.55942, -71.706, 3.92249, 0.28", "4.77018, -72.5725, 4.32065, 0.55", "5.01748, -73.6507, 4.79136, 0.28", "5.15251, -74.4413, 5.09782, 0.55", "5.38613, -76.1372, 5.66028, 0.28", "5.4894, -77.1312, 5.85809, 0.55", "5.67251, -78.6788, 6.08293, 0.28", "5.69927, -78.9521, 6.11799, 0.55", "5.89995, -80.8387, 6.32521, 0.28", "5.98233, -81.4613, 6.4066, 0.55", "6.4093, -83.7003, 6.60631, 0.55", "6.69354, -85.2006, 6.67096, 0.28", "6.83207, -85.8269, 6.65829, 0.55", "7.03234, -86.6168, 6.58748, 0.28", "7.23841, -87.3577, 6.49607, 0.55", "8.20292, -89.5366, 5.85138, 0.28", "8.68266, -90.3185, 5.50513, 0.55", "9.77287, -92.0085, 4.50803, 0.28", "10.3098, -92.8507, 3.98569, 0.55", "11.2102, -94.3176, 3.09811, 0.55", "13.5576, -98.1897, 0.879083, 0.55", "14.658, -99.9981, -0.0887603, 0.83", "15.9705, -102.247, -1.19613, 0.55", "17.1209, -104.465, -2.19693, 0.28", "17.6685, -105.749, -2.66632, 0.28", "17.9685, -106.647, -2.92876, 0.55", "18.5095, -108.932, -3.2809, 0.28", "18.9795, -111.226, -3.40003, 0.83", "19.4465, -113.412, -3.37536, 0.55", "20.2311, -117.03, -3.18245, 0.28", "20.7439, -119.358, -2.91533, 0.83", "21.1433, -120.919, -2.67873, 0.55", "21.9359, -123.735, -2.09317, 0.28", "22.3849, -124.962, -1.7808, 0.55", "23.0429, -126.623, -1.15854, 0.28", "23.7595, -128.35, -0.382789, 0.55", "24.21, -130.783, 1.79299, 0.28", "24.226, -131.517, 2.67607, 0.55", "24.1198, -132.973, 4.80074, 0.55", "23.9439, -134.959, 7.7503, 0.28", "23.8624, -135.739, 8.91329, 0.55", "23.3439, -140.827, 16.6794, 0.28", "23.2892, -141.348, 17.5043, 0.55", "23.236, -143.03, 20.1032, 0.28", "23.3259, -144.698, 22.5301, 0.28", "23.44, -145.142, 23.0836, 0.55", "24.5336, -147.898, 25.9194, 0.28", "25.0757, -148.819, 26.5235, 0.55", "26.437, -150.978, 27.7957, 0.28", "27.0597, -151.903, 28.2573, 0.83", "28.0944, -153.332, 28.8711, 0.28", "29.1132, -154.584, 29.2803, 0.28", "30.2611, -155.869, 29.5809, 0.28", "31.1774, -156.898, 29.8262, 0.55", "31.9868, -157.788, 29.9683, 0.28", "32.6768, -158.562, 30.1331, 0.55", "34.2264, -160.174, 30.5839, 0.28", "35.6161, -161.354, 30.9498, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.98079, -29.793, -15.4059, 0.83", "8.97843, -29.3739, -18.4227, 0.83", "11.5278, -29.0175, -20.9885, 0.83", "14.6112, -28.5864, -24.0916, 0.55", "16.1049, -28.3776, -25.5949, 0.55", "18.0809, -28.1013, -27.5835, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "5.98079, -29.793, -15.4059, 0.55", "6.05484, -31.4096, -15.7934, 0.55", "6.22287, -33.4054, -16.2444, 0.55", "6.33076, -34.7817, -16.5056, 0.83", "6.35848, -36.1896, -16.8362, 0.55", "6.37511, -37.0039, -17.0275, 0.28", "6.43467, -38.0573, -17.2664, 0.55", "6.4899, -39.3854, -17.5214, 0.55", "6.56677, -40.9558, -17.8107, 0.55", "6.65006, -43.8639, -18.4388, 0.28", "6.69107, -45.7365, -18.8279, 0.55", "6.75937, -48.0541, -19.253, 0.55", "6.92891, -51.9171, -19.8945, 0.55", "7.01608, -53.7138, -20.1569, 0.55", "7.1761, -57.0964, -20.5584, 0.28", "7.26876, -59.4011, -20.7615, 0.55", "7.29528, -61.3654, -20.9251, 0.28", "7.26285, -62.1755, -21.0736, 0.55", "7.18819, -63.7236, -21.519, 0.28", "7.11475, -64.7818, -21.8874, 0.55", "7.0075, -66.3779, -22.6629, 0.28", "6.95703, -67.7515, -23.4841, 0.83", "6.85008, -72.2345, -26.5603, 0.55", "6.84755, -72.7213, -26.888, 0.55", "6.87793, -73.5486, -27.4101, 0.83", "7.00385, -75.7123, -28.6675, 0.28", "7.09972, -78.1085, -29.9284, 0.55", "7.14753, -80.544, -31.114, 0.28", "7.17671, -82.1819, -31.7891, 0.55", "7.21833, -84.756, -32.766, 0.28", "7.22235, -85.3454, -32.9962, 0.28", "7.27959, -87.2944, -33.805, 0.55", "7.46267, -90.1969, -35.0976, 0.28", "7.5583, -91.118, -35.5133, 0.55", "7.89708, -93.6675, -36.7073, 0.28", "8.22292, -96.2411, -37.9943, 0.83", "8.50509, -98.5148, -38.9905, 0.28", "8.62831, -99.7458, -39.4707, 0.55", "8.6641, -101.702, -40.3173, 0.28", "8.53547, -103.713, -41.2999, 0.28", "8.07511, -106.748, -43.0194, 0.55", "7.54789, -109.391, -44.5057, 0.28", "7.2741, -110.44, -45.1421, 0.55", "6.41535, -113.267, -47.0308, 0.28", "6.23316, -113.761, -47.3761, 0.55", "5.71432, -114.885, -48.2764, 0.28", "5.51989, -115.312, -48.6428, 0.55", "5.07134, -116.117, -49.6709, 0.28", "4.9266, -116.51, -50.0946, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-43.6359, -110.833, -13.9034, 0.55", "-45.3347, -115.812, -10.8751, 0.55", "-46.7809, -120.362, -8.0955, 0.83", "-48.4217, -125.43, -5.12476, 0.28", "-49.0388, -127.245, -4.14395, 0.55", "-50.0466, -130.03, -2.77433, 0.28", "-51.836, -134.605, -0.903317, 0.28", "-52.2635, -135.581, -0.640266, 0.28", "-53.0764, -137.204, -0.498193, 0.55", "-54.1003, -139.156, -0.701597, 0.28", "-55.5601, -141.979, -1.22709, 0.83", "-57.7236, -145.77, -2.13044, 0.28", "-59.1768, -148.244, -2.87522, 0.28", "-59.8107, -149.337, -3.17845, 0.55", "-62.3701, -153.863, -4.27529, 0.28", "-63.0715, -155.151, -4.59186, 0.83", "-64.4794, -157.727, -5.20306, 0.28", "-64.8597, -158.426, -5.35415, 0.55", "-66.4355, -161.307, -5.94702, 0.28", "-67.3221, -162.884, -6.24273, 0.55", "-69.1346, -165.717, -6.50072, 0.28", "-70.695, -168.245, -6.8484, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-43.6359, -110.833, -13.9034, 0.28", "-43.5259, -113.412, -14.5711, 0.28", "-43.5302, -113.662, -14.6419, 0.83", "-43.6462, -115.784, -15.2417, 0.28", "-43.7025, -116.813, -15.5326, 0.83", "-43.8456, -119.43, -16.2721, 0.28", "-43.8899, -120.239, -16.5008, 0.55", "-44.1139, -122.222, -17.2418, 0.28", "-44.1884, -122.773, -17.4367, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "18.0809, -28.1013, -27.5835, 0.55", "19.6587, -28.697, -29.3628, 0.55", "22.5476, -29.9678, -32.8318, 0.55", "25.2403, -31.314, -36.1314, 0.83", "28.0907, -32.9414, -39.6282, 0.83", "29.6054, -33.9026, -41.5158, 0.55", "30.146, -34.2896, -42.1531, 0.28", "30.9874, -34.8951, -43.1023, 0.55", "31.7186, -35.4855, -43.8551, 0.28", "32.6498, -36.175, -44.6457, 0.55", "33.9886, -37.2025, -46.0127, 0.55", "36.7565, -38.9643, -48.6927, 0.55", "38.9358, -40.2075, -50.8227, 0.83", "40.4963, -41.0265, -52.3016, 0.55", "42.8461, -42.1676, -54.7336, 1.11", "47.1182, -44.002, -59.4243, 0.55", "49.4674, -44.8464, -62.0565, 0.55", "51.1051, -45.3462, -63.9233, 0.28", "52.3205, -45.7268, -65.3332, 1.11", "56.204, -46.8118, -69.5905, 0.55", "57.5582, -47.132, -71.0504, 0.55", "60.1871, -47.7304, -73.7642, 0.55", "62.9765, -48.4801, -76.8948, 0.83", "66.0536, -49.3333, -80.3658, 0.28", "68.2568, -50.0253, -82.8677, 0.83", "71.1437, -51.1501, -86.0001, 0.28", "72.2503, -51.6768, -87.271, 0.83", "74.2164, -52.8295, -89.7144, 0.28", "74.6358, -53.1107, -90.2537, 0.28", "75.3433, -53.6821, -91.0625, 0.55", "76.5416, -54.935, -92.3685, 0.28", "77.1549, -55.6713, -92.7932, 0.55", "78.5618, -57.42, -93.4037, 0.28", "79.1898, -58.1885, -93.5069, 0.55", "81.2136, -60.7018, -93.664, 0.28", "82.2512, -61.9958, -93.8225, 0.83", "83.1974, -63.1705, -94.0005, 0.28", "83.6657, -63.7434, -94.1976, 0.55", "84.374, -64.5706, -94.672, 0.28", "86.0192, -66.461, -96.3107, 0.83", "87.6043, -68.2022, -98.1162, 0.55", "88.0945, -68.7785, -98.7086, 0.83", "90.0685, -71.1344, -101.199, 0.28", "90.9221, -72.1666, -102.293, 1.11", "93.0616, -74.6764, -104.957, 0.55", "94.3018, -76.1074, -106.447, 1.11", "96.9944, -79.2612, -109.218, 0.55", "97.3757, -79.703, -109.557, 0.83", "99.6782, -82.3332, -111.161, 0.28", "100.544, -83.346, -111.637, 0.55", "102.133, -85.1761, -112.303, 0.28", "104.075, -87.427, -112.984, 0.83", "107.849, -91.5731, -114.083, 0.28", "109.375, -93.2223, -114.529, 0.83", "112.696, -96.7734, -115.449, 0.28", "114.143, -98.3092, -115.897, 0.55", "115.782, -99.9721, -116.538, 0.28", "117.111, -101.217, -117.224, 0.55", "118.277, -102.248, -117.953, 0.28", "118.591, -102.503, -118.205, 0.55", "120.13, -103.576, -119.654, 0.28", "122.013, -104.787, -121.344, 0.55", "123.898, -105.972, -123.096, 0.28", "124.667, -106.527, -123.809, 0.55", "125.549, -107.201, -124.624, 0.28", "125.769, -107.374, -124.834, 0.55", "128.223, -109.479, -127.19, 0.28", "129.336, -110.54, -127.902, 0.55", "130.354, -111.631, -128.358, 0.28", "130.667, -111.978, -128.399, 0.55", "131.983, -113.506, -128.376, 0.28", "132.805, -114.637, -128.347, 0.55", "135.14, -118.3, -127.591, 0.28", "135.865, -119.478, -127.389, 0.83", "137.027, -121.448, -127.048, 0.28", "137.996, -123.166, -126.831, 0.55", "139.67, -126.322, -126.548, 0.28", "141.88, -130.339, -126.17, 0.83", "144.804, -135.504, -125.861, 0.28", "145.733, -137.078, -125.724, 0.83", "146.877, -138.881, -125.502, 0.28", "147.704, -140.095, -125.27, 0.55", "150.915, -144.087, -124.191, 0.28", "151.317, -144.547, -124.071, 0.55", "152.135, -145.372, -123.762, 0.28", "152.746, -146.005, -123.639, 0.28", "152.975, -146.24, -123.586, 0.55", "154.541, -148.028, -123.66, 0.28", "155.032, -148.828, -124.127, 0.55", "156.741, -151.817, -126.099, 0.28", "157.029, -152.388, -126.563, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "18.0809, -28.1013, -27.5835, 0.55", "18.6274, -27.6652, -28.8173, 0.55", "19.3587, -26.963, -30.3956, 0.55", "19.9964, -26.2461, -31.6974, 0.28", "21.6678, -24.2099, -35.1921, 0.83", "23.2936, -22.4034, -38.3294, 0.55", "24.992, -20.6789, -41.3754, 0.55", "26.4155, -19.2222, -43.829, 0.55", "27.4721, -18.1511, -45.6753, 0.55", "28.691, -16.9572, -47.7302, 0.55", "30.1847, -15.5621, -50.0084, 0.55", "31.3816, -14.5327, -51.7323, 0.55", "32.356, -13.6695, -53.352, 0.83", "33.5435, -12.5161, -55.8094, 0.55", "33.9811, -11.8314, -57.2884, 0.55", "34.361, -10.7483, -59.36, 0.55", "34.4491, -10.134, -60.4991, 0.55", "34.4768, -8.95483, -62.6758, 0.55", "34.434, -6.84267, -66.2896, 0.55", "34.3328, -4.89687, -69.2691, 1.11", "34.1892, -3.49013, -71.2863, 0.55", "34.0522, -2.1497, -72.9846, 0.83", "33.9416, -1.00774, -74.2801, 0.28", "33.8837, 0.623057, -75.918, 0.55", "33.9133, 3.873, -78.762, 0.28", "33.9245, 4.56425, -79.2712, 0.83", "33.8636, 7.31195, -81.1364, 0.83", "33.6965, 10.9051, -83.3651, 0.55", "33.5645, 12.7271, -84.363, 0.55", "33.3981, 13.7229, -84.9137, 0.55", "32.7814, 16.4682, -86.3046, 0.28", "32.5563, 17.2738, -86.7069, 0.55", "32.1158, 18.5956, -87.3449, 0.28", "31.2394, 21.3482, -88.622, 0.55", "29.6535, 26.6325, -91.1538, 0.28", "29.4652, 27.3131, -91.4856, 0.55", "28.7855, 30.1616, -92.896, 0.28", "28.5832, 31.3005, -93.4473, 0.55", "28.3505, 33.3952, -94.4156, 0.55", "28.2394, 34.8684, -95.0436, 0.55", "28.1868, 36.4418, -95.5344, 0.55", "28.0485, 39.6251, -96.5585, 0.28", "27.9666, 41.0792, -97.0462, 0.55", "27.7903, 43.3355, -97.974, 0.28", "27.6013, 44.5587, -98.726, 0.28", "27.396, 45.6138, -99.5673, 0.55", "26.8514, 47.2887, -101.401, 0.28", "26.1549, 48.7843, -103.374, 0.83", "24.8481, 50.6582, -106.345, 0.55", "22.7248, 53.1774, -110.806, 0.55", "22.1966, 53.7577, -111.884, 0.83", "19.8405, 56.1601, -116.416, 0.28", "19.2975, 56.7175, -117.394, 0.55", "16.4188, 59.8883, -122.397, 0.28", "15.9128, 60.5612, -123.259, 0.55", "15.1237, 62.0061, -124.774, 0.28", "14.8402, 62.7041, -125.457, 0.55", "14.4758, 64.8734, -127.14, 0.28", "14.4078, 65.9692, -127.897, 0.28", "14.589, 68.855, -129.543, 0.55", "14.7185, 70.8549, -130.684, 0.28", "14.7651, 71.4217, -130.996, 0.55", "15.0764, 74.6208, -132.808, 0.28", "15.1237, 75.0032, -133.029, 0.55", "15.4955, 77.2402, -134.164, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "4.9266, -116.51, -50.0946, 0.28", "3.9381, -119.126, -51.1903, 0.28", "3.63664, -120.019, -51.5203, 0.55", "2.9214, -122.208, -52.3383, 0.28", "2.10204, -125.001, -53.145, 0.55", "1.31183, -127.695, -53.9619, 0.28", "0.836085, -129.513, -54.4108, 0.55", "0.333221, -131.703, -54.9376, 0.28", "0.10277, -132.883, -55.1456, 0.55", "-0.57625, -136.79, -55.5192, 0.28", "-1.01987, -139.539, -55.5712, 0.55", "-2.02152, -145.559, -55.4518, 0.28", "-2.12666, -146.318, -55.4108, 0.55", "-2.84666, -152.36, -55.0238, 0.28", "-2.98868, -154.792, -54.8477, 0.55", "-3.04158, -157.234, -54.6559, 0.28", "-3.02316, -158.379, -54.5618, 0.55", "-2.82305, -163.023, -54.2601, 0.28", "-2.74645, -164.311, -54.1966, 0.55", "-2.02281, -172.682, -54.0394, 0.28", "-1.88559, -174.141, -54.0296, 0.83", "-1.54683, -177.746, -53.9982, 0.28", "-1.39977, -179.485, -53.976, 0.55", "-1.12188, -183.616, -53.9261, 0.28", "-0.913016, -186.93, -53.8695, 0.28", "-0.851471, -188.214, -53.8167, 0.55", "-0.739917, -190.196, -53.7399, 0.28", "-0.678655, -192.076, -53.6179, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "4.9266, -116.51, -50.0946, 0.28", "5.34515, -120.713, -50.0081, 0.28", "5.389, -121.49, -49.8324, 0.55", "5.40002, -123.223, -49.3235, 0.28", "5.39665, -124.05, -49.0717, 0.55", "5.35917, -125.652, -48.6797, 0.28", "5.34254, -126.08, -48.6019, 0.55", "4.875, -130.589, -48.0073, 0.28", "4.77356, -131.407, -47.9025, 0.83", "4.50797, -133.325, -47.7647, 0.83", "3.92342, -137.162, -47.7547, 0.28", "3.63006, -138.947, -47.8724, 0.55", "3.13969, -141.61, -48.4504, 0.28", "2.78284, -143.553, -49.0734, 0.28", "2.56382, -144.942, -49.4985, 0.55", "2.2376, -146.894, -50.1082, 0.28", "2.11159, -147.698, -50.3516, 0.55", "1.45714, -152.388, -51.6574, 0.28", "0.966335, -156.342, -52.8858, 0.28", "0.791743, -157.811, -53.3666, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_57", "dend_54", "dend_49", "dend_42", "dend_41", "dend_34", "dend_29", "dend_0", "dend_59", "dend_58", "dend_56", "dend_55", "dend_53", "dend_50", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_1", "dend_52", "dend_51", "dend_46", "dend_45", "dend_37", "dend_36", "dend_32", "dend_31", "dend_24", "dend_21", "dend_11", "dend_2", "dend_48", "dend_47", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_15", "dend_12", "dend_10", "dend_3", "dend_28", "dend_27", "dend_17", "dend_16", "dend_14", "dend_13", "dend_7", "dend_4", "dend_19", "dend_18", "dend_9", "dend_8", "dend_6", "dend_5" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_57", "dend_54", "dend_49", "dend_42", "dend_41", "dend_34", "dend_29", "dend_0", "dend_59", "dend_58", "dend_56", "dend_55", "dend_53", "dend_50", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_1", "dend_52", "dend_51", "dend_46", "dend_45", "dend_37", "dend_36", "dend_32", "dend_31", "dend_24", "dend_21", "dend_11", "dend_2", "dend_48", "dend_47", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_15", "dend_12", "dend_10", "dend_3", "dend_28", "dend_27", "dend_17", "dend_16", "dend_14", "dend_13", "dend_7", "dend_4", "dend_19", "dend_18", "dend_9", "dend_8", "dend_6", "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "axon_0", "axon_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_NBC_421c200e4e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_57, id: dend_57, parent: soma_0
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_57(0), soma_0(0.4500000363863218)
    connect dend_54(0), soma_0(0.4500000363863218)
    connect dend_49(0), soma_0(0.4500000363863218)
    connect dend_42(0), soma_0(0.4500000363863218)
    connect dend_41(0), soma_0(0.4500000363863218)
    connect dend_34(0), soma_0(0.4500000363863218)
    connect dend_29(0), soma_0(0.4500000363863218)
    connect dend_0(0), soma_0(0.4500000363863218)
    connect axon_0(0), soma_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.72306, 5.30436, 4.20388, 2.54287 ) }
    soma_0 { pt3dadd( -4.25223, 4.78627, 3.78879, 4.68725 ) }
    soma_0 { pt3dadd( -3.7814, 4.26817, 3.37371, 6.22673 ) }
    soma_0 { pt3dadd( -3.31057, 3.75008, 2.95862, 7.64701 ) }
    soma_0 { pt3dadd( -2.83974, 3.23199, 2.54353, 8.55761 ) }
    soma_0 { pt3dadd( -2.36891, 2.7139, 2.12844, 8.96549 ) }
    soma_0 { pt3dadd( -1.89808, 2.19581, 1.71335, 9.2975 ) }
    soma_0 { pt3dadd( -1.42725, 1.67772, 1.29826, 9.48549 ) }
    soma_0 { pt3dadd( -0.956417, 1.15963, 0.883172, 9.67333 ) }
    soma_0 { pt3dadd( -0.485586, 0.641536, 0.468083, 9.75336 ) }
    soma_0 { pt3dadd( -0.0147564, 0.123445, 0.0529936, 9.80295 ) }
    soma_0 { pt3dadd( 0.456074, -0.394646, -0.362095, 9.88568 ) }
    soma_0 { pt3dadd( 0.926904, -0.912738, -0.777184, 9.94624 ) }
    soma_0 { pt3dadd( 1.39773, -1.43083, -1.19227, 9.39229 ) }
    soma_0 { pt3dadd( 1.86856, -1.94892, -1.60736, 8.64644 ) }
    soma_0 { pt3dadd( 2.33939, -2.46701, -2.02245, 7.85208 ) }
    soma_0 { pt3dadd( 2.81022, -2.9851, -2.43754, 7.02739 ) }
    soma_0 { pt3dadd( 3.28105, -3.50319, -2.85263, 6.08715 ) }
    soma_0 { pt3dadd( 3.75188, -4.02128, -3.26772, 4.76023 ) }
    soma_0 { pt3dadd( 4.22271, -4.53938, -3.68281, 3.42054 ) }
    soma_0 { pt3dadd( 4.69354, -5.05747, -4.0979, 1.96741 ) }
    // Section: dend_57, id: dend_57, parent: soma_0 (entry count 21/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -2.10822, -3.15908, -18.4649, 1.11 ) }
    dend_57 { pt3dadd( -3.94864, -4.22687, -29.8807, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 23/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 2.32178, -4.87908, -18.1149, 1.11 ) }
    dend_54 { pt3dadd( 3.07016, -5.73427, -18.1093, 1.11 ) }
    dend_54 { pt3dadd( 5.02187, -7.93148, -18.3897, 1.11 ) }
    dend_54 { pt3dadd( 5.96715, -8.98583, -18.779, 1.11 ) }
    dend_54 { pt3dadd( 8.29138, -11.4416, -19.9792, 0.83 ) }
    dend_54 { pt3dadd( 10.3102, -13.4881, -21.097, 0.83 ) }
    dend_54 { pt3dadd( 12.1063, -15.1894, -22.0481, 0.83 ) }
    dend_54 { pt3dadd( 14.538, -17.3677, -23.6005, 0.83 ) }
    dend_54 { pt3dadd( 17.8297, -20.1957, -25.9303, 0.83 ) }
    dend_54 { pt3dadd( 19.2495, -21.3843, -27.0388, 0.83 ) }
    dend_54 { pt3dadd( 20.543, -22.3895, -28.1745, 0.83 ) }
    dend_54 { pt3dadd( 23.2171, -24.2339, -30.643, 0.83 ) }
    dend_54 { pt3dadd( 25.9659, -25.8944, -33.0692, 0.83 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 36/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 2.98178, 0.400921, -16.4649, 1.11 ) }
    dend_49 { pt3dadd( 4.78621, -0.088855, -16.4638, 1.11 ) }
    dend_49 { pt3dadd( 7.41569, -0.802569, -16.4622, 0.83 ) }
    dend_49 { pt3dadd( 10.0561, -1.51926, -16.4607, 0.55 ) }
    dend_49 { pt3dadd( 12.6219, -2.21568, -16.4592, 0.55 ) }
    dend_49 { pt3dadd( 15.0751, -2.88155, -16.4577, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 42/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -0.808223, 8.07092, 4.65513, 1.11 ) }
    dend_42 { pt3dadd( -1.83213, 11.063, 4.70216, 1.11 ) }
    dend_42 { pt3dadd( -2.70554, 13.6153, 4.74228, 0.55 ) }
    dend_42 { pt3dadd( -3.29814, 15.3471, 4.76949, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 46/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.24177, -5.66908, 2.24513, 1.11 ) }
    dend_41 { pt3dadd( 2.67431, -8.26585, 3.15313, 1.11 ) }
    dend_41 { pt3dadd( 3.58723, -9.87918, 3.35708, 1.11 ) }
    dend_41 { pt3dadd( 4.32889, -11.0176, 3.38084, 0.83 ) }
    dend_41 { pt3dadd( 5.33536, -12.4833, 3.30586, 0.55 ) }
    dend_41 { pt3dadd( 6.46074, -13.9895, 3.18131, 0.28 ) }
    dend_41 { pt3dadd( 7.4466, -15.2966, 3.06983, 1.11 ) }
    dend_41 { pt3dadd( 9.92188, -18.4932, 2.70138, 0.55 ) }
    dend_41 { pt3dadd( 11.1824, -20.0789, 2.28675, 0.55 ) }
    dend_41 { pt3dadd( 12.7625, -22.2684, 1.29975, 0.83 ) }
    dend_41 { pt3dadd( 13.7178, -23.7739, 0.411717, 0.55 ) }
    dend_41 { pt3dadd( 14.6241, -25.1515, -0.623168, 0.83 ) }
    dend_41 { pt3dadd( 15.6753, -26.7043, -1.92333, 0.83 ) }
    dend_41 { pt3dadd( 17.879, -29.9742, -4.6401, 0.55 ) }
    dend_41 { pt3dadd( 19.8559, -32.944, -7.20632, 0.55 ) }
    dend_41 { pt3dadd( 20.6671, -34.1975, -8.31051, 0.55 ) }
    dend_41 { pt3dadd( 22.3843, -37.088, -10.6565, 0.83 ) }
    dend_41 { pt3dadd( 22.8074, -37.8199, -11.1599, 0.55 ) }
    dend_41 { pt3dadd( 23.8686, -39.7598, -12.0908, 0.83 ) }
    dend_41 { pt3dadd( 24.6912, -41.5215, -12.4387, 0.55 ) }
    dend_41 { pt3dadd( 25.5318, -43.2944, -12.6524, 0.55 ) }
    dend_41 { pt3dadd( 26.3427, -45.2981, -12.8925, 1.11 ) }
    dend_41 { pt3dadd( 27.0274, -47.4285, -13.1353, 1.11 ) }
    dend_41 { pt3dadd( 27.5351, -49.0713, -13.3802, 0.83 ) }
    dend_41 { pt3dadd( 28.1856, -51.1981, -13.761, 0.83 ) }
    dend_41 { pt3dadd( 29.2461, -54.2047, -14.3331, 0.55 ) }
    dend_41 { pt3dadd( 30.2097, -56.4762, -14.7496, 0.55 ) }
    dend_41 { pt3dadd( 30.8196, -57.8077, -14.9902, 0.28 ) }
    dend_41 { pt3dadd( 31.0753, -58.3503, -15.0872, 0.83 ) }
    dend_41 { pt3dadd( 31.9374, -60.0482, -15.3748, 0.55 ) }
    dend_41 { pt3dadd( 32.6063, -61.2536, -15.6441, 0.55 ) }
    dend_41 { pt3dadd( 33.4463, -62.8049, -16.0749, 0.28 ) }
    dend_41 { pt3dadd( 34.1149, -63.934, -16.5243, 1.11 ) }
    dend_41 { pt3dadd( 34.8178, -65.0833, -17.0733, 0.28 ) }
    dend_41 { pt3dadd( 35.3131, -65.8861, -17.4963, 0.55 ) }
    dend_41 { pt3dadd( 36.7623, -68.2855, -18.8184, 0.28 ) }
    dend_41 { pt3dadd( 37.2095, -69.0782, -19.2552, 0.83 ) }
    dend_41 { pt3dadd( 38.2449, -70.923, -20.299, 0.83 ) }
    dend_41 { pt3dadd( 39.0648, -72.3482, -21.0588, 0.28 ) }
    dend_41 { pt3dadd( 39.3008, -72.7947, -21.2529, 0.55 ) }
    dend_41 { pt3dadd( 39.7929, -73.8289, -21.5767, 0.28 ) }
    dend_41 { pt3dadd( 40.0362, -74.3598, -21.6645, 0.55 ) }
    dend_41 { pt3dadd( 40.6312, -75.7566, -21.8263, 0.28 ) }
    dend_41 { pt3dadd( 40.7642, -76.1062, -21.8703, 0.55 ) }
    dend_41 { pt3dadd( 41.4303, -77.915, -22.0849, 0.28 ) }
    dend_41 { pt3dadd( 41.7988, -78.8142, -22.1923, 0.55 ) }
    dend_41 { pt3dadd( 42.248, -79.841, -22.3087, 0.28 ) }
    dend_41 { pt3dadd( 43.0371, -81.5826, -22.4582, 0.83 ) }
    dend_41 { pt3dadd( 43.89, -83.4502, -22.5835, 0.28 ) }
    dend_41 { pt3dadd( 44.5111, -84.7796, -22.688, 0.55 ) }
    dend_41 { pt3dadd( 45.1221, -86.0529, -22.7988, 0.28 ) }
    dend_41 { pt3dadd( 45.6816, -87.3154, -22.9184, 0.83 ) }
    dend_41 { pt3dadd( 46.3405, -88.8891, -23.0621, 0.28 ) }
    dend_41 { pt3dadd( 46.8224, -90.0544, -23.147, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_41 { pt3dadd( 47.6588, -92.1838, -23.2537, 0.28 ) }
    dend_41 { pt3dadd( 47.9312, -92.9529, -23.2884, 0.83 ) }
    dend_41 { pt3dadd( 48.3781, -94.344, -23.3421, 0.83 ) }
    dend_41 { pt3dadd( 48.9869, -96.2288, -23.3987, 0.83 ) }
    dend_41 { pt3dadd( 49.6558, -98.3244, -23.4378, 0.28 ) }
    dend_41 { pt3dadd( 50.0543, -99.3303, -23.4767, 0.83 ) }
    dend_41 { pt3dadd( 50.8201, -100.796, -23.5336, 0.28 ) }
    dend_41 { pt3dadd( 51.1591, -101.22, -23.5895, 0.55 ) }
    dend_41 { pt3dadd( 52.1539, -102.143, -23.7888, 0.28 ) }
    dend_41 { pt3dadd( 53.0041, -102.735, -24.1365, 0.55 ) }
    dend_41 { pt3dadd( 55.3413, -104.127, -25.3491, 0.28 ) }
    dend_41 { pt3dadd( 56.8534, -104.966, -26.3785, 0.83 ) }
    dend_41 { pt3dadd( 59.8684, -106.594, -28.7287, 0.28 ) }
    dend_41 { pt3dadd( 60.525, -106.985, -29.3297, 0.55 ) }
    dend_41 { pt3dadd( 64.1443, -109.407, -33.1033, 0.28 ) }
    dend_41 { pt3dadd( 64.442, -109.654, -33.4824, 0.55 ) }
    dend_41 { pt3dadd( 66.5266, -111.926, -36.816, 0.28 ) }
    dend_41 { pt3dadd( 66.8578, -112.418, -37.4375, 0.55 ) }
    dend_41 { pt3dadd( 67.5873, -113.905, -39.0, 0.28 ) }
    dend_41 { pt3dadd( 68.0302, -114.983, -39.9237, 0.83 ) }
    dend_41 { pt3dadd( 69.2087, -118.455, -42.1299, 0.28 ) }
    dend_41 { pt3dadd( 69.2858, -118.681, -42.2467, 0.55 ) }
    dend_41 { pt3dadd( 70.6922, -122.964, -43.9032, 0.28 ) }
    dend_41 { pt3dadd( 70.8609, -123.459, -44.0843, 0.83 ) }
    dend_41 { pt3dadd( 71.6124, -125.5, -44.7289, 0.28 ) }
    dend_41 { pt3dadd( 71.9003, -126.291, -44.9406, 0.83 ) }
    dend_41 { pt3dadd( 72.8816, -128.931, -45.2754, 0.28 ) }
    dend_41 { pt3dadd( 73.1825, -129.735, -45.3688, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 28/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 3.45178, 1.12092, -6.46487, 0.83 ) }
    dend_34 { pt3dadd( 5.66878, 1.35713, -6.42371, 0.83 ) }
    dend_34 { pt3dadd( 8.07108, 1.61308, -6.37911, 0.83 ) }
    dend_34 { pt3dadd( 10.6885, 1.89194, -6.33051, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 32/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -4.64822, 0.230921, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -5.86737, -1.76946, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -7.41053, -4.30145, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -8.46319, -6.02863, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -10.9026, -10.0312, 13.8451, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 37/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.04822, -6.61908, -6.38487, 2.49 ) }
    dend_0 { pt3dadd( -2.87185, -9.44293, -6.38487, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 39/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.69354, -5.05747, -4.0979, 0.583783 ) }
    axon_0 { pt3dadd( 14.7817, -16.1583, -4.0979, 0.583783 ) }
    axon_0 { pt3dadd( 24.8699, -27.2591, -4.0979, 0.583783 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 42/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -3.94864, -4.22687, -29.8807, 1.11 ) }
    dend_59 { pt3dadd( -4.53085, 0.950813, -19.6234, 1.11 ) }
    dend_59 { pt3dadd( -4.57934, 1.88348, -18.351, 0.55 ) }
    dend_59 { pt3dadd( -4.59693, 2.67634, -17.5881, 0.83 ) }
    dend_59 { pt3dadd( -4.59821, 3.96171, -17.3761, 0.55 ) }
    dend_59 { pt3dadd( -4.65741, 5.63763, -17.7964, 0.55 ) }
    dend_59 { pt3dadd( -4.81699, 7.88374, -18.5681, 1.11 ) }
    dend_59 { pt3dadd( -4.95441, 10.0143, -19.873, 0.83 ) }
    dend_59 { pt3dadd( -4.86872, 13.7531, -22.8227, 0.55 ) }
    dend_59 { pt3dadd( -4.7316, 14.591, -23.8184, 0.55 ) }
    dend_59 { pt3dadd( -4.56891, 15.0866, -24.6714, 0.55 ) }
    dend_59 { pt3dadd( -4.29195, 15.7143, -25.9646, 0.55 ) }
    dend_59 { pt3dadd( -3.78767, 16.6436, -27.9754, 0.55 ) }
    dend_59 { pt3dadd( -2.96062, 17.9793, -30.7289, 0.55 ) }
    dend_59 { pt3dadd( -1.61935, 20.0744, -34.7772, 0.83 ) }
    dend_59 { pt3dadd( -0.389836, 22.0778, -38.481, 0.28 ) }
    dend_59 { pt3dadd( 0.0579171, 22.8395, -39.8215, 0.83 ) }
    dend_59 { pt3dadd( 1.01883, 24.6781, -42.9288, 0.55 ) }
    dend_59 { pt3dadd( 1.16495, 25.0699, -43.5234, 0.55 ) }
    dend_59 { pt3dadd( 1.52476, 26.8397, -46.0838, 1.11 ) }
    dend_59 { pt3dadd( 1.77679, 28.3614, -48.2703, 0.28 ) }
    dend_59 { pt3dadd( 1.88547, 29.0539, -49.3695, 0.55 ) }
    dend_59 { pt3dadd( 1.97519, 29.5929, -50.2842, 0.28 ) }
    dend_59 { pt3dadd( 2.17103, 30.52, -52.0369, 0.55 ) }
    dend_59 { pt3dadd( 2.94134, 33.406, -57.4257, 0.28 ) }
    dend_59 { pt3dadd( 3.3834, 34.7863, -59.9483, 0.83 ) }
    dend_59 { pt3dadd( 3.92239, 36.2978, -62.6404, 0.28 ) }
    dend_59 { pt3dadd( 4.23752, 37.1693, -64.0857, 0.83 ) }
    dend_59 { pt3dadd( 5.40925, 40.4052, -68.9508, 0.28 ) }
    dend_59 { pt3dadd( 5.87277, 41.7572, -70.6502, 0.28 ) }
    dend_59 { pt3dadd( 6.36384, 43.5536, -72.4039, 1.38 ) }
    dend_59 { pt3dadd( 6.80594, 45.7773, -74.3097, 0.55 ) }
    dend_59 { pt3dadd( 7.04635, 47.3346, -75.5271, 0.28 ) }
    dend_59 { pt3dadd( 7.19374, 48.7864, -76.5419, 0.55 ) }
    dend_59 { pt3dadd( 7.31648, 51.3673, -77.9137, 0.28 ) }
    dend_59 { pt3dadd( 7.38839, 52.8665, -78.6047, 0.83 ) }
    dend_59 { pt3dadd( 7.50152, 54.8162, -79.307, 0.28 ) }
    dend_59 { pt3dadd( 7.55814, 55.5106, -79.4982, 0.55 ) }
    dend_59 { pt3dadd( 7.70767, 56.7481, -79.792, 0.28 ) }
    dend_59 { pt3dadd( 7.84584, 57.5169, -79.9355, 0.83 ) }
    dend_59 { pt3dadd( 8.66406, 61.1335, -80.4995, 0.28 ) }
    dend_59 { pt3dadd( 8.87114, 61.8246, -80.5863, 0.83 ) }
    dend_59 { pt3dadd( 9.72125, 64.0848, -80.8355, 0.28 ) }
    dend_59 { pt3dadd( 10.1167, 64.963, -80.9627, 0.55 ) }
    dend_59 { pt3dadd( 10.8959, 66.5217, -81.2626, 0.28 ) }
    dend_59 { pt3dadd( 11.1462, 67.0122, -81.3729, 0.55 ) }
    dend_59 { pt3dadd( 12.0992, 68.8784, -81.7867, 0.28 ) }
    dend_59 { pt3dadd( 12.5243, 69.6713, -81.9757, 0.55 ) }
    dend_59 { pt3dadd( 13.0131, 70.5294, -82.1998, 0.28 ) }
    dend_59 { pt3dadd( 13.6976, 71.7943, -82.5276, 0.55 ) }
    dend_59 { pt3dadd( 14.9906, 74.6185, -83.1934, 0.28 ) }
    dend_59 { pt3dadd( 15.4693, 75.8747, -83.4515, 0.83 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 94/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -3.94864, -4.22687, -29.8807, 0.55 ) }
    dend_58 { pt3dadd( -6.66805, -3.6663, -32.2565, 0.55 ) }
    dend_58 { pt3dadd( -11.3904, -3.1147, -35.8602, 0.55 ) }
    dend_58 { pt3dadd( -13.1005, -2.98317, -37.0702, 0.83 ) }
    dend_58 { pt3dadd( -14.835, -2.86054, -38.2104, 0.28 ) }
    dend_58 { pt3dadd( -15.7534, -2.77828, -38.7809, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_58 { pt3dadd( -18.9027, -2.47317, -40.6411, 0.28 ) }
    dend_58 { pt3dadd( -20.7605, -2.29545, -41.6119, 0.55 ) }
    dend_58 { pt3dadd( -23.2547, -2.19859, -42.6711, 0.28 ) }
    dend_58 { pt3dadd( -24.7395, -2.09776, -43.249, 0.55 ) }
    dend_58 { pt3dadd( -27.3345, -1.79738, -44.2627, 0.28 ) }
    dend_58 { pt3dadd( -28.2576, -1.64389, -44.6142, 0.55 ) }
    dend_58 { pt3dadd( -29.6994, -1.30785, -45.1295, 0.28 ) }
    dend_58 { pt3dadd( -31.4312, -0.964889, -45.7188, 0.55 ) }
    dend_58 { pt3dadd( -34.2769, -0.506211, -46.5651, 0.28 ) }
    dend_58 { pt3dadd( -35.2645, -0.389554, -46.9084, 0.55 ) }
    dend_58 { pt3dadd( -37.3495, -0.18713, -47.6563, 0.28 ) }
    dend_58 { pt3dadd( -38.2065, -0.102198, -47.9754, 0.55 ) }
    dend_58 { pt3dadd( -42.6999, 0.27744, -49.8192, 0.28 ) }
    dend_58 { pt3dadd( -44.1534, 0.382057, -50.4624, 0.55 ) }
    dend_58 { pt3dadd( -48.1712, 0.573209, -52.5309, 0.28 ) }
    dend_58 { pt3dadd( -50.3607, 0.612146, -53.7845, 0.28 ) }
    dend_58 { pt3dadd( -51.4208, 0.603326, -54.545, 0.55 ) }
    dend_58 { pt3dadd( -54.5044, 0.608025, -57.0013, 0.28 ) }
    dend_58 { pt3dadd( -55.2654, 0.614047, -57.6536, 0.55 ) }
    dend_58 { pt3dadd( -58.7984, 0.623081, -60.9538, 0.28 ) }
    dend_58 { pt3dadd( -60.2668, 0.616206, -62.3518, 0.55 ) }
    dend_58 { pt3dadd( -64.4708, 0.563749, -66.5445, 0.28 ) }
    dend_58 { pt3dadd( -66.5189, 0.544915, -68.6104, 0.28 ) }
    dend_58 { pt3dadd( -67.638, 0.542104, -69.7219, 0.55 ) }
    dend_58 { pt3dadd( -72.0203, 0.578841, -74.2797, 0.28 ) }
    dend_58 { pt3dadd( -73.3008, 0.598467, -75.5918, 0.28 ) }
    dend_58 { pt3dadd( -73.7486, 0.588792, -76.0285, 0.55 ) }
    dend_58 { pt3dadd( -75.36, 0.457621, -77.4733, 0.28 ) }
    dend_58 { pt3dadd( -76.431, 0.336799, -78.4406, 0.55 ) }
    dend_58 { pt3dadd( -81.4959, -0.331347, -82.7861, 0.28 ) }
    dend_58 { pt3dadd( -83.091, -0.62552, -84.0427, 0.55 ) }
    dend_58 { pt3dadd( -87.3534, -1.44519, -87.1714, 0.28 ) }
    dend_58 { pt3dadd( -88.7633, -1.73044, -88.1216, 0.55 ) }
    dend_58 { pt3dadd( -91.9802, -2.44295, -90.144, 0.28 ) }
    dend_58 { pt3dadd( -93.3102, -2.77884, -90.9241, 0.55 ) }
    dend_58 { pt3dadd( -96.4636, -3.66506, -92.4761, 0.28 ) }
    dend_58 { pt3dadd( -98.9889, -4.37912, -93.7407, 0.28 ) }
    dend_58 { pt3dadd( -100.016, -4.65038, -94.2517, 0.55 ) }
    dend_58 { pt3dadd( -101.795, -5.17869, -95.1317, 0.28 ) }
    dend_58 { pt3dadd( -103.091, -5.64225, -95.6874, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 40/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 25.9659, -25.8944, -33.0692, 0.55 ) }
    dend_56 { pt3dadd( 26.403, -26.3376, -33.8844, 0.55 ) }
    dend_56 { pt3dadd( 26.8011, -26.669, -34.4839, 0.55 ) }
    dend_56 { pt3dadd( 28.184, -27.9494, -36.9599, 0.55 ) }
    dend_56 { pt3dadd( 29.4502, -29.1223, -39.0287, 0.55 ) }
    dend_56 { pt3dadd( 29.9866, -29.655, -39.9522, 0.55 ) }
    dend_56 { pt3dadd( 30.5095, -30.186, -40.8193, 0.55 ) }
    dend_56 { pt3dadd( 31.7127, -31.4718, -42.8579, 0.55 ) }
    dend_56 { pt3dadd( 33.1082, -33.0444, -45.1713, 0.28 ) }
    dend_56 { pt3dadd( 34.3801, -34.4778, -47.0397, 0.83 ) }
    dend_56 { pt3dadd( 36.4095, -36.7508, -49.67, 0.55 ) }
    dend_56 { pt3dadd( 37.1846, -37.604, -50.5749, 0.55 ) }
    dend_56 { pt3dadd( 38.4731, -39.0898, -51.8553, 0.83 ) }
    dend_56 { pt3dadd( 39.142, -39.853, -52.3657, 0.83 ) }
    dend_56 { pt3dadd( 39.7809, -40.553, -52.7352, 0.55 ) }
    dend_56 { pt3dadd( 41.2128, -42.1259, -53.5266, 1.11 ) }
    dend_56 { pt3dadd( 42.6407, -43.6529, -54.0144, 0.55 ) }
    dend_56 { pt3dadd( 43.6184, -44.6723, -54.2859, 0.83 ) }
    dend_56 { pt3dadd( 44.0911, -45.1506, -54.386, 0.83 ) }
    dend_56 { pt3dadd( 45.3313, -46.4259, -54.7028, 0.55 ) }
    dend_56 { pt3dadd( 46.3279, -47.45, -55.0146, 0.28 ) }
    dend_56 { pt3dadd( 47.2198, -48.2842, -55.3246, 0.83 ) }
    dend_56 { pt3dadd( 48.0079, -48.9687, -55.5975, 0.28 ) }
    dend_56 { pt3dadd( 48.7523, -49.5407, -55.8539, 0.55 ) }
    dend_56 { pt3dadd( 50.5464, -50.8028, -56.3932, 0.28 ) }
    dend_56 { pt3dadd( 51.2069, -51.2237, -56.5404, 0.83 ) }
    dend_56 { pt3dadd( 52.4751, -52.0228, -56.7594, 0.28 ) }
    dend_56 { pt3dadd( 53.1634, -52.4402, -56.8614, 0.55 ) }
    dend_56 { pt3dadd( 54.3189, -53.1189, -56.9946, 0.28 ) }
    dend_56 { pt3dadd( 55.3775, -53.683, -57.0511, 1.38 ) }
    dend_56 { pt3dadd( 57.0655, -54.5009, -57.0601, 0.55 ) }
    dend_56 { pt3dadd( 57.8235, -54.8645, -57.0424, 0.55 ) }
    dend_56 { pt3dadd( 58.6042, -55.2284, -57.0062, 0.83 ) }
    dend_56 { pt3dadd( 59.5305, -55.6438, -56.9406, 0.83 ) }
    dend_56 { pt3dadd( 60.094, -55.9039, -56.8636, 0.28 ) }
    dend_56 { pt3dadd( 60.9303, -56.2998, -56.726, 0.55 ) }
    dend_56 { pt3dadd( 61.9453, -56.8404, -56.5378, 0.28 ) }
    dend_56 { pt3dadd( 62.3086, -57.0559, -56.467, 0.28 ) }
    dend_56 { pt3dadd( 62.859, -57.4312, -56.379, 0.55 ) }
    dend_56 { pt3dadd( 63.8203, -58.1328, -56.2849, 0.28 ) }
    dend_56 { pt3dadd( 64.6222, -58.7141, -56.2965, 0.83 ) }
    dend_56 { pt3dadd( 65.4165, -59.249, -56.3775, 0.28 ) }
    dend_56 { pt3dadd( 65.9073, -59.5532, -56.4897, 0.83 ) }
    dend_56 { pt3dadd( 66.8856, -60.1057, -56.7458, 0.28 ) }
    dend_56 { pt3dadd( 67.2562, -60.2871, -56.8486, 0.83 ) }
    dend_56 { pt3dadd( 68.5741, -60.8626, -57.2212, 0.28 ) }
    dend_56 { pt3dadd( 69.6484, -61.306, -57.5069, 0.83 ) }
    dend_56 { pt3dadd( 70.9421, -61.7906, -57.8519, 0.55 ) }
    dend_56 { pt3dadd( 72.3368, -62.2949, -58.2134, 0.83 ) }
    dend_56 { pt3dadd( 73.4784, -62.7331, -58.4904, 0.83 ) }
    dend_56 { pt3dadd( 74.0891, -62.9914, -58.6223, 0.83 ) }
    dend_56 { pt3dadd( 75.7572, -63.7383, -58.9941, 0.28 ) }
    dend_56 { pt3dadd( 76.5978, -64.1046, -59.1856, 0.28 ) }
    dend_56 { pt3dadd( 77.1369, -64.3207, -59.3218, 0.83 ) }
    dend_56 { pt3dadd( 78.4926, -64.8456, -60.0005, 0.28 ) }
    dend_56 { pt3dadd( 79.1581, -65.1166, -60.4779, 0.83 ) }
    dend_56 { pt3dadd( 80.1281, -65.5311, -61.3629, 0.55 ) }
    dend_56 { pt3dadd( 80.9366, -65.8969, -62.2527, 0.55 ) }
    dend_56 { pt3dadd( 81.8264, -66.3379, -63.3151, 0.83 ) }
    dend_56 { pt3dadd( 83.8922, -67.3227, -65.7485, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_56 { pt3dadd( 84.5749, -67.5911, -66.4648, 0.55 ) }
    dend_56 { pt3dadd( 84.7721, -67.6637, -66.6357, 0.55 ) }
    dend_56 { pt3dadd( 85.1957, -67.843, -66.905, 0.55 ) }
    dend_56 { pt3dadd( 85.9686, -68.2111, -67.3081, 0.83 ) }
    dend_56 { pt3dadd( 87.1897, -68.7648, -67.8032, 0.55 ) }
    dend_56 { pt3dadd( 88.7315, -69.3978, -68.2762, 0.55 ) }
    dend_56 { pt3dadd( 90.0871, -69.9077, -68.7143, 0.28 ) }
    dend_56 { pt3dadd( 91.4533, -70.3829, -69.1604, 1.11 ) }
    dend_56 { pt3dadd( 93.4553, -71.0449, -69.8744, 0.28 ) }
    dend_56 { pt3dadd( 93.8333, -71.1649, -70.0186, 0.28 ) }
    dend_56 { pt3dadd( 94.5423, -71.4065, -70.3038, 0.55 ) }
    dend_56 { pt3dadd( 95.6034, -71.7921, -70.7338, 0.28 ) }
    dend_56 { pt3dadd( 96.6178, -72.1471, -71.1023, 0.83 ) }
    dend_56 { pt3dadd( 98.1863, -72.5927, -71.5939, 0.28 ) }
    dend_56 { pt3dadd( 98.5803, -72.7018, -71.6849, 0.55 ) }
    dend_56 { pt3dadd( 99.1126, -72.854, -71.8034, 0.28 ) }
    dend_56 { pt3dadd( 99.7348, -73.0582, -71.9258, 0.55 ) }
    dend_56 { pt3dadd( 100.894, -73.5164, -72.1095, 0.28 ) }
    dend_56 { pt3dadd( 102.095, -74.0921, -72.2254, 0.83 ) }
    dend_56 { pt3dadd( 102.806, -74.4485, -72.2585, 0.28 ) }
    dend_56 { pt3dadd( 103.589, -74.8596, -72.2764, 0.83 ) }
    dend_56 { pt3dadd( 105.0, -75.6273, -72.2849, 0.28 ) }
    dend_56 { pt3dadd( 105.581, -75.9908, -72.2694, 0.83 ) }
    dend_56 { pt3dadd( 107.234, -77.1467, -72.1728, 0.28 ) }
    dend_56 { pt3dadd( 107.566, -77.4018, -72.1493, 0.55 ) }
    dend_56 { pt3dadd( 109.058, -78.5336, -72.0455, 0.28 ) }
    dend_56 { pt3dadd( 109.472, -78.8597, -72.0854, 0.55 ) }
    dend_56 { pt3dadd( 110.339, -79.5641, -72.3701, 0.28 ) }
    dend_56 { pt3dadd( 110.768, -79.9266, -72.5584, 0.55 ) }
    dend_56 { pt3dadd( 111.594, -80.6866, -73.097, 0.28 ) }
    dend_56 { pt3dadd( 112.113, -81.2051, -73.5283, 0.55 ) }
    dend_56 { pt3dadd( 113.922, -83.1725, -75.7869, 0.28 ) }
    dend_56 { pt3dadd( 114.226, -83.5073, -76.2515, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 33/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 25.9659, -25.8944, -33.0692, 0.55 ) }
    dend_55 { pt3dadd( 28.5203, -26.3953, -37.4309, 0.55 ) }
    dend_55 { pt3dadd( 29.8874, -27.0162, -39.9338, 0.55 ) }
    dend_55 { pt3dadd( 30.763, -27.4046, -41.5557, 0.55 ) }
    dend_55 { pt3dadd( 32.5144, -28.0482, -44.791, 0.55 ) }
    dend_55 { pt3dadd( 33.8389, -28.3425, -47.1141, 0.83 ) }
    dend_55 { pt3dadd( 38.7483, -29.0256, -57.2699, 0.55 ) }
    dend_55 { pt3dadd( 39.914, -29.0177, -60.136, 0.55 ) }
    dend_55 { pt3dadd( 40.6867, -28.9454, -62.2073, 0.55 ) }
    dend_55 { pt3dadd( 41.309, -28.8551, -63.9457, 0.55 ) }
    dend_55 { pt3dadd( 42.4655, -28.6299, -67.0847, 0.55 ) }
    dend_55 { pt3dadd( 45.5494, -27.7477, -74.7109, 1.11 ) }
    dend_55 { pt3dadd( 46.8733, -27.1735, -77.5983, 0.55 ) }
    dend_55 { pt3dadd( 47.7783, -26.7462, -79.8998, 1.11 ) }
    dend_55 { pt3dadd( 49.0993, -26.1599, -83.4507, 0.55 ) }
    dend_55 { pt3dadd( 49.8031, -25.8766, -85.5474, 0.55 ) }
    dend_55 { pt3dadd( 51.4, -25.2996, -90.529, 1.11 ) }
    dend_55 { pt3dadd( 53.0849, -24.7063, -97.4854, 0.55 ) }
    dend_55 { pt3dadd( 54.1706, -24.264, -103.285, 0.28 ) }
    dend_55 { pt3dadd( 54.3963, -24.1252, -104.845, 1.11 ) }
    dend_55 { pt3dadd( 55.4071, -23.2628, -113.273, 0.55 ) }
    dend_55 { pt3dadd( 55.7135, -22.8117, -116.945, 0.83 ) }
    dend_55 { pt3dadd( 56.599, -20.3517, -133.406, 0.28 ) }
    dend_55 { pt3dadd( 56.6385, -20.0405, -135.32, 0.83 ) }
    dend_55 { pt3dadd( 56.646, -19.2633, -139.397, 0.28 ) }
    dend_55 { pt3dadd( 56.5949, -18.705, -141.775, 0.83 ) }
    dend_55 { pt3dadd( 56.3937, -17.527, -145.403, 0.28 ) }
    dend_55 { pt3dadd( 56.2898, -17.0018, -146.663, 0.55 ) }
    dend_55 { pt3dadd( 55.4691, -11.2323, -156.039, 0.28 ) }
    dend_55 { pt3dadd( 55.3253, -10.5417, -157.241, 0.55 ) }
    dend_55 { pt3dadd( 55.0346, -9.43547, -159.182, 0.28 ) }
    dend_55 { pt3dadd( 54.8416, -9.03395, -159.968, 0.55 ) }
    dend_55 { pt3dadd( 54.4732, -8.3819, -161.215, 0.28 ) }
    dend_55 { pt3dadd( 53.8929, -7.48916, -162.937, 0.55 ) }
    dend_55 { pt3dadd( 51.6512, -4.47687, -168.635, 0.28 ) }
    dend_55 { pt3dadd( 50.8896, -3.57313, -170.548, 1.11 ) }
    dend_55 { pt3dadd( 46.5833, 0.971083, -181.341, 0.28 ) }
    dend_55 { pt3dadd( 45.7995, 1.74984, -183.346, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 71/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 15.0751, -2.88155, -16.4577, 0.55 ) }
    dend_53 { pt3dadd( 15.8364, -2.38654, -18.8678, 0.55 ) }
    dend_53 { pt3dadd( 19.3502, -0.829909, -29.5866, 0.55 ) }
    dend_53 { pt3dadd( 20.5608, -0.472246, -33.1464, 0.55 ) }
    dend_53 { pt3dadd( 21.1608, -0.458877, -35.1849, 0.55 ) }
    dend_53 { pt3dadd( 23.0348, -0.696627, -41.8373, 0.83 ) }
    dend_53 { pt3dadd( 24.7232, -1.25872, -48.9668, 0.55 ) }
    dend_53 { pt3dadd( 25.6855, -1.8425, -53.3497, 0.28 ) }
    dend_53 { pt3dadd( 26.1472, -2.23982, -55.7607, 1.11 ) }
    dend_53 { pt3dadd( 28.4573, -4.53718, -68.801, 0.28 ) }
    dend_53 { pt3dadd( 28.8829, -4.96147, -71.238, 0.83 ) }
    dend_53 { pt3dadd( 31.714, -7.58759, -87.2387, 0.55 ) }
    dend_53 { pt3dadd( 32.7263, -8.43116, -92.6227, 0.83 ) }
    dend_53 { pt3dadd( 34.9767, -10.0017, -104.327, 0.28 ) }
    dend_53 { pt3dadd( 35.567, -10.3252, -107.15, 1.38 ) }
    dend_53 { pt3dadd( 37.2635, -10.9296, -114.021, 0.28 ) }
    dend_53 { pt3dadd( 37.5789, -11.0135, -115.155, 0.55 ) }
    dend_53 { pt3dadd( 39.1123, -11.1619, -119.221, 0.28 ) }
    dend_53 { pt3dadd( 39.3795, -11.1749, -119.802, 0.28 ) }
    dend_53 { pt3dadd( 40.3963, -11.3035, -121.419, 0.28 ) }
    dend_53 { pt3dadd( 40.7497, -11.4427, -122.039, 0.55 ) }
    dend_53 { pt3dadd( 41.3733, -11.7968, -123.168, 0.28 ) }
    dend_53 { pt3dadd( 41.7263, -12.0112, -123.772, 0.55 ) }
    dend_53 { pt3dadd( 44.1788, -13.5466, -127.82, 0.28 ) }
    dend_53 { pt3dadd( 45.0977, -14.1249, -129.356, 1.11 ) }
    dend_53 { pt3dadd( 50.9043, -17.8105, -139.381, 0.28 ) }
    dend_53 { pt3dadd( 51.3024, -18.0655, -140.084, 0.55 ) }
    dend_53 { pt3dadd( 55.208, -20.5735, -147.075, 0.28 ) }
    dend_53 { pt3dadd( 55.5346, -20.7941, -147.672, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 0/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 15.0751, -2.88155, -16.4577, 1.38 ) }
    dend_50 { pt3dadd( 15.0177, -1.87273, -17.4601, 1.38 ) }
    dend_50 { pt3dadd( 14.7764, 2.36969, -21.6753, 0.83 ) }
    dend_50 { pt3dadd( 14.6407, 4.75517, -24.0455, 0.83 ) }
    dend_50 { pt3dadd( 14.5217, 6.84698, -26.1239, 0.83 ) }
    dend_50 { pt3dadd( 14.409, 8.82767, -28.0918, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 6/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.29814, 15.3471, 4.76949, 0.55 ) }
    dend_44 { pt3dadd( -2.64206, 17.8067, 6.53929, 0.55 ) }
    dend_44 { pt3dadd( -2.32926, 18.9794, 7.38309, 0.55 ) }
    dend_44 { pt3dadd( -1.9087, 20.5561, 8.51756, 0.55 ) }
    dend_44 { pt3dadd( -1.16645, 23.3388, 10.5198, 0.55 ) }
    dend_44 { pt3dadd( -0.217888, 26.8949, 13.0786, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 12/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -3.29814, 15.3471, 4.76949, 0.55 ) }
    dend_43 { pt3dadd( -3.65482, 17.7527, 4.79407, 0.55 ) }
    dend_43 { pt3dadd( -3.79853, 18.5751, 4.78694, 0.83 ) }
    dend_43 { pt3dadd( -4.29475, 21.0739, 4.73597, 0.55 ) }
    dend_43 { pt3dadd( -4.73652, 23.1971, 4.6824, 0.83 ) }
    dend_43 { pt3dadd( -5.20219, 25.2835, 4.66926, 0.55 ) }
    dend_43 { pt3dadd( -5.77233, 27.8806, 4.68989, 0.55 ) }
    dend_43 { pt3dadd( -6.10089, 29.3073, 4.71047, 0.83 ) }
    dend_43 { pt3dadd( -6.70198, 31.7885, 4.87241, 0.55 ) }
    dend_43 { pt3dadd( -7.00402, 32.9664, 5.0036, 0.83 ) }
    dend_43 { pt3dadd( -7.58735, 34.9747, 5.31214, 0.55 ) }
    dend_43 { pt3dadd( -7.91154, 36.1257, 5.54503, 0.55 ) }
    dend_43 { pt3dadd( -8.55729, 38.5466, 6.08981, 0.55 ) }
    dend_43 { pt3dadd( -9.01884, 40.5394, 6.50329, 0.83 ) }
    dend_43 { pt3dadd( -9.33335, 41.9899, 6.77637, 0.55 ) }
    dend_43 { pt3dadd( -9.63839, 43.4622, 7.00085, 0.83 ) }
    dend_43 { pt3dadd( -10.2356, 46.3894, 7.31694, 0.83 ) }
    dend_43 { pt3dadd( -10.7511, 48.6498, 7.50662, 0.55 ) }
    dend_43 { pt3dadd( -11.4155, 51.5432, 7.67242, 0.83 ) }
    dend_43 { pt3dadd( -11.85, 53.4314, 7.69708, 0.55 ) }
    dend_43 { pt3dadd( -12.3675, 55.5296, 7.69971, 0.28 ) }
    dend_43 { pt3dadd( -12.8487, 57.4574, 7.69436, 0.55 ) }
    dend_43 { pt3dadd( -13.2307, 59.0461, 7.68477, 0.28 ) }
    dend_43 { pt3dadd( -13.434, 59.9135, 7.68421, 0.55 ) }
    dend_43 { pt3dadd( -13.6952, 60.9431, 7.67375, 0.28 ) }
    dend_43 { pt3dadd( -13.9774, 62.4123, 7.64808, 0.55 ) }
    dend_43 { pt3dadd( -14.1596, 64.0303, 7.65682, 0.28 ) }
    dend_43 { pt3dadd( -14.2079, 64.7008, 7.66746, 0.55 ) }
    dend_43 { pt3dadd( -14.2864, 66.8008, 7.7424, 0.28 ) }
    dend_43 { pt3dadd( -14.3261, 68.6237, 7.84759, 0.55 ) }
    dend_43 { pt3dadd( -14.3712, 71.6038, 8.0681, 0.55 ) }
    dend_43 { pt3dadd( -14.3986, 73.7754, 8.22476, 0.28 ) }
    dend_43 { pt3dadd( -14.3911, 75.767, 8.37734, 0.28 ) }
    dend_43 { pt3dadd( -14.2819, 78.7615, 8.65238, 1.11 ) }
    dend_43 { pt3dadd( -14.1549, 80.8351, 8.90785, 0.55 ) }
    dend_43 { pt3dadd( -14.0785, 82.0514, 9.08797, 0.55 ) }
    dend_43 { pt3dadd( -14.0541, 83.2469, 9.33126, 0.83 ) }
    dend_43 { pt3dadd( -14.0886, 85.0795, 9.74331, 0.28 ) }
    dend_43 { pt3dadd( -14.1351, 85.9705, 10.0052, 0.55 ) }
    dend_43 { pt3dadd( -14.2711, 87.238, 10.4701, 0.55 ) }
    dend_43 { pt3dadd( -14.4633, 88.6186, 11.0335, 0.55 ) }
    dend_43 { pt3dadd( -14.9465, 91.6536, 12.3886, 0.28 ) }
    dend_43 { pt3dadd( -15.2227, 93.0653, 13.0711, 0.55 ) }
    dend_43 { pt3dadd( -15.7456, 95.0719, 14.1001, 0.28 ) }
    dend_43 { pt3dadd( -16.0387, 96.0812, 14.6296, 0.55 ) }
    dend_43 { pt3dadd( -18.2308, 106.564, 14.0292, 0.55 ) }
    dend_43 { pt3dadd( -18.9436, 117.267, 13.9333, 0.55 ) }
    dend_43 { pt3dadd( -20.699, 127.829, 14.5802, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 60/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 10.6885, 1.89194, -6.33051, 0.55 ) }
    dend_40 { pt3dadd( 12.7307, 3.70894, -4.96385, 0.55 ) }
    dend_40 { pt3dadd( 14.5346, 5.18399, -3.89712, 0.55 ) }
    dend_40 { pt3dadd( 15.6082, 5.96282, -3.36878, 0.83 ) }
    dend_40 { pt3dadd( 18.2229, 7.63944, -2.33094, 0.55 ) }
    dend_40 { pt3dadd( 20.4925, 9.06832, -1.77202, 0.83 ) }
    dend_40 { pt3dadd( 23.2373, 10.8775, -1.35469, 0.55 ) }
    dend_40 { pt3dadd( 24.5903, 11.7847, -1.28684, 0.55 ) }
    dend_40 { pt3dadd( 27.0802, 13.4168, -1.4169, 0.55 ) }
    dend_40 { pt3dadd( 30.4525, 15.7351, -1.80895, 0.55 ) }
    dend_40 { pt3dadd( 34.6678, 18.8558, -2.55864, 0.55 ) }
    dend_40 { pt3dadd( 36.4727, 20.3312, -2.9159, 0.83 ) }
    dend_40 { pt3dadd( 38.7989, 22.3484, -3.32512, 0.55 ) }
    dend_40 { pt3dadd( 40.7969, 24.1054, -3.57869, 0.83 ) }
    dend_40 { pt3dadd( 42.8489, 26.003, -3.79733, 0.55 ) }
    dend_40 { pt3dadd( 43.7189, 26.7913, -3.84845, 0.55 ) }
    dend_40 { pt3dadd( 45.537, 28.2899, -3.8631, 0.83 ) }
    dend_40 { pt3dadd( 47.1322, 29.5391, -4.03897, 0.28 ) }
    dend_40 { pt3dadd( 48.1477, 30.4222, -4.30131, 0.55 ) }
    dend_40 { pt3dadd( 49.9584, 32.1642, -4.9581, 0.28 ) }
    dend_40 { pt3dadd( 51.1154, 33.3779, -5.47261, 0.55 ) }
    dend_40 { pt3dadd( 52.6152, 35.0171, -6.20679, 0.28 ) }
    dend_40 { pt3dadd( 53.4952, 36.0036, -6.62937, 0.55 ) }
    dend_40 { pt3dadd( 55.7507, 38.594, -7.68787, 0.28 ) }
    dend_40 { pt3dadd( 56.3791, 39.3406, -7.95536, 0.83 ) }
    dend_40 { pt3dadd( 58.6013, 41.9654, -8.71977, 0.28 ) }
    dend_40 { pt3dadd( 59.1077, 42.5768, -8.88434, 0.55 ) }
    dend_40 { pt3dadd( 61.6513, 45.5221, -9.5685, 0.28 ) }
    dend_40 { pt3dadd( 62.3562, 46.2437, -9.73148, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 89/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 10.6885, 1.89194, -6.33051, 0.55 ) }
    dend_35 { pt3dadd( 12.5883, 0.189577, -5.48222, 0.55 ) }
    dend_35 { pt3dadd( 13.554, -0.675755, -5.05102, 0.83 ) }
    dend_35 { pt3dadd( 14.6769, -1.68199, -4.54961, 0.83 ) }
    dend_35 { pt3dadd( 17.133, -3.88283, -3.45293, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.9026, -10.0312, 13.8451, 0.83 ) }
    dend_33 { pt3dadd( -12.0593, -8.66849, 14.5672, 0.83 ) }
    dend_33 { pt3dadd( -13.076, -7.45204, 15.2286, 0.83 ) }
    dend_33 { pt3dadd( -13.6243, -6.81234, 15.5917, 0.83 ) }
    dend_33 { pt3dadd( -15.1073, -5.18392, 16.5774, 0.55 ) }
    dend_33 { pt3dadd( -16.3243, -3.86453, 17.3938, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_33 { pt3dadd( -17.3059, -2.75411, 18.0865, 0.55 ) }
    dend_33 { pt3dadd( -18.3282, -1.6567, 18.8521, 0.55 ) }
    dend_33 { pt3dadd( -19.1187, -0.785839, 19.5179, 0.83 ) }
    dend_33 { pt3dadd( -19.8074, 0.100307, 20.2222, 0.55 ) }
    dend_33 { pt3dadd( -20.1927, 0.722193, 20.7448, 0.55 ) }
    dend_33 { pt3dadd( -20.7732, 1.84684, 21.7257, 0.55 ) }
    dend_33 { pt3dadd( -21.4015, 3.19938, 22.9141, 0.55 ) }
    dend_33 { pt3dadd( -22.1853, 4.72089, 24.3556, 0.83 ) }
    dend_33 { pt3dadd( -22.8133, 5.7674, 25.5425, 0.83 ) }
    dend_33 { pt3dadd( -23.4417, 6.71458, 26.7527, 0.55 ) }
    dend_33 { pt3dadd( -23.6099, 6.93188, 27.0666, 0.55 ) }
    dend_33 { pt3dadd( -24.4025, 7.84908, 28.4947, 0.55 ) }
    dend_33 { pt3dadd( -25.3985, 8.94462, 30.2298, 0.55 ) }
    dend_33 { pt3dadd( -26.7869, 10.141, 32.4126, 0.83 ) }
    dend_33 { pt3dadd( -27.5168, 10.6047, 33.4228, 0.28 ) }
    dend_33 { pt3dadd( -27.9215, 10.7854, 33.9174, 0.55 ) }
    dend_33 { pt3dadd( -28.9052, 11.018, 35.0079, 0.28 ) }
    dend_33 { pt3dadd( -29.5093, 10.9811, 35.5605, 0.55 ) }
    dend_33 { pt3dadd( -30.7325, 10.6527, 36.3771, 0.28 ) }
    dend_33 { pt3dadd( -32.1039, 10.0947, 37.04, 0.55 ) }
    dend_33 { pt3dadd( -33.1401, 9.57555, 37.494, 0.55 ) }
    dend_33 { pt3dadd( -34.4662, 8.87889, 38.0172, 0.55 ) }
    dend_33 { pt3dadd( -35.906, 8.06837, 38.5292, 0.28 ) }
    dend_33 { pt3dadd( -36.4487, 7.73957, 38.7001, 0.55 ) }
    dend_33 { pt3dadd( -38.5114, 6.4143, 39.2541, 0.28 ) }
    dend_33 { pt3dadd( -39.6499, 5.64339, 39.5312, 0.55 ) }
    dend_33 { pt3dadd( -41.0044, 4.62494, 39.8121, 0.55 ) }
    dend_33 { pt3dadd( -42.3492, 3.54525, 40.0375, 0.55 ) }
    dend_33 { pt3dadd( -43.8883, 2.2317, 40.2354, 0.55 ) }
    dend_33 { pt3dadd( -44.7159, 1.50866, 40.3183, 0.83 ) }
    dend_33 { pt3dadd( -46.5383, -0.0379509, 40.4679, 0.55 ) }
    dend_33 { pt3dadd( -48.2089, -1.33937, 40.6343, 0.28 ) }
    dend_33 { pt3dadd( -49.8994, -2.51451, 40.8535, 0.55 ) }
    dend_33 { pt3dadd( -51.6912, -3.5178, 41.1432, 0.55 ) }
    dend_33 { pt3dadd( -52.9743, -4.055, 41.4044, 0.55 ) }
    dend_33 { pt3dadd( -55.2436, -4.84175, 41.9027, 0.28 ) }
    dend_33 { pt3dadd( -56.1232, -5.06725, 42.1101, 0.83 ) }
    dend_33 { pt3dadd( -57.5875, -5.30177, 42.4843, 0.55 ) }
    dend_33 { pt3dadd( -58.9161, -5.41934, 42.8711, 0.55 ) }
    dend_33 { pt3dadd( -60.3502, -5.40273, 43.3634, 0.83 ) }
    dend_33 { pt3dadd( -65.9336, -4.08791, 46.5239, 0.83 ) }
    dend_33 { pt3dadd( -72.0119, -3.14212, 48.7715, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 42/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -10.9026, -10.0312, 13.8451, 0.55 ) }
    dend_30 { pt3dadd( -12.0507, -11.5498, 13.7706, 0.55 ) }
    dend_30 { pt3dadd( -13.5031, -13.4414, 13.7538, 0.55 ) }
    dend_30 { pt3dadd( -15.2302, -15.5943, 13.7927, 0.55 ) }
    dend_30 { pt3dadd( -16.5886, -17.1222, 13.8549, 0.83 ) }
    dend_30 { pt3dadd( -17.9089, -18.5089, 13.9413, 0.83 ) }
    dend_30 { pt3dadd( -20.2245, -20.8329, 14.1153, 0.83 ) }
    dend_30 { pt3dadd( -21.6089, -22.0523, 14.2635, 0.83 ) }
    dend_30 { pt3dadd( -23.0934, -23.1209, 14.4857, 0.55 ) }
    dend_30 { pt3dadd( -24.8537, -24.3298, 14.7907, 0.55 ) }
    dend_30 { pt3dadd( -26.2576, -25.2189, 15.0651, 0.55 ) }
    dend_30 { pt3dadd( -27.401, -25.8101, 15.3025, 0.83 ) }
    dend_30 { pt3dadd( -28.9668, -26.4005, 15.6617, 0.55 ) }
    dend_30 { pt3dadd( -31.2227, -27.0992, 16.1405, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 56/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.87185, -9.44293, -6.38487, 0.83 ) }
    dend_20 { pt3dadd( -5.04492, -10.5247, -7.35625, 0.83 ) }
    dend_20 { pt3dadd( -6.64184, -11.3196, -8.07008, 0.83 ) }
    dend_20 { pt3dadd( -8.81141, -12.3996, -9.03989, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 60/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -2.87185, -9.44293, -6.38487, 1.66 ) }
    dend_1 { pt3dadd( -2.89645, -11.8603, -6.18771, 1.66 ) }
    dend_1 { pt3dadd( -2.92145, -14.3173, -5.98731, 1.66 ) }
    dend_1 { pt3dadd( -2.94648, -16.777, -5.7867, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 64/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 24.8699, -27.2591, -4.0979, 0.55 ) }
    axon_1 { pt3dadd( 34.9581, -38.36, -4.0979, 0.55 ) }
    axon_1 { pt3dadd( 45.0463, -49.4608, -4.0979, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 67/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 14.409, 8.82767, -28.0918, 0.55 ) }
    dend_52 { pt3dadd( 17.3753, 10.0478, -28.0872, 0.55 ) }
    dend_52 { pt3dadd( 18.1182, 10.2873, -28.1469, 0.83 ) }
    dend_52 { pt3dadd( 19.6149, 10.6983, -28.3079, 0.28 ) }
    dend_52 { pt3dadd( 20.9812, 11.042, -28.438, 0.55 ) }
    dend_52 { pt3dadd( 25.1024, 12.1044, -28.6937, 0.28 ) }
    dend_52 { pt3dadd( 26.509, 12.4623, -28.694, 0.55 ) }
    dend_52 { pt3dadd( 29.0854, 12.9605, -28.6235, 0.28 ) }
    dend_52 { pt3dadd( 30.4932, 13.1252, -28.5521, 0.55 ) }
    dend_52 { pt3dadd( 33.375, 13.2563, -28.3458, 0.28 ) }
    dend_52 { pt3dadd( 35.0491, 13.2408, -28.1924, 0.55 ) }
    dend_52 { pt3dadd( 37.6154, 12.9933, -27.9284, 0.55 ) }
    dend_52 { pt3dadd( 40.3446, 12.6081, -27.632, 0.28 ) }
    dend_52 { pt3dadd( 43.9808, 12.0042, -27.1748, 0.28 ) }
    dend_52 { pt3dadd( 45.5169, 11.7004, -27.0315, 0.28 ) }
    dend_52 { pt3dadd( 46.2629, 11.5338, -26.9825, 0.55 ) }
    dend_52 { pt3dadd( 49.3239, 10.7758, -26.8896, 0.28 ) }
    dend_52 { pt3dadd( 49.8092, 10.656, -26.8886, 0.55 ) }
    dend_52 { pt3dadd( 52.5606, 10.0708, -26.7462, 0.28 ) }
    dend_52 { pt3dadd( 53.9504, 9.93604, -26.6693, 0.28 ) }
    dend_52 { pt3dadd( 55.1351, 9.87118, -26.5882, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 88/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 14.409, 8.82767, -28.0918, 0.55 ) }
    dend_51 { pt3dadd( 14.1235, 11.7994, -28.6595, 0.55 ) }
    dend_51 { pt3dadd( 14.0349, 13.7788, -29.3065, 0.28 ) }
    dend_51 { pt3dadd( 14.0188, 15.1287, -29.8061, 0.55 ) }
    dend_51 { pt3dadd( 13.9949, 17.2578, -30.6072, 0.28 ) }
    dend_51 { pt3dadd( 13.9482, 18.815, -31.2525, 0.55 ) }
    dend_51 { pt3dadd( 13.6938, 22.2693, -33.1438, 0.55 ) }
    dend_51 { pt3dadd( 13.5039, 23.9462, -34.3328, 0.55 ) }
    dend_51 { pt3dadd( 13.4641, 24.2505, -34.6148, 0.83 ) }
    dend_51 { pt3dadd( 13.2914, 25.4428, -35.8435, 0.55 ) }
    dend_51 { pt3dadd( 13.0532, 27.1938, -37.73, 1.11 ) }
    dend_51 { pt3dadd( 12.591, 30.574, -41.2997, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_51 { pt3dadd( 12.454, 31.5528, -42.2891, 0.83 ) }
    dend_51 { pt3dadd( 11.9383, 35.7248, -46.4984, 0.28 ) }
    dend_51 { pt3dadd( 11.8061, 37.0575, -47.7759, 0.83 ) }
    dend_51 { pt3dadd( 11.6461, 40.2066, -50.602, 0.28 ) }
    dend_51 { pt3dadd( 11.6502, 40.5856, -50.8829, 0.55 ) }
    dend_51 { pt3dadd( 11.7634, 42.3735, -51.89, 0.28 ) }
    dend_51 { pt3dadd( 11.8213, 43.2911, -52.2975, 0.55 ) }
    dend_51 { pt3dadd( 11.883, 44.673, -52.7091, 0.28 ) }
    dend_51 { pt3dadd( 11.9321, 45.8499, -53.0162, 0.83 ) }
    dend_51 { pt3dadd( 12.0835, 50.1719, -53.9225, 0.28 ) }
    dend_51 { pt3dadd( 12.1202, 51.5143, -54.2209, 0.83 ) }
    dend_51 { pt3dadd( 12.166, 53.2871, -54.655, 0.28 ) }
    dend_51 { pt3dadd( 12.1954, 54.7526, -55.0544, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 13/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -0.217888, 26.8949, 13.0786, 0.55 ) }
    dend_46 { pt3dadd( 1.28558, 27.3704, 13.2396, 0.55 ) }
    dend_46 { pt3dadd( 2.63936, 27.7105, 13.3331, 0.83 ) }
    dend_46 { pt3dadd( 4.53336, 28.2438, 13.4967, 0.55 ) }
    dend_46 { pt3dadd( 6.31592, 28.8692, 13.6596, 0.55 ) }
    dend_46 { pt3dadd( 8.52258, 29.7156, 13.9154, 0.55 ) }
    dend_46 { pt3dadd( 10.6335, 30.6256, 14.159, 0.55 ) }
    dend_46 { pt3dadd( 12.7942, 31.6669, 14.4023, 0.55 ) }
    dend_46 { pt3dadd( 14.6017, 32.5916, 14.6155, 0.55 ) }
    dend_46 { pt3dadd( 16.5838, 33.6342, 14.8309, 0.83 ) }
    dend_46 { pt3dadd( 18.9279, 35.0038, 15.0303, 0.55 ) }
    dend_46 { pt3dadd( 20.9043, 36.3063, 15.2253, 0.55 ) }
    dend_46 { pt3dadd( 21.5755, 36.7941, 15.3152, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -0.217888, 26.8949, 13.0786, 0.55 ) }
    dend_45 { pt3dadd( -0.232393, 29.0628, 13.0558, 0.55 ) }
    dend_45 { pt3dadd( -0.29808, 30.6028, 13.045, 0.55 ) }
    dend_45 { pt3dadd( -0.488549, 32.8981, 13.0481, 0.55 ) }
    dend_45 { pt3dadd( -0.568268, 34.4284, 13.0497, 0.83 ) }
    dend_45 { pt3dadd( -0.640945, 35.7169, 13.066, 0.83 ) }
    dend_45 { pt3dadd( -0.76048, 38.5112, 12.9045, 0.55 ) }
    dend_45 { pt3dadd( -0.795587, 39.3057, 12.8119, 0.83 ) }
    dend_45 { pt3dadd( -0.866289, 41.378, 12.4864, 0.55 ) }
    dend_45 { pt3dadd( -0.907981, 44.511, 11.9222, 0.55 ) }
    dend_45 { pt3dadd( -0.895999, 46.2316, 11.5887, 0.83 ) }
    dend_45 { pt3dadd( -0.841469, 50.0073, 10.8514, 0.55 ) }
    dend_45 { pt3dadd( -0.834826, 51.5066, 10.6025, 0.55 ) }
    dend_45 { pt3dadd( -0.843629, 52.3541, 10.4976, 0.83 ) }
    dend_45 { pt3dadd( -0.921008, 53.6333, 10.4032, 0.55 ) }
    dend_45 { pt3dadd( -1.06808, 54.6663, 10.4109, 0.55 ) }
    dend_45 { pt3dadd( -1.3062, 56.2084, 10.5506, 0.83 ) }
    dend_45 { pt3dadd( -2.03632, 59.4867, 11.1083, 0.28 ) }
    dend_45 { pt3dadd( -2.25622, 60.2777, 11.2344, 0.83 ) }
    dend_45 { pt3dadd( -2.63168, 61.3462, 11.3516, 0.55 ) }
    dend_45 { pt3dadd( -3.07095, 62.3455, 11.4175, 0.83 ) }
    dend_45 { pt3dadd( -4.18287, 64.6608, 11.5092, 0.55 ) }
    dend_45 { pt3dadd( -5.05489, 66.2917, 11.4591, 0.55 ) }
    dend_45 { pt3dadd( -5.71132, 67.3812, 11.3457, 0.83 ) }
    dend_45 { pt3dadd( -6.7447, 69.0099, 11.0186, 0.55 ) }
    dend_45 { pt3dadd( -7.33006, 69.8853, 10.7733, 0.55 ) }
    dend_45 { pt3dadd( -8.21597, 71.0956, 10.2833, 0.83 ) }
    dend_45 { pt3dadd( -9.24088, 72.3555, 9.66347, 0.28 ) }
    dend_45 { pt3dadd( -9.5641, 72.7735, 9.45026, 0.55 ) }
    dend_45 { pt3dadd( -10.7256, 74.2173, 8.78447, 0.28 ) }
    dend_45 { pt3dadd( -11.2876, 74.9169, 8.54493, 0.55 ) }
    dend_45 { pt3dadd( -12.5097, 76.3732, 8.15912, 0.28 ) }
    dend_45 { pt3dadd( -13.3727, 77.3525, 7.95739, 0.55 ) }
    dend_45 { pt3dadd( -14.9807, 79.1677, 7.82211, 0.28 ) }
    dend_45 { pt3dadd( -16.2807, 80.5996, 7.9168, 0.83 ) }
    dend_45 { pt3dadd( -17.6148, 82.0331, 8.24775, 0.28 ) }
    dend_45 { pt3dadd( -18.1196, 82.5979, 8.56047, 0.55 ) }
    dend_45 { pt3dadd( -19.0609, 83.6867, 9.49393, 0.28 ) }
    dend_45 { pt3dadd( -19.8035, 84.6781, 10.4887, 0.55 ) }
    dend_45 { pt3dadd( -20.7774, 86.1875, 12.1661, 0.28 ) }
    dend_45 { pt3dadd( -21.0645, 86.6706, 12.7445, 0.55 ) }
    dend_45 { pt3dadd( -22.778, 89.6801, 16.6912, 0.28 ) }
    dend_45 { pt3dadd( -22.8505, 89.8195, 16.8821, 0.55 ) }
    dend_45 { pt3dadd( -23.5559, 91.3737, 19.1409, 0.28 ) }
    dend_45 { pt3dadd( -23.7676, 91.9716, 19.924, 0.55 ) }
    dend_45 { pt3dadd( -26.4101, 100.63, 21.2528, 0.55 ) }
    dend_45 { pt3dadd( -29.8537, 109.098, 21.6449, 0.55 ) }
    dend_45 { pt3dadd( -33.9151, 117.295, 21.7732, 0.55 ) }
    dend_45 { pt3dadd( -37.1865, 125.739, 20.464, 0.55 ) }
    dend_45 { pt3dadd( -39.1079, 134.678, 20.8141, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 17.133, -3.88283, -3.45293, 0.55 ) }
    dend_37 { pt3dadd( 21.1963, -6.38635, -2.38813, 0.55 ) }
    dend_37 { pt3dadd( 24.1005, -8.17577, -1.62706, 0.55 ) }
    dend_37 { pt3dadd( 26.4179, -9.6036, -1.01978, 0.55 ) }
    dend_37 { pt3dadd( 27.6357, -10.354, -0.700644, 0.55 ) }
    dend_37 { pt3dadd( 31.1803, -12.5379, 0.228234, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 82/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 17.133, -3.88283, -3.45293, 0.55 ) }
    dend_36 { pt3dadd( 19.0116, -4.67325, -3.61137, 0.55 ) }
    dend_36 { pt3dadd( 20.782, -5.33756, -3.71831, 0.55 ) }
    dend_36 { pt3dadd( 22.013, -5.81102, -3.76173, 0.83 ) }
    dend_36 { pt3dadd( 24.4917, -6.77411, -3.79742, 0.55 ) }
    dend_36 { pt3dadd( 26.2457, -7.4867, -3.81786, 0.83 ) }
    dend_36 { pt3dadd( 28.3804, -8.28908, -3.81628, 0.28 ) }
    dend_36 { pt3dadd( 29.5965, -8.65928, -3.89146, 0.55 ) }
    dend_36 { pt3dadd( 32.4941, -9.4029, -4.22907, 0.28 ) }
    dend_36 { pt3dadd( 34.6823, -9.72343, -4.80381, 0.55 ) }
    dend_36 { pt3dadd( 36.5246, -9.86688, -5.50811, 0.55 ) }
    dend_36 { pt3dadd( 39.2173, -9.99598, -6.73371, 0.55 ) }
    dend_36 { pt3dadd( 43.4669, -10.0261, -8.86195, 0.28 ) }
    dend_36 { pt3dadd( 45.7358, -9.96288, -10.0231, 0.83 ) }
    dend_36 { pt3dadd( 51.5949, -9.47625, -12.9846, 0.55 ) }
    dend_36 { pt3dadd( 53.7768, -9.22001, -13.9864, 0.55 ) }
    dend_36 { pt3dadd( 56.2329, -8.86843, -14.9385, 0.83 ) }
    dend_36 { pt3dadd( 57.4837, -8.69808, -15.296, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 60.2629, -8.30678, -15.6195, 0.28 ) }
    dend_36 { pt3dadd( 62.3264, -7.94817, -15.7099, 0.83 ) }
    dend_36 { pt3dadd( 64.7079, -7.4903, -15.5468, 0.28 ) }
    dend_36 { pt3dadd( 66.0573, -7.12753, -15.5063, 0.55 ) }
    dend_36 { pt3dadd( 68.1464, -6.49723, -15.5648, 0.28 ) }
    dend_36 { pt3dadd( 69.4657, -6.07858, -15.7365, 0.83 ) }
    dend_36 { pt3dadd( 71.9823, -5.19804, -16.3251, 0.28 ) }
    dend_36 { pt3dadd( 72.7772, -4.90205, -16.6437, 0.55 ) }
    dend_36 { pt3dadd( 74.846, -4.08304, -17.6854, 0.28 ) }
    dend_36 { pt3dadd( 75.9724, -3.59826, -18.3443, 0.83 ) }
    dend_36 { pt3dadd( 78.6885, -2.34987, -20.0503, 0.28 ) }
    dend_36 { pt3dadd( 79.8152, -1.82977, -20.776, 0.83 ) }
    dend_36 { pt3dadd( 84.0441, 0.126823, -23.4698, 0.28 ) }
    dend_36 { pt3dadd( 84.385, 0.284154, -23.6933, 0.55 ) }
    dend_36 { pt3dadd( 88.9502, 2.44228, -26.7458, 0.28 ) }
    dend_36 { pt3dadd( 89.5252, 2.73598, -27.1513, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 16/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -31.2227, -27.0992, 16.1405, 0.55 ) }
    dend_32 { pt3dadd( -35.7875, -27.1485, 17.6804, 0.55 ) }
    dend_32 { pt3dadd( -38.7117, -27.1859, 18.6939, 0.55 ) }
    dend_32 { pt3dadd( -40.0117, -27.2344, 19.1461, 0.55 ) }
    dend_32 { pt3dadd( -44.7561, -27.3587, 20.7412, 0.55 ) }
    dend_32 { pt3dadd( -46.4588, -27.447, 21.2774, 0.55 ) }
    dend_32 { pt3dadd( -48.5373, -27.6116, 21.907, 0.83 ) }
    dend_32 { pt3dadd( -51.9306, -28.0235, 22.8062, 0.55 ) }
    dend_32 { pt3dadd( -53.2871, -28.2457, 23.1528, 0.55 ) }
    dend_32 { pt3dadd( -55.81, -28.7342, 23.8031, 0.55 ) }
    dend_32 { pt3dadd( -58.2463, -29.1908, 24.3745, 0.55 ) }
    dend_32 { pt3dadd( -60.4668, -29.5076, 24.7967, 0.55 ) }
    dend_32 { pt3dadd( -62.2733, -29.7429, 25.0638, 0.55 ) }
    dend_32 { pt3dadd( -64.8899, -29.9627, 25.3831, 0.55 ) }
    dend_32 { pt3dadd( -67.0107, -30.0744, 25.5852, 0.83 ) }
    dend_32 { pt3dadd( -71.0089, -30.1757, 26.093, 0.55 ) }
    dend_32 { pt3dadd( -74.1768, -30.1608, 26.5102, 0.55 ) }
    dend_32 { pt3dadd( -76.1317, -30.0957, 26.7672, 0.55 ) }
    dend_32 { pt3dadd( -78.9306, -29.9397, 27.0463, 0.55 ) }
    dend_32 { pt3dadd( -82.8571, -29.6116, 27.3428, 0.83 ) }
    dend_32 { pt3dadd( -86.5622, -29.1939, 27.532, 0.55 ) }
    dend_32 { pt3dadd( -89.53, -28.8361, 27.6626, 0.55 ) }
    dend_32 { pt3dadd( -93.5766, -28.2495, 27.7928, 0.55 ) }
    dend_32 { pt3dadd( -96.9659, -27.5669, 27.8239, 0.55 ) }
    dend_32 { pt3dadd( -98.9539, -27.049, 27.7988, 0.83 ) }
    dend_32 { pt3dadd( -101.3, -26.2435, 27.7452, 0.55 ) }
    dend_32 { pt3dadd( -102.591, -25.741, 27.6843, 0.55 ) }
    dend_32 { pt3dadd( -104.62, -24.758, 27.7667, 0.83 ) }
    dend_32 { pt3dadd( -106.39, -23.8683, 28.0037, 0.83 ) }
    dend_32 { pt3dadd( -108.496, -22.7447, 28.4726, 0.28 ) }
    dend_32 { pt3dadd( -109.284, -22.306, 28.6822, 0.28 ) }
    dend_32 { pt3dadd( -110.859, -21.4392, 29.1768, 0.55 ) }
    dend_32 { pt3dadd( -114.186, -19.4692, 30.3374, 0.28 ) }
    dend_32 { pt3dadd( -115.469, -18.7027, 30.8651, 0.83 ) }
    dend_32 { pt3dadd( -126.567, -18.9791, 31.9004, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 51/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -31.2227, -27.0992, 16.1405, 0.83 ) }
    dend_31 { pt3dadd( -33.2492, -29.8098, 16.8221, 0.83 ) }
    dend_31 { pt3dadd( -34.5908, -31.4888, 17.2202, 0.83 ) }
    dend_31 { pt3dadd( -36.8282, -34.4029, 17.7558, 0.55 ) }
    dend_31 { pt3dadd( -37.5845, -35.5022, 17.8958, 0.55 ) }
    dend_31 { pt3dadd( -37.8469, -35.9218, 17.9355, 0.83 ) }
    dend_31 { pt3dadd( -38.9449, -37.7427, 18.0814, 0.55 ) }
    dend_31 { pt3dadd( -40.0402, -39.7251, 18.1203, 0.55 ) }
    dend_31 { pt3dadd( -41.28, -42.1021, 18.1171, 0.55 ) }
    dend_31 { pt3dadd( -42.238, -44.1846, 18.0285, 0.55 ) }
    dend_31 { pt3dadd( -43.1211, -46.225, 17.8856, 0.83 ) }
    dend_31 { pt3dadd( -43.8797, -48.0165, 17.6137, 0.83 ) }
    dend_31 { pt3dadd( -44.3429, -49.006, 17.3785, 0.83 ) }
    dend_31 { pt3dadd( -45.2101, -50.6738, 16.8702, 0.83 ) }
    dend_31 { pt3dadd( -45.6556, -51.376, 16.6073, 0.55 ) }
    dend_31 { pt3dadd( -46.2815, -52.2021, 16.2618, 0.83 ) }
    dend_31 { pt3dadd( -48.4568, -54.9599, 14.9485, 0.55 ) }
    dend_31 { pt3dadd( -49.9785, -56.8593, 14.0039, 0.55 ) }
    dend_31 { pt3dadd( -50.9184, -58.0517, 13.4029, 0.83 ) }
    dend_31 { pt3dadd( -51.9025, -59.3117, 12.8037, 0.83 ) }
    dend_31 { pt3dadd( -53.8399, -61.8592, 11.736, 0.83 ) }
    dend_31 { pt3dadd( -55.5247, -64.1205, 10.9001, 0.55 ) }
    dend_31 { pt3dadd( -56.2075, -65.0805, 10.617, 1.11 ) }
    dend_31 { pt3dadd( -57.3114, -66.7925, 10.1697, 0.83 ) }
    dend_31 { pt3dadd( -59.1433, -69.6891, 9.53461, 0.55 ) }
    dend_31 { pt3dadd( -60.1857, -71.3834, 9.27258, 0.55 ) }
    dend_31 { pt3dadd( -60.5754, -72.0262, 9.23008, 0.55 ) }
    dend_31 { pt3dadd( -61.2903, -73.1488, 9.27842, 0.83 ) }
    dend_31 { pt3dadd( -61.8728, -74.0643, 9.4895, 0.83 ) }
    dend_31 { pt3dadd( -63.0703, -75.8946, 10.2565, 0.55 ) }
    dend_31 { pt3dadd( -63.5942, -76.7296, 10.7257, 0.83 ) }
    dend_31 { pt3dadd( -64.2385, -77.7801, 11.3938, 0.55 ) }
    dend_31 { pt3dadd( -64.514, -78.2847, 11.7115, 0.83 ) }
    dend_31 { pt3dadd( -66.2667, -81.7402, 13.7867, 0.55 ) }
    dend_31 { pt3dadd( -66.9864, -83.2153, 14.5894, 0.28 ) }
    dend_31 { pt3dadd( -67.2864, -83.8379, 14.8511, 0.55 ) }
    dend_31 { pt3dadd( -67.9772, -85.1942, 15.2225, 0.28 ) }
    dend_31 { pt3dadd( -68.8677, -86.8772, 15.4654, 0.28 ) }
    dend_31 { pt3dadd( -69.7057, -88.3527, 15.4509, 0.83 ) }
    dend_31 { pt3dadd( -71.3058, -90.8407, 15.0045, 0.28 ) }
    dend_31 { pt3dadd( -72.8525, -93.1673, 14.4681, 0.55 ) }
    dend_31 { pt3dadd( -74.0914, -95.0491, 13.9771, 0.28 ) }
    dend_31 { pt3dadd( -74.2712, -95.3425, 13.9102, 0.55 ) }
    dend_31 { pt3dadd( -75.7559, -97.9836, 13.4583, 0.28 ) }
    dend_31 { pt3dadd( -77.1481, -100.625, 13.0423, 0.55 ) }
    dend_31 { pt3dadd( -77.9703, -102.346, 12.8132, 0.28 ) }
    dend_31 { pt3dadd( -78.6345, -103.909, 12.6916, 0.55 ) }
    dend_31 { pt3dadd( -80.2223, -108.155, 12.3303, 0.28 ) }
    dend_31 { pt3dadd( -81.2298, -111.013, 12.1102, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( -87.9696, -117.943, 12.4539, 0.83 ) }
    dend_31 { pt3dadd( -94.922, -124.669, 12.4487, 0.83 ) }
    dend_31 { pt3dadd( -102.887, -129.99, 11.0998, 0.83 ) }
    dend_31 { pt3dadd( -111.748, -133.82, 11.7159, 0.83 ) }
    dend_31 { pt3dadd( -120.894, -136.955, 12.0115, 0.83 ) }
    dend_31 { pt3dadd( -130.176, -139.626, 12.5409, 0.83 ) }
    dend_31 { pt3dadd( -139.417, -141.02, 15.0366, 0.83 ) }
    dend_31 { pt3dadd( -148.547, -141.362, 18.2151, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -8.81141, -12.3996, -9.03989, 1.11 ) }
    dend_24 { pt3dadd( -8.98542, -15.2115, -10.5151, 1.11 ) }
    dend_24 { pt3dadd( -9.21805, -18.9703, -12.487, 1.11 ) }
    dend_24 { pt3dadd( -9.31259, -20.498, -13.2884, 1.38 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 12/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.81141, -12.3996, -9.03989, 0.55 ) }
    dend_21 { pt3dadd( -10.1941, -12.1082, -9.78991, 0.55 ) }
    dend_21 { pt3dadd( -11.0789, -11.9354, -10.2166, 0.55 ) }
    dend_21 { pt3dadd( -12.2642, -11.7277, -10.7513, 0.83 ) }
    dend_21 { pt3dadd( -14.1566, -11.4174, -11.5564, 0.55 ) }
    dend_21 { pt3dadd( -16.3068, -11.117, -12.4272, 0.83 ) }
    dend_21 { pt3dadd( -17.1263, -10.9984, -12.7237, 0.83 ) }
    dend_21 { pt3dadd( -18.8268, -10.7745, -13.3599, 0.55 ) }
    dend_21 { pt3dadd( -19.5269, -10.6731, -13.6335, 0.83 ) }
    dend_21 { pt3dadd( -20.6374, -10.4629, -14.0805, 0.28 ) }
    dend_21 { pt3dadd( -21.8511, -10.2215, -14.5435, 1.11 ) }
    dend_21 { pt3dadd( -23.8362, -9.86328, -15.3637, 0.55 ) }
    dend_21 { pt3dadd( -25.3579, -9.57107, -16.1853, 0.83 ) }
    dend_21 { pt3dadd( -26.668, -9.27928, -17.0431, 0.28 ) }
    dend_21 { pt3dadd( -27.2759, -9.16999, -17.4315, 0.55 ) }
    dend_21 { pt3dadd( -28.3784, -9.03773, -18.1548, 0.28 ) }
    dend_21 { pt3dadd( -29.708, -8.9885, -19.0308, 0.55 ) }
    dend_21 { pt3dadd( -32.2839, -9.41438, -20.7936, 0.28 ) }
    dend_21 { pt3dadd( -32.4832, -9.48476, -20.9203, 0.55 ) }
    dend_21 { pt3dadd( -34.742, -10.7006, -22.3975, 0.55 ) }
    dend_21 { pt3dadd( -35.6399, -11.2747, -22.9835, 0.28 ) }
    dend_21 { pt3dadd( -36.3571, -11.7838, -23.4533, 0.83 ) }
    dend_21 { pt3dadd( -38.5968, -13.4863, -24.8791, 0.28 ) }
    dend_21 { pt3dadd( -39.526, -14.1983, -25.4632, 0.83 ) }
    dend_21 { pt3dadd( -40.8912, -15.1702, -26.4497, 0.55 ) }
    dend_21 { pt3dadd( -41.6514, -15.6861, -27.2791, 0.55 ) }
    dend_21 { pt3dadd( -42.4874, -16.1578, -28.2345, 0.83 ) }
    dend_21 { pt3dadd( -43.389, -16.5768, -29.3196, 0.28 ) }
    dend_21 { pt3dadd( -43.9763, -16.7713, -30.0735, 0.55 ) }
    dend_21 { pt3dadd( -45.0285, -17.073, -31.5877, 0.55 ) }
    dend_21 { pt3dadd( -47.6281, -17.8484, -35.9536, 0.28 ) }
    dend_21 { pt3dadd( -48.4815, -18.1762, -37.6842, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 44/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.94648, -16.777, -5.7867, 1.11 ) }
    dend_11 { pt3dadd( -2.93315, -19.9101, -4.93391, 1.11 ) }
    dend_11 { pt3dadd( -2.92474, -21.8867, -4.39591, 1.11 ) }
    dend_11 { pt3dadd( -2.91102, -25.1129, -3.51777, 1.11 ) }
    dend_11 { pt3dadd( -2.88847, -30.4121, -2.07537, 1.11 ) }
    dend_11 { pt3dadd( -2.87129, -34.4491, -0.976527, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 50/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.94648, -16.777, -5.7867, 0.83 ) }
    dend_2 { pt3dadd( -1.8696, -18.5909, -6.94816, 0.83 ) }
    dend_2 { pt3dadd( -0.91402, -20.2005, -7.9788, 0.83 ) }
    dend_2 { pt3dadd( -0.297234, -21.2394, -8.64404, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 54/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 21.5755, 36.7941, 15.3152, 0.55 ) }
    dend_48 { pt3dadd( 21.6392, 39.3132, 14.9808, 0.55 ) }
    dend_48 { pt3dadd( 21.6253, 41.765, 14.6329, 0.55 ) }
    dend_48 { pt3dadd( 21.6293, 42.8845, 14.4646, 0.83 ) }
    dend_48 { pt3dadd( 21.6096, 45.9199, 14.0544, 0.55 ) }
    dend_48 { pt3dadd( 21.5946, 48.5559, 13.6936, 0.83 ) }
    dend_48 { pt3dadd( 21.6582, 51.6432, 13.4134, 0.55 ) }
    dend_48 { pt3dadd( 21.6797, 53.7678, 13.2858, 0.55 ) }
    dend_48 { pt3dadd( 21.6822, 55.2617, 13.2115, 0.55 ) }
    dend_48 { pt3dadd( 21.7457, 57.3668, 13.1466, 0.55 ) }
    dend_48 { pt3dadd( 21.8748, 59.8898, 13.0873, 0.55 ) }
    dend_48 { pt3dadd( 22.1049, 63.9646, 12.8546, 0.55 ) }
    dend_48 { pt3dadd( 22.207, 65.9805, 12.7601, 0.55 ) }
    dend_48 { pt3dadd( 22.3624, 67.4274, 12.4379, 0.83 ) }
    dend_48 { pt3dadd( 22.7177, 70.0932, 11.307, 0.55 ) }
    dend_48 { pt3dadd( 22.9965, 71.6387, 10.4604, 0.55 ) }
    dend_48 { pt3dadd( 23.3328, 73.2382, 9.44964, 0.55 ) }
    dend_48 { pt3dadd( 23.6997, 74.9109, 8.27618, 0.55 ) }
    dend_48 { pt3dadd( 25.4449, 82.3056, 3.08758, 0.83 ) }
    dend_48 { pt3dadd( 25.9772, 84.6761, 1.45348, 0.55 ) }
    dend_48 { pt3dadd( 26.4792, 87.0407, -0.173085, 0.55 ) }
    dend_48 { pt3dadd( 27.0617, 89.3769, -1.61318, 0.55 ) }
    dend_48 { pt3dadd( 27.5342, 91.1317, -2.55689, 0.55 ) }
    dend_48 { pt3dadd( 27.7505, 91.9313, -2.87003, 0.83 ) }
    dend_48 { pt3dadd( 28.1749, 93.5787, -3.13667, 0.28 ) }
    dend_48 { pt3dadd( 28.4516, 94.4321, -3.28448, 0.55 ) }
    dend_48 { pt3dadd( 29.6624, 97.9401, -4.01342, 0.28 ) }
    dend_48 { pt3dadd( 29.7634, 98.225, -4.0662, 0.55 ) }
    dend_48 { pt3dadd( 30.7942, 100.997, -4.61685, 0.28 ) }
    dend_48 { pt3dadd( 31.2461, 102.173, -4.84239, 0.55 ) }
    dend_48 { pt3dadd( 31.6779, 103.309, -5.05531, 0.28 ) }
    dend_48 { pt3dadd( 31.845, 103.839, -5.15065, 0.55 ) }
    dend_48 { pt3dadd( 32.2972, 106.038, -5.61968, 0.28 ) }
    dend_48 { pt3dadd( 32.5259, 107.436, -5.95012, 0.55 ) }
    dend_48 { pt3dadd( 35.7506, 116.515, -8.98714, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 89/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 21.5755, 36.7941, 15.3152, 0.55 ) }
    dend_47 { pt3dadd( 25.0419, 38.1483, 15.8569, 0.55 ) }
    dend_47 { pt3dadd( 29.0403, 39.8322, 16.587, 0.55 ) }
    dend_47 { pt3dadd( 31.6473, 41.023, 17.0595, 0.55 ) }
    dend_47 { pt3dadd( 34.1664, 42.3463, 17.5186, 0.55 ) }
    dend_47 { pt3dadd( 36.2907, 43.5835, 17.8807, 0.55 ) }
    dend_47 { pt3dadd( 39.5014, 45.5219, 18.3895, 0.55 ) }
    dend_47 { pt3dadd( 41.3852, 46.8314, 18.6679, 0.55 ) }
    dend_47 { pt3dadd( 43.1652, 48.1521, 18.9333, 0.55 ) }
    dend_47 { pt3dadd( 45.2901, 49.635, 19.2465, 0.55 ) }
    dend_47 { pt3dadd( 48.0313, 51.403, 19.6366, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 49.2275, 52.1424, 19.7875, 0.55 ) }
    dend_47 { pt3dadd( 51.0266, 53.0973, 19.9482, 0.55 ) }
    dend_47 { pt3dadd( 53.1085, 54.1734, 20.1221, 0.55 ) }
    dend_47 { pt3dadd( 54.6974, 54.8297, 20.2914, 0.55 ) }
    dend_47 { pt3dadd( 57.0801, 55.4834, 20.5601, 0.55 ) }
    dend_47 { pt3dadd( 67.9165, 61.8422, 21.4412, 0.55 ) }
    dend_47 { pt3dadd( 78.8108, 67.9725, 22.982, 0.55 ) }
    dend_47 { pt3dadd( 90.8434, 71.6475, 23.5729, 0.55 ) }
    dend_47 { pt3dadd( 103.338, 73.2287, 23.6988, 0.55 ) }
    dend_47 { pt3dadd( 115.201, 77.2424, 22.3557, 0.55 ) }
    dend_47 { pt3dadd( 126.917, 81.1941, 19.9528, 0.55 ) }
    dend_47 { pt3dadd( 138.806, 85.3515, 19.9138, 0.55 ) }
    dend_47 { pt3dadd( 150.691, 89.3583, 21.06, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 13/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 31.1803, -12.5379, 0.228234, 0.55 ) }
    dend_39 { pt3dadd( 32.8148, -13.8734, 0.202209, 0.55 ) }
    dend_39 { pt3dadd( 34.2997, -15.0603, 0.165984, 0.55 ) }
    dend_39 { pt3dadd( 35.6591, -16.1228, 0.0868177, 0.55 ) }
    dend_39 { pt3dadd( 37.663, -17.6552, -0.0780033, 0.83 ) }
    dend_39 { pt3dadd( 39.7768, -19.2421, -0.276228, 0.55 ) }
    dend_39 { pt3dadd( 41.4538, -20.5449, -0.436461, 0.55 ) }
    dend_39 { pt3dadd( 42.2667, -21.1895, -0.525552, 0.83 ) }
    dend_39 { pt3dadd( 43.5977, -22.2678, -0.696865, 0.55 ) }
    dend_39 { pt3dadd( 45.4939, -23.7764, -0.965947, 0.55 ) }
    dend_39 { pt3dadd( 47.4152, -25.2276, -1.38154, 0.55 ) }
    dend_39 { pt3dadd( 49.0847, -26.4469, -1.84414, 0.55 ) }
    dend_39 { pt3dadd( 50.237, -27.2464, -2.19215, 1.11 ) }
    dend_39 { pt3dadd( 51.8551, -28.2682, -2.67296, 0.55 ) }
    dend_39 { pt3dadd( 52.7188, -28.7898, -2.92736, 0.55 ) }
    dend_39 { pt3dadd( 55.1992, -30.1955, -3.74773, 0.55 ) }
    dend_39 { pt3dadd( 56.9547, -31.1526, -4.36512, 0.83 ) }
    dend_39 { pt3dadd( 59.3287, -32.2526, -5.09475, 0.83 ) }
    dend_39 { pt3dadd( 60.8399, -32.9256, -5.44534, 0.55 ) }
    dend_39 { pt3dadd( 61.7266, -33.313, -5.58962, 0.55 ) }
    dend_39 { pt3dadd( 63.3893, -34.0013, -5.91123, 0.55 ) }
    dend_39 { pt3dadd( 64.5072, -34.4356, -6.1211, 0.83 ) }
    dend_39 { pt3dadd( 66.753, -35.2288, -6.79737, 0.55 ) }
    dend_39 { pt3dadd( 68.3509, -35.8018, -7.44228, 0.55 ) }
    dend_39 { pt3dadd( 69.8721, -36.3351, -8.15419, 0.83 ) }
    dend_39 { pt3dadd( 73.0147, -37.4005, -9.75922, 0.28 ) }
    dend_39 { pt3dadd( 74.0104, -37.7791, -10.3168, 0.55 ) }
    dend_39 { pt3dadd( 75.5755, -38.502, -11.3752, 0.28 ) }
    dend_39 { pt3dadd( 76.8597, -39.206, -12.3636, 0.28 ) }
    dend_39 { pt3dadd( 78.3611, -40.0754, -13.5581, 0.83 ) }
    dend_39 { pt3dadd( 79.5264, -40.825, -14.4782, 0.55 ) }
    dend_39 { pt3dadd( 80.4041, -41.4265, -15.1214, 0.55 ) }
    dend_39 { pt3dadd( 82.3912, -42.7851, -16.6076, 0.55 ) }
    dend_39 { pt3dadd( 83.2503, -43.3807, -17.2356, 0.83 ) }
    dend_39 { pt3dadd( 84.8477, -44.5908, -18.5195, 0.55 ) }
    dend_39 { pt3dadd( 85.4238, -45.041, -18.9789, 0.28 ) }
    dend_39 { pt3dadd( 85.6037, -45.1654, -19.1121, 0.55 ) }
    dend_39 { pt3dadd( 86.1546, -45.4425, -19.4442, 0.28 ) }
    dend_39 { pt3dadd( 86.6192, -45.6369, -19.6592, 0.55 ) }
    dend_39 { pt3dadd( 87.6387, -46.0054, -20.0847, 0.28 ) }
    dend_39 { pt3dadd( 88.3412, -46.21, -20.3309, 0.83 ) }
    dend_39 { pt3dadd( 90.4954, -46.8115, -20.9294, 0.28 ) }
    dend_39 { pt3dadd( 92.3421, -47.351, -21.3631, 0.83 ) }
    dend_39 { pt3dadd( 93.1458, -47.662, -21.499, 0.28 ) }
    dend_39 { pt3dadd( 93.7606, -47.9863, -21.5626, 0.28 ) }
    dend_39 { pt3dadd( 95.0152, -48.8224, -21.5382, 0.55 ) }
    dend_39 { pt3dadd( 96.5919, -50.0856, -21.3506, 0.28 ) }
    dend_39 { pt3dadd( 97.0969, -50.5565, -21.2376, 0.55 ) }
    dend_39 { pt3dadd( 98.9515, -52.4323, -20.754, 0.28 ) }
    dend_39 { pt3dadd( 100.195, -53.6361, -20.3953, 0.28 ) }
    dend_39 { pt3dadd( 101.223, -54.605, -20.0804, 0.28 ) }
    dend_39 { pt3dadd( 101.501, -54.8363, -19.99, 0.55 ) }
    dend_39 { pt3dadd( 102.795, -55.7406, -19.4717, 0.28 ) }
    dend_39 { pt3dadd( 102.993, -55.841, -19.3872, 1.11 ) }
    dend_39 { pt3dadd( 104.993, -56.599, -18.5283, 0.28 ) }
    dend_39 { pt3dadd( 105.415, -56.7427, -18.3372, 0.55 ) }
    dend_39 { pt3dadd( 107.994, -57.618, -17.1878, 0.28 ) }
    dend_39 { pt3dadd( 110.066, -58.3283, -16.2057, 0.83 ) }
    dend_39 { pt3dadd( 112.623, -59.1778, -14.8884, 0.28 ) }
    dend_39 { pt3dadd( 113.079, -59.3247, -14.6477, 0.28 ) }
    dend_39 { pt3dadd( 113.199, -59.3596, -14.5814, 0.55 ) }
    dend_39 { pt3dadd( 114.607, -59.7521, -13.7863, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 75/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 31.1803, -12.5379, 0.228234, 0.55 ) }
    dend_38 { pt3dadd( 35.4659, -10.6218, -0.0718003, 0.55 ) }
    dend_38 { pt3dadd( 38.1227, -9.66055, 0.355513, 0.55 ) }
    dend_38 { pt3dadd( 39.4859, -9.36733, 0.920644, 0.55 ) }
    dend_38 { pt3dadd( 40.4037, -9.24111, 1.36708, 0.55 ) }
    dend_38 { pt3dadd( 41.6361, -9.14611, 2.04764, 0.55 ) }
    dend_38 { pt3dadd( 43.0491, -9.03818, 2.85751, 0.55 ) }
    dend_38 { pt3dadd( 45.0575, -8.93862, 4.23163, 0.83 ) }
    dend_38 { pt3dadd( 47.3457, -8.84805, 5.75646, 0.55 ) }
    dend_38 { pt3dadd( 48.4676, -8.83851, 6.53921, 0.55 ) }
    dend_38 { pt3dadd( 50.1104, -8.83038, 7.64794, 0.55 ) }
    dend_38 { pt3dadd( 51.046, -8.84809, 8.24531, 0.28 ) }
    dend_38 { pt3dadd( 52.5604, -8.82009, 9.12135, 0.55 ) }
    dend_38 { pt3dadd( 53.9965, -8.68023, 9.77751, 0.28 ) }
    dend_38 { pt3dadd( 54.8482, -8.52131, 10.0889, 0.55 ) }
    dend_38 { pt3dadd( 55.7853, -8.33317, 10.431, 0.28 ) }
    dend_38 { pt3dadd( 56.2719, -8.23073, 10.583, 0.28 ) }
    dend_38 { pt3dadd( 56.6084, -8.14813, 10.7255, 0.55 ) }
    dend_38 { pt3dadd( 57.6524, -7.91816, 11.2768, 0.28 ) }
    dend_38 { pt3dadd( 57.9439, -7.84376, 11.4363, 0.55 ) }
    dend_38 { pt3dadd( 58.7999, -7.57868, 11.9712, 0.28 ) }
    dend_38 { pt3dadd( 59.1248, -7.47611, 12.2026, 0.83 ) }
    dend_38 { pt3dadd( 60.6868, -6.93875, 13.3384, 0.55 ) }
    dend_38 { pt3dadd( 62.1269, -6.49539, 14.4269, 0.55 ) }
    dend_38 { pt3dadd( 67.2461, -6.04509, 17.8698, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( 72.4733, -5.45675, 21.1246, 0.55 ) }
    dend_38 { pt3dadd( 77.6085, -3.82204, 24.1609, 0.55 ) }
    dend_38 { pt3dadd( 82.6238, -1.38708, 26.8407, 0.55 ) }
    dend_38 { pt3dadd( 87.8147, 1.68979, 28.2007, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 4/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -9.31259, -20.498, -13.2884, 0.55 ) }
    dend_26 { pt3dadd( -10.7204, -21.2194, -13.7606, 0.55 ) }
    dend_26 { pt3dadd( -12.6785, -22.1311, -14.3546, 0.55 ) }
    dend_26 { pt3dadd( -14.5415, -22.8866, -14.9242, 0.55 ) }
    dend_26 { pt3dadd( -15.9957, -23.4598, -15.347, 0.83 ) }
    dend_26 { pt3dadd( -18.7706, -24.6111, -16.1759, 0.83 ) }
    dend_26 { pt3dadd( -19.9033, -25.0865, -16.5248, 0.83 ) }
    dend_26 { pt3dadd( -22.216, -26.0869, -17.2574, 1.94 ) }
    dend_26 { pt3dadd( -24.7253, -27.2148, -18.0529, 0.55 ) }
    dend_26 { pt3dadd( -26.9502, -28.2305, -18.6739, 0.83 ) }
    dend_26 { pt3dadd( -28.6889, -29.1175, -19.1071, 0.55 ) }
    dend_26 { pt3dadd( -29.559, -29.598, -19.3034, 0.83 ) }
    dend_26 { pt3dadd( -30.8699, -30.3666, -19.5884, 0.83 ) }
    dend_26 { pt3dadd( -33.0394, -31.7604, -20.0559, 0.83 ) }
    dend_26 { pt3dadd( -35.7453, -33.676, -20.5185, 0.83 ) }
    dend_26 { pt3dadd( -36.7425, -34.3769, -20.6575, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 20/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -9.31259, -20.498, -13.2884, 0.55 ) }
    dend_25 { pt3dadd( -9.05684, -21.114, -16.2638, 0.55 ) }
    dend_25 { pt3dadd( -8.73206, -21.9449, -19.6393, 0.55 ) }
    dend_25 { pt3dadd( -8.15697, -23.5632, -24.8799, 0.83 ) }
    dend_25 { pt3dadd( -7.82137, -24.8623, -28.4993, 1.11 ) }
    dend_25 { pt3dadd( -7.45621, -27.0712, -34.4086, 0.55 ) }
    dend_25 { pt3dadd( -7.44456, -28.0295, -36.8665, 0.55 ) }
    dend_25 { pt3dadd( -7.63296, -30.4181, -42.2639, 0.55 ) }
    dend_25 { pt3dadd( -7.93524, -31.9713, -45.448, 1.11 ) }
    dend_25 { pt3dadd( -8.28353, -33.0764, -47.6528, 0.55 ) }
    dend_25 { pt3dadd( -8.70462, -33.9122, -49.3454, 0.55 ) }
    dend_25 { pt3dadd( -9.84391, -35.3308, -52.2677, 0.55 ) }
    dend_25 { pt3dadd( -11.0535, -36.6571, -55.1874, 1.11 ) }
    dend_25 { pt3dadd( -12.5915, -37.9727, -58.6215, 0.55 ) }
    dend_25 { pt3dadd( -13.0317, -38.2901, -59.6335, 0.83 ) }
    dend_25 { pt3dadd( -14.2752, -39.2074, -62.8567, 0.55 ) }
    dend_25 { pt3dadd( -14.9133, -39.7057, -64.6232, 0.55 ) }
    dend_25 { pt3dadd( -15.8682, -40.348, -67.3296, 0.83 ) }
    dend_25 { pt3dadd( -17.3117, -41.0248, -70.7989, 0.55 ) }
    dend_25 { pt3dadd( -18.0454, -41.313, -72.3025, 0.83 ) }
    dend_25 { pt3dadd( -18.9659, -41.7542, -74.1496, 0.28 ) }
    dend_25 { pt3dadd( -19.7311, -42.0771, -75.5273, 0.55 ) }
    dend_25 { pt3dadd( -20.6691, -42.4174, -77.0973, 0.28 ) }
    dend_25 { pt3dadd( -21.7557, -42.8863, -79.1861, 0.55 ) }
    dend_25 { pt3dadd( -22.1962, -43.2316, -80.2945, 0.55 ) }
    dend_25 { pt3dadd( -23.1197, -44.3455, -83.3132, 0.28 ) }
    dend_25 { pt3dadd( -23.5837, -45.355, -85.6483, 0.55 ) }
    dend_25 { pt3dadd( -23.87, -46.5273, -88.0443, 1.66 ) }
    dend_25 { pt3dadd( -23.9874, -50.1263, -94.1526, 0.83 ) }
    dend_25 { pt3dadd( -23.8267, -52.0072, -97.0455, 0.55 ) }
    dend_25 { pt3dadd( -23.6641, -53.1501, -98.6835, 0.55 ) }
    dend_25 { pt3dadd( -23.2224, -55.5406, -101.743, 0.28 ) }
    dend_25 { pt3dadd( -23.1349, -55.9492, -102.181, 0.83 ) }
    dend_25 { pt3dadd( -22.2123, -60.3112, -106.067, 0.28 ) }
    dend_25 { pt3dadd( -22.1752, -60.5211, -106.234, 0.55 ) }
    dend_25 { pt3dadd( -22.0082, -61.5326, -107.164, 0.28 ) }
    dend_25 { pt3dadd( -21.9062, -62.1054, -107.758, 0.55 ) }
    dend_25 { pt3dadd( -21.8532, -63.8689, -110.334, 0.28 ) }
    dend_25 { pt3dadd( -22.019, -65.1461, -112.999, 0.83 ) }
    dend_25 { pt3dadd( -22.3073, -65.784, -115.178, 0.83 ) }
    dend_25 { pt3dadd( -22.7499, -66.4341, -118.08, 0.28 ) }
    dend_25 { pt3dadd( -22.9544, -66.5668, -119.204, 0.55 ) }
    dend_25 { pt3dadd( -23.9901, -66.6911, -124.588, 0.28 ) }
    dend_25 { pt3dadd( -24.1916, -66.5841, -125.426, 0.83 ) }
    dend_25 { pt3dadd( -25.2037, -65.4695, -129.279, 0.28 ) }
    dend_25 { pt3dadd( -25.3759, -65.1657, -130.033, 0.55 ) }
    dend_25 { pt3dadd( -25.9163, -63.7927, -132.859, 0.28 ) }
    dend_25 { pt3dadd( -26.4243, -61.9889, -135.6, 0.55 ) }
    dend_25 { pt3dadd( -26.8553, -59.6944, -138.203, 0.28 ) }
    dend_25 { pt3dadd( -27.1272, -58.0518, -139.912, 0.28 ) }
    dend_25 { pt3dadd( -27.6081, -54.8685, -142.787, 0.28 ) }
    dend_25 { pt3dadd( -27.6645, -54.4686, -143.162, 0.83 ) }
    dend_25 { pt3dadd( -28.1155, -51.6986, -146.048, 0.28 ) }
    dend_25 { pt3dadd( -28.3604, -50.7474, -146.913, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -48.4815, -18.1762, -37.6842, 0.28 ) }
    dend_23 { pt3dadd( -48.4002, -17.9931, -39.9937, 0.28 ) }
    dend_23 { pt3dadd( -48.3611, -17.9049, -41.1058, 0.55 ) }
    dend_23 { pt3dadd( -48.2077, -17.5593, -45.4645, 0.28 ) }
    dend_23 { pt3dadd( -48.0436, -17.1893, -50.1306, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 79/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -48.4815, -18.1762, -37.6842, 0.28 ) }
    dend_22 { pt3dadd( -48.7294, -19.5765, -38.6013, 0.28 ) }
    dend_22 { pt3dadd( -48.8065, -20.0122, -38.8867, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.87129, -34.4491, -0.976527, 0.83 ) }
    dend_15 { pt3dadd( -3.78848, -36.9907, -1.27048, 0.83 ) }
    dend_15 { pt3dadd( -4.48126, -38.9474, -1.53502, 0.83 ) }
    dend_15 { pt3dadd( -5.82511, -42.8609, -2.06064, 0.83 ) }
    dend_15 { pt3dadd( -6.51348, -45.0206, -2.3467, 0.83 ) }
    dend_15 { pt3dadd( -7.3141, -47.708, -2.66038, 0.83 ) }
    dend_15 { pt3dadd( -8.11732, -50.597, -2.9585, 0.83 ) }
    dend_15 { pt3dadd( -8.67702, -52.7402, -3.15144, 0.83 ) }
    dend_15 { pt3dadd( -9.32669, -55.3918, -3.26967, 1.38 ) }
    dend_15 { pt3dadd( -10.0162, -58.0285, -3.15473, 0.83 ) }
    dend_15 { pt3dadd( -10.9494, -61.5822, -2.84801, 0.83 ) }
    dend_15 { pt3dadd( -11.1641, -62.4536, -2.75141, 0.83 ) }
    dend_15 { pt3dadd( -11.9119, -65.5643, -2.38609, 0.83 ) }
    dend_15 { pt3dadd( -12.4236, -67.4381, -2.02295, 0.83 ) }
    dend_15 { pt3dadd( -13.6421, -71.3654, -1.01816, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 97/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.87129, -34.4491, -0.976527, 0.83 ) }
    dend_12 { pt3dadd( -1.47924, -36.9084, -0.595071, 0.83 ) }
    dend_12 { pt3dadd( -0.305816, -39.6616, -0.136191, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( 0.197168, -41.2216, 0.14769, 0.55 ) }
    dend_12 { pt3dadd( 0.767813, -44.0804, 0.317892, 0.55 ) }
    dend_12 { pt3dadd( 1.62508, -48.375, 0.573578, 0.83 ) }
    dend_12 { pt3dadd( 2.21588, -51.3347, 0.749792, 0.55 ) }
    dend_12 { pt3dadd( 2.59649, -54.4597, 0.871765, 0.55 ) }
    dend_12 { pt3dadd( 2.7912, -57.5114, 0.918862, 0.55 ) }
    dend_12 { pt3dadd( 2.82408, -65.4431, 0.818374, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 7/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.297234, -21.2394, -8.64404, 0.83 ) }
    dend_10 { pt3dadd( -0.765209, -19.8186, -10.5179, 0.83 ) }
    dend_10 { pt3dadd( -0.902439, -18.4468, -13.0867, 0.83 ) }
    dend_10 { pt3dadd( -0.459377, -17.3177, -17.915, 0.55 ) }
    dend_10 { pt3dadd( -0.200164, -17.0087, -20.2138, 0.55 ) }
    dend_10 { pt3dadd( -0.00538591, -16.8367, -21.7625, 0.55 ) }
    dend_10 { pt3dadd( 0.369327, -16.5801, -24.6552, 0.55 ) }
    dend_10 { pt3dadd( 0.846855, -16.391, -27.9767, 0.55 ) }
    dend_10 { pt3dadd( 2.11237, -16.0659, -35.3545, 0.55 ) }
    dend_10 { pt3dadd( 4.20298, -15.6593, -45.5569, 0.83 ) }
    dend_10 { pt3dadd( 5.73484, -15.4037, -52.6071, 0.28 ) }
    dend_10 { pt3dadd( 6.73516, -15.2507, -57.1152, 0.55 ) }
    dend_10 { pt3dadd( 7.47831, -15.1094, -60.2941, 0.28 ) }
    dend_10 { pt3dadd( 8.07647, -14.9631, -62.6548, 1.11 ) }
    dend_10 { pt3dadd( 9.81488, -14.4396, -68.3314, 0.28 ) }
    dend_10 { pt3dadd( 9.95548, -14.4067, -68.7288, 0.55 ) }
    dend_10 { pt3dadd( 10.6226, -14.2675, -70.5136, 0.28 ) }
    dend_10 { pt3dadd( 10.8869, -14.1954, -71.2768, 0.55 ) }
    dend_10 { pt3dadd( 11.2852, -14.1068, -72.4728, 0.28 ) }
    dend_10 { pt3dadd( 11.5113, -14.0753, -73.1312, 0.83 ) }
    dend_10 { pt3dadd( 15.1006, -13.5701, -83.2576, 0.28 ) }
    dend_10 { pt3dadd( 15.7654, -13.4933, -85.134, 0.55 ) }
    dend_10 { pt3dadd( 17.0573, -13.3341, -88.6375, 0.28 ) }
    dend_10 { pt3dadd( 17.9377, -13.2516, -90.8673, 0.55 ) }
    dend_10 { pt3dadd( 18.7015, -13.2194, -92.6499, 0.55 ) }
    dend_10 { pt3dadd( 20.6061, -13.1853, -96.5715, 0.28 ) }
    dend_10 { pt3dadd( 21.1647, -13.2262, -97.6213, 0.55 ) }
    dend_10 { pt3dadd( 22.3229, -13.4847, -100.209, 0.28 ) }
    dend_10 { pt3dadd( 22.6779, -13.6661, -101.206, 0.55 ) }
    dend_10 { pt3dadd( 23.4423, -14.4311, -104.467, 0.28 ) }
    dend_10 { pt3dadd( 23.6354, -14.8256, -106.21, 1.11 ) }
    dend_10 { pt3dadd( 24.1237, -16.4108, -113.06, 0.28 ) }
    dend_10 { pt3dadd( 24.2263, -16.7773, -115.004, 1.11 ) }
    dend_10 { pt3dadd( 24.3827, -17.4436, -119.141, 0.28 ) }
    dend_10 { pt3dadd( 24.5035, -17.879, -122.195, 1.38 ) }
    dend_10 { pt3dadd( 25.0442, -19.7352, -135.88, 0.28 ) }
    dend_10 { pt3dadd( 25.1115, -19.9369, -137.576, 1.11 ) }
    dend_10 { pt3dadd( 25.6146, -20.8138, -146.839, 0.28 ) }
    dend_10 { pt3dadd( 25.7837, -20.9923, -149.168, 0.55 ) }
    dend_10 { pt3dadd( 26.2016, -21.1688, -153.195, 0.28 ) }
    dend_10 { pt3dadd( 26.4214, -21.2134, -154.755, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 48/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.297234, -21.2394, -8.64404, 0.55 ) }
    dend_3 { pt3dadd( 0.515935, -22.3473, -9.51987, 0.55 ) }
    dend_3 { pt3dadd( 1.96168, -24.3171, -11.077, 1.11 ) }
    dend_3 { pt3dadd( 3.94454, -27.0187, -13.2127, 0.83 ) }
    dend_3 { pt3dadd( 5.98079, -29.793, -15.4059, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 53/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -36.7425, -34.3769, -20.6575, 0.55 ) }
    dend_28 { pt3dadd( -39.5731, -33.5014, -23.5228, 0.55 ) }
    dend_28 { pt3dadd( -42.6449, -32.7002, -26.748, 0.55 ) }
    dend_28 { pt3dadd( -45.1677, -32.1521, -29.4074, 0.55 ) }
    dend_28 { pt3dadd( -47.0258, -31.8718, -31.3815, 0.83 ) }
    dend_28 { pt3dadd( -48.6678, -31.7108, -33.1427, 0.28 ) }
    dend_28 { pt3dadd( -49.5449, -31.6549, -34.0756, 0.83 ) }
    dend_28 { pt3dadd( -51.4688, -31.915, -36.3525, 0.55 ) }
    dend_28 { pt3dadd( -52.1294, -32.1082, -37.1907, 0.55 ) }
    dend_28 { pt3dadd( -53.1042, -32.5667, -38.8219, 0.55 ) }
    dend_28 { pt3dadd( -53.8426, -33.0406, -40.4968, 0.55 ) }
    dend_28 { pt3dadd( -54.5642, -33.5924, -42.4264, 0.83 ) }
    dend_28 { pt3dadd( -55.6463, -34.5789, -46.0334, 0.55 ) }
    dend_28 { pt3dadd( -56.0823, -34.9936, -47.7296, 0.55 ) }
    dend_28 { pt3dadd( -57.3668, -36.09, -52.9807, 0.55 ) }
    dend_28 { pt3dadd( -57.73, -36.3276, -54.4471, 0.55 ) }
    dend_28 { pt3dadd( -58.1317, -36.5022, -55.9371, 0.55 ) }
    dend_28 { pt3dadd( -59.3569, -36.7759, -60.1512, 0.28 ) }
    dend_28 { pt3dadd( -59.7988, -36.7881, -61.4394, 0.55 ) }
    dend_28 { pt3dadd( -60.3265, -36.7789, -62.8547, 0.28 ) }
    dend_28 { pt3dadd( -61.0083, -36.6878, -64.2377, 1.11 ) }
    dend_28 { pt3dadd( -63.0495, -36.519, -68.3435, 0.55 ) }
    dend_28 { pt3dadd( -63.8465, -36.3888, -69.977, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -36.7425, -34.3769, -20.6575, 0.55 ) }
    dend_27 { pt3dadd( -39.0969, -36.6771, -20.9052, 0.55 ) }
    dend_27 { pt3dadd( -40.6837, -38.1256, -21.021, 0.55 ) }
    dend_27 { pt3dadd( -42.8904, -40.038, -21.217, 0.83 ) }
    dend_27 { pt3dadd( -45.207, -41.8196, -21.4632, 0.55 ) }
    dend_27 { pt3dadd( -48.4287, -44.1652, -21.8647, 0.83 ) }
    dend_27 { pt3dadd( -50.8358, -45.8271, -22.1794, 0.28 ) }
    dend_27 { pt3dadd( -51.9241, -46.4946, -22.3267, 0.55 ) }
    dend_27 { pt3dadd( -53.5442, -47.4028, -22.6344, 0.28 ) }
    dend_27 { pt3dadd( -56.006, -48.7505, -23.2171, 0.83 ) }
    dend_27 { pt3dadd( -58.4043, -50.0337, -24.0791, 0.28 ) }
    dend_27 { pt3dadd( -59.752, -50.7796, -24.6327, 0.55 ) }
    dend_27 { pt3dadd( -62.0361, -52.1395, -25.6674, 0.55 ) }
    dend_27 { pt3dadd( -64.5059, -53.8208, -26.8667, 0.55 ) }
    dend_27 { pt3dadd( -67.2061, -55.8495, -28.0549, 0.28 ) }
    dend_27 { pt3dadd( -69.1504, -57.4613, -28.8499, 0.28 ) }
    dend_27 { pt3dadd( -70.5583, -58.5644, -29.2887, 0.55 ) }
    dend_27 { pt3dadd( -71.8087, -59.5189, -29.548, 0.55 ) }
    dend_27 { pt3dadd( -74.2538, -61.2285, -29.4777, 0.28 ) }
    dend_27 { pt3dadd( -76.6936, -62.7724, -28.9294, 0.28 ) }
    dend_27 { pt3dadd( -77.344, -63.2196, -28.7543, 0.55 ) }
    dend_27 { pt3dadd( -79.3301, -64.7554, -28.122, 0.28 ) }
    dend_27 { pt3dadd( -80.0772, -65.4234, -27.923, 0.55 ) }
    dend_27 { pt3dadd( -82.4537, -67.91, -27.136, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -83.3637, -69.0029, -26.7947, 0.55 ) }
    dend_27 { pt3dadd( -85.3226, -71.7858, -26.0752, 0.28 ) }
    dend_27 { pt3dadd( -86.4175, -73.4588, -25.6393, 0.55 ) }
    dend_27 { pt3dadd( -87.8546, -75.5711, -25.2141, 0.55 ) }
    dend_27 { pt3dadd( -90.0734, -78.8478, -24.5714, 0.28 ) }
    dend_27 { pt3dadd( -90.4715, -79.4299, -24.467, 0.55 ) }
    dend_27 { pt3dadd( -92.6537, -82.4233, -23.8177, 0.28 ) }
    dend_27 { pt3dadd( -94.9732, -85.3324, -23.0251, 0.28 ) }
    dend_27 { pt3dadd( -99.0834, -90.2815, -21.875, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 9/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -13.6421, -71.3654, -1.01816, 0.55 ) }
    dend_17 { pt3dadd( -14.2037, -73.219, -1.23641, 0.55 ) }
    dend_17 { pt3dadd( -14.7133, -74.9005, -1.43332, 0.55 ) }
    dend_17 { pt3dadd( -15.6156, -77.2689, -1.83129, 0.55 ) }
    dend_17 { pt3dadd( -16.5267, -79.4693, -2.34117, 0.83 ) }
    dend_17 { pt3dadd( -17.2485, -81.1496, -2.77487, 0.83 ) }
    dend_17 { pt3dadd( -17.8203, -82.3354, -3.10525, 0.83 ) }
    dend_17 { pt3dadd( -18.3782, -83.3001, -3.47417, 0.55 ) }
    dend_17 { pt3dadd( -19.6239, -85.171, -4.26729, 0.55 ) }
    dend_17 { pt3dadd( -20.6078, -86.6426, -4.94279, 0.55 ) }
    dend_17 { pt3dadd( -21.0244, -87.1893, -5.24031, 0.55 ) }
    dend_17 { pt3dadd( -22.0, -88.3723, -5.93078, 0.55 ) }
    dend_17 { pt3dadd( -23.0415, -89.6377, -6.63986, 0.55 ) }
    dend_17 { pt3dadd( -23.6235, -90.3478, -7.00409, 0.83 ) }
    dend_17 { pt3dadd( -24.1621, -91.0272, -7.27906, 1.11 ) }
    dend_17 { pt3dadd( -25.0132, -92.0586, -7.62118, 0.83 ) }
    dend_17 { pt3dadd( -25.2485, -92.329, -7.70044, 0.83 ) }
    dend_17 { pt3dadd( -25.8799, -93.0218, -7.86248, 0.55 ) }
    dend_17 { pt3dadd( -27.2587, -94.3281, -8.01941, 0.83 ) }
    dend_17 { pt3dadd( -28.1906, -95.1136, -8.08409, 0.83 ) }
    dend_17 { pt3dadd( -28.7861, -95.5723, -8.13018, 0.55 ) }
    dend_17 { pt3dadd( -30.2406, -96.6227, -8.24391, 0.83 ) }
    dend_17 { pt3dadd( -31.2942, -97.4066, -8.33222, 0.83 ) }
    dend_17 { pt3dadd( -32.4928, -98.3859, -8.51421, 0.55 ) }
    dend_17 { pt3dadd( -33.6501, -99.4159, -8.77446, 0.83 ) }
    dend_17 { pt3dadd( -34.9636, -100.569, -9.24067, 0.55 ) }
    dend_17 { pt3dadd( -35.7139, -101.257, -9.54612, 0.55 ) }
    dend_17 { pt3dadd( -36.5866, -102.168, -9.9711, 1.11 ) }
    dend_17 { pt3dadd( -38.0846, -103.886, -10.7577, 0.55 ) }
    dend_17 { pt3dadd( -38.7213, -104.645, -11.1379, 0.55 ) }
    dend_17 { pt3dadd( -40.0066, -106.217, -11.9213, 0.55 ) }
    dend_17 { pt3dadd( -41.2463, -107.8, -12.6403, 1.11 ) }
    dend_17 { pt3dadd( -42.3614, -109.252, -13.2778, 0.55 ) }
    dend_17 { pt3dadd( -43.6359, -110.833, -13.9034, 1.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 43/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -13.6421, -71.3654, -1.01816, 0.55 ) }
    dend_16 { pt3dadd( -13.7606, -73.1831, -0.195096, 0.55 ) }
    dend_16 { pt3dadd( -13.8219, -74.5681, 0.623065, 0.55 ) }
    dend_16 { pt3dadd( -14.0279, -77.3345, 2.34666, 0.55 ) }
    dend_16 { pt3dadd( -14.1914, -79.4992, 3.65088, 0.55 ) }
    dend_16 { pt3dadd( -14.3714, -81.7033, 5.00646, 0.55 ) }
    dend_16 { pt3dadd( -14.5395, -83.5572, 6.12108, 0.83 ) }
    dend_16 { pt3dadd( -14.8455, -86.7693, 7.98414, 0.83 ) }
    dend_16 { pt3dadd( -15.0055, -88.361, 8.88729, 0.83 ) }
    dend_16 { pt3dadd( -15.2469, -90.4633, 9.92362, 0.83 ) }
    dend_16 { pt3dadd( -15.3954, -91.8837, 10.5224, 0.83 ) }
    dend_16 { pt3dadd( -15.6424, -93.5526, 11.1652, 0.83 ) }
    dend_16 { pt3dadd( -16.151, -96.8342, 12.4275, 0.83 ) }
    dend_16 { pt3dadd( -16.5425, -99.7317, 13.5126, 0.83 ) }
    dend_16 { pt3dadd( -16.9236, -102.79, 14.7407, 0.83 ) }
    dend_16 { pt3dadd( -17.3863, -105.737, 15.9348, 0.83 ) }
    dend_16 { pt3dadd( -17.8942, -108.669, 17.0673, 0.55 ) }
    dend_16 { pt3dadd( -18.3097, -110.989, 17.9696, 0.83 ) }
    dend_16 { pt3dadd( -18.7175, -112.972, 18.708, 0.55 ) }
    dend_16 { pt3dadd( -18.8743, -113.812, 19.0245, 0.55 ) }
    dend_16 { pt3dadd( -19.3697, -116.488, 20.0584, 0.55 ) }
    dend_16 { pt3dadd( -19.7361, -118.367, 20.7476, 0.55 ) }
    dend_16 { pt3dadd( -20.0135, -119.749, 21.2301, 0.55 ) }
    dend_16 { pt3dadd( -20.8786, -123.859, 22.6826, 0.55 ) }
    dend_16 { pt3dadd( -21.3314, -126.643, 23.7866, 0.55 ) }
    dend_16 { pt3dadd( -21.5628, -128.732, 24.7273, 0.55 ) }
    dend_16 { pt3dadd( -21.6756, -130.336, 25.5306, 0.55 ) }
    dend_16 { pt3dadd( -21.8353, -132.402, 26.6604, 0.55 ) }
    dend_16 { pt3dadd( -21.9302, -133.62, 27.3541, 0.55 ) }
    dend_16 { pt3dadd( -22.0483, -136.827, 29.0756, 0.55 ) }
    dend_16 { pt3dadd( -22.1256, -137.918, 29.6334, 0.55 ) }
    dend_16 { pt3dadd( -22.2164, -138.949, 30.1646, 0.83 ) }
    dend_16 { pt3dadd( -22.3089, -140.624, 30.978, 0.55 ) }
    dend_16 { pt3dadd( -22.3037, -141.585, 31.4168, 0.55 ) }
    dend_16 { pt3dadd( -22.3157, -143.789, 32.1981, 0.55 ) }
    dend_16 { pt3dadd( -22.3404, -146.559, 32.8604, 0.55 ) }
    dend_16 { pt3dadd( -22.2679, -148.632, 33.2238, 0.55 ) }
    dend_16 { pt3dadd( -22.1633, -150.822, 33.5339, 0.55 ) }
    dend_16 { pt3dadd( -22.0839, -151.881, 33.6437, 0.55 ) }
    dend_16 { pt3dadd( -21.8417, -154.407, 33.8453, 0.55 ) }
    dend_16 { pt3dadd( -21.6489, -157.047, 34.1268, 0.55 ) }
    dend_16 { pt3dadd( -21.6474, -158.819, 34.349, 0.55 ) }
    dend_16 { pt3dadd( -21.8421, -160.272, 34.6112, 0.55 ) }
    dend_16 { pt3dadd( -22.1362, -161.492, 34.859, 0.55 ) }
    dend_16 { pt3dadd( -22.6402, -163.156, 35.3056, 0.55 ) }
    dend_16 { pt3dadd( -23.7125, -166.15, 36.2029, 0.83 ) }
    dend_16 { pt3dadd( -25.0063, -168.894, 37.0046, 0.55 ) }
    dend_16 { pt3dadd( -26.4122, -171.152, 37.7394, 0.55 ) }
    dend_16 { pt3dadd( -27.2636, -172.42, 38.1529, 0.83 ) }
    dend_16 { pt3dadd( -28.9671, -174.706, 38.9114, 0.55 ) }
    dend_16 { pt3dadd( -30.4074, -176.454, 39.4925, 0.55 ) }
    dend_16 { pt3dadd( -32.34, -178.669, 40.0965, 0.55 ) }
    dend_16 { pt3dadd( -34.9254, -181.359, 40.8359, 0.83 ) }
    dend_16 { pt3dadd( -35.5, -189.55, 44.9859, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.82408, -65.4431, 0.818374, 0.55 ) }
    dend_14 { pt3dadd( 1.663, -67.416, 1.62862, 0.55 ) }
    dend_14 { pt3dadd( 0.539258, -69.1656, 2.35293, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_14 { pt3dadd( -1.09435, -71.4719, 3.38931, 0.83 ) }
    dend_14 { pt3dadd( -2.15509, -72.8782, 4.07163, 0.55 ) }
    dend_14 { pt3dadd( -3.28296, -74.3703, 4.81391, 0.83 ) }
    dend_14 { pt3dadd( -4.84893, -76.4359, 5.92018, 0.83 ) }
    dend_14 { pt3dadd( -5.89313, -77.8524, 6.80471, 0.55 ) }
    dend_14 { pt3dadd( -7.15844, -79.5863, 7.9977, 0.83 ) }
    dend_14 { pt3dadd( -8.33269, -81.2366, 9.13351, 0.55 ) }
    dend_14 { pt3dadd( -8.83945, -82.0193, 9.64845, 0.55 ) }
    dend_14 { pt3dadd( -9.90427, -83.6579, 10.7961, 0.83 ) }
    dend_14 { pt3dadd( -10.9546, -85.3523, 11.9704, 0.83 ) }
    dend_14 { pt3dadd( -12.0103, -87.172, 13.313, 0.55 ) }
    dend_14 { pt3dadd( -12.2831, -87.6592, 13.6624, 0.55 ) }
    dend_14 { pt3dadd( -13.1281, -89.1904, 14.7029, 0.83 ) }
    dend_14 { pt3dadd( -14.6526, -91.9799, 16.4638, 0.55 ) }
    dend_14 { pt3dadd( -15.1599, -92.9195, 16.96, 0.55 ) }
    dend_14 { pt3dadd( -15.9596, -94.42, 17.6223, 0.55 ) }
    dend_14 { pt3dadd( -16.3871, -95.2989, 17.9804, 0.55 ) }
    dend_14 { pt3dadd( -16.9952, -96.4846, 18.5584, 0.55 ) }
    dend_14 { pt3dadd( -17.4242, -97.3283, 19.0233, 0.55 ) }
    dend_14 { pt3dadd( -18.0257, -98.515, 19.9392, 0.55 ) }
    dend_14 { pt3dadd( -18.7315, -99.8051, 21.1908, 0.28 ) }
    dend_14 { pt3dadd( -19.5893, -101.305, 22.8092, 0.83 ) }
    dend_14 { pt3dadd( -20.6246, -102.985, 24.8797, 0.28 ) }
    dend_14 { pt3dadd( -20.9177, -103.441, 25.4975, 0.55 ) }
    dend_14 { pt3dadd( -22.6164, -106.087, 29.4045, 0.28 ) }
    dend_14 { pt3dadd( -22.8132, -106.422, 29.8902, 0.83 ) }
    dend_14 { pt3dadd( -23.5339, -107.677, 31.6327, 0.28 ) }
    dend_14 { pt3dadd( -23.8906, -108.381, 32.4564, 0.55 ) }
    dend_14 { pt3dadd( -24.3149, -109.296, 33.3541, 0.55 ) }
    dend_14 { pt3dadd( -24.8017, -110.577, 34.3813, 0.55 ) }
    dend_14 { pt3dadd( -25.2778, -112.536, 35.536, 0.28 ) }
    dend_14 { pt3dadd( -25.3992, -113.058, 35.8379, 0.55 ) }
    dend_14 { pt3dadd( -25.7858, -114.967, 36.8414, 0.28 ) }
    dend_14 { pt3dadd( -25.8881, -115.604, 37.1141, 0.55 ) }
    dend_14 { pt3dadd( -26.0811, -117.225, 37.6678, 0.28 ) }
    dend_14 { pt3dadd( -26.1224, -117.877, 37.8147, 0.83 ) }
    dend_14 { pt3dadd( -29.9706, -123.123, 41.5126, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.82408, -65.4431, 0.818374, 0.55 ) }
    dend_13 { pt3dadd( 3.10092, -66.4907, 1.31524, 0.55 ) }
    dend_13 { pt3dadd( 3.61707, -68.2054, 2.21382, 0.28 ) }
    dend_13 { pt3dadd( 4.1557, -70.1298, 3.14385, 0.83 ) }
    dend_13 { pt3dadd( 4.55942, -71.706, 3.92249, 0.28 ) }
    dend_13 { pt3dadd( 4.77018, -72.5725, 4.32065, 0.55 ) }
    dend_13 { pt3dadd( 5.01748, -73.6507, 4.79136, 0.28 ) }
    dend_13 { pt3dadd( 5.15251, -74.4413, 5.09782, 0.55 ) }
    dend_13 { pt3dadd( 5.38613, -76.1372, 5.66028, 0.28 ) }
    dend_13 { pt3dadd( 5.4894, -77.1312, 5.85809, 0.55 ) }
    dend_13 { pt3dadd( 5.67251, -78.6788, 6.08293, 0.28 ) }
    dend_13 { pt3dadd( 5.69927, -78.9521, 6.11799, 0.55 ) }
    dend_13 { pt3dadd( 5.89995, -80.8387, 6.32521, 0.28 ) }
    dend_13 { pt3dadd( 5.98233, -81.4613, 6.4066, 0.55 ) }
    dend_13 { pt3dadd( 6.4093, -83.7003, 6.60631, 0.55 ) }
    dend_13 { pt3dadd( 6.69354, -85.2006, 6.67096, 0.28 ) }
    dend_13 { pt3dadd( 6.83207, -85.8269, 6.65829, 0.55 ) }
    dend_13 { pt3dadd( 7.03234, -86.6168, 6.58748, 0.28 ) }
    dend_13 { pt3dadd( 7.23841, -87.3577, 6.49607, 0.55 ) }
    dend_13 { pt3dadd( 8.20292, -89.5366, 5.85138, 0.28 ) }
    dend_13 { pt3dadd( 8.68266, -90.3185, 5.50513, 0.55 ) }
    dend_13 { pt3dadd( 9.77287, -92.0085, 4.50803, 0.28 ) }
    dend_13 { pt3dadd( 10.3098, -92.8507, 3.98569, 0.55 ) }
    dend_13 { pt3dadd( 11.2102, -94.3176, 3.09811, 0.55 ) }
    dend_13 { pt3dadd( 13.5576, -98.1897, 0.879083, 0.55 ) }
    dend_13 { pt3dadd( 14.658, -99.9981, -0.0887603, 0.83 ) }
    dend_13 { pt3dadd( 15.9705, -102.247, -1.19613, 0.55 ) }
    dend_13 { pt3dadd( 17.1209, -104.465, -2.19693, 0.28 ) }
    dend_13 { pt3dadd( 17.6685, -105.749, -2.66632, 0.28 ) }
    dend_13 { pt3dadd( 17.9685, -106.647, -2.92876, 0.55 ) }
    dend_13 { pt3dadd( 18.5095, -108.932, -3.2809, 0.28 ) }
    dend_13 { pt3dadd( 18.9795, -111.226, -3.40003, 0.83 ) }
    dend_13 { pt3dadd( 19.4465, -113.412, -3.37536, 0.55 ) }
    dend_13 { pt3dadd( 20.2311, -117.03, -3.18245, 0.28 ) }
    dend_13 { pt3dadd( 20.7439, -119.358, -2.91533, 0.83 ) }
    dend_13 { pt3dadd( 21.1433, -120.919, -2.67873, 0.55 ) }
    dend_13 { pt3dadd( 21.9359, -123.735, -2.09317, 0.28 ) }
    dend_13 { pt3dadd( 22.3849, -124.962, -1.7808, 0.55 ) }
    dend_13 { pt3dadd( 23.0429, -126.623, -1.15854, 0.28 ) }
    dend_13 { pt3dadd( 23.7595, -128.35, -0.382789, 0.55 ) }
    dend_13 { pt3dadd( 24.21, -130.783, 1.79299, 0.28 ) }
    dend_13 { pt3dadd( 24.226, -131.517, 2.67607, 0.55 ) }
    dend_13 { pt3dadd( 24.1198, -132.973, 4.80074, 0.55 ) }
    dend_13 { pt3dadd( 23.9439, -134.959, 7.7503, 0.28 ) }
    dend_13 { pt3dadd( 23.8624, -135.739, 8.91329, 0.55 ) }
    dend_13 { pt3dadd( 23.3439, -140.827, 16.6794, 0.28 ) }
    dend_13 { pt3dadd( 23.2892, -141.348, 17.5043, 0.55 ) }
    dend_13 { pt3dadd( 23.236, -143.03, 20.1032, 0.28 ) }
    dend_13 { pt3dadd( 23.3259, -144.698, 22.5301, 0.28 ) }
    dend_13 { pt3dadd( 23.44, -145.142, 23.0836, 0.55 ) }
    dend_13 { pt3dadd( 24.5336, -147.898, 25.9194, 0.28 ) }
    dend_13 { pt3dadd( 25.0757, -148.819, 26.5235, 0.55 ) }
    dend_13 { pt3dadd( 26.437, -150.978, 27.7957, 0.28 ) }
    dend_13 { pt3dadd( 27.0597, -151.903, 28.2573, 0.83 ) }
    dend_13 { pt3dadd( 28.0944, -153.332, 28.8711, 0.28 ) }
    dend_13 { pt3dadd( 29.1132, -154.584, 29.2803, 0.28 ) }
    dend_13 { pt3dadd( 30.2611, -155.869, 29.5809, 0.28 ) }
    dend_13 { pt3dadd( 31.1774, -156.898, 29.8262, 0.55 ) }
    dend_13 { pt3dadd( 31.9868, -157.788, 29.9683, 0.28 ) }
    dend_13 { pt3dadd( 32.6768, -158.562, 30.1331, 0.55 ) }
    dend_13 { pt3dadd( 34.2264, -160.174, 30.5839, 0.28 ) }
    dend_13 { pt3dadd( 35.6161, -161.354, 30.9498, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 99/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.98079, -29.793, -15.4059, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 8.97843, -29.3739, -18.4227, 0.83 ) }
    dend_7 { pt3dadd( 11.5278, -29.0175, -20.9885, 0.83 ) }
    dend_7 { pt3dadd( 14.6112, -28.5864, -24.0916, 0.55 ) }
    dend_7 { pt3dadd( 16.1049, -28.3776, -25.5949, 0.55 ) }
    dend_7 { pt3dadd( 18.0809, -28.1013, -27.5835, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 5/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 5.98079, -29.793, -15.4059, 0.55 ) }
    dend_4 { pt3dadd( 6.05484, -31.4096, -15.7934, 0.55 ) }
    dend_4 { pt3dadd( 6.22287, -33.4054, -16.2444, 0.55 ) }
    dend_4 { pt3dadd( 6.33076, -34.7817, -16.5056, 0.83 ) }
    dend_4 { pt3dadd( 6.35848, -36.1896, -16.8362, 0.55 ) }
    dend_4 { pt3dadd( 6.37511, -37.0039, -17.0275, 0.28 ) }
    dend_4 { pt3dadd( 6.43467, -38.0573, -17.2664, 0.55 ) }
    dend_4 { pt3dadd( 6.4899, -39.3854, -17.5214, 0.55 ) }
    dend_4 { pt3dadd( 6.56677, -40.9558, -17.8107, 0.55 ) }
    dend_4 { pt3dadd( 6.65006, -43.8639, -18.4388, 0.28 ) }
    dend_4 { pt3dadd( 6.69107, -45.7365, -18.8279, 0.55 ) }
    dend_4 { pt3dadd( 6.75937, -48.0541, -19.253, 0.55 ) }
    dend_4 { pt3dadd( 6.92891, -51.9171, -19.8945, 0.55 ) }
    dend_4 { pt3dadd( 7.01608, -53.7138, -20.1569, 0.55 ) }
    dend_4 { pt3dadd( 7.1761, -57.0964, -20.5584, 0.28 ) }
    dend_4 { pt3dadd( 7.26876, -59.4011, -20.7615, 0.55 ) }
    dend_4 { pt3dadd( 7.29528, -61.3654, -20.9251, 0.28 ) }
    dend_4 { pt3dadd( 7.26285, -62.1755, -21.0736, 0.55 ) }
    dend_4 { pt3dadd( 7.18819, -63.7236, -21.519, 0.28 ) }
    dend_4 { pt3dadd( 7.11475, -64.7818, -21.8874, 0.55 ) }
    dend_4 { pt3dadd( 7.0075, -66.3779, -22.6629, 0.28 ) }
    dend_4 { pt3dadd( 6.95703, -67.7515, -23.4841, 0.83 ) }
    dend_4 { pt3dadd( 6.85008, -72.2345, -26.5603, 0.55 ) }
    dend_4 { pt3dadd( 6.84755, -72.7213, -26.888, 0.55 ) }
    dend_4 { pt3dadd( 6.87793, -73.5486, -27.4101, 0.83 ) }
    dend_4 { pt3dadd( 7.00385, -75.7123, -28.6675, 0.28 ) }
    dend_4 { pt3dadd( 7.09972, -78.1085, -29.9284, 0.55 ) }
    dend_4 { pt3dadd( 7.14753, -80.544, -31.114, 0.28 ) }
    dend_4 { pt3dadd( 7.17671, -82.1819, -31.7891, 0.55 ) }
    dend_4 { pt3dadd( 7.21833, -84.756, -32.766, 0.28 ) }
    dend_4 { pt3dadd( 7.22235, -85.3454, -32.9962, 0.28 ) }
    dend_4 { pt3dadd( 7.27959, -87.2944, -33.805, 0.55 ) }
    dend_4 { pt3dadd( 7.46267, -90.1969, -35.0976, 0.28 ) }
    dend_4 { pt3dadd( 7.5583, -91.118, -35.5133, 0.55 ) }
    dend_4 { pt3dadd( 7.89708, -93.6675, -36.7073, 0.28 ) }
    dend_4 { pt3dadd( 8.22292, -96.2411, -37.9943, 0.83 ) }
    dend_4 { pt3dadd( 8.50509, -98.5148, -38.9905, 0.28 ) }
    dend_4 { pt3dadd( 8.62831, -99.7458, -39.4707, 0.55 ) }
    dend_4 { pt3dadd( 8.6641, -101.702, -40.3173, 0.28 ) }
    dend_4 { pt3dadd( 8.53547, -103.713, -41.2999, 0.28 ) }
    dend_4 { pt3dadd( 8.07511, -106.748, -43.0194, 0.55 ) }
    dend_4 { pt3dadd( 7.54789, -109.391, -44.5057, 0.28 ) }
    dend_4 { pt3dadd( 7.2741, -110.44, -45.1421, 0.55 ) }
    dend_4 { pt3dadd( 6.41535, -113.267, -47.0308, 0.28 ) }
    dend_4 { pt3dadd( 6.23316, -113.761, -47.3761, 0.55 ) }
    dend_4 { pt3dadd( 5.71432, -114.885, -48.2764, 0.28 ) }
    dend_4 { pt3dadd( 5.51989, -115.312, -48.6428, 0.55 ) }
    dend_4 { pt3dadd( 5.07134, -116.117, -49.6709, 0.28 ) }
    dend_4 { pt3dadd( 4.9266, -116.51, -50.0946, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 54/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -43.6359, -110.833, -13.9034, 0.55 ) }
    dend_19 { pt3dadd( -45.3347, -115.812, -10.8751, 0.55 ) }
    dend_19 { pt3dadd( -46.7809, -120.362, -8.0955, 0.83 ) }
    dend_19 { pt3dadd( -48.4217, -125.43, -5.12476, 0.28 ) }
    dend_19 { pt3dadd( -49.0388, -127.245, -4.14395, 0.55 ) }
    dend_19 { pt3dadd( -50.0466, -130.03, -2.77433, 0.28 ) }
    dend_19 { pt3dadd( -51.836, -134.605, -0.903317, 0.28 ) }
    dend_19 { pt3dadd( -52.2635, -135.581, -0.640266, 0.28 ) }
    dend_19 { pt3dadd( -53.0764, -137.204, -0.498193, 0.55 ) }
    dend_19 { pt3dadd( -54.1003, -139.156, -0.701597, 0.28 ) }
    dend_19 { pt3dadd( -55.5601, -141.979, -1.22709, 0.83 ) }
    dend_19 { pt3dadd( -57.7236, -145.77, -2.13044, 0.28 ) }
    dend_19 { pt3dadd( -59.1768, -148.244, -2.87522, 0.28 ) }
    dend_19 { pt3dadd( -59.8107, -149.337, -3.17845, 0.55 ) }
    dend_19 { pt3dadd( -62.3701, -153.863, -4.27529, 0.28 ) }
    dend_19 { pt3dadd( -63.0715, -155.151, -4.59186, 0.83 ) }
    dend_19 { pt3dadd( -64.4794, -157.727, -5.20306, 0.28 ) }
    dend_19 { pt3dadd( -64.8597, -158.426, -5.35415, 0.55 ) }
    dend_19 { pt3dadd( -66.4355, -161.307, -5.94702, 0.28 ) }
    dend_19 { pt3dadd( -67.3221, -162.884, -6.24273, 0.55 ) }
    dend_19 { pt3dadd( -69.1346, -165.717, -6.50072, 0.28 ) }
    dend_19 { pt3dadd( -70.695, -168.245, -6.8484, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -43.6359, -110.833, -13.9034, 0.28 ) }
    dend_18 { pt3dadd( -43.5259, -113.412, -14.5711, 0.28 ) }
    dend_18 { pt3dadd( -43.5302, -113.662, -14.6419, 0.83 ) }
    dend_18 { pt3dadd( -43.6462, -115.784, -15.2417, 0.28 ) }
    dend_18 { pt3dadd( -43.7025, -116.813, -15.5326, 0.83 ) }
    dend_18 { pt3dadd( -43.8456, -119.43, -16.2721, 0.28 ) }
    dend_18 { pt3dadd( -43.8899, -120.239, -16.5008, 0.55 ) }
    dend_18 { pt3dadd( -44.1139, -122.222, -17.2418, 0.28 ) }
    dend_18 { pt3dadd( -44.1884, -122.773, -17.4367, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 18.0809, -28.1013, -27.5835, 0.55 ) }
    dend_9 { pt3dadd( 19.6587, -28.697, -29.3628, 0.55 ) }
    dend_9 { pt3dadd( 22.5476, -29.9678, -32.8318, 0.55 ) }
    dend_9 { pt3dadd( 25.2403, -31.314, -36.1314, 0.83 ) }
    dend_9 { pt3dadd( 28.0907, -32.9414, -39.6282, 0.83 ) }
    dend_9 { pt3dadd( 29.6054, -33.9026, -41.5158, 0.55 ) }
    dend_9 { pt3dadd( 30.146, -34.2896, -42.1531, 0.28 ) }
    dend_9 { pt3dadd( 30.9874, -34.8951, -43.1023, 0.55 ) }
    dend_9 { pt3dadd( 31.7186, -35.4855, -43.8551, 0.28 ) }
    dend_9 { pt3dadd( 32.6498, -36.175, -44.6457, 0.55 ) }
    dend_9 { pt3dadd( 33.9886, -37.2025, -46.0127, 0.55 ) }
    dend_9 { pt3dadd( 36.7565, -38.9643, -48.6927, 0.55 ) }
    dend_9 { pt3dadd( 38.9358, -40.2075, -50.8227, 0.83 ) }
    dend_9 { pt3dadd( 40.4963, -41.0265, -52.3016, 0.55 ) }
    dend_9 { pt3dadd( 42.8461, -42.1676, -54.7336, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( 47.1182, -44.002, -59.4243, 0.55 ) }
    dend_9 { pt3dadd( 49.4674, -44.8464, -62.0565, 0.55 ) }
    dend_9 { pt3dadd( 51.1051, -45.3462, -63.9233, 0.28 ) }
    dend_9 { pt3dadd( 52.3205, -45.7268, -65.3332, 1.11 ) }
    dend_9 { pt3dadd( 56.204, -46.8118, -69.5905, 0.55 ) }
    dend_9 { pt3dadd( 57.5582, -47.132, -71.0504, 0.55 ) }
    dend_9 { pt3dadd( 60.1871, -47.7304, -73.7642, 0.55 ) }
    dend_9 { pt3dadd( 62.9765, -48.4801, -76.8948, 0.83 ) }
    dend_9 { pt3dadd( 66.0536, -49.3333, -80.3658, 0.28 ) }
    dend_9 { pt3dadd( 68.2568, -50.0253, -82.8677, 0.83 ) }
    dend_9 { pt3dadd( 71.1437, -51.1501, -86.0001, 0.28 ) }
    dend_9 { pt3dadd( 72.2503, -51.6768, -87.271, 0.83 ) }
    dend_9 { pt3dadd( 74.2164, -52.8295, -89.7144, 0.28 ) }
    dend_9 { pt3dadd( 74.6358, -53.1107, -90.2537, 0.28 ) }
    dend_9 { pt3dadd( 75.3433, -53.6821, -91.0625, 0.55 ) }
    dend_9 { pt3dadd( 76.5416, -54.935, -92.3685, 0.28 ) }
    dend_9 { pt3dadd( 77.1549, -55.6713, -92.7932, 0.55 ) }
    dend_9 { pt3dadd( 78.5618, -57.42, -93.4037, 0.28 ) }
    dend_9 { pt3dadd( 79.1898, -58.1885, -93.5069, 0.55 ) }
    dend_9 { pt3dadd( 81.2136, -60.7018, -93.664, 0.28 ) }
    dend_9 { pt3dadd( 82.2512, -61.9958, -93.8225, 0.83 ) }
    dend_9 { pt3dadd( 83.1974, -63.1705, -94.0005, 0.28 ) }
    dend_9 { pt3dadd( 83.6657, -63.7434, -94.1976, 0.55 ) }
    dend_9 { pt3dadd( 84.374, -64.5706, -94.672, 0.28 ) }
    dend_9 { pt3dadd( 86.0192, -66.461, -96.3107, 0.83 ) }
    dend_9 { pt3dadd( 87.6043, -68.2022, -98.1162, 0.55 ) }
    dend_9 { pt3dadd( 88.0945, -68.7785, -98.7086, 0.83 ) }
    dend_9 { pt3dadd( 90.0685, -71.1344, -101.199, 0.28 ) }
    dend_9 { pt3dadd( 90.9221, -72.1666, -102.293, 1.11 ) }
    dend_9 { pt3dadd( 93.0616, -74.6764, -104.957, 0.55 ) }
    dend_9 { pt3dadd( 94.3018, -76.1074, -106.447, 1.11 ) }
    dend_9 { pt3dadd( 96.9944, -79.2612, -109.218, 0.55 ) }
    dend_9 { pt3dadd( 97.3757, -79.703, -109.557, 0.83 ) }
    dend_9 { pt3dadd( 99.6782, -82.3332, -111.161, 0.28 ) }
    dend_9 { pt3dadd( 100.544, -83.346, -111.637, 0.55 ) }
    dend_9 { pt3dadd( 102.133, -85.1761, -112.303, 0.28 ) }
    dend_9 { pt3dadd( 104.075, -87.427, -112.984, 0.83 ) }
    dend_9 { pt3dadd( 107.849, -91.5731, -114.083, 0.28 ) }
    dend_9 { pt3dadd( 109.375, -93.2223, -114.529, 0.83 ) }
    dend_9 { pt3dadd( 112.696, -96.7734, -115.449, 0.28 ) }
    dend_9 { pt3dadd( 114.143, -98.3092, -115.897, 0.55 ) }
    dend_9 { pt3dadd( 115.782, -99.9721, -116.538, 0.28 ) }
    dend_9 { pt3dadd( 117.111, -101.217, -117.224, 0.55 ) }
    dend_9 { pt3dadd( 118.277, -102.248, -117.953, 0.28 ) }
    dend_9 { pt3dadd( 118.591, -102.503, -118.205, 0.55 ) }
    dend_9 { pt3dadd( 120.13, -103.576, -119.654, 0.28 ) }
    dend_9 { pt3dadd( 122.013, -104.787, -121.344, 0.55 ) }
    dend_9 { pt3dadd( 123.898, -105.972, -123.096, 0.28 ) }
    dend_9 { pt3dadd( 124.667, -106.527, -123.809, 0.55 ) }
    dend_9 { pt3dadd( 125.549, -107.201, -124.624, 0.28 ) }
    dend_9 { pt3dadd( 125.769, -107.374, -124.834, 0.55 ) }
    dend_9 { pt3dadd( 128.223, -109.479, -127.19, 0.28 ) }
    dend_9 { pt3dadd( 129.336, -110.54, -127.902, 0.55 ) }
    dend_9 { pt3dadd( 130.354, -111.631, -128.358, 0.28 ) }
    dend_9 { pt3dadd( 130.667, -111.978, -128.399, 0.55 ) }
    dend_9 { pt3dadd( 131.983, -113.506, -128.376, 0.28 ) }
    dend_9 { pt3dadd( 132.805, -114.637, -128.347, 0.55 ) }
    dend_9 { pt3dadd( 135.14, -118.3, -127.591, 0.28 ) }
    dend_9 { pt3dadd( 135.865, -119.478, -127.389, 0.83 ) }
    dend_9 { pt3dadd( 137.027, -121.448, -127.048, 0.28 ) }
    dend_9 { pt3dadd( 137.996, -123.166, -126.831, 0.55 ) }
    dend_9 { pt3dadd( 139.67, -126.322, -126.548, 0.28 ) }
    dend_9 { pt3dadd( 141.88, -130.339, -126.17, 0.83 ) }
    dend_9 { pt3dadd( 144.804, -135.504, -125.861, 0.28 ) }
    dend_9 { pt3dadd( 145.733, -137.078, -125.724, 0.83 ) }
    dend_9 { pt3dadd( 146.877, -138.881, -125.502, 0.28 ) }
    dend_9 { pt3dadd( 147.704, -140.095, -125.27, 0.55 ) }
    dend_9 { pt3dadd( 150.915, -144.087, -124.191, 0.28 ) }
    dend_9 { pt3dadd( 151.317, -144.547, -124.071, 0.55 ) }
    dend_9 { pt3dadd( 152.135, -145.372, -123.762, 0.28 ) }
    dend_9 { pt3dadd( 152.746, -146.005, -123.639, 0.28 ) }
    dend_9 { pt3dadd( 152.975, -146.24, -123.586, 0.55 ) }
    dend_9 { pt3dadd( 154.541, -148.028, -123.66, 0.28 ) }
    dend_9 { pt3dadd( 155.032, -148.828, -124.127, 0.55 ) }
    dend_9 { pt3dadd( 156.741, -151.817, -126.099, 0.28 ) }
    dend_9 { pt3dadd( 157.029, -152.388, -126.563, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 76/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 18.0809, -28.1013, -27.5835, 0.55 ) }
    dend_8 { pt3dadd( 18.6274, -27.6652, -28.8173, 0.55 ) }
    dend_8 { pt3dadd( 19.3587, -26.963, -30.3956, 0.55 ) }
    dend_8 { pt3dadd( 19.9964, -26.2461, -31.6974, 0.28 ) }
    dend_8 { pt3dadd( 21.6678, -24.2099, -35.1921, 0.83 ) }
    dend_8 { pt3dadd( 23.2936, -22.4034, -38.3294, 0.55 ) }
    dend_8 { pt3dadd( 24.992, -20.6789, -41.3754, 0.55 ) }
    dend_8 { pt3dadd( 26.4155, -19.2222, -43.829, 0.55 ) }
    dend_8 { pt3dadd( 27.4721, -18.1511, -45.6753, 0.55 ) }
    dend_8 { pt3dadd( 28.691, -16.9572, -47.7302, 0.55 ) }
    dend_8 { pt3dadd( 30.1847, -15.5621, -50.0084, 0.55 ) }
    dend_8 { pt3dadd( 31.3816, -14.5327, -51.7323, 0.55 ) }
    dend_8 { pt3dadd( 32.356, -13.6695, -53.352, 0.83 ) }
    dend_8 { pt3dadd( 33.5435, -12.5161, -55.8094, 0.55 ) }
    dend_8 { pt3dadd( 33.9811, -11.8314, -57.2884, 0.55 ) }
    dend_8 { pt3dadd( 34.361, -10.7483, -59.36, 0.55 ) }
    dend_8 { pt3dadd( 34.4491, -10.134, -60.4991, 0.55 ) }
    dend_8 { pt3dadd( 34.4768, -8.95483, -62.6758, 0.55 ) }
    dend_8 { pt3dadd( 34.434, -6.84267, -66.2896, 0.55 ) }
    dend_8 { pt3dadd( 34.3328, -4.89687, -69.2691, 1.11 ) }
    dend_8 { pt3dadd( 34.1892, -3.49013, -71.2863, 0.55 ) }
    dend_8 { pt3dadd( 34.0522, -2.1497, -72.9846, 0.83 ) }
    dend_8 { pt3dadd( 33.9416, -1.00774, -74.2801, 0.28 ) }
    dend_8 { pt3dadd( 33.8837, 0.623057, -75.918, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_8 { pt3dadd( 33.9133, 3.873, -78.762, 0.28 ) }
    dend_8 { pt3dadd( 33.9245, 4.56425, -79.2712, 0.83 ) }
    dend_8 { pt3dadd( 33.8636, 7.31195, -81.1364, 0.83 ) }
    dend_8 { pt3dadd( 33.6965, 10.9051, -83.3651, 0.55 ) }
    dend_8 { pt3dadd( 33.5645, 12.7271, -84.363, 0.55 ) }
    dend_8 { pt3dadd( 33.3981, 13.7229, -84.9137, 0.55 ) }
    dend_8 { pt3dadd( 32.7814, 16.4682, -86.3046, 0.28 ) }
    dend_8 { pt3dadd( 32.5563, 17.2738, -86.7069, 0.55 ) }
    dend_8 { pt3dadd( 32.1158, 18.5956, -87.3449, 0.28 ) }
    dend_8 { pt3dadd( 31.2394, 21.3482, -88.622, 0.55 ) }
    dend_8 { pt3dadd( 29.6535, 26.6325, -91.1538, 0.28 ) }
    dend_8 { pt3dadd( 29.4652, 27.3131, -91.4856, 0.55 ) }
    dend_8 { pt3dadd( 28.7855, 30.1616, -92.896, 0.28 ) }
    dend_8 { pt3dadd( 28.5832, 31.3005, -93.4473, 0.55 ) }
    dend_8 { pt3dadd( 28.3505, 33.3952, -94.4156, 0.55 ) }
    dend_8 { pt3dadd( 28.2394, 34.8684, -95.0436, 0.55 ) }
    dend_8 { pt3dadd( 28.1868, 36.4418, -95.5344, 0.55 ) }
    dend_8 { pt3dadd( 28.0485, 39.6251, -96.5585, 0.28 ) }
    dend_8 { pt3dadd( 27.9666, 41.0792, -97.0462, 0.55 ) }
    dend_8 { pt3dadd( 27.7903, 43.3355, -97.974, 0.28 ) }
    dend_8 { pt3dadd( 27.6013, 44.5587, -98.726, 0.28 ) }
    dend_8 { pt3dadd( 27.396, 45.6138, -99.5673, 0.55 ) }
    dend_8 { pt3dadd( 26.8514, 47.2887, -101.401, 0.28 ) }
    dend_8 { pt3dadd( 26.1549, 48.7843, -103.374, 0.83 ) }
    dend_8 { pt3dadd( 24.8481, 50.6582, -106.345, 0.55 ) }
    dend_8 { pt3dadd( 22.7248, 53.1774, -110.806, 0.55 ) }
    dend_8 { pt3dadd( 22.1966, 53.7577, -111.884, 0.83 ) }
    dend_8 { pt3dadd( 19.8405, 56.1601, -116.416, 0.28 ) }
    dend_8 { pt3dadd( 19.2975, 56.7175, -117.394, 0.55 ) }
    dend_8 { pt3dadd( 16.4188, 59.8883, -122.397, 0.28 ) }
    dend_8 { pt3dadd( 15.9128, 60.5612, -123.259, 0.55 ) }
    dend_8 { pt3dadd( 15.1237, 62.0061, -124.774, 0.28 ) }
    dend_8 { pt3dadd( 14.8402, 62.7041, -125.457, 0.55 ) }
    dend_8 { pt3dadd( 14.4758, 64.8734, -127.14, 0.28 ) }
    dend_8 { pt3dadd( 14.4078, 65.9692, -127.897, 0.28 ) }
    dend_8 { pt3dadd( 14.589, 68.855, -129.543, 0.55 ) }
    dend_8 { pt3dadd( 14.7185, 70.8549, -130.684, 0.28 ) }
    dend_8 { pt3dadd( 14.7651, 71.4217, -130.996, 0.55 ) }
    dend_8 { pt3dadd( 15.0764, 74.6208, -132.808, 0.28 ) }
    dend_8 { pt3dadd( 15.1237, 75.0032, -133.029, 0.55 ) }
    dend_8 { pt3dadd( 15.4955, 77.2402, -134.164, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 41/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 4.9266, -116.51, -50.0946, 0.28 ) }
    dend_6 { pt3dadd( 3.9381, -119.126, -51.1903, 0.28 ) }
    dend_6 { pt3dadd( 3.63664, -120.019, -51.5203, 0.55 ) }
    dend_6 { pt3dadd( 2.9214, -122.208, -52.3383, 0.28 ) }
    dend_6 { pt3dadd( 2.10204, -125.001, -53.145, 0.55 ) }
    dend_6 { pt3dadd( 1.31183, -127.695, -53.9619, 0.28 ) }
    dend_6 { pt3dadd( 0.836085, -129.513, -54.4108, 0.55 ) }
    dend_6 { pt3dadd( 0.333221, -131.703, -54.9376, 0.28 ) }
    dend_6 { pt3dadd( 0.10277, -132.883, -55.1456, 0.55 ) }
    dend_6 { pt3dadd( -0.57625, -136.79, -55.5192, 0.28 ) }
    dend_6 { pt3dadd( -1.01987, -139.539, -55.5712, 0.55 ) }
    dend_6 { pt3dadd( -2.02152, -145.559, -55.4518, 0.28 ) }
    dend_6 { pt3dadd( -2.12666, -146.318, -55.4108, 0.55 ) }
    dend_6 { pt3dadd( -2.84666, -152.36, -55.0238, 0.28 ) }
    dend_6 { pt3dadd( -2.98868, -154.792, -54.8477, 0.55 ) }
    dend_6 { pt3dadd( -3.04158, -157.234, -54.6559, 0.28 ) }
    dend_6 { pt3dadd( -3.02316, -158.379, -54.5618, 0.55 ) }
    dend_6 { pt3dadd( -2.82305, -163.023, -54.2601, 0.28 ) }
    dend_6 { pt3dadd( -2.74645, -164.311, -54.1966, 0.55 ) }
    dend_6 { pt3dadd( -2.02281, -172.682, -54.0394, 0.28 ) }
    dend_6 { pt3dadd( -1.88559, -174.141, -54.0296, 0.83 ) }
    dend_6 { pt3dadd( -1.54683, -177.746, -53.9982, 0.28 ) }
    dend_6 { pt3dadd( -1.39977, -179.485, -53.976, 0.55 ) }
    dend_6 { pt3dadd( -1.12188, -183.616, -53.9261, 0.28 ) }
    dend_6 { pt3dadd( -0.913016, -186.93, -53.8695, 0.28 ) }
    dend_6 { pt3dadd( -0.851471, -188.214, -53.8167, 0.55 ) }
    dend_6 { pt3dadd( -0.739917, -190.196, -53.7399, 0.28 ) }
    dend_6 { pt3dadd( -0.678655, -192.076, -53.6179, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 69/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 4.9266, -116.51, -50.0946, 0.28 ) }
    dend_5 { pt3dadd( 5.34515, -120.713, -50.0081, 0.28 ) }
    dend_5 { pt3dadd( 5.389, -121.49, -49.8324, 0.55 ) }
    dend_5 { pt3dadd( 5.40002, -123.223, -49.3235, 0.28 ) }
    dend_5 { pt3dadd( 5.39665, -124.05, -49.0717, 0.55 ) }
    dend_5 { pt3dadd( 5.35917, -125.652, -48.6797, 0.28 ) }
    dend_5 { pt3dadd( 5.34254, -126.08, -48.6019, 0.55 ) }
    dend_5 { pt3dadd( 4.875, -130.589, -48.0073, 0.28 ) }
    dend_5 { pt3dadd( 4.77356, -131.407, -47.9025, 0.83 ) }
    dend_5 { pt3dadd( 4.50797, -133.325, -47.7647, 0.83 ) }
    dend_5 { pt3dadd( 3.92342, -137.162, -47.7547, 0.28 ) }
    dend_5 { pt3dadd( 3.63006, -138.947, -47.8724, 0.55 ) }
    dend_5 { pt3dadd( 3.13969, -141.61, -48.4504, 0.28 ) }
    dend_5 { pt3dadd( 2.78284, -143.553, -49.0734, 0.28 ) }
    dend_5 { pt3dadd( 2.56382, -144.942, -49.4985, 0.55 ) }
    dend_5 { pt3dadd( 2.2376, -146.894, -50.1082, 0.28 ) }
    dend_5 { pt3dadd( 2.11159, -147.698, -50.3516, 0.55 ) }
    dend_5 { pt3dadd( 1.45714, -152.388, -51.6574, 0.28 ) }
    dend_5 { pt3dadd( 0.966335, -156.342, -52.8858, 0.28 ) }
    dend_5 { pt3dadd( 0.791743, -157.811, -53.3666, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
    ModelViewParmSubset_2 = new SectionList()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_41 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_59 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_58 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_53 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_43 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_40 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_33 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_51 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_45 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_36 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_32 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_31 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_48 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_47 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_39 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_25 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_10 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_28 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_27 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_17 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_16 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_14 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_4 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_19 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_6 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_5 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_34 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_42 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_57 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_49 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_35 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_24 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_44 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_3 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_50 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_54 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_30 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_46 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_26 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_12 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_22 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_23 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_41 nseg = 7
    dend_59 nseg = 7
    dend_58 nseg = 7
    dend_56 nseg = 7
    dend_55 nseg = 9
    dend_53 nseg = 7
    dend_43 nseg = 5
    dend_40 nseg = 3
    dend_33 nseg = 5
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_45 nseg = 7
    dend_36 nseg = 5
    dend_32 nseg = 5
    dend_31 nseg = 9
    dend_21 nseg = 3
    dend_48 nseg = 5
    dend_47 nseg = 7
    dend_39 nseg = 5
    dend_38 nseg = 3
    dend_25 nseg = 7
    dend_10 nseg = 7
    dend_28 nseg = 3
    dend_27 nseg = 5
    dend_17 nseg = 3
    dend_16 nseg = 7
    dend_14 nseg = 3
    dend_13 nseg = 7
    dend_4 nseg = 5
    dend_19 nseg = 3
    dend_9 nseg = 11
    dend_8 nseg = 9
    dend_6 nseg = 3
    dend_5 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_NBC_421c200e4e_0_0


