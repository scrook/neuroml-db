// Cell: Cell_478513451
/*
{
  "id" : "Cell_478513451",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "534.656, 612.04, 40.88, 16.3448", "542.828, 612.04, 40.88, 16.3448", "551.0, 612.04, 40.88, 16.3448" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "542.828, 612.04, 40.88, 1.0", "548.669, 625.856, 40.88, 1.0", "554.511, 639.672, 40.88, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "548.073, 618.218, 46.2868, 0.2288", "548.872, 619.014, 46.7454, 0.3296", "549.671, 619.81, 46.9566, 0.4018", "550.486, 620.602, 47.1668, 0.3888", "551.355, 621.34, 47.3393, 0.3914", "552.324, 621.947, 47.4813, 0.4948", "553.395, 622.223, 47.5992, 0.4362", "554.539, 622.262, 47.6963, 0.3996", "555.682, 622.3, 47.7862, 0.4384" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "541.431, 604.469, 42.6919, 0.2288", "541.104, 603.396, 42.6866, 0.3152", "540.065, 602.918, 42.6846, 0.3456", "538.995, 602.567, 42.6815, 0.4268", "537.852, 602.515, 42.6776, 0.458", "536.709, 602.462, 42.672, 0.4082", "535.566, 602.41, 42.6639, 0.38", "534.423, 602.358, 42.6524, 0.4742", "533.28, 602.306, 42.6373, 0.3966", "532.137, 602.253, 42.6174, 0.3318", "530.998, 602.333, 42.5832, 0.2864", "529.859, 602.43, 42.5368, 0.2966", "528.719, 602.526, 42.4805, 0.315", "527.58, 602.624, 42.4183, 0.3504", "526.44, 602.721, 42.3545, 0.4116", "525.301, 602.818, 42.294, 0.5466", "524.161, 602.916, 42.2405, 0.6916", "523.211, 603.078, 42.1663, 0.786", "522.08, 603.24, 42.1204, 0.6624", "520.96, 603.141, 42.1338, 0.511", "519.891, 602.75, 42.1954, 0.539", "518.853, 602.332, 42.2366, 0.4658", "517.801, 602.289, 42.3548, 0.4802", "516.752, 602.356, 42.6754, 0.4626", "515.811, 602.061, 43.1819, 0.417", "515.094, 601.297, 43.7296, 0.3962", "514.561, 600.348, 44.109, 0.5054", "514.118, 599.329, 44.3624, 0.449", "513.617, 598.35, 44.6684, 0.4556", "513.014, 597.709, 45.1783, 0.3864", "512.26, 596.977, 45.7262, 0.424", "511.532, 596.102, 46.214, 0.3754", "511.02, 595.087, 46.6567, 0.4026", "510.438, 594.12, 47.0873, 0.3406", "509.8, 593.196, 47.5096, 0.3126", "509.138, 592.269, 47.8836, 0.2978", "508.306, 591.522, 48.2849, 0.3184", "507.353, 590.932, 48.7301, 0.3518", "506.524, 590.179, 49.1985, 0.438", "505.833, 589.327, 49.7095, 0.4798", "505.224, 588.378, 50.1852, 0.4424", "504.372, 587.644, 50.6293, 0.4752", "503.533, 586.994, 51.1224, 0.4958", "502.566, 586.398, 51.5236, 0.5016", "501.547, 585.882, 51.8112, 0.4414", "500.651, 585.332, 51.8826, 0.444", "500.099, 584.345, 52.0156, 0.5816", "499.497, 583.461, 52.3015, 0.6492", "498.594, 582.779, 52.6271, 0.5412", "497.616, 582.258, 53.0715, 0.5578", "496.748, 581.563, 53.5993, 0.452", "495.958, 580.815, 54.196, 0.4608", "494.912, 580.393, 54.7778, 0.3976", "493.835, 580.107, 55.384, 0.4384", "492.748, 579.879, 56.0216, 0.4328", "491.668, 579.729, 56.6888, 0.3594", "490.575, 579.676, 57.3695, 0.3", "489.573, 579.328, 58.1241, 0.2746", "488.59, 578.887, 58.9128, 0.2746", "487.522, 578.631, 59.6728, 0.2746", "486.425, 578.538, 60.4204, 0.2746", "485.447, 578.182, 61.1943, 0.2746", "484.621, 577.577, 62.0043, 0.2746", "484.296, 577.139, 62.6716, 0.2746", "483.568, 576.284, 63.2834, 0.2746", "482.866, 575.409, 63.8534, 0.2746", "482.25, 574.473, 64.3891, 0.2746", "481.633, 573.537, 64.8948, 0.2746", "480.814, 572.879, 65.3764, 0.2746", "479.726, 572.588, 65.8409, 0.2746", "478.638, 572.297, 66.276, 0.2746", "477.549, 572.007, 66.6795, 0.2746", "476.453, 571.759, 67.041, 0.2746", "475.31, 571.771, 67.3053, 0.2746", "474.166, 571.784, 67.5004, 0.2746", "473.022, 571.797, 67.6519, 0.2746", "471.878, 571.81, 67.7827, 0.2746", "470.734, 571.823, 67.9134, 0.2746", "469.605, 571.809, 68.1254, 0.2746", "468.477, 571.796, 68.4085, 0.2746", "467.348, 571.783, 68.7394, 0.2746", "466.22, 571.77, 69.0959, 0.2746", "465.091, 571.756, 69.456, 0.2746", "463.962, 571.744, 69.7995, 0.2746", "462.836, 571.755, 70.1042, 0.2746", "461.736, 572.069, 70.3072, 0.2746", "460.635, 572.382, 70.4259, 0.2746", "459.536, 572.697, 70.4774, 0.2746", "458.435, 573.01, 70.476, 0.2746", "457.335, 573.324, 70.4329, 0.2746", "456.242, 573.655, 70.3553, 0.2746", "455.224, 574.178, 70.2458, 0.2746", "454.206, 574.7, 70.0955, 0.2746", "453.189, 575.221, 69.8961, 0.2746", "452.152, 575.608, 69.6063, 0.2746", "451.071, 575.647, 69.1421, 0.2746", "449.989, 575.685, 68.5471, 0.2746", "448.908, 575.723, 67.8661, 0.2746", "447.826, 575.76, 67.1432, 0.2746", "446.745, 575.799, 66.4194, 0.2746", "445.662, 575.837, 65.7317, 0.2746", "444.562, 575.872, 65.1456, 0.2746", "443.419, 575.904, 64.743, 0.2746", "442.275, 575.935, 64.4843, 0.2746", "441.131, 575.967, 64.3314, 0.2746", "439.988, 575.998, 64.2488, 0.2746", "438.844, 576.029, 64.2032, 0.2746", "437.7, 576.061, 64.1648, 0.2746", "436.557, 576.092, 64.1147, 0.2746", "435.419, 576.174, 64.034, 0.2746", "434.283, 576.292, 63.917, 0.2746", "433.148, 576.409, 63.772, 0.2746", "432.013, 576.527, 63.607, 0.2746", "430.877, 576.645, 63.4304, 0.2746", "429.742, 576.761, 63.2486, 0.2746", "428.608, 576.879, 63.0694, 0.2746", "427.473, 576.996, 62.8967, 0.2746", "426.337, 577.114, 62.7332, 0.2746", "425.202, 577.23, 62.5808, 0.2746", "424.067, 577.348, 62.4417, 0.2746", "422.925, 577.352, 62.3398, 0.2746", "421.781, 577.325, 62.2745, 0.2746", "420.637, 577.299, 62.2381, 0.2746", "419.493, 577.273, 62.2236, 0.2748", "418.35, 577.246, 62.2244, 0.2748", "417.207, 577.22, 62.235, 0.2752", "416.062, 577.194, 62.2521, 0.2756", "414.918, 577.169, 62.2756, 0.2766", "413.778, 577.244, 62.3084, 0.2782", "412.636, 577.32, 62.3538, 0.2814", "411.495, 577.395, 62.4182, 0.287", "410.353, 577.471, 62.5094, 0.2988", "409.211, 577.546, 62.6357, 0.3142", "408.07, 577.622, 62.8037, 0.3738", "406.937, 577.675, 63.035, 0.3344", "405.851, 577.607, 63.4273, 0.301", "404.766, 577.538, 63.9366, 0.2766", "403.68, 577.469, 64.5212, 0.2782", "402.594, 577.401, 65.1479, 0.2814", "401.542, 577.801, 65.683, 0.287", "400.493, 578.258, 66.1256, 0.2988", "399.444, 578.714, 66.4927, 0.314", "398.395, 579.171, 66.8142, 0.3734", "397.618, 579.349, 67.324, 0.3338", "397.006, 579.359, 68.0982, 0.2998", "396.714, 580.016, 68.707, 0.2742", "395.75, 580.538, 69.1614, 0.274", "395.314, 581.555, 69.4728, 0.2736", "395.199, 582.691, 69.6542, 0.2728", "395.019, 583.82, 69.72, 0.2712", "394.465, 584.584, 69.72, 0.2684", "393.628, 585.086, 69.72, 0.2626", "392.964, 585.958, 69.72, 0.2542", "392.368, 586.758, 69.72, 0.2288", "391.706, 587.444, 69.72, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "546.491, 619.51, 42.1756, 0.2288", "546.777, 620.591, 43.1276, 0.4788", "547.069, 621.639, 43.5509, 0.5562", "547.407, 622.659, 44.0698, 0.5814", "548.015, 623.568, 44.6152, 0.7448", "548.786, 624.409, 45.0839, 0.9388", "549.589, 625.225, 45.4563, 0.9124", "550.299, 625.937, 45.7736, 0.678", "551.186, 626.581, 46.1418, 0.4586", "551.619, 627.633, 46.4442, 0.3792", "552.036, 628.698, 46.7093, 0.4724" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "540.945, 620.358, 37.9327, 2.2698", "541.453, 621.192, 36.9905, 0.4012" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "546.497, 619.553, 40.7747, 0.2288", "546.802, 620.628, 40.5602, 0.3828", "546.631, 621.732, 40.4474, 0.4898", "546.513, 622.868, 40.3908, 0.6018", "546.565, 623.998, 40.4354, 0.5442", "546.863, 625.051, 40.6115, 0.5812", "547.134, 626.114, 40.8761, 0.6364", "547.807, 627.024, 41.0855, 0.805", "548.674, 627.729, 41.134, 0.796", "549.423, 628.574, 41.0634, 0.7394", "550.135, 629.47, 40.9567, 0.5982", "550.813, 630.391, 40.8299, 0.5126", "551.58, 631.226, 40.67, 0.4142", "552.296, 632.081, 40.4765, 0.397", "552.87, 633.068, 40.3763, 0.477", "553.485, 634.003, 40.4163, 0.5404", "554.134, 634.931, 40.525, 0.612", "554.706, 635.921, 40.6241, 0.5102", "555.344, 636.87, 40.7067, 0.5462", "556.132, 637.701, 40.7613, 0.4368", "556.935, 638.516, 40.7753, 0.4018", "557.721, 639.346, 40.7582, 0.4374", "558.402, 640.265, 40.7196, 0.473", "558.921, 641.261, 40.6092, 0.4594", "559.487, 642.242, 40.4712, 0.3614" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "535.842, 608.139, 41.9846, 0.6864", "534.985, 607.424, 41.7046, 0.5382", "534.015, 607.369, 41.5638, 0.552", "533.433, 608.289, 41.3619, 0.4414", "533.087, 609.378, 41.2115, 0.4404", "532.693, 610.448, 41.111, 0.3634", "532.342, 611.513, 41.0584, 0.357", "532.301, 612.656, 41.0539, 0.3698", "532.286, 613.79, 41.1188, 0.5022", "532.185, 614.91, 41.2191, 0.4492", "531.966, 616.02, 41.2947, 0.4258", "531.803, 617.134, 41.3792, 0.477", "531.637, 618.26, 41.4053, 0.5718", "531.452, 619.38, 41.3571, 0.5186", "531.716, 620.472, 41.1838, 0.3866", "531.761, 621.524, 40.8366, 0.3036", "531.37, 622.577, 40.467, 0.2812" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "550.487, 609.791, 37.5211, 0.2288", "551.625, 609.677, 37.8014, 0.6038", "552.704, 609.367, 37.9039, 0.6836", "553.706, 608.823, 38.0461, 0.6384", "554.703, 608.404, 38.295, 0.5768", "555.728, 608.202, 38.6663, 0.5842", "556.867, 608.268, 38.9396, 0.4636", "557.929, 607.971, 39.0146, 0.4344" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "554.511, 639.672, 40.88, 1.0", "560.352, 653.488, 40.88, 1.0", "566.193, 667.304, 40.88, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "555.682, 622.3, 47.7862, 0.4384", "555.668, 622.768, 48.3022, 0.4576", "555.611, 623.678, 49.8932, 0.5352", "554.914, 624.296, 50.5134, 0.4938", "553.913, 624.708, 51.1526, 0.5898", "553.006, 625.027, 51.9386, 0.616", "552.609, 625.836, 52.6812, 0.4854", "552.562, 626.978, 53.2815, 0.4276", "552.515, 628.122, 53.7608, 0.34", "552.434, 629.216, 54.2884, 0.3114", "552.351, 630.307, 54.8632, 0.2956", "552.267, 631.399, 55.4716, 0.3146", "552.094, 632.498, 56.0969, 0.3446", "551.885, 633.602, 56.7218, 0.4246", "551.676, 634.705, 57.328, 0.4544", "551.969, 635.717, 57.9354, 0.3992", "552.431, 636.7, 58.5427, 0.3758", "552.893, 637.684, 59.1318, 0.4052", "553.536, 638.597, 59.6319, 0.565", "554.237, 639.488, 60.0272, 0.58", "554.937, 640.379, 60.3268, 0.5986", "555.219, 641.448, 60.4069, 0.4498", "555.46, 642.531, 60.3221, 0.3778", "555.714, 643.632, 60.1975, 0.3972", "555.977, 644.745, 60.123, 0.3788", "556.239, 645.859, 60.1163, 0.3788", "556.526, 646.966, 60.1852, 0.4422", "556.959, 647.982, 60.4066, 0.4816", "557.477, 648.943, 60.781, 0.4752", "557.995, 649.903, 61.2483, 0.392", "558.248, 650.951, 61.7067, 0.3554", "558.211, 652.094, 62.0819, 0.4024", "558.176, 653.238, 62.3874, 0.3896", "558.281, 654.357, 62.6517, 0.3928", "558.668, 655.427, 62.9258, 0.4974", "559.053, 656.498, 63.2324, 0.4418", "559.44, 657.569, 63.5981, 0.4052", "559.826, 658.64, 64.0408, 0.4736", "560.212, 659.711, 64.57, 0.3956", "560.598, 660.781, 65.1944, 0.3298", "560.984, 661.852, 65.9252, 0.2826", "561.201, 662.706, 66.9603, 0.2894", "561.365, 663.492, 68.2976, 0.3016", "561.529, 664.28, 69.8558, 0.327", "561.677, 665.01, 71.5719, 0.3612", "561.79, 665.624, 73.3944, 0.4862", "561.903, 666.238, 75.2296, 0.42", "561.826, 667.154, 76.8863, 0.3696", "561.719, 668.122, 78.3415, 0.3822", "561.61, 669.089, 79.609, 0.35", "561.847, 670.206, 80.4961, 0.331", "562.088, 671.324, 81.0888, 0.3266", "562.31, 672.43, 81.5416, 0.3976", "562.532, 673.535, 81.9115, 0.3734", "562.754, 674.64, 82.2301, 0.3988", "562.623, 675.747, 82.4754, 0.3338", "562.342, 676.857, 82.668, 0.3", "562.063, 677.966, 82.817, 0.2746", "561.784, 679.076, 82.9315, 0.2746", "561.505, 680.185, 83.0309, 0.2746", "561.154, 681.262, 83.1477, 0.2746", "560.608, 682.252, 83.3336, 0.2746", "560.062, 683.243, 83.5708, 0.2746", "559.517, 684.232, 83.8382, 0.2746", "558.932, 685.208, 84.0818, 0.2746", "558.321, 686.176, 84.2744, 0.2746", "557.71, 687.144, 84.4262, 0.2746", "557.099, 688.11, 84.5516, 0.2746", "556.489, 689.078, 84.6742, 0.2746", "555.879, 690.045, 84.8151, 0.2746", "555.268, 691.013, 84.9932, 0.2746", "554.819, 692.032, 85.288, 0.2746", "554.364, 693.047, 85.7027, 0.2746", "553.908, 694.061, 86.2098, 0.2746", "553.452, 695.076, 86.7821, 0.2746", "552.997, 696.091, 87.3953, 0.2746", "552.542, 697.106, 88.0261, 0.2746", "552.085, 698.119, 88.6528, 0.2746", "551.63, 699.134, 89.2682, 0.2746", "551.175, 700.149, 89.8699, 0.2746", "550.712, 701.162, 90.4518, 0.2746", "550.192, 702.166, 90.984, 0.2746", "549.67, 703.17, 91.4766, 0.2746", "549.15, 704.173, 91.9386, 0.2746", "548.629, 705.178, 92.3787, 0.2746", "548.109, 706.181, 92.8046, 0.2746", "547.587, 707.185, 93.2238, 0.2746", "547.067, 708.189, 93.6412, 0.2746", "546.546, 709.192, 94.0559, 0.2746", "546.026, 710.196, 94.4675, 0.2746", "545.505, 711.2, 94.8738, 0.2746", "544.983, 712.204, 95.2739, 0.2746", "544.463, 713.207, 95.6642, 0.2746", "543.942, 714.212, 96.0406, 0.2746", "543.422, 715.215, 96.3984, 0.2746", "542.9, 716.218, 96.7333, 0.2746", "542.38, 717.223, 97.0418, 0.2746", "541.662, 718.11, 97.2653, 0.2746", "540.93, 718.989, 97.4176, 0.2746", "540.198, 719.868, 97.5176, 0.2746", "539.465, 720.746, 97.5839, 0.2746", "538.732, 721.625, 97.634, 0.2746", "538.0, 722.505, 97.6861, 0.2746", "537.268, 723.383, 97.7595, 0.2746", "536.535, 724.262, 97.8614, 0.2746", "535.803, 725.14, 97.9992, 0.2746", "535.07, 726.019, 98.1789, 0.2746", "534.36, 726.883, 98.4855, 0.2746", "533.653, 727.745, 98.9047, 0.2746", "532.946, 728.607, 99.4104, 0.2748", "532.24, 729.469, 99.9782, 0.2748", "531.533, 730.331, 100.586, 0.2752", "530.826, 731.193, 101.213, 0.2756", "530.119, 732.055, 101.842, 0.2766", "529.412, 732.917, 102.472, 0.2782", "528.705, 733.779, 103.102, 0.2814", "527.998, 734.641, 103.734, 0.287", "527.291, 735.503, 104.366, 0.2988", "526.586, 736.365, 104.999, 0.3142", "525.878, 737.228, 105.633, 0.3734", "525.318, 738.173, 106.271, 0.3338", "524.916, 739.211, 106.915, 0.3", "524.516, 740.248, 107.561, 0.2746", "524.116, 741.286, 108.21, 0.2744", "523.715, 742.323, 108.86, 0.2744", "523.315, 743.361, 109.509, 0.2742", "522.914, 744.398, 110.157, 0.274", "522.513, 745.436, 110.801, 0.2736", "522.112, 746.474, 111.439, 0.2728", "521.712, 747.511, 112.081, 0.2712", "521.312, 748.549, 112.71, 0.2684", "520.911, 749.587, 113.314, 0.2626", "520.51, 750.624, 113.883, 0.2542", "520.109, 751.662, 114.407, 0.2288", "519.709, 752.699, 115.426, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "555.682, 622.3, 47.7862, 0.4384", "556.786, 621.298, 47.9912, 0.4508", "557.613, 620.547, 48.2451, 0.534", "558.567, 619.946, 48.4602, 0.6252", "559.594, 619.459, 48.5968, 0.6428", "560.735, 619.379, 48.6545, 0.4952", "561.863, 619.469, 48.6343, 0.4098", "562.968, 619.751, 48.526, 0.4822", "564.038, 620.127, 48.3151, 0.4114", "565.106, 620.502, 48.0323, 0.3602", "566.176, 620.878, 47.6924, 0.334", "567.245, 621.254, 47.3088, 0.41", "568.329, 621.622, 46.9361, 0.4036", "569.412, 621.99, 46.564, 0.4198", "570.197, 622.67, 46.0407, 0.5424", "570.935, 623.399, 45.3846, 0.5494", "571.581, 624.206, 44.6454, 0.488", "572.175, 625.059, 43.8679, 0.5064", "572.613, 626.018, 43.1561, 0.5852", "572.975, 627.087, 42.6342, 0.5148", "573.518, 628.094, 42.2853, 0.5186", "573.637, 629.213, 42.0686, 0.561", "573.961, 630.25, 41.9034, 0.4678", "574.581, 631.185, 41.7284, 0.4422", "575.403, 631.935, 41.5862, 0.367", "576.371, 632.537, 41.501, 0.3622", "577.455, 632.899, 41.494, 0.387", "578.537, 633.26, 41.552, 0.4972", "579.62, 633.62, 41.6623, 0.6176", "580.702, 633.982, 41.8065, 0.5634", "581.786, 634.343, 41.9616, 0.6652", "582.869, 634.706, 42.1053, 0.5582", "583.953, 635.072, 42.224, 0.4226", "585.037, 635.438, 42.3287, 0.3242", "586.12, 635.804, 42.4284, 0.3142" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "552.036, 628.698, 46.7093, 0.4724", "552.391, 629.271, 46.6805, 0.2288", "553.289, 629.939, 45.8256, 0.283", "554.188, 630.607, 45.4616, 0.2902", "555.087, 631.275, 45.0316, 0.3032", "555.985, 631.943, 44.5584, 0.3298", "556.884, 632.611, 44.0625, 0.3662", "557.757, 633.345, 43.6318, 0.4964", "558.825, 633.707, 43.2121, 0.4328", "559.904, 634.046, 42.7896, 0.4242", "560.984, 634.385, 42.3562, 0.3338", "562.063, 634.723, 41.9042, 0.3", "563.143, 635.062, 41.4263, 0.2746", "563.978, 635.776, 40.8901, 0.2746", "564.762, 636.57, 40.3046, 0.2746", "565.544, 637.364, 39.6777, 0.2746", "566.328, 638.157, 39.0166, 0.2744", "567.076, 638.946, 38.2981, 0.2744", "567.803, 639.729, 37.5236, 0.2742", "568.529, 640.513, 36.7254, 0.274", "569.255, 641.297, 35.9302, 0.2736", "569.982, 642.08, 35.1635, 0.2728", "570.708, 642.864, 34.447, 0.2712", "571.691, 643.391, 33.9139, 0.2684", "572.738, 643.854, 33.5639, 0.2626", "573.785, 644.316, 33.3553, 0.2542", "574.83, 644.778, 33.2492, 0.2288", "575.877, 645.24, 33.2046, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "552.036, 628.698, 46.7093, 0.4724", "552.51, 629.73, 47.0386, 0.3934", "552.978, 630.749, 47.4102, 0.3258", "553.447, 631.769, 47.7994, 0.2752", "553.914, 632.789, 48.1905, 0.276", "554.409, 633.799, 48.5694, 0.277", "555.01, 634.771, 48.8603, 0.2792", "555.613, 635.745, 49.0717, 0.2832", "556.215, 636.717, 49.2248, 0.2904" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "541.453, 621.192, 36.9905, 0.4012", "541.729, 621.468, 36.2771, 0.3624", "542.344, 622.429, 35.7762, 0.4646", "543.139, 623.249, 35.4626, 0.4944", "544.047, 623.941, 35.3153, 0.639", "544.663, 624.862, 35.3156, 0.7016", "545.067, 625.901, 35.3637, 0.6714", "545.522, 626.949, 35.2929, 0.6396", "545.826, 627.89, 34.9135, 0.6914", "546.135, 628.867, 34.3244, 0.708" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "541.453, 621.192, 36.9905, 0.4012", "541.427, 622.393, 35.317, 0.4576", "541.256, 623.518, 35.8042, 0.491", "541.01, 624.578, 36.048, 0.4208", "540.741, 625.626, 36.3759, 0.4106", "540.572, 626.739, 36.6537, 0.4954", "540.529, 627.88, 36.8211, 0.607", "540.469, 628.99, 36.8225, 0.5786", "540.214, 630.081, 36.715, 0.5246", "540.117, 631.196, 36.5355, 0.4312", "540.276, 632.301, 36.4613, 0.4534", "540.511, 633.417, 36.4238, 0.4606", "540.765, 634.385, 36.5375, 0.4118", "540.978, 635.5, 36.6467, 0.3926", "541.083, 636.636, 36.7433, 0.4686", "541.488, 637.644, 36.7116, 0.5256", "541.872, 638.702, 36.6094, 0.5822", "541.994, 639.83, 36.5165, 0.4664", "541.922, 640.969, 36.4039, 0.4096", "541.837, 642.108, 36.2687, 0.452", "541.502, 643.192, 36.1273, 0.4996", "540.939, 644.183, 35.9764, 0.5094", "540.454, 645.178, 35.7431, 0.4512", "539.855, 646.133, 35.492, 0.4854", "539.243, 647.051, 35.1996, 0.5456", "538.776, 648.074, 34.9359, 0.444", "538.578, 649.09, 34.9364, 0.3746", "538.199, 650.163, 34.9992, 0.3554", "537.776, 651.225, 35.0812, 0.4756", "537.297, 652.264, 35.1627, 0.3992", "536.924, 653.345, 35.236, 0.3366", "536.88, 654.487, 35.2867, 0.2952", "536.881, 655.629, 35.2946, 0.3138", "536.893, 656.742, 35.2302, 0.3432", "536.968, 657.872, 35.2747, 0.4222" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "559.487, 642.242, 40.4712, 0.3614", "559.899, 642.556, 40.3446, 0.4576", "560.81, 643.191, 40.9872, 0.5198", "561.723, 643.828, 41.288, 0.4988", "562.657, 644.49, 41.5551, 0.4364", "563.591, 645.151, 41.7956, 0.4346", "564.628, 645.59, 42.0182, 0.5644", "565.731, 645.89, 42.2341, 0.6164", "566.821, 645.925, 42.5653, 0.4858", "567.88, 646.061, 42.9752, 0.4286", "568.747, 646.81, 43.3443, 0.3418", "569.702, 647.237, 43.7704, 0.3144", "570.623, 647.594, 44.2627, 0.3024", "571.158, 648.606, 44.6494, 0.321", "571.856, 649.489, 44.9865, 0.386", "572.615, 650.325, 45.3062, 0.3582", "573.193, 651.262, 45.5913, 0.3396", "573.455, 652.376, 45.7974, 0.3738", "573.893, 653.432, 45.9514, 0.3344", "574.335, 654.488, 46.083, 0.301", "575.21, 655.212, 46.2386, 0.2766", "576.091, 655.932, 46.4162, 0.2782", "576.971, 656.653, 46.6169, 0.2814", "577.891, 657.324, 46.8196, 0.287", "578.855, 657.938, 47.0002, 0.2988", "579.82, 658.553, 47.1657, 0.3142", "580.785, 659.167, 47.3217, 0.3734", "581.837, 659.566, 47.5448, 0.3338", "582.897, 659.95, 47.8262, 0.3", "583.955, 660.333, 48.1508, 0.2746", "585.014, 660.716, 48.5024, 0.2746", "586.112, 661.007, 48.8138, 0.2746", "587.158, 661.404, 49.063, 0.2748", "588.103, 662.037, 49.2744, 0.2748", "589.111, 662.567, 49.4866, 0.2752", "590.117, 663.097, 49.7042, 0.2756", "591.125, 663.626, 49.931, 0.2766", "592.132, 664.156, 50.169, 0.2784", "593.14, 664.686, 50.412, 0.2816", "594.16, 665.195, 50.6388, 0.2874", "595.184, 665.701, 50.8435, 0.2994", "596.208, 666.205, 51.0289, 0.3152", "597.232, 666.709, 51.1972, 0.3756", "598.257, 667.214, 51.35, 0.3378", "599.279, 667.721, 51.49, 0.3074", "600.202, 668.397, 51.5939, 0.288", "601.125, 669.072, 51.672, 0.3008", "602.049, 669.747, 51.7339, 0.3178", "603.024, 670.327, 51.7908, 0.3802", "604.096, 670.726, 51.8543, 0.3464", "605.168, 671.125, 51.9361, 0.3242", "606.241, 671.212, 52.0425, 0.3142", "607.32, 670.88, 52.185, 0.3734", "608.424, 670.997, 52.4426, 0.334", "609.528, 671.114, 52.78, 0.3", "610.632, 671.231, 53.1656, 0.2748", "611.776, 671.251, 53.4761, 0.2748", "612.92, 671.269, 53.7191, 0.2752", "614.064, 671.289, 53.9039, 0.2756", "615.179, 671.401, 54.0484, 0.2766", "616.149, 671.997, 54.2077, 0.2782", "617.119, 672.594, 54.392, 0.2814", "618.089, 673.191, 54.6084, 0.287", "619.06, 673.789, 54.8478, 0.2988", "620.03, 674.385, 55.1001, 0.3142", "621.011, 674.959, 55.3571, 0.3734", "622.072, 675.371, 55.6139, 0.334", "623.133, 675.782, 55.8673, 0.3002", "624.194, 676.194, 56.114, 0.275", "625.255, 676.607, 56.3511, 0.2752", "626.316, 677.019, 56.5765, 0.2758", "627.403, 677.358, 56.768, 0.2768", "628.514, 677.631, 56.9134, 0.2788", "629.65, 677.74, 57.0293, 0.2824", "630.792, 677.809, 57.1332, 0.289", "631.934, 677.877, 57.2421, 0.3024", "633.076, 677.946, 57.3706, 0.321", "634.218, 678.015, 57.5288, 0.386", "635.313, 678.179, 57.8116, 0.3584", "636.4, 678.361, 58.205, 0.3402", "637.481, 678.559, 58.6723, 0.3744", "638.37, 679.268, 59.1181, 0.3358", "639.26, 679.979, 59.537, 0.3036", "640.149, 680.689, 59.9256, 0.2814", "641.038, 681.4, 60.2832, 0.287", "641.927, 682.11, 60.6262, 0.2988", "642.817, 682.819, 60.9717, 0.3142", "643.706, 683.53, 61.3348, 0.3734", "644.502, 684.319, 61.7478, 0.334", "645.257, 685.143, 62.2138, 0.3", "646.012, 685.968, 62.718, 0.2746", "646.768, 686.791, 63.2467, 0.2748", "647.523, 687.615, 63.7865, 0.275", "648.331, 688.388, 64.318, 0.2754", "649.225, 689.078, 64.8203, 0.2762", "650.118, 689.769, 65.2957, 0.2776", "651.01, 690.459, 65.7488, 0.2802", "651.904, 691.15, 66.1814, 0.285", "652.797, 691.84, 66.5935, 0.2938", "653.69, 692.531, 66.9841, 0.3112", "654.583, 693.221, 67.3504, 0.3382", "655.067, 693.938, 67.7172, 0.413", "655.172, 694.391, 67.9762, 0.4328", "655.986, 695.109, 68.1472, 0.3594", "657.024, 695.56, 68.2494, 0.3", "658.068, 695.915, 68.3015, 0.2746", "658.935, 696.596, 68.32, 0.2746", "659.794, 697.33, 68.32, 0.2746", "660.749, 697.959, 68.32, 0.2746", "661.691, 698.571, 68.32, 0.2746", "662.736, 699.034, 68.3203, 0.2746", "663.835, 699.342, 68.3203, 0.2746", "664.675, 700.057, 68.3203, 0.2746", "665.593, 700.586, 68.3206, 0.2746", "666.709, 700.761, 68.3206, 0.2746", "667.801, 701.106, 68.3208, 0.2746", "668.73, 701.624, 68.3214, 0.2746", "669.516, 702.365, 68.322, 0.2746", "670.604, 702.705, 68.3225, 0.2746", "671.653, 703.146, 68.3236, 0.2746", "672.045, 704.148, 68.3253, 0.2746", "672.449, 705.178, 68.3273, 0.2746", "673.349, 705.734, 68.3301, 0.2746", "674.295, 706.359, 68.334, 0.2746", "674.96, 707.214, 68.3399, 0.2746", "675.888, 707.565, 68.348, 0.2746", "676.373, 708.48, 68.3595, 0.2746", "677.341, 708.929, 68.374, 0.2746", "678.485, 708.937, 68.3914, 0.2746", "679.571, 709.261, 68.4286, 0.2746", "680.611, 709.708, 68.4844, 0.2746", "681.54, 710.337, 68.5283, 0.2746", "682.101, 711.249, 68.5611, 0.2746", "683.223, 711.351, 68.5835, 0.2746", "684.24, 711.836, 68.5966, 0.2746", "685.284, 712.294, 68.6014, 0.2746", "686.4, 712.483, 68.6017, 0.2746", "687.355, 712.956, 68.6025, 0.2746", "688.461, 713.195, 68.6034, 0.2746", "689.576, 713.403, 68.6048, 0.2746", "690.677, 713.644, 68.6067, 0.2746", "691.778, 713.937, 68.6095, 0.2746", "692.916, 714.013, 68.6132, 0.2746", "694.013, 714.324, 68.6185, 0.2746", "695.148, 714.428, 68.6258, 0.2746", "696.233, 714.729, 68.6361, 0.2746", "697.331, 715.038, 68.6504, 0.2746", "698.445, 715.225, 68.6706, 0.2746", "699.58, 715.348, 68.6988, 0.2746", "700.644, 715.654, 68.738, 0.2746", "701.272, 716.28, 68.7932, 0.2746", "702.156, 716.716, 68.8702, 0.2746", "703.187, 716.991, 68.9769, 0.2746", "704.325, 717.064, 69.1261, 0.2746", "705.461, 717.168, 69.3395, 0.2746", "706.528, 717.536, 69.6399, 0.2746", "707.518, 717.974, 70.0448, 0.2746", "708.477, 718.398, 70.5659, 0.2746", "709.016, 718.685, 71.4168, 0.2746", "709.164, 718.729, 72.7152, 0.2746", "709.545, 718.82, 74.2714, 0.2746", "710.537, 719.031, 75.8304, 0.2746", "711.528, 719.243, 77.3503, 0.2746", "712.52, 719.455, 78.7937, 0.2746", "713.512, 719.666, 80.1293, 0.2746", "714.502, 719.878, 81.366, 0.2746", "715.494, 720.09, 82.544, 0.2746", "716.289, 720.746, 83.6475, 0.2746", "717.028, 721.532, 84.6737, 0.2746", "717.767, 722.317, 85.6344, 0.2746", "718.506, 723.103, 86.5368, 0.2746", "719.247, 723.888, 87.3846, 0.2746", "719.986, 724.674, 88.1798, 0.2746", "720.725, 725.458, 88.9238, 0.2746", "721.464, 726.244, 89.6112, 0.2746", "722.459, 726.775, 90.1202, 0.2748", "723.491, 727.269, 90.4719, 0.2748", "724.521, 727.764, 90.7096, 0.2752", "725.553, 728.259, 90.8765, 0.2756", "726.585, 728.753, 91.0126, 0.2766", "727.617, 729.247, 91.1546, 0.2782", "728.653, 729.722, 91.343, 0.2814", "729.726, 730.038, 91.658, 0.287", "730.799, 730.352, 92.0744, 0.2988", "731.872, 730.667, 92.568, 0.3142", "732.944, 730.983, 93.1165, 0.3734", "734.017, 731.297, 93.6998, 0.3338", "735.09, 731.612, 94.2995, 0.3", "736.163, 731.928, 94.9018, 0.2746", "737.235, 732.242, 95.5083, 0.2746", "738.308, 732.557, 96.1201, 0.2746", "739.381, 732.873, 96.7389, 0.2746", "740.454, 733.187, 97.3658, 0.2746", "741.353, 733.771, 98.012, 0.2744", "742.113, 734.573, 98.684, 0.2744", "742.871, 735.376, 99.3751, 0.2742", "743.631, 736.178, 100.079, 0.274", "744.391, 736.98, 100.789, 0.2736", "745.15, 737.782, 101.497, 0.2728", "745.909, 738.584, 102.212, 0.2712", "746.668, 739.385, 102.914, 0.2684", "747.428, 740.187, 103.587, 0.2626", "748.187, 740.989, 104.22, 0.2542", "748.946, 741.791, 104.803, 0.2288", "749.706, 742.593, 105.939, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "559.487, 642.242, 40.4712, 0.3614", "559.414, 643.363, 40.4611, 0.304", "559.292, 644.393, 40.6356, 0.2818", "559.225, 645.491, 40.6605, 0.2882", "558.891, 646.49, 40.5334, 0.2994", "558.838, 647.613, 40.5124, 0.323", "558.808, 648.712, 40.588, 0.3538", "558.56, 649.781, 40.6154, 0.4726", "558.18, 650.841, 40.5381, 0.3936", "557.817, 651.864, 40.3967, 0.3262", "557.293, 652.873, 40.2041, 0.276", "556.77, 653.881, 39.9498, 0.2772", "556.289, 654.907, 39.6715, 0.2794", "555.991, 656.012, 39.4366, 0.2838", "555.685, 657.112, 39.2384, 0.2914", "555.148, 658.107, 39.0001, 0.3068", "554.609, 659.102, 38.7257, 0.3288", "554.371, 660.18, 38.4555, 0.4018", "555.147, 660.98, 38.2094, 0.3814", "556.089, 661.567, 37.9123, 0.4134", "557.038, 662.096, 37.5511, 0.3622", "556.861, 663.141, 37.2403, 0.3472", "556.69, 664.212, 36.9102, 0.3872", "556.804, 665.313, 36.5159, 0.3606", "557.01, 666.398, 36.1012, 0.3442", "557.432, 667.452, 35.7283, 0.3822", "557.854, 668.504, 35.4018, 0.35", "558.277, 669.557, 35.1201, 0.3308", "558.699, 670.609, 34.897, 0.3266" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "531.37, 622.577, 40.467, 0.2812", "531.705, 623.177, 40.1814, 0.287", "532.236, 624.187, 39.94, 0.2976", "532.765, 625.198, 39.7474, 0.3168", "533.543, 626.022, 39.625, 0.3548", "534.382, 626.8, 39.559, 0.4136", "535.264, 627.528, 39.515, 0.5802", "536.168, 628.229, 39.4778, 0.6094", "537.071, 628.93, 39.4467, 0.6476", "537.975, 629.631, 39.4148, 0.5672", "538.702, 630.485, 39.366, 0.4664", "539.262, 631.48, 39.2938, 0.5026", "539.824, 632.475, 39.2036, 0.4024", "540.384, 633.472, 39.1023, 0.3424", "540.945, 634.467, 38.9962, 0.307", "541.505, 635.463, 38.8914, 0.3296", "542.067, 636.459, 38.7943, 0.4016", "542.628, 637.454, 38.7086, 0.3884", "543.123, 638.481, 38.6467, 0.3904", "543.553, 639.542, 38.6173, 0.4932", "543.982, 640.602, 38.617, 0.4328", "544.411, 641.663, 38.6428, 0.3948", "544.693, 642.602, 38.6963, 0.4234", "545.066, 643.681, 38.7946, 0.452", "545.438, 644.76, 38.9248, 0.396", "545.809, 645.838, 39.0762, 0.3636", "546.181, 646.917, 39.2409, 0.413", "546.553, 647.996, 39.4117, 0.4328", "546.902, 649.084, 39.5746, 0.3594", "547.243, 650.175, 39.7253, 0.3", "547.584, 651.266, 39.8661, 0.2746", "547.924, 652.357, 39.9997, 0.2746", "548.265, 653.447, 40.1288, 0.2748", "548.606, 654.539, 40.255, 0.275", "548.946, 655.629, 40.3808, 0.2752", "549.287, 656.72, 40.5062, 0.2758", "549.628, 657.81, 40.6305, 0.2768", "549.969, 658.902, 40.754, 0.2788", "550.31, 659.992, 40.8764, 0.2824", "550.651, 661.083, 40.999, 0.2888", "550.949, 662.184, 41.1191, 0.302", "551.133, 663.314, 41.2272, 0.3202", "551.317, 664.443, 41.3314, 0.3848", "551.559, 665.554, 41.4509, 0.3548", "551.957, 666.618, 41.6214, 0.3394", "552.355, 667.682, 41.8303, 0.3436", "552.75, 668.747, 42.0644, 0.423", "553.114, 669.826, 42.3032, 0.451", "553.477, 670.903, 42.5342, 0.3942", "553.841, 671.982, 42.7456, 0.3592", "554.069, 673.085, 42.9139, 0.411", "554.07, 674.229, 43.0172, 0.3992", "554.07, 675.373, 43.0671, 0.4414", "554.202, 676.508, 43.0746, 0.4384", "554.364, 677.64, 43.0489, 0.3698", "554.785, 678.672, 42.9822, 0.3194", "555.415, 679.623, 42.8761, 0.3112", "556.047, 680.573, 42.7473, 0.3384", "556.677, 681.523, 42.6079, 0.4132", "557.308, 682.474, 42.4682, 0.4332", "557.856, 683.475, 42.362, 0.36", "558.375, 684.494, 42.2979, 0.3014", "558.896, 685.513, 42.2705, 0.2772", "559.416, 686.532, 42.2724, 0.2796", "559.926, 687.555, 42.3044, 0.2838", "560.43, 688.582, 42.3637, 0.2914", "560.933, 689.608, 42.4399, 0.307", "561.436, 690.635, 42.5267, 0.3294", "561.938, 691.661, 42.6208, 0.4028", "562.425, 692.697, 42.7165, 0.3832", "562.889, 693.742, 42.8075, 0.4166", "563.354, 694.788, 42.8985, 0.368", "563.818, 695.832, 42.9934, 0.3576", "564.283, 696.878, 43.0951, 0.408", "564.316, 697.603, 43.386, 0.3928", "564.604, 698.703, 43.6251, 0.4354", "565.138, 699.704, 43.82, 0.3976", "565.659, 700.706, 43.9774, 0.4384", "566.079, 701.762, 44.105, 0.4328", "566.407, 702.852, 44.2078, 0.3594", "566.509, 703.981, 44.2904, 0.3", "566.661, 705.016, 44.4548, 0.2746", "567.053, 706.054, 44.6942, 0.2746", "567.498, 707.079, 44.9302, 0.2746", "567.795, 708.177, 45.1097, 0.2746", "567.904, 709.305, 45.2357, 0.2746", "568.093, 710.434, 45.3127, 0.2746", "568.279, 711.543, 45.346, 0.2746", "568.822, 712.536, 45.3519, 0.2746", "569.026, 713.66, 45.3488, 0.2746", "569.026, 714.804, 45.3443, 0.2746", "569.026, 715.948, 45.3384, 0.2746", "569.351, 717.012, 45.3295, 0.2746", "569.38, 718.155, 45.3163, 0.2746", "569.491, 719.29, 45.299, 0.2746", "569.753, 720.393, 45.2782, 0.2746", "569.941, 721.521, 45.2561, 0.2746" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "531.37, 622.577, 40.467, 0.2812", "530.672, 623.474, 40.157, 0.4576" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "557.929, 607.971, 39.0146, 0.4344", "558.66, 607.948, 39.1434, 0.3524", "559.781, 608.105, 39.1815, 0.3354", "560.808, 608.537, 39.0583, 0.3346", "561.879, 608.927, 38.9133, 0.4126", "562.934, 609.37, 38.7489, 0.401", "563.967, 609.858, 38.5736, 0.452", "565.048, 610.188, 38.2892, 0.422", "566.166, 610.212, 37.9148, 0.5144" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "557.929, 607.971, 39.0146, 0.4344", "558.772, 607.919, 37.9182, 0.2288", "559.848, 607.884, 36.7581, 0.4486", "560.847, 607.708, 36.1948, 0.4934", "561.927, 607.351, 35.6605, 0.4984", "563.009, 606.998, 35.1963, 0.4282", "564.117, 606.941, 34.6755, 0.4554", "565.157, 606.699, 34.0959, 0.428", "566.145, 606.255, 33.4995, 0.5266", "566.76, 605.445, 32.8947, 0.4416", "567.138, 604.388, 32.3417, 0.4404", "567.561, 603.325, 31.8853, 0.3648", "567.699, 602.235, 31.5168, 0.3522", "567.533, 601.128, 31.155, 0.3966", "567.266, 600.105, 30.7146, 0.3776", "566.829, 599.102, 30.2761, 0.377", "566.329, 598.074, 29.9079, 0.4378", "565.766, 597.086, 29.61, 0.4782", "565.0, 596.255, 29.4188, 0.4466", "564.697, 595.255, 29.1161, 0.447", "564.341, 594.234, 28.7378, 0.6186", "563.989, 593.189, 28.3209, 0.566", "563.649, 592.1, 27.9762, 0.4372", "563.397, 590.988, 27.7449, 0.351", "563.089, 589.889, 27.5926, 0.3646", "562.704, 588.827, 27.4403, 0.4628", "562.266, 587.772, 27.3288, 0.5208", "561.744, 586.754, 27.2286, 0.5438", "561.217, 585.754, 27.0976, 0.5384", "560.512, 584.878, 26.8937, 0.534" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "586.12, 635.804, 42.4284, 0.3142", "586.681, 636.122, 42.6919, 0.6864", "587.704, 636.634, 42.6681, 0.4568", "588.728, 637.145, 42.6586, 0.3502", "589.75, 637.656, 42.6451, 0.3152", "590.774, 638.168, 42.6266, 0.3754", "591.797, 638.68, 42.6009, 0.3376", "592.817, 639.199, 42.5642, 0.3068", "593.837, 639.717, 42.5124, 0.287", "594.894, 640.141, 42.4413, 0.2988", "595.989, 640.473, 42.3466, 0.3142", "597.093, 640.681, 42.2097, 0.3734", "598.217, 640.547, 41.993, 0.3338", "599.343, 640.415, 41.7124, 0.3", "600.467, 640.281, 41.3832, 0.2746", "601.593, 640.148, 41.0192, 0.2746", "602.719, 640.014, 40.6325, 0.2746", "603.843, 639.88, 40.2343, 0.2746", "604.969, 639.748, 39.8311, 0.2746", "606.095, 639.621, 39.422, 0.2746", "607.223, 639.647, 38.9956, 0.2746", "608.351, 639.674, 38.5552, 0.2746", "609.479, 639.701, 38.1035, 0.2746", "610.607, 639.727, 37.6424, 0.2746", "611.736, 639.755, 37.1734, 0.2746", "612.846, 639.664, 36.6982, 0.2746", "613.918, 639.308, 36.218, 0.2748", "614.99, 638.954, 35.7277, 0.275", "616.062, 638.599, 35.2232, 0.2754", "617.134, 638.243, 34.6987, 0.2762", "618.206, 637.889, 34.1496, 0.2776", "619.214, 637.444, 33.5476, 0.2802", "620.127, 636.867, 32.8664, 0.2852", "621.041, 636.42, 32.1292, 0.294", "621.971, 636.837, 31.3256, 0.3114", "622.901, 637.255, 30.4976, 0.3386", "623.75, 637.928, 29.7976, 0.4136", "624.552, 638.743, 29.2818, 0.4338", "625.576, 639.033, 28.9134, 0.3614", "626.72, 639.039, 28.6516, 0.3038", "627.825, 639.233, 28.3987, 0.2816", "628.919, 639.48, 28.1198, 0.2874", "630.013, 639.726, 27.8065, 0.2994", "631.107, 639.973, 27.4736, 0.3152", "632.228, 639.764, 27.2213, 0.3754", "633.35, 639.542, 27.0472, 0.3376", "634.473, 639.32, 26.9436, 0.3068", "635.587, 639.536, 26.8929, 0.287", "636.701, 639.798, 26.875, 0.2988", "637.814, 640.06, 26.8722, 0.3142", "638.929, 640.323, 26.8691, 0.3736", "639.975, 640.728, 26.8649, 0.3342", "640.895, 641.408, 26.8587, 0.3004", "641.816, 642.087, 26.8503, 0.2754", "642.736, 642.767, 26.8388, 0.2762", "643.656, 643.446, 26.8226, 0.2778", "644.506, 644.21, 26.7974, 0.2806", "645.326, 645.008, 26.7655, 0.2852", "646.149, 645.793, 26.7277, 0.2966", "647.274, 645.595, 26.6616, 0.305", "648.399, 645.397, 26.577, 0.3814", "649.523, 645.199, 26.353, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "586.12, 635.804, 42.4284, 0.3142", "586.808, 635.978, 42.5625, 0.3734", "587.906, 636.256, 42.7448, 0.334", "589.006, 636.534, 42.9598, 0.3", "590.105, 636.812, 43.1917, 0.2746", "591.218, 637.041, 43.3997, 0.2748", "592.349, 637.206, 43.5462, 0.2748", "593.452, 637.468, 43.6349, 0.2752", "594.487, 637.957, 43.6766, 0.2756", "595.519, 638.448, 43.6842, 0.2766", "596.552, 638.939, 43.668, 0.2782", "597.556, 639.49, 43.6363, 0.2814", "598.558, 640.041, 43.5921, 0.287", "599.561, 640.591, 43.5327, 0.2988", "600.565, 641.142, 43.4585, 0.3142", "601.412, 641.887, 43.3219, 0.3734", "602.231, 642.667, 43.1343, 0.3338", "603.052, 643.447, 42.9192, 0.3", "603.872, 644.228, 42.698, 0.2746", "604.785, 644.915, 42.548, 0.2746", "605.701, 645.6, 42.4679, 0.2746", "606.664, 646.208, 42.467, 0.2746", "607.684, 646.72, 42.5426, 0.2746", "608.703, 647.234, 42.6726, 0.2746", "609.722, 647.747, 42.8358, 0.2746", "610.743, 648.259, 43.0139, 0.2746", "611.762, 648.772, 43.1998, 0.2748", "612.781, 649.285, 43.3877, 0.2748", "613.802, 649.798, 43.5744, 0.275", "614.836, 650.273, 43.7592, 0.2756", "615.933, 650.588, 43.9401, 0.2764", "617.03, 650.905, 44.1176, 0.2778", "618.127, 651.221, 44.2915, 0.2806", "619.224, 651.538, 44.4623, 0.2858", "620.321, 651.854, 44.6286, 0.2956", "621.419, 652.17, 44.7902, 0.313", "622.515, 652.486, 44.9459, 0.349", "623.612, 652.803, 45.0948, 0.397", "624.713, 653.104, 45.2304, 0.5782", "625.826, 653.368, 45.3379, 0.4652", "626.94, 653.634, 45.4286, 0.3754", "628.053, 653.898, 45.5126, 0.3148", "629.166, 654.162, 45.5997, 0.3748", "630.191, 654.629, 45.722, 0.3364", "631.155, 655.233, 45.8945, 0.3048", "632.12, 655.837, 46.1096, 0.2834", "633.084, 656.441, 46.356, 0.2908", "634.049, 657.046, 46.6239, 0.306", "635.014, 657.65, 46.9045, 0.3274", "635.978, 658.254, 47.189, 0.399", "636.938, 658.865, 47.4732, 0.376", "637.787, 659.611, 47.7728, 0.4036", "638.637, 660.358, 48.074, 0.3428", "639.486, 661.105, 48.3641, 0.3162", "640.336, 661.851, 48.631, 0.3056", "641.199, 662.575, 48.8578, 0.3268", "642.267, 662.977, 48.951, 0.398", "643.333, 663.377, 48.9367, 0.3742", "644.4, 663.779, 48.8435, 0.4002", "645.468, 664.18, 48.6984, 0.3366", "646.535, 664.582, 48.5296, 0.3048", "647.601, 664.983, 48.3633, 0.2836", "648.669, 665.385, 48.2227, 0.2912", "649.736, 665.786, 48.1138, 0.3064", "650.803, 666.187, 48.0416, 0.3282", "651.84, 666.651, 48.0889, 0.3996", "652.875, 667.117, 48.2322, 0.383", "653.911, 667.581, 48.4473, 0.3878", "654.948, 668.047, 48.7099, 0.4526", "655.962, 668.551, 48.9978, 0.5316", "656.919, 669.16, 49.2906, 0.4186", "657.875, 669.768, 49.5653, 0.3254", "658.832, 670.378, 49.8131, 0.2746", "659.791, 670.98, 50.0237, 0.2746", "660.931, 671.078, 50.1357, 0.2748", "662.071, 671.178, 50.1589, 0.2748", "663.21, 671.276, 50.1035, 0.2752", "664.343, 671.34, 49.9492, 0.2756", "665.463, 671.351, 49.6717, 0.2766", "666.583, 671.361, 49.3114, 0.2782", "667.703, 671.371, 48.9026, 0.2814", "668.822, 671.382, 48.4686, 0.287", "669.829, 670.92, 48.0914, 0.2988", "670.804, 670.321, 47.7862, 0.3142", "671.686, 669.733, 47.5026, 0.3734", "672.632, 670.028, 47.1794, 0.3338", "673.697, 670.421, 46.8597, 0.3", "674.763, 670.813, 46.5382, 0.2746", "675.828, 671.206, 46.2115, 0.2746", "676.894, 671.599, 45.8878, 0.2746", "677.96, 671.991, 45.579, 0.2746", "679.026, 672.385, 45.2908, 0.2746", "680.092, 672.777, 45.0198, 0.2746", "681.157, 673.17, 44.7695, 0.2746", "682.258, 673.405, 44.564, 0.2746", "683.4, 673.446, 44.4245, 0.2746", "684.544, 673.487, 44.3363, 0.2746", "685.686, 673.537, 44.2859, 0.2746", "686.791, 673.831, 44.2607, 0.2746", "687.898, 674.125, 44.2484, 0.2746", "689.003, 674.419, 44.2386, 0.2746", "690.109, 674.713, 44.2252, 0.2746", "691.214, 675.007, 44.2061, 0.2746", "692.32, 675.301, 44.1795, 0.2746", "693.425, 675.595, 44.1414, 0.2746", "694.53, 675.889, 44.0891, 0.2748", "695.637, 676.183, 44.0199, 0.275", "696.721, 676.526, 43.9214, 0.2754", "697.732, 677.039, 43.7581, 0.2762", "698.744, 677.552, 43.5495, 0.2776", "699.755, 678.065, 43.3138, 0.2802", "700.768, 678.577, 43.0674, 0.285", "701.623, 679.33, 42.8705, 0.2938", "702.462, 680.107, 42.7241, 0.3112", "703.3, 680.885, 42.6177, 0.3382", "704.14, 681.663, 42.5345, 0.413", "704.979, 682.441, 42.4595, 0.4328", "705.75, 683.28, 42.3559, 0.3594", "706.49, 684.148, 42.21, 0.3", "707.229, 685.015, 42.0302, 0.2746", "707.969, 685.882, 41.827, 0.2746", "708.709, 686.749, 41.6091, 0.2746", "709.448, 687.616, 41.3851, 0.2746", "710.188, 688.483, 41.1628, 0.2746", "710.927, 689.35, 40.9455, 0.2746", "711.667, 690.219, 40.7338, 0.2746", "712.566, 690.911, 40.5378, 0.2746", "713.517, 691.542, 40.3584, 0.2746", "714.468, 692.175, 40.1915, 0.2746", "715.42, 692.806, 40.0341, 0.2746", "716.372, 693.438, 39.8829, 0.2746", "717.323, 694.07, 39.7359, 0.2746", "718.275, 694.702, 39.5906, 0.2746", "719.226, 695.335, 39.4467, 0.2746", "720.178, 695.966, 39.3047, 0.2746", "721.13, 696.599, 39.1658, 0.2746", "722.081, 697.23, 39.0312, 0.2748", "723.033, 697.863, 38.9024, 0.275", "723.985, 698.494, 38.7808, 0.2754", "724.936, 699.127, 38.668, 0.276", "725.782, 699.884, 38.5773, 0.2772", "726.561, 700.722, 38.5132, 0.2794", "727.34, 701.56, 38.4686, 0.2836", "728.119, 702.398, 38.4364, 0.291", "728.898, 703.235, 38.4096, 0.3062", "729.677, 704.073, 38.3807, 0.328", "730.458, 704.91, 38.3449, 0.3988", "731.262, 705.711, 38.2964, 0.3832", "732.31, 706.164, 38.2122, 0.381", "733.358, 706.616, 38.1021, 0.476", "734.406, 707.069, 37.9758, 0.4", "735.454, 707.522, 37.8431, 0.3378", "736.502, 707.974, 37.7121, 0.2988", "737.547, 708.435, 37.6023, 0.3142", "738.589, 708.907, 37.5309, 0.3734", "739.631, 709.38, 37.4914, 0.334", "740.672, 709.852, 37.4769, 0.3", "741.715, 710.325, 37.4819, 0.2748", "742.757, 710.797, 37.5021, 0.2748", "743.82, 711.218, 37.534, 0.2752", "744.894, 711.613, 37.5785, 0.2756", "745.968, 712.006, 37.6421, 0.2766", "747.041, 712.4, 37.7314, 0.2782", "748.115, 712.794, 37.8535, 0.2814", "749.19, 713.188, 38.0139, 0.287", "750.245, 713.584, 38.2609, 0.2988", "751.279, 713.983, 38.6372, 0.3142", "752.312, 714.383, 39.1082, 0.3734", "753.345, 714.783, 39.6393, 0.3338", "754.377, 715.182, 40.1965, 0.3", "755.409, 715.581, 40.7487, 0.2746", "756.443, 715.98, 41.2686, 0.2746", "757.552, 716.106, 41.671, 0.2746", "758.696, 716.113, 41.9462, 0.2746", "759.84, 716.119, 42.1252, 0.2746", "760.984, 716.126, 42.2386, 0.2746", "762.128, 716.133, 42.3161, 0.2746", "763.272, 716.138, 42.3856, 0.2746", "764.416, 716.145, 42.4724, 0.2746", "765.56, 716.152, 42.5874, 0.2746", "766.697, 716.133, 42.7627, 0.2746", "767.825, 716.081, 43.0279, 0.2746", "768.953, 716.03, 43.3633, 0.2746", "770.08, 715.977, 43.7508, 0.2746", "771.208, 715.925, 44.1736, 0.2746", "772.336, 715.874, 44.616, 0.2746", "773.464, 715.823, 45.0643, 0.2746", "774.592, 715.77, 45.5106, 0.2746", "775.719, 715.718, 45.9544, 0.2746", "776.847, 715.667, 46.3946, 0.2746", "777.975, 715.615, 46.8303, 0.2746", "779.103, 715.563, 47.2584, 0.2746", "780.231, 715.511, 47.6767, 0.2746", "781.358, 715.46, 48.0822, 0.2746", "782.486, 715.407, 48.4719, 0.2746", "783.608, 715.454, 48.8326, 0.2746", "784.716, 715.724, 49.1414, 0.2746", "785.825, 715.995, 49.4088, 0.2746", "786.934, 716.265, 49.6437, 0.2746", "788.042, 716.535, 49.8554, 0.2746", "789.151, 716.805, 50.0514, 0.2746", "790.259, 717.076, 50.2376, 0.2746", "791.368, 717.346, 50.4168, 0.2746", "792.476, 717.616, 50.5868, 0.2746", "793.585, 717.888, 50.745, 0.2746", "794.693, 718.157, 50.8894, 0.2746", "795.762, 718.561, 50.9925, 0.2746", "796.828, 718.977, 51.0591, 0.2746", "797.894, 719.392, 51.0983, 0.2746", "798.96, 719.807, 51.1176, 0.2746", "800.026, 720.222, 51.1241, 0.2746", "801.092, 720.638, 51.1246, 0.2746", "802.158, 721.053, 51.1246, 0.2746", "803.224, 721.469, 51.1246, 0.2746", "804.289, 721.885, 51.1246, 0.2744", "805.36, 722.288, 51.1246, 0.2744", "806.447, 722.643, 51.1246, 0.2742", "807.535, 722.998, 51.1246, 0.274", "808.623, 723.351, 51.1246, 0.2736", "809.711, 723.706, 51.1246, 0.2728", "810.799, 724.06, 51.1246, 0.2712", "811.886, 724.414, 51.1246, 0.2684", "812.973, 724.769, 51.1246, 0.2626", "814.061, 725.123, 51.1246, 0.2542", "815.149, 725.477, 51.1246, 0.2288", "816.237, 725.831, 51.1246, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "556.215, 636.717, 49.2248, 0.2904", "556.154, 636.991, 49.1392, 0.2288", "555.685, 638.006, 49.537, 0.6026", "555.303, 639.062, 49.7137, 0.5052", "555.05, 640.179, 49.8509, 0.475", "555.015, 641.317, 49.9506, 0.3758", "555.024, 642.461, 50.0158, 0.403", "555.033, 643.605, 50.0494, 0.3418", "555.041, 644.749, 50.0545, 0.3144", "555.039, 645.893, 50.048, 0.3022", "555.026, 647.037, 50.0391, 0.3206", "555.014, 648.181, 50.0262, 0.3856", "554.997, 649.325, 50.0083, 0.3564", "554.946, 650.468, 49.9836, 0.3428", "554.896, 651.611, 49.9514, 0.3484", "555.076, 652.711, 49.9013, 0.4392", "555.521, 653.764, 49.8254, 0.4446", "555.966, 654.816, 49.7305, 0.5588", "556.411, 655.869, 49.6247, 0.4956", "556.856, 656.921, 49.5146, 0.5674", "557.301, 657.973, 49.408, 0.4708", "557.746, 659.025, 49.3116, 0.4906", "558.18, 660.082, 49.2332, 0.4772", "558.545, 661.167, 49.1935, 0.4672", "558.91, 662.25, 49.189, 0.3758", "559.275, 663.335, 49.2178, 0.3318", "559.64, 664.419, 49.2778, 0.3282", "560.02, 665.497, 49.3738, 0.4006", "560.472, 666.541, 49.5342, 0.379", "560.925, 667.586, 49.7456, 0.4094", "561.377, 668.631, 49.999, 0.3532", "561.83, 669.676, 50.2883, 0.3368", "562.282, 670.72, 50.608, 0.3384", "562.735, 671.766, 50.9544, 0.4134", "563.187, 672.81, 51.3234, 0.4334", "563.53, 673.871, 51.7437, 0.3606", "563.701, 674.957, 52.2494, 0.3022", "563.873, 676.041, 52.815, 0.2788", "564.044, 677.127, 53.4159, 0.2824", "564.179, 678.25, 53.9798, 0.289", "564.313, 679.372, 54.5042, 0.3012", "564.448, 680.495, 54.99, 0.3248", "564.583, 681.617, 55.4456, 0.3632", "564.737, 682.737, 55.8804, 0.46", "565.041, 683.84, 56.2534, 0.5158", "565.317, 684.93, 56.6367, 0.5344", "565.536, 685.995, 57.1206, 0.522", "565.756, 687.059, 57.6836, 0.4978", "566.245, 687.903, 58.2672, 0.4584", "567.334, 688.256, 58.7782, 0.3598", "568.401, 688.573, 59.2956, 0.301", "569.437, 688.839, 59.8881, 0.2766", "570.474, 689.107, 60.5158, 0.2782", "571.063, 689.911, 61.143, 0.2814", "571.497, 690.902, 61.7456, 0.287", "571.93, 691.892, 62.3011, 0.2988", "571.733, 692.978, 62.6671, 0.3142", "571.467, 693.911, 62.7589, 0.3738", "571.73, 694.492, 62.5327, 0.3344", "572.527, 695.311, 62.3154, 0.301", "573.326, 696.13, 62.1331, 0.2766", "574.123, 696.949, 62.006, 0.2782", "574.922, 697.769, 61.9511, 0.2814", "575.719, 698.588, 61.9615, 0.287", "576.518, 699.407, 62.0116, 0.2988", "577.315, 700.226, 62.0586, 0.3142", "578.114, 701.047, 62.1023, 0.3734", "578.912, 701.865, 62.139, 0.3338", "579.712, 702.683, 62.1639, 0.3", "580.513, 703.5, 62.1796, 0.2746", "581.312, 704.318, 62.1883, 0.2746", "582.112, 705.135, 62.1925, 0.2746", "582.913, 705.953, 62.1936, 0.2746", "583.712, 706.771, 62.1939, 0.2746", "584.401, 707.677, 62.1942, 0.2746", "585.018, 708.641, 62.1944, 0.2746", "585.634, 709.605, 62.195, 0.2746", "586.251, 710.568, 62.1958, 0.2746", "586.867, 711.532, 62.197, 0.2746", "587.484, 712.496, 62.1986, 0.2746", "588.099, 713.46, 62.2009, 0.2746", "588.716, 714.423, 62.204, 0.2746", "589.333, 715.387, 62.2082, 0.2746", "589.949, 716.351, 62.2143, 0.2746", "590.566, 717.314, 62.2227, 0.2746", "591.088, 718.326, 62.2345, 0.2746", "591.506, 719.391, 62.251, 0.2746", "591.924, 720.456, 62.2745, 0.2746", "592.341, 721.521, 62.3076, 0.2746", "592.759, 722.586, 62.3521, 0.2746", "593.178, 723.651, 62.4103, 0.2746", "593.887, 724.52, 62.5066, 0.2746", "594.701, 725.318, 62.6422, 0.2746", "595.516, 726.116, 62.8085, 0.2746", "596.331, 726.915, 62.9966, 0.2746", "597.145, 727.713, 63.1994, 0.2746", "597.961, 728.512, 63.4094, 0.2748", "598.775, 729.31, 63.6205, 0.2748", "599.59, 730.109, 63.8305, 0.2752", "600.404, 730.907, 64.0396, 0.2756", "601.219, 731.706, 64.2474, 0.2766", "602.033, 732.504, 64.4529, 0.2782", "602.848, 733.303, 64.6556, 0.2814", "603.662, 734.101, 64.8539, 0.287", "604.478, 734.9, 65.0471, 0.2988", "605.293, 735.697, 65.2341, 0.3142", "606.032, 736.568, 65.4035, 0.3734", "606.762, 737.448, 65.5567, 0.3338", "607.49, 738.328, 65.697, 0.3", "608.22, 739.208, 65.828, 0.2746", "608.949, 740.088, 65.9529, 0.2746", "609.679, 740.968, 66.0736, 0.2746", "610.407, 741.847, 66.1923, 0.2746", "611.137, 742.727, 66.3088, 0.2746", "611.866, 743.607, 66.4219, 0.2746", "612.596, 744.487, 66.5305, 0.2746", "613.325, 745.367, 66.6327, 0.2746", "614.055, 746.247, 66.7276, 0.2746", "614.732, 747.159, 66.8108, 0.2746", "615.181, 748.21, 66.8676, 0.2746", "615.631, 749.263, 66.9038, 0.2746", "616.082, 750.314, 66.9242, 0.2746", "616.531, 751.367, 66.9337, 0.2746", "616.981, 752.418, 66.9365, 0.2746", "617.43, 753.47, 66.9365, 0.2746", "617.866, 754.528, 66.9365, 0.2746", "618.271, 755.597, 66.9365, 0.2746", "618.675, 756.668, 66.9365, 0.2746", "619.079, 757.738, 66.9365, 0.2746", "619.483, 758.808, 66.9365, 0.2746", "619.887, 759.879, 66.9365, 0.2746", "620.291, 760.949, 66.9365, 0.2746", "620.695, 762.019, 66.9365, 0.2746", "621.099, 763.089, 66.9365, 0.2746", "621.533, 764.142, 66.9365, 0.2746", "622.311, 764.98, 66.9365, 0.2746", "623.09, 765.818, 66.9365, 0.2746", "623.868, 766.656, 66.9365, 0.2744", "624.647, 767.495, 66.9365, 0.2744", "625.425, 768.333, 66.9365, 0.2742", "626.203, 769.172, 66.9365, 0.274", "626.982, 770.009, 66.9365, 0.2736", "627.76, 770.848, 66.9365, 0.2728", "628.539, 771.686, 66.9365, 0.2712", "629.317, 772.525, 66.9365, 0.2684", "630.096, 773.363, 66.9365, 0.2626", "630.874, 774.201, 66.9365, 0.2542", "631.653, 775.039, 66.9365, 0.2288", "632.431, 775.878, 66.9365, 0.2288" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "556.215, 636.717, 49.2248, 0.2904", "557.003, 637.368, 49.406, 0.305", "557.87, 638.084, 49.6152, 0.3258", "558.97, 638.3, 49.7801, 0.395", "560.106, 638.442, 49.9013, 0.3736", "561.221, 638.211, 49.982, 0.3756", "562.334, 637.951, 50.0248, 0.4048", "563.449, 637.69, 50.0329, 0.564", "564.564, 637.438, 50.0209, 0.5784", "565.707, 637.397, 50.001, 0.5954", "566.851, 637.356, 49.9727, 0.4438", "567.991, 637.415, 49.933, 0.367", "569.132, 637.502, 49.8795, 0.3772", "570.273, 637.589, 49.8098, 0.341", "571.403, 637.727, 49.6944, 0.3128", "572.527, 637.894, 49.5281, 0.2994", "573.652, 638.061, 49.3273, 0.3156", "574.775, 638.228, 49.1075, 0.376", "575.9, 638.396, 48.8835, 0.3388", "576.989, 638.718, 48.6984, 0.309", "578.063, 639.114, 48.5663, 0.2912", "579.161, 639.343, 48.4753, 0.3064", "580.304, 639.281, 48.4098, 0.3282", "581.446, 639.219, 48.3557, 0.4006", "582.589, 639.156, 48.3003, 0.379", "583.731, 639.094, 48.2328, 0.4094", "584.859, 639.24, 48.1124, 0.3532", "585.984, 639.407, 47.9494, 0.3366", "587.11, 639.573, 47.759, 0.3382", "588.236, 639.74, 47.5558, 0.413", "589.361, 639.906, 47.3525, 0.4328", "590.469, 640.155, 47.1766, 0.3594", "591.547, 640.536, 47.0588, 0.3", "592.626, 640.917, 46.9874, 0.2746", "593.705, 641.297, 46.9515, 0.2746", "594.63, 641.914, 46.9412, 0.2746", "595.409, 642.751, 46.9476, 0.2746", "596.189, 643.588, 46.9633, 0.2746", "596.969, 644.425, 46.9837, 0.2746", "597.786, 645.219, 47.0134, 0.2746", "598.728, 645.865, 47.0624, 0.2746", "599.672, 646.51, 47.1246, 0.2748", "600.616, 647.155, 47.1948, 0.2748", "601.56, 647.8, 47.2676, 0.2752", "602.547, 648.362, 47.3329, 0.2756", "603.614, 648.776, 47.3782, 0.2766", "604.564, 649.353, 47.406, 0.2784", "605.297, 650.23, 47.4202, 0.2818", "606.031, 651.109, 47.425, 0.2876", "606.765, 651.986, 47.4236, 0.2998", "607.509, 652.856, 47.4188, 0.3162", "608.294, 653.678, 47.4121, 0.3774", "609.262, 654.287, 47.4029, 0.3412", "610.23, 654.896, 47.39, 0.3136", "611.198, 655.506, 47.3718, 0.2996", "612.121, 656.169, 47.346, 0.323", "612.875, 657.029, 47.3113, 0.3538", "613.629, 657.889, 47.2671, 0.4726", "614.427, 658.705, 47.1901, 0.3936", "615.241, 659.505, 47.082, 0.3264", "616.054, 660.304, 46.9546, 0.2762", "616.868, 661.104, 46.8191, 0.2778", "617.681, 661.904, 46.6866, 0.2804", "618.493, 662.708, 46.5926, 0.2854", "619.307, 663.512, 46.5436, 0.2944", "620.119, 664.317, 46.5346, 0.3124", "620.932, 665.123, 46.5604, 0.3404", "621.745, 665.927, 46.6147, 0.417", "622.684, 666.509, 46.7116, 0.44", "623.78, 666.812, 46.8611, 0.373", "624.876, 667.116, 47.0456, 0.3248", "625.971, 667.419, 47.2489, 0.3228", "627.066, 667.722, 47.4558, 0.3536", "628.169, 668.007, 47.6381, 0.4722", "629.287, 668.255, 47.7585, 0.3932", "630.404, 668.502, 47.8234, 0.3254", "631.52, 668.75, 47.8433, 0.2746", "632.638, 668.997, 47.8279, 0.2746", "633.754, 669.245, 47.7856, 0.2746", "634.816, 669.624, 47.7134, 0.2746", "635.787, 670.223, 47.6014, 0.2748", "636.758, 670.822, 47.4592, 0.275", "637.73, 671.42, 47.2973, 0.2754", "638.7, 672.02, 47.1254, 0.276", "639.671, 672.619, 46.9529, 0.2772", "640.642, 673.218, 46.7886, 0.2792", "641.612, 673.817, 46.6379, 0.2834", "642.656, 674.282, 46.5273, 0.2906", "643.713, 674.716, 46.4548, 0.3056", "644.771, 675.152, 46.412, 0.3266", "645.828, 675.589, 46.3901, 0.3976", "646.884, 676.031, 46.382, 0.3734", "647.939, 676.471, 46.3809, 0.399", "648.995, 676.913, 46.3809, 0.334", "650.05, 677.354, 46.3809, 0.3002", "651.109, 677.789, 46.3809, 0.2752", "652.178, 678.194, 46.3806, 0.2756", "653.248, 678.6, 46.3803, 0.2766", "654.318, 679.006, 46.38, 0.2782", "655.387, 679.411, 46.3798, 0.2814", "656.471, 679.772, 46.3789, 0.287", "657.58, 680.053, 46.3781, 0.2988", "658.689, 680.333, 46.377, 0.3142", "659.797, 680.615, 46.3753, 0.3734", "660.919, 680.823, 46.373, 0.334", "662.059, 680.92, 46.3697, 0.3", "663.198, 681.018, 46.3652, 0.2746", "664.338, 681.115, 46.3588, 0.2748", "665.479, 681.212, 46.3495, 0.2748", "666.62, 681.228, 46.3372, 0.2752", "667.764, 681.195, 46.3204, 0.2756", "668.907, 681.161, 46.2952, 0.2766", "670.009, 681.435, 46.2588, 0.2782", "671.101, 681.774, 46.2109, 0.2814", "672.194, 682.113, 46.1518, 0.287", "673.286, 682.453, 46.083, 0.2988", "673.702, 682.51, 45.8612, 0.3142", "674.648, 682.8, 45.6837, 0.3734", "675.649, 683.197, 45.5484, 0.3338", "676.793, 683.197, 45.453, 0.3", "677.937, 683.197, 45.3939, 0.2746", "679.081, 683.197, 45.3676, 0.2746", "680.225, 683.197, 45.3706, 0.2746", "681.369, 683.197, 45.3748, 0.2746", "682.513, 683.197, 45.3807, 0.2746", "683.657, 683.197, 45.3888, 0.2746", "684.801, 683.197, 45.4003, 0.2746", "685.945, 683.197, 45.4163, 0.2746", "687.082, 683.272, 45.439, 0.2746", "688.143, 683.667, 45.4709, 0.2746", "689.154, 684.15, 45.514, 0.2746", "690.158, 684.61, 45.575, 0.2746", "691.291, 684.774, 45.6593, 0.2746", "692.393, 685.041, 45.7923, 0.2746", "693.412, 685.502, 45.9592, 0.2746", "694.495, 685.853, 46.1353, 0.2746", "695.134, 686.351, 46.5237, 0.2746", "696.087, 686.808, 46.921, 0.2746", "697.133, 687.26, 47.2329, 0.2746", "697.839, 688.044, 47.4676, 0.2746", "698.697, 688.667, 47.6367, 0.2746", "699.661, 689.223, 47.7512, 0.2746", "700.57, 689.913, 47.819, 0.2746", "701.412, 690.454, 47.964, 0.2746", "702.211, 691.141, 48.0936, 0.2746", "702.827, 692.084, 48.2096, 0.2746", "703.439, 693.032, 48.3129, 0.2746", "704.227, 693.842, 48.4358, 0.2746", "705.051, 694.295, 48.6228, 0.2746", "706.055, 694.699, 48.7575, 0.2746", "706.56, 695.69, 48.8572, 0.2746", "707.324, 696.238, 48.9244, 0.2746", "708.386, 696.65, 48.9605, 0.2746", "709.476, 696.925, 48.9681, 0.2746", "710.62, 696.925, 48.9555, 0.2746", "711.68, 697.31, 48.9398, 0.2746", "712.691, 697.842, 48.9216, 0.2746", "713.619, 698.469, 48.8676, 0.2746", "714.704, 698.827, 48.8172, 0.2746", "715.763, 699.233, 48.7782, 0.2746", "716.833, 699.562, 48.7505, 0.2746", "717.917, 699.829, 48.7329, 0.2746", "718.872, 700.406, 48.7245, 0.2746", "719.912, 700.845, 48.7245, 0.2746", "720.677, 701.551, 48.7262, 0.2746", "721.699, 701.958, 48.7287, 0.2746", "722.839, 702.024, 48.732, 0.2746", "723.815, 702.464, 48.7368, 0.2746", "724.826, 702.827, 48.7435, 0.2746", "725.633, 703.617, 48.753, 0.2748", "726.458, 704.369, 48.7659, 0.2748", "727.098, 705.227, 48.7844, 0.2752", "727.616, 706.231, 48.8107, 0.2756", "728.429, 706.902, 48.8463, 0.2766", "729.293, 707.549, 48.895, 0.2782", "730.231, 708.139, 48.9628, 0.2814", "731.222, 708.671, 49.0725, 0.287", "732.082, 709.415, 49.2176, 0.2988", "732.948, 710.144, 49.3707, 0.3142", "733.678, 710.963, 49.6054, 0.3734", "734.572, 711.412, 49.9831, 0.3338", "734.682, 712.526, 50.288, 0.3", "735.645, 712.951, 50.5249, 0.2746", "736.394, 713.798, 50.7063, 0.2746", "737.119, 714.674, 50.8449, 0.2746", "738.109, 715.216, 50.9575, 0.2746", "739.137, 715.685, 51.0728, 0.2746", "740.104, 716.144, 51.2302, 0.2746", "741.035, 716.752, 51.4307, 0.2746", "741.708, 717.621, 51.6832, 0.2746", "742.431, 717.76, 52.257, 0.2746", "743.217, 718.325, 52.9077, 0.2746", "744.003, 718.92, 53.5315, 0.2746", "744.927, 719.584, 53.998, 0.2746", "745.63, 720.467, 54.3189, 0.2746", "746.501, 721.148, 54.5073, 0.2746", "747.308, 721.946, 54.5796, 0.2746", "748.15, 722.712, 54.5992, 0.2746", "749.053, 723.389, 54.5989, 0.2746", "749.976, 724.022, 54.5986, 0.2746", "750.719, 724.662, 54.598, 0.2746", "751.423, 725.41, 54.5972, 0.2746", "752.236, 726.047, 54.5961, 0.2746", "752.841, 727.014, 54.5947, 0.2746", "753.601, 727.833, 54.5924, 0.2746", "754.604, 728.214, 54.5894, 0.2746", "755.237, 729.071, 54.5854, 0.2746", "756.36, 729.238, 54.5796, 0.2746", "757.478, 729.474, 54.5709, 0.2746", "758.47, 730.018, 54.5591, 0.2746", "759.298, 730.788, 54.5443, 0.2748", "760.199, 731.466, 54.5266, 0.2748", "761.151, 732.043, 54.4849, 0.2752", "761.941, 732.722, 54.4306, 0.2756", "762.643, 733.304, 54.388, 0.2766", "763.714, 733.648, 54.3564, 0.2782", "764.629, 734.314, 54.3354, 0.2814", "765.447, 735.059, 54.3236, 0.287", "765.863, 736.109, 54.32, 0.2988", "766.577, 736.942, 54.32, 0.3142", "766.82, 738.05, 54.32, 0.3734", "767.052, 739.159, 54.32, 0.3338", "767.052, 740.303, 54.32, 0.3", "767.093, 741.444, 54.32, 0.2746", "767.166, 742.582, 54.32, 0.2746", "767.166, 743.726, 54.32, 0.2748", "767.166, 744.87, 54.32, 0.2748", "767.166, 746.014, 54.32, 0.2752", "767.174, 747.158, 54.3197, 0.2756", "767.48, 748.245, 54.3197, 0.2766", "767.853, 749.319, 54.3197, 0.2782", "767.853, 750.463, 54.3194, 0.2814", "767.961, 751.595, 54.3192, 0.287", "768.519, 752.518, 54.3189, 0.2988", "769.34, 753.141, 54.3186, 0.3142", "769.38, 754.279, 54.318, 0.3734", "769.798, 755.329, 54.3172, 0.3338", "770.063, 756.407, 54.3161, 0.3", "770.632, 757.215, 54.3147, 0.2746", "770.727, 758.35, 54.3124, 0.2746", "771.113, 759.409, 54.3096, 0.2746", "771.302, 760.527, 54.3054, 0.2746", "771.514, 761.641, 54.2996, 0.2746", "771.514, 762.785, 54.2914, 0.2746", "771.628, 763.919, 54.2802, 0.2746", "771.649, 765.063, 54.2643, 0.2746", "771.857, 766.177, 54.2424, 0.2746", "771.857, 767.321, 54.2122, 0.2746", "771.857, 768.465, 54.1671, 0.2746", "771.857, 769.609, 54.1038, 0.2744", "771.857, 770.753, 54.0212, 0.2744", "771.983, 771.889, 53.9207, 0.2742", "772.854, 772.428, 53.7606, 0.274", "773.344, 772.966, 53.4083, 0.2736", "773.344, 774.11, 53.128, 0.2728", "773.513, 775.24, 52.9164, 0.2712", "773.688, 776.37, 52.7682, 0.2684", "773.758, 777.509, 52.6781, 0.2626", "773.833, 778.646, 52.64, 0.2542", "774.027, 779.76, 52.64, 0.2288", "774.145, 780.894, 52.64, 0.2288" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "546.135, 628.867, 34.3244, 0.708", "545.089, 629.99, 32.9347, 0.4842", "544.362, 630.758, 32.1941, 0.4254", "543.232, 630.699, 31.649, 0.336", "542.409, 631.268, 31.2844, 0.304", "542.347, 632.298, 31.0447, 0.282", "542.704, 633.385, 30.8834, 0.2884", "542.412, 634.42, 30.7415, 0.3012", "541.901, 635.437, 30.5855, 0.3186", "541.39, 636.455, 30.3993, 0.3818", "540.88, 637.472, 30.1949, 0.3492", "540.368, 638.49, 29.983, 0.3284", "539.858, 639.509, 29.7707, 0.328", "539.091, 640.081, 29.6232, 0.3694", "538.37, 640.965, 29.5028, 0.4714", "537.759, 641.932, 29.3933, 0.538", "537.095, 642.84, 29.2508, 0.569", "536.354, 643.677, 29.0489, 0.618", "535.676, 644.589, 28.8607, 0.522", "535.125, 645.59, 28.7154, 0.563", "534.366, 646.353, 28.5757, 0.4926", "534.107, 647.442, 28.4934, 0.3858", "533.381, 648.3, 28.4668, 0.302", "532.609, 649.125, 28.4875, 0.2784", "532.009, 650.099, 28.5449, 0.2816", "531.586, 651.153, 28.6362, 0.2874", "531.138, 652.178, 28.7675, 0.2994", "530.738, 653.219, 28.9912, 0.3156", "530.336, 654.141, 29.2768, 0.376", "529.762, 654.974, 29.68, 0.3386", "529.236, 655.962, 30.0308, 0.309", "528.331, 656.623, 30.3251, 0.291", "527.303, 657.115, 30.5217, 0.306", "526.616, 658.0, 30.6272, 0.3278", "526.045, 658.986, 30.6586, 0.3984", "525.654, 660.059, 30.6331, 0.3822", "525.554, 661.195, 30.5808, 0.3792", "525.299, 662.3, 30.5105, 0.4724", "525.206, 663.395, 30.3509, 0.3934", "524.939, 664.457, 30.135, 0.3256", "524.867, 665.596, 29.9606, 0.275", "524.593, 666.691, 29.8304, 0.2754", "524.089, 667.695, 29.7413, 0.2762", "523.683, 668.753, 29.689, 0.2776", "523.278, 669.82, 29.6694, 0.2802", "522.827, 670.857, 29.664, 0.2852", "522.084, 671.722, 29.6576, 0.294", "521.226, 672.477, 29.6486, 0.3116", "520.518, 673.364, 29.6355, 0.339", "519.623, 674.072, 29.6181, 0.4142", "518.766, 674.808, 29.5949, 0.435", "518.193, 675.748, 29.566, 0.3634", "517.622, 676.724, 29.5008, 0.3078", "517.316, 677.818, 29.4316, 0.2886", "517.088, 678.926, 29.367, 0.3018", "517.088, 680.062, 29.2768, 0.3198", "517.077, 681.205, 29.2079, 0.384", "516.889, 682.334, 29.1589, 0.3534", "516.859, 683.475, 29.1276, 0.337", "516.859, 684.619, 29.1057, 0.339", "516.859, 685.763, 29.0906, 0.4144", "516.859, 686.907, 29.0791, 0.4354", "516.859, 688.051, 29.062, 0.3644", "516.628, 689.165, 29.0382, 0.3094", "516.217, 690.214, 29.0072, 0.292", "516.173, 691.356, 28.9677, 0.3064", "516.173, 692.496, 28.9075, 0.3354", "516.173, 693.624, 28.7787, 0.378", "516.173, 694.768, 28.6714, 0.5124", "516.173, 695.912, 28.5852, 0.493", "516.463, 696.932, 28.4847, 0.3864", "516.859, 697.932, 28.4105, 0.303", "516.859, 699.076, 28.3676, 0.2802", "516.859, 700.219, 28.3522, 0.285", "516.739, 701.353, 28.3522, 0.2938", "516.62, 702.487, 28.3682, 0.3112", "516.434, 703.616, 28.4015, 0.3384", "515.946, 704.641, 28.4463, 0.4132", "515.602, 705.71, 28.5202, 0.433", "515.167, 706.761, 28.6202, 0.36", "514.744, 707.782, 28.7445, 0.301", "514.161, 708.693, 28.91, 0.2766", "513.766, 709.766, 29.0489, 0.2784", "513.344, 710.83, 29.1668, 0.2818", "512.982, 711.911, 29.2723, 0.2876", "512.581, 712.983, 29.377, 0.2998", "512.141, 714.036, 29.4902, 0.3162", "512.054, 715.166, 29.6201, 0.3772", "512.054, 716.289, 29.8326, 0.341", "512.108, 717.341, 30.2025, 0.3128", "512.584, 718.337, 30.5906, 0.2994", "512.865, 719.422, 30.9072, 0.3154", "513.431, 720.391, 31.2012, 0.3758", "513.937, 721.371, 31.472, 0.3384", "514.19, 722.476, 31.6758, 0.3084", "514.676, 723.509, 31.8032, 0.2904", "514.898, 724.63, 31.8878, 0.3038", "514.999, 725.763, 31.9452, 0.3292", "515.367, 726.837, 31.9833, 0.3728", "515.739, 727.88, 32.0368, 0.4718", "515.83, 729.017, 32.0704, 0.5672", "515.85, 730.158, 32.0888, 0.4854", "516.233, 731.236, 32.093, 0.446", "516.287, 732.373, 32.0578, 0.515", "516.287, 733.515, 32.0065, 0.638", "516.417, 734.638, 31.9581, 0.6616", "516.63, 735.754, 31.918, 0.5534", "516.818, 736.863, 31.8839, 0.404", "516.859, 737.999, 31.8539, 0.3366", "516.859, 739.143, 31.8242, 0.3384", "516.645, 740.258, 31.7848, 0.413", "516.056, 741.205, 31.7299, 0.433", "515.944, 742.334, 31.6579, 0.3596", "515.666, 743.416, 31.5661, 0.3006", "514.99, 744.321, 31.4023, 0.2758", "514.514, 745.315, 31.1492, 0.277", "514.342, 746.428, 30.8988, 0.279", "514.318, 747.566, 30.6796, 0.283", "514.082, 748.682, 30.4976, 0.29", "513.82, 749.796, 30.378, 0.3042", "513.77, 750.934, 30.315, 0.3242", "513.77, 752.078, 30.294, 0.392", "513.77, 753.222, 30.2949, 0.3696", "513.77, 754.366, 30.3106, 0.3608", "513.656, 755.501, 30.3397, 0.4138", "513.418, 756.596, 30.3808, 0.4044", "513.313, 757.716, 30.4357, 0.4508", "513.313, 758.86, 30.504, 0.457", "513.313, 760.002, 30.6051, 0.3988", "513.313, 761.104, 30.816, 0.3988", "513.313, 762.24, 31.0288, 0.334", "513.425, 763.375, 31.1976, 0.3", "513.542, 764.509, 31.3326, 0.2746", "513.542, 765.648, 31.4588, 0.2748", "513.542, 766.792, 31.5358, 0.2748", "513.542, 767.936, 31.5717, 0.2752", "513.497, 769.077, 31.5871, 0.2756", "513.416, 770.216, 31.5899, 0.2766", "513.213, 771.342, 31.579, 0.2782", "512.863, 772.403, 31.5538, 0.2814", "512.855, 773.547, 31.5182, 0.2872", "512.855, 774.69, 31.4712, 0.299", "512.944, 775.826, 31.4126, 0.3148", "512.97, 776.964, 31.327, 0.3746", "512.899, 778.045, 31.131, 0.336", "512.283, 778.969, 30.9646, 0.304", "512.283, 780.113, 30.8246, 0.282", "512.051, 781.216, 30.7079, 0.288", "511.711, 782.287, 30.5724, 0.3008", "511.711, 783.431, 30.4662, 0.3178", "511.607, 784.562, 30.354, 0.3804", "511.516, 785.7, 30.2389, 0.3464", "511.466, 786.84, 30.1347, 0.3244", "511.092, 787.896, 30.0378, 0.3146", "510.635, 788.913, 29.8788, 0.3742", "510.116, 789.908, 29.7259, 0.3352", "510.076, 791.05, 29.5949, 0.3026", "509.972, 792.178, 29.4442, 0.2792", "509.487, 793.184, 29.2611, 0.2834", "509.309, 794.286, 29.0965, 0.2906", "509.275, 795.428, 28.9808, 0.3056", "509.082, 796.555, 28.8985, 0.3266", "509.08, 797.699, 28.8439, 0.3978", "509.08, 798.843, 28.8126, 0.3738", "509.08, 799.987, 28.7946, 0.3994", "509.08, 801.131, 28.7764, 0.335", "509.098, 802.272, 28.7518, 0.302", "509.288, 803.4, 28.7168, 0.2782", "509.351, 804.541, 28.6647, 0.2814", "509.423, 805.68, 28.5933, 0.287", "509.423, 806.824, 28.5032, 0.2988", "509.544, 807.953, 28.397, 0.3142", "509.759, 808.917, 28.163, 0.3734", "510.323, 809.502, 27.7981, 0.334", "510.341, 810.644, 27.5302, 0.3002", "510.553, 811.744, 27.3792, 0.2748", "510.567, 812.885, 27.2969, 0.275", "510.567, 814.029, 27.2779, 0.2754", "510.567, 815.173, 27.3165, 0.276", "510.224, 816.207, 27.4159, 0.2772", "510.0, 817.287, 27.5551, 0.2796", "509.756, 818.403, 27.6696, 0.284", "509.474, 819.505, 27.7813, 0.292", "509.423, 820.639, 27.8998, 0.3064", "509.423, 821.783, 27.991, 0.3356", "509.454, 822.926, 28.0585, 0.3784", "509.7, 824.02, 28.1498, 0.513", "509.919, 825.141, 28.2223, 0.4942", "510.145, 826.263, 28.2797, 0.3886", "510.224, 827.403, 28.3268, 0.3072", "510.327, 828.539, 28.369, 0.2876", "510.338, 829.683, 28.4066, 0.2998", "510.346, 830.815, 28.4819, 0.316", "510.55, 831.93, 28.5796, 0.377", "510.651, 833.058, 28.649, 0.3408", "511.04, 834.132, 28.6905, 0.3124", "511.139, 835.266, 28.7036, 0.2988", "511.271, 836.4, 28.6846, 0.3142", "511.482, 837.522, 28.6297, 0.3734", "511.482, 838.666, 28.5452, 0.3338", "511.482, 839.81, 28.4385, 0.3", "511.482, 840.954, 28.3114, 0.2746", "511.025, 841.467, 27.6189, 0.2746", "511.025, 842.611, 27.3204, 0.2746", "511.025, 843.755, 27.0973, 0.2746", "511.025, 844.899, 26.9444, 0.2746", "511.025, 846.043, 26.8554, 0.2746", "511.139, 847.173, 26.8047, 0.2746", "511.139, 848.314, 26.7638, 0.2746", "510.997, 849.43, 26.7414, 0.2746", "510.282, 850.302, 26.7392, 0.2746", "509.688, 851.242, 26.7568, 0.2746", "509.164, 852.229, 26.7938, 0.2746", "508.66, 853.243, 26.8624, 0.2746", "508.031, 854.16, 27.013, 0.2746", "507.499, 855.13, 27.1687, 0.2746", "507.109, 856.186, 27.2885, 0.2746", "506.757, 857.252, 27.3896, 0.2746", "506.042, 858.115, 27.4688, 0.2746", "505.768, 859.218, 27.4982, 0.2746", "505.67, 860.344, 27.4854, 0.2746", "504.956, 861.133, 27.449, 0.2746", "504.708, 862.189, 27.3008, 0.2746", "504.356, 863.242, 27.1124, 0.2746", "504.114, 864.349, 26.9758, 0.2746", "503.599, 865.301, 26.9223, 0.2746", "503.282, 866.391, 26.9016, 0.2746", "502.433, 867.09, 26.9122, 0.2746", "501.823, 868.054, 26.9522, 0.2746", "500.985, 868.706, 27.0043, 0.2746", "500.573, 869.74, 27.0595, 0.2746", "500.283, 870.829, 27.1485, 0.2746", "500.271, 871.972, 27.2541, 0.2746", "500.271, 873.116, 27.363, 0.2746", "500.271, 874.241, 27.545, 0.2746", "500.271, 875.383, 27.7217, 0.2746", "500.271, 876.527, 27.89, 0.2746", "500.271, 877.671, 28.0655, 0.2746", "500.271, 878.815, 28.2638, 0.2746", "500.271, 879.959, 28.4911, 0.2746", "500.271, 881.103, 28.7462, 0.2746", "500.166, 881.914, 29.2779, 0.2746", "500.157, 882.694, 30.0392, 0.2746", "500.157, 883.802, 30.7194, 0.2746", "500.157, 884.946, 31.2298, 0.2746", "500.157, 886.09, 31.5804, 0.2746", "500.157, 887.234, 31.7848, 0.2746", "500.157, 888.378, 31.8567, 0.2746", "500.167, 889.522, 31.8522, 0.2746", "500.355, 890.65, 31.8259, 0.2746", "500.386, 891.792, 31.7873, 0.2746", "500.5, 892.922, 31.7324, 0.2746", "500.807, 894.023, 31.6599, 0.2746", "501.172, 895.106, 31.5689, 0.2746", "501.318, 896.221, 31.4247, 0.2746", "501.55, 897.268, 31.1637, 0.2746", "501.882, 898.323, 30.8728, 0.2746", "502.161, 899.427, 30.6572, 0.2746", "502.43, 900.526, 30.515, 0.2746", "502.7, 901.628, 30.443, 0.2746", "502.818, 902.764, 30.4366, 0.2746", "503.398, 903.688, 30.4861, 0.2746", "503.575, 904.793, 30.6074, 0.2746", "503.932, 905.815, 30.7728, 0.2746", "504.16, 906.916, 30.928, 0.2746", "504.475, 908.01, 31.0929, 0.2746", "504.504, 909.075, 31.365, 0.2748", "504.504, 910.217, 31.5927, 0.2748", "504.504, 911.361, 31.7607, 0.2752", "504.504, 912.505, 31.8825, 0.2756", "504.717, 913.618, 31.9735, 0.2766", "504.733, 914.762, 32.0443, 0.2782", "504.884, 915.869, 32.0984, 0.2814", "505.19, 916.895, 32.1303, 0.287", "505.294, 918.028, 32.23, 0.2988", "505.812, 919.02, 32.4425, 0.3142", "505.908, 920.096, 32.7891, 0.3734", "506.296, 920.119, 33.4788, 0.3338", "507.029, 920.744, 34.1001, 0.3", "507.284, 921.821, 34.6002, 0.2746", "507.64, 922.888, 34.9233, 0.2746", "508.457, 923.645, 35.075, 0.2746", "509.086, 924.431, 35.0767, 0.2746", "509.512, 925.463, 34.9541, 0.2748", "510.198, 925.964, 34.6408, 0.275", "510.639, 926.911, 34.2437, 0.2754", "511.274, 927.857, 33.8786, 0.2762", "511.789, 928.844, 33.5219, 0.2776", "511.945, 929.971, 33.2035, 0.2802", "512.599, 930.105, 32.6844, 0.285", "513.561, 930.646, 32.2888, 0.2938", "513.999, 931.549, 32.0071, 0.3112", "514.533, 932.512, 31.7772, 0.3384", "515.468, 933.17, 31.6459, 0.4132", "516.366, 933.861, 31.5997, 0.4332", "516.859, 934.778, 31.6736, 0.36", "517.228, 935.739, 31.7668, 0.3012", "517.856, 936.677, 31.8774, 0.277", "518.118, 937.781, 32.0065, 0.279", "518.118, 938.925, 32.1504, 0.2828", "518.721, 939.287, 32.5052, 0.2894", "519.367, 940.211, 32.8059, 0.3032", "520.152, 941.038, 33.0691, 0.3224", "520.689, 942.019, 33.3066, 0.3898", "521.547, 942.615, 33.6092, 0.3588", "522.539, 943.173, 33.8352, 0.3728", "523.615, 943.457, 34.048, 0.2796", "524.753, 943.457, 34.44, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "546.135, 628.867, 34.3244, 0.708", "546.901, 629.2, 33.3259, 0.4576", "547.947, 629.397, 31.85, 0.4066", "549.014, 629.229, 31.2281, 0.3834", "549.932, 629.397, 30.3999, 0.4506", "550.269, 630.354, 29.561, 0.4966", "550.85, 631.304, 28.7571, 0.5056", "551.598, 631.432, 27.8004, 0.4366", "552.343, 630.862, 26.7904, 0.4944", "552.484, 630.0, 25.7452, 0.387", "552.822, 628.952, 24.869, 0.3136", "553.268, 627.952, 24.3454, 0.2542", "554.219, 627.393, 24.0722, 0.2288", "554.851, 626.636, 23.3528, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "536.968, 657.872, 35.2747, 0.4222", "536.917, 658.76, 35.4497, 0.4494", "536.718, 659.88, 35.6647, 0.3914", "536.518, 661.001, 35.9052, 0.354", "536.318, 662.122, 36.1561, 0.4014", "536.117, 663.242, 36.4017, 0.3804", "535.917, 664.363, 36.6159, 0.4116", "535.41, 665.387, 36.7632, 0.3584", "534.898, 666.411, 36.8668, 0.3402", "534.462, 667.466, 36.9401, 0.3748", "534.073, 668.542, 36.9961, 0.3366", "533.685, 669.619, 37.0462, 0.3048", "533.296, 670.694, 37.1003, 0.2836", "532.972, 671.786, 37.1974, 0.2912", "532.653, 672.881, 37.329, 0.3066", "532.335, 673.975, 37.4822, 0.3286", "532.017, 675.069, 37.6457, 0.4012", "531.857, 676.194, 37.786, 0.3802", "531.78, 677.336, 37.8904, 0.4114", "531.705, 678.477, 37.9638, 0.358", "531.478, 679.596, 38.017, 0.3396", "531.136, 680.673, 38.0621, 0.3734", "530.432, 681.575, 38.1128, 0.334", "529.726, 682.475, 38.1788, 0.3002", "529.222, 683.454, 38.2645, 0.2748", "529.155, 684.591, 38.3751, 0.2752", "529.387, 685.68, 38.5921, 0.2756", "529.618, 686.769, 38.883, 0.2766", "529.306, 687.755, 39.1642, 0.2782", "528.615, 688.667, 39.3915, 0.2814", "527.925, 689.58, 39.573, 0.287", "527.235, 690.492, 39.7174, 0.2988", "526.545, 691.405, 39.8415, 0.3142", "525.866, 692.325, 39.9823, 0.3734", "525.193, 693.25, 40.1666, 0.3338", "524.521, 694.176, 40.4034, 0.3", "523.847, 695.1, 40.6899, 0.2746", "523.418, 695.529, 41.2714, 0.2746", "523.113, 695.704, 42.1845, 0.2746", "523.151, 696.983, 42.9192, 0.2746", "523.151, 698.127, 43.486, 0.2746", "523.151, 699.271, 43.897, 0.2746", "523.151, 700.401, 44.2126, 0.2746", "523.151, 701.505, 44.4595, 0.2746", "523.185, 702.647, 44.5984, 0.2746", "523.362, 703.777, 44.7054, 0.2746", "523.38, 704.92, 44.7843, 0.2746", "523.38, 706.064, 44.8398, 0.2746", "523.38, 707.208, 44.8767, 0.2746", "523.38, 708.352, 44.9058, 0.2746", "523.38, 709.496, 44.9417, 0.2746", "523.38, 710.637, 44.9999, 0.2746", "523.38, 711.765, 45.1212, 0.2746", "523.38, 712.909, 45.2197, 0.2746", "523.38, 714.053, 45.2978, 0.2746", "523.224, 715.183, 45.3583, 0.2746", "522.538, 716.039, 45.4048, 0.2748", "521.919, 716.98, 45.4401, 0.2748", "521.118, 717.763, 45.4695, 0.2752", "520.346, 718.536, 45.5045, 0.2756", "519.339, 718.999, 45.5846, 0.2766", "518.726, 719.944, 45.6918, 0.2784", "518.023, 720.841, 45.7792, 0.2816", "517.312, 721.73, 45.8444, 0.2874", "516.699, 722.664, 45.8892, 0.2994", "516.149, 723.569, 45.9155, 0.3152", "515.759, 724.636, 45.9256, 0.3754", "515.205, 725.636, 45.9287, 0.3376", "514.672, 726.644, 45.932, 0.3068", "514.114, 727.494, 45.9368, 0.287", "513.855, 728.578, 45.9435, 0.2988", "513.154, 729.475, 45.953, 0.3142", "512.566, 730.451, 45.9662, 0.3734", "511.974, 731.426, 45.9847, 0.3338", "511.217, 732.266, 46.0102, 0.3", "510.741, 733.302, 46.0446, 0.2746", "510.317, 734.36, 46.0958, 0.2746", "510.115, 735.477, 46.1698, 0.2746", "510.11, 736.619, 46.2689, 0.2746", "510.11, 737.763, 46.3926, 0.2746", "510.11, 738.907, 46.5374, 0.2746", "509.865, 739.664, 46.9529, 0.2746", "509.2, 740.529, 47.3595, 0.2746", "508.572, 741.442, 47.6711, 0.2746", "508.272, 742.546, 47.8923, 0.2746", "507.732, 743.551, 48.0304, 0.2746", "507.254, 744.52, 48.0931, 0.2746", "507.249, 745.664, 48.0892, 0.2746", "507.113, 746.793, 48.0435, 0.2746", "506.726, 747.846, 47.9937, 0.2746", "505.647, 748.081, 47.957, 0.2746", "504.529, 748.318, 47.9326, 0.2746", "503.494, 748.762, 47.9206, 0.2746", "502.715, 749.578, 47.9212, 0.2746", "502.033, 750.495, 47.9343, 0.2746", "501.2, 751.269, 47.9556, 0.2746", "500.501, 752.15, 47.985, 0.2746", "499.833, 753.068, 48.0278, 0.2746", "499.244, 754.048, 48.0889, 0.2746", "498.77, 755.087, 48.172, 0.2746", "498.393, 756.153, 48.2793, 0.2746", "497.574, 756.836, 48.4134, 0.2746", "497.38, 757.764, 48.725, 0.2746", "496.97, 758.788, 49.051, 0.2746", "496.736, 759.861, 49.3856, 0.2746", "496.254, 760.885, 49.684, 0.2746", "495.33, 761.486, 49.8988, 0.2746", "494.746, 762.462, 50.0368, 0.2746", "494.368, 763.538, 50.1074, 0.2746", "494.322, 764.676, 50.1463, 0.2748", "494.019, 765.653, 50.1676, 0.2748", "493.621, 766.724, 50.1866, 0.2752", "493.162, 767.768, 50.2132, 0.2756", "492.762, 768.838, 50.2505, 0.2766", "492.096, 769.754, 50.3014, 0.2782", "491.444, 770.691, 50.3728, 0.2814", "490.829, 771.641, 50.4778, 0.287", "490.152, 772.557, 50.6246, 0.2988", "489.452, 773.407, 50.8155, 0.3142", "488.838, 774.268, 51.0482, 0.3734", "488.178, 774.863, 51.4758, 0.3338", "487.779, 775.395, 52.2018, 0.3", "487.687, 776.398, 52.862, 0.2746", "487.617, 777.537, 53.363, 0.2744", "487.185, 778.577, 53.7149, 0.2744", "486.769, 779.613, 53.9308, 0.2742", "486.523, 780.705, 54.0254, 0.274", "486.086, 781.703, 54.04, 0.2736", "486.086, 782.847, 54.04, 0.2728", "486.086, 783.991, 54.04, 0.2712", "486.086, 785.135, 54.04, 0.2684", "486.086, 786.279, 54.04, 0.2626", "486.086, 787.423, 54.04, 0.2542", "486.051, 788.564, 54.04, 0.2288", "485.971, 789.703, 54.04, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "536.968, 657.872, 35.2747, 0.4222", "537.2, 658.489, 34.825, 0.2288", "537.725, 659.478, 34.2297, 0.3982", "538.342, 660.427, 33.9769, 0.3808", "538.655, 661.49, 33.6902, 0.3828", "538.649, 662.619, 33.3592, 0.4494", "538.398, 663.711, 32.9876, 0.4948", "538.048, 664.763, 32.5671, 0.5008", "537.691, 665.834, 32.1703, 0.4342", "537.23, 666.877, 31.8321, 0.4588", "536.657, 667.838, 31.4857, 0.4714", "536.117, 668.826, 31.1475, 0.4268", "535.638, 669.861, 30.8658, 0.4454", "535.62, 670.97, 30.6354, 0.4456", "535.573, 672.102, 30.4279, 0.3844", "535.469, 673.236, 30.2064, 0.3412", "535.268, 674.298, 29.8964, 0.3766", "535.083, 675.365, 29.5182, 0.3396", "534.995, 676.491, 29.1852, 0.3108", "534.745, 677.599, 28.9397, 0.2944", "534.351, 678.672, 28.7764, 0.3122", "533.768, 679.642, 28.7056, 0.34", "532.952, 680.395, 28.7448, 0.4164", "532.16, 681.201, 28.7818, 0.439", "531.522, 682.102, 28.6745, 0.371", "530.835, 682.995, 28.4855, 0.3214", "530.346, 684.015, 28.2554, 0.315", "529.891, 685.034, 27.9364, 0.3454", "529.389, 686.049, 27.5873, 0.4262", "528.92, 687.09, 27.2602, 0.4582", "528.722, 688.195, 26.9318, 0.4012", "528.931, 689.279, 26.5709, 0.404", "529.516, 690.242, 26.2564, 0.339", "529.695, 691.339, 25.9907, 0.3304", "530.015, 692.349, 25.2, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "558.699, 670.609, 34.897, 0.3266", "558.961, 671.12, 34.8065, 0.3962", "559.615, 672.051, 34.8356, 0.377", "560.271, 672.981, 34.9471, 0.3758", "560.925, 673.912, 35.1123, 0.4352", "561.58, 674.842, 35.3041, 0.4752", "562.235, 675.773, 35.499, 0.4324", "562.975, 676.645, 35.6378, 0.463", "563.722, 677.511, 35.7246, 0.4434", "564.313, 678.457, 35.7694, 0.5488", "564.578, 679.57, 35.7826, 0.5132", "564.843, 680.683, 35.7731, 0.425", "565.107, 681.797, 35.7493, 0.3694", "565.327, 682.915, 35.7146, 0.4294", "565.394, 684.055, 35.6538, 0.4342", "565.462, 685.195, 35.5762, 0.5022", "565.529, 686.336, 35.4922, 0.5712", "565.603, 687.478, 35.4312, 0.5176", "565.675, 688.619, 35.3926, 0.3848", "565.968, 689.712, 35.376, 0.3", "566.287, 690.805, 35.3797, 0.2748", "566.508, 691.929, 35.4001, 0.2748", "566.727, 693.051, 35.4348, 0.2752", "566.645, 694.133, 35.4841, 0.2756", "566.177, 695.173, 35.5522, 0.2766", "565.932, 696.291, 35.6429, 0.2782", "565.722, 696.81, 35.7722, 0.2814", "565.203, 697.818, 35.98, 0.287", "564.685, 698.825, 36.2494, 0.2988", "564.167, 699.833, 36.5641, 0.3142", "563.649, 700.841, 36.9085, 0.3734", "563.129, 701.849, 37.2686, 0.3338", "562.611, 702.856, 37.6306, 0.3", "562.093, 703.864, 37.9831, 0.2746", "561.575, 704.871, 38.3228, 0.2746", "561.057, 705.879, 38.6456, 0.2746", "560.538, 706.887, 38.9488, 0.2746", "560.035, 707.905, 39.2162, 0.2746", "559.575, 708.953, 39.4117, 0.2746", "559.115, 710.0, 39.5539, 0.2746", "558.655, 711.047, 39.6617, 0.2746", "558.195, 712.095, 39.7513, 0.2746", "558.04, 713.198, 39.8583, 0.2746", "558.081, 714.338, 40.0019, 0.2746", "558.121, 715.477, 40.1806, 0.2746", "558.161, 716.617, 40.3844, 0.2748", "558.201, 717.756, 40.6056, 0.2748", "558.241, 718.895, 40.8358, 0.2752", "558.281, 720.035, 41.0687, 0.2756", "558.321, 721.173, 41.3014, 0.2766", "558.362, 722.312, 41.5338, 0.2782", "558.402, 723.452, 41.7662, 0.2814", "558.443, 724.591, 41.998, 0.287", "558.482, 725.731, 42.2293, 0.2988", "558.523, 726.87, 42.4603, 0.3142", "558.55, 728.008, 42.6902, 0.3734", "558.273, 729.115, 42.9184, 0.3338", "557.996, 730.22, 43.1449, 0.3", "557.719, 731.326, 43.3698, 0.2746", "557.443, 732.432, 43.5921, 0.2746", "557.166, 733.539, 43.8119, 0.2746", "556.889, 734.645, 44.0278, 0.2746", "556.613, 735.751, 44.2389, 0.2746", "556.336, 736.857, 44.4438, 0.2746", "556.06, 737.964, 44.6415, 0.2746", "555.909, 739.094, 44.819, 0.2746", "555.788, 740.23, 44.9764, 0.2746", "555.669, 741.367, 45.1186, 0.2746", "555.549, 742.504, 45.2497, 0.2746", "555.43, 743.64, 45.3734, 0.2746", "555.31, 744.777, 45.4936, 0.2746", "555.19, 745.913, 45.6131, 0.2746", "555.071, 747.05, 45.7327, 0.2746", "554.951, 748.187, 45.852, 0.2746", "554.831, 749.323, 45.9715, 0.2746", "554.712, 750.461, 46.0911, 0.2746", "554.592, 751.597, 46.2104, 0.2746", "554.473, 752.734, 46.3299, 0.2746", "554.353, 753.871, 46.4495, 0.2746", "554.232, 755.007, 46.5688, 0.2746", "554.114, 756.144, 46.688, 0.2746", "553.993, 757.28, 46.8073, 0.2746", "553.873, 758.417, 46.9263, 0.2746", "553.754, 759.554, 47.0453, 0.2746", "553.634, 760.69, 47.164, 0.2746", "553.515, 761.827, 47.2825, 0.2746", "553.395, 762.963, 47.4004, 0.2746", "553.275, 764.101, 47.5177, 0.2746", "553.156, 765.238, 47.6342, 0.2746", "553.036, 766.374, 47.7495, 0.2748", "552.916, 767.511, 47.8629, 0.2748", "552.797, 768.647, 47.9744, 0.2752", "552.677, 769.784, 48.0822, 0.2756", "552.558, 770.92, 48.1852, 0.2766", "552.438, 772.057, 48.2824, 0.2782", "552.318, 773.194, 48.37, 0.2814", "552.198, 774.33, 48.4445, 0.287", "552.078, 775.467, 48.501, 0.2988", "551.958, 776.604, 48.5344, 0.3142", "551.839, 777.74, 48.5405, 0.3734", "551.427, 778.76, 48.4823, 0.3338", "550.75, 779.672, 48.3386, 0.3", "550.074, 780.584, 48.1292, 0.2746", "549.397, 781.497, 47.8727, 0.2746", "548.72, 782.409, 47.5877, 0.2746", "548.044, 783.322, 47.2912, 0.2746", "547.366, 784.234, 47.0002, 0.2746", "546.689, 785.147, 46.7247, 0.2746", "546.013, 786.058, 46.468, 0.2746", "545.336, 786.971, 46.2333, 0.2746", "544.575, 787.824, 46.067, 0.2746", "543.807, 788.672, 45.9592, 0.2746", "543.04, 789.521, 45.8962, 0.2746", "542.273, 790.369, 45.8654, 0.2746", "541.505, 791.218, 45.8548, 0.2746", "540.738, 792.067, 45.8542, 0.2746", "539.97, 792.916, 45.8542, 0.2746", "539.204, 793.763, 45.8542, 0.2746", "538.517, 794.664, 45.8542, 0.2746", "538.075, 795.718, 45.8542, 0.2746", "537.631, 796.773, 45.8542, 0.2746", "537.187, 797.828, 45.8542, 0.2746", "536.743, 798.883, 45.8542, 0.2746", "536.3, 799.936, 45.8542, 0.2746", "535.857, 800.991, 45.8542, 0.2746", "535.413, 802.046, 45.8542, 0.2746", "534.97, 803.101, 45.8542, 0.2746", "534.526, 804.154, 45.8542, 0.2746", "534.082, 805.209, 45.8542, 0.2746", "533.638, 806.264, 45.8542, 0.2746", "533.093, 807.267, 45.8542, 0.2746", "532.522, 808.259, 45.8542, 0.2746", "531.951, 809.251, 45.8542, 0.2746", "531.381, 810.243, 45.8542, 0.2746", "530.81, 811.234, 45.8542, 0.2746", "530.241, 812.226, 45.8542, 0.2746", "529.67, 813.217, 45.8542, 0.2746", "529.1, 814.209, 45.8542, 0.2746", "528.529, 815.201, 45.8542, 0.2746", "527.959, 816.193, 45.8542, 0.2746", "527.344, 817.154, 45.8542, 0.2746", "526.633, 818.05, 45.8545, 0.2746", "525.922, 818.946, 45.8545, 0.2746", "525.211, 819.843, 45.8545, 0.2746", "524.501, 820.739, 45.8545, 0.2746", "523.79, 821.636, 45.8548, 0.2746", "523.079, 822.531, 45.855, 0.2746", "522.369, 823.428, 45.8553, 0.2746", "521.609, 824.281, 45.8556, 0.2746", "520.789, 825.079, 45.8562, 0.2748", "519.969, 825.877, 45.857, 0.275", "519.149, 826.674, 45.8581, 0.2752", "518.329, 827.472, 45.8598, 0.2758", "518.501, 828.535, 45.862, 0.2768", "518.811, 829.637, 45.8651, 0.2786", "519.122, 830.737, 45.8696, 0.2822", "519.432, 831.839, 45.8755, 0.2884", "519.693, 832.951, 45.8842, 0.3012", "519.85, 834.083, 45.8962, 0.3186", "520.008, 835.217, 45.9127, 0.3818", "520.164, 836.35, 45.9351, 0.3494", "520.322, 837.484, 45.9687, 0.3286", "520.479, 838.616, 46.0169, 0.3286", "520.637, 839.75, 46.081, 0.37", "520.795, 840.882, 46.1597, 0.4738", "520.951, 842.016, 46.2504, 0.536", "520.661, 842.657, 46.5438, 0.5966", "520.934, 843.721, 46.7891, 0.5174", "521.131, 844.847, 46.9678, 0.3848", "521.206, 845.985, 47.0817, 0.3", "521.206, 847.129, 47.1321, 0.2746", "521.206, 848.273, 47.119, 0.2746", "521.206, 849.417, 47.0428, 0.2746", "521.206, 850.561, 46.935, 0.2746", "521.321, 851.694, 46.7846, 0.2746", "521.321, 852.83, 46.5609, 0.2746", "521.365, 853.939, 46.2356, 0.2746", "521.518, 855.032, 45.8494, 0.2746", "521.552, 856.103, 45.3715, 0.2746", "521.664, 856.952, 44.7314, 0.2746", "521.658, 858.091, 44.2014, 0.2746", "521.333, 859.16, 43.7791, 0.2746", "521.079, 860.274, 43.4795, 0.2746", "520.978, 861.403, 43.2522, 0.2746", "520.891, 862.521, 43.066, 0.2746", "520.523, 863.594, 42.936, 0.2746", "520.156, 864.644, 42.8103, 0.2746", "519.943, 865.769, 42.7602, 0.2746", "519.696, 866.879, 42.7854, 0.2746", "519.471, 867.994, 42.8862, 0.2746", "518.929, 868.883, 43.055, 0.2746", "518.551, 869.744, 43.4031, 0.2746", "517.779, 870.353, 43.9519, 0.2746", "517.007, 871.11, 44.5012, 0.2746", "516.301, 871.967, 44.9912, 0.2746", "516.055, 873.047, 45.4269, 0.2746", "515.592, 873.981, 45.82, 0.2746", "515.025, 874.955, 46.093, 0.2746", "514.018, 875.463, 46.2826, 0.2746", "513.542, 876.367, 46.4327, 0.2746", "513.542, 877.506, 46.5738, 0.2746", "513.082, 878.416, 46.7919, 0.2746", "512.689, 879.426, 47.0604, 0.2746", "511.854, 880.138, 47.2702, 0.2746", "511.209, 881.078, 47.4247, 0.2746", "510.679, 882.086, 47.5286, 0.2746", "510.416, 883.186, 47.5863, 0.2746", "509.967, 884.232, 47.6059, 0.2746", "509.686, 885.337, 47.6081, 0.2746", "509.487, 886.435, 47.6112, 0.2746", "509.047, 887.469, 47.6157, 0.2746", "508.297, 888.208, 47.6221, 0.2746", "508.119, 889.322, 47.6308, 0.2746", "507.913, 890.444, 47.6428, 0.2746", "507.81, 891.576, 47.6605, 0.2746", "507.688, 892.714, 47.6848, 0.2746", "507.478, 893.828, 47.7179, 0.2746", "507.4, 894.965, 47.7618, 0.2746", "507.237, 896.094, 47.8279, 0.2746", "507.135, 897.22, 47.9374, 0.2744", "506.874, 898.32, 48.057, 0.2744", "506.704, 899.443, 48.1984, 0.2742", "506.678, 900.585, 48.3708, 0.274", "506.678, 901.729, 48.5778, 0.2736", "506.672, 902.873, 48.8177, 0.2728", "506.563, 903.646, 49.2906, 0.2712", "506.194, 904.165, 49.9674, 0.2684", "506.106, 905.231, 50.6299, 0.2626", "506.026, 906.37, 51.1325, 0.2542", "505.873, 907.497, 51.4856, 0.2288", "505.076, 908.107, 51.8, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "558.699, 670.609, 34.897, 0.3266", "559.758, 670.567, 32.7771, 0.4576", "560.751, 670.527, 31.6627, 0.376", "560.959, 671.423, 31.2432, 0.3306", "561.052, 672.546, 30.8, 0.3334", "561.153, 673.668, 30.3419, 0.373", "561.956, 674.287, 29.934, 0.5078", "562.711, 674.906, 29.5646, 0.4612", "562.658, 676.016, 29.1617, 0.4416", "562.606, 677.126, 28.7137, 0.537", "563.063, 678.152, 28.2864, 0.5334", "563.572, 679.17, 27.8734, 0.487", "564.082, 680.188, 27.4579, 0.3656", "564.628, 681.177, 27.0396, 0.3118", "565.536, 681.872, 26.6487, 0.2962", "565.579, 682.852, 26.21, 0.3158", "565.745, 683.789, 25.5371, 0.3464", "565.912, 684.726, 24.7089, 0.4294", "566.737, 685.396, 23.9705, 0.4576", "567.513, 686.125, 23.2319, 0.4322", "568.301, 686.835, 22.5338, 0.305", "569.433, 687.006, 21.6093, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "569.941, 721.521, 45.2561, 0.2746", "569.686, 721.862, 45.1758, 0.2746", "569.29, 722.901, 45.1004, 0.2746", "568.894, 723.958, 45.0598, 0.2746", "568.253, 724.897, 45.0562, 0.2746", "567.704, 725.897, 45.0926, 0.2746", "566.91, 726.708, 45.1718, 0.2746", "566.482, 727.717, 45.3527, 0.2746", "566.156, 728.806, 45.5454, 0.2746", "565.903, 729.878, 45.8178, 0.2746", "565.349, 730.786, 46.1462, 0.2748", "564.927, 731.849, 46.3957, 0.2748", "564.373, 732.732, 46.5716, 0.2752", "563.302, 732.974, 46.681, 0.2756", "562.544, 733.797, 46.7421, 0.2766", "562.182, 734.87, 46.7628, 0.2782", "561.929, 735.944, 46.7639, 0.2814", "561.464, 736.989, 46.7653, 0.287", "560.686, 737.806, 46.7676, 0.2988", "560.319, 738.839, 46.7706, 0.3142", "559.966, 739.916, 46.7746, 0.3734", "559.694, 741.027, 46.7804, 0.3338", "559.534, 742.151, 46.7888, 0.3", "559.323, 743.265, 46.8006, 0.2746", "559.048, 744.357, 46.8154, 0.2746", "558.873, 745.488, 46.8331, 0.2746", "558.6, 746.584, 46.8745, 0.2748", "558.285, 747.666, 46.9291, 0.2748", "557.938, 748.741, 46.9717, 0.2752", "557.401, 749.743, 47.003, 0.2756", "556.722, 750.626, 47.0243, 0.2766", "556.137, 751.609, 47.0361, 0.2782", "555.552, 752.568, 47.0394, 0.2814", "555.198, 753.655, 47.0394, 0.287", "554.609, 754.61, 47.0392, 0.2988", "554.284, 755.691, 47.0386, 0.3142", "553.705, 756.676, 47.038, 0.3734", "553.286, 757.724, 47.0375, 0.3338", "553.026, 758.835, 47.0364, 0.3", "552.722, 759.905, 47.035, 0.2746", "552.057, 760.759, 47.0327, 0.2746", "551.506, 761.646, 47.0299, 0.2746", "550.969, 762.612, 47.026, 0.2746", "550.257, 763.502, 47.0204, 0.2746", "549.586, 764.425, 47.0123, 0.2746", "548.92, 765.345, 47.0008, 0.2746", "547.958, 765.958, 46.9854, 0.2746", "547.417, 766.95, 46.9661, 0.2746", "547.133, 768.054, 46.9428, 0.2746", "546.374, 768.632, 46.8759, 0.2746", "546.251, 769.759, 46.8185, 0.2746", "545.347, 770.322, 46.7692, 0.2746", "544.957, 771.309, 46.7261, 0.2746", "544.333, 772.177, 46.6866, 0.2746", "543.552, 772.925, 46.6474, 0.2746", "542.778, 773.6, 46.6012, 0.2746", "541.969, 774.354, 46.5349, 0.2746", "541.114, 774.926, 46.4461, 0.2746", "540.576, 775.9, 46.3352, 0.2746", "539.531, 776.201, 46.1958, 0.2746", "539.396, 777.103, 45.8326, 0.2746", "538.951, 778.065, 45.4731, 0.2746", "538.139, 778.812, 45.194, 0.2746", "537.829, 779.882, 44.9898, 0.2746", "536.949, 780.565, 44.8543, 0.2746", "536.365, 781.547, 44.7796, 0.2746", "535.874, 782.567, 44.7546, 0.2746", "535.362, 783.589, 44.7359, 0.2746", "534.563, 784.394, 44.7107, 0.2746", "534.162, 785.434, 44.6802, 0.2746", "533.261, 786.118, 44.6418, 0.2746", "532.333, 786.716, 44.5264, 0.2746", "531.245, 787.063, 44.4352, 0.2746", "530.359, 787.774, 44.3694, 0.2746", "529.516, 788.517, 44.3276, 0.2746", "528.53, 789.085, 44.3069, 0.2746", "527.95, 789.953, 44.3134, 0.2746", "526.929, 790.2, 44.3626, 0.2746", "525.968, 790.78, 44.3971, 0.2746", "525.203, 791.534, 44.415, 0.2746", "524.175, 791.81, 44.4161, 0.2746", "523.293, 792.356, 44.3985, 0.2746", "522.262, 792.771, 44.3568, 0.2746", "521.213, 793.21, 44.2893, 0.2746", "520.156, 793.596, 44.2005, 0.2746", "519.058, 793.903, 44.0922, 0.2746", "518.004, 794.259, 43.9202, 0.2746", "517.339, 794.622, 43.5604, 0.2746", "516.545, 795.369, 43.2368, 0.2746", "515.69, 796.123, 42.9996, 0.2746", "514.782, 796.819, 42.8462, 0.2746", "513.732, 797.247, 42.7753, 0.2746", "512.61, 797.371, 42.7854, 0.2746", "511.506, 797.668, 42.8635, 0.2746", "510.472, 797.93, 42.9708, 0.2746", "510.072, 798.934, 43.1281, 0.2746", "509.239, 799.532, 43.4322, 0.2746", "508.397, 800.045, 43.7954, 0.2746", "507.864, 800.914, 44.0762, 0.2746", "507.084, 801.703, 44.2792, 0.2746", "506.619, 802.747, 44.4105, 0.2746", "506.22, 803.737, 44.4755, 0.2746", "506.082, 804.854, 44.4861, 0.2746", "505.582, 805.88, 44.4727, 0.2746", "504.95, 806.727, 44.4559, 0.2746", "504.836, 807.855, 44.4357, 0.2746", "504.319, 808.829, 44.3808, 0.2746", "503.766, 809.826, 44.3265, 0.2746", "503.143, 810.748, 44.2823, 0.2746", "502.431, 811.525, 44.247, 0.2746", "502.106, 812.613, 44.2196, 0.2746", "501.468, 813.557, 44.1974, 0.2746", "500.94, 814.567, 44.1778, 0.2746", "500.26, 815.48, 44.1532, 0.2746", "499.669, 816.424, 44.1204, 0.2746", "498.984, 817.253, 44.0768, 0.2746", "498.246, 818.119, 43.9928, 0.2746", "497.363, 818.824, 43.8948, 0.2746", "496.481, 819.229, 43.7987, 0.2746", "495.477, 819.597, 43.659, 0.2746", "495.022, 820.543, 43.4636, 0.2746", "494.305, 821.394, 43.3101, 0.2744", "493.811, 822.399, 43.195, 0.2744", "493.269, 823.355, 43.1108, 0.2742", "492.453, 824.104, 43.052, 0.274", "492.046, 825.141, 42.9766, 0.2736", "491.787, 826.198, 42.9279, 0.2728", "491.135, 827.035, 42.8907, 0.2712", "490.492, 827.961, 42.8644, 0.2684", "490.204, 829.051, 42.8478, 0.2626", "489.887, 830.114, 42.84, 0.2542", "489.746, 831.24, 42.84, 0.2288", "489.06, 831.802, 42.84, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "569.941, 721.521, 45.2561, 0.2746", "570.348, 722.426, 45.36, 0.2288", "570.879, 723.316, 45.3743, 0.2746", "571.293, 724.368, 45.3799, 0.2746", "571.657, 725.318, 45.3877, 0.2746", "572.045, 726.387, 45.3989, 0.2746", "572.626, 727.298, 45.4143, 0.2746", "573.135, 728.294, 45.4356, 0.2746", "573.821, 729.202, 45.4658, 0.2746", "574.711, 729.855, 45.509, 0.2746", "575.001, 730.958, 45.5678, 0.2746", "575.304, 732.047, 45.6473, 0.2746", "575.546, 733.16, 45.7556, 0.2746", "575.885, 734.207, 45.9449, 0.2748", "575.89, 735.349, 46.1728, 0.2748", "575.89, 736.494, 46.4416, 0.2752", "575.89, 737.63, 46.7821, 0.2756", "575.917, 738.585, 47.3399, 0.2766", "576.004, 739.245, 48.1729, 0.2782", "576.282, 740.24, 48.9289, 0.2814", "576.757, 741.25, 49.5323, 0.287", "577.061, 742.345, 49.9957, 0.2988", "577.24, 743.465, 50.3387, 0.3142", "577.633, 744.532, 50.5537, 0.3734", "578.081, 745.571, 50.7326, 0.3338", "578.279, 746.688, 50.9174, 0.3", "578.438, 747.787, 51.1008, 0.2746", "578.994, 748.624, 51.2725, 0.2746", "579.453, 749.513, 51.5508, 0.2746", "579.934, 750.528, 51.8412, 0.2746", "580.304, 751.589, 52.085, 0.2746", "580.385, 752.729, 52.2962, 0.2746", "580.583, 753.823, 52.5518, 0.2746", "580.786, 754.912, 52.822, 0.2746", "581.028, 756.027, 53.0429, 0.2748", "581.444, 756.988, 53.3086, 0.2748", "581.679, 758.086, 53.5668, 0.2752", "581.906, 759.172, 53.8451, 0.2758", "582.421, 760.173, 54.0408, 0.2766", "582.639, 761.208, 54.1722, 0.2786", "582.994, 762.283, 54.2536, 0.2818", "583.228, 763.395, 54.2909, 0.2882", "583.447, 764.509, 54.301, 0.2994", "583.771, 765.591, 54.2931, 0.3228", "583.893, 766.698, 54.2819, 0.3536", "584.626, 767.562, 54.2679, 0.4722", "585.243, 768.515, 54.2506, 0.3932", "585.385, 769.636, 54.2178, 0.3254", "585.878, 770.643, 54.161, 0.2746", "586.507, 771.597, 54.1159, 0.2746", "587.083, 772.575, 54.0823, 0.2746", "587.913, 773.245, 54.059, 0.2746", "588.908, 773.666, 54.0453, 0.2746", "589.349, 774.673, 54.04, 0.2746", "590.066, 775.513, 54.04, 0.2744", "590.663, 776.326, 54.04, 0.2744", "591.105, 777.281, 54.04, 0.2742", "591.161, 778.414, 54.04, 0.274", "591.514, 779.501, 54.04, 0.2736", "592.011, 780.531, 54.04, 0.2728", "592.781, 781.347, 54.04, 0.2712", "593.17, 782.351, 54.04, 0.2684", "593.776, 783.313, 54.04, 0.2626", "594.531, 784.11, 54.04, 0.2542", "595.275, 784.938, 54.04, 0.2288", "595.452, 786.042, 54.04, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "530.672, 623.474, 40.157, 0.4576", "530.115, 624.066, 38.3242, 0.6864", "529.249, 624.666, 37.1465, 0.6766", "528.469, 625.473, 36.7189, 0.6806", "528.085, 626.379, 36.1668, 0.6152", "527.8, 627.349, 35.4777, 0.6182", "527.346, 628.348, 34.7634, 0.4796", "526.932, 629.365, 34.048, 0.464", "526.75, 630.469, 33.4096, 0.4078", "526.452, 631.549, 32.9031, 0.4362", "525.834, 632.425, 32.3823, 0.5316", "525.313, 633.314, 31.752, 0.7294", "525.067, 634.159, 31.0248, 0.5372", "524.982, 635.126, 29.234, 0.2748", "524.982, 636.27, 28.6588, 0.2748", "524.982, 637.414, 28.2853, 0.275", "524.99, 638.557, 28.0818, 0.2754", "525.439, 639.497, 28.0017, 0.2762", "526.079, 640.172, 28.0, 0.2776", "526.7, 640.912, 28.0, 0.2804", "526.997, 642.001, 28.0, 0.2852", "527.378, 643.073, 28.0, 0.2954", "527.916, 644.04, 28.0, 0.3078", "528.841, 644.701, 28.0, 0.3616", "529.204, 645.762, 28.0, 0.3136", "529.214, 646.903, 28.0, 0.2542", "529.558, 647.847, 28.0, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "530.672, 623.474, 40.157, 0.4576", "530.552, 623.775, 40.5684, 0.4266", "530.295, 624.796, 40.8464, 0.4212", "529.718, 625.723, 40.9844, 0.5162", "529.192, 626.735, 41.0637, 0.6402", "528.731, 627.779, 41.1373, 0.6658", "528.383, 628.829, 41.277, 0.561", "528.113, 629.937, 41.3706, 0.4194", "527.699, 630.962, 41.3129, 0.3588", "527.353, 632.043, 41.2238, 0.4092", "527.255, 633.182, 41.1516, 0.4008", "527.162, 634.322, 41.097, 0.4208", "526.791, 635.403, 41.067, 0.5146", "526.399, 636.478, 41.0833, 0.642", "525.909, 637.512, 41.1524, 0.647", "525.034, 638.246, 41.2602, 0.6342", "524.13, 638.947, 41.4056, 0.7166", "523.262, 639.686, 41.613, 0.5844" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "566.166, 610.212, 37.9148, 0.5144", "566.63, 610.616, 38.4468, 0.2288", "567.556, 611.27, 38.8049, 0.5424", "568.521, 611.879, 38.9374, 0.5494", "569.343, 612.636, 39.1367, 0.4878", "570.181, 613.376, 39.3882, 0.5072", "571.187, 613.846, 39.5847, 0.5804", "572.25, 614.21, 39.7572, 0.5348", "573.311, 614.598, 40.0224, 0.4166", "574.303, 614.937, 40.4701, 0.3596", "575.193, 614.865, 41.1216, 0.3818", "576.16, 614.51, 41.8488, 0.4894", "577.237, 614.176, 42.4987, 0.5958", "578.363, 614.098, 43.0209, 0.558", "579.442, 614.418, 43.43, 0.4852", "580.506, 614.723, 43.8046, 0.3624", "581.62, 614.844, 44.1395, 0.3058", "582.677, 615.152, 44.4819, 0.2852", "583.419, 615.919, 44.7723, 0.2942", "583.767, 616.975, 44.9179, 0.312", "584.351, 617.901, 45.0738, 0.3384", "585.068, 618.629, 45.3446, 0.4194", "585.62, 619.606, 45.5879, 0.415", "586.197, 620.575, 45.6982, 0.4706", "586.844, 621.478, 45.6744, 0.4932", "587.526, 622.391, 45.6232, 0.4684", "588.31, 623.225, 45.5577, 0.517", "589.078, 624.071, 45.491, 0.606", "589.789, 624.967, 45.4544, 0.548", "590.534, 625.832, 45.4572, 0.6058", "591.396, 626.579, 45.4916, 0.5978", "592.301, 627.278, 45.5451, 0.4564", "593.12, 628.074, 45.6187, 0.3496", "593.791, 628.988, 45.7173, 0.3142", "594.227, 630.042, 45.8556, 0.3734", "594.641, 631.083, 46.0751, 0.334", "595.263, 632.007, 46.3786, 0.3", "595.955, 632.913, 46.6878, 0.2748", "596.585, 633.855, 47.0201, 0.2748", "597.292, 634.713, 47.4079, 0.2752", "598.13, 635.439, 47.8332, 0.2756", "599.036, 636.09, 48.2574, 0.2766", "599.955, 636.769, 48.6108, 0.2782", "600.805, 637.508, 48.879, 0.2814", "601.564, 638.345, 49.1697, 0.287", "602.325, 639.182, 49.478, 0.2988", "603.085, 640.02, 49.8081, 0.3142", "603.844, 640.857, 50.1651, 0.3734", "604.607, 641.694, 50.5411, 0.3338", "605.392, 642.528, 50.8788, 0.3", "606.117, 643.394, 51.2103, 0.2746", "606.694, 644.344, 51.6127, 0.2746", "607.271, 645.294, 52.0694, 0.2746", "607.848, 646.245, 52.561, 0.2746", "608.425, 647.195, 53.0687, 0.2746", "609.002, 648.146, 53.573, 0.2746", "609.579, 649.095, 54.047, 0.2746", "609.696, 650.218, 54.3892, 0.2746", "609.757, 651.359, 54.6148, 0.2746", "609.818, 652.502, 54.7518, 0.2746", "609.879, 653.645, 54.8265, 0.2746", "609.966, 654.784, 54.8638, 0.2746", "610.099, 655.922, 54.8864, 0.2746", "610.231, 657.057, 54.9156, 0.2746", "610.363, 658.193, 54.9556, 0.2746", "610.496, 659.33, 55.0077, 0.2746", "610.746, 660.437, 55.0892, 0.2746", "611.12, 661.515, 55.2121, 0.2746", "611.495, 662.591, 55.365, 0.2746", "611.87, 663.668, 55.5366, 0.2746", "612.245, 664.745, 55.7152, 0.2746", "612.619, 665.822, 55.8908, 0.2746", "612.994, 666.898, 56.0535, 0.2746", "613.023, 667.999, 56.1789, 0.2746", "612.785, 669.118, 56.2573, 0.2746", "612.546, 670.236, 56.2965, 0.2746", "612.308, 671.355, 56.3041, 0.2746", "612.069, 672.474, 56.2862, 0.2746", "611.83, 673.593, 56.2489, 0.2746", "611.659, 674.72, 56.1893, 0.2746", "611.61, 675.86, 56.0972, 0.2746", "611.561, 677.002, 55.9796, 0.2746", "611.511, 678.143, 55.844, 0.2744", "611.462, 679.283, 55.6976, 0.2744", "611.413, 680.425, 55.547, 0.2742", "611.364, 681.565, 55.3994, 0.274", "611.315, 682.706, 55.2594, 0.2736", "611.266, 683.847, 55.1289, 0.2728", "611.216, 684.988, 55.0094, 0.2712", "611.518, 686.085, 54.9242, 0.2684", "611.858, 687.178, 54.8688, 0.2626", "612.197, 688.27, 54.8363, 0.2542", "612.536, 689.363, 54.8201, 0.2288", "612.875, 690.456, 54.8142, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "566.166, 610.212, 37.9148, 0.5144", "567.49, 610.234, 37.3271, 0.424", "568.612, 610.397, 36.7867, 0.3834", "569.679, 610.681, 36.2538, 0.3774", "570.801, 610.881, 35.8291, 0.4876", "571.786, 611.461, 35.5435, 0.5614", "572.844, 611.896, 35.3752, 0.6444", "573.792, 612.534, 35.3111, 0.602" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "560.512, 584.878, 26.8937, 0.534", "561.361, 584.813, 24.36, 0.4576", "561.369, 584.177, 24.3491, 0.3594", "562.152, 583.562, 24.3449, 0.3", "562.619, 582.614, 24.3387, 0.2746", "562.967, 581.722, 24.3303, 0.2746", "563.306, 580.802, 24.3188, 0.2748", "563.613, 579.732, 24.3018, 0.2748", "564.181, 578.75, 24.278, 0.2752", "565.006, 577.958, 24.2466, 0.2756", "565.944, 577.312, 24.2074, 0.2766", "566.858, 576.634, 24.1438, 0.2784", "567.734, 575.962, 24.019, 0.2818", "568.559, 575.231, 23.9109, 0.2876", "568.774, 574.112, 23.8227, 0.2998", "568.797, 572.972, 23.7364, 0.3162", "568.797, 571.834, 23.6502, 0.3772", "568.797, 570.69, 23.5934, 0.341", "568.797, 569.546, 23.5598, 0.313", "569.074, 568.465, 23.5374, 0.2994", "569.874, 567.664, 23.5245, 0.3164", "570.42, 566.675, 23.52, 0.3728", "570.633, 565.551, 23.52, 0.356", "571.314, 564.793, 23.52, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "560.512, 584.878, 26.8937, 0.534", "559.693, 584.053, 26.6717, 0.4978", "558.894, 583.234, 26.4908, 0.5672", "558.128, 582.385, 26.3446, 0.7196", "557.544, 581.423, 26.2296, 0.6582", "557.381, 580.294, 26.1419, 0.612", "557.039, 579.211, 26.0501, 0.4264", "556.653, 578.171, 25.8849, 0.3398", "556.203, 577.124, 25.7412, 0.3012", "555.815, 576.061, 25.6889, 0.3248", "555.595, 575.065, 25.8244, 0.3632", "555.297, 574.036, 25.8054, 0.46", "554.871, 572.996, 25.7029, 0.5158", "554.453, 571.943, 25.5525, 0.5344", "553.897, 570.946, 25.408, 0.5218", "553.528, 569.866, 25.2683, 0.4978", "553.159, 568.785, 25.1418, 0.4582", "553.0, 567.654, 25.0544, 0.3594", "552.327, 566.762, 24.9802, 0.3002", "551.824, 565.756, 24.9018, 0.2748", "551.55, 564.667, 24.7554, 0.2752", "550.994, 563.708, 24.5431, 0.2756", "550.273, 562.937, 24.3538, 0.2766", "549.721, 561.952, 24.1536, 0.2782", "549.433, 560.869, 23.938, 0.2814", "549.225, 559.751, 23.749, 0.287", "548.64, 558.821, 23.5472, 0.2988", "548.358, 557.716, 23.4007, 0.314", "547.739, 556.756, 23.2912, 0.3734", "547.2, 555.748, 23.2137, 0.3338", "546.946, 554.652, 23.1582, 0.2998", "547.061, 553.519, 23.1137, 0.2742", "547.061, 552.375, 23.0759, 0.274", "547.175, 551.297, 22.9541, 0.2736", "547.175, 550.153, 22.8564, 0.2728", "547.175, 549.009, 22.7819, 0.2712", "547.175, 547.865, 22.7287, 0.2684", "547.175, 546.721, 22.6957, 0.2626", "547.503, 545.633, 22.68, 0.2542", "547.979, 544.593, 22.68, 0.2288", "548.662, 543.858, 22.68, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "523.262, 639.686, 41.613, 0.5844", "522.665, 639.642, 41.9275, 0.5774", "521.61, 639.706, 42.3634, 0.552", "520.604, 640.178, 42.8022, 0.7958", "519.645, 640.785, 43.183, 0.75", "518.563, 641.037, 43.538, 0.5644", "517.463, 641.136, 43.9121, 0.4808", "516.401, 641.512, 44.2814, 0.4342", "515.312, 641.763, 44.6359, 0.5082", "514.193, 641.814, 45.0061, 0.5526", "513.112, 641.92, 45.3992, 0.6284", "512.062, 642.21, 45.7999, 0.571", "510.953, 642.382, 46.1, 0.5106", "509.891, 642.748, 46.198, 0.4042", "508.96, 643.256, 46.1818, 0.4088", "507.971, 643.795, 46.0376, 0.352", "506.982, 644.334, 45.8105, 0.3346", "506.22, 645.179, 45.6112, 0.3334", "505.476, 646.049, 45.4661, 0.41", "504.685, 646.875, 45.3768, 0.3976", "503.876, 647.684, 45.3258, 0.4384", "503.067, 648.492, 45.3032, 0.433", "502.229, 649.269, 45.2925, 0.3596", "501.381, 650.038, 45.2785, 0.3006", "500.533, 650.806, 45.2586, 0.2756", "499.644, 651.519, 45.2312, 0.2766", "498.667, 652.115, 45.1965, 0.2784", "497.681, 652.689, 45.1489, 0.2818", "496.639, 653.145, 45.0576, 0.2876", "495.598, 653.602, 44.9428, 0.2998", "494.557, 654.058, 44.8241, 0.316", "493.441, 654.239, 44.7524, 0.377", "492.301, 654.325, 44.7434, 0.3408", "491.19, 654.54, 44.83, 0.3124", "490.103, 654.85, 45.0198, 0.2988", "489.015, 655.161, 45.2813, 0.3142", "487.927, 655.472, 45.5851, 0.3734", "486.841, 655.782, 45.9049, 0.334", "485.742, 656.081, 46.191, 0.3", "484.635, 656.369, 46.4145, 0.2748", "483.756, 656.65, 46.6082, 0.2748", "482.771, 657.223, 46.7998, 0.275", "481.788, 657.798, 46.993, 0.2754", "480.803, 658.372, 47.1901, 0.2762", "479.818, 658.946, 47.3934, 0.2778", "478.833, 659.519, 47.5983, 0.2804", "477.849, 660.094, 47.7977, 0.2856", "476.859, 660.667, 47.9562, 0.2948", "475.868, 661.241, 48.0894, 0.3128", "474.768, 661.365, 48.2118, 0.3414", "473.625, 661.314, 48.3356, 0.4186", "472.519, 661.422, 48.4932, 0.4432", "471.49, 661.874, 48.7385, 0.3786", "470.462, 662.326, 49.056, 0.3366", "469.467, 662.85, 49.4024, 0.3382", "468.546, 663.529, 49.7143, 0.413", "467.625, 664.208, 49.9996, 0.4328", "466.745, 664.877, 50.3572, 0.3594", "465.872, 665.545, 50.7828, 0.3", "464.882, 666.078, 51.2109, 0.2746", "463.865, 666.578, 51.6289, 0.2746", "462.846, 667.078, 52.0344, 0.2746", "461.829, 667.579, 52.4166, 0.2748", "460.811, 668.079, 52.764, 0.2748", "459.793, 668.579, 53.083, 0.2752", "458.776, 669.08, 53.38, 0.2756", "457.758, 669.58, 53.653, 0.2766", "456.735, 670.074, 53.8871, 0.2784", "455.694, 670.548, 54.0408, 0.2818", "454.652, 671.021, 54.1282, 0.288", "453.611, 671.495, 54.1621, 0.299", "452.569, 671.968, 54.1534, 0.322", "451.528, 672.441, 54.1136, 0.3518", "450.487, 672.914, 54.0515, 0.4688", "449.394, 673.226, 53.9398, 0.387", "448.294, 673.508, 53.7877, 0.3136", "447.193, 673.791, 53.6124, 0.2542", "446.067, 673.911, 53.4556, 0.2288", "444.923, 673.911, 53.233, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "523.262, 639.686, 41.613, 0.5844", "523.13, 640.83, 40.7736, 0.4576", "522.92, 641.953, 40.5692, 0.6222", "522.45, 642.994, 40.5084, 0.7348", "522.086, 644.036, 40.3418, 0.6506", "521.519, 645.021, 40.2094, 0.5434", "520.65, 645.724, 40.1892, 0.564", "519.711, 646.367, 40.1716, 0.6812", "518.839, 647.033, 40.0386, 0.7438", "518.071, 647.878, 39.9165, 0.6972", "517.417, 648.816, 39.8118, 0.712", "516.793, 649.774, 39.7029, 0.7068", "516.308, 650.804, 39.6102, 0.6268", "515.918, 651.846, 39.5856, 0.5916", "515.442, 652.805, 39.4276, 0.4354", "515.127, 653.526, 38.9822, 0.3576", "514.557, 654.484, 38.6058, 0.3286", "514.392, 655.583, 38.3628, 0.4014", "514.123, 656.672, 38.1018, 0.3806", "514.109, 657.766, 37.8686, 0.4118", "514.185, 658.904, 37.6765, 0.359", "514.26, 660.042, 37.5099, 0.3412", "514.336, 661.179, 37.3254, 0.3766", "514.412, 662.318, 37.1311, 0.3396", "514.461, 663.458, 36.953, 0.3106", "514.451, 664.602, 36.8038, 0.2942", "514.441, 665.746, 36.6736, 0.3118", "514.342, 666.879, 36.5117, 0.3396", "514.241, 668.011, 36.3241, 0.4154", "514.139, 669.144, 36.1194, 0.437", "514.036, 670.276, 35.9061, 0.3674", "513.934, 671.409, 35.6938, 0.315", "513.698, 672.524, 35.5275, 0.3018", "513.422, 673.635, 35.4161, 0.3274", "513.145, 674.745, 35.3475, 0.3618", "512.868, 675.855, 35.3086, 0.4876", "512.72, 676.988, 35.2881, 0.4212", "512.581, 678.124, 35.2755, 0.3794", "512.379, 679.232, 35.2607, 0.3642", "511.603, 680.071, 35.2397, 0.4916", "511.079, 681.083, 35.2097, 0.43", "510.586, 682.115, 35.1686, 0.3896", "510.092, 683.148, 35.1128, 0.4136", "509.614, 684.184, 35.0398, 0.434", "509.448, 685.311, 34.9121, 0.3618", "509.283, 686.438, 34.743, 0.3046", "509.118, 687.565, 34.5442, 0.283", "508.952, 688.691, 34.3277, 0.29", "508.786, 689.818, 34.1034, 0.3044", "508.622, 690.945, 33.8797, 0.3246", "508.611, 692.089, 33.6938, 0.3928", "508.652, 693.232, 33.5297, 0.3704", "508.722, 694.374, 33.3754, 0.3636", "508.792, 695.515, 33.2217, 0.413", "508.811, 696.561, 33.0092, 0.4328", "508.569, 697.25, 32.5587, 0.3594", "508.508, 698.389, 32.1919, 0.3", "508.508, 699.533, 31.9035, 0.2746", "508.508, 700.677, 31.6868, 0.2746", "508.47, 701.818, 31.5342, 0.2746", "508.105, 702.884, 31.43, 0.2746", "507.697, 703.849, 31.2976, 0.2746", "507.404, 704.948, 31.1858, 0.2744", "507.154, 706.055, 31.0946, 0.2744", "507.022, 707.168, 30.9826, 0.2742", "506.587, 708.164, 30.9022, 0.274", "506.126, 709.18, 30.851, 0.2736", "505.697, 710.162, 30.8244, 0.2728", "504.974, 711.031, 30.8078, 0.2712", "504.655, 712.101, 30.8, 0.2684", "504.161, 713.047, 30.8, 0.2626", "504.161, 714.191, 30.8, 0.2542", "504.161, 715.335, 30.8, 0.2288", "504.618, 716.373, 30.8, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "573.792, 612.534, 35.3111, 0.602", "574.232, 612.753, 35.261, 0.5626", "575.271, 613.226, 35.2092, 0.527", "576.326, 613.668, 35.1501, 0.5072", "577.275, 614.275, 35.0717, 0.4758", "578.038, 615.124, 34.9712, 0.3916", "578.842, 615.939, 34.8454, 0.362", "579.802, 616.553, 34.6772, 0.38", "580.869, 616.743, 34.3784, 0.516", "581.939, 616.994, 34.0105, 0.4998", "583.051, 616.738, 33.7036, 0.3992", "584.074, 616.275, 33.5401, 0.3266", "585.14, 615.949, 33.3351, 0.325", "586.23, 615.602, 33.1887, 0.3636", "587.328, 615.29, 33.1022, 0.461", "588.471, 615.272, 33.0462, 0.5162", "589.606, 615.409, 32.9972, 0.5418", "590.68, 615.799, 32.9482, 0.5044", "591.741, 616.231, 32.9076, 0.617", "592.776, 616.717, 32.8572, 0.63", "593.836, 617.148, 32.7919, 0.6888", "594.91, 617.524, 32.69, 0.6302", "595.948, 617.903, 32.496, 0.6472", "596.995, 618.359, 32.3246, 0.5278", "598.09, 618.682, 32.2134, 0.5798", "599.193, 618.907, 32.1983, 0.4938", "600.333, 618.93, 32.1628, 0.5342", "601.471, 618.92, 32.1054, 0.5538", "602.611, 619.008, 32.0692, 0.6294", "603.657, 619.465, 32.0519, 0.5792", "604.701, 619.921, 32.0648, 0.4944", "605.751, 620.356, 32.0242, 0.5256", "606.807, 620.796, 32.0018, 0.5858", "607.864, 621.233, 31.9953, 0.6844", "608.836, 621.829, 32.0242, 0.7016" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "573.792, 612.534, 35.3111, 0.602", "574.032, 613.019, 35.3469, 0.4576", "574.527, 613.972, 34.3109, 0.5018", "575.044, 614.763, 33.782, 0.436", "575.679, 615.701, 33.2634, 0.4634", "576.245, 616.689, 32.7762, 0.474", "576.793, 617.671, 32.2717, 0.4614", "577.104, 618.742, 31.7817, 0.3652", "577.155, 619.881, 31.3695, 0.311", "577.193, 620.969, 30.9036, 0.2946", "577.498, 621.827, 30.2366, 0.3128", "578.006, 622.558, 29.4076, 0.3412", "577.992, 623.48, 28.5466, 0.4182", "577.69, 624.242, 27.8214, 0.4426", "577.36, 625.318, 27.2476, 0.3774", "577.257, 626.44, 26.8814, 0.3348", "577.655, 627.426, 26.6064, 0.3336", "577.999, 628.429, 26.4888, 0.4104", "578.062, 629.524, 26.5558, 0.3984", "578.057, 630.647, 26.6266, 0.4398", "578.028, 631.773, 26.6025, 0.4354", "577.852, 632.885, 26.5706, 0.364", "577.847, 634.003, 26.5936, 0.3088", "578.132, 635.065, 26.5275, 0.291", "578.658, 636.038, 26.3738, 0.3046", "578.849, 637.033, 26.1218, 0.3322", "578.822, 638.129, 25.993, 0.371", "578.968, 639.097, 26.1472, 0.5042", "578.97, 640.122, 26.493, 0.4544", "578.926, 641.253, 26.7725, 0.4292", "578.666, 642.306, 26.8915, 0.513", "578.567, 642.973, 27.006, 0.4942", "578.438, 644.091, 27.1438, 0.3886", "578.062, 644.827, 27.4128, 0.3072", "577.67, 645.872, 27.6226, 0.2882", "577.471, 646.997, 27.8088, 0.2996", "577.272, 648.115, 27.9681, 0.3216", "577.115, 649.246, 28.0815, 0.3576", "577.034, 650.383, 28.1554, 0.4496", "577.034, 651.524, 28.219, 0.4966", "577.034, 652.658, 28.3371, 0.498", "577.034, 653.801, 28.4553, 0.4588", "577.147, 654.935, 28.5541, 0.3604", "577.262, 656.057, 28.6756, 0.302", "577.267, 657.201, 28.7686, 0.2782", "577.377, 658.338, 28.8361, 0.2814", "577.561, 659.461, 28.8845, 0.2872", "578.081, 660.475, 28.9248, 0.299", "578.383, 661.566, 28.9752, 0.3146", "578.888, 662.577, 29.0447, 0.3744", "579.437, 663.574, 29.1077, 0.3358", "579.987, 664.568, 29.1668, 0.3036", "580.533, 665.555, 29.2264, 0.2814", "580.95, 666.615, 29.2894, 0.287", "581.423, 667.648, 29.356, 0.2988", "582.109, 668.551, 29.4535, 0.3142", "582.647, 669.5, 29.6139, 0.3734", "583.534, 670.07, 29.8259, 0.3338", "584.22, 670.956, 29.9914, 0.3", "585.222, 671.497, 30.114, 0.2746", "585.81, 672.419, 30.1969, 0.2746", "586.292, 673.442, 30.2448, 0.2746", "586.758, 674.465, 30.2666, 0.2746", "586.758, 675.609, 30.2772, 0.2746", "586.962, 676.727, 30.2921, 0.2746", "587.101, 677.849, 30.3131, 0.2746", "587.101, 678.993, 30.3425, 0.2746", "587.101, 680.137, 30.3831, 0.2746", "587.023, 681.266, 30.4382, 0.2746", "586.581, 682.318, 30.5144, 0.2746", "586.164, 683.371, 30.6387, 0.2746", "585.731, 684.415, 30.8036, 0.2746", "585.377, 685.493, 30.9812, 0.2746", "584.826, 686.451, 31.2309, 0.2746", "584.198, 687.407, 31.4292, 0.2746", "583.398, 688.206, 31.5815, 0.2746", "582.456, 688.844, 31.6946, 0.2746", "581.798, 689.778, 31.7873, 0.2746", "581.024, 690.603, 31.8752, 0.2746", "580.05, 691.14, 31.9676, 0.2744", "579.15, 691.805, 32.0816, 0.2744", "578.342, 692.598, 32.214, 0.2742", "578.04, 693.164, 32.6407, 0.274", "577.227, 693.943, 32.9826, 0.2736", "576.656, 694.935, 33.2436, 0.2728", "576.347, 695.999, 33.4292, 0.2712", "575.845, 696.967, 33.5457, 0.2684", "575.314, 697.973, 33.6, 0.2626", "575.203, 699.098, 33.6, 0.2542", "575.203, 700.242, 33.6, 0.2288", "575.203, 701.386, 33.6, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "608.836, 621.829, 32.0242, 0.7016", "609.456, 621.786, 32.9739, 0.2288", "610.515, 621.374, 33.2878, 0.5096", "611.583, 620.983, 33.3922, 0.4572", "612.693, 620.803, 33.5538, 0.4702", "613.806, 621.007, 33.724, 0.415", "614.835, 621.491, 33.9251, 0.4704", "615.856, 621.992, 34.1396, 0.4942", "616.91, 622.399, 34.3484, 0.4626", "618.014, 622.524, 34.5929, 0.5438", "619.128, 622.345, 34.8023, 0.4732", "620.202, 621.953, 34.9356, 0.5012", "621.301, 621.672, 34.9927, 0.4668", "622.442, 621.622, 34.9759, 0.5928", "623.571, 621.488, 34.9121, 0.592", "624.685, 621.257, 34.8236, 0.585", "625.808, 621.184, 34.6548, 0.5994", "626.92, 621.128, 34.4182, 0.4918", "628.039, 620.921, 34.204, 0.4874", "629.133, 620.633, 33.9842, 0.4472", "630.238, 620.423, 33.756, 0.5274", "631.363, 620.277, 33.5742, 0.6128", "632.5, 620.277, 33.4762, 0.6202", "633.64, 620.277, 33.4566, 0.4512", "634.783, 620.278, 33.4505, 0.3388", "635.922, 620.284, 33.4804, 0.2992", "637.063, 620.324, 33.5129, 0.321", "638.168, 620.522, 33.577, 0.3562", "639.29, 620.56, 33.6288, 0.4474", "640.321, 620.144, 33.6073, 0.491", "641.347, 619.712, 33.483, 0.494", "642.426, 619.367, 33.3284, 0.4206", "643.523, 619.045, 33.187, 0.4386", "644.644, 618.958, 33.0229, 0.4096", "645.721, 619.236, 32.9361, 0.4306", "646.759, 619.6, 32.986, 0.5646", "647.816, 619.823, 32.9367, 0.5794", "648.906, 620.109, 32.8202, 0.5976", "650.033, 620.244, 32.7348, 0.4466", "651.165, 620.103, 32.6192, 0.3784", "652.285, 619.867, 32.454, 0.3684", "653.416, 619.982, 32.2269, 0.4694", "654.481, 620.254, 31.8805, 0.5342", "655.574, 620.336, 31.4322, 0.5634", "656.267, 620.337, 30.8325, 0.6002", "657.217, 620.734, 30.3377, 0.5244", "658.347, 620.909, 29.9354, 0.3972", "659.423, 621.256, 29.6008, 0.3242", "660.438, 621.737, 29.2695, 0.3142", "661.531, 622.028, 28.9738, 0.3736", "662.57, 622.222, 28.5816, 0.334", "663.671, 622.222, 28.1842, 0.3002", "664.815, 622.222, 27.8664, 0.2752", "665.921, 622.222, 27.5475, 0.2756", "667.064, 622.222, 27.309, 0.2766", "668.208, 622.222, 27.1345, 0.2782", "669.351, 622.246, 27.0088, 0.2814", "670.49, 622.33, 26.8988, 0.287", "671.631, 622.336, 26.7588, 0.2988", "672.774, 622.336, 26.6224, 0.314", "673.279, 621.993, 26.3276, 0.3734", "674.424, 621.993, 26.0893, 0.3338", "675.568, 621.993, 25.9039, 0.2996", "676.703, 621.917, 25.7522, 0.274", "677.795, 621.605, 25.6281, 0.2736", "678.932, 621.535, 25.5528, 0.2728", "680.041, 621.266, 25.52, 0.2712", "681.138, 620.986, 25.4976, 0.2684", "682.277, 620.891, 25.4845, 0.2626", "683.344, 620.505, 25.48, 0.2542", "684.339, 620.039, 25.48, 0.2288", "685.256, 619.59, 25.48, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "608.836, 621.829, 32.0242, 0.7016", "609.206, 622.917, 32.0026, 0.6232", "609.695, 623.951, 31.9766, 0.5548", "610.136, 625.006, 31.9578, 0.5116", "610.664, 626.016, 31.9463, 0.485", "611.266, 626.977, 31.9735, 0.4036", "611.897, 627.899, 31.9494, 0.4078", "612.802, 628.443, 31.8223, 0.3504", "613.885, 628.701, 31.7324, 0.3306", "614.947, 629.084, 31.6772, 0.3322", "616.043, 629.391, 31.6112, 0.3772", "617.163, 629.624, 31.5244, 0.4858", "618.239, 629.884, 31.353, 0.5644", "619.295, 630.268, 31.1542, 0.62", "620.325, 630.765, 30.9719, 0.7022", "621.332, 631.31, 30.8179, 0.7278", "622.319, 631.886, 30.6936, 0.704", "623.308, 632.46, 30.5903, 0.549", "624.235, 633.109, 30.4604, 0.571", "625.197, 633.707, 30.3055, 0.4834", "626.239, 634.131, 30.2078, 0.4852", "627.31, 634.46, 30.0888, 0.6062", "628.391, 634.792, 29.911, 0.718", "629.47, 635.157, 29.7228, 0.5562", "630.529, 635.587, 29.5548, 0.4456", "631.598, 635.985, 29.3896, 0.4654", "632.647, 636.371, 29.1704, 0.5552", "633.619, 636.913, 28.9086, 0.4634", "634.546, 637.578, 28.6871, 0.404", "635.299, 638.119, 28.4318, 0.4416", "636.374, 638.496, 28.2414, 0.4806", "637.412, 638.976, 28.1103, 0.4734", "638.462, 639.415, 28.0311, 0.3886", "639.592, 639.578, 27.9871, 0.3492", "640.682, 639.861, 27.9602, 0.391", "641.81, 639.986, 27.9446, 0.3676", "642.931, 640.201, 27.9222, 0.357", "644.005, 640.598, 27.8914, 0.407", "645.131, 640.754, 27.8477, 0.3906", "646.256, 640.92, 27.7872, 0.4318", "647.367, 641.186, 27.7068, 0.3896", "648.474, 641.442, 27.5766, 0.43", "649.553, 641.809, 27.4249, 0.386", "650.608, 642.013, 27.1723, 0.4234", "651.732, 642.013, 26.8834, 0.374", "652.814, 642.185, 26.5838, 0.4", "653.785, 642.751, 26.3631, 0.336", "654.915, 642.862, 26.2161, 0.304", "656.004, 643.204, 26.1327, 0.282", "657.091, 643.56, 26.1058, 0.2884", "658.164, 643.855, 26.1139, 0.2998", "659.247, 644.148, 26.1411, 0.3236", "660.363, 644.301, 26.1733, 0.355", "661.489, 644.301, 26.2427, 0.4746", "662.612, 644.301, 26.35, 0.3976", "663.734, 644.422, 26.4312, 0.3334", "664.732, 644.922, 26.4877, 0.2892", "665.866, 645.067, 26.5194, 0.3028", "667.0, 645.201, 26.5272, 0.3218", "668.133, 645.294, 26.5121, 0.3876", "669.175, 645.759, 26.4754, 0.3612", "670.091, 646.442, 26.423, 0.3454", "671.14, 646.896, 26.3536, 0.3842", "672.28, 646.932, 26.2674, 0.3538", "673.393, 647.097, 26.1657, 0.3376", "673.932, 647.046, 25.8513, 0.3402", "675.072, 647.097, 25.5937, 0.4166", "676.164, 647.44, 25.3887, 0.4396", "677.303, 647.504, 25.2302, 0.3718", "678.447, 647.514, 25.1096, 0.3242", "679.583, 647.618, 25.0174, 0.3142", "680.727, 647.618, 24.9463, 0.3738", "681.863, 647.671, 24.8578, 0.3344", "682.807, 648.256, 24.7156, 0.301", "683.845, 648.578, 24.4681, 0.2766", "684.951, 648.648, 24.1797, 0.2782", "686.095, 648.648, 23.9501, 0.2814", "687.239, 648.648, 23.791, 0.287", "688.372, 648.735, 23.6981, 0.2988", "689.453, 649.101, 23.6662, 0.3142", "690.513, 649.449, 23.723, 0.3734", "691.657, 649.449, 23.7927, 0.3338", "692.801, 649.449, 23.8599, 0.3", "693.942, 649.401, 23.9266, 0.2746", "695.075, 649.334, 24.0274, 0.2746", "696.219, 649.334, 24.1139, 0.2746", "697.27, 648.949, 24.2169, 0.2746", "698.298, 648.484, 24.3172, 0.2746", "699.436, 648.419, 24.402, 0.2746", "700.575, 648.419, 24.4961, 0.2746", "701.709, 648.365, 24.5904, 0.2746", "702.759, 648.076, 24.6691, 0.2746", "703.896, 648.022, 24.7372, 0.2746", "704.942, 647.61, 24.8399, 0.2746", "706.016, 647.311, 24.9281, 0.2746", "707.068, 646.861, 25.0034, 0.2746", "708.098, 646.474, 25.0706, 0.2746", "709.207, 646.448, 25.2132, 0.2746", "710.336, 646.26, 25.324, 0.2746", "711.479, 646.246, 25.4069, 0.2746", "712.579, 646.024, 25.4713, 0.2748", "713.679, 645.78, 25.5203, 0.2748", "714.788, 645.563, 25.5584, 0.2752", "715.827, 645.272, 25.5912, 0.2756", "716.812, 644.873, 25.6357, 0.2766", "717.956, 644.868, 25.6922, 0.2782", "719.065, 644.658, 25.7625, 0.2814", "720.076, 644.204, 25.9255, 0.287", "721.071, 643.67, 26.1159, 0.2988", "722.147, 643.302, 26.2805, 0.3142", "723.054, 642.626, 26.4214, 0.3734", "723.893, 641.897, 26.5936, 0.3338", "724.899, 641.37, 26.7518, 0.3", "725.969, 641.013, 26.9046, 0.2746", "727.098, 640.841, 27.0164, 0.2746", "728.232, 640.742, 27.0976, 0.2746", "729.273, 640.291, 27.151, 0.2748", "730.352, 639.915, 27.1807, 0.2748", "731.364, 639.438, 27.2, 0.2752", "732.503, 639.382, 27.216, 0.2756", "733.593, 639.136, 27.2378, 0.2766", "734.632, 638.667, 27.2686, 0.2782", "735.719, 638.308, 27.3132, 0.2814", "736.776, 637.874, 27.3759, 0.2872", "737.785, 637.356, 27.4588, 0.299", "738.928, 637.322, 27.5621, 0.3144", "740.007, 637.322, 27.7446, 0.374", "741.063, 637.322, 28.0258, 0.335", "742.177, 637.322, 28.3427, 0.3022", "743.312, 637.354, 28.6059, 0.2788", "744.318, 637.727, 28.8089, 0.2824", "745.326, 638.177, 29.0192, 0.289", "746.391, 638.558, 29.1729, 0.301", "747.495, 638.849, 29.2645, 0.3256", "748.633, 638.958, 29.3166, 0.3586", "749.69, 639.291, 29.3448, 0.4816", "750.821, 639.429, 29.3504, 0.4104", "751.934, 639.62, 29.3339, 0.3584", "752.99, 640.006, 29.3082, 0.3302", "754.115, 640.203, 29.2762, 0.4044", "755.205, 640.547, 29.2393, 0.3858", "755.778, 641.384, 29.1186, 0.423", "756.79, 641.895, 29.0228, 0.3734", "757.776, 642.441, 28.9509, 0.3986", "758.912, 642.554, 28.9016, 0.3336", "760.011, 642.852, 28.873, 0.2994", "761.138, 643.034, 28.8646, 0.2736", "762.262, 643.14, 28.8747, 0.2728", "763.372, 643.396, 28.8893, 0.2712", "764.476, 643.652, 28.9072, 0.2684", "765.593, 643.862, 28.9276, 0.2626", "766.689, 644.129, 28.9803, 0.2542", "767.788, 644.439, 29.0332, 0.2288", "768.768, 644.873, 29.12, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_37", "dend_32", "dend_25", "dend_20", "dend_11", "dend_0", "dend_42", "dend_39", "dend_36", "dend_33", "dend_29", "dend_26", "dend_24", "dend_21", "dend_17", "dend_12", "dend_4", "dend_1", "dend_41", "dend_40", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_23", "dend_22", "dend_19", "dend_18", "dend_16", "dend_13", "dend_10", "dend_5", "dend_3", "dend_2", "dend_15", "dend_14", "dend_7", "dend_6", "dend_9", "dend_8" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13105",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.8342767"
  }, {
    "group" : "axon",
    "value" : "2.8342767"
  }, {
    "group" : "dend",
    "value" : "2.8342767"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "59.062218"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "1.7446656E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.062607184",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.8071553E-10",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.16925804",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.0829936",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.1250871",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.0712779E-5",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.04280117",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "3.230946E-7",
    "erev" : "-94.93799"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "5.1963405E-4",
    "erev" : "-94.93799"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.9370007E-6",
    "erev" : "-94.93799"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.0749285E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.009070936",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478513451",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478513451

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_38, dend_37, dend_32, dend_25, dend_20, dend_11, dend_0, dend_42, dend_39, dend_36, dend_33, dend_29, dend_26, dend_24, dend_21, dend_17, dend_12, dend_4, dend_1, dend_41, dend_40, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_23, dend_22, dend_19, dend_18, dend_16, dend_13, dend_10, dend_5, dend_3, dend_2, dend_15, dend_14, dend_7, dend_6, dend_9, dend_8]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_13105, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_13105
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513451
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_38(0), soma_0(0.5)
    connect dend_37(0), soma_0(0.5)
    connect dend_32(0), soma_0(0.5)
    connect dend_25(0), soma_0(0.5)
    connect dend_20(0), soma_0(0.5)
    connect dend_11(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 534.656, 612.04, 40.88, 16.3448 ) }
    soma_0 { pt3dadd( 542.828, 612.04, 40.88, 16.3448 ) }
    soma_0 { pt3dadd( 551.0, 612.04, 40.88, 16.3448 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 542.828, 612.04, 40.88, 1.0 ) }
    axon_0 { pt3dadd( 548.669, 625.856, 40.88, 1.0 ) }
    axon_0 { pt3dadd( 554.511, 639.672, 40.88, 1.0 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 6/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 548.073, 618.218, 46.2868, 0.2288 ) }
    dend_38 { pt3dadd( 548.872, 619.014, 46.7454, 0.3296 ) }
    dend_38 { pt3dadd( 549.671, 619.81, 46.9566, 0.4018 ) }
    dend_38 { pt3dadd( 550.486, 620.602, 47.1668, 0.3888 ) }
    dend_38 { pt3dadd( 551.355, 621.34, 47.3393, 0.3914 ) }
    dend_38 { pt3dadd( 552.324, 621.947, 47.4813, 0.4948 ) }
    dend_38 { pt3dadd( 553.395, 622.223, 47.5992, 0.4362 ) }
    dend_38 { pt3dadd( 554.539, 622.262, 47.6963, 0.3996 ) }
    dend_38 { pt3dadd( 555.682, 622.3, 47.7862, 0.4384 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 15/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 541.431, 604.469, 42.6919, 0.2288 ) }
    dend_37 { pt3dadd( 541.104, 603.396, 42.6866, 0.3152 ) }
    dend_37 { pt3dadd( 540.065, 602.918, 42.6846, 0.3456 ) }
    dend_37 { pt3dadd( 538.995, 602.567, 42.6815, 0.4268 ) }
    dend_37 { pt3dadd( 537.852, 602.515, 42.6776, 0.458 ) }
    dend_37 { pt3dadd( 536.709, 602.462, 42.672, 0.4082 ) }
    dend_37 { pt3dadd( 535.566, 602.41, 42.6639, 0.38 ) }
    dend_37 { pt3dadd( 534.423, 602.358, 42.6524, 0.4742 ) }
    dend_37 { pt3dadd( 533.28, 602.306, 42.6373, 0.3966 ) }
    dend_37 { pt3dadd( 532.137, 602.253, 42.6174, 0.3318 ) }
    dend_37 { pt3dadd( 530.998, 602.333, 42.5832, 0.2864 ) }
    dend_37 { pt3dadd( 529.859, 602.43, 42.5368, 0.2966 ) }
    dend_37 { pt3dadd( 528.719, 602.526, 42.4805, 0.315 ) }
    dend_37 { pt3dadd( 527.58, 602.624, 42.4183, 0.3504 ) }
    dend_37 { pt3dadd( 526.44, 602.721, 42.3545, 0.4116 ) }
    dend_37 { pt3dadd( 525.301, 602.818, 42.294, 0.5466 ) }
    dend_37 { pt3dadd( 524.161, 602.916, 42.2405, 0.6916 ) }
    dend_37 { pt3dadd( 523.211, 603.078, 42.1663, 0.786 ) }
    dend_37 { pt3dadd( 522.08, 603.24, 42.1204, 0.6624 ) }
    dend_37 { pt3dadd( 520.96, 603.141, 42.1338, 0.511 ) }
    dend_37 { pt3dadd( 519.891, 602.75, 42.1954, 0.539 ) }
    dend_37 { pt3dadd( 518.853, 602.332, 42.2366, 0.4658 ) }
    dend_37 { pt3dadd( 517.801, 602.289, 42.3548, 0.4802 ) }
    dend_37 { pt3dadd( 516.752, 602.356, 42.6754, 0.4626 ) }
    dend_37 { pt3dadd( 515.811, 602.061, 43.1819, 0.417 ) }
    dend_37 { pt3dadd( 515.094, 601.297, 43.7296, 0.3962 ) }
    dend_37 { pt3dadd( 514.561, 600.348, 44.109, 0.5054 ) }
    dend_37 { pt3dadd( 514.118, 599.329, 44.3624, 0.449 ) }
    dend_37 { pt3dadd( 513.617, 598.35, 44.6684, 0.4556 ) }
    dend_37 { pt3dadd( 513.014, 597.709, 45.1783, 0.3864 ) }
    dend_37 { pt3dadd( 512.26, 596.977, 45.7262, 0.424 ) }
    dend_37 { pt3dadd( 511.532, 596.102, 46.214, 0.3754 ) }
    dend_37 { pt3dadd( 511.02, 595.087, 46.6567, 0.4026 ) }
    dend_37 { pt3dadd( 510.438, 594.12, 47.0873, 0.3406 ) }
    dend_37 { pt3dadd( 509.8, 593.196, 47.5096, 0.3126 ) }
    dend_37 { pt3dadd( 509.138, 592.269, 47.8836, 0.2978 ) }
    dend_37 { pt3dadd( 508.306, 591.522, 48.2849, 0.3184 ) }
    dend_37 { pt3dadd( 507.353, 590.932, 48.7301, 0.3518 ) }
    dend_37 { pt3dadd( 506.524, 590.179, 49.1985, 0.438 ) }
    dend_37 { pt3dadd( 505.833, 589.327, 49.7095, 0.4798 ) }
    dend_37 { pt3dadd( 505.224, 588.378, 50.1852, 0.4424 ) }
    dend_37 { pt3dadd( 504.372, 587.644, 50.6293, 0.4752 ) }
    dend_37 { pt3dadd( 503.533, 586.994, 51.1224, 0.4958 ) }
    dend_37 { pt3dadd( 502.566, 586.398, 51.5236, 0.5016 ) }
    dend_37 { pt3dadd( 501.547, 585.882, 51.8112, 0.4414 ) }
    dend_37 { pt3dadd( 500.651, 585.332, 51.8826, 0.444 ) }
    dend_37 { pt3dadd( 500.099, 584.345, 52.0156, 0.5816 ) }
    dend_37 { pt3dadd( 499.497, 583.461, 52.3015, 0.6492 ) }
    dend_37 { pt3dadd( 498.594, 582.779, 52.6271, 0.5412 ) }
    dend_37 { pt3dadd( 497.616, 582.258, 53.0715, 0.5578 ) }
    dend_37 { pt3dadd( 496.748, 581.563, 53.5993, 0.452 ) }
    dend_37 { pt3dadd( 495.958, 580.815, 54.196, 0.4608 ) }
    dend_37 { pt3dadd( 494.912, 580.393, 54.7778, 0.3976 ) }
    dend_37 { pt3dadd( 493.835, 580.107, 55.384, 0.4384 ) }
    dend_37 { pt3dadd( 492.748, 579.879, 56.0216, 0.4328 ) }
    dend_37 { pt3dadd( 491.668, 579.729, 56.6888, 0.3594 ) }
    dend_37 { pt3dadd( 490.575, 579.676, 57.3695, 0.3 ) }
    dend_37 { pt3dadd( 489.573, 579.328, 58.1241, 0.2746 ) }
    dend_37 { pt3dadd( 488.59, 578.887, 58.9128, 0.2746 ) }
    dend_37 { pt3dadd( 487.522, 578.631, 59.6728, 0.2746 ) }
    dend_37 { pt3dadd( 486.425, 578.538, 60.4204, 0.2746 ) }
    dend_37 { pt3dadd( 485.447, 578.182, 61.1943, 0.2746 ) }
    dend_37 { pt3dadd( 484.621, 577.577, 62.0043, 0.2746 ) }
    dend_37 { pt3dadd( 484.296, 577.139, 62.6716, 0.2746 ) }
    dend_37 { pt3dadd( 483.568, 576.284, 63.2834, 0.2746 ) }
    dend_37 { pt3dadd( 482.866, 575.409, 63.8534, 0.2746 ) }
    dend_37 { pt3dadd( 482.25, 574.473, 64.3891, 0.2746 ) }
    dend_37 { pt3dadd( 481.633, 573.537, 64.8948, 0.2746 ) }
    dend_37 { pt3dadd( 480.814, 572.879, 65.3764, 0.2746 ) }
    dend_37 { pt3dadd( 479.726, 572.588, 65.8409, 0.2746 ) }
    dend_37 { pt3dadd( 478.638, 572.297, 66.276, 0.2746 ) }
    dend_37 { pt3dadd( 477.549, 572.007, 66.6795, 0.2746 ) }
    dend_37 { pt3dadd( 476.453, 571.759, 67.041, 0.2746 ) }
    dend_37 { pt3dadd( 475.31, 571.771, 67.3053, 0.2746 ) }
    dend_37 { pt3dadd( 474.166, 571.784, 67.5004, 0.2746 ) }
    dend_37 { pt3dadd( 473.022, 571.797, 67.6519, 0.2746 ) }
    dend_37 { pt3dadd( 471.878, 571.81, 67.7827, 0.2746 ) }
    dend_37 { pt3dadd( 470.734, 571.823, 67.9134, 0.2746 ) }
    dend_37 { pt3dadd( 469.605, 571.809, 68.1254, 0.2746 ) }
    dend_37 { pt3dadd( 468.477, 571.796, 68.4085, 0.2746 ) }
    dend_37 { pt3dadd( 467.348, 571.783, 68.7394, 0.2746 ) }
    dend_37 { pt3dadd( 466.22, 571.77, 69.0959, 0.2746 ) }
    dend_37 { pt3dadd( 465.091, 571.756, 69.456, 0.2746 ) }
    dend_37 { pt3dadd( 463.962, 571.744, 69.7995, 0.2746 ) }
    dend_37 { pt3dadd( 462.836, 571.755, 70.1042, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_37 { pt3dadd( 461.736, 572.069, 70.3072, 0.2746 ) }
    dend_37 { pt3dadd( 460.635, 572.382, 70.4259, 0.2746 ) }
    dend_37 { pt3dadd( 459.536, 572.697, 70.4774, 0.2746 ) }
    dend_37 { pt3dadd( 458.435, 573.01, 70.476, 0.2746 ) }
    dend_37 { pt3dadd( 457.335, 573.324, 70.4329, 0.2746 ) }
    dend_37 { pt3dadd( 456.242, 573.655, 70.3553, 0.2746 ) }
    dend_37 { pt3dadd( 455.224, 574.178, 70.2458, 0.2746 ) }
    dend_37 { pt3dadd( 454.206, 574.7, 70.0955, 0.2746 ) }
    dend_37 { pt3dadd( 453.189, 575.221, 69.8961, 0.2746 ) }
    dend_37 { pt3dadd( 452.152, 575.608, 69.6063, 0.2746 ) }
    dend_37 { pt3dadd( 451.071, 575.647, 69.1421, 0.2746 ) }
    dend_37 { pt3dadd( 449.989, 575.685, 68.5471, 0.2746 ) }
    dend_37 { pt3dadd( 448.908, 575.723, 67.8661, 0.2746 ) }
    dend_37 { pt3dadd( 447.826, 575.76, 67.1432, 0.2746 ) }
    dend_37 { pt3dadd( 446.745, 575.799, 66.4194, 0.2746 ) }
    dend_37 { pt3dadd( 445.662, 575.837, 65.7317, 0.2746 ) }
    dend_37 { pt3dadd( 444.562, 575.872, 65.1456, 0.2746 ) }
    dend_37 { pt3dadd( 443.419, 575.904, 64.743, 0.2746 ) }
    dend_37 { pt3dadd( 442.275, 575.935, 64.4843, 0.2746 ) }
    dend_37 { pt3dadd( 441.131, 575.967, 64.3314, 0.2746 ) }
    dend_37 { pt3dadd( 439.988, 575.998, 64.2488, 0.2746 ) }
    dend_37 { pt3dadd( 438.844, 576.029, 64.2032, 0.2746 ) }
    dend_37 { pt3dadd( 437.7, 576.061, 64.1648, 0.2746 ) }
    dend_37 { pt3dadd( 436.557, 576.092, 64.1147, 0.2746 ) }
    dend_37 { pt3dadd( 435.419, 576.174, 64.034, 0.2746 ) }
    dend_37 { pt3dadd( 434.283, 576.292, 63.917, 0.2746 ) }
    dend_37 { pt3dadd( 433.148, 576.409, 63.772, 0.2746 ) }
    dend_37 { pt3dadd( 432.013, 576.527, 63.607, 0.2746 ) }
    dend_37 { pt3dadd( 430.877, 576.645, 63.4304, 0.2746 ) }
    dend_37 { pt3dadd( 429.742, 576.761, 63.2486, 0.2746 ) }
    dend_37 { pt3dadd( 428.608, 576.879, 63.0694, 0.2746 ) }
    dend_37 { pt3dadd( 427.473, 576.996, 62.8967, 0.2746 ) }
    dend_37 { pt3dadd( 426.337, 577.114, 62.7332, 0.2746 ) }
    dend_37 { pt3dadd( 425.202, 577.23, 62.5808, 0.2746 ) }
    dend_37 { pt3dadd( 424.067, 577.348, 62.4417, 0.2746 ) }
    dend_37 { pt3dadd( 422.925, 577.352, 62.3398, 0.2746 ) }
    dend_37 { pt3dadd( 421.781, 577.325, 62.2745, 0.2746 ) }
    dend_37 { pt3dadd( 420.637, 577.299, 62.2381, 0.2746 ) }
    dend_37 { pt3dadd( 419.493, 577.273, 62.2236, 0.2748 ) }
    dend_37 { pt3dadd( 418.35, 577.246, 62.2244, 0.2748 ) }
    dend_37 { pt3dadd( 417.207, 577.22, 62.235, 0.2752 ) }
    dend_37 { pt3dadd( 416.062, 577.194, 62.2521, 0.2756 ) }
    dend_37 { pt3dadd( 414.918, 577.169, 62.2756, 0.2766 ) }
    dend_37 { pt3dadd( 413.778, 577.244, 62.3084, 0.2782 ) }
    dend_37 { pt3dadd( 412.636, 577.32, 62.3538, 0.2814 ) }
    dend_37 { pt3dadd( 411.495, 577.395, 62.4182, 0.287 ) }
    dend_37 { pt3dadd( 410.353, 577.471, 62.5094, 0.2988 ) }
    dend_37 { pt3dadd( 409.211, 577.546, 62.6357, 0.3142 ) }
    dend_37 { pt3dadd( 408.07, 577.622, 62.8037, 0.3738 ) }
    dend_37 { pt3dadd( 406.937, 577.675, 63.035, 0.3344 ) }
    dend_37 { pt3dadd( 405.851, 577.607, 63.4273, 0.301 ) }
    dend_37 { pt3dadd( 404.766, 577.538, 63.9366, 0.2766 ) }
    dend_37 { pt3dadd( 403.68, 577.469, 64.5212, 0.2782 ) }
    dend_37 { pt3dadd( 402.594, 577.401, 65.1479, 0.2814 ) }
    dend_37 { pt3dadd( 401.542, 577.801, 65.683, 0.287 ) }
    dend_37 { pt3dadd( 400.493, 578.258, 66.1256, 0.2988 ) }
    dend_37 { pt3dadd( 399.444, 578.714, 66.4927, 0.314 ) }
    dend_37 { pt3dadd( 398.395, 579.171, 66.8142, 0.3734 ) }
    dend_37 { pt3dadd( 397.618, 579.349, 67.324, 0.3338 ) }
    dend_37 { pt3dadd( 397.006, 579.359, 68.0982, 0.2998 ) }
    dend_37 { pt3dadd( 396.714, 580.016, 68.707, 0.2742 ) }
    dend_37 { pt3dadd( 395.75, 580.538, 69.1614, 0.274 ) }
    dend_37 { pt3dadd( 395.314, 581.555, 69.4728, 0.2736 ) }
    dend_37 { pt3dadd( 395.199, 582.691, 69.6542, 0.2728 ) }
    dend_37 { pt3dadd( 395.019, 583.82, 69.72, 0.2712 ) }
    dend_37 { pt3dadd( 394.465, 584.584, 69.72, 0.2684 ) }
    dend_37 { pt3dadd( 393.628, 585.086, 69.72, 0.2626 ) }
    dend_37 { pt3dadd( 392.964, 585.958, 69.72, 0.2542 ) }
    dend_37 { pt3dadd( 392.368, 586.758, 69.72, 0.2288 ) }
    dend_37 { pt3dadd( 391.706, 587.444, 69.72, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 70/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 546.491, 619.51, 42.1756, 0.2288 ) }
    dend_32 { pt3dadd( 546.777, 620.591, 43.1276, 0.4788 ) }
    dend_32 { pt3dadd( 547.069, 621.639, 43.5509, 0.5562 ) }
    dend_32 { pt3dadd( 547.407, 622.659, 44.0698, 0.5814 ) }
    dend_32 { pt3dadd( 548.015, 623.568, 44.6152, 0.7448 ) }
    dend_32 { pt3dadd( 548.786, 624.409, 45.0839, 0.9388 ) }
    dend_32 { pt3dadd( 549.589, 625.225, 45.4563, 0.9124 ) }
    dend_32 { pt3dadd( 550.299, 625.937, 45.7736, 0.678 ) }
    dend_32 { pt3dadd( 551.186, 626.581, 46.1418, 0.4586 ) }
    dend_32 { pt3dadd( 551.619, 627.633, 46.4442, 0.3792 ) }
    dend_32 { pt3dadd( 552.036, 628.698, 46.7093, 0.4724 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 540.945, 620.358, 37.9327, 2.2698 ) }
    dend_25 { pt3dadd( 541.453, 621.192, 36.9905, 0.4012 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 83/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 546.497, 619.553, 40.7747, 0.2288 ) }
    dend_20 { pt3dadd( 546.802, 620.628, 40.5602, 0.3828 ) }
    dend_20 { pt3dadd( 546.631, 621.732, 40.4474, 0.4898 ) }
    dend_20 { pt3dadd( 546.513, 622.868, 40.3908, 0.6018 ) }
    dend_20 { pt3dadd( 546.565, 623.998, 40.4354, 0.5442 ) }
    dend_20 { pt3dadd( 546.863, 625.051, 40.6115, 0.5812 ) }
    dend_20 { pt3dadd( 547.134, 626.114, 40.8761, 0.6364 ) }
    dend_20 { pt3dadd( 547.807, 627.024, 41.0855, 0.805 ) }
    dend_20 { pt3dadd( 548.674, 627.729, 41.134, 0.796 ) }
    dend_20 { pt3dadd( 549.423, 628.574, 41.0634, 0.7394 ) }
    dend_20 { pt3dadd( 550.135, 629.47, 40.9567, 0.5982 ) }
    dend_20 { pt3dadd( 550.813, 630.391, 40.8299, 0.5126 ) }
    dend_20 { pt3dadd( 551.58, 631.226, 40.67, 0.4142 ) }
    dend_20 { pt3dadd( 552.296, 632.081, 40.4765, 0.397 ) }
    dend_20 { pt3dadd( 552.87, 633.068, 40.3763, 0.477 ) }
    dend_20 { pt3dadd( 553.485, 634.003, 40.4163, 0.5404 ) }
    dend_20 { pt3dadd( 554.134, 634.931, 40.525, 0.612 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_20 { pt3dadd( 554.706, 635.921, 40.6241, 0.5102 ) }
    dend_20 { pt3dadd( 555.344, 636.87, 40.7067, 0.5462 ) }
    dend_20 { pt3dadd( 556.132, 637.701, 40.7613, 0.4368 ) }
    dend_20 { pt3dadd( 556.935, 638.516, 40.7753, 0.4018 ) }
    dend_20 { pt3dadd( 557.721, 639.346, 40.7582, 0.4374 ) }
    dend_20 { pt3dadd( 558.402, 640.265, 40.7196, 0.473 ) }
    dend_20 { pt3dadd( 558.921, 641.261, 40.6092, 0.4594 ) }
    dend_20 { pt3dadd( 559.487, 642.242, 40.4712, 0.3614 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 8/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 535.842, 608.139, 41.9846, 0.6864 ) }
    dend_11 { pt3dadd( 534.985, 607.424, 41.7046, 0.5382 ) }
    dend_11 { pt3dadd( 534.015, 607.369, 41.5638, 0.552 ) }
    dend_11 { pt3dadd( 533.433, 608.289, 41.3619, 0.4414 ) }
    dend_11 { pt3dadd( 533.087, 609.378, 41.2115, 0.4404 ) }
    dend_11 { pt3dadd( 532.693, 610.448, 41.111, 0.3634 ) }
    dend_11 { pt3dadd( 532.342, 611.513, 41.0584, 0.357 ) }
    dend_11 { pt3dadd( 532.301, 612.656, 41.0539, 0.3698 ) }
    dend_11 { pt3dadd( 532.286, 613.79, 41.1188, 0.5022 ) }
    dend_11 { pt3dadd( 532.185, 614.91, 41.2191, 0.4492 ) }
    dend_11 { pt3dadd( 531.966, 616.02, 41.2947, 0.4258 ) }
    dend_11 { pt3dadd( 531.803, 617.134, 41.3792, 0.477 ) }
    dend_11 { pt3dadd( 531.637, 618.26, 41.4053, 0.5718 ) }
    dend_11 { pt3dadd( 531.452, 619.38, 41.3571, 0.5186 ) }
    dend_11 { pt3dadd( 531.716, 620.472, 41.1838, 0.3866 ) }
    dend_11 { pt3dadd( 531.761, 621.524, 40.8366, 0.3036 ) }
    dend_11 { pt3dadd( 531.37, 622.577, 40.467, 0.2812 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 25/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 550.487, 609.791, 37.5211, 0.2288 ) }
    dend_0 { pt3dadd( 551.625, 609.677, 37.8014, 0.6038 ) }
    dend_0 { pt3dadd( 552.704, 609.367, 37.9039, 0.6836 ) }
    dend_0 { pt3dadd( 553.706, 608.823, 38.0461, 0.6384 ) }
    dend_0 { pt3dadd( 554.703, 608.404, 38.295, 0.5768 ) }
    dend_0 { pt3dadd( 555.728, 608.202, 38.6663, 0.5842 ) }
    dend_0 { pt3dadd( 556.867, 608.268, 38.9396, 0.4636 ) }
    dend_0 { pt3dadd( 557.929, 607.971, 39.0146, 0.4344 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 33/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 554.511, 639.672, 40.88, 1.0 ) }
    axon_1 { pt3dadd( 560.352, 653.488, 40.88, 1.0 ) }
    axon_1 { pt3dadd( 566.193, 667.304, 40.88, 1.0 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 36/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 555.682, 622.3, 47.7862, 0.4384 ) }
    dend_42 { pt3dadd( 555.668, 622.768, 48.3022, 0.4576 ) }
    dend_42 { pt3dadd( 555.611, 623.678, 49.8932, 0.5352 ) }
    dend_42 { pt3dadd( 554.914, 624.296, 50.5134, 0.4938 ) }
    dend_42 { pt3dadd( 553.913, 624.708, 51.1526, 0.5898 ) }
    dend_42 { pt3dadd( 553.006, 625.027, 51.9386, 0.616 ) }
    dend_42 { pt3dadd( 552.609, 625.836, 52.6812, 0.4854 ) }
    dend_42 { pt3dadd( 552.562, 626.978, 53.2815, 0.4276 ) }
    dend_42 { pt3dadd( 552.515, 628.122, 53.7608, 0.34 ) }
    dend_42 { pt3dadd( 552.434, 629.216, 54.2884, 0.3114 ) }
    dend_42 { pt3dadd( 552.351, 630.307, 54.8632, 0.2956 ) }
    dend_42 { pt3dadd( 552.267, 631.399, 55.4716, 0.3146 ) }
    dend_42 { pt3dadd( 552.094, 632.498, 56.0969, 0.3446 ) }
    dend_42 { pt3dadd( 551.885, 633.602, 56.7218, 0.4246 ) }
    dend_42 { pt3dadd( 551.676, 634.705, 57.328, 0.4544 ) }
    dend_42 { pt3dadd( 551.969, 635.717, 57.9354, 0.3992 ) }
    dend_42 { pt3dadd( 552.431, 636.7, 58.5427, 0.3758 ) }
    dend_42 { pt3dadd( 552.893, 637.684, 59.1318, 0.4052 ) }
    dend_42 { pt3dadd( 553.536, 638.597, 59.6319, 0.565 ) }
    dend_42 { pt3dadd( 554.237, 639.488, 60.0272, 0.58 ) }
    dend_42 { pt3dadd( 554.937, 640.379, 60.3268, 0.5986 ) }
    dend_42 { pt3dadd( 555.219, 641.448, 60.4069, 0.4498 ) }
    dend_42 { pt3dadd( 555.46, 642.531, 60.3221, 0.3778 ) }
    dend_42 { pt3dadd( 555.714, 643.632, 60.1975, 0.3972 ) }
    dend_42 { pt3dadd( 555.977, 644.745, 60.123, 0.3788 ) }
    dend_42 { pt3dadd( 556.239, 645.859, 60.1163, 0.3788 ) }
    dend_42 { pt3dadd( 556.526, 646.966, 60.1852, 0.4422 ) }
    dend_42 { pt3dadd( 556.959, 647.982, 60.4066, 0.4816 ) }
    dend_42 { pt3dadd( 557.477, 648.943, 60.781, 0.4752 ) }
    dend_42 { pt3dadd( 557.995, 649.903, 61.2483, 0.392 ) }
    dend_42 { pt3dadd( 558.248, 650.951, 61.7067, 0.3554 ) }
    dend_42 { pt3dadd( 558.211, 652.094, 62.0819, 0.4024 ) }
    dend_42 { pt3dadd( 558.176, 653.238, 62.3874, 0.3896 ) }
    dend_42 { pt3dadd( 558.281, 654.357, 62.6517, 0.3928 ) }
    dend_42 { pt3dadd( 558.668, 655.427, 62.9258, 0.4974 ) }
    dend_42 { pt3dadd( 559.053, 656.498, 63.2324, 0.4418 ) }
    dend_42 { pt3dadd( 559.44, 657.569, 63.5981, 0.4052 ) }
    dend_42 { pt3dadd( 559.826, 658.64, 64.0408, 0.4736 ) }
    dend_42 { pt3dadd( 560.212, 659.711, 64.57, 0.3956 ) }
    dend_42 { pt3dadd( 560.598, 660.781, 65.1944, 0.3298 ) }
    dend_42 { pt3dadd( 560.984, 661.852, 65.9252, 0.2826 ) }
    dend_42 { pt3dadd( 561.201, 662.706, 66.9603, 0.2894 ) }
    dend_42 { pt3dadd( 561.365, 663.492, 68.2976, 0.3016 ) }
    dend_42 { pt3dadd( 561.529, 664.28, 69.8558, 0.327 ) }
    dend_42 { pt3dadd( 561.677, 665.01, 71.5719, 0.3612 ) }
    dend_42 { pt3dadd( 561.79, 665.624, 73.3944, 0.4862 ) }
    dend_42 { pt3dadd( 561.903, 666.238, 75.2296, 0.42 ) }
    dend_42 { pt3dadd( 561.826, 667.154, 76.8863, 0.3696 ) }
    dend_42 { pt3dadd( 561.719, 668.122, 78.3415, 0.3822 ) }
    dend_42 { pt3dadd( 561.61, 669.089, 79.609, 0.35 ) }
    dend_42 { pt3dadd( 561.847, 670.206, 80.4961, 0.331 ) }
    dend_42 { pt3dadd( 562.088, 671.324, 81.0888, 0.3266 ) }
    dend_42 { pt3dadd( 562.31, 672.43, 81.5416, 0.3976 ) }
    dend_42 { pt3dadd( 562.532, 673.535, 81.9115, 0.3734 ) }
    dend_42 { pt3dadd( 562.754, 674.64, 82.2301, 0.3988 ) }
    dend_42 { pt3dadd( 562.623, 675.747, 82.4754, 0.3338 ) }
    dend_42 { pt3dadd( 562.342, 676.857, 82.668, 0.3 ) }
    dend_42 { pt3dadd( 562.063, 677.966, 82.817, 0.2746 ) }
    dend_42 { pt3dadd( 561.784, 679.076, 82.9315, 0.2746 ) }
    dend_42 { pt3dadd( 561.505, 680.185, 83.0309, 0.2746 ) }
    dend_42 { pt3dadd( 561.154, 681.262, 83.1477, 0.2746 ) }
    dend_42 { pt3dadd( 560.608, 682.252, 83.3336, 0.2746 ) }
    dend_42 { pt3dadd( 560.062, 683.243, 83.5708, 0.2746 ) }
    dend_42 { pt3dadd( 559.517, 684.232, 83.8382, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( 558.932, 685.208, 84.0818, 0.2746 ) }
    dend_42 { pt3dadd( 558.321, 686.176, 84.2744, 0.2746 ) }
    dend_42 { pt3dadd( 557.71, 687.144, 84.4262, 0.2746 ) }
    dend_42 { pt3dadd( 557.099, 688.11, 84.5516, 0.2746 ) }
    dend_42 { pt3dadd( 556.489, 689.078, 84.6742, 0.2746 ) }
    dend_42 { pt3dadd( 555.879, 690.045, 84.8151, 0.2746 ) }
    dend_42 { pt3dadd( 555.268, 691.013, 84.9932, 0.2746 ) }
    dend_42 { pt3dadd( 554.819, 692.032, 85.288, 0.2746 ) }
    dend_42 { pt3dadd( 554.364, 693.047, 85.7027, 0.2746 ) }
    dend_42 { pt3dadd( 553.908, 694.061, 86.2098, 0.2746 ) }
    dend_42 { pt3dadd( 553.452, 695.076, 86.7821, 0.2746 ) }
    dend_42 { pt3dadd( 552.997, 696.091, 87.3953, 0.2746 ) }
    dend_42 { pt3dadd( 552.542, 697.106, 88.0261, 0.2746 ) }
    dend_42 { pt3dadd( 552.085, 698.119, 88.6528, 0.2746 ) }
    dend_42 { pt3dadd( 551.63, 699.134, 89.2682, 0.2746 ) }
    dend_42 { pt3dadd( 551.175, 700.149, 89.8699, 0.2746 ) }
    dend_42 { pt3dadd( 550.712, 701.162, 90.4518, 0.2746 ) }
    dend_42 { pt3dadd( 550.192, 702.166, 90.984, 0.2746 ) }
    dend_42 { pt3dadd( 549.67, 703.17, 91.4766, 0.2746 ) }
    dend_42 { pt3dadd( 549.15, 704.173, 91.9386, 0.2746 ) }
    dend_42 { pt3dadd( 548.629, 705.178, 92.3787, 0.2746 ) }
    dend_42 { pt3dadd( 548.109, 706.181, 92.8046, 0.2746 ) }
    dend_42 { pt3dadd( 547.587, 707.185, 93.2238, 0.2746 ) }
    dend_42 { pt3dadd( 547.067, 708.189, 93.6412, 0.2746 ) }
    dend_42 { pt3dadd( 546.546, 709.192, 94.0559, 0.2746 ) }
    dend_42 { pt3dadd( 546.026, 710.196, 94.4675, 0.2746 ) }
    dend_42 { pt3dadd( 545.505, 711.2, 94.8738, 0.2746 ) }
    dend_42 { pt3dadd( 544.983, 712.204, 95.2739, 0.2746 ) }
    dend_42 { pt3dadd( 544.463, 713.207, 95.6642, 0.2746 ) }
    dend_42 { pt3dadd( 543.942, 714.212, 96.0406, 0.2746 ) }
    dend_42 { pt3dadd( 543.422, 715.215, 96.3984, 0.2746 ) }
    dend_42 { pt3dadd( 542.9, 716.218, 96.7333, 0.2746 ) }
    dend_42 { pt3dadd( 542.38, 717.223, 97.0418, 0.2746 ) }
    dend_42 { pt3dadd( 541.662, 718.11, 97.2653, 0.2746 ) }
    dend_42 { pt3dadd( 540.93, 718.989, 97.4176, 0.2746 ) }
    dend_42 { pt3dadd( 540.198, 719.868, 97.5176, 0.2746 ) }
    dend_42 { pt3dadd( 539.465, 720.746, 97.5839, 0.2746 ) }
    dend_42 { pt3dadd( 538.732, 721.625, 97.634, 0.2746 ) }
    dend_42 { pt3dadd( 538.0, 722.505, 97.6861, 0.2746 ) }
    dend_42 { pt3dadd( 537.268, 723.383, 97.7595, 0.2746 ) }
    dend_42 { pt3dadd( 536.535, 724.262, 97.8614, 0.2746 ) }
    dend_42 { pt3dadd( 535.803, 725.14, 97.9992, 0.2746 ) }
    dend_42 { pt3dadd( 535.07, 726.019, 98.1789, 0.2746 ) }
    dend_42 { pt3dadd( 534.36, 726.883, 98.4855, 0.2746 ) }
    dend_42 { pt3dadd( 533.653, 727.745, 98.9047, 0.2746 ) }
    dend_42 { pt3dadd( 532.946, 728.607, 99.4104, 0.2748 ) }
    dend_42 { pt3dadd( 532.24, 729.469, 99.9782, 0.2748 ) }
    dend_42 { pt3dadd( 531.533, 730.331, 100.586, 0.2752 ) }
    dend_42 { pt3dadd( 530.826, 731.193, 101.213, 0.2756 ) }
    dend_42 { pt3dadd( 530.119, 732.055, 101.842, 0.2766 ) }
    dend_42 { pt3dadd( 529.412, 732.917, 102.472, 0.2782 ) }
    dend_42 { pt3dadd( 528.705, 733.779, 103.102, 0.2814 ) }
    dend_42 { pt3dadd( 527.998, 734.641, 103.734, 0.287 ) }
    dend_42 { pt3dadd( 527.291, 735.503, 104.366, 0.2988 ) }
    dend_42 { pt3dadd( 526.586, 736.365, 104.999, 0.3142 ) }
    dend_42 { pt3dadd( 525.878, 737.228, 105.633, 0.3734 ) }
    dend_42 { pt3dadd( 525.318, 738.173, 106.271, 0.3338 ) }
    dend_42 { pt3dadd( 524.916, 739.211, 106.915, 0.3 ) }
    dend_42 { pt3dadd( 524.516, 740.248, 107.561, 0.2746 ) }
    dend_42 { pt3dadd( 524.116, 741.286, 108.21, 0.2744 ) }
    dend_42 { pt3dadd( 523.715, 742.323, 108.86, 0.2744 ) }
    dend_42 { pt3dadd( 523.315, 743.361, 109.509, 0.2742 ) }
    dend_42 { pt3dadd( 522.914, 744.398, 110.157, 0.274 ) }
    dend_42 { pt3dadd( 522.513, 745.436, 110.801, 0.2736 ) }
    dend_42 { pt3dadd( 522.112, 746.474, 111.439, 0.2728 ) }
    dend_42 { pt3dadd( 521.712, 747.511, 112.081, 0.2712 ) }
    dend_42 { pt3dadd( 521.312, 748.549, 112.71, 0.2684 ) }
    dend_42 { pt3dadd( 520.911, 749.587, 113.314, 0.2626 ) }
    dend_42 { pt3dadd( 520.51, 750.624, 113.883, 0.2542 ) }
    dend_42 { pt3dadd( 520.109, 751.662, 114.407, 0.2288 ) }
    dend_42 { pt3dadd( 519.709, 752.699, 115.426, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 555.682, 622.3, 47.7862, 0.4384 ) }
    dend_39 { pt3dadd( 556.786, 621.298, 47.9912, 0.4508 ) }
    dend_39 { pt3dadd( 557.613, 620.547, 48.2451, 0.534 ) }
    dend_39 { pt3dadd( 558.567, 619.946, 48.4602, 0.6252 ) }
    dend_39 { pt3dadd( 559.594, 619.459, 48.5968, 0.6428 ) }
    dend_39 { pt3dadd( 560.735, 619.379, 48.6545, 0.4952 ) }
    dend_39 { pt3dadd( 561.863, 619.469, 48.6343, 0.4098 ) }
    dend_39 { pt3dadd( 562.968, 619.751, 48.526, 0.4822 ) }
    dend_39 { pt3dadd( 564.038, 620.127, 48.3151, 0.4114 ) }
    dend_39 { pt3dadd( 565.106, 620.502, 48.0323, 0.3602 ) }
    dend_39 { pt3dadd( 566.176, 620.878, 47.6924, 0.334 ) }
    dend_39 { pt3dadd( 567.245, 621.254, 47.3088, 0.41 ) }
    dend_39 { pt3dadd( 568.329, 621.622, 46.9361, 0.4036 ) }
    dend_39 { pt3dadd( 569.412, 621.99, 46.564, 0.4198 ) }
    dend_39 { pt3dadd( 570.197, 622.67, 46.0407, 0.5424 ) }
    dend_39 { pt3dadd( 570.935, 623.399, 45.3846, 0.5494 ) }
    dend_39 { pt3dadd( 571.581, 624.206, 44.6454, 0.488 ) }
    dend_39 { pt3dadd( 572.175, 625.059, 43.8679, 0.5064 ) }
    dend_39 { pt3dadd( 572.613, 626.018, 43.1561, 0.5852 ) }
    dend_39 { pt3dadd( 572.975, 627.087, 42.6342, 0.5148 ) }
    dend_39 { pt3dadd( 573.518, 628.094, 42.2853, 0.5186 ) }
    dend_39 { pt3dadd( 573.637, 629.213, 42.0686, 0.561 ) }
    dend_39 { pt3dadd( 573.961, 630.25, 41.9034, 0.4678 ) }
    dend_39 { pt3dadd( 574.581, 631.185, 41.7284, 0.4422 ) }
    dend_39 { pt3dadd( 575.403, 631.935, 41.5862, 0.367 ) }
    dend_39 { pt3dadd( 576.371, 632.537, 41.501, 0.3622 ) }
    dend_39 { pt3dadd( 577.455, 632.899, 41.494, 0.387 ) }
    dend_39 { pt3dadd( 578.537, 633.26, 41.552, 0.4972 ) }
    dend_39 { pt3dadd( 579.62, 633.62, 41.6623, 0.6176 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_39 { pt3dadd( 580.702, 633.982, 41.8065, 0.5634 ) }
    dend_39 { pt3dadd( 581.786, 634.343, 41.9616, 0.6652 ) }
    dend_39 { pt3dadd( 582.869, 634.706, 42.1053, 0.5582 ) }
    dend_39 { pt3dadd( 583.953, 635.072, 42.224, 0.4226 ) }
    dend_39 { pt3dadd( 585.037, 635.438, 42.3287, 0.3242 ) }
    dend_39 { pt3dadd( 586.12, 635.804, 42.4284, 0.3142 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 6/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 552.036, 628.698, 46.7093, 0.4724 ) }
    dend_36 { pt3dadd( 552.391, 629.271, 46.6805, 0.2288 ) }
    dend_36 { pt3dadd( 553.289, 629.939, 45.8256, 0.283 ) }
    dend_36 { pt3dadd( 554.188, 630.607, 45.4616, 0.2902 ) }
    dend_36 { pt3dadd( 555.087, 631.275, 45.0316, 0.3032 ) }
    dend_36 { pt3dadd( 555.985, 631.943, 44.5584, 0.3298 ) }
    dend_36 { pt3dadd( 556.884, 632.611, 44.0625, 0.3662 ) }
    dend_36 { pt3dadd( 557.757, 633.345, 43.6318, 0.4964 ) }
    dend_36 { pt3dadd( 558.825, 633.707, 43.2121, 0.4328 ) }
    dend_36 { pt3dadd( 559.904, 634.046, 42.7896, 0.4242 ) }
    dend_36 { pt3dadd( 560.984, 634.385, 42.3562, 0.3338 ) }
    dend_36 { pt3dadd( 562.063, 634.723, 41.9042, 0.3 ) }
    dend_36 { pt3dadd( 563.143, 635.062, 41.4263, 0.2746 ) }
    dend_36 { pt3dadd( 563.978, 635.776, 40.8901, 0.2746 ) }
    dend_36 { pt3dadd( 564.762, 636.57, 40.3046, 0.2746 ) }
    dend_36 { pt3dadd( 565.544, 637.364, 39.6777, 0.2746 ) }
    dend_36 { pt3dadd( 566.328, 638.157, 39.0166, 0.2744 ) }
    dend_36 { pt3dadd( 567.076, 638.946, 38.2981, 0.2744 ) }
    dend_36 { pt3dadd( 567.803, 639.729, 37.5236, 0.2742 ) }
    dend_36 { pt3dadd( 568.529, 640.513, 36.7254, 0.274 ) }
    dend_36 { pt3dadd( 569.255, 641.297, 35.9302, 0.2736 ) }
    dend_36 { pt3dadd( 569.982, 642.08, 35.1635, 0.2728 ) }
    dend_36 { pt3dadd( 570.708, 642.864, 34.447, 0.2712 ) }
    dend_36 { pt3dadd( 571.691, 643.391, 33.9139, 0.2684 ) }
    dend_36 { pt3dadd( 572.738, 643.854, 33.5639, 0.2626 ) }
    dend_36 { pt3dadd( 573.785, 644.316, 33.3553, 0.2542 ) }
    dend_36 { pt3dadd( 574.83, 644.778, 33.2492, 0.2288 ) }
    dend_36 { pt3dadd( 575.877, 645.24, 33.2046, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 552.036, 628.698, 46.7093, 0.4724 ) }
    dend_33 { pt3dadd( 552.51, 629.73, 47.0386, 0.3934 ) }
    dend_33 { pt3dadd( 552.978, 630.749, 47.4102, 0.3258 ) }
    dend_33 { pt3dadd( 553.447, 631.769, 47.7994, 0.2752 ) }
    dend_33 { pt3dadd( 553.914, 632.789, 48.1905, 0.276 ) }
    dend_33 { pt3dadd( 554.409, 633.799, 48.5694, 0.277 ) }
    dend_33 { pt3dadd( 555.01, 634.771, 48.8603, 0.2792 ) }
    dend_33 { pt3dadd( 555.613, 635.745, 49.0717, 0.2832 ) }
    dend_33 { pt3dadd( 556.215, 636.717, 49.2248, 0.2904 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 43/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 541.453, 621.192, 36.9905, 0.4012 ) }
    dend_29 { pt3dadd( 541.729, 621.468, 36.2771, 0.3624 ) }
    dend_29 { pt3dadd( 542.344, 622.429, 35.7762, 0.4646 ) }
    dend_29 { pt3dadd( 543.139, 623.249, 35.4626, 0.4944 ) }
    dend_29 { pt3dadd( 544.047, 623.941, 35.3153, 0.639 ) }
    dend_29 { pt3dadd( 544.663, 624.862, 35.3156, 0.7016 ) }
    dend_29 { pt3dadd( 545.067, 625.901, 35.3637, 0.6714 ) }
    dend_29 { pt3dadd( 545.522, 626.949, 35.2929, 0.6396 ) }
    dend_29 { pt3dadd( 545.826, 627.89, 34.9135, 0.6914 ) }
    dend_29 { pt3dadd( 546.135, 628.867, 34.3244, 0.708 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 53/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 541.453, 621.192, 36.9905, 0.4012 ) }
    dend_26 { pt3dadd( 541.427, 622.393, 35.317, 0.4576 ) }
    dend_26 { pt3dadd( 541.256, 623.518, 35.8042, 0.491 ) }
    dend_26 { pt3dadd( 541.01, 624.578, 36.048, 0.4208 ) }
    dend_26 { pt3dadd( 540.741, 625.626, 36.3759, 0.4106 ) }
    dend_26 { pt3dadd( 540.572, 626.739, 36.6537, 0.4954 ) }
    dend_26 { pt3dadd( 540.529, 627.88, 36.8211, 0.607 ) }
    dend_26 { pt3dadd( 540.469, 628.99, 36.8225, 0.5786 ) }
    dend_26 { pt3dadd( 540.214, 630.081, 36.715, 0.5246 ) }
    dend_26 { pt3dadd( 540.117, 631.196, 36.5355, 0.4312 ) }
    dend_26 { pt3dadd( 540.276, 632.301, 36.4613, 0.4534 ) }
    dend_26 { pt3dadd( 540.511, 633.417, 36.4238, 0.4606 ) }
    dend_26 { pt3dadd( 540.765, 634.385, 36.5375, 0.4118 ) }
    dend_26 { pt3dadd( 540.978, 635.5, 36.6467, 0.3926 ) }
    dend_26 { pt3dadd( 541.083, 636.636, 36.7433, 0.4686 ) }
    dend_26 { pt3dadd( 541.488, 637.644, 36.7116, 0.5256 ) }
    dend_26 { pt3dadd( 541.872, 638.702, 36.6094, 0.5822 ) }
    dend_26 { pt3dadd( 541.994, 639.83, 36.5165, 0.4664 ) }
    dend_26 { pt3dadd( 541.922, 640.969, 36.4039, 0.4096 ) }
    dend_26 { pt3dadd( 541.837, 642.108, 36.2687, 0.452 ) }
    dend_26 { pt3dadd( 541.502, 643.192, 36.1273, 0.4996 ) }
    dend_26 { pt3dadd( 540.939, 644.183, 35.9764, 0.5094 ) }
    dend_26 { pt3dadd( 540.454, 645.178, 35.7431, 0.4512 ) }
    dend_26 { pt3dadd( 539.855, 646.133, 35.492, 0.4854 ) }
    dend_26 { pt3dadd( 539.243, 647.051, 35.1996, 0.5456 ) }
    dend_26 { pt3dadd( 538.776, 648.074, 34.9359, 0.444 ) }
    dend_26 { pt3dadd( 538.578, 649.09, 34.9364, 0.3746 ) }
    dend_26 { pt3dadd( 538.199, 650.163, 34.9992, 0.3554 ) }
    dend_26 { pt3dadd( 537.776, 651.225, 35.0812, 0.4756 ) }
    dend_26 { pt3dadd( 537.297, 652.264, 35.1627, 0.3992 ) }
    dend_26 { pt3dadd( 536.924, 653.345, 35.236, 0.3366 ) }
    dend_26 { pt3dadd( 536.88, 654.487, 35.2867, 0.2952 ) }
    dend_26 { pt3dadd( 536.881, 655.629, 35.2946, 0.3138 ) }
    dend_26 { pt3dadd( 536.893, 656.742, 35.2302, 0.3432 ) }
    dend_26 { pt3dadd( 536.968, 657.872, 35.2747, 0.4222 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 88/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 559.487, 642.242, 40.4712, 0.3614 ) }
    dend_24 { pt3dadd( 559.899, 642.556, 40.3446, 0.4576 ) }
    dend_24 { pt3dadd( 560.81, 643.191, 40.9872, 0.5198 ) }
    dend_24 { pt3dadd( 561.723, 643.828, 41.288, 0.4988 ) }
    dend_24 { pt3dadd( 562.657, 644.49, 41.5551, 0.4364 ) }
    dend_24 { pt3dadd( 563.591, 645.151, 41.7956, 0.4346 ) }
    dend_24 { pt3dadd( 564.628, 645.59, 42.0182, 0.5644 ) }
    dend_24 { pt3dadd( 565.731, 645.89, 42.2341, 0.6164 ) }
    dend_24 { pt3dadd( 566.821, 645.925, 42.5653, 0.4858 ) }
    dend_24 { pt3dadd( 567.88, 646.061, 42.9752, 0.4286 ) }
    dend_24 { pt3dadd( 568.747, 646.81, 43.3443, 0.3418 ) }
    dend_24 { pt3dadd( 569.702, 647.237, 43.7704, 0.3144 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_24 { pt3dadd( 570.623, 647.594, 44.2627, 0.3024 ) }
    dend_24 { pt3dadd( 571.158, 648.606, 44.6494, 0.321 ) }
    dend_24 { pt3dadd( 571.856, 649.489, 44.9865, 0.386 ) }
    dend_24 { pt3dadd( 572.615, 650.325, 45.3062, 0.3582 ) }
    dend_24 { pt3dadd( 573.193, 651.262, 45.5913, 0.3396 ) }
    dend_24 { pt3dadd( 573.455, 652.376, 45.7974, 0.3738 ) }
    dend_24 { pt3dadd( 573.893, 653.432, 45.9514, 0.3344 ) }
    dend_24 { pt3dadd( 574.335, 654.488, 46.083, 0.301 ) }
    dend_24 { pt3dadd( 575.21, 655.212, 46.2386, 0.2766 ) }
    dend_24 { pt3dadd( 576.091, 655.932, 46.4162, 0.2782 ) }
    dend_24 { pt3dadd( 576.971, 656.653, 46.6169, 0.2814 ) }
    dend_24 { pt3dadd( 577.891, 657.324, 46.8196, 0.287 ) }
    dend_24 { pt3dadd( 578.855, 657.938, 47.0002, 0.2988 ) }
    dend_24 { pt3dadd( 579.82, 658.553, 47.1657, 0.3142 ) }
    dend_24 { pt3dadd( 580.785, 659.167, 47.3217, 0.3734 ) }
    dend_24 { pt3dadd( 581.837, 659.566, 47.5448, 0.3338 ) }
    dend_24 { pt3dadd( 582.897, 659.95, 47.8262, 0.3 ) }
    dend_24 { pt3dadd( 583.955, 660.333, 48.1508, 0.2746 ) }
    dend_24 { pt3dadd( 585.014, 660.716, 48.5024, 0.2746 ) }
    dend_24 { pt3dadd( 586.112, 661.007, 48.8138, 0.2746 ) }
    dend_24 { pt3dadd( 587.158, 661.404, 49.063, 0.2748 ) }
    dend_24 { pt3dadd( 588.103, 662.037, 49.2744, 0.2748 ) }
    dend_24 { pt3dadd( 589.111, 662.567, 49.4866, 0.2752 ) }
    dend_24 { pt3dadd( 590.117, 663.097, 49.7042, 0.2756 ) }
    dend_24 { pt3dadd( 591.125, 663.626, 49.931, 0.2766 ) }
    dend_24 { pt3dadd( 592.132, 664.156, 50.169, 0.2784 ) }
    dend_24 { pt3dadd( 593.14, 664.686, 50.412, 0.2816 ) }
    dend_24 { pt3dadd( 594.16, 665.195, 50.6388, 0.2874 ) }
    dend_24 { pt3dadd( 595.184, 665.701, 50.8435, 0.2994 ) }
    dend_24 { pt3dadd( 596.208, 666.205, 51.0289, 0.3152 ) }
    dend_24 { pt3dadd( 597.232, 666.709, 51.1972, 0.3756 ) }
    dend_24 { pt3dadd( 598.257, 667.214, 51.35, 0.3378 ) }
    dend_24 { pt3dadd( 599.279, 667.721, 51.49, 0.3074 ) }
    dend_24 { pt3dadd( 600.202, 668.397, 51.5939, 0.288 ) }
    dend_24 { pt3dadd( 601.125, 669.072, 51.672, 0.3008 ) }
    dend_24 { pt3dadd( 602.049, 669.747, 51.7339, 0.3178 ) }
    dend_24 { pt3dadd( 603.024, 670.327, 51.7908, 0.3802 ) }
    dend_24 { pt3dadd( 604.096, 670.726, 51.8543, 0.3464 ) }
    dend_24 { pt3dadd( 605.168, 671.125, 51.9361, 0.3242 ) }
    dend_24 { pt3dadd( 606.241, 671.212, 52.0425, 0.3142 ) }
    dend_24 { pt3dadd( 607.32, 670.88, 52.185, 0.3734 ) }
    dend_24 { pt3dadd( 608.424, 670.997, 52.4426, 0.334 ) }
    dend_24 { pt3dadd( 609.528, 671.114, 52.78, 0.3 ) }
    dend_24 { pt3dadd( 610.632, 671.231, 53.1656, 0.2748 ) }
    dend_24 { pt3dadd( 611.776, 671.251, 53.4761, 0.2748 ) }
    dend_24 { pt3dadd( 612.92, 671.269, 53.7191, 0.2752 ) }
    dend_24 { pt3dadd( 614.064, 671.289, 53.9039, 0.2756 ) }
    dend_24 { pt3dadd( 615.179, 671.401, 54.0484, 0.2766 ) }
    dend_24 { pt3dadd( 616.149, 671.997, 54.2077, 0.2782 ) }
    dend_24 { pt3dadd( 617.119, 672.594, 54.392, 0.2814 ) }
    dend_24 { pt3dadd( 618.089, 673.191, 54.6084, 0.287 ) }
    dend_24 { pt3dadd( 619.06, 673.789, 54.8478, 0.2988 ) }
    dend_24 { pt3dadd( 620.03, 674.385, 55.1001, 0.3142 ) }
    dend_24 { pt3dadd( 621.011, 674.959, 55.3571, 0.3734 ) }
    dend_24 { pt3dadd( 622.072, 675.371, 55.6139, 0.334 ) }
    dend_24 { pt3dadd( 623.133, 675.782, 55.8673, 0.3002 ) }
    dend_24 { pt3dadd( 624.194, 676.194, 56.114, 0.275 ) }
    dend_24 { pt3dadd( 625.255, 676.607, 56.3511, 0.2752 ) }
    dend_24 { pt3dadd( 626.316, 677.019, 56.5765, 0.2758 ) }
    dend_24 { pt3dadd( 627.403, 677.358, 56.768, 0.2768 ) }
    dend_24 { pt3dadd( 628.514, 677.631, 56.9134, 0.2788 ) }
    dend_24 { pt3dadd( 629.65, 677.74, 57.0293, 0.2824 ) }
    dend_24 { pt3dadd( 630.792, 677.809, 57.1332, 0.289 ) }
    dend_24 { pt3dadd( 631.934, 677.877, 57.2421, 0.3024 ) }
    dend_24 { pt3dadd( 633.076, 677.946, 57.3706, 0.321 ) }
    dend_24 { pt3dadd( 634.218, 678.015, 57.5288, 0.386 ) }
    dend_24 { pt3dadd( 635.313, 678.179, 57.8116, 0.3584 ) }
    dend_24 { pt3dadd( 636.4, 678.361, 58.205, 0.3402 ) }
    dend_24 { pt3dadd( 637.481, 678.559, 58.6723, 0.3744 ) }
    dend_24 { pt3dadd( 638.37, 679.268, 59.1181, 0.3358 ) }
    dend_24 { pt3dadd( 639.26, 679.979, 59.537, 0.3036 ) }
    dend_24 { pt3dadd( 640.149, 680.689, 59.9256, 0.2814 ) }
    dend_24 { pt3dadd( 641.038, 681.4, 60.2832, 0.287 ) }
    dend_24 { pt3dadd( 641.927, 682.11, 60.6262, 0.2988 ) }
    dend_24 { pt3dadd( 642.817, 682.819, 60.9717, 0.3142 ) }
    dend_24 { pt3dadd( 643.706, 683.53, 61.3348, 0.3734 ) }
    dend_24 { pt3dadd( 644.502, 684.319, 61.7478, 0.334 ) }
    dend_24 { pt3dadd( 645.257, 685.143, 62.2138, 0.3 ) }
    dend_24 { pt3dadd( 646.012, 685.968, 62.718, 0.2746 ) }
    dend_24 { pt3dadd( 646.768, 686.791, 63.2467, 0.2748 ) }
    dend_24 { pt3dadd( 647.523, 687.615, 63.7865, 0.275 ) }
    dend_24 { pt3dadd( 648.331, 688.388, 64.318, 0.2754 ) }
    dend_24 { pt3dadd( 649.225, 689.078, 64.8203, 0.2762 ) }
    dend_24 { pt3dadd( 650.118, 689.769, 65.2957, 0.2776 ) }
    dend_24 { pt3dadd( 651.01, 690.459, 65.7488, 0.2802 ) }
    dend_24 { pt3dadd( 651.904, 691.15, 66.1814, 0.285 ) }
    dend_24 { pt3dadd( 652.797, 691.84, 66.5935, 0.2938 ) }
    dend_24 { pt3dadd( 653.69, 692.531, 66.9841, 0.3112 ) }
    dend_24 { pt3dadd( 654.583, 693.221, 67.3504, 0.3382 ) }
    dend_24 { pt3dadd( 655.067, 693.938, 67.7172, 0.413 ) }
    dend_24 { pt3dadd( 655.172, 694.391, 67.9762, 0.4328 ) }
    dend_24 { pt3dadd( 655.986, 695.109, 68.1472, 0.3594 ) }
    dend_24 { pt3dadd( 657.024, 695.56, 68.2494, 0.3 ) }
    dend_24 { pt3dadd( 658.068, 695.915, 68.3015, 0.2746 ) }
    dend_24 { pt3dadd( 658.935, 696.596, 68.32, 0.2746 ) }
    dend_24 { pt3dadd( 659.794, 697.33, 68.32, 0.2746 ) }
    dend_24 { pt3dadd( 660.749, 697.959, 68.32, 0.2746 ) }
    dend_24 { pt3dadd( 661.691, 698.571, 68.32, 0.2746 ) }
    dend_24 { pt3dadd( 662.736, 699.034, 68.3203, 0.2746 ) }
    dend_24 { pt3dadd( 663.835, 699.342, 68.3203, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( 664.675, 700.057, 68.3203, 0.2746 ) }
    dend_24 { pt3dadd( 665.593, 700.586, 68.3206, 0.2746 ) }
    dend_24 { pt3dadd( 666.709, 700.761, 68.3206, 0.2746 ) }
    dend_24 { pt3dadd( 667.801, 701.106, 68.3208, 0.2746 ) }
    dend_24 { pt3dadd( 668.73, 701.624, 68.3214, 0.2746 ) }
    dend_24 { pt3dadd( 669.516, 702.365, 68.322, 0.2746 ) }
    dend_24 { pt3dadd( 670.604, 702.705, 68.3225, 0.2746 ) }
    dend_24 { pt3dadd( 671.653, 703.146, 68.3236, 0.2746 ) }
    dend_24 { pt3dadd( 672.045, 704.148, 68.3253, 0.2746 ) }
    dend_24 { pt3dadd( 672.449, 705.178, 68.3273, 0.2746 ) }
    dend_24 { pt3dadd( 673.349, 705.734, 68.3301, 0.2746 ) }
    dend_24 { pt3dadd( 674.295, 706.359, 68.334, 0.2746 ) }
    dend_24 { pt3dadd( 674.96, 707.214, 68.3399, 0.2746 ) }
    dend_24 { pt3dadd( 675.888, 707.565, 68.348, 0.2746 ) }
    dend_24 { pt3dadd( 676.373, 708.48, 68.3595, 0.2746 ) }
    dend_24 { pt3dadd( 677.341, 708.929, 68.374, 0.2746 ) }
    dend_24 { pt3dadd( 678.485, 708.937, 68.3914, 0.2746 ) }
    dend_24 { pt3dadd( 679.571, 709.261, 68.4286, 0.2746 ) }
    dend_24 { pt3dadd( 680.611, 709.708, 68.4844, 0.2746 ) }
    dend_24 { pt3dadd( 681.54, 710.337, 68.5283, 0.2746 ) }
    dend_24 { pt3dadd( 682.101, 711.249, 68.5611, 0.2746 ) }
    dend_24 { pt3dadd( 683.223, 711.351, 68.5835, 0.2746 ) }
    dend_24 { pt3dadd( 684.24, 711.836, 68.5966, 0.2746 ) }
    dend_24 { pt3dadd( 685.284, 712.294, 68.6014, 0.2746 ) }
    dend_24 { pt3dadd( 686.4, 712.483, 68.6017, 0.2746 ) }
    dend_24 { pt3dadd( 687.355, 712.956, 68.6025, 0.2746 ) }
    dend_24 { pt3dadd( 688.461, 713.195, 68.6034, 0.2746 ) }
    dend_24 { pt3dadd( 689.576, 713.403, 68.6048, 0.2746 ) }
    dend_24 { pt3dadd( 690.677, 713.644, 68.6067, 0.2746 ) }
    dend_24 { pt3dadd( 691.778, 713.937, 68.6095, 0.2746 ) }
    dend_24 { pt3dadd( 692.916, 714.013, 68.6132, 0.2746 ) }
    dend_24 { pt3dadd( 694.013, 714.324, 68.6185, 0.2746 ) }
    dend_24 { pt3dadd( 695.148, 714.428, 68.6258, 0.2746 ) }
    dend_24 { pt3dadd( 696.233, 714.729, 68.6361, 0.2746 ) }
    dend_24 { pt3dadd( 697.331, 715.038, 68.6504, 0.2746 ) }
    dend_24 { pt3dadd( 698.445, 715.225, 68.6706, 0.2746 ) }
    dend_24 { pt3dadd( 699.58, 715.348, 68.6988, 0.2746 ) }
    dend_24 { pt3dadd( 700.644, 715.654, 68.738, 0.2746 ) }
    dend_24 { pt3dadd( 701.272, 716.28, 68.7932, 0.2746 ) }
    dend_24 { pt3dadd( 702.156, 716.716, 68.8702, 0.2746 ) }
    dend_24 { pt3dadd( 703.187, 716.991, 68.9769, 0.2746 ) }
    dend_24 { pt3dadd( 704.325, 717.064, 69.1261, 0.2746 ) }
    dend_24 { pt3dadd( 705.461, 717.168, 69.3395, 0.2746 ) }
    dend_24 { pt3dadd( 706.528, 717.536, 69.6399, 0.2746 ) }
    dend_24 { pt3dadd( 707.518, 717.974, 70.0448, 0.2746 ) }
    dend_24 { pt3dadd( 708.477, 718.398, 70.5659, 0.2746 ) }
    dend_24 { pt3dadd( 709.016, 718.685, 71.4168, 0.2746 ) }
    dend_24 { pt3dadd( 709.164, 718.729, 72.7152, 0.2746 ) }
    dend_24 { pt3dadd( 709.545, 718.82, 74.2714, 0.2746 ) }
    dend_24 { pt3dadd( 710.537, 719.031, 75.8304, 0.2746 ) }
    dend_24 { pt3dadd( 711.528, 719.243, 77.3503, 0.2746 ) }
    dend_24 { pt3dadd( 712.52, 719.455, 78.7937, 0.2746 ) }
    dend_24 { pt3dadd( 713.512, 719.666, 80.1293, 0.2746 ) }
    dend_24 { pt3dadd( 714.502, 719.878, 81.366, 0.2746 ) }
    dend_24 { pt3dadd( 715.494, 720.09, 82.544, 0.2746 ) }
    dend_24 { pt3dadd( 716.289, 720.746, 83.6475, 0.2746 ) }
    dend_24 { pt3dadd( 717.028, 721.532, 84.6737, 0.2746 ) }
    dend_24 { pt3dadd( 717.767, 722.317, 85.6344, 0.2746 ) }
    dend_24 { pt3dadd( 718.506, 723.103, 86.5368, 0.2746 ) }
    dend_24 { pt3dadd( 719.247, 723.888, 87.3846, 0.2746 ) }
    dend_24 { pt3dadd( 719.986, 724.674, 88.1798, 0.2746 ) }
    dend_24 { pt3dadd( 720.725, 725.458, 88.9238, 0.2746 ) }
    dend_24 { pt3dadd( 721.464, 726.244, 89.6112, 0.2746 ) }
    dend_24 { pt3dadd( 722.459, 726.775, 90.1202, 0.2748 ) }
    dend_24 { pt3dadd( 723.491, 727.269, 90.4719, 0.2748 ) }
    dend_24 { pt3dadd( 724.521, 727.764, 90.7096, 0.2752 ) }
    dend_24 { pt3dadd( 725.553, 728.259, 90.8765, 0.2756 ) }
    dend_24 { pt3dadd( 726.585, 728.753, 91.0126, 0.2766 ) }
    dend_24 { pt3dadd( 727.617, 729.247, 91.1546, 0.2782 ) }
    dend_24 { pt3dadd( 728.653, 729.722, 91.343, 0.2814 ) }
    dend_24 { pt3dadd( 729.726, 730.038, 91.658, 0.287 ) }
    dend_24 { pt3dadd( 730.799, 730.352, 92.0744, 0.2988 ) }
    dend_24 { pt3dadd( 731.872, 730.667, 92.568, 0.3142 ) }
    dend_24 { pt3dadd( 732.944, 730.983, 93.1165, 0.3734 ) }
    dend_24 { pt3dadd( 734.017, 731.297, 93.6998, 0.3338 ) }
    dend_24 { pt3dadd( 735.09, 731.612, 94.2995, 0.3 ) }
    dend_24 { pt3dadd( 736.163, 731.928, 94.9018, 0.2746 ) }
    dend_24 { pt3dadd( 737.235, 732.242, 95.5083, 0.2746 ) }
    dend_24 { pt3dadd( 738.308, 732.557, 96.1201, 0.2746 ) }
    dend_24 { pt3dadd( 739.381, 732.873, 96.7389, 0.2746 ) }
    dend_24 { pt3dadd( 740.454, 733.187, 97.3658, 0.2746 ) }
    dend_24 { pt3dadd( 741.353, 733.771, 98.012, 0.2744 ) }
    dend_24 { pt3dadd( 742.113, 734.573, 98.684, 0.2744 ) }
    dend_24 { pt3dadd( 742.871, 735.376, 99.3751, 0.2742 ) }
    dend_24 { pt3dadd( 743.631, 736.178, 100.079, 0.274 ) }
    dend_24 { pt3dadd( 744.391, 736.98, 100.789, 0.2736 ) }
    dend_24 { pt3dadd( 745.15, 737.782, 101.497, 0.2728 ) }
    dend_24 { pt3dadd( 745.909, 738.584, 102.212, 0.2712 ) }
    dend_24 { pt3dadd( 746.668, 739.385, 102.914, 0.2684 ) }
    dend_24 { pt3dadd( 747.428, 740.187, 103.587, 0.2626 ) }
    dend_24 { pt3dadd( 748.187, 740.989, 104.22, 0.2542 ) }
    dend_24 { pt3dadd( 748.946, 741.791, 104.803, 0.2288 ) }
    dend_24 { pt3dadd( 749.706, 742.593, 105.939, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 93/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 559.487, 642.242, 40.4712, 0.3614 ) }
    dend_21 { pt3dadd( 559.414, 643.363, 40.4611, 0.304 ) }
    dend_21 { pt3dadd( 559.292, 644.393, 40.6356, 0.2818 ) }
    dend_21 { pt3dadd( 559.225, 645.491, 40.6605, 0.2882 ) }
    dend_21 { pt3dadd( 558.891, 646.49, 40.5334, 0.2994 ) }
    dend_21 { pt3dadd( 558.838, 647.613, 40.5124, 0.323 ) }
    dend_21 { pt3dadd( 558.808, 648.712, 40.588, 0.3538 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( 558.56, 649.781, 40.6154, 0.4726 ) }
    dend_21 { pt3dadd( 558.18, 650.841, 40.5381, 0.3936 ) }
    dend_21 { pt3dadd( 557.817, 651.864, 40.3967, 0.3262 ) }
    dend_21 { pt3dadd( 557.293, 652.873, 40.2041, 0.276 ) }
    dend_21 { pt3dadd( 556.77, 653.881, 39.9498, 0.2772 ) }
    dend_21 { pt3dadd( 556.289, 654.907, 39.6715, 0.2794 ) }
    dend_21 { pt3dadd( 555.991, 656.012, 39.4366, 0.2838 ) }
    dend_21 { pt3dadd( 555.685, 657.112, 39.2384, 0.2914 ) }
    dend_21 { pt3dadd( 555.148, 658.107, 39.0001, 0.3068 ) }
    dend_21 { pt3dadd( 554.609, 659.102, 38.7257, 0.3288 ) }
    dend_21 { pt3dadd( 554.371, 660.18, 38.4555, 0.4018 ) }
    dend_21 { pt3dadd( 555.147, 660.98, 38.2094, 0.3814 ) }
    dend_21 { pt3dadd( 556.089, 661.567, 37.9123, 0.4134 ) }
    dend_21 { pt3dadd( 557.038, 662.096, 37.5511, 0.3622 ) }
    dend_21 { pt3dadd( 556.861, 663.141, 37.2403, 0.3472 ) }
    dend_21 { pt3dadd( 556.69, 664.212, 36.9102, 0.3872 ) }
    dend_21 { pt3dadd( 556.804, 665.313, 36.5159, 0.3606 ) }
    dend_21 { pt3dadd( 557.01, 666.398, 36.1012, 0.3442 ) }
    dend_21 { pt3dadd( 557.432, 667.452, 35.7283, 0.3822 ) }
    dend_21 { pt3dadd( 557.854, 668.504, 35.4018, 0.35 ) }
    dend_21 { pt3dadd( 558.277, 669.557, 35.1201, 0.3308 ) }
    dend_21 { pt3dadd( 558.699, 670.609, 34.897, 0.3266 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 22/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 531.37, 622.577, 40.467, 0.2812 ) }
    dend_17 { pt3dadd( 531.705, 623.177, 40.1814, 0.287 ) }
    dend_17 { pt3dadd( 532.236, 624.187, 39.94, 0.2976 ) }
    dend_17 { pt3dadd( 532.765, 625.198, 39.7474, 0.3168 ) }
    dend_17 { pt3dadd( 533.543, 626.022, 39.625, 0.3548 ) }
    dend_17 { pt3dadd( 534.382, 626.8, 39.559, 0.4136 ) }
    dend_17 { pt3dadd( 535.264, 627.528, 39.515, 0.5802 ) }
    dend_17 { pt3dadd( 536.168, 628.229, 39.4778, 0.6094 ) }
    dend_17 { pt3dadd( 537.071, 628.93, 39.4467, 0.6476 ) }
    dend_17 { pt3dadd( 537.975, 629.631, 39.4148, 0.5672 ) }
    dend_17 { pt3dadd( 538.702, 630.485, 39.366, 0.4664 ) }
    dend_17 { pt3dadd( 539.262, 631.48, 39.2938, 0.5026 ) }
    dend_17 { pt3dadd( 539.824, 632.475, 39.2036, 0.4024 ) }
    dend_17 { pt3dadd( 540.384, 633.472, 39.1023, 0.3424 ) }
    dend_17 { pt3dadd( 540.945, 634.467, 38.9962, 0.307 ) }
    dend_17 { pt3dadd( 541.505, 635.463, 38.8914, 0.3296 ) }
    dend_17 { pt3dadd( 542.067, 636.459, 38.7943, 0.4016 ) }
    dend_17 { pt3dadd( 542.628, 637.454, 38.7086, 0.3884 ) }
    dend_17 { pt3dadd( 543.123, 638.481, 38.6467, 0.3904 ) }
    dend_17 { pt3dadd( 543.553, 639.542, 38.6173, 0.4932 ) }
    dend_17 { pt3dadd( 543.982, 640.602, 38.617, 0.4328 ) }
    dend_17 { pt3dadd( 544.411, 641.663, 38.6428, 0.3948 ) }
    dend_17 { pt3dadd( 544.693, 642.602, 38.6963, 0.4234 ) }
    dend_17 { pt3dadd( 545.066, 643.681, 38.7946, 0.452 ) }
    dend_17 { pt3dadd( 545.438, 644.76, 38.9248, 0.396 ) }
    dend_17 { pt3dadd( 545.809, 645.838, 39.0762, 0.3636 ) }
    dend_17 { pt3dadd( 546.181, 646.917, 39.2409, 0.413 ) }
    dend_17 { pt3dadd( 546.553, 647.996, 39.4117, 0.4328 ) }
    dend_17 { pt3dadd( 546.902, 649.084, 39.5746, 0.3594 ) }
    dend_17 { pt3dadd( 547.243, 650.175, 39.7253, 0.3 ) }
    dend_17 { pt3dadd( 547.584, 651.266, 39.8661, 0.2746 ) }
    dend_17 { pt3dadd( 547.924, 652.357, 39.9997, 0.2746 ) }
    dend_17 { pt3dadd( 548.265, 653.447, 40.1288, 0.2748 ) }
    dend_17 { pt3dadd( 548.606, 654.539, 40.255, 0.275 ) }
    dend_17 { pt3dadd( 548.946, 655.629, 40.3808, 0.2752 ) }
    dend_17 { pt3dadd( 549.287, 656.72, 40.5062, 0.2758 ) }
    dend_17 { pt3dadd( 549.628, 657.81, 40.6305, 0.2768 ) }
    dend_17 { pt3dadd( 549.969, 658.902, 40.754, 0.2788 ) }
    dend_17 { pt3dadd( 550.31, 659.992, 40.8764, 0.2824 ) }
    dend_17 { pt3dadd( 550.651, 661.083, 40.999, 0.2888 ) }
    dend_17 { pt3dadd( 550.949, 662.184, 41.1191, 0.302 ) }
    dend_17 { pt3dadd( 551.133, 663.314, 41.2272, 0.3202 ) }
    dend_17 { pt3dadd( 551.317, 664.443, 41.3314, 0.3848 ) }
    dend_17 { pt3dadd( 551.559, 665.554, 41.4509, 0.3548 ) }
    dend_17 { pt3dadd( 551.957, 666.618, 41.6214, 0.3394 ) }
    dend_17 { pt3dadd( 552.355, 667.682, 41.8303, 0.3436 ) }
    dend_17 { pt3dadd( 552.75, 668.747, 42.0644, 0.423 ) }
    dend_17 { pt3dadd( 553.114, 669.826, 42.3032, 0.451 ) }
    dend_17 { pt3dadd( 553.477, 670.903, 42.5342, 0.3942 ) }
    dend_17 { pt3dadd( 553.841, 671.982, 42.7456, 0.3592 ) }
    dend_17 { pt3dadd( 554.069, 673.085, 42.9139, 0.411 ) }
    dend_17 { pt3dadd( 554.07, 674.229, 43.0172, 0.3992 ) }
    dend_17 { pt3dadd( 554.07, 675.373, 43.0671, 0.4414 ) }
    dend_17 { pt3dadd( 554.202, 676.508, 43.0746, 0.4384 ) }
    dend_17 { pt3dadd( 554.364, 677.64, 43.0489, 0.3698 ) }
    dend_17 { pt3dadd( 554.785, 678.672, 42.9822, 0.3194 ) }
    dend_17 { pt3dadd( 555.415, 679.623, 42.8761, 0.3112 ) }
    dend_17 { pt3dadd( 556.047, 680.573, 42.7473, 0.3384 ) }
    dend_17 { pt3dadd( 556.677, 681.523, 42.6079, 0.4132 ) }
    dend_17 { pt3dadd( 557.308, 682.474, 42.4682, 0.4332 ) }
    dend_17 { pt3dadd( 557.856, 683.475, 42.362, 0.36 ) }
    dend_17 { pt3dadd( 558.375, 684.494, 42.2979, 0.3014 ) }
    dend_17 { pt3dadd( 558.896, 685.513, 42.2705, 0.2772 ) }
    dend_17 { pt3dadd( 559.416, 686.532, 42.2724, 0.2796 ) }
    dend_17 { pt3dadd( 559.926, 687.555, 42.3044, 0.2838 ) }
    dend_17 { pt3dadd( 560.43, 688.582, 42.3637, 0.2914 ) }
    dend_17 { pt3dadd( 560.933, 689.608, 42.4399, 0.307 ) }
    dend_17 { pt3dadd( 561.436, 690.635, 42.5267, 0.3294 ) }
    dend_17 { pt3dadd( 561.938, 691.661, 42.6208, 0.4028 ) }
    dend_17 { pt3dadd( 562.425, 692.697, 42.7165, 0.3832 ) }
    dend_17 { pt3dadd( 562.889, 693.742, 42.8075, 0.4166 ) }
    dend_17 { pt3dadd( 563.354, 694.788, 42.8985, 0.368 ) }
    dend_17 { pt3dadd( 563.818, 695.832, 42.9934, 0.3576 ) }
    dend_17 { pt3dadd( 564.283, 696.878, 43.0951, 0.408 ) }
    dend_17 { pt3dadd( 564.316, 697.603, 43.386, 0.3928 ) }
    dend_17 { pt3dadd( 564.604, 698.703, 43.6251, 0.4354 ) }
    dend_17 { pt3dadd( 565.138, 699.704, 43.82, 0.3976 ) }
    dend_17 { pt3dadd( 565.659, 700.706, 43.9774, 0.4384 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 566.079, 701.762, 44.105, 0.4328 ) }
    dend_17 { pt3dadd( 566.407, 702.852, 44.2078, 0.3594 ) }
    dend_17 { pt3dadd( 566.509, 703.981, 44.2904, 0.3 ) }
    dend_17 { pt3dadd( 566.661, 705.016, 44.4548, 0.2746 ) }
    dend_17 { pt3dadd( 567.053, 706.054, 44.6942, 0.2746 ) }
    dend_17 { pt3dadd( 567.498, 707.079, 44.9302, 0.2746 ) }
    dend_17 { pt3dadd( 567.795, 708.177, 45.1097, 0.2746 ) }
    dend_17 { pt3dadd( 567.904, 709.305, 45.2357, 0.2746 ) }
    dend_17 { pt3dadd( 568.093, 710.434, 45.3127, 0.2746 ) }
    dend_17 { pt3dadd( 568.279, 711.543, 45.346, 0.2746 ) }
    dend_17 { pt3dadd( 568.822, 712.536, 45.3519, 0.2746 ) }
    dend_17 { pt3dadd( 569.026, 713.66, 45.3488, 0.2746 ) }
    dend_17 { pt3dadd( 569.026, 714.804, 45.3443, 0.2746 ) }
    dend_17 { pt3dadd( 569.026, 715.948, 45.3384, 0.2746 ) }
    dend_17 { pt3dadd( 569.351, 717.012, 45.3295, 0.2746 ) }
    dend_17 { pt3dadd( 569.38, 718.155, 45.3163, 0.2746 ) }
    dend_17 { pt3dadd( 569.491, 719.29, 45.299, 0.2746 ) }
    dend_17 { pt3dadd( 569.753, 720.393, 45.2782, 0.2746 ) }
    dend_17 { pt3dadd( 569.941, 721.521, 45.2561, 0.2746 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 19/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 531.37, 622.577, 40.467, 0.2812 ) }
    dend_12 { pt3dadd( 530.672, 623.474, 40.157, 0.4576 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 21/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 557.929, 607.971, 39.0146, 0.4344 ) }
    dend_4 { pt3dadd( 558.66, 607.948, 39.1434, 0.3524 ) }
    dend_4 { pt3dadd( 559.781, 608.105, 39.1815, 0.3354 ) }
    dend_4 { pt3dadd( 560.808, 608.537, 39.0583, 0.3346 ) }
    dend_4 { pt3dadd( 561.879, 608.927, 38.9133, 0.4126 ) }
    dend_4 { pt3dadd( 562.934, 609.37, 38.7489, 0.401 ) }
    dend_4 { pt3dadd( 563.967, 609.858, 38.5736, 0.452 ) }
    dend_4 { pt3dadd( 565.048, 610.188, 38.2892, 0.422 ) }
    dend_4 { pt3dadd( 566.166, 610.212, 37.9148, 0.5144 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 30/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 557.929, 607.971, 39.0146, 0.4344 ) }
    dend_1 { pt3dadd( 558.772, 607.919, 37.9182, 0.2288 ) }
    dend_1 { pt3dadd( 559.848, 607.884, 36.7581, 0.4486 ) }
    dend_1 { pt3dadd( 560.847, 607.708, 36.1948, 0.4934 ) }
    dend_1 { pt3dadd( 561.927, 607.351, 35.6605, 0.4984 ) }
    dend_1 { pt3dadd( 563.009, 606.998, 35.1963, 0.4282 ) }
    dend_1 { pt3dadd( 564.117, 606.941, 34.6755, 0.4554 ) }
    dend_1 { pt3dadd( 565.157, 606.699, 34.0959, 0.428 ) }
    dend_1 { pt3dadd( 566.145, 606.255, 33.4995, 0.5266 ) }
    dend_1 { pt3dadd( 566.76, 605.445, 32.8947, 0.4416 ) }
    dend_1 { pt3dadd( 567.138, 604.388, 32.3417, 0.4404 ) }
    dend_1 { pt3dadd( 567.561, 603.325, 31.8853, 0.3648 ) }
    dend_1 { pt3dadd( 567.699, 602.235, 31.5168, 0.3522 ) }
    dend_1 { pt3dadd( 567.533, 601.128, 31.155, 0.3966 ) }
    dend_1 { pt3dadd( 567.266, 600.105, 30.7146, 0.3776 ) }
    dend_1 { pt3dadd( 566.829, 599.102, 30.2761, 0.377 ) }
    dend_1 { pt3dadd( 566.329, 598.074, 29.9079, 0.4378 ) }
    dend_1 { pt3dadd( 565.766, 597.086, 29.61, 0.4782 ) }
    dend_1 { pt3dadd( 565.0, 596.255, 29.4188, 0.4466 ) }
    dend_1 { pt3dadd( 564.697, 595.255, 29.1161, 0.447 ) }
    dend_1 { pt3dadd( 564.341, 594.234, 28.7378, 0.6186 ) }
    dend_1 { pt3dadd( 563.989, 593.189, 28.3209, 0.566 ) }
    dend_1 { pt3dadd( 563.649, 592.1, 27.9762, 0.4372 ) }
    dend_1 { pt3dadd( 563.397, 590.988, 27.7449, 0.351 ) }
    dend_1 { pt3dadd( 563.089, 589.889, 27.5926, 0.3646 ) }
    dend_1 { pt3dadd( 562.704, 588.827, 27.4403, 0.4628 ) }
    dend_1 { pt3dadd( 562.266, 587.772, 27.3288, 0.5208 ) }
    dend_1 { pt3dadd( 561.744, 586.754, 27.2286, 0.5438 ) }
    dend_1 { pt3dadd( 561.217, 585.754, 27.0976, 0.5384 ) }
    dend_1 { pt3dadd( 560.512, 584.878, 26.8937, 0.534 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 60/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 586.12, 635.804, 42.4284, 0.3142 ) }
    dend_41 { pt3dadd( 586.681, 636.122, 42.6919, 0.6864 ) }
    dend_41 { pt3dadd( 587.704, 636.634, 42.6681, 0.4568 ) }
    dend_41 { pt3dadd( 588.728, 637.145, 42.6586, 0.3502 ) }
    dend_41 { pt3dadd( 589.75, 637.656, 42.6451, 0.3152 ) }
    dend_41 { pt3dadd( 590.774, 638.168, 42.6266, 0.3754 ) }
    dend_41 { pt3dadd( 591.797, 638.68, 42.6009, 0.3376 ) }
    dend_41 { pt3dadd( 592.817, 639.199, 42.5642, 0.3068 ) }
    dend_41 { pt3dadd( 593.837, 639.717, 42.5124, 0.287 ) }
    dend_41 { pt3dadd( 594.894, 640.141, 42.4413, 0.2988 ) }
    dend_41 { pt3dadd( 595.989, 640.473, 42.3466, 0.3142 ) }
    dend_41 { pt3dadd( 597.093, 640.681, 42.2097, 0.3734 ) }
    dend_41 { pt3dadd( 598.217, 640.547, 41.993, 0.3338 ) }
    dend_41 { pt3dadd( 599.343, 640.415, 41.7124, 0.3 ) }
    dend_41 { pt3dadd( 600.467, 640.281, 41.3832, 0.2746 ) }
    dend_41 { pt3dadd( 601.593, 640.148, 41.0192, 0.2746 ) }
    dend_41 { pt3dadd( 602.719, 640.014, 40.6325, 0.2746 ) }
    dend_41 { pt3dadd( 603.843, 639.88, 40.2343, 0.2746 ) }
    dend_41 { pt3dadd( 604.969, 639.748, 39.8311, 0.2746 ) }
    dend_41 { pt3dadd( 606.095, 639.621, 39.422, 0.2746 ) }
    dend_41 { pt3dadd( 607.223, 639.647, 38.9956, 0.2746 ) }
    dend_41 { pt3dadd( 608.351, 639.674, 38.5552, 0.2746 ) }
    dend_41 { pt3dadd( 609.479, 639.701, 38.1035, 0.2746 ) }
    dend_41 { pt3dadd( 610.607, 639.727, 37.6424, 0.2746 ) }
    dend_41 { pt3dadd( 611.736, 639.755, 37.1734, 0.2746 ) }
    dend_41 { pt3dadd( 612.846, 639.664, 36.6982, 0.2746 ) }
    dend_41 { pt3dadd( 613.918, 639.308, 36.218, 0.2748 ) }
    dend_41 { pt3dadd( 614.99, 638.954, 35.7277, 0.275 ) }
    dend_41 { pt3dadd( 616.062, 638.599, 35.2232, 0.2754 ) }
    dend_41 { pt3dadd( 617.134, 638.243, 34.6987, 0.2762 ) }
    dend_41 { pt3dadd( 618.206, 637.889, 34.1496, 0.2776 ) }
    dend_41 { pt3dadd( 619.214, 637.444, 33.5476, 0.2802 ) }
    dend_41 { pt3dadd( 620.127, 636.867, 32.8664, 0.2852 ) }
    dend_41 { pt3dadd( 621.041, 636.42, 32.1292, 0.294 ) }
    dend_41 { pt3dadd( 621.971, 636.837, 31.3256, 0.3114 ) }
    dend_41 { pt3dadd( 622.901, 637.255, 30.4976, 0.3386 ) }
    dend_41 { pt3dadd( 623.75, 637.928, 29.7976, 0.4136 ) }
    dend_41 { pt3dadd( 624.552, 638.743, 29.2818, 0.4338 ) }
    dend_41 { pt3dadd( 625.576, 639.033, 28.9134, 0.3614 ) }
    dend_41 { pt3dadd( 626.72, 639.039, 28.6516, 0.3038 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_41 { pt3dadd( 627.825, 639.233, 28.3987, 0.2816 ) }
    dend_41 { pt3dadd( 628.919, 639.48, 28.1198, 0.2874 ) }
    dend_41 { pt3dadd( 630.013, 639.726, 27.8065, 0.2994 ) }
    dend_41 { pt3dadd( 631.107, 639.973, 27.4736, 0.3152 ) }
    dend_41 { pt3dadd( 632.228, 639.764, 27.2213, 0.3754 ) }
    dend_41 { pt3dadd( 633.35, 639.542, 27.0472, 0.3376 ) }
    dend_41 { pt3dadd( 634.473, 639.32, 26.9436, 0.3068 ) }
    dend_41 { pt3dadd( 635.587, 639.536, 26.8929, 0.287 ) }
    dend_41 { pt3dadd( 636.701, 639.798, 26.875, 0.2988 ) }
    dend_41 { pt3dadd( 637.814, 640.06, 26.8722, 0.3142 ) }
    dend_41 { pt3dadd( 638.929, 640.323, 26.8691, 0.3736 ) }
    dend_41 { pt3dadd( 639.975, 640.728, 26.8649, 0.3342 ) }
    dend_41 { pt3dadd( 640.895, 641.408, 26.8587, 0.3004 ) }
    dend_41 { pt3dadd( 641.816, 642.087, 26.8503, 0.2754 ) }
    dend_41 { pt3dadd( 642.736, 642.767, 26.8388, 0.2762 ) }
    dend_41 { pt3dadd( 643.656, 643.446, 26.8226, 0.2778 ) }
    dend_41 { pt3dadd( 644.506, 644.21, 26.7974, 0.2806 ) }
    dend_41 { pt3dadd( 645.326, 645.008, 26.7655, 0.2852 ) }
    dend_41 { pt3dadd( 646.149, 645.793, 26.7277, 0.2966 ) }
    dend_41 { pt3dadd( 647.274, 645.595, 26.6616, 0.305 ) }
    dend_41 { pt3dadd( 648.399, 645.397, 26.577, 0.3814 ) }
    dend_41 { pt3dadd( 649.523, 645.199, 26.353, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 22/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 586.12, 635.804, 42.4284, 0.3142 ) }
    dend_40 { pt3dadd( 586.808, 635.978, 42.5625, 0.3734 ) }
    dend_40 { pt3dadd( 587.906, 636.256, 42.7448, 0.334 ) }
    dend_40 { pt3dadd( 589.006, 636.534, 42.9598, 0.3 ) }
    dend_40 { pt3dadd( 590.105, 636.812, 43.1917, 0.2746 ) }
    dend_40 { pt3dadd( 591.218, 637.041, 43.3997, 0.2748 ) }
    dend_40 { pt3dadd( 592.349, 637.206, 43.5462, 0.2748 ) }
    dend_40 { pt3dadd( 593.452, 637.468, 43.6349, 0.2752 ) }
    dend_40 { pt3dadd( 594.487, 637.957, 43.6766, 0.2756 ) }
    dend_40 { pt3dadd( 595.519, 638.448, 43.6842, 0.2766 ) }
    dend_40 { pt3dadd( 596.552, 638.939, 43.668, 0.2782 ) }
    dend_40 { pt3dadd( 597.556, 639.49, 43.6363, 0.2814 ) }
    dend_40 { pt3dadd( 598.558, 640.041, 43.5921, 0.287 ) }
    dend_40 { pt3dadd( 599.561, 640.591, 43.5327, 0.2988 ) }
    dend_40 { pt3dadd( 600.565, 641.142, 43.4585, 0.3142 ) }
    dend_40 { pt3dadd( 601.412, 641.887, 43.3219, 0.3734 ) }
    dend_40 { pt3dadd( 602.231, 642.667, 43.1343, 0.3338 ) }
    dend_40 { pt3dadd( 603.052, 643.447, 42.9192, 0.3 ) }
    dend_40 { pt3dadd( 603.872, 644.228, 42.698, 0.2746 ) }
    dend_40 { pt3dadd( 604.785, 644.915, 42.548, 0.2746 ) }
    dend_40 { pt3dadd( 605.701, 645.6, 42.4679, 0.2746 ) }
    dend_40 { pt3dadd( 606.664, 646.208, 42.467, 0.2746 ) }
    dend_40 { pt3dadd( 607.684, 646.72, 42.5426, 0.2746 ) }
    dend_40 { pt3dadd( 608.703, 647.234, 42.6726, 0.2746 ) }
    dend_40 { pt3dadd( 609.722, 647.747, 42.8358, 0.2746 ) }
    dend_40 { pt3dadd( 610.743, 648.259, 43.0139, 0.2746 ) }
    dend_40 { pt3dadd( 611.762, 648.772, 43.1998, 0.2748 ) }
    dend_40 { pt3dadd( 612.781, 649.285, 43.3877, 0.2748 ) }
    dend_40 { pt3dadd( 613.802, 649.798, 43.5744, 0.275 ) }
    dend_40 { pt3dadd( 614.836, 650.273, 43.7592, 0.2756 ) }
    dend_40 { pt3dadd( 615.933, 650.588, 43.9401, 0.2764 ) }
    dend_40 { pt3dadd( 617.03, 650.905, 44.1176, 0.2778 ) }
    dend_40 { pt3dadd( 618.127, 651.221, 44.2915, 0.2806 ) }
    dend_40 { pt3dadd( 619.224, 651.538, 44.4623, 0.2858 ) }
    dend_40 { pt3dadd( 620.321, 651.854, 44.6286, 0.2956 ) }
    dend_40 { pt3dadd( 621.419, 652.17, 44.7902, 0.313 ) }
    dend_40 { pt3dadd( 622.515, 652.486, 44.9459, 0.349 ) }
    dend_40 { pt3dadd( 623.612, 652.803, 45.0948, 0.397 ) }
    dend_40 { pt3dadd( 624.713, 653.104, 45.2304, 0.5782 ) }
    dend_40 { pt3dadd( 625.826, 653.368, 45.3379, 0.4652 ) }
    dend_40 { pt3dadd( 626.94, 653.634, 45.4286, 0.3754 ) }
    dend_40 { pt3dadd( 628.053, 653.898, 45.5126, 0.3148 ) }
    dend_40 { pt3dadd( 629.166, 654.162, 45.5997, 0.3748 ) }
    dend_40 { pt3dadd( 630.191, 654.629, 45.722, 0.3364 ) }
    dend_40 { pt3dadd( 631.155, 655.233, 45.8945, 0.3048 ) }
    dend_40 { pt3dadd( 632.12, 655.837, 46.1096, 0.2834 ) }
    dend_40 { pt3dadd( 633.084, 656.441, 46.356, 0.2908 ) }
    dend_40 { pt3dadd( 634.049, 657.046, 46.6239, 0.306 ) }
    dend_40 { pt3dadd( 635.014, 657.65, 46.9045, 0.3274 ) }
    dend_40 { pt3dadd( 635.978, 658.254, 47.189, 0.399 ) }
    dend_40 { pt3dadd( 636.938, 658.865, 47.4732, 0.376 ) }
    dend_40 { pt3dadd( 637.787, 659.611, 47.7728, 0.4036 ) }
    dend_40 { pt3dadd( 638.637, 660.358, 48.074, 0.3428 ) }
    dend_40 { pt3dadd( 639.486, 661.105, 48.3641, 0.3162 ) }
    dend_40 { pt3dadd( 640.336, 661.851, 48.631, 0.3056 ) }
    dend_40 { pt3dadd( 641.199, 662.575, 48.8578, 0.3268 ) }
    dend_40 { pt3dadd( 642.267, 662.977, 48.951, 0.398 ) }
    dend_40 { pt3dadd( 643.333, 663.377, 48.9367, 0.3742 ) }
    dend_40 { pt3dadd( 644.4, 663.779, 48.8435, 0.4002 ) }
    dend_40 { pt3dadd( 645.468, 664.18, 48.6984, 0.3366 ) }
    dend_40 { pt3dadd( 646.535, 664.582, 48.5296, 0.3048 ) }
    dend_40 { pt3dadd( 647.601, 664.983, 48.3633, 0.2836 ) }
    dend_40 { pt3dadd( 648.669, 665.385, 48.2227, 0.2912 ) }
    dend_40 { pt3dadd( 649.736, 665.786, 48.1138, 0.3064 ) }
    dend_40 { pt3dadd( 650.803, 666.187, 48.0416, 0.3282 ) }
    dend_40 { pt3dadd( 651.84, 666.651, 48.0889, 0.3996 ) }
    dend_40 { pt3dadd( 652.875, 667.117, 48.2322, 0.383 ) }
    dend_40 { pt3dadd( 653.911, 667.581, 48.4473, 0.3878 ) }
    dend_40 { pt3dadd( 654.948, 668.047, 48.7099, 0.4526 ) }
    dend_40 { pt3dadd( 655.962, 668.551, 48.9978, 0.5316 ) }
    dend_40 { pt3dadd( 656.919, 669.16, 49.2906, 0.4186 ) }
    dend_40 { pt3dadd( 657.875, 669.768, 49.5653, 0.3254 ) }
    dend_40 { pt3dadd( 658.832, 670.378, 49.8131, 0.2746 ) }
    dend_40 { pt3dadd( 659.791, 670.98, 50.0237, 0.2746 ) }
    dend_40 { pt3dadd( 660.931, 671.078, 50.1357, 0.2748 ) }
    dend_40 { pt3dadd( 662.071, 671.178, 50.1589, 0.2748 ) }
    dend_40 { pt3dadd( 663.21, 671.276, 50.1035, 0.2752 ) }
    dend_40 { pt3dadd( 664.343, 671.34, 49.9492, 0.2756 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_40 { pt3dadd( 665.463, 671.351, 49.6717, 0.2766 ) }
    dend_40 { pt3dadd( 666.583, 671.361, 49.3114, 0.2782 ) }
    dend_40 { pt3dadd( 667.703, 671.371, 48.9026, 0.2814 ) }
    dend_40 { pt3dadd( 668.822, 671.382, 48.4686, 0.287 ) }
    dend_40 { pt3dadd( 669.829, 670.92, 48.0914, 0.2988 ) }
    dend_40 { pt3dadd( 670.804, 670.321, 47.7862, 0.3142 ) }
    dend_40 { pt3dadd( 671.686, 669.733, 47.5026, 0.3734 ) }
    dend_40 { pt3dadd( 672.632, 670.028, 47.1794, 0.3338 ) }
    dend_40 { pt3dadd( 673.697, 670.421, 46.8597, 0.3 ) }
    dend_40 { pt3dadd( 674.763, 670.813, 46.5382, 0.2746 ) }
    dend_40 { pt3dadd( 675.828, 671.206, 46.2115, 0.2746 ) }
    dend_40 { pt3dadd( 676.894, 671.599, 45.8878, 0.2746 ) }
    dend_40 { pt3dadd( 677.96, 671.991, 45.579, 0.2746 ) }
    dend_40 { pt3dadd( 679.026, 672.385, 45.2908, 0.2746 ) }
    dend_40 { pt3dadd( 680.092, 672.777, 45.0198, 0.2746 ) }
    dend_40 { pt3dadd( 681.157, 673.17, 44.7695, 0.2746 ) }
    dend_40 { pt3dadd( 682.258, 673.405, 44.564, 0.2746 ) }
    dend_40 { pt3dadd( 683.4, 673.446, 44.4245, 0.2746 ) }
    dend_40 { pt3dadd( 684.544, 673.487, 44.3363, 0.2746 ) }
    dend_40 { pt3dadd( 685.686, 673.537, 44.2859, 0.2746 ) }
    dend_40 { pt3dadd( 686.791, 673.831, 44.2607, 0.2746 ) }
    dend_40 { pt3dadd( 687.898, 674.125, 44.2484, 0.2746 ) }
    dend_40 { pt3dadd( 689.003, 674.419, 44.2386, 0.2746 ) }
    dend_40 { pt3dadd( 690.109, 674.713, 44.2252, 0.2746 ) }
    dend_40 { pt3dadd( 691.214, 675.007, 44.2061, 0.2746 ) }
    dend_40 { pt3dadd( 692.32, 675.301, 44.1795, 0.2746 ) }
    dend_40 { pt3dadd( 693.425, 675.595, 44.1414, 0.2746 ) }
    dend_40 { pt3dadd( 694.53, 675.889, 44.0891, 0.2748 ) }
    dend_40 { pt3dadd( 695.637, 676.183, 44.0199, 0.275 ) }
    dend_40 { pt3dadd( 696.721, 676.526, 43.9214, 0.2754 ) }
    dend_40 { pt3dadd( 697.732, 677.039, 43.7581, 0.2762 ) }
    dend_40 { pt3dadd( 698.744, 677.552, 43.5495, 0.2776 ) }
    dend_40 { pt3dadd( 699.755, 678.065, 43.3138, 0.2802 ) }
    dend_40 { pt3dadd( 700.768, 678.577, 43.0674, 0.285 ) }
    dend_40 { pt3dadd( 701.623, 679.33, 42.8705, 0.2938 ) }
    dend_40 { pt3dadd( 702.462, 680.107, 42.7241, 0.3112 ) }
    dend_40 { pt3dadd( 703.3, 680.885, 42.6177, 0.3382 ) }
    dend_40 { pt3dadd( 704.14, 681.663, 42.5345, 0.413 ) }
    dend_40 { pt3dadd( 704.979, 682.441, 42.4595, 0.4328 ) }
    dend_40 { pt3dadd( 705.75, 683.28, 42.3559, 0.3594 ) }
    dend_40 { pt3dadd( 706.49, 684.148, 42.21, 0.3 ) }
    dend_40 { pt3dadd( 707.229, 685.015, 42.0302, 0.2746 ) }
    dend_40 { pt3dadd( 707.969, 685.882, 41.827, 0.2746 ) }
    dend_40 { pt3dadd( 708.709, 686.749, 41.6091, 0.2746 ) }
    dend_40 { pt3dadd( 709.448, 687.616, 41.3851, 0.2746 ) }
    dend_40 { pt3dadd( 710.188, 688.483, 41.1628, 0.2746 ) }
    dend_40 { pt3dadd( 710.927, 689.35, 40.9455, 0.2746 ) }
    dend_40 { pt3dadd( 711.667, 690.219, 40.7338, 0.2746 ) }
    dend_40 { pt3dadd( 712.566, 690.911, 40.5378, 0.2746 ) }
    dend_40 { pt3dadd( 713.517, 691.542, 40.3584, 0.2746 ) }
    dend_40 { pt3dadd( 714.468, 692.175, 40.1915, 0.2746 ) }
    dend_40 { pt3dadd( 715.42, 692.806, 40.0341, 0.2746 ) }
    dend_40 { pt3dadd( 716.372, 693.438, 39.8829, 0.2746 ) }
    dend_40 { pt3dadd( 717.323, 694.07, 39.7359, 0.2746 ) }
    dend_40 { pt3dadd( 718.275, 694.702, 39.5906, 0.2746 ) }
    dend_40 { pt3dadd( 719.226, 695.335, 39.4467, 0.2746 ) }
    dend_40 { pt3dadd( 720.178, 695.966, 39.3047, 0.2746 ) }
    dend_40 { pt3dadd( 721.13, 696.599, 39.1658, 0.2746 ) }
    dend_40 { pt3dadd( 722.081, 697.23, 39.0312, 0.2748 ) }
    dend_40 { pt3dadd( 723.033, 697.863, 38.9024, 0.275 ) }
    dend_40 { pt3dadd( 723.985, 698.494, 38.7808, 0.2754 ) }
    dend_40 { pt3dadd( 724.936, 699.127, 38.668, 0.276 ) }
    dend_40 { pt3dadd( 725.782, 699.884, 38.5773, 0.2772 ) }
    dend_40 { pt3dadd( 726.561, 700.722, 38.5132, 0.2794 ) }
    dend_40 { pt3dadd( 727.34, 701.56, 38.4686, 0.2836 ) }
    dend_40 { pt3dadd( 728.119, 702.398, 38.4364, 0.291 ) }
    dend_40 { pt3dadd( 728.898, 703.235, 38.4096, 0.3062 ) }
    dend_40 { pt3dadd( 729.677, 704.073, 38.3807, 0.328 ) }
    dend_40 { pt3dadd( 730.458, 704.91, 38.3449, 0.3988 ) }
    dend_40 { pt3dadd( 731.262, 705.711, 38.2964, 0.3832 ) }
    dend_40 { pt3dadd( 732.31, 706.164, 38.2122, 0.381 ) }
    dend_40 { pt3dadd( 733.358, 706.616, 38.1021, 0.476 ) }
    dend_40 { pt3dadd( 734.406, 707.069, 37.9758, 0.4 ) }
    dend_40 { pt3dadd( 735.454, 707.522, 37.8431, 0.3378 ) }
    dend_40 { pt3dadd( 736.502, 707.974, 37.7121, 0.2988 ) }
    dend_40 { pt3dadd( 737.547, 708.435, 37.6023, 0.3142 ) }
    dend_40 { pt3dadd( 738.589, 708.907, 37.5309, 0.3734 ) }
    dend_40 { pt3dadd( 739.631, 709.38, 37.4914, 0.334 ) }
    dend_40 { pt3dadd( 740.672, 709.852, 37.4769, 0.3 ) }
    dend_40 { pt3dadd( 741.715, 710.325, 37.4819, 0.2748 ) }
    dend_40 { pt3dadd( 742.757, 710.797, 37.5021, 0.2748 ) }
    dend_40 { pt3dadd( 743.82, 711.218, 37.534, 0.2752 ) }
    dend_40 { pt3dadd( 744.894, 711.613, 37.5785, 0.2756 ) }
    dend_40 { pt3dadd( 745.968, 712.006, 37.6421, 0.2766 ) }
    dend_40 { pt3dadd( 747.041, 712.4, 37.7314, 0.2782 ) }
    dend_40 { pt3dadd( 748.115, 712.794, 37.8535, 0.2814 ) }
    dend_40 { pt3dadd( 749.19, 713.188, 38.0139, 0.287 ) }
    dend_40 { pt3dadd( 750.245, 713.584, 38.2609, 0.2988 ) }
    dend_40 { pt3dadd( 751.279, 713.983, 38.6372, 0.3142 ) }
    dend_40 { pt3dadd( 752.312, 714.383, 39.1082, 0.3734 ) }
    dend_40 { pt3dadd( 753.345, 714.783, 39.6393, 0.3338 ) }
    dend_40 { pt3dadd( 754.377, 715.182, 40.1965, 0.3 ) }
    dend_40 { pt3dadd( 755.409, 715.581, 40.7487, 0.2746 ) }
    dend_40 { pt3dadd( 756.443, 715.98, 41.2686, 0.2746 ) }
    dend_40 { pt3dadd( 757.552, 716.106, 41.671, 0.2746 ) }
    dend_40 { pt3dadd( 758.696, 716.113, 41.9462, 0.2746 ) }
    dend_40 { pt3dadd( 759.84, 716.119, 42.1252, 0.2746 ) }
    dend_40 { pt3dadd( 760.984, 716.126, 42.2386, 0.2746 ) }
    dend_40 { pt3dadd( 762.128, 716.133, 42.3161, 0.2746 ) }
    dend_40 { pt3dadd( 763.272, 716.138, 42.3856, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_40 { pt3dadd( 764.416, 716.145, 42.4724, 0.2746 ) }
    dend_40 { pt3dadd( 765.56, 716.152, 42.5874, 0.2746 ) }
    dend_40 { pt3dadd( 766.697, 716.133, 42.7627, 0.2746 ) }
    dend_40 { pt3dadd( 767.825, 716.081, 43.0279, 0.2746 ) }
    dend_40 { pt3dadd( 768.953, 716.03, 43.3633, 0.2746 ) }
    dend_40 { pt3dadd( 770.08, 715.977, 43.7508, 0.2746 ) }
    dend_40 { pt3dadd( 771.208, 715.925, 44.1736, 0.2746 ) }
    dend_40 { pt3dadd( 772.336, 715.874, 44.616, 0.2746 ) }
    dend_40 { pt3dadd( 773.464, 715.823, 45.0643, 0.2746 ) }
    dend_40 { pt3dadd( 774.592, 715.77, 45.5106, 0.2746 ) }
    dend_40 { pt3dadd( 775.719, 715.718, 45.9544, 0.2746 ) }
    dend_40 { pt3dadd( 776.847, 715.667, 46.3946, 0.2746 ) }
    dend_40 { pt3dadd( 777.975, 715.615, 46.8303, 0.2746 ) }
    dend_40 { pt3dadd( 779.103, 715.563, 47.2584, 0.2746 ) }
    dend_40 { pt3dadd( 780.231, 715.511, 47.6767, 0.2746 ) }
    dend_40 { pt3dadd( 781.358, 715.46, 48.0822, 0.2746 ) }
    dend_40 { pt3dadd( 782.486, 715.407, 48.4719, 0.2746 ) }
    dend_40 { pt3dadd( 783.608, 715.454, 48.8326, 0.2746 ) }
    dend_40 { pt3dadd( 784.716, 715.724, 49.1414, 0.2746 ) }
    dend_40 { pt3dadd( 785.825, 715.995, 49.4088, 0.2746 ) }
    dend_40 { pt3dadd( 786.934, 716.265, 49.6437, 0.2746 ) }
    dend_40 { pt3dadd( 788.042, 716.535, 49.8554, 0.2746 ) }
    dend_40 { pt3dadd( 789.151, 716.805, 50.0514, 0.2746 ) }
    dend_40 { pt3dadd( 790.259, 717.076, 50.2376, 0.2746 ) }
    dend_40 { pt3dadd( 791.368, 717.346, 50.4168, 0.2746 ) }
    dend_40 { pt3dadd( 792.476, 717.616, 50.5868, 0.2746 ) }
    dend_40 { pt3dadd( 793.585, 717.888, 50.745, 0.2746 ) }
    dend_40 { pt3dadd( 794.693, 718.157, 50.8894, 0.2746 ) }
    dend_40 { pt3dadd( 795.762, 718.561, 50.9925, 0.2746 ) }
    dend_40 { pt3dadd( 796.828, 718.977, 51.0591, 0.2746 ) }
    dend_40 { pt3dadd( 797.894, 719.392, 51.0983, 0.2746 ) }
    dend_40 { pt3dadd( 798.96, 719.807, 51.1176, 0.2746 ) }
    dend_40 { pt3dadd( 800.026, 720.222, 51.1241, 0.2746 ) }
    dend_40 { pt3dadd( 801.092, 720.638, 51.1246, 0.2746 ) }
    dend_40 { pt3dadd( 802.158, 721.053, 51.1246, 0.2746 ) }
    dend_40 { pt3dadd( 803.224, 721.469, 51.1246, 0.2746 ) }
    dend_40 { pt3dadd( 804.289, 721.885, 51.1246, 0.2744 ) }
    dend_40 { pt3dadd( 805.36, 722.288, 51.1246, 0.2744 ) }
    dend_40 { pt3dadd( 806.447, 722.643, 51.1246, 0.2742 ) }
    dend_40 { pt3dadd( 807.535, 722.998, 51.1246, 0.274 ) }
    dend_40 { pt3dadd( 808.623, 723.351, 51.1246, 0.2736 ) }
    dend_40 { pt3dadd( 809.711, 723.706, 51.1246, 0.2728 ) }
    dend_40 { pt3dadd( 810.799, 724.06, 51.1246, 0.2712 ) }
    dend_40 { pt3dadd( 811.886, 724.414, 51.1246, 0.2684 ) }
    dend_40 { pt3dadd( 812.973, 724.769, 51.1246, 0.2626 ) }
    dend_40 { pt3dadd( 814.061, 725.123, 51.1246, 0.2542 ) }
    dend_40 { pt3dadd( 815.149, 725.477, 51.1246, 0.2288 ) }
    dend_40 { pt3dadd( 816.237, 725.831, 51.1246, 0.2288 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 48/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 556.215, 636.717, 49.2248, 0.2904 ) }
    dend_35 { pt3dadd( 556.154, 636.991, 49.1392, 0.2288 ) }
    dend_35 { pt3dadd( 555.685, 638.006, 49.537, 0.6026 ) }
    dend_35 { pt3dadd( 555.303, 639.062, 49.7137, 0.5052 ) }
    dend_35 { pt3dadd( 555.05, 640.179, 49.8509, 0.475 ) }
    dend_35 { pt3dadd( 555.015, 641.317, 49.9506, 0.3758 ) }
    dend_35 { pt3dadd( 555.024, 642.461, 50.0158, 0.403 ) }
    dend_35 { pt3dadd( 555.033, 643.605, 50.0494, 0.3418 ) }
    dend_35 { pt3dadd( 555.041, 644.749, 50.0545, 0.3144 ) }
    dend_35 { pt3dadd( 555.039, 645.893, 50.048, 0.3022 ) }
    dend_35 { pt3dadd( 555.026, 647.037, 50.0391, 0.3206 ) }
    dend_35 { pt3dadd( 555.014, 648.181, 50.0262, 0.3856 ) }
    dend_35 { pt3dadd( 554.997, 649.325, 50.0083, 0.3564 ) }
    dend_35 { pt3dadd( 554.946, 650.468, 49.9836, 0.3428 ) }
    dend_35 { pt3dadd( 554.896, 651.611, 49.9514, 0.3484 ) }
    dend_35 { pt3dadd( 555.076, 652.711, 49.9013, 0.4392 ) }
    dend_35 { pt3dadd( 555.521, 653.764, 49.8254, 0.4446 ) }
    dend_35 { pt3dadd( 555.966, 654.816, 49.7305, 0.5588 ) }
    dend_35 { pt3dadd( 556.411, 655.869, 49.6247, 0.4956 ) }
    dend_35 { pt3dadd( 556.856, 656.921, 49.5146, 0.5674 ) }
    dend_35 { pt3dadd( 557.301, 657.973, 49.408, 0.4708 ) }
    dend_35 { pt3dadd( 557.746, 659.025, 49.3116, 0.4906 ) }
    dend_35 { pt3dadd( 558.18, 660.082, 49.2332, 0.4772 ) }
    dend_35 { pt3dadd( 558.545, 661.167, 49.1935, 0.4672 ) }
    dend_35 { pt3dadd( 558.91, 662.25, 49.189, 0.3758 ) }
    dend_35 { pt3dadd( 559.275, 663.335, 49.2178, 0.3318 ) }
    dend_35 { pt3dadd( 559.64, 664.419, 49.2778, 0.3282 ) }
    dend_35 { pt3dadd( 560.02, 665.497, 49.3738, 0.4006 ) }
    dend_35 { pt3dadd( 560.472, 666.541, 49.5342, 0.379 ) }
    dend_35 { pt3dadd( 560.925, 667.586, 49.7456, 0.4094 ) }
    dend_35 { pt3dadd( 561.377, 668.631, 49.999, 0.3532 ) }
    dend_35 { pt3dadd( 561.83, 669.676, 50.2883, 0.3368 ) }
    dend_35 { pt3dadd( 562.282, 670.72, 50.608, 0.3384 ) }
    dend_35 { pt3dadd( 562.735, 671.766, 50.9544, 0.4134 ) }
    dend_35 { pt3dadd( 563.187, 672.81, 51.3234, 0.4334 ) }
    dend_35 { pt3dadd( 563.53, 673.871, 51.7437, 0.3606 ) }
    dend_35 { pt3dadd( 563.701, 674.957, 52.2494, 0.3022 ) }
    dend_35 { pt3dadd( 563.873, 676.041, 52.815, 0.2788 ) }
    dend_35 { pt3dadd( 564.044, 677.127, 53.4159, 0.2824 ) }
    dend_35 { pt3dadd( 564.179, 678.25, 53.9798, 0.289 ) }
    dend_35 { pt3dadd( 564.313, 679.372, 54.5042, 0.3012 ) }
    dend_35 { pt3dadd( 564.448, 680.495, 54.99, 0.3248 ) }
    dend_35 { pt3dadd( 564.583, 681.617, 55.4456, 0.3632 ) }
    dend_35 { pt3dadd( 564.737, 682.737, 55.8804, 0.46 ) }
    dend_35 { pt3dadd( 565.041, 683.84, 56.2534, 0.5158 ) }
    dend_35 { pt3dadd( 565.317, 684.93, 56.6367, 0.5344 ) }
    dend_35 { pt3dadd( 565.536, 685.995, 57.1206, 0.522 ) }
    dend_35 { pt3dadd( 565.756, 687.059, 57.6836, 0.4978 ) }
    dend_35 { pt3dadd( 566.245, 687.903, 58.2672, 0.4584 ) }
    dend_35 { pt3dadd( 567.334, 688.256, 58.7782, 0.3598 ) }
    dend_35 { pt3dadd( 568.401, 688.573, 59.2956, 0.301 ) }
    dend_35 { pt3dadd( 569.437, 688.839, 59.8881, 0.2766 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_35 { pt3dadd( 570.474, 689.107, 60.5158, 0.2782 ) }
    dend_35 { pt3dadd( 571.063, 689.911, 61.143, 0.2814 ) }
    dend_35 { pt3dadd( 571.497, 690.902, 61.7456, 0.287 ) }
    dend_35 { pt3dadd( 571.93, 691.892, 62.3011, 0.2988 ) }
    dend_35 { pt3dadd( 571.733, 692.978, 62.6671, 0.3142 ) }
    dend_35 { pt3dadd( 571.467, 693.911, 62.7589, 0.3738 ) }
    dend_35 { pt3dadd( 571.73, 694.492, 62.5327, 0.3344 ) }
    dend_35 { pt3dadd( 572.527, 695.311, 62.3154, 0.301 ) }
    dend_35 { pt3dadd( 573.326, 696.13, 62.1331, 0.2766 ) }
    dend_35 { pt3dadd( 574.123, 696.949, 62.006, 0.2782 ) }
    dend_35 { pt3dadd( 574.922, 697.769, 61.9511, 0.2814 ) }
    dend_35 { pt3dadd( 575.719, 698.588, 61.9615, 0.287 ) }
    dend_35 { pt3dadd( 576.518, 699.407, 62.0116, 0.2988 ) }
    dend_35 { pt3dadd( 577.315, 700.226, 62.0586, 0.3142 ) }
    dend_35 { pt3dadd( 578.114, 701.047, 62.1023, 0.3734 ) }
    dend_35 { pt3dadd( 578.912, 701.865, 62.139, 0.3338 ) }
    dend_35 { pt3dadd( 579.712, 702.683, 62.1639, 0.3 ) }
    dend_35 { pt3dadd( 580.513, 703.5, 62.1796, 0.2746 ) }
    dend_35 { pt3dadd( 581.312, 704.318, 62.1883, 0.2746 ) }
    dend_35 { pt3dadd( 582.112, 705.135, 62.1925, 0.2746 ) }
    dend_35 { pt3dadd( 582.913, 705.953, 62.1936, 0.2746 ) }
    dend_35 { pt3dadd( 583.712, 706.771, 62.1939, 0.2746 ) }
    dend_35 { pt3dadd( 584.401, 707.677, 62.1942, 0.2746 ) }
    dend_35 { pt3dadd( 585.018, 708.641, 62.1944, 0.2746 ) }
    dend_35 { pt3dadd( 585.634, 709.605, 62.195, 0.2746 ) }
    dend_35 { pt3dadd( 586.251, 710.568, 62.1958, 0.2746 ) }
    dend_35 { pt3dadd( 586.867, 711.532, 62.197, 0.2746 ) }
    dend_35 { pt3dadd( 587.484, 712.496, 62.1986, 0.2746 ) }
    dend_35 { pt3dadd( 588.099, 713.46, 62.2009, 0.2746 ) }
    dend_35 { pt3dadd( 588.716, 714.423, 62.204, 0.2746 ) }
    dend_35 { pt3dadd( 589.333, 715.387, 62.2082, 0.2746 ) }
    dend_35 { pt3dadd( 589.949, 716.351, 62.2143, 0.2746 ) }
    dend_35 { pt3dadd( 590.566, 717.314, 62.2227, 0.2746 ) }
    dend_35 { pt3dadd( 591.088, 718.326, 62.2345, 0.2746 ) }
    dend_35 { pt3dadd( 591.506, 719.391, 62.251, 0.2746 ) }
    dend_35 { pt3dadd( 591.924, 720.456, 62.2745, 0.2746 ) }
    dend_35 { pt3dadd( 592.341, 721.521, 62.3076, 0.2746 ) }
    dend_35 { pt3dadd( 592.759, 722.586, 62.3521, 0.2746 ) }
    dend_35 { pt3dadd( 593.178, 723.651, 62.4103, 0.2746 ) }
    dend_35 { pt3dadd( 593.887, 724.52, 62.5066, 0.2746 ) }
    dend_35 { pt3dadd( 594.701, 725.318, 62.6422, 0.2746 ) }
    dend_35 { pt3dadd( 595.516, 726.116, 62.8085, 0.2746 ) }
    dend_35 { pt3dadd( 596.331, 726.915, 62.9966, 0.2746 ) }
    dend_35 { pt3dadd( 597.145, 727.713, 63.1994, 0.2746 ) }
    dend_35 { pt3dadd( 597.961, 728.512, 63.4094, 0.2748 ) }
    dend_35 { pt3dadd( 598.775, 729.31, 63.6205, 0.2748 ) }
    dend_35 { pt3dadd( 599.59, 730.109, 63.8305, 0.2752 ) }
    dend_35 { pt3dadd( 600.404, 730.907, 64.0396, 0.2756 ) }
    dend_35 { pt3dadd( 601.219, 731.706, 64.2474, 0.2766 ) }
    dend_35 { pt3dadd( 602.033, 732.504, 64.4529, 0.2782 ) }
    dend_35 { pt3dadd( 602.848, 733.303, 64.6556, 0.2814 ) }
    dend_35 { pt3dadd( 603.662, 734.101, 64.8539, 0.287 ) }
    dend_35 { pt3dadd( 604.478, 734.9, 65.0471, 0.2988 ) }
    dend_35 { pt3dadd( 605.293, 735.697, 65.2341, 0.3142 ) }
    dend_35 { pt3dadd( 606.032, 736.568, 65.4035, 0.3734 ) }
    dend_35 { pt3dadd( 606.762, 737.448, 65.5567, 0.3338 ) }
    dend_35 { pt3dadd( 607.49, 738.328, 65.697, 0.3 ) }
    dend_35 { pt3dadd( 608.22, 739.208, 65.828, 0.2746 ) }
    dend_35 { pt3dadd( 608.949, 740.088, 65.9529, 0.2746 ) }
    dend_35 { pt3dadd( 609.679, 740.968, 66.0736, 0.2746 ) }
    dend_35 { pt3dadd( 610.407, 741.847, 66.1923, 0.2746 ) }
    dend_35 { pt3dadd( 611.137, 742.727, 66.3088, 0.2746 ) }
    dend_35 { pt3dadd( 611.866, 743.607, 66.4219, 0.2746 ) }
    dend_35 { pt3dadd( 612.596, 744.487, 66.5305, 0.2746 ) }
    dend_35 { pt3dadd( 613.325, 745.367, 66.6327, 0.2746 ) }
    dend_35 { pt3dadd( 614.055, 746.247, 66.7276, 0.2746 ) }
    dend_35 { pt3dadd( 614.732, 747.159, 66.8108, 0.2746 ) }
    dend_35 { pt3dadd( 615.181, 748.21, 66.8676, 0.2746 ) }
    dend_35 { pt3dadd( 615.631, 749.263, 66.9038, 0.2746 ) }
    dend_35 { pt3dadd( 616.082, 750.314, 66.9242, 0.2746 ) }
    dend_35 { pt3dadd( 616.531, 751.367, 66.9337, 0.2746 ) }
    dend_35 { pt3dadd( 616.981, 752.418, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 617.43, 753.47, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 617.866, 754.528, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 618.271, 755.597, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 618.675, 756.668, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 619.079, 757.738, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 619.483, 758.808, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 619.887, 759.879, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 620.291, 760.949, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 620.695, 762.019, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 621.099, 763.089, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 621.533, 764.142, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 622.311, 764.98, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 623.09, 765.818, 66.9365, 0.2746 ) }
    dend_35 { pt3dadd( 623.868, 766.656, 66.9365, 0.2744 ) }
    dend_35 { pt3dadd( 624.647, 767.495, 66.9365, 0.2744 ) }
    dend_35 { pt3dadd( 625.425, 768.333, 66.9365, 0.2742 ) }
    dend_35 { pt3dadd( 626.203, 769.172, 66.9365, 0.274 ) }
    dend_35 { pt3dadd( 626.982, 770.009, 66.9365, 0.2736 ) }
    dend_35 { pt3dadd( 627.76, 770.848, 66.9365, 0.2728 ) }
    dend_35 { pt3dadd( 628.539, 771.686, 66.9365, 0.2712 ) }
    dend_35 { pt3dadd( 629.317, 772.525, 66.9365, 0.2684 ) }
    dend_35 { pt3dadd( 630.096, 773.363, 66.9365, 0.2626 ) }
    dend_35 { pt3dadd( 630.874, 774.201, 66.9365, 0.2542 ) }
    dend_35 { pt3dadd( 631.653, 775.039, 66.9365, 0.2288 ) }
    dend_35 { pt3dadd( 632.431, 775.878, 66.9365, 0.2288 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 97/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 556.215, 636.717, 49.2248, 0.2904 ) }
    dend_34 { pt3dadd( 557.003, 637.368, 49.406, 0.305 ) }
    dend_34 { pt3dadd( 557.87, 638.084, 49.6152, 0.3258 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_34 { pt3dadd( 558.97, 638.3, 49.7801, 0.395 ) }
    dend_34 { pt3dadd( 560.106, 638.442, 49.9013, 0.3736 ) }
    dend_34 { pt3dadd( 561.221, 638.211, 49.982, 0.3756 ) }
    dend_34 { pt3dadd( 562.334, 637.951, 50.0248, 0.4048 ) }
    dend_34 { pt3dadd( 563.449, 637.69, 50.0329, 0.564 ) }
    dend_34 { pt3dadd( 564.564, 637.438, 50.0209, 0.5784 ) }
    dend_34 { pt3dadd( 565.707, 637.397, 50.001, 0.5954 ) }
    dend_34 { pt3dadd( 566.851, 637.356, 49.9727, 0.4438 ) }
    dend_34 { pt3dadd( 567.991, 637.415, 49.933, 0.367 ) }
    dend_34 { pt3dadd( 569.132, 637.502, 49.8795, 0.3772 ) }
    dend_34 { pt3dadd( 570.273, 637.589, 49.8098, 0.341 ) }
    dend_34 { pt3dadd( 571.403, 637.727, 49.6944, 0.3128 ) }
    dend_34 { pt3dadd( 572.527, 637.894, 49.5281, 0.2994 ) }
    dend_34 { pt3dadd( 573.652, 638.061, 49.3273, 0.3156 ) }
    dend_34 { pt3dadd( 574.775, 638.228, 49.1075, 0.376 ) }
    dend_34 { pt3dadd( 575.9, 638.396, 48.8835, 0.3388 ) }
    dend_34 { pt3dadd( 576.989, 638.718, 48.6984, 0.309 ) }
    dend_34 { pt3dadd( 578.063, 639.114, 48.5663, 0.2912 ) }
    dend_34 { pt3dadd( 579.161, 639.343, 48.4753, 0.3064 ) }
    dend_34 { pt3dadd( 580.304, 639.281, 48.4098, 0.3282 ) }
    dend_34 { pt3dadd( 581.446, 639.219, 48.3557, 0.4006 ) }
    dend_34 { pt3dadd( 582.589, 639.156, 48.3003, 0.379 ) }
    dend_34 { pt3dadd( 583.731, 639.094, 48.2328, 0.4094 ) }
    dend_34 { pt3dadd( 584.859, 639.24, 48.1124, 0.3532 ) }
    dend_34 { pt3dadd( 585.984, 639.407, 47.9494, 0.3366 ) }
    dend_34 { pt3dadd( 587.11, 639.573, 47.759, 0.3382 ) }
    dend_34 { pt3dadd( 588.236, 639.74, 47.5558, 0.413 ) }
    dend_34 { pt3dadd( 589.361, 639.906, 47.3525, 0.4328 ) }
    dend_34 { pt3dadd( 590.469, 640.155, 47.1766, 0.3594 ) }
    dend_34 { pt3dadd( 591.547, 640.536, 47.0588, 0.3 ) }
    dend_34 { pt3dadd( 592.626, 640.917, 46.9874, 0.2746 ) }
    dend_34 { pt3dadd( 593.705, 641.297, 46.9515, 0.2746 ) }
    dend_34 { pt3dadd( 594.63, 641.914, 46.9412, 0.2746 ) }
    dend_34 { pt3dadd( 595.409, 642.751, 46.9476, 0.2746 ) }
    dend_34 { pt3dadd( 596.189, 643.588, 46.9633, 0.2746 ) }
    dend_34 { pt3dadd( 596.969, 644.425, 46.9837, 0.2746 ) }
    dend_34 { pt3dadd( 597.786, 645.219, 47.0134, 0.2746 ) }
    dend_34 { pt3dadd( 598.728, 645.865, 47.0624, 0.2746 ) }
    dend_34 { pt3dadd( 599.672, 646.51, 47.1246, 0.2748 ) }
    dend_34 { pt3dadd( 600.616, 647.155, 47.1948, 0.2748 ) }
    dend_34 { pt3dadd( 601.56, 647.8, 47.2676, 0.2752 ) }
    dend_34 { pt3dadd( 602.547, 648.362, 47.3329, 0.2756 ) }
    dend_34 { pt3dadd( 603.614, 648.776, 47.3782, 0.2766 ) }
    dend_34 { pt3dadd( 604.564, 649.353, 47.406, 0.2784 ) }
    dend_34 { pt3dadd( 605.297, 650.23, 47.4202, 0.2818 ) }
    dend_34 { pt3dadd( 606.031, 651.109, 47.425, 0.2876 ) }
    dend_34 { pt3dadd( 606.765, 651.986, 47.4236, 0.2998 ) }
    dend_34 { pt3dadd( 607.509, 652.856, 47.4188, 0.3162 ) }
    dend_34 { pt3dadd( 608.294, 653.678, 47.4121, 0.3774 ) }
    dend_34 { pt3dadd( 609.262, 654.287, 47.4029, 0.3412 ) }
    dend_34 { pt3dadd( 610.23, 654.896, 47.39, 0.3136 ) }
    dend_34 { pt3dadd( 611.198, 655.506, 47.3718, 0.2996 ) }
    dend_34 { pt3dadd( 612.121, 656.169, 47.346, 0.323 ) }
    dend_34 { pt3dadd( 612.875, 657.029, 47.3113, 0.3538 ) }
    dend_34 { pt3dadd( 613.629, 657.889, 47.2671, 0.4726 ) }
    dend_34 { pt3dadd( 614.427, 658.705, 47.1901, 0.3936 ) }
    dend_34 { pt3dadd( 615.241, 659.505, 47.082, 0.3264 ) }
    dend_34 { pt3dadd( 616.054, 660.304, 46.9546, 0.2762 ) }
    dend_34 { pt3dadd( 616.868, 661.104, 46.8191, 0.2778 ) }
    dend_34 { pt3dadd( 617.681, 661.904, 46.6866, 0.2804 ) }
    dend_34 { pt3dadd( 618.493, 662.708, 46.5926, 0.2854 ) }
    dend_34 { pt3dadd( 619.307, 663.512, 46.5436, 0.2944 ) }
    dend_34 { pt3dadd( 620.119, 664.317, 46.5346, 0.3124 ) }
    dend_34 { pt3dadd( 620.932, 665.123, 46.5604, 0.3404 ) }
    dend_34 { pt3dadd( 621.745, 665.927, 46.6147, 0.417 ) }
    dend_34 { pt3dadd( 622.684, 666.509, 46.7116, 0.44 ) }
    dend_34 { pt3dadd( 623.78, 666.812, 46.8611, 0.373 ) }
    dend_34 { pt3dadd( 624.876, 667.116, 47.0456, 0.3248 ) }
    dend_34 { pt3dadd( 625.971, 667.419, 47.2489, 0.3228 ) }
    dend_34 { pt3dadd( 627.066, 667.722, 47.4558, 0.3536 ) }
    dend_34 { pt3dadd( 628.169, 668.007, 47.6381, 0.4722 ) }
    dend_34 { pt3dadd( 629.287, 668.255, 47.7585, 0.3932 ) }
    dend_34 { pt3dadd( 630.404, 668.502, 47.8234, 0.3254 ) }
    dend_34 { pt3dadd( 631.52, 668.75, 47.8433, 0.2746 ) }
    dend_34 { pt3dadd( 632.638, 668.997, 47.8279, 0.2746 ) }
    dend_34 { pt3dadd( 633.754, 669.245, 47.7856, 0.2746 ) }
    dend_34 { pt3dadd( 634.816, 669.624, 47.7134, 0.2746 ) }
    dend_34 { pt3dadd( 635.787, 670.223, 47.6014, 0.2748 ) }
    dend_34 { pt3dadd( 636.758, 670.822, 47.4592, 0.275 ) }
    dend_34 { pt3dadd( 637.73, 671.42, 47.2973, 0.2754 ) }
    dend_34 { pt3dadd( 638.7, 672.02, 47.1254, 0.276 ) }
    dend_34 { pt3dadd( 639.671, 672.619, 46.9529, 0.2772 ) }
    dend_34 { pt3dadd( 640.642, 673.218, 46.7886, 0.2792 ) }
    dend_34 { pt3dadd( 641.612, 673.817, 46.6379, 0.2834 ) }
    dend_34 { pt3dadd( 642.656, 674.282, 46.5273, 0.2906 ) }
    dend_34 { pt3dadd( 643.713, 674.716, 46.4548, 0.3056 ) }
    dend_34 { pt3dadd( 644.771, 675.152, 46.412, 0.3266 ) }
    dend_34 { pt3dadd( 645.828, 675.589, 46.3901, 0.3976 ) }
    dend_34 { pt3dadd( 646.884, 676.031, 46.382, 0.3734 ) }
    dend_34 { pt3dadd( 647.939, 676.471, 46.3809, 0.399 ) }
    dend_34 { pt3dadd( 648.995, 676.913, 46.3809, 0.334 ) }
    dend_34 { pt3dadd( 650.05, 677.354, 46.3809, 0.3002 ) }
    dend_34 { pt3dadd( 651.109, 677.789, 46.3809, 0.2752 ) }
    dend_34 { pt3dadd( 652.178, 678.194, 46.3806, 0.2756 ) }
    dend_34 { pt3dadd( 653.248, 678.6, 46.3803, 0.2766 ) }
    dend_34 { pt3dadd( 654.318, 679.006, 46.38, 0.2782 ) }
    dend_34 { pt3dadd( 655.387, 679.411, 46.3798, 0.2814 ) }
    dend_34 { pt3dadd( 656.471, 679.772, 46.3789, 0.287 ) }
    dend_34 { pt3dadd( 657.58, 680.053, 46.3781, 0.2988 ) }
    dend_34 { pt3dadd( 658.689, 680.333, 46.377, 0.3142 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_34 { pt3dadd( 659.797, 680.615, 46.3753, 0.3734 ) }
    dend_34 { pt3dadd( 660.919, 680.823, 46.373, 0.334 ) }
    dend_34 { pt3dadd( 662.059, 680.92, 46.3697, 0.3 ) }
    dend_34 { pt3dadd( 663.198, 681.018, 46.3652, 0.2746 ) }
    dend_34 { pt3dadd( 664.338, 681.115, 46.3588, 0.2748 ) }
    dend_34 { pt3dadd( 665.479, 681.212, 46.3495, 0.2748 ) }
    dend_34 { pt3dadd( 666.62, 681.228, 46.3372, 0.2752 ) }
    dend_34 { pt3dadd( 667.764, 681.195, 46.3204, 0.2756 ) }
    dend_34 { pt3dadd( 668.907, 681.161, 46.2952, 0.2766 ) }
    dend_34 { pt3dadd( 670.009, 681.435, 46.2588, 0.2782 ) }
    dend_34 { pt3dadd( 671.101, 681.774, 46.2109, 0.2814 ) }
    dend_34 { pt3dadd( 672.194, 682.113, 46.1518, 0.287 ) }
    dend_34 { pt3dadd( 673.286, 682.453, 46.083, 0.2988 ) }
    dend_34 { pt3dadd( 673.702, 682.51, 45.8612, 0.3142 ) }
    dend_34 { pt3dadd( 674.648, 682.8, 45.6837, 0.3734 ) }
    dend_34 { pt3dadd( 675.649, 683.197, 45.5484, 0.3338 ) }
    dend_34 { pt3dadd( 676.793, 683.197, 45.453, 0.3 ) }
    dend_34 { pt3dadd( 677.937, 683.197, 45.3939, 0.2746 ) }
    dend_34 { pt3dadd( 679.081, 683.197, 45.3676, 0.2746 ) }
    dend_34 { pt3dadd( 680.225, 683.197, 45.3706, 0.2746 ) }
    dend_34 { pt3dadd( 681.369, 683.197, 45.3748, 0.2746 ) }
    dend_34 { pt3dadd( 682.513, 683.197, 45.3807, 0.2746 ) }
    dend_34 { pt3dadd( 683.657, 683.197, 45.3888, 0.2746 ) }
    dend_34 { pt3dadd( 684.801, 683.197, 45.4003, 0.2746 ) }
    dend_34 { pt3dadd( 685.945, 683.197, 45.4163, 0.2746 ) }
    dend_34 { pt3dadd( 687.082, 683.272, 45.439, 0.2746 ) }
    dend_34 { pt3dadd( 688.143, 683.667, 45.4709, 0.2746 ) }
    dend_34 { pt3dadd( 689.154, 684.15, 45.514, 0.2746 ) }
    dend_34 { pt3dadd( 690.158, 684.61, 45.575, 0.2746 ) }
    dend_34 { pt3dadd( 691.291, 684.774, 45.6593, 0.2746 ) }
    dend_34 { pt3dadd( 692.393, 685.041, 45.7923, 0.2746 ) }
    dend_34 { pt3dadd( 693.412, 685.502, 45.9592, 0.2746 ) }
    dend_34 { pt3dadd( 694.495, 685.853, 46.1353, 0.2746 ) }
    dend_34 { pt3dadd( 695.134, 686.351, 46.5237, 0.2746 ) }
    dend_34 { pt3dadd( 696.087, 686.808, 46.921, 0.2746 ) }
    dend_34 { pt3dadd( 697.133, 687.26, 47.2329, 0.2746 ) }
    dend_34 { pt3dadd( 697.839, 688.044, 47.4676, 0.2746 ) }
    dend_34 { pt3dadd( 698.697, 688.667, 47.6367, 0.2746 ) }
    dend_34 { pt3dadd( 699.661, 689.223, 47.7512, 0.2746 ) }
    dend_34 { pt3dadd( 700.57, 689.913, 47.819, 0.2746 ) }
    dend_34 { pt3dadd( 701.412, 690.454, 47.964, 0.2746 ) }
    dend_34 { pt3dadd( 702.211, 691.141, 48.0936, 0.2746 ) }
    dend_34 { pt3dadd( 702.827, 692.084, 48.2096, 0.2746 ) }
    dend_34 { pt3dadd( 703.439, 693.032, 48.3129, 0.2746 ) }
    dend_34 { pt3dadd( 704.227, 693.842, 48.4358, 0.2746 ) }
    dend_34 { pt3dadd( 705.051, 694.295, 48.6228, 0.2746 ) }
    dend_34 { pt3dadd( 706.055, 694.699, 48.7575, 0.2746 ) }
    dend_34 { pt3dadd( 706.56, 695.69, 48.8572, 0.2746 ) }
    dend_34 { pt3dadd( 707.324, 696.238, 48.9244, 0.2746 ) }
    dend_34 { pt3dadd( 708.386, 696.65, 48.9605, 0.2746 ) }
    dend_34 { pt3dadd( 709.476, 696.925, 48.9681, 0.2746 ) }
    dend_34 { pt3dadd( 710.62, 696.925, 48.9555, 0.2746 ) }
    dend_34 { pt3dadd( 711.68, 697.31, 48.9398, 0.2746 ) }
    dend_34 { pt3dadd( 712.691, 697.842, 48.9216, 0.2746 ) }
    dend_34 { pt3dadd( 713.619, 698.469, 48.8676, 0.2746 ) }
    dend_34 { pt3dadd( 714.704, 698.827, 48.8172, 0.2746 ) }
    dend_34 { pt3dadd( 715.763, 699.233, 48.7782, 0.2746 ) }
    dend_34 { pt3dadd( 716.833, 699.562, 48.7505, 0.2746 ) }
    dend_34 { pt3dadd( 717.917, 699.829, 48.7329, 0.2746 ) }
    dend_34 { pt3dadd( 718.872, 700.406, 48.7245, 0.2746 ) }
    dend_34 { pt3dadd( 719.912, 700.845, 48.7245, 0.2746 ) }
    dend_34 { pt3dadd( 720.677, 701.551, 48.7262, 0.2746 ) }
    dend_34 { pt3dadd( 721.699, 701.958, 48.7287, 0.2746 ) }
    dend_34 { pt3dadd( 722.839, 702.024, 48.732, 0.2746 ) }
    dend_34 { pt3dadd( 723.815, 702.464, 48.7368, 0.2746 ) }
    dend_34 { pt3dadd( 724.826, 702.827, 48.7435, 0.2746 ) }
    dend_34 { pt3dadd( 725.633, 703.617, 48.753, 0.2748 ) }
    dend_34 { pt3dadd( 726.458, 704.369, 48.7659, 0.2748 ) }
    dend_34 { pt3dadd( 727.098, 705.227, 48.7844, 0.2752 ) }
    dend_34 { pt3dadd( 727.616, 706.231, 48.8107, 0.2756 ) }
    dend_34 { pt3dadd( 728.429, 706.902, 48.8463, 0.2766 ) }
    dend_34 { pt3dadd( 729.293, 707.549, 48.895, 0.2782 ) }
    dend_34 { pt3dadd( 730.231, 708.139, 48.9628, 0.2814 ) }
    dend_34 { pt3dadd( 731.222, 708.671, 49.0725, 0.287 ) }
    dend_34 { pt3dadd( 732.082, 709.415, 49.2176, 0.2988 ) }
    dend_34 { pt3dadd( 732.948, 710.144, 49.3707, 0.3142 ) }
    dend_34 { pt3dadd( 733.678, 710.963, 49.6054, 0.3734 ) }
    dend_34 { pt3dadd( 734.572, 711.412, 49.9831, 0.3338 ) }
    dend_34 { pt3dadd( 734.682, 712.526, 50.288, 0.3 ) }
    dend_34 { pt3dadd( 735.645, 712.951, 50.5249, 0.2746 ) }
    dend_34 { pt3dadd( 736.394, 713.798, 50.7063, 0.2746 ) }
    dend_34 { pt3dadd( 737.119, 714.674, 50.8449, 0.2746 ) }
    dend_34 { pt3dadd( 738.109, 715.216, 50.9575, 0.2746 ) }
    dend_34 { pt3dadd( 739.137, 715.685, 51.0728, 0.2746 ) }
    dend_34 { pt3dadd( 740.104, 716.144, 51.2302, 0.2746 ) }
    dend_34 { pt3dadd( 741.035, 716.752, 51.4307, 0.2746 ) }
    dend_34 { pt3dadd( 741.708, 717.621, 51.6832, 0.2746 ) }
    dend_34 { pt3dadd( 742.431, 717.76, 52.257, 0.2746 ) }
    dend_34 { pt3dadd( 743.217, 718.325, 52.9077, 0.2746 ) }
    dend_34 { pt3dadd( 744.003, 718.92, 53.5315, 0.2746 ) }
    dend_34 { pt3dadd( 744.927, 719.584, 53.998, 0.2746 ) }
    dend_34 { pt3dadd( 745.63, 720.467, 54.3189, 0.2746 ) }
    dend_34 { pt3dadd( 746.501, 721.148, 54.5073, 0.2746 ) }
    dend_34 { pt3dadd( 747.308, 721.946, 54.5796, 0.2746 ) }
    dend_34 { pt3dadd( 748.15, 722.712, 54.5992, 0.2746 ) }
    dend_34 { pt3dadd( 749.053, 723.389, 54.5989, 0.2746 ) }
    dend_34 { pt3dadd( 749.976, 724.022, 54.5986, 0.2746 ) }
    dend_34 { pt3dadd( 750.719, 724.662, 54.598, 0.2746 ) }
    dend_34 { pt3dadd( 751.423, 725.41, 54.5972, 0.2746 ) }
    dend_34 { pt3dadd( 752.236, 726.047, 54.5961, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_34 { pt3dadd( 752.841, 727.014, 54.5947, 0.2746 ) }
    dend_34 { pt3dadd( 753.601, 727.833, 54.5924, 0.2746 ) }
    dend_34 { pt3dadd( 754.604, 728.214, 54.5894, 0.2746 ) }
    dend_34 { pt3dadd( 755.237, 729.071, 54.5854, 0.2746 ) }
    dend_34 { pt3dadd( 756.36, 729.238, 54.5796, 0.2746 ) }
    dend_34 { pt3dadd( 757.478, 729.474, 54.5709, 0.2746 ) }
    dend_34 { pt3dadd( 758.47, 730.018, 54.5591, 0.2746 ) }
    dend_34 { pt3dadd( 759.298, 730.788, 54.5443, 0.2748 ) }
    dend_34 { pt3dadd( 760.199, 731.466, 54.5266, 0.2748 ) }
    dend_34 { pt3dadd( 761.151, 732.043, 54.4849, 0.2752 ) }
    dend_34 { pt3dadd( 761.941, 732.722, 54.4306, 0.2756 ) }
    dend_34 { pt3dadd( 762.643, 733.304, 54.388, 0.2766 ) }
    dend_34 { pt3dadd( 763.714, 733.648, 54.3564, 0.2782 ) }
    dend_34 { pt3dadd( 764.629, 734.314, 54.3354, 0.2814 ) }
    dend_34 { pt3dadd( 765.447, 735.059, 54.3236, 0.287 ) }
    dend_34 { pt3dadd( 765.863, 736.109, 54.32, 0.2988 ) }
    dend_34 { pt3dadd( 766.577, 736.942, 54.32, 0.3142 ) }
    dend_34 { pt3dadd( 766.82, 738.05, 54.32, 0.3734 ) }
    dend_34 { pt3dadd( 767.052, 739.159, 54.32, 0.3338 ) }
    dend_34 { pt3dadd( 767.052, 740.303, 54.32, 0.3 ) }
    dend_34 { pt3dadd( 767.093, 741.444, 54.32, 0.2746 ) }
    dend_34 { pt3dadd( 767.166, 742.582, 54.32, 0.2746 ) }
    dend_34 { pt3dadd( 767.166, 743.726, 54.32, 0.2748 ) }
    dend_34 { pt3dadd( 767.166, 744.87, 54.32, 0.2748 ) }
    dend_34 { pt3dadd( 767.166, 746.014, 54.32, 0.2752 ) }
    dend_34 { pt3dadd( 767.174, 747.158, 54.3197, 0.2756 ) }
    dend_34 { pt3dadd( 767.48, 748.245, 54.3197, 0.2766 ) }
    dend_34 { pt3dadd( 767.853, 749.319, 54.3197, 0.2782 ) }
    dend_34 { pt3dadd( 767.853, 750.463, 54.3194, 0.2814 ) }
    dend_34 { pt3dadd( 767.961, 751.595, 54.3192, 0.287 ) }
    dend_34 { pt3dadd( 768.519, 752.518, 54.3189, 0.2988 ) }
    dend_34 { pt3dadd( 769.34, 753.141, 54.3186, 0.3142 ) }
    dend_34 { pt3dadd( 769.38, 754.279, 54.318, 0.3734 ) }
    dend_34 { pt3dadd( 769.798, 755.329, 54.3172, 0.3338 ) }
    dend_34 { pt3dadd( 770.063, 756.407, 54.3161, 0.3 ) }
    dend_34 { pt3dadd( 770.632, 757.215, 54.3147, 0.2746 ) }
    dend_34 { pt3dadd( 770.727, 758.35, 54.3124, 0.2746 ) }
    dend_34 { pt3dadd( 771.113, 759.409, 54.3096, 0.2746 ) }
    dend_34 { pt3dadd( 771.302, 760.527, 54.3054, 0.2746 ) }
    dend_34 { pt3dadd( 771.514, 761.641, 54.2996, 0.2746 ) }
    dend_34 { pt3dadd( 771.514, 762.785, 54.2914, 0.2746 ) }
    dend_34 { pt3dadd( 771.628, 763.919, 54.2802, 0.2746 ) }
    dend_34 { pt3dadd( 771.649, 765.063, 54.2643, 0.2746 ) }
    dend_34 { pt3dadd( 771.857, 766.177, 54.2424, 0.2746 ) }
    dend_34 { pt3dadd( 771.857, 767.321, 54.2122, 0.2746 ) }
    dend_34 { pt3dadd( 771.857, 768.465, 54.1671, 0.2746 ) }
    dend_34 { pt3dadd( 771.857, 769.609, 54.1038, 0.2744 ) }
    dend_34 { pt3dadd( 771.857, 770.753, 54.0212, 0.2744 ) }
    dend_34 { pt3dadd( 771.983, 771.889, 53.9207, 0.2742 ) }
    dend_34 { pt3dadd( 772.854, 772.428, 53.7606, 0.274 ) }
    dend_34 { pt3dadd( 773.344, 772.966, 53.4083, 0.2736 ) }
    dend_34 { pt3dadd( 773.344, 774.11, 53.128, 0.2728 ) }
    dend_34 { pt3dadd( 773.513, 775.24, 52.9164, 0.2712 ) }
    dend_34 { pt3dadd( 773.688, 776.37, 52.7682, 0.2684 ) }
    dend_34 { pt3dadd( 773.758, 777.509, 52.6781, 0.2626 ) }
    dend_34 { pt3dadd( 773.833, 778.646, 52.64, 0.2542 ) }
    dend_34 { pt3dadd( 774.027, 779.76, 52.64, 0.2288 ) }
    dend_34 { pt3dadd( 774.145, 780.894, 52.64, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 58/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 546.135, 628.867, 34.3244, 0.708 ) }
    dend_31 { pt3dadd( 545.089, 629.99, 32.9347, 0.4842 ) }
    dend_31 { pt3dadd( 544.362, 630.758, 32.1941, 0.4254 ) }
    dend_31 { pt3dadd( 543.232, 630.699, 31.649, 0.336 ) }
    dend_31 { pt3dadd( 542.409, 631.268, 31.2844, 0.304 ) }
    dend_31 { pt3dadd( 542.347, 632.298, 31.0447, 0.282 ) }
    dend_31 { pt3dadd( 542.704, 633.385, 30.8834, 0.2884 ) }
    dend_31 { pt3dadd( 542.412, 634.42, 30.7415, 0.3012 ) }
    dend_31 { pt3dadd( 541.901, 635.437, 30.5855, 0.3186 ) }
    dend_31 { pt3dadd( 541.39, 636.455, 30.3993, 0.3818 ) }
    dend_31 { pt3dadd( 540.88, 637.472, 30.1949, 0.3492 ) }
    dend_31 { pt3dadd( 540.368, 638.49, 29.983, 0.3284 ) }
    dend_31 { pt3dadd( 539.858, 639.509, 29.7707, 0.328 ) }
    dend_31 { pt3dadd( 539.091, 640.081, 29.6232, 0.3694 ) }
    dend_31 { pt3dadd( 538.37, 640.965, 29.5028, 0.4714 ) }
    dend_31 { pt3dadd( 537.759, 641.932, 29.3933, 0.538 ) }
    dend_31 { pt3dadd( 537.095, 642.84, 29.2508, 0.569 ) }
    dend_31 { pt3dadd( 536.354, 643.677, 29.0489, 0.618 ) }
    dend_31 { pt3dadd( 535.676, 644.589, 28.8607, 0.522 ) }
    dend_31 { pt3dadd( 535.125, 645.59, 28.7154, 0.563 ) }
    dend_31 { pt3dadd( 534.366, 646.353, 28.5757, 0.4926 ) }
    dend_31 { pt3dadd( 534.107, 647.442, 28.4934, 0.3858 ) }
    dend_31 { pt3dadd( 533.381, 648.3, 28.4668, 0.302 ) }
    dend_31 { pt3dadd( 532.609, 649.125, 28.4875, 0.2784 ) }
    dend_31 { pt3dadd( 532.009, 650.099, 28.5449, 0.2816 ) }
    dend_31 { pt3dadd( 531.586, 651.153, 28.6362, 0.2874 ) }
    dend_31 { pt3dadd( 531.138, 652.178, 28.7675, 0.2994 ) }
    dend_31 { pt3dadd( 530.738, 653.219, 28.9912, 0.3156 ) }
    dend_31 { pt3dadd( 530.336, 654.141, 29.2768, 0.376 ) }
    dend_31 { pt3dadd( 529.762, 654.974, 29.68, 0.3386 ) }
    dend_31 { pt3dadd( 529.236, 655.962, 30.0308, 0.309 ) }
    dend_31 { pt3dadd( 528.331, 656.623, 30.3251, 0.291 ) }
    dend_31 { pt3dadd( 527.303, 657.115, 30.5217, 0.306 ) }
    dend_31 { pt3dadd( 526.616, 658.0, 30.6272, 0.3278 ) }
    dend_31 { pt3dadd( 526.045, 658.986, 30.6586, 0.3984 ) }
    dend_31 { pt3dadd( 525.654, 660.059, 30.6331, 0.3822 ) }
    dend_31 { pt3dadd( 525.554, 661.195, 30.5808, 0.3792 ) }
    dend_31 { pt3dadd( 525.299, 662.3, 30.5105, 0.4724 ) }
    dend_31 { pt3dadd( 525.206, 663.395, 30.3509, 0.3934 ) }
    dend_31 { pt3dadd( 524.939, 664.457, 30.135, 0.3256 ) }
    dend_31 { pt3dadd( 524.867, 665.596, 29.9606, 0.275 ) }
    dend_31 { pt3dadd( 524.593, 666.691, 29.8304, 0.2754 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_31 { pt3dadd( 524.089, 667.695, 29.7413, 0.2762 ) }
    dend_31 { pt3dadd( 523.683, 668.753, 29.689, 0.2776 ) }
    dend_31 { pt3dadd( 523.278, 669.82, 29.6694, 0.2802 ) }
    dend_31 { pt3dadd( 522.827, 670.857, 29.664, 0.2852 ) }
    dend_31 { pt3dadd( 522.084, 671.722, 29.6576, 0.294 ) }
    dend_31 { pt3dadd( 521.226, 672.477, 29.6486, 0.3116 ) }
    dend_31 { pt3dadd( 520.518, 673.364, 29.6355, 0.339 ) }
    dend_31 { pt3dadd( 519.623, 674.072, 29.6181, 0.4142 ) }
    dend_31 { pt3dadd( 518.766, 674.808, 29.5949, 0.435 ) }
    dend_31 { pt3dadd( 518.193, 675.748, 29.566, 0.3634 ) }
    dend_31 { pt3dadd( 517.622, 676.724, 29.5008, 0.3078 ) }
    dend_31 { pt3dadd( 517.316, 677.818, 29.4316, 0.2886 ) }
    dend_31 { pt3dadd( 517.088, 678.926, 29.367, 0.3018 ) }
    dend_31 { pt3dadd( 517.088, 680.062, 29.2768, 0.3198 ) }
    dend_31 { pt3dadd( 517.077, 681.205, 29.2079, 0.384 ) }
    dend_31 { pt3dadd( 516.889, 682.334, 29.1589, 0.3534 ) }
    dend_31 { pt3dadd( 516.859, 683.475, 29.1276, 0.337 ) }
    dend_31 { pt3dadd( 516.859, 684.619, 29.1057, 0.339 ) }
    dend_31 { pt3dadd( 516.859, 685.763, 29.0906, 0.4144 ) }
    dend_31 { pt3dadd( 516.859, 686.907, 29.0791, 0.4354 ) }
    dend_31 { pt3dadd( 516.859, 688.051, 29.062, 0.3644 ) }
    dend_31 { pt3dadd( 516.628, 689.165, 29.0382, 0.3094 ) }
    dend_31 { pt3dadd( 516.217, 690.214, 29.0072, 0.292 ) }
    dend_31 { pt3dadd( 516.173, 691.356, 28.9677, 0.3064 ) }
    dend_31 { pt3dadd( 516.173, 692.496, 28.9075, 0.3354 ) }
    dend_31 { pt3dadd( 516.173, 693.624, 28.7787, 0.378 ) }
    dend_31 { pt3dadd( 516.173, 694.768, 28.6714, 0.5124 ) }
    dend_31 { pt3dadd( 516.173, 695.912, 28.5852, 0.493 ) }
    dend_31 { pt3dadd( 516.463, 696.932, 28.4847, 0.3864 ) }
    dend_31 { pt3dadd( 516.859, 697.932, 28.4105, 0.303 ) }
    dend_31 { pt3dadd( 516.859, 699.076, 28.3676, 0.2802 ) }
    dend_31 { pt3dadd( 516.859, 700.219, 28.3522, 0.285 ) }
    dend_31 { pt3dadd( 516.739, 701.353, 28.3522, 0.2938 ) }
    dend_31 { pt3dadd( 516.62, 702.487, 28.3682, 0.3112 ) }
    dend_31 { pt3dadd( 516.434, 703.616, 28.4015, 0.3384 ) }
    dend_31 { pt3dadd( 515.946, 704.641, 28.4463, 0.4132 ) }
    dend_31 { pt3dadd( 515.602, 705.71, 28.5202, 0.433 ) }
    dend_31 { pt3dadd( 515.167, 706.761, 28.6202, 0.36 ) }
    dend_31 { pt3dadd( 514.744, 707.782, 28.7445, 0.301 ) }
    dend_31 { pt3dadd( 514.161, 708.693, 28.91, 0.2766 ) }
    dend_31 { pt3dadd( 513.766, 709.766, 29.0489, 0.2784 ) }
    dend_31 { pt3dadd( 513.344, 710.83, 29.1668, 0.2818 ) }
    dend_31 { pt3dadd( 512.982, 711.911, 29.2723, 0.2876 ) }
    dend_31 { pt3dadd( 512.581, 712.983, 29.377, 0.2998 ) }
    dend_31 { pt3dadd( 512.141, 714.036, 29.4902, 0.3162 ) }
    dend_31 { pt3dadd( 512.054, 715.166, 29.6201, 0.3772 ) }
    dend_31 { pt3dadd( 512.054, 716.289, 29.8326, 0.341 ) }
    dend_31 { pt3dadd( 512.108, 717.341, 30.2025, 0.3128 ) }
    dend_31 { pt3dadd( 512.584, 718.337, 30.5906, 0.2994 ) }
    dend_31 { pt3dadd( 512.865, 719.422, 30.9072, 0.3154 ) }
    dend_31 { pt3dadd( 513.431, 720.391, 31.2012, 0.3758 ) }
    dend_31 { pt3dadd( 513.937, 721.371, 31.472, 0.3384 ) }
    dend_31 { pt3dadd( 514.19, 722.476, 31.6758, 0.3084 ) }
    dend_31 { pt3dadd( 514.676, 723.509, 31.8032, 0.2904 ) }
    dend_31 { pt3dadd( 514.898, 724.63, 31.8878, 0.3038 ) }
    dend_31 { pt3dadd( 514.999, 725.763, 31.9452, 0.3292 ) }
    dend_31 { pt3dadd( 515.367, 726.837, 31.9833, 0.3728 ) }
    dend_31 { pt3dadd( 515.739, 727.88, 32.0368, 0.4718 ) }
    dend_31 { pt3dadd( 515.83, 729.017, 32.0704, 0.5672 ) }
    dend_31 { pt3dadd( 515.85, 730.158, 32.0888, 0.4854 ) }
    dend_31 { pt3dadd( 516.233, 731.236, 32.093, 0.446 ) }
    dend_31 { pt3dadd( 516.287, 732.373, 32.0578, 0.515 ) }
    dend_31 { pt3dadd( 516.287, 733.515, 32.0065, 0.638 ) }
    dend_31 { pt3dadd( 516.417, 734.638, 31.9581, 0.6616 ) }
    dend_31 { pt3dadd( 516.63, 735.754, 31.918, 0.5534 ) }
    dend_31 { pt3dadd( 516.818, 736.863, 31.8839, 0.404 ) }
    dend_31 { pt3dadd( 516.859, 737.999, 31.8539, 0.3366 ) }
    dend_31 { pt3dadd( 516.859, 739.143, 31.8242, 0.3384 ) }
    dend_31 { pt3dadd( 516.645, 740.258, 31.7848, 0.413 ) }
    dend_31 { pt3dadd( 516.056, 741.205, 31.7299, 0.433 ) }
    dend_31 { pt3dadd( 515.944, 742.334, 31.6579, 0.3596 ) }
    dend_31 { pt3dadd( 515.666, 743.416, 31.5661, 0.3006 ) }
    dend_31 { pt3dadd( 514.99, 744.321, 31.4023, 0.2758 ) }
    dend_31 { pt3dadd( 514.514, 745.315, 31.1492, 0.277 ) }
    dend_31 { pt3dadd( 514.342, 746.428, 30.8988, 0.279 ) }
    dend_31 { pt3dadd( 514.318, 747.566, 30.6796, 0.283 ) }
    dend_31 { pt3dadd( 514.082, 748.682, 30.4976, 0.29 ) }
    dend_31 { pt3dadd( 513.82, 749.796, 30.378, 0.3042 ) }
    dend_31 { pt3dadd( 513.77, 750.934, 30.315, 0.3242 ) }
    dend_31 { pt3dadd( 513.77, 752.078, 30.294, 0.392 ) }
    dend_31 { pt3dadd( 513.77, 753.222, 30.2949, 0.3696 ) }
    dend_31 { pt3dadd( 513.77, 754.366, 30.3106, 0.3608 ) }
    dend_31 { pt3dadd( 513.656, 755.501, 30.3397, 0.4138 ) }
    dend_31 { pt3dadd( 513.418, 756.596, 30.3808, 0.4044 ) }
    dend_31 { pt3dadd( 513.313, 757.716, 30.4357, 0.4508 ) }
    dend_31 { pt3dadd( 513.313, 758.86, 30.504, 0.457 ) }
    dend_31 { pt3dadd( 513.313, 760.002, 30.6051, 0.3988 ) }
    dend_31 { pt3dadd( 513.313, 761.104, 30.816, 0.3988 ) }
    dend_31 { pt3dadd( 513.313, 762.24, 31.0288, 0.334 ) }
    dend_31 { pt3dadd( 513.425, 763.375, 31.1976, 0.3 ) }
    dend_31 { pt3dadd( 513.542, 764.509, 31.3326, 0.2746 ) }
    dend_31 { pt3dadd( 513.542, 765.648, 31.4588, 0.2748 ) }
    dend_31 { pt3dadd( 513.542, 766.792, 31.5358, 0.2748 ) }
    dend_31 { pt3dadd( 513.542, 767.936, 31.5717, 0.2752 ) }
    dend_31 { pt3dadd( 513.497, 769.077, 31.5871, 0.2756 ) }
    dend_31 { pt3dadd( 513.416, 770.216, 31.5899, 0.2766 ) }
    dend_31 { pt3dadd( 513.213, 771.342, 31.579, 0.2782 ) }
    dend_31 { pt3dadd( 512.863, 772.403, 31.5538, 0.2814 ) }
    dend_31 { pt3dadd( 512.855, 773.547, 31.5182, 0.2872 ) }
    dend_31 { pt3dadd( 512.855, 774.69, 31.4712, 0.299 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_31 { pt3dadd( 512.944, 775.826, 31.4126, 0.3148 ) }
    dend_31 { pt3dadd( 512.97, 776.964, 31.327, 0.3746 ) }
    dend_31 { pt3dadd( 512.899, 778.045, 31.131, 0.336 ) }
    dend_31 { pt3dadd( 512.283, 778.969, 30.9646, 0.304 ) }
    dend_31 { pt3dadd( 512.283, 780.113, 30.8246, 0.282 ) }
    dend_31 { pt3dadd( 512.051, 781.216, 30.7079, 0.288 ) }
    dend_31 { pt3dadd( 511.711, 782.287, 30.5724, 0.3008 ) }
    dend_31 { pt3dadd( 511.711, 783.431, 30.4662, 0.3178 ) }
    dend_31 { pt3dadd( 511.607, 784.562, 30.354, 0.3804 ) }
    dend_31 { pt3dadd( 511.516, 785.7, 30.2389, 0.3464 ) }
    dend_31 { pt3dadd( 511.466, 786.84, 30.1347, 0.3244 ) }
    dend_31 { pt3dadd( 511.092, 787.896, 30.0378, 0.3146 ) }
    dend_31 { pt3dadd( 510.635, 788.913, 29.8788, 0.3742 ) }
    dend_31 { pt3dadd( 510.116, 789.908, 29.7259, 0.3352 ) }
    dend_31 { pt3dadd( 510.076, 791.05, 29.5949, 0.3026 ) }
    dend_31 { pt3dadd( 509.972, 792.178, 29.4442, 0.2792 ) }
    dend_31 { pt3dadd( 509.487, 793.184, 29.2611, 0.2834 ) }
    dend_31 { pt3dadd( 509.309, 794.286, 29.0965, 0.2906 ) }
    dend_31 { pt3dadd( 509.275, 795.428, 28.9808, 0.3056 ) }
    dend_31 { pt3dadd( 509.082, 796.555, 28.8985, 0.3266 ) }
    dend_31 { pt3dadd( 509.08, 797.699, 28.8439, 0.3978 ) }
    dend_31 { pt3dadd( 509.08, 798.843, 28.8126, 0.3738 ) }
    dend_31 { pt3dadd( 509.08, 799.987, 28.7946, 0.3994 ) }
    dend_31 { pt3dadd( 509.08, 801.131, 28.7764, 0.335 ) }
    dend_31 { pt3dadd( 509.098, 802.272, 28.7518, 0.302 ) }
    dend_31 { pt3dadd( 509.288, 803.4, 28.7168, 0.2782 ) }
    dend_31 { pt3dadd( 509.351, 804.541, 28.6647, 0.2814 ) }
    dend_31 { pt3dadd( 509.423, 805.68, 28.5933, 0.287 ) }
    dend_31 { pt3dadd( 509.423, 806.824, 28.5032, 0.2988 ) }
    dend_31 { pt3dadd( 509.544, 807.953, 28.397, 0.3142 ) }
    dend_31 { pt3dadd( 509.759, 808.917, 28.163, 0.3734 ) }
    dend_31 { pt3dadd( 510.323, 809.502, 27.7981, 0.334 ) }
    dend_31 { pt3dadd( 510.341, 810.644, 27.5302, 0.3002 ) }
    dend_31 { pt3dadd( 510.553, 811.744, 27.3792, 0.2748 ) }
    dend_31 { pt3dadd( 510.567, 812.885, 27.2969, 0.275 ) }
    dend_31 { pt3dadd( 510.567, 814.029, 27.2779, 0.2754 ) }
    dend_31 { pt3dadd( 510.567, 815.173, 27.3165, 0.276 ) }
    dend_31 { pt3dadd( 510.224, 816.207, 27.4159, 0.2772 ) }
    dend_31 { pt3dadd( 510.0, 817.287, 27.5551, 0.2796 ) }
    dend_31 { pt3dadd( 509.756, 818.403, 27.6696, 0.284 ) }
    dend_31 { pt3dadd( 509.474, 819.505, 27.7813, 0.292 ) }
    dend_31 { pt3dadd( 509.423, 820.639, 27.8998, 0.3064 ) }
    dend_31 { pt3dadd( 509.423, 821.783, 27.991, 0.3356 ) }
    dend_31 { pt3dadd( 509.454, 822.926, 28.0585, 0.3784 ) }
    dend_31 { pt3dadd( 509.7, 824.02, 28.1498, 0.513 ) }
    dend_31 { pt3dadd( 509.919, 825.141, 28.2223, 0.4942 ) }
    dend_31 { pt3dadd( 510.145, 826.263, 28.2797, 0.3886 ) }
    dend_31 { pt3dadd( 510.224, 827.403, 28.3268, 0.3072 ) }
    dend_31 { pt3dadd( 510.327, 828.539, 28.369, 0.2876 ) }
    dend_31 { pt3dadd( 510.338, 829.683, 28.4066, 0.2998 ) }
    dend_31 { pt3dadd( 510.346, 830.815, 28.4819, 0.316 ) }
    dend_31 { pt3dadd( 510.55, 831.93, 28.5796, 0.377 ) }
    dend_31 { pt3dadd( 510.651, 833.058, 28.649, 0.3408 ) }
    dend_31 { pt3dadd( 511.04, 834.132, 28.6905, 0.3124 ) }
    dend_31 { pt3dadd( 511.139, 835.266, 28.7036, 0.2988 ) }
    dend_31 { pt3dadd( 511.271, 836.4, 28.6846, 0.3142 ) }
    dend_31 { pt3dadd( 511.482, 837.522, 28.6297, 0.3734 ) }
    dend_31 { pt3dadd( 511.482, 838.666, 28.5452, 0.3338 ) }
    dend_31 { pt3dadd( 511.482, 839.81, 28.4385, 0.3 ) }
    dend_31 { pt3dadd( 511.482, 840.954, 28.3114, 0.2746 ) }
    dend_31 { pt3dadd( 511.025, 841.467, 27.6189, 0.2746 ) }
    dend_31 { pt3dadd( 511.025, 842.611, 27.3204, 0.2746 ) }
    dend_31 { pt3dadd( 511.025, 843.755, 27.0973, 0.2746 ) }
    dend_31 { pt3dadd( 511.025, 844.899, 26.9444, 0.2746 ) }
    dend_31 { pt3dadd( 511.025, 846.043, 26.8554, 0.2746 ) }
    dend_31 { pt3dadd( 511.139, 847.173, 26.8047, 0.2746 ) }
    dend_31 { pt3dadd( 511.139, 848.314, 26.7638, 0.2746 ) }
    dend_31 { pt3dadd( 510.997, 849.43, 26.7414, 0.2746 ) }
    dend_31 { pt3dadd( 510.282, 850.302, 26.7392, 0.2746 ) }
    dend_31 { pt3dadd( 509.688, 851.242, 26.7568, 0.2746 ) }
    dend_31 { pt3dadd( 509.164, 852.229, 26.7938, 0.2746 ) }
    dend_31 { pt3dadd( 508.66, 853.243, 26.8624, 0.2746 ) }
    dend_31 { pt3dadd( 508.031, 854.16, 27.013, 0.2746 ) }
    dend_31 { pt3dadd( 507.499, 855.13, 27.1687, 0.2746 ) }
    dend_31 { pt3dadd( 507.109, 856.186, 27.2885, 0.2746 ) }
    dend_31 { pt3dadd( 506.757, 857.252, 27.3896, 0.2746 ) }
    dend_31 { pt3dadd( 506.042, 858.115, 27.4688, 0.2746 ) }
    dend_31 { pt3dadd( 505.768, 859.218, 27.4982, 0.2746 ) }
    dend_31 { pt3dadd( 505.67, 860.344, 27.4854, 0.2746 ) }
    dend_31 { pt3dadd( 504.956, 861.133, 27.449, 0.2746 ) }
    dend_31 { pt3dadd( 504.708, 862.189, 27.3008, 0.2746 ) }
    dend_31 { pt3dadd( 504.356, 863.242, 27.1124, 0.2746 ) }
    dend_31 { pt3dadd( 504.114, 864.349, 26.9758, 0.2746 ) }
    dend_31 { pt3dadd( 503.599, 865.301, 26.9223, 0.2746 ) }
    dend_31 { pt3dadd( 503.282, 866.391, 26.9016, 0.2746 ) }
    dend_31 { pt3dadd( 502.433, 867.09, 26.9122, 0.2746 ) }
    dend_31 { pt3dadd( 501.823, 868.054, 26.9522, 0.2746 ) }
    dend_31 { pt3dadd( 500.985, 868.706, 27.0043, 0.2746 ) }
    dend_31 { pt3dadd( 500.573, 869.74, 27.0595, 0.2746 ) }
    dend_31 { pt3dadd( 500.283, 870.829, 27.1485, 0.2746 ) }
    dend_31 { pt3dadd( 500.271, 871.972, 27.2541, 0.2746 ) }
    dend_31 { pt3dadd( 500.271, 873.116, 27.363, 0.2746 ) }
    dend_31 { pt3dadd( 500.271, 874.241, 27.545, 0.2746 ) }
    dend_31 { pt3dadd( 500.271, 875.383, 27.7217, 0.2746 ) }
    dend_31 { pt3dadd( 500.271, 876.527, 27.89, 0.2746 ) }
    dend_31 { pt3dadd( 500.271, 877.671, 28.0655, 0.2746 ) }
    dend_31 { pt3dadd( 500.271, 878.815, 28.2638, 0.2746 ) }
    dend_31 { pt3dadd( 500.271, 879.959, 28.4911, 0.2746 ) }
    dend_31 { pt3dadd( 500.271, 881.103, 28.7462, 0.2746 ) }
    dend_31 { pt3dadd( 500.166, 881.914, 29.2779, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_31 { pt3dadd( 500.157, 882.694, 30.0392, 0.2746 ) }
    dend_31 { pt3dadd( 500.157, 883.802, 30.7194, 0.2746 ) }
    dend_31 { pt3dadd( 500.157, 884.946, 31.2298, 0.2746 ) }
    dend_31 { pt3dadd( 500.157, 886.09, 31.5804, 0.2746 ) }
    dend_31 { pt3dadd( 500.157, 887.234, 31.7848, 0.2746 ) }
    dend_31 { pt3dadd( 500.157, 888.378, 31.8567, 0.2746 ) }
    dend_31 { pt3dadd( 500.167, 889.522, 31.8522, 0.2746 ) }
    dend_31 { pt3dadd( 500.355, 890.65, 31.8259, 0.2746 ) }
    dend_31 { pt3dadd( 500.386, 891.792, 31.7873, 0.2746 ) }
    dend_31 { pt3dadd( 500.5, 892.922, 31.7324, 0.2746 ) }
    dend_31 { pt3dadd( 500.807, 894.023, 31.6599, 0.2746 ) }
    dend_31 { pt3dadd( 501.172, 895.106, 31.5689, 0.2746 ) }
    dend_31 { pt3dadd( 501.318, 896.221, 31.4247, 0.2746 ) }
    dend_31 { pt3dadd( 501.55, 897.268, 31.1637, 0.2746 ) }
    dend_31 { pt3dadd( 501.882, 898.323, 30.8728, 0.2746 ) }
    dend_31 { pt3dadd( 502.161, 899.427, 30.6572, 0.2746 ) }
    dend_31 { pt3dadd( 502.43, 900.526, 30.515, 0.2746 ) }
    dend_31 { pt3dadd( 502.7, 901.628, 30.443, 0.2746 ) }
    dend_31 { pt3dadd( 502.818, 902.764, 30.4366, 0.2746 ) }
    dend_31 { pt3dadd( 503.398, 903.688, 30.4861, 0.2746 ) }
    dend_31 { pt3dadd( 503.575, 904.793, 30.6074, 0.2746 ) }
    dend_31 { pt3dadd( 503.932, 905.815, 30.7728, 0.2746 ) }
    dend_31 { pt3dadd( 504.16, 906.916, 30.928, 0.2746 ) }
    dend_31 { pt3dadd( 504.475, 908.01, 31.0929, 0.2746 ) }
    dend_31 { pt3dadd( 504.504, 909.075, 31.365, 0.2748 ) }
    dend_31 { pt3dadd( 504.504, 910.217, 31.5927, 0.2748 ) }
    dend_31 { pt3dadd( 504.504, 911.361, 31.7607, 0.2752 ) }
    dend_31 { pt3dadd( 504.504, 912.505, 31.8825, 0.2756 ) }
    dend_31 { pt3dadd( 504.717, 913.618, 31.9735, 0.2766 ) }
    dend_31 { pt3dadd( 504.733, 914.762, 32.0443, 0.2782 ) }
    dend_31 { pt3dadd( 504.884, 915.869, 32.0984, 0.2814 ) }
    dend_31 { pt3dadd( 505.19, 916.895, 32.1303, 0.287 ) }
    dend_31 { pt3dadd( 505.294, 918.028, 32.23, 0.2988 ) }
    dend_31 { pt3dadd( 505.812, 919.02, 32.4425, 0.3142 ) }
    dend_31 { pt3dadd( 505.908, 920.096, 32.7891, 0.3734 ) }
    dend_31 { pt3dadd( 506.296, 920.119, 33.4788, 0.3338 ) }
    dend_31 { pt3dadd( 507.029, 920.744, 34.1001, 0.3 ) }
    dend_31 { pt3dadd( 507.284, 921.821, 34.6002, 0.2746 ) }
    dend_31 { pt3dadd( 507.64, 922.888, 34.9233, 0.2746 ) }
    dend_31 { pt3dadd( 508.457, 923.645, 35.075, 0.2746 ) }
    dend_31 { pt3dadd( 509.086, 924.431, 35.0767, 0.2746 ) }
    dend_31 { pt3dadd( 509.512, 925.463, 34.9541, 0.2748 ) }
    dend_31 { pt3dadd( 510.198, 925.964, 34.6408, 0.275 ) }
    dend_31 { pt3dadd( 510.639, 926.911, 34.2437, 0.2754 ) }
    dend_31 { pt3dadd( 511.274, 927.857, 33.8786, 0.2762 ) }
    dend_31 { pt3dadd( 511.789, 928.844, 33.5219, 0.2776 ) }
    dend_31 { pt3dadd( 511.945, 929.971, 33.2035, 0.2802 ) }
    dend_31 { pt3dadd( 512.599, 930.105, 32.6844, 0.285 ) }
    dend_31 { pt3dadd( 513.561, 930.646, 32.2888, 0.2938 ) }
    dend_31 { pt3dadd( 513.999, 931.549, 32.0071, 0.3112 ) }
    dend_31 { pt3dadd( 514.533, 932.512, 31.7772, 0.3384 ) }
    dend_31 { pt3dadd( 515.468, 933.17, 31.6459, 0.4132 ) }
    dend_31 { pt3dadd( 516.366, 933.861, 31.5997, 0.4332 ) }
    dend_31 { pt3dadd( 516.859, 934.778, 31.6736, 0.36 ) }
    dend_31 { pt3dadd( 517.228, 935.739, 31.7668, 0.3012 ) }
    dend_31 { pt3dadd( 517.856, 936.677, 31.8774, 0.277 ) }
    dend_31 { pt3dadd( 518.118, 937.781, 32.0065, 0.279 ) }
    dend_31 { pt3dadd( 518.118, 938.925, 32.1504, 0.2828 ) }
    dend_31 { pt3dadd( 518.721, 939.287, 32.5052, 0.2894 ) }
    dend_31 { pt3dadd( 519.367, 940.211, 32.8059, 0.3032 ) }
    dend_31 { pt3dadd( 520.152, 941.038, 33.0691, 0.3224 ) }
    dend_31 { pt3dadd( 520.689, 942.019, 33.3066, 0.3898 ) }
    dend_31 { pt3dadd( 521.547, 942.615, 33.6092, 0.3588 ) }
    dend_31 { pt3dadd( 522.539, 943.173, 33.8352, 0.3728 ) }
    dend_31 { pt3dadd( 523.615, 943.457, 34.048, 0.2796 ) }
    dend_31 { pt3dadd( 524.753, 943.457, 34.44, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 546.135, 628.867, 34.3244, 0.708 ) }
    dend_30 { pt3dadd( 546.901, 629.2, 33.3259, 0.4576 ) }
    dend_30 { pt3dadd( 547.947, 629.397, 31.85, 0.4066 ) }
    dend_30 { pt3dadd( 549.014, 629.229, 31.2281, 0.3834 ) }
    dend_30 { pt3dadd( 549.932, 629.397, 30.3999, 0.4506 ) }
    dend_30 { pt3dadd( 550.269, 630.354, 29.561, 0.4966 ) }
    dend_30 { pt3dadd( 550.85, 631.304, 28.7571, 0.5056 ) }
    dend_30 { pt3dadd( 551.598, 631.432, 27.8004, 0.4366 ) }
    dend_30 { pt3dadd( 552.343, 630.862, 26.7904, 0.4944 ) }
    dend_30 { pt3dadd( 552.484, 630.0, 25.7452, 0.387 ) }
    dend_30 { pt3dadd( 552.822, 628.952, 24.869, 0.3136 ) }
    dend_30 { pt3dadd( 553.268, 627.952, 24.3454, 0.2542 ) }
    dend_30 { pt3dadd( 554.219, 627.393, 24.0722, 0.2288 ) }
    dend_30 { pt3dadd( 554.851, 626.636, 23.3528, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 80/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 536.968, 657.872, 35.2747, 0.4222 ) }
    dend_28 { pt3dadd( 536.917, 658.76, 35.4497, 0.4494 ) }
    dend_28 { pt3dadd( 536.718, 659.88, 35.6647, 0.3914 ) }
    dend_28 { pt3dadd( 536.518, 661.001, 35.9052, 0.354 ) }
    dend_28 { pt3dadd( 536.318, 662.122, 36.1561, 0.4014 ) }
    dend_28 { pt3dadd( 536.117, 663.242, 36.4017, 0.3804 ) }
    dend_28 { pt3dadd( 535.917, 664.363, 36.6159, 0.4116 ) }
    dend_28 { pt3dadd( 535.41, 665.387, 36.7632, 0.3584 ) }
    dend_28 { pt3dadd( 534.898, 666.411, 36.8668, 0.3402 ) }
    dend_28 { pt3dadd( 534.462, 667.466, 36.9401, 0.3748 ) }
    dend_28 { pt3dadd( 534.073, 668.542, 36.9961, 0.3366 ) }
    dend_28 { pt3dadd( 533.685, 669.619, 37.0462, 0.3048 ) }
    dend_28 { pt3dadd( 533.296, 670.694, 37.1003, 0.2836 ) }
    dend_28 { pt3dadd( 532.972, 671.786, 37.1974, 0.2912 ) }
    dend_28 { pt3dadd( 532.653, 672.881, 37.329, 0.3066 ) }
    dend_28 { pt3dadd( 532.335, 673.975, 37.4822, 0.3286 ) }
    dend_28 { pt3dadd( 532.017, 675.069, 37.6457, 0.4012 ) }
    dend_28 { pt3dadd( 531.857, 676.194, 37.786, 0.3802 ) }
    dend_28 { pt3dadd( 531.78, 677.336, 37.8904, 0.4114 ) }
    dend_28 { pt3dadd( 531.705, 678.477, 37.9638, 0.358 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_28 { pt3dadd( 531.478, 679.596, 38.017, 0.3396 ) }
    dend_28 { pt3dadd( 531.136, 680.673, 38.0621, 0.3734 ) }
    dend_28 { pt3dadd( 530.432, 681.575, 38.1128, 0.334 ) }
    dend_28 { pt3dadd( 529.726, 682.475, 38.1788, 0.3002 ) }
    dend_28 { pt3dadd( 529.222, 683.454, 38.2645, 0.2748 ) }
    dend_28 { pt3dadd( 529.155, 684.591, 38.3751, 0.2752 ) }
    dend_28 { pt3dadd( 529.387, 685.68, 38.5921, 0.2756 ) }
    dend_28 { pt3dadd( 529.618, 686.769, 38.883, 0.2766 ) }
    dend_28 { pt3dadd( 529.306, 687.755, 39.1642, 0.2782 ) }
    dend_28 { pt3dadd( 528.615, 688.667, 39.3915, 0.2814 ) }
    dend_28 { pt3dadd( 527.925, 689.58, 39.573, 0.287 ) }
    dend_28 { pt3dadd( 527.235, 690.492, 39.7174, 0.2988 ) }
    dend_28 { pt3dadd( 526.545, 691.405, 39.8415, 0.3142 ) }
    dend_28 { pt3dadd( 525.866, 692.325, 39.9823, 0.3734 ) }
    dend_28 { pt3dadd( 525.193, 693.25, 40.1666, 0.3338 ) }
    dend_28 { pt3dadd( 524.521, 694.176, 40.4034, 0.3 ) }
    dend_28 { pt3dadd( 523.847, 695.1, 40.6899, 0.2746 ) }
    dend_28 { pt3dadd( 523.418, 695.529, 41.2714, 0.2746 ) }
    dend_28 { pt3dadd( 523.113, 695.704, 42.1845, 0.2746 ) }
    dend_28 { pt3dadd( 523.151, 696.983, 42.9192, 0.2746 ) }
    dend_28 { pt3dadd( 523.151, 698.127, 43.486, 0.2746 ) }
    dend_28 { pt3dadd( 523.151, 699.271, 43.897, 0.2746 ) }
    dend_28 { pt3dadd( 523.151, 700.401, 44.2126, 0.2746 ) }
    dend_28 { pt3dadd( 523.151, 701.505, 44.4595, 0.2746 ) }
    dend_28 { pt3dadd( 523.185, 702.647, 44.5984, 0.2746 ) }
    dend_28 { pt3dadd( 523.362, 703.777, 44.7054, 0.2746 ) }
    dend_28 { pt3dadd( 523.38, 704.92, 44.7843, 0.2746 ) }
    dend_28 { pt3dadd( 523.38, 706.064, 44.8398, 0.2746 ) }
    dend_28 { pt3dadd( 523.38, 707.208, 44.8767, 0.2746 ) }
    dend_28 { pt3dadd( 523.38, 708.352, 44.9058, 0.2746 ) }
    dend_28 { pt3dadd( 523.38, 709.496, 44.9417, 0.2746 ) }
    dend_28 { pt3dadd( 523.38, 710.637, 44.9999, 0.2746 ) }
    dend_28 { pt3dadd( 523.38, 711.765, 45.1212, 0.2746 ) }
    dend_28 { pt3dadd( 523.38, 712.909, 45.2197, 0.2746 ) }
    dend_28 { pt3dadd( 523.38, 714.053, 45.2978, 0.2746 ) }
    dend_28 { pt3dadd( 523.224, 715.183, 45.3583, 0.2746 ) }
    dend_28 { pt3dadd( 522.538, 716.039, 45.4048, 0.2748 ) }
    dend_28 { pt3dadd( 521.919, 716.98, 45.4401, 0.2748 ) }
    dend_28 { pt3dadd( 521.118, 717.763, 45.4695, 0.2752 ) }
    dend_28 { pt3dadd( 520.346, 718.536, 45.5045, 0.2756 ) }
    dend_28 { pt3dadd( 519.339, 718.999, 45.5846, 0.2766 ) }
    dend_28 { pt3dadd( 518.726, 719.944, 45.6918, 0.2784 ) }
    dend_28 { pt3dadd( 518.023, 720.841, 45.7792, 0.2816 ) }
    dend_28 { pt3dadd( 517.312, 721.73, 45.8444, 0.2874 ) }
    dend_28 { pt3dadd( 516.699, 722.664, 45.8892, 0.2994 ) }
    dend_28 { pt3dadd( 516.149, 723.569, 45.9155, 0.3152 ) }
    dend_28 { pt3dadd( 515.759, 724.636, 45.9256, 0.3754 ) }
    dend_28 { pt3dadd( 515.205, 725.636, 45.9287, 0.3376 ) }
    dend_28 { pt3dadd( 514.672, 726.644, 45.932, 0.3068 ) }
    dend_28 { pt3dadd( 514.114, 727.494, 45.9368, 0.287 ) }
    dend_28 { pt3dadd( 513.855, 728.578, 45.9435, 0.2988 ) }
    dend_28 { pt3dadd( 513.154, 729.475, 45.953, 0.3142 ) }
    dend_28 { pt3dadd( 512.566, 730.451, 45.9662, 0.3734 ) }
    dend_28 { pt3dadd( 511.974, 731.426, 45.9847, 0.3338 ) }
    dend_28 { pt3dadd( 511.217, 732.266, 46.0102, 0.3 ) }
    dend_28 { pt3dadd( 510.741, 733.302, 46.0446, 0.2746 ) }
    dend_28 { pt3dadd( 510.317, 734.36, 46.0958, 0.2746 ) }
    dend_28 { pt3dadd( 510.115, 735.477, 46.1698, 0.2746 ) }
    dend_28 { pt3dadd( 510.11, 736.619, 46.2689, 0.2746 ) }
    dend_28 { pt3dadd( 510.11, 737.763, 46.3926, 0.2746 ) }
    dend_28 { pt3dadd( 510.11, 738.907, 46.5374, 0.2746 ) }
    dend_28 { pt3dadd( 509.865, 739.664, 46.9529, 0.2746 ) }
    dend_28 { pt3dadd( 509.2, 740.529, 47.3595, 0.2746 ) }
    dend_28 { pt3dadd( 508.572, 741.442, 47.6711, 0.2746 ) }
    dend_28 { pt3dadd( 508.272, 742.546, 47.8923, 0.2746 ) }
    dend_28 { pt3dadd( 507.732, 743.551, 48.0304, 0.2746 ) }
    dend_28 { pt3dadd( 507.254, 744.52, 48.0931, 0.2746 ) }
    dend_28 { pt3dadd( 507.249, 745.664, 48.0892, 0.2746 ) }
    dend_28 { pt3dadd( 507.113, 746.793, 48.0435, 0.2746 ) }
    dend_28 { pt3dadd( 506.726, 747.846, 47.9937, 0.2746 ) }
    dend_28 { pt3dadd( 505.647, 748.081, 47.957, 0.2746 ) }
    dend_28 { pt3dadd( 504.529, 748.318, 47.9326, 0.2746 ) }
    dend_28 { pt3dadd( 503.494, 748.762, 47.9206, 0.2746 ) }
    dend_28 { pt3dadd( 502.715, 749.578, 47.9212, 0.2746 ) }
    dend_28 { pt3dadd( 502.033, 750.495, 47.9343, 0.2746 ) }
    dend_28 { pt3dadd( 501.2, 751.269, 47.9556, 0.2746 ) }
    dend_28 { pt3dadd( 500.501, 752.15, 47.985, 0.2746 ) }
    dend_28 { pt3dadd( 499.833, 753.068, 48.0278, 0.2746 ) }
    dend_28 { pt3dadd( 499.244, 754.048, 48.0889, 0.2746 ) }
    dend_28 { pt3dadd( 498.77, 755.087, 48.172, 0.2746 ) }
    dend_28 { pt3dadd( 498.393, 756.153, 48.2793, 0.2746 ) }
    dend_28 { pt3dadd( 497.574, 756.836, 48.4134, 0.2746 ) }
    dend_28 { pt3dadd( 497.38, 757.764, 48.725, 0.2746 ) }
    dend_28 { pt3dadd( 496.97, 758.788, 49.051, 0.2746 ) }
    dend_28 { pt3dadd( 496.736, 759.861, 49.3856, 0.2746 ) }
    dend_28 { pt3dadd( 496.254, 760.885, 49.684, 0.2746 ) }
    dend_28 { pt3dadd( 495.33, 761.486, 49.8988, 0.2746 ) }
    dend_28 { pt3dadd( 494.746, 762.462, 50.0368, 0.2746 ) }
    dend_28 { pt3dadd( 494.368, 763.538, 50.1074, 0.2746 ) }
    dend_28 { pt3dadd( 494.322, 764.676, 50.1463, 0.2748 ) }
    dend_28 { pt3dadd( 494.019, 765.653, 50.1676, 0.2748 ) }
    dend_28 { pt3dadd( 493.621, 766.724, 50.1866, 0.2752 ) }
    dend_28 { pt3dadd( 493.162, 767.768, 50.2132, 0.2756 ) }
    dend_28 { pt3dadd( 492.762, 768.838, 50.2505, 0.2766 ) }
    dend_28 { pt3dadd( 492.096, 769.754, 50.3014, 0.2782 ) }
    dend_28 { pt3dadd( 491.444, 770.691, 50.3728, 0.2814 ) }
    dend_28 { pt3dadd( 490.829, 771.641, 50.4778, 0.287 ) }
    dend_28 { pt3dadd( 490.152, 772.557, 50.6246, 0.2988 ) }
    dend_28 { pt3dadd( 489.452, 773.407, 50.8155, 0.3142 ) }
    dend_28 { pt3dadd( 488.838, 774.268, 51.0482, 0.3734 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_28 { pt3dadd( 488.178, 774.863, 51.4758, 0.3338 ) }
    dend_28 { pt3dadd( 487.779, 775.395, 52.2018, 0.3 ) }
    dend_28 { pt3dadd( 487.687, 776.398, 52.862, 0.2746 ) }
    dend_28 { pt3dadd( 487.617, 777.537, 53.363, 0.2744 ) }
    dend_28 { pt3dadd( 487.185, 778.577, 53.7149, 0.2744 ) }
    dend_28 { pt3dadd( 486.769, 779.613, 53.9308, 0.2742 ) }
    dend_28 { pt3dadd( 486.523, 780.705, 54.0254, 0.274 ) }
    dend_28 { pt3dadd( 486.086, 781.703, 54.04, 0.2736 ) }
    dend_28 { pt3dadd( 486.086, 782.847, 54.04, 0.2728 ) }
    dend_28 { pt3dadd( 486.086, 783.991, 54.04, 0.2712 ) }
    dend_28 { pt3dadd( 486.086, 785.135, 54.04, 0.2684 ) }
    dend_28 { pt3dadd( 486.086, 786.279, 54.04, 0.2626 ) }
    dend_28 { pt3dadd( 486.086, 787.423, 54.04, 0.2542 ) }
    dend_28 { pt3dadd( 486.051, 788.564, 54.04, 0.2288 ) }
    dend_28 { pt3dadd( 485.971, 789.703, 54.04, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 15/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 536.968, 657.872, 35.2747, 0.4222 ) }
    dend_27 { pt3dadd( 537.2, 658.489, 34.825, 0.2288 ) }
    dend_27 { pt3dadd( 537.725, 659.478, 34.2297, 0.3982 ) }
    dend_27 { pt3dadd( 538.342, 660.427, 33.9769, 0.3808 ) }
    dend_27 { pt3dadd( 538.655, 661.49, 33.6902, 0.3828 ) }
    dend_27 { pt3dadd( 538.649, 662.619, 33.3592, 0.4494 ) }
    dend_27 { pt3dadd( 538.398, 663.711, 32.9876, 0.4948 ) }
    dend_27 { pt3dadd( 538.048, 664.763, 32.5671, 0.5008 ) }
    dend_27 { pt3dadd( 537.691, 665.834, 32.1703, 0.4342 ) }
    dend_27 { pt3dadd( 537.23, 666.877, 31.8321, 0.4588 ) }
    dend_27 { pt3dadd( 536.657, 667.838, 31.4857, 0.4714 ) }
    dend_27 { pt3dadd( 536.117, 668.826, 31.1475, 0.4268 ) }
    dend_27 { pt3dadd( 535.638, 669.861, 30.8658, 0.4454 ) }
    dend_27 { pt3dadd( 535.62, 670.97, 30.6354, 0.4456 ) }
    dend_27 { pt3dadd( 535.573, 672.102, 30.4279, 0.3844 ) }
    dend_27 { pt3dadd( 535.469, 673.236, 30.2064, 0.3412 ) }
    dend_27 { pt3dadd( 535.268, 674.298, 29.8964, 0.3766 ) }
    dend_27 { pt3dadd( 535.083, 675.365, 29.5182, 0.3396 ) }
    dend_27 { pt3dadd( 534.995, 676.491, 29.1852, 0.3108 ) }
    dend_27 { pt3dadd( 534.745, 677.599, 28.9397, 0.2944 ) }
    dend_27 { pt3dadd( 534.351, 678.672, 28.7764, 0.3122 ) }
    dend_27 { pt3dadd( 533.768, 679.642, 28.7056, 0.34 ) }
    dend_27 { pt3dadd( 532.952, 680.395, 28.7448, 0.4164 ) }
    dend_27 { pt3dadd( 532.16, 681.201, 28.7818, 0.439 ) }
    dend_27 { pt3dadd( 531.522, 682.102, 28.6745, 0.371 ) }
    dend_27 { pt3dadd( 530.835, 682.995, 28.4855, 0.3214 ) }
    dend_27 { pt3dadd( 530.346, 684.015, 28.2554, 0.315 ) }
    dend_27 { pt3dadd( 529.891, 685.034, 27.9364, 0.3454 ) }
    dend_27 { pt3dadd( 529.389, 686.049, 27.5873, 0.4262 ) }
    dend_27 { pt3dadd( 528.92, 687.09, 27.2602, 0.4582 ) }
    dend_27 { pt3dadd( 528.722, 688.195, 26.9318, 0.4012 ) }
    dend_27 { pt3dadd( 528.931, 689.279, 26.5709, 0.404 ) }
    dend_27 { pt3dadd( 529.516, 690.242, 26.2564, 0.339 ) }
    dend_27 { pt3dadd( 529.695, 691.339, 25.9907, 0.3304 ) }
    dend_27 { pt3dadd( 530.015, 692.349, 25.2, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 50/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 558.699, 670.609, 34.897, 0.3266 ) }
    dend_23 { pt3dadd( 558.961, 671.12, 34.8065, 0.3962 ) }
    dend_23 { pt3dadd( 559.615, 672.051, 34.8356, 0.377 ) }
    dend_23 { pt3dadd( 560.271, 672.981, 34.9471, 0.3758 ) }
    dend_23 { pt3dadd( 560.925, 673.912, 35.1123, 0.4352 ) }
    dend_23 { pt3dadd( 561.58, 674.842, 35.3041, 0.4752 ) }
    dend_23 { pt3dadd( 562.235, 675.773, 35.499, 0.4324 ) }
    dend_23 { pt3dadd( 562.975, 676.645, 35.6378, 0.463 ) }
    dend_23 { pt3dadd( 563.722, 677.511, 35.7246, 0.4434 ) }
    dend_23 { pt3dadd( 564.313, 678.457, 35.7694, 0.5488 ) }
    dend_23 { pt3dadd( 564.578, 679.57, 35.7826, 0.5132 ) }
    dend_23 { pt3dadd( 564.843, 680.683, 35.7731, 0.425 ) }
    dend_23 { pt3dadd( 565.107, 681.797, 35.7493, 0.3694 ) }
    dend_23 { pt3dadd( 565.327, 682.915, 35.7146, 0.4294 ) }
    dend_23 { pt3dadd( 565.394, 684.055, 35.6538, 0.4342 ) }
    dend_23 { pt3dadd( 565.462, 685.195, 35.5762, 0.5022 ) }
    dend_23 { pt3dadd( 565.529, 686.336, 35.4922, 0.5712 ) }
    dend_23 { pt3dadd( 565.603, 687.478, 35.4312, 0.5176 ) }
    dend_23 { pt3dadd( 565.675, 688.619, 35.3926, 0.3848 ) }
    dend_23 { pt3dadd( 565.968, 689.712, 35.376, 0.3 ) }
    dend_23 { pt3dadd( 566.287, 690.805, 35.3797, 0.2748 ) }
    dend_23 { pt3dadd( 566.508, 691.929, 35.4001, 0.2748 ) }
    dend_23 { pt3dadd( 566.727, 693.051, 35.4348, 0.2752 ) }
    dend_23 { pt3dadd( 566.645, 694.133, 35.4841, 0.2756 ) }
    dend_23 { pt3dadd( 566.177, 695.173, 35.5522, 0.2766 ) }
    dend_23 { pt3dadd( 565.932, 696.291, 35.6429, 0.2782 ) }
    dend_23 { pt3dadd( 565.722, 696.81, 35.7722, 0.2814 ) }
    dend_23 { pt3dadd( 565.203, 697.818, 35.98, 0.287 ) }
    dend_23 { pt3dadd( 564.685, 698.825, 36.2494, 0.2988 ) }
    dend_23 { pt3dadd( 564.167, 699.833, 36.5641, 0.3142 ) }
    dend_23 { pt3dadd( 563.649, 700.841, 36.9085, 0.3734 ) }
    dend_23 { pt3dadd( 563.129, 701.849, 37.2686, 0.3338 ) }
    dend_23 { pt3dadd( 562.611, 702.856, 37.6306, 0.3 ) }
    dend_23 { pt3dadd( 562.093, 703.864, 37.9831, 0.2746 ) }
    dend_23 { pt3dadd( 561.575, 704.871, 38.3228, 0.2746 ) }
    dend_23 { pt3dadd( 561.057, 705.879, 38.6456, 0.2746 ) }
    dend_23 { pt3dadd( 560.538, 706.887, 38.9488, 0.2746 ) }
    dend_23 { pt3dadd( 560.035, 707.905, 39.2162, 0.2746 ) }
    dend_23 { pt3dadd( 559.575, 708.953, 39.4117, 0.2746 ) }
    dend_23 { pt3dadd( 559.115, 710.0, 39.5539, 0.2746 ) }
    dend_23 { pt3dadd( 558.655, 711.047, 39.6617, 0.2746 ) }
    dend_23 { pt3dadd( 558.195, 712.095, 39.7513, 0.2746 ) }
    dend_23 { pt3dadd( 558.04, 713.198, 39.8583, 0.2746 ) }
    dend_23 { pt3dadd( 558.081, 714.338, 40.0019, 0.2746 ) }
    dend_23 { pt3dadd( 558.121, 715.477, 40.1806, 0.2746 ) }
    dend_23 { pt3dadd( 558.161, 716.617, 40.3844, 0.2748 ) }
    dend_23 { pt3dadd( 558.201, 717.756, 40.6056, 0.2748 ) }
    dend_23 { pt3dadd( 558.241, 718.895, 40.8358, 0.2752 ) }
    dend_23 { pt3dadd( 558.281, 720.035, 41.0687, 0.2756 ) }
    dend_23 { pt3dadd( 558.321, 721.173, 41.3014, 0.2766 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_23 { pt3dadd( 558.362, 722.312, 41.5338, 0.2782 ) }
    dend_23 { pt3dadd( 558.402, 723.452, 41.7662, 0.2814 ) }
    dend_23 { pt3dadd( 558.443, 724.591, 41.998, 0.287 ) }
    dend_23 { pt3dadd( 558.482, 725.731, 42.2293, 0.2988 ) }
    dend_23 { pt3dadd( 558.523, 726.87, 42.4603, 0.3142 ) }
    dend_23 { pt3dadd( 558.55, 728.008, 42.6902, 0.3734 ) }
    dend_23 { pt3dadd( 558.273, 729.115, 42.9184, 0.3338 ) }
    dend_23 { pt3dadd( 557.996, 730.22, 43.1449, 0.3 ) }
    dend_23 { pt3dadd( 557.719, 731.326, 43.3698, 0.2746 ) }
    dend_23 { pt3dadd( 557.443, 732.432, 43.5921, 0.2746 ) }
    dend_23 { pt3dadd( 557.166, 733.539, 43.8119, 0.2746 ) }
    dend_23 { pt3dadd( 556.889, 734.645, 44.0278, 0.2746 ) }
    dend_23 { pt3dadd( 556.613, 735.751, 44.2389, 0.2746 ) }
    dend_23 { pt3dadd( 556.336, 736.857, 44.4438, 0.2746 ) }
    dend_23 { pt3dadd( 556.06, 737.964, 44.6415, 0.2746 ) }
    dend_23 { pt3dadd( 555.909, 739.094, 44.819, 0.2746 ) }
    dend_23 { pt3dadd( 555.788, 740.23, 44.9764, 0.2746 ) }
    dend_23 { pt3dadd( 555.669, 741.367, 45.1186, 0.2746 ) }
    dend_23 { pt3dadd( 555.549, 742.504, 45.2497, 0.2746 ) }
    dend_23 { pt3dadd( 555.43, 743.64, 45.3734, 0.2746 ) }
    dend_23 { pt3dadd( 555.31, 744.777, 45.4936, 0.2746 ) }
    dend_23 { pt3dadd( 555.19, 745.913, 45.6131, 0.2746 ) }
    dend_23 { pt3dadd( 555.071, 747.05, 45.7327, 0.2746 ) }
    dend_23 { pt3dadd( 554.951, 748.187, 45.852, 0.2746 ) }
    dend_23 { pt3dadd( 554.831, 749.323, 45.9715, 0.2746 ) }
    dend_23 { pt3dadd( 554.712, 750.461, 46.0911, 0.2746 ) }
    dend_23 { pt3dadd( 554.592, 751.597, 46.2104, 0.2746 ) }
    dend_23 { pt3dadd( 554.473, 752.734, 46.3299, 0.2746 ) }
    dend_23 { pt3dadd( 554.353, 753.871, 46.4495, 0.2746 ) }
    dend_23 { pt3dadd( 554.232, 755.007, 46.5688, 0.2746 ) }
    dend_23 { pt3dadd( 554.114, 756.144, 46.688, 0.2746 ) }
    dend_23 { pt3dadd( 553.993, 757.28, 46.8073, 0.2746 ) }
    dend_23 { pt3dadd( 553.873, 758.417, 46.9263, 0.2746 ) }
    dend_23 { pt3dadd( 553.754, 759.554, 47.0453, 0.2746 ) }
    dend_23 { pt3dadd( 553.634, 760.69, 47.164, 0.2746 ) }
    dend_23 { pt3dadd( 553.515, 761.827, 47.2825, 0.2746 ) }
    dend_23 { pt3dadd( 553.395, 762.963, 47.4004, 0.2746 ) }
    dend_23 { pt3dadd( 553.275, 764.101, 47.5177, 0.2746 ) }
    dend_23 { pt3dadd( 553.156, 765.238, 47.6342, 0.2746 ) }
    dend_23 { pt3dadd( 553.036, 766.374, 47.7495, 0.2748 ) }
    dend_23 { pt3dadd( 552.916, 767.511, 47.8629, 0.2748 ) }
    dend_23 { pt3dadd( 552.797, 768.647, 47.9744, 0.2752 ) }
    dend_23 { pt3dadd( 552.677, 769.784, 48.0822, 0.2756 ) }
    dend_23 { pt3dadd( 552.558, 770.92, 48.1852, 0.2766 ) }
    dend_23 { pt3dadd( 552.438, 772.057, 48.2824, 0.2782 ) }
    dend_23 { pt3dadd( 552.318, 773.194, 48.37, 0.2814 ) }
    dend_23 { pt3dadd( 552.198, 774.33, 48.4445, 0.287 ) }
    dend_23 { pt3dadd( 552.078, 775.467, 48.501, 0.2988 ) }
    dend_23 { pt3dadd( 551.958, 776.604, 48.5344, 0.3142 ) }
    dend_23 { pt3dadd( 551.839, 777.74, 48.5405, 0.3734 ) }
    dend_23 { pt3dadd( 551.427, 778.76, 48.4823, 0.3338 ) }
    dend_23 { pt3dadd( 550.75, 779.672, 48.3386, 0.3 ) }
    dend_23 { pt3dadd( 550.074, 780.584, 48.1292, 0.2746 ) }
    dend_23 { pt3dadd( 549.397, 781.497, 47.8727, 0.2746 ) }
    dend_23 { pt3dadd( 548.72, 782.409, 47.5877, 0.2746 ) }
    dend_23 { pt3dadd( 548.044, 783.322, 47.2912, 0.2746 ) }
    dend_23 { pt3dadd( 547.366, 784.234, 47.0002, 0.2746 ) }
    dend_23 { pt3dadd( 546.689, 785.147, 46.7247, 0.2746 ) }
    dend_23 { pt3dadd( 546.013, 786.058, 46.468, 0.2746 ) }
    dend_23 { pt3dadd( 545.336, 786.971, 46.2333, 0.2746 ) }
    dend_23 { pt3dadd( 544.575, 787.824, 46.067, 0.2746 ) }
    dend_23 { pt3dadd( 543.807, 788.672, 45.9592, 0.2746 ) }
    dend_23 { pt3dadd( 543.04, 789.521, 45.8962, 0.2746 ) }
    dend_23 { pt3dadd( 542.273, 790.369, 45.8654, 0.2746 ) }
    dend_23 { pt3dadd( 541.505, 791.218, 45.8548, 0.2746 ) }
    dend_23 { pt3dadd( 540.738, 792.067, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 539.97, 792.916, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 539.204, 793.763, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 538.517, 794.664, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 538.075, 795.718, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 537.631, 796.773, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 537.187, 797.828, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 536.743, 798.883, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 536.3, 799.936, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 535.857, 800.991, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 535.413, 802.046, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 534.97, 803.101, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 534.526, 804.154, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 534.082, 805.209, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 533.638, 806.264, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 533.093, 807.267, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 532.522, 808.259, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 531.951, 809.251, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 531.381, 810.243, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 530.81, 811.234, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 530.241, 812.226, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 529.67, 813.217, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 529.1, 814.209, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 528.529, 815.201, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 527.959, 816.193, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 527.344, 817.154, 45.8542, 0.2746 ) }
    dend_23 { pt3dadd( 526.633, 818.05, 45.8545, 0.2746 ) }
    dend_23 { pt3dadd( 525.922, 818.946, 45.8545, 0.2746 ) }
    dend_23 { pt3dadd( 525.211, 819.843, 45.8545, 0.2746 ) }
    dend_23 { pt3dadd( 524.501, 820.739, 45.8545, 0.2746 ) }
    dend_23 { pt3dadd( 523.79, 821.636, 45.8548, 0.2746 ) }
    dend_23 { pt3dadd( 523.079, 822.531, 45.855, 0.2746 ) }
    dend_23 { pt3dadd( 522.369, 823.428, 45.8553, 0.2746 ) }
    dend_23 { pt3dadd( 521.609, 824.281, 45.8556, 0.2746 ) }
    dend_23 { pt3dadd( 520.789, 825.079, 45.8562, 0.2748 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_23 { pt3dadd( 519.969, 825.877, 45.857, 0.275 ) }
    dend_23 { pt3dadd( 519.149, 826.674, 45.8581, 0.2752 ) }
    dend_23 { pt3dadd( 518.329, 827.472, 45.8598, 0.2758 ) }
    dend_23 { pt3dadd( 518.501, 828.535, 45.862, 0.2768 ) }
    dend_23 { pt3dadd( 518.811, 829.637, 45.8651, 0.2786 ) }
    dend_23 { pt3dadd( 519.122, 830.737, 45.8696, 0.2822 ) }
    dend_23 { pt3dadd( 519.432, 831.839, 45.8755, 0.2884 ) }
    dend_23 { pt3dadd( 519.693, 832.951, 45.8842, 0.3012 ) }
    dend_23 { pt3dadd( 519.85, 834.083, 45.8962, 0.3186 ) }
    dend_23 { pt3dadd( 520.008, 835.217, 45.9127, 0.3818 ) }
    dend_23 { pt3dadd( 520.164, 836.35, 45.9351, 0.3494 ) }
    dend_23 { pt3dadd( 520.322, 837.484, 45.9687, 0.3286 ) }
    dend_23 { pt3dadd( 520.479, 838.616, 46.0169, 0.3286 ) }
    dend_23 { pt3dadd( 520.637, 839.75, 46.081, 0.37 ) }
    dend_23 { pt3dadd( 520.795, 840.882, 46.1597, 0.4738 ) }
    dend_23 { pt3dadd( 520.951, 842.016, 46.2504, 0.536 ) }
    dend_23 { pt3dadd( 520.661, 842.657, 46.5438, 0.5966 ) }
    dend_23 { pt3dadd( 520.934, 843.721, 46.7891, 0.5174 ) }
    dend_23 { pt3dadd( 521.131, 844.847, 46.9678, 0.3848 ) }
    dend_23 { pt3dadd( 521.206, 845.985, 47.0817, 0.3 ) }
    dend_23 { pt3dadd( 521.206, 847.129, 47.1321, 0.2746 ) }
    dend_23 { pt3dadd( 521.206, 848.273, 47.119, 0.2746 ) }
    dend_23 { pt3dadd( 521.206, 849.417, 47.0428, 0.2746 ) }
    dend_23 { pt3dadd( 521.206, 850.561, 46.935, 0.2746 ) }
    dend_23 { pt3dadd( 521.321, 851.694, 46.7846, 0.2746 ) }
    dend_23 { pt3dadd( 521.321, 852.83, 46.5609, 0.2746 ) }
    dend_23 { pt3dadd( 521.365, 853.939, 46.2356, 0.2746 ) }
    dend_23 { pt3dadd( 521.518, 855.032, 45.8494, 0.2746 ) }
    dend_23 { pt3dadd( 521.552, 856.103, 45.3715, 0.2746 ) }
    dend_23 { pt3dadd( 521.664, 856.952, 44.7314, 0.2746 ) }
    dend_23 { pt3dadd( 521.658, 858.091, 44.2014, 0.2746 ) }
    dend_23 { pt3dadd( 521.333, 859.16, 43.7791, 0.2746 ) }
    dend_23 { pt3dadd( 521.079, 860.274, 43.4795, 0.2746 ) }
    dend_23 { pt3dadd( 520.978, 861.403, 43.2522, 0.2746 ) }
    dend_23 { pt3dadd( 520.891, 862.521, 43.066, 0.2746 ) }
    dend_23 { pt3dadd( 520.523, 863.594, 42.936, 0.2746 ) }
    dend_23 { pt3dadd( 520.156, 864.644, 42.8103, 0.2746 ) }
    dend_23 { pt3dadd( 519.943, 865.769, 42.7602, 0.2746 ) }
    dend_23 { pt3dadd( 519.696, 866.879, 42.7854, 0.2746 ) }
    dend_23 { pt3dadd( 519.471, 867.994, 42.8862, 0.2746 ) }
    dend_23 { pt3dadd( 518.929, 868.883, 43.055, 0.2746 ) }
    dend_23 { pt3dadd( 518.551, 869.744, 43.4031, 0.2746 ) }
    dend_23 { pt3dadd( 517.779, 870.353, 43.9519, 0.2746 ) }
    dend_23 { pt3dadd( 517.007, 871.11, 44.5012, 0.2746 ) }
    dend_23 { pt3dadd( 516.301, 871.967, 44.9912, 0.2746 ) }
    dend_23 { pt3dadd( 516.055, 873.047, 45.4269, 0.2746 ) }
    dend_23 { pt3dadd( 515.592, 873.981, 45.82, 0.2746 ) }
    dend_23 { pt3dadd( 515.025, 874.955, 46.093, 0.2746 ) }
    dend_23 { pt3dadd( 514.018, 875.463, 46.2826, 0.2746 ) }
    dend_23 { pt3dadd( 513.542, 876.367, 46.4327, 0.2746 ) }
    dend_23 { pt3dadd( 513.542, 877.506, 46.5738, 0.2746 ) }
    dend_23 { pt3dadd( 513.082, 878.416, 46.7919, 0.2746 ) }
    dend_23 { pt3dadd( 512.689, 879.426, 47.0604, 0.2746 ) }
    dend_23 { pt3dadd( 511.854, 880.138, 47.2702, 0.2746 ) }
    dend_23 { pt3dadd( 511.209, 881.078, 47.4247, 0.2746 ) }
    dend_23 { pt3dadd( 510.679, 882.086, 47.5286, 0.2746 ) }
    dend_23 { pt3dadd( 510.416, 883.186, 47.5863, 0.2746 ) }
    dend_23 { pt3dadd( 509.967, 884.232, 47.6059, 0.2746 ) }
    dend_23 { pt3dadd( 509.686, 885.337, 47.6081, 0.2746 ) }
    dend_23 { pt3dadd( 509.487, 886.435, 47.6112, 0.2746 ) }
    dend_23 { pt3dadd( 509.047, 887.469, 47.6157, 0.2746 ) }
    dend_23 { pt3dadd( 508.297, 888.208, 47.6221, 0.2746 ) }
    dend_23 { pt3dadd( 508.119, 889.322, 47.6308, 0.2746 ) }
    dend_23 { pt3dadd( 507.913, 890.444, 47.6428, 0.2746 ) }
    dend_23 { pt3dadd( 507.81, 891.576, 47.6605, 0.2746 ) }
    dend_23 { pt3dadd( 507.688, 892.714, 47.6848, 0.2746 ) }
    dend_23 { pt3dadd( 507.478, 893.828, 47.7179, 0.2746 ) }
    dend_23 { pt3dadd( 507.4, 894.965, 47.7618, 0.2746 ) }
    dend_23 { pt3dadd( 507.237, 896.094, 47.8279, 0.2746 ) }
    dend_23 { pt3dadd( 507.135, 897.22, 47.9374, 0.2744 ) }
    dend_23 { pt3dadd( 506.874, 898.32, 48.057, 0.2744 ) }
    dend_23 { pt3dadd( 506.704, 899.443, 48.1984, 0.2742 ) }
    dend_23 { pt3dadd( 506.678, 900.585, 48.3708, 0.274 ) }
    dend_23 { pt3dadd( 506.678, 901.729, 48.5778, 0.2736 ) }
    dend_23 { pt3dadd( 506.672, 902.873, 48.8177, 0.2728 ) }
    dend_23 { pt3dadd( 506.563, 903.646, 49.2906, 0.2712 ) }
    dend_23 { pt3dadd( 506.194, 904.165, 49.9674, 0.2684 ) }
    dend_23 { pt3dadd( 506.106, 905.231, 50.6299, 0.2626 ) }
    dend_23 { pt3dadd( 506.026, 906.37, 51.1325, 0.2542 ) }
    dend_23 { pt3dadd( 505.873, 907.497, 51.4856, 0.2288 ) }
    dend_23 { pt3dadd( 505.076, 908.107, 51.8, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 81/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 558.699, 670.609, 34.897, 0.3266 ) }
    dend_22 { pt3dadd( 559.758, 670.567, 32.7771, 0.4576 ) }
    dend_22 { pt3dadd( 560.751, 670.527, 31.6627, 0.376 ) }
    dend_22 { pt3dadd( 560.959, 671.423, 31.2432, 0.3306 ) }
    dend_22 { pt3dadd( 561.052, 672.546, 30.8, 0.3334 ) }
    dend_22 { pt3dadd( 561.153, 673.668, 30.3419, 0.373 ) }
    dend_22 { pt3dadd( 561.956, 674.287, 29.934, 0.5078 ) }
    dend_22 { pt3dadd( 562.711, 674.906, 29.5646, 0.4612 ) }
    dend_22 { pt3dadd( 562.658, 676.016, 29.1617, 0.4416 ) }
    dend_22 { pt3dadd( 562.606, 677.126, 28.7137, 0.537 ) }
    dend_22 { pt3dadd( 563.063, 678.152, 28.2864, 0.5334 ) }
    dend_22 { pt3dadd( 563.572, 679.17, 27.8734, 0.487 ) }
    dend_22 { pt3dadd( 564.082, 680.188, 27.4579, 0.3656 ) }
    dend_22 { pt3dadd( 564.628, 681.177, 27.0396, 0.3118 ) }
    dend_22 { pt3dadd( 565.536, 681.872, 26.6487, 0.2962 ) }
    dend_22 { pt3dadd( 565.579, 682.852, 26.21, 0.3158 ) }
    dend_22 { pt3dadd( 565.745, 683.789, 25.5371, 0.3464 ) }
    dend_22 { pt3dadd( 565.912, 684.726, 24.7089, 0.4294 ) }
    dend_22 { pt3dadd( 566.737, 685.396, 23.9705, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_22 { pt3dadd( 567.513, 686.125, 23.2319, 0.4322 ) }
    dend_22 { pt3dadd( 568.301, 686.835, 22.5338, 0.305 ) }
    dend_22 { pt3dadd( 569.433, 687.006, 21.6093, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 3/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 569.941, 721.521, 45.2561, 0.2746 ) }
    dend_19 { pt3dadd( 569.686, 721.862, 45.1758, 0.2746 ) }
    dend_19 { pt3dadd( 569.29, 722.901, 45.1004, 0.2746 ) }
    dend_19 { pt3dadd( 568.894, 723.958, 45.0598, 0.2746 ) }
    dend_19 { pt3dadd( 568.253, 724.897, 45.0562, 0.2746 ) }
    dend_19 { pt3dadd( 567.704, 725.897, 45.0926, 0.2746 ) }
    dend_19 { pt3dadd( 566.91, 726.708, 45.1718, 0.2746 ) }
    dend_19 { pt3dadd( 566.482, 727.717, 45.3527, 0.2746 ) }
    dend_19 { pt3dadd( 566.156, 728.806, 45.5454, 0.2746 ) }
    dend_19 { pt3dadd( 565.903, 729.878, 45.8178, 0.2746 ) }
    dend_19 { pt3dadd( 565.349, 730.786, 46.1462, 0.2748 ) }
    dend_19 { pt3dadd( 564.927, 731.849, 46.3957, 0.2748 ) }
    dend_19 { pt3dadd( 564.373, 732.732, 46.5716, 0.2752 ) }
    dend_19 { pt3dadd( 563.302, 732.974, 46.681, 0.2756 ) }
    dend_19 { pt3dadd( 562.544, 733.797, 46.7421, 0.2766 ) }
    dend_19 { pt3dadd( 562.182, 734.87, 46.7628, 0.2782 ) }
    dend_19 { pt3dadd( 561.929, 735.944, 46.7639, 0.2814 ) }
    dend_19 { pt3dadd( 561.464, 736.989, 46.7653, 0.287 ) }
    dend_19 { pt3dadd( 560.686, 737.806, 46.7676, 0.2988 ) }
    dend_19 { pt3dadd( 560.319, 738.839, 46.7706, 0.3142 ) }
    dend_19 { pt3dadd( 559.966, 739.916, 46.7746, 0.3734 ) }
    dend_19 { pt3dadd( 559.694, 741.027, 46.7804, 0.3338 ) }
    dend_19 { pt3dadd( 559.534, 742.151, 46.7888, 0.3 ) }
    dend_19 { pt3dadd( 559.323, 743.265, 46.8006, 0.2746 ) }
    dend_19 { pt3dadd( 559.048, 744.357, 46.8154, 0.2746 ) }
    dend_19 { pt3dadd( 558.873, 745.488, 46.8331, 0.2746 ) }
    dend_19 { pt3dadd( 558.6, 746.584, 46.8745, 0.2748 ) }
    dend_19 { pt3dadd( 558.285, 747.666, 46.9291, 0.2748 ) }
    dend_19 { pt3dadd( 557.938, 748.741, 46.9717, 0.2752 ) }
    dend_19 { pt3dadd( 557.401, 749.743, 47.003, 0.2756 ) }
    dend_19 { pt3dadd( 556.722, 750.626, 47.0243, 0.2766 ) }
    dend_19 { pt3dadd( 556.137, 751.609, 47.0361, 0.2782 ) }
    dend_19 { pt3dadd( 555.552, 752.568, 47.0394, 0.2814 ) }
    dend_19 { pt3dadd( 555.198, 753.655, 47.0394, 0.287 ) }
    dend_19 { pt3dadd( 554.609, 754.61, 47.0392, 0.2988 ) }
    dend_19 { pt3dadd( 554.284, 755.691, 47.0386, 0.3142 ) }
    dend_19 { pt3dadd( 553.705, 756.676, 47.038, 0.3734 ) }
    dend_19 { pt3dadd( 553.286, 757.724, 47.0375, 0.3338 ) }
    dend_19 { pt3dadd( 553.026, 758.835, 47.0364, 0.3 ) }
    dend_19 { pt3dadd( 552.722, 759.905, 47.035, 0.2746 ) }
    dend_19 { pt3dadd( 552.057, 760.759, 47.0327, 0.2746 ) }
    dend_19 { pt3dadd( 551.506, 761.646, 47.0299, 0.2746 ) }
    dend_19 { pt3dadd( 550.969, 762.612, 47.026, 0.2746 ) }
    dend_19 { pt3dadd( 550.257, 763.502, 47.0204, 0.2746 ) }
    dend_19 { pt3dadd( 549.586, 764.425, 47.0123, 0.2746 ) }
    dend_19 { pt3dadd( 548.92, 765.345, 47.0008, 0.2746 ) }
    dend_19 { pt3dadd( 547.958, 765.958, 46.9854, 0.2746 ) }
    dend_19 { pt3dadd( 547.417, 766.95, 46.9661, 0.2746 ) }
    dend_19 { pt3dadd( 547.133, 768.054, 46.9428, 0.2746 ) }
    dend_19 { pt3dadd( 546.374, 768.632, 46.8759, 0.2746 ) }
    dend_19 { pt3dadd( 546.251, 769.759, 46.8185, 0.2746 ) }
    dend_19 { pt3dadd( 545.347, 770.322, 46.7692, 0.2746 ) }
    dend_19 { pt3dadd( 544.957, 771.309, 46.7261, 0.2746 ) }
    dend_19 { pt3dadd( 544.333, 772.177, 46.6866, 0.2746 ) }
    dend_19 { pt3dadd( 543.552, 772.925, 46.6474, 0.2746 ) }
    dend_19 { pt3dadd( 542.778, 773.6, 46.6012, 0.2746 ) }
    dend_19 { pt3dadd( 541.969, 774.354, 46.5349, 0.2746 ) }
    dend_19 { pt3dadd( 541.114, 774.926, 46.4461, 0.2746 ) }
    dend_19 { pt3dadd( 540.576, 775.9, 46.3352, 0.2746 ) }
    dend_19 { pt3dadd( 539.531, 776.201, 46.1958, 0.2746 ) }
    dend_19 { pt3dadd( 539.396, 777.103, 45.8326, 0.2746 ) }
    dend_19 { pt3dadd( 538.951, 778.065, 45.4731, 0.2746 ) }
    dend_19 { pt3dadd( 538.139, 778.812, 45.194, 0.2746 ) }
    dend_19 { pt3dadd( 537.829, 779.882, 44.9898, 0.2746 ) }
    dend_19 { pt3dadd( 536.949, 780.565, 44.8543, 0.2746 ) }
    dend_19 { pt3dadd( 536.365, 781.547, 44.7796, 0.2746 ) }
    dend_19 { pt3dadd( 535.874, 782.567, 44.7546, 0.2746 ) }
    dend_19 { pt3dadd( 535.362, 783.589, 44.7359, 0.2746 ) }
    dend_19 { pt3dadd( 534.563, 784.394, 44.7107, 0.2746 ) }
    dend_19 { pt3dadd( 534.162, 785.434, 44.6802, 0.2746 ) }
    dend_19 { pt3dadd( 533.261, 786.118, 44.6418, 0.2746 ) }
    dend_19 { pt3dadd( 532.333, 786.716, 44.5264, 0.2746 ) }
    dend_19 { pt3dadd( 531.245, 787.063, 44.4352, 0.2746 ) }
    dend_19 { pt3dadd( 530.359, 787.774, 44.3694, 0.2746 ) }
    dend_19 { pt3dadd( 529.516, 788.517, 44.3276, 0.2746 ) }
    dend_19 { pt3dadd( 528.53, 789.085, 44.3069, 0.2746 ) }
    dend_19 { pt3dadd( 527.95, 789.953, 44.3134, 0.2746 ) }
    dend_19 { pt3dadd( 526.929, 790.2, 44.3626, 0.2746 ) }
    dend_19 { pt3dadd( 525.968, 790.78, 44.3971, 0.2746 ) }
    dend_19 { pt3dadd( 525.203, 791.534, 44.415, 0.2746 ) }
    dend_19 { pt3dadd( 524.175, 791.81, 44.4161, 0.2746 ) }
    dend_19 { pt3dadd( 523.293, 792.356, 44.3985, 0.2746 ) }
    dend_19 { pt3dadd( 522.262, 792.771, 44.3568, 0.2746 ) }
    dend_19 { pt3dadd( 521.213, 793.21, 44.2893, 0.2746 ) }
    dend_19 { pt3dadd( 520.156, 793.596, 44.2005, 0.2746 ) }
    dend_19 { pt3dadd( 519.058, 793.903, 44.0922, 0.2746 ) }
    dend_19 { pt3dadd( 518.004, 794.259, 43.9202, 0.2746 ) }
    dend_19 { pt3dadd( 517.339, 794.622, 43.5604, 0.2746 ) }
    dend_19 { pt3dadd( 516.545, 795.369, 43.2368, 0.2746 ) }
    dend_19 { pt3dadd( 515.69, 796.123, 42.9996, 0.2746 ) }
    dend_19 { pt3dadd( 514.782, 796.819, 42.8462, 0.2746 ) }
    dend_19 { pt3dadd( 513.732, 797.247, 42.7753, 0.2746 ) }
    dend_19 { pt3dadd( 512.61, 797.371, 42.7854, 0.2746 ) }
    dend_19 { pt3dadd( 511.506, 797.668, 42.8635, 0.2746 ) }
    dend_19 { pt3dadd( 510.472, 797.93, 42.9708, 0.2746 ) }
    dend_19 { pt3dadd( 510.072, 798.934, 43.1281, 0.2746 ) }
    dend_19 { pt3dadd( 509.239, 799.532, 43.4322, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_19 { pt3dadd( 508.397, 800.045, 43.7954, 0.2746 ) }
    dend_19 { pt3dadd( 507.864, 800.914, 44.0762, 0.2746 ) }
    dend_19 { pt3dadd( 507.084, 801.703, 44.2792, 0.2746 ) }
    dend_19 { pt3dadd( 506.619, 802.747, 44.4105, 0.2746 ) }
    dend_19 { pt3dadd( 506.22, 803.737, 44.4755, 0.2746 ) }
    dend_19 { pt3dadd( 506.082, 804.854, 44.4861, 0.2746 ) }
    dend_19 { pt3dadd( 505.582, 805.88, 44.4727, 0.2746 ) }
    dend_19 { pt3dadd( 504.95, 806.727, 44.4559, 0.2746 ) }
    dend_19 { pt3dadd( 504.836, 807.855, 44.4357, 0.2746 ) }
    dend_19 { pt3dadd( 504.319, 808.829, 44.3808, 0.2746 ) }
    dend_19 { pt3dadd( 503.766, 809.826, 44.3265, 0.2746 ) }
    dend_19 { pt3dadd( 503.143, 810.748, 44.2823, 0.2746 ) }
    dend_19 { pt3dadd( 502.431, 811.525, 44.247, 0.2746 ) }
    dend_19 { pt3dadd( 502.106, 812.613, 44.2196, 0.2746 ) }
    dend_19 { pt3dadd( 501.468, 813.557, 44.1974, 0.2746 ) }
    dend_19 { pt3dadd( 500.94, 814.567, 44.1778, 0.2746 ) }
    dend_19 { pt3dadd( 500.26, 815.48, 44.1532, 0.2746 ) }
    dend_19 { pt3dadd( 499.669, 816.424, 44.1204, 0.2746 ) }
    dend_19 { pt3dadd( 498.984, 817.253, 44.0768, 0.2746 ) }
    dend_19 { pt3dadd( 498.246, 818.119, 43.9928, 0.2746 ) }
    dend_19 { pt3dadd( 497.363, 818.824, 43.8948, 0.2746 ) }
    dend_19 { pt3dadd( 496.481, 819.229, 43.7987, 0.2746 ) }
    dend_19 { pt3dadd( 495.477, 819.597, 43.659, 0.2746 ) }
    dend_19 { pt3dadd( 495.022, 820.543, 43.4636, 0.2746 ) }
    dend_19 { pt3dadd( 494.305, 821.394, 43.3101, 0.2744 ) }
    dend_19 { pt3dadd( 493.811, 822.399, 43.195, 0.2744 ) }
    dend_19 { pt3dadd( 493.269, 823.355, 43.1108, 0.2742 ) }
    dend_19 { pt3dadd( 492.453, 824.104, 43.052, 0.274 ) }
    dend_19 { pt3dadd( 492.046, 825.141, 42.9766, 0.2736 ) }
    dend_19 { pt3dadd( 491.787, 826.198, 42.9279, 0.2728 ) }
    dend_19 { pt3dadd( 491.135, 827.035, 42.8907, 0.2712 ) }
    dend_19 { pt3dadd( 490.492, 827.961, 42.8644, 0.2684 ) }
    dend_19 { pt3dadd( 490.204, 829.051, 42.8478, 0.2626 ) }
    dend_19 { pt3dadd( 489.887, 830.114, 42.84, 0.2542 ) }
    dend_19 { pt3dadd( 489.746, 831.24, 42.84, 0.2288 ) }
    dend_19 { pt3dadd( 489.06, 831.802, 42.84, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 36/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 569.941, 721.521, 45.2561, 0.2746 ) }
    dend_18 { pt3dadd( 570.348, 722.426, 45.36, 0.2288 ) }
    dend_18 { pt3dadd( 570.879, 723.316, 45.3743, 0.2746 ) }
    dend_18 { pt3dadd( 571.293, 724.368, 45.3799, 0.2746 ) }
    dend_18 { pt3dadd( 571.657, 725.318, 45.3877, 0.2746 ) }
    dend_18 { pt3dadd( 572.045, 726.387, 45.3989, 0.2746 ) }
    dend_18 { pt3dadd( 572.626, 727.298, 45.4143, 0.2746 ) }
    dend_18 { pt3dadd( 573.135, 728.294, 45.4356, 0.2746 ) }
    dend_18 { pt3dadd( 573.821, 729.202, 45.4658, 0.2746 ) }
    dend_18 { pt3dadd( 574.711, 729.855, 45.509, 0.2746 ) }
    dend_18 { pt3dadd( 575.001, 730.958, 45.5678, 0.2746 ) }
    dend_18 { pt3dadd( 575.304, 732.047, 45.6473, 0.2746 ) }
    dend_18 { pt3dadd( 575.546, 733.16, 45.7556, 0.2746 ) }
    dend_18 { pt3dadd( 575.885, 734.207, 45.9449, 0.2748 ) }
    dend_18 { pt3dadd( 575.89, 735.349, 46.1728, 0.2748 ) }
    dend_18 { pt3dadd( 575.89, 736.494, 46.4416, 0.2752 ) }
    dend_18 { pt3dadd( 575.89, 737.63, 46.7821, 0.2756 ) }
    dend_18 { pt3dadd( 575.917, 738.585, 47.3399, 0.2766 ) }
    dend_18 { pt3dadd( 576.004, 739.245, 48.1729, 0.2782 ) }
    dend_18 { pt3dadd( 576.282, 740.24, 48.9289, 0.2814 ) }
    dend_18 { pt3dadd( 576.757, 741.25, 49.5323, 0.287 ) }
    dend_18 { pt3dadd( 577.061, 742.345, 49.9957, 0.2988 ) }
    dend_18 { pt3dadd( 577.24, 743.465, 50.3387, 0.3142 ) }
    dend_18 { pt3dadd( 577.633, 744.532, 50.5537, 0.3734 ) }
    dend_18 { pt3dadd( 578.081, 745.571, 50.7326, 0.3338 ) }
    dend_18 { pt3dadd( 578.279, 746.688, 50.9174, 0.3 ) }
    dend_18 { pt3dadd( 578.438, 747.787, 51.1008, 0.2746 ) }
    dend_18 { pt3dadd( 578.994, 748.624, 51.2725, 0.2746 ) }
    dend_18 { pt3dadd( 579.453, 749.513, 51.5508, 0.2746 ) }
    dend_18 { pt3dadd( 579.934, 750.528, 51.8412, 0.2746 ) }
    dend_18 { pt3dadd( 580.304, 751.589, 52.085, 0.2746 ) }
    dend_18 { pt3dadd( 580.385, 752.729, 52.2962, 0.2746 ) }
    dend_18 { pt3dadd( 580.583, 753.823, 52.5518, 0.2746 ) }
    dend_18 { pt3dadd( 580.786, 754.912, 52.822, 0.2746 ) }
    dend_18 { pt3dadd( 581.028, 756.027, 53.0429, 0.2748 ) }
    dend_18 { pt3dadd( 581.444, 756.988, 53.3086, 0.2748 ) }
    dend_18 { pt3dadd( 581.679, 758.086, 53.5668, 0.2752 ) }
    dend_18 { pt3dadd( 581.906, 759.172, 53.8451, 0.2758 ) }
    dend_18 { pt3dadd( 582.421, 760.173, 54.0408, 0.2766 ) }
    dend_18 { pt3dadd( 582.639, 761.208, 54.1722, 0.2786 ) }
    dend_18 { pt3dadd( 582.994, 762.283, 54.2536, 0.2818 ) }
    dend_18 { pt3dadd( 583.228, 763.395, 54.2909, 0.2882 ) }
    dend_18 { pt3dadd( 583.447, 764.509, 54.301, 0.2994 ) }
    dend_18 { pt3dadd( 583.771, 765.591, 54.2931, 0.3228 ) }
    dend_18 { pt3dadd( 583.893, 766.698, 54.2819, 0.3536 ) }
    dend_18 { pt3dadd( 584.626, 767.562, 54.2679, 0.4722 ) }
    dend_18 { pt3dadd( 585.243, 768.515, 54.2506, 0.3932 ) }
    dend_18 { pt3dadd( 585.385, 769.636, 54.2178, 0.3254 ) }
    dend_18 { pt3dadd( 585.878, 770.643, 54.161, 0.2746 ) }
    dend_18 { pt3dadd( 586.507, 771.597, 54.1159, 0.2746 ) }
    dend_18 { pt3dadd( 587.083, 772.575, 54.0823, 0.2746 ) }
    dend_18 { pt3dadd( 587.913, 773.245, 54.059, 0.2746 ) }
    dend_18 { pt3dadd( 588.908, 773.666, 54.0453, 0.2746 ) }
    dend_18 { pt3dadd( 589.349, 774.673, 54.04, 0.2746 ) }
    dend_18 { pt3dadd( 590.066, 775.513, 54.04, 0.2744 ) }
    dend_18 { pt3dadd( 590.663, 776.326, 54.04, 0.2744 ) }
    dend_18 { pt3dadd( 591.105, 777.281, 54.04, 0.2742 ) }
    dend_18 { pt3dadd( 591.161, 778.414, 54.04, 0.274 ) }
    dend_18 { pt3dadd( 591.514, 779.501, 54.04, 0.2736 ) }
    dend_18 { pt3dadd( 592.011, 780.531, 54.04, 0.2728 ) }
    dend_18 { pt3dadd( 592.781, 781.347, 54.04, 0.2712 ) }
    dend_18 { pt3dadd( 593.17, 782.351, 54.04, 0.2684 ) }
    dend_18 { pt3dadd( 593.776, 783.313, 54.04, 0.2626 ) }
    dend_18 { pt3dadd( 594.531, 784.11, 54.04, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_18 { pt3dadd( 595.275, 784.938, 54.04, 0.2288 ) }
    dend_18 { pt3dadd( 595.452, 786.042, 54.04, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 2/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 530.672, 623.474, 40.157, 0.4576 ) }
    dend_16 { pt3dadd( 530.115, 624.066, 38.3242, 0.6864 ) }
    dend_16 { pt3dadd( 529.249, 624.666, 37.1465, 0.6766 ) }
    dend_16 { pt3dadd( 528.469, 625.473, 36.7189, 0.6806 ) }
    dend_16 { pt3dadd( 528.085, 626.379, 36.1668, 0.6152 ) }
    dend_16 { pt3dadd( 527.8, 627.349, 35.4777, 0.6182 ) }
    dend_16 { pt3dadd( 527.346, 628.348, 34.7634, 0.4796 ) }
    dend_16 { pt3dadd( 526.932, 629.365, 34.048, 0.464 ) }
    dend_16 { pt3dadd( 526.75, 630.469, 33.4096, 0.4078 ) }
    dend_16 { pt3dadd( 526.452, 631.549, 32.9031, 0.4362 ) }
    dend_16 { pt3dadd( 525.834, 632.425, 32.3823, 0.5316 ) }
    dend_16 { pt3dadd( 525.313, 633.314, 31.752, 0.7294 ) }
    dend_16 { pt3dadd( 525.067, 634.159, 31.0248, 0.5372 ) }
    dend_16 { pt3dadd( 524.982, 635.126, 29.234, 0.2748 ) }
    dend_16 { pt3dadd( 524.982, 636.27, 28.6588, 0.2748 ) }
    dend_16 { pt3dadd( 524.982, 637.414, 28.2853, 0.275 ) }
    dend_16 { pt3dadd( 524.99, 638.557, 28.0818, 0.2754 ) }
    dend_16 { pt3dadd( 525.439, 639.497, 28.0017, 0.2762 ) }
    dend_16 { pt3dadd( 526.079, 640.172, 28.0, 0.2776 ) }
    dend_16 { pt3dadd( 526.7, 640.912, 28.0, 0.2804 ) }
    dend_16 { pt3dadd( 526.997, 642.001, 28.0, 0.2852 ) }
    dend_16 { pt3dadd( 527.378, 643.073, 28.0, 0.2954 ) }
    dend_16 { pt3dadd( 527.916, 644.04, 28.0, 0.3078 ) }
    dend_16 { pt3dadd( 528.841, 644.701, 28.0, 0.3616 ) }
    dend_16 { pt3dadd( 529.204, 645.762, 28.0, 0.3136 ) }
    dend_16 { pt3dadd( 529.214, 646.903, 28.0, 0.2542 ) }
    dend_16 { pt3dadd( 529.558, 647.847, 28.0, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 29/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 530.672, 623.474, 40.157, 0.4576 ) }
    dend_13 { pt3dadd( 530.552, 623.775, 40.5684, 0.4266 ) }
    dend_13 { pt3dadd( 530.295, 624.796, 40.8464, 0.4212 ) }
    dend_13 { pt3dadd( 529.718, 625.723, 40.9844, 0.5162 ) }
    dend_13 { pt3dadd( 529.192, 626.735, 41.0637, 0.6402 ) }
    dend_13 { pt3dadd( 528.731, 627.779, 41.1373, 0.6658 ) }
    dend_13 { pt3dadd( 528.383, 628.829, 41.277, 0.561 ) }
    dend_13 { pt3dadd( 528.113, 629.937, 41.3706, 0.4194 ) }
    dend_13 { pt3dadd( 527.699, 630.962, 41.3129, 0.3588 ) }
    dend_13 { pt3dadd( 527.353, 632.043, 41.2238, 0.4092 ) }
    dend_13 { pt3dadd( 527.255, 633.182, 41.1516, 0.4008 ) }
    dend_13 { pt3dadd( 527.162, 634.322, 41.097, 0.4208 ) }
    dend_13 { pt3dadd( 526.791, 635.403, 41.067, 0.5146 ) }
    dend_13 { pt3dadd( 526.399, 636.478, 41.0833, 0.642 ) }
    dend_13 { pt3dadd( 525.909, 637.512, 41.1524, 0.647 ) }
    dend_13 { pt3dadd( 525.034, 638.246, 41.2602, 0.6342 ) }
    dend_13 { pt3dadd( 524.13, 638.947, 41.4056, 0.7166 ) }
    dend_13 { pt3dadd( 523.262, 639.686, 41.613, 0.5844 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 47/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 566.166, 610.212, 37.9148, 0.5144 ) }
    dend_10 { pt3dadd( 566.63, 610.616, 38.4468, 0.2288 ) }
    dend_10 { pt3dadd( 567.556, 611.27, 38.8049, 0.5424 ) }
    dend_10 { pt3dadd( 568.521, 611.879, 38.9374, 0.5494 ) }
    dend_10 { pt3dadd( 569.343, 612.636, 39.1367, 0.4878 ) }
    dend_10 { pt3dadd( 570.181, 613.376, 39.3882, 0.5072 ) }
    dend_10 { pt3dadd( 571.187, 613.846, 39.5847, 0.5804 ) }
    dend_10 { pt3dadd( 572.25, 614.21, 39.7572, 0.5348 ) }
    dend_10 { pt3dadd( 573.311, 614.598, 40.0224, 0.4166 ) }
    dend_10 { pt3dadd( 574.303, 614.937, 40.4701, 0.3596 ) }
    dend_10 { pt3dadd( 575.193, 614.865, 41.1216, 0.3818 ) }
    dend_10 { pt3dadd( 576.16, 614.51, 41.8488, 0.4894 ) }
    dend_10 { pt3dadd( 577.237, 614.176, 42.4987, 0.5958 ) }
    dend_10 { pt3dadd( 578.363, 614.098, 43.0209, 0.558 ) }
    dend_10 { pt3dadd( 579.442, 614.418, 43.43, 0.4852 ) }
    dend_10 { pt3dadd( 580.506, 614.723, 43.8046, 0.3624 ) }
    dend_10 { pt3dadd( 581.62, 614.844, 44.1395, 0.3058 ) }
    dend_10 { pt3dadd( 582.677, 615.152, 44.4819, 0.2852 ) }
    dend_10 { pt3dadd( 583.419, 615.919, 44.7723, 0.2942 ) }
    dend_10 { pt3dadd( 583.767, 616.975, 44.9179, 0.312 ) }
    dend_10 { pt3dadd( 584.351, 617.901, 45.0738, 0.3384 ) }
    dend_10 { pt3dadd( 585.068, 618.629, 45.3446, 0.4194 ) }
    dend_10 { pt3dadd( 585.62, 619.606, 45.5879, 0.415 ) }
    dend_10 { pt3dadd( 586.197, 620.575, 45.6982, 0.4706 ) }
    dend_10 { pt3dadd( 586.844, 621.478, 45.6744, 0.4932 ) }
    dend_10 { pt3dadd( 587.526, 622.391, 45.6232, 0.4684 ) }
    dend_10 { pt3dadd( 588.31, 623.225, 45.5577, 0.517 ) }
    dend_10 { pt3dadd( 589.078, 624.071, 45.491, 0.606 ) }
    dend_10 { pt3dadd( 589.789, 624.967, 45.4544, 0.548 ) }
    dend_10 { pt3dadd( 590.534, 625.832, 45.4572, 0.6058 ) }
    dend_10 { pt3dadd( 591.396, 626.579, 45.4916, 0.5978 ) }
    dend_10 { pt3dadd( 592.301, 627.278, 45.5451, 0.4564 ) }
    dend_10 { pt3dadd( 593.12, 628.074, 45.6187, 0.3496 ) }
    dend_10 { pt3dadd( 593.791, 628.988, 45.7173, 0.3142 ) }
    dend_10 { pt3dadd( 594.227, 630.042, 45.8556, 0.3734 ) }
    dend_10 { pt3dadd( 594.641, 631.083, 46.0751, 0.334 ) }
    dend_10 { pt3dadd( 595.263, 632.007, 46.3786, 0.3 ) }
    dend_10 { pt3dadd( 595.955, 632.913, 46.6878, 0.2748 ) }
    dend_10 { pt3dadd( 596.585, 633.855, 47.0201, 0.2748 ) }
    dend_10 { pt3dadd( 597.292, 634.713, 47.4079, 0.2752 ) }
    dend_10 { pt3dadd( 598.13, 635.439, 47.8332, 0.2756 ) }
    dend_10 { pt3dadd( 599.036, 636.09, 48.2574, 0.2766 ) }
    dend_10 { pt3dadd( 599.955, 636.769, 48.6108, 0.2782 ) }
    dend_10 { pt3dadd( 600.805, 637.508, 48.879, 0.2814 ) }
    dend_10 { pt3dadd( 601.564, 638.345, 49.1697, 0.287 ) }
    dend_10 { pt3dadd( 602.325, 639.182, 49.478, 0.2988 ) }
    dend_10 { pt3dadd( 603.085, 640.02, 49.8081, 0.3142 ) }
    dend_10 { pt3dadd( 603.844, 640.857, 50.1651, 0.3734 ) }
    dend_10 { pt3dadd( 604.607, 641.694, 50.5411, 0.3338 ) }
    dend_10 { pt3dadd( 605.392, 642.528, 50.8788, 0.3 ) }
    dend_10 { pt3dadd( 606.117, 643.394, 51.2103, 0.2746 ) }
    dend_10 { pt3dadd( 606.694, 644.344, 51.6127, 0.2746 ) }
    dend_10 { pt3dadd( 607.271, 645.294, 52.0694, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_10 { pt3dadd( 607.848, 646.245, 52.561, 0.2746 ) }
    dend_10 { pt3dadd( 608.425, 647.195, 53.0687, 0.2746 ) }
    dend_10 { pt3dadd( 609.002, 648.146, 53.573, 0.2746 ) }
    dend_10 { pt3dadd( 609.579, 649.095, 54.047, 0.2746 ) }
    dend_10 { pt3dadd( 609.696, 650.218, 54.3892, 0.2746 ) }
    dend_10 { pt3dadd( 609.757, 651.359, 54.6148, 0.2746 ) }
    dend_10 { pt3dadd( 609.818, 652.502, 54.7518, 0.2746 ) }
    dend_10 { pt3dadd( 609.879, 653.645, 54.8265, 0.2746 ) }
    dend_10 { pt3dadd( 609.966, 654.784, 54.8638, 0.2746 ) }
    dend_10 { pt3dadd( 610.099, 655.922, 54.8864, 0.2746 ) }
    dend_10 { pt3dadd( 610.231, 657.057, 54.9156, 0.2746 ) }
    dend_10 { pt3dadd( 610.363, 658.193, 54.9556, 0.2746 ) }
    dend_10 { pt3dadd( 610.496, 659.33, 55.0077, 0.2746 ) }
    dend_10 { pt3dadd( 610.746, 660.437, 55.0892, 0.2746 ) }
    dend_10 { pt3dadd( 611.12, 661.515, 55.2121, 0.2746 ) }
    dend_10 { pt3dadd( 611.495, 662.591, 55.365, 0.2746 ) }
    dend_10 { pt3dadd( 611.87, 663.668, 55.5366, 0.2746 ) }
    dend_10 { pt3dadd( 612.245, 664.745, 55.7152, 0.2746 ) }
    dend_10 { pt3dadd( 612.619, 665.822, 55.8908, 0.2746 ) }
    dend_10 { pt3dadd( 612.994, 666.898, 56.0535, 0.2746 ) }
    dend_10 { pt3dadd( 613.023, 667.999, 56.1789, 0.2746 ) }
    dend_10 { pt3dadd( 612.785, 669.118, 56.2573, 0.2746 ) }
    dend_10 { pt3dadd( 612.546, 670.236, 56.2965, 0.2746 ) }
    dend_10 { pt3dadd( 612.308, 671.355, 56.3041, 0.2746 ) }
    dend_10 { pt3dadd( 612.069, 672.474, 56.2862, 0.2746 ) }
    dend_10 { pt3dadd( 611.83, 673.593, 56.2489, 0.2746 ) }
    dend_10 { pt3dadd( 611.659, 674.72, 56.1893, 0.2746 ) }
    dend_10 { pt3dadd( 611.61, 675.86, 56.0972, 0.2746 ) }
    dend_10 { pt3dadd( 611.561, 677.002, 55.9796, 0.2746 ) }
    dend_10 { pt3dadd( 611.511, 678.143, 55.844, 0.2744 ) }
    dend_10 { pt3dadd( 611.462, 679.283, 55.6976, 0.2744 ) }
    dend_10 { pt3dadd( 611.413, 680.425, 55.547, 0.2742 ) }
    dend_10 { pt3dadd( 611.364, 681.565, 55.3994, 0.274 ) }
    dend_10 { pt3dadd( 611.315, 682.706, 55.2594, 0.2736 ) }
    dend_10 { pt3dadd( 611.266, 683.847, 55.1289, 0.2728 ) }
    dend_10 { pt3dadd( 611.216, 684.988, 55.0094, 0.2712 ) }
    dend_10 { pt3dadd( 611.518, 686.085, 54.9242, 0.2684 ) }
    dend_10 { pt3dadd( 611.858, 687.178, 54.8688, 0.2626 ) }
    dend_10 { pt3dadd( 612.197, 688.27, 54.8363, 0.2542 ) }
    dend_10 { pt3dadd( 612.536, 689.363, 54.8201, 0.2288 ) }
    dend_10 { pt3dadd( 612.875, 690.456, 54.8142, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 41/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 566.166, 610.212, 37.9148, 0.5144 ) }
    dend_5 { pt3dadd( 567.49, 610.234, 37.3271, 0.424 ) }
    dend_5 { pt3dadd( 568.612, 610.397, 36.7867, 0.3834 ) }
    dend_5 { pt3dadd( 569.679, 610.681, 36.2538, 0.3774 ) }
    dend_5 { pt3dadd( 570.801, 610.881, 35.8291, 0.4876 ) }
    dend_5 { pt3dadd( 571.786, 611.461, 35.5435, 0.5614 ) }
    dend_5 { pt3dadd( 572.844, 611.896, 35.3752, 0.6444 ) }
    dend_5 { pt3dadd( 573.792, 612.534, 35.3111, 0.602 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 49/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 560.512, 584.878, 26.8937, 0.534 ) }
    dend_3 { pt3dadd( 561.361, 584.813, 24.36, 0.4576 ) }
    dend_3 { pt3dadd( 561.369, 584.177, 24.3491, 0.3594 ) }
    dend_3 { pt3dadd( 562.152, 583.562, 24.3449, 0.3 ) }
    dend_3 { pt3dadd( 562.619, 582.614, 24.3387, 0.2746 ) }
    dend_3 { pt3dadd( 562.967, 581.722, 24.3303, 0.2746 ) }
    dend_3 { pt3dadd( 563.306, 580.802, 24.3188, 0.2748 ) }
    dend_3 { pt3dadd( 563.613, 579.732, 24.3018, 0.2748 ) }
    dend_3 { pt3dadd( 564.181, 578.75, 24.278, 0.2752 ) }
    dend_3 { pt3dadd( 565.006, 577.958, 24.2466, 0.2756 ) }
    dend_3 { pt3dadd( 565.944, 577.312, 24.2074, 0.2766 ) }
    dend_3 { pt3dadd( 566.858, 576.634, 24.1438, 0.2784 ) }
    dend_3 { pt3dadd( 567.734, 575.962, 24.019, 0.2818 ) }
    dend_3 { pt3dadd( 568.559, 575.231, 23.9109, 0.2876 ) }
    dend_3 { pt3dadd( 568.774, 574.112, 23.8227, 0.2998 ) }
    dend_3 { pt3dadd( 568.797, 572.972, 23.7364, 0.3162 ) }
    dend_3 { pt3dadd( 568.797, 571.834, 23.6502, 0.3772 ) }
    dend_3 { pt3dadd( 568.797, 570.69, 23.5934, 0.341 ) }
    dend_3 { pt3dadd( 568.797, 569.546, 23.5598, 0.313 ) }
    dend_3 { pt3dadd( 569.074, 568.465, 23.5374, 0.2994 ) }
    dend_3 { pt3dadd( 569.874, 567.664, 23.5245, 0.3164 ) }
    dend_3 { pt3dadd( 570.42, 566.675, 23.52, 0.3728 ) }
    dend_3 { pt3dadd( 570.633, 565.551, 23.52, 0.356 ) }
    dend_3 { pt3dadd( 571.314, 564.793, 23.52, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 73/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 560.512, 584.878, 26.8937, 0.534 ) }
    dend_2 { pt3dadd( 559.693, 584.053, 26.6717, 0.4978 ) }
    dend_2 { pt3dadd( 558.894, 583.234, 26.4908, 0.5672 ) }
    dend_2 { pt3dadd( 558.128, 582.385, 26.3446, 0.7196 ) }
    dend_2 { pt3dadd( 557.544, 581.423, 26.2296, 0.6582 ) }
    dend_2 { pt3dadd( 557.381, 580.294, 26.1419, 0.612 ) }
    dend_2 { pt3dadd( 557.039, 579.211, 26.0501, 0.4264 ) }
    dend_2 { pt3dadd( 556.653, 578.171, 25.8849, 0.3398 ) }
    dend_2 { pt3dadd( 556.203, 577.124, 25.7412, 0.3012 ) }
    dend_2 { pt3dadd( 555.815, 576.061, 25.6889, 0.3248 ) }
    dend_2 { pt3dadd( 555.595, 575.065, 25.8244, 0.3632 ) }
    dend_2 { pt3dadd( 555.297, 574.036, 25.8054, 0.46 ) }
    dend_2 { pt3dadd( 554.871, 572.996, 25.7029, 0.5158 ) }
    dend_2 { pt3dadd( 554.453, 571.943, 25.5525, 0.5344 ) }
    dend_2 { pt3dadd( 553.897, 570.946, 25.408, 0.5218 ) }
    dend_2 { pt3dadd( 553.528, 569.866, 25.2683, 0.4978 ) }
    dend_2 { pt3dadd( 553.159, 568.785, 25.1418, 0.4582 ) }
    dend_2 { pt3dadd( 553.0, 567.654, 25.0544, 0.3594 ) }
    dend_2 { pt3dadd( 552.327, 566.762, 24.9802, 0.3002 ) }
    dend_2 { pt3dadd( 551.824, 565.756, 24.9018, 0.2748 ) }
    dend_2 { pt3dadd( 551.55, 564.667, 24.7554, 0.2752 ) }
    dend_2 { pt3dadd( 550.994, 563.708, 24.5431, 0.2756 ) }
    dend_2 { pt3dadd( 550.273, 562.937, 24.3538, 0.2766 ) }
    dend_2 { pt3dadd( 549.721, 561.952, 24.1536, 0.2782 ) }
    dend_2 { pt3dadd( 549.433, 560.869, 23.938, 0.2814 ) }
    dend_2 { pt3dadd( 549.225, 559.751, 23.749, 0.287 ) }
    dend_2 { pt3dadd( 548.64, 558.821, 23.5472, 0.2988 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_2 { pt3dadd( 548.358, 557.716, 23.4007, 0.314 ) }
    dend_2 { pt3dadd( 547.739, 556.756, 23.2912, 0.3734 ) }
    dend_2 { pt3dadd( 547.2, 555.748, 23.2137, 0.3338 ) }
    dend_2 { pt3dadd( 546.946, 554.652, 23.1582, 0.2998 ) }
    dend_2 { pt3dadd( 547.061, 553.519, 23.1137, 0.2742 ) }
    dend_2 { pt3dadd( 547.061, 552.375, 23.0759, 0.274 ) }
    dend_2 { pt3dadd( 547.175, 551.297, 22.9541, 0.2736 ) }
    dend_2 { pt3dadd( 547.175, 550.153, 22.8564, 0.2728 ) }
    dend_2 { pt3dadd( 547.175, 549.009, 22.7819, 0.2712 ) }
    dend_2 { pt3dadd( 547.175, 547.865, 22.7287, 0.2684 ) }
    dend_2 { pt3dadd( 547.175, 546.721, 22.6957, 0.2626 ) }
    dend_2 { pt3dadd( 547.503, 545.633, 22.68, 0.2542 ) }
    dend_2 { pt3dadd( 547.979, 544.593, 22.68, 0.2288 ) }
    dend_2 { pt3dadd( 548.662, 543.858, 22.68, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 14/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 523.262, 639.686, 41.613, 0.5844 ) }
    dend_15 { pt3dadd( 522.665, 639.642, 41.9275, 0.5774 ) }
    dend_15 { pt3dadd( 521.61, 639.706, 42.3634, 0.552 ) }
    dend_15 { pt3dadd( 520.604, 640.178, 42.8022, 0.7958 ) }
    dend_15 { pt3dadd( 519.645, 640.785, 43.183, 0.75 ) }
    dend_15 { pt3dadd( 518.563, 641.037, 43.538, 0.5644 ) }
    dend_15 { pt3dadd( 517.463, 641.136, 43.9121, 0.4808 ) }
    dend_15 { pt3dadd( 516.401, 641.512, 44.2814, 0.4342 ) }
    dend_15 { pt3dadd( 515.312, 641.763, 44.6359, 0.5082 ) }
    dend_15 { pt3dadd( 514.193, 641.814, 45.0061, 0.5526 ) }
    dend_15 { pt3dadd( 513.112, 641.92, 45.3992, 0.6284 ) }
    dend_15 { pt3dadd( 512.062, 642.21, 45.7999, 0.571 ) }
    dend_15 { pt3dadd( 510.953, 642.382, 46.1, 0.5106 ) }
    dend_15 { pt3dadd( 509.891, 642.748, 46.198, 0.4042 ) }
    dend_15 { pt3dadd( 508.96, 643.256, 46.1818, 0.4088 ) }
    dend_15 { pt3dadd( 507.971, 643.795, 46.0376, 0.352 ) }
    dend_15 { pt3dadd( 506.982, 644.334, 45.8105, 0.3346 ) }
    dend_15 { pt3dadd( 506.22, 645.179, 45.6112, 0.3334 ) }
    dend_15 { pt3dadd( 505.476, 646.049, 45.4661, 0.41 ) }
    dend_15 { pt3dadd( 504.685, 646.875, 45.3768, 0.3976 ) }
    dend_15 { pt3dadd( 503.876, 647.684, 45.3258, 0.4384 ) }
    dend_15 { pt3dadd( 503.067, 648.492, 45.3032, 0.433 ) }
    dend_15 { pt3dadd( 502.229, 649.269, 45.2925, 0.3596 ) }
    dend_15 { pt3dadd( 501.381, 650.038, 45.2785, 0.3006 ) }
    dend_15 { pt3dadd( 500.533, 650.806, 45.2586, 0.2756 ) }
    dend_15 { pt3dadd( 499.644, 651.519, 45.2312, 0.2766 ) }
    dend_15 { pt3dadd( 498.667, 652.115, 45.1965, 0.2784 ) }
    dend_15 { pt3dadd( 497.681, 652.689, 45.1489, 0.2818 ) }
    dend_15 { pt3dadd( 496.639, 653.145, 45.0576, 0.2876 ) }
    dend_15 { pt3dadd( 495.598, 653.602, 44.9428, 0.2998 ) }
    dend_15 { pt3dadd( 494.557, 654.058, 44.8241, 0.316 ) }
    dend_15 { pt3dadd( 493.441, 654.239, 44.7524, 0.377 ) }
    dend_15 { pt3dadd( 492.301, 654.325, 44.7434, 0.3408 ) }
    dend_15 { pt3dadd( 491.19, 654.54, 44.83, 0.3124 ) }
    dend_15 { pt3dadd( 490.103, 654.85, 45.0198, 0.2988 ) }
    dend_15 { pt3dadd( 489.015, 655.161, 45.2813, 0.3142 ) }
    dend_15 { pt3dadd( 487.927, 655.472, 45.5851, 0.3734 ) }
    dend_15 { pt3dadd( 486.841, 655.782, 45.9049, 0.334 ) }
    dend_15 { pt3dadd( 485.742, 656.081, 46.191, 0.3 ) }
    dend_15 { pt3dadd( 484.635, 656.369, 46.4145, 0.2748 ) }
    dend_15 { pt3dadd( 483.756, 656.65, 46.6082, 0.2748 ) }
    dend_15 { pt3dadd( 482.771, 657.223, 46.7998, 0.275 ) }
    dend_15 { pt3dadd( 481.788, 657.798, 46.993, 0.2754 ) }
    dend_15 { pt3dadd( 480.803, 658.372, 47.1901, 0.2762 ) }
    dend_15 { pt3dadd( 479.818, 658.946, 47.3934, 0.2778 ) }
    dend_15 { pt3dadd( 478.833, 659.519, 47.5983, 0.2804 ) }
    dend_15 { pt3dadd( 477.849, 660.094, 47.7977, 0.2856 ) }
    dend_15 { pt3dadd( 476.859, 660.667, 47.9562, 0.2948 ) }
    dend_15 { pt3dadd( 475.868, 661.241, 48.0894, 0.3128 ) }
    dend_15 { pt3dadd( 474.768, 661.365, 48.2118, 0.3414 ) }
    dend_15 { pt3dadd( 473.625, 661.314, 48.3356, 0.4186 ) }
    dend_15 { pt3dadd( 472.519, 661.422, 48.4932, 0.4432 ) }
    dend_15 { pt3dadd( 471.49, 661.874, 48.7385, 0.3786 ) }
    dend_15 { pt3dadd( 470.462, 662.326, 49.056, 0.3366 ) }
    dend_15 { pt3dadd( 469.467, 662.85, 49.4024, 0.3382 ) }
    dend_15 { pt3dadd( 468.546, 663.529, 49.7143, 0.413 ) }
    dend_15 { pt3dadd( 467.625, 664.208, 49.9996, 0.4328 ) }
    dend_15 { pt3dadd( 466.745, 664.877, 50.3572, 0.3594 ) }
    dend_15 { pt3dadd( 465.872, 665.545, 50.7828, 0.3 ) }
    dend_15 { pt3dadd( 464.882, 666.078, 51.2109, 0.2746 ) }
    dend_15 { pt3dadd( 463.865, 666.578, 51.6289, 0.2746 ) }
    dend_15 { pt3dadd( 462.846, 667.078, 52.0344, 0.2746 ) }
    dend_15 { pt3dadd( 461.829, 667.579, 52.4166, 0.2748 ) }
    dend_15 { pt3dadd( 460.811, 668.079, 52.764, 0.2748 ) }
    dend_15 { pt3dadd( 459.793, 668.579, 53.083, 0.2752 ) }
    dend_15 { pt3dadd( 458.776, 669.08, 53.38, 0.2756 ) }
    dend_15 { pt3dadd( 457.758, 669.58, 53.653, 0.2766 ) }
    dend_15 { pt3dadd( 456.735, 670.074, 53.8871, 0.2784 ) }
    dend_15 { pt3dadd( 455.694, 670.548, 54.0408, 0.2818 ) }
    dend_15 { pt3dadd( 454.652, 671.021, 54.1282, 0.288 ) }
    dend_15 { pt3dadd( 453.611, 671.495, 54.1621, 0.299 ) }
    dend_15 { pt3dadd( 452.569, 671.968, 54.1534, 0.322 ) }
    dend_15 { pt3dadd( 451.528, 672.441, 54.1136, 0.3518 ) }
    dend_15 { pt3dadd( 450.487, 672.914, 54.0515, 0.4688 ) }
    dend_15 { pt3dadd( 449.394, 673.226, 53.9398, 0.387 ) }
    dend_15 { pt3dadd( 448.294, 673.508, 53.7877, 0.3136 ) }
    dend_15 { pt3dadd( 447.193, 673.791, 53.6124, 0.2542 ) }
    dend_15 { pt3dadd( 446.067, 673.911, 53.4556, 0.2288 ) }
    dend_15 { pt3dadd( 444.923, 673.911, 53.233, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 93/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 523.262, 639.686, 41.613, 0.5844 ) }
    dend_14 { pt3dadd( 523.13, 640.83, 40.7736, 0.4576 ) }
    dend_14 { pt3dadd( 522.92, 641.953, 40.5692, 0.6222 ) }
    dend_14 { pt3dadd( 522.45, 642.994, 40.5084, 0.7348 ) }
    dend_14 { pt3dadd( 522.086, 644.036, 40.3418, 0.6506 ) }
    dend_14 { pt3dadd( 521.519, 645.021, 40.2094, 0.5434 ) }
    dend_14 { pt3dadd( 520.65, 645.724, 40.1892, 0.564 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_14 { pt3dadd( 519.711, 646.367, 40.1716, 0.6812 ) }
    dend_14 { pt3dadd( 518.839, 647.033, 40.0386, 0.7438 ) }
    dend_14 { pt3dadd( 518.071, 647.878, 39.9165, 0.6972 ) }
    dend_14 { pt3dadd( 517.417, 648.816, 39.8118, 0.712 ) }
    dend_14 { pt3dadd( 516.793, 649.774, 39.7029, 0.7068 ) }
    dend_14 { pt3dadd( 516.308, 650.804, 39.6102, 0.6268 ) }
    dend_14 { pt3dadd( 515.918, 651.846, 39.5856, 0.5916 ) }
    dend_14 { pt3dadd( 515.442, 652.805, 39.4276, 0.4354 ) }
    dend_14 { pt3dadd( 515.127, 653.526, 38.9822, 0.3576 ) }
    dend_14 { pt3dadd( 514.557, 654.484, 38.6058, 0.3286 ) }
    dend_14 { pt3dadd( 514.392, 655.583, 38.3628, 0.4014 ) }
    dend_14 { pt3dadd( 514.123, 656.672, 38.1018, 0.3806 ) }
    dend_14 { pt3dadd( 514.109, 657.766, 37.8686, 0.4118 ) }
    dend_14 { pt3dadd( 514.185, 658.904, 37.6765, 0.359 ) }
    dend_14 { pt3dadd( 514.26, 660.042, 37.5099, 0.3412 ) }
    dend_14 { pt3dadd( 514.336, 661.179, 37.3254, 0.3766 ) }
    dend_14 { pt3dadd( 514.412, 662.318, 37.1311, 0.3396 ) }
    dend_14 { pt3dadd( 514.461, 663.458, 36.953, 0.3106 ) }
    dend_14 { pt3dadd( 514.451, 664.602, 36.8038, 0.2942 ) }
    dend_14 { pt3dadd( 514.441, 665.746, 36.6736, 0.3118 ) }
    dend_14 { pt3dadd( 514.342, 666.879, 36.5117, 0.3396 ) }
    dend_14 { pt3dadd( 514.241, 668.011, 36.3241, 0.4154 ) }
    dend_14 { pt3dadd( 514.139, 669.144, 36.1194, 0.437 ) }
    dend_14 { pt3dadd( 514.036, 670.276, 35.9061, 0.3674 ) }
    dend_14 { pt3dadd( 513.934, 671.409, 35.6938, 0.315 ) }
    dend_14 { pt3dadd( 513.698, 672.524, 35.5275, 0.3018 ) }
    dend_14 { pt3dadd( 513.422, 673.635, 35.4161, 0.3274 ) }
    dend_14 { pt3dadd( 513.145, 674.745, 35.3475, 0.3618 ) }
    dend_14 { pt3dadd( 512.868, 675.855, 35.3086, 0.4876 ) }
    dend_14 { pt3dadd( 512.72, 676.988, 35.2881, 0.4212 ) }
    dend_14 { pt3dadd( 512.581, 678.124, 35.2755, 0.3794 ) }
    dend_14 { pt3dadd( 512.379, 679.232, 35.2607, 0.3642 ) }
    dend_14 { pt3dadd( 511.603, 680.071, 35.2397, 0.4916 ) }
    dend_14 { pt3dadd( 511.079, 681.083, 35.2097, 0.43 ) }
    dend_14 { pt3dadd( 510.586, 682.115, 35.1686, 0.3896 ) }
    dend_14 { pt3dadd( 510.092, 683.148, 35.1128, 0.4136 ) }
    dend_14 { pt3dadd( 509.614, 684.184, 35.0398, 0.434 ) }
    dend_14 { pt3dadd( 509.448, 685.311, 34.9121, 0.3618 ) }
    dend_14 { pt3dadd( 509.283, 686.438, 34.743, 0.3046 ) }
    dend_14 { pt3dadd( 509.118, 687.565, 34.5442, 0.283 ) }
    dend_14 { pt3dadd( 508.952, 688.691, 34.3277, 0.29 ) }
    dend_14 { pt3dadd( 508.786, 689.818, 34.1034, 0.3044 ) }
    dend_14 { pt3dadd( 508.622, 690.945, 33.8797, 0.3246 ) }
    dend_14 { pt3dadd( 508.611, 692.089, 33.6938, 0.3928 ) }
    dend_14 { pt3dadd( 508.652, 693.232, 33.5297, 0.3704 ) }
    dend_14 { pt3dadd( 508.722, 694.374, 33.3754, 0.3636 ) }
    dend_14 { pt3dadd( 508.792, 695.515, 33.2217, 0.413 ) }
    dend_14 { pt3dadd( 508.811, 696.561, 33.0092, 0.4328 ) }
    dend_14 { pt3dadd( 508.569, 697.25, 32.5587, 0.3594 ) }
    dend_14 { pt3dadd( 508.508, 698.389, 32.1919, 0.3 ) }
    dend_14 { pt3dadd( 508.508, 699.533, 31.9035, 0.2746 ) }
    dend_14 { pt3dadd( 508.508, 700.677, 31.6868, 0.2746 ) }
    dend_14 { pt3dadd( 508.47, 701.818, 31.5342, 0.2746 ) }
    dend_14 { pt3dadd( 508.105, 702.884, 31.43, 0.2746 ) }
    dend_14 { pt3dadd( 507.697, 703.849, 31.2976, 0.2746 ) }
    dend_14 { pt3dadd( 507.404, 704.948, 31.1858, 0.2744 ) }
    dend_14 { pt3dadd( 507.154, 706.055, 31.0946, 0.2744 ) }
    dend_14 { pt3dadd( 507.022, 707.168, 30.9826, 0.2742 ) }
    dend_14 { pt3dadd( 506.587, 708.164, 30.9022, 0.274 ) }
    dend_14 { pt3dadd( 506.126, 709.18, 30.851, 0.2736 ) }
    dend_14 { pt3dadd( 505.697, 710.162, 30.8244, 0.2728 ) }
    dend_14 { pt3dadd( 504.974, 711.031, 30.8078, 0.2712 ) }
    dend_14 { pt3dadd( 504.655, 712.101, 30.8, 0.2684 ) }
    dend_14 { pt3dadd( 504.161, 713.047, 30.8, 0.2626 ) }
    dend_14 { pt3dadd( 504.161, 714.191, 30.8, 0.2542 ) }
    dend_14 { pt3dadd( 504.161, 715.335, 30.8, 0.2288 ) }
    dend_14 { pt3dadd( 504.618, 716.373, 30.8, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 67/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 573.792, 612.534, 35.3111, 0.602 ) }
    dend_7 { pt3dadd( 574.232, 612.753, 35.261, 0.5626 ) }
    dend_7 { pt3dadd( 575.271, 613.226, 35.2092, 0.527 ) }
    dend_7 { pt3dadd( 576.326, 613.668, 35.1501, 0.5072 ) }
    dend_7 { pt3dadd( 577.275, 614.275, 35.0717, 0.4758 ) }
    dend_7 { pt3dadd( 578.038, 615.124, 34.9712, 0.3916 ) }
    dend_7 { pt3dadd( 578.842, 615.939, 34.8454, 0.362 ) }
    dend_7 { pt3dadd( 579.802, 616.553, 34.6772, 0.38 ) }
    dend_7 { pt3dadd( 580.869, 616.743, 34.3784, 0.516 ) }
    dend_7 { pt3dadd( 581.939, 616.994, 34.0105, 0.4998 ) }
    dend_7 { pt3dadd( 583.051, 616.738, 33.7036, 0.3992 ) }
    dend_7 { pt3dadd( 584.074, 616.275, 33.5401, 0.3266 ) }
    dend_7 { pt3dadd( 585.14, 615.949, 33.3351, 0.325 ) }
    dend_7 { pt3dadd( 586.23, 615.602, 33.1887, 0.3636 ) }
    dend_7 { pt3dadd( 587.328, 615.29, 33.1022, 0.461 ) }
    dend_7 { pt3dadd( 588.471, 615.272, 33.0462, 0.5162 ) }
    dend_7 { pt3dadd( 589.606, 615.409, 32.9972, 0.5418 ) }
    dend_7 { pt3dadd( 590.68, 615.799, 32.9482, 0.5044 ) }
    dend_7 { pt3dadd( 591.741, 616.231, 32.9076, 0.617 ) }
    dend_7 { pt3dadd( 592.776, 616.717, 32.8572, 0.63 ) }
    dend_7 { pt3dadd( 593.836, 617.148, 32.7919, 0.6888 ) }
    dend_7 { pt3dadd( 594.91, 617.524, 32.69, 0.6302 ) }
    dend_7 { pt3dadd( 595.948, 617.903, 32.496, 0.6472 ) }
    dend_7 { pt3dadd( 596.995, 618.359, 32.3246, 0.5278 ) }
    dend_7 { pt3dadd( 598.09, 618.682, 32.2134, 0.5798 ) }
    dend_7 { pt3dadd( 599.193, 618.907, 32.1983, 0.4938 ) }
    dend_7 { pt3dadd( 600.333, 618.93, 32.1628, 0.5342 ) }
    dend_7 { pt3dadd( 601.471, 618.92, 32.1054, 0.5538 ) }
    dend_7 { pt3dadd( 602.611, 619.008, 32.0692, 0.6294 ) }
    dend_7 { pt3dadd( 603.657, 619.465, 32.0519, 0.5792 ) }
    dend_7 { pt3dadd( 604.701, 619.921, 32.0648, 0.4944 ) }
    dend_7 { pt3dadd( 605.751, 620.356, 32.0242, 0.5256 ) }
    dend_7 { pt3dadd( 606.807, 620.796, 32.0018, 0.5858 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_7 { pt3dadd( 607.864, 621.233, 31.9953, 0.6844 ) }
    dend_7 { pt3dadd( 608.836, 621.829, 32.0242, 0.7016 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 2/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 573.792, 612.534, 35.3111, 0.602 ) }
    dend_6 { pt3dadd( 574.032, 613.019, 35.3469, 0.4576 ) }
    dend_6 { pt3dadd( 574.527, 613.972, 34.3109, 0.5018 ) }
    dend_6 { pt3dadd( 575.044, 614.763, 33.782, 0.436 ) }
    dend_6 { pt3dadd( 575.679, 615.701, 33.2634, 0.4634 ) }
    dend_6 { pt3dadd( 576.245, 616.689, 32.7762, 0.474 ) }
    dend_6 { pt3dadd( 576.793, 617.671, 32.2717, 0.4614 ) }
    dend_6 { pt3dadd( 577.104, 618.742, 31.7817, 0.3652 ) }
    dend_6 { pt3dadd( 577.155, 619.881, 31.3695, 0.311 ) }
    dend_6 { pt3dadd( 577.193, 620.969, 30.9036, 0.2946 ) }
    dend_6 { pt3dadd( 577.498, 621.827, 30.2366, 0.3128 ) }
    dend_6 { pt3dadd( 578.006, 622.558, 29.4076, 0.3412 ) }
    dend_6 { pt3dadd( 577.992, 623.48, 28.5466, 0.4182 ) }
    dend_6 { pt3dadd( 577.69, 624.242, 27.8214, 0.4426 ) }
    dend_6 { pt3dadd( 577.36, 625.318, 27.2476, 0.3774 ) }
    dend_6 { pt3dadd( 577.257, 626.44, 26.8814, 0.3348 ) }
    dend_6 { pt3dadd( 577.655, 627.426, 26.6064, 0.3336 ) }
    dend_6 { pt3dadd( 577.999, 628.429, 26.4888, 0.4104 ) }
    dend_6 { pt3dadd( 578.062, 629.524, 26.5558, 0.3984 ) }
    dend_6 { pt3dadd( 578.057, 630.647, 26.6266, 0.4398 ) }
    dend_6 { pt3dadd( 578.028, 631.773, 26.6025, 0.4354 ) }
    dend_6 { pt3dadd( 577.852, 632.885, 26.5706, 0.364 ) }
    dend_6 { pt3dadd( 577.847, 634.003, 26.5936, 0.3088 ) }
    dend_6 { pt3dadd( 578.132, 635.065, 26.5275, 0.291 ) }
    dend_6 { pt3dadd( 578.658, 636.038, 26.3738, 0.3046 ) }
    dend_6 { pt3dadd( 578.849, 637.033, 26.1218, 0.3322 ) }
    dend_6 { pt3dadd( 578.822, 638.129, 25.993, 0.371 ) }
    dend_6 { pt3dadd( 578.968, 639.097, 26.1472, 0.5042 ) }
    dend_6 { pt3dadd( 578.97, 640.122, 26.493, 0.4544 ) }
    dend_6 { pt3dadd( 578.926, 641.253, 26.7725, 0.4292 ) }
    dend_6 { pt3dadd( 578.666, 642.306, 26.8915, 0.513 ) }
    dend_6 { pt3dadd( 578.567, 642.973, 27.006, 0.4942 ) }
    dend_6 { pt3dadd( 578.438, 644.091, 27.1438, 0.3886 ) }
    dend_6 { pt3dadd( 578.062, 644.827, 27.4128, 0.3072 ) }
    dend_6 { pt3dadd( 577.67, 645.872, 27.6226, 0.2882 ) }
    dend_6 { pt3dadd( 577.471, 646.997, 27.8088, 0.2996 ) }
    dend_6 { pt3dadd( 577.272, 648.115, 27.9681, 0.3216 ) }
    dend_6 { pt3dadd( 577.115, 649.246, 28.0815, 0.3576 ) }
    dend_6 { pt3dadd( 577.034, 650.383, 28.1554, 0.4496 ) }
    dend_6 { pt3dadd( 577.034, 651.524, 28.219, 0.4966 ) }
    dend_6 { pt3dadd( 577.034, 652.658, 28.3371, 0.498 ) }
    dend_6 { pt3dadd( 577.034, 653.801, 28.4553, 0.4588 ) }
    dend_6 { pt3dadd( 577.147, 654.935, 28.5541, 0.3604 ) }
    dend_6 { pt3dadd( 577.262, 656.057, 28.6756, 0.302 ) }
    dend_6 { pt3dadd( 577.267, 657.201, 28.7686, 0.2782 ) }
    dend_6 { pt3dadd( 577.377, 658.338, 28.8361, 0.2814 ) }
    dend_6 { pt3dadd( 577.561, 659.461, 28.8845, 0.2872 ) }
    dend_6 { pt3dadd( 578.081, 660.475, 28.9248, 0.299 ) }
    dend_6 { pt3dadd( 578.383, 661.566, 28.9752, 0.3146 ) }
    dend_6 { pt3dadd( 578.888, 662.577, 29.0447, 0.3744 ) }
    dend_6 { pt3dadd( 579.437, 663.574, 29.1077, 0.3358 ) }
    dend_6 { pt3dadd( 579.987, 664.568, 29.1668, 0.3036 ) }
    dend_6 { pt3dadd( 580.533, 665.555, 29.2264, 0.2814 ) }
    dend_6 { pt3dadd( 580.95, 666.615, 29.2894, 0.287 ) }
    dend_6 { pt3dadd( 581.423, 667.648, 29.356, 0.2988 ) }
    dend_6 { pt3dadd( 582.109, 668.551, 29.4535, 0.3142 ) }
    dend_6 { pt3dadd( 582.647, 669.5, 29.6139, 0.3734 ) }
    dend_6 { pt3dadd( 583.534, 670.07, 29.8259, 0.3338 ) }
    dend_6 { pt3dadd( 584.22, 670.956, 29.9914, 0.3 ) }
    dend_6 { pt3dadd( 585.222, 671.497, 30.114, 0.2746 ) }
    dend_6 { pt3dadd( 585.81, 672.419, 30.1969, 0.2746 ) }
    dend_6 { pt3dadd( 586.292, 673.442, 30.2448, 0.2746 ) }
    dend_6 { pt3dadd( 586.758, 674.465, 30.2666, 0.2746 ) }
    dend_6 { pt3dadd( 586.758, 675.609, 30.2772, 0.2746 ) }
    dend_6 { pt3dadd( 586.962, 676.727, 30.2921, 0.2746 ) }
    dend_6 { pt3dadd( 587.101, 677.849, 30.3131, 0.2746 ) }
    dend_6 { pt3dadd( 587.101, 678.993, 30.3425, 0.2746 ) }
    dend_6 { pt3dadd( 587.101, 680.137, 30.3831, 0.2746 ) }
    dend_6 { pt3dadd( 587.023, 681.266, 30.4382, 0.2746 ) }
    dend_6 { pt3dadd( 586.581, 682.318, 30.5144, 0.2746 ) }
    dend_6 { pt3dadd( 586.164, 683.371, 30.6387, 0.2746 ) }
    dend_6 { pt3dadd( 585.731, 684.415, 30.8036, 0.2746 ) }
    dend_6 { pt3dadd( 585.377, 685.493, 30.9812, 0.2746 ) }
    dend_6 { pt3dadd( 584.826, 686.451, 31.2309, 0.2746 ) }
    dend_6 { pt3dadd( 584.198, 687.407, 31.4292, 0.2746 ) }
    dend_6 { pt3dadd( 583.398, 688.206, 31.5815, 0.2746 ) }
    dend_6 { pt3dadd( 582.456, 688.844, 31.6946, 0.2746 ) }
    dend_6 { pt3dadd( 581.798, 689.778, 31.7873, 0.2746 ) }
    dend_6 { pt3dadd( 581.024, 690.603, 31.8752, 0.2746 ) }
    dend_6 { pt3dadd( 580.05, 691.14, 31.9676, 0.2744 ) }
    dend_6 { pt3dadd( 579.15, 691.805, 32.0816, 0.2744 ) }
    dend_6 { pt3dadd( 578.342, 692.598, 32.214, 0.2742 ) }
    dend_6 { pt3dadd( 578.04, 693.164, 32.6407, 0.274 ) }
    dend_6 { pt3dadd( 577.227, 693.943, 32.9826, 0.2736 ) }
    dend_6 { pt3dadd( 576.656, 694.935, 33.2436, 0.2728 ) }
    dend_6 { pt3dadd( 576.347, 695.999, 33.4292, 0.2712 ) }
    dend_6 { pt3dadd( 575.845, 696.967, 33.5457, 0.2684 ) }
    dend_6 { pt3dadd( 575.314, 697.973, 33.6, 0.2626 ) }
    dend_6 { pt3dadd( 575.203, 699.098, 33.6, 0.2542 ) }
    dend_6 { pt3dadd( 575.203, 700.242, 33.6, 0.2288 ) }
    dend_6 { pt3dadd( 575.203, 701.386, 33.6, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 93/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 608.836, 621.829, 32.0242, 0.7016 ) }
    dend_9 { pt3dadd( 609.456, 621.786, 32.9739, 0.2288 ) }
    dend_9 { pt3dadd( 610.515, 621.374, 33.2878, 0.5096 ) }
    dend_9 { pt3dadd( 611.583, 620.983, 33.3922, 0.4572 ) }
    dend_9 { pt3dadd( 612.693, 620.803, 33.5538, 0.4702 ) }
    dend_9 { pt3dadd( 613.806, 621.007, 33.724, 0.415 ) }
    dend_9 { pt3dadd( 614.835, 621.491, 33.9251, 0.4704 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_9 { pt3dadd( 615.856, 621.992, 34.1396, 0.4942 ) }
    dend_9 { pt3dadd( 616.91, 622.399, 34.3484, 0.4626 ) }
    dend_9 { pt3dadd( 618.014, 622.524, 34.5929, 0.5438 ) }
    dend_9 { pt3dadd( 619.128, 622.345, 34.8023, 0.4732 ) }
    dend_9 { pt3dadd( 620.202, 621.953, 34.9356, 0.5012 ) }
    dend_9 { pt3dadd( 621.301, 621.672, 34.9927, 0.4668 ) }
    dend_9 { pt3dadd( 622.442, 621.622, 34.9759, 0.5928 ) }
    dend_9 { pt3dadd( 623.571, 621.488, 34.9121, 0.592 ) }
    dend_9 { pt3dadd( 624.685, 621.257, 34.8236, 0.585 ) }
    dend_9 { pt3dadd( 625.808, 621.184, 34.6548, 0.5994 ) }
    dend_9 { pt3dadd( 626.92, 621.128, 34.4182, 0.4918 ) }
    dend_9 { pt3dadd( 628.039, 620.921, 34.204, 0.4874 ) }
    dend_9 { pt3dadd( 629.133, 620.633, 33.9842, 0.4472 ) }
    dend_9 { pt3dadd( 630.238, 620.423, 33.756, 0.5274 ) }
    dend_9 { pt3dadd( 631.363, 620.277, 33.5742, 0.6128 ) }
    dend_9 { pt3dadd( 632.5, 620.277, 33.4762, 0.6202 ) }
    dend_9 { pt3dadd( 633.64, 620.277, 33.4566, 0.4512 ) }
    dend_9 { pt3dadd( 634.783, 620.278, 33.4505, 0.3388 ) }
    dend_9 { pt3dadd( 635.922, 620.284, 33.4804, 0.2992 ) }
    dend_9 { pt3dadd( 637.063, 620.324, 33.5129, 0.321 ) }
    dend_9 { pt3dadd( 638.168, 620.522, 33.577, 0.3562 ) }
    dend_9 { pt3dadd( 639.29, 620.56, 33.6288, 0.4474 ) }
    dend_9 { pt3dadd( 640.321, 620.144, 33.6073, 0.491 ) }
    dend_9 { pt3dadd( 641.347, 619.712, 33.483, 0.494 ) }
    dend_9 { pt3dadd( 642.426, 619.367, 33.3284, 0.4206 ) }
    dend_9 { pt3dadd( 643.523, 619.045, 33.187, 0.4386 ) }
    dend_9 { pt3dadd( 644.644, 618.958, 33.0229, 0.4096 ) }
    dend_9 { pt3dadd( 645.721, 619.236, 32.9361, 0.4306 ) }
    dend_9 { pt3dadd( 646.759, 619.6, 32.986, 0.5646 ) }
    dend_9 { pt3dadd( 647.816, 619.823, 32.9367, 0.5794 ) }
    dend_9 { pt3dadd( 648.906, 620.109, 32.8202, 0.5976 ) }
    dend_9 { pt3dadd( 650.033, 620.244, 32.7348, 0.4466 ) }
    dend_9 { pt3dadd( 651.165, 620.103, 32.6192, 0.3784 ) }
    dend_9 { pt3dadd( 652.285, 619.867, 32.454, 0.3684 ) }
    dend_9 { pt3dadd( 653.416, 619.982, 32.2269, 0.4694 ) }
    dend_9 { pt3dadd( 654.481, 620.254, 31.8805, 0.5342 ) }
    dend_9 { pt3dadd( 655.574, 620.336, 31.4322, 0.5634 ) }
    dend_9 { pt3dadd( 656.267, 620.337, 30.8325, 0.6002 ) }
    dend_9 { pt3dadd( 657.217, 620.734, 30.3377, 0.5244 ) }
    dend_9 { pt3dadd( 658.347, 620.909, 29.9354, 0.3972 ) }
    dend_9 { pt3dadd( 659.423, 621.256, 29.6008, 0.3242 ) }
    dend_9 { pt3dadd( 660.438, 621.737, 29.2695, 0.3142 ) }
    dend_9 { pt3dadd( 661.531, 622.028, 28.9738, 0.3736 ) }
    dend_9 { pt3dadd( 662.57, 622.222, 28.5816, 0.334 ) }
    dend_9 { pt3dadd( 663.671, 622.222, 28.1842, 0.3002 ) }
    dend_9 { pt3dadd( 664.815, 622.222, 27.8664, 0.2752 ) }
    dend_9 { pt3dadd( 665.921, 622.222, 27.5475, 0.2756 ) }
    dend_9 { pt3dadd( 667.064, 622.222, 27.309, 0.2766 ) }
    dend_9 { pt3dadd( 668.208, 622.222, 27.1345, 0.2782 ) }
    dend_9 { pt3dadd( 669.351, 622.246, 27.0088, 0.2814 ) }
    dend_9 { pt3dadd( 670.49, 622.33, 26.8988, 0.287 ) }
    dend_9 { pt3dadd( 671.631, 622.336, 26.7588, 0.2988 ) }
    dend_9 { pt3dadd( 672.774, 622.336, 26.6224, 0.314 ) }
    dend_9 { pt3dadd( 673.279, 621.993, 26.3276, 0.3734 ) }
    dend_9 { pt3dadd( 674.424, 621.993, 26.0893, 0.3338 ) }
    dend_9 { pt3dadd( 675.568, 621.993, 25.9039, 0.2996 ) }
    dend_9 { pt3dadd( 676.703, 621.917, 25.7522, 0.274 ) }
    dend_9 { pt3dadd( 677.795, 621.605, 25.6281, 0.2736 ) }
    dend_9 { pt3dadd( 678.932, 621.535, 25.5528, 0.2728 ) }
    dend_9 { pt3dadd( 680.041, 621.266, 25.52, 0.2712 ) }
    dend_9 { pt3dadd( 681.138, 620.986, 25.4976, 0.2684 ) }
    dend_9 { pt3dadd( 682.277, 620.891, 25.4845, 0.2626 ) }
    dend_9 { pt3dadd( 683.344, 620.505, 25.48, 0.2542 ) }
    dend_9 { pt3dadd( 684.339, 620.039, 25.48, 0.2288 ) }
    dend_9 { pt3dadd( 685.256, 619.59, 25.48, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 65/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 608.836, 621.829, 32.0242, 0.7016 ) }
    dend_8 { pt3dadd( 609.206, 622.917, 32.0026, 0.6232 ) }
    dend_8 { pt3dadd( 609.695, 623.951, 31.9766, 0.5548 ) }
    dend_8 { pt3dadd( 610.136, 625.006, 31.9578, 0.5116 ) }
    dend_8 { pt3dadd( 610.664, 626.016, 31.9463, 0.485 ) }
    dend_8 { pt3dadd( 611.266, 626.977, 31.9735, 0.4036 ) }
    dend_8 { pt3dadd( 611.897, 627.899, 31.9494, 0.4078 ) }
    dend_8 { pt3dadd( 612.802, 628.443, 31.8223, 0.3504 ) }
    dend_8 { pt3dadd( 613.885, 628.701, 31.7324, 0.3306 ) }
    dend_8 { pt3dadd( 614.947, 629.084, 31.6772, 0.3322 ) }
    dend_8 { pt3dadd( 616.043, 629.391, 31.6112, 0.3772 ) }
    dend_8 { pt3dadd( 617.163, 629.624, 31.5244, 0.4858 ) }
    dend_8 { pt3dadd( 618.239, 629.884, 31.353, 0.5644 ) }
    dend_8 { pt3dadd( 619.295, 630.268, 31.1542, 0.62 ) }
    dend_8 { pt3dadd( 620.325, 630.765, 30.9719, 0.7022 ) }
    dend_8 { pt3dadd( 621.332, 631.31, 30.8179, 0.7278 ) }
    dend_8 { pt3dadd( 622.319, 631.886, 30.6936, 0.704 ) }
    dend_8 { pt3dadd( 623.308, 632.46, 30.5903, 0.549 ) }
    dend_8 { pt3dadd( 624.235, 633.109, 30.4604, 0.571 ) }
    dend_8 { pt3dadd( 625.197, 633.707, 30.3055, 0.4834 ) }
    dend_8 { pt3dadd( 626.239, 634.131, 30.2078, 0.4852 ) }
    dend_8 { pt3dadd( 627.31, 634.46, 30.0888, 0.6062 ) }
    dend_8 { pt3dadd( 628.391, 634.792, 29.911, 0.718 ) }
    dend_8 { pt3dadd( 629.47, 635.157, 29.7228, 0.5562 ) }
    dend_8 { pt3dadd( 630.529, 635.587, 29.5548, 0.4456 ) }
    dend_8 { pt3dadd( 631.598, 635.985, 29.3896, 0.4654 ) }
    dend_8 { pt3dadd( 632.647, 636.371, 29.1704, 0.5552 ) }
    dend_8 { pt3dadd( 633.619, 636.913, 28.9086, 0.4634 ) }
    dend_8 { pt3dadd( 634.546, 637.578, 28.6871, 0.404 ) }
    dend_8 { pt3dadd( 635.299, 638.119, 28.4318, 0.4416 ) }
    dend_8 { pt3dadd( 636.374, 638.496, 28.2414, 0.4806 ) }
    dend_8 { pt3dadd( 637.412, 638.976, 28.1103, 0.4734 ) }
    dend_8 { pt3dadd( 638.462, 639.415, 28.0311, 0.3886 ) }
    dend_8 { pt3dadd( 639.592, 639.578, 27.9871, 0.3492 ) }
    dend_8 { pt3dadd( 640.682, 639.861, 27.9602, 0.391 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_8 { pt3dadd( 641.81, 639.986, 27.9446, 0.3676 ) }
    dend_8 { pt3dadd( 642.931, 640.201, 27.9222, 0.357 ) }
    dend_8 { pt3dadd( 644.005, 640.598, 27.8914, 0.407 ) }
    dend_8 { pt3dadd( 645.131, 640.754, 27.8477, 0.3906 ) }
    dend_8 { pt3dadd( 646.256, 640.92, 27.7872, 0.4318 ) }
    dend_8 { pt3dadd( 647.367, 641.186, 27.7068, 0.3896 ) }
    dend_8 { pt3dadd( 648.474, 641.442, 27.5766, 0.43 ) }
    dend_8 { pt3dadd( 649.553, 641.809, 27.4249, 0.386 ) }
    dend_8 { pt3dadd( 650.608, 642.013, 27.1723, 0.4234 ) }
    dend_8 { pt3dadd( 651.732, 642.013, 26.8834, 0.374 ) }
    dend_8 { pt3dadd( 652.814, 642.185, 26.5838, 0.4 ) }
    dend_8 { pt3dadd( 653.785, 642.751, 26.3631, 0.336 ) }
    dend_8 { pt3dadd( 654.915, 642.862, 26.2161, 0.304 ) }
    dend_8 { pt3dadd( 656.004, 643.204, 26.1327, 0.282 ) }
    dend_8 { pt3dadd( 657.091, 643.56, 26.1058, 0.2884 ) }
    dend_8 { pt3dadd( 658.164, 643.855, 26.1139, 0.2998 ) }
    dend_8 { pt3dadd( 659.247, 644.148, 26.1411, 0.3236 ) }
    dend_8 { pt3dadd( 660.363, 644.301, 26.1733, 0.355 ) }
    dend_8 { pt3dadd( 661.489, 644.301, 26.2427, 0.4746 ) }
    dend_8 { pt3dadd( 662.612, 644.301, 26.35, 0.3976 ) }
    dend_8 { pt3dadd( 663.734, 644.422, 26.4312, 0.3334 ) }
    dend_8 { pt3dadd( 664.732, 644.922, 26.4877, 0.2892 ) }
    dend_8 { pt3dadd( 665.866, 645.067, 26.5194, 0.3028 ) }
    dend_8 { pt3dadd( 667.0, 645.201, 26.5272, 0.3218 ) }
    dend_8 { pt3dadd( 668.133, 645.294, 26.5121, 0.3876 ) }
    dend_8 { pt3dadd( 669.175, 645.759, 26.4754, 0.3612 ) }
    dend_8 { pt3dadd( 670.091, 646.442, 26.423, 0.3454 ) }
    dend_8 { pt3dadd( 671.14, 646.896, 26.3536, 0.3842 ) }
    dend_8 { pt3dadd( 672.28, 646.932, 26.2674, 0.3538 ) }
    dend_8 { pt3dadd( 673.393, 647.097, 26.1657, 0.3376 ) }
    dend_8 { pt3dadd( 673.932, 647.046, 25.8513, 0.3402 ) }
    dend_8 { pt3dadd( 675.072, 647.097, 25.5937, 0.4166 ) }
    dend_8 { pt3dadd( 676.164, 647.44, 25.3887, 0.4396 ) }
    dend_8 { pt3dadd( 677.303, 647.504, 25.2302, 0.3718 ) }
    dend_8 { pt3dadd( 678.447, 647.514, 25.1096, 0.3242 ) }
    dend_8 { pt3dadd( 679.583, 647.618, 25.0174, 0.3142 ) }
    dend_8 { pt3dadd( 680.727, 647.618, 24.9463, 0.3738 ) }
    dend_8 { pt3dadd( 681.863, 647.671, 24.8578, 0.3344 ) }
    dend_8 { pt3dadd( 682.807, 648.256, 24.7156, 0.301 ) }
    dend_8 { pt3dadd( 683.845, 648.578, 24.4681, 0.2766 ) }
    dend_8 { pt3dadd( 684.951, 648.648, 24.1797, 0.2782 ) }
    dend_8 { pt3dadd( 686.095, 648.648, 23.9501, 0.2814 ) }
    dend_8 { pt3dadd( 687.239, 648.648, 23.791, 0.287 ) }
    dend_8 { pt3dadd( 688.372, 648.735, 23.6981, 0.2988 ) }
    dend_8 { pt3dadd( 689.453, 649.101, 23.6662, 0.3142 ) }
    dend_8 { pt3dadd( 690.513, 649.449, 23.723, 0.3734 ) }
    dend_8 { pt3dadd( 691.657, 649.449, 23.7927, 0.3338 ) }
    dend_8 { pt3dadd( 692.801, 649.449, 23.8599, 0.3 ) }
    dend_8 { pt3dadd( 693.942, 649.401, 23.9266, 0.2746 ) }
    dend_8 { pt3dadd( 695.075, 649.334, 24.0274, 0.2746 ) }
    dend_8 { pt3dadd( 696.219, 649.334, 24.1139, 0.2746 ) }
    dend_8 { pt3dadd( 697.27, 648.949, 24.2169, 0.2746 ) }
    dend_8 { pt3dadd( 698.298, 648.484, 24.3172, 0.2746 ) }
    dend_8 { pt3dadd( 699.436, 648.419, 24.402, 0.2746 ) }
    dend_8 { pt3dadd( 700.575, 648.419, 24.4961, 0.2746 ) }
    dend_8 { pt3dadd( 701.709, 648.365, 24.5904, 0.2746 ) }
    dend_8 { pt3dadd( 702.759, 648.076, 24.6691, 0.2746 ) }
    dend_8 { pt3dadd( 703.896, 648.022, 24.7372, 0.2746 ) }
    dend_8 { pt3dadd( 704.942, 647.61, 24.8399, 0.2746 ) }
    dend_8 { pt3dadd( 706.016, 647.311, 24.9281, 0.2746 ) }
    dend_8 { pt3dadd( 707.068, 646.861, 25.0034, 0.2746 ) }
    dend_8 { pt3dadd( 708.098, 646.474, 25.0706, 0.2746 ) }
    dend_8 { pt3dadd( 709.207, 646.448, 25.2132, 0.2746 ) }
    dend_8 { pt3dadd( 710.336, 646.26, 25.324, 0.2746 ) }
    dend_8 { pt3dadd( 711.479, 646.246, 25.4069, 0.2746 ) }
    dend_8 { pt3dadd( 712.579, 646.024, 25.4713, 0.2748 ) }
    dend_8 { pt3dadd( 713.679, 645.78, 25.5203, 0.2748 ) }
    dend_8 { pt3dadd( 714.788, 645.563, 25.5584, 0.2752 ) }
    dend_8 { pt3dadd( 715.827, 645.272, 25.5912, 0.2756 ) }
    dend_8 { pt3dadd( 716.812, 644.873, 25.6357, 0.2766 ) }
    dend_8 { pt3dadd( 717.956, 644.868, 25.6922, 0.2782 ) }
    dend_8 { pt3dadd( 719.065, 644.658, 25.7625, 0.2814 ) }
    dend_8 { pt3dadd( 720.076, 644.204, 25.9255, 0.287 ) }
    dend_8 { pt3dadd( 721.071, 643.67, 26.1159, 0.2988 ) }
    dend_8 { pt3dadd( 722.147, 643.302, 26.2805, 0.3142 ) }
    dend_8 { pt3dadd( 723.054, 642.626, 26.4214, 0.3734 ) }
    dend_8 { pt3dadd( 723.893, 641.897, 26.5936, 0.3338 ) }
    dend_8 { pt3dadd( 724.899, 641.37, 26.7518, 0.3 ) }
    dend_8 { pt3dadd( 725.969, 641.013, 26.9046, 0.2746 ) }
    dend_8 { pt3dadd( 727.098, 640.841, 27.0164, 0.2746 ) }
    dend_8 { pt3dadd( 728.232, 640.742, 27.0976, 0.2746 ) }
    dend_8 { pt3dadd( 729.273, 640.291, 27.151, 0.2748 ) }
    dend_8 { pt3dadd( 730.352, 639.915, 27.1807, 0.2748 ) }
    dend_8 { pt3dadd( 731.364, 639.438, 27.2, 0.2752 ) }
    dend_8 { pt3dadd( 732.503, 639.382, 27.216, 0.2756 ) }
    dend_8 { pt3dadd( 733.593, 639.136, 27.2378, 0.2766 ) }
    dend_8 { pt3dadd( 734.632, 638.667, 27.2686, 0.2782 ) }
    dend_8 { pt3dadd( 735.719, 638.308, 27.3132, 0.2814 ) }
    dend_8 { pt3dadd( 736.776, 637.874, 27.3759, 0.2872 ) }
    dend_8 { pt3dadd( 737.785, 637.356, 27.4588, 0.299 ) }
    dend_8 { pt3dadd( 738.928, 637.322, 27.5621, 0.3144 ) }
    dend_8 { pt3dadd( 740.007, 637.322, 27.7446, 0.374 ) }
    dend_8 { pt3dadd( 741.063, 637.322, 28.0258, 0.335 ) }
    dend_8 { pt3dadd( 742.177, 637.322, 28.3427, 0.3022 ) }
    dend_8 { pt3dadd( 743.312, 637.354, 28.6059, 0.2788 ) }
    dend_8 { pt3dadd( 744.318, 637.727, 28.8089, 0.2824 ) }
    dend_8 { pt3dadd( 745.326, 638.177, 29.0192, 0.289 ) }
    dend_8 { pt3dadd( 746.391, 638.558, 29.1729, 0.301 ) }
    dend_8 { pt3dadd( 747.495, 638.849, 29.2645, 0.3256 ) }
    dend_8 { pt3dadd( 748.633, 638.958, 29.3166, 0.3586 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_8 { pt3dadd( 749.69, 639.291, 29.3448, 0.4816 ) }
    dend_8 { pt3dadd( 750.821, 639.429, 29.3504, 0.4104 ) }
    dend_8 { pt3dadd( 751.934, 639.62, 29.3339, 0.3584 ) }
    dend_8 { pt3dadd( 752.99, 640.006, 29.3082, 0.3302 ) }
    dend_8 { pt3dadd( 754.115, 640.203, 29.2762, 0.4044 ) }
    dend_8 { pt3dadd( 755.205, 640.547, 29.2393, 0.3858 ) }
    dend_8 { pt3dadd( 755.778, 641.384, 29.1186, 0.423 ) }
    dend_8 { pt3dadd( 756.79, 641.895, 29.0228, 0.3734 ) }
    dend_8 { pt3dadd( 757.776, 642.441, 28.9509, 0.3986 ) }
    dend_8 { pt3dadd( 758.912, 642.554, 28.9016, 0.3336 ) }
    dend_8 { pt3dadd( 760.011, 642.852, 28.873, 0.2994 ) }
    dend_8 { pt3dadd( 761.138, 643.034, 28.8646, 0.2736 ) }
    dend_8 { pt3dadd( 762.262, 643.14, 28.8747, 0.2728 ) }
    dend_8 { pt3dadd( 763.372, 643.396, 28.8893, 0.2712 ) }
    dend_8 { pt3dadd( 764.476, 643.652, 28.9072, 0.2684 ) }
    dend_8 { pt3dadd( 765.593, 643.862, 28.9276, 0.2626 ) }
    dend_8 { pt3dadd( 766.689, 644.129, 28.9803, 0.2542 ) }
    dend_8 { pt3dadd( 767.788, 644.439, 29.0332, 0.2288 ) }
    dend_8 { pt3dadd( 768.768, 644.873, 29.12, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_38, dend_37, dend_32, dend_25, dend_20, dend_11, dend_0, dend_42, dend_39, dend_36, dend_33, dend_29, dend_26, dend_24, dend_21, dend_17, dend_12, dend_4, dend_1, dend_41, dend_40, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_23, dend_22, dend_19, dend_18, dend_16, dend_13, dend_10, dend_5, dend_3, dend_2, dend_15, dend_14, dend_7, dend_6, dend_9, dend_8]}
    dend = new SectionList()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_32 dend.append()
    dend_25 dend.append()
    dend_20 dend.append()
    dend_11 dend.append()
    dend_0 dend.append()
    dend_42 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_33 dend.append()
    dend_29 dend.append()
    dend_26 dend.append()
    dend_24 dend.append()
    dend_21 dend.append()
    dend_17 dend.append()
    dend_12 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_41 dend.append()
    dend_40 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_13105, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_13105 = new SectionList()
    soma_0 OneSecGrp_SectionRef_13105.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.8342767  // units: uF/cm2
    forsec axon cm = 2.8342767  // units: uF/cm2
    forsec dend cm = 2.8342767  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 59.062218  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 1.7446656E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.062607184  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 2.8071553E-10  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.16925804  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 1.0829936  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.1250871  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 1.0712779E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.04280117  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 3.230946E-7  // units: S cm-2
        e_pas_nml2 = -94.93799  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 5.1963405E-4  // units: S cm-2
        e_pas_nml2 = -94.93799  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.9370007E-6  // units: S cm-2
        e_pas_nml2 = -94.93799  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 1.0749285E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.009070936  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513451
    forsec soma {
        insert CaDynamics_478513451
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_37 nseg = 9
    dend_42 nseg = 9
    dend_39 nseg = 3
    dend_24 nseg = 13
    dend_17 nseg = 5
    dend_41 nseg = 3
    dend_40 nseg = 13
    dend_35 nseg = 9
    dend_34 nseg = 15
    dend_31 nseg = 17
    dend_28 nseg = 7
    dend_23 nseg = 13
    dend_19 nseg = 7
    dend_18 nseg = 3
    dend_10 nseg = 5
    dend_2 nseg = 3
    dend_15 nseg = 5
    dend_14 nseg = 5
    dend_6 nseg = 5
    dend_9 nseg = 5
    dend_8 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478513451


