// Cell: bAC217_L23_MC_464f0bd828_0_0
/*
{
  "id" : "bAC217_L23_MC_464f0bd828_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.45107, -7.20494, 0.34076, 4.11613", "-5.802, -6.55166, 0.311223, 7.24085", "-5.15293, -5.89837, 0.281687, 9.81042", "-4.50386, -5.24508, 0.25215, 11.018", "-3.85479, -4.59179, 0.222614, 11.6134", "-3.20572, -3.9385, 0.193077, 11.9585", "-2.55666, -3.28522, 0.163541, 12.3652", "-1.90759, -2.63193, 0.134004, 12.6122", "-1.25852, -1.97864, 0.104468, 12.8185", "-0.609449, -1.32535, 0.074931, 13.0219", "0.0396201, -0.672063, 0.0453945, 13.2806", "0.688689, -0.0187755, 0.015858, 13.5211", "1.33776, 0.634513, -0.0136785, 13.1393", "1.98683, 1.2878, -0.0432151, 12.5959", "2.6359, 1.94109, -0.0727516, 11.9061", "3.28496, 2.59438, -0.102288, 10.9561", "3.93403, 3.24766, -0.131825, 9.72773", "4.5831, 3.90095, -0.161361, 7.7817", "5.23217, 4.55424, -0.190898, 5.18987", "5.88124, 5.20753, -0.220434, 3.56983", "6.53031, 5.86082, -0.249971, 2.2508" ]
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "7.23571, 4.56184, -0.561003, 3.9", "7.23571, 4.56184, -0.561003, 3.9", "8.7066, 7.33845, -1.7107, 2.5", "9.42414, 8.76362, -2.25237, 2.21", "10.3674, 10.7429, -2.96854, 1.99", "11.2397, 12.6734, -3.63137, 1.69", "11.8287, 14.0468, -4.0913, 1.69", "12.5866, 15.9362, -4.67792, 1.69", "13.1305, 17.4241, -5.09898, 1.47", "13.6958, 19.0237, -5.57801, 1.33", "14.6362, 21.6209, -6.452, 1.62", "15.1214, 22.9021, -6.91897, 1.47", "15.722, 24.4711, -7.49964, 1.47", "16.4688, 26.4115, -8.23251, 1.77", "16.9426, 27.6222, -8.69883, 1.84", "17.864, 29.8846, -9.58759, 1.47", "18.411, 31.1774, -10.1111, 1.62", "18.9626, 32.4368, -10.6077, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988839292253
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "0.855711, 6.57034, -4.871, 3.98", "0.855711, 6.57034, -4.871, 3.98", "0.951664, 8.18237, -5.13516, 3.61", "1.07163, 10.1978, -5.46542, 2.73", "1.19417, 12.2566, -5.80279, 2.14", "1.29426, 13.938, -6.07831, 2.21", "1.36493, 15.1254, -6.27287, 2.36", "1.39037, 15.782, -6.36828, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988839292253
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-7.94429, -1.71716, -0.621003, 3.39", "-7.94429, -1.71716, -0.621003, 3.39", "-9.8885, -1.45008, -0.116602, 2.58", "-10.8925, -1.29463, 0.137853, 2.58", "-12.2487, -1.04157, 0.479859, 2.5", "-13.5081, -0.753983, 0.794287, 2.73", "-14.8973, -0.373688, 1.15328, 1.92", "-16.0039, -0.00279802, 1.45982, 2.14", "-16.6308, 0.255974, 1.64104, 2.36", "-17.7497, 0.808081, 1.96093, 2.5", "-18.7583, 1.39525, 2.25511, 2.06", "-19.9384, 2.15389, 2.58159, 2.28", "-20.6257, 2.61797, 2.76062, 2.36", "-21.5216, 3.20541, 2.98006, 1.62", "-22.4602, 3.80725, 3.20557, 1.33", "-23.5495, 4.51456, 3.4358, 1.18", "-24.4907, 5.14737, 3.61295, 1.11", "-25.0931, 5.57782, 3.70775, 1.11", "-26.1183, 6.36615, 3.85661, 1.4", "-26.7858, 6.93209, 3.95631, 1.69", "-27.7002, 7.76562, 4.0726, 2.06", "-28.4237, 8.46811, 4.13523, 2.21", "-28.9819, 9.05467, 4.15868, 1.99", "-29.6142, 9.74788, 4.16543, 1.69", "-30.1964, 10.3969, 4.15886, 1.55", "-30.7224, 10.9569, 4.15487, 1.55", "-31.5869, 11.8354, 4.15211, 1.11", "-32.3213, 12.5876, 4.14752, 1.33", "-32.5988, 12.8845, 4.15221, 1.55", "-32.877, 13.2056, 4.16057, 1.55", "-33.3627, 13.7896, 4.18686, 1.55", "-33.8879, 14.4733, 4.2484, 0.96", "-34.3822, 15.1981, 4.33962, 1.4", "-34.6927, 15.6753, 4.42121, 1.55", "-35.1036, 16.3487, 4.50537, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988839292253
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.53031, 5.86082, -0.249971, 1.14764", "17.1025, 16.5017, -0.249971, 1.14764", "27.6747, 27.1426, -0.249971, 1.14764" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "18.9626, 32.4368, -10.6077, 0.96", "19.2107, 33.2853, -12.3869, 0.96", "19.3773, 33.8549, -13.5816, 0.81", "19.52, 34.3431, -14.6053, 0.88", "19.628, 34.7124, -15.3796, 1.03", "20.5966, 38.0248, -22.3257, 1.03", "20.7997, 38.7194, -23.7823, 1.03" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "18.9626, 32.4368, -10.6077, 1.77", "19.0778, 32.7811, -10.2916, 1.77", "19.6342, 34.4433, -8.76621, 1.69", "19.9026, 35.2452, -8.03031, 1.69", "20.4368, 36.8412, -6.56565, 1.84", "20.8351, 38.0313, -5.4734, 1.84" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "1.39037, 15.782, -6.36828, 1.33", "1.5221, 16.0611, -6.96012, 1.33", "1.97799, 17.2226, -8.98488, 1.62", "2.41209, 18.6299, -11.1274, 1.77", "2.63991, 19.4155, -12.2812, 1.55", "2.89179, 20.2851, -13.536, 1.55", "3.15486, 21.1567, -14.7296, 1.4", "3.4493, 22.0778, -15.8868, 1.25", "3.77889, 23.1443, -17.074, 1.4", "4.07561, 24.2001, -18.1985, 1.55", "4.32061, 25.2772, -19.4777, 1.77", "4.42201, 25.9343, -20.392, 1.99", "4.4771, 27.3117, -22.442, 2.14", "4.41017, 27.9375, -23.4472, 2.28", "4.21965, 28.5514, -24.5369, 2.58", "3.57562, 29.6801, -26.643, 2.36", "2.73825, 30.6868, -28.6528, 1.99", "2.13357, 31.274, -29.8587, 1.77", "0.933677, 32.2825, -31.9674, 1.77", "-0.0422089, 33.0291, -33.5654, 1.4", "-0.766905, 33.5422, -34.6796, 1.62", "-1.95349, 34.3103, -36.3942, 1.4", "-2.65998, 34.7042, -37.3867, 1.62", "-3.80876, 35.2349, -38.9794, 1.4", "-4.47659, 35.4957, -39.85, 1.47", "-5.34301, 35.7751, -40.9437, 1.69", "-6.5091, 36.0582, -42.373, 1.4", "-8.10184, 36.3008, -44.1483, 1.55", "-9.57041, 36.4147, -45.7302, 1.25", "-10.3289, 36.4467, -46.5049, 1.11", "-11.3132, 36.4792, -47.4974, 0.96", "-12.565, 36.5181, -48.7451, 0.96", "-14.0112, 36.5621, -50.125, 1.11", "-15.5145, 36.6143, -51.4926, 0.88", "-16.4105, 36.6452, -52.3158, 0.96", "-16.8999, 36.6692, -52.777, 1.18", "-18.2357, 36.7269, -54.0309, 1.33", "-19.106, 36.7689, -54.8525, 0.81", "-20.174, 36.8427, -55.8581, 0.81", "-21.5154, 36.9632, -57.084, 1.4", "-22.4519, 37.0436, -57.9222, 1.4", "-23.4867, 37.1578, -58.8103, 1.11", "-24.8113, 37.3817, -59.9978, 0.88", "-25.5991, 37.578, -60.7945, 1.03", "-26.2349, 37.7962, -61.4509, 1.03", "-27.0425, 38.1479, -62.2557, 0.81", "-27.9344, 38.6259, -63.1069, 1.03", "-29.7153, 39.7694, -64.9056, 0.96", "-30.8471, 40.5811, -66.08, 0.74", "-31.4968, 41.0917, -66.8191, 0.74", "-31.9433, 41.4691, -67.3528, 0.74", "-32.8144, 42.2079, -68.3735, 0.81", "-34.1267, 43.2428, -69.7766, 1.11", "-34.8692, 43.803, -70.4808, 1.11", "-35.9677, 44.6164, -71.543, 0.88", "-36.5574, 45.0694, -72.1885, 0.88", "-37.4469, 45.7741, -73.2303, 1.03", "-38.5251, 46.6038, -74.4911, 0.88", "-39.4633, 47.3123, -75.5097, 1.03", "-40.394, 48.0092, -76.5367, 1.77", "-41.2055, 48.6412, -77.4558, 2.06", "-41.3171, 48.7391, -77.608, 2.06" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.39037, 15.782, -6.36828, 2.36", "1.37547, 16.2924, -6.16986, 2.36", "1.3949, 18.0676, -5.55042, 1.69", "1.43457, 19.7796, -4.98908, 1.55", "1.50164, 21.5814, -4.45073, 1.55", "1.57523, 23.1646, -4.0242, 1.4", "1.65209, 24.682, -3.64067, 1.62", "1.7633, 26.162, -3.32599, 1.77", "1.93076, 27.643, -3.07498, 1.77", "2.12625, 29.1773, -2.86429, 1.55", "2.31537, 30.6603, -2.67829, 1.69", "2.58249, 32.8754, -2.39139, 1.55", "2.70701, 34.0111, -2.21892, 1.33", "2.84235, 35.2253, -1.98991, 1.11", "2.97131, 36.3526, -1.71213, 1.11", "3.05773, 37.1255, -1.43705, 1.25", "3.19028, 38.2641, -0.874776, 1.4", "3.28871, 39.0854, -0.321181, 1.62", "3.36396, 39.8948, 0.310868, 1.62", "3.44745, 40.9931, 1.22098, 1.62", "3.58801, 42.3366, 2.33764, 1.4", "3.73812, 43.396, 3.19658, 1.47", "3.95178, 44.6585, 4.18535, 1.25", "4.13513, 45.5695, 4.85997, 0.74", "4.36036, 46.6024, 5.55279, 0.96", "4.53776, 47.379, 6.03677, 1.11", "4.74854, 48.2698, 6.53336, 1.25", "5.03323, 49.4025, 7.09375, 0.81", "5.25719, 50.2081, 7.45936, 0.96", "5.47275, 50.8772, 7.8064, 1.18", "5.89329, 52.2531, 8.59678, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-35.1036, 16.3487, 4.50537, 0.81", "-36.1362, 16.9591, 4.55467, 0.81", "-36.8233, 17.3816, 4.57832, 0.81", "-37.4916, 17.8355, 4.56983, 0.74", "-38.2194, 18.3167, 4.48017, 0.74", "-38.8897, 18.7267, 4.36234, 0.66", "-39.8674, 19.2774, 4.15854, 0.96", "-40.4179, 19.5644, 4.04757, 1.33", "-41.2201, 19.9504, 3.91189, 1.33", "-42.9751, 20.6989, 3.68692, 0.81", "-43.8779, 21.0364, 3.62664, 0.81", "-44.6744, 21.3191, 3.57448, 0.81", "-45.967, 21.7212, 3.46891, 1.03", "-46.7484, 21.9113, 3.40318, 0.96", "-47.7652, 22.1217, 3.28581, 0.96", "-48.7233, 22.3474, 3.10614, 1.18", "-50.1166, 22.729, 2.64975, 1.18", "-50.9669, 22.9551, 2.27265, 0.96", "-51.7736, 23.1384, 1.83256, 0.59", "-52.8097, 23.3148, 1.25012, 0.52", "-53.6743, 23.4451, 0.792163, 0.52", "-54.2596, 23.5554, 0.528304, 0.52", "-55.2057, 23.811, 0.233886, 0.88", "-55.7852, 24.0257, 0.106946, 0.88", "-56.587, 24.3589, -0.0287022, 0.88", "-57.4789, 24.7043, -0.119569, 0.66", "-58.3299, 25.0349, -0.162996, 0.66", "-59.0764, 25.3493, -0.22359, 0.66", "-59.6657, 25.6273, -0.259972, 0.81", "-60.5688, 26.0334, -0.272083, 0.81", "-61.1914, 26.2576, -0.254615, 0.74", "-62.1293, 26.4729, -0.198755, 0.88", "-63.4803, 26.6463, -0.0533245, 0.74", "-64.661, 26.7237, 0.118917, 0.88", "-65.6832, 26.7766, 0.2601, 0.88", "-66.8167, 26.8396, 0.438476, 0.96", "-67.6392, 26.9011, 0.575996, 0.96", "-68.2585, 26.9652, 0.679896, 0.88", "-69.1919, 27.1082, 0.85137, 0.88", "-70.5179, 27.4101, 1.0144, 0.66", "-71.1661, 27.6219, 1.08029, 0.66", "-72.0046, 27.9561, 1.09678, 0.81", "-72.7672, 28.2826, 1.06074, 0.81", "-73.5347, 28.6087, 0.981017, 0.81", "-74.4567, 28.9802, 0.847408, 0.81", "-75.322, 29.274, 0.696871, 0.81", "-76.9517, 29.7059, 0.301517, 0.52", "-77.6448, 29.866, 0.0953824, 0.52", "-78.1358, 29.9634, -0.0716741, 0.66", "-78.878, 30.0865, -0.355226, 0.66", "-79.5016, 30.1589, -0.612943, 0.81", "-80.3731, 30.2016, -0.957815, 0.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-35.1036, 16.3487, 4.50537, 0.81", "-35.8354, 17.617, 4.64483, 0.81", "-36.3436, 18.5212, 4.72533, 0.81", "-36.885, 19.516, 4.80284, 0.81", "-37.4717, 20.655, 4.87381, 1.25", "-37.7749, 21.2815, 4.91506, 1.47", "-38.0625, 21.8955, 4.95624, 1.47", "-38.5209, 22.9241, 5.01201, 0.81", "-38.8581, 23.7239, 5.05605, 1.33", "-39.0842, 24.2695, 5.10489, 1.33", "-39.4831, 25.1911, 5.24571, 1.11", "-39.6318, 25.5141, 5.3108, 0.96", "-39.8585, 26.0019, 5.43507, 0.96", "-40.1164, 26.5185, 5.56383, 0.59", "-40.376, 27.0, 5.66971, 0.59", "-40.9536, 27.9693, 5.83564, 1.11", "-41.3933, 28.649, 5.91186, 1.77", "-41.7507, 29.1677, 5.94885, 1.77", "-42.3512, 29.9948, 5.97999, 1.25", "-42.7854, 30.5662, 5.98492, 1.11", "-43.5609, 31.5188, 5.99081, 0.96", "-44.172, 32.219, 6.00263, 0.88", "-44.7692, 32.8699, 6.03947, 0.96", "-45.1926, 33.3321, 6.0827, 0.96", "-45.7253, 33.9472, 6.17572, 1.11", "-46.1813, 34.501, 6.28163, 1.18", "-46.5683, 34.9913, 6.39216, 1.18", "-46.9073, 35.4035, 6.50559, 1.18", "-47.599, 36.1644, 6.67706, 0.81", "-48.0029, 36.5297, 6.7316, 0.66", "-48.7337, 37.0663, 6.73749, 0.96", "-49.3828, 37.4915, 6.71021, 1.03", "-50.2885, 37.9956, 6.64129, 0.81", "-51.6634, 38.6103, 6.48755, 0.81", "-52.6396, 38.9242, 6.321, 1.03", "-53.6132, 39.1579, 6.08235, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "27.6747, 27.1426, -0.249971, 0.15", "38.2469, 37.7835, -0.249971, 0.15", "48.8191, 48.4244, -0.249971, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "20.7997, 38.7194, -23.7823, 0.59", "22.8444, 39.8992, -25.3062, 0.59", "24.5441, 40.8929, -26.4539, 0.74", "26.5917, 42.0815, -27.8492, 0.59", "27.4756, 42.5738, -28.411, 0.96", "27.8622, 42.7811, -28.6582, 0.96", "28.9225, 43.3385, -29.3395, 0.52", "30.2501, 44.0636, -30.2589, 0.52", "31.5046, 44.74, -31.3789, 0.74", "32.4846, 45.3101, -32.3332, 0.52", "33.4872, 46.013, -33.4769, 0.52", "34.3588, 46.7573, -34.6366, 0.66", "35.2978, 47.757, -36.1179, 1.03", "36.6101, 49.4838, -38.5537, 0.81", "37.1224, 50.2979, -39.567, 0.52", "38.12, 52.1489, -41.5904, 0.59", "38.6185, 53.1752, -42.5083, 0.59", "39.1302, 54.3491, -43.3957, 0.59", "39.6842, 55.742, -44.3091, 0.52", "40.1956, 57.1481, -45.1138, 0.66", "40.6605, 58.4971, -45.8739, 0.66", "41.1624, 60.0803, -46.7367, 0.81", "41.6934, 61.9744, -47.7184, 0.59", "42.1728, 64.0768, -48.7457, 0.74", "42.327, 64.984, -49.1582, 0.88", "42.4051, 65.584, -49.4231, 0.88", "42.5585, 66.7018, -49.898, 0.88", "42.804, 67.9443, -50.3983, 0.96", "43.1997, 69.4028, -50.8565, 0.96", "43.7737, 70.9988, -51.2467, 0.74", "44.23, 72.0231, -51.4818, 0.59", "44.9231, 73.2626, -51.7424, 0.59", "46.098, 74.9863, -51.964, 0.52", "46.8818, 75.9906, -51.9742, 0.52", "47.9334, 77.2969, -51.8366, 0.52", "49.2812, 78.985, -51.4421, 0.52", "50.6761, 80.7341, -50.8089, 0.52", "51.9497, 82.3684, -50.0492, 0.88", "53.2636, 84.0182, -49.1692, 0.81", "54.3205, 85.3364, -48.3277, 0.66", "55.1164, 86.4193, -47.5588, 0.66", "55.7197, 87.334, -46.8508, 0.52", "56.0891, 87.9555, -46.375, 0.52", "56.9606, 89.3829, -45.3694, 0.74", "58.4618, 91.4435, -43.886, 0.59", "59.3825, 92.4851, -43.0699, 0.52", "60.2141, 93.3335, -42.4386, 0.52", "60.9406, 94.0071, -41.9886, 0.66", "61.772, 94.6733, -41.5661, 0.66", "62.9768, 95.5031, -41.0883, 0.52", "64.1573, 96.1945, -40.785, 0.44", "65.2624, 96.7632, -40.5126, 0.59", "66.5471, 97.3718, -40.2136, 0.59", "67.6443, 97.8748, -39.9434, 0.74", "68.4057, 98.2074, -39.7419, 0.74", "69.7259, 98.7132, -39.3546, 0.37", "70.5372, 98.9518, -39.12, 0.37", "71.3788, 99.1381, -38.8903, 0.59", "72.0279, 99.2699, -38.7662, 0.59", "73.0466, 99.496, -38.6333, 0.52", "74.0285, 99.7886, -38.5378, 0.52", "74.8542, 100.117, -38.4727, 0.37", "76.0229, 100.723, -38.3991, 0.29", "77.4778, 101.64, -38.2951, 0.29", "78.5585, 102.424, -38.1617, 0.29", "79.8937, 103.536, -37.9133, 0.29", "80.5335, 104.127, -37.7567, 0.29", "81.424, 105.011, -37.4739, 0.66", "82.0301, 105.664, -37.2309, 0.96", "83.0451, 106.89, -36.7469, 0.37", "83.4524, 107.442, -36.53, 0.37", "84.0822, 108.314, -36.1428, 0.44", "84.4681, 108.818, -35.9034, 0.88", "84.8248, 109.251, -35.6965, 0.88", "85.5993, 110.022, -35.304, 0.37", "86.2644, 110.55, -34.9585, 0.37", "86.8321, 110.929, -34.6207, 0.37", "87.4284, 111.278, -34.2222, 0.37", "88.1755, 111.654, -33.716, 0.59", "89.2996, 112.161, -33.0075, 0.81", "90.429, 112.655, -32.3492, 0.96", "91.593, 113.197, -31.7269, 0.37", "92.5475, 113.712, -31.2361, 0.37", "93.2603, 114.144, -30.8674, 0.37", "94.3757, 114.849, -30.4685, 0.52", "95.4007, 115.487, -30.2932, 0.66", "95.9178, 115.764, -30.3032, 0.66", "96.9951, 116.3, -30.5242, 0.37", "98.0177, 116.841, -30.9542, 0.37", "100.293, 118.146, -32.3323, 0.59", "100.721, 118.397, -32.6476, 0.44", "101.539, 118.859, -33.2799, 0.81", "102.396, 119.302, -33.9272, 0.66", "103.5, 119.791, -34.7223, 0.74", "104.0, 120.009, -35.0249, 0.74", "105.161, 120.535, -35.5473, 0.52", "106.138, 120.974, -35.9536, 0.81", "107.216, 121.452, -36.3598, 0.81", "108.202, 121.912, -36.7081, 0.52", "109.869, 122.763, -37.2855, 0.37", "111.337, 123.627, -37.8169, 0.52", "112.21, 124.227, -38.1476, 0.88", "112.93, 124.797, -38.4148, 0.88", "114.067, 125.811, -38.7953, 0.44", "114.878, 126.581, -39.038, 0.37", "115.321, 127.001, -39.1483, 0.52", "115.995, 127.626, -39.2357, 0.52", "116.744, 128.306, -39.2749, 0.29", "117.296, 128.783, -39.261, 0.66", "117.768, 129.162, -39.2167, 0.66", "118.821, 129.981, -39.0794, 0.44", "119.629, 130.634, -38.9518, 0.44", "120.248, 131.178, -38.8371, 0.66", "120.796, 131.675, -38.7258, 0.81", "121.296, 132.111, -38.6203, 0.81", "122.092, 132.768, -38.4969, 0.37", "123.031, 133.466, -38.4724, 0.52", "123.508, 133.798, -38.5484, 0.52", "124.04, 134.152, -38.7002, 0.52", "124.91, 134.712, -39.0674, 0.66", "125.808, 135.259, -39.5067, 0.44", "126.574, 135.715, -39.8933, 0.44", "127.462, 136.194, -40.2998, 0.59", "128.509, 136.718, -40.7052, 0.37", "130.102, 137.466, -41.193, 0.52", "130.903, 137.792, -41.3543, 0.52", "131.61, 138.035, -41.3994, 0.66", "132.513, 138.319, -41.3726, 0.66", "133.372, 138.567, -41.262, 0.44", "134.153, 138.783, -41.1154, 0.66", "134.902, 139.025, -40.9314, 0.74", "135.863, 139.415, -40.7051, 0.59", "136.652, 139.781, -40.5437, 0.88", "137.482, 140.249, -40.3923, 1.03", "138.603, 140.965, -40.194, 0.37", "139.148, 141.347, -40.1003, 0.29", "139.89, 141.905, -39.9818, 0.29", "140.35, 142.27, -39.9351, 0.52", "141.014, 142.807, -39.9147, 0.37", "142.074, 143.713, -39.9548, 0.52", "142.653, 144.247, -39.992, 0.66", "143.611, 145.103, -40.0765, 0.37", "144.515, 145.939, -40.1882, 0.37", "145.08, 146.497, -40.2679, 0.59", "145.52, 146.959, -40.3334, 0.59", "146.203, 147.728, -40.486, 0.37", "147.103, 148.734, -40.7233, 0.59", "147.871, 149.615, -40.9467, 0.37", "148.593, 150.476, -41.1529, 0.37", "149.627, 151.742, -41.4517, 0.52", "150.573, 152.846, -41.7796, 1.03", "151.174, 153.534, -42.0225, 0.59", "151.696, 154.121, -42.2506, 0.44", "152.522, 154.936, -42.5968, 0.81", "153.087, 155.395, -42.8143, 0.96", "154.451, 156.31, -43.3206, 0.29", "155.068, 156.658, -43.5199, 0.29", "155.843, 157.013, -43.7654, 0.44", "156.824, 157.361, -44.0784, 0.29", "158.131, 157.726, -44.5022, 0.29", "159.326, 157.969, -44.9097, 0.52", "159.958, 158.044, -45.1212, 0.52", "160.939, 158.068, -45.4765, 0.44", "162.269, 157.957, -46.0223, 0.44", "162.742, 157.857, -46.2597, 0.44", "163.68, 157.48, -46.9655, 0.44", "164.234, 157.201, -47.4546, 0.44", "164.783, 156.911, -47.9865, 0.44", "165.337, 156.602, -48.5482, 0.59", "166.333, 156.044, -49.5164, 0.81", "168.553, 154.914, -51.6323, 0.37", "169.198, 154.638, -52.2251, 0.66", "169.775, 154.419, -52.7292, 0.66", "170.821, 154.06, -53.546, 0.37", "171.717, 153.823, -54.1188, 0.74", "172.908, 153.537, -54.6908, 0.88", "173.831, 153.32, -54.9932, 1.11", "174.947, 153.034, -55.3178, 1.11", "176.208, 152.71, -55.6462, 0.29", "177.293, 152.466, -55.9105, 0.29", "178.444, 152.217, -56.1505, 0.29", "179.326, 152.022, -56.2872, 0.29", "180.422, 151.787, -56.474, 0.44", "181.366, 151.596, -56.6721, 0.44", "182.129, 151.444, -56.8638, 0.44", "183.171, 151.214, -57.1384, 0.29", "184.018, 151.019, -57.359, 0.29", "185.69, 150.574, -57.7863, 0.22", "187.579, 149.969, -58.2555, 0.22", "189.496, 149.309, -58.7129, 0.22", "190.514, 148.934, -58.9509, 0.22", "191.418, 148.584, -59.1888, 0.59", "191.965, 148.354, -59.3299, 0.59", "192.819, 147.929, -59.5153, 0.37" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "20.7997, 38.7194, -23.7823, 0.59", "20.2906, 39.7857, -24.6272, 0.59", "19.9564, 40.6239, -25.3414, 0.59", "19.7207, 41.4263, -25.9829, 0.52", "19.3585, 43.0208, -27.3316, 0.66", "19.2205, 43.7917, -27.9904, 0.44", "19.0408, 44.9093, -28.9071, 0.44", "18.8712, 46.1754, -30.0397, 0.44", "18.7099, 47.2811, -31.0518, 0.74", "18.4841, 48.6922, -32.4382, 0.74", "18.3279, 49.4649, -33.2401, 0.74", "18.0048, 50.6574, -34.6072, 0.52", "17.4454, 52.1749, -36.4763, 0.52", "17.0093, 53.0763, -37.6434, 0.52", "16.3414, 54.2299, -39.2933, 0.66", "15.898, 54.939, -40.3291, 0.52", "15.248, 55.8826, -41.796, 0.52", "15.0241, 56.1826, -42.2922, 0.74", "14.6675, 56.6316, -42.9942, 1.11", "13.9565, 57.4407, -44.3237, 1.11", "13.457, 57.9155, -45.2339, 0.66", "12.8073, 58.4535, -46.3737, 0.59", "12.0654, 59.0135, -47.558, 0.59", "11.5433, 59.3876, -48.3795, 0.74", "10.9109, 59.8291, -49.3631, 0.74", "9.11933, 61.0237, -52.0288, 0.52", "8.26108, 61.5408, -53.3844, 0.52", "7.57993, 61.9126, -54.5102, 0.44", "6.26151, 62.4895, -56.7676, 0.74", "5.69338, 62.7111, -57.7027, 0.88", "5.23921, 62.8795, -58.3836, 0.88", "3.50376, 63.4858, -60.7687, 0.59", "2.43977, 63.8496, -62.2443, 0.59", "0.164006, 64.6259, -65.4356, 0.37", "-1.25075, 65.1175, -67.322, 0.37", "-2.05366, 65.4322, -68.3287, 0.81", "-2.86536, 65.8179, -69.3518, 0.81", "-4.0318, 66.4398, -70.7529, 0.81", "-5.11399, 67.0612, -72.0548, 0.59", "-6.56381, 67.9763, -73.8749, 0.29", "-7.64287, 68.7053, -75.4497, 0.29", "-9.11263, 69.8075, -77.9337, 0.59", "-10.1497, 70.715, -80.043, 0.29", "-10.8013, 71.4172, -81.7246, 0.29", "-11.3074, 72.1411, -83.7184, 0.66", "-11.81, 73.0492, -86.3382, 0.66", "-12.0985, 73.7368, -88.4878, 0.96", "-12.3544, 74.7251, -91.7061, 1.25", "-12.3851, 75.4621, -94.2589, 1.25", "-12.2448, 76.8309, -99.5788, 1.03" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "20.8351, 38.0313, -5.4734, 0.52", "20.1948, 38.8339, -4.87482, 0.52", "19.6143, 39.6823, -4.16576, 0.52", "19.2303, 40.3066, -3.59972, 0.66", "18.9578, 40.7174, -3.17264, 0.66", "18.4595, 41.3934, -2.35468, 0.52", "17.9821, 42.0042, -1.59068, 0.74", "17.5898, 42.5235, -0.910354, 0.88", "17.1872, 43.0444, -0.165584, 0.88", "16.707, 43.664, 0.786388, 0.66", "16.1552, 44.4298, 2.00687, 0.81", "15.8811, 44.8853, 2.71578, 0.96", "15.5962, 45.4836, 3.59488, 1.11", "15.1818, 46.4701, 5.0158, 1.18", "14.8619, 47.2407, 6.1675, 1.18", "14.5678, 47.9199, 7.21075, 0.96", "14.2178, 48.7159, 8.43163, 0.88", "13.6713, 49.9025, 10.2364, 0.59", "13.2515, 50.7601, 11.4492, 0.59", "12.6728, 51.8061, 12.7518, 0.74", "12.1665, 52.6324, 13.6331, 0.66", "11.6739, 53.3476, 14.4125, 0.52", "11.306, 53.8719, 14.98, 0.66", "10.9176, 54.5095, 15.6649, 0.66", "10.7068, 54.9273, 16.1046, 0.59", "10.4397, 55.5304, 16.7786, 0.66", "9.58879, 57.3999, 19.1813, 0.59", "9.20197, 58.1148, 20.3823, 0.44", "8.78662, 58.7975, 21.6591, 0.66", "8.54421, 59.1643, 22.3583, 0.52", "8.24121, 59.6289, 23.1841, 0.52", "7.96983, 60.0624, 23.8494, 0.59", "6.8145, 61.8169, 25.9352, 1.03", "6.32389, 62.4754, 26.6458, 1.03", "5.79986, 63.1324, 27.2406, 1.11", "5.34189, 63.7222, 27.6904, 1.11", "4.86519, 64.3356, 28.0371, 1.25", "4.21104, 65.1949, 28.3633, 0.59", "3.6909, 65.8825, 28.4932, 0.44", "3.28008, 66.3988, 28.5958, 0.44", "2.6677, 67.1085, 28.7316, 0.52", "2.12022, 67.7174, 28.8357, 0.66", "1.52286, 68.4328, 28.9402, 0.66", "1.12101, 69.0238, 29.0027, 0.52", "0.757498, 69.6676, 29.0629, 0.44", "0.44454, 70.3196, 29.1124, 0.44", "0.199183, 70.9614, 29.1495, 0.59", "0.00719397, 71.6713, 29.1942, 0.59", "-0.149175, 72.5277, 29.2822, 0.59", "-0.275877, 73.5186, 29.4119, 0.74", "-0.325682, 74.0, 29.4852, 0.74", "-0.445434, 74.7822, 29.6178, 0.29", "-0.592844, 75.3048, 29.7099, 0.29", "-0.930884, 76.0197, 29.8552, 0.44", "-1.24083, 76.455, 30.0043, 0.81", "-1.5221, 76.7757, 30.1774, 1.03", "-2.16346, 77.4794, 30.688, 0.52", "-2.60671, 77.9524, 31.1442, 0.52", "-3.05692, 78.4424, 31.6866, 0.59", "-3.74059, 79.2407, 32.6536, 0.59", "-4.19803, 79.8443, 33.3971, 0.66", "-4.62407, 80.5129, 34.2083, 0.81", "-5.04532, 81.2849, 35.1099, 0.96", "-5.16938, 81.5218, 35.3679, 0.96", "-5.46035, 82.0515, 35.8761, 0.52", "-5.82079, 82.6235, 36.3166, 0.37", "-6.36553, 83.3393, 36.7603, 0.37", "-6.85532, 83.9464, 37.058, 0.66", "-7.24911, 84.4718, 37.2632, 0.66", "-7.94216, 85.5006, 37.6446, 0.37", "-8.36193, 86.1936, 37.881, 0.29", "-8.8161, 86.9582, 38.1404, 0.52", "-9.2113, 87.6411, 38.3242, 0.66", "-9.61781, 88.4626, 38.4904, 0.66", "-9.92159, 89.2287, 38.5763, 0.37", "-10.0837, 89.7218, 38.6198, 0.37", "-10.2641, 90.2697, 38.6907, 0.37", "-10.4641, 90.7133, 38.7706, 0.37", "-10.8435, 91.3114, 38.9076, 0.52", "-11.2389, 91.8291, 39.0459, 0.52", "-11.9932, 92.8142, 39.2985, 0.59", "-12.4442, 93.5074, 39.4582, 0.66", "-12.9291, 94.3871, 39.6357, 0.29", "-13.1482, 94.794, 39.7155, 0.29", "-13.4386, 95.2914, 39.8173, 0.29", "-13.9093, 96.1066, 39.9512, 0.37", "-14.381, 97.0026, 40.0008, 0.37", "-14.642, 97.5558, 40.0579, 0.37", "-14.9671, 98.2842, 40.1581, 0.37", "-15.4052, 99.1742, 40.3263, 0.37", "-15.8861, 100.1, 40.5729, 0.66", "-16.323, 100.942, 40.8617, 0.66", "-16.915, 102.17, 41.2184, 0.66", "-17.1913, 102.798, 41.4006, 0.29", "-17.4598, 103.511, 41.5998, 0.29", "-17.7734, 104.48, 41.8785, 0.29", "-17.9364, 105.014, 42.0764, 0.29", "-18.3821, 106.599, 42.6979, 0.29", "-20.9903, 113.849, 48.855, 0.29", "-22.6012, 121.671, 54.6026, 0.29", "-22.4833, 128.409, 61.83, 0.29" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "20.8351, 38.0313, -5.4734, 1.03", "21.483, 38.6278, -4.26837, 1.03", "22.015, 38.9916, -3.37603, 1.03", "23.1747, 39.692, -1.54924, 1.25", "24.0993, 40.2066, -0.248393, 1.4", "25.1523, 40.7393, 1.09407, 1.11", "25.7815, 41.0389, 1.84439, 1.11", "26.9346, 41.4752, 3.12185, 1.18", "27.4777, 41.627, 3.63505, 1.25", "28.4123, 41.8145, 4.34814, 0.59", "28.9172, 41.8968, 4.68491, 0.59", "30.2158, 42.1725, 5.48656, 1.11", "31.0475, 42.3503, 5.96606, 1.03", "31.9613, 42.5184, 6.43113, 1.03", "32.5537, 42.6312, 6.72991, 0.81", "33.9151, 42.9351, 7.39871, 1.03", "34.8318, 43.1942, 7.79745, 1.03", "35.847, 43.5455, 8.18796, 1.03", "36.4199, 43.8134, 8.40625, 0.96", "37.0933, 44.2001, 8.66406, 0.96", "38.1312, 44.8571, 9.05599, 0.74", "38.9885, 45.4495, 9.39138, 0.88", "39.7818, 46.0298, 9.69973, 0.88", "40.5125, 46.5937, 9.99849, 0.74", "41.4047, 47.2964, 10.3847, 0.66", "42.1586, 47.835, 10.7153, 0.52", "42.8827, 48.3059, 11.0413, 0.52", "43.5822, 48.6736, 11.3288, 0.66", "44.2589, 48.9269, 11.5517, 0.88", "45.5151, 49.2358, 11.8877, 1.03", "46.6738, 49.4376, 12.1986, 0.52", "47.3749, 49.5254, 12.4279, 0.52", "48.5678, 49.6327, 12.8736, 0.59", "49.9367, 49.7264, 13.4343, 0.66", "51.0408, 49.7685, 13.889, 0.66", "52.3428, 49.7871, 14.4338, 0.81", "53.7818, 49.8503, 15.1063, 0.66", "54.4702, 49.9174, 15.495, 0.66", "54.7707, 49.9784, 15.7225, 0.96" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-41.3171, 48.7391, -77.608, 1.33", "-41.4194, 47.7239, -81.9841, 1.33", "-41.7369, 46.9564, -85.3373, 1.33", "-42.165, 46.2778, -88.1279, 0.96", "-42.9254, 45.3755, -91.5931, 0.88", "-43.714, 44.5724, -94.3926, 1.11", "-44.198, 44.1281, -95.809, 0.66", "-45.0497, 43.5605, -97.2987, 0.88", "-45.7716, 43.1856, -98.1612, 0.66", "-47.1335, 42.5599, -99.3479, 0.66", "-48.2562, 42.009, -100.108, 0.59", "-49.3977, 41.3885, -100.817, 0.59", "-50.3639, 40.8356, -101.398, 0.59", "-51.1431, 40.3723, -101.811, 0.59", "-52.3155, 39.6733, -102.381, 0.59", "-55.1598, 37.9885, -103.582, 0.74", "-56.5677, 37.1756, -104.128, 0.88", "-58.4076, 36.1209, -104.794, 0.44", "-60.1787, 35.1219, -105.393, 0.66", "-61.645, 34.328, -105.88, 0.66", "-63.4304, 33.4417, -106.431, 0.66", "-65.704, 32.4938, -107.037, 0.66", "-66.9625, 32.0589, -107.358, 0.96", "-68.1853, 31.7102, -107.664, 0.96", "-69.9422, 31.2718, -108.066, 0.88", "-71.5062, 30.8894, -108.354, 0.74", "-73.5102, 30.4304, -108.682, 0.59", "-75.3194, 30.0417, -108.917, 0.66", "-76.8588, 29.7144, -109.085, 0.66", "-78.6784, 29.3029, -109.25, 0.66", "-81.2588, 28.6496, -109.363, 0.96" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-41.3171, 48.7391, -77.608, 2.06", "-41.4075, 49.4324, -77.8308, 2.06", "-41.5117, 50.1689, -78.1135, 1.77", "-41.7686, 51.8495, -78.7474, 0.66", "-41.9528, 53.0194, -79.1493, 0.66", "-42.2295, 54.6859, -79.7032, 0.88", "-42.4662, 56.0681, -80.15, 0.88", "-42.8062, 58.0482, -80.7265, 0.88", "-43.0631, 59.4745, -81.1262, 0.66", "-43.3674, 61.1336, -81.5851, 0.66", "-43.6273, 62.4095, -81.9174, 0.81", "-43.9247, 63.8483, -82.2795, 0.81", "-44.3015, 65.8666, -82.7838, 1.03", "-44.5164, 67.2964, -83.1278, 1.03", "-44.696, 68.8516, -83.5365, 1.18", "-44.7946, 69.9273, -83.8429, 0.96", "-44.8217, 70.8814, -84.1484, 0.81", "-44.7668, 72.0771, -84.5662, 0.74", "-44.5889, 73.483, -85.1259, 0.59", "-44.41, 74.5434, -85.5911, 0.59", "-44.2047, 75.7079, -86.1551, 0.96", "-43.869, 77.627, -87.2283, 0.81", "-43.6807, 78.787, -87.9313, 1.18", "-43.5, 79.9924, -88.7222, 1.18", "-43.3845, 80.8791, -89.3823, 0.96", "-43.3143, 81.553, -89.904, 0.74", "-43.2345, 82.9175, -90.9839, 0.59", "-43.314, 84.4192, -92.1596, 0.66", "-43.4738, 85.5398, -93.0185, 0.81", "-43.6569, 86.4745, -93.6833, 0.81", "-44.051, 88.0059, -94.724, 0.59", "-44.3232, 88.7298, -95.2636, 0.59", "-44.8464, 89.6833, -96.0378, 0.59", "-45.4718, 90.5274, -96.816, 0.74", "-46.1603, 91.2987, -97.5859, 0.74", "-46.8635, 92.002, -98.3675, 0.88", "-48.3646, 93.3781, -100.081, 1.25", "-48.7249, 93.7003, -100.514, 1.03", "-49.0874, 94.019, -100.997, 1.03", "-49.5563, 94.3993, -101.643, 1.03", "-50.3634, 95.0143, -102.703, 1.03", "-51.076, 95.7253, -103.688, 1.18" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "5.89329, 52.2531, 8.59678, 1.03", "5.12835, 52.7397, 9.09057, 1.03", "4.25573, 53.4339, 9.61151, 1.03", "3.34875, 54.326, 10.1357, 0.88", "2.67016, 55.0857, 10.5144, 0.74", "2.06891, 55.8251, 10.8183, 0.74", "1.54329, 56.5147, 11.1061, 0.96", "1.05969, 57.2745, 11.3906, 1.03", "0.595492, 58.0727, 11.6256, 1.18", "0.05371, 59.0058, 11.8931, 0.81", "-0.379377, 59.7172, 12.1301, 0.96", "-1.06555, 60.7168, 12.4517, 1.11", "-1.66992, 61.46, 12.6854, 0.96", "-2.24779, 62.0623, 12.8545, 0.81", "-3.10862, 62.8191, 13.0051, 0.81", "-3.594, 63.2019, 13.07, 0.81", "-4.76599, 64.0586, 13.1913, 1.03", "-5.30864, 64.4436, 13.2218, 1.03", "-5.82849, 64.8015, 13.2558, 0.88", "-6.52642, 65.2808, 13.3415, 0.88", "-7.5675, 65.9972, 13.4941, 0.74", "-8.30943, 66.5242, 13.646, 1.25", "-8.93326, 66.9929, 13.8033, 1.25", "-9.57924, 67.5199, 13.9428, 0.59", "-10.3989, 68.2061, 14.1329, 0.59", "-10.9105, 68.6314, 14.2358, 0.74", "-11.5538, 69.1537, 14.2826, 0.88", "-12.2222, 69.6898, 14.2978, 0.96", "-12.7471, 70.127, 14.2577, 0.96" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.89329, 52.2531, 8.59678, 0.59", "7.27949, 53.2604, 8.55121, 0.59", "8.09814, 53.9784, 8.51796, 0.59", "8.73691, 54.599, 8.49063, 0.81", "9.29739, 55.1346, 8.44771, 0.81", "9.92369, 55.6658, 8.39229, 0.52", "10.7005, 56.2529, 8.32094, 0.66", "11.9163, 57.0587, 8.20092, 0.59", "12.4444, 57.429, 8.12309, 0.59", "13.1741, 57.9569, 7.96789, 0.66", "14.2015, 58.741, 7.66252, 0.81", "14.6773, 59.1483, 7.46635, 0.81", "15.2072, 59.6831, 7.13742, 0.59", "15.9951, 60.9091, 6.33252, 0.74", "16.2942, 61.6, 5.8941, 0.88", "16.4797, 62.2001, 5.54871, 1.03", "16.6551, 62.971, 5.13811, 1.18", "16.7641, 63.5245, 4.86984, 1.03", "17.0345, 64.8278, 4.28824, 0.52", "17.3424, 66.012, 3.84491, 0.66", "17.6175, 66.871, 3.6017, 0.66", "18.0847, 68.1115, 3.36109, 0.66", "18.4345, 68.9709, 3.27089, 0.66", "18.7923, 69.8994, 3.26668, 0.66", "19.0549, 70.6669, 3.37023, 0.81", "19.3744, 71.7836, 3.65733, 0.59", "19.5972, 72.7158, 3.98752, 0.81", "19.7413, 73.4817, 4.31487, 0.88", "19.8526, 74.4755, 4.75026, 0.81", "19.8937, 75.5313, 5.19269, 0.81", "19.891, 76.3358, 5.47416, 0.66", "19.9001, 77.2823, 5.6808, 0.44", "19.9388, 77.801, 5.73475, 0.44", "20.0944, 78.5507, 5.70973, 0.52", "20.3904, 79.3885, 5.57204, 0.59", "20.6539, 79.9573, 5.42141, 0.59", "21.22, 80.9116, 5.14776, 0.59", "21.7644, 81.6571, 4.93652, 0.66", "22.3409, 82.3152, 4.82229, 1.03", "22.7276, 82.684, 4.7968, 1.25", "23.154, 83.023, 4.81129, 1.25", "24.1812, 83.6991, 4.94078, 0.59", "24.9532, 84.1267, 5.09069, 0.96", "26.2162, 84.6629, 5.34592, 0.74", "26.8432, 84.8607, 5.48657, 0.74", "27.6137, 85.012, 5.69332, 0.59", "28.189, 85.0501, 5.86643, 0.59", "29.2323, 84.9804, 6.20357, 0.81", "30.2041, 84.8467, 6.5148, 0.81", "30.9582, 84.7446, 6.72191, 0.37", "32.0435, 84.6433, 7.00978, 0.37", "32.691, 84.6215, 7.15465, 0.37", "33.1309, 84.6273, 7.2224, 0.29", "33.632, 84.658, 7.25754, 0.29", "34.7044, 84.8736, 7.20539, 0.44", "35.4207, 85.1083, 7.09876, 1.11", "36.1816, 85.4126, 6.94732, 1.33", "36.6818, 85.6236, 6.86106, 1.55", "37.1312, 85.7991, 6.83846, 1.55", "37.5556, 85.9282, 6.8693, 1.69", "38.6653, 86.1693, 7.02674, 1.33", "39.7566, 86.3582, 7.17257, 0.88", "40.6987, 86.523, 7.28807, 0.74", "42.4382, 86.8568, 7.4651, 0.88", "43.6859, 87.1403, 7.52687, 0.52", "44.6904, 87.4325, 7.52565, 0.44", "45.9067, 87.9134, 7.41911, 0.44", "46.6383, 88.3336, 7.25922, 0.88", "47.1578, 88.7254, 7.07481, 0.88", "47.9293, 89.4527, 6.73201, 1.03", "48.4501, 90.0294, 6.5248, 0.88", "48.8966, 90.533, 6.40002, 0.88", "49.4709, 91.1398, 6.30992, 0.59", "49.9857, 91.6518, 6.24985, 0.81", "50.6077, 92.2783, 6.2134, 0.52", "51.1506, 92.8412, 6.22118, 0.66", "51.6814, 93.408, 6.24122, 0.81", "52.194, 93.9779, 6.26754, 0.37", "52.6794, 94.5096, 6.28588, 0.37", "53.1765, 95.0096, 6.29191, 0.37", "53.8174, 95.6021, 6.2771, 0.37", "54.2855, 96.067, 6.24846, 0.59", "54.668, 96.4567, 6.18583, 0.59", "55.387, 97.1383, 5.99181, 0.52", "55.9179, 97.5984, 5.80107, 0.37", "56.4759, 98.0621, 5.55027, 0.52", "57.6579, 99.0556, 4.88645, 0.81", "58.6278, 99.929, 4.22006, 0.37", "59.1893, 100.472, 3.73356, 0.66", "59.4921, 100.776, 3.42466, 0.66", "60.0169, 101.283, 2.8446, 0.74", "60.7008, 101.871, 2.12846, 0.96", "61.3148, 102.337, 1.56468, 1.11", "62.2283, 103.036, 0.94209, 0.81", "62.8029, 103.495, 0.748109, 0.66", "63.2793, 103.897, 0.762459, 0.52", "64.2955, 104.814, 1.10461, 0.52", "65.0145, 105.51, 1.50517, 0.81", "65.5597, 106.052, 1.80769, 1.03", "66.2526, 106.738, 2.15466, 0.81", "66.9737, 107.433, 2.41059, 0.52", "67.5485, 107.959, 2.50578, 0.66", "68.3196, 108.569, 2.46823, 0.66", "69.6886, 109.43, 2.22603, 0.44", "70.5102, 109.799, 2.01941, 0.81", "71.2208, 110.022, 1.7942, 0.96", "71.6586, 110.126, 1.63265, 0.96", "72.7156, 110.323, 1.16284, 0.74", "73.4687, 110.454, 0.775228, 0.74", "74.4571, 110.677, 0.222367, 0.59", "75.3794, 110.993, -0.358706, 0.88", "76.1798, 111.381, -0.903135, 0.88", "77.1608, 112.004, -1.61286, 0.74", "77.5972, 112.364, -1.93784, 0.88", "78.2661, 113.007, -2.45458, 0.88", "78.9612, 113.783, -2.99635, 0.66", "79.4744, 114.392, -3.34875, 0.96", "79.8559, 114.869, -3.54465, 0.96", "80.4258, 115.642, -3.72085, 0.96" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-80.3731, 30.2016, -0.957815, 0.88", "-82.394, 29.7416, 0.0341084, 0.88", "-83.2796, 29.6528, 0.361235, 0.52", "-84.0672, 29.5829, 0.582144, 0.52", "-84.8594, 29.5247, 0.750989, 0.66", "-85.5969, 29.5024, 0.883364, 0.66", "-86.208, 29.5149, 0.980404, 0.74", "-87.0226, 29.6258, 1.04398, 0.37", "-88.1441, 29.879, 1.15903, 0.37", "-89.2772, 30.1684, 1.30283, 0.37", "-89.9286, 30.3225, 1.40469, 0.52", "-90.5217, 30.4327, 1.54181, 0.66", "-91.2782, 30.5151, 1.77579, 0.66", "-92.1824, 30.5609, 2.15098, 0.44", "-93.0081, 30.5588, 2.5642, 0.44", "-93.7113, 30.522, 2.96401, 0.44", "-94.8395, 30.4196, 3.62092, 0.66", "-95.4455, 30.3064, 3.98078, 0.74", "-96.0318, 30.1464, 4.42099, 0.74", "-96.5149, 29.9718, 4.91808, 0.52", "-97.1123, 29.7438, 5.61193, 0.52", "-97.7929, 29.4919, 6.41289, 0.66", "-98.8001, 29.0849, 7.69522, 0.74", "-99.9079, 28.6247, 9.42817, 0.96", "-100.804, 28.2452, 11.0359, 0.74", "-101.271, 28.0667, 11.9436, 0.52", "-101.652, 27.9489, 12.6773, 0.44", "-102.523, 27.8117, 14.2933, 0.74", "-103.669, 27.8761, 16.1226, 0.52", "-103.959, 27.9195, 16.4756, 0.44", "-104.627, 28.0268, 17.1621, 0.44", "-105.421, 28.1013, 17.8978, 0.59", "-105.972, 28.0843, 18.3094, 0.52", "-107.144, 27.8609, 18.8358, 0.52", "-108.032, 27.5483, 19.1068, 0.44", "-108.816, 27.2037, 19.3418, 0.59", "-109.532, 26.8424, 19.5595, 0.59", "-110.214, 26.5112, 19.7747, 0.88", "-111.256, 26.076, 20.0438, 0.59", "-111.842, 25.8982, 20.1253, 0.44", "-112.701, 25.7583, 20.1839, 0.44", "-113.128, 25.7386, 20.2014, 0.74", "-114.03, 25.732, 20.2382, 0.37", "-114.625, 25.7383, 20.2714, 0.37", "-115.497, 25.7481, 20.329, 0.59", "-116.063, 25.7466, 20.3453, 0.59", "-116.859, 25.7187, 20.351, 0.37", "-118.004, 25.6336, 20.4007, 0.29", "-118.92, 25.5352, 20.4696, 0.44", "-119.747, 25.4433, 20.5661, 0.59", "-120.395, 25.376, 20.6786, 0.59", "-121.494, 25.2821, 20.9143, 0.74", "-122.605, 25.2079, 21.199, 0.66", "-123.488, 25.1695, 21.4865, 0.44", "-124.205, 25.157, 21.7925, 0.44", "-124.831, 25.1447, 22.0929, 0.66", "-125.372, 25.1468, 22.3856, 0.66", "-125.758, 25.1698, 22.6264, 0.81", "-126.628, 25.2936, 23.2163, 0.59", "-127.878, 25.5662, 24.2022, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-80.3731, 30.2016, -0.957815, 0.52", "-81.4822, 30.2453, -1.78352, 0.52", "-82.751, 30.399, -2.6229, 0.52", "-84.0751, 30.6715, -3.38529, 0.66", "-84.8841, 30.8741, -3.79558, 0.81", "-85.5591, 31.081, -4.11483, 0.81", "-86.0162, 31.2399, -4.32293, 0.81", "-86.7237, 31.5967, -4.58352, 0.59", "-87.4138, 31.9941, -4.80319, 0.52", "-88.0649, 32.35, -4.97664, 0.52", "-89.0125, 32.7606, -5.22253, 0.52", "-89.6808, 32.967, -5.41873, 0.66", "-90.5972, 33.1691, -5.70541, 0.81", "-91.5562, 33.3137, -6.04431, 0.74", "-92.3711, 33.3778, -6.37374, 0.74", "-93.2881, 33.4045, -6.75812, 0.59", "-94.8435, 33.3686, -7.41054, 0.44", "-95.815, 33.3203, -7.83713, 0.44", "-96.8591, 33.2548, -8.30741, 0.59", "-98.1106, 33.2042, -8.85869, 0.59", "-98.792, 33.1881, -9.14758, 0.88", "-99.7899, 33.1801, -9.54152, 0.88", "-100.609, 33.1994, -9.82405, 0.74", "-101.182, 33.2185, -10.0109, 0.59", "-102.011, 33.2487, -10.2819, 0.44", "-102.632, 33.2515, -10.541, 0.44", "-103.235, 33.2247, -10.8328, 0.37", "-104.069, 33.1527, -11.2602, 0.37", "-105.202, 33.0361, -11.8487, 0.37", "-106.415, 32.8999, -12.5548, 0.74", "-107.762, 32.7044, -13.4202, 0.44", "-108.471, 32.5617, -13.9249, 0.44", "-108.981, 32.4293, -14.3264, 0.44", "-109.807, 32.1946, -15.0516, 0.44", "-110.661, 31.9982, -15.8901, 0.81", "-111.149, 31.9156, -16.4306, 1.03", "-111.776, 31.8807, -17.2336, 1.03", "-112.464, 31.9211, -18.2417, 0.74", "-113.652, 32.1223, -20.178, 0.44", "-114.158, 32.2368, -21.0635, 0.44", "-114.564, 32.3825, -21.7743, 0.44", "-115.023, 32.637, -22.5842, 0.44", "-115.429, 32.9653, -23.3012, 0.88", "-115.839, 33.4659, -24.0934, 0.88" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-53.6132, 39.1579, 6.08235, 0.66", "-54.2141, 40.4809, 5.78244, 0.66", "-54.6615, 41.2716, 5.61103, 0.66", "-55.0965, 42.01, 5.4621, 0.66", "-55.6208, 42.8715, 5.28641, 0.81", "-55.9519, 43.4207, 5.1804, 0.81", "-56.5614, 44.4537, 4.99219, 0.74", "-57.3828, 45.7359, 4.83683, 0.44", "-57.7445, 46.3084, 4.76157, 0.81", "-58.1379, 46.992, 4.66582, 1.03", "-58.4797, 47.6573, 4.55349, 1.18", "-58.6973, 48.1227, 4.46797, 1.18", "-59.0058, 48.829, 4.32324, 0.59", "-59.5373, 50.007, 4.09192, 0.81", "-59.9116, 50.8547, 3.92052, 0.88", "-60.1982, 51.5565, 3.77239, 0.88", "-60.6358, 52.7069, 3.51241, 0.74", "-60.9819, 53.6788, 3.28045, 0.74", "-61.3055, 54.6125, 3.03392, 1.18", "-61.6901, 55.6606, 2.73625, 0.59", "-61.9694, 56.3667, 2.54211, 0.44", "-62.3137, 57.1692, 2.34131, 0.59", "-62.7656, 58.1726, 2.10389, 0.59", "-63.0673, 58.8217, 1.96855, 0.59", "-63.3677, 59.443, 1.84143, 0.59", "-63.8649, 60.3624, 1.66496, 0.52", "-64.383, 61.3081, 1.51104, 0.81", "-64.8518, 62.215, 1.38457, 0.81", "-65.197, 62.95, 1.29862, 0.66", "-65.4732, 63.5943, 1.23148, 0.44", "-65.9424, 64.7503, 1.09289, 0.74", "-66.2821, 65.5965, 0.916031, 0.88", "-66.6301, 66.4297, 0.714628, 1.11", "-66.8037, 66.8049, 0.614882, 1.11", "-67.1355, 67.4857, 0.418899, 0.52", "-67.3723, 67.9793, 0.260552, 0.52", "-67.8757, 69.1246, -0.117582, 0.52", "-68.109, 69.7114, -0.317416, 0.59", "-68.4365, 70.5514, -0.607408, 0.59", "-68.7127, 71.2351, -0.834153, 0.81", "-69.1161, 72.1814, -1.12152, 0.66", "-69.5617, 73.1534, -1.37255, 0.81", "-69.9774, 73.9453, -1.57636, 0.81", "-70.4406, 74.7229, -1.8276, 0.59", "-70.8344, 75.3015, -2.08475, 0.59", "-71.2395, 75.8057, -2.36928, 0.66", "-71.5324, 76.1045, -2.58188, 0.66", "-72.6725, 77.1712, -3.43714, 0.74", "-73.266, 77.7547, -3.90127, 0.59", "-73.989, 78.6006, -4.56874, 0.59", "-74.4431, 79.2356, -5.04619, 0.44", "-74.9145, 80.0387, -5.58071, 0.44", "-75.3144, 80.8938, -6.05636, 0.52", "-75.6053, 81.7542, -6.41852, 0.59", "-75.8923, 82.8145, -6.82689, 0.74", "-76.0306, 83.3756, -7.02345, 0.88", "-76.2545, 84.2635, -7.41254, 0.37", "-76.4202, 84.8251, -7.68281, 0.37", "-76.7342, 85.6254, -8.10603, 0.81", "-77.095, 86.3812, -8.51379, 0.81", "-77.5364, 87.2329, -8.98338, 1.03", "-78.1845, 88.5332, -9.73371, 0.96", "-78.5537, 89.3321, -10.1861, 0.52", "-78.9539, 90.2395, -10.6452, 0.52", "-79.3782, 91.3232, -11.0821, 0.52", "-79.6829, 92.3011, -11.3798, 0.66", "-79.9521, 93.5219, -11.6516, 0.44", "-80.0536, 94.2896, -11.7619, 0.44", "-80.1038, 95.1106, -11.8568, 0.59", "-80.1057, 96.4725, -11.9856, 0.59", "-80.067, 97.7614, -12.1089, 0.59", "-80.0009, 99.1825, -12.1593, 0.52", "-79.9578, 100.149, -12.2592, 0.88", "-79.9144, 100.973, -12.4727, 0.88", "-79.8726, 101.832, -12.8198, 0.88", "-79.851, 102.887, -13.3851, 1.18", "-79.8614, 104.369, -14.3203, 0.96", "-79.8804, 106.603, -15.9729, 0.74", "-79.8669, 107.909, -17.165, 0.81", "-79.8166, 108.729, -18.0544, 0.59", "-79.7555, 109.413, -18.8918, 0.81", "-79.6837, 110.12, -19.8023, 1.03", "-79.6305, 110.734, -20.636, 1.03", "-79.482, 112.24, -22.5465, 0.66", "-79.4301, 112.846, -23.2975, 0.66", "-79.384, 113.46, -24.078, 0.74", "-79.3785, 113.975, -24.7185, 0.88", "-79.4429, 114.672, -25.4963, 1.11", "-79.5653, 115.474, -26.2646, 0.81", "-79.6708, 116.147, -26.7998, 1.25", "-79.799, 117.005, -27.4384, 1.25", "-79.9519, 118.131, -28.2674, 1.03", "-80.0925, 119.187, -29.0446, 1.4", "-80.2788, 120.574, -30.0078, 0.52", "-80.3733, 121.185, -30.427, 0.52", "-80.4705, 121.818, -30.87, 0.74", "-80.5844, 122.651, -31.4177, 0.74", "-80.6673, 123.512, -31.9141, 0.96", "-80.702, 124.018, -32.1951, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-53.6132, 39.1579, 6.08235, 0.96", "-54.6331, 39.5433, 5.98575, 0.96", "-55.6015, 39.9962, 5.83154, 0.88", "-56.7106, 40.5862, 5.62175, 1.03", "-57.4013, 40.9888, 5.47016, 1.03", "-58.0618, 41.4006, 5.31029, 0.66", "-58.6599, 41.7932, 5.15385, 0.66", "-59.5596, 42.4603, 4.88483, 1.03", "-60.0031, 42.7944, 4.73541, 1.18", "-60.4355, 43.1194, 4.57941, 1.03", "-60.7688, 43.3507, 4.45247, 1.03", "-61.3267, 43.6514, 4.25775, 1.11", "-62.0685, 43.9117, 4.02373, 1.18", "-62.6311, 44.0205, 3.87967, 1.33", "-62.9385, 44.0577, 3.80734, 1.33", "-64.0215, 44.1612, 3.58824, 0.52", "-64.8021, 44.2466, 3.45293, 0.52", "-65.4788, 44.3447, 3.35762, 0.52", "-65.9099, 44.4426, 3.31094, 0.88", "-66.5148, 44.6082, 3.25964, 0.88", "-67.1058, 44.8025, 3.26191, 0.88", "-67.793, 45.0972, 3.2983, 0.88", "-68.3864, 45.4141, 3.32628, 0.66", "-69.1309, 45.8584, 3.35153, 0.59", "-69.825, 46.2869, 3.35058, 0.59", "-70.6946, 46.8105, 3.32606, 0.74", "-71.3174, 47.1921, 3.2946, 0.74", "-71.7657, 47.4814, 3.26339, 0.59", "-72.3508, 47.8936, 3.21576, 0.59", "-73.0678, 48.4351, 3.1545, 0.81", "-73.731, 48.9486, 3.12, 0.81", "-74.3935, 49.4335, 3.09628, 0.88", "-74.9163, 49.7911, 3.11508, 0.88", "-75.5319, 50.1745, 3.16111, 0.74", "-76.1249, 50.499, 3.22094, 0.66", "-76.7828, 50.8032, 3.29729, 0.66", "-77.418, 51.05, 3.36187, 0.81", "-78.1376, 51.2801, 3.42065, 0.66", "-79.2795, 51.6079, 3.48983, 0.88", "-80.1303, 51.8612, 3.52373, 1.11", "-80.8932, 52.1323, 3.53945, 1.11", "-81.928, 52.5951, 3.54707, 0.88", "-82.8312, 53.1185, 3.56051, 1.11", "-83.6628, 53.7603, 3.5731, 0.88", "-84.4072, 54.5365, 3.58058, 0.81", "-84.9842, 55.2885, 3.59302, 0.74", "-85.3979, 55.9139, 3.59809, 0.74", "-85.7742, 56.5258, 3.59808, 0.88", "-86.1051, 57.0237, 3.59354, 0.88", "-86.665, 57.6567, 3.59074, 0.66", "-87.2691, 58.1004, 3.68606, 0.81", "-87.7731, 58.3645, 3.7698, 0.96", "-88.5345, 58.6518, 3.90233, 1.03", "-89.302, 58.8528, 4.06024, 1.03", "-90.0942, 58.99, 4.26637, 0.74", "-91.8416, 59.1581, 4.88318, 0.59" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-22.4833, 128.409, 61.83, 0.44", "-26.7995, 135.879, 66.5906, 0.44", "-30.5757, 143.247, 71.942, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-22.4833, 128.409, 61.83, 0.29", "-24.0239, 135.235, 68.8022, 0.44", "-23.839, 142.07, 75.9309, 0.44", "-23.2056, 148.898, 83.0409, 0.44", "-21.2434, 155.514, 90.1199, 0.44", "-18.3173, 162.96, 95.8738, 0.44", "-15.4231, 169.3, 102.898, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "54.7707, 49.9784, 15.7225, 0.37", "55.8974, 49.4961, 15.3749, 0.37", "56.4669, 49.2921, 15.2188, 0.37", "57.291, 49.0104, 15.0604, 0.44", "57.9814, 48.7791, 14.971, 0.52", "58.5871, 48.5674, 14.93, 0.52", "59.1458, 48.3717, 14.9152, 0.66", "59.8526, 48.131, 14.8719, 0.52", "60.8524, 47.819, 14.7504, 0.66", "61.588, 47.6169, 14.6029, 0.66", "62.3737, 47.4257, 14.3311, 0.52", "63.0287, 47.2891, 14.0076, 0.66", "64.4221, 47.0601, 13.1207, 0.66", "64.9955, 47.01, 12.6863, 0.66", "65.583, 47.0248, 12.2413, 1.03", "66.5713, 47.1581, 11.5297, 0.59", "67.2869, 47.3389, 11.0485, 0.37", "67.908, 47.5707, 10.699, 0.52", "68.5017, 47.8692, 10.4452, 0.52", "69.6205, 48.6019, 10.0128, 0.37", "70.1354, 49.0041, 9.84044, 0.52", "70.5949, 49.4065, 9.67939, 0.59", "71.2476, 50.04, 9.38351, 0.37", "71.7557, 50.5286, 9.12684, 0.52", "72.2581, 50.9827, 8.84756, 0.52", "72.6945, 51.3632, 8.58541, 0.29", "73.3204, 51.8803, 8.30822, 0.52", "73.6698, 52.1405, 8.20655, 0.66", "74.402, 52.6035, 8.07578, 0.44", "75.0043, 52.93, 7.99939, 0.44", "75.5778, 53.2348, 7.91988, 0.44", "76.3804, 53.6893, 7.79382, 0.29", "77.1808, 54.1733, 7.66482, 0.52", "77.9848, 54.6641, 7.49479, 0.74", "78.7388, 55.0936, 7.29047, 0.74", "79.6679, 55.6023, 6.99258, 0.29", "80.3617, 56.0126, 6.75712, 0.29", "80.8183, 56.3266, 6.59025, 0.59", "81.374, 56.7582, 6.37099, 0.66", "82.2977, 57.5454, 6.02043, 0.29", "83.0201, 58.1876, 5.75837, 0.52", "83.9558, 59.0196, 5.45427, 0.29", "84.4141, 59.4506, 5.31849, 0.66", "85.0835, 60.1309, 5.14225, 0.88", "85.6265, 60.7638, 5.05522, 0.88" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "54.7707, 49.9784, 15.7225, 0.37", "55.4288, 50.1943, 16.6785, 0.37", "55.8802, 50.3777, 17.3015, 0.74", "56.3459, 50.6287, 17.9159, 0.74", "57.9357, 51.728, 20.1189, 0.66", "58.3322, 52.0629, 20.7072, 0.52", "58.5928, 52.3244, 21.126, 0.66", "58.8889, 52.6916, 21.6595, 0.37", "59.2762, 53.333, 22.4608, 0.37", "59.6603, 54.1985, 23.4094, 0.52", "59.937, 54.9823, 24.1105, 0.88", "60.3507, 56.2257, 25.1871, 0.59", "60.556, 56.8555, 25.7269, 0.59", "60.9366, 57.962, 26.5893, 0.81", "61.3553, 59.0482, 27.2968, 0.52", "61.6882, 59.7487, 27.6662, 0.52", "62.1046, 60.4396, 27.9948, 0.74", "62.3575, 60.7613, 28.1432, 0.74", "63.3594, 61.711, 28.6901, 0.29", "63.9585, 62.1561, 28.9791, 0.29", "64.7556, 62.7196, 29.4533, 0.29", "65.5448, 63.3606, 30.2034, 0.29", "65.8604, 63.6967, 30.6755, 0.29", "66.1686, 64.1273, 31.3543, 0.29", "66.3966, 64.6088, 32.164, 0.37", "66.5905, 65.3389, 33.291, 0.37", "66.6953, 66.1622, 34.3125, 0.59", "66.7124, 66.5267, 34.6799, 0.29", "66.7159, 67.0651, 35.1189, 0.29", "66.708, 67.9778, 35.7976, 0.66", "66.7211, 68.3498, 36.0456, 0.66", "66.7763, 69.3501, 36.6975, 0.29", "66.8007, 70.0778, 37.1938, 0.29", "66.8075, 71.2321, 38.007, 0.29", "66.796, 72.6188, 39.0015, 0.37", "66.8075, 73.3835, 39.5791, 0.29", "66.8595, 74.2216, 40.2933, 0.29", "66.9625, 75.0436, 41.0952, 0.29", "67.0928, 75.6016, 41.7045, 0.29", "67.1703, 75.7793, 41.9173, 0.74", "67.3933, 76.1564, 42.3335, 0.74", "67.8827, 76.8912, 43.096, 0.29", "68.2917, 77.4466, 43.6042, 0.29", "68.8606, 78.158, 44.2075, 0.29", "69.278, 78.6521, 44.6336, 0.29", "69.8653, 79.2442, 45.1358, 0.29", "70.5339, 79.7862, 45.5808, 0.52", "70.9021, 80.0476, 45.7794, 0.66", "71.6502, 80.486, 46.1163, 0.29", "72.4356, 80.8615, 46.4186, 0.29", "73.5066, 81.3223, 46.8142, 0.22", "74.2412, 81.532, 47.0618, 0.22", "77.2653, 88.4308, 53.4486, 0.22", "80.8101, 94.7792, 60.1597, 0.22", "84.162, 101.16, 66.9375, 0.22", "85.8114, 107.638, 74.2265, 0.22", "86.3075, 114.347, 81.4657, 0.22", "85.7151, 120.744, 88.9894, 0.22", "85.2779, 126.057, 97.3626, 0.22", "84.0412, 132.411, 104.846, 0.22", "83.1642, 139.228, 111.942, 0.22", "83.5257, 146.799, 118.232, 0.22", "82.0772, 153.707, 125.138, 0.22", "81.1738, 160.892, 131.838, 0.22", "81.1493, 168.241, 138.409, 0.22", "79.1442, 174.191, 146.074, 0.22", "77.7059, 180.515, 153.548, 0.22", "74.0306, 186.464, 160.566, 0.22", "71.358, 192.13, 168.253, 0.22", "69.5809, 198.447, 175.66, 0.22", "69.2879, 204.764, 183.272, 0.22" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-81.2588, 28.6496, -109.363, 0.44", "-83.8556, 27.7095, -108.879, 0.44", "-85.1172, 27.3042, -108.793, 0.44", "-87.3321, 26.6835, -108.808, 0.44", "-89.1211, 26.2501, -108.956, 0.88", "-90.7086, 25.8781, -109.194, 0.88", "-92.4286, 25.4809, -109.494, 0.59", "-94.8265, 24.952, -109.995, 0.59", "-95.6634, 24.7714, -110.142, 0.59", "-97.8361, 24.2991, -110.386, 0.44", "-100.719, 23.6354, -110.474, 0.44", "-103.728, 22.9244, -110.309, 0.74", "-106.22, 22.3398, -109.957, 0.96", "-107.47, 22.0679, -109.677, 0.96", "-109.961, 21.586, -109.026, 0.37", "-111.582, 21.3418, -108.553, 0.37", "-113.307, 21.1458, -107.982, 0.37", "-115.103, 21.0062, -107.39, 0.81", "-117.166, 20.9291, -106.828, 0.88", "-118.754, 20.9043, -106.503, 0.88", "-120.809, 20.9476, -106.261, 1.11" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-81.2588, 28.6496, -109.363, 0.66", "-82.1181, 29.4933, -111.625, 0.66", "-82.5204, 29.7744, -112.786, 0.66", "-83.0684, 30.1164, -115.139, 0.81", "-83.3153, 30.22, -116.468, 0.96", "-83.6202, 30.3103, -118.175, 1.18", "-84.0437, 30.4256, -120.546, 1.62", "-84.5301, 30.4927, -123.467, 1.62", "-85.3999, 30.5511, -128.618, 1.11", "-85.9903, 30.5969, -132.18, 0.96", "-86.1853, 30.6308, -133.362, 0.96", "-86.5172, 30.7532, -135.321, 0.88", "-86.8349, 30.9582, -137.235, 1.11", "-87.0556, 31.1718, -138.592, 1.33", "-87.3206, 31.5902, -140.305, 1.33", "-87.4907, 32.0892, -141.803, 1.4", "-87.6623, 33.0382, -144.22, 1.62", "-87.702, 33.5639, -145.347, 1.25", "-87.7109, 34.7154, -147.382, 1.11", "-87.6527, 36.264, -149.608, 0.81", "-87.6054, 37.0491, -150.494, 0.66", "-87.5676, 37.7743, -151.1, 0.66", "-87.567, 38.5748, -151.62, 1.03", "-87.6031, 39.2476, -152.089, 0.88", "-87.6717, 39.8749, -152.596, 0.88", "-87.8135, 40.8151, -153.511, 0.66", "-87.9991, 41.7289, -154.583, 1.11", "-88.2598, 42.6505, -155.903, 1.11", "-88.907, 44.3025, -158.615, 0.44", "-89.3038, 45.083, -159.976, 0.44", "-89.518, 45.4232, -160.583, 0.66", "-89.9092, 45.9568, -161.532, 0.66", "-90.5651, 46.8019, -162.999, 0.66", "-90.9004, 47.2647, -163.704, 0.74", "-91.3652, 47.9569, -164.618, 0.88", "-91.8666, 48.8901, -165.806, 0.88", "-92.2666, 49.8664, -167.068, 0.59", "-92.4613, 50.4768, -167.822, 0.59", "-92.7082, 51.5097, -168.98, 0.59", "-92.8243, 52.1962, -169.719, 0.81", "-92.9382, 52.9526, -170.509, 0.81", "-93.067, 53.661, -171.187, 0.59", "-93.2281, 54.251, -171.742, 0.44", "-93.4888, 54.9145, -172.433, 0.44", "-93.7535, 55.4673, -173.04, 0.44", "-94.1939, 56.3377, -174.039, 0.59", "-94.4469, 56.778, -174.562, 0.81", "-95.124, 57.7744, -175.883, 1.18", "-96.0212, 58.8611, -177.574, 0.37", "-96.3754, 59.1633, -178.168, 0.37", "-96.7608, 59.3713, -178.716, 0.81", "-97.2751, 59.5054, -179.34, 0.81", "-98.1688, 59.5548, -180.291, 0.59", "-98.9797, 59.4653, -181.014, 0.44", "-99.9849, 59.2072, -181.784, 0.37", "-100.678, 58.973, -182.3, 0.37", "-101.879, 58.4819, -183.188, 0.74", "-102.452, 58.2181, -183.617, 0.74" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-51.076, 95.7253, -103.688, 0.74", "-51.2168, 98.5491, -106.376, 0.74", "-51.2467, 99.3706, -107.231, 0.59", "-51.2689, 100.264, -108.183, 0.74", "-51.3205, 101.376, -109.471, 0.88", "-51.3572, 101.993, -110.228, 0.88", "-51.3885, 102.564, -110.923, 0.66", "-51.4727, 103.941, -112.56, 0.88", "-51.5176, 104.406, -113.143, 1.11", "-51.6754, 105.779, -114.921, 0.88", "-51.8093, 106.929, -116.354, 0.88", "-51.8787, 107.563, -117.064, 0.37", "-51.9779, 108.477, -117.929, 0.37", "-52.0341, 109.297, -118.553, 0.74", "-52.0342, 110.283, -119.192, 0.74", "-51.9561, 111.144, -119.602, 0.81", "-51.7958, 112.366, -120.093, 0.37", "-51.6435, 113.407, -120.487, 0.52", "-51.5474, 113.991, -120.679, 0.52", "-51.3729, 114.901, -120.964, 0.52", "-51.1782, 115.996, -121.286, 0.96", "-51.0918, 116.695, -121.508, 0.96", "-51.0683, 117.414, -121.774, 0.66", "-51.1355, 118.188, -122.078, 0.66", "-51.28, 119.126, -122.445, 0.52", "-51.4428, 120.038, -122.799, 0.52", "-51.5944, 120.839, -123.124, 0.52", "-51.7281, 121.535, -123.395, 0.52", "-51.9032, 122.415, -123.737, 0.52", "-52.0108, 123.01, -123.974, 0.96", "-52.0719, 123.495, -124.148, 0.96", "-52.139, 124.74, -124.521, 0.37", "-52.1431, 125.551, -124.733, 0.37", "-52.1556, 126.47, -124.984, 0.59", "-52.214, 127.743, -125.363, 0.59", "-52.2981, 129.398, -125.866, 0.81", "-52.326, 130.496, -126.184, 0.81", "-52.3067, 131.446, -126.46, 1.03", "-52.2191, 133.122, -126.956, 0.52", "-52.1435, 134.274, -127.292, 0.44", "-52.0826, 135.061, -127.51, 0.44", "-51.9611, 136.042, -127.787, 0.81", "-51.8041, 136.754, -127.975, 0.96", "-51.4938, 137.628, -128.19, 0.52", "-51.1005, 138.38, -128.352, 0.52", "-50.6503, 139.09, -128.518, 0.37", "-50.1574, 139.868, -128.752, 0.37", "-49.7557, 140.526, -129.016, 0.59", "-49.3643, 141.229, -129.365, 0.74", "-49.0376, 141.838, -129.748, 0.37", "-48.8413, 142.226, -130.027, 0.37", "-48.3971, 143.068, -130.669, 0.59", "-48.0055, 143.751, -131.196, 0.74", "-47.3983, 144.706, -131.932, 0.88", "-47.0397, 145.139, -132.264, 1.03", "-46.6328, 145.485, -132.533, 1.03", "-45.7871, 146.023, -132.895, 0.66", "-44.9894, 146.45, -133.201, 0.44", "-44.4484, 146.722, -133.442, 0.44", "-43.8317, 147.014, -133.777, 0.59", "-42.8969, 147.467, -134.585, 0.59", "-42.4388, 147.74, -135.255, 0.81", "-41.5966, 148.363, -136.97, 1.03", "-41.107, 148.726, -138.263, 1.18", "-40.8246, 148.888, -139.201, 0.81", "-40.1872, 149.126, -141.993, 1.11", "-39.6412, 149.263, -144.993, 0.74", "-39.4789, 149.318, -146.096, 0.74", "-39.0443, 149.546, -149.749, 0.74", "-38.5306, 149.849, -154.111, 0.74", "-38.3185, 149.981, -156.051, 0.59", "-38.1776, 150.081, -157.591, 0.59", "-37.9948, 150.248, -160.679, 0.59", "-38.0103, 150.418, -163.027, 0.59", "-38.2271, 150.728, -165.189, 1.03", "-38.3374, 150.867, -165.744, 1.03", "-38.7184, 151.305, -167.117, 0.96", "-39.439, 151.694, -168.33, 0.74", "-40.1662, 151.941, -168.776, 0.74", "-40.7748, 152.149, -168.965, 0.74", "-41.8963, 152.574, -169.23, 0.52", "-42.8049, 152.999, -169.458, 0.52", "-43.44, 153.327, -169.642, 0.44", "-44.3102, 153.779, -169.945, 0.81", "-44.6214, 153.94, -170.075, 1.03", "-45.888, 154.64, -170.728, 0.66", "-46.6417, 155.145, -171.197, 0.81", "-47.4013, 155.831, -171.791, 0.52", "-47.8149, 156.344, -172.177, 0.52", "-48.2376, 156.976, -172.62, 0.44", "-48.7315, 157.772, -173.134, 0.44", "-49.2449, 158.599, -173.587, 0.88", "-49.6275, 159.235, -173.94, 1.11", "-49.8035, 159.589, -174.168, 1.11", "-50.2236, 160.635, -174.897, 0.52", "-50.37, 161.116, -175.244, 0.52", "-50.5839, 162.219, -176.153, 1.03", "-50.6032, 163.127, -177.059, 1.18", "-50.3984, 164.577, -178.545, 0.66", "-50.1676, 165.461, -179.461, 0.44", "-49.7973, 166.55, -180.485, 0.44", "-49.3638, 167.756, -181.51, 0.88", "-48.9188, 168.854, -182.482, 1.11", "-48.5202, 169.797, -183.305, 0.81", "-48.2296, 170.438, -183.876, 0.81", "-47.7175, 171.616, -184.985, 0.81", "-47.4024, 172.473, -185.762, 1.25", "-46.8586, 174.405, -187.44, 0.74", "-46.6177, 175.339, -188.32, 0.59", "-46.3806, 176.095, -189.173, 0.59", "-46.2352, 176.471, -189.644, 0.52", "-45.9777, 176.952, -190.311, 0.74", "-45.5554, 177.567, -191.138, 0.74", "-45.1117, 178.086, -191.723, 0.52", "-44.4831, 178.534, -192.339, 0.66", "-43.8711, 178.79, -192.8, 0.66", "-42.8755, 179.113, -193.439, 0.52", "-42.0955, 179.327, -193.857, 0.66", "-41.2866, 179.503, -194.241, 0.81", "-40.0772, 179.633, -194.883, 0.59", "-39.2322, 179.679, -195.433, 0.59", "-38.5557, 179.72, -195.94, 0.88", "-37.6453, 179.825, -196.702, 0.66", "-36.6672, 180.04, -197.591, 0.74", "-35.1791, 180.618, -199.011, 1.03", "-34.2275, 181.189, -200.033, 0.74", "-33.7277, 181.611, -200.69, 0.59", "-33.3885, 182.023, -201.293, 0.74", "-33.0855, 182.603, -202.009, 0.29", "-32.7414, 183.566, -202.958, 0.29", "-32.5243, 184.265, -203.538, 0.74", "-32.2472, 185.087, -204.309, 0.88", "-31.9878, 185.806, -205.094, 0.88", "-31.8182, 186.282, -205.706, 0.37", "-31.6702, 186.675, -206.248, 0.29", "-31.4652, 187.126, -206.94, 0.29", "-30.9235, 187.993, -208.285, 0.52", "-30.7859, 188.164, -208.557, 0.74", "-30.2031, 188.848, -209.708, 0.52" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-51.076, 95.7253, -103.688, 0.81", "-52.0345, 95.8976, -104.237, 0.81", "-52.7753, 96.1103, -104.665, 0.81", "-53.695, 96.4327, -105.121, 0.81", "-54.4939, 96.7518, -105.533, 0.81", "-55.1393, 97.0429, -105.856, 0.81", "-56.0598, 97.5058, -106.303, 0.66", "-56.98, 98.1116, -106.753, 0.59", "-58.1158, 99.0572, -107.398, 0.96", "-58.7559, 99.7305, -107.851, 0.96", "-59.4373, 100.551, -108.413, 0.66", "-59.9744, 101.23, -108.891, 0.96", "-60.7396, 102.238, -109.633, 0.96", "-61.8156, 103.755, -110.793, 0.74", "-62.3007, 104.492, -111.448, 0.74", "-62.6768, 105.115, -112.046, 0.52", "-62.9601, 105.684, -112.68, 0.52", "-63.2452, 106.368, -113.52, 0.52", "-63.3973, 106.715, -113.988, 0.81", "-63.9606, 107.751, -115.339, 1.18", "-64.3512, 108.347, -116.158, 0.66", "-64.7275, 108.909, -116.946, 0.66", "-64.9045, 109.178, -117.308, 0.66", "-65.2358, 109.766, -118.091, 0.81", "-65.5735, 110.34, -118.969, 0.52", "-65.8252, 110.76, -119.618, 0.52", "-66.113, 111.13, -120.363, 0.52", "-66.5428, 111.567, -121.441, 0.96", "-67.2982, 112.19, -123.335, 1.4", "-67.9725, 112.672, -125.053, 1.62", "-68.5081, 113.008, -126.379, 1.62", "-69.4783, 113.496, -128.525, 0.88", "-69.9851, 113.669, -129.473, 0.88", "-70.5259, 113.748, -130.302, 0.88", "-71.3392, 113.734, -131.319, 0.74", "-72.0031, 113.672, -132.058, 0.59", "-72.6877, 113.601, -132.86, 0.59", "-73.372, 113.607, -133.703, 0.59", "-74.0517, 113.652, -134.674, 0.59", "-74.5349, 113.729, -135.52, 0.59", "-75.0744, 113.821, -136.631, 1.03", "-76.0148, 114.031, -138.683, 1.4", "-76.4597, 114.181, -139.704, 1.62", "-77.0737, 114.515, -141.253, 1.84", "-77.941, 115.217, -143.8, 2.06", "-78.9026, 116.439, -147.551, 0.81", "-79.0001, 116.676, -148.226, 0.81", "-79.0589, 117.018, -149.124, 0.66", "-79.0705, 117.625, -150.538, 0.59", "-79.0277, 118.286, -151.824, 0.59", "-78.919, 119.254, -153.293, 0.96", "-78.785, 120.752, -155.09, 0.96", "-78.8553, 121.481, -156.022, 0.88", "-79.1663, 122.209, -157.041, 1.55", "-79.4757, 122.547, -157.536, 1.55", "-80.1676, 123.086, -158.286, 0.88", "-81.0454, 123.681, -159.061, 0.59", "-82.0725, 124.443, -159.877, 0.52", "-82.6482, 124.855, -160.422, 0.81", "-83.2225, 125.178, -161.065, 0.81", "-83.6335, 125.353, -161.556, 0.66", "-84.216, 125.524, -162.259, 0.66", "-84.9161, 125.616, -162.996, 0.59", "-86.1036, 125.754, -164.112, 0.44", "-87.0496, 125.789, -164.926, 0.66", "-87.6322, 125.727, -165.385, 0.88", "-88.2576, 125.595, -165.847, 1.11", "-89.5597, 125.187, -166.73, 0.96" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-12.7471, 70.127, 14.2577, 0.59", "-14.718, 71.1277, 15.9263, 0.59", "-15.6119, 71.5867, 16.6031, 0.59", "-16.3249, 71.9794, 17.0849, 0.37", "-16.9636, 72.3676, 17.4785, 0.44", "-17.5746, 72.7654, 17.8298, 0.44", "-18.2508, 73.2525, 18.1944, 0.74", "-18.6578, 73.6113, 18.3363, 0.37", "-19.3946, 74.3811, 18.6228, 0.52", "-19.8566, 74.9451, 18.7975, 0.66", "-20.0541, 75.2277, 18.8812, 0.66", "-20.5467, 75.9882, 19.1105, 0.52", "-20.9408, 76.6219, 19.3359, 0.74", "-21.5508, 77.6074, 19.7298, 0.59", "-22.0222, 78.3382, 20.0469, 0.29", "-22.5493, 79.1294, 20.3906, 0.29", "-22.9872, 79.8307, 20.6796, 0.52", "-23.2701, 80.3355, 20.8585, 0.66", "-23.5458, 80.8724, 21.0056, 0.66", "-23.8751, 81.5494, 21.1252, 0.66", "-24.3769, 82.5928, 21.2399, 0.81", "-24.8711, 83.6559, 21.3084, 0.37", "-25.2086, 84.4632, 21.3489, 0.37", "-25.5204, 85.2815, 21.3926, 0.44", "-25.7738, 86.0448, 21.4512, 0.44", "-26.0681, 87.0576, 21.5262, 0.52", "-26.3448, 88.032, 21.6275, 0.59", "-26.6042, 88.8468, 21.7362, 0.59", "-26.8332, 89.6239, 21.8677, 0.74", "-26.9741, 90.3159, 21.9914, 0.74", "-27.0572, 91.0457, 22.1249, 0.66", "-27.0826, 91.6904, 22.2391, 0.52", "-27.115, 92.4085, 22.3176, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-12.7471, 70.127, 14.2577, 0.81", "-14.7758, 70.5869, 12.6532, 0.81", "-15.4249, 70.7597, 12.1667, 0.96", "-15.9656, 70.9344, 11.7326, 0.96", "-16.4877, 71.1376, 11.2767, 0.81", "-17.2641, 71.4998, 10.5213, 0.37", "-17.6419, 71.6762, 10.1399, 0.37", "-17.956, 71.8377, 9.82557, 0.66", "-18.5208, 72.1574, 9.21204, 0.81", "-18.916, 72.4111, 8.78203, 0.81", "-19.5668, 72.8655, 8.08366, 0.66", "-20.0972, 73.2958, 7.48583, 0.37", "-20.3976, 73.5798, 7.12722, 0.37", "-20.7945, 74.0206, 6.62929, 0.37", "-21.2056, 74.5893, 6.05545, 0.37", "-21.3547, 74.8664, 5.79936, 0.37", "-21.6719, 75.6571, 5.11819, 0.66", "-21.8487, 76.2105, 4.66761, 0.66", "-22.035, 76.8704, 4.16706, 0.66", "-22.3354, 78.0536, 3.34796, 0.44", "-22.4632, 78.5827, 3.03154, 0.29", "-22.6343, 79.2653, 2.7053, 0.29", "-22.8133, 79.937, 2.4715, 0.29", "-23.0613, 80.8813, 2.23838, 0.59", "-23.2566, 81.7001, 2.12177, 0.88", "-23.4085, 82.3265, 2.08374, 0.88", "-23.6534, 83.2934, 2.05252, 0.66", "-23.8694, 84.2422, 2.03932, 0.66", "-24.0754, 85.4189, 2.02597, 0.52", "-24.2159, 86.5102, 2.04893, 0.52", "-24.3015, 87.5407, 2.10257, 0.66", "-24.3245, 88.3022, 2.16493, 0.88", "-24.3105, 89.0688, 2.23483, 0.88", "-24.2436, 90.2554, 2.3847, 0.44", "-24.1488, 91.3641, 2.57663, 0.59", "-24.035, 92.1993, 2.74115, 0.52", "-23.9009, 92.957, 2.90423, 0.52", "-23.723, 94.0179, 3.14658, 0.52", "-23.639, 94.9329, 3.35414, 0.81", "-23.6219, 95.5507, 3.48396, 1.03", "-23.6127, 96.7786, 3.69669, 0.37", "-23.6112, 97.8428, 3.8803, 0.37", "-23.6107, 98.4952, 3.98453, 0.37", "-23.6247, 99.5977, 4.13711, 0.37", "-23.6579, 100.093, 4.17843, 0.37", "-23.7483, 100.885, 4.21732, 0.66", "-23.8323, 101.393, 4.23023, 0.66", "-23.9909, 102.167, 4.23445, 0.44", "-24.17, 103.003, 4.20626, 0.52", "-24.3264, 103.708, 4.1677, 0.29", "-24.5121, 104.408, 4.11939, 0.29", "-24.7757, 105.298, 4.05155, 0.29", "-25.103, 106.415, 3.95946, 0.29", "-25.401, 107.41, 3.86336, 0.52", "-25.6133, 108.107, 3.83146, 0.66", "-25.7891, 108.652, 3.83471, 0.66", "-26.2576, 109.971, 3.94619, 0.37", "-26.7452, 111.247, 4.21201, 0.29", "-27.0942, 112.115, 4.54697, 0.29", "-27.6466, 113.272, 5.21951, 0.29", "-27.9188, 113.795, 5.5993, 0.29", "-28.2916, 114.48, 6.16982, 0.74", "-28.7407, 115.265, 6.91579, 0.96", "-29.1943, 116.058, 7.69387, 1.25", "-29.6753, 116.951, 8.50258, 0.59", "-29.9548, 117.457, 8.89468, 0.59", "-30.3173, 118.092, 9.3348, 0.52", "-30.6377, 118.647, 9.66102, 0.52", "-30.9638, 119.268, 9.95613, 0.37", "-31.2648, 119.913, 10.2417, 0.29", "-31.6178, 120.662, 10.6257, 0.59", "-31.9224, 121.313, 11.0787, 0.44", "-32.1219, 121.791, 11.4694, 0.44", "-32.4166, 122.603, 12.1623, 0.44", "-32.6167, 123.265, 12.7212, 0.44", "-32.8239, 124.048, 13.3374, 0.81", "-33.207, 125.532, 14.4032, 0.59", "-33.4505, 126.286, 14.9394, 0.74", "-33.7274, 126.935, 15.4066, 0.37", "-34.1225, 127.695, 15.9523, 0.29", "-34.6104, 128.594, 16.5867, 0.29", "-34.9205, 129.195, 16.9935, 0.44", "-35.3178, 129.895, 17.4899, 0.59", "-35.7875, 130.715, 18.1926, 0.74", "-35.9158, 130.957, 18.4253, 0.74", "-36.2027, 131.577, 19.0406, 0.37", "-36.3341, 131.994, 19.3963, 0.29", "-36.3795, 132.402, 19.6235, 0.29", "-36.3966, 132.752, 19.7322, 0.37", "-36.4555, 133.294, 19.8149, 0.52", "-36.597, 133.917, 19.8795, 0.22", "-36.8629, 134.639, 19.9532, 0.22", "-37.2618, 135.512, 20.1, 0.22", "-37.5396, 136.119, 20.2539, 0.22", "-37.857, 136.779, 20.5148, 0.29", "-38.1858, 137.384, 20.8372, 0.37", "-38.5218, 137.989, 21.2124, 0.37", "-38.8849, 138.69, 21.6832, 0.22", "-39.1791, 139.337, 22.182, 0.22", "-39.3282, 139.878, 22.6118, 0.22", "-39.4153, 140.554, 23.1271, 0.22", "-39.4459, 141.202, 23.5699, 0.22", "-39.4413, 141.907, 23.9892, 0.22", "-39.3581, 142.945, 24.5378, 0.59", "-39.2417, 143.686, 24.9667, 0.74", "-39.1078, 144.226, 25.2875, 0.74", "-38.8877, 144.865, 25.6737, 0.44", "-38.6774, 145.402, 26.0061, 0.22", "-38.4213, 145.989, 26.363, 0.29", "-37.8086, 147.205, 27.0557, 0.29", "-37.3571, 147.974, 27.5253, 0.29", "-36.8249, 148.773, 28.0524, 0.29", "-36.4657, 149.253, 28.3829, 0.52", "-36.1271, 149.707, 28.6873, 0.66" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "80.4258, 115.642, -3.72085, 0.59", "81.5799, 115.986, -3.94609, 0.59", "82.4277, 116.173, -4.05207, 0.59", "83.3489, 116.288, -4.11903, 0.74", "84.6643, 116.403, -4.1955, 0.81", "85.7687, 116.494, -4.25264, 0.96", "86.5958, 116.565, -4.30488, 1.25", "87.3239, 116.611, -4.3662, 1.03", "88.3826, 116.633, -4.45161, 0.52", "89.1672, 116.606, -4.51959, 0.52", "89.8555, 116.527, -4.58392, 0.96", "90.8345, 116.326, -4.71448, 0.96", "91.7508, 116.06, -4.88094, 0.81", "92.8831, 115.657, -5.11993, 0.66", "93.9768, 115.207, -5.36293, 0.88", "95.0509, 114.716, -5.60813, 0.59", "95.6973, 114.42, -5.75631, 0.44", "96.4482, 114.128, -5.9295, 0.44", "97.3487, 113.915, -6.14897, 0.66", "98.0122, 113.908, -6.31256, 0.66", "98.6884, 114.022, -6.4721, 0.88", "99.4608, 114.234, -6.6624, 0.88", "100.637, 114.621, -6.944, 0.81", "101.647, 115.004, -7.19265, 0.29", "102.204, 115.236, -7.34065, 0.29", "103.052, 115.594, -7.5924, 0.74", "103.944, 115.95, -7.915, 1.18", "104.544, 116.18, -8.16505, 0.88", "105.45, 116.494, -8.56322, 0.88", "105.877, 116.639, -8.77237, 1.11", "107.166, 117.09, -9.44269, 0.59", "108.098, 117.449, -9.99026, 0.74", "108.799, 117.714, -10.2857, 0.52", "109.616, 118.018, -10.4623, 0.66", "110.602, 118.407, -10.4091, 0.52", "111.385, 118.765, -10.1721, 0.66", "112.573, 119.464, -9.55523, 1.11", "115.492, 121.585, -7.66196, 0.66", "116.138, 122.157, -7.16258, 0.44", "116.823, 122.912, -6.51133, 0.44", "117.344, 123.629, -5.91763, 0.44", "117.951, 124.72, -5.11369, 0.59", "118.214, 125.31, -4.74607, 0.81", "118.493, 126.063, -4.46979, 0.81", "118.822, 126.918, -4.10742, 0.59", "119.189, 127.767, -3.68864, 0.37", "119.56, 128.49, -3.32256, 0.74", "119.894, 128.977, -3.05825, 0.52", "120.413, 129.539, -2.73963, 0.52", "121.645, 130.562, -2.14968, 0.52", "122.179, 130.935, -1.94307, 0.52", "122.818, 131.363, -1.68607, 0.81", "123.22, 131.648, -1.52852, 0.81", "123.829, 132.121, -1.28912, 0.66", "124.341, 132.489, -1.11402, 0.66", "125.018, 132.903, -0.947243, 0.52", "125.832, 133.352, -0.731014, 0.52", "126.565, 133.712, -0.539282, 0.88", "127.114, 133.985, -0.416372, 1.25", "128.097, 134.492, -0.23109, 0.74", "129.082, 135.033, -0.0583293, 0.59", "130.125, 135.653, 0.0700215, 0.52", "130.794, 136.099, 0.115014, 0.52", "131.603, 136.72, 0.129744, 0.74", "132.305, 137.315, 0.110611, 0.74", "132.979, 137.931, 0.0707215, 0.66", "134.018, 138.863, -0.0161614, 0.66", "134.762, 139.51, -0.0912124, 0.44", "135.677, 140.272, -0.188815, 0.37", "136.376, 140.807, -0.264462, 0.37", "137.774, 141.807, -0.410018, 0.74", "138.415, 142.242, -0.464313, 0.96", "138.895, 142.556, -0.469602, 0.96", "139.635, 143.036, -0.427222, 1.03", "140.166, 143.364, -0.361815, 0.81", "141.019, 143.836, -0.224823, 1.03", "141.665, 144.129, -0.103715, 0.74", "142.766, 144.547, 0.109349, 0.52", "143.768, 144.871, 0.311953, 0.52", "144.639, 145.163, 0.490329, 0.44", "145.453, 145.449, 0.624321, 0.37", "146.129, 145.711, 0.702439, 0.52", "146.906, 146.094, 0.751582, 0.52", "147.657, 146.58, 0.749572, 0.37", "148.704, 147.41, 0.695216, 0.44", "149.48, 148.106, 0.698034, 0.44", "150.378, 148.995, 0.743311, 0.44", "151.089, 149.706, 0.789818, 0.44", "151.862, 150.415, 0.831375, 0.66", "152.476, 150.938, 0.834561, 0.88", "153.621, 151.911, 0.780772, 0.37", "154.443, 152.693, 0.69099, 0.29", "155.144, 153.419, 0.59238, 0.29", "155.953, 154.254, 0.392104, 0.66", "156.801, 155.119, 0.111325, 0.52", "157.614, 155.899, -0.248039, 0.44", "158.38, 156.592, -0.660384, 0.59", "159.064, 157.201, -0.980892, 0.81", "160.248, 158.32, -1.38258, 0.81", "161.01, 159.08, -1.5465, 0.52", "162.027, 160.104, -1.62231, 0.29", "162.618, 160.755, -1.57943, 0.29", "163.477, 162.043, -1.40495, 0.59", "163.819, 162.951, -1.25245, 0.66", "163.938, 163.633, -1.12033, 0.81", "163.983, 164.502, -1.00321, 1.03", "163.977, 165.322, -0.940741, 1.03", "163.977, 166.463, -0.998631, 0.66", "164.024, 167.304, -1.17394, 0.66", "164.145, 168.052, -1.39206, 0.74", "164.367, 168.86, -1.71451, 0.74", "164.703, 169.696, -2.11148, 0.74", "165.103, 170.491, -2.50616, 0.59", "165.382, 170.983, -2.75048, 0.59", "165.908, 171.87, -3.21424, 0.74", "166.694, 173.095, -4.00278, 0.59", "167.092, 173.677, -4.43149, 0.37", "167.548, 174.346, -4.9517, 0.74", "167.956, 174.99, -5.44704, 0.74", "168.424, 175.778, -6.02609, 0.37", "169.215, 177.082, -6.93215, 0.29", "169.575, 177.623, -7.24418, 0.37", "169.956, 178.166, -7.52891, 0.37", "170.344, 178.644, -7.7443, 0.29", "170.784, 179.118, -7.90125, 0.52", "172.008, 180.268, -8.15783, 0.66", "172.832, 180.999, -8.2487, 0.88", "173.152, 181.25, -8.28099, 0.88", "173.95, 181.786, -8.34952, 0.88", "174.548, 182.126, -8.39413, 0.88", "175.427, 182.58, -8.45474, 0.59", "176.497, 183.13, -8.54701, 0.52", "177.304, 183.583, -8.64539, 0.59", "177.917, 183.977, -8.73431, 0.74", "178.634, 184.498, -8.8493, 0.74", "179.313, 185.061, -8.98662, 0.52", "180.111, 185.83, -9.1854, 0.81", "180.511, 186.25, -9.30914, 0.81", "181.203, 187.076, -9.54995, 0.44", "181.832, 187.954, -9.78371, 0.44", "182.398, 188.86, -9.99524, 0.59", "182.966, 189.885, -10.1953, 0.74", "183.423, 190.861, -10.3427, 0.88", "183.631, 191.4, -10.4118, 0.96", "183.899, 192.276, -10.5075, 0.59", "184.022, 192.726, -10.5104, 0.59", "184.234, 193.482, -10.4395, 0.29", "184.565, 194.74, -10.2682, 0.59", "184.789, 195.614, -10.1181, 0.66", "185.123, 196.766, -9.90456, 0.66", "185.643, 198.252, -9.59949, 0.59", "185.974, 199.043, -9.42922, 0.88" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "80.4258, 115.642, -3.72085, 0.22", "79.952, 116.242, -3.24672, 0.22", "79.3052, 116.993, -2.58997, 0.22", "78.881, 117.441, -2.15531, 0.22", "78.2126, 118.148, -1.47051, 0.37", "77.5241, 118.876, -0.76509, 0.52", "77.0328, 119.395, -0.261767, 0.52", "76.5472, 119.858, 0.260016, 0.29", "76.1963, 120.144, 0.624116, 0.37", "71.3385, 125.458, 7.45757, 0.37", "65.828, 131.603, 12.9264, 0.37", "61.7418, 139.113, 17.8235, 0.37", "57.2379, 147.056, 21.4765, 0.37", "54.5212, 155.441, 25.7959, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-127.878, 25.5662, 24.2022, 0.29", "-128.768, 25.0983, 24.7853, 0.29", "-130.047, 24.3587, 25.6094, 0.29", "-130.428, 24.122, 25.8373, 0.29", "-131.049, 23.6984, 26.2047, 0.44", "-131.638, 23.2759, 26.5397, 0.44", "-132.324, 22.7892, 26.9384, 0.29", "-133.451, 22.0222, 27.5893, 0.22", "-134.127, 21.5826, 27.9371, 0.22", "-134.633, 21.2952, 28.1982, 0.22", "-135.423, 20.9234, 28.5925, 0.22", "-136.188, 20.6283, 28.9913, 0.37", "-136.664, 20.4788, 29.2415, 0.37", "-137.211, 20.3277, 29.5445, 0.22", "-137.912, 20.1394, 29.9532, 0.29", "-138.507, 19.9572, 30.3322, 0.29", "-139.364, 19.6443, 30.8877, 0.44", "-139.911, 19.3959, 31.2274, 0.44", "-140.695, 19.0053, 31.6899, 0.29", "-141.429, 18.5906, 32.1212, 0.29", "-142.397, 18.0325, 32.6814, 0.29", "-142.992, 17.7122, 32.9897, 0.52", "-143.473, 17.4847, 33.1954, 0.52", "-144.201, 17.1846, 33.4672, 0.29", "-145.43, 16.7288, 33.8442, 0.29", "-146.409, 16.3968, 34.1665, 0.29", "-147.415, 16.0872, 34.5485, 0.29", "-148.052, 15.8981, 34.8488, 0.29", "-148.628, 15.7193, 35.1588, 0.29", "-148.983, 15.5965, 35.3814, 0.29", "-150.303, 15.086, 36.2769, 0.29", "-151.232, 14.6009, 36.9887, 0.59", "-151.633, 14.3199, 37.3305, 0.59", "-152.181, 13.8193, 37.8143, 0.22", "-152.688, 13.2602, 38.2481, 0.22", "-153.26, 12.5727, 38.6485, 0.22", "-153.558, 12.1725, 38.8081, 0.44", "-153.842, 11.7736, 38.9227, 0.44", "-154.164, 11.3039, 39.0404, 0.29", "-154.593, 10.6582, 39.161, 0.29", "-155.168, 9.68436, 39.1798, 0.29", "-163.654, 6.58811, 43.411, 0.29", "-171.325, 4.67587, 49.5182, 0.29", "-179.007, 1.34251, 54.9321, 0.29", "-186.085, -1.8476, 61.1922, 0.29", "-192.918, -5.74337, 67.3031, 0.29", "-200.538, -8.92138, 72.8988, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-127.878, 25.5662, 24.2022, 0.66", "-128.308, 26.3313, 24.5708, 0.66", "-128.678, 27.074, 24.9564, 0.88", "-129.011, 27.716, 25.3621, 0.88", "-129.343, 28.3069, 25.7665, 0.59", "-129.773, 29.0257, 26.2868, 0.44", "-130.271, 29.7947, 26.855, 0.52", "-130.756, 30.4563, 27.4036, 0.52", "-131.469, 31.2532, 28.161, 0.29", "-131.836, 31.5797, 28.48, 0.29", "-132.044, 31.7177, 28.6146, 0.52", "-132.595, 31.9985, 28.8564, 0.52", "-133.514, 32.3622, 29.1235, 0.29", "-134.52, 32.7394, 29.3154, 0.29", "-134.956, 32.9289, 29.3773, 0.29", "-136.052, 33.4991, 29.5613, 0.44", "-136.582, 33.8043, 29.663, 0.52", "-137.052, 34.0953, 29.7638, 0.52", "-137.807, 34.5977, 29.9388, 0.37", "-138.465, 35.062, 30.1235, 0.29", "-138.954, 35.3901, 30.359, 0.29", "-139.305, 35.6397, 30.5892, 0.29", "-139.983, 36.1544, 31.0684, 0.52", "-140.3, 36.384, 31.2951, 0.66", "-140.854, 36.7586, 31.6751, 0.66", "-141.813, 37.3854, 32.3326, 0.88", "-142.55, 37.933, 32.9095, 0.29", "-143.028, 38.3875, 33.3688, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-115.839, 33.4659, -24.0934, 0.74", "-115.844, 34.2953, -25.6582, 0.74", "-115.955, 35.1643, -27.3852, 0.66", "-116.062, 35.6046, -28.3299, 0.44", "-116.276, 36.1004, -29.4025, 0.44", "-116.502, 36.508, -30.2686, 0.44", "-116.695, 36.8404, -30.9736, 0.66", "-117.127, 37.5248, -32.3871, 0.66", "-117.396, 38.0156, -33.2958, 0.52", "-117.743, 38.5926, -34.3088, 0.52", "-118.067, 39.0613, -35.044, 0.52", "-118.641, 39.8633, -36.1644, 0.66", "-119.018, 40.3997, -36.8468, 0.66", "-119.45, 41.1031, -37.5705, 0.29", "-119.74, 41.6133, -38.0115, 0.29", "-120.045, 42.1912, -38.4784, 0.29", "-120.417, 42.8109, -38.9334, 0.29", "-120.743, 43.2779, -39.2446, 0.29", "-121.172, 43.8567, -39.6832, 0.81", "-121.396, 44.1729, -39.9007, 1.03", "-121.856, 44.9088, -40.3823, 1.03", "-122.36, 45.7401, -40.9619, 0.29", "-122.839, 46.4313, -41.4991, 0.29", "-123.626, 47.4125, -42.3433, 0.52", "-124.653, 48.4126, -43.4167, 0.37", "-125.432, 49.0028, -44.3309, 0.29", "-126.08, 49.4216, -45.1297, 0.29", "-126.665, 49.7695, -45.8876, 0.66", "-127.072, 50.0108, -46.4409, 0.81", "-127.877, 50.4981, -47.6435, 0.96", "-129.252, 51.3279, -49.8065, 0.29", "-129.723, 51.6025, -50.5379, 0.29", "-130.176, 51.8988, -51.2591, 0.74", "-130.552, 52.1336, -52.0162, 0.74", "-131.127, 52.4235, -53.534, 0.74", "-131.594, 52.6401, -54.9137, 0.52", "-132.404, 52.9589, -57.47, 0.52", "-132.943, 53.1481, -59.2405, 0.44", "-134.787, 53.7138, -65.5197, 0.74", "-136.609, 54.1973, -71.901, 0.44", "-137.201, 54.3398, -74.088, 0.81", "-137.845, 54.4757, -76.7965, 1.25" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-115.839, 33.4659, -24.0934, 0.29", "-116.915, 33.6463, -24.4541, 0.29", "-117.558, 33.7428, -24.7198, 0.29", "-118.363, 33.8533, -25.0937, 0.29", "-119.172, 33.9264, -25.4517, 0.29", "-119.927, 33.9537, -25.753, 0.29", "-121.007, 33.9554, -26.1291, 0.29", "-121.755, 33.9353, -26.3729, 0.44", "-122.378, 33.8891, -26.5336, 0.44", "-123.59, 33.7095, -26.7846, 0.44", "-124.666, 33.4437, -26.955, 0.29", "-125.852, 33.0406, -27.0642, 0.29", "-126.458, 32.7524, -27.0847, 0.29", "-127.637, 31.9802, -27.1082, 0.29", "-128.541, 31.2907, -27.1197, 0.44", "-129.642, 30.3859, -27.1724, 0.44", "-130.423, 29.729, -27.2288, 0.52", "-131.267, 29.0262, -27.3067, 0.52", "-132.228, 28.2949, -27.4078, 0.81", "-133.25, 27.6694, -27.5238, 0.44", "-134.831, 26.9629, -27.6804, 0.52", "-135.634, 26.7154, -27.7444, 0.52", "-136.383, 26.545, -27.8049, 0.52", "-137.0, 26.442, -27.8453, 0.52", "-137.945, 26.2693, -27.8489, 0.52", "-138.982, 25.9849, -27.7955, 0.44", "-140.018, 25.6688, -27.6963, 0.44", "-140.64, 25.459, -27.6261, 0.66", "-141.391, 25.1719, -27.5255, 0.66", "-143.01, 24.4459, -27.2762, 0.44", "-143.779, 24.0504, -27.1343, 0.44" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-80.702, 124.018, -32.1951, 0.96", "-79.651, 125.814, -37.0786, 0.96", "-79.3508, 126.334, -38.2532, 0.66", "-79.1644, 126.68, -38.8783, 0.29", "-78.9604, 127.091, -39.4761, 0.29", "-78.8054, 127.453, -39.9146, 0.66", "-78.6823, 127.781, -40.2525, 0.44", "-78.4976, 128.438, -40.4718, 0.44", "-78.3313, 129.17, -40.7, 0.74", "-78.2669, 129.65, -40.8581, 0.74", "-78.2411, 130.868, -41.2358, 0.74", "-78.2692, 131.483, -41.4115, 0.74", "-78.3118, 132.067, -41.5281, 0.44", "-78.3566, 133.039, -41.6402, 0.37", "-78.34, 133.781, -41.6653, 0.29", "-78.2673, 134.454, -41.6276, 0.29", "-78.0551, 135.576, -41.5417, 0.29", "-77.7165, 136.856, -41.497, 0.52", "-77.3823, 137.831, -41.5178, 0.44", "-76.966, 138.807, -41.6247, 0.81", "-76.6178, 139.561, -41.8562, 1.03", "-76.0936, 140.754, -42.4581, 1.33", "-75.864, 141.388, -42.9033, 1.03", "-75.7378, 141.888, -43.3362, 0.74", "-75.6507, 142.546, -43.9648, 0.74", "-75.5691, 143.774, -45.167, 0.44", "-75.5673, 144.253, -45.625, 0.44", "-75.6074, 144.87, -46.1493, 1.03", "-75.7027, 145.58, -46.719, 1.11", "-75.8166, 146.119, -47.1062, 1.11", "-76.0835, 147.114, -47.7044, 0.81", "-76.3145, 148.027, -48.1774, 0.59", "-76.4842, 148.725, -48.5589, 0.88", "-76.5831, 149.199, -48.8466, 0.66", "-76.6652, 149.823, -49.3031, 0.52", "-76.7075, 150.481, -49.8321, 0.44", "-76.679, 151.861, -50.983, 0.74", "-76.603, 152.426, -51.4455, 0.88", "-76.425, 153.291, -52.1125, 0.44", "-76.1125, 154.605, -53.0104, 0.81", "-75.9723, 155.188, -53.3526, 0.96", "-75.7474, 156.251, -53.8987, 0.66", "-75.6013, 157.221, -54.2877, 0.59", "-75.517, 158.112, -54.5684, 0.74", "-75.4475, 159.123, -54.9042, 0.74", "-75.323, 160.5, -55.4432, 0.59", "-75.1622, 161.607, -56.0456, 0.59", "-74.9676, 162.618, -56.7306, 0.44", "-74.6512, 163.936, -57.8175, 1.18", "-74.2345, 165.423, -59.257, 1.11", "-73.9186, 166.255, -60.2098, 0.88", "-73.4939, 167.137, -61.4262, 0.74", "-73.1078, 167.727, -62.3833, 0.66", "-72.5901, 168.318, -63.5045, 0.66", "-71.8079, 169.048, -64.9907, 0.96", "-70.8787, 169.877, -66.5076, 1.18", "-69.6601, 170.947, -68.4186, 1.4", "-68.8382, 171.607, -69.6274, 0.37", "-68.3058, 171.959, -70.3608, 0.37", "-67.799, 172.234, -70.9714, 0.74", "-67.032, 172.534, -71.7502, 1.03" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-80.702, 124.018, -32.1951, 0.52", "-81.1876, 125.02, -32.2882, 0.52", "-81.6959, 125.962, -32.372, 0.66", "-82.1864, 126.786, -32.4405, 0.66", "-82.6675, 127.529, -32.4951, 0.81", "-83.2966, 128.446, -32.5151, 0.37", "-83.777, 129.114, -32.4901, 0.29", "-84.2578, 129.724, -32.421, 0.29", "-84.7987, 130.333, -32.2997, 0.66", "-85.2791, 130.804, -32.152, 0.66", "-86.1773, 131.578, -31.8288, 0.37", "-86.69, 132.012, -31.6183, 0.74", "-87.2593, 132.49, -31.4069, 1.11", "-87.7039, 132.858, -31.2705, 1.4", "-88.4818, 133.47, -31.1038, 1.55", "-89.3059, 134.069, -31.0198, 0.52", "-90.3567, 134.742, -31.0648, 0.29", "-91.4073, 135.369, -31.198, 0.44", "-92.0937, 135.777, -31.3522, 0.66", "-92.8588, 136.255, -31.6036, 0.81", "-93.4243, 136.628, -31.862, 0.81", "-94.4528, 137.347, -32.4691, 0.29", "-95.1146, 137.858, -32.9218, 0.29", "-95.9557, 138.63, -33.5837, 0.29", "-96.6731, 139.413, -34.2306, 0.44", "-97.2598, 140.16, -34.8033, 0.81", "-97.7627, 140.881, -35.3002, 0.81", "-98.2597, 141.657, -35.7725, 0.96", "-98.6761, 142.309, -36.1077, 0.96", "-99.3881, 143.361, -36.6821, 0.29", "-99.7262, 143.871, -36.965, 0.37", "-100.127, 144.499, -37.3178, 0.66", "-100.49, 145.093, -37.6596, 0.81", "-100.84, 145.669, -37.9998, 0.81", "-102.23, 147.998, -39.3503, 0.81", "-102.796, 148.975, -39.9349, 0.37", "-103.404, 150.032, -40.5866, 0.29", "-104.028, 151.108, -41.2501, 0.29", "-104.679, 152.205, -41.8951, 0.59", "-105.026, 152.761, -42.1708, 0.88", "-105.471, 153.4, -42.3712, 1.03", "-106.216, 154.303, -42.6305, 0.29", "-106.607, 154.703, -42.7129, 0.29", "-107.182, 155.222, -42.783, 0.29", "-108.038, 155.969, -42.8353, 0.29", "-108.791, 156.656, -42.8313, 0.29", "-109.218, 157.054, -42.8038, 0.66", "-109.68, 157.487, -42.7533, 0.66", "-110.301, 158.087, -42.7277, 0.29", "-110.852, 158.64, -42.7521, 0.37", "-111.597, 159.433, -42.8683, 0.37", "-112.128, 160.04, -42.9732, 0.29", "-112.739, 160.774, -43.1166, 0.29", "-113.503, 161.69, -43.3333, 0.44", "-114.077, 162.309, -43.5045, 0.66", "-114.472, 162.681, -43.6396, 0.66" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-91.8416, 59.1581, 4.88318, 0.59", "-92.3958, 59.7878, 5.25475, 0.59", "-92.7584, 60.2585, 5.46874, 0.59", "-93.2326, 60.9781, 5.86604, 0.59", "-93.6555, 61.6476, 6.38056, 0.37", "-94.0377, 62.3167, 7.16173, 0.74", "-94.2229, 62.6298, 7.6828, 0.74", "-94.3929, 62.8825, 8.29112, 0.88", "-94.8613, 63.3868, 10.1459, 1.03", "-95.2387, 63.684, 11.7892, 0.74", "-95.8714, 64.0441, 14.5615, 0.66", "-96.356, 64.2457, 16.5412, 0.44", "-96.6925, 64.3513, 17.7705, 0.37", "-97.1984, 64.4764, 19.3819, 0.37", "-98.0744, 64.6576, 21.62, 0.52", "-98.5013, 64.7586, 22.4149, 0.74", "-99.0245, 64.916, 23.0534, 0.29", "-99.6248, 65.1686, 23.5861, 0.29", "-100.243, 65.4543, 24.0524, 0.29", "-101.003, 65.7927, 24.5294, 0.37", "-102.036, 66.2086, 25.1268, 0.37", "-102.771, 66.5059, 25.6056, 0.37", "-103.685, 66.8979, 26.2783, 0.37", "-104.855, 67.4069, 27.3207, 0.59", "-105.357, 67.6117, 27.8359, 0.37", "-106.094, 67.9238, 28.6802, 0.52", "-106.412, 68.0667, 29.0901, 0.52", "-107.214, 68.4117, 30.1943, 0.22", "-108.21, 68.8307, 31.5459, 0.22", "-108.547, 69.0015, 31.9826, 0.22", "-113.151, 70.4663, 40.7315, 0.22", "-118.719, 72.1082, 48.8661, 0.22", "-123.747, 73.5969, 57.3741, 0.22", "-127.367, 75.3637, 66.518, 0.22", "-129.61, 75.8198, 76.2521, 0.22", "-133.181, 77.1984, 85.485, 0.22", "-137.517, 79.6548, 94.1368, 0.22", "-141.47, 83.4615, 102.451, 0.22", "-145.782, 89.0261, 109.439, 0.22", "-150.456, 93.6942, 116.871, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-91.8416, 59.1581, 4.88318, 0.88", "-92.2354, 60.2245, 4.68624, 0.88", "-92.5587, 60.7764, 4.59903, 0.88", "-92.9798, 61.257, 4.53089, 0.66", "-93.6916, 61.8547, 4.45336, 0.66", "-94.4612, 62.3913, 4.37563, 0.66", "-95.4308, 63.0229, 4.3561, 0.66", "-96.3246, 63.5177, 4.41629, 0.66", "-97.3675, 64.064, 4.55093, 0.66", "-98.2077, 64.4971, 4.69863, 0.66", "-98.9091, 64.8721, 4.86694, 0.66", "-100.217, 65.6879, 5.3101, 0.66", "-100.634, 66.0067, 5.50454, 0.37", "-101.215, 66.5166, 5.87728, 0.29", "-101.731, 66.9866, 6.3113, 0.29", "-102.289, 67.4632, 6.85088, 0.29", "-102.987, 67.972, 7.56623, 0.88", "-103.413, 68.2343, 8.00335, 0.88", "-104.449, 68.8004, 9.1445, 0.88", "-105.278, 69.226, 10.1391, 0.88", "-105.74, 69.4685, 10.7347, 0.74", "-106.14, 69.6802, 11.2524, 0.59", "-106.597, 69.9265, 11.7966, 0.52", "-107.238, 70.2945, 12.4787, 0.52", "-107.876, 70.6959, 13.0574, 0.59", "-108.643, 71.2179, 13.654, 0.44", "-109.366, 71.7369, 14.1486, 0.66", "-110.107, 72.2819, 14.5831, 0.66", "-110.762, 72.7529, 14.8731, 0.74", "-111.724, 73.4063, 15.0371, 0.96", "-112.299, 73.7663, 14.9509, 0.96", "-112.924, 74.1397, 14.685, 0.88", "-113.449, 74.4601, 14.3488, 0.66", "-114.084, 74.8568, 13.8417, 0.66", "-115.978, 76.0651, 12.1158, 0.66", "-116.645, 76.498, 11.449, 0.44", "-117.169, 76.839, 10.9425, 0.44", "-117.629, 77.1562, 10.5395, 0.59", "-118.082, 77.5116, 10.2154, 0.81", "-118.552, 77.9702, 10.0117, 1.03", "-118.792, 78.2667, 9.97478, 1.03", "-119.273, 79.0052, 9.91484, 1.03", "-119.696, 79.6986, 9.8573, 1.03", "-120.054, 80.317, 9.8191, 0.66", "-120.475, 81.0965, 9.78883, 0.52", "-120.793, 81.7553, 9.7726, 0.81", "-121.137, 82.5681, 9.74887, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-30.5757, 143.247, 71.942, 0.66", "-35.035, 150.926, 76.1939, 0.66", "-40.0415, 157.951, 80.9919, 0.66" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-30.5757, 143.247, 71.942, 0.29", "-33.9905, 150.205, 78.0586, 0.66", "-37.3722, 155.831, 85.4929, 0.66" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "85.6265, 60.7638, 5.05522, 0.37", "86.1403, 61.9753, 5.16619, 0.37", "86.5559, 62.9078, 5.26062, 0.37", "87.0211, 63.879, 5.38502, 0.52", "87.3746, 64.6624, 5.51208, 0.52", "87.7441, 65.5829, 5.69711, 0.37", "88.0312, 66.3421, 5.88487, 0.52", "88.3224, 67.1638, 6.18587, 0.44", "88.5449, 67.7978, 6.47688, 0.66", "88.851, 68.5557, 6.82339, 0.29", "89.1716, 69.1741, 7.08374, 0.29", "89.4688, 69.6288, 7.29987, 0.29", "89.917, 70.1531, 7.62474, 0.52", "90.3891, 70.5644, 8.00814, 0.66", "91.4044, 71.2336, 8.79066, 0.52", "91.9099, 71.5219, 9.15101, 0.74", "92.3559, 71.7746, 9.46554, 0.74", "93.259, 72.3604, 10.1599, 0.66", "94.121, 72.987, 10.8987, 0.52", "94.5383, 73.3441, 11.2879, 0.52", "95.0039, 73.7785, 11.7749, 0.66", "95.2892, 74.0496, 12.0431, 0.66", "95.7015, 74.4722, 12.381, 0.66", "95.9864, 74.8116, 12.5714, 0.52", "96.4774, 75.4251, 12.8184, 0.52", "97.3003, 76.4111, 13.1902, 0.29", "97.7423, 76.8698, 13.3647, 0.29", "98.3371, 77.4008, 13.558, 0.44", "98.9148, 77.8468, 13.7176, 0.66", "99.522, 78.2708, 13.8592, 0.66", "100.054, 78.5991, 13.9804, 0.44", "100.749, 79.0166, 14.116, 0.66", "101.479, 79.428, 14.2703, 0.74", "101.937, 79.6755, 14.3774, 1.03", "102.622, 80.0728, 14.5443, 0.88", "103.532, 80.6996, 14.7586, 0.66", "104.092, 81.115, 14.8611, 0.44", "104.923, 81.7285, 14.9707, 0.37", "105.662, 82.2167, 15.0382, 0.37", "106.424, 82.6411, 15.0774, 0.59", "107.237, 83.0059, 15.0894, 0.29", "108.555, 83.4674, 14.9862, 0.29", "109.405, 83.7267, 14.8858, 0.29", "110.37, 84.0148, 14.7368, 0.37", "110.931, 84.1685, 14.6379, 0.37", "111.425, 84.2817, 14.5497, 0.74", "112.544, 84.606, 14.3846, 0.66", "113.4, 85.022, 14.2843, 0.44", "114.083, 85.4786, 14.2494, 0.52", "114.619, 85.8964, 14.2683, 0.52", "115.556, 86.637, 14.3751, 0.52", "116.463, 87.299, 14.5546, 0.66", "116.876, 87.5733, 14.6781, 0.81", "117.455, 87.912, 14.8573, 0.52", "118.318, 88.3906, 15.1327, 0.52", "118.929, 88.7473, 15.3247, 0.66", "119.68, 89.1977, 15.5766, 0.74", "120.647, 89.7079, 15.8772, 0.59", "121.278, 90.0287, 16.1187, 0.66", "121.79, 90.2863, 16.3426, 0.37", "122.365, 90.5752, 16.6193, 0.44", "123.369, 91.0809, 17.1373, 0.59", "123.908, 91.3766, 17.4137, 0.52", "125.09, 92.0675, 17.9812, 0.74", "125.533, 92.3376, 18.1923, 0.81", "126.123, 92.6867, 18.4806, 0.37", "126.647, 92.9633, 18.7421, 0.37", "127.29, 93.3041, 18.9881, 0.29", "127.919, 93.6653, 19.1474, 0.66", "128.55, 94.0663, 19.2197, 0.88", "129.367, 94.6621, 19.245, 0.66", "130.433, 95.5374, 19.1834, 0.52", "131.581, 96.5968, 19.1026, 0.44", "132.339, 97.4007, 19.0274, 0.44", "132.782, 97.9836, 18.9334, 0.52", "133.159, 98.576, 18.75, 0.52", "133.268, 98.7824, 18.6705, 0.59", "133.819, 99.9271, 18.2311, 0.66", "134.211, 100.694, 17.9965, 0.52", "134.675, 101.503, 17.7912, 0.37", "135.46, 102.817, 17.5024, 0.52", "135.846, 103.476, 17.3873, 0.88", "136.367, 104.345, 17.2519, 0.29", "136.779, 104.99, 17.1524, 0.29", "137.311, 105.749, 17.0935, 0.37", "137.849, 106.439, 17.0821, 0.37", "138.549, 107.179, 17.1023, 0.29", "138.892, 107.465, 17.086, 0.37", "139.33, 107.753, 17.0289, 0.37", "140.316, 108.293, 16.8377, 0.37", "140.87, 108.546, 16.6892, 0.37", "141.863, 108.91, 16.3942, 0.29", "142.468, 109.08, 16.1974, 0.44", "143.055, 109.208, 15.9878, 0.59", "143.553, 109.291, 15.8045, 0.59", "144.574, 109.453, 15.4149, 0.59", "145.412, 109.618, 15.0643, 0.44", "146.309, 109.84, 14.6525, 0.44", "147.141, 110.122, 14.2398, 0.44", "147.658, 110.335, 13.9625, 0.37", "148.41, 110.676, 13.5234, 0.37", "149.23, 111.089, 12.9795, 0.37", "149.586, 111.291, 12.73, 0.29", "150.441, 111.787, 12.0886, 0.29", "150.988, 112.098, 11.6593, 0.59", "151.586, 112.423, 11.1468, 0.74", "152.414, 112.872, 10.3312, 0.66", "153.066, 113.215, 9.59448, 0.59", "153.717, 113.546, 8.80464, 0.59", "154.185, 113.794, 8.20755, 0.74", "154.864, 114.235, 7.25937, 0.88", "155.673, 114.885, 6.03112, 1.11", "156.266, 115.481, 5.04795, 0.81", "156.741, 116.054, 4.21748, 0.52", "157.022, 116.448, 3.76885, 0.81", "157.532, 117.26, 3.08643, 0.59", "157.784, 117.73, 2.85349, 0.59", "158.257, 118.81, 2.62812, 0.44", "158.518, 119.544, 2.58402, 0.44", "158.936, 120.829, 2.60218, 0.59", "159.334, 121.952, 2.68519, 0.37", "159.62, 122.63, 2.81563, 0.37", "160.004, 123.401, 3.06628, 0.29", "160.36, 123.988, 3.33951, 0.52", "160.793, 124.579, 3.70527, 0.52", "161.205, 125.052, 4.07381, 0.44", "162.029, 125.888, 4.7867, 0.59", "162.808, 126.596, 5.44267, 0.59", "163.294, 127.004, 5.84827, 0.74", "163.913, 127.498, 6.33133, 0.66", "164.523, 127.973, 6.74111, 0.88", "164.995, 128.35, 6.98846, 1.03", "165.762, 129.015, 7.25773, 0.74", "166.347, 129.571, 7.40592, 0.59", "167.084, 130.347, 7.55302, 0.52", "167.944, 131.356, 7.66473, 0.88", "168.479, 132.021, 7.71348, 1.11", "169.345, 133.132, 7.76642, 0.81", "169.877, 133.845, 7.76736, 0.81", "170.598, 134.79, 7.74786, 0.81", "171.23, 135.571, 7.71797, 0.59", "171.79, 136.185, 7.68541, 0.59", "172.458, 136.803, 7.65035, 0.81", "173.408, 137.543, 7.60359, 0.66", "174.484, 138.281, 7.61142, 0.52", "175.471, 138.887, 7.66313, 0.59", "176.44, 139.445, 7.73273, 0.66", "177.123, 139.837, 7.79343, 0.66", "177.705, 140.164, 7.85039, 0.66", "179.015, 140.842, 7.95427, 0.74", "179.884, 141.223, 7.96157, 0.88", "180.98, 141.585, 7.9458, 0.88", "181.556, 141.707, 7.92827, 0.88", "182.418, 141.753, 7.97983, 0.96", "183.436, 141.678, 8.2116, 0.96", "184.259, 141.552, 8.56793, 0.81", "184.956, 141.451, 9.11277, 0.81", "185.44, 141.381, 9.58486, 0.74", "186.989, 141.158, 11.2594, 0.96", "187.899, 141.034, 12.2976, 1.03", "188.566, 140.964, 13.0685, 0.81", "189.72, 140.894, 14.2678, 0.52", "190.52, 140.882, 14.9514, 0.44", "191.051, 140.886, 15.3303, 0.44", "191.728, 140.911, 15.7196, 0.74", "192.184, 140.922, 15.9509, 0.74", "193.313, 140.951, 16.5376, 0.37", "194.479, 141.034, 17.1668, 0.52", "195.663, 141.196, 17.7557, 0.66", "196.94, 141.413, 18.2981, 0.29", "197.915, 141.578, 18.6508, 0.59", "198.461, 141.659, 18.8135, 0.81", "198.883, 141.73, 18.9191, 0.81", "200.778, 142.142, 19.1145, 0.59", "201.492, 142.297, 19.0908, 0.44", "202.264, 142.465, 18.9888, 0.29", "202.919, 142.632, 18.9009, 0.29", "204.01, 142.962, 18.7808, 0.29", "204.859, 143.3, 18.8669, 0.37", "213.387, 148.388, 19.0585, 0.37", "222.37, 152.51, 17.8652, 0.37", "230.649, 157.664, 15.9919, 0.37", "239.353, 161.839, 13.5593, 0.37", "248.58, 165.14, 11.7193, 0.37" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "85.6265, 60.7638, 5.05522, 0.29", "87.203, 60.8035, 3.85905, 0.29", "87.8316, 60.8688, 3.32877, 0.29", "88.432, 60.9933, 2.77328, 0.44", "88.9459, 61.1437, 2.27917, 0.44", "89.4124, 61.3066, 1.78611, 0.44", "90.4292, 61.6622, 0.697125, 0.59", "90.8685, 61.8822, 0.104958, 0.74", "91.182, 62.1199, -0.386232, 0.66", "91.6238, 62.5988, -1.13266, 0.44", "92.1504, 63.2683, -2.01339, 0.66", "92.5086, 63.7457, -2.57914, 0.74", "93.4085, 64.8935, -3.98142, 0.37", "93.9445, 65.5333, -4.79498, 0.29", "94.3819, 66.049, -5.44905, 0.66", "94.6358, 66.362, -5.82307, 0.66", "95.0011, 66.8249, -6.33612, 0.44", "95.9748, 68.0726, -7.65317, 0.44", "96.5467, 68.7328, -8.34907, 0.59", "97.2841, 69.5933, -9.28777, 0.59", "97.5438, 69.9112, -9.60782, 0.66", "98.1356, 70.6984, -10.3221, 0.29", "98.4778, 71.1657, -10.697, 0.29", "98.7249, 71.4918, -10.9396, 0.66", "98.9766, 71.8252, -11.2035, 0.66", "99.5507, 72.5556, -11.7675, 0.22", "100.292, 73.4393, -12.4817, 0.59", "100.5, 73.7003, -12.6816, 0.59", "101.076, 74.4759, -13.2384, 0.44", "101.528, 75.0903, -13.6376, 0.22", "102.111, 75.8743, -14.1191, 0.22", "102.888, 76.9414, -14.7466, 0.22", "103.39, 77.6463, -15.1004, 0.22", "103.655, 78.0066, -15.2803, 0.22", "104.18, 78.6628, -15.6075, 1.18", "104.573, 79.1081, -15.8432, 1.18", "105.309, 79.884, -16.2557, 0.66", "105.631, 80.1782, -16.4187, 0.66", "106.464, 80.8398, -16.827, 0.29", "107.131, 81.3384, -17.1253, 0.29", "108.03, 81.9492, -17.4842, 0.29", "108.555, 82.2571, -17.6535, 0.59", "109.21, 82.6041, -17.8509, 0.74", "110.271, 83.1646, -18.1875, 0.37", "111.446, 83.804, -18.6141, 0.29", "112.382, 84.3242, -19.0031, 0.29", "113.181, 84.7915, -19.4519, 0.29", "114.121, 85.3975, -20.148, 0.66", "114.658, 85.8045, -20.7071, 1.11", "115.246, 86.2583, -21.5912, 1.11", "115.57, 86.4803, -22.2331, 0.66", "116.38, 86.9742, -24.1173, 0.66", "116.902, 87.2113, -25.4417, 0.66", "117.702, 87.4009, -27.6028, 1.03", "118.627, 87.4246, -30.1604, 0.81", "119.507, 87.2563, -32.709, 0.59", "120.025, 87.0962, -34.2533, 0.52", "120.519, 86.8615, -35.7145, 0.52", "121.158, 86.442, -37.5838, 0.52", "121.488, 86.1492, -38.502, 0.96", "121.961, 85.6323, -39.8288, 1.4" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-120.809, 20.9476, -106.261, 0.29", "-122.637, 21.0952, -106.223, 0.29", "-123.795, 21.1993, -106.203, 0.29", "-124.838, 21.2967, -106.187, 0.29", "-127.495, 21.6151, -106.154, 0.29", "-129.16, 21.8476, -106.135, 0.52", "-130.25, 22.008, -106.125, 0.52", "-131.048, 22.1538, -106.138, 0.29", "-132.499, 22.4067, -106.146, 0.29", "-133.899, 22.5631, -106.189, 0.66", "-134.457, 22.5857, -106.22, 0.74", "-136.293, 22.6033, -106.352, 0.29", "-137.761, 22.6128, -106.471, 0.29", "-139.923, 22.6169, -106.661, 0.29", "-142.582, 22.5946, -106.883, 0.52", "-143.67, 22.5505, -106.959, 0.74", "-144.958, 22.4713, -107.037, 0.29", "-146.036, 22.4021, -107.099, 0.29", "-146.986, 22.3458, -107.143, 0.29", "-149.002, 22.2799, -107.175, 0.29", "-150.825, 22.301, -107.076, 0.74", "-151.411, 22.2863, -107.039, 1.03" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-120.809, 20.9476, -106.261, 0.44", "-122.127, 21.9013, -106.149, 0.44", "-123.403, 22.6862, -106.017, 0.44", "-124.913, 23.4228, -106.006, 0.44", "-126.303, 23.9784, -106.122, 0.44", "-127.644, 24.4125, -106.329, 0.44", "-128.707, 24.6998, -106.569, 0.44", "-129.945, 24.8939, -106.974, 0.37", "-132.279, 24.9669, -107.933, 0.37", "-133.526, 24.8848, -108.552, 0.22", "-134.86, 24.7131, -109.319, 0.59", "-136.179, 24.5267, -110.152, 0.59", "-137.117, 24.4434, -110.748, 0.59", "-138.12, 24.443, -111.359, 0.44", "-139.05, 24.5711, -111.832, 0.44", "-141.143, 25.1358, -112.732, 0.44", "-142.663, 25.7764, -113.305, 0.44", "-144.148, 26.6504, -113.78, 0.37", "-145.404, 27.6433, -114.181, 0.37", "-146.714, 28.9602, -114.65, 0.59", "-147.236, 29.6061, -114.849, 0.74", "-147.675, 30.2759, -115.026, 0.88", "-148.085, 30.9643, -115.213, 0.88", "-148.845, 32.246, -115.618, 0.88", "-149.745, 33.6799, -116.14, 0.29", "-150.341, 34.5759, -116.478, 0.29", "-151.21, 35.7662, -116.955, 0.44", "-151.827, 36.5326, -117.284, 0.44", "-152.578, 37.3671, -117.667, 0.37", "-153.485, 38.2763, -118.091, 0.37", "-154.461, 39.1585, -118.615, 0.74", "-155.306, 39.8802, -119.162, 0.74", "-156.077, 40.5329, -119.716, 0.74", "-156.728, 41.0987, -120.218, 0.59", "-157.408, 41.7354, -120.768, 0.59", "-158.762, 43.1149, -121.921, 0.52", "-159.855, 44.3686, -122.907, 0.44", "-160.361, 45.0148, -123.366, 0.88", "-160.613, 45.3653, -123.641, 0.88", "-161.402, 46.6729, -124.83, 0.29", "-161.827, 47.5644, -125.75, 0.29", "-162.089, 48.3786, -126.76, 1.03", "-162.167, 48.8188, -127.406, 1.55", "-162.215, 50.4738, -130.056, 1.55", "-162.088, 51.3953, -131.666, 0.59", "-161.872, 51.9913, -132.785, 0.59", "-161.191, 53.1496, -135.309, 0.59", "-160.846, 53.5845, -136.333, 0.44", "-160.423, 54.0548, -137.441, 0.44", "-159.487, 54.9727, -139.587, 0.81", "-159.032, 55.3858, -140.635, 1.4", "-157.456, 56.662, -144.179, 1.62", "-156.974, 56.9766, -145.176, 0.81" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-89.5597, 125.187, -166.73, 0.88", "-90.5055, 124.306, -167.611, 0.88", "-91.6049, 123.264, -168.532, 0.66", "-92.2962, 122.52, -169.201, 0.81", "-92.9852, 121.692, -169.958, 1.18", "-93.7143, 120.661, -170.95, 1.33", "-94.1699, 119.932, -171.687, 1.11", "-94.6961, 118.972, -172.717, 0.81", "-95.4183, 117.513, -174.291, 0.81", "-95.745, 116.868, -175.033, 1.03", "-96.4, 115.747, -176.413, 1.25", "-96.9103, 115.001, -177.39, 1.25", "-97.2337, 114.617, -177.965, 1.25", "-98.3509, 113.828, -179.506, 0.52", "-98.9064, 113.696, -179.947, 0.52", "-99.7779, 113.7, -180.385, 0.96", "-100.676, 113.844, -180.692, 0.88", "-101.217, 113.978, -180.835, 0.88", "-102.467, 114.396, -181.112, 1.03", "-103.082, 114.672, -181.187, 1.47", "-103.724, 114.978, -181.277, 1.47", "-104.338, 115.269, -181.374, 1.47" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-89.5597, 125.187, -166.73, 0.52", "-89.8272, 127.508, -167.128, 0.52", "-89.9387, 128.187, -167.282, 0.59", "-90.1799, 129.199, -167.535, 0.59", "-90.3503, 129.77, -167.68, 0.37", "-90.6694, 130.666, -167.917, 0.59", "-90.8592, 131.133, -168.039, 0.66", "-91.3309, 131.966, -168.261, 0.66", "-91.7983, 132.689, -168.448, 0.29", "-92.2628, 133.368, -168.617, 0.44", "-92.6151, 133.908, -168.738, 0.44", "-93.141, 134.724, -168.908, 0.29", "-93.4374, 135.196, -168.984, 0.29", "-93.6732, 135.585, -169.022, 0.59", "-94.0999, 136.376, -169.102, 0.66", "-94.4857, 137.148, -169.175, 0.66" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-27.115, 92.4085, 22.3176, 0.37", "-27.6429, 93.5972, 20.3923, 0.37", "-27.8625, 94.0067, 19.8457, 0.59", "-28.0116, 94.2543, 19.5478, 0.81", "-28.4976, 95.0393, 18.7296, 0.66", "-28.8756, 95.6756, 18.1156, 0.29", "-29.0668, 95.988, 17.8004, 0.29", "-29.4846, 96.6892, 17.2421, 0.29", "-29.6776, 97.007, 16.9956, 0.29", "-29.9942, 97.5164, 16.6306, 0.66", "-30.3689, 98.12, 16.2493, 0.81", "-30.9754, 99.1068, 15.6607, 0.44", "-31.4967, 99.9735, 15.1797, 0.52", "-31.857, 100.564, 14.8851, 0.66", "-32.5348, 101.612, 14.4402, 0.66", "-32.8802, 102.12, 14.2618, 0.29", "-33.5285, 103.033, 14.0062, 0.29", "-33.9547, 103.608, 13.8798, 0.44", "-34.8504, 104.716, 13.6478, 0.44", "-35.711, 105.652, 13.465, 0.29", "-36.3866, 106.294, 13.3618, 0.44", "-36.9493, 106.767, 13.2908, 0.44", "-37.4327, 107.119, 13.2425, 0.29", "-37.983, 107.454, 13.2023, 0.37", "-39.1591, 108.013, 13.1441, 0.22", "-39.7208, 108.22, 13.1241, 0.44", "-40.3257, 108.41, 13.1128, 0.29", "-41.152, 108.632, 13.1104, 0.22", "-42.4043, 108.923, 13.1091, 0.22", "-43.5669, 109.125, 13.1097, 0.22", "-44.3938, 109.214, 13.1, 0.22", "-45.5576, 109.28, 13.0704, 0.22", "-47.0345, 109.294, 12.9672, 0.59", "-47.6573, 109.285, 12.9006, 0.59", "-48.3766, 109.271, 12.7947, 0.44", "-49.4886, 109.232, 12.5816, 0.59", "-50.0813, 109.208, 12.4607, 0.66", "-51.2395, 109.164, 12.1922, 0.52", "-52.5344, 109.181, 11.8825, 0.29", "-53.4096, 109.249, 11.6787, 0.22", "-54.4182, 109.404, 11.4629, 0.22", "-55.344, 109.608, 11.295, 0.88", "-55.9053, 109.772, 11.1972, 0.88", "-56.7931, 110.112, 11.0626, 0.44", "-57.2251, 110.304, 10.9827, 0.44", "-57.7212, 110.579, 10.8801, 0.59", "-58.2639, 110.972, 10.7617, 0.37", "-58.9527, 111.546, 10.5763, 0.52", "-59.2667, 111.813, 10.5115, 0.74", "-67.8587, 114.442, 6.1633, 0.74", "-75.6596, 116.855, 0.416789, 0.74", "-83.4797, 119.494, -5.1973, 0.74", "-92.3137, 121.438, -9.43821, 0.74" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-27.115, 92.4085, 22.3176, 0.37", "-27.2731, 93.188, 22.8557, 0.37", "-27.5164, 93.7726, 23.3431, 0.37", "-28.0553, 94.518, 24.0453, 0.37", "-28.8574, 95.2228, 24.9086, 0.66", "-29.3702, 95.6016, 25.4245, 0.52", "-29.8442, 95.977, 25.9316, 0.29", "-30.2415, 96.2626, 26.385, 0.29", "-30.729, 96.5992, 26.9353, 0.29", "-31.5115, 97.1462, 27.7447, 0.29", "-32.0927, 97.6845, 28.2793, 0.22", "-32.5082, 98.3146, 28.6803, 0.22", "-32.7358, 98.8152, 28.905, 0.22", "-32.9576, 99.3823, 29.0923, 0.52", "-33.1441, 99.8763, 29.2047, 0.66", "-33.2931, 100.279, 29.2516, 0.66", "-33.7528, 101.354, 29.3132, 0.22", "-34.0918, 101.977, 29.3337, 0.22", "-34.5043, 102.648, 29.3502, 0.22", "-34.7112, 102.951, 29.3604, 0.22", "-40.4703, 109.706, 33.6995, 0.22", "-46.6615, 117.077, 35.8244, 0.22", "-52.239, 124.774, 38.387, 0.22", "-57.2333, 132.886, 40.8039, 0.22" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-36.1271, 149.707, 28.6873, 0.29", "-36.3426, 150.813, 28.6368, 0.29", "-36.592, 151.719, 28.602, 0.29", "-36.8489, 152.531, 28.566, 0.29", "-37.0836, 153.23, 28.5178, 0.29", "-37.3362, 153.888, 28.4638, 0.29", "-37.6975, 154.692, 28.3805, 0.59", "-38.0294, 155.289, 28.3087, 0.81", "-38.1695, 155.512, 28.2699, 0.81", "-38.5355, 156.119, 28.1249, 0.29", "-39.0078, 157.048, 27.8619, 0.29", "-39.2908, 157.772, 27.6208, 0.29", "-39.4713, 158.407, 27.3806, 0.29", "-39.6117, 159.095, 27.1275, 0.52", "-39.763, 159.923, 26.8819, 0.29", "-39.9089, 160.687, 26.7089, 0.29", "-40.0061, 161.526, 26.5226, 0.29", "-40.0607, 162.302, 26.374, 0.22", "-40.1194, 162.934, 26.2788, 0.22", "-40.3561, 164.091, 26.2467, 0.37", "-40.7078, 164.914, 26.4068, 0.44", "-42.033, 174.323, 24.1468, 0.44", "-43.167, 183.852, 22.3575, 0.44", "-44.0957, 193.559, 22.5035, 0.44", "-44.1654, 203.291, 23.1015, 0.44", "-45.4206, 212.788, 24.983, 0.44", "-47.3791, 222.33, 25.6141, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-36.1271, 149.707, 28.6873, 0.29", "-34.681, 149.258, 29.4711, 0.29", "-34.1227, 149.087, 29.7791, 0.29", "-33.3667, 148.883, 30.1824, 0.22", "-32.6149, 148.709, 30.554, 0.22", "-30.6928, 148.292, 31.4518, 0.22", "-29.6909, 148.086, 31.9128, 0.22", "-28.9854, 147.984, 32.2298, 0.22", "-28.367, 147.897, 32.5195, 0.22", "-27.4948, 147.781, 32.9368, 0.52", "-27.1667, 147.746, 33.0838, 0.52", "-25.7152, 147.643, 33.5674, 0.22", "-24.895, 147.617, 33.8174, 0.22", "-16.1776, 145.818, 38.3563, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "54.5212, 155.441, 25.7959, 0.66", "50.0348, 162.479, 31.0649, 0.66", "47.3316, 171.103, 34.8663, 0.66" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "54.5212, 155.441, 25.7959, 0.29", "49.8115, 162.446, 30.9139, 0.66", "46.659, 169.468, 37.0936, 0.66" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-200.538, -8.92138, 72.8988, 0.44", "-207.887, -11.9895, 78.906, 0.44" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-200.538, -8.92138, 72.8988, 0.29", "-208.687, -13.7229, 75.9555, 0.44", "-216.455, -19.7047, 77.3742, 0.44", "-224.956, -23.9247, 80.3743, 0.44" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-143.028, 38.3875, 33.3688, 0.44", "-143.693, 38.333, 33.6681, 0.44", "-144.418, 38.1848, 34.0392, 0.44", "-145.103, 38.015, 34.4655, 0.59", "-146.018, 37.8076, 35.043, 0.74", "-146.818, 37.649, 35.528, 0.74", "-147.303, 37.5408, 35.8044, 0.74", "-147.794, 37.3815, 36.0751, 0.74", "-148.716, 36.9808, 36.6197, 0.66", "-149.25, 36.7159, 36.9419, 0.52", "-149.778, 36.4633, 37.2534, 0.81", "-150.524, 36.1751, 37.6667, 0.59", "-151.529, 35.8915, 38.1829, 0.29", "-152.978, 35.4597, 38.9088, 0.29", "-153.571, 35.2603, 39.1991, 0.22", "-154.082, 35.0718, 39.484, 0.22", "-154.817, 34.8238, 39.9479, 0.22", "-155.63, 34.7365, 40.5109, 0.22", "-164.149, 33.1723, 45.4967, 0.22", "-172.045, 31.5676, 51.4077, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-143.028, 38.3875, 33.3688, 0.29", "-142.417, 38.9168, 33.5005, 0.29", "-141.972, 39.3023, 33.5964, 0.29", "-141.468, 39.7385, 33.7049, 0.29", "-140.96, 40.1784, 33.8143, 0.29", "-140.351, 40.7056, 33.9455, 0.29", "-134.169, 47.6027, 37.3716, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-143.779, 24.0504, -27.1343, 0.29", "-144.802, 23.7598, -27.8519, 0.29", "-145.457, 23.5754, -28.3932, 0.37", "-146.175, 23.4035, -28.9885, 0.37", "-147.113, 23.2231, -29.7729, 0.29", "-148.584, 23.0177, -31.0114, 0.29", "-149.555, 22.8821, -31.8288, 0.44", "-151.312, 22.6998, -33.3482, 0.66", "-152.015, 22.6326, -33.9628, 0.44", "-152.607, 22.5876, -34.499, 0.37", "-153.239, 22.581, -35.1275, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-143.779, 24.0504, -27.1343, 0.29", "-144.33, 22.822, -27.2656, 0.29", "-144.931, 21.3035, -27.4763, 0.29", "-145.369, 20.0467, -27.6013, 0.29", "-145.844, 18.454, -27.7302, 0.29", "-146.078, 17.5555, -27.8206, 0.66", "-146.423, 16.0878, -27.9777, 0.52", "-146.812, 14.0371, -28.2374, 0.44", "-147.202, 11.3726, -28.6059, 0.29", "-147.476, 8.76776, -28.9924, 0.29", "-147.631, 6.5803, -29.3223, 0.44", "-147.679, 5.57082, -29.4397, 0.44", "-147.691, 4.92126, -29.4857, 0.44", "-147.679, 3.81698, -29.5203, 0.44", "-147.63, 2.60603, -29.4944, 0.29", "-147.526, 0.762212, -29.2944, 0.29", "-147.429, -0.651253, -29.0713, 0.29", "-147.314, -2.47701, -28.7995, 0.29", "-147.211, -4.32237, -28.5346, 0.74", "-147.167, -5.25079, -28.4135, 0.74", "-147.001, -8.34833, -28.0272, 0.29", "-146.872, -10.5487, -27.7896, 0.29", "-146.805, -11.7431, -27.7088, 0.44", "-146.76, -12.455, -27.6964, 0.44", "-146.688, -13.6477, -27.7156, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-67.032, 172.534, -71.7502, 0.88", "-66.3711, 172.557, -72.3843, 0.88", "-65.3753, 172.522, -73.2749, 0.66", "-63.0, 172.451, -75.1739, 0.59", "-62.0346, 172.472, -75.8921, 0.52", "-61.2894, 172.528, -76.4232, 0.44", "-60.2365, 172.691, -77.1307, 0.44", "-59.6379, 172.828, -77.5393, 0.44", "-58.8531, 173.063, -78.0529, 0.44", "-57.9629, 173.384, -78.454, 0.88", "-57.397, 173.562, -78.6737, 0.88", "-56.2396, 173.912, -79.0987, 0.44", "-55.4653, 174.108, -79.3701, 0.66", "-54.7328, 174.2, -79.6967, 0.66", "-53.9612, 174.204, -80.0903, 0.66", "-53.1899, 174.139, -80.5171, 0.88", "-52.7593, 174.103, -80.7498, 0.88", "-51.9288, 174.04, -81.1914, 0.44", "-50.0651, 174.018, -82.0959, 0.37", "-49.3854, 174.071, -82.383, 0.96", "-48.8341, 174.155, -82.5695, 0.96", "-47.4232, 174.436, -82.9316, 0.37", "-46.4424, 174.642, -83.1144, 0.29", "-45.578, 174.836, -83.2152, 0.29", "-44.7264, 175.011, -83.2404, 0.59", "-43.7992, 175.18, -83.2474, 0.74", "-43.3476, 175.264, -83.2333, 0.74", "-42.1645, 175.446, -83.1718, 0.29", "-40.7956, 175.604, -83.1072, 0.29", "-40.5319, 175.615, -83.1028, 0.74", "-39.7301, 175.595, -83.1212, 1.03", "-39.1499, 175.564, -83.1568, 1.03", "-37.961, 175.471, -83.2428, 0.29", "-36.9641, 175.363, -83.3169, 0.37", "-35.932, 175.198, -83.4187, 0.37", "-34.7985, 175.022, -83.5626, 0.81", "-33.9621, 174.917, -83.7041, 0.96", "-33.2881, 174.846, -83.8213, 0.96", "-32.5434, 174.789, -83.9222, 0.66", "-31.5757, 174.694, -84.0014, 0.37", "-30.4595, 174.495, -84.0394, 0.29", "-29.7617, 174.292, -84.0182, 0.29", "-29.0393, 174.018, -83.9537, 0.59", "-28.3219, 173.677, -83.8601, 0.59", "-27.4992, 173.196, -83.7236, 0.29", "-26.7398, 172.692, -83.5745, 0.29", "-26.0054, 172.147, -83.4521, 0.52", "-25.6194, 171.853, -83.4026, 0.52", "-24.835, 171.272, -83.2964, 0.29", "-24.0732, 170.721, -83.1873, 0.44", "-23.4031, 170.22, -83.0239, 0.44", "-22.3636, 169.341, -82.7635, 0.29", "-22.0082, 168.994, -82.6685, 0.29", "-21.0016, 167.89, -82.3913, 0.81", "-20.665, 167.457, -82.2918, 0.81", "-19.6151, 165.904, -81.9581, 0.29", "-18.5648, 164.184, -81.6133, 0.29", "-18.1184, 163.389, -81.4574, 0.81", "-17.7575, 162.71, -81.3534, 0.81", "-17.0383, 161.279, -81.2313, 0.37", "-16.5915, 160.387, -81.1752, 0.29", "-15.7982, 158.726, -81.1264, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-67.032, 172.534, -71.7502, 0.52", "-66.7093, 173.535, -72.196, 0.52", "-66.288, 174.667, -72.8649, 0.44", "-65.9206, 175.674, -73.51, 0.44", "-65.4939, 176.981, -74.3255, 0.44", "-65.1289, 178.17, -75.0409, 0.44", "-64.9059, 178.906, -75.4481, 0.44", "-64.4096, 180.399, -76.2033, 0.44", "-63.9869, 181.646, -76.7952, 0.44", "-63.6246, 182.754, -77.2393, 0.81", "-63.3564, 183.592, -77.5016, 0.96", "-62.8707, 185.057, -77.8353, 0.29", "-62.5263, 186.066, -77.963, 0.52", "-62.2473, 186.851, -77.9749, 0.74", "-61.9224, 187.653, -77.9426, 0.29", "-61.3522, 188.975, -77.8284, 0.29", "-60.8961, 190.066, -77.69, 0.74", "-60.6169, 190.763, -77.6051, 0.74", "-60.1869, 191.802, -77.4517, 0.52", "-59.7792, 192.741, -77.2616, 0.59", "-59.2473, 193.86, -76.9876, 0.29", "-59.0107, 194.312, -76.8638, 0.29", "-58.5368, 195.157, -76.6333, 0.96", "-57.8298, 196.501, -76.1867, 0.29", "-57.5288, 197.109, -75.9465, 0.29", "-57.1359, 197.943, -75.5832, 0.66", "-56.8582, 198.586, -75.2951, 0.37", "-56.3671, 199.852, -74.7053, 0.37", "-55.9613, 201.09, -74.1232, 0.44", "-55.7362, 201.968, -73.7598, 0.81", "-55.5713, 202.786, -73.4608, 0.81", "-55.4453, 203.6, -73.2055, 0.66", "-55.3172, 204.645, -72.9204, 0.44", "-55.2534, 205.274, -72.7885, 0.37", "-55.1654, 206.036, -72.691, 0.37", "-55.048, 207.061, -72.6162, 0.81", "-54.987, 207.692, -72.5733, 1.11", "-54.9339, 208.298, -72.5597, 1.11", "-54.8797, 209.242, -72.5769, 0.59", "-54.8684, 210.146, -72.543, 0.59", "-54.91, 210.987, -72.4727, 0.81", "-55.046, 212.46, -72.2976, 0.59", "-55.153, 213.496, -72.1621, 0.29", "-55.2565, 214.486, -72.0752, 0.29", "-55.4111, 216.178, -72.103, 0.29", "-55.4471, 216.973, -72.262, 0.29", "-55.4266, 217.59, -72.648, 0.29", "-55.3452, 218.157, -73.2361, 0.29", "-55.1055, 219.016, -74.3454, 0.96", "-54.668, 220.072, -75.8904, 1.11", "-54.457, 220.506, -76.6039, 1.11", "-53.973, 221.412, -78.1856, 0.74", "-53.6549, 222.027, -79.2918, 0.29", "-53.4508, 222.485, -80.0656, 0.29", "-53.3003, 222.814, -80.5429, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-121.137, 82.5681, 9.74887, 0.37", "-121.869, 83.4527, 10.1246, 0.37", "-122.649, 84.1995, 10.5362, 0.37", "-123.474, 84.7342, 11.0358, 0.52", "-124.21, 85.1504, 11.6305, 0.59", "-125.195, 85.7084, 12.4277, 0.66", "-125.816, 86.0597, 12.9296, 0.52", "-126.517, 86.3643, 13.5812, 0.66", "-127.729, 86.6452, 14.8656, 0.74", "-128.83, 86.7033, 16.1493, 0.44" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-121.137, 82.5681, 9.74887, 0.37", "-119.224, 82.6483, 8.90782, 0.37", "-118.335, 82.5448, 8.48305, 0.37", "-117.611, 82.3785, 8.15472, 0.37", "-116.869, 82.1689, 7.79811, 0.37", "-116.351, 82.0223, 7.54868, 0.37", "-115.678, 81.8321, 7.22498, 0.52", "-114.783, 81.4002, 6.90183, 0.52", "-114.049, 80.9449, 6.60404, 0.74", "-113.538, 80.5987, 6.33373, 0.74", "-104.464, 78.1198, 2.98673, 0.74", "-95.9704, 75.3874, -1.48604, 0.74" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-121.137, 82.5681, 9.74887, 0.44", "-120.587, 83.5721, 10.4404, 0.44", "-120.067, 84.5217, 11.0945, 0.52", "-119.772, 85.0604, 11.4656, 0.37", "-119.456, 85.6367, 11.8626, 0.29", "-119.16, 86.1781, 12.2355, 0.44", "-118.907, 86.6389, 12.5529, 0.59", "-115.797, 93.9215, 18.4297, 0.59", "-110.354, 100.402, 23.5483, 0.59", "-105.774, 106.729, 29.6231, 0.59", "-100.095, 113.119, 34.6026, 0.59", "-93.3374, 119.037, 38.7863, 0.59", "-87.1103, 125.852, 42.3021, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-104.338, 115.269, -181.374, 0.59", "-104.113, 115.522, -186.238, 0.59", "-103.914, 115.606, -188.695, 0.59", "-103.769, 115.609, -190.557, 0.52", "-103.66, 115.595, -193.214, 0.44", "-103.642, 115.596, -194.624, 0.52", "-103.634, 115.623, -196.282, 0.74", "-103.68, 115.779, -198.852, 0.96", "-103.657, 115.97, -200.562, 0.66", "-103.605, 116.126, -202.321, 0.52", "-103.628, 116.18, -202.965, 0.52", "-103.767, 116.26, -203.909, 0.59", "-104.019, 116.371, -204.793, 0.59", "-104.256, 116.843, -205.405, 0.59" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-104.338, 115.269, -181.374, 0.74", "-106.147, 116.588, -181.427, 0.74", "-106.799, 117.057, -181.398, 0.74", "-107.703, 117.625, -181.357, 0.74", "-108.408, 117.995, -181.356, 0.74", "-109.791, 118.649, -181.4, 0.44", "-110.419, 118.908, -181.447, 0.37", "-111.154, 119.145, -181.524, 0.66", "-112.145, 119.352, -181.768, 0.81", "-113.216, 119.486, -182.174, 0.81", "-113.393, 119.507, -182.27, 0.96", "-114.116, 119.622, -182.769, 0.96", "-115.18, 119.917, -183.648, 0.59", "-115.649, 120.121, -184.124, 0.59", "-116.409, 120.515, -185.044, 0.96", "-117.084, 120.841, -185.911, 0.96", "-117.409, 120.979, -186.322, 0.74", "-118.03, 121.264, -187.086, 0.74", "-118.962, 121.747, -188.138, 0.59", "-119.891, 122.293, -189.076, 0.59", "-120.676, 122.843, -189.712, 0.52", "-121.198, 123.311, -190.01, 0.52", "-121.863, 124.115, -190.242, 0.66", "-122.521, 125.181, -190.31, 0.74", "-123.112, 126.39, -190.256, 0.52", "-123.553, 127.426, -190.167, 0.52", "-124.078, 128.778, -190.039, 0.52", "-124.595, 130.124, -189.928, 0.66", "-125.093, 131.283, -189.868, 0.52", "-125.92, 132.952, -189.813, 0.52", "-126.328, 133.66, -189.806, 0.96", "-126.925, 134.534, -189.82, 0.96", "-127.684, 135.446, -189.896, 0.52", "-128.693, 136.484, -190.08, 0.52", "-129.401, 137.152, -190.236, 1.11", "-129.922, 137.626, -190.368, 1.11", "-130.393, 138.065, -190.493, 0.81", "-131.031, 138.738, -190.673, 0.81", "-131.772, 139.701, -190.941, 0.66", "-132.217, 140.52, -191.203, 0.66", "-132.551, 141.528, -191.652, 0.66", "-132.614, 142.15, -192.018, 0.66", "-132.528, 143.1, -192.664, 0.81", "-132.341, 143.839, -193.218, 0.81", "-132.024, 144.702, -193.91, 0.66", "-131.515, 145.992, -194.916, 0.59", "-131.226, 146.79, -195.466, 0.59", "-131.015, 147.593, -195.936, 0.81", "-130.924, 148.271, -196.22, 1.18", "-130.937, 149.11, -196.498, 0.96", "-131.091, 149.989, -196.759, 0.96", "-131.442, 150.999, -197.057, 0.81", "-131.8, 151.645, -197.297, 0.81", "-132.62, 152.579, -197.746, 0.59", "-133.832, 153.558, -198.268, 0.52", "-134.922, 154.264, -198.673, 0.74", "-135.83, 154.807, -198.962, 1.18", "-136.494, 155.206, -199.148, 1.18", "-137.801, 156.017, -199.522, 0.59", "-139.114, 156.851, -199.906, 0.59", "-140.132, 157.57, -200.196, 0.66", "-141.257, 158.454, -200.544, 0.66", "-141.917, 158.981, -200.767, 0.81", "-143.061, 159.934, -201.204, 0.66", "-143.702, 160.473, -201.489, 0.66", "-144.44, 161.035, -201.851, 0.66", "-145.416, 161.676, -202.334, 1.03", "-146.708, 162.335, -202.955, 1.47" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-128.83, 86.7033, 16.1493, 0.66", "-128.933, 87.3262, 16.6545, 0.66", "-129.069, 87.8041, 17.0136, 0.88", "-129.463, 88.7458, 17.6913, 0.96", "-130.008, 89.7052, 18.367, 1.11", "-130.583, 90.4813, 18.9051, 0.52", "-130.939, 90.8777, 19.1759, 0.59", "-131.487, 91.3327, 19.5178, 0.66", "-132.051, 91.7012, 19.7854, 0.66", "-132.608, 92.0124, 20.0311, 0.66", "-133.137, 92.3079, 20.3109, 0.66", "-133.491, 92.5797, 20.6325, 0.52", "-133.761, 93.0079, 21.174, 0.52", "-133.838, 93.5034, 21.7521, 0.66", "-133.831, 94.2821, 22.602, 0.81", "-133.794, 94.8863, 23.2197, 0.52", "-133.76, 95.5319, 23.8392, 0.66", "-133.767, 96.089, 24.3476, 0.74", "-133.901, 96.9802, 25.0675, 1.25", "-134.13, 97.5717, 25.4933, 1.03", "-134.485, 98.1346, 25.8408, 0.81", "-134.916, 98.6754, 26.1537, 0.81", "-135.412, 99.2298, 26.4257, 1.03", "-135.987, 99.8463, 26.6511, 1.11", "-136.798, 100.777, 26.9576, 0.59", "-137.224, 101.385, 27.1311, 0.59", "-137.557, 101.953, 27.3054, 0.59", "-137.861, 102.52, 27.4962, 0.74", "-138.421, 103.552, 27.8692, 0.81", "-139.219, 104.904, 28.4287, 0.44", "-139.577, 105.481, 28.6775, 0.81", "-139.902, 106.038, 28.9593, 0.81", "-140.27, 106.757, 29.3546, 0.44", "-140.523, 107.368, 29.7271, 0.44", "-140.643, 107.94, 30.059, 0.44", "-140.604, 108.766, 30.5093, 0.59", "-140.365, 109.95, 31.1478, 0.81", "-140.175, 110.59, 31.4631, 0.96", "-139.975, 111.151, 31.7185, 0.66", "-139.489, 112.392, 32.2431, 0.52", "-138.852, 113.996, 32.8812, 0.88", "-138.588, 114.703, 33.1377, 0.88", "-138.325, 115.561, 33.392, 0.59", "-138.152, 116.446, 33.6222, 0.81", "-138.134, 117.078, 33.7542, 0.81", "-138.249, 117.724, 33.8485, 0.81", "-138.417, 118.146, 33.8739, 0.59", "-138.788, 118.718, 33.9325, 0.44", "-139.301, 119.319, 33.9726, 0.44", "-139.79, 119.806, 33.9865, 0.29", "-140.229, 120.205, 33.985, 0.29", "-141.028, 120.868, 33.9643, 0.22", "-141.857, 121.515, 33.9379, 0.22", "-142.913, 122.326, 33.8699, 0.22", "-143.413, 122.707, 33.8135, 0.22", "-143.937, 123.097, 33.7364, 0.22", "-144.521, 123.513, 33.6293, 0.22", "-144.935, 123.808, 33.5335, 0.44", "-145.404, 124.099, 33.4278, 0.44", "-149.378, 132.376, 36.9122, 0.44", "-152.189, 141.102, 40.3762, 0.44", "-153.468, 149.112, 45.9326, 0.44", "-156.481, 156.062, 52.2658, 0.44", "-158.252, 163.842, 58.0268, 0.44", "-160.639, 171.311, 63.9942, 0.44" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-128.83, 86.7033, 16.1493, 0.29", "-129.899, 86.8213, 16.5447, 0.29", "-130.681, 86.9004, 16.8598, 0.37", "-131.333, 86.979, 17.2018, 0.37", "-132.121, 87.074, 17.6152, 0.37", "-133.322, 87.2189, 18.2455, 0.29", "-133.816, 87.2785, 18.5049, 0.29", "-134.235, 87.3237, 18.7358, 0.59", "-135.238, 87.4147, 19.4394, 0.52", "-143.758, 88.3011, 24.5955, 0.52", "-152.119, 89.3257, 29.9793, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-87.1103, 125.852, 42.3021, 0.59", "-82.0046, 129.348, 50.1173, 0.59", "-76.5308, 132.895, 57.6539, 0.59", "-70.0512, 136.634, 64.2349, 0.59", "-65.3123, 141.175, 71.7082, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-87.1103, 125.852, 42.3021, 0.88", "-82.4954, 134.302, 44.1962, 0.59", "-79.2683, 143.53, 44.3335, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-146.708, 162.335, -202.955, 0.66", "-149.036, 162.012, -203.991, 0.66", "-149.736, 161.907, -204.302, 0.66", "-150.69, 161.747, -204.717, 0.66", "-152.29, 161.473, -205.487, 0.66", "-153.676, 161.198, -206.252, 0.81", "-155.573, 160.736, -207.382, 0.66", "-156.566, 160.477, -208.018, 0.59", "-157.251, 160.228, -208.515, 0.59", "-158.519, 159.576, -209.572, 0.74", "-159.521, 158.871, -210.504, 0.52", "-160.113, 158.37, -211.059, 0.52", "-160.803, 157.743, -211.639, 0.52", "-161.425, 157.16, -212.124, 0.96", "-161.914, 156.692, -212.435, 0.96", "-162.637, 155.969, -212.787, 0.74", "-163.019, 155.577, -212.942, 1.03", "-163.878, 154.742, -213.268, 0.81", "-164.787, 153.862, -213.586, 0.59", "-165.45, 153.177, -213.838, 0.52", "-166.07, 152.473, -214.081, 0.74", "-166.756, 151.566, -214.386, 0.96" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-146.708, 162.335, -202.955, 0.59", "-148.797, 162.804, -201.108, 0.59", "-149.395, 162.994, -200.646, 0.59", "-149.988, 163.227, -200.244, 0.59", "-151.072, 163.762, -199.645, 0.81", "-152.267, 164.351, -198.987, 0.52", "-153.366, 164.894, -198.38, 0.52", "-154.06, 165.353, -198.131, 0.74", "-154.61, 165.748, -197.93, 0.74", "-155.773, 166.67, -197.629, 0.81" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-65.3123, 141.175, 71.7082, 0.59", "-60.8626, 143.856, 80.231, 0.59", "-56.6571, 147.245, 88.6116, 0.59", "-50.7742, 151.534, 95.397, 0.59", "-46.0439, 155.68, 103.113, 0.59", "-41.083, 158.71, 111.22, 0.59", "-37.1826, 160.404, 120.263, 0.59", "-35.079, 163.584, 129.479, 0.59", "-33.5712, 167.628, 138.453, 0.59", "-31.333, 170.098, 147.864, 0.59" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-65.3123, 141.175, 71.7082, 0.88", "-59.2593, 145.736, 78.1488, 0.59", "-53.93, 151.414, 84.2873, 0.59", "-49.1525, 156.023, 91.6918, 0.59", "-44.5906, 159.967, 99.6184, 0.59", "-41.0546, 163.92, 108.048, 0.59", "-38.1189, 167.62, 116.821, 0.59", "-35.8833, 172.552, 125.153, 0.59", "-35.6292, 176.992, 134.052, 0.59", "-36.4153, 181.966, 142.617, 0.59" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-79.2683, 143.53, 44.3335, 0.59", "-74.9042, 150.63, 49.6181, 0.59", "-71.1385, 157.863, 55.1665, 0.59", "-66.2614, 163.937, 61.2818, 0.59", "-62.5918, 171.041, 67.0655, 0.59", "-58.1662, 177.989, 72.5089, 0.59", "-53.8386, 184.628, 78.4172, 0.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-79.2683, 143.53, 44.3335, 0.88", "-76.6073, 152.288, 40.8361, 0.59", "-75.0737, 161.645, 38.4834, 0.59", "-71.9234, 170.834, 37.3624, 0.59", "-70.2399, 180.063, 34.6127, 0.59", "-69.7084, 189.675, 33.0184, 0.59", "-68.9901, 198.915, 29.9086, 0.59", "-65.9185, 208.009, 28.0213, 0.59", "-60.2841, 216.044, 27.433, 0.59", "-56.784, 225.175, 27.2451, 0.59", "-54.1349, 234.555, 26.5886, 0.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-31.333, 170.098, 147.864, 0.59", "-28.7998, 169.835, 157.534, 0.59" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-31.333, 170.098, 147.864, 0.88", "-26.7398, 176.97, 153.27, 0.59" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-36.4153, 181.966, 142.617, 0.59", "-35.362, 181.46, 152.548, 0.59", "-33.5546, 180.213, 162.3, 0.59", "-31.5033, 179.531, 172.062, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-36.4153, 181.966, 142.617, 0.88", "-32.1523, 189.584, 147.174, 0.59", "-26.6998, 196.23, 152.054, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-31.5033, 179.531, 172.062, 0.59", "-29.0442, 178.927, 181.735, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-31.5033, 179.531, 172.062, 0.88", "-30.7911, 178.491, 181.98, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_69", "dend_40", "dend_0", "dend_81", "dend_70", "dend_54", "dend_41", "dend_27", "dend_1", "dend_83", "dend_82", "dend_76", "dend_71", "dend_64", "dend_55", "dend_47", "dend_42", "dend_33", "dend_28", "dend_22", "dend_2", "dend_78", "dend_77", "dend_73", "dend_72", "dend_66", "dend_65", "dend_63", "dend_56", "dend_51", "dend_48", "dend_46", "dend_43", "dend_37", "dend_34", "dend_32", "dend_29", "dend_24", "dend_23", "dend_21", "dend_3", "dend_80", "dend_79", "dend_75", "dend_74", "dend_68", "dend_67", "dend_58", "dend_57", "dend_53", "dend_52", "dend_50", "dend_49", "dend_45", "dend_44", "dend_39", "dend_38", "dend_36", "dend_35", "dend_31", "dend_30", "dend_26", "dend_25", "dend_18", "dend_17", "dend_4", "dend_62", "dend_59", "dend_20", "dend_19", "dend_8", "dend_5", "dend_61", "dend_60", "dend_14", "dend_9", "dend_7", "dend_6", "dend_16", "dend_15", "dend_11", "dend_10", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_69", "dend_40", "dend_0", "dend_81", "dend_70", "dend_54", "dend_41", "dend_27", "dend_1", "dend_83", "dend_82", "dend_76", "dend_71", "dend_64", "dend_55", "dend_47", "dend_42", "dend_33", "dend_28", "dend_22", "dend_2", "dend_78", "dend_77", "dend_73", "dend_72", "dend_66", "dend_65", "dend_63", "dend_56", "dend_51", "dend_48", "dend_46", "dend_43", "dend_37", "dend_34", "dend_32", "dend_29", "dend_24", "dend_23", "dend_21", "dend_3", "dend_80", "dend_79", "dend_75", "dend_74", "dend_68", "dend_67", "dend_58", "dend_57", "dend_53", "dend_52", "dend_50", "dend_49", "dend_45", "dend_44", "dend_39", "dend_38", "dend_36", "dend_35", "dend_31", "dend_30", "dend_26", "dend_25", "dend_18", "dend_17", "dend_4", "dend_62", "dend_59", "dend_20", "dend_19", "dend_8", "dend_5", "dend_61", "dend_60", "dend_14", "dend_9", "dend_7", "dend_6", "dend_16", "dend_15", "dend_11", "dend_10", "dend_13", "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_80", "dend_80", "dend_79", "dend_79", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_44", "dend_44", "dend_39", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_16", "dend_15", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_13", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_MC_464f0bd828_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_81, id: dend_81, parent: dend_69
create dend_81
public dend_81
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_54, id: dend_54, parent: dend_40
create dend_54
public dend_54
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_27, id: dend_27, parent: dend_0
create dend_27
public dend_27
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_76, id: dend_76, parent: dend_70
create dend_76
public dend_76
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_64, id: dend_64, parent: dend_54
create dend_64
public dend_64
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_1
create dend_22
public dend_22
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_55
create dend_63
public dend_63
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_2
create dend_21
public dend_21
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_3
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_3
create dend_17
public dend_17
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_40, dend_0, dend_81, dend_70, dend_54, dend_41, dend_27, dend_1, dend_83, dend_82, dend_76, dend_71, dend_64, dend_55, dend_47, dend_42, dend_33, dend_28, dend_22, dend_2, dend_78, dend_77, dend_73, dend_72, dend_66, dend_65, dend_63, dend_56, dend_51, dend_48, dend_46, dend_43, dend_37, dend_34, dend_32, dend_29, dend_24, dend_23, dend_21, dend_3, dend_80, dend_79, dend_75, dend_74, dend_68, dend_67, dend_58, dend_57, dend_53, dend_52, dend_50, dend_49, dend_45, dend_44, dend_39, dend_38, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_18, dend_17, dend_4, dend_62, dend_59, dend_20, dend_19, dend_8, dend_5, dend_61, dend_60, dend_14, dend_9, dend_7, dend_6, dend_16, dend_15, dend_11, dend_10, dend_13, dend_12]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_40, dend_0, dend_81, dend_70, dend_54, dend_41, dend_27, dend_1, dend_83, dend_82, dend_76, dend_71, dend_64, dend_55, dend_47, dend_42, dend_33, dend_28, dend_22, dend_2, dend_78, dend_77, dend_73, dend_72, dend_66, dend_65, dend_63, dend_56, dend_51, dend_48, dend_46, dend_43, dend_37, dend_34, dend_32, dend_29, dend_24, dend_23, dend_21, dend_3, dend_80, dend_79, dend_75, dend_74, dend_68, dend_67, dend_58, dend_57, dend_53, dend_52, dend_50, dend_49, dend_45, dend_44, dend_39, dend_38, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_18, dend_17, dend_4, dend_62, dend_59, dend_20, dend_19, dend_8, dend_5, dend_61, dend_60, dend_14, dend_9, dend_7, dend_6, dend_16, dend_15, dend_11, dend_10, dend_13, dend_12]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_86
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_70, dend_70, dend_70, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_80, dend_80, dend_79, dend_79, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_44, dend_44, dend_39, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_16, dend_15, dend_11, dend_11, dend_11, dend_10, dend_10, dend_13, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_69(0), soma_0(0.49999988839292253)
    connect dend_40(0), soma_0(0.49999988839292253)
    connect dend_0(0), soma_0(0.49999988839292253)
    connect axon_0(0), soma_0(1.0)
    connect dend_81(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_54(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_27(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_76(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_64(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_18(0), dend_3(1.0)
    connect dend_17(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.45107, -7.20494, 0.34076, 4.11613 ) }
    soma_0 { pt3dadd( -5.802, -6.55166, 0.311223, 7.24085 ) }
    soma_0 { pt3dadd( -5.15293, -5.89837, 0.281687, 9.81042 ) }
    soma_0 { pt3dadd( -4.50386, -5.24508, 0.25215, 11.018 ) }
    soma_0 { pt3dadd( -3.85479, -4.59179, 0.222614, 11.6134 ) }
    soma_0 { pt3dadd( -3.20572, -3.9385, 0.193077, 11.9585 ) }
    soma_0 { pt3dadd( -2.55666, -3.28522, 0.163541, 12.3652 ) }
    soma_0 { pt3dadd( -1.90759, -2.63193, 0.134004, 12.6122 ) }
    soma_0 { pt3dadd( -1.25852, -1.97864, 0.104468, 12.8185 ) }
    soma_0 { pt3dadd( -0.609449, -1.32535, 0.074931, 13.0219 ) }
    soma_0 { pt3dadd( 0.0396201, -0.672063, 0.0453945, 13.2806 ) }
    soma_0 { pt3dadd( 0.688689, -0.0187755, 0.015858, 13.5211 ) }
    soma_0 { pt3dadd( 1.33776, 0.634513, -0.0136785, 13.1393 ) }
    soma_0 { pt3dadd( 1.98683, 1.2878, -0.0432151, 12.5959 ) }
    soma_0 { pt3dadd( 2.6359, 1.94109, -0.0727516, 11.9061 ) }
    soma_0 { pt3dadd( 3.28496, 2.59438, -0.102288, 10.9561 ) }
    soma_0 { pt3dadd( 3.93403, 3.24766, -0.131825, 9.72773 ) }
    soma_0 { pt3dadd( 4.5831, 3.90095, -0.161361, 7.7817 ) }
    soma_0 { pt3dadd( 5.23217, 4.55424, -0.190898, 5.18987 ) }
    soma_0 { pt3dadd( 5.88124, 5.20753, -0.220434, 3.56983 ) }
    soma_0 { pt3dadd( 6.53031, 5.86082, -0.249971, 2.2508 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 21/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 7.23571, 4.56184, -0.561003, 3.9 ) }
    dend_69 { pt3dadd( 7.23571, 4.56184, -0.561003, 3.9 ) }
    dend_69 { pt3dadd( 8.7066, 7.33845, -1.7107, 2.5 ) }
    dend_69 { pt3dadd( 9.42414, 8.76362, -2.25237, 2.21 ) }
    dend_69 { pt3dadd( 10.3674, 10.7429, -2.96854, 1.99 ) }
    dend_69 { pt3dadd( 11.2397, 12.6734, -3.63137, 1.69 ) }
    dend_69 { pt3dadd( 11.8287, 14.0468, -4.0913, 1.69 ) }
    dend_69 { pt3dadd( 12.5866, 15.9362, -4.67792, 1.69 ) }
    dend_69 { pt3dadd( 13.1305, 17.4241, -5.09898, 1.47 ) }
    dend_69 { pt3dadd( 13.6958, 19.0237, -5.57801, 1.33 ) }
    dend_69 { pt3dadd( 14.6362, 21.6209, -6.452, 1.62 ) }
    dend_69 { pt3dadd( 15.1214, 22.9021, -6.91897, 1.47 ) }
    dend_69 { pt3dadd( 15.722, 24.4711, -7.49964, 1.47 ) }
    dend_69 { pt3dadd( 16.4688, 26.4115, -8.23251, 1.77 ) }
    dend_69 { pt3dadd( 16.9426, 27.6222, -8.69883, 1.84 ) }
    dend_69 { pt3dadd( 17.864, 29.8846, -9.58759, 1.47 ) }
    dend_69 { pt3dadd( 18.411, 31.1774, -10.1111, 1.62 ) }
    dend_69 { pt3dadd( 18.9626, 32.4368, -10.6077, 1.62 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 39/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 0.855711, 6.57034, -4.871, 3.98 ) }
    dend_40 { pt3dadd( 0.855711, 6.57034, -4.871, 3.98 ) }
    dend_40 { pt3dadd( 0.951664, 8.18237, -5.13516, 3.61 ) }
    dend_40 { pt3dadd( 1.07163, 10.1978, -5.46542, 2.73 ) }
    dend_40 { pt3dadd( 1.19417, 12.2566, -5.80279, 2.14 ) }
    dend_40 { pt3dadd( 1.29426, 13.938, -6.07831, 2.21 ) }
    dend_40 { pt3dadd( 1.36493, 15.1254, -6.27287, 2.36 ) }
    dend_40 { pt3dadd( 1.39037, 15.782, -6.36828, 2.36 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 47/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -7.94429, -1.71716, -0.621003, 3.39 ) }
    dend_0 { pt3dadd( -7.94429, -1.71716, -0.621003, 3.39 ) }
    dend_0 { pt3dadd( -9.8885, -1.45008, -0.116602, 2.58 ) }
    dend_0 { pt3dadd( -10.8925, -1.29463, 0.137853, 2.58 ) }
    dend_0 { pt3dadd( -12.2487, -1.04157, 0.479859, 2.5 ) }
    dend_0 { pt3dadd( -13.5081, -0.753983, 0.794287, 2.73 ) }
    dend_0 { pt3dadd( -14.8973, -0.373688, 1.15328, 1.92 ) }
    dend_0 { pt3dadd( -16.0039, -0.00279802, 1.45982, 2.14 ) }
    dend_0 { pt3dadd( -16.6308, 0.255974, 1.64104, 2.36 ) }
    dend_0 { pt3dadd( -17.7497, 0.808081, 1.96093, 2.5 ) }
    dend_0 { pt3dadd( -18.7583, 1.39525, 2.25511, 2.06 ) }
    dend_0 { pt3dadd( -19.9384, 2.15389, 2.58159, 2.28 ) }
    dend_0 { pt3dadd( -20.6257, 2.61797, 2.76062, 2.36 ) }
    dend_0 { pt3dadd( -21.5216, 3.20541, 2.98006, 1.62 ) }
    dend_0 { pt3dadd( -22.4602, 3.80725, 3.20557, 1.33 ) }
    dend_0 { pt3dadd( -23.5495, 4.51456, 3.4358, 1.18 ) }
    dend_0 { pt3dadd( -24.4907, 5.14737, 3.61295, 1.11 ) }
    dend_0 { pt3dadd( -25.0931, 5.57782, 3.70775, 1.11 ) }
    dend_0 { pt3dadd( -26.1183, 6.36615, 3.85661, 1.4 ) }
    dend_0 { pt3dadd( -26.7858, 6.93209, 3.95631, 1.69 ) }
    dend_0 { pt3dadd( -27.7002, 7.76562, 4.0726, 2.06 ) }
    dend_0 { pt3dadd( -28.4237, 8.46811, 4.13523, 2.21 ) }
    dend_0 { pt3dadd( -28.9819, 9.05467, 4.15868, 1.99 ) }
    dend_0 { pt3dadd( -29.6142, 9.74788, 4.16543, 1.69 ) }
    dend_0 { pt3dadd( -30.1964, 10.3969, 4.15886, 1.55 ) }
    dend_0 { pt3dadd( -30.7224, 10.9569, 4.15487, 1.55 ) }
    dend_0 { pt3dadd( -31.5869, 11.8354, 4.15211, 1.11 ) }
    dend_0 { pt3dadd( -32.3213, 12.5876, 4.14752, 1.33 ) }
    dend_0 { pt3dadd( -32.5988, 12.8845, 4.15221, 1.55 ) }
    dend_0 { pt3dadd( -32.877, 13.2056, 4.16057, 1.55 ) }
    dend_0 { pt3dadd( -33.3627, 13.7896, 4.18686, 1.55 ) }
    dend_0 { pt3dadd( -33.8879, 14.4733, 4.2484, 0.96 ) }
    dend_0 { pt3dadd( -34.3822, 15.1981, 4.33962, 1.4 ) }
    dend_0 { pt3dadd( -34.6927, 15.6753, 4.42121, 1.55 ) }
    dend_0 { pt3dadd( -35.1036, 16.3487, 4.50537, 1.92 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 82/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.53031, 5.86082, -0.249971, 1.14764 ) }
    axon_0 { pt3dadd( 17.1025, 16.5017, -0.249971, 1.14764 ) }
    axon_0 { pt3dadd( 27.6747, 27.1426, -0.249971, 1.14764 ) }
    // Section: dend_81, id: dend_81, parent: dend_69 (entry count 85/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 18.9626, 32.4368, -10.6077, 0.96 ) }
    dend_81 { pt3dadd( 19.2107, 33.2853, -12.3869, 0.96 ) }
    dend_81 { pt3dadd( 19.3773, 33.8549, -13.5816, 0.81 ) }
    dend_81 { pt3dadd( 19.52, 34.3431, -14.6053, 0.88 ) }
    dend_81 { pt3dadd( 19.628, 34.7124, -15.3796, 1.03 ) }
    dend_81 { pt3dadd( 20.5966, 38.0248, -22.3257, 1.03 ) }
    dend_81 { pt3dadd( 20.7997, 38.7194, -23.7823, 1.03 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 92/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 18.9626, 32.4368, -10.6077, 1.77 ) }
    dend_70 { pt3dadd( 19.0778, 32.7811, -10.2916, 1.77 ) }
    dend_70 { pt3dadd( 19.6342, 34.4433, -8.76621, 1.69 ) }
    dend_70 { pt3dadd( 19.9026, 35.2452, -8.03031, 1.69 ) }
    dend_70 { pt3dadd( 20.4368, 36.8412, -6.56565, 1.84 ) }
    dend_70 { pt3dadd( 20.8351, 38.0313, -5.4734, 1.84 ) }
    // Section: dend_54, id: dend_54, parent: dend_40 (entry count 98/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 1.39037, 15.782, -6.36828, 1.33 ) }
    dend_54 { pt3dadd( 1.5221, 16.0611, -6.96012, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_54 { pt3dadd( 1.97799, 17.2226, -8.98488, 1.62 ) }
    dend_54 { pt3dadd( 2.41209, 18.6299, -11.1274, 1.77 ) }
    dend_54 { pt3dadd( 2.63991, 19.4155, -12.2812, 1.55 ) }
    dend_54 { pt3dadd( 2.89179, 20.2851, -13.536, 1.55 ) }
    dend_54 { pt3dadd( 3.15486, 21.1567, -14.7296, 1.4 ) }
    dend_54 { pt3dadd( 3.4493, 22.0778, -15.8868, 1.25 ) }
    dend_54 { pt3dadd( 3.77889, 23.1443, -17.074, 1.4 ) }
    dend_54 { pt3dadd( 4.07561, 24.2001, -18.1985, 1.55 ) }
    dend_54 { pt3dadd( 4.32061, 25.2772, -19.4777, 1.77 ) }
    dend_54 { pt3dadd( 4.42201, 25.9343, -20.392, 1.99 ) }
    dend_54 { pt3dadd( 4.4771, 27.3117, -22.442, 2.14 ) }
    dend_54 { pt3dadd( 4.41017, 27.9375, -23.4472, 2.28 ) }
    dend_54 { pt3dadd( 4.21965, 28.5514, -24.5369, 2.58 ) }
    dend_54 { pt3dadd( 3.57562, 29.6801, -26.643, 2.36 ) }
    dend_54 { pt3dadd( 2.73825, 30.6868, -28.6528, 1.99 ) }
    dend_54 { pt3dadd( 2.13357, 31.274, -29.8587, 1.77 ) }
    dend_54 { pt3dadd( 0.933677, 32.2825, -31.9674, 1.77 ) }
    dend_54 { pt3dadd( -0.0422089, 33.0291, -33.5654, 1.4 ) }
    dend_54 { pt3dadd( -0.766905, 33.5422, -34.6796, 1.62 ) }
    dend_54 { pt3dadd( -1.95349, 34.3103, -36.3942, 1.4 ) }
    dend_54 { pt3dadd( -2.65998, 34.7042, -37.3867, 1.62 ) }
    dend_54 { pt3dadd( -3.80876, 35.2349, -38.9794, 1.4 ) }
    dend_54 { pt3dadd( -4.47659, 35.4957, -39.85, 1.47 ) }
    dend_54 { pt3dadd( -5.34301, 35.7751, -40.9437, 1.69 ) }
    dend_54 { pt3dadd( -6.5091, 36.0582, -42.373, 1.4 ) }
    dend_54 { pt3dadd( -8.10184, 36.3008, -44.1483, 1.55 ) }
    dend_54 { pt3dadd( -9.57041, 36.4147, -45.7302, 1.25 ) }
    dend_54 { pt3dadd( -10.3289, 36.4467, -46.5049, 1.11 ) }
    dend_54 { pt3dadd( -11.3132, 36.4792, -47.4974, 0.96 ) }
    dend_54 { pt3dadd( -12.565, 36.5181, -48.7451, 0.96 ) }
    dend_54 { pt3dadd( -14.0112, 36.5621, -50.125, 1.11 ) }
    dend_54 { pt3dadd( -15.5145, 36.6143, -51.4926, 0.88 ) }
    dend_54 { pt3dadd( -16.4105, 36.6452, -52.3158, 0.96 ) }
    dend_54 { pt3dadd( -16.8999, 36.6692, -52.777, 1.18 ) }
    dend_54 { pt3dadd( -18.2357, 36.7269, -54.0309, 1.33 ) }
    dend_54 { pt3dadd( -19.106, 36.7689, -54.8525, 0.81 ) }
    dend_54 { pt3dadd( -20.174, 36.8427, -55.8581, 0.81 ) }
    dend_54 { pt3dadd( -21.5154, 36.9632, -57.084, 1.4 ) }
    dend_54 { pt3dadd( -22.4519, 37.0436, -57.9222, 1.4 ) }
    dend_54 { pt3dadd( -23.4867, 37.1578, -58.8103, 1.11 ) }
    dend_54 { pt3dadd( -24.8113, 37.3817, -59.9978, 0.88 ) }
    dend_54 { pt3dadd( -25.5991, 37.578, -60.7945, 1.03 ) }
    dend_54 { pt3dadd( -26.2349, 37.7962, -61.4509, 1.03 ) }
    dend_54 { pt3dadd( -27.0425, 38.1479, -62.2557, 0.81 ) }
    dend_54 { pt3dadd( -27.9344, 38.6259, -63.1069, 1.03 ) }
    dend_54 { pt3dadd( -29.7153, 39.7694, -64.9056, 0.96 ) }
    dend_54 { pt3dadd( -30.8471, 40.5811, -66.08, 0.74 ) }
    dend_54 { pt3dadd( -31.4968, 41.0917, -66.8191, 0.74 ) }
    dend_54 { pt3dadd( -31.9433, 41.4691, -67.3528, 0.74 ) }
    dend_54 { pt3dadd( -32.8144, 42.2079, -68.3735, 0.81 ) }
    dend_54 { pt3dadd( -34.1267, 43.2428, -69.7766, 1.11 ) }
    dend_54 { pt3dadd( -34.8692, 43.803, -70.4808, 1.11 ) }
    dend_54 { pt3dadd( -35.9677, 44.6164, -71.543, 0.88 ) }
    dend_54 { pt3dadd( -36.5574, 45.0694, -72.1885, 0.88 ) }
    dend_54 { pt3dadd( -37.4469, 45.7741, -73.2303, 1.03 ) }
    dend_54 { pt3dadd( -38.5251, 46.6038, -74.4911, 0.88 ) }
    dend_54 { pt3dadd( -39.4633, 47.3123, -75.5097, 1.03 ) }
    dend_54 { pt3dadd( -40.394, 48.0092, -76.5367, 1.77 ) }
    dend_54 { pt3dadd( -41.2055, 48.6412, -77.4558, 2.06 ) }
    dend_54 { pt3dadd( -41.3171, 48.7391, -77.608, 2.06 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 60/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.39037, 15.782, -6.36828, 2.36 ) }
    dend_41 { pt3dadd( 1.37547, 16.2924, -6.16986, 2.36 ) }
    dend_41 { pt3dadd( 1.3949, 18.0676, -5.55042, 1.69 ) }
    dend_41 { pt3dadd( 1.43457, 19.7796, -4.98908, 1.55 ) }
    dend_41 { pt3dadd( 1.50164, 21.5814, -4.45073, 1.55 ) }
    dend_41 { pt3dadd( 1.57523, 23.1646, -4.0242, 1.4 ) }
    dend_41 { pt3dadd( 1.65209, 24.682, -3.64067, 1.62 ) }
    dend_41 { pt3dadd( 1.7633, 26.162, -3.32599, 1.77 ) }
    dend_41 { pt3dadd( 1.93076, 27.643, -3.07498, 1.77 ) }
    dend_41 { pt3dadd( 2.12625, 29.1773, -2.86429, 1.55 ) }
    dend_41 { pt3dadd( 2.31537, 30.6603, -2.67829, 1.69 ) }
    dend_41 { pt3dadd( 2.58249, 32.8754, -2.39139, 1.55 ) }
    dend_41 { pt3dadd( 2.70701, 34.0111, -2.21892, 1.33 ) }
    dend_41 { pt3dadd( 2.84235, 35.2253, -1.98991, 1.11 ) }
    dend_41 { pt3dadd( 2.97131, 36.3526, -1.71213, 1.11 ) }
    dend_41 { pt3dadd( 3.05773, 37.1255, -1.43705, 1.25 ) }
    dend_41 { pt3dadd( 3.19028, 38.2641, -0.874776, 1.4 ) }
    dend_41 { pt3dadd( 3.28871, 39.0854, -0.321181, 1.62 ) }
    dend_41 { pt3dadd( 3.36396, 39.8948, 0.310868, 1.62 ) }
    dend_41 { pt3dadd( 3.44745, 40.9931, 1.22098, 1.62 ) }
    dend_41 { pt3dadd( 3.58801, 42.3366, 2.33764, 1.4 ) }
    dend_41 { pt3dadd( 3.73812, 43.396, 3.19658, 1.47 ) }
    dend_41 { pt3dadd( 3.95178, 44.6585, 4.18535, 1.25 ) }
    dend_41 { pt3dadd( 4.13513, 45.5695, 4.85997, 0.74 ) }
    dend_41 { pt3dadd( 4.36036, 46.6024, 5.55279, 0.96 ) }
    dend_41 { pt3dadd( 4.53776, 47.379, 6.03677, 1.11 ) }
    dend_41 { pt3dadd( 4.74854, 48.2698, 6.53336, 1.25 ) }
    dend_41 { pt3dadd( 5.03323, 49.4025, 7.09375, 0.81 ) }
    dend_41 { pt3dadd( 5.25719, 50.2081, 7.45936, 0.96 ) }
    dend_41 { pt3dadd( 5.47275, 50.8772, 7.8064, 1.18 ) }
    dend_41 { pt3dadd( 5.89329, 52.2531, 8.59678, 1.47 ) }
    // Section: dend_27, id: dend_27, parent: dend_0 (entry count 91/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -35.1036, 16.3487, 4.50537, 0.81 ) }
    dend_27 { pt3dadd( -36.1362, 16.9591, 4.55467, 0.81 ) }
    dend_27 { pt3dadd( -36.8233, 17.3816, 4.57832, 0.81 ) }
    dend_27 { pt3dadd( -37.4916, 17.8355, 4.56983, 0.74 ) }
    dend_27 { pt3dadd( -38.2194, 18.3167, 4.48017, 0.74 ) }
    dend_27 { pt3dadd( -38.8897, 18.7267, 4.36234, 0.66 ) }
    dend_27 { pt3dadd( -39.8674, 19.2774, 4.15854, 0.96 ) }
    dend_27 { pt3dadd( -40.4179, 19.5644, 4.04757, 1.33 ) }
    dend_27 { pt3dadd( -41.2201, 19.9504, 3.91189, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( -42.9751, 20.6989, 3.68692, 0.81 ) }
    dend_27 { pt3dadd( -43.8779, 21.0364, 3.62664, 0.81 ) }
    dend_27 { pt3dadd( -44.6744, 21.3191, 3.57448, 0.81 ) }
    dend_27 { pt3dadd( -45.967, 21.7212, 3.46891, 1.03 ) }
    dend_27 { pt3dadd( -46.7484, 21.9113, 3.40318, 0.96 ) }
    dend_27 { pt3dadd( -47.7652, 22.1217, 3.28581, 0.96 ) }
    dend_27 { pt3dadd( -48.7233, 22.3474, 3.10614, 1.18 ) }
    dend_27 { pt3dadd( -50.1166, 22.729, 2.64975, 1.18 ) }
    dend_27 { pt3dadd( -50.9669, 22.9551, 2.27265, 0.96 ) }
    dend_27 { pt3dadd( -51.7736, 23.1384, 1.83256, 0.59 ) }
    dend_27 { pt3dadd( -52.8097, 23.3148, 1.25012, 0.52 ) }
    dend_27 { pt3dadd( -53.6743, 23.4451, 0.792163, 0.52 ) }
    dend_27 { pt3dadd( -54.2596, 23.5554, 0.528304, 0.52 ) }
    dend_27 { pt3dadd( -55.2057, 23.811, 0.233886, 0.88 ) }
    dend_27 { pt3dadd( -55.7852, 24.0257, 0.106946, 0.88 ) }
    dend_27 { pt3dadd( -56.587, 24.3589, -0.0287022, 0.88 ) }
    dend_27 { pt3dadd( -57.4789, 24.7043, -0.119569, 0.66 ) }
    dend_27 { pt3dadd( -58.3299, 25.0349, -0.162996, 0.66 ) }
    dend_27 { pt3dadd( -59.0764, 25.3493, -0.22359, 0.66 ) }
    dend_27 { pt3dadd( -59.6657, 25.6273, -0.259972, 0.81 ) }
    dend_27 { pt3dadd( -60.5688, 26.0334, -0.272083, 0.81 ) }
    dend_27 { pt3dadd( -61.1914, 26.2576, -0.254615, 0.74 ) }
    dend_27 { pt3dadd( -62.1293, 26.4729, -0.198755, 0.88 ) }
    dend_27 { pt3dadd( -63.4803, 26.6463, -0.0533245, 0.74 ) }
    dend_27 { pt3dadd( -64.661, 26.7237, 0.118917, 0.88 ) }
    dend_27 { pt3dadd( -65.6832, 26.7766, 0.2601, 0.88 ) }
    dend_27 { pt3dadd( -66.8167, 26.8396, 0.438476, 0.96 ) }
    dend_27 { pt3dadd( -67.6392, 26.9011, 0.575996, 0.96 ) }
    dend_27 { pt3dadd( -68.2585, 26.9652, 0.679896, 0.88 ) }
    dend_27 { pt3dadd( -69.1919, 27.1082, 0.85137, 0.88 ) }
    dend_27 { pt3dadd( -70.5179, 27.4101, 1.0144, 0.66 ) }
    dend_27 { pt3dadd( -71.1661, 27.6219, 1.08029, 0.66 ) }
    dend_27 { pt3dadd( -72.0046, 27.9561, 1.09678, 0.81 ) }
    dend_27 { pt3dadd( -72.7672, 28.2826, 1.06074, 0.81 ) }
    dend_27 { pt3dadd( -73.5347, 28.6087, 0.981017, 0.81 ) }
    dend_27 { pt3dadd( -74.4567, 28.9802, 0.847408, 0.81 ) }
    dend_27 { pt3dadd( -75.322, 29.274, 0.696871, 0.81 ) }
    dend_27 { pt3dadd( -76.9517, 29.7059, 0.301517, 0.52 ) }
    dend_27 { pt3dadd( -77.6448, 29.866, 0.0953824, 0.52 ) }
    dend_27 { pt3dadd( -78.1358, 29.9634, -0.0716741, 0.66 ) }
    dend_27 { pt3dadd( -78.878, 30.0865, -0.355226, 0.66 ) }
    dend_27 { pt3dadd( -79.5016, 30.1589, -0.612943, 0.81 ) }
    dend_27 { pt3dadd( -80.3731, 30.2016, -0.957815, 0.81 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 43/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -35.1036, 16.3487, 4.50537, 0.81 ) }
    dend_1 { pt3dadd( -35.8354, 17.617, 4.64483, 0.81 ) }
    dend_1 { pt3dadd( -36.3436, 18.5212, 4.72533, 0.81 ) }
    dend_1 { pt3dadd( -36.885, 19.516, 4.80284, 0.81 ) }
    dend_1 { pt3dadd( -37.4717, 20.655, 4.87381, 1.25 ) }
    dend_1 { pt3dadd( -37.7749, 21.2815, 4.91506, 1.47 ) }
    dend_1 { pt3dadd( -38.0625, 21.8955, 4.95624, 1.47 ) }
    dend_1 { pt3dadd( -38.5209, 22.9241, 5.01201, 0.81 ) }
    dend_1 { pt3dadd( -38.8581, 23.7239, 5.05605, 1.33 ) }
    dend_1 { pt3dadd( -39.0842, 24.2695, 5.10489, 1.33 ) }
    dend_1 { pt3dadd( -39.4831, 25.1911, 5.24571, 1.11 ) }
    dend_1 { pt3dadd( -39.6318, 25.5141, 5.3108, 0.96 ) }
    dend_1 { pt3dadd( -39.8585, 26.0019, 5.43507, 0.96 ) }
    dend_1 { pt3dadd( -40.1164, 26.5185, 5.56383, 0.59 ) }
    dend_1 { pt3dadd( -40.376, 27.0, 5.66971, 0.59 ) }
    dend_1 { pt3dadd( -40.9536, 27.9693, 5.83564, 1.11 ) }
    dend_1 { pt3dadd( -41.3933, 28.649, 5.91186, 1.77 ) }
    dend_1 { pt3dadd( -41.7507, 29.1677, 5.94885, 1.77 ) }
    dend_1 { pt3dadd( -42.3512, 29.9948, 5.97999, 1.25 ) }
    dend_1 { pt3dadd( -42.7854, 30.5662, 5.98492, 1.11 ) }
    dend_1 { pt3dadd( -43.5609, 31.5188, 5.99081, 0.96 ) }
    dend_1 { pt3dadd( -44.172, 32.219, 6.00263, 0.88 ) }
    dend_1 { pt3dadd( -44.7692, 32.8699, 6.03947, 0.96 ) }
    dend_1 { pt3dadd( -45.1926, 33.3321, 6.0827, 0.96 ) }
    dend_1 { pt3dadd( -45.7253, 33.9472, 6.17572, 1.11 ) }
    dend_1 { pt3dadd( -46.1813, 34.501, 6.28163, 1.18 ) }
    dend_1 { pt3dadd( -46.5683, 34.9913, 6.39216, 1.18 ) }
    dend_1 { pt3dadd( -46.9073, 35.4035, 6.50559, 1.18 ) }
    dend_1 { pt3dadd( -47.599, 36.1644, 6.67706, 0.81 ) }
    dend_1 { pt3dadd( -48.0029, 36.5297, 6.7316, 0.66 ) }
    dend_1 { pt3dadd( -48.7337, 37.0663, 6.73749, 0.96 ) }
    dend_1 { pt3dadd( -49.3828, 37.4915, 6.71021, 1.03 ) }
    dend_1 { pt3dadd( -50.2885, 37.9956, 6.64129, 0.81 ) }
    dend_1 { pt3dadd( -51.6634, 38.6103, 6.48755, 0.81 ) }
    dend_1 { pt3dadd( -52.6396, 38.9242, 6.321, 1.03 ) }
    dend_1 { pt3dadd( -53.6132, 39.1579, 6.08235, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 79/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 27.6747, 27.1426, -0.249971, 0.15 ) }
    axon_1 { pt3dadd( 38.2469, 37.7835, -0.249971, 0.15 ) }
    axon_1 { pt3dadd( 48.8191, 48.4244, -0.249971, 0.15 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 82/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 20.7997, 38.7194, -23.7823, 0.59 ) }
    dend_83 { pt3dadd( 22.8444, 39.8992, -25.3062, 0.59 ) }
    dend_83 { pt3dadd( 24.5441, 40.8929, -26.4539, 0.74 ) }
    dend_83 { pt3dadd( 26.5917, 42.0815, -27.8492, 0.59 ) }
    dend_83 { pt3dadd( 27.4756, 42.5738, -28.411, 0.96 ) }
    dend_83 { pt3dadd( 27.8622, 42.7811, -28.6582, 0.96 ) }
    dend_83 { pt3dadd( 28.9225, 43.3385, -29.3395, 0.52 ) }
    dend_83 { pt3dadd( 30.2501, 44.0636, -30.2589, 0.52 ) }
    dend_83 { pt3dadd( 31.5046, 44.74, -31.3789, 0.74 ) }
    dend_83 { pt3dadd( 32.4846, 45.3101, -32.3332, 0.52 ) }
    dend_83 { pt3dadd( 33.4872, 46.013, -33.4769, 0.52 ) }
    dend_83 { pt3dadd( 34.3588, 46.7573, -34.6366, 0.66 ) }
    dend_83 { pt3dadd( 35.2978, 47.757, -36.1179, 1.03 ) }
    dend_83 { pt3dadd( 36.6101, 49.4838, -38.5537, 0.81 ) }
    dend_83 { pt3dadd( 37.1224, 50.2979, -39.567, 0.52 ) }
    dend_83 { pt3dadd( 38.12, 52.1489, -41.5904, 0.59 ) }
    dend_83 { pt3dadd( 38.6185, 53.1752, -42.5083, 0.59 ) }
    dend_83 { pt3dadd( 39.1302, 54.3491, -43.3957, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_83 { pt3dadd( 39.6842, 55.742, -44.3091, 0.52 ) }
    dend_83 { pt3dadd( 40.1956, 57.1481, -45.1138, 0.66 ) }
    dend_83 { pt3dadd( 40.6605, 58.4971, -45.8739, 0.66 ) }
    dend_83 { pt3dadd( 41.1624, 60.0803, -46.7367, 0.81 ) }
    dend_83 { pt3dadd( 41.6934, 61.9744, -47.7184, 0.59 ) }
    dend_83 { pt3dadd( 42.1728, 64.0768, -48.7457, 0.74 ) }
    dend_83 { pt3dadd( 42.327, 64.984, -49.1582, 0.88 ) }
    dend_83 { pt3dadd( 42.4051, 65.584, -49.4231, 0.88 ) }
    dend_83 { pt3dadd( 42.5585, 66.7018, -49.898, 0.88 ) }
    dend_83 { pt3dadd( 42.804, 67.9443, -50.3983, 0.96 ) }
    dend_83 { pt3dadd( 43.1997, 69.4028, -50.8565, 0.96 ) }
    dend_83 { pt3dadd( 43.7737, 70.9988, -51.2467, 0.74 ) }
    dend_83 { pt3dadd( 44.23, 72.0231, -51.4818, 0.59 ) }
    dend_83 { pt3dadd( 44.9231, 73.2626, -51.7424, 0.59 ) }
    dend_83 { pt3dadd( 46.098, 74.9863, -51.964, 0.52 ) }
    dend_83 { pt3dadd( 46.8818, 75.9906, -51.9742, 0.52 ) }
    dend_83 { pt3dadd( 47.9334, 77.2969, -51.8366, 0.52 ) }
    dend_83 { pt3dadd( 49.2812, 78.985, -51.4421, 0.52 ) }
    dend_83 { pt3dadd( 50.6761, 80.7341, -50.8089, 0.52 ) }
    dend_83 { pt3dadd( 51.9497, 82.3684, -50.0492, 0.88 ) }
    dend_83 { pt3dadd( 53.2636, 84.0182, -49.1692, 0.81 ) }
    dend_83 { pt3dadd( 54.3205, 85.3364, -48.3277, 0.66 ) }
    dend_83 { pt3dadd( 55.1164, 86.4193, -47.5588, 0.66 ) }
    dend_83 { pt3dadd( 55.7197, 87.334, -46.8508, 0.52 ) }
    dend_83 { pt3dadd( 56.0891, 87.9555, -46.375, 0.52 ) }
    dend_83 { pt3dadd( 56.9606, 89.3829, -45.3694, 0.74 ) }
    dend_83 { pt3dadd( 58.4618, 91.4435, -43.886, 0.59 ) }
    dend_83 { pt3dadd( 59.3825, 92.4851, -43.0699, 0.52 ) }
    dend_83 { pt3dadd( 60.2141, 93.3335, -42.4386, 0.52 ) }
    dend_83 { pt3dadd( 60.9406, 94.0071, -41.9886, 0.66 ) }
    dend_83 { pt3dadd( 61.772, 94.6733, -41.5661, 0.66 ) }
    dend_83 { pt3dadd( 62.9768, 95.5031, -41.0883, 0.52 ) }
    dend_83 { pt3dadd( 64.1573, 96.1945, -40.785, 0.44 ) }
    dend_83 { pt3dadd( 65.2624, 96.7632, -40.5126, 0.59 ) }
    dend_83 { pt3dadd( 66.5471, 97.3718, -40.2136, 0.59 ) }
    dend_83 { pt3dadd( 67.6443, 97.8748, -39.9434, 0.74 ) }
    dend_83 { pt3dadd( 68.4057, 98.2074, -39.7419, 0.74 ) }
    dend_83 { pt3dadd( 69.7259, 98.7132, -39.3546, 0.37 ) }
    dend_83 { pt3dadd( 70.5372, 98.9518, -39.12, 0.37 ) }
    dend_83 { pt3dadd( 71.3788, 99.1381, -38.8903, 0.59 ) }
    dend_83 { pt3dadd( 72.0279, 99.2699, -38.7662, 0.59 ) }
    dend_83 { pt3dadd( 73.0466, 99.496, -38.6333, 0.52 ) }
    dend_83 { pt3dadd( 74.0285, 99.7886, -38.5378, 0.52 ) }
    dend_83 { pt3dadd( 74.8542, 100.117, -38.4727, 0.37 ) }
    dend_83 { pt3dadd( 76.0229, 100.723, -38.3991, 0.29 ) }
    dend_83 { pt3dadd( 77.4778, 101.64, -38.2951, 0.29 ) }
    dend_83 { pt3dadd( 78.5585, 102.424, -38.1617, 0.29 ) }
    dend_83 { pt3dadd( 79.8937, 103.536, -37.9133, 0.29 ) }
    dend_83 { pt3dadd( 80.5335, 104.127, -37.7567, 0.29 ) }
    dend_83 { pt3dadd( 81.424, 105.011, -37.4739, 0.66 ) }
    dend_83 { pt3dadd( 82.0301, 105.664, -37.2309, 0.96 ) }
    dend_83 { pt3dadd( 83.0451, 106.89, -36.7469, 0.37 ) }
    dend_83 { pt3dadd( 83.4524, 107.442, -36.53, 0.37 ) }
    dend_83 { pt3dadd( 84.0822, 108.314, -36.1428, 0.44 ) }
    dend_83 { pt3dadd( 84.4681, 108.818, -35.9034, 0.88 ) }
    dend_83 { pt3dadd( 84.8248, 109.251, -35.6965, 0.88 ) }
    dend_83 { pt3dadd( 85.5993, 110.022, -35.304, 0.37 ) }
    dend_83 { pt3dadd( 86.2644, 110.55, -34.9585, 0.37 ) }
    dend_83 { pt3dadd( 86.8321, 110.929, -34.6207, 0.37 ) }
    dend_83 { pt3dadd( 87.4284, 111.278, -34.2222, 0.37 ) }
    dend_83 { pt3dadd( 88.1755, 111.654, -33.716, 0.59 ) }
    dend_83 { pt3dadd( 89.2996, 112.161, -33.0075, 0.81 ) }
    dend_83 { pt3dadd( 90.429, 112.655, -32.3492, 0.96 ) }
    dend_83 { pt3dadd( 91.593, 113.197, -31.7269, 0.37 ) }
    dend_83 { pt3dadd( 92.5475, 113.712, -31.2361, 0.37 ) }
    dend_83 { pt3dadd( 93.2603, 114.144, -30.8674, 0.37 ) }
    dend_83 { pt3dadd( 94.3757, 114.849, -30.4685, 0.52 ) }
    dend_83 { pt3dadd( 95.4007, 115.487, -30.2932, 0.66 ) }
    dend_83 { pt3dadd( 95.9178, 115.764, -30.3032, 0.66 ) }
    dend_83 { pt3dadd( 96.9951, 116.3, -30.5242, 0.37 ) }
    dend_83 { pt3dadd( 98.0177, 116.841, -30.9542, 0.37 ) }
    dend_83 { pt3dadd( 100.293, 118.146, -32.3323, 0.59 ) }
    dend_83 { pt3dadd( 100.721, 118.397, -32.6476, 0.44 ) }
    dend_83 { pt3dadd( 101.539, 118.859, -33.2799, 0.81 ) }
    dend_83 { pt3dadd( 102.396, 119.302, -33.9272, 0.66 ) }
    dend_83 { pt3dadd( 103.5, 119.791, -34.7223, 0.74 ) }
    dend_83 { pt3dadd( 104.0, 120.009, -35.0249, 0.74 ) }
    dend_83 { pt3dadd( 105.161, 120.535, -35.5473, 0.52 ) }
    dend_83 { pt3dadd( 106.138, 120.974, -35.9536, 0.81 ) }
    dend_83 { pt3dadd( 107.216, 121.452, -36.3598, 0.81 ) }
    dend_83 { pt3dadd( 108.202, 121.912, -36.7081, 0.52 ) }
    dend_83 { pt3dadd( 109.869, 122.763, -37.2855, 0.37 ) }
    dend_83 { pt3dadd( 111.337, 123.627, -37.8169, 0.52 ) }
    dend_83 { pt3dadd( 112.21, 124.227, -38.1476, 0.88 ) }
    dend_83 { pt3dadd( 112.93, 124.797, -38.4148, 0.88 ) }
    dend_83 { pt3dadd( 114.067, 125.811, -38.7953, 0.44 ) }
    dend_83 { pt3dadd( 114.878, 126.581, -39.038, 0.37 ) }
    dend_83 { pt3dadd( 115.321, 127.001, -39.1483, 0.52 ) }
    dend_83 { pt3dadd( 115.995, 127.626, -39.2357, 0.52 ) }
    dend_83 { pt3dadd( 116.744, 128.306, -39.2749, 0.29 ) }
    dend_83 { pt3dadd( 117.296, 128.783, -39.261, 0.66 ) }
    dend_83 { pt3dadd( 117.768, 129.162, -39.2167, 0.66 ) }
    dend_83 { pt3dadd( 118.821, 129.981, -39.0794, 0.44 ) }
    dend_83 { pt3dadd( 119.629, 130.634, -38.9518, 0.44 ) }
    dend_83 { pt3dadd( 120.248, 131.178, -38.8371, 0.66 ) }
    dend_83 { pt3dadd( 120.796, 131.675, -38.7258, 0.81 ) }
    dend_83 { pt3dadd( 121.296, 132.111, -38.6203, 0.81 ) }
    dend_83 { pt3dadd( 122.092, 132.768, -38.4969, 0.37 ) }
    dend_83 { pt3dadd( 123.031, 133.466, -38.4724, 0.52 ) }
    dend_83 { pt3dadd( 123.508, 133.798, -38.5484, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_83 { pt3dadd( 124.04, 134.152, -38.7002, 0.52 ) }
    dend_83 { pt3dadd( 124.91, 134.712, -39.0674, 0.66 ) }
    dend_83 { pt3dadd( 125.808, 135.259, -39.5067, 0.44 ) }
    dend_83 { pt3dadd( 126.574, 135.715, -39.8933, 0.44 ) }
    dend_83 { pt3dadd( 127.462, 136.194, -40.2998, 0.59 ) }
    dend_83 { pt3dadd( 128.509, 136.718, -40.7052, 0.37 ) }
    dend_83 { pt3dadd( 130.102, 137.466, -41.193, 0.52 ) }
    dend_83 { pt3dadd( 130.903, 137.792, -41.3543, 0.52 ) }
    dend_83 { pt3dadd( 131.61, 138.035, -41.3994, 0.66 ) }
    dend_83 { pt3dadd( 132.513, 138.319, -41.3726, 0.66 ) }
    dend_83 { pt3dadd( 133.372, 138.567, -41.262, 0.44 ) }
    dend_83 { pt3dadd( 134.153, 138.783, -41.1154, 0.66 ) }
    dend_83 { pt3dadd( 134.902, 139.025, -40.9314, 0.74 ) }
    dend_83 { pt3dadd( 135.863, 139.415, -40.7051, 0.59 ) }
    dend_83 { pt3dadd( 136.652, 139.781, -40.5437, 0.88 ) }
    dend_83 { pt3dadd( 137.482, 140.249, -40.3923, 1.03 ) }
    dend_83 { pt3dadd( 138.603, 140.965, -40.194, 0.37 ) }
    dend_83 { pt3dadd( 139.148, 141.347, -40.1003, 0.29 ) }
    dend_83 { pt3dadd( 139.89, 141.905, -39.9818, 0.29 ) }
    dend_83 { pt3dadd( 140.35, 142.27, -39.9351, 0.52 ) }
    dend_83 { pt3dadd( 141.014, 142.807, -39.9147, 0.37 ) }
    dend_83 { pt3dadd( 142.074, 143.713, -39.9548, 0.52 ) }
    dend_83 { pt3dadd( 142.653, 144.247, -39.992, 0.66 ) }
    dend_83 { pt3dadd( 143.611, 145.103, -40.0765, 0.37 ) }
    dend_83 { pt3dadd( 144.515, 145.939, -40.1882, 0.37 ) }
    dend_83 { pt3dadd( 145.08, 146.497, -40.2679, 0.59 ) }
    dend_83 { pt3dadd( 145.52, 146.959, -40.3334, 0.59 ) }
    dend_83 { pt3dadd( 146.203, 147.728, -40.486, 0.37 ) }
    dend_83 { pt3dadd( 147.103, 148.734, -40.7233, 0.59 ) }
    dend_83 { pt3dadd( 147.871, 149.615, -40.9467, 0.37 ) }
    dend_83 { pt3dadd( 148.593, 150.476, -41.1529, 0.37 ) }
    dend_83 { pt3dadd( 149.627, 151.742, -41.4517, 0.52 ) }
    dend_83 { pt3dadd( 150.573, 152.846, -41.7796, 1.03 ) }
    dend_83 { pt3dadd( 151.174, 153.534, -42.0225, 0.59 ) }
    dend_83 { pt3dadd( 151.696, 154.121, -42.2506, 0.44 ) }
    dend_83 { pt3dadd( 152.522, 154.936, -42.5968, 0.81 ) }
    dend_83 { pt3dadd( 153.087, 155.395, -42.8143, 0.96 ) }
    dend_83 { pt3dadd( 154.451, 156.31, -43.3206, 0.29 ) }
    dend_83 { pt3dadd( 155.068, 156.658, -43.5199, 0.29 ) }
    dend_83 { pt3dadd( 155.843, 157.013, -43.7654, 0.44 ) }
    dend_83 { pt3dadd( 156.824, 157.361, -44.0784, 0.29 ) }
    dend_83 { pt3dadd( 158.131, 157.726, -44.5022, 0.29 ) }
    dend_83 { pt3dadd( 159.326, 157.969, -44.9097, 0.52 ) }
    dend_83 { pt3dadd( 159.958, 158.044, -45.1212, 0.52 ) }
    dend_83 { pt3dadd( 160.939, 158.068, -45.4765, 0.44 ) }
    dend_83 { pt3dadd( 162.269, 157.957, -46.0223, 0.44 ) }
    dend_83 { pt3dadd( 162.742, 157.857, -46.2597, 0.44 ) }
    dend_83 { pt3dadd( 163.68, 157.48, -46.9655, 0.44 ) }
    dend_83 { pt3dadd( 164.234, 157.201, -47.4546, 0.44 ) }
    dend_83 { pt3dadd( 164.783, 156.911, -47.9865, 0.44 ) }
    dend_83 { pt3dadd( 165.337, 156.602, -48.5482, 0.59 ) }
    dend_83 { pt3dadd( 166.333, 156.044, -49.5164, 0.81 ) }
    dend_83 { pt3dadd( 168.553, 154.914, -51.6323, 0.37 ) }
    dend_83 { pt3dadd( 169.198, 154.638, -52.2251, 0.66 ) }
    dend_83 { pt3dadd( 169.775, 154.419, -52.7292, 0.66 ) }
    dend_83 { pt3dadd( 170.821, 154.06, -53.546, 0.37 ) }
    dend_83 { pt3dadd( 171.717, 153.823, -54.1188, 0.74 ) }
    dend_83 { pt3dadd( 172.908, 153.537, -54.6908, 0.88 ) }
    dend_83 { pt3dadd( 173.831, 153.32, -54.9932, 1.11 ) }
    dend_83 { pt3dadd( 174.947, 153.034, -55.3178, 1.11 ) }
    dend_83 { pt3dadd( 176.208, 152.71, -55.6462, 0.29 ) }
    dend_83 { pt3dadd( 177.293, 152.466, -55.9105, 0.29 ) }
    dend_83 { pt3dadd( 178.444, 152.217, -56.1505, 0.29 ) }
    dend_83 { pt3dadd( 179.326, 152.022, -56.2872, 0.29 ) }
    dend_83 { pt3dadd( 180.422, 151.787, -56.474, 0.44 ) }
    dend_83 { pt3dadd( 181.366, 151.596, -56.6721, 0.44 ) }
    dend_83 { pt3dadd( 182.129, 151.444, -56.8638, 0.44 ) }
    dend_83 { pt3dadd( 183.171, 151.214, -57.1384, 0.29 ) }
    dend_83 { pt3dadd( 184.018, 151.019, -57.359, 0.29 ) }
    dend_83 { pt3dadd( 185.69, 150.574, -57.7863, 0.22 ) }
    dend_83 { pt3dadd( 187.579, 149.969, -58.2555, 0.22 ) }
    dend_83 { pt3dadd( 189.496, 149.309, -58.7129, 0.22 ) }
    dend_83 { pt3dadd( 190.514, 148.934, -58.9509, 0.22 ) }
    dend_83 { pt3dadd( 191.418, 148.584, -59.1888, 0.59 ) }
    dend_83 { pt3dadd( 191.965, 148.354, -59.3299, 0.59 ) }
    dend_83 { pt3dadd( 192.819, 147.929, -59.5153, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 76/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 20.7997, 38.7194, -23.7823, 0.59 ) }
    dend_82 { pt3dadd( 20.2906, 39.7857, -24.6272, 0.59 ) }
    dend_82 { pt3dadd( 19.9564, 40.6239, -25.3414, 0.59 ) }
    dend_82 { pt3dadd( 19.7207, 41.4263, -25.9829, 0.52 ) }
    dend_82 { pt3dadd( 19.3585, 43.0208, -27.3316, 0.66 ) }
    dend_82 { pt3dadd( 19.2205, 43.7917, -27.9904, 0.44 ) }
    dend_82 { pt3dadd( 19.0408, 44.9093, -28.9071, 0.44 ) }
    dend_82 { pt3dadd( 18.8712, 46.1754, -30.0397, 0.44 ) }
    dend_82 { pt3dadd( 18.7099, 47.2811, -31.0518, 0.74 ) }
    dend_82 { pt3dadd( 18.4841, 48.6922, -32.4382, 0.74 ) }
    dend_82 { pt3dadd( 18.3279, 49.4649, -33.2401, 0.74 ) }
    dend_82 { pt3dadd( 18.0048, 50.6574, -34.6072, 0.52 ) }
    dend_82 { pt3dadd( 17.4454, 52.1749, -36.4763, 0.52 ) }
    dend_82 { pt3dadd( 17.0093, 53.0763, -37.6434, 0.52 ) }
    dend_82 { pt3dadd( 16.3414, 54.2299, -39.2933, 0.66 ) }
    dend_82 { pt3dadd( 15.898, 54.939, -40.3291, 0.52 ) }
    dend_82 { pt3dadd( 15.248, 55.8826, -41.796, 0.52 ) }
    dend_82 { pt3dadd( 15.0241, 56.1826, -42.2922, 0.74 ) }
    dend_82 { pt3dadd( 14.6675, 56.6316, -42.9942, 1.11 ) }
    dend_82 { pt3dadd( 13.9565, 57.4407, -44.3237, 1.11 ) }
    dend_82 { pt3dadd( 13.457, 57.9155, -45.2339, 0.66 ) }
    dend_82 { pt3dadd( 12.8073, 58.4535, -46.3737, 0.59 ) }
    dend_82 { pt3dadd( 12.0654, 59.0135, -47.558, 0.59 ) }
    dend_82 { pt3dadd( 11.5433, 59.3876, -48.3795, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_82 { pt3dadd( 10.9109, 59.8291, -49.3631, 0.74 ) }
    dend_82 { pt3dadd( 9.11933, 61.0237, -52.0288, 0.52 ) }
    dend_82 { pt3dadd( 8.26108, 61.5408, -53.3844, 0.52 ) }
    dend_82 { pt3dadd( 7.57993, 61.9126, -54.5102, 0.44 ) }
    dend_82 { pt3dadd( 6.26151, 62.4895, -56.7676, 0.74 ) }
    dend_82 { pt3dadd( 5.69338, 62.7111, -57.7027, 0.88 ) }
    dend_82 { pt3dadd( 5.23921, 62.8795, -58.3836, 0.88 ) }
    dend_82 { pt3dadd( 3.50376, 63.4858, -60.7687, 0.59 ) }
    dend_82 { pt3dadd( 2.43977, 63.8496, -62.2443, 0.59 ) }
    dend_82 { pt3dadd( 0.164006, 64.6259, -65.4356, 0.37 ) }
    dend_82 { pt3dadd( -1.25075, 65.1175, -67.322, 0.37 ) }
    dend_82 { pt3dadd( -2.05366, 65.4322, -68.3287, 0.81 ) }
    dend_82 { pt3dadd( -2.86536, 65.8179, -69.3518, 0.81 ) }
    dend_82 { pt3dadd( -4.0318, 66.4398, -70.7529, 0.81 ) }
    dend_82 { pt3dadd( -5.11399, 67.0612, -72.0548, 0.59 ) }
    dend_82 { pt3dadd( -6.56381, 67.9763, -73.8749, 0.29 ) }
    dend_82 { pt3dadd( -7.64287, 68.7053, -75.4497, 0.29 ) }
    dend_82 { pt3dadd( -9.11263, 69.8075, -77.9337, 0.59 ) }
    dend_82 { pt3dadd( -10.1497, 70.715, -80.043, 0.29 ) }
    dend_82 { pt3dadd( -10.8013, 71.4172, -81.7246, 0.29 ) }
    dend_82 { pt3dadd( -11.3074, 72.1411, -83.7184, 0.66 ) }
    dend_82 { pt3dadd( -11.81, 73.0492, -86.3382, 0.66 ) }
    dend_82 { pt3dadd( -12.0985, 73.7368, -88.4878, 0.96 ) }
    dend_82 { pt3dadd( -12.3544, 74.7251, -91.7061, 1.25 ) }
    dend_82 { pt3dadd( -12.3851, 75.4621, -94.2589, 1.25 ) }
    dend_82 { pt3dadd( -12.2448, 76.8309, -99.5788, 1.03 ) }
    // Section: dend_76, id: dend_76, parent: dend_70 (entry count 26/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 20.8351, 38.0313, -5.4734, 0.52 ) }
    dend_76 { pt3dadd( 20.1948, 38.8339, -4.87482, 0.52 ) }
    dend_76 { pt3dadd( 19.6143, 39.6823, -4.16576, 0.52 ) }
    dend_76 { pt3dadd( 19.2303, 40.3066, -3.59972, 0.66 ) }
    dend_76 { pt3dadd( 18.9578, 40.7174, -3.17264, 0.66 ) }
    dend_76 { pt3dadd( 18.4595, 41.3934, -2.35468, 0.52 ) }
    dend_76 { pt3dadd( 17.9821, 42.0042, -1.59068, 0.74 ) }
    dend_76 { pt3dadd( 17.5898, 42.5235, -0.910354, 0.88 ) }
    dend_76 { pt3dadd( 17.1872, 43.0444, -0.165584, 0.88 ) }
    dend_76 { pt3dadd( 16.707, 43.664, 0.786388, 0.66 ) }
    dend_76 { pt3dadd( 16.1552, 44.4298, 2.00687, 0.81 ) }
    dend_76 { pt3dadd( 15.8811, 44.8853, 2.71578, 0.96 ) }
    dend_76 { pt3dadd( 15.5962, 45.4836, 3.59488, 1.11 ) }
    dend_76 { pt3dadd( 15.1818, 46.4701, 5.0158, 1.18 ) }
    dend_76 { pt3dadd( 14.8619, 47.2407, 6.1675, 1.18 ) }
    dend_76 { pt3dadd( 14.5678, 47.9199, 7.21075, 0.96 ) }
    dend_76 { pt3dadd( 14.2178, 48.7159, 8.43163, 0.88 ) }
    dend_76 { pt3dadd( 13.6713, 49.9025, 10.2364, 0.59 ) }
    dend_76 { pt3dadd( 13.2515, 50.7601, 11.4492, 0.59 ) }
    dend_76 { pt3dadd( 12.6728, 51.8061, 12.7518, 0.74 ) }
    dend_76 { pt3dadd( 12.1665, 52.6324, 13.6331, 0.66 ) }
    dend_76 { pt3dadd( 11.6739, 53.3476, 14.4125, 0.52 ) }
    dend_76 { pt3dadd( 11.306, 53.8719, 14.98, 0.66 ) }
    dend_76 { pt3dadd( 10.9176, 54.5095, 15.6649, 0.66 ) }
    dend_76 { pt3dadd( 10.7068, 54.9273, 16.1046, 0.59 ) }
    dend_76 { pt3dadd( 10.4397, 55.5304, 16.7786, 0.66 ) }
    dend_76 { pt3dadd( 9.58879, 57.3999, 19.1813, 0.59 ) }
    dend_76 { pt3dadd( 9.20197, 58.1148, 20.3823, 0.44 ) }
    dend_76 { pt3dadd( 8.78662, 58.7975, 21.6591, 0.66 ) }
    dend_76 { pt3dadd( 8.54421, 59.1643, 22.3583, 0.52 ) }
    dend_76 { pt3dadd( 8.24121, 59.6289, 23.1841, 0.52 ) }
    dend_76 { pt3dadd( 7.96983, 60.0624, 23.8494, 0.59 ) }
    dend_76 { pt3dadd( 6.8145, 61.8169, 25.9352, 1.03 ) }
    dend_76 { pt3dadd( 6.32389, 62.4754, 26.6458, 1.03 ) }
    dend_76 { pt3dadd( 5.79986, 63.1324, 27.2406, 1.11 ) }
    dend_76 { pt3dadd( 5.34189, 63.7222, 27.6904, 1.11 ) }
    dend_76 { pt3dadd( 4.86519, 64.3356, 28.0371, 1.25 ) }
    dend_76 { pt3dadd( 4.21104, 65.1949, 28.3633, 0.59 ) }
    dend_76 { pt3dadd( 3.6909, 65.8825, 28.4932, 0.44 ) }
    dend_76 { pt3dadd( 3.28008, 66.3988, 28.5958, 0.44 ) }
    dend_76 { pt3dadd( 2.6677, 67.1085, 28.7316, 0.52 ) }
    dend_76 { pt3dadd( 2.12022, 67.7174, 28.8357, 0.66 ) }
    dend_76 { pt3dadd( 1.52286, 68.4328, 28.9402, 0.66 ) }
    dend_76 { pt3dadd( 1.12101, 69.0238, 29.0027, 0.52 ) }
    dend_76 { pt3dadd( 0.757498, 69.6676, 29.0629, 0.44 ) }
    dend_76 { pt3dadd( 0.44454, 70.3196, 29.1124, 0.44 ) }
    dend_76 { pt3dadd( 0.199183, 70.9614, 29.1495, 0.59 ) }
    dend_76 { pt3dadd( 0.00719397, 71.6713, 29.1942, 0.59 ) }
    dend_76 { pt3dadd( -0.149175, 72.5277, 29.2822, 0.59 ) }
    dend_76 { pt3dadd( -0.275877, 73.5186, 29.4119, 0.74 ) }
    dend_76 { pt3dadd( -0.325682, 74.0, 29.4852, 0.74 ) }
    dend_76 { pt3dadd( -0.445434, 74.7822, 29.6178, 0.29 ) }
    dend_76 { pt3dadd( -0.592844, 75.3048, 29.7099, 0.29 ) }
    dend_76 { pt3dadd( -0.930884, 76.0197, 29.8552, 0.44 ) }
    dend_76 { pt3dadd( -1.24083, 76.455, 30.0043, 0.81 ) }
    dend_76 { pt3dadd( -1.5221, 76.7757, 30.1774, 1.03 ) }
    dend_76 { pt3dadd( -2.16346, 77.4794, 30.688, 0.52 ) }
    dend_76 { pt3dadd( -2.60671, 77.9524, 31.1442, 0.52 ) }
    dend_76 { pt3dadd( -3.05692, 78.4424, 31.6866, 0.59 ) }
    dend_76 { pt3dadd( -3.74059, 79.2407, 32.6536, 0.59 ) }
    dend_76 { pt3dadd( -4.19803, 79.8443, 33.3971, 0.66 ) }
    dend_76 { pt3dadd( -4.62407, 80.5129, 34.2083, 0.81 ) }
    dend_76 { pt3dadd( -5.04532, 81.2849, 35.1099, 0.96 ) }
    dend_76 { pt3dadd( -5.16938, 81.5218, 35.3679, 0.96 ) }
    dend_76 { pt3dadd( -5.46035, 82.0515, 35.8761, 0.52 ) }
    dend_76 { pt3dadd( -5.82079, 82.6235, 36.3166, 0.37 ) }
    dend_76 { pt3dadd( -6.36553, 83.3393, 36.7603, 0.37 ) }
    dend_76 { pt3dadd( -6.85532, 83.9464, 37.058, 0.66 ) }
    dend_76 { pt3dadd( -7.24911, 84.4718, 37.2632, 0.66 ) }
    dend_76 { pt3dadd( -7.94216, 85.5006, 37.6446, 0.37 ) }
    dend_76 { pt3dadd( -8.36193, 86.1936, 37.881, 0.29 ) }
    dend_76 { pt3dadd( -8.8161, 86.9582, 38.1404, 0.52 ) }
    dend_76 { pt3dadd( -9.2113, 87.6411, 38.3242, 0.66 ) }
    dend_76 { pt3dadd( -9.61781, 88.4626, 38.4904, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_76 { pt3dadd( -9.92159, 89.2287, 38.5763, 0.37 ) }
    dend_76 { pt3dadd( -10.0837, 89.7218, 38.6198, 0.37 ) }
    dend_76 { pt3dadd( -10.2641, 90.2697, 38.6907, 0.37 ) }
    dend_76 { pt3dadd( -10.4641, 90.7133, 38.7706, 0.37 ) }
    dend_76 { pt3dadd( -10.8435, 91.3114, 38.9076, 0.52 ) }
    dend_76 { pt3dadd( -11.2389, 91.8291, 39.0459, 0.52 ) }
    dend_76 { pt3dadd( -11.9932, 92.8142, 39.2985, 0.59 ) }
    dend_76 { pt3dadd( -12.4442, 93.5074, 39.4582, 0.66 ) }
    dend_76 { pt3dadd( -12.9291, 94.3871, 39.6357, 0.29 ) }
    dend_76 { pt3dadd( -13.1482, 94.794, 39.7155, 0.29 ) }
    dend_76 { pt3dadd( -13.4386, 95.2914, 39.8173, 0.29 ) }
    dend_76 { pt3dadd( -13.9093, 96.1066, 39.9512, 0.37 ) }
    dend_76 { pt3dadd( -14.381, 97.0026, 40.0008, 0.37 ) }
    dend_76 { pt3dadd( -14.642, 97.5558, 40.0579, 0.37 ) }
    dend_76 { pt3dadd( -14.9671, 98.2842, 40.1581, 0.37 ) }
    dend_76 { pt3dadd( -15.4052, 99.1742, 40.3263, 0.37 ) }
    dend_76 { pt3dadd( -15.8861, 100.1, 40.5729, 0.66 ) }
    dend_76 { pt3dadd( -16.323, 100.942, 40.8617, 0.66 ) }
    dend_76 { pt3dadd( -16.915, 102.17, 41.2184, 0.66 ) }
    dend_76 { pt3dadd( -17.1913, 102.798, 41.4006, 0.29 ) }
    dend_76 { pt3dadd( -17.4598, 103.511, 41.5998, 0.29 ) }
    dend_76 { pt3dadd( -17.7734, 104.48, 41.8785, 0.29 ) }
    dend_76 { pt3dadd( -17.9364, 105.014, 42.0764, 0.29 ) }
    dend_76 { pt3dadd( -18.3821, 106.599, 42.6979, 0.29 ) }
    dend_76 { pt3dadd( -20.9903, 113.849, 48.855, 0.29 ) }
    dend_76 { pt3dadd( -22.6012, 121.671, 54.6026, 0.29 ) }
    dend_76 { pt3dadd( -22.4833, 128.409, 61.83, 0.29 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 27/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 20.8351, 38.0313, -5.4734, 1.03 ) }
    dend_71 { pt3dadd( 21.483, 38.6278, -4.26837, 1.03 ) }
    dend_71 { pt3dadd( 22.015, 38.9916, -3.37603, 1.03 ) }
    dend_71 { pt3dadd( 23.1747, 39.692, -1.54924, 1.25 ) }
    dend_71 { pt3dadd( 24.0993, 40.2066, -0.248393, 1.4 ) }
    dend_71 { pt3dadd( 25.1523, 40.7393, 1.09407, 1.11 ) }
    dend_71 { pt3dadd( 25.7815, 41.0389, 1.84439, 1.11 ) }
    dend_71 { pt3dadd( 26.9346, 41.4752, 3.12185, 1.18 ) }
    dend_71 { pt3dadd( 27.4777, 41.627, 3.63505, 1.25 ) }
    dend_71 { pt3dadd( 28.4123, 41.8145, 4.34814, 0.59 ) }
    dend_71 { pt3dadd( 28.9172, 41.8968, 4.68491, 0.59 ) }
    dend_71 { pt3dadd( 30.2158, 42.1725, 5.48656, 1.11 ) }
    dend_71 { pt3dadd( 31.0475, 42.3503, 5.96606, 1.03 ) }
    dend_71 { pt3dadd( 31.9613, 42.5184, 6.43113, 1.03 ) }
    dend_71 { pt3dadd( 32.5537, 42.6312, 6.72991, 0.81 ) }
    dend_71 { pt3dadd( 33.9151, 42.9351, 7.39871, 1.03 ) }
    dend_71 { pt3dadd( 34.8318, 43.1942, 7.79745, 1.03 ) }
    dend_71 { pt3dadd( 35.847, 43.5455, 8.18796, 1.03 ) }
    dend_71 { pt3dadd( 36.4199, 43.8134, 8.40625, 0.96 ) }
    dend_71 { pt3dadd( 37.0933, 44.2001, 8.66406, 0.96 ) }
    dend_71 { pt3dadd( 38.1312, 44.8571, 9.05599, 0.74 ) }
    dend_71 { pt3dadd( 38.9885, 45.4495, 9.39138, 0.88 ) }
    dend_71 { pt3dadd( 39.7818, 46.0298, 9.69973, 0.88 ) }
    dend_71 { pt3dadd( 40.5125, 46.5937, 9.99849, 0.74 ) }
    dend_71 { pt3dadd( 41.4047, 47.2964, 10.3847, 0.66 ) }
    dend_71 { pt3dadd( 42.1586, 47.835, 10.7153, 0.52 ) }
    dend_71 { pt3dadd( 42.8827, 48.3059, 11.0413, 0.52 ) }
    dend_71 { pt3dadd( 43.5822, 48.6736, 11.3288, 0.66 ) }
    dend_71 { pt3dadd( 44.2589, 48.9269, 11.5517, 0.88 ) }
    dend_71 { pt3dadd( 45.5151, 49.2358, 11.8877, 1.03 ) }
    dend_71 { pt3dadd( 46.6738, 49.4376, 12.1986, 0.52 ) }
    dend_71 { pt3dadd( 47.3749, 49.5254, 12.4279, 0.52 ) }
    dend_71 { pt3dadd( 48.5678, 49.6327, 12.8736, 0.59 ) }
    dend_71 { pt3dadd( 49.9367, 49.7264, 13.4343, 0.66 ) }
    dend_71 { pt3dadd( 51.0408, 49.7685, 13.889, 0.66 ) }
    dend_71 { pt3dadd( 52.3428, 49.7871, 14.4338, 0.81 ) }
    dend_71 { pt3dadd( 53.7818, 49.8503, 15.1063, 0.66 ) }
    dend_71 { pt3dadd( 54.4702, 49.9174, 15.495, 0.66 ) }
    dend_71 { pt3dadd( 54.7707, 49.9784, 15.7225, 0.96 ) }
    // Section: dend_64, id: dend_64, parent: dend_54 (entry count 66/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -41.3171, 48.7391, -77.608, 1.33 ) }
    dend_64 { pt3dadd( -41.4194, 47.7239, -81.9841, 1.33 ) }
    dend_64 { pt3dadd( -41.7369, 46.9564, -85.3373, 1.33 ) }
    dend_64 { pt3dadd( -42.165, 46.2778, -88.1279, 0.96 ) }
    dend_64 { pt3dadd( -42.9254, 45.3755, -91.5931, 0.88 ) }
    dend_64 { pt3dadd( -43.714, 44.5724, -94.3926, 1.11 ) }
    dend_64 { pt3dadd( -44.198, 44.1281, -95.809, 0.66 ) }
    dend_64 { pt3dadd( -45.0497, 43.5605, -97.2987, 0.88 ) }
    dend_64 { pt3dadd( -45.7716, 43.1856, -98.1612, 0.66 ) }
    dend_64 { pt3dadd( -47.1335, 42.5599, -99.3479, 0.66 ) }
    dend_64 { pt3dadd( -48.2562, 42.009, -100.108, 0.59 ) }
    dend_64 { pt3dadd( -49.3977, 41.3885, -100.817, 0.59 ) }
    dend_64 { pt3dadd( -50.3639, 40.8356, -101.398, 0.59 ) }
    dend_64 { pt3dadd( -51.1431, 40.3723, -101.811, 0.59 ) }
    dend_64 { pt3dadd( -52.3155, 39.6733, -102.381, 0.59 ) }
    dend_64 { pt3dadd( -55.1598, 37.9885, -103.582, 0.74 ) }
    dend_64 { pt3dadd( -56.5677, 37.1756, -104.128, 0.88 ) }
    dend_64 { pt3dadd( -58.4076, 36.1209, -104.794, 0.44 ) }
    dend_64 { pt3dadd( -60.1787, 35.1219, -105.393, 0.66 ) }
    dend_64 { pt3dadd( -61.645, 34.328, -105.88, 0.66 ) }
    dend_64 { pt3dadd( -63.4304, 33.4417, -106.431, 0.66 ) }
    dend_64 { pt3dadd( -65.704, 32.4938, -107.037, 0.66 ) }
    dend_64 { pt3dadd( -66.9625, 32.0589, -107.358, 0.96 ) }
    dend_64 { pt3dadd( -68.1853, 31.7102, -107.664, 0.96 ) }
    dend_64 { pt3dadd( -69.9422, 31.2718, -108.066, 0.88 ) }
    dend_64 { pt3dadd( -71.5062, 30.8894, -108.354, 0.74 ) }
    dend_64 { pt3dadd( -73.5102, 30.4304, -108.682, 0.59 ) }
    dend_64 { pt3dadd( -75.3194, 30.0417, -108.917, 0.66 ) }
    dend_64 { pt3dadd( -76.8588, 29.7144, -109.085, 0.66 ) }
    dend_64 { pt3dadd( -78.6784, 29.3029, -109.25, 0.66 ) }
    dend_64 { pt3dadd( -81.2588, 28.6496, -109.363, 0.96 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 97/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -41.3171, 48.7391, -77.608, 2.06 ) }
    dend_55 { pt3dadd( -41.4075, 49.4324, -77.8308, 2.06 ) }
    dend_55 { pt3dadd( -41.5117, 50.1689, -78.1135, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_55 { pt3dadd( -41.7686, 51.8495, -78.7474, 0.66 ) }
    dend_55 { pt3dadd( -41.9528, 53.0194, -79.1493, 0.66 ) }
    dend_55 { pt3dadd( -42.2295, 54.6859, -79.7032, 0.88 ) }
    dend_55 { pt3dadd( -42.4662, 56.0681, -80.15, 0.88 ) }
    dend_55 { pt3dadd( -42.8062, 58.0482, -80.7265, 0.88 ) }
    dend_55 { pt3dadd( -43.0631, 59.4745, -81.1262, 0.66 ) }
    dend_55 { pt3dadd( -43.3674, 61.1336, -81.5851, 0.66 ) }
    dend_55 { pt3dadd( -43.6273, 62.4095, -81.9174, 0.81 ) }
    dend_55 { pt3dadd( -43.9247, 63.8483, -82.2795, 0.81 ) }
    dend_55 { pt3dadd( -44.3015, 65.8666, -82.7838, 1.03 ) }
    dend_55 { pt3dadd( -44.5164, 67.2964, -83.1278, 1.03 ) }
    dend_55 { pt3dadd( -44.696, 68.8516, -83.5365, 1.18 ) }
    dend_55 { pt3dadd( -44.7946, 69.9273, -83.8429, 0.96 ) }
    dend_55 { pt3dadd( -44.8217, 70.8814, -84.1484, 0.81 ) }
    dend_55 { pt3dadd( -44.7668, 72.0771, -84.5662, 0.74 ) }
    dend_55 { pt3dadd( -44.5889, 73.483, -85.1259, 0.59 ) }
    dend_55 { pt3dadd( -44.41, 74.5434, -85.5911, 0.59 ) }
    dend_55 { pt3dadd( -44.2047, 75.7079, -86.1551, 0.96 ) }
    dend_55 { pt3dadd( -43.869, 77.627, -87.2283, 0.81 ) }
    dend_55 { pt3dadd( -43.6807, 78.787, -87.9313, 1.18 ) }
    dend_55 { pt3dadd( -43.5, 79.9924, -88.7222, 1.18 ) }
    dend_55 { pt3dadd( -43.3845, 80.8791, -89.3823, 0.96 ) }
    dend_55 { pt3dadd( -43.3143, 81.553, -89.904, 0.74 ) }
    dend_55 { pt3dadd( -43.2345, 82.9175, -90.9839, 0.59 ) }
    dend_55 { pt3dadd( -43.314, 84.4192, -92.1596, 0.66 ) }
    dend_55 { pt3dadd( -43.4738, 85.5398, -93.0185, 0.81 ) }
    dend_55 { pt3dadd( -43.6569, 86.4745, -93.6833, 0.81 ) }
    dend_55 { pt3dadd( -44.051, 88.0059, -94.724, 0.59 ) }
    dend_55 { pt3dadd( -44.3232, 88.7298, -95.2636, 0.59 ) }
    dend_55 { pt3dadd( -44.8464, 89.6833, -96.0378, 0.59 ) }
    dend_55 { pt3dadd( -45.4718, 90.5274, -96.816, 0.74 ) }
    dend_55 { pt3dadd( -46.1603, 91.2987, -97.5859, 0.74 ) }
    dend_55 { pt3dadd( -46.8635, 92.002, -98.3675, 0.88 ) }
    dend_55 { pt3dadd( -48.3646, 93.3781, -100.081, 1.25 ) }
    dend_55 { pt3dadd( -48.7249, 93.7003, -100.514, 1.03 ) }
    dend_55 { pt3dadd( -49.0874, 94.019, -100.997, 1.03 ) }
    dend_55 { pt3dadd( -49.5563, 94.3993, -101.643, 1.03 ) }
    dend_55 { pt3dadd( -50.3634, 95.0143, -102.703, 1.03 ) }
    dend_55 { pt3dadd( -51.076, 95.7253, -103.688, 1.18 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 39/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 5.89329, 52.2531, 8.59678, 1.03 ) }
    dend_47 { pt3dadd( 5.12835, 52.7397, 9.09057, 1.03 ) }
    dend_47 { pt3dadd( 4.25573, 53.4339, 9.61151, 1.03 ) }
    dend_47 { pt3dadd( 3.34875, 54.326, 10.1357, 0.88 ) }
    dend_47 { pt3dadd( 2.67016, 55.0857, 10.5144, 0.74 ) }
    dend_47 { pt3dadd( 2.06891, 55.8251, 10.8183, 0.74 ) }
    dend_47 { pt3dadd( 1.54329, 56.5147, 11.1061, 0.96 ) }
    dend_47 { pt3dadd( 1.05969, 57.2745, 11.3906, 1.03 ) }
    dend_47 { pt3dadd( 0.595492, 58.0727, 11.6256, 1.18 ) }
    dend_47 { pt3dadd( 0.05371, 59.0058, 11.8931, 0.81 ) }
    dend_47 { pt3dadd( -0.379377, 59.7172, 12.1301, 0.96 ) }
    dend_47 { pt3dadd( -1.06555, 60.7168, 12.4517, 1.11 ) }
    dend_47 { pt3dadd( -1.66992, 61.46, 12.6854, 0.96 ) }
    dend_47 { pt3dadd( -2.24779, 62.0623, 12.8545, 0.81 ) }
    dend_47 { pt3dadd( -3.10862, 62.8191, 13.0051, 0.81 ) }
    dend_47 { pt3dadd( -3.594, 63.2019, 13.07, 0.81 ) }
    dend_47 { pt3dadd( -4.76599, 64.0586, 13.1913, 1.03 ) }
    dend_47 { pt3dadd( -5.30864, 64.4436, 13.2218, 1.03 ) }
    dend_47 { pt3dadd( -5.82849, 64.8015, 13.2558, 0.88 ) }
    dend_47 { pt3dadd( -6.52642, 65.2808, 13.3415, 0.88 ) }
    dend_47 { pt3dadd( -7.5675, 65.9972, 13.4941, 0.74 ) }
    dend_47 { pt3dadd( -8.30943, 66.5242, 13.646, 1.25 ) }
    dend_47 { pt3dadd( -8.93326, 66.9929, 13.8033, 1.25 ) }
    dend_47 { pt3dadd( -9.57924, 67.5199, 13.9428, 0.59 ) }
    dend_47 { pt3dadd( -10.3989, 68.2061, 14.1329, 0.59 ) }
    dend_47 { pt3dadd( -10.9105, 68.6314, 14.2358, 0.74 ) }
    dend_47 { pt3dadd( -11.5538, 69.1537, 14.2826, 0.88 ) }
    dend_47 { pt3dadd( -12.2222, 69.6898, 14.2978, 0.96 ) }
    dend_47 { pt3dadd( -12.7471, 70.127, 14.2577, 0.96 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 68/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.89329, 52.2531, 8.59678, 0.59 ) }
    dend_42 { pt3dadd( 7.27949, 53.2604, 8.55121, 0.59 ) }
    dend_42 { pt3dadd( 8.09814, 53.9784, 8.51796, 0.59 ) }
    dend_42 { pt3dadd( 8.73691, 54.599, 8.49063, 0.81 ) }
    dend_42 { pt3dadd( 9.29739, 55.1346, 8.44771, 0.81 ) }
    dend_42 { pt3dadd( 9.92369, 55.6658, 8.39229, 0.52 ) }
    dend_42 { pt3dadd( 10.7005, 56.2529, 8.32094, 0.66 ) }
    dend_42 { pt3dadd( 11.9163, 57.0587, 8.20092, 0.59 ) }
    dend_42 { pt3dadd( 12.4444, 57.429, 8.12309, 0.59 ) }
    dend_42 { pt3dadd( 13.1741, 57.9569, 7.96789, 0.66 ) }
    dend_42 { pt3dadd( 14.2015, 58.741, 7.66252, 0.81 ) }
    dend_42 { pt3dadd( 14.6773, 59.1483, 7.46635, 0.81 ) }
    dend_42 { pt3dadd( 15.2072, 59.6831, 7.13742, 0.59 ) }
    dend_42 { pt3dadd( 15.9951, 60.9091, 6.33252, 0.74 ) }
    dend_42 { pt3dadd( 16.2942, 61.6, 5.8941, 0.88 ) }
    dend_42 { pt3dadd( 16.4797, 62.2001, 5.54871, 1.03 ) }
    dend_42 { pt3dadd( 16.6551, 62.971, 5.13811, 1.18 ) }
    dend_42 { pt3dadd( 16.7641, 63.5245, 4.86984, 1.03 ) }
    dend_42 { pt3dadd( 17.0345, 64.8278, 4.28824, 0.52 ) }
    dend_42 { pt3dadd( 17.3424, 66.012, 3.84491, 0.66 ) }
    dend_42 { pt3dadd( 17.6175, 66.871, 3.6017, 0.66 ) }
    dend_42 { pt3dadd( 18.0847, 68.1115, 3.36109, 0.66 ) }
    dend_42 { pt3dadd( 18.4345, 68.9709, 3.27089, 0.66 ) }
    dend_42 { pt3dadd( 18.7923, 69.8994, 3.26668, 0.66 ) }
    dend_42 { pt3dadd( 19.0549, 70.6669, 3.37023, 0.81 ) }
    dend_42 { pt3dadd( 19.3744, 71.7836, 3.65733, 0.59 ) }
    dend_42 { pt3dadd( 19.5972, 72.7158, 3.98752, 0.81 ) }
    dend_42 { pt3dadd( 19.7413, 73.4817, 4.31487, 0.88 ) }
    dend_42 { pt3dadd( 19.8526, 74.4755, 4.75026, 0.81 ) }
    dend_42 { pt3dadd( 19.8937, 75.5313, 5.19269, 0.81 ) }
    dend_42 { pt3dadd( 19.891, 76.3358, 5.47416, 0.66 ) }
    dend_42 { pt3dadd( 19.9001, 77.2823, 5.6808, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_42 { pt3dadd( 19.9388, 77.801, 5.73475, 0.44 ) }
    dend_42 { pt3dadd( 20.0944, 78.5507, 5.70973, 0.52 ) }
    dend_42 { pt3dadd( 20.3904, 79.3885, 5.57204, 0.59 ) }
    dend_42 { pt3dadd( 20.6539, 79.9573, 5.42141, 0.59 ) }
    dend_42 { pt3dadd( 21.22, 80.9116, 5.14776, 0.59 ) }
    dend_42 { pt3dadd( 21.7644, 81.6571, 4.93652, 0.66 ) }
    dend_42 { pt3dadd( 22.3409, 82.3152, 4.82229, 1.03 ) }
    dend_42 { pt3dadd( 22.7276, 82.684, 4.7968, 1.25 ) }
    dend_42 { pt3dadd( 23.154, 83.023, 4.81129, 1.25 ) }
    dend_42 { pt3dadd( 24.1812, 83.6991, 4.94078, 0.59 ) }
    dend_42 { pt3dadd( 24.9532, 84.1267, 5.09069, 0.96 ) }
    dend_42 { pt3dadd( 26.2162, 84.6629, 5.34592, 0.74 ) }
    dend_42 { pt3dadd( 26.8432, 84.8607, 5.48657, 0.74 ) }
    dend_42 { pt3dadd( 27.6137, 85.012, 5.69332, 0.59 ) }
    dend_42 { pt3dadd( 28.189, 85.0501, 5.86643, 0.59 ) }
    dend_42 { pt3dadd( 29.2323, 84.9804, 6.20357, 0.81 ) }
    dend_42 { pt3dadd( 30.2041, 84.8467, 6.5148, 0.81 ) }
    dend_42 { pt3dadd( 30.9582, 84.7446, 6.72191, 0.37 ) }
    dend_42 { pt3dadd( 32.0435, 84.6433, 7.00978, 0.37 ) }
    dend_42 { pt3dadd( 32.691, 84.6215, 7.15465, 0.37 ) }
    dend_42 { pt3dadd( 33.1309, 84.6273, 7.2224, 0.29 ) }
    dend_42 { pt3dadd( 33.632, 84.658, 7.25754, 0.29 ) }
    dend_42 { pt3dadd( 34.7044, 84.8736, 7.20539, 0.44 ) }
    dend_42 { pt3dadd( 35.4207, 85.1083, 7.09876, 1.11 ) }
    dend_42 { pt3dadd( 36.1816, 85.4126, 6.94732, 1.33 ) }
    dend_42 { pt3dadd( 36.6818, 85.6236, 6.86106, 1.55 ) }
    dend_42 { pt3dadd( 37.1312, 85.7991, 6.83846, 1.55 ) }
    dend_42 { pt3dadd( 37.5556, 85.9282, 6.8693, 1.69 ) }
    dend_42 { pt3dadd( 38.6653, 86.1693, 7.02674, 1.33 ) }
    dend_42 { pt3dadd( 39.7566, 86.3582, 7.17257, 0.88 ) }
    dend_42 { pt3dadd( 40.6987, 86.523, 7.28807, 0.74 ) }
    dend_42 { pt3dadd( 42.4382, 86.8568, 7.4651, 0.88 ) }
    dend_42 { pt3dadd( 43.6859, 87.1403, 7.52687, 0.52 ) }
    dend_42 { pt3dadd( 44.6904, 87.4325, 7.52565, 0.44 ) }
    dend_42 { pt3dadd( 45.9067, 87.9134, 7.41911, 0.44 ) }
    dend_42 { pt3dadd( 46.6383, 88.3336, 7.25922, 0.88 ) }
    dend_42 { pt3dadd( 47.1578, 88.7254, 7.07481, 0.88 ) }
    dend_42 { pt3dadd( 47.9293, 89.4527, 6.73201, 1.03 ) }
    dend_42 { pt3dadd( 48.4501, 90.0294, 6.5248, 0.88 ) }
    dend_42 { pt3dadd( 48.8966, 90.533, 6.40002, 0.88 ) }
    dend_42 { pt3dadd( 49.4709, 91.1398, 6.30992, 0.59 ) }
    dend_42 { pt3dadd( 49.9857, 91.6518, 6.24985, 0.81 ) }
    dend_42 { pt3dadd( 50.6077, 92.2783, 6.2134, 0.52 ) }
    dend_42 { pt3dadd( 51.1506, 92.8412, 6.22118, 0.66 ) }
    dend_42 { pt3dadd( 51.6814, 93.408, 6.24122, 0.81 ) }
    dend_42 { pt3dadd( 52.194, 93.9779, 6.26754, 0.37 ) }
    dend_42 { pt3dadd( 52.6794, 94.5096, 6.28588, 0.37 ) }
    dend_42 { pt3dadd( 53.1765, 95.0096, 6.29191, 0.37 ) }
    dend_42 { pt3dadd( 53.8174, 95.6021, 6.2771, 0.37 ) }
    dend_42 { pt3dadd( 54.2855, 96.067, 6.24846, 0.59 ) }
    dend_42 { pt3dadd( 54.668, 96.4567, 6.18583, 0.59 ) }
    dend_42 { pt3dadd( 55.387, 97.1383, 5.99181, 0.52 ) }
    dend_42 { pt3dadd( 55.9179, 97.5984, 5.80107, 0.37 ) }
    dend_42 { pt3dadd( 56.4759, 98.0621, 5.55027, 0.52 ) }
    dend_42 { pt3dadd( 57.6579, 99.0556, 4.88645, 0.81 ) }
    dend_42 { pt3dadd( 58.6278, 99.929, 4.22006, 0.37 ) }
    dend_42 { pt3dadd( 59.1893, 100.472, 3.73356, 0.66 ) }
    dend_42 { pt3dadd( 59.4921, 100.776, 3.42466, 0.66 ) }
    dend_42 { pt3dadd( 60.0169, 101.283, 2.8446, 0.74 ) }
    dend_42 { pt3dadd( 60.7008, 101.871, 2.12846, 0.96 ) }
    dend_42 { pt3dadd( 61.3148, 102.337, 1.56468, 1.11 ) }
    dend_42 { pt3dadd( 62.2283, 103.036, 0.94209, 0.81 ) }
    dend_42 { pt3dadd( 62.8029, 103.495, 0.748109, 0.66 ) }
    dend_42 { pt3dadd( 63.2793, 103.897, 0.762459, 0.52 ) }
    dend_42 { pt3dadd( 64.2955, 104.814, 1.10461, 0.52 ) }
    dend_42 { pt3dadd( 65.0145, 105.51, 1.50517, 0.81 ) }
    dend_42 { pt3dadd( 65.5597, 106.052, 1.80769, 1.03 ) }
    dend_42 { pt3dadd( 66.2526, 106.738, 2.15466, 0.81 ) }
    dend_42 { pt3dadd( 66.9737, 107.433, 2.41059, 0.52 ) }
    dend_42 { pt3dadd( 67.5485, 107.959, 2.50578, 0.66 ) }
    dend_42 { pt3dadd( 68.3196, 108.569, 2.46823, 0.66 ) }
    dend_42 { pt3dadd( 69.6886, 109.43, 2.22603, 0.44 ) }
    dend_42 { pt3dadd( 70.5102, 109.799, 2.01941, 0.81 ) }
    dend_42 { pt3dadd( 71.2208, 110.022, 1.7942, 0.96 ) }
    dend_42 { pt3dadd( 71.6586, 110.126, 1.63265, 0.96 ) }
    dend_42 { pt3dadd( 72.7156, 110.323, 1.16284, 0.74 ) }
    dend_42 { pt3dadd( 73.4687, 110.454, 0.775228, 0.74 ) }
    dend_42 { pt3dadd( 74.4571, 110.677, 0.222367, 0.59 ) }
    dend_42 { pt3dadd( 75.3794, 110.993, -0.358706, 0.88 ) }
    dend_42 { pt3dadd( 76.1798, 111.381, -0.903135, 0.88 ) }
    dend_42 { pt3dadd( 77.1608, 112.004, -1.61286, 0.74 ) }
    dend_42 { pt3dadd( 77.5972, 112.364, -1.93784, 0.88 ) }
    dend_42 { pt3dadd( 78.2661, 113.007, -2.45458, 0.88 ) }
    dend_42 { pt3dadd( 78.9612, 113.783, -2.99635, 0.66 ) }
    dend_42 { pt3dadd( 79.4744, 114.392, -3.34875, 0.96 ) }
    dend_42 { pt3dadd( 79.8559, 114.869, -3.54465, 0.96 ) }
    dend_42 { pt3dadd( 80.4258, 115.642, -3.72085, 0.96 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -80.3731, 30.2016, -0.957815, 0.88 ) }
    dend_33 { pt3dadd( -82.394, 29.7416, 0.0341084, 0.88 ) }
    dend_33 { pt3dadd( -83.2796, 29.6528, 0.361235, 0.52 ) }
    dend_33 { pt3dadd( -84.0672, 29.5829, 0.582144, 0.52 ) }
    dend_33 { pt3dadd( -84.8594, 29.5247, 0.750989, 0.66 ) }
    dend_33 { pt3dadd( -85.5969, 29.5024, 0.883364, 0.66 ) }
    dend_33 { pt3dadd( -86.208, 29.5149, 0.980404, 0.74 ) }
    dend_33 { pt3dadd( -87.0226, 29.6258, 1.04398, 0.37 ) }
    dend_33 { pt3dadd( -88.1441, 29.879, 1.15903, 0.37 ) }
    dend_33 { pt3dadd( -89.2772, 30.1684, 1.30283, 0.37 ) }
    dend_33 { pt3dadd( -89.9286, 30.3225, 1.40469, 0.52 ) }
    dend_33 { pt3dadd( -90.5217, 30.4327, 1.54181, 0.66 ) }
    dend_33 { pt3dadd( -91.2782, 30.5151, 1.77579, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_33 { pt3dadd( -92.1824, 30.5609, 2.15098, 0.44 ) }
    dend_33 { pt3dadd( -93.0081, 30.5588, 2.5642, 0.44 ) }
    dend_33 { pt3dadd( -93.7113, 30.522, 2.96401, 0.44 ) }
    dend_33 { pt3dadd( -94.8395, 30.4196, 3.62092, 0.66 ) }
    dend_33 { pt3dadd( -95.4455, 30.3064, 3.98078, 0.74 ) }
    dend_33 { pt3dadd( -96.0318, 30.1464, 4.42099, 0.74 ) }
    dend_33 { pt3dadd( -96.5149, 29.9718, 4.91808, 0.52 ) }
    dend_33 { pt3dadd( -97.1123, 29.7438, 5.61193, 0.52 ) }
    dend_33 { pt3dadd( -97.7929, 29.4919, 6.41289, 0.66 ) }
    dend_33 { pt3dadd( -98.8001, 29.0849, 7.69522, 0.74 ) }
    dend_33 { pt3dadd( -99.9079, 28.6247, 9.42817, 0.96 ) }
    dend_33 { pt3dadd( -100.804, 28.2452, 11.0359, 0.74 ) }
    dend_33 { pt3dadd( -101.271, 28.0667, 11.9436, 0.52 ) }
    dend_33 { pt3dadd( -101.652, 27.9489, 12.6773, 0.44 ) }
    dend_33 { pt3dadd( -102.523, 27.8117, 14.2933, 0.74 ) }
    dend_33 { pt3dadd( -103.669, 27.8761, 16.1226, 0.52 ) }
    dend_33 { pt3dadd( -103.959, 27.9195, 16.4756, 0.44 ) }
    dend_33 { pt3dadd( -104.627, 28.0268, 17.1621, 0.44 ) }
    dend_33 { pt3dadd( -105.421, 28.1013, 17.8978, 0.59 ) }
    dend_33 { pt3dadd( -105.972, 28.0843, 18.3094, 0.52 ) }
    dend_33 { pt3dadd( -107.144, 27.8609, 18.8358, 0.52 ) }
    dend_33 { pt3dadd( -108.032, 27.5483, 19.1068, 0.44 ) }
    dend_33 { pt3dadd( -108.816, 27.2037, 19.3418, 0.59 ) }
    dend_33 { pt3dadd( -109.532, 26.8424, 19.5595, 0.59 ) }
    dend_33 { pt3dadd( -110.214, 26.5112, 19.7747, 0.88 ) }
    dend_33 { pt3dadd( -111.256, 26.076, 20.0438, 0.59 ) }
    dend_33 { pt3dadd( -111.842, 25.8982, 20.1253, 0.44 ) }
    dend_33 { pt3dadd( -112.701, 25.7583, 20.1839, 0.44 ) }
    dend_33 { pt3dadd( -113.128, 25.7386, 20.2014, 0.74 ) }
    dend_33 { pt3dadd( -114.03, 25.732, 20.2382, 0.37 ) }
    dend_33 { pt3dadd( -114.625, 25.7383, 20.2714, 0.37 ) }
    dend_33 { pt3dadd( -115.497, 25.7481, 20.329, 0.59 ) }
    dend_33 { pt3dadd( -116.063, 25.7466, 20.3453, 0.59 ) }
    dend_33 { pt3dadd( -116.859, 25.7187, 20.351, 0.37 ) }
    dend_33 { pt3dadd( -118.004, 25.6336, 20.4007, 0.29 ) }
    dend_33 { pt3dadd( -118.92, 25.5352, 20.4696, 0.44 ) }
    dend_33 { pt3dadd( -119.747, 25.4433, 20.5661, 0.59 ) }
    dend_33 { pt3dadd( -120.395, 25.376, 20.6786, 0.59 ) }
    dend_33 { pt3dadd( -121.494, 25.2821, 20.9143, 0.74 ) }
    dend_33 { pt3dadd( -122.605, 25.2079, 21.199, 0.66 ) }
    dend_33 { pt3dadd( -123.488, 25.1695, 21.4865, 0.44 ) }
    dend_33 { pt3dadd( -124.205, 25.157, 21.7925, 0.44 ) }
    dend_33 { pt3dadd( -124.831, 25.1447, 22.0929, 0.66 ) }
    dend_33 { pt3dadd( -125.372, 25.1468, 22.3856, 0.66 ) }
    dend_33 { pt3dadd( -125.758, 25.1698, 22.6264, 0.81 ) }
    dend_33 { pt3dadd( -126.628, 25.2936, 23.2163, 0.59 ) }
    dend_33 { pt3dadd( -127.878, 25.5662, 24.2022, 0.52 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -80.3731, 30.2016, -0.957815, 0.52 ) }
    dend_28 { pt3dadd( -81.4822, 30.2453, -1.78352, 0.52 ) }
    dend_28 { pt3dadd( -82.751, 30.399, -2.6229, 0.52 ) }
    dend_28 { pt3dadd( -84.0751, 30.6715, -3.38529, 0.66 ) }
    dend_28 { pt3dadd( -84.8841, 30.8741, -3.79558, 0.81 ) }
    dend_28 { pt3dadd( -85.5591, 31.081, -4.11483, 0.81 ) }
    dend_28 { pt3dadd( -86.0162, 31.2399, -4.32293, 0.81 ) }
    dend_28 { pt3dadd( -86.7237, 31.5967, -4.58352, 0.59 ) }
    dend_28 { pt3dadd( -87.4138, 31.9941, -4.80319, 0.52 ) }
    dend_28 { pt3dadd( -88.0649, 32.35, -4.97664, 0.52 ) }
    dend_28 { pt3dadd( -89.0125, 32.7606, -5.22253, 0.52 ) }
    dend_28 { pt3dadd( -89.6808, 32.967, -5.41873, 0.66 ) }
    dend_28 { pt3dadd( -90.5972, 33.1691, -5.70541, 0.81 ) }
    dend_28 { pt3dadd( -91.5562, 33.3137, -6.04431, 0.74 ) }
    dend_28 { pt3dadd( -92.3711, 33.3778, -6.37374, 0.74 ) }
    dend_28 { pt3dadd( -93.2881, 33.4045, -6.75812, 0.59 ) }
    dend_28 { pt3dadd( -94.8435, 33.3686, -7.41054, 0.44 ) }
    dend_28 { pt3dadd( -95.815, 33.3203, -7.83713, 0.44 ) }
    dend_28 { pt3dadd( -96.8591, 33.2548, -8.30741, 0.59 ) }
    dend_28 { pt3dadd( -98.1106, 33.2042, -8.85869, 0.59 ) }
    dend_28 { pt3dadd( -98.792, 33.1881, -9.14758, 0.88 ) }
    dend_28 { pt3dadd( -99.7899, 33.1801, -9.54152, 0.88 ) }
    dend_28 { pt3dadd( -100.609, 33.1994, -9.82405, 0.74 ) }
    dend_28 { pt3dadd( -101.182, 33.2185, -10.0109, 0.59 ) }
    dend_28 { pt3dadd( -102.011, 33.2487, -10.2819, 0.44 ) }
    dend_28 { pt3dadd( -102.632, 33.2515, -10.541, 0.44 ) }
    dend_28 { pt3dadd( -103.235, 33.2247, -10.8328, 0.37 ) }
    dend_28 { pt3dadd( -104.069, 33.1527, -11.2602, 0.37 ) }
    dend_28 { pt3dadd( -105.202, 33.0361, -11.8487, 0.37 ) }
    dend_28 { pt3dadd( -106.415, 32.8999, -12.5548, 0.74 ) }
    dend_28 { pt3dadd( -107.762, 32.7044, -13.4202, 0.44 ) }
    dend_28 { pt3dadd( -108.471, 32.5617, -13.9249, 0.44 ) }
    dend_28 { pt3dadd( -108.981, 32.4293, -14.3264, 0.44 ) }
    dend_28 { pt3dadd( -109.807, 32.1946, -15.0516, 0.44 ) }
    dend_28 { pt3dadd( -110.661, 31.9982, -15.8901, 0.81 ) }
    dend_28 { pt3dadd( -111.149, 31.9156, -16.4306, 1.03 ) }
    dend_28 { pt3dadd( -111.776, 31.8807, -17.2336, 1.03 ) }
    dend_28 { pt3dadd( -112.464, 31.9211, -18.2417, 0.74 ) }
    dend_28 { pt3dadd( -113.652, 32.1223, -20.178, 0.44 ) }
    dend_28 { pt3dadd( -114.158, 32.2368, -21.0635, 0.44 ) }
    dend_28 { pt3dadd( -114.564, 32.3825, -21.7743, 0.44 ) }
    dend_28 { pt3dadd( -115.023, 32.637, -22.5842, 0.44 ) }
    dend_28 { pt3dadd( -115.429, 32.9653, -23.3012, 0.88 ) }
    dend_28 { pt3dadd( -115.839, 33.4659, -24.0934, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_1 (entry count 91/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -53.6132, 39.1579, 6.08235, 0.66 ) }
    dend_22 { pt3dadd( -54.2141, 40.4809, 5.78244, 0.66 ) }
    dend_22 { pt3dadd( -54.6615, 41.2716, 5.61103, 0.66 ) }
    dend_22 { pt3dadd( -55.0965, 42.01, 5.4621, 0.66 ) }
    dend_22 { pt3dadd( -55.6208, 42.8715, 5.28641, 0.81 ) }
    dend_22 { pt3dadd( -55.9519, 43.4207, 5.1804, 0.81 ) }
    dend_22 { pt3dadd( -56.5614, 44.4537, 4.99219, 0.74 ) }
    dend_22 { pt3dadd( -57.3828, 45.7359, 4.83683, 0.44 ) }
    dend_22 { pt3dadd( -57.7445, 46.3084, 4.76157, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_22 { pt3dadd( -58.1379, 46.992, 4.66582, 1.03 ) }
    dend_22 { pt3dadd( -58.4797, 47.6573, 4.55349, 1.18 ) }
    dend_22 { pt3dadd( -58.6973, 48.1227, 4.46797, 1.18 ) }
    dend_22 { pt3dadd( -59.0058, 48.829, 4.32324, 0.59 ) }
    dend_22 { pt3dadd( -59.5373, 50.007, 4.09192, 0.81 ) }
    dend_22 { pt3dadd( -59.9116, 50.8547, 3.92052, 0.88 ) }
    dend_22 { pt3dadd( -60.1982, 51.5565, 3.77239, 0.88 ) }
    dend_22 { pt3dadd( -60.6358, 52.7069, 3.51241, 0.74 ) }
    dend_22 { pt3dadd( -60.9819, 53.6788, 3.28045, 0.74 ) }
    dend_22 { pt3dadd( -61.3055, 54.6125, 3.03392, 1.18 ) }
    dend_22 { pt3dadd( -61.6901, 55.6606, 2.73625, 0.59 ) }
    dend_22 { pt3dadd( -61.9694, 56.3667, 2.54211, 0.44 ) }
    dend_22 { pt3dadd( -62.3137, 57.1692, 2.34131, 0.59 ) }
    dend_22 { pt3dadd( -62.7656, 58.1726, 2.10389, 0.59 ) }
    dend_22 { pt3dadd( -63.0673, 58.8217, 1.96855, 0.59 ) }
    dend_22 { pt3dadd( -63.3677, 59.443, 1.84143, 0.59 ) }
    dend_22 { pt3dadd( -63.8649, 60.3624, 1.66496, 0.52 ) }
    dend_22 { pt3dadd( -64.383, 61.3081, 1.51104, 0.81 ) }
    dend_22 { pt3dadd( -64.8518, 62.215, 1.38457, 0.81 ) }
    dend_22 { pt3dadd( -65.197, 62.95, 1.29862, 0.66 ) }
    dend_22 { pt3dadd( -65.4732, 63.5943, 1.23148, 0.44 ) }
    dend_22 { pt3dadd( -65.9424, 64.7503, 1.09289, 0.74 ) }
    dend_22 { pt3dadd( -66.2821, 65.5965, 0.916031, 0.88 ) }
    dend_22 { pt3dadd( -66.6301, 66.4297, 0.714628, 1.11 ) }
    dend_22 { pt3dadd( -66.8037, 66.8049, 0.614882, 1.11 ) }
    dend_22 { pt3dadd( -67.1355, 67.4857, 0.418899, 0.52 ) }
    dend_22 { pt3dadd( -67.3723, 67.9793, 0.260552, 0.52 ) }
    dend_22 { pt3dadd( -67.8757, 69.1246, -0.117582, 0.52 ) }
    dend_22 { pt3dadd( -68.109, 69.7114, -0.317416, 0.59 ) }
    dend_22 { pt3dadd( -68.4365, 70.5514, -0.607408, 0.59 ) }
    dend_22 { pt3dadd( -68.7127, 71.2351, -0.834153, 0.81 ) }
    dend_22 { pt3dadd( -69.1161, 72.1814, -1.12152, 0.66 ) }
    dend_22 { pt3dadd( -69.5617, 73.1534, -1.37255, 0.81 ) }
    dend_22 { pt3dadd( -69.9774, 73.9453, -1.57636, 0.81 ) }
    dend_22 { pt3dadd( -70.4406, 74.7229, -1.8276, 0.59 ) }
    dend_22 { pt3dadd( -70.8344, 75.3015, -2.08475, 0.59 ) }
    dend_22 { pt3dadd( -71.2395, 75.8057, -2.36928, 0.66 ) }
    dend_22 { pt3dadd( -71.5324, 76.1045, -2.58188, 0.66 ) }
    dend_22 { pt3dadd( -72.6725, 77.1712, -3.43714, 0.74 ) }
    dend_22 { pt3dadd( -73.266, 77.7547, -3.90127, 0.59 ) }
    dend_22 { pt3dadd( -73.989, 78.6006, -4.56874, 0.59 ) }
    dend_22 { pt3dadd( -74.4431, 79.2356, -5.04619, 0.44 ) }
    dend_22 { pt3dadd( -74.9145, 80.0387, -5.58071, 0.44 ) }
    dend_22 { pt3dadd( -75.3144, 80.8938, -6.05636, 0.52 ) }
    dend_22 { pt3dadd( -75.6053, 81.7542, -6.41852, 0.59 ) }
    dend_22 { pt3dadd( -75.8923, 82.8145, -6.82689, 0.74 ) }
    dend_22 { pt3dadd( -76.0306, 83.3756, -7.02345, 0.88 ) }
    dend_22 { pt3dadd( -76.2545, 84.2635, -7.41254, 0.37 ) }
    dend_22 { pt3dadd( -76.4202, 84.8251, -7.68281, 0.37 ) }
    dend_22 { pt3dadd( -76.7342, 85.6254, -8.10603, 0.81 ) }
    dend_22 { pt3dadd( -77.095, 86.3812, -8.51379, 0.81 ) }
    dend_22 { pt3dadd( -77.5364, 87.2329, -8.98338, 1.03 ) }
    dend_22 { pt3dadd( -78.1845, 88.5332, -9.73371, 0.96 ) }
    dend_22 { pt3dadd( -78.5537, 89.3321, -10.1861, 0.52 ) }
    dend_22 { pt3dadd( -78.9539, 90.2395, -10.6452, 0.52 ) }
    dend_22 { pt3dadd( -79.3782, 91.3232, -11.0821, 0.52 ) }
    dend_22 { pt3dadd( -79.6829, 92.3011, -11.3798, 0.66 ) }
    dend_22 { pt3dadd( -79.9521, 93.5219, -11.6516, 0.44 ) }
    dend_22 { pt3dadd( -80.0536, 94.2896, -11.7619, 0.44 ) }
    dend_22 { pt3dadd( -80.1038, 95.1106, -11.8568, 0.59 ) }
    dend_22 { pt3dadd( -80.1057, 96.4725, -11.9856, 0.59 ) }
    dend_22 { pt3dadd( -80.067, 97.7614, -12.1089, 0.59 ) }
    dend_22 { pt3dadd( -80.0009, 99.1825, -12.1593, 0.52 ) }
    dend_22 { pt3dadd( -79.9578, 100.149, -12.2592, 0.88 ) }
    dend_22 { pt3dadd( -79.9144, 100.973, -12.4727, 0.88 ) }
    dend_22 { pt3dadd( -79.8726, 101.832, -12.8198, 0.88 ) }
    dend_22 { pt3dadd( -79.851, 102.887, -13.3851, 1.18 ) }
    dend_22 { pt3dadd( -79.8614, 104.369, -14.3203, 0.96 ) }
    dend_22 { pt3dadd( -79.8804, 106.603, -15.9729, 0.74 ) }
    dend_22 { pt3dadd( -79.8669, 107.909, -17.165, 0.81 ) }
    dend_22 { pt3dadd( -79.8166, 108.729, -18.0544, 0.59 ) }
    dend_22 { pt3dadd( -79.7555, 109.413, -18.8918, 0.81 ) }
    dend_22 { pt3dadd( -79.6837, 110.12, -19.8023, 1.03 ) }
    dend_22 { pt3dadd( -79.6305, 110.734, -20.636, 1.03 ) }
    dend_22 { pt3dadd( -79.482, 112.24, -22.5465, 0.66 ) }
    dend_22 { pt3dadd( -79.4301, 112.846, -23.2975, 0.66 ) }
    dend_22 { pt3dadd( -79.384, 113.46, -24.078, 0.74 ) }
    dend_22 { pt3dadd( -79.3785, 113.975, -24.7185, 0.88 ) }
    dend_22 { pt3dadd( -79.4429, 114.672, -25.4963, 1.11 ) }
    dend_22 { pt3dadd( -79.5653, 115.474, -26.2646, 0.81 ) }
    dend_22 { pt3dadd( -79.6708, 116.147, -26.7998, 1.25 ) }
    dend_22 { pt3dadd( -79.799, 117.005, -27.4384, 1.25 ) }
    dend_22 { pt3dadd( -79.9519, 118.131, -28.2674, 1.03 ) }
    dend_22 { pt3dadd( -80.0925, 119.187, -29.0446, 1.4 ) }
    dend_22 { pt3dadd( -80.2788, 120.574, -30.0078, 0.52 ) }
    dend_22 { pt3dadd( -80.3733, 121.185, -30.427, 0.52 ) }
    dend_22 { pt3dadd( -80.4705, 121.818, -30.87, 0.74 ) }
    dend_22 { pt3dadd( -80.5844, 122.651, -31.4177, 0.74 ) }
    dend_22 { pt3dadd( -80.6673, 123.512, -31.9141, 0.96 ) }
    dend_22 { pt3dadd( -80.702, 124.018, -32.1951, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -53.6132, 39.1579, 6.08235, 0.96 ) }
    dend_2 { pt3dadd( -54.6331, 39.5433, 5.98575, 0.96 ) }
    dend_2 { pt3dadd( -55.6015, 39.9962, 5.83154, 0.88 ) }
    dend_2 { pt3dadd( -56.7106, 40.5862, 5.62175, 1.03 ) }
    dend_2 { pt3dadd( -57.4013, 40.9888, 5.47016, 1.03 ) }
    dend_2 { pt3dadd( -58.0618, 41.4006, 5.31029, 0.66 ) }
    dend_2 { pt3dadd( -58.6599, 41.7932, 5.15385, 0.66 ) }
    dend_2 { pt3dadd( -59.5596, 42.4603, 4.88483, 1.03 ) }
    dend_2 { pt3dadd( -60.0031, 42.7944, 4.73541, 1.18 ) }
    dend_2 { pt3dadd( -60.4355, 43.1194, 4.57941, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( -60.7688, 43.3507, 4.45247, 1.03 ) }
    dend_2 { pt3dadd( -61.3267, 43.6514, 4.25775, 1.11 ) }
    dend_2 { pt3dadd( -62.0685, 43.9117, 4.02373, 1.18 ) }
    dend_2 { pt3dadd( -62.6311, 44.0205, 3.87967, 1.33 ) }
    dend_2 { pt3dadd( -62.9385, 44.0577, 3.80734, 1.33 ) }
    dend_2 { pt3dadd( -64.0215, 44.1612, 3.58824, 0.52 ) }
    dend_2 { pt3dadd( -64.8021, 44.2466, 3.45293, 0.52 ) }
    dend_2 { pt3dadd( -65.4788, 44.3447, 3.35762, 0.52 ) }
    dend_2 { pt3dadd( -65.9099, 44.4426, 3.31094, 0.88 ) }
    dend_2 { pt3dadd( -66.5148, 44.6082, 3.25964, 0.88 ) }
    dend_2 { pt3dadd( -67.1058, 44.8025, 3.26191, 0.88 ) }
    dend_2 { pt3dadd( -67.793, 45.0972, 3.2983, 0.88 ) }
    dend_2 { pt3dadd( -68.3864, 45.4141, 3.32628, 0.66 ) }
    dend_2 { pt3dadd( -69.1309, 45.8584, 3.35153, 0.59 ) }
    dend_2 { pt3dadd( -69.825, 46.2869, 3.35058, 0.59 ) }
    dend_2 { pt3dadd( -70.6946, 46.8105, 3.32606, 0.74 ) }
    dend_2 { pt3dadd( -71.3174, 47.1921, 3.2946, 0.74 ) }
    dend_2 { pt3dadd( -71.7657, 47.4814, 3.26339, 0.59 ) }
    dend_2 { pt3dadd( -72.3508, 47.8936, 3.21576, 0.59 ) }
    dend_2 { pt3dadd( -73.0678, 48.4351, 3.1545, 0.81 ) }
    dend_2 { pt3dadd( -73.731, 48.9486, 3.12, 0.81 ) }
    dend_2 { pt3dadd( -74.3935, 49.4335, 3.09628, 0.88 ) }
    dend_2 { pt3dadd( -74.9163, 49.7911, 3.11508, 0.88 ) }
    dend_2 { pt3dadd( -75.5319, 50.1745, 3.16111, 0.74 ) }
    dend_2 { pt3dadd( -76.1249, 50.499, 3.22094, 0.66 ) }
    dend_2 { pt3dadd( -76.7828, 50.8032, 3.29729, 0.66 ) }
    dend_2 { pt3dadd( -77.418, 51.05, 3.36187, 0.81 ) }
    dend_2 { pt3dadd( -78.1376, 51.2801, 3.42065, 0.66 ) }
    dend_2 { pt3dadd( -79.2795, 51.6079, 3.48983, 0.88 ) }
    dend_2 { pt3dadd( -80.1303, 51.8612, 3.52373, 1.11 ) }
    dend_2 { pt3dadd( -80.8932, 52.1323, 3.53945, 1.11 ) }
    dend_2 { pt3dadd( -81.928, 52.5951, 3.54707, 0.88 ) }
    dend_2 { pt3dadd( -82.8312, 53.1185, 3.56051, 1.11 ) }
    dend_2 { pt3dadd( -83.6628, 53.7603, 3.5731, 0.88 ) }
    dend_2 { pt3dadd( -84.4072, 54.5365, 3.58058, 0.81 ) }
    dend_2 { pt3dadd( -84.9842, 55.2885, 3.59302, 0.74 ) }
    dend_2 { pt3dadd( -85.3979, 55.9139, 3.59809, 0.74 ) }
    dend_2 { pt3dadd( -85.7742, 56.5258, 3.59808, 0.88 ) }
    dend_2 { pt3dadd( -86.1051, 57.0237, 3.59354, 0.88 ) }
    dend_2 { pt3dadd( -86.665, 57.6567, 3.59074, 0.66 ) }
    dend_2 { pt3dadd( -87.2691, 58.1004, 3.68606, 0.81 ) }
    dend_2 { pt3dadd( -87.7731, 58.3645, 3.7698, 0.96 ) }
    dend_2 { pt3dadd( -88.5345, 58.6518, 3.90233, 1.03 ) }
    dend_2 { pt3dadd( -89.302, 58.8528, 4.06024, 1.03 ) }
    dend_2 { pt3dadd( -90.0942, 58.99, 4.26637, 0.74 ) }
    dend_2 { pt3dadd( -91.8416, 59.1581, 4.88318, 0.59 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 46/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -22.4833, 128.409, 61.83, 0.44 ) }
    dend_78 { pt3dadd( -26.7995, 135.879, 66.5906, 0.44 ) }
    dend_78 { pt3dadd( -30.5757, 143.247, 71.942, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 49/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -22.4833, 128.409, 61.83, 0.29 ) }
    dend_77 { pt3dadd( -24.0239, 135.235, 68.8022, 0.44 ) }
    dend_77 { pt3dadd( -23.839, 142.07, 75.9309, 0.44 ) }
    dend_77 { pt3dadd( -23.2056, 148.898, 83.0409, 0.44 ) }
    dend_77 { pt3dadd( -21.2434, 155.514, 90.1199, 0.44 ) }
    dend_77 { pt3dadd( -18.3173, 162.96, 95.8738, 0.44 ) }
    dend_77 { pt3dadd( -15.4231, 169.3, 102.898, 0.44 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 56/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 54.7707, 49.9784, 15.7225, 0.37 ) }
    dend_73 { pt3dadd( 55.8974, 49.4961, 15.3749, 0.37 ) }
    dend_73 { pt3dadd( 56.4669, 49.2921, 15.2188, 0.37 ) }
    dend_73 { pt3dadd( 57.291, 49.0104, 15.0604, 0.44 ) }
    dend_73 { pt3dadd( 57.9814, 48.7791, 14.971, 0.52 ) }
    dend_73 { pt3dadd( 58.5871, 48.5674, 14.93, 0.52 ) }
    dend_73 { pt3dadd( 59.1458, 48.3717, 14.9152, 0.66 ) }
    dend_73 { pt3dadd( 59.8526, 48.131, 14.8719, 0.52 ) }
    dend_73 { pt3dadd( 60.8524, 47.819, 14.7504, 0.66 ) }
    dend_73 { pt3dadd( 61.588, 47.6169, 14.6029, 0.66 ) }
    dend_73 { pt3dadd( 62.3737, 47.4257, 14.3311, 0.52 ) }
    dend_73 { pt3dadd( 63.0287, 47.2891, 14.0076, 0.66 ) }
    dend_73 { pt3dadd( 64.4221, 47.0601, 13.1207, 0.66 ) }
    dend_73 { pt3dadd( 64.9955, 47.01, 12.6863, 0.66 ) }
    dend_73 { pt3dadd( 65.583, 47.0248, 12.2413, 1.03 ) }
    dend_73 { pt3dadd( 66.5713, 47.1581, 11.5297, 0.59 ) }
    dend_73 { pt3dadd( 67.2869, 47.3389, 11.0485, 0.37 ) }
    dend_73 { pt3dadd( 67.908, 47.5707, 10.699, 0.52 ) }
    dend_73 { pt3dadd( 68.5017, 47.8692, 10.4452, 0.52 ) }
    dend_73 { pt3dadd( 69.6205, 48.6019, 10.0128, 0.37 ) }
    dend_73 { pt3dadd( 70.1354, 49.0041, 9.84044, 0.52 ) }
    dend_73 { pt3dadd( 70.5949, 49.4065, 9.67939, 0.59 ) }
    dend_73 { pt3dadd( 71.2476, 50.04, 9.38351, 0.37 ) }
    dend_73 { pt3dadd( 71.7557, 50.5286, 9.12684, 0.52 ) }
    dend_73 { pt3dadd( 72.2581, 50.9827, 8.84756, 0.52 ) }
    dend_73 { pt3dadd( 72.6945, 51.3632, 8.58541, 0.29 ) }
    dend_73 { pt3dadd( 73.3204, 51.8803, 8.30822, 0.52 ) }
    dend_73 { pt3dadd( 73.6698, 52.1405, 8.20655, 0.66 ) }
    dend_73 { pt3dadd( 74.402, 52.6035, 8.07578, 0.44 ) }
    dend_73 { pt3dadd( 75.0043, 52.93, 7.99939, 0.44 ) }
    dend_73 { pt3dadd( 75.5778, 53.2348, 7.91988, 0.44 ) }
    dend_73 { pt3dadd( 76.3804, 53.6893, 7.79382, 0.29 ) }
    dend_73 { pt3dadd( 77.1808, 54.1733, 7.66482, 0.52 ) }
    dend_73 { pt3dadd( 77.9848, 54.6641, 7.49479, 0.74 ) }
    dend_73 { pt3dadd( 78.7388, 55.0936, 7.29047, 0.74 ) }
    dend_73 { pt3dadd( 79.6679, 55.6023, 6.99258, 0.29 ) }
    dend_73 { pt3dadd( 80.3617, 56.0126, 6.75712, 0.29 ) }
    dend_73 { pt3dadd( 80.8183, 56.3266, 6.59025, 0.59 ) }
    dend_73 { pt3dadd( 81.374, 56.7582, 6.37099, 0.66 ) }
    dend_73 { pt3dadd( 82.2977, 57.5454, 6.02043, 0.29 ) }
    dend_73 { pt3dadd( 83.0201, 58.1876, 5.75837, 0.52 ) }
    dend_73 { pt3dadd( 83.9558, 59.0196, 5.45427, 0.29 ) }
    dend_73 { pt3dadd( 84.4141, 59.4506, 5.31849, 0.66 ) }
    dend_73 { pt3dadd( 85.0835, 60.1309, 5.14225, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_73 { pt3dadd( 85.6265, 60.7638, 5.05522, 0.88 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 1/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 54.7707, 49.9784, 15.7225, 0.37 ) }
    dend_72 { pt3dadd( 55.4288, 50.1943, 16.6785, 0.37 ) }
    dend_72 { pt3dadd( 55.8802, 50.3777, 17.3015, 0.74 ) }
    dend_72 { pt3dadd( 56.3459, 50.6287, 17.9159, 0.74 ) }
    dend_72 { pt3dadd( 57.9357, 51.728, 20.1189, 0.66 ) }
    dend_72 { pt3dadd( 58.3322, 52.0629, 20.7072, 0.52 ) }
    dend_72 { pt3dadd( 58.5928, 52.3244, 21.126, 0.66 ) }
    dend_72 { pt3dadd( 58.8889, 52.6916, 21.6595, 0.37 ) }
    dend_72 { pt3dadd( 59.2762, 53.333, 22.4608, 0.37 ) }
    dend_72 { pt3dadd( 59.6603, 54.1985, 23.4094, 0.52 ) }
    dend_72 { pt3dadd( 59.937, 54.9823, 24.1105, 0.88 ) }
    dend_72 { pt3dadd( 60.3507, 56.2257, 25.1871, 0.59 ) }
    dend_72 { pt3dadd( 60.556, 56.8555, 25.7269, 0.59 ) }
    dend_72 { pt3dadd( 60.9366, 57.962, 26.5893, 0.81 ) }
    dend_72 { pt3dadd( 61.3553, 59.0482, 27.2968, 0.52 ) }
    dend_72 { pt3dadd( 61.6882, 59.7487, 27.6662, 0.52 ) }
    dend_72 { pt3dadd( 62.1046, 60.4396, 27.9948, 0.74 ) }
    dend_72 { pt3dadd( 62.3575, 60.7613, 28.1432, 0.74 ) }
    dend_72 { pt3dadd( 63.3594, 61.711, 28.6901, 0.29 ) }
    dend_72 { pt3dadd( 63.9585, 62.1561, 28.9791, 0.29 ) }
    dend_72 { pt3dadd( 64.7556, 62.7196, 29.4533, 0.29 ) }
    dend_72 { pt3dadd( 65.5448, 63.3606, 30.2034, 0.29 ) }
    dend_72 { pt3dadd( 65.8604, 63.6967, 30.6755, 0.29 ) }
    dend_72 { pt3dadd( 66.1686, 64.1273, 31.3543, 0.29 ) }
    dend_72 { pt3dadd( 66.3966, 64.6088, 32.164, 0.37 ) }
    dend_72 { pt3dadd( 66.5905, 65.3389, 33.291, 0.37 ) }
    dend_72 { pt3dadd( 66.6953, 66.1622, 34.3125, 0.59 ) }
    dend_72 { pt3dadd( 66.7124, 66.5267, 34.6799, 0.29 ) }
    dend_72 { pt3dadd( 66.7159, 67.0651, 35.1189, 0.29 ) }
    dend_72 { pt3dadd( 66.708, 67.9778, 35.7976, 0.66 ) }
    dend_72 { pt3dadd( 66.7211, 68.3498, 36.0456, 0.66 ) }
    dend_72 { pt3dadd( 66.7763, 69.3501, 36.6975, 0.29 ) }
    dend_72 { pt3dadd( 66.8007, 70.0778, 37.1938, 0.29 ) }
    dend_72 { pt3dadd( 66.8075, 71.2321, 38.007, 0.29 ) }
    dend_72 { pt3dadd( 66.796, 72.6188, 39.0015, 0.37 ) }
    dend_72 { pt3dadd( 66.8075, 73.3835, 39.5791, 0.29 ) }
    dend_72 { pt3dadd( 66.8595, 74.2216, 40.2933, 0.29 ) }
    dend_72 { pt3dadd( 66.9625, 75.0436, 41.0952, 0.29 ) }
    dend_72 { pt3dadd( 67.0928, 75.6016, 41.7045, 0.29 ) }
    dend_72 { pt3dadd( 67.1703, 75.7793, 41.9173, 0.74 ) }
    dend_72 { pt3dadd( 67.3933, 76.1564, 42.3335, 0.74 ) }
    dend_72 { pt3dadd( 67.8827, 76.8912, 43.096, 0.29 ) }
    dend_72 { pt3dadd( 68.2917, 77.4466, 43.6042, 0.29 ) }
    dend_72 { pt3dadd( 68.8606, 78.158, 44.2075, 0.29 ) }
    dend_72 { pt3dadd( 69.278, 78.6521, 44.6336, 0.29 ) }
    dend_72 { pt3dadd( 69.8653, 79.2442, 45.1358, 0.29 ) }
    dend_72 { pt3dadd( 70.5339, 79.7862, 45.5808, 0.52 ) }
    dend_72 { pt3dadd( 70.9021, 80.0476, 45.7794, 0.66 ) }
    dend_72 { pt3dadd( 71.6502, 80.486, 46.1163, 0.29 ) }
    dend_72 { pt3dadd( 72.4356, 80.8615, 46.4186, 0.29 ) }
    dend_72 { pt3dadd( 73.5066, 81.3223, 46.8142, 0.22 ) }
    dend_72 { pt3dadd( 74.2412, 81.532, 47.0618, 0.22 ) }
    dend_72 { pt3dadd( 77.2653, 88.4308, 53.4486, 0.22 ) }
    dend_72 { pt3dadd( 80.8101, 94.7792, 60.1597, 0.22 ) }
    dend_72 { pt3dadd( 84.162, 101.16, 66.9375, 0.22 ) }
    dend_72 { pt3dadd( 85.8114, 107.638, 74.2265, 0.22 ) }
    dend_72 { pt3dadd( 86.3075, 114.347, 81.4657, 0.22 ) }
    dend_72 { pt3dadd( 85.7151, 120.744, 88.9894, 0.22 ) }
    dend_72 { pt3dadd( 85.2779, 126.057, 97.3626, 0.22 ) }
    dend_72 { pt3dadd( 84.0412, 132.411, 104.846, 0.22 ) }
    dend_72 { pt3dadd( 83.1642, 139.228, 111.942, 0.22 ) }
    dend_72 { pt3dadd( 83.5257, 146.799, 118.232, 0.22 ) }
    dend_72 { pt3dadd( 82.0772, 153.707, 125.138, 0.22 ) }
    dend_72 { pt3dadd( 81.1738, 160.892, 131.838, 0.22 ) }
    dend_72 { pt3dadd( 81.1493, 168.241, 138.409, 0.22 ) }
    dend_72 { pt3dadd( 79.1442, 174.191, 146.074, 0.22 ) }
    dend_72 { pt3dadd( 77.7059, 180.515, 153.548, 0.22 ) }
    dend_72 { pt3dadd( 74.0306, 186.464, 160.566, 0.22 ) }
    dend_72 { pt3dadd( 71.358, 192.13, 168.253, 0.22 ) }
    dend_72 { pt3dadd( 69.5809, 198.447, 175.66, 0.22 ) }
    dend_72 { pt3dadd( 69.2879, 204.764, 183.272, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 72/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -81.2588, 28.6496, -109.363, 0.44 ) }
    dend_66 { pt3dadd( -83.8556, 27.7095, -108.879, 0.44 ) }
    dend_66 { pt3dadd( -85.1172, 27.3042, -108.793, 0.44 ) }
    dend_66 { pt3dadd( -87.3321, 26.6835, -108.808, 0.44 ) }
    dend_66 { pt3dadd( -89.1211, 26.2501, -108.956, 0.88 ) }
    dend_66 { pt3dadd( -90.7086, 25.8781, -109.194, 0.88 ) }
    dend_66 { pt3dadd( -92.4286, 25.4809, -109.494, 0.59 ) }
    dend_66 { pt3dadd( -94.8265, 24.952, -109.995, 0.59 ) }
    dend_66 { pt3dadd( -95.6634, 24.7714, -110.142, 0.59 ) }
    dend_66 { pt3dadd( -97.8361, 24.2991, -110.386, 0.44 ) }
    dend_66 { pt3dadd( -100.719, 23.6354, -110.474, 0.44 ) }
    dend_66 { pt3dadd( -103.728, 22.9244, -110.309, 0.74 ) }
    dend_66 { pt3dadd( -106.22, 22.3398, -109.957, 0.96 ) }
    dend_66 { pt3dadd( -107.47, 22.0679, -109.677, 0.96 ) }
    dend_66 { pt3dadd( -109.961, 21.586, -109.026, 0.37 ) }
    dend_66 { pt3dadd( -111.582, 21.3418, -108.553, 0.37 ) }
    dend_66 { pt3dadd( -113.307, 21.1458, -107.982, 0.37 ) }
    dend_66 { pt3dadd( -115.103, 21.0062, -107.39, 0.81 ) }
    dend_66 { pt3dadd( -117.166, 20.9291, -106.828, 0.88 ) }
    dend_66 { pt3dadd( -118.754, 20.9043, -106.503, 0.88 ) }
    dend_66 { pt3dadd( -120.809, 20.9476, -106.261, 1.11 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 93/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -81.2588, 28.6496, -109.363, 0.66 ) }
    dend_65 { pt3dadd( -82.1181, 29.4933, -111.625, 0.66 ) }
    dend_65 { pt3dadd( -82.5204, 29.7744, -112.786, 0.66 ) }
    dend_65 { pt3dadd( -83.0684, 30.1164, -115.139, 0.81 ) }
    dend_65 { pt3dadd( -83.3153, 30.22, -116.468, 0.96 ) }
    dend_65 { pt3dadd( -83.6202, 30.3103, -118.175, 1.18 ) }
    dend_65 { pt3dadd( -84.0437, 30.4256, -120.546, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_65 { pt3dadd( -84.5301, 30.4927, -123.467, 1.62 ) }
    dend_65 { pt3dadd( -85.3999, 30.5511, -128.618, 1.11 ) }
    dend_65 { pt3dadd( -85.9903, 30.5969, -132.18, 0.96 ) }
    dend_65 { pt3dadd( -86.1853, 30.6308, -133.362, 0.96 ) }
    dend_65 { pt3dadd( -86.5172, 30.7532, -135.321, 0.88 ) }
    dend_65 { pt3dadd( -86.8349, 30.9582, -137.235, 1.11 ) }
    dend_65 { pt3dadd( -87.0556, 31.1718, -138.592, 1.33 ) }
    dend_65 { pt3dadd( -87.3206, 31.5902, -140.305, 1.33 ) }
    dend_65 { pt3dadd( -87.4907, 32.0892, -141.803, 1.4 ) }
    dend_65 { pt3dadd( -87.6623, 33.0382, -144.22, 1.62 ) }
    dend_65 { pt3dadd( -87.702, 33.5639, -145.347, 1.25 ) }
    dend_65 { pt3dadd( -87.7109, 34.7154, -147.382, 1.11 ) }
    dend_65 { pt3dadd( -87.6527, 36.264, -149.608, 0.81 ) }
    dend_65 { pt3dadd( -87.6054, 37.0491, -150.494, 0.66 ) }
    dend_65 { pt3dadd( -87.5676, 37.7743, -151.1, 0.66 ) }
    dend_65 { pt3dadd( -87.567, 38.5748, -151.62, 1.03 ) }
    dend_65 { pt3dadd( -87.6031, 39.2476, -152.089, 0.88 ) }
    dend_65 { pt3dadd( -87.6717, 39.8749, -152.596, 0.88 ) }
    dend_65 { pt3dadd( -87.8135, 40.8151, -153.511, 0.66 ) }
    dend_65 { pt3dadd( -87.9991, 41.7289, -154.583, 1.11 ) }
    dend_65 { pt3dadd( -88.2598, 42.6505, -155.903, 1.11 ) }
    dend_65 { pt3dadd( -88.907, 44.3025, -158.615, 0.44 ) }
    dend_65 { pt3dadd( -89.3038, 45.083, -159.976, 0.44 ) }
    dend_65 { pt3dadd( -89.518, 45.4232, -160.583, 0.66 ) }
    dend_65 { pt3dadd( -89.9092, 45.9568, -161.532, 0.66 ) }
    dend_65 { pt3dadd( -90.5651, 46.8019, -162.999, 0.66 ) }
    dend_65 { pt3dadd( -90.9004, 47.2647, -163.704, 0.74 ) }
    dend_65 { pt3dadd( -91.3652, 47.9569, -164.618, 0.88 ) }
    dend_65 { pt3dadd( -91.8666, 48.8901, -165.806, 0.88 ) }
    dend_65 { pt3dadd( -92.2666, 49.8664, -167.068, 0.59 ) }
    dend_65 { pt3dadd( -92.4613, 50.4768, -167.822, 0.59 ) }
    dend_65 { pt3dadd( -92.7082, 51.5097, -168.98, 0.59 ) }
    dend_65 { pt3dadd( -92.8243, 52.1962, -169.719, 0.81 ) }
    dend_65 { pt3dadd( -92.9382, 52.9526, -170.509, 0.81 ) }
    dend_65 { pt3dadd( -93.067, 53.661, -171.187, 0.59 ) }
    dend_65 { pt3dadd( -93.2281, 54.251, -171.742, 0.44 ) }
    dend_65 { pt3dadd( -93.4888, 54.9145, -172.433, 0.44 ) }
    dend_65 { pt3dadd( -93.7535, 55.4673, -173.04, 0.44 ) }
    dend_65 { pt3dadd( -94.1939, 56.3377, -174.039, 0.59 ) }
    dend_65 { pt3dadd( -94.4469, 56.778, -174.562, 0.81 ) }
    dend_65 { pt3dadd( -95.124, 57.7744, -175.883, 1.18 ) }
    dend_65 { pt3dadd( -96.0212, 58.8611, -177.574, 0.37 ) }
    dend_65 { pt3dadd( -96.3754, 59.1633, -178.168, 0.37 ) }
    dend_65 { pt3dadd( -96.7608, 59.3713, -178.716, 0.81 ) }
    dend_65 { pt3dadd( -97.2751, 59.5054, -179.34, 0.81 ) }
    dend_65 { pt3dadd( -98.1688, 59.5548, -180.291, 0.59 ) }
    dend_65 { pt3dadd( -98.9797, 59.4653, -181.014, 0.44 ) }
    dend_65 { pt3dadd( -99.9849, 59.2072, -181.784, 0.37 ) }
    dend_65 { pt3dadd( -100.678, 58.973, -182.3, 0.37 ) }
    dend_65 { pt3dadd( -101.879, 58.4819, -183.188, 0.74 ) }
    dend_65 { pt3dadd( -102.452, 58.2181, -183.617, 0.74 ) }
    // Section: dend_63, id: dend_63, parent: dend_55 (entry count 51/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -51.076, 95.7253, -103.688, 0.74 ) }
    dend_63 { pt3dadd( -51.2168, 98.5491, -106.376, 0.74 ) }
    dend_63 { pt3dadd( -51.2467, 99.3706, -107.231, 0.59 ) }
    dend_63 { pt3dadd( -51.2689, 100.264, -108.183, 0.74 ) }
    dend_63 { pt3dadd( -51.3205, 101.376, -109.471, 0.88 ) }
    dend_63 { pt3dadd( -51.3572, 101.993, -110.228, 0.88 ) }
    dend_63 { pt3dadd( -51.3885, 102.564, -110.923, 0.66 ) }
    dend_63 { pt3dadd( -51.4727, 103.941, -112.56, 0.88 ) }
    dend_63 { pt3dadd( -51.5176, 104.406, -113.143, 1.11 ) }
    dend_63 { pt3dadd( -51.6754, 105.779, -114.921, 0.88 ) }
    dend_63 { pt3dadd( -51.8093, 106.929, -116.354, 0.88 ) }
    dend_63 { pt3dadd( -51.8787, 107.563, -117.064, 0.37 ) }
    dend_63 { pt3dadd( -51.9779, 108.477, -117.929, 0.37 ) }
    dend_63 { pt3dadd( -52.0341, 109.297, -118.553, 0.74 ) }
    dend_63 { pt3dadd( -52.0342, 110.283, -119.192, 0.74 ) }
    dend_63 { pt3dadd( -51.9561, 111.144, -119.602, 0.81 ) }
    dend_63 { pt3dadd( -51.7958, 112.366, -120.093, 0.37 ) }
    dend_63 { pt3dadd( -51.6435, 113.407, -120.487, 0.52 ) }
    dend_63 { pt3dadd( -51.5474, 113.991, -120.679, 0.52 ) }
    dend_63 { pt3dadd( -51.3729, 114.901, -120.964, 0.52 ) }
    dend_63 { pt3dadd( -51.1782, 115.996, -121.286, 0.96 ) }
    dend_63 { pt3dadd( -51.0918, 116.695, -121.508, 0.96 ) }
    dend_63 { pt3dadd( -51.0683, 117.414, -121.774, 0.66 ) }
    dend_63 { pt3dadd( -51.1355, 118.188, -122.078, 0.66 ) }
    dend_63 { pt3dadd( -51.28, 119.126, -122.445, 0.52 ) }
    dend_63 { pt3dadd( -51.4428, 120.038, -122.799, 0.52 ) }
    dend_63 { pt3dadd( -51.5944, 120.839, -123.124, 0.52 ) }
    dend_63 { pt3dadd( -51.7281, 121.535, -123.395, 0.52 ) }
    dend_63 { pt3dadd( -51.9032, 122.415, -123.737, 0.52 ) }
    dend_63 { pt3dadd( -52.0108, 123.01, -123.974, 0.96 ) }
    dend_63 { pt3dadd( -52.0719, 123.495, -124.148, 0.96 ) }
    dend_63 { pt3dadd( -52.139, 124.74, -124.521, 0.37 ) }
    dend_63 { pt3dadd( -52.1431, 125.551, -124.733, 0.37 ) }
    dend_63 { pt3dadd( -52.1556, 126.47, -124.984, 0.59 ) }
    dend_63 { pt3dadd( -52.214, 127.743, -125.363, 0.59 ) }
    dend_63 { pt3dadd( -52.2981, 129.398, -125.866, 0.81 ) }
    dend_63 { pt3dadd( -52.326, 130.496, -126.184, 0.81 ) }
    dend_63 { pt3dadd( -52.3067, 131.446, -126.46, 1.03 ) }
    dend_63 { pt3dadd( -52.2191, 133.122, -126.956, 0.52 ) }
    dend_63 { pt3dadd( -52.1435, 134.274, -127.292, 0.44 ) }
    dend_63 { pt3dadd( -52.0826, 135.061, -127.51, 0.44 ) }
    dend_63 { pt3dadd( -51.9611, 136.042, -127.787, 0.81 ) }
    dend_63 { pt3dadd( -51.8041, 136.754, -127.975, 0.96 ) }
    dend_63 { pt3dadd( -51.4938, 137.628, -128.19, 0.52 ) }
    dend_63 { pt3dadd( -51.1005, 138.38, -128.352, 0.52 ) }
    dend_63 { pt3dadd( -50.6503, 139.09, -128.518, 0.37 ) }
    dend_63 { pt3dadd( -50.1574, 139.868, -128.752, 0.37 ) }
    dend_63 { pt3dadd( -49.7557, 140.526, -129.016, 0.59 ) }
    dend_63 { pt3dadd( -49.3643, 141.229, -129.365, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_63 { pt3dadd( -49.0376, 141.838, -129.748, 0.37 ) }
    dend_63 { pt3dadd( -48.8413, 142.226, -130.027, 0.37 ) }
    dend_63 { pt3dadd( -48.3971, 143.068, -130.669, 0.59 ) }
    dend_63 { pt3dadd( -48.0055, 143.751, -131.196, 0.74 ) }
    dend_63 { pt3dadd( -47.3983, 144.706, -131.932, 0.88 ) }
    dend_63 { pt3dadd( -47.0397, 145.139, -132.264, 1.03 ) }
    dend_63 { pt3dadd( -46.6328, 145.485, -132.533, 1.03 ) }
    dend_63 { pt3dadd( -45.7871, 146.023, -132.895, 0.66 ) }
    dend_63 { pt3dadd( -44.9894, 146.45, -133.201, 0.44 ) }
    dend_63 { pt3dadd( -44.4484, 146.722, -133.442, 0.44 ) }
    dend_63 { pt3dadd( -43.8317, 147.014, -133.777, 0.59 ) }
    dend_63 { pt3dadd( -42.8969, 147.467, -134.585, 0.59 ) }
    dend_63 { pt3dadd( -42.4388, 147.74, -135.255, 0.81 ) }
    dend_63 { pt3dadd( -41.5966, 148.363, -136.97, 1.03 ) }
    dend_63 { pt3dadd( -41.107, 148.726, -138.263, 1.18 ) }
    dend_63 { pt3dadd( -40.8246, 148.888, -139.201, 0.81 ) }
    dend_63 { pt3dadd( -40.1872, 149.126, -141.993, 1.11 ) }
    dend_63 { pt3dadd( -39.6412, 149.263, -144.993, 0.74 ) }
    dend_63 { pt3dadd( -39.4789, 149.318, -146.096, 0.74 ) }
    dend_63 { pt3dadd( -39.0443, 149.546, -149.749, 0.74 ) }
    dend_63 { pt3dadd( -38.5306, 149.849, -154.111, 0.74 ) }
    dend_63 { pt3dadd( -38.3185, 149.981, -156.051, 0.59 ) }
    dend_63 { pt3dadd( -38.1776, 150.081, -157.591, 0.59 ) }
    dend_63 { pt3dadd( -37.9948, 150.248, -160.679, 0.59 ) }
    dend_63 { pt3dadd( -38.0103, 150.418, -163.027, 0.59 ) }
    dend_63 { pt3dadd( -38.2271, 150.728, -165.189, 1.03 ) }
    dend_63 { pt3dadd( -38.3374, 150.867, -165.744, 1.03 ) }
    dend_63 { pt3dadd( -38.7184, 151.305, -167.117, 0.96 ) }
    dend_63 { pt3dadd( -39.439, 151.694, -168.33, 0.74 ) }
    dend_63 { pt3dadd( -40.1662, 151.941, -168.776, 0.74 ) }
    dend_63 { pt3dadd( -40.7748, 152.149, -168.965, 0.74 ) }
    dend_63 { pt3dadd( -41.8963, 152.574, -169.23, 0.52 ) }
    dend_63 { pt3dadd( -42.8049, 152.999, -169.458, 0.52 ) }
    dend_63 { pt3dadd( -43.44, 153.327, -169.642, 0.44 ) }
    dend_63 { pt3dadd( -44.3102, 153.779, -169.945, 0.81 ) }
    dend_63 { pt3dadd( -44.6214, 153.94, -170.075, 1.03 ) }
    dend_63 { pt3dadd( -45.888, 154.64, -170.728, 0.66 ) }
    dend_63 { pt3dadd( -46.6417, 155.145, -171.197, 0.81 ) }
    dend_63 { pt3dadd( -47.4013, 155.831, -171.791, 0.52 ) }
    dend_63 { pt3dadd( -47.8149, 156.344, -172.177, 0.52 ) }
    dend_63 { pt3dadd( -48.2376, 156.976, -172.62, 0.44 ) }
    dend_63 { pt3dadd( -48.7315, 157.772, -173.134, 0.44 ) }
    dend_63 { pt3dadd( -49.2449, 158.599, -173.587, 0.88 ) }
    dend_63 { pt3dadd( -49.6275, 159.235, -173.94, 1.11 ) }
    dend_63 { pt3dadd( -49.8035, 159.589, -174.168, 1.11 ) }
    dend_63 { pt3dadd( -50.2236, 160.635, -174.897, 0.52 ) }
    dend_63 { pt3dadd( -50.37, 161.116, -175.244, 0.52 ) }
    dend_63 { pt3dadd( -50.5839, 162.219, -176.153, 1.03 ) }
    dend_63 { pt3dadd( -50.6032, 163.127, -177.059, 1.18 ) }
    dend_63 { pt3dadd( -50.3984, 164.577, -178.545, 0.66 ) }
    dend_63 { pt3dadd( -50.1676, 165.461, -179.461, 0.44 ) }
    dend_63 { pt3dadd( -49.7973, 166.55, -180.485, 0.44 ) }
    dend_63 { pt3dadd( -49.3638, 167.756, -181.51, 0.88 ) }
    dend_63 { pt3dadd( -48.9188, 168.854, -182.482, 1.11 ) }
    dend_63 { pt3dadd( -48.5202, 169.797, -183.305, 0.81 ) }
    dend_63 { pt3dadd( -48.2296, 170.438, -183.876, 0.81 ) }
    dend_63 { pt3dadd( -47.7175, 171.616, -184.985, 0.81 ) }
    dend_63 { pt3dadd( -47.4024, 172.473, -185.762, 1.25 ) }
    dend_63 { pt3dadd( -46.8586, 174.405, -187.44, 0.74 ) }
    dend_63 { pt3dadd( -46.6177, 175.339, -188.32, 0.59 ) }
    dend_63 { pt3dadd( -46.3806, 176.095, -189.173, 0.59 ) }
    dend_63 { pt3dadd( -46.2352, 176.471, -189.644, 0.52 ) }
    dend_63 { pt3dadd( -45.9777, 176.952, -190.311, 0.74 ) }
    dend_63 { pt3dadd( -45.5554, 177.567, -191.138, 0.74 ) }
    dend_63 { pt3dadd( -45.1117, 178.086, -191.723, 0.52 ) }
    dend_63 { pt3dadd( -44.4831, 178.534, -192.339, 0.66 ) }
    dend_63 { pt3dadd( -43.8711, 178.79, -192.8, 0.66 ) }
    dend_63 { pt3dadd( -42.8755, 179.113, -193.439, 0.52 ) }
    dend_63 { pt3dadd( -42.0955, 179.327, -193.857, 0.66 ) }
    dend_63 { pt3dadd( -41.2866, 179.503, -194.241, 0.81 ) }
    dend_63 { pt3dadd( -40.0772, 179.633, -194.883, 0.59 ) }
    dend_63 { pt3dadd( -39.2322, 179.679, -195.433, 0.59 ) }
    dend_63 { pt3dadd( -38.5557, 179.72, -195.94, 0.88 ) }
    dend_63 { pt3dadd( -37.6453, 179.825, -196.702, 0.66 ) }
    dend_63 { pt3dadd( -36.6672, 180.04, -197.591, 0.74 ) }
    dend_63 { pt3dadd( -35.1791, 180.618, -199.011, 1.03 ) }
    dend_63 { pt3dadd( -34.2275, 181.189, -200.033, 0.74 ) }
    dend_63 { pt3dadd( -33.7277, 181.611, -200.69, 0.59 ) }
    dend_63 { pt3dadd( -33.3885, 182.023, -201.293, 0.74 ) }
    dend_63 { pt3dadd( -33.0855, 182.603, -202.009, 0.29 ) }
    dend_63 { pt3dadd( -32.7414, 183.566, -202.958, 0.29 ) }
    dend_63 { pt3dadd( -32.5243, 184.265, -203.538, 0.74 ) }
    dend_63 { pt3dadd( -32.2472, 185.087, -204.309, 0.88 ) }
    dend_63 { pt3dadd( -31.9878, 185.806, -205.094, 0.88 ) }
    dend_63 { pt3dadd( -31.8182, 186.282, -205.706, 0.37 ) }
    dend_63 { pt3dadd( -31.6702, 186.675, -206.248, 0.29 ) }
    dend_63 { pt3dadd( -31.4652, 187.126, -206.94, 0.29 ) }
    dend_63 { pt3dadd( -30.9235, 187.993, -208.285, 0.52 ) }
    dend_63 { pt3dadd( -30.7859, 188.164, -208.557, 0.74 ) }
    dend_63 { pt3dadd( -30.2031, 188.848, -209.708, 0.52 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 90/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -51.076, 95.7253, -103.688, 0.81 ) }
    dend_56 { pt3dadd( -52.0345, 95.8976, -104.237, 0.81 ) }
    dend_56 { pt3dadd( -52.7753, 96.1103, -104.665, 0.81 ) }
    dend_56 { pt3dadd( -53.695, 96.4327, -105.121, 0.81 ) }
    dend_56 { pt3dadd( -54.4939, 96.7518, -105.533, 0.81 ) }
    dend_56 { pt3dadd( -55.1393, 97.0429, -105.856, 0.81 ) }
    dend_56 { pt3dadd( -56.0598, 97.5058, -106.303, 0.66 ) }
    dend_56 { pt3dadd( -56.98, 98.1116, -106.753, 0.59 ) }
    dend_56 { pt3dadd( -58.1158, 99.0572, -107.398, 0.96 ) }
    dend_56 { pt3dadd( -58.7559, 99.7305, -107.851, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_56 { pt3dadd( -59.4373, 100.551, -108.413, 0.66 ) }
    dend_56 { pt3dadd( -59.9744, 101.23, -108.891, 0.96 ) }
    dend_56 { pt3dadd( -60.7396, 102.238, -109.633, 0.96 ) }
    dend_56 { pt3dadd( -61.8156, 103.755, -110.793, 0.74 ) }
    dend_56 { pt3dadd( -62.3007, 104.492, -111.448, 0.74 ) }
    dend_56 { pt3dadd( -62.6768, 105.115, -112.046, 0.52 ) }
    dend_56 { pt3dadd( -62.9601, 105.684, -112.68, 0.52 ) }
    dend_56 { pt3dadd( -63.2452, 106.368, -113.52, 0.52 ) }
    dend_56 { pt3dadd( -63.3973, 106.715, -113.988, 0.81 ) }
    dend_56 { pt3dadd( -63.9606, 107.751, -115.339, 1.18 ) }
    dend_56 { pt3dadd( -64.3512, 108.347, -116.158, 0.66 ) }
    dend_56 { pt3dadd( -64.7275, 108.909, -116.946, 0.66 ) }
    dend_56 { pt3dadd( -64.9045, 109.178, -117.308, 0.66 ) }
    dend_56 { pt3dadd( -65.2358, 109.766, -118.091, 0.81 ) }
    dend_56 { pt3dadd( -65.5735, 110.34, -118.969, 0.52 ) }
    dend_56 { pt3dadd( -65.8252, 110.76, -119.618, 0.52 ) }
    dend_56 { pt3dadd( -66.113, 111.13, -120.363, 0.52 ) }
    dend_56 { pt3dadd( -66.5428, 111.567, -121.441, 0.96 ) }
    dend_56 { pt3dadd( -67.2982, 112.19, -123.335, 1.4 ) }
    dend_56 { pt3dadd( -67.9725, 112.672, -125.053, 1.62 ) }
    dend_56 { pt3dadd( -68.5081, 113.008, -126.379, 1.62 ) }
    dend_56 { pt3dadd( -69.4783, 113.496, -128.525, 0.88 ) }
    dend_56 { pt3dadd( -69.9851, 113.669, -129.473, 0.88 ) }
    dend_56 { pt3dadd( -70.5259, 113.748, -130.302, 0.88 ) }
    dend_56 { pt3dadd( -71.3392, 113.734, -131.319, 0.74 ) }
    dend_56 { pt3dadd( -72.0031, 113.672, -132.058, 0.59 ) }
    dend_56 { pt3dadd( -72.6877, 113.601, -132.86, 0.59 ) }
    dend_56 { pt3dadd( -73.372, 113.607, -133.703, 0.59 ) }
    dend_56 { pt3dadd( -74.0517, 113.652, -134.674, 0.59 ) }
    dend_56 { pt3dadd( -74.5349, 113.729, -135.52, 0.59 ) }
    dend_56 { pt3dadd( -75.0744, 113.821, -136.631, 1.03 ) }
    dend_56 { pt3dadd( -76.0148, 114.031, -138.683, 1.4 ) }
    dend_56 { pt3dadd( -76.4597, 114.181, -139.704, 1.62 ) }
    dend_56 { pt3dadd( -77.0737, 114.515, -141.253, 1.84 ) }
    dend_56 { pt3dadd( -77.941, 115.217, -143.8, 2.06 ) }
    dend_56 { pt3dadd( -78.9026, 116.439, -147.551, 0.81 ) }
    dend_56 { pt3dadd( -79.0001, 116.676, -148.226, 0.81 ) }
    dend_56 { pt3dadd( -79.0589, 117.018, -149.124, 0.66 ) }
    dend_56 { pt3dadd( -79.0705, 117.625, -150.538, 0.59 ) }
    dend_56 { pt3dadd( -79.0277, 118.286, -151.824, 0.59 ) }
    dend_56 { pt3dadd( -78.919, 119.254, -153.293, 0.96 ) }
    dend_56 { pt3dadd( -78.785, 120.752, -155.09, 0.96 ) }
    dend_56 { pt3dadd( -78.8553, 121.481, -156.022, 0.88 ) }
    dend_56 { pt3dadd( -79.1663, 122.209, -157.041, 1.55 ) }
    dend_56 { pt3dadd( -79.4757, 122.547, -157.536, 1.55 ) }
    dend_56 { pt3dadd( -80.1676, 123.086, -158.286, 0.88 ) }
    dend_56 { pt3dadd( -81.0454, 123.681, -159.061, 0.59 ) }
    dend_56 { pt3dadd( -82.0725, 124.443, -159.877, 0.52 ) }
    dend_56 { pt3dadd( -82.6482, 124.855, -160.422, 0.81 ) }
    dend_56 { pt3dadd( -83.2225, 125.178, -161.065, 0.81 ) }
    dend_56 { pt3dadd( -83.6335, 125.353, -161.556, 0.66 ) }
    dend_56 { pt3dadd( -84.216, 125.524, -162.259, 0.66 ) }
    dend_56 { pt3dadd( -84.9161, 125.616, -162.996, 0.59 ) }
    dend_56 { pt3dadd( -86.1036, 125.754, -164.112, 0.44 ) }
    dend_56 { pt3dadd( -87.0496, 125.789, -164.926, 0.66 ) }
    dend_56 { pt3dadd( -87.6322, 125.727, -165.385, 0.88 ) }
    dend_56 { pt3dadd( -88.2576, 125.595, -165.847, 1.11 ) }
    dend_56 { pt3dadd( -89.5597, 125.187, -166.73, 0.96 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 58/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -12.7471, 70.127, 14.2577, 0.59 ) }
    dend_51 { pt3dadd( -14.718, 71.1277, 15.9263, 0.59 ) }
    dend_51 { pt3dadd( -15.6119, 71.5867, 16.6031, 0.59 ) }
    dend_51 { pt3dadd( -16.3249, 71.9794, 17.0849, 0.37 ) }
    dend_51 { pt3dadd( -16.9636, 72.3676, 17.4785, 0.44 ) }
    dend_51 { pt3dadd( -17.5746, 72.7654, 17.8298, 0.44 ) }
    dend_51 { pt3dadd( -18.2508, 73.2525, 18.1944, 0.74 ) }
    dend_51 { pt3dadd( -18.6578, 73.6113, 18.3363, 0.37 ) }
    dend_51 { pt3dadd( -19.3946, 74.3811, 18.6228, 0.52 ) }
    dend_51 { pt3dadd( -19.8566, 74.9451, 18.7975, 0.66 ) }
    dend_51 { pt3dadd( -20.0541, 75.2277, 18.8812, 0.66 ) }
    dend_51 { pt3dadd( -20.5467, 75.9882, 19.1105, 0.52 ) }
    dend_51 { pt3dadd( -20.9408, 76.6219, 19.3359, 0.74 ) }
    dend_51 { pt3dadd( -21.5508, 77.6074, 19.7298, 0.59 ) }
    dend_51 { pt3dadd( -22.0222, 78.3382, 20.0469, 0.29 ) }
    dend_51 { pt3dadd( -22.5493, 79.1294, 20.3906, 0.29 ) }
    dend_51 { pt3dadd( -22.9872, 79.8307, 20.6796, 0.52 ) }
    dend_51 { pt3dadd( -23.2701, 80.3355, 20.8585, 0.66 ) }
    dend_51 { pt3dadd( -23.5458, 80.8724, 21.0056, 0.66 ) }
    dend_51 { pt3dadd( -23.8751, 81.5494, 21.1252, 0.66 ) }
    dend_51 { pt3dadd( -24.3769, 82.5928, 21.2399, 0.81 ) }
    dend_51 { pt3dadd( -24.8711, 83.6559, 21.3084, 0.37 ) }
    dend_51 { pt3dadd( -25.2086, 84.4632, 21.3489, 0.37 ) }
    dend_51 { pt3dadd( -25.5204, 85.2815, 21.3926, 0.44 ) }
    dend_51 { pt3dadd( -25.7738, 86.0448, 21.4512, 0.44 ) }
    dend_51 { pt3dadd( -26.0681, 87.0576, 21.5262, 0.52 ) }
    dend_51 { pt3dadd( -26.3448, 88.032, 21.6275, 0.59 ) }
    dend_51 { pt3dadd( -26.6042, 88.8468, 21.7362, 0.59 ) }
    dend_51 { pt3dadd( -26.8332, 89.6239, 21.8677, 0.74 ) }
    dend_51 { pt3dadd( -26.9741, 90.3159, 21.9914, 0.74 ) }
    dend_51 { pt3dadd( -27.0572, 91.0457, 22.1249, 0.66 ) }
    dend_51 { pt3dadd( -27.0826, 91.6904, 22.2391, 0.52 ) }
    dend_51 { pt3dadd( -27.115, 92.4085, 22.3176, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -12.7471, 70.127, 14.2577, 0.81 ) }
    dend_48 { pt3dadd( -14.7758, 70.5869, 12.6532, 0.81 ) }
    dend_48 { pt3dadd( -15.4249, 70.7597, 12.1667, 0.96 ) }
    dend_48 { pt3dadd( -15.9656, 70.9344, 11.7326, 0.96 ) }
    dend_48 { pt3dadd( -16.4877, 71.1376, 11.2767, 0.81 ) }
    dend_48 { pt3dadd( -17.2641, 71.4998, 10.5213, 0.37 ) }
    dend_48 { pt3dadd( -17.6419, 71.6762, 10.1399, 0.37 ) }
    dend_48 { pt3dadd( -17.956, 71.8377, 9.82557, 0.66 ) }
    dend_48 { pt3dadd( -18.5208, 72.1574, 9.21204, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_48 { pt3dadd( -18.916, 72.4111, 8.78203, 0.81 ) }
    dend_48 { pt3dadd( -19.5668, 72.8655, 8.08366, 0.66 ) }
    dend_48 { pt3dadd( -20.0972, 73.2958, 7.48583, 0.37 ) }
    dend_48 { pt3dadd( -20.3976, 73.5798, 7.12722, 0.37 ) }
    dend_48 { pt3dadd( -20.7945, 74.0206, 6.62929, 0.37 ) }
    dend_48 { pt3dadd( -21.2056, 74.5893, 6.05545, 0.37 ) }
    dend_48 { pt3dadd( -21.3547, 74.8664, 5.79936, 0.37 ) }
    dend_48 { pt3dadd( -21.6719, 75.6571, 5.11819, 0.66 ) }
    dend_48 { pt3dadd( -21.8487, 76.2105, 4.66761, 0.66 ) }
    dend_48 { pt3dadd( -22.035, 76.8704, 4.16706, 0.66 ) }
    dend_48 { pt3dadd( -22.3354, 78.0536, 3.34796, 0.44 ) }
    dend_48 { pt3dadd( -22.4632, 78.5827, 3.03154, 0.29 ) }
    dend_48 { pt3dadd( -22.6343, 79.2653, 2.7053, 0.29 ) }
    dend_48 { pt3dadd( -22.8133, 79.937, 2.4715, 0.29 ) }
    dend_48 { pt3dadd( -23.0613, 80.8813, 2.23838, 0.59 ) }
    dend_48 { pt3dadd( -23.2566, 81.7001, 2.12177, 0.88 ) }
    dend_48 { pt3dadd( -23.4085, 82.3265, 2.08374, 0.88 ) }
    dend_48 { pt3dadd( -23.6534, 83.2934, 2.05252, 0.66 ) }
    dend_48 { pt3dadd( -23.8694, 84.2422, 2.03932, 0.66 ) }
    dend_48 { pt3dadd( -24.0754, 85.4189, 2.02597, 0.52 ) }
    dend_48 { pt3dadd( -24.2159, 86.5102, 2.04893, 0.52 ) }
    dend_48 { pt3dadd( -24.3015, 87.5407, 2.10257, 0.66 ) }
    dend_48 { pt3dadd( -24.3245, 88.3022, 2.16493, 0.88 ) }
    dend_48 { pt3dadd( -24.3105, 89.0688, 2.23483, 0.88 ) }
    dend_48 { pt3dadd( -24.2436, 90.2554, 2.3847, 0.44 ) }
    dend_48 { pt3dadd( -24.1488, 91.3641, 2.57663, 0.59 ) }
    dend_48 { pt3dadd( -24.035, 92.1993, 2.74115, 0.52 ) }
    dend_48 { pt3dadd( -23.9009, 92.957, 2.90423, 0.52 ) }
    dend_48 { pt3dadd( -23.723, 94.0179, 3.14658, 0.52 ) }
    dend_48 { pt3dadd( -23.639, 94.9329, 3.35414, 0.81 ) }
    dend_48 { pt3dadd( -23.6219, 95.5507, 3.48396, 1.03 ) }
    dend_48 { pt3dadd( -23.6127, 96.7786, 3.69669, 0.37 ) }
    dend_48 { pt3dadd( -23.6112, 97.8428, 3.8803, 0.37 ) }
    dend_48 { pt3dadd( -23.6107, 98.4952, 3.98453, 0.37 ) }
    dend_48 { pt3dadd( -23.6247, 99.5977, 4.13711, 0.37 ) }
    dend_48 { pt3dadd( -23.6579, 100.093, 4.17843, 0.37 ) }
    dend_48 { pt3dadd( -23.7483, 100.885, 4.21732, 0.66 ) }
    dend_48 { pt3dadd( -23.8323, 101.393, 4.23023, 0.66 ) }
    dend_48 { pt3dadd( -23.9909, 102.167, 4.23445, 0.44 ) }
    dend_48 { pt3dadd( -24.17, 103.003, 4.20626, 0.52 ) }
    dend_48 { pt3dadd( -24.3264, 103.708, 4.1677, 0.29 ) }
    dend_48 { pt3dadd( -24.5121, 104.408, 4.11939, 0.29 ) }
    dend_48 { pt3dadd( -24.7757, 105.298, 4.05155, 0.29 ) }
    dend_48 { pt3dadd( -25.103, 106.415, 3.95946, 0.29 ) }
    dend_48 { pt3dadd( -25.401, 107.41, 3.86336, 0.52 ) }
    dend_48 { pt3dadd( -25.6133, 108.107, 3.83146, 0.66 ) }
    dend_48 { pt3dadd( -25.7891, 108.652, 3.83471, 0.66 ) }
    dend_48 { pt3dadd( -26.2576, 109.971, 3.94619, 0.37 ) }
    dend_48 { pt3dadd( -26.7452, 111.247, 4.21201, 0.29 ) }
    dend_48 { pt3dadd( -27.0942, 112.115, 4.54697, 0.29 ) }
    dend_48 { pt3dadd( -27.6466, 113.272, 5.21951, 0.29 ) }
    dend_48 { pt3dadd( -27.9188, 113.795, 5.5993, 0.29 ) }
    dend_48 { pt3dadd( -28.2916, 114.48, 6.16982, 0.74 ) }
    dend_48 { pt3dadd( -28.7407, 115.265, 6.91579, 0.96 ) }
    dend_48 { pt3dadd( -29.1943, 116.058, 7.69387, 1.25 ) }
    dend_48 { pt3dadd( -29.6753, 116.951, 8.50258, 0.59 ) }
    dend_48 { pt3dadd( -29.9548, 117.457, 8.89468, 0.59 ) }
    dend_48 { pt3dadd( -30.3173, 118.092, 9.3348, 0.52 ) }
    dend_48 { pt3dadd( -30.6377, 118.647, 9.66102, 0.52 ) }
    dend_48 { pt3dadd( -30.9638, 119.268, 9.95613, 0.37 ) }
    dend_48 { pt3dadd( -31.2648, 119.913, 10.2417, 0.29 ) }
    dend_48 { pt3dadd( -31.6178, 120.662, 10.6257, 0.59 ) }
    dend_48 { pt3dadd( -31.9224, 121.313, 11.0787, 0.44 ) }
    dend_48 { pt3dadd( -32.1219, 121.791, 11.4694, 0.44 ) }
    dend_48 { pt3dadd( -32.4166, 122.603, 12.1623, 0.44 ) }
    dend_48 { pt3dadd( -32.6167, 123.265, 12.7212, 0.44 ) }
    dend_48 { pt3dadd( -32.8239, 124.048, 13.3374, 0.81 ) }
    dend_48 { pt3dadd( -33.207, 125.532, 14.4032, 0.59 ) }
    dend_48 { pt3dadd( -33.4505, 126.286, 14.9394, 0.74 ) }
    dend_48 { pt3dadd( -33.7274, 126.935, 15.4066, 0.37 ) }
    dend_48 { pt3dadd( -34.1225, 127.695, 15.9523, 0.29 ) }
    dend_48 { pt3dadd( -34.6104, 128.594, 16.5867, 0.29 ) }
    dend_48 { pt3dadd( -34.9205, 129.195, 16.9935, 0.44 ) }
    dend_48 { pt3dadd( -35.3178, 129.895, 17.4899, 0.59 ) }
    dend_48 { pt3dadd( -35.7875, 130.715, 18.1926, 0.74 ) }
    dend_48 { pt3dadd( -35.9158, 130.957, 18.4253, 0.74 ) }
    dend_48 { pt3dadd( -36.2027, 131.577, 19.0406, 0.37 ) }
    dend_48 { pt3dadd( -36.3341, 131.994, 19.3963, 0.29 ) }
    dend_48 { pt3dadd( -36.3795, 132.402, 19.6235, 0.29 ) }
    dend_48 { pt3dadd( -36.3966, 132.752, 19.7322, 0.37 ) }
    dend_48 { pt3dadd( -36.4555, 133.294, 19.8149, 0.52 ) }
    dend_48 { pt3dadd( -36.597, 133.917, 19.8795, 0.22 ) }
    dend_48 { pt3dadd( -36.8629, 134.639, 19.9532, 0.22 ) }
    dend_48 { pt3dadd( -37.2618, 135.512, 20.1, 0.22 ) }
    dend_48 { pt3dadd( -37.5396, 136.119, 20.2539, 0.22 ) }
    dend_48 { pt3dadd( -37.857, 136.779, 20.5148, 0.29 ) }
    dend_48 { pt3dadd( -38.1858, 137.384, 20.8372, 0.37 ) }
    dend_48 { pt3dadd( -38.5218, 137.989, 21.2124, 0.37 ) }
    dend_48 { pt3dadd( -38.8849, 138.69, 21.6832, 0.22 ) }
    dend_48 { pt3dadd( -39.1791, 139.337, 22.182, 0.22 ) }
    dend_48 { pt3dadd( -39.3282, 139.878, 22.6118, 0.22 ) }
    dend_48 { pt3dadd( -39.4153, 140.554, 23.1271, 0.22 ) }
    dend_48 { pt3dadd( -39.4459, 141.202, 23.5699, 0.22 ) }
    dend_48 { pt3dadd( -39.4413, 141.907, 23.9892, 0.22 ) }
    dend_48 { pt3dadd( -39.3581, 142.945, 24.5378, 0.59 ) }
    dend_48 { pt3dadd( -39.2417, 143.686, 24.9667, 0.74 ) }
    dend_48 { pt3dadd( -39.1078, 144.226, 25.2875, 0.74 ) }
    dend_48 { pt3dadd( -38.8877, 144.865, 25.6737, 0.44 ) }
    dend_48 { pt3dadd( -38.6774, 145.402, 26.0061, 0.22 ) }
    dend_48 { pt3dadd( -38.4213, 145.989, 26.363, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_48 { pt3dadd( -37.8086, 147.205, 27.0557, 0.29 ) }
    dend_48 { pt3dadd( -37.3571, 147.974, 27.5253, 0.29 ) }
    dend_48 { pt3dadd( -36.8249, 148.773, 28.0524, 0.29 ) }
    dend_48 { pt3dadd( -36.4657, 149.253, 28.3829, 0.52 ) }
    dend_48 { pt3dadd( -36.1271, 149.707, 28.6873, 0.66 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 5/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 80.4258, 115.642, -3.72085, 0.59 ) }
    dend_46 { pt3dadd( 81.5799, 115.986, -3.94609, 0.59 ) }
    dend_46 { pt3dadd( 82.4277, 116.173, -4.05207, 0.59 ) }
    dend_46 { pt3dadd( 83.3489, 116.288, -4.11903, 0.74 ) }
    dend_46 { pt3dadd( 84.6643, 116.403, -4.1955, 0.81 ) }
    dend_46 { pt3dadd( 85.7687, 116.494, -4.25264, 0.96 ) }
    dend_46 { pt3dadd( 86.5958, 116.565, -4.30488, 1.25 ) }
    dend_46 { pt3dadd( 87.3239, 116.611, -4.3662, 1.03 ) }
    dend_46 { pt3dadd( 88.3826, 116.633, -4.45161, 0.52 ) }
    dend_46 { pt3dadd( 89.1672, 116.606, -4.51959, 0.52 ) }
    dend_46 { pt3dadd( 89.8555, 116.527, -4.58392, 0.96 ) }
    dend_46 { pt3dadd( 90.8345, 116.326, -4.71448, 0.96 ) }
    dend_46 { pt3dadd( 91.7508, 116.06, -4.88094, 0.81 ) }
    dend_46 { pt3dadd( 92.8831, 115.657, -5.11993, 0.66 ) }
    dend_46 { pt3dadd( 93.9768, 115.207, -5.36293, 0.88 ) }
    dend_46 { pt3dadd( 95.0509, 114.716, -5.60813, 0.59 ) }
    dend_46 { pt3dadd( 95.6973, 114.42, -5.75631, 0.44 ) }
    dend_46 { pt3dadd( 96.4482, 114.128, -5.9295, 0.44 ) }
    dend_46 { pt3dadd( 97.3487, 113.915, -6.14897, 0.66 ) }
    dend_46 { pt3dadd( 98.0122, 113.908, -6.31256, 0.66 ) }
    dend_46 { pt3dadd( 98.6884, 114.022, -6.4721, 0.88 ) }
    dend_46 { pt3dadd( 99.4608, 114.234, -6.6624, 0.88 ) }
    dend_46 { pt3dadd( 100.637, 114.621, -6.944, 0.81 ) }
    dend_46 { pt3dadd( 101.647, 115.004, -7.19265, 0.29 ) }
    dend_46 { pt3dadd( 102.204, 115.236, -7.34065, 0.29 ) }
    dend_46 { pt3dadd( 103.052, 115.594, -7.5924, 0.74 ) }
    dend_46 { pt3dadd( 103.944, 115.95, -7.915, 1.18 ) }
    dend_46 { pt3dadd( 104.544, 116.18, -8.16505, 0.88 ) }
    dend_46 { pt3dadd( 105.45, 116.494, -8.56322, 0.88 ) }
    dend_46 { pt3dadd( 105.877, 116.639, -8.77237, 1.11 ) }
    dend_46 { pt3dadd( 107.166, 117.09, -9.44269, 0.59 ) }
    dend_46 { pt3dadd( 108.098, 117.449, -9.99026, 0.74 ) }
    dend_46 { pt3dadd( 108.799, 117.714, -10.2857, 0.52 ) }
    dend_46 { pt3dadd( 109.616, 118.018, -10.4623, 0.66 ) }
    dend_46 { pt3dadd( 110.602, 118.407, -10.4091, 0.52 ) }
    dend_46 { pt3dadd( 111.385, 118.765, -10.1721, 0.66 ) }
    dend_46 { pt3dadd( 112.573, 119.464, -9.55523, 1.11 ) }
    dend_46 { pt3dadd( 115.492, 121.585, -7.66196, 0.66 ) }
    dend_46 { pt3dadd( 116.138, 122.157, -7.16258, 0.44 ) }
    dend_46 { pt3dadd( 116.823, 122.912, -6.51133, 0.44 ) }
    dend_46 { pt3dadd( 117.344, 123.629, -5.91763, 0.44 ) }
    dend_46 { pt3dadd( 117.951, 124.72, -5.11369, 0.59 ) }
    dend_46 { pt3dadd( 118.214, 125.31, -4.74607, 0.81 ) }
    dend_46 { pt3dadd( 118.493, 126.063, -4.46979, 0.81 ) }
    dend_46 { pt3dadd( 118.822, 126.918, -4.10742, 0.59 ) }
    dend_46 { pt3dadd( 119.189, 127.767, -3.68864, 0.37 ) }
    dend_46 { pt3dadd( 119.56, 128.49, -3.32256, 0.74 ) }
    dend_46 { pt3dadd( 119.894, 128.977, -3.05825, 0.52 ) }
    dend_46 { pt3dadd( 120.413, 129.539, -2.73963, 0.52 ) }
    dend_46 { pt3dadd( 121.645, 130.562, -2.14968, 0.52 ) }
    dend_46 { pt3dadd( 122.179, 130.935, -1.94307, 0.52 ) }
    dend_46 { pt3dadd( 122.818, 131.363, -1.68607, 0.81 ) }
    dend_46 { pt3dadd( 123.22, 131.648, -1.52852, 0.81 ) }
    dend_46 { pt3dadd( 123.829, 132.121, -1.28912, 0.66 ) }
    dend_46 { pt3dadd( 124.341, 132.489, -1.11402, 0.66 ) }
    dend_46 { pt3dadd( 125.018, 132.903, -0.947243, 0.52 ) }
    dend_46 { pt3dadd( 125.832, 133.352, -0.731014, 0.52 ) }
    dend_46 { pt3dadd( 126.565, 133.712, -0.539282, 0.88 ) }
    dend_46 { pt3dadd( 127.114, 133.985, -0.416372, 1.25 ) }
    dend_46 { pt3dadd( 128.097, 134.492, -0.23109, 0.74 ) }
    dend_46 { pt3dadd( 129.082, 135.033, -0.0583293, 0.59 ) }
    dend_46 { pt3dadd( 130.125, 135.653, 0.0700215, 0.52 ) }
    dend_46 { pt3dadd( 130.794, 136.099, 0.115014, 0.52 ) }
    dend_46 { pt3dadd( 131.603, 136.72, 0.129744, 0.74 ) }
    dend_46 { pt3dadd( 132.305, 137.315, 0.110611, 0.74 ) }
    dend_46 { pt3dadd( 132.979, 137.931, 0.0707215, 0.66 ) }
    dend_46 { pt3dadd( 134.018, 138.863, -0.0161614, 0.66 ) }
    dend_46 { pt3dadd( 134.762, 139.51, -0.0912124, 0.44 ) }
    dend_46 { pt3dadd( 135.677, 140.272, -0.188815, 0.37 ) }
    dend_46 { pt3dadd( 136.376, 140.807, -0.264462, 0.37 ) }
    dend_46 { pt3dadd( 137.774, 141.807, -0.410018, 0.74 ) }
    dend_46 { pt3dadd( 138.415, 142.242, -0.464313, 0.96 ) }
    dend_46 { pt3dadd( 138.895, 142.556, -0.469602, 0.96 ) }
    dend_46 { pt3dadd( 139.635, 143.036, -0.427222, 1.03 ) }
    dend_46 { pt3dadd( 140.166, 143.364, -0.361815, 0.81 ) }
    dend_46 { pt3dadd( 141.019, 143.836, -0.224823, 1.03 ) }
    dend_46 { pt3dadd( 141.665, 144.129, -0.103715, 0.74 ) }
    dend_46 { pt3dadd( 142.766, 144.547, 0.109349, 0.52 ) }
    dend_46 { pt3dadd( 143.768, 144.871, 0.311953, 0.52 ) }
    dend_46 { pt3dadd( 144.639, 145.163, 0.490329, 0.44 ) }
    dend_46 { pt3dadd( 145.453, 145.449, 0.624321, 0.37 ) }
    dend_46 { pt3dadd( 146.129, 145.711, 0.702439, 0.52 ) }
    dend_46 { pt3dadd( 146.906, 146.094, 0.751582, 0.52 ) }
    dend_46 { pt3dadd( 147.657, 146.58, 0.749572, 0.37 ) }
    dend_46 { pt3dadd( 148.704, 147.41, 0.695216, 0.44 ) }
    dend_46 { pt3dadd( 149.48, 148.106, 0.698034, 0.44 ) }
    dend_46 { pt3dadd( 150.378, 148.995, 0.743311, 0.44 ) }
    dend_46 { pt3dadd( 151.089, 149.706, 0.789818, 0.44 ) }
    dend_46 { pt3dadd( 151.862, 150.415, 0.831375, 0.66 ) }
    dend_46 { pt3dadd( 152.476, 150.938, 0.834561, 0.88 ) }
    dend_46 { pt3dadd( 153.621, 151.911, 0.780772, 0.37 ) }
    dend_46 { pt3dadd( 154.443, 152.693, 0.69099, 0.29 ) }
    dend_46 { pt3dadd( 155.144, 153.419, 0.59238, 0.29 ) }
    dend_46 { pt3dadd( 155.953, 154.254, 0.392104, 0.66 ) }
    dend_46 { pt3dadd( 156.801, 155.119, 0.111325, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_46 { pt3dadd( 157.614, 155.899, -0.248039, 0.44 ) }
    dend_46 { pt3dadd( 158.38, 156.592, -0.660384, 0.59 ) }
    dend_46 { pt3dadd( 159.064, 157.201, -0.980892, 0.81 ) }
    dend_46 { pt3dadd( 160.248, 158.32, -1.38258, 0.81 ) }
    dend_46 { pt3dadd( 161.01, 159.08, -1.5465, 0.52 ) }
    dend_46 { pt3dadd( 162.027, 160.104, -1.62231, 0.29 ) }
    dend_46 { pt3dadd( 162.618, 160.755, -1.57943, 0.29 ) }
    dend_46 { pt3dadd( 163.477, 162.043, -1.40495, 0.59 ) }
    dend_46 { pt3dadd( 163.819, 162.951, -1.25245, 0.66 ) }
    dend_46 { pt3dadd( 163.938, 163.633, -1.12033, 0.81 ) }
    dend_46 { pt3dadd( 163.983, 164.502, -1.00321, 1.03 ) }
    dend_46 { pt3dadd( 163.977, 165.322, -0.940741, 1.03 ) }
    dend_46 { pt3dadd( 163.977, 166.463, -0.998631, 0.66 ) }
    dend_46 { pt3dadd( 164.024, 167.304, -1.17394, 0.66 ) }
    dend_46 { pt3dadd( 164.145, 168.052, -1.39206, 0.74 ) }
    dend_46 { pt3dadd( 164.367, 168.86, -1.71451, 0.74 ) }
    dend_46 { pt3dadd( 164.703, 169.696, -2.11148, 0.74 ) }
    dend_46 { pt3dadd( 165.103, 170.491, -2.50616, 0.59 ) }
    dend_46 { pt3dadd( 165.382, 170.983, -2.75048, 0.59 ) }
    dend_46 { pt3dadd( 165.908, 171.87, -3.21424, 0.74 ) }
    dend_46 { pt3dadd( 166.694, 173.095, -4.00278, 0.59 ) }
    dend_46 { pt3dadd( 167.092, 173.677, -4.43149, 0.37 ) }
    dend_46 { pt3dadd( 167.548, 174.346, -4.9517, 0.74 ) }
    dend_46 { pt3dadd( 167.956, 174.99, -5.44704, 0.74 ) }
    dend_46 { pt3dadd( 168.424, 175.778, -6.02609, 0.37 ) }
    dend_46 { pt3dadd( 169.215, 177.082, -6.93215, 0.29 ) }
    dend_46 { pt3dadd( 169.575, 177.623, -7.24418, 0.37 ) }
    dend_46 { pt3dadd( 169.956, 178.166, -7.52891, 0.37 ) }
    dend_46 { pt3dadd( 170.344, 178.644, -7.7443, 0.29 ) }
    dend_46 { pt3dadd( 170.784, 179.118, -7.90125, 0.52 ) }
    dend_46 { pt3dadd( 172.008, 180.268, -8.15783, 0.66 ) }
    dend_46 { pt3dadd( 172.832, 180.999, -8.2487, 0.88 ) }
    dend_46 { pt3dadd( 173.152, 181.25, -8.28099, 0.88 ) }
    dend_46 { pt3dadd( 173.95, 181.786, -8.34952, 0.88 ) }
    dend_46 { pt3dadd( 174.548, 182.126, -8.39413, 0.88 ) }
    dend_46 { pt3dadd( 175.427, 182.58, -8.45474, 0.59 ) }
    dend_46 { pt3dadd( 176.497, 183.13, -8.54701, 0.52 ) }
    dend_46 { pt3dadd( 177.304, 183.583, -8.64539, 0.59 ) }
    dend_46 { pt3dadd( 177.917, 183.977, -8.73431, 0.74 ) }
    dend_46 { pt3dadd( 178.634, 184.498, -8.8493, 0.74 ) }
    dend_46 { pt3dadd( 179.313, 185.061, -8.98662, 0.52 ) }
    dend_46 { pt3dadd( 180.111, 185.83, -9.1854, 0.81 ) }
    dend_46 { pt3dadd( 180.511, 186.25, -9.30914, 0.81 ) }
    dend_46 { pt3dadd( 181.203, 187.076, -9.54995, 0.44 ) }
    dend_46 { pt3dadd( 181.832, 187.954, -9.78371, 0.44 ) }
    dend_46 { pt3dadd( 182.398, 188.86, -9.99524, 0.59 ) }
    dend_46 { pt3dadd( 182.966, 189.885, -10.1953, 0.74 ) }
    dend_46 { pt3dadd( 183.423, 190.861, -10.3427, 0.88 ) }
    dend_46 { pt3dadd( 183.631, 191.4, -10.4118, 0.96 ) }
    dend_46 { pt3dadd( 183.899, 192.276, -10.5075, 0.59 ) }
    dend_46 { pt3dadd( 184.022, 192.726, -10.5104, 0.59 ) }
    dend_46 { pt3dadd( 184.234, 193.482, -10.4395, 0.29 ) }
    dend_46 { pt3dadd( 184.565, 194.74, -10.2682, 0.59 ) }
    dend_46 { pt3dadd( 184.789, 195.614, -10.1181, 0.66 ) }
    dend_46 { pt3dadd( 185.123, 196.766, -9.90456, 0.66 ) }
    dend_46 { pt3dadd( 185.643, 198.252, -9.59949, 0.59 ) }
    dend_46 { pt3dadd( 185.974, 199.043, -9.42922, 0.88 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 57/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 80.4258, 115.642, -3.72085, 0.22 ) }
    dend_43 { pt3dadd( 79.952, 116.242, -3.24672, 0.22 ) }
    dend_43 { pt3dadd( 79.3052, 116.993, -2.58997, 0.22 ) }
    dend_43 { pt3dadd( 78.881, 117.441, -2.15531, 0.22 ) }
    dend_43 { pt3dadd( 78.2126, 118.148, -1.47051, 0.37 ) }
    dend_43 { pt3dadd( 77.5241, 118.876, -0.76509, 0.52 ) }
    dend_43 { pt3dadd( 77.0328, 119.395, -0.261767, 0.52 ) }
    dend_43 { pt3dadd( 76.5472, 119.858, 0.260016, 0.29 ) }
    dend_43 { pt3dadd( 76.1963, 120.144, 0.624116, 0.37 ) }
    dend_43 { pt3dadd( 71.3385, 125.458, 7.45757, 0.37 ) }
    dend_43 { pt3dadd( 65.828, 131.603, 12.9264, 0.37 ) }
    dend_43 { pt3dadd( 61.7418, 139.113, 17.8235, 0.37 ) }
    dend_43 { pt3dadd( 57.2379, 147.056, 21.4765, 0.37 ) }
    dend_43 { pt3dadd( 54.5212, 155.441, 25.7959, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 71/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -127.878, 25.5662, 24.2022, 0.29 ) }
    dend_37 { pt3dadd( -128.768, 25.0983, 24.7853, 0.29 ) }
    dend_37 { pt3dadd( -130.047, 24.3587, 25.6094, 0.29 ) }
    dend_37 { pt3dadd( -130.428, 24.122, 25.8373, 0.29 ) }
    dend_37 { pt3dadd( -131.049, 23.6984, 26.2047, 0.44 ) }
    dend_37 { pt3dadd( -131.638, 23.2759, 26.5397, 0.44 ) }
    dend_37 { pt3dadd( -132.324, 22.7892, 26.9384, 0.29 ) }
    dend_37 { pt3dadd( -133.451, 22.0222, 27.5893, 0.22 ) }
    dend_37 { pt3dadd( -134.127, 21.5826, 27.9371, 0.22 ) }
    dend_37 { pt3dadd( -134.633, 21.2952, 28.1982, 0.22 ) }
    dend_37 { pt3dadd( -135.423, 20.9234, 28.5925, 0.22 ) }
    dend_37 { pt3dadd( -136.188, 20.6283, 28.9913, 0.37 ) }
    dend_37 { pt3dadd( -136.664, 20.4788, 29.2415, 0.37 ) }
    dend_37 { pt3dadd( -137.211, 20.3277, 29.5445, 0.22 ) }
    dend_37 { pt3dadd( -137.912, 20.1394, 29.9532, 0.29 ) }
    dend_37 { pt3dadd( -138.507, 19.9572, 30.3322, 0.29 ) }
    dend_37 { pt3dadd( -139.364, 19.6443, 30.8877, 0.44 ) }
    dend_37 { pt3dadd( -139.911, 19.3959, 31.2274, 0.44 ) }
    dend_37 { pt3dadd( -140.695, 19.0053, 31.6899, 0.29 ) }
    dend_37 { pt3dadd( -141.429, 18.5906, 32.1212, 0.29 ) }
    dend_37 { pt3dadd( -142.397, 18.0325, 32.6814, 0.29 ) }
    dend_37 { pt3dadd( -142.992, 17.7122, 32.9897, 0.52 ) }
    dend_37 { pt3dadd( -143.473, 17.4847, 33.1954, 0.52 ) }
    dend_37 { pt3dadd( -144.201, 17.1846, 33.4672, 0.29 ) }
    dend_37 { pt3dadd( -145.43, 16.7288, 33.8442, 0.29 ) }
    dend_37 { pt3dadd( -146.409, 16.3968, 34.1665, 0.29 ) }
    dend_37 { pt3dadd( -147.415, 16.0872, 34.5485, 0.29 ) }
    dend_37 { pt3dadd( -148.052, 15.8981, 34.8488, 0.29 ) }
    dend_37 { pt3dadd( -148.628, 15.7193, 35.1588, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_37 { pt3dadd( -148.983, 15.5965, 35.3814, 0.29 ) }
    dend_37 { pt3dadd( -150.303, 15.086, 36.2769, 0.29 ) }
    dend_37 { pt3dadd( -151.232, 14.6009, 36.9887, 0.59 ) }
    dend_37 { pt3dadd( -151.633, 14.3199, 37.3305, 0.59 ) }
    dend_37 { pt3dadd( -152.181, 13.8193, 37.8143, 0.22 ) }
    dend_37 { pt3dadd( -152.688, 13.2602, 38.2481, 0.22 ) }
    dend_37 { pt3dadd( -153.26, 12.5727, 38.6485, 0.22 ) }
    dend_37 { pt3dadd( -153.558, 12.1725, 38.8081, 0.44 ) }
    dend_37 { pt3dadd( -153.842, 11.7736, 38.9227, 0.44 ) }
    dend_37 { pt3dadd( -154.164, 11.3039, 39.0404, 0.29 ) }
    dend_37 { pt3dadd( -154.593, 10.6582, 39.161, 0.29 ) }
    dend_37 { pt3dadd( -155.168, 9.68436, 39.1798, 0.29 ) }
    dend_37 { pt3dadd( -163.654, 6.58811, 43.411, 0.29 ) }
    dend_37 { pt3dadd( -171.325, 4.67587, 49.5182, 0.29 ) }
    dend_37 { pt3dadd( -179.007, 1.34251, 54.9321, 0.29 ) }
    dend_37 { pt3dadd( -186.085, -1.8476, 61.1922, 0.29 ) }
    dend_37 { pt3dadd( -192.918, -5.74337, 67.3031, 0.29 ) }
    dend_37 { pt3dadd( -200.538, -8.92138, 72.8988, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 18/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -127.878, 25.5662, 24.2022, 0.66 ) }
    dend_34 { pt3dadd( -128.308, 26.3313, 24.5708, 0.66 ) }
    dend_34 { pt3dadd( -128.678, 27.074, 24.9564, 0.88 ) }
    dend_34 { pt3dadd( -129.011, 27.716, 25.3621, 0.88 ) }
    dend_34 { pt3dadd( -129.343, 28.3069, 25.7665, 0.59 ) }
    dend_34 { pt3dadd( -129.773, 29.0257, 26.2868, 0.44 ) }
    dend_34 { pt3dadd( -130.271, 29.7947, 26.855, 0.52 ) }
    dend_34 { pt3dadd( -130.756, 30.4563, 27.4036, 0.52 ) }
    dend_34 { pt3dadd( -131.469, 31.2532, 28.161, 0.29 ) }
    dend_34 { pt3dadd( -131.836, 31.5797, 28.48, 0.29 ) }
    dend_34 { pt3dadd( -132.044, 31.7177, 28.6146, 0.52 ) }
    dend_34 { pt3dadd( -132.595, 31.9985, 28.8564, 0.52 ) }
    dend_34 { pt3dadd( -133.514, 32.3622, 29.1235, 0.29 ) }
    dend_34 { pt3dadd( -134.52, 32.7394, 29.3154, 0.29 ) }
    dend_34 { pt3dadd( -134.956, 32.9289, 29.3773, 0.29 ) }
    dend_34 { pt3dadd( -136.052, 33.4991, 29.5613, 0.44 ) }
    dend_34 { pt3dadd( -136.582, 33.8043, 29.663, 0.52 ) }
    dend_34 { pt3dadd( -137.052, 34.0953, 29.7638, 0.52 ) }
    dend_34 { pt3dadd( -137.807, 34.5977, 29.9388, 0.37 ) }
    dend_34 { pt3dadd( -138.465, 35.062, 30.1235, 0.29 ) }
    dend_34 { pt3dadd( -138.954, 35.3901, 30.359, 0.29 ) }
    dend_34 { pt3dadd( -139.305, 35.6397, 30.5892, 0.29 ) }
    dend_34 { pt3dadd( -139.983, 36.1544, 31.0684, 0.52 ) }
    dend_34 { pt3dadd( -140.3, 36.384, 31.2951, 0.66 ) }
    dend_34 { pt3dadd( -140.854, 36.7586, 31.6751, 0.66 ) }
    dend_34 { pt3dadd( -141.813, 37.3854, 32.3326, 0.88 ) }
    dend_34 { pt3dadd( -142.55, 37.933, 32.9095, 0.29 ) }
    dend_34 { pt3dadd( -143.028, 38.3875, 33.3688, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 46/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -115.839, 33.4659, -24.0934, 0.74 ) }
    dend_32 { pt3dadd( -115.844, 34.2953, -25.6582, 0.74 ) }
    dend_32 { pt3dadd( -115.955, 35.1643, -27.3852, 0.66 ) }
    dend_32 { pt3dadd( -116.062, 35.6046, -28.3299, 0.44 ) }
    dend_32 { pt3dadd( -116.276, 36.1004, -29.4025, 0.44 ) }
    dend_32 { pt3dadd( -116.502, 36.508, -30.2686, 0.44 ) }
    dend_32 { pt3dadd( -116.695, 36.8404, -30.9736, 0.66 ) }
    dend_32 { pt3dadd( -117.127, 37.5248, -32.3871, 0.66 ) }
    dend_32 { pt3dadd( -117.396, 38.0156, -33.2958, 0.52 ) }
    dend_32 { pt3dadd( -117.743, 38.5926, -34.3088, 0.52 ) }
    dend_32 { pt3dadd( -118.067, 39.0613, -35.044, 0.52 ) }
    dend_32 { pt3dadd( -118.641, 39.8633, -36.1644, 0.66 ) }
    dend_32 { pt3dadd( -119.018, 40.3997, -36.8468, 0.66 ) }
    dend_32 { pt3dadd( -119.45, 41.1031, -37.5705, 0.29 ) }
    dend_32 { pt3dadd( -119.74, 41.6133, -38.0115, 0.29 ) }
    dend_32 { pt3dadd( -120.045, 42.1912, -38.4784, 0.29 ) }
    dend_32 { pt3dadd( -120.417, 42.8109, -38.9334, 0.29 ) }
    dend_32 { pt3dadd( -120.743, 43.2779, -39.2446, 0.29 ) }
    dend_32 { pt3dadd( -121.172, 43.8567, -39.6832, 0.81 ) }
    dend_32 { pt3dadd( -121.396, 44.1729, -39.9007, 1.03 ) }
    dend_32 { pt3dadd( -121.856, 44.9088, -40.3823, 1.03 ) }
    dend_32 { pt3dadd( -122.36, 45.7401, -40.9619, 0.29 ) }
    dend_32 { pt3dadd( -122.839, 46.4313, -41.4991, 0.29 ) }
    dend_32 { pt3dadd( -123.626, 47.4125, -42.3433, 0.52 ) }
    dend_32 { pt3dadd( -124.653, 48.4126, -43.4167, 0.37 ) }
    dend_32 { pt3dadd( -125.432, 49.0028, -44.3309, 0.29 ) }
    dend_32 { pt3dadd( -126.08, 49.4216, -45.1297, 0.29 ) }
    dend_32 { pt3dadd( -126.665, 49.7695, -45.8876, 0.66 ) }
    dend_32 { pt3dadd( -127.072, 50.0108, -46.4409, 0.81 ) }
    dend_32 { pt3dadd( -127.877, 50.4981, -47.6435, 0.96 ) }
    dend_32 { pt3dadd( -129.252, 51.3279, -49.8065, 0.29 ) }
    dend_32 { pt3dadd( -129.723, 51.6025, -50.5379, 0.29 ) }
    dend_32 { pt3dadd( -130.176, 51.8988, -51.2591, 0.74 ) }
    dend_32 { pt3dadd( -130.552, 52.1336, -52.0162, 0.74 ) }
    dend_32 { pt3dadd( -131.127, 52.4235, -53.534, 0.74 ) }
    dend_32 { pt3dadd( -131.594, 52.6401, -54.9137, 0.52 ) }
    dend_32 { pt3dadd( -132.404, 52.9589, -57.47, 0.52 ) }
    dend_32 { pt3dadd( -132.943, 53.1481, -59.2405, 0.44 ) }
    dend_32 { pt3dadd( -134.787, 53.7138, -65.5197, 0.74 ) }
    dend_32 { pt3dadd( -136.609, 54.1973, -71.901, 0.44 ) }
    dend_32 { pt3dadd( -137.201, 54.3398, -74.088, 0.81 ) }
    dend_32 { pt3dadd( -137.845, 54.4757, -76.7965, 1.25 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 88/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -115.839, 33.4659, -24.0934, 0.29 ) }
    dend_29 { pt3dadd( -116.915, 33.6463, -24.4541, 0.29 ) }
    dend_29 { pt3dadd( -117.558, 33.7428, -24.7198, 0.29 ) }
    dend_29 { pt3dadd( -118.363, 33.8533, -25.0937, 0.29 ) }
    dend_29 { pt3dadd( -119.172, 33.9264, -25.4517, 0.29 ) }
    dend_29 { pt3dadd( -119.927, 33.9537, -25.753, 0.29 ) }
    dend_29 { pt3dadd( -121.007, 33.9554, -26.1291, 0.29 ) }
    dend_29 { pt3dadd( -121.755, 33.9353, -26.3729, 0.44 ) }
    dend_29 { pt3dadd( -122.378, 33.8891, -26.5336, 0.44 ) }
    dend_29 { pt3dadd( -123.59, 33.7095, -26.7846, 0.44 ) }
    dend_29 { pt3dadd( -124.666, 33.4437, -26.955, 0.29 ) }
    dend_29 { pt3dadd( -125.852, 33.0406, -27.0642, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_29 { pt3dadd( -126.458, 32.7524, -27.0847, 0.29 ) }
    dend_29 { pt3dadd( -127.637, 31.9802, -27.1082, 0.29 ) }
    dend_29 { pt3dadd( -128.541, 31.2907, -27.1197, 0.44 ) }
    dend_29 { pt3dadd( -129.642, 30.3859, -27.1724, 0.44 ) }
    dend_29 { pt3dadd( -130.423, 29.729, -27.2288, 0.52 ) }
    dend_29 { pt3dadd( -131.267, 29.0262, -27.3067, 0.52 ) }
    dend_29 { pt3dadd( -132.228, 28.2949, -27.4078, 0.81 ) }
    dend_29 { pt3dadd( -133.25, 27.6694, -27.5238, 0.44 ) }
    dend_29 { pt3dadd( -134.831, 26.9629, -27.6804, 0.52 ) }
    dend_29 { pt3dadd( -135.634, 26.7154, -27.7444, 0.52 ) }
    dend_29 { pt3dadd( -136.383, 26.545, -27.8049, 0.52 ) }
    dend_29 { pt3dadd( -137.0, 26.442, -27.8453, 0.52 ) }
    dend_29 { pt3dadd( -137.945, 26.2693, -27.8489, 0.52 ) }
    dend_29 { pt3dadd( -138.982, 25.9849, -27.7955, 0.44 ) }
    dend_29 { pt3dadd( -140.018, 25.6688, -27.6963, 0.44 ) }
    dend_29 { pt3dadd( -140.64, 25.459, -27.6261, 0.66 ) }
    dend_29 { pt3dadd( -141.391, 25.1719, -27.5255, 0.66 ) }
    dend_29 { pt3dadd( -143.01, 24.4459, -27.2762, 0.44 ) }
    dend_29 { pt3dadd( -143.779, 24.0504, -27.1343, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -80.702, 124.018, -32.1951, 0.96 ) }
    dend_24 { pt3dadd( -79.651, 125.814, -37.0786, 0.96 ) }
    dend_24 { pt3dadd( -79.3508, 126.334, -38.2532, 0.66 ) }
    dend_24 { pt3dadd( -79.1644, 126.68, -38.8783, 0.29 ) }
    dend_24 { pt3dadd( -78.9604, 127.091, -39.4761, 0.29 ) }
    dend_24 { pt3dadd( -78.8054, 127.453, -39.9146, 0.66 ) }
    dend_24 { pt3dadd( -78.6823, 127.781, -40.2525, 0.44 ) }
    dend_24 { pt3dadd( -78.4976, 128.438, -40.4718, 0.44 ) }
    dend_24 { pt3dadd( -78.3313, 129.17, -40.7, 0.74 ) }
    dend_24 { pt3dadd( -78.2669, 129.65, -40.8581, 0.74 ) }
    dend_24 { pt3dadd( -78.2411, 130.868, -41.2358, 0.74 ) }
    dend_24 { pt3dadd( -78.2692, 131.483, -41.4115, 0.74 ) }
    dend_24 { pt3dadd( -78.3118, 132.067, -41.5281, 0.44 ) }
    dend_24 { pt3dadd( -78.3566, 133.039, -41.6402, 0.37 ) }
    dend_24 { pt3dadd( -78.34, 133.781, -41.6653, 0.29 ) }
    dend_24 { pt3dadd( -78.2673, 134.454, -41.6276, 0.29 ) }
    dend_24 { pt3dadd( -78.0551, 135.576, -41.5417, 0.29 ) }
    dend_24 { pt3dadd( -77.7165, 136.856, -41.497, 0.52 ) }
    dend_24 { pt3dadd( -77.3823, 137.831, -41.5178, 0.44 ) }
    dend_24 { pt3dadd( -76.966, 138.807, -41.6247, 0.81 ) }
    dend_24 { pt3dadd( -76.6178, 139.561, -41.8562, 1.03 ) }
    dend_24 { pt3dadd( -76.0936, 140.754, -42.4581, 1.33 ) }
    dend_24 { pt3dadd( -75.864, 141.388, -42.9033, 1.03 ) }
    dend_24 { pt3dadd( -75.7378, 141.888, -43.3362, 0.74 ) }
    dend_24 { pt3dadd( -75.6507, 142.546, -43.9648, 0.74 ) }
    dend_24 { pt3dadd( -75.5691, 143.774, -45.167, 0.44 ) }
    dend_24 { pt3dadd( -75.5673, 144.253, -45.625, 0.44 ) }
    dend_24 { pt3dadd( -75.6074, 144.87, -46.1493, 1.03 ) }
    dend_24 { pt3dadd( -75.7027, 145.58, -46.719, 1.11 ) }
    dend_24 { pt3dadd( -75.8166, 146.119, -47.1062, 1.11 ) }
    dend_24 { pt3dadd( -76.0835, 147.114, -47.7044, 0.81 ) }
    dend_24 { pt3dadd( -76.3145, 148.027, -48.1774, 0.59 ) }
    dend_24 { pt3dadd( -76.4842, 148.725, -48.5589, 0.88 ) }
    dend_24 { pt3dadd( -76.5831, 149.199, -48.8466, 0.66 ) }
    dend_24 { pt3dadd( -76.6652, 149.823, -49.3031, 0.52 ) }
    dend_24 { pt3dadd( -76.7075, 150.481, -49.8321, 0.44 ) }
    dend_24 { pt3dadd( -76.679, 151.861, -50.983, 0.74 ) }
    dend_24 { pt3dadd( -76.603, 152.426, -51.4455, 0.88 ) }
    dend_24 { pt3dadd( -76.425, 153.291, -52.1125, 0.44 ) }
    dend_24 { pt3dadd( -76.1125, 154.605, -53.0104, 0.81 ) }
    dend_24 { pt3dadd( -75.9723, 155.188, -53.3526, 0.96 ) }
    dend_24 { pt3dadd( -75.7474, 156.251, -53.8987, 0.66 ) }
    dend_24 { pt3dadd( -75.6013, 157.221, -54.2877, 0.59 ) }
    dend_24 { pt3dadd( -75.517, 158.112, -54.5684, 0.74 ) }
    dend_24 { pt3dadd( -75.4475, 159.123, -54.9042, 0.74 ) }
    dend_24 { pt3dadd( -75.323, 160.5, -55.4432, 0.59 ) }
    dend_24 { pt3dadd( -75.1622, 161.607, -56.0456, 0.59 ) }
    dend_24 { pt3dadd( -74.9676, 162.618, -56.7306, 0.44 ) }
    dend_24 { pt3dadd( -74.6512, 163.936, -57.8175, 1.18 ) }
    dend_24 { pt3dadd( -74.2345, 165.423, -59.257, 1.11 ) }
    dend_24 { pt3dadd( -73.9186, 166.255, -60.2098, 0.88 ) }
    dend_24 { pt3dadd( -73.4939, 167.137, -61.4262, 0.74 ) }
    dend_24 { pt3dadd( -73.1078, 167.727, -62.3833, 0.66 ) }
    dend_24 { pt3dadd( -72.5901, 168.318, -63.5045, 0.66 ) }
    dend_24 { pt3dadd( -71.8079, 169.048, -64.9907, 0.96 ) }
    dend_24 { pt3dadd( -70.8787, 169.877, -66.5076, 1.18 ) }
    dend_24 { pt3dadd( -69.6601, 170.947, -68.4186, 1.4 ) }
    dend_24 { pt3dadd( -68.8382, 171.607, -69.6274, 0.37 ) }
    dend_24 { pt3dadd( -68.3058, 171.959, -70.3608, 0.37 ) }
    dend_24 { pt3dadd( -67.799, 172.234, -70.9714, 0.74 ) }
    dend_24 { pt3dadd( -67.032, 172.534, -71.7502, 1.03 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 80/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -80.702, 124.018, -32.1951, 0.52 ) }
    dend_23 { pt3dadd( -81.1876, 125.02, -32.2882, 0.52 ) }
    dend_23 { pt3dadd( -81.6959, 125.962, -32.372, 0.66 ) }
    dend_23 { pt3dadd( -82.1864, 126.786, -32.4405, 0.66 ) }
    dend_23 { pt3dadd( -82.6675, 127.529, -32.4951, 0.81 ) }
    dend_23 { pt3dadd( -83.2966, 128.446, -32.5151, 0.37 ) }
    dend_23 { pt3dadd( -83.777, 129.114, -32.4901, 0.29 ) }
    dend_23 { pt3dadd( -84.2578, 129.724, -32.421, 0.29 ) }
    dend_23 { pt3dadd( -84.7987, 130.333, -32.2997, 0.66 ) }
    dend_23 { pt3dadd( -85.2791, 130.804, -32.152, 0.66 ) }
    dend_23 { pt3dadd( -86.1773, 131.578, -31.8288, 0.37 ) }
    dend_23 { pt3dadd( -86.69, 132.012, -31.6183, 0.74 ) }
    dend_23 { pt3dadd( -87.2593, 132.49, -31.4069, 1.11 ) }
    dend_23 { pt3dadd( -87.7039, 132.858, -31.2705, 1.4 ) }
    dend_23 { pt3dadd( -88.4818, 133.47, -31.1038, 1.55 ) }
    dend_23 { pt3dadd( -89.3059, 134.069, -31.0198, 0.52 ) }
    dend_23 { pt3dadd( -90.3567, 134.742, -31.0648, 0.29 ) }
    dend_23 { pt3dadd( -91.4073, 135.369, -31.198, 0.44 ) }
    dend_23 { pt3dadd( -92.0937, 135.777, -31.3522, 0.66 ) }
    dend_23 { pt3dadd( -92.8588, 136.255, -31.6036, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_23 { pt3dadd( -93.4243, 136.628, -31.862, 0.81 ) }
    dend_23 { pt3dadd( -94.4528, 137.347, -32.4691, 0.29 ) }
    dend_23 { pt3dadd( -95.1146, 137.858, -32.9218, 0.29 ) }
    dend_23 { pt3dadd( -95.9557, 138.63, -33.5837, 0.29 ) }
    dend_23 { pt3dadd( -96.6731, 139.413, -34.2306, 0.44 ) }
    dend_23 { pt3dadd( -97.2598, 140.16, -34.8033, 0.81 ) }
    dend_23 { pt3dadd( -97.7627, 140.881, -35.3002, 0.81 ) }
    dend_23 { pt3dadd( -98.2597, 141.657, -35.7725, 0.96 ) }
    dend_23 { pt3dadd( -98.6761, 142.309, -36.1077, 0.96 ) }
    dend_23 { pt3dadd( -99.3881, 143.361, -36.6821, 0.29 ) }
    dend_23 { pt3dadd( -99.7262, 143.871, -36.965, 0.37 ) }
    dend_23 { pt3dadd( -100.127, 144.499, -37.3178, 0.66 ) }
    dend_23 { pt3dadd( -100.49, 145.093, -37.6596, 0.81 ) }
    dend_23 { pt3dadd( -100.84, 145.669, -37.9998, 0.81 ) }
    dend_23 { pt3dadd( -102.23, 147.998, -39.3503, 0.81 ) }
    dend_23 { pt3dadd( -102.796, 148.975, -39.9349, 0.37 ) }
    dend_23 { pt3dadd( -103.404, 150.032, -40.5866, 0.29 ) }
    dend_23 { pt3dadd( -104.028, 151.108, -41.2501, 0.29 ) }
    dend_23 { pt3dadd( -104.679, 152.205, -41.8951, 0.59 ) }
    dend_23 { pt3dadd( -105.026, 152.761, -42.1708, 0.88 ) }
    dend_23 { pt3dadd( -105.471, 153.4, -42.3712, 1.03 ) }
    dend_23 { pt3dadd( -106.216, 154.303, -42.6305, 0.29 ) }
    dend_23 { pt3dadd( -106.607, 154.703, -42.7129, 0.29 ) }
    dend_23 { pt3dadd( -107.182, 155.222, -42.783, 0.29 ) }
    dend_23 { pt3dadd( -108.038, 155.969, -42.8353, 0.29 ) }
    dend_23 { pt3dadd( -108.791, 156.656, -42.8313, 0.29 ) }
    dend_23 { pt3dadd( -109.218, 157.054, -42.8038, 0.66 ) }
    dend_23 { pt3dadd( -109.68, 157.487, -42.7533, 0.66 ) }
    dend_23 { pt3dadd( -110.301, 158.087, -42.7277, 0.29 ) }
    dend_23 { pt3dadd( -110.852, 158.64, -42.7521, 0.37 ) }
    dend_23 { pt3dadd( -111.597, 159.433, -42.8683, 0.37 ) }
    dend_23 { pt3dadd( -112.128, 160.04, -42.9732, 0.29 ) }
    dend_23 { pt3dadd( -112.739, 160.774, -43.1166, 0.29 ) }
    dend_23 { pt3dadd( -113.503, 161.69, -43.3333, 0.44 ) }
    dend_23 { pt3dadd( -114.077, 162.309, -43.5045, 0.66 ) }
    dend_23 { pt3dadd( -114.472, 162.681, -43.6396, 0.66 ) }
    // Section: dend_21, id: dend_21, parent: dend_2 (entry count 36/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -91.8416, 59.1581, 4.88318, 0.59 ) }
    dend_21 { pt3dadd( -92.3958, 59.7878, 5.25475, 0.59 ) }
    dend_21 { pt3dadd( -92.7584, 60.2585, 5.46874, 0.59 ) }
    dend_21 { pt3dadd( -93.2326, 60.9781, 5.86604, 0.59 ) }
    dend_21 { pt3dadd( -93.6555, 61.6476, 6.38056, 0.37 ) }
    dend_21 { pt3dadd( -94.0377, 62.3167, 7.16173, 0.74 ) }
    dend_21 { pt3dadd( -94.2229, 62.6298, 7.6828, 0.74 ) }
    dend_21 { pt3dadd( -94.3929, 62.8825, 8.29112, 0.88 ) }
    dend_21 { pt3dadd( -94.8613, 63.3868, 10.1459, 1.03 ) }
    dend_21 { pt3dadd( -95.2387, 63.684, 11.7892, 0.74 ) }
    dend_21 { pt3dadd( -95.8714, 64.0441, 14.5615, 0.66 ) }
    dend_21 { pt3dadd( -96.356, 64.2457, 16.5412, 0.44 ) }
    dend_21 { pt3dadd( -96.6925, 64.3513, 17.7705, 0.37 ) }
    dend_21 { pt3dadd( -97.1984, 64.4764, 19.3819, 0.37 ) }
    dend_21 { pt3dadd( -98.0744, 64.6576, 21.62, 0.52 ) }
    dend_21 { pt3dadd( -98.5013, 64.7586, 22.4149, 0.74 ) }
    dend_21 { pt3dadd( -99.0245, 64.916, 23.0534, 0.29 ) }
    dend_21 { pt3dadd( -99.6248, 65.1686, 23.5861, 0.29 ) }
    dend_21 { pt3dadd( -100.243, 65.4543, 24.0524, 0.29 ) }
    dend_21 { pt3dadd( -101.003, 65.7927, 24.5294, 0.37 ) }
    dend_21 { pt3dadd( -102.036, 66.2086, 25.1268, 0.37 ) }
    dend_21 { pt3dadd( -102.771, 66.5059, 25.6056, 0.37 ) }
    dend_21 { pt3dadd( -103.685, 66.8979, 26.2783, 0.37 ) }
    dend_21 { pt3dadd( -104.855, 67.4069, 27.3207, 0.59 ) }
    dend_21 { pt3dadd( -105.357, 67.6117, 27.8359, 0.37 ) }
    dend_21 { pt3dadd( -106.094, 67.9238, 28.6802, 0.52 ) }
    dend_21 { pt3dadd( -106.412, 68.0667, 29.0901, 0.52 ) }
    dend_21 { pt3dadd( -107.214, 68.4117, 30.1943, 0.22 ) }
    dend_21 { pt3dadd( -108.21, 68.8307, 31.5459, 0.22 ) }
    dend_21 { pt3dadd( -108.547, 69.0015, 31.9826, 0.22 ) }
    dend_21 { pt3dadd( -113.151, 70.4663, 40.7315, 0.22 ) }
    dend_21 { pt3dadd( -118.719, 72.1082, 48.8661, 0.22 ) }
    dend_21 { pt3dadd( -123.747, 73.5969, 57.3741, 0.22 ) }
    dend_21 { pt3dadd( -127.367, 75.3637, 66.518, 0.22 ) }
    dend_21 { pt3dadd( -129.61, 75.8198, 76.2521, 0.22 ) }
    dend_21 { pt3dadd( -133.181, 77.1984, 85.485, 0.22 ) }
    dend_21 { pt3dadd( -137.517, 79.6548, 94.1368, 0.22 ) }
    dend_21 { pt3dadd( -141.47, 83.4615, 102.451, 0.22 ) }
    dend_21 { pt3dadd( -145.782, 89.0261, 109.439, 0.22 ) }
    dend_21 { pt3dadd( -150.456, 93.6942, 116.871, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 76/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -91.8416, 59.1581, 4.88318, 0.88 ) }
    dend_3 { pt3dadd( -92.2354, 60.2245, 4.68624, 0.88 ) }
    dend_3 { pt3dadd( -92.5587, 60.7764, 4.59903, 0.88 ) }
    dend_3 { pt3dadd( -92.9798, 61.257, 4.53089, 0.66 ) }
    dend_3 { pt3dadd( -93.6916, 61.8547, 4.45336, 0.66 ) }
    dend_3 { pt3dadd( -94.4612, 62.3913, 4.37563, 0.66 ) }
    dend_3 { pt3dadd( -95.4308, 63.0229, 4.3561, 0.66 ) }
    dend_3 { pt3dadd( -96.3246, 63.5177, 4.41629, 0.66 ) }
    dend_3 { pt3dadd( -97.3675, 64.064, 4.55093, 0.66 ) }
    dend_3 { pt3dadd( -98.2077, 64.4971, 4.69863, 0.66 ) }
    dend_3 { pt3dadd( -98.9091, 64.8721, 4.86694, 0.66 ) }
    dend_3 { pt3dadd( -100.217, 65.6879, 5.3101, 0.66 ) }
    dend_3 { pt3dadd( -100.634, 66.0067, 5.50454, 0.37 ) }
    dend_3 { pt3dadd( -101.215, 66.5166, 5.87728, 0.29 ) }
    dend_3 { pt3dadd( -101.731, 66.9866, 6.3113, 0.29 ) }
    dend_3 { pt3dadd( -102.289, 67.4632, 6.85088, 0.29 ) }
    dend_3 { pt3dadd( -102.987, 67.972, 7.56623, 0.88 ) }
    dend_3 { pt3dadd( -103.413, 68.2343, 8.00335, 0.88 ) }
    dend_3 { pt3dadd( -104.449, 68.8004, 9.1445, 0.88 ) }
    dend_3 { pt3dadd( -105.278, 69.226, 10.1391, 0.88 ) }
    dend_3 { pt3dadd( -105.74, 69.4685, 10.7347, 0.74 ) }
    dend_3 { pt3dadd( -106.14, 69.6802, 11.2524, 0.59 ) }
    dend_3 { pt3dadd( -106.597, 69.9265, 11.7966, 0.52 ) }
    dend_3 { pt3dadd( -107.238, 70.2945, 12.4787, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_3 { pt3dadd( -107.876, 70.6959, 13.0574, 0.59 ) }
    dend_3 { pt3dadd( -108.643, 71.2179, 13.654, 0.44 ) }
    dend_3 { pt3dadd( -109.366, 71.7369, 14.1486, 0.66 ) }
    dend_3 { pt3dadd( -110.107, 72.2819, 14.5831, 0.66 ) }
    dend_3 { pt3dadd( -110.762, 72.7529, 14.8731, 0.74 ) }
    dend_3 { pt3dadd( -111.724, 73.4063, 15.0371, 0.96 ) }
    dend_3 { pt3dadd( -112.299, 73.7663, 14.9509, 0.96 ) }
    dend_3 { pt3dadd( -112.924, 74.1397, 14.685, 0.88 ) }
    dend_3 { pt3dadd( -113.449, 74.4601, 14.3488, 0.66 ) }
    dend_3 { pt3dadd( -114.084, 74.8568, 13.8417, 0.66 ) }
    dend_3 { pt3dadd( -115.978, 76.0651, 12.1158, 0.66 ) }
    dend_3 { pt3dadd( -116.645, 76.498, 11.449, 0.44 ) }
    dend_3 { pt3dadd( -117.169, 76.839, 10.9425, 0.44 ) }
    dend_3 { pt3dadd( -117.629, 77.1562, 10.5395, 0.59 ) }
    dend_3 { pt3dadd( -118.082, 77.5116, 10.2154, 0.81 ) }
    dend_3 { pt3dadd( -118.552, 77.9702, 10.0117, 1.03 ) }
    dend_3 { pt3dadd( -118.792, 78.2667, 9.97478, 1.03 ) }
    dend_3 { pt3dadd( -119.273, 79.0052, 9.91484, 1.03 ) }
    dend_3 { pt3dadd( -119.696, 79.6986, 9.8573, 1.03 ) }
    dend_3 { pt3dadd( -120.054, 80.317, 9.8191, 0.66 ) }
    dend_3 { pt3dadd( -120.475, 81.0965, 9.78883, 0.52 ) }
    dend_3 { pt3dadd( -120.793, 81.7553, 9.7726, 0.81 ) }
    dend_3 { pt3dadd( -121.137, 82.5681, 9.74887, 0.96 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 23/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -30.5757, 143.247, 71.942, 0.66 ) }
    dend_80 { pt3dadd( -35.035, 150.926, 76.1939, 0.66 ) }
    dend_80 { pt3dadd( -40.0415, 157.951, 80.9919, 0.66 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 26/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -30.5757, 143.247, 71.942, 0.29 ) }
    dend_79 { pt3dadd( -33.9905, 150.205, 78.0586, 0.66 ) }
    dend_79 { pt3dadd( -37.3722, 155.831, 85.4929, 0.66 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 29/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 85.6265, 60.7638, 5.05522, 0.37 ) }
    dend_75 { pt3dadd( 86.1403, 61.9753, 5.16619, 0.37 ) }
    dend_75 { pt3dadd( 86.5559, 62.9078, 5.26062, 0.37 ) }
    dend_75 { pt3dadd( 87.0211, 63.879, 5.38502, 0.52 ) }
    dend_75 { pt3dadd( 87.3746, 64.6624, 5.51208, 0.52 ) }
    dend_75 { pt3dadd( 87.7441, 65.5829, 5.69711, 0.37 ) }
    dend_75 { pt3dadd( 88.0312, 66.3421, 5.88487, 0.52 ) }
    dend_75 { pt3dadd( 88.3224, 67.1638, 6.18587, 0.44 ) }
    dend_75 { pt3dadd( 88.5449, 67.7978, 6.47688, 0.66 ) }
    dend_75 { pt3dadd( 88.851, 68.5557, 6.82339, 0.29 ) }
    dend_75 { pt3dadd( 89.1716, 69.1741, 7.08374, 0.29 ) }
    dend_75 { pt3dadd( 89.4688, 69.6288, 7.29987, 0.29 ) }
    dend_75 { pt3dadd( 89.917, 70.1531, 7.62474, 0.52 ) }
    dend_75 { pt3dadd( 90.3891, 70.5644, 8.00814, 0.66 ) }
    dend_75 { pt3dadd( 91.4044, 71.2336, 8.79066, 0.52 ) }
    dend_75 { pt3dadd( 91.9099, 71.5219, 9.15101, 0.74 ) }
    dend_75 { pt3dadd( 92.3559, 71.7746, 9.46554, 0.74 ) }
    dend_75 { pt3dadd( 93.259, 72.3604, 10.1599, 0.66 ) }
    dend_75 { pt3dadd( 94.121, 72.987, 10.8987, 0.52 ) }
    dend_75 { pt3dadd( 94.5383, 73.3441, 11.2879, 0.52 ) }
    dend_75 { pt3dadd( 95.0039, 73.7785, 11.7749, 0.66 ) }
    dend_75 { pt3dadd( 95.2892, 74.0496, 12.0431, 0.66 ) }
    dend_75 { pt3dadd( 95.7015, 74.4722, 12.381, 0.66 ) }
    dend_75 { pt3dadd( 95.9864, 74.8116, 12.5714, 0.52 ) }
    dend_75 { pt3dadd( 96.4774, 75.4251, 12.8184, 0.52 ) }
    dend_75 { pt3dadd( 97.3003, 76.4111, 13.1902, 0.29 ) }
    dend_75 { pt3dadd( 97.7423, 76.8698, 13.3647, 0.29 ) }
    dend_75 { pt3dadd( 98.3371, 77.4008, 13.558, 0.44 ) }
    dend_75 { pt3dadd( 98.9148, 77.8468, 13.7176, 0.66 ) }
    dend_75 { pt3dadd( 99.522, 78.2708, 13.8592, 0.66 ) }
    dend_75 { pt3dadd( 100.054, 78.5991, 13.9804, 0.44 ) }
    dend_75 { pt3dadd( 100.749, 79.0166, 14.116, 0.66 ) }
    dend_75 { pt3dadd( 101.479, 79.428, 14.2703, 0.74 ) }
    dend_75 { pt3dadd( 101.937, 79.6755, 14.3774, 1.03 ) }
    dend_75 { pt3dadd( 102.622, 80.0728, 14.5443, 0.88 ) }
    dend_75 { pt3dadd( 103.532, 80.6996, 14.7586, 0.66 ) }
    dend_75 { pt3dadd( 104.092, 81.115, 14.8611, 0.44 ) }
    dend_75 { pt3dadd( 104.923, 81.7285, 14.9707, 0.37 ) }
    dend_75 { pt3dadd( 105.662, 82.2167, 15.0382, 0.37 ) }
    dend_75 { pt3dadd( 106.424, 82.6411, 15.0774, 0.59 ) }
    dend_75 { pt3dadd( 107.237, 83.0059, 15.0894, 0.29 ) }
    dend_75 { pt3dadd( 108.555, 83.4674, 14.9862, 0.29 ) }
    dend_75 { pt3dadd( 109.405, 83.7267, 14.8858, 0.29 ) }
    dend_75 { pt3dadd( 110.37, 84.0148, 14.7368, 0.37 ) }
    dend_75 { pt3dadd( 110.931, 84.1685, 14.6379, 0.37 ) }
    dend_75 { pt3dadd( 111.425, 84.2817, 14.5497, 0.74 ) }
    dend_75 { pt3dadd( 112.544, 84.606, 14.3846, 0.66 ) }
    dend_75 { pt3dadd( 113.4, 85.022, 14.2843, 0.44 ) }
    dend_75 { pt3dadd( 114.083, 85.4786, 14.2494, 0.52 ) }
    dend_75 { pt3dadd( 114.619, 85.8964, 14.2683, 0.52 ) }
    dend_75 { pt3dadd( 115.556, 86.637, 14.3751, 0.52 ) }
    dend_75 { pt3dadd( 116.463, 87.299, 14.5546, 0.66 ) }
    dend_75 { pt3dadd( 116.876, 87.5733, 14.6781, 0.81 ) }
    dend_75 { pt3dadd( 117.455, 87.912, 14.8573, 0.52 ) }
    dend_75 { pt3dadd( 118.318, 88.3906, 15.1327, 0.52 ) }
    dend_75 { pt3dadd( 118.929, 88.7473, 15.3247, 0.66 ) }
    dend_75 { pt3dadd( 119.68, 89.1977, 15.5766, 0.74 ) }
    dend_75 { pt3dadd( 120.647, 89.7079, 15.8772, 0.59 ) }
    dend_75 { pt3dadd( 121.278, 90.0287, 16.1187, 0.66 ) }
    dend_75 { pt3dadd( 121.79, 90.2863, 16.3426, 0.37 ) }
    dend_75 { pt3dadd( 122.365, 90.5752, 16.6193, 0.44 ) }
    dend_75 { pt3dadd( 123.369, 91.0809, 17.1373, 0.59 ) }
    dend_75 { pt3dadd( 123.908, 91.3766, 17.4137, 0.52 ) }
    dend_75 { pt3dadd( 125.09, 92.0675, 17.9812, 0.74 ) }
    dend_75 { pt3dadd( 125.533, 92.3376, 18.1923, 0.81 ) }
    dend_75 { pt3dadd( 126.123, 92.6867, 18.4806, 0.37 ) }
    dend_75 { pt3dadd( 126.647, 92.9633, 18.7421, 0.37 ) }
    dend_75 { pt3dadd( 127.29, 93.3041, 18.9881, 0.29 ) }
    dend_75 { pt3dadd( 127.919, 93.6653, 19.1474, 0.66 ) }
    dend_75 { pt3dadd( 128.55, 94.0663, 19.2197, 0.88 ) }
    dend_75 { pt3dadd( 129.367, 94.6621, 19.245, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_75 { pt3dadd( 130.433, 95.5374, 19.1834, 0.52 ) }
    dend_75 { pt3dadd( 131.581, 96.5968, 19.1026, 0.44 ) }
    dend_75 { pt3dadd( 132.339, 97.4007, 19.0274, 0.44 ) }
    dend_75 { pt3dadd( 132.782, 97.9836, 18.9334, 0.52 ) }
    dend_75 { pt3dadd( 133.159, 98.576, 18.75, 0.52 ) }
    dend_75 { pt3dadd( 133.268, 98.7824, 18.6705, 0.59 ) }
    dend_75 { pt3dadd( 133.819, 99.9271, 18.2311, 0.66 ) }
    dend_75 { pt3dadd( 134.211, 100.694, 17.9965, 0.52 ) }
    dend_75 { pt3dadd( 134.675, 101.503, 17.7912, 0.37 ) }
    dend_75 { pt3dadd( 135.46, 102.817, 17.5024, 0.52 ) }
    dend_75 { pt3dadd( 135.846, 103.476, 17.3873, 0.88 ) }
    dend_75 { pt3dadd( 136.367, 104.345, 17.2519, 0.29 ) }
    dend_75 { pt3dadd( 136.779, 104.99, 17.1524, 0.29 ) }
    dend_75 { pt3dadd( 137.311, 105.749, 17.0935, 0.37 ) }
    dend_75 { pt3dadd( 137.849, 106.439, 17.0821, 0.37 ) }
    dend_75 { pt3dadd( 138.549, 107.179, 17.1023, 0.29 ) }
    dend_75 { pt3dadd( 138.892, 107.465, 17.086, 0.37 ) }
    dend_75 { pt3dadd( 139.33, 107.753, 17.0289, 0.37 ) }
    dend_75 { pt3dadd( 140.316, 108.293, 16.8377, 0.37 ) }
    dend_75 { pt3dadd( 140.87, 108.546, 16.6892, 0.37 ) }
    dend_75 { pt3dadd( 141.863, 108.91, 16.3942, 0.29 ) }
    dend_75 { pt3dadd( 142.468, 109.08, 16.1974, 0.44 ) }
    dend_75 { pt3dadd( 143.055, 109.208, 15.9878, 0.59 ) }
    dend_75 { pt3dadd( 143.553, 109.291, 15.8045, 0.59 ) }
    dend_75 { pt3dadd( 144.574, 109.453, 15.4149, 0.59 ) }
    dend_75 { pt3dadd( 145.412, 109.618, 15.0643, 0.44 ) }
    dend_75 { pt3dadd( 146.309, 109.84, 14.6525, 0.44 ) }
    dend_75 { pt3dadd( 147.141, 110.122, 14.2398, 0.44 ) }
    dend_75 { pt3dadd( 147.658, 110.335, 13.9625, 0.37 ) }
    dend_75 { pt3dadd( 148.41, 110.676, 13.5234, 0.37 ) }
    dend_75 { pt3dadd( 149.23, 111.089, 12.9795, 0.37 ) }
    dend_75 { pt3dadd( 149.586, 111.291, 12.73, 0.29 ) }
    dend_75 { pt3dadd( 150.441, 111.787, 12.0886, 0.29 ) }
    dend_75 { pt3dadd( 150.988, 112.098, 11.6593, 0.59 ) }
    dend_75 { pt3dadd( 151.586, 112.423, 11.1468, 0.74 ) }
    dend_75 { pt3dadd( 152.414, 112.872, 10.3312, 0.66 ) }
    dend_75 { pt3dadd( 153.066, 113.215, 9.59448, 0.59 ) }
    dend_75 { pt3dadd( 153.717, 113.546, 8.80464, 0.59 ) }
    dend_75 { pt3dadd( 154.185, 113.794, 8.20755, 0.74 ) }
    dend_75 { pt3dadd( 154.864, 114.235, 7.25937, 0.88 ) }
    dend_75 { pt3dadd( 155.673, 114.885, 6.03112, 1.11 ) }
    dend_75 { pt3dadd( 156.266, 115.481, 5.04795, 0.81 ) }
    dend_75 { pt3dadd( 156.741, 116.054, 4.21748, 0.52 ) }
    dend_75 { pt3dadd( 157.022, 116.448, 3.76885, 0.81 ) }
    dend_75 { pt3dadd( 157.532, 117.26, 3.08643, 0.59 ) }
    dend_75 { pt3dadd( 157.784, 117.73, 2.85349, 0.59 ) }
    dend_75 { pt3dadd( 158.257, 118.81, 2.62812, 0.44 ) }
    dend_75 { pt3dadd( 158.518, 119.544, 2.58402, 0.44 ) }
    dend_75 { pt3dadd( 158.936, 120.829, 2.60218, 0.59 ) }
    dend_75 { pt3dadd( 159.334, 121.952, 2.68519, 0.37 ) }
    dend_75 { pt3dadd( 159.62, 122.63, 2.81563, 0.37 ) }
    dend_75 { pt3dadd( 160.004, 123.401, 3.06628, 0.29 ) }
    dend_75 { pt3dadd( 160.36, 123.988, 3.33951, 0.52 ) }
    dend_75 { pt3dadd( 160.793, 124.579, 3.70527, 0.52 ) }
    dend_75 { pt3dadd( 161.205, 125.052, 4.07381, 0.44 ) }
    dend_75 { pt3dadd( 162.029, 125.888, 4.7867, 0.59 ) }
    dend_75 { pt3dadd( 162.808, 126.596, 5.44267, 0.59 ) }
    dend_75 { pt3dadd( 163.294, 127.004, 5.84827, 0.74 ) }
    dend_75 { pt3dadd( 163.913, 127.498, 6.33133, 0.66 ) }
    dend_75 { pt3dadd( 164.523, 127.973, 6.74111, 0.88 ) }
    dend_75 { pt3dadd( 164.995, 128.35, 6.98846, 1.03 ) }
    dend_75 { pt3dadd( 165.762, 129.015, 7.25773, 0.74 ) }
    dend_75 { pt3dadd( 166.347, 129.571, 7.40592, 0.59 ) }
    dend_75 { pt3dadd( 167.084, 130.347, 7.55302, 0.52 ) }
    dend_75 { pt3dadd( 167.944, 131.356, 7.66473, 0.88 ) }
    dend_75 { pt3dadd( 168.479, 132.021, 7.71348, 1.11 ) }
    dend_75 { pt3dadd( 169.345, 133.132, 7.76642, 0.81 ) }
    dend_75 { pt3dadd( 169.877, 133.845, 7.76736, 0.81 ) }
    dend_75 { pt3dadd( 170.598, 134.79, 7.74786, 0.81 ) }
    dend_75 { pt3dadd( 171.23, 135.571, 7.71797, 0.59 ) }
    dend_75 { pt3dadd( 171.79, 136.185, 7.68541, 0.59 ) }
    dend_75 { pt3dadd( 172.458, 136.803, 7.65035, 0.81 ) }
    dend_75 { pt3dadd( 173.408, 137.543, 7.60359, 0.66 ) }
    dend_75 { pt3dadd( 174.484, 138.281, 7.61142, 0.52 ) }
    dend_75 { pt3dadd( 175.471, 138.887, 7.66313, 0.59 ) }
    dend_75 { pt3dadd( 176.44, 139.445, 7.73273, 0.66 ) }
    dend_75 { pt3dadd( 177.123, 139.837, 7.79343, 0.66 ) }
    dend_75 { pt3dadd( 177.705, 140.164, 7.85039, 0.66 ) }
    dend_75 { pt3dadd( 179.015, 140.842, 7.95427, 0.74 ) }
    dend_75 { pt3dadd( 179.884, 141.223, 7.96157, 0.88 ) }
    dend_75 { pt3dadd( 180.98, 141.585, 7.9458, 0.88 ) }
    dend_75 { pt3dadd( 181.556, 141.707, 7.92827, 0.88 ) }
    dend_75 { pt3dadd( 182.418, 141.753, 7.97983, 0.96 ) }
    dend_75 { pt3dadd( 183.436, 141.678, 8.2116, 0.96 ) }
    dend_75 { pt3dadd( 184.259, 141.552, 8.56793, 0.81 ) }
    dend_75 { pt3dadd( 184.956, 141.451, 9.11277, 0.81 ) }
    dend_75 { pt3dadd( 185.44, 141.381, 9.58486, 0.74 ) }
    dend_75 { pt3dadd( 186.989, 141.158, 11.2594, 0.96 ) }
    dend_75 { pt3dadd( 187.899, 141.034, 12.2976, 1.03 ) }
    dend_75 { pt3dadd( 188.566, 140.964, 13.0685, 0.81 ) }
    dend_75 { pt3dadd( 189.72, 140.894, 14.2678, 0.52 ) }
    dend_75 { pt3dadd( 190.52, 140.882, 14.9514, 0.44 ) }
    dend_75 { pt3dadd( 191.051, 140.886, 15.3303, 0.44 ) }
    dend_75 { pt3dadd( 191.728, 140.911, 15.7196, 0.74 ) }
    dend_75 { pt3dadd( 192.184, 140.922, 15.9509, 0.74 ) }
    dend_75 { pt3dadd( 193.313, 140.951, 16.5376, 0.37 ) }
    dend_75 { pt3dadd( 194.479, 141.034, 17.1668, 0.52 ) }
    dend_75 { pt3dadd( 195.663, 141.196, 17.7557, 0.66 ) }
    dend_75 { pt3dadd( 196.94, 141.413, 18.2981, 0.29 ) }
    dend_75 { pt3dadd( 197.915, 141.578, 18.6508, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_75 { pt3dadd( 198.461, 141.659, 18.8135, 0.81 ) }
    dend_75 { pt3dadd( 198.883, 141.73, 18.9191, 0.81 ) }
    dend_75 { pt3dadd( 200.778, 142.142, 19.1145, 0.59 ) }
    dend_75 { pt3dadd( 201.492, 142.297, 19.0908, 0.44 ) }
    dend_75 { pt3dadd( 202.264, 142.465, 18.9888, 0.29 ) }
    dend_75 { pt3dadd( 202.919, 142.632, 18.9009, 0.29 ) }
    dend_75 { pt3dadd( 204.01, 142.962, 18.7808, 0.29 ) }
    dend_75 { pt3dadd( 204.859, 143.3, 18.8669, 0.37 ) }
    dend_75 { pt3dadd( 213.387, 148.388, 19.0585, 0.37 ) }
    dend_75 { pt3dadd( 222.37, 152.51, 17.8652, 0.37 ) }
    dend_75 { pt3dadd( 230.649, 157.664, 15.9919, 0.37 ) }
    dend_75 { pt3dadd( 239.353, 161.839, 13.5593, 0.37 ) }
    dend_75 { pt3dadd( 248.58, 165.14, 11.7193, 0.37 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 13/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 85.6265, 60.7638, 5.05522, 0.29 ) }
    dend_74 { pt3dadd( 87.203, 60.8035, 3.85905, 0.29 ) }
    dend_74 { pt3dadd( 87.8316, 60.8688, 3.32877, 0.29 ) }
    dend_74 { pt3dadd( 88.432, 60.9933, 2.77328, 0.44 ) }
    dend_74 { pt3dadd( 88.9459, 61.1437, 2.27917, 0.44 ) }
    dend_74 { pt3dadd( 89.4124, 61.3066, 1.78611, 0.44 ) }
    dend_74 { pt3dadd( 90.4292, 61.6622, 0.697125, 0.59 ) }
    dend_74 { pt3dadd( 90.8685, 61.8822, 0.104958, 0.74 ) }
    dend_74 { pt3dadd( 91.182, 62.1199, -0.386232, 0.66 ) }
    dend_74 { pt3dadd( 91.6238, 62.5988, -1.13266, 0.44 ) }
    dend_74 { pt3dadd( 92.1504, 63.2683, -2.01339, 0.66 ) }
    dend_74 { pt3dadd( 92.5086, 63.7457, -2.57914, 0.74 ) }
    dend_74 { pt3dadd( 93.4085, 64.8935, -3.98142, 0.37 ) }
    dend_74 { pt3dadd( 93.9445, 65.5333, -4.79498, 0.29 ) }
    dend_74 { pt3dadd( 94.3819, 66.049, -5.44905, 0.66 ) }
    dend_74 { pt3dadd( 94.6358, 66.362, -5.82307, 0.66 ) }
    dend_74 { pt3dadd( 95.0011, 66.8249, -6.33612, 0.44 ) }
    dend_74 { pt3dadd( 95.9748, 68.0726, -7.65317, 0.44 ) }
    dend_74 { pt3dadd( 96.5467, 68.7328, -8.34907, 0.59 ) }
    dend_74 { pt3dadd( 97.2841, 69.5933, -9.28777, 0.59 ) }
    dend_74 { pt3dadd( 97.5438, 69.9112, -9.60782, 0.66 ) }
    dend_74 { pt3dadd( 98.1356, 70.6984, -10.3221, 0.29 ) }
    dend_74 { pt3dadd( 98.4778, 71.1657, -10.697, 0.29 ) }
    dend_74 { pt3dadd( 98.7249, 71.4918, -10.9396, 0.66 ) }
    dend_74 { pt3dadd( 98.9766, 71.8252, -11.2035, 0.66 ) }
    dend_74 { pt3dadd( 99.5507, 72.5556, -11.7675, 0.22 ) }
    dend_74 { pt3dadd( 100.292, 73.4393, -12.4817, 0.59 ) }
    dend_74 { pt3dadd( 100.5, 73.7003, -12.6816, 0.59 ) }
    dend_74 { pt3dadd( 101.076, 74.4759, -13.2384, 0.44 ) }
    dend_74 { pt3dadd( 101.528, 75.0903, -13.6376, 0.22 ) }
    dend_74 { pt3dadd( 102.111, 75.8743, -14.1191, 0.22 ) }
    dend_74 { pt3dadd( 102.888, 76.9414, -14.7466, 0.22 ) }
    dend_74 { pt3dadd( 103.39, 77.6463, -15.1004, 0.22 ) }
    dend_74 { pt3dadd( 103.655, 78.0066, -15.2803, 0.22 ) }
    dend_74 { pt3dadd( 104.18, 78.6628, -15.6075, 1.18 ) }
    dend_74 { pt3dadd( 104.573, 79.1081, -15.8432, 1.18 ) }
    dend_74 { pt3dadd( 105.309, 79.884, -16.2557, 0.66 ) }
    dend_74 { pt3dadd( 105.631, 80.1782, -16.4187, 0.66 ) }
    dend_74 { pt3dadd( 106.464, 80.8398, -16.827, 0.29 ) }
    dend_74 { pt3dadd( 107.131, 81.3384, -17.1253, 0.29 ) }
    dend_74 { pt3dadd( 108.03, 81.9492, -17.4842, 0.29 ) }
    dend_74 { pt3dadd( 108.555, 82.2571, -17.6535, 0.59 ) }
    dend_74 { pt3dadd( 109.21, 82.6041, -17.8509, 0.74 ) }
    dend_74 { pt3dadd( 110.271, 83.1646, -18.1875, 0.37 ) }
    dend_74 { pt3dadd( 111.446, 83.804, -18.6141, 0.29 ) }
    dend_74 { pt3dadd( 112.382, 84.3242, -19.0031, 0.29 ) }
    dend_74 { pt3dadd( 113.181, 84.7915, -19.4519, 0.29 ) }
    dend_74 { pt3dadd( 114.121, 85.3975, -20.148, 0.66 ) }
    dend_74 { pt3dadd( 114.658, 85.8045, -20.7071, 1.11 ) }
    dend_74 { pt3dadd( 115.246, 86.2583, -21.5912, 1.11 ) }
    dend_74 { pt3dadd( 115.57, 86.4803, -22.2331, 0.66 ) }
    dend_74 { pt3dadd( 116.38, 86.9742, -24.1173, 0.66 ) }
    dend_74 { pt3dadd( 116.902, 87.2113, -25.4417, 0.66 ) }
    dend_74 { pt3dadd( 117.702, 87.4009, -27.6028, 1.03 ) }
    dend_74 { pt3dadd( 118.627, 87.4246, -30.1604, 0.81 ) }
    dend_74 { pt3dadd( 119.507, 87.2563, -32.709, 0.59 ) }
    dend_74 { pt3dadd( 120.025, 87.0962, -34.2533, 0.52 ) }
    dend_74 { pt3dadd( 120.519, 86.8615, -35.7145, 0.52 ) }
    dend_74 { pt3dadd( 121.158, 86.442, -37.5838, 0.52 ) }
    dend_74 { pt3dadd( 121.488, 86.1492, -38.502, 0.96 ) }
    dend_74 { pt3dadd( 121.961, 85.6323, -39.8288, 1.4 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 74/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -120.809, 20.9476, -106.261, 0.29 ) }
    dend_68 { pt3dadd( -122.637, 21.0952, -106.223, 0.29 ) }
    dend_68 { pt3dadd( -123.795, 21.1993, -106.203, 0.29 ) }
    dend_68 { pt3dadd( -124.838, 21.2967, -106.187, 0.29 ) }
    dend_68 { pt3dadd( -127.495, 21.6151, -106.154, 0.29 ) }
    dend_68 { pt3dadd( -129.16, 21.8476, -106.135, 0.52 ) }
    dend_68 { pt3dadd( -130.25, 22.008, -106.125, 0.52 ) }
    dend_68 { pt3dadd( -131.048, 22.1538, -106.138, 0.29 ) }
    dend_68 { pt3dadd( -132.499, 22.4067, -106.146, 0.29 ) }
    dend_68 { pt3dadd( -133.899, 22.5631, -106.189, 0.66 ) }
    dend_68 { pt3dadd( -134.457, 22.5857, -106.22, 0.74 ) }
    dend_68 { pt3dadd( -136.293, 22.6033, -106.352, 0.29 ) }
    dend_68 { pt3dadd( -137.761, 22.6128, -106.471, 0.29 ) }
    dend_68 { pt3dadd( -139.923, 22.6169, -106.661, 0.29 ) }
    dend_68 { pt3dadd( -142.582, 22.5946, -106.883, 0.52 ) }
    dend_68 { pt3dadd( -143.67, 22.5505, -106.959, 0.74 ) }
    dend_68 { pt3dadd( -144.958, 22.4713, -107.037, 0.29 ) }
    dend_68 { pt3dadd( -146.036, 22.4021, -107.099, 0.29 ) }
    dend_68 { pt3dadd( -146.986, 22.3458, -107.143, 0.29 ) }
    dend_68 { pt3dadd( -149.002, 22.2799, -107.175, 0.29 ) }
    dend_68 { pt3dadd( -150.825, 22.301, -107.076, 0.74 ) }
    dend_68 { pt3dadd( -151.411, 22.2863, -107.039, 1.03 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 96/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -120.809, 20.9476, -106.261, 0.44 ) }
    dend_67 { pt3dadd( -122.127, 21.9013, -106.149, 0.44 ) }
    dend_67 { pt3dadd( -123.403, 22.6862, -106.017, 0.44 ) }
    dend_67 { pt3dadd( -124.913, 23.4228, -106.006, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_67 { pt3dadd( -126.303, 23.9784, -106.122, 0.44 ) }
    dend_67 { pt3dadd( -127.644, 24.4125, -106.329, 0.44 ) }
    dend_67 { pt3dadd( -128.707, 24.6998, -106.569, 0.44 ) }
    dend_67 { pt3dadd( -129.945, 24.8939, -106.974, 0.37 ) }
    dend_67 { pt3dadd( -132.279, 24.9669, -107.933, 0.37 ) }
    dend_67 { pt3dadd( -133.526, 24.8848, -108.552, 0.22 ) }
    dend_67 { pt3dadd( -134.86, 24.7131, -109.319, 0.59 ) }
    dend_67 { pt3dadd( -136.179, 24.5267, -110.152, 0.59 ) }
    dend_67 { pt3dadd( -137.117, 24.4434, -110.748, 0.59 ) }
    dend_67 { pt3dadd( -138.12, 24.443, -111.359, 0.44 ) }
    dend_67 { pt3dadd( -139.05, 24.5711, -111.832, 0.44 ) }
    dend_67 { pt3dadd( -141.143, 25.1358, -112.732, 0.44 ) }
    dend_67 { pt3dadd( -142.663, 25.7764, -113.305, 0.44 ) }
    dend_67 { pt3dadd( -144.148, 26.6504, -113.78, 0.37 ) }
    dend_67 { pt3dadd( -145.404, 27.6433, -114.181, 0.37 ) }
    dend_67 { pt3dadd( -146.714, 28.9602, -114.65, 0.59 ) }
    dend_67 { pt3dadd( -147.236, 29.6061, -114.849, 0.74 ) }
    dend_67 { pt3dadd( -147.675, 30.2759, -115.026, 0.88 ) }
    dend_67 { pt3dadd( -148.085, 30.9643, -115.213, 0.88 ) }
    dend_67 { pt3dadd( -148.845, 32.246, -115.618, 0.88 ) }
    dend_67 { pt3dadd( -149.745, 33.6799, -116.14, 0.29 ) }
    dend_67 { pt3dadd( -150.341, 34.5759, -116.478, 0.29 ) }
    dend_67 { pt3dadd( -151.21, 35.7662, -116.955, 0.44 ) }
    dend_67 { pt3dadd( -151.827, 36.5326, -117.284, 0.44 ) }
    dend_67 { pt3dadd( -152.578, 37.3671, -117.667, 0.37 ) }
    dend_67 { pt3dadd( -153.485, 38.2763, -118.091, 0.37 ) }
    dend_67 { pt3dadd( -154.461, 39.1585, -118.615, 0.74 ) }
    dend_67 { pt3dadd( -155.306, 39.8802, -119.162, 0.74 ) }
    dend_67 { pt3dadd( -156.077, 40.5329, -119.716, 0.74 ) }
    dend_67 { pt3dadd( -156.728, 41.0987, -120.218, 0.59 ) }
    dend_67 { pt3dadd( -157.408, 41.7354, -120.768, 0.59 ) }
    dend_67 { pt3dadd( -158.762, 43.1149, -121.921, 0.52 ) }
    dend_67 { pt3dadd( -159.855, 44.3686, -122.907, 0.44 ) }
    dend_67 { pt3dadd( -160.361, 45.0148, -123.366, 0.88 ) }
    dend_67 { pt3dadd( -160.613, 45.3653, -123.641, 0.88 ) }
    dend_67 { pt3dadd( -161.402, 46.6729, -124.83, 0.29 ) }
    dend_67 { pt3dadd( -161.827, 47.5644, -125.75, 0.29 ) }
    dend_67 { pt3dadd( -162.089, 48.3786, -126.76, 1.03 ) }
    dend_67 { pt3dadd( -162.167, 48.8188, -127.406, 1.55 ) }
    dend_67 { pt3dadd( -162.215, 50.4738, -130.056, 1.55 ) }
    dend_67 { pt3dadd( -162.088, 51.3953, -131.666, 0.59 ) }
    dend_67 { pt3dadd( -161.872, 51.9913, -132.785, 0.59 ) }
    dend_67 { pt3dadd( -161.191, 53.1496, -135.309, 0.59 ) }
    dend_67 { pt3dadd( -160.846, 53.5845, -136.333, 0.44 ) }
    dend_67 { pt3dadd( -160.423, 54.0548, -137.441, 0.44 ) }
    dend_67 { pt3dadd( -159.487, 54.9727, -139.587, 0.81 ) }
    dend_67 { pt3dadd( -159.032, 55.3858, -140.635, 1.4 ) }
    dend_67 { pt3dadd( -157.456, 56.662, -144.179, 1.62 ) }
    dend_67 { pt3dadd( -156.974, 56.9766, -145.176, 0.81 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 49/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -89.5597, 125.187, -166.73, 0.88 ) }
    dend_58 { pt3dadd( -90.5055, 124.306, -167.611, 0.88 ) }
    dend_58 { pt3dadd( -91.6049, 123.264, -168.532, 0.66 ) }
    dend_58 { pt3dadd( -92.2962, 122.52, -169.201, 0.81 ) }
    dend_58 { pt3dadd( -92.9852, 121.692, -169.958, 1.18 ) }
    dend_58 { pt3dadd( -93.7143, 120.661, -170.95, 1.33 ) }
    dend_58 { pt3dadd( -94.1699, 119.932, -171.687, 1.11 ) }
    dend_58 { pt3dadd( -94.6961, 118.972, -172.717, 0.81 ) }
    dend_58 { pt3dadd( -95.4183, 117.513, -174.291, 0.81 ) }
    dend_58 { pt3dadd( -95.745, 116.868, -175.033, 1.03 ) }
    dend_58 { pt3dadd( -96.4, 115.747, -176.413, 1.25 ) }
    dend_58 { pt3dadd( -96.9103, 115.001, -177.39, 1.25 ) }
    dend_58 { pt3dadd( -97.2337, 114.617, -177.965, 1.25 ) }
    dend_58 { pt3dadd( -98.3509, 113.828, -179.506, 0.52 ) }
    dend_58 { pt3dadd( -98.9064, 113.696, -179.947, 0.52 ) }
    dend_58 { pt3dadd( -99.7779, 113.7, -180.385, 0.96 ) }
    dend_58 { pt3dadd( -100.676, 113.844, -180.692, 0.88 ) }
    dend_58 { pt3dadd( -101.217, 113.978, -180.835, 0.88 ) }
    dend_58 { pt3dadd( -102.467, 114.396, -181.112, 1.03 ) }
    dend_58 { pt3dadd( -103.082, 114.672, -181.187, 1.47 ) }
    dend_58 { pt3dadd( -103.724, 114.978, -181.277, 1.47 ) }
    dend_58 { pt3dadd( -104.338, 115.269, -181.374, 1.47 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 71/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -89.5597, 125.187, -166.73, 0.52 ) }
    dend_57 { pt3dadd( -89.8272, 127.508, -167.128, 0.52 ) }
    dend_57 { pt3dadd( -89.9387, 128.187, -167.282, 0.59 ) }
    dend_57 { pt3dadd( -90.1799, 129.199, -167.535, 0.59 ) }
    dend_57 { pt3dadd( -90.3503, 129.77, -167.68, 0.37 ) }
    dend_57 { pt3dadd( -90.6694, 130.666, -167.917, 0.59 ) }
    dend_57 { pt3dadd( -90.8592, 131.133, -168.039, 0.66 ) }
    dend_57 { pt3dadd( -91.3309, 131.966, -168.261, 0.66 ) }
    dend_57 { pt3dadd( -91.7983, 132.689, -168.448, 0.29 ) }
    dend_57 { pt3dadd( -92.2628, 133.368, -168.617, 0.44 ) }
    dend_57 { pt3dadd( -92.6151, 133.908, -168.738, 0.44 ) }
    dend_57 { pt3dadd( -93.141, 134.724, -168.908, 0.29 ) }
    dend_57 { pt3dadd( -93.4374, 135.196, -168.984, 0.29 ) }
    dend_57 { pt3dadd( -93.6732, 135.585, -169.022, 0.59 ) }
    dend_57 { pt3dadd( -94.0999, 136.376, -169.102, 0.66 ) }
    dend_57 { pt3dadd( -94.4857, 137.148, -169.175, 0.66 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 87/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -27.115, 92.4085, 22.3176, 0.37 ) }
    dend_53 { pt3dadd( -27.6429, 93.5972, 20.3923, 0.37 ) }
    dend_53 { pt3dadd( -27.8625, 94.0067, 19.8457, 0.59 ) }
    dend_53 { pt3dadd( -28.0116, 94.2543, 19.5478, 0.81 ) }
    dend_53 { pt3dadd( -28.4976, 95.0393, 18.7296, 0.66 ) }
    dend_53 { pt3dadd( -28.8756, 95.6756, 18.1156, 0.29 ) }
    dend_53 { pt3dadd( -29.0668, 95.988, 17.8004, 0.29 ) }
    dend_53 { pt3dadd( -29.4846, 96.6892, 17.2421, 0.29 ) }
    dend_53 { pt3dadd( -29.6776, 97.007, 16.9956, 0.29 ) }
    dend_53 { pt3dadd( -29.9942, 97.5164, 16.6306, 0.66 ) }
    dend_53 { pt3dadd( -30.3689, 98.12, 16.2493, 0.81 ) }
    dend_53 { pt3dadd( -30.9754, 99.1068, 15.6607, 0.44 ) }
    dend_53 { pt3dadd( -31.4967, 99.9735, 15.1797, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_53 { pt3dadd( -31.857, 100.564, 14.8851, 0.66 ) }
    dend_53 { pt3dadd( -32.5348, 101.612, 14.4402, 0.66 ) }
    dend_53 { pt3dadd( -32.8802, 102.12, 14.2618, 0.29 ) }
    dend_53 { pt3dadd( -33.5285, 103.033, 14.0062, 0.29 ) }
    dend_53 { pt3dadd( -33.9547, 103.608, 13.8798, 0.44 ) }
    dend_53 { pt3dadd( -34.8504, 104.716, 13.6478, 0.44 ) }
    dend_53 { pt3dadd( -35.711, 105.652, 13.465, 0.29 ) }
    dend_53 { pt3dadd( -36.3866, 106.294, 13.3618, 0.44 ) }
    dend_53 { pt3dadd( -36.9493, 106.767, 13.2908, 0.44 ) }
    dend_53 { pt3dadd( -37.4327, 107.119, 13.2425, 0.29 ) }
    dend_53 { pt3dadd( -37.983, 107.454, 13.2023, 0.37 ) }
    dend_53 { pt3dadd( -39.1591, 108.013, 13.1441, 0.22 ) }
    dend_53 { pt3dadd( -39.7208, 108.22, 13.1241, 0.44 ) }
    dend_53 { pt3dadd( -40.3257, 108.41, 13.1128, 0.29 ) }
    dend_53 { pt3dadd( -41.152, 108.632, 13.1104, 0.22 ) }
    dend_53 { pt3dadd( -42.4043, 108.923, 13.1091, 0.22 ) }
    dend_53 { pt3dadd( -43.5669, 109.125, 13.1097, 0.22 ) }
    dend_53 { pt3dadd( -44.3938, 109.214, 13.1, 0.22 ) }
    dend_53 { pt3dadd( -45.5576, 109.28, 13.0704, 0.22 ) }
    dend_53 { pt3dadd( -47.0345, 109.294, 12.9672, 0.59 ) }
    dend_53 { pt3dadd( -47.6573, 109.285, 12.9006, 0.59 ) }
    dend_53 { pt3dadd( -48.3766, 109.271, 12.7947, 0.44 ) }
    dend_53 { pt3dadd( -49.4886, 109.232, 12.5816, 0.59 ) }
    dend_53 { pt3dadd( -50.0813, 109.208, 12.4607, 0.66 ) }
    dend_53 { pt3dadd( -51.2395, 109.164, 12.1922, 0.52 ) }
    dend_53 { pt3dadd( -52.5344, 109.181, 11.8825, 0.29 ) }
    dend_53 { pt3dadd( -53.4096, 109.249, 11.6787, 0.22 ) }
    dend_53 { pt3dadd( -54.4182, 109.404, 11.4629, 0.22 ) }
    dend_53 { pt3dadd( -55.344, 109.608, 11.295, 0.88 ) }
    dend_53 { pt3dadd( -55.9053, 109.772, 11.1972, 0.88 ) }
    dend_53 { pt3dadd( -56.7931, 110.112, 11.0626, 0.44 ) }
    dend_53 { pt3dadd( -57.2251, 110.304, 10.9827, 0.44 ) }
    dend_53 { pt3dadd( -57.7212, 110.579, 10.8801, 0.59 ) }
    dend_53 { pt3dadd( -58.2639, 110.972, 10.7617, 0.37 ) }
    dend_53 { pt3dadd( -58.9527, 111.546, 10.5763, 0.52 ) }
    dend_53 { pt3dadd( -59.2667, 111.813, 10.5115, 0.74 ) }
    dend_53 { pt3dadd( -67.8587, 114.442, 6.1633, 0.74 ) }
    dend_53 { pt3dadd( -75.6596, 116.855, 0.416789, 0.74 ) }
    dend_53 { pt3dadd( -83.4797, 119.494, -5.1973, 0.74 ) }
    dend_53 { pt3dadd( -92.3137, 121.438, -9.43821, 0.74 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 40/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -27.115, 92.4085, 22.3176, 0.37 ) }
    dend_52 { pt3dadd( -27.2731, 93.188, 22.8557, 0.37 ) }
    dend_52 { pt3dadd( -27.5164, 93.7726, 23.3431, 0.37 ) }
    dend_52 { pt3dadd( -28.0553, 94.518, 24.0453, 0.37 ) }
    dend_52 { pt3dadd( -28.8574, 95.2228, 24.9086, 0.66 ) }
    dend_52 { pt3dadd( -29.3702, 95.6016, 25.4245, 0.52 ) }
    dend_52 { pt3dadd( -29.8442, 95.977, 25.9316, 0.29 ) }
    dend_52 { pt3dadd( -30.2415, 96.2626, 26.385, 0.29 ) }
    dend_52 { pt3dadd( -30.729, 96.5992, 26.9353, 0.29 ) }
    dend_52 { pt3dadd( -31.5115, 97.1462, 27.7447, 0.29 ) }
    dend_52 { pt3dadd( -32.0927, 97.6845, 28.2793, 0.22 ) }
    dend_52 { pt3dadd( -32.5082, 98.3146, 28.6803, 0.22 ) }
    dend_52 { pt3dadd( -32.7358, 98.8152, 28.905, 0.22 ) }
    dend_52 { pt3dadd( -32.9576, 99.3823, 29.0923, 0.52 ) }
    dend_52 { pt3dadd( -33.1441, 99.8763, 29.2047, 0.66 ) }
    dend_52 { pt3dadd( -33.2931, 100.279, 29.2516, 0.66 ) }
    dend_52 { pt3dadd( -33.7528, 101.354, 29.3132, 0.22 ) }
    dend_52 { pt3dadd( -34.0918, 101.977, 29.3337, 0.22 ) }
    dend_52 { pt3dadd( -34.5043, 102.648, 29.3502, 0.22 ) }
    dend_52 { pt3dadd( -34.7112, 102.951, 29.3604, 0.22 ) }
    dend_52 { pt3dadd( -40.4703, 109.706, 33.6995, 0.22 ) }
    dend_52 { pt3dadd( -46.6615, 117.077, 35.8244, 0.22 ) }
    dend_52 { pt3dadd( -52.239, 124.774, 38.387, 0.22 ) }
    dend_52 { pt3dadd( -57.2333, 132.886, 40.8039, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -36.1271, 149.707, 28.6873, 0.29 ) }
    dend_50 { pt3dadd( -36.3426, 150.813, 28.6368, 0.29 ) }
    dend_50 { pt3dadd( -36.592, 151.719, 28.602, 0.29 ) }
    dend_50 { pt3dadd( -36.8489, 152.531, 28.566, 0.29 ) }
    dend_50 { pt3dadd( -37.0836, 153.23, 28.5178, 0.29 ) }
    dend_50 { pt3dadd( -37.3362, 153.888, 28.4638, 0.29 ) }
    dend_50 { pt3dadd( -37.6975, 154.692, 28.3805, 0.59 ) }
    dend_50 { pt3dadd( -38.0294, 155.289, 28.3087, 0.81 ) }
    dend_50 { pt3dadd( -38.1695, 155.512, 28.2699, 0.81 ) }
    dend_50 { pt3dadd( -38.5355, 156.119, 28.1249, 0.29 ) }
    dend_50 { pt3dadd( -39.0078, 157.048, 27.8619, 0.29 ) }
    dend_50 { pt3dadd( -39.2908, 157.772, 27.6208, 0.29 ) }
    dend_50 { pt3dadd( -39.4713, 158.407, 27.3806, 0.29 ) }
    dend_50 { pt3dadd( -39.6117, 159.095, 27.1275, 0.52 ) }
    dend_50 { pt3dadd( -39.763, 159.923, 26.8819, 0.29 ) }
    dend_50 { pt3dadd( -39.9089, 160.687, 26.7089, 0.29 ) }
    dend_50 { pt3dadd( -40.0061, 161.526, 26.5226, 0.29 ) }
    dend_50 { pt3dadd( -40.0607, 162.302, 26.374, 0.22 ) }
    dend_50 { pt3dadd( -40.1194, 162.934, 26.2788, 0.22 ) }
    dend_50 { pt3dadd( -40.3561, 164.091, 26.2467, 0.37 ) }
    dend_50 { pt3dadd( -40.7078, 164.914, 26.4068, 0.44 ) }
    dend_50 { pt3dadd( -42.033, 174.323, 24.1468, 0.44 ) }
    dend_50 { pt3dadd( -43.167, 183.852, 22.3575, 0.44 ) }
    dend_50 { pt3dadd( -44.0957, 193.559, 22.5035, 0.44 ) }
    dend_50 { pt3dadd( -44.1654, 203.291, 23.1015, 0.44 ) }
    dend_50 { pt3dadd( -45.4206, 212.788, 24.983, 0.44 ) }
    dend_50 { pt3dadd( -47.3791, 222.33, 25.6141, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 91/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -36.1271, 149.707, 28.6873, 0.29 ) }
    dend_49 { pt3dadd( -34.681, 149.258, 29.4711, 0.29 ) }
    dend_49 { pt3dadd( -34.1227, 149.087, 29.7791, 0.29 ) }
    dend_49 { pt3dadd( -33.3667, 148.883, 30.1824, 0.22 ) }
    dend_49 { pt3dadd( -32.6149, 148.709, 30.554, 0.22 ) }
    dend_49 { pt3dadd( -30.6928, 148.292, 31.4518, 0.22 ) }
    dend_49 { pt3dadd( -29.6909, 148.086, 31.9128, 0.22 ) }
    dend_49 { pt3dadd( -28.9854, 147.984, 32.2298, 0.22 ) }
    dend_49 { pt3dadd( -28.367, 147.897, 32.5195, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_49 { pt3dadd( -27.4948, 147.781, 32.9368, 0.52 ) }
    dend_49 { pt3dadd( -27.1667, 147.746, 33.0838, 0.52 ) }
    dend_49 { pt3dadd( -25.7152, 147.643, 33.5674, 0.22 ) }
    dend_49 { pt3dadd( -24.895, 147.617, 33.8174, 0.22 ) }
    dend_49 { pt3dadd( -16.1776, 145.818, 38.3563, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 5/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 54.5212, 155.441, 25.7959, 0.66 ) }
    dend_45 { pt3dadd( 50.0348, 162.479, 31.0649, 0.66 ) }
    dend_45 { pt3dadd( 47.3316, 171.103, 34.8663, 0.66 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 8/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 54.5212, 155.441, 25.7959, 0.29 ) }
    dend_44 { pt3dadd( 49.8115, 162.446, 30.9139, 0.66 ) }
    dend_44 { pt3dadd( 46.659, 169.468, 37.0936, 0.66 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 11/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -200.538, -8.92138, 72.8988, 0.44 ) }
    dend_39 { pt3dadd( -207.887, -11.9895, 78.906, 0.44 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 13/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -200.538, -8.92138, 72.8988, 0.29 ) }
    dend_38 { pt3dadd( -208.687, -13.7229, 75.9555, 0.44 ) }
    dend_38 { pt3dadd( -216.455, -19.7047, 77.3742, 0.44 ) }
    dend_38 { pt3dadd( -224.956, -23.9247, 80.3743, 0.44 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -143.028, 38.3875, 33.3688, 0.44 ) }
    dend_36 { pt3dadd( -143.693, 38.333, 33.6681, 0.44 ) }
    dend_36 { pt3dadd( -144.418, 38.1848, 34.0392, 0.44 ) }
    dend_36 { pt3dadd( -145.103, 38.015, 34.4655, 0.59 ) }
    dend_36 { pt3dadd( -146.018, 37.8076, 35.043, 0.74 ) }
    dend_36 { pt3dadd( -146.818, 37.649, 35.528, 0.74 ) }
    dend_36 { pt3dadd( -147.303, 37.5408, 35.8044, 0.74 ) }
    dend_36 { pt3dadd( -147.794, 37.3815, 36.0751, 0.74 ) }
    dend_36 { pt3dadd( -148.716, 36.9808, 36.6197, 0.66 ) }
    dend_36 { pt3dadd( -149.25, 36.7159, 36.9419, 0.52 ) }
    dend_36 { pt3dadd( -149.778, 36.4633, 37.2534, 0.81 ) }
    dend_36 { pt3dadd( -150.524, 36.1751, 37.6667, 0.59 ) }
    dend_36 { pt3dadd( -151.529, 35.8915, 38.1829, 0.29 ) }
    dend_36 { pt3dadd( -152.978, 35.4597, 38.9088, 0.29 ) }
    dend_36 { pt3dadd( -153.571, 35.2603, 39.1991, 0.22 ) }
    dend_36 { pt3dadd( -154.082, 35.0718, 39.484, 0.22 ) }
    dend_36 { pt3dadd( -154.817, 34.8238, 39.9479, 0.22 ) }
    dend_36 { pt3dadd( -155.63, 34.7365, 40.5109, 0.22 ) }
    dend_36 { pt3dadd( -164.149, 33.1723, 45.4967, 0.22 ) }
    dend_36 { pt3dadd( -172.045, 31.5676, 51.4077, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 37/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -143.028, 38.3875, 33.3688, 0.29 ) }
    dend_35 { pt3dadd( -142.417, 38.9168, 33.5005, 0.29 ) }
    dend_35 { pt3dadd( -141.972, 39.3023, 33.5964, 0.29 ) }
    dend_35 { pt3dadd( -141.468, 39.7385, 33.7049, 0.29 ) }
    dend_35 { pt3dadd( -140.96, 40.1784, 33.8143, 0.29 ) }
    dend_35 { pt3dadd( -140.351, 40.7056, 33.9455, 0.29 ) }
    dend_35 { pt3dadd( -134.169, 47.6027, 37.3716, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 44/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -143.779, 24.0504, -27.1343, 0.29 ) }
    dend_31 { pt3dadd( -144.802, 23.7598, -27.8519, 0.29 ) }
    dend_31 { pt3dadd( -145.457, 23.5754, -28.3932, 0.37 ) }
    dend_31 { pt3dadd( -146.175, 23.4035, -28.9885, 0.37 ) }
    dend_31 { pt3dadd( -147.113, 23.2231, -29.7729, 0.29 ) }
    dend_31 { pt3dadd( -148.584, 23.0177, -31.0114, 0.29 ) }
    dend_31 { pt3dadd( -149.555, 22.8821, -31.8288, 0.44 ) }
    dend_31 { pt3dadd( -151.312, 22.6998, -33.3482, 0.66 ) }
    dend_31 { pt3dadd( -152.015, 22.6326, -33.9628, 0.44 ) }
    dend_31 { pt3dadd( -152.607, 22.5876, -34.499, 0.37 ) }
    dend_31 { pt3dadd( -153.239, 22.581, -35.1275, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 55/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -143.779, 24.0504, -27.1343, 0.29 ) }
    dend_30 { pt3dadd( -144.33, 22.822, -27.2656, 0.29 ) }
    dend_30 { pt3dadd( -144.931, 21.3035, -27.4763, 0.29 ) }
    dend_30 { pt3dadd( -145.369, 20.0467, -27.6013, 0.29 ) }
    dend_30 { pt3dadd( -145.844, 18.454, -27.7302, 0.29 ) }
    dend_30 { pt3dadd( -146.078, 17.5555, -27.8206, 0.66 ) }
    dend_30 { pt3dadd( -146.423, 16.0878, -27.9777, 0.52 ) }
    dend_30 { pt3dadd( -146.812, 14.0371, -28.2374, 0.44 ) }
    dend_30 { pt3dadd( -147.202, 11.3726, -28.6059, 0.29 ) }
    dend_30 { pt3dadd( -147.476, 8.76776, -28.9924, 0.29 ) }
    dend_30 { pt3dadd( -147.631, 6.5803, -29.3223, 0.44 ) }
    dend_30 { pt3dadd( -147.679, 5.57082, -29.4397, 0.44 ) }
    dend_30 { pt3dadd( -147.691, 4.92126, -29.4857, 0.44 ) }
    dend_30 { pt3dadd( -147.679, 3.81698, -29.5203, 0.44 ) }
    dend_30 { pt3dadd( -147.63, 2.60603, -29.4944, 0.29 ) }
    dend_30 { pt3dadd( -147.526, 0.762212, -29.2944, 0.29 ) }
    dend_30 { pt3dadd( -147.429, -0.651253, -29.0713, 0.29 ) }
    dend_30 { pt3dadd( -147.314, -2.47701, -28.7995, 0.29 ) }
    dend_30 { pt3dadd( -147.211, -4.32237, -28.5346, 0.74 ) }
    dend_30 { pt3dadd( -147.167, -5.25079, -28.4135, 0.74 ) }
    dend_30 { pt3dadd( -147.001, -8.34833, -28.0272, 0.29 ) }
    dend_30 { pt3dadd( -146.872, -10.5487, -27.7896, 0.29 ) }
    dend_30 { pt3dadd( -146.805, -11.7431, -27.7088, 0.44 ) }
    dend_30 { pt3dadd( -146.76, -12.455, -27.6964, 0.44 ) }
    dend_30 { pt3dadd( -146.688, -13.6477, -27.7156, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 80/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -67.032, 172.534, -71.7502, 0.88 ) }
    dend_26 { pt3dadd( -66.3711, 172.557, -72.3843, 0.88 ) }
    dend_26 { pt3dadd( -65.3753, 172.522, -73.2749, 0.66 ) }
    dend_26 { pt3dadd( -63.0, 172.451, -75.1739, 0.59 ) }
    dend_26 { pt3dadd( -62.0346, 172.472, -75.8921, 0.52 ) }
    dend_26 { pt3dadd( -61.2894, 172.528, -76.4232, 0.44 ) }
    dend_26 { pt3dadd( -60.2365, 172.691, -77.1307, 0.44 ) }
    dend_26 { pt3dadd( -59.6379, 172.828, -77.5393, 0.44 ) }
    dend_26 { pt3dadd( -58.8531, 173.063, -78.0529, 0.44 ) }
    dend_26 { pt3dadd( -57.9629, 173.384, -78.454, 0.88 ) }
    dend_26 { pt3dadd( -57.397, 173.562, -78.6737, 0.88 ) }
    dend_26 { pt3dadd( -56.2396, 173.912, -79.0987, 0.44 ) }
    dend_26 { pt3dadd( -55.4653, 174.108, -79.3701, 0.66 ) }
    dend_26 { pt3dadd( -54.7328, 174.2, -79.6967, 0.66 ) }
    dend_26 { pt3dadd( -53.9612, 174.204, -80.0903, 0.66 ) }
    dend_26 { pt3dadd( -53.1899, 174.139, -80.5171, 0.88 ) }
    dend_26 { pt3dadd( -52.7593, 174.103, -80.7498, 0.88 ) }
    dend_26 { pt3dadd( -51.9288, 174.04, -81.1914, 0.44 ) }
    dend_26 { pt3dadd( -50.0651, 174.018, -82.0959, 0.37 ) }
    dend_26 { pt3dadd( -49.3854, 174.071, -82.383, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_26 { pt3dadd( -48.8341, 174.155, -82.5695, 0.96 ) }
    dend_26 { pt3dadd( -47.4232, 174.436, -82.9316, 0.37 ) }
    dend_26 { pt3dadd( -46.4424, 174.642, -83.1144, 0.29 ) }
    dend_26 { pt3dadd( -45.578, 174.836, -83.2152, 0.29 ) }
    dend_26 { pt3dadd( -44.7264, 175.011, -83.2404, 0.59 ) }
    dend_26 { pt3dadd( -43.7992, 175.18, -83.2474, 0.74 ) }
    dend_26 { pt3dadd( -43.3476, 175.264, -83.2333, 0.74 ) }
    dend_26 { pt3dadd( -42.1645, 175.446, -83.1718, 0.29 ) }
    dend_26 { pt3dadd( -40.7956, 175.604, -83.1072, 0.29 ) }
    dend_26 { pt3dadd( -40.5319, 175.615, -83.1028, 0.74 ) }
    dend_26 { pt3dadd( -39.7301, 175.595, -83.1212, 1.03 ) }
    dend_26 { pt3dadd( -39.1499, 175.564, -83.1568, 1.03 ) }
    dend_26 { pt3dadd( -37.961, 175.471, -83.2428, 0.29 ) }
    dend_26 { pt3dadd( -36.9641, 175.363, -83.3169, 0.37 ) }
    dend_26 { pt3dadd( -35.932, 175.198, -83.4187, 0.37 ) }
    dend_26 { pt3dadd( -34.7985, 175.022, -83.5626, 0.81 ) }
    dend_26 { pt3dadd( -33.9621, 174.917, -83.7041, 0.96 ) }
    dend_26 { pt3dadd( -33.2881, 174.846, -83.8213, 0.96 ) }
    dend_26 { pt3dadd( -32.5434, 174.789, -83.9222, 0.66 ) }
    dend_26 { pt3dadd( -31.5757, 174.694, -84.0014, 0.37 ) }
    dend_26 { pt3dadd( -30.4595, 174.495, -84.0394, 0.29 ) }
    dend_26 { pt3dadd( -29.7617, 174.292, -84.0182, 0.29 ) }
    dend_26 { pt3dadd( -29.0393, 174.018, -83.9537, 0.59 ) }
    dend_26 { pt3dadd( -28.3219, 173.677, -83.8601, 0.59 ) }
    dend_26 { pt3dadd( -27.4992, 173.196, -83.7236, 0.29 ) }
    dend_26 { pt3dadd( -26.7398, 172.692, -83.5745, 0.29 ) }
    dend_26 { pt3dadd( -26.0054, 172.147, -83.4521, 0.52 ) }
    dend_26 { pt3dadd( -25.6194, 171.853, -83.4026, 0.52 ) }
    dend_26 { pt3dadd( -24.835, 171.272, -83.2964, 0.29 ) }
    dend_26 { pt3dadd( -24.0732, 170.721, -83.1873, 0.44 ) }
    dend_26 { pt3dadd( -23.4031, 170.22, -83.0239, 0.44 ) }
    dend_26 { pt3dadd( -22.3636, 169.341, -82.7635, 0.29 ) }
    dend_26 { pt3dadd( -22.0082, 168.994, -82.6685, 0.29 ) }
    dend_26 { pt3dadd( -21.0016, 167.89, -82.3913, 0.81 ) }
    dend_26 { pt3dadd( -20.665, 167.457, -82.2918, 0.81 ) }
    dend_26 { pt3dadd( -19.6151, 165.904, -81.9581, 0.29 ) }
    dend_26 { pt3dadd( -18.5648, 164.184, -81.6133, 0.29 ) }
    dend_26 { pt3dadd( -18.1184, 163.389, -81.4574, 0.81 ) }
    dend_26 { pt3dadd( -17.7575, 162.71, -81.3534, 0.81 ) }
    dend_26 { pt3dadd( -17.0383, 161.279, -81.2313, 0.37 ) }
    dend_26 { pt3dadd( -16.5915, 160.387, -81.1752, 0.29 ) }
    dend_26 { pt3dadd( -15.7982, 158.726, -81.1264, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 42/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -67.032, 172.534, -71.7502, 0.52 ) }
    dend_25 { pt3dadd( -66.7093, 173.535, -72.196, 0.52 ) }
    dend_25 { pt3dadd( -66.288, 174.667, -72.8649, 0.44 ) }
    dend_25 { pt3dadd( -65.9206, 175.674, -73.51, 0.44 ) }
    dend_25 { pt3dadd( -65.4939, 176.981, -74.3255, 0.44 ) }
    dend_25 { pt3dadd( -65.1289, 178.17, -75.0409, 0.44 ) }
    dend_25 { pt3dadd( -64.9059, 178.906, -75.4481, 0.44 ) }
    dend_25 { pt3dadd( -64.4096, 180.399, -76.2033, 0.44 ) }
    dend_25 { pt3dadd( -63.9869, 181.646, -76.7952, 0.44 ) }
    dend_25 { pt3dadd( -63.6246, 182.754, -77.2393, 0.81 ) }
    dend_25 { pt3dadd( -63.3564, 183.592, -77.5016, 0.96 ) }
    dend_25 { pt3dadd( -62.8707, 185.057, -77.8353, 0.29 ) }
    dend_25 { pt3dadd( -62.5263, 186.066, -77.963, 0.52 ) }
    dend_25 { pt3dadd( -62.2473, 186.851, -77.9749, 0.74 ) }
    dend_25 { pt3dadd( -61.9224, 187.653, -77.9426, 0.29 ) }
    dend_25 { pt3dadd( -61.3522, 188.975, -77.8284, 0.29 ) }
    dend_25 { pt3dadd( -60.8961, 190.066, -77.69, 0.74 ) }
    dend_25 { pt3dadd( -60.6169, 190.763, -77.6051, 0.74 ) }
    dend_25 { pt3dadd( -60.1869, 191.802, -77.4517, 0.52 ) }
    dend_25 { pt3dadd( -59.7792, 192.741, -77.2616, 0.59 ) }
    dend_25 { pt3dadd( -59.2473, 193.86, -76.9876, 0.29 ) }
    dend_25 { pt3dadd( -59.0107, 194.312, -76.8638, 0.29 ) }
    dend_25 { pt3dadd( -58.5368, 195.157, -76.6333, 0.96 ) }
    dend_25 { pt3dadd( -57.8298, 196.501, -76.1867, 0.29 ) }
    dend_25 { pt3dadd( -57.5288, 197.109, -75.9465, 0.29 ) }
    dend_25 { pt3dadd( -57.1359, 197.943, -75.5832, 0.66 ) }
    dend_25 { pt3dadd( -56.8582, 198.586, -75.2951, 0.37 ) }
    dend_25 { pt3dadd( -56.3671, 199.852, -74.7053, 0.37 ) }
    dend_25 { pt3dadd( -55.9613, 201.09, -74.1232, 0.44 ) }
    dend_25 { pt3dadd( -55.7362, 201.968, -73.7598, 0.81 ) }
    dend_25 { pt3dadd( -55.5713, 202.786, -73.4608, 0.81 ) }
    dend_25 { pt3dadd( -55.4453, 203.6, -73.2055, 0.66 ) }
    dend_25 { pt3dadd( -55.3172, 204.645, -72.9204, 0.44 ) }
    dend_25 { pt3dadd( -55.2534, 205.274, -72.7885, 0.37 ) }
    dend_25 { pt3dadd( -55.1654, 206.036, -72.691, 0.37 ) }
    dend_25 { pt3dadd( -55.048, 207.061, -72.6162, 0.81 ) }
    dend_25 { pt3dadd( -54.987, 207.692, -72.5733, 1.11 ) }
    dend_25 { pt3dadd( -54.9339, 208.298, -72.5597, 1.11 ) }
    dend_25 { pt3dadd( -54.8797, 209.242, -72.5769, 0.59 ) }
    dend_25 { pt3dadd( -54.8684, 210.146, -72.543, 0.59 ) }
    dend_25 { pt3dadd( -54.91, 210.987, -72.4727, 0.81 ) }
    dend_25 { pt3dadd( -55.046, 212.46, -72.2976, 0.59 ) }
    dend_25 { pt3dadd( -55.153, 213.496, -72.1621, 0.29 ) }
    dend_25 { pt3dadd( -55.2565, 214.486, -72.0752, 0.29 ) }
    dend_25 { pt3dadd( -55.4111, 216.178, -72.103, 0.29 ) }
    dend_25 { pt3dadd( -55.4471, 216.973, -72.262, 0.29 ) }
    dend_25 { pt3dadd( -55.4266, 217.59, -72.648, 0.29 ) }
    dend_25 { pt3dadd( -55.3452, 218.157, -73.2361, 0.29 ) }
    dend_25 { pt3dadd( -55.1055, 219.016, -74.3454, 0.96 ) }
    dend_25 { pt3dadd( -54.668, 220.072, -75.8904, 1.11 ) }
    dend_25 { pt3dadd( -54.457, 220.506, -76.6039, 1.11 ) }
    dend_25 { pt3dadd( -53.973, 221.412, -78.1856, 0.74 ) }
    dend_25 { pt3dadd( -53.6549, 222.027, -79.2918, 0.29 ) }
    dend_25 { pt3dadd( -53.4508, 222.485, -80.0656, 0.29 ) }
    dend_25 { pt3dadd( -53.3003, 222.814, -80.5429, 0.66 ) }
    // Section: dend_18, id: dend_18, parent: dend_3 (entry count 97/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -121.137, 82.5681, 9.74887, 0.37 ) }
    dend_18 { pt3dadd( -121.869, 83.4527, 10.1246, 0.37 ) }
    dend_18 { pt3dadd( -122.649, 84.1995, 10.5362, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_18 { pt3dadd( -123.474, 84.7342, 11.0358, 0.52 ) }
    dend_18 { pt3dadd( -124.21, 85.1504, 11.6305, 0.59 ) }
    dend_18 { pt3dadd( -125.195, 85.7084, 12.4277, 0.66 ) }
    dend_18 { pt3dadd( -125.816, 86.0597, 12.9296, 0.52 ) }
    dend_18 { pt3dadd( -126.517, 86.3643, 13.5812, 0.66 ) }
    dend_18 { pt3dadd( -127.729, 86.6452, 14.8656, 0.74 ) }
    dend_18 { pt3dadd( -128.83, 86.7033, 16.1493, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_3 (entry count 7/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -121.137, 82.5681, 9.74887, 0.37 ) }
    dend_17 { pt3dadd( -119.224, 82.6483, 8.90782, 0.37 ) }
    dend_17 { pt3dadd( -118.335, 82.5448, 8.48305, 0.37 ) }
    dend_17 { pt3dadd( -117.611, 82.3785, 8.15472, 0.37 ) }
    dend_17 { pt3dadd( -116.869, 82.1689, 7.79811, 0.37 ) }
    dend_17 { pt3dadd( -116.351, 82.0223, 7.54868, 0.37 ) }
    dend_17 { pt3dadd( -115.678, 81.8321, 7.22498, 0.52 ) }
    dend_17 { pt3dadd( -114.783, 81.4002, 6.90183, 0.52 ) }
    dend_17 { pt3dadd( -114.049, 80.9449, 6.60404, 0.74 ) }
    dend_17 { pt3dadd( -113.538, 80.5987, 6.33373, 0.74 ) }
    dend_17 { pt3dadd( -104.464, 78.1198, 2.98673, 0.74 ) }
    dend_17 { pt3dadd( -95.9704, 75.3874, -1.48604, 0.74 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 19/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -121.137, 82.5681, 9.74887, 0.44 ) }
    dend_4 { pt3dadd( -120.587, 83.5721, 10.4404, 0.44 ) }
    dend_4 { pt3dadd( -120.067, 84.5217, 11.0945, 0.52 ) }
    dend_4 { pt3dadd( -119.772, 85.0604, 11.4656, 0.37 ) }
    dend_4 { pt3dadd( -119.456, 85.6367, 11.8626, 0.29 ) }
    dend_4 { pt3dadd( -119.16, 86.1781, 12.2355, 0.44 ) }
    dend_4 { pt3dadd( -118.907, 86.6389, 12.5529, 0.59 ) }
    dend_4 { pt3dadd( -115.797, 93.9215, 18.4297, 0.59 ) }
    dend_4 { pt3dadd( -110.354, 100.402, 23.5483, 0.59 ) }
    dend_4 { pt3dadd( -105.774, 106.729, 29.6231, 0.59 ) }
    dend_4 { pt3dadd( -100.095, 113.119, 34.6026, 0.59 ) }
    dend_4 { pt3dadd( -93.3374, 119.037, 38.7863, 0.59 ) }
    dend_4 { pt3dadd( -87.1103, 125.852, 42.3021, 0.59 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 32/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -104.338, 115.269, -181.374, 0.59 ) }
    dend_62 { pt3dadd( -104.113, 115.522, -186.238, 0.59 ) }
    dend_62 { pt3dadd( -103.914, 115.606, -188.695, 0.59 ) }
    dend_62 { pt3dadd( -103.769, 115.609, -190.557, 0.52 ) }
    dend_62 { pt3dadd( -103.66, 115.595, -193.214, 0.44 ) }
    dend_62 { pt3dadd( -103.642, 115.596, -194.624, 0.52 ) }
    dend_62 { pt3dadd( -103.634, 115.623, -196.282, 0.74 ) }
    dend_62 { pt3dadd( -103.68, 115.779, -198.852, 0.96 ) }
    dend_62 { pt3dadd( -103.657, 115.97, -200.562, 0.66 ) }
    dend_62 { pt3dadd( -103.605, 116.126, -202.321, 0.52 ) }
    dend_62 { pt3dadd( -103.628, 116.18, -202.965, 0.52 ) }
    dend_62 { pt3dadd( -103.767, 116.26, -203.909, 0.59 ) }
    dend_62 { pt3dadd( -104.019, 116.371, -204.793, 0.59 ) }
    dend_62 { pt3dadd( -104.256, 116.843, -205.405, 0.59 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -104.338, 115.269, -181.374, 0.74 ) }
    dend_59 { pt3dadd( -106.147, 116.588, -181.427, 0.74 ) }
    dend_59 { pt3dadd( -106.799, 117.057, -181.398, 0.74 ) }
    dend_59 { pt3dadd( -107.703, 117.625, -181.357, 0.74 ) }
    dend_59 { pt3dadd( -108.408, 117.995, -181.356, 0.74 ) }
    dend_59 { pt3dadd( -109.791, 118.649, -181.4, 0.44 ) }
    dend_59 { pt3dadd( -110.419, 118.908, -181.447, 0.37 ) }
    dend_59 { pt3dadd( -111.154, 119.145, -181.524, 0.66 ) }
    dend_59 { pt3dadd( -112.145, 119.352, -181.768, 0.81 ) }
    dend_59 { pt3dadd( -113.216, 119.486, -182.174, 0.81 ) }
    dend_59 { pt3dadd( -113.393, 119.507, -182.27, 0.96 ) }
    dend_59 { pt3dadd( -114.116, 119.622, -182.769, 0.96 ) }
    dend_59 { pt3dadd( -115.18, 119.917, -183.648, 0.59 ) }
    dend_59 { pt3dadd( -115.649, 120.121, -184.124, 0.59 ) }
    dend_59 { pt3dadd( -116.409, 120.515, -185.044, 0.96 ) }
    dend_59 { pt3dadd( -117.084, 120.841, -185.911, 0.96 ) }
    dend_59 { pt3dadd( -117.409, 120.979, -186.322, 0.74 ) }
    dend_59 { pt3dadd( -118.03, 121.264, -187.086, 0.74 ) }
    dend_59 { pt3dadd( -118.962, 121.747, -188.138, 0.59 ) }
    dend_59 { pt3dadd( -119.891, 122.293, -189.076, 0.59 ) }
    dend_59 { pt3dadd( -120.676, 122.843, -189.712, 0.52 ) }
    dend_59 { pt3dadd( -121.198, 123.311, -190.01, 0.52 ) }
    dend_59 { pt3dadd( -121.863, 124.115, -190.242, 0.66 ) }
    dend_59 { pt3dadd( -122.521, 125.181, -190.31, 0.74 ) }
    dend_59 { pt3dadd( -123.112, 126.39, -190.256, 0.52 ) }
    dend_59 { pt3dadd( -123.553, 127.426, -190.167, 0.52 ) }
    dend_59 { pt3dadd( -124.078, 128.778, -190.039, 0.52 ) }
    dend_59 { pt3dadd( -124.595, 130.124, -189.928, 0.66 ) }
    dend_59 { pt3dadd( -125.093, 131.283, -189.868, 0.52 ) }
    dend_59 { pt3dadd( -125.92, 132.952, -189.813, 0.52 ) }
    dend_59 { pt3dadd( -126.328, 133.66, -189.806, 0.96 ) }
    dend_59 { pt3dadd( -126.925, 134.534, -189.82, 0.96 ) }
    dend_59 { pt3dadd( -127.684, 135.446, -189.896, 0.52 ) }
    dend_59 { pt3dadd( -128.693, 136.484, -190.08, 0.52 ) }
    dend_59 { pt3dadd( -129.401, 137.152, -190.236, 1.11 ) }
    dend_59 { pt3dadd( -129.922, 137.626, -190.368, 1.11 ) }
    dend_59 { pt3dadd( -130.393, 138.065, -190.493, 0.81 ) }
    dend_59 { pt3dadd( -131.031, 138.738, -190.673, 0.81 ) }
    dend_59 { pt3dadd( -131.772, 139.701, -190.941, 0.66 ) }
    dend_59 { pt3dadd( -132.217, 140.52, -191.203, 0.66 ) }
    dend_59 { pt3dadd( -132.551, 141.528, -191.652, 0.66 ) }
    dend_59 { pt3dadd( -132.614, 142.15, -192.018, 0.66 ) }
    dend_59 { pt3dadd( -132.528, 143.1, -192.664, 0.81 ) }
    dend_59 { pt3dadd( -132.341, 143.839, -193.218, 0.81 ) }
    dend_59 { pt3dadd( -132.024, 144.702, -193.91, 0.66 ) }
    dend_59 { pt3dadd( -131.515, 145.992, -194.916, 0.59 ) }
    dend_59 { pt3dadd( -131.226, 146.79, -195.466, 0.59 ) }
    dend_59 { pt3dadd( -131.015, 147.593, -195.936, 0.81 ) }
    dend_59 { pt3dadd( -130.924, 148.271, -196.22, 1.18 ) }
    dend_59 { pt3dadd( -130.937, 149.11, -196.498, 0.96 ) }
    dend_59 { pt3dadd( -131.091, 149.989, -196.759, 0.96 ) }
    dend_59 { pt3dadd( -131.442, 150.999, -197.057, 0.81 ) }
    dend_59 { pt3dadd( -131.8, 151.645, -197.297, 0.81 ) }
    dend_59 { pt3dadd( -132.62, 152.579, -197.746, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_59 { pt3dadd( -133.832, 153.558, -198.268, 0.52 ) }
    dend_59 { pt3dadd( -134.922, 154.264, -198.673, 0.74 ) }
    dend_59 { pt3dadd( -135.83, 154.807, -198.962, 1.18 ) }
    dend_59 { pt3dadd( -136.494, 155.206, -199.148, 1.18 ) }
    dend_59 { pt3dadd( -137.801, 156.017, -199.522, 0.59 ) }
    dend_59 { pt3dadd( -139.114, 156.851, -199.906, 0.59 ) }
    dend_59 { pt3dadd( -140.132, 157.57, -200.196, 0.66 ) }
    dend_59 { pt3dadd( -141.257, 158.454, -200.544, 0.66 ) }
    dend_59 { pt3dadd( -141.917, 158.981, -200.767, 0.81 ) }
    dend_59 { pt3dadd( -143.061, 159.934, -201.204, 0.66 ) }
    dend_59 { pt3dadd( -143.702, 160.473, -201.489, 0.66 ) }
    dend_59 { pt3dadd( -144.44, 161.035, -201.851, 0.66 ) }
    dend_59 { pt3dadd( -145.416, 161.676, -202.334, 1.03 ) }
    dend_59 { pt3dadd( -146.708, 162.335, -202.955, 1.47 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 14/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -128.83, 86.7033, 16.1493, 0.66 ) }
    dend_20 { pt3dadd( -128.933, 87.3262, 16.6545, 0.66 ) }
    dend_20 { pt3dadd( -129.069, 87.8041, 17.0136, 0.88 ) }
    dend_20 { pt3dadd( -129.463, 88.7458, 17.6913, 0.96 ) }
    dend_20 { pt3dadd( -130.008, 89.7052, 18.367, 1.11 ) }
    dend_20 { pt3dadd( -130.583, 90.4813, 18.9051, 0.52 ) }
    dend_20 { pt3dadd( -130.939, 90.8777, 19.1759, 0.59 ) }
    dend_20 { pt3dadd( -131.487, 91.3327, 19.5178, 0.66 ) }
    dend_20 { pt3dadd( -132.051, 91.7012, 19.7854, 0.66 ) }
    dend_20 { pt3dadd( -132.608, 92.0124, 20.0311, 0.66 ) }
    dend_20 { pt3dadd( -133.137, 92.3079, 20.3109, 0.66 ) }
    dend_20 { pt3dadd( -133.491, 92.5797, 20.6325, 0.52 ) }
    dend_20 { pt3dadd( -133.761, 93.0079, 21.174, 0.52 ) }
    dend_20 { pt3dadd( -133.838, 93.5034, 21.7521, 0.66 ) }
    dend_20 { pt3dadd( -133.831, 94.2821, 22.602, 0.81 ) }
    dend_20 { pt3dadd( -133.794, 94.8863, 23.2197, 0.52 ) }
    dend_20 { pt3dadd( -133.76, 95.5319, 23.8392, 0.66 ) }
    dend_20 { pt3dadd( -133.767, 96.089, 24.3476, 0.74 ) }
    dend_20 { pt3dadd( -133.901, 96.9802, 25.0675, 1.25 ) }
    dend_20 { pt3dadd( -134.13, 97.5717, 25.4933, 1.03 ) }
    dend_20 { pt3dadd( -134.485, 98.1346, 25.8408, 0.81 ) }
    dend_20 { pt3dadd( -134.916, 98.6754, 26.1537, 0.81 ) }
    dend_20 { pt3dadd( -135.412, 99.2298, 26.4257, 1.03 ) }
    dend_20 { pt3dadd( -135.987, 99.8463, 26.6511, 1.11 ) }
    dend_20 { pt3dadd( -136.798, 100.777, 26.9576, 0.59 ) }
    dend_20 { pt3dadd( -137.224, 101.385, 27.1311, 0.59 ) }
    dend_20 { pt3dadd( -137.557, 101.953, 27.3054, 0.59 ) }
    dend_20 { pt3dadd( -137.861, 102.52, 27.4962, 0.74 ) }
    dend_20 { pt3dadd( -138.421, 103.552, 27.8692, 0.81 ) }
    dend_20 { pt3dadd( -139.219, 104.904, 28.4287, 0.44 ) }
    dend_20 { pt3dadd( -139.577, 105.481, 28.6775, 0.81 ) }
    dend_20 { pt3dadd( -139.902, 106.038, 28.9593, 0.81 ) }
    dend_20 { pt3dadd( -140.27, 106.757, 29.3546, 0.44 ) }
    dend_20 { pt3dadd( -140.523, 107.368, 29.7271, 0.44 ) }
    dend_20 { pt3dadd( -140.643, 107.94, 30.059, 0.44 ) }
    dend_20 { pt3dadd( -140.604, 108.766, 30.5093, 0.59 ) }
    dend_20 { pt3dadd( -140.365, 109.95, 31.1478, 0.81 ) }
    dend_20 { pt3dadd( -140.175, 110.59, 31.4631, 0.96 ) }
    dend_20 { pt3dadd( -139.975, 111.151, 31.7185, 0.66 ) }
    dend_20 { pt3dadd( -139.489, 112.392, 32.2431, 0.52 ) }
    dend_20 { pt3dadd( -138.852, 113.996, 32.8812, 0.88 ) }
    dend_20 { pt3dadd( -138.588, 114.703, 33.1377, 0.88 ) }
    dend_20 { pt3dadd( -138.325, 115.561, 33.392, 0.59 ) }
    dend_20 { pt3dadd( -138.152, 116.446, 33.6222, 0.81 ) }
    dend_20 { pt3dadd( -138.134, 117.078, 33.7542, 0.81 ) }
    dend_20 { pt3dadd( -138.249, 117.724, 33.8485, 0.81 ) }
    dend_20 { pt3dadd( -138.417, 118.146, 33.8739, 0.59 ) }
    dend_20 { pt3dadd( -138.788, 118.718, 33.9325, 0.44 ) }
    dend_20 { pt3dadd( -139.301, 119.319, 33.9726, 0.44 ) }
    dend_20 { pt3dadd( -139.79, 119.806, 33.9865, 0.29 ) }
    dend_20 { pt3dadd( -140.229, 120.205, 33.985, 0.29 ) }
    dend_20 { pt3dadd( -141.028, 120.868, 33.9643, 0.22 ) }
    dend_20 { pt3dadd( -141.857, 121.515, 33.9379, 0.22 ) }
    dend_20 { pt3dadd( -142.913, 122.326, 33.8699, 0.22 ) }
    dend_20 { pt3dadd( -143.413, 122.707, 33.8135, 0.22 ) }
    dend_20 { pt3dadd( -143.937, 123.097, 33.7364, 0.22 ) }
    dend_20 { pt3dadd( -144.521, 123.513, 33.6293, 0.22 ) }
    dend_20 { pt3dadd( -144.935, 123.808, 33.5335, 0.44 ) }
    dend_20 { pt3dadd( -145.404, 124.099, 33.4278, 0.44 ) }
    dend_20 { pt3dadd( -149.378, 132.376, 36.9122, 0.44 ) }
    dend_20 { pt3dadd( -152.189, 141.102, 40.3762, 0.44 ) }
    dend_20 { pt3dadd( -153.468, 149.112, 45.9326, 0.44 ) }
    dend_20 { pt3dadd( -156.481, 156.062, 52.2658, 0.44 ) }
    dend_20 { pt3dadd( -158.252, 163.842, 58.0268, 0.44 ) }
    dend_20 { pt3dadd( -160.639, 171.311, 63.9942, 0.44 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 79/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -128.83, 86.7033, 16.1493, 0.29 ) }
    dend_19 { pt3dadd( -129.899, 86.8213, 16.5447, 0.29 ) }
    dend_19 { pt3dadd( -130.681, 86.9004, 16.8598, 0.37 ) }
    dend_19 { pt3dadd( -131.333, 86.979, 17.2018, 0.37 ) }
    dend_19 { pt3dadd( -132.121, 87.074, 17.6152, 0.37 ) }
    dend_19 { pt3dadd( -133.322, 87.2189, 18.2455, 0.29 ) }
    dend_19 { pt3dadd( -133.816, 87.2785, 18.5049, 0.29 ) }
    dend_19 { pt3dadd( -134.235, 87.3237, 18.7358, 0.59 ) }
    dend_19 { pt3dadd( -135.238, 87.4147, 19.4394, 0.52 ) }
    dend_19 { pt3dadd( -143.758, 88.3011, 24.5955, 0.52 ) }
    dend_19 { pt3dadd( -152.119, 89.3257, 29.9793, 0.52 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -87.1103, 125.852, 42.3021, 0.59 ) }
    dend_8 { pt3dadd( -82.0046, 129.348, 50.1173, 0.59 ) }
    dend_8 { pt3dadd( -76.5308, 132.895, 57.6539, 0.59 ) }
    dend_8 { pt3dadd( -70.0512, 136.634, 64.2349, 0.59 ) }
    dend_8 { pt3dadd( -65.3123, 141.175, 71.7082, 0.59 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 95/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -87.1103, 125.852, 42.3021, 0.88 ) }
    dend_5 { pt3dadd( -82.4954, 134.302, 44.1962, 0.59 ) }
    dend_5 { pt3dadd( -79.2683, 143.53, 44.3335, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 98/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -146.708, 162.335, -202.955, 0.66 ) }
    dend_61 { pt3dadd( -149.036, 162.012, -203.991, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_61 { pt3dadd( -149.736, 161.907, -204.302, 0.66 ) }
    dend_61 { pt3dadd( -150.69, 161.747, -204.717, 0.66 ) }
    dend_61 { pt3dadd( -152.29, 161.473, -205.487, 0.66 ) }
    dend_61 { pt3dadd( -153.676, 161.198, -206.252, 0.81 ) }
    dend_61 { pt3dadd( -155.573, 160.736, -207.382, 0.66 ) }
    dend_61 { pt3dadd( -156.566, 160.477, -208.018, 0.59 ) }
    dend_61 { pt3dadd( -157.251, 160.228, -208.515, 0.59 ) }
    dend_61 { pt3dadd( -158.519, 159.576, -209.572, 0.74 ) }
    dend_61 { pt3dadd( -159.521, 158.871, -210.504, 0.52 ) }
    dend_61 { pt3dadd( -160.113, 158.37, -211.059, 0.52 ) }
    dend_61 { pt3dadd( -160.803, 157.743, -211.639, 0.52 ) }
    dend_61 { pt3dadd( -161.425, 157.16, -212.124, 0.96 ) }
    dend_61 { pt3dadd( -161.914, 156.692, -212.435, 0.96 ) }
    dend_61 { pt3dadd( -162.637, 155.969, -212.787, 0.74 ) }
    dend_61 { pt3dadd( -163.019, 155.577, -212.942, 1.03 ) }
    dend_61 { pt3dadd( -163.878, 154.742, -213.268, 0.81 ) }
    dend_61 { pt3dadd( -164.787, 153.862, -213.586, 0.59 ) }
    dend_61 { pt3dadd( -165.45, 153.177, -213.838, 0.52 ) }
    dend_61 { pt3dadd( -166.07, 152.473, -214.081, 0.74 ) }
    dend_61 { pt3dadd( -166.756, 151.566, -214.386, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 20/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -146.708, 162.335, -202.955, 0.59 ) }
    dend_60 { pt3dadd( -148.797, 162.804, -201.108, 0.59 ) }
    dend_60 { pt3dadd( -149.395, 162.994, -200.646, 0.59 ) }
    dend_60 { pt3dadd( -149.988, 163.227, -200.244, 0.59 ) }
    dend_60 { pt3dadd( -151.072, 163.762, -199.645, 0.81 ) }
    dend_60 { pt3dadd( -152.267, 164.351, -198.987, 0.52 ) }
    dend_60 { pt3dadd( -153.366, 164.894, -198.38, 0.52 ) }
    dend_60 { pt3dadd( -154.06, 165.353, -198.131, 0.74 ) }
    dend_60 { pt3dadd( -154.61, 165.748, -197.93, 0.74 ) }
    dend_60 { pt3dadd( -155.773, 166.67, -197.629, 0.81 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 30/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -65.3123, 141.175, 71.7082, 0.59 ) }
    dend_14 { pt3dadd( -60.8626, 143.856, 80.231, 0.59 ) }
    dend_14 { pt3dadd( -56.6571, 147.245, 88.6116, 0.59 ) }
    dend_14 { pt3dadd( -50.7742, 151.534, 95.397, 0.59 ) }
    dend_14 { pt3dadd( -46.0439, 155.68, 103.113, 0.59 ) }
    dend_14 { pt3dadd( -41.083, 158.71, 111.22, 0.59 ) }
    dend_14 { pt3dadd( -37.1826, 160.404, 120.263, 0.59 ) }
    dend_14 { pt3dadd( -35.079, 163.584, 129.479, 0.59 ) }
    dend_14 { pt3dadd( -33.5712, 167.628, 138.453, 0.59 ) }
    dend_14 { pt3dadd( -31.333, 170.098, 147.864, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 40/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -65.3123, 141.175, 71.7082, 0.88 ) }
    dend_9 { pt3dadd( -59.2593, 145.736, 78.1488, 0.59 ) }
    dend_9 { pt3dadd( -53.93, 151.414, 84.2873, 0.59 ) }
    dend_9 { pt3dadd( -49.1525, 156.023, 91.6918, 0.59 ) }
    dend_9 { pt3dadd( -44.5906, 159.967, 99.6184, 0.59 ) }
    dend_9 { pt3dadd( -41.0546, 163.92, 108.048, 0.59 ) }
    dend_9 { pt3dadd( -38.1189, 167.62, 116.821, 0.59 ) }
    dend_9 { pt3dadd( -35.8833, 172.552, 125.153, 0.59 ) }
    dend_9 { pt3dadd( -35.6292, 176.992, 134.052, 0.59 ) }
    dend_9 { pt3dadd( -36.4153, 181.966, 142.617, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 50/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -79.2683, 143.53, 44.3335, 0.59 ) }
    dend_7 { pt3dadd( -74.9042, 150.63, 49.6181, 0.59 ) }
    dend_7 { pt3dadd( -71.1385, 157.863, 55.1665, 0.59 ) }
    dend_7 { pt3dadd( -66.2614, 163.937, 61.2818, 0.59 ) }
    dend_7 { pt3dadd( -62.5918, 171.041, 67.0655, 0.59 ) }
    dend_7 { pt3dadd( -58.1662, 177.989, 72.5089, 0.59 ) }
    dend_7 { pt3dadd( -53.8386, 184.628, 78.4172, 0.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -79.2683, 143.53, 44.3335, 0.88 ) }
    dend_6 { pt3dadd( -76.6073, 152.288, 40.8361, 0.59 ) }
    dend_6 { pt3dadd( -75.0737, 161.645, 38.4834, 0.59 ) }
    dend_6 { pt3dadd( -71.9234, 170.834, 37.3624, 0.59 ) }
    dend_6 { pt3dadd( -70.2399, 180.063, 34.6127, 0.59 ) }
    dend_6 { pt3dadd( -69.7084, 189.675, 33.0184, 0.59 ) }
    dend_6 { pt3dadd( -68.9901, 198.915, 29.9086, 0.59 ) }
    dend_6 { pt3dadd( -65.9185, 208.009, 28.0213, 0.59 ) }
    dend_6 { pt3dadd( -60.2841, 216.044, 27.433, 0.59 ) }
    dend_6 { pt3dadd( -56.784, 225.175, 27.2451, 0.59 ) }
    dend_6 { pt3dadd( -54.1349, 234.555, 26.5886, 0.59 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 68/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -31.333, 170.098, 147.864, 0.59 ) }
    dend_16 { pt3dadd( -28.7998, 169.835, 157.534, 0.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 70/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -31.333, 170.098, 147.864, 0.88 ) }
    dend_15 { pt3dadd( -26.7398, 176.97, 153.27, 0.59 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 72/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -36.4153, 181.966, 142.617, 0.59 ) }
    dend_11 { pt3dadd( -35.362, 181.46, 152.548, 0.59 ) }
    dend_11 { pt3dadd( -33.5546, 180.213, 162.3, 0.59 ) }
    dend_11 { pt3dadd( -31.5033, 179.531, 172.062, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 76/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -36.4153, 181.966, 142.617, 0.88 ) }
    dend_10 { pt3dadd( -32.1523, 189.584, 147.174, 0.59 ) }
    dend_10 { pt3dadd( -26.6998, 196.23, 152.054, 0.59 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 79/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -31.5033, 179.531, 172.062, 0.59 ) }
    dend_13 { pt3dadd( -29.0442, 178.927, 181.735, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -31.5033, 179.531, 172.062, 0.88 ) }
    dend_12 { pt3dadd( -30.7911, 178.491, 181.98, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_40, dend_0, dend_81, dend_70, dend_54, dend_41, dend_27, dend_1, dend_83, dend_82, dend_76, dend_71, dend_64, dend_55, dend_47, dend_42, dend_33, dend_28, dend_22, dend_2, dend_78, dend_77, dend_73, dend_72, dend_66, dend_65, dend_63, dend_56, dend_51, dend_48, dend_46, dend_43, dend_37, dend_34, dend_32, dend_29, dend_24, dend_23, dend_21, dend_3, dend_80, dend_79, dend_75, dend_74, dend_68, dend_67, dend_58, dend_57, dend_53, dend_52, dend_50, dend_49, dend_45, dend_44, dend_39, dend_38, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_18, dend_17, dend_4, dend_62, dend_59, dend_20, dend_19, dend_8, dend_5, dend_61, dend_60, dend_14, dend_9, dend_7, dend_6, dend_16, dend_15, dend_11, dend_10, dend_13, dend_12]}
    ModelViewParmSubset_2 = new SectionList()
    dend_69 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_40, dend_0, dend_81, dend_70, dend_54, dend_41, dend_27, dend_1, dend_83, dend_82, dend_76, dend_71, dend_64, dend_55, dend_47, dend_42, dend_33, dend_28, dend_22, dend_2, dend_78, dend_77, dend_73, dend_72, dend_66, dend_65, dend_63, dend_56, dend_51, dend_48, dend_46, dend_43, dend_37, dend_34, dend_32, dend_29, dend_24, dend_23, dend_21, dend_3, dend_80, dend_79, dend_75, dend_74, dend_68, dend_67, dend_58, dend_57, dend_53, dend_52, dend_50, dend_49, dend_45, dend_44, dend_39, dend_38, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_18, dend_17, dend_4, dend_62, dend_59, dend_20, dend_19, dend_8, dend_5, dend_61, dend_60, dend_14, dend_9, dend_7, dend_6, dend_16, dend_15, dend_11, dend_10, dend_13, dend_12]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_82 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_54 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_41 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_83 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_82 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_76 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_71 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_64 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_55 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_33 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_22 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_77 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_72 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_66 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_65 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_63 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_56 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_48 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_43 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_37 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_24 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_23 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_21 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_75 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_74 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_67 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_53 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_52 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_50 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_26 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_25 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_4 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_59 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_14 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_9 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_7 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_6 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_69 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_70 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_81 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_47 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_51 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_73 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_29 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_34 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_18 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_31 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_35 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_17 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_78 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_19 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_30 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_36 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_49 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_80 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_79 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_5 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_45 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_44 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_68 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_8 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_57 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_38 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_58 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_62 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_15 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_16 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_60 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_10 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_11 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_61 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_12 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_13 OneSecGrp_SectionRef_86.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_70, dend_70, dend_70, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_80, dend_80, dend_79, dend_79, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_44, dend_44, dend_39, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_16, dend_15, dend_11, dend_11, dend_11, dend_10, dend_10, dend_13, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_13 all.append()
    dend_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_54 nseg = 5
    dend_41 nseg = 3
    dend_27 nseg = 3
    dend_83 nseg = 13
    dend_82 nseg = 5
    dend_76 nseg = 7
    dend_71 nseg = 3
    dend_64 nseg = 3
    dend_55 nseg = 3
    dend_42 nseg = 5
    dend_33 nseg = 3
    dend_28 nseg = 3
    dend_22 nseg = 5
    dend_2 nseg = 3
    dend_77 nseg = 3
    dend_72 nseg = 11
    dend_66 nseg = 3
    dend_65 nseg = 5
    dend_63 nseg = 9
    dend_56 nseg = 5
    dend_48 nseg = 5
    dend_46 nseg = 7
    dend_43 nseg = 3
    dend_37 nseg = 5
    dend_32 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 3
    dend_21 nseg = 7
    dend_3 nseg = 3
    dend_75 nseg = 11
    dend_74 nseg = 3
    dend_67 nseg = 3
    dend_53 nseg = 5
    dend_52 nseg = 3
    dend_50 nseg = 3
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_4 nseg = 3
    dend_59 nseg = 3
    dend_20 nseg = 5
    dend_14 nseg = 5
    dend_9 nseg = 5
    dend_7 nseg = 3
    dend_6 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_MC_464f0bd828_0_0


