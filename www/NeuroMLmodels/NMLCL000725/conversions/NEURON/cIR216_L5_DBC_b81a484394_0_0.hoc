// Cell: cIR216_L5_DBC_b81a484394_0_0
/*
{
  "id" : "cIR216_L5_DBC_b81a484394_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.29416, -10.039, 0.0, 3.29577", "-2.90858, -8.93717, 0.0, 5.95579", "-2.523, -7.83528, 0.0, 9.15271", "-2.13742, -6.7334, 0.0, 11.3921", "-1.75184, -5.63152, 0.0, 12.7837", "-1.36626, -4.52964, 0.0, 13.7064", "-0.980683, -3.42776, 0.0, 14.2605", "-0.595104, -2.32587, 0.0, 14.5213", "-0.209524, -1.22399, 0.0, 14.7821", "0.176055, -0.122111, 0.0, 14.8675", "0.561635, 0.979771, 0.0, 14.5727", "0.947214, 2.08165, 0.0, 14.1", "1.33279, 3.18354, 0.0, 13.169", "1.71837, 4.28542, 0.0, 12.1705", "2.10395, 5.3873, 0.0, 11.0272", "2.48953, 6.48918, 0.0, 9.72958", "2.87511, 7.59106, 0.0, 8.28215", "3.26069, 8.69295, 0.0, 6.88757", "3.64627, 9.79483, 0.0, 5.52197", "4.03185, 10.8967, 0.0, 3.91408", "4.41743, 11.9986, 0.0, 2.33646" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.37545, -10.4718, 9.67, 2.76", "-1.58711, -12.249, 9.74401, 2.76", "-1.94497, -14.5324, 9.75749, 2.76", "-2.29752, -16.4407, 9.74123, 2.76", "-2.8517, -19.1174, 9.69892, 2.16", "-3.37503, -21.6008, 9.70074, 2.16", "-4.13374, -25.1015, 9.73797, 1.92", "-4.88466, -28.1315, 9.7932, 1.92", "-5.27661, -29.5761, 9.82304, 1.92", "-6.16551, -32.7271, 9.89763, 1.92", "-6.72369, -34.6341, 9.95099, 1.56", "-7.41617, -37.1181, 10.0338, 1.56", "-7.93327, -39.1278, 10.1157, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.36455, 4.80579, -1.63, 2.16", "7.77079, 3.42037, -2.16558, 2.16", "11.3109, -0.00681674, -3.76285, 1.8", "13.9598, -2.65434, -4.97917, 1.56", "15.8431, -4.56887, -5.69386, 1.56", "17.5508, -6.35429, -6.25181, 1.56", "22.2292, -11.3448, -7.60254, 1.2", "25.2734, -14.6287, -8.28729, 1.2", "27.4, -16.9263, -8.63532, 1.2", "30.2432, -20.0471, -8.93775, 1.2", "31.7385, -21.7376, -9.06573, 1.44", "32.7171, -22.9457, -9.07843, 1.44", "34.6255, -25.6951, -8.53639, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.61455, 11.1897, 0.0, 2.4", "6.4884, 13.6219, -0.229486, 1.8", "7.485, 16.7007, -0.508343, 1.2", "8.28847, 19.1829, -0.733162, 1.2", "9.43511, 22.7253, -1.054, 1.2", "10.5235, 26.0877, -1.35854, 1.68", "11.087, 27.8286, -1.51622, 1.68", "11.7993, 30.2258, -1.76729, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "3.41455, 11.9877, 0.29, 2.4", "3.14487, 13.118, 0.356915, 2.4", "2.66319, 16.2527, 0.357616, 1.44", "2.52696, 17.469, 0.334131, 1.44", "2.42698, 18.55, 0.281671, 1.44", "2.34302, 19.5529, 0.219205, 1.44", "2.1456, 22.7071, 0.282914, 1.44", "2.00143, 26.1737, 0.567984, 1.44", "1.97036, 27.5702, 0.748203, 1.44", "1.94107, 28.793, 0.94496, 1.44", "1.80636, 31.6745, 1.56298, 1.32", "1.34485, 37.9768, 3.1552, 1.44", "1.15244, 39.9246, 3.7211, 1.44", "1.00462, 41.1952, 4.14855, 1.44", "0.919478, 41.8367, 4.37229, 1.44", "0.379445, 45.532, 5.64596, 1.8", "-0.073998, 48.277, 6.4512, 1.08", "-0.212973, 49.0511, 6.5703, 1.08", "-0.359247, 49.9774, 6.64767, 1.08", "-0.530875, 51.1559, 6.64077, 1.08", "-0.798699, 53.0866, 6.56284, 1.08", "-0.951732, 54.5042, 6.45837, 1.08", "-1.19061, 57.2429, 6.3558, 1.44", "-1.24529, 58.1038, 6.36057, 1.44", "-1.33298, 60.0278, 6.47726, 1.44", "-1.40147, 63.5217, 6.71433, 0.84", "-1.41438, 65.1394, 6.86776, 0.84", "-1.41976, 65.946, 6.958, 0.84", "-1.45523, 68.3788, 7.22738, 0.84", "-1.45649, 69.8036, 7.38206, 1.08", "-1.43297, 73.4025, 7.75112, 1.68", "-1.37903, 76.5844, 7.90954, 0.84", "-1.3651, 78.0658, 7.96006, 0.84", "-1.36023, 78.9295, 7.98373, 0.84", "-1.34258, 83.2085, 8.11271, 1.56", "-1.3467, 86.3143, 8.23312, 0.96", "-1.35044, 88.8536, 8.40989, 0.96", "-1.33772, 90.3916, 8.50588, 0.96", "-1.31486, 91.7097, 8.55096, 0.96", "-1.29775, 92.4905, 8.55444, 0.96", "-1.20583, 96.1474, 8.33806, 1.44", "-1.15182, 97.1089, 8.24764, 1.44", "-1.08787, 98.0799, 8.14641, 1.44", "-0.844385, 101.19, 7.80027, 0.96", "-0.754556, 102.283, 7.67455, 0.96", "-0.546047, 104.666, 7.38974, 1.44", "-0.386106, 106.257, 7.20973, 1.44", "-0.185182, 108.413, 7.02118, 0.96", "-0.083201, 109.651, 6.96061, 0.96", "0.0130025, 111.029, 6.96117, 0.96", "0.0628994, 111.899, 6.98592, 0.96", "0.165257, 114.567, 7.12583, 1.44", "0.200658, 115.733, 7.17896, 1.44", "0.273962, 117.734, 7.20973, 0.84", "0.314823, 118.994, 7.1917, 0.84", "0.359428, 120.686, 7.13661, 1.44", "0.428409, 123.628, 6.99254, 0.84", "0.465775, 125.108, 6.89231, 0.84", "0.523292, 126.4, 6.78401, 0.84", "0.589847, 127.358, 6.6875, 0.84", "0.701183, 128.574, 6.54698, 0.84", "0.81285, 129.583, 6.41529, 0.84", "0.941093, 130.652, 6.29712, 0.84", "1.07333, 131.723, 6.21938, 0.84", "1.17865, 132.657, 6.17905, 0.84", "1.22332, 133.242, 6.15952, 0.84", "1.28716, 134.213, 6.15812, 0.84", "1.54744, 138.362, 5.99957, 1.44", "1.79918, 142.605, 5.7005, 0.72", "2.00401, 146.241, 5.47394, 0.72", "2.23457, 150.788, 5.27003, 1.08", "2.39226, 154.442, 5.17403, 1.44", "2.58623, 159.542, 5.15781, 0.72", "2.64391, 161.578, 5.15804, 0.72", "2.71536, 165.06, 5.15332, 1.2", "2.79897, 168.122, 5.10859, 0.72", "2.87018, 170.279, 5.11599, 0.72", "2.91553, 172.482, 5.14542, 1.2", "2.97925, 176.055, 5.40979, 0.96", "3.01363, 177.429, 5.48063, 0.96", "3.12557, 180.609, 5.32683, 1.44", "3.28708, 183.527, 5.01081, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.02545, -1.65171, 5.97, 2.16", "-9.28607, -1.5184, 5.74455, 2.16", "-12.6617, -1.24199, 5.10695, 1.92", "-15.6688, -0.995296, 4.93255, 1.56", "-19.2255, -0.703516, 4.72627, 1.08", "-21.5291, -0.514541, 4.59267, 1.56", "-24.9219, -0.236212, 4.3959, 2.52", "-27.7848, 0.142575, 4.09177, 2.52", "-33.9094, 1.33934, 2.84999, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.08545, 5.35179, 3.55, 2.28", "-5.80313, 6.87446, 4.30853, 2.28", "-7.8671, 8.5174, 5.36838, 2.28", "-11.0019, 11.0127, 6.97813, 1.8", "-14.6669, 13.9301, 8.86008, 1.44", "-16.5703, 15.4452, 9.8375, 1.08", "-18.8287, 17.2429, 10.9971, 1.08", "-22.431, 19.8091, 12.9604, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.41743, 11.9986, 0.0, 0.48", "9.37179, 26.1568, 0.0, 0.48", "14.3261, 40.315, 0.0, 0.48" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-7.93327, -39.1278, 10.1157, 0.6", "-7.82087, -41.3791, 10.1281, 0.6", "-7.63551, -44.5755, 10.1476, 0.6", "-7.35257, -49.4449, 10.1793, 1.08", "-7.21667, -51.9301, 10.1958, 1.08", "-7.02795, -55.3453, 10.2192, 0.48", "-6.77974, -59.6101, 10.2492, 1.2", "-6.69539, -60.8922, 10.3109, 1.2", "-6.44599, -64.6586, 10.6379, 0.6", "-6.2991, -67.012, 10.9273, 0.6", "-6.16925, -69.3393, 11.2719, 0.6", "-6.15279, -69.8123, 11.3496, 0.6", "-6.0943, -74.877, 12.2054, 1.8", "-6.10248, -77.7705, 12.674, 1.8", "-6.14421, -80.451, 13.0755, 1.8", "-6.21525, -82.7885, 13.3694, 1.8", "-6.37894, -86.15, 13.6905, 1.32", "-6.56432, -89.2054, 13.8723, 1.92", "-6.65482, -90.6382, 13.8817, 1.92", "-6.78422, -93.2384, 13.9082, 1.08", "-6.92293, -95.8739, 14.0585, 0.84", "-7.03829, -97.7737, 14.1279, 0.84", "-7.12042, -99.285, 14.2456, 1.32", "-7.27338, -101.41, 14.4544, 1.32", "-7.37795, -102.804, 14.6044, 1.32", "-7.73618, -107.279, 15.1331, 1.8", "-8.17034, -112.437, 15.7907, 1.08", "-8.63029, -117.474, 16.4625, 0.72", "-9.27235, -123.55, 17.2866, 2.04" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-7.93327, -39.1278, 10.1157, 0.96", "-8.7416, -40.5516, 10.9264, 0.96", "-9.04849, -41.2362, 11.1477, 0.96", "-9.84011, -43.0799, 11.4284, 0.96", "-10.1929, -43.9777, 11.4787, 0.96", "-10.5245, -44.8501, 11.4897, 0.96", "-11.1268, -46.3418, 11.4659, 0.96", "-12.2237, -49.0542, 11.3844, 0.96", "-12.7269, -50.2351, 11.2462, 1.44", "-13.534, -51.9037, 10.8308, 0.72", "-13.9816, -52.6611, 10.5942, 0.72", "-14.5781, -53.5181, 10.2337, 1.2", "-15.2849, -54.387, 9.78982, 0.48", "-16.5031, -55.6423, 9.06417, 0.48", "-17.5888, -56.6228, 8.44462, 1.08", "-18.7211, -57.5438, 7.71744, 0.6", "-20.0696, -58.6066, 6.77825, 1.56", "-20.8436, -59.1779, 6.2065, 0.72", "-22.3156, -60.1334, 5.10521, 1.8", "-24.0185, -61.0764, 3.93617, 0.84", "-26.0735, -62.1055, 2.5885, 0.48", "-27.2346, -62.5976, 1.9067, 1.56", "-28.8179, -63.1876, 1.12915, 0.72", "-30.2958, -63.7122, 0.484413, 1.44", "-32.0575, -64.3583, -0.136405, 0.48", "-32.8566, -64.6404, -0.412578, 0.48", "-34.2173, -65.0816, -0.679549, 1.08", "-35.188, -65.4093, -0.784589, 0.48", "-36.1473, -65.8137, -0.770002, 1.08", "-37.3164, -66.453, -0.593013, 0.6" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "34.6255, -25.6951, -8.53639, 1.8", "35.7425, -27.905, -8.20282, 1.8", "36.4563, -29.3175, -7.98964, 1.8" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "34.6255, -25.6951, -8.53639, 1.08", "37.0461, -25.7189, -6.23499, 1.08", "38.5206, -25.7183, -4.75894, 1.08", "39.4574, -25.718, -3.82107, 1.08", "40.3723, -25.7176, -2.9052, 1.08", "43.6843, -25.7164, 0.410371, 0.84", "46.1043, -25.7155, 2.83296, 1.32", "46.3786, -25.7016, 3.14987, 1.32" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "11.7993, 30.2258, -1.76729, 1.2", "14.4065, 30.1928, 0.727187, 1.2", "17.2198, 30.0152, 3.03598, 1.2", "20.9347, 29.5953, 5.77516, 1.2", "24.1434, 29.0901, 7.9614, 1.2", "29.0171, 28.1477, 11.0734, 1.8", "32.5214, 27.3633, 13.1901, 1.32", "36.2318, 26.3887, 15.0755, 0.96", "38.7015, 25.6827, 16.0819, 0.96", "40.826, 25.0665, 16.7183, 0.96", "44.1362, 24.1031, 17.5575, 0.84", "46.418, 23.4048, 18.067, 0.84", "49.604, 22.3997, 18.8649, 1.32", "52.6927, 21.4087, 19.9502, 0.96", "54.7779, 20.7941, 20.7093, 1.44", "57.746, 19.9626, 21.8459, 1.32", "59.0772, 19.5655, 22.4074, 1.32", "61.1641, 18.805, 23.5417, 1.08", "62.7057, 17.7888, 24.9449, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "11.7993, 30.2258, -1.76729, 1.2", "11.766, 30.9223, -1.73144, 1.2", "11.6648, 33.2485, -1.63407, 1.2", "11.5321, 36.2978, -1.50642, 1.2", "11.3746, 39.9168, -1.35493, 0.96", "11.3006, 41.6182, -1.2837, 0.96", "11.1427, 45.2474, -1.13179, 1.2", "11.07, 46.8962, -1.09561, 1.2" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.28708, 183.527, 5.01081, 0.72", "-2.50593, 185.231, 7.22062, 0.72", "-5.79144, 186.196, 8.47392, 0.72", "-7.20121, 186.611, 9.0117, 0.72", "-9.24233, 187.211, 9.7903, 1.08", "-11.8928, 187.99, 10.8014, 1.08", "-13.0611, 188.334, 11.247, 1.08" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "3.28708, 183.527, 5.01081, 0.96", "4.81299, 183.86, 3.63523, 0.96", "7.12048, 184.666, 1.59106, 0.96", "8.00585, 185.052, 0.96082, 0.96", "12.5787, 187.729, -0.938891, 0.96", "14.2358, 188.788, -1.33662, 0.96", "16.0615, 189.768, -1.518, 0.96", "19.6849, 191.21, -1.55151, 0.96", "25.0292, 192.696, -1.28479, 0.96", "30.6209, 193.384, -1.47994, 0.6", "31.8107, 193.472, -1.40296, 0.6", "37.5157, 193.372, -1.14474, 1.08", "41.8194, 192.472, -1.37686, 1.44", "45.0945, 191.015, -2.17855, 1.2", "49.6798, 188.278, -4.40927, 0.84" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-22.431, 19.8091, 12.9604, 1.2", "-22.8349, 18.4433, 14.7011, 1.2", "-23.4453, 16.3791, 17.3321, 1.2", "-23.7802, 15.2464, 18.7758, 1.2" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-22.431, 19.8091, 12.9604, 1.2", "-21.9351, 22.3681, 14.2311, 1.2", "-21.4347, 24.9511, 15.5137, 1.2", "-20.9575, 27.4138, 16.7366, 1.2", "-20.7958, 28.2483, 17.151, 1.2" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.3261, 40.315, 0.0, 0.48", "19.2805, 54.4732, 0.0, 0.48", "24.2349, 68.6314, 0.0, 0.48" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-9.27235, -123.55, 17.2866, 0.84", "-9.00896, -126.23, 17.9644, 0.84", "-8.74182, -128.317, 18.4241, 0.84", "-8.55198, -129.549, 18.6401, 0.84", "-8.4424, -130.249, 18.7391, 0.84", "-7.91334, -133.606, 19.1415, 1.44", "-7.62191, -135.446, 19.3352, 1.44", "-7.20031, -137.985, 19.5519, 0.72", "-6.87841, -140.303, 19.7311, 0.72", "-6.64469, -142.348, 19.8548, 0.72", "-6.5608, -143.309, 19.8937, 0.72", "-6.53286, -143.973, 19.875, 0.72", "-6.44646, -147.37, 19.6887, 1.44", "-6.38815, -152.291, 19.302, 0.72", "-6.39818, -153.994, 19.1396, 0.72", "-6.41141, -155.014, 19.0281, 0.72", "-6.49937, -159.394, 18.5122, 0.72", "-6.53898, -160.87, 18.324, 0.72", "-6.59594, -162.796, 18.0444, 0.72", "-6.70778, -165.54, 17.6182, 1.44", "-6.93343, -168.184, 17.2436, 0.72", "-7.15198, -169.959, 17.0389, 0.72", "-7.31052, -171.17, 17.0164, 0.72", "-7.46991, -172.341, 17.0095, 0.72", "-7.73564, -174.27, 16.984, 0.72", "-8.26254, -178.07, 17.0944, 1.44", "-8.42659, -179.253, 17.166, 1.44", "-8.9771, -183.332, 17.5088, 0.6", "-9.46527, -187.227, 17.9313, 1.2", "-10.0014, -191.766, 18.5189, 0.6", "-10.3704, -195.328, 19.0434, 1.08", "-10.5161, -196.989, 19.3168, 0.36", "-10.6036, -197.843, 19.4324, 0.36", "-11.0794, -201.241, 19.7751, 1.08", "-11.2693, -202.398, 19.9085, 1.08", "-11.6104, -204.296, 20.0809, 0.36", "-11.9268, -206.054, 20.1281, 1.68", "-12.5588, -209.525, 20.1106, 0.72", "-12.9738, -211.623, 20.0546, 0.72", "-13.1757, -212.601, 20.0068, 0.72", "-13.3906, -213.709, 19.9427, 0.72", "-13.8268, -216.183, 19.7801, 1.44", "-14.2155, -218.352, 19.6499, 1.44", "-14.6077, -220.088, 19.4912, 0.72", "-15.0415, -221.717, 19.2943, 0.72", "-15.3013, -222.609, 19.2347, 0.72", "-15.7349, -223.945, 19.1517, 0.72", "-16.6954, -226.485, 19.0324, 1.32", "-17.7998, -229.214, 18.9693, 0.84", "-18.4268, -230.667, 18.9255, 0.84", "-19.9902, -233.743, 18.8696, 0.48" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-9.27235, -123.55, 17.2866, 1.2", "-10.442, -125.292, 16.5532, 1.2", "-11.2187, -126.501, 16.0071, 1.2", "-12.9655, -129.329, 14.666, 0.96", "-13.8003, -130.654, 14.1583, 1.44", "-15.3598, -133.203, 13.1582, 0.72", "-17.0715, -136.051, 12.0586, 0.72", "-17.6892, -137.125, 11.6458, 0.72", "-18.5735, -138.705, 11.0541, 1.2", "-20.6977, -142.567, 9.35005, 0.48", "-22.3558, -145.568, 7.91483, 0.96", "-23.8584, -148.3, 6.45483, 0.36", "-24.0801, -148.699, 6.22663, 0.36", "-25.1058, -150.429, 5.45409, 0.72", "-27.2812, -154.082, 4.51783, 0.72", "-28.7984, -157.223, 4.05237, 1.2", "-29.8139, -159.921, 4.13664, 0.6", "-30.2913, -161.78, 4.37837, 0.6", "-32.7027, -172.339, 6.57218, 0.6", "-33.3588, -175.841, 7.73309, 0.6", "-34.1422, -180.98, 10.2043, 1.08", "-34.2724, -183.007, 11.3738, 0.36", "-34.2767, -184.253, 12.1759, 0.36" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "36.4563, -29.3175, -7.98964, 1.8", "36.2, -30.8752, -6.27674, 1.8", "36.0645, -31.6988, -5.37109, 1.8", "35.6841, -34.0101, -2.8295, 1.8" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "36.4563, -29.3175, -7.98964, 1.44", "38.1952, -30.5055, -9.60411, 1.44", "39.2763, -31.3024, -10.5438, 1.44", "39.9773, -31.8287, -11.1354, 1.44", "43.1238, -34.0787, -13.1634, 1.56", "44.281, -34.8435, -13.7029, 1.56", "46.3751, -36.1799, -14.5877, 1.8", "48.0547, -37.2663, -15.2158, 1.8", "50.1295, -38.4907, -15.8507, 1.32", "53.4455, -40.2722, -16.7336, 1.68", "55.5584, -41.3502, -17.3745, 1.32", "58.8081, -42.8406, -18.2505, 0.72", "60.6334, -43.5862, -18.6648, 0.72", "61.861, -44.0157, -18.9933, 1.32", "64.349, -44.6403, -19.8165, 0.96", "68.4555, -45.3667, -21.9688, 1.44", "73.4232, -45.8507, -25.5036, 0.6", "74.3096, -45.8408, -26.3099, 0.6", "75.9267, -45.7313, -27.9987, 1.08", "78.2742, -45.4428, -30.7932, 1.56", "80.2802, -44.9093, -33.6265, 1.2", "81.6217, -44.3329, -36.1954, 1.2", "82.3036, -43.9888, -37.9865, 1.2" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "46.3786, -25.7016, 3.14987, 1.08", "51.198, -25.0595, 3.02241, 1.08", "53.1407, -24.682, 1.97371, 1.08", "56.1484, -23.981, -0.0382533, 1.56", "61.6129, -22.5945, -4.00484, 1.08", "65.5073, -21.4689, -6.98607, 0.6", "75.6977, -17.7955, -15.4737, 0.6", "78.4046, -16.4741, -18.3044, 1.2", "79.8899, -15.509, -20.117, 0.6", "80.9948, -14.5287, -21.6408, 1.08", "81.9007, -13.4688, -23.0857, 0.36", "83.7316, -10.7695, -25.9328, 1.44", "85.1356, -8.25266, -27.2257, 0.84", "86.0596, -6.3889, -27.933, 1.32", "87.4173, -3.49064, -28.8263, 0.72", "88.0852, -2.15539, -29.166, 0.72", "88.9939, -0.598457, -29.5379, 1.08", "90.7836, 1.91904, -30.0828, 0.6", "92.6561, 4.18887, -30.6212, 1.2", "93.7371, 5.32999, -30.9119, 1.2", "95.9119, 7.32481, -31.4724, 0.72", "98.5272, 9.64561, -32.2183, 1.08", "101.758, 12.5512, -33.0064, 0.6", "102.527, 13.2875, -33.1627, 0.6", "103.709, 14.5452, -33.3537, 0.6", "107.555, 19.2914, -33.7369, 1.08", "108.976, 21.2878, -33.7568, 0.72", "111.349, 24.8959, -33.577, 1.2", "113.099, 27.708, -33.3796, 1.2", "114.125, 29.2971, -33.254, 1.2", "115.883, 31.8407, -33.0242, 0.72", "117.133, 33.448, -32.8357, 0.72", "119.231, 35.6654, -32.5672, 0.72", "120.848, 37.0447, -32.408, 1.32", "124.303, 39.4794, -31.9656, 0.96", "125.699, 40.3499, -31.7667, 0.96", "127.242, 41.2259, -31.5332, 1.44", "129.521, 42.5811, -31.1182, 1.08", "131.858, 44.0057, -30.8382, 1.56", "134.734, 45.7874, -30.6853, 0.96", "136.154, 46.6862, -30.7342, 0.96", "137.222, 47.3785, -30.8631, 1.56", "139.532, 48.9179, -31.435, 0.96", "143.248, 51.502, -32.8001, 0.96", "144.423, 52.3068, -33.2129, 0.96", "146.865, 53.8263, -33.9261, 1.56", "148.759, 54.9801, -34.462, 0.84", "150.788, 56.1914, -34.837, 1.44", "154.854, 58.5944, -35.1138, 0.72", "158.464, 60.9685, -34.6364, 0.48", "160.011, 62.0793, -34.2042, 0.48", "162.999, 64.3274, -32.8219, 1.68", "166.915, 67.3026, -30.6326, 0.72", "168.967, 68.8603, -29.2231, 0.72", "171.858, 71.1234, -26.7555, 1.32", "173.001, 72.1343, -25.6601, 1.32", "174.854, 73.9058, -23.3553, 0.72" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "46.3786, -25.7016, 3.14987, 1.08", "49.4202, -28.4635, -1.04996, 1.08", "50.132, -29.1098, -2.03276, 1.08", "51.4497, -30.3063, -3.85218, 0.84", "52.1092, -30.9051, -4.76285, 0.84", "53.3729, -32.0526, -6.50767, 0.84", "54.2535, -32.8522, -7.72363, 1.32" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "11.07, 46.8962, -1.09561, 0.96", "10.1012, 52.4879, -0.907222, 0.96", "9.55398, 55.6466, -0.8008, 0.96", "8.59585, 61.1769, -0.614479, 1.2", "7.90425, 65.1688, -0.479989, 1.92" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "11.07, 46.8962, -1.09561, 0.96", "11.7872, 47.9995, -0.438117, 0.96", "13.2208, 49.9965, 0.684805, 0.84", "13.6633, 50.5828, 0.977457, 0.84", "15.4941, 53.0052, 2.00275, 0.84", "16.1673, 53.9079, 2.35035, 0.84", "17.7282, 56.0173, 3.11235, 0.84", "18.7171, 57.3558, 3.51578, 0.84", "20.202, 59.3196, 4.0363, 0.84", "21.981, 61.6376, 4.59482, 0.84", "23.5639, 63.6919, 4.99434, 1.08", "24.0913, 64.4049, 5.12961, 1.08", "25.2911, 66.1758, 5.43289, 1.08" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-19.9902, -233.743, 18.8696, 0.72", "-20.5805, -235.278, 19.068, 0.72", "-21.3454, -237.137, 19.3269, 1.2", "-22.001, -238.494, 19.5559, 1.2", "-22.8668, -240.157, 19.711, 0.6", "-23.5983, -241.576, 19.7904, 0.6", "-24.625, -243.636, 19.8642, 0.6", "-25.2546, -244.944, 19.8462, 0.6", "-26.6564, -247.941, 19.617, 1.2", "-28.2601, -251.654, 19.6229, 0.72", "-28.8738, -253.085, 19.6153, 0.72", "-29.704, -255.131, 19.5808, 0.72", "-30.2823, -256.715, 19.5342, 0.72", "-31.7573, -261.272, 19.418, 1.32", "-33.3616, -267.837, 19.4594, 0.84" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-19.9902, -233.743, 18.8696, 0.48", "-20.3465, -237.993, 17.6785, 0.48", "-20.4257, -239.256, 17.367, 0.48", "-20.6524, -242.176, 16.8057, 0.48", "-20.851, -243.947, 16.5515, 0.48", "-21.1646, -245.776, 16.4059, 0.48", "-21.7164, -248.256, 16.3659, 1.08", "-22.3953, -250.458, 16.5278, 1.08", "-23.7105, -253.534, 16.9303, 1.08", "-24.8178, -255.44, 17.2944, 1.08", "-27.4444, -258.826, 18.0751, 0.48", "-29.5959, -260.723, 18.5815, 0.48", "-31.3668, -261.765, 18.8433, 0.48", "-35.0638, -263.266, 19.1469, 1.44", "-37.2594, -263.87, 19.2058, 0.84", "-38.4807, -264.084, 19.1951, 0.84", "-42.5992, -264.427, 18.9536, 1.32", "-45.2768, -264.526, 18.6771, 0.72", "-47.2661, -264.581, 18.4301, 0.72", "-48.4884, -264.647, 18.2981, 0.72", "-50.4461, -264.896, 18.1065, 0.72" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-19.9902, -233.743, 18.8696, 0.84", "-20.0924, -236.552, 18.2046, 0.84", "-20.1487, -238.992, 17.6652, 2.16", "-20.2076, -242.526, 16.9316, 1.08", "-20.2363, -244.378, 16.5951, 0.84", "-20.2344, -245.722, 16.4223, 0.84", "-20.3263, -246.851, 16.286, 0.84", "-20.4979, -248.114, 16.2483, 0.84", "-20.6593, -248.961, 16.255, 0.84", "-20.9344, -250.121, 16.283, 0.84", "-21.2849, -251.601, 16.417, 0.84", "-22.5441, -256.182, 17.0421, 2.04", "-23.3326, -258.6, 17.4988, 0.96", "-23.5705, -259.226, 17.6163, 0.96", "-24.2457, -260.874, 17.9084, 0.96", "-24.692, -261.907, 18.0791, 0.96", "-25.4356, -263.61, 18.3314, 0.96", "-26.352, -265.932, 18.6861, 1.68", "-27.3345, -268.477, 18.9191, 0.96", "-27.7964, -269.872, 18.9585, 0.96", "-28.063, -270.933, 18.9004, 0.96", "-28.2022, -272.113, 18.7921, 1.32", "-28.0096, -273.947, 18.5977, 0.6", "-27.5501, -275.247, 18.4565, 0.96", "-26.6638, -276.783, 18.3182, 0.6", "-25.5023, -278.28, 18.1196, 1.08", "-24.164, -279.639, 17.8586, 0.48", "-21.6534, -281.768, 17.3411, 0.48", "-20.6311, -282.507, 17.1435, 0.48", "-19.619, -283.143, 16.9608, 0.48", "-18.0818, -283.98, 16.7084, 0.48", "-16.988, -284.484, 16.5038, 0.48", "-16.4909, -284.694, 16.3364, 0.48" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "35.6841, -34.0101, -2.8295, 1.32", "35.2323, -34.9155, -2.8449, 1.32", "34.8263, -35.7513, -2.95432, 0.84", "34.5438, -36.3769, -3.06734, 0.84", "34.2346, -37.1012, -3.21362, 0.84", "33.4272, -39.0881, -3.6419, 1.32", "33.0226, -40.2208, -3.9271, 1.32", "32.4728, -42.074, -4.42424, 0.72", "32.1741, -43.2412, -4.75998, 0.72", "32.0884, -43.6404, -4.88074, 0.72", "31.9972, -44.1093, -5.03423, 0.72", "31.5215, -47.2432, -6.18347, 1.56", "31.4327, -47.9257, -6.43174, 1.56", "31.2434, -49.6332, -6.94851, 1.56", "31.1486, -50.504, -7.21973, 1.92" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "35.6841, -34.0101, -2.8295, 0.72", "35.613, -36.9659, -2.65039, 0.72", "35.5962, -37.5739, -2.60757, 0.72", "35.5666, -38.879, -2.49344, 1.2", "35.5401, -42.3863, -2.19966, 0.84", "35.574, -44.7451, -2.01951, 1.56", "35.6619, -47.0841, -1.85162, 0.84", "35.785, -49.8911, -1.64286, 1.44", "36.0995, -52.1126, -1.46957, 0.96", "36.5269, -53.5317, -1.32205, 0.96", "37.1743, -54.6683, -1.14321, 0.96", "37.7371, -55.2824, -1.06244, 0.96", "39.0022, -56.2034, -0.966888, 0.84", "41.854, -57.9799, -0.755319, 1.32", "44.8078, -59.6129, -0.551861, 0.6", "48.2095, -61.3362, -0.298819, 1.2", "52.8173, -63.4945, 0.0378124, 0.48", "56.4189, -65.0536, 0.266022, 0.96" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.90425, 65.1688, -0.479989, 1.2", "8.34893, 71.3082, 1.49767, 1.2", "8.77483, 74.3332, 2.2108, 1.2", "9.19033, 76.3129, 2.62217, 1.2", "9.79493, 78.8094, 3.08102, 1.2", "10.4308, 81.2924, 3.46881, 0.96", "10.9264, 83.49, 3.76802, 0.96", "11.3686, 85.4896, 3.87476, 0.96", "12.279, 89.8723, 4.10638, 0.96", "12.6678, 92.1411, 4.22791, 0.96", "12.9914, 94.5138, 4.36755, 0.96", "13.4709, 98.9204, 4.64069, 0.84", "13.6588, 101.06, 4.76722, 0.84", "13.8967, 105.075, 4.99048, 0.84", "13.9865, 108.177, 5.13367, 0.84", "13.9814, 110.756, 5.25201, 0.84", "13.9, 113.925, 5.39821, 0.84", "13.7884, 116.884, 5.52205, 0.84", "13.6119, 120.036, 5.64669, 0.84", "13.3059, 124.099, 5.80001, 0.84", "12.64, 131.946, 6.06141, 0.84", "12.2268, 136.158, 6.18139, 0.84", "12.0094, 138.102, 6.22984, 0.84", "11.8223, 139.71, 6.26805, 0.84", "11.6011, 141.561, 6.3367, 0.84", "11.2823, 143.792, 6.4708, 0.84", "10.943, 145.997, 6.65273, 0.84", "10.5262, 148.498, 6.88044, 0.84", "10.1669, 150.483, 7.07213, 0.84", "9.23098, 155.512, 7.5632, 0.72", "8.68761, 158.428, 7.84558, 0.72", "8.29984, 160.972, 8.05056, 0.72", "8.03952, 163.237, 8.1984, 0.72", "7.79717, 166.29, 8.40987, 1.2", "7.6687, 168.899, 8.6187, 1.2", "7.62795, 171.857, 8.86532, 0.96", "7.65285, 177.219, 9.38033, 1.44", "7.68268, 179.251, 9.59372, 1.44", "7.78305, 182.276, 9.87888, 1.2", "7.88425, 184.366, 9.99993, 1.2", "8.05033, 187.952, 10.0996, 1.2", "8.1363, 189.814, 10.1173, 1.2", "8.19143, 190.966, 10.1283, 1.2", "8.3315, 193.613, 10.1363, 1.56", "8.6737, 200.031, 10.1144, 0.84", "8.82597, 203.078, 10.1256, 0.84", "9.12596, 208.808, 10.266, 1.32", "9.44471, 214.374, 10.512, 0.96", "9.56889, 216.373, 10.6436, 0.96", "9.72843, 218.676, 10.856, 0.96", "9.82377, 219.809, 10.9767, 0.96", "10.2224, 223.654, 11.3256, 0.96", "10.5417, 225.976, 11.5202, 0.96", "10.8209, 227.834, 11.6155, 0.96", "11.2507, 230.536, 11.699, 0.96", "11.6053, 232.705, 11.7247, 0.96", "11.8916, 234.538, 11.6897, 0.96", "12.4765, 238.659, 11.4842, 0.96", "12.9534, 242.339, 11.2423, 0.96", "13.4656, 246.708, 10.9759, 0.96", "13.7234, 249.643, 10.7298, 0.96", "13.9013, 253.422, 10.3162, 1.44", "13.9397, 257.885, 9.74613, 0.96", "13.8462, 260.917, 9.29838, 0.72", "13.6088, 265.081, 8.65729, 1.2", "13.3254, 269.239, 8.09864, 1.2", "13.1033, 272.552, 7.84929, 1.2", "12.9114, 275.347, 7.76449, 1.56", "12.6665, 279.482, 7.77307, 1.68", "12.4239, 283.631, 7.78364, 1.08", "11.9983, 291.158, 8.08685, 1.44", "11.6769, 299.174, 8.6618, 0.84", "11.6233, 301.036, 8.82976, 0.84", "11.4894, 305.789, 9.3247, 1.44", "11.3424, 311.123, 10.0011, 0.6", "11.1221, 316.923, 10.85, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "7.90425, 65.1688, -0.479989, 0.96", "8.61295, 68.7409, -1.88465, 0.96", "9.0961, 71.6439, -2.74876, 0.96", "10.0548, 78.095, -4.33458, 0.96", "10.4174, 80.8797, -4.9193, 1.32", "10.5936, 82.6021, -5.21431, 1.32", "10.9902, 87.9639, -5.9597, 0.96", "11.0565, 91.333, -6.27127, 0.96", "11.0387, 93.2774, -6.2817, 0.96", "11.0259, 95.3667, -6.12402, 0.96", "11.042, 98.0655, -6.09774, 0.96", "11.0546, 101.122, -6.202, 0.96", "11.0861, 102.65, -6.33554, 0.96", "11.1962, 104.953, -6.59861, 0.96", "11.5685, 110.235, -7.31086, 1.44", "12.4355, 119.008, -8.63721, 1.2", "12.7086, 121.156, -8.99191, 1.2", "13.4379, 126.504, -9.894, 1.08", "13.8533, 129.726, -10.4166, 1.08", "14.0232, 131.193, -10.6368, 1.08", "14.3829, 134.622, -11.0777, 1.08", "14.6915, 137.816, -11.3123, 1.08", "14.8578, 141.964, -11.4713, 1.08", "14.6811, 145.488, -11.3644, 1.08", "14.2984, 148.357, -11.2177, 1.08", "13.8863, 150.443, -11.0739, 1.08", "13.0611, 153.7, -10.8015, 1.08", "11.7329, 158.616, -10.3412, 1.56", "10.4848, 163.29, -9.78064, 0.84", "9.78885, 166.075, -9.4228, 0.84", "9.01096, 169.418, -8.95686, 0.84", "8.47678, 172.123, -8.58758, 0.84", "7.54008, 178.281, -7.80748, 1.2", "7.02638, 182.958, -7.28114, 0.96", "6.79576, 185.933, -6.96427, 0.96", "6.5981, 189.871, -6.48963, 1.2", "6.34142, 195.961, -5.74619, 0.84", "6.18927, 199.421, -5.33898, 0.84", "6.10588, 201.043, -5.20095, 0.84", "6.04935, 202.123, -5.17246, 0.84", "5.94946, 204.024, -5.15881, 0.84", "5.73905, 208.923, -5.20776, 0.72", "5.65503, 211.17, -5.23231, 1.32", "5.43069, 216.116, -5.17601, 0.96", "5.32601, 219.39, -5.09441, 0.96", "5.26254, 222.349, -4.99568, 0.96", "5.24595, 224.393, -4.9187, 0.96", "5.36889, 230.138, -4.68894, 1.32", "5.5886, 235.11, -4.43228, 0.72", "5.8901, 239.952, -4.10906, 0.72", "6.26117, 245.14, -3.75875, 0.72", "6.40323, 247.015, -3.66807, 0.72", "6.66708, 250.279, -3.54985, 0.72", "6.90205, 252.885, -3.48872, 0.72", "7.12049, 255.048, -3.4841, 0.72", "7.29746, 257.215, -3.47466, 0.72", "7.45653, 259.42, -3.4622, 0.72", "7.54236, 261.156, -3.41326, 0.72", "7.6453, 264.228, -3.21158, 0.72", "7.69, 266.577, -2.97372, 0.72", "7.71196, 268.585, -2.68091, 0.72", "7.84777, 270.544, -2.18521, 0.72", "8.15812, 272.908, -1.34881, 0.72", "8.38336, 274.215, -0.785198, 0.72", "8.5177, 274.914, -0.487242, 0.72", "8.66446, 275.698, -0.1952, 0.72", "9.52701, 280.668, 1.42677, 1.32", "9.72837, 282.018, 1.81547, 0.84", "10.5324, 288.31, 3.33349, 0.84", "11.0962, 293.323, 4.33974, 0.84", "11.7291, 299.565, 5.39791, 1.2", "11.9447, 302.025, 5.71523, 1.2", "12.0568, 303.685, 5.85048, 1.2", "12.2776, 306.394, 6.07657, 1.2", "12.5778, 309.372, 6.29692, 1.2", "12.7256, 310.752, 6.39886, 1.2", "13.0091, 313.514, 6.57884, 1.2", "13.2976, 316.212, 6.74398, 1.2", "14.1366, 325.312, 7.3745, 1.2", "14.5441, 330.426, 7.74486, 1.68", "15.0589, 337.703, 8.26384, 1.08", "15.5511, 345.477, 8.79304, 1.56", "15.749, 348.987, 9.0163, 1.56", "16.0671, 354.737, 9.37922, 1.44", "16.3721, 360.276, 9.70466, 1.44", "16.634, 365.172, 10.049, 1.44", "16.9027, 369.569, 10.442, 1.44", "17.0755, 372.341, 10.6727, 1.44", "17.3905, 377.743, 11.1899, 1.44", "17.5365, 379.961, 11.4145, 1.44", "17.6759, 382.504, 11.7452, 1.44", "17.8027, 385.538, 12.21, 1.44", "17.7146, 390.805, 12.7931, 0.84", "17.5735, 395.116, 13.2393, 0.84", "17.4064, 397.772, 13.461, 0.84", "17.1987, 400.286, 13.6443, 0.84", "16.9519, 402.429, 13.7608, 0.84", "15.6723, 410.229, 13.9088, 1.2" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "25.2911, 66.1758, 5.43289, 0.96", "28.8831, 67.5931, 6.15005, 0.96", "31.3324, 69.1763, 6.54963, 0.96", "33.065, 70.6411, 6.78867, 0.96", "35.2387, 72.8875, 7.04195, 0.96", "38.323, 76.6136, 7.3378, 0.96", "39.7843, 78.6317, 7.4564, 0.96", "42.4079, 83.7169, 7.49154, 1.2", "43.0709, 85.4859, 7.44484, 1.2", "43.6239, 87.5156, 7.34684, 0.6", "44.0011, 89.2859, 7.24275, 0.6", "44.4998, 92.7404, 7.15177, 1.08", "44.8193, 95.1367, 7.12099, 0.36", "45.0118, 96.5891, 7.1243, 0.36", "45.4495, 100.033, 7.1527, 0.84", "45.7775, 103.143, 7.18627, 0.84", "46.2015, 108.249, 7.23663, 1.44", "46.3146, 110.269, 7.28393, 1.44", "46.4231, 112.463, 7.36408, 0.84", "46.5408, 115.204, 7.39756, 0.84", "46.6562, 118.679, 7.35514, 1.32", "46.6906, 120.622, 7.30147, 1.32", "46.8157, 123.555, 7.15942, 1.08", "46.8623, 124.755, 7.09318, 1.08", "47.117, 129.213, 6.82521, 1.56", "47.2028, 130.435, 6.72448, 1.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "25.2911, 66.1758, 5.43289, 1.08", "25.8814, 69.7368, 5.1405, 1.08", "26.3278, 72.2067, 4.88158, 1.08", "26.8454, 75.4497, 4.61775, 1.08", "27.3869, 79.3155, 4.35288, 0.84", "28.3719, 86.8135, 3.88299, 1.56", "29.3176, 93.9249, 3.54839, 1.2", "30.0587, 99.6775, 3.282, 1.08", "30.7682, 105.358, 2.97397, 1.32", "31.1978, 109.013, 2.66013, 0.96", "31.5029, 112.288, 2.33269, 1.32", "31.8072, 116.479, 1.84226, 1.08", "32.2467, 123.764, 0.9269, 0.84", "32.3819, 126.664, 0.544513, 0.84", "32.8769, 136.394, -0.990561, 1.08", "33.1327, 142.399, -1.98981, 1.08", "33.2057, 145.951, -2.60503, 0.96", "33.1179, 153.554, -3.98563, 1.2" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "31.1486, -50.504, -7.21973, 0.84", "31.5505, -53.8338, -8.44034, 0.84", "31.8344, -56.0483, -9.2496, 0.84", "32.1491, -58.8015, -10.2496, 1.44", "32.4382, -61.4406, -11.1961, 1.08", "32.7024, -64.1013, -12.1527, 0.48", "33.2466, -69.5816, -14.123, 1.2", "33.4559, -71.5209, -14.7949, 1.2", "33.7634, -74.3192, -15.7662, 1.2", "33.9897, -76.4417, -16.5098, 1.2", "34.2025, -78.8432, -17.3738, 1.8" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "31.1486, -50.504, -7.21973, 0.96", "33.3531, -54.8458, -7.06473, 0.96", "34.3103, -56.9769, -7.13271, 0.96", "36.2756, -61.5865, -7.09734, 1.56", "37.5455, -64.6608, -7.1807, 0.84", "39.0692, -68.581, -7.1846, 1.32", "40.885, -73.3777, -7.13388, 0.72", "42.5932, -78.2996, -6.95076, 1.2", "44.4444, -83.9557, -6.72832, 0.72", "46.0565, -89.3556, -6.52343, 1.44", "48.0187, -96.2519, -6.20693, 0.72", "48.3456, -97.4473, -6.12183, 0.72", "49.2354, -100.782, -5.78295, 1.32" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "34.2025, -78.8432, -17.3738, 1.2", "34.6279, -81.5652, -18.454, 1.2", "34.1119, -84.8117, -18.9493, 0.72", "32.5988, -90.9304, -19.5338, 1.92", "31.6047, -94.4247, -19.7883, 1.92", "30.7882, -97.4096, -20.0616, 1.2", "29.6518, -101.834, -20.5441, 1.68", "25.4665, -117.732, -22.3711, 1.68", "24.183, -122.979, -23.1096, 2.28", "23.2239, -127.232, -23.839, 1.2", "22.4571, -131.62, -24.8005, 1.2", "22.1135, -134.771, -25.6841, 1.2", "21.9803, -140.804, -27.8412, 1.8", "22.632, -147.268, -30.9106, 1.08", "22.9055, -149.724, -32.1139, 1.08", "23.5534, -155.196, -34.8571, 0.6", "23.9361, -159.207, -36.8573, 1.2", "24.2354, -162.993, -38.8336, 1.2", "24.3836, -166.939, -40.9135, 1.8", "24.2541, -171.334, -43.1782, 0.72", "24.04, -173.928, -44.4807, 0.72", "23.5877, -177.27, -46.1315, 0.72", "23.0632, -180.372, -47.6337, 0.72", "22.0803, -185.511, -50.0608, 1.8", "21.0638, -190.862, -52.4713, 0.84", "20.4917, -194.19, -54.0024, 0.84", "20.1952, -196.269, -54.9682, 0.84", "19.4918, -201.938, -57.6321, 1.44", "19.1136, -205.517, -59.3578, 0.72", "18.8115, -209.18, -61.2195, 0.72", "18.6855, -211.926, -62.7286, 0.72", "18.5034, -215.511, -64.7176, 1.2", "18.1589, -221.627, -68.172, 0.6", "18.0287, -224.05, -69.5493, 0.6", "17.9478, -225.696, -70.492, 0.6", "17.8793, -234.021, -75.7471, 1.8", "18.006, -238.022, -78.4629, 0.96", "18.2217, -240.955, -80.578, 0.96", "18.658, -244.706, -83.4205, 0.96", "19.1454, -248.656, -86.4984, 1.68", "19.7647, -254.547, -91.2021, 0.84", "19.8521, -256.305, -92.6795, 0.84", "19.9098, -257.042, -93.3485, 0.84", "20.0525, -259.615, -95.7899, 0.84", "20.0237, -261.485, -97.6409, 0.84", "19.5668, -264.842, -100.626, 1.44", "18.6325, -267.602, -102.433, 0.72" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "34.2025, -78.8432, -17.3738, 0.96", "35.0984, -81.0692, -17.18, 0.96", "36.4813, -83.2591, -17.3308, 1.44", "38.5231, -86.0468, -17.6861, 0.96", "40.2536, -88.2037, -17.8961, 0.96", "42.2285, -90.6018, -18.0609, 0.96", "45.3173, -94.2621, -18.2731, 0.6", "50.3459, -100.541, -18.5853, 1.2", "51.8742, -102.51, -18.6482, 1.2", "55.369, -106.859, -18.7845, 1.44", "57.3815, -109.604, -18.741, 0.6", "58.828, -112.096, -18.5051, 1.08", "60.3484, -116.174, -17.7927, 0.6", "60.6295, -118.357, -17.3787, 0.6", "60.6636, -122.697, -16.8043, 1.08", "60.1126, -128.094, -16.6364, 0.6", "59.4533, -132.972, -16.8022, 0.6", "59.0292, -135.54, -16.9504, 0.6", "58.4006, -139.527, -17.3835, 1.08", "57.9983, -141.694, -17.6434, 1.08", "57.122, -146.177, -18.2686, 0.48", "57.0368, -148.087, -18.8725, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "57.0368, -148.087, -18.8725, 0.84", "57.1035, -149.436, -19.2636, 0.84", "57.1911, -151.352, -19.7248, 0.84", "57.3084, -153.434, -20.3235, 1.44", "57.4749, -156.805, -21.3964, 0.6", "57.5016, -158.472, -21.9764, 0.6", "57.4235, -160.034, -22.4762, 0.6", "57.2537, -162.8, -23.5897, 0.6", "57.0458, -165.237, -24.919, 1.08", "56.8219, -166.675, -26.0288, 0.6", "56.406, -167.815, -27.6725, 0.6", "55.5356, -169.322, -31.0227, 1.44", "54.0396, -170.537, -37.058, 1.44", "53.6241, -170.42, -39.1143, 1.44", "53.4028, -170.018, -40.5279, 0.96", "53.2394, -168.989, -42.8614, 1.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "57.0368, -148.087, -18.8725, 0.48", "59.1, -148.322, -17.5333, 0.48", "61.3564, -148.514, -16.0372, 0.48", "62.4617, -148.607, -15.3044, 0.48", "63.5339, -148.698, -14.5935, 0.48", "66.6122, -148.959, -12.5525, 0.84", "70.1373, -149.257, -10.2152, 1.32", "70.9957, -149.355, -9.6879, 1.32" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "70.9957, -149.355, -9.6879, 0.6", "73.6185, -149.953, -8.21088, 0.6", "77.6433, -151.235, -6.07023, 0.6", "79.1844, -151.842, -5.28594, 0.6", "80.8564, -152.539, -4.57687, 0.6", "83.2409, -153.682, -3.71382, 1.08", "88.1949, -156.359, -2.13526, 0.6", "90.6971, -158.058, -1.44153, 0.6", "92.1092, -159.19, -1.19667, 0.6", "95.2559, -161.932, -0.961101, 0.6", "98.0061, -164.443, -0.967338, 1.2", "99.8213, -166.224, -1.11431, 1.2", "101.838, -168.334, -1.48626, 0.6", "105.191, -171.771, -2.19242, 0.6", "107.222, -173.823, -2.60938, 0.6", "108.664, -175.396, -2.86678, 0.6" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "70.9957, -149.355, -9.6879, 1.2", "71.1064, -148.889, -9.27154, 1.2", "71.422, -147.561, -8.08324, 0.84", "71.8373, -145.814, -6.51983, 0.36", "72.002, -145.121, -5.90015, 0.36", "72.4265, -143.335, -4.30214, 0.84" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_16", "dend_7", "dend_4", "dend_3", "dend_0", "dend_35", "dend_34", "dend_20", "dend_17", "dend_15", "dend_8", "dend_6", "dend_5", "dend_2", "dend_1", "dend_37", "dend_36", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_9", "dend_40", "dend_39", "dend_38", "dend_24", "dend_23", "dend_14", "dend_13", "dend_11", "dend_10", "dend_26", "dend_25", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_16", "dend_7", "dend_4", "dend_3", "dend_0", "dend_35", "dend_34", "dend_20", "dend_17", "dend_15", "dend_8", "dend_6", "dend_5", "dend_2", "dend_1", "dend_37", "dend_36", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_9", "dend_40", "dend_39", "dend_38", "dend_24", "dend_23", "dend_14", "dend_13", "dend_11", "dend_10", "dend_26", "dend_25", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_16", "dend_7", "dend_4", "dend_3", "dend_0", "axon_0", "dend_35", "dend_34", "dend_20", "dend_17", "dend_15", "dend_8", "dend_6", "dend_5", "dend_2", "dend_1", "axon_1", "dend_37", "dend_36", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_9", "dend_40", "dend_39", "dend_38", "dend_24", "dend_23", "dend_14", "dend_13", "dend_11", "dend_10", "dend_26", "dend_25", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_DBC_b81a484394_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_40, id: dend_40, parent: dend_37
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, axon_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, axon_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_28
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.4999988276266909)
    connect dend_16(0), soma_0(0.4999988276266909)
    connect dend_7(0), soma_0(0.4999988276266909)
    connect dend_4(0), soma_0(0.4999988276266909)
    connect dend_3(0), soma_0(0.4999988276266909)
    connect dend_0(0), soma_0(0.4999988276266909)
    connect axon_0(0), soma_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_40(0), dend_37(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.29416, -10.039, 0.0, 3.29577 ) }
    soma_0 { pt3dadd( -2.90858, -8.93717, 0.0, 5.95579 ) }
    soma_0 { pt3dadd( -2.523, -7.83528, 0.0, 9.15271 ) }
    soma_0 { pt3dadd( -2.13742, -6.7334, 0.0, 11.3921 ) }
    soma_0 { pt3dadd( -1.75184, -5.63152, 0.0, 12.7837 ) }
    soma_0 { pt3dadd( -1.36626, -4.52964, 0.0, 13.7064 ) }
    soma_0 { pt3dadd( -0.980683, -3.42776, 0.0, 14.2605 ) }
    soma_0 { pt3dadd( -0.595104, -2.32587, 0.0, 14.5213 ) }
    soma_0 { pt3dadd( -0.209524, -1.22399, 0.0, 14.7821 ) }
    soma_0 { pt3dadd( 0.176055, -0.122111, 0.0, 14.8675 ) }
    soma_0 { pt3dadd( 0.561635, 0.979771, 0.0, 14.5727 ) }
    soma_0 { pt3dadd( 0.947214, 2.08165, 0.0, 14.1 ) }
    soma_0 { pt3dadd( 1.33279, 3.18354, 0.0, 13.169 ) }
    soma_0 { pt3dadd( 1.71837, 4.28542, 0.0, 12.1705 ) }
    soma_0 { pt3dadd( 2.10395, 5.3873, 0.0, 11.0272 ) }
    soma_0 { pt3dadd( 2.48953, 6.48918, 0.0, 9.72958 ) }
    soma_0 { pt3dadd( 2.87511, 7.59106, 0.0, 8.28215 ) }
    soma_0 { pt3dadd( 3.26069, 8.69295, 0.0, 6.88757 ) }
    soma_0 { pt3dadd( 3.64627, 9.79483, 0.0, 5.52197 ) }
    soma_0 { pt3dadd( 4.03185, 10.8967, 0.0, 3.91408 ) }
    soma_0 { pt3dadd( 4.41743, 11.9986, 0.0, 2.33646 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.37545, -10.4718, 9.67, 2.76 ) }
    dend_33 { pt3dadd( -1.58711, -12.249, 9.74401, 2.76 ) }
    dend_33 { pt3dadd( -1.94497, -14.5324, 9.75749, 2.76 ) }
    dend_33 { pt3dadd( -2.29752, -16.4407, 9.74123, 2.76 ) }
    dend_33 { pt3dadd( -2.8517, -19.1174, 9.69892, 2.16 ) }
    dend_33 { pt3dadd( -3.37503, -21.6008, 9.70074, 2.16 ) }
    dend_33 { pt3dadd( -4.13374, -25.1015, 9.73797, 1.92 ) }
    dend_33 { pt3dadd( -4.88466, -28.1315, 9.7932, 1.92 ) }
    dend_33 { pt3dadd( -5.27661, -29.5761, 9.82304, 1.92 ) }
    dend_33 { pt3dadd( -6.16551, -32.7271, 9.89763, 1.92 ) }
    dend_33 { pt3dadd( -6.72369, -34.6341, 9.95099, 1.56 ) }
    dend_33 { pt3dadd( -7.41617, -37.1181, 10.0338, 1.56 ) }
    dend_33 { pt3dadd( -7.93327, -39.1278, 10.1157, 1.2 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 34/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.36455, 4.80579, -1.63, 2.16 ) }
    dend_16 { pt3dadd( 7.77079, 3.42037, -2.16558, 2.16 ) }
    dend_16 { pt3dadd( 11.3109, -0.00681674, -3.76285, 1.8 ) }
    dend_16 { pt3dadd( 13.9598, -2.65434, -4.97917, 1.56 ) }
    dend_16 { pt3dadd( 15.8431, -4.56887, -5.69386, 1.56 ) }
    dend_16 { pt3dadd( 17.5508, -6.35429, -6.25181, 1.56 ) }
    dend_16 { pt3dadd( 22.2292, -11.3448, -7.60254, 1.2 ) }
    dend_16 { pt3dadd( 25.2734, -14.6287, -8.28729, 1.2 ) }
    dend_16 { pt3dadd( 27.4, -16.9263, -8.63532, 1.2 ) }
    dend_16 { pt3dadd( 30.2432, -20.0471, -8.93775, 1.2 ) }
    dend_16 { pt3dadd( 31.7385, -21.7376, -9.06573, 1.44 ) }
    dend_16 { pt3dadd( 32.7171, -22.9457, -9.07843, 1.44 ) }
    dend_16 { pt3dadd( 34.6255, -25.6951, -8.53639, 1.68 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 47/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.61455, 11.1897, 0.0, 2.4 ) }
    dend_7 { pt3dadd( 6.4884, 13.6219, -0.229486, 1.8 ) }
    dend_7 { pt3dadd( 7.485, 16.7007, -0.508343, 1.2 ) }
    dend_7 { pt3dadd( 8.28847, 19.1829, -0.733162, 1.2 ) }
    dend_7 { pt3dadd( 9.43511, 22.7253, -1.054, 1.2 ) }
    dend_7 { pt3dadd( 10.5235, 26.0877, -1.35854, 1.68 ) }
    dend_7 { pt3dadd( 11.087, 27.8286, -1.51622, 1.68 ) }
    dend_7 { pt3dadd( 11.7993, 30.2258, -1.76729, 1.68 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 55/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 3.41455, 11.9877, 0.29, 2.4 ) }
    dend_4 { pt3dadd( 3.14487, 13.118, 0.356915, 2.4 ) }
    dend_4 { pt3dadd( 2.66319, 16.2527, 0.357616, 1.44 ) }
    dend_4 { pt3dadd( 2.52696, 17.469, 0.334131, 1.44 ) }
    dend_4 { pt3dadd( 2.42698, 18.55, 0.281671, 1.44 ) }
    dend_4 { pt3dadd( 2.34302, 19.5529, 0.219205, 1.44 ) }
    dend_4 { pt3dadd( 2.1456, 22.7071, 0.282914, 1.44 ) }
    dend_4 { pt3dadd( 2.00143, 26.1737, 0.567984, 1.44 ) }
    dend_4 { pt3dadd( 1.97036, 27.5702, 0.748203, 1.44 ) }
    dend_4 { pt3dadd( 1.94107, 28.793, 0.94496, 1.44 ) }
    dend_4 { pt3dadd( 1.80636, 31.6745, 1.56298, 1.32 ) }
    dend_4 { pt3dadd( 1.34485, 37.9768, 3.1552, 1.44 ) }
    dend_4 { pt3dadd( 1.15244, 39.9246, 3.7211, 1.44 ) }
    dend_4 { pt3dadd( 1.00462, 41.1952, 4.14855, 1.44 ) }
    dend_4 { pt3dadd( 0.919478, 41.8367, 4.37229, 1.44 ) }
    dend_4 { pt3dadd( 0.379445, 45.532, 5.64596, 1.8 ) }
    dend_4 { pt3dadd( -0.073998, 48.277, 6.4512, 1.08 ) }
    dend_4 { pt3dadd( -0.212973, 49.0511, 6.5703, 1.08 ) }
    dend_4 { pt3dadd( -0.359247, 49.9774, 6.64767, 1.08 ) }
    dend_4 { pt3dadd( -0.530875, 51.1559, 6.64077, 1.08 ) }
    dend_4 { pt3dadd( -0.798699, 53.0866, 6.56284, 1.08 ) }
    dend_4 { pt3dadd( -0.951732, 54.5042, 6.45837, 1.08 ) }
    dend_4 { pt3dadd( -1.19061, 57.2429, 6.3558, 1.44 ) }
    dend_4 { pt3dadd( -1.24529, 58.1038, 6.36057, 1.44 ) }
    dend_4 { pt3dadd( -1.33298, 60.0278, 6.47726, 1.44 ) }
    dend_4 { pt3dadd( -1.40147, 63.5217, 6.71433, 0.84 ) }
    dend_4 { pt3dadd( -1.41438, 65.1394, 6.86776, 0.84 ) }
    dend_4 { pt3dadd( -1.41976, 65.946, 6.958, 0.84 ) }
    dend_4 { pt3dadd( -1.45523, 68.3788, 7.22738, 0.84 ) }
    dend_4 { pt3dadd( -1.45649, 69.8036, 7.38206, 1.08 ) }
    dend_4 { pt3dadd( -1.43297, 73.4025, 7.75112, 1.68 ) }
    dend_4 { pt3dadd( -1.37903, 76.5844, 7.90954, 0.84 ) }
    dend_4 { pt3dadd( -1.3651, 78.0658, 7.96006, 0.84 ) }
    dend_4 { pt3dadd( -1.36023, 78.9295, 7.98373, 0.84 ) }
    dend_4 { pt3dadd( -1.34258, 83.2085, 8.11271, 1.56 ) }
    dend_4 { pt3dadd( -1.3467, 86.3143, 8.23312, 0.96 ) }
    dend_4 { pt3dadd( -1.35044, 88.8536, 8.40989, 0.96 ) }
    dend_4 { pt3dadd( -1.33772, 90.3916, 8.50588, 0.96 ) }
    dend_4 { pt3dadd( -1.31486, 91.7097, 8.55096, 0.96 ) }
    dend_4 { pt3dadd( -1.29775, 92.4905, 8.55444, 0.96 ) }
    dend_4 { pt3dadd( -1.20583, 96.1474, 8.33806, 1.44 ) }
    dend_4 { pt3dadd( -1.15182, 97.1089, 8.24764, 1.44 ) }
    dend_4 { pt3dadd( -1.08787, 98.0799, 8.14641, 1.44 ) }
    dend_4 { pt3dadd( -0.844385, 101.19, 7.80027, 0.96 ) }
    dend_4 { pt3dadd( -0.754556, 102.283, 7.67455, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( -0.546047, 104.666, 7.38974, 1.44 ) }
    dend_4 { pt3dadd( -0.386106, 106.257, 7.20973, 1.44 ) }
    dend_4 { pt3dadd( -0.185182, 108.413, 7.02118, 0.96 ) }
    dend_4 { pt3dadd( -0.083201, 109.651, 6.96061, 0.96 ) }
    dend_4 { pt3dadd( 0.0130025, 111.029, 6.96117, 0.96 ) }
    dend_4 { pt3dadd( 0.0628994, 111.899, 6.98592, 0.96 ) }
    dend_4 { pt3dadd( 0.165257, 114.567, 7.12583, 1.44 ) }
    dend_4 { pt3dadd( 0.200658, 115.733, 7.17896, 1.44 ) }
    dend_4 { pt3dadd( 0.273962, 117.734, 7.20973, 0.84 ) }
    dend_4 { pt3dadd( 0.314823, 118.994, 7.1917, 0.84 ) }
    dend_4 { pt3dadd( 0.359428, 120.686, 7.13661, 1.44 ) }
    dend_4 { pt3dadd( 0.428409, 123.628, 6.99254, 0.84 ) }
    dend_4 { pt3dadd( 0.465775, 125.108, 6.89231, 0.84 ) }
    dend_4 { pt3dadd( 0.523292, 126.4, 6.78401, 0.84 ) }
    dend_4 { pt3dadd( 0.589847, 127.358, 6.6875, 0.84 ) }
    dend_4 { pt3dadd( 0.701183, 128.574, 6.54698, 0.84 ) }
    dend_4 { pt3dadd( 0.81285, 129.583, 6.41529, 0.84 ) }
    dend_4 { pt3dadd( 0.941093, 130.652, 6.29712, 0.84 ) }
    dend_4 { pt3dadd( 1.07333, 131.723, 6.21938, 0.84 ) }
    dend_4 { pt3dadd( 1.17865, 132.657, 6.17905, 0.84 ) }
    dend_4 { pt3dadd( 1.22332, 133.242, 6.15952, 0.84 ) }
    dend_4 { pt3dadd( 1.28716, 134.213, 6.15812, 0.84 ) }
    dend_4 { pt3dadd( 1.54744, 138.362, 5.99957, 1.44 ) }
    dend_4 { pt3dadd( 1.79918, 142.605, 5.7005, 0.72 ) }
    dend_4 { pt3dadd( 2.00401, 146.241, 5.47394, 0.72 ) }
    dend_4 { pt3dadd( 2.23457, 150.788, 5.27003, 1.08 ) }
    dend_4 { pt3dadd( 2.39226, 154.442, 5.17403, 1.44 ) }
    dend_4 { pt3dadd( 2.58623, 159.542, 5.15781, 0.72 ) }
    dend_4 { pt3dadd( 2.64391, 161.578, 5.15804, 0.72 ) }
    dend_4 { pt3dadd( 2.71536, 165.06, 5.15332, 1.2 ) }
    dend_4 { pt3dadd( 2.79897, 168.122, 5.10859, 0.72 ) }
    dend_4 { pt3dadd( 2.87018, 170.279, 5.11599, 0.72 ) }
    dend_4 { pt3dadd( 2.91553, 172.482, 5.14542, 1.2 ) }
    dend_4 { pt3dadd( 2.97925, 176.055, 5.40979, 0.96 ) }
    dend_4 { pt3dadd( 3.01363, 177.429, 5.48063, 0.96 ) }
    dend_4 { pt3dadd( 3.12557, 180.609, 5.32683, 1.44 ) }
    dend_4 { pt3dadd( 3.28708, 183.527, 5.01081, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.02545, -1.65171, 5.97, 2.16 ) }
    dend_3 { pt3dadd( -9.28607, -1.5184, 5.74455, 2.16 ) }
    dend_3 { pt3dadd( -12.6617, -1.24199, 5.10695, 1.92 ) }
    dend_3 { pt3dadd( -15.6688, -0.995296, 4.93255, 1.56 ) }
    dend_3 { pt3dadd( -19.2255, -0.703516, 4.72627, 1.08 ) }
    dend_3 { pt3dadd( -21.5291, -0.514541, 4.59267, 1.56 ) }
    dend_3 { pt3dadd( -24.9219, -0.236212, 4.3959, 2.52 ) }
    dend_3 { pt3dadd( -27.7848, 0.142575, 4.09177, 2.52 ) }
    dend_3 { pt3dadd( -33.9094, 1.33934, 2.84999, 1.92 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 46/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.08545, 5.35179, 3.55, 2.28 ) }
    dend_0 { pt3dadd( -5.80313, 6.87446, 4.30853, 2.28 ) }
    dend_0 { pt3dadd( -7.8671, 8.5174, 5.36838, 2.28 ) }
    dend_0 { pt3dadd( -11.0019, 11.0127, 6.97813, 1.8 ) }
    dend_0 { pt3dadd( -14.6669, 13.9301, 8.86008, 1.44 ) }
    dend_0 { pt3dadd( -16.5703, 15.4452, 9.8375, 1.08 ) }
    dend_0 { pt3dadd( -18.8287, 17.2429, 10.9971, 1.08 ) }
    dend_0 { pt3dadd( -22.431, 19.8091, 12.9604, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 54/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.41743, 11.9986, 0.0, 0.48 ) }
    axon_0 { pt3dadd( 9.37179, 26.1568, 0.0, 0.48 ) }
    axon_0 { pt3dadd( 14.3261, 40.315, 0.0, 0.48 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 57/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -7.93327, -39.1278, 10.1157, 0.6 ) }
    dend_35 { pt3dadd( -7.82087, -41.3791, 10.1281, 0.6 ) }
    dend_35 { pt3dadd( -7.63551, -44.5755, 10.1476, 0.6 ) }
    dend_35 { pt3dadd( -7.35257, -49.4449, 10.1793, 1.08 ) }
    dend_35 { pt3dadd( -7.21667, -51.9301, 10.1958, 1.08 ) }
    dend_35 { pt3dadd( -7.02795, -55.3453, 10.2192, 0.48 ) }
    dend_35 { pt3dadd( -6.77974, -59.6101, 10.2492, 1.2 ) }
    dend_35 { pt3dadd( -6.69539, -60.8922, 10.3109, 1.2 ) }
    dend_35 { pt3dadd( -6.44599, -64.6586, 10.6379, 0.6 ) }
    dend_35 { pt3dadd( -6.2991, -67.012, 10.9273, 0.6 ) }
    dend_35 { pt3dadd( -6.16925, -69.3393, 11.2719, 0.6 ) }
    dend_35 { pt3dadd( -6.15279, -69.8123, 11.3496, 0.6 ) }
    dend_35 { pt3dadd( -6.0943, -74.877, 12.2054, 1.8 ) }
    dend_35 { pt3dadd( -6.10248, -77.7705, 12.674, 1.8 ) }
    dend_35 { pt3dadd( -6.14421, -80.451, 13.0755, 1.8 ) }
    dend_35 { pt3dadd( -6.21525, -82.7885, 13.3694, 1.8 ) }
    dend_35 { pt3dadd( -6.37894, -86.15, 13.6905, 1.32 ) }
    dend_35 { pt3dadd( -6.56432, -89.2054, 13.8723, 1.92 ) }
    dend_35 { pt3dadd( -6.65482, -90.6382, 13.8817, 1.92 ) }
    dend_35 { pt3dadd( -6.78422, -93.2384, 13.9082, 1.08 ) }
    dend_35 { pt3dadd( -6.92293, -95.8739, 14.0585, 0.84 ) }
    dend_35 { pt3dadd( -7.03829, -97.7737, 14.1279, 0.84 ) }
    dend_35 { pt3dadd( -7.12042, -99.285, 14.2456, 1.32 ) }
    dend_35 { pt3dadd( -7.27338, -101.41, 14.4544, 1.32 ) }
    dend_35 { pt3dadd( -7.37795, -102.804, 14.6044, 1.32 ) }
    dend_35 { pt3dadd( -7.73618, -107.279, 15.1331, 1.8 ) }
    dend_35 { pt3dadd( -8.17034, -112.437, 15.7907, 1.08 ) }
    dend_35 { pt3dadd( -8.63029, -117.474, 16.4625, 0.72 ) }
    dend_35 { pt3dadd( -9.27235, -123.55, 17.2866, 2.04 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -7.93327, -39.1278, 10.1157, 0.96 ) }
    dend_34 { pt3dadd( -8.7416, -40.5516, 10.9264, 0.96 ) }
    dend_34 { pt3dadd( -9.04849, -41.2362, 11.1477, 0.96 ) }
    dend_34 { pt3dadd( -9.84011, -43.0799, 11.4284, 0.96 ) }
    dend_34 { pt3dadd( -10.1929, -43.9777, 11.4787, 0.96 ) }
    dend_34 { pt3dadd( -10.5245, -44.8501, 11.4897, 0.96 ) }
    dend_34 { pt3dadd( -11.1268, -46.3418, 11.4659, 0.96 ) }
    dend_34 { pt3dadd( -12.2237, -49.0542, 11.3844, 0.96 ) }
    dend_34 { pt3dadd( -12.7269, -50.2351, 11.2462, 1.44 ) }
    dend_34 { pt3dadd( -13.534, -51.9037, 10.8308, 0.72 ) }
    dend_34 { pt3dadd( -13.9816, -52.6611, 10.5942, 0.72 ) }
    dend_34 { pt3dadd( -14.5781, -53.5181, 10.2337, 1.2 ) }
    dend_34 { pt3dadd( -15.2849, -54.387, 9.78982, 0.48 ) }
    dend_34 { pt3dadd( -16.5031, -55.6423, 9.06417, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( -17.5888, -56.6228, 8.44462, 1.08 ) }
    dend_34 { pt3dadd( -18.7211, -57.5438, 7.71744, 0.6 ) }
    dend_34 { pt3dadd( -20.0696, -58.6066, 6.77825, 1.56 ) }
    dend_34 { pt3dadd( -20.8436, -59.1779, 6.2065, 0.72 ) }
    dend_34 { pt3dadd( -22.3156, -60.1334, 5.10521, 1.8 ) }
    dend_34 { pt3dadd( -24.0185, -61.0764, 3.93617, 0.84 ) }
    dend_34 { pt3dadd( -26.0735, -62.1055, 2.5885, 0.48 ) }
    dend_34 { pt3dadd( -27.2346, -62.5976, 1.9067, 1.56 ) }
    dend_34 { pt3dadd( -28.8179, -63.1876, 1.12915, 0.72 ) }
    dend_34 { pt3dadd( -30.2958, -63.7122, 0.484413, 1.44 ) }
    dend_34 { pt3dadd( -32.0575, -64.3583, -0.136405, 0.48 ) }
    dend_34 { pt3dadd( -32.8566, -64.6404, -0.412578, 0.48 ) }
    dend_34 { pt3dadd( -34.2173, -65.0816, -0.679549, 1.08 ) }
    dend_34 { pt3dadd( -35.188, -65.4093, -0.784589, 0.48 ) }
    dend_34 { pt3dadd( -36.1473, -65.8137, -0.770002, 1.08 ) }
    dend_34 { pt3dadd( -37.3164, -66.453, -0.593013, 0.6 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 16/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 34.6255, -25.6951, -8.53639, 1.8 ) }
    dend_20 { pt3dadd( 35.7425, -27.905, -8.20282, 1.8 ) }
    dend_20 { pt3dadd( 36.4563, -29.3175, -7.98964, 1.8 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 34.6255, -25.6951, -8.53639, 1.08 ) }
    dend_17 { pt3dadd( 37.0461, -25.7189, -6.23499, 1.08 ) }
    dend_17 { pt3dadd( 38.5206, -25.7183, -4.75894, 1.08 ) }
    dend_17 { pt3dadd( 39.4574, -25.718, -3.82107, 1.08 ) }
    dend_17 { pt3dadd( 40.3723, -25.7176, -2.9052, 1.08 ) }
    dend_17 { pt3dadd( 43.6843, -25.7164, 0.410371, 0.84 ) }
    dend_17 { pt3dadd( 46.1043, -25.7155, 2.83296, 1.32 ) }
    dend_17 { pt3dadd( 46.3786, -25.7016, 3.14987, 1.32 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 27/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 11.7993, 30.2258, -1.76729, 1.2 ) }
    dend_15 { pt3dadd( 14.4065, 30.1928, 0.727187, 1.2 ) }
    dend_15 { pt3dadd( 17.2198, 30.0152, 3.03598, 1.2 ) }
    dend_15 { pt3dadd( 20.9347, 29.5953, 5.77516, 1.2 ) }
    dend_15 { pt3dadd( 24.1434, 29.0901, 7.9614, 1.2 ) }
    dend_15 { pt3dadd( 29.0171, 28.1477, 11.0734, 1.8 ) }
    dend_15 { pt3dadd( 32.5214, 27.3633, 13.1901, 1.32 ) }
    dend_15 { pt3dadd( 36.2318, 26.3887, 15.0755, 0.96 ) }
    dend_15 { pt3dadd( 38.7015, 25.6827, 16.0819, 0.96 ) }
    dend_15 { pt3dadd( 40.826, 25.0665, 16.7183, 0.96 ) }
    dend_15 { pt3dadd( 44.1362, 24.1031, 17.5575, 0.84 ) }
    dend_15 { pt3dadd( 46.418, 23.4048, 18.067, 0.84 ) }
    dend_15 { pt3dadd( 49.604, 22.3997, 18.8649, 1.32 ) }
    dend_15 { pt3dadd( 52.6927, 21.4087, 19.9502, 0.96 ) }
    dend_15 { pt3dadd( 54.7779, 20.7941, 20.7093, 1.44 ) }
    dend_15 { pt3dadd( 57.746, 19.9626, 21.8459, 1.32 ) }
    dend_15 { pt3dadd( 59.0772, 19.5655, 22.4074, 1.32 ) }
    dend_15 { pt3dadd( 61.1641, 18.805, 23.5417, 1.08 ) }
    dend_15 { pt3dadd( 62.7057, 17.7888, 24.9449, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 46/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 11.7993, 30.2258, -1.76729, 1.2 ) }
    dend_8 { pt3dadd( 11.766, 30.9223, -1.73144, 1.2 ) }
    dend_8 { pt3dadd( 11.6648, 33.2485, -1.63407, 1.2 ) }
    dend_8 { pt3dadd( 11.5321, 36.2978, -1.50642, 1.2 ) }
    dend_8 { pt3dadd( 11.3746, 39.9168, -1.35493, 0.96 ) }
    dend_8 { pt3dadd( 11.3006, 41.6182, -1.2837, 0.96 ) }
    dend_8 { pt3dadd( 11.1427, 45.2474, -1.13179, 1.2 ) }
    dend_8 { pt3dadd( 11.07, 46.8962, -1.09561, 1.2 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 54/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.28708, 183.527, 5.01081, 0.72 ) }
    dend_6 { pt3dadd( -2.50593, 185.231, 7.22062, 0.72 ) }
    dend_6 { pt3dadd( -5.79144, 186.196, 8.47392, 0.72 ) }
    dend_6 { pt3dadd( -7.20121, 186.611, 9.0117, 0.72 ) }
    dend_6 { pt3dadd( -9.24233, 187.211, 9.7903, 1.08 ) }
    dend_6 { pt3dadd( -11.8928, 187.99, 10.8014, 1.08 ) }
    dend_6 { pt3dadd( -13.0611, 188.334, 11.247, 1.08 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 61/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 3.28708, 183.527, 5.01081, 0.96 ) }
    dend_5 { pt3dadd( 4.81299, 183.86, 3.63523, 0.96 ) }
    dend_5 { pt3dadd( 7.12048, 184.666, 1.59106, 0.96 ) }
    dend_5 { pt3dadd( 8.00585, 185.052, 0.96082, 0.96 ) }
    dend_5 { pt3dadd( 12.5787, 187.729, -0.938891, 0.96 ) }
    dend_5 { pt3dadd( 14.2358, 188.788, -1.33662, 0.96 ) }
    dend_5 { pt3dadd( 16.0615, 189.768, -1.518, 0.96 ) }
    dend_5 { pt3dadd( 19.6849, 191.21, -1.55151, 0.96 ) }
    dend_5 { pt3dadd( 25.0292, 192.696, -1.28479, 0.96 ) }
    dend_5 { pt3dadd( 30.6209, 193.384, -1.47994, 0.6 ) }
    dend_5 { pt3dadd( 31.8107, 193.472, -1.40296, 0.6 ) }
    dend_5 { pt3dadd( 37.5157, 193.372, -1.14474, 1.08 ) }
    dend_5 { pt3dadd( 41.8194, 192.472, -1.37686, 1.44 ) }
    dend_5 { pt3dadd( 45.0945, 191.015, -2.17855, 1.2 ) }
    dend_5 { pt3dadd( 49.6798, 188.278, -4.40927, 0.84 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 76/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -22.431, 19.8091, 12.9604, 1.2 ) }
    dend_2 { pt3dadd( -22.8349, 18.4433, 14.7011, 1.2 ) }
    dend_2 { pt3dadd( -23.4453, 16.3791, 17.3321, 1.2 ) }
    dend_2 { pt3dadd( -23.7802, 15.2464, 18.7758, 1.2 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 80/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -22.431, 19.8091, 12.9604, 1.2 ) }
    dend_1 { pt3dadd( -21.9351, 22.3681, 14.2311, 1.2 ) }
    dend_1 { pt3dadd( -21.4347, 24.9511, 15.5137, 1.2 ) }
    dend_1 { pt3dadd( -20.9575, 27.4138, 16.7366, 1.2 ) }
    dend_1 { pt3dadd( -20.7958, 28.2483, 17.151, 1.2 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 85/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.3261, 40.315, 0.0, 0.48 ) }
    axon_1 { pt3dadd( 19.2805, 54.4732, 0.0, 0.48 ) }
    axon_1 { pt3dadd( 24.2349, 68.6314, 0.0, 0.48 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 88/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -9.27235, -123.55, 17.2866, 0.84 ) }
    dend_37 { pt3dadd( -9.00896, -126.23, 17.9644, 0.84 ) }
    dend_37 { pt3dadd( -8.74182, -128.317, 18.4241, 0.84 ) }
    dend_37 { pt3dadd( -8.55198, -129.549, 18.6401, 0.84 ) }
    dend_37 { pt3dadd( -8.4424, -130.249, 18.7391, 0.84 ) }
    dend_37 { pt3dadd( -7.91334, -133.606, 19.1415, 1.44 ) }
    dend_37 { pt3dadd( -7.62191, -135.446, 19.3352, 1.44 ) }
    dend_37 { pt3dadd( -7.20031, -137.985, 19.5519, 0.72 ) }
    dend_37 { pt3dadd( -6.87841, -140.303, 19.7311, 0.72 ) }
    dend_37 { pt3dadd( -6.64469, -142.348, 19.8548, 0.72 ) }
    dend_37 { pt3dadd( -6.5608, -143.309, 19.8937, 0.72 ) }
    dend_37 { pt3dadd( -6.53286, -143.973, 19.875, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_37 { pt3dadd( -6.44646, -147.37, 19.6887, 1.44 ) }
    dend_37 { pt3dadd( -6.38815, -152.291, 19.302, 0.72 ) }
    dend_37 { pt3dadd( -6.39818, -153.994, 19.1396, 0.72 ) }
    dend_37 { pt3dadd( -6.41141, -155.014, 19.0281, 0.72 ) }
    dend_37 { pt3dadd( -6.49937, -159.394, 18.5122, 0.72 ) }
    dend_37 { pt3dadd( -6.53898, -160.87, 18.324, 0.72 ) }
    dend_37 { pt3dadd( -6.59594, -162.796, 18.0444, 0.72 ) }
    dend_37 { pt3dadd( -6.70778, -165.54, 17.6182, 1.44 ) }
    dend_37 { pt3dadd( -6.93343, -168.184, 17.2436, 0.72 ) }
    dend_37 { pt3dadd( -7.15198, -169.959, 17.0389, 0.72 ) }
    dend_37 { pt3dadd( -7.31052, -171.17, 17.0164, 0.72 ) }
    dend_37 { pt3dadd( -7.46991, -172.341, 17.0095, 0.72 ) }
    dend_37 { pt3dadd( -7.73564, -174.27, 16.984, 0.72 ) }
    dend_37 { pt3dadd( -8.26254, -178.07, 17.0944, 1.44 ) }
    dend_37 { pt3dadd( -8.42659, -179.253, 17.166, 1.44 ) }
    dend_37 { pt3dadd( -8.9771, -183.332, 17.5088, 0.6 ) }
    dend_37 { pt3dadd( -9.46527, -187.227, 17.9313, 1.2 ) }
    dend_37 { pt3dadd( -10.0014, -191.766, 18.5189, 0.6 ) }
    dend_37 { pt3dadd( -10.3704, -195.328, 19.0434, 1.08 ) }
    dend_37 { pt3dadd( -10.5161, -196.989, 19.3168, 0.36 ) }
    dend_37 { pt3dadd( -10.6036, -197.843, 19.4324, 0.36 ) }
    dend_37 { pt3dadd( -11.0794, -201.241, 19.7751, 1.08 ) }
    dend_37 { pt3dadd( -11.2693, -202.398, 19.9085, 1.08 ) }
    dend_37 { pt3dadd( -11.6104, -204.296, 20.0809, 0.36 ) }
    dend_37 { pt3dadd( -11.9268, -206.054, 20.1281, 1.68 ) }
    dend_37 { pt3dadd( -12.5588, -209.525, 20.1106, 0.72 ) }
    dend_37 { pt3dadd( -12.9738, -211.623, 20.0546, 0.72 ) }
    dend_37 { pt3dadd( -13.1757, -212.601, 20.0068, 0.72 ) }
    dend_37 { pt3dadd( -13.3906, -213.709, 19.9427, 0.72 ) }
    dend_37 { pt3dadd( -13.8268, -216.183, 19.7801, 1.44 ) }
    dend_37 { pt3dadd( -14.2155, -218.352, 19.6499, 1.44 ) }
    dend_37 { pt3dadd( -14.6077, -220.088, 19.4912, 0.72 ) }
    dend_37 { pt3dadd( -15.0415, -221.717, 19.2943, 0.72 ) }
    dend_37 { pt3dadd( -15.3013, -222.609, 19.2347, 0.72 ) }
    dend_37 { pt3dadd( -15.7349, -223.945, 19.1517, 0.72 ) }
    dend_37 { pt3dadd( -16.6954, -226.485, 19.0324, 1.32 ) }
    dend_37 { pt3dadd( -17.7998, -229.214, 18.9693, 0.84 ) }
    dend_37 { pt3dadd( -18.4268, -230.667, 18.9255, 0.84 ) }
    dend_37 { pt3dadd( -19.9902, -233.743, 18.8696, 0.48 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 39/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -9.27235, -123.55, 17.2866, 1.2 ) }
    dend_36 { pt3dadd( -10.442, -125.292, 16.5532, 1.2 ) }
    dend_36 { pt3dadd( -11.2187, -126.501, 16.0071, 1.2 ) }
    dend_36 { pt3dadd( -12.9655, -129.329, 14.666, 0.96 ) }
    dend_36 { pt3dadd( -13.8003, -130.654, 14.1583, 1.44 ) }
    dend_36 { pt3dadd( -15.3598, -133.203, 13.1582, 0.72 ) }
    dend_36 { pt3dadd( -17.0715, -136.051, 12.0586, 0.72 ) }
    dend_36 { pt3dadd( -17.6892, -137.125, 11.6458, 0.72 ) }
    dend_36 { pt3dadd( -18.5735, -138.705, 11.0541, 1.2 ) }
    dend_36 { pt3dadd( -20.6977, -142.567, 9.35005, 0.48 ) }
    dend_36 { pt3dadd( -22.3558, -145.568, 7.91483, 0.96 ) }
    dend_36 { pt3dadd( -23.8584, -148.3, 6.45483, 0.36 ) }
    dend_36 { pt3dadd( -24.0801, -148.699, 6.22663, 0.36 ) }
    dend_36 { pt3dadd( -25.1058, -150.429, 5.45409, 0.72 ) }
    dend_36 { pt3dadd( -27.2812, -154.082, 4.51783, 0.72 ) }
    dend_36 { pt3dadd( -28.7984, -157.223, 4.05237, 1.2 ) }
    dend_36 { pt3dadd( -29.8139, -159.921, 4.13664, 0.6 ) }
    dend_36 { pt3dadd( -30.2913, -161.78, 4.37837, 0.6 ) }
    dend_36 { pt3dadd( -32.7027, -172.339, 6.57218, 0.6 ) }
    dend_36 { pt3dadd( -33.3588, -175.841, 7.73309, 0.6 ) }
    dend_36 { pt3dadd( -34.1422, -180.98, 10.2043, 1.08 ) }
    dend_36 { pt3dadd( -34.2724, -183.007, 11.3738, 0.36 ) }
    dend_36 { pt3dadd( -34.2767, -184.253, 12.1759, 0.36 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 36.4563, -29.3175, -7.98964, 1.8 ) }
    dend_22 { pt3dadd( 36.2, -30.8752, -6.27674, 1.8 ) }
    dend_22 { pt3dadd( 36.0645, -31.6988, -5.37109, 1.8 ) }
    dend_22 { pt3dadd( 35.6841, -34.0101, -2.8295, 1.8 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 66/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 36.4563, -29.3175, -7.98964, 1.44 ) }
    dend_21 { pt3dadd( 38.1952, -30.5055, -9.60411, 1.44 ) }
    dend_21 { pt3dadd( 39.2763, -31.3024, -10.5438, 1.44 ) }
    dend_21 { pt3dadd( 39.9773, -31.8287, -11.1354, 1.44 ) }
    dend_21 { pt3dadd( 43.1238, -34.0787, -13.1634, 1.56 ) }
    dend_21 { pt3dadd( 44.281, -34.8435, -13.7029, 1.56 ) }
    dend_21 { pt3dadd( 46.3751, -36.1799, -14.5877, 1.8 ) }
    dend_21 { pt3dadd( 48.0547, -37.2663, -15.2158, 1.8 ) }
    dend_21 { pt3dadd( 50.1295, -38.4907, -15.8507, 1.32 ) }
    dend_21 { pt3dadd( 53.4455, -40.2722, -16.7336, 1.68 ) }
    dend_21 { pt3dadd( 55.5584, -41.3502, -17.3745, 1.32 ) }
    dend_21 { pt3dadd( 58.8081, -42.8406, -18.2505, 0.72 ) }
    dend_21 { pt3dadd( 60.6334, -43.5862, -18.6648, 0.72 ) }
    dend_21 { pt3dadd( 61.861, -44.0157, -18.9933, 1.32 ) }
    dend_21 { pt3dadd( 64.349, -44.6403, -19.8165, 0.96 ) }
    dend_21 { pt3dadd( 68.4555, -45.3667, -21.9688, 1.44 ) }
    dend_21 { pt3dadd( 73.4232, -45.8507, -25.5036, 0.6 ) }
    dend_21 { pt3dadd( 74.3096, -45.8408, -26.3099, 0.6 ) }
    dend_21 { pt3dadd( 75.9267, -45.7313, -27.9987, 1.08 ) }
    dend_21 { pt3dadd( 78.2742, -45.4428, -30.7932, 1.56 ) }
    dend_21 { pt3dadd( 80.2802, -44.9093, -33.6265, 1.2 ) }
    dend_21 { pt3dadd( 81.6217, -44.3329, -36.1954, 1.2 ) }
    dend_21 { pt3dadd( 82.3036, -43.9888, -37.9865, 1.2 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 46.3786, -25.7016, 3.14987, 1.08 ) }
    dend_19 { pt3dadd( 51.198, -25.0595, 3.02241, 1.08 ) }
    dend_19 { pt3dadd( 53.1407, -24.682, 1.97371, 1.08 ) }
    dend_19 { pt3dadd( 56.1484, -23.981, -0.0382533, 1.56 ) }
    dend_19 { pt3dadd( 61.6129, -22.5945, -4.00484, 1.08 ) }
    dend_19 { pt3dadd( 65.5073, -21.4689, -6.98607, 0.6 ) }
    dend_19 { pt3dadd( 75.6977, -17.7955, -15.4737, 0.6 ) }
    dend_19 { pt3dadd( 78.4046, -16.4741, -18.3044, 1.2 ) }
    dend_19 { pt3dadd( 79.8899, -15.509, -20.117, 0.6 ) }
    dend_19 { pt3dadd( 80.9948, -14.5287, -21.6408, 1.08 ) }
    dend_19 { pt3dadd( 81.9007, -13.4688, -23.0857, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( 83.7316, -10.7695, -25.9328, 1.44 ) }
    dend_19 { pt3dadd( 85.1356, -8.25266, -27.2257, 0.84 ) }
    dend_19 { pt3dadd( 86.0596, -6.3889, -27.933, 1.32 ) }
    dend_19 { pt3dadd( 87.4173, -3.49064, -28.8263, 0.72 ) }
    dend_19 { pt3dadd( 88.0852, -2.15539, -29.166, 0.72 ) }
    dend_19 { pt3dadd( 88.9939, -0.598457, -29.5379, 1.08 ) }
    dend_19 { pt3dadd( 90.7836, 1.91904, -30.0828, 0.6 ) }
    dend_19 { pt3dadd( 92.6561, 4.18887, -30.6212, 1.2 ) }
    dend_19 { pt3dadd( 93.7371, 5.32999, -30.9119, 1.2 ) }
    dend_19 { pt3dadd( 95.9119, 7.32481, -31.4724, 0.72 ) }
    dend_19 { pt3dadd( 98.5272, 9.64561, -32.2183, 1.08 ) }
    dend_19 { pt3dadd( 101.758, 12.5512, -33.0064, 0.6 ) }
    dend_19 { pt3dadd( 102.527, 13.2875, -33.1627, 0.6 ) }
    dend_19 { pt3dadd( 103.709, 14.5452, -33.3537, 0.6 ) }
    dend_19 { pt3dadd( 107.555, 19.2914, -33.7369, 1.08 ) }
    dend_19 { pt3dadd( 108.976, 21.2878, -33.7568, 0.72 ) }
    dend_19 { pt3dadd( 111.349, 24.8959, -33.577, 1.2 ) }
    dend_19 { pt3dadd( 113.099, 27.708, -33.3796, 1.2 ) }
    dend_19 { pt3dadd( 114.125, 29.2971, -33.254, 1.2 ) }
    dend_19 { pt3dadd( 115.883, 31.8407, -33.0242, 0.72 ) }
    dend_19 { pt3dadd( 117.133, 33.448, -32.8357, 0.72 ) }
    dend_19 { pt3dadd( 119.231, 35.6654, -32.5672, 0.72 ) }
    dend_19 { pt3dadd( 120.848, 37.0447, -32.408, 1.32 ) }
    dend_19 { pt3dadd( 124.303, 39.4794, -31.9656, 0.96 ) }
    dend_19 { pt3dadd( 125.699, 40.3499, -31.7667, 0.96 ) }
    dend_19 { pt3dadd( 127.242, 41.2259, -31.5332, 1.44 ) }
    dend_19 { pt3dadd( 129.521, 42.5811, -31.1182, 1.08 ) }
    dend_19 { pt3dadd( 131.858, 44.0057, -30.8382, 1.56 ) }
    dend_19 { pt3dadd( 134.734, 45.7874, -30.6853, 0.96 ) }
    dend_19 { pt3dadd( 136.154, 46.6862, -30.7342, 0.96 ) }
    dend_19 { pt3dadd( 137.222, 47.3785, -30.8631, 1.56 ) }
    dend_19 { pt3dadd( 139.532, 48.9179, -31.435, 0.96 ) }
    dend_19 { pt3dadd( 143.248, 51.502, -32.8001, 0.96 ) }
    dend_19 { pt3dadd( 144.423, 52.3068, -33.2129, 0.96 ) }
    dend_19 { pt3dadd( 146.865, 53.8263, -33.9261, 1.56 ) }
    dend_19 { pt3dadd( 148.759, 54.9801, -34.462, 0.84 ) }
    dend_19 { pt3dadd( 150.788, 56.1914, -34.837, 1.44 ) }
    dend_19 { pt3dadd( 154.854, 58.5944, -35.1138, 0.72 ) }
    dend_19 { pt3dadd( 158.464, 60.9685, -34.6364, 0.48 ) }
    dend_19 { pt3dadd( 160.011, 62.0793, -34.2042, 0.48 ) }
    dend_19 { pt3dadd( 162.999, 64.3274, -32.8219, 1.68 ) }
    dend_19 { pt3dadd( 166.915, 67.3026, -30.6326, 0.72 ) }
    dend_19 { pt3dadd( 168.967, 68.8603, -29.2231, 0.72 ) }
    dend_19 { pt3dadd( 171.858, 71.1234, -26.7555, 1.32 ) }
    dend_19 { pt3dadd( 173.001, 72.1343, -25.6601, 1.32 ) }
    dend_19 { pt3dadd( 174.854, 73.9058, -23.3553, 0.72 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 46/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 46.3786, -25.7016, 3.14987, 1.08 ) }
    dend_18 { pt3dadd( 49.4202, -28.4635, -1.04996, 1.08 ) }
    dend_18 { pt3dadd( 50.132, -29.1098, -2.03276, 1.08 ) }
    dend_18 { pt3dadd( 51.4497, -30.3063, -3.85218, 0.84 ) }
    dend_18 { pt3dadd( 52.1092, -30.9051, -4.76285, 0.84 ) }
    dend_18 { pt3dadd( 53.3729, -32.0526, -6.50767, 0.84 ) }
    dend_18 { pt3dadd( 54.2535, -32.8522, -7.72363, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 11.07, 46.8962, -1.09561, 0.96 ) }
    dend_12 { pt3dadd( 10.1012, 52.4879, -0.907222, 0.96 ) }
    dend_12 { pt3dadd( 9.55398, 55.6466, -0.8008, 0.96 ) }
    dend_12 { pt3dadd( 8.59585, 61.1769, -0.614479, 1.2 ) }
    dend_12 { pt3dadd( 7.90425, 65.1688, -0.479989, 1.92 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 58/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 11.07, 46.8962, -1.09561, 0.96 ) }
    dend_9 { pt3dadd( 11.7872, 47.9995, -0.438117, 0.96 ) }
    dend_9 { pt3dadd( 13.2208, 49.9965, 0.684805, 0.84 ) }
    dend_9 { pt3dadd( 13.6633, 50.5828, 0.977457, 0.84 ) }
    dend_9 { pt3dadd( 15.4941, 53.0052, 2.00275, 0.84 ) }
    dend_9 { pt3dadd( 16.1673, 53.9079, 2.35035, 0.84 ) }
    dend_9 { pt3dadd( 17.7282, 56.0173, 3.11235, 0.84 ) }
    dend_9 { pt3dadd( 18.7171, 57.3558, 3.51578, 0.84 ) }
    dend_9 { pt3dadd( 20.202, 59.3196, 4.0363, 0.84 ) }
    dend_9 { pt3dadd( 21.981, 61.6376, 4.59482, 0.84 ) }
    dend_9 { pt3dadd( 23.5639, 63.6919, 4.99434, 1.08 ) }
    dend_9 { pt3dadd( 24.0913, 64.4049, 5.12961, 1.08 ) }
    dend_9 { pt3dadd( 25.2911, 66.1758, 5.43289, 1.08 ) }
    // Section: dend_40, id: dend_40, parent: dend_37 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -19.9902, -233.743, 18.8696, 0.72 ) }
    dend_40 { pt3dadd( -20.5805, -235.278, 19.068, 0.72 ) }
    dend_40 { pt3dadd( -21.3454, -237.137, 19.3269, 1.2 ) }
    dend_40 { pt3dadd( -22.001, -238.494, 19.5559, 1.2 ) }
    dend_40 { pt3dadd( -22.8668, -240.157, 19.711, 0.6 ) }
    dend_40 { pt3dadd( -23.5983, -241.576, 19.7904, 0.6 ) }
    dend_40 { pt3dadd( -24.625, -243.636, 19.8642, 0.6 ) }
    dend_40 { pt3dadd( -25.2546, -244.944, 19.8462, 0.6 ) }
    dend_40 { pt3dadd( -26.6564, -247.941, 19.617, 1.2 ) }
    dend_40 { pt3dadd( -28.2601, -251.654, 19.6229, 0.72 ) }
    dend_40 { pt3dadd( -28.8738, -253.085, 19.6153, 0.72 ) }
    dend_40 { pt3dadd( -29.704, -255.131, 19.5808, 0.72 ) }
    dend_40 { pt3dadd( -30.2823, -256.715, 19.5342, 0.72 ) }
    dend_40 { pt3dadd( -31.7573, -261.272, 19.418, 1.32 ) }
    dend_40 { pt3dadd( -33.3616, -267.837, 19.4594, 0.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 86/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -19.9902, -233.743, 18.8696, 0.48 ) }
    dend_39 { pt3dadd( -20.3465, -237.993, 17.6785, 0.48 ) }
    dend_39 { pt3dadd( -20.4257, -239.256, 17.367, 0.48 ) }
    dend_39 { pt3dadd( -20.6524, -242.176, 16.8057, 0.48 ) }
    dend_39 { pt3dadd( -20.851, -243.947, 16.5515, 0.48 ) }
    dend_39 { pt3dadd( -21.1646, -245.776, 16.4059, 0.48 ) }
    dend_39 { pt3dadd( -21.7164, -248.256, 16.3659, 1.08 ) }
    dend_39 { pt3dadd( -22.3953, -250.458, 16.5278, 1.08 ) }
    dend_39 { pt3dadd( -23.7105, -253.534, 16.9303, 1.08 ) }
    dend_39 { pt3dadd( -24.8178, -255.44, 17.2944, 1.08 ) }
    dend_39 { pt3dadd( -27.4444, -258.826, 18.0751, 0.48 ) }
    dend_39 { pt3dadd( -29.5959, -260.723, 18.5815, 0.48 ) }
    dend_39 { pt3dadd( -31.3668, -261.765, 18.8433, 0.48 ) }
    dend_39 { pt3dadd( -35.0638, -263.266, 19.1469, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( -37.2594, -263.87, 19.2058, 0.84 ) }
    dend_39 { pt3dadd( -38.4807, -264.084, 19.1951, 0.84 ) }
    dend_39 { pt3dadd( -42.5992, -264.427, 18.9536, 1.32 ) }
    dend_39 { pt3dadd( -45.2768, -264.526, 18.6771, 0.72 ) }
    dend_39 { pt3dadd( -47.2661, -264.581, 18.4301, 0.72 ) }
    dend_39 { pt3dadd( -48.4884, -264.647, 18.2981, 0.72 ) }
    dend_39 { pt3dadd( -50.4461, -264.896, 18.1065, 0.72 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 7/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -19.9902, -233.743, 18.8696, 0.84 ) }
    dend_38 { pt3dadd( -20.0924, -236.552, 18.2046, 0.84 ) }
    dend_38 { pt3dadd( -20.1487, -238.992, 17.6652, 2.16 ) }
    dend_38 { pt3dadd( -20.2076, -242.526, 16.9316, 1.08 ) }
    dend_38 { pt3dadd( -20.2363, -244.378, 16.5951, 0.84 ) }
    dend_38 { pt3dadd( -20.2344, -245.722, 16.4223, 0.84 ) }
    dend_38 { pt3dadd( -20.3263, -246.851, 16.286, 0.84 ) }
    dend_38 { pt3dadd( -20.4979, -248.114, 16.2483, 0.84 ) }
    dend_38 { pt3dadd( -20.6593, -248.961, 16.255, 0.84 ) }
    dend_38 { pt3dadd( -20.9344, -250.121, 16.283, 0.84 ) }
    dend_38 { pt3dadd( -21.2849, -251.601, 16.417, 0.84 ) }
    dend_38 { pt3dadd( -22.5441, -256.182, 17.0421, 2.04 ) }
    dend_38 { pt3dadd( -23.3326, -258.6, 17.4988, 0.96 ) }
    dend_38 { pt3dadd( -23.5705, -259.226, 17.6163, 0.96 ) }
    dend_38 { pt3dadd( -24.2457, -260.874, 17.9084, 0.96 ) }
    dend_38 { pt3dadd( -24.692, -261.907, 18.0791, 0.96 ) }
    dend_38 { pt3dadd( -25.4356, -263.61, 18.3314, 0.96 ) }
    dend_38 { pt3dadd( -26.352, -265.932, 18.6861, 1.68 ) }
    dend_38 { pt3dadd( -27.3345, -268.477, 18.9191, 0.96 ) }
    dend_38 { pt3dadd( -27.7964, -269.872, 18.9585, 0.96 ) }
    dend_38 { pt3dadd( -28.063, -270.933, 18.9004, 0.96 ) }
    dend_38 { pt3dadd( -28.2022, -272.113, 18.7921, 1.32 ) }
    dend_38 { pt3dadd( -28.0096, -273.947, 18.5977, 0.6 ) }
    dend_38 { pt3dadd( -27.5501, -275.247, 18.4565, 0.96 ) }
    dend_38 { pt3dadd( -26.6638, -276.783, 18.3182, 0.6 ) }
    dend_38 { pt3dadd( -25.5023, -278.28, 18.1196, 1.08 ) }
    dend_38 { pt3dadd( -24.164, -279.639, 17.8586, 0.48 ) }
    dend_38 { pt3dadd( -21.6534, -281.768, 17.3411, 0.48 ) }
    dend_38 { pt3dadd( -20.6311, -282.507, 17.1435, 0.48 ) }
    dend_38 { pt3dadd( -19.619, -283.143, 16.9608, 0.48 ) }
    dend_38 { pt3dadd( -18.0818, -283.98, 16.7084, 0.48 ) }
    dend_38 { pt3dadd( -16.988, -284.484, 16.5038, 0.48 ) }
    dend_38 { pt3dadd( -16.4909, -284.694, 16.3364, 0.48 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 40/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 35.6841, -34.0101, -2.8295, 1.32 ) }
    dend_24 { pt3dadd( 35.2323, -34.9155, -2.8449, 1.32 ) }
    dend_24 { pt3dadd( 34.8263, -35.7513, -2.95432, 0.84 ) }
    dend_24 { pt3dadd( 34.5438, -36.3769, -3.06734, 0.84 ) }
    dend_24 { pt3dadd( 34.2346, -37.1012, -3.21362, 0.84 ) }
    dend_24 { pt3dadd( 33.4272, -39.0881, -3.6419, 1.32 ) }
    dend_24 { pt3dadd( 33.0226, -40.2208, -3.9271, 1.32 ) }
    dend_24 { pt3dadd( 32.4728, -42.074, -4.42424, 0.72 ) }
    dend_24 { pt3dadd( 32.1741, -43.2412, -4.75998, 0.72 ) }
    dend_24 { pt3dadd( 32.0884, -43.6404, -4.88074, 0.72 ) }
    dend_24 { pt3dadd( 31.9972, -44.1093, -5.03423, 0.72 ) }
    dend_24 { pt3dadd( 31.5215, -47.2432, -6.18347, 1.56 ) }
    dend_24 { pt3dadd( 31.4327, -47.9257, -6.43174, 1.56 ) }
    dend_24 { pt3dadd( 31.2434, -49.6332, -6.94851, 1.56 ) }
    dend_24 { pt3dadd( 31.1486, -50.504, -7.21973, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 55/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 35.6841, -34.0101, -2.8295, 0.72 ) }
    dend_23 { pt3dadd( 35.613, -36.9659, -2.65039, 0.72 ) }
    dend_23 { pt3dadd( 35.5962, -37.5739, -2.60757, 0.72 ) }
    dend_23 { pt3dadd( 35.5666, -38.879, -2.49344, 1.2 ) }
    dend_23 { pt3dadd( 35.5401, -42.3863, -2.19966, 0.84 ) }
    dend_23 { pt3dadd( 35.574, -44.7451, -2.01951, 1.56 ) }
    dend_23 { pt3dadd( 35.6619, -47.0841, -1.85162, 0.84 ) }
    dend_23 { pt3dadd( 35.785, -49.8911, -1.64286, 1.44 ) }
    dend_23 { pt3dadd( 36.0995, -52.1126, -1.46957, 0.96 ) }
    dend_23 { pt3dadd( 36.5269, -53.5317, -1.32205, 0.96 ) }
    dend_23 { pt3dadd( 37.1743, -54.6683, -1.14321, 0.96 ) }
    dend_23 { pt3dadd( 37.7371, -55.2824, -1.06244, 0.96 ) }
    dend_23 { pt3dadd( 39.0022, -56.2034, -0.966888, 0.84 ) }
    dend_23 { pt3dadd( 41.854, -57.9799, -0.755319, 1.32 ) }
    dend_23 { pt3dadd( 44.8078, -59.6129, -0.551861, 0.6 ) }
    dend_23 { pt3dadd( 48.2095, -61.3362, -0.298819, 1.2 ) }
    dend_23 { pt3dadd( 52.8173, -63.4945, 0.0378124, 0.48 ) }
    dend_23 { pt3dadd( 56.4189, -65.0536, 0.266022, 0.96 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.90425, 65.1688, -0.479989, 1.2 ) }
    dend_14 { pt3dadd( 8.34893, 71.3082, 1.49767, 1.2 ) }
    dend_14 { pt3dadd( 8.77483, 74.3332, 2.2108, 1.2 ) }
    dend_14 { pt3dadd( 9.19033, 76.3129, 2.62217, 1.2 ) }
    dend_14 { pt3dadd( 9.79493, 78.8094, 3.08102, 1.2 ) }
    dend_14 { pt3dadd( 10.4308, 81.2924, 3.46881, 0.96 ) }
    dend_14 { pt3dadd( 10.9264, 83.49, 3.76802, 0.96 ) }
    dend_14 { pt3dadd( 11.3686, 85.4896, 3.87476, 0.96 ) }
    dend_14 { pt3dadd( 12.279, 89.8723, 4.10638, 0.96 ) }
    dend_14 { pt3dadd( 12.6678, 92.1411, 4.22791, 0.96 ) }
    dend_14 { pt3dadd( 12.9914, 94.5138, 4.36755, 0.96 ) }
    dend_14 { pt3dadd( 13.4709, 98.9204, 4.64069, 0.84 ) }
    dend_14 { pt3dadd( 13.6588, 101.06, 4.76722, 0.84 ) }
    dend_14 { pt3dadd( 13.8967, 105.075, 4.99048, 0.84 ) }
    dend_14 { pt3dadd( 13.9865, 108.177, 5.13367, 0.84 ) }
    dend_14 { pt3dadd( 13.9814, 110.756, 5.25201, 0.84 ) }
    dend_14 { pt3dadd( 13.9, 113.925, 5.39821, 0.84 ) }
    dend_14 { pt3dadd( 13.7884, 116.884, 5.52205, 0.84 ) }
    dend_14 { pt3dadd( 13.6119, 120.036, 5.64669, 0.84 ) }
    dend_14 { pt3dadd( 13.3059, 124.099, 5.80001, 0.84 ) }
    dend_14 { pt3dadd( 12.64, 131.946, 6.06141, 0.84 ) }
    dend_14 { pt3dadd( 12.2268, 136.158, 6.18139, 0.84 ) }
    dend_14 { pt3dadd( 12.0094, 138.102, 6.22984, 0.84 ) }
    dend_14 { pt3dadd( 11.8223, 139.71, 6.26805, 0.84 ) }
    dend_14 { pt3dadd( 11.6011, 141.561, 6.3367, 0.84 ) }
    dend_14 { pt3dadd( 11.2823, 143.792, 6.4708, 0.84 ) }
    dend_14 { pt3dadd( 10.943, 145.997, 6.65273, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_14 { pt3dadd( 10.5262, 148.498, 6.88044, 0.84 ) }
    dend_14 { pt3dadd( 10.1669, 150.483, 7.07213, 0.84 ) }
    dend_14 { pt3dadd( 9.23098, 155.512, 7.5632, 0.72 ) }
    dend_14 { pt3dadd( 8.68761, 158.428, 7.84558, 0.72 ) }
    dend_14 { pt3dadd( 8.29984, 160.972, 8.05056, 0.72 ) }
    dend_14 { pt3dadd( 8.03952, 163.237, 8.1984, 0.72 ) }
    dend_14 { pt3dadd( 7.79717, 166.29, 8.40987, 1.2 ) }
    dend_14 { pt3dadd( 7.6687, 168.899, 8.6187, 1.2 ) }
    dend_14 { pt3dadd( 7.62795, 171.857, 8.86532, 0.96 ) }
    dend_14 { pt3dadd( 7.65285, 177.219, 9.38033, 1.44 ) }
    dend_14 { pt3dadd( 7.68268, 179.251, 9.59372, 1.44 ) }
    dend_14 { pt3dadd( 7.78305, 182.276, 9.87888, 1.2 ) }
    dend_14 { pt3dadd( 7.88425, 184.366, 9.99993, 1.2 ) }
    dend_14 { pt3dadd( 8.05033, 187.952, 10.0996, 1.2 ) }
    dend_14 { pt3dadd( 8.1363, 189.814, 10.1173, 1.2 ) }
    dend_14 { pt3dadd( 8.19143, 190.966, 10.1283, 1.2 ) }
    dend_14 { pt3dadd( 8.3315, 193.613, 10.1363, 1.56 ) }
    dend_14 { pt3dadd( 8.6737, 200.031, 10.1144, 0.84 ) }
    dend_14 { pt3dadd( 8.82597, 203.078, 10.1256, 0.84 ) }
    dend_14 { pt3dadd( 9.12596, 208.808, 10.266, 1.32 ) }
    dend_14 { pt3dadd( 9.44471, 214.374, 10.512, 0.96 ) }
    dend_14 { pt3dadd( 9.56889, 216.373, 10.6436, 0.96 ) }
    dend_14 { pt3dadd( 9.72843, 218.676, 10.856, 0.96 ) }
    dend_14 { pt3dadd( 9.82377, 219.809, 10.9767, 0.96 ) }
    dend_14 { pt3dadd( 10.2224, 223.654, 11.3256, 0.96 ) }
    dend_14 { pt3dadd( 10.5417, 225.976, 11.5202, 0.96 ) }
    dend_14 { pt3dadd( 10.8209, 227.834, 11.6155, 0.96 ) }
    dend_14 { pt3dadd( 11.2507, 230.536, 11.699, 0.96 ) }
    dend_14 { pt3dadd( 11.6053, 232.705, 11.7247, 0.96 ) }
    dend_14 { pt3dadd( 11.8916, 234.538, 11.6897, 0.96 ) }
    dend_14 { pt3dadd( 12.4765, 238.659, 11.4842, 0.96 ) }
    dend_14 { pt3dadd( 12.9534, 242.339, 11.2423, 0.96 ) }
    dend_14 { pt3dadd( 13.4656, 246.708, 10.9759, 0.96 ) }
    dend_14 { pt3dadd( 13.7234, 249.643, 10.7298, 0.96 ) }
    dend_14 { pt3dadd( 13.9013, 253.422, 10.3162, 1.44 ) }
    dend_14 { pt3dadd( 13.9397, 257.885, 9.74613, 0.96 ) }
    dend_14 { pt3dadd( 13.8462, 260.917, 9.29838, 0.72 ) }
    dend_14 { pt3dadd( 13.6088, 265.081, 8.65729, 1.2 ) }
    dend_14 { pt3dadd( 13.3254, 269.239, 8.09864, 1.2 ) }
    dend_14 { pt3dadd( 13.1033, 272.552, 7.84929, 1.2 ) }
    dend_14 { pt3dadd( 12.9114, 275.347, 7.76449, 1.56 ) }
    dend_14 { pt3dadd( 12.6665, 279.482, 7.77307, 1.68 ) }
    dend_14 { pt3dadd( 12.4239, 283.631, 7.78364, 1.08 ) }
    dend_14 { pt3dadd( 11.9983, 291.158, 8.08685, 1.44 ) }
    dend_14 { pt3dadd( 11.6769, 299.174, 8.6618, 0.84 ) }
    dend_14 { pt3dadd( 11.6233, 301.036, 8.82976, 0.84 ) }
    dend_14 { pt3dadd( 11.4894, 305.789, 9.3247, 1.44 ) }
    dend_14 { pt3dadd( 11.3424, 311.123, 10.0011, 0.6 ) }
    dend_14 { pt3dadd( 11.1221, 316.923, 10.85, 1.08 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 7.90425, 65.1688, -0.479989, 0.96 ) }
    dend_13 { pt3dadd( 8.61295, 68.7409, -1.88465, 0.96 ) }
    dend_13 { pt3dadd( 9.0961, 71.6439, -2.74876, 0.96 ) }
    dend_13 { pt3dadd( 10.0548, 78.095, -4.33458, 0.96 ) }
    dend_13 { pt3dadd( 10.4174, 80.8797, -4.9193, 1.32 ) }
    dend_13 { pt3dadd( 10.5936, 82.6021, -5.21431, 1.32 ) }
    dend_13 { pt3dadd( 10.9902, 87.9639, -5.9597, 0.96 ) }
    dend_13 { pt3dadd( 11.0565, 91.333, -6.27127, 0.96 ) }
    dend_13 { pt3dadd( 11.0387, 93.2774, -6.2817, 0.96 ) }
    dend_13 { pt3dadd( 11.0259, 95.3667, -6.12402, 0.96 ) }
    dend_13 { pt3dadd( 11.042, 98.0655, -6.09774, 0.96 ) }
    dend_13 { pt3dadd( 11.0546, 101.122, -6.202, 0.96 ) }
    dend_13 { pt3dadd( 11.0861, 102.65, -6.33554, 0.96 ) }
    dend_13 { pt3dadd( 11.1962, 104.953, -6.59861, 0.96 ) }
    dend_13 { pt3dadd( 11.5685, 110.235, -7.31086, 1.44 ) }
    dend_13 { pt3dadd( 12.4355, 119.008, -8.63721, 1.2 ) }
    dend_13 { pt3dadd( 12.7086, 121.156, -8.99191, 1.2 ) }
    dend_13 { pt3dadd( 13.4379, 126.504, -9.894, 1.08 ) }
    dend_13 { pt3dadd( 13.8533, 129.726, -10.4166, 1.08 ) }
    dend_13 { pt3dadd( 14.0232, 131.193, -10.6368, 1.08 ) }
    dend_13 { pt3dadd( 14.3829, 134.622, -11.0777, 1.08 ) }
    dend_13 { pt3dadd( 14.6915, 137.816, -11.3123, 1.08 ) }
    dend_13 { pt3dadd( 14.8578, 141.964, -11.4713, 1.08 ) }
    dend_13 { pt3dadd( 14.6811, 145.488, -11.3644, 1.08 ) }
    dend_13 { pt3dadd( 14.2984, 148.357, -11.2177, 1.08 ) }
    dend_13 { pt3dadd( 13.8863, 150.443, -11.0739, 1.08 ) }
    dend_13 { pt3dadd( 13.0611, 153.7, -10.8015, 1.08 ) }
    dend_13 { pt3dadd( 11.7329, 158.616, -10.3412, 1.56 ) }
    dend_13 { pt3dadd( 10.4848, 163.29, -9.78064, 0.84 ) }
    dend_13 { pt3dadd( 9.78885, 166.075, -9.4228, 0.84 ) }
    dend_13 { pt3dadd( 9.01096, 169.418, -8.95686, 0.84 ) }
    dend_13 { pt3dadd( 8.47678, 172.123, -8.58758, 0.84 ) }
    dend_13 { pt3dadd( 7.54008, 178.281, -7.80748, 1.2 ) }
    dend_13 { pt3dadd( 7.02638, 182.958, -7.28114, 0.96 ) }
    dend_13 { pt3dadd( 6.79576, 185.933, -6.96427, 0.96 ) }
    dend_13 { pt3dadd( 6.5981, 189.871, -6.48963, 1.2 ) }
    dend_13 { pt3dadd( 6.34142, 195.961, -5.74619, 0.84 ) }
    dend_13 { pt3dadd( 6.18927, 199.421, -5.33898, 0.84 ) }
    dend_13 { pt3dadd( 6.10588, 201.043, -5.20095, 0.84 ) }
    dend_13 { pt3dadd( 6.04935, 202.123, -5.17246, 0.84 ) }
    dend_13 { pt3dadd( 5.94946, 204.024, -5.15881, 0.84 ) }
    dend_13 { pt3dadd( 5.73905, 208.923, -5.20776, 0.72 ) }
    dend_13 { pt3dadd( 5.65503, 211.17, -5.23231, 1.32 ) }
    dend_13 { pt3dadd( 5.43069, 216.116, -5.17601, 0.96 ) }
    dend_13 { pt3dadd( 5.32601, 219.39, -5.09441, 0.96 ) }
    dend_13 { pt3dadd( 5.26254, 222.349, -4.99568, 0.96 ) }
    dend_13 { pt3dadd( 5.24595, 224.393, -4.9187, 0.96 ) }
    dend_13 { pt3dadd( 5.36889, 230.138, -4.68894, 1.32 ) }
    dend_13 { pt3dadd( 5.5886, 235.11, -4.43228, 0.72 ) }
    dend_13 { pt3dadd( 5.8901, 239.952, -4.10906, 0.72 ) }
    dend_13 { pt3dadd( 6.26117, 245.14, -3.75875, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_13 { pt3dadd( 6.40323, 247.015, -3.66807, 0.72 ) }
    dend_13 { pt3dadd( 6.66708, 250.279, -3.54985, 0.72 ) }
    dend_13 { pt3dadd( 6.90205, 252.885, -3.48872, 0.72 ) }
    dend_13 { pt3dadd( 7.12049, 255.048, -3.4841, 0.72 ) }
    dend_13 { pt3dadd( 7.29746, 257.215, -3.47466, 0.72 ) }
    dend_13 { pt3dadd( 7.45653, 259.42, -3.4622, 0.72 ) }
    dend_13 { pt3dadd( 7.54236, 261.156, -3.41326, 0.72 ) }
    dend_13 { pt3dadd( 7.6453, 264.228, -3.21158, 0.72 ) }
    dend_13 { pt3dadd( 7.69, 266.577, -2.97372, 0.72 ) }
    dend_13 { pt3dadd( 7.71196, 268.585, -2.68091, 0.72 ) }
    dend_13 { pt3dadd( 7.84777, 270.544, -2.18521, 0.72 ) }
    dend_13 { pt3dadd( 8.15812, 272.908, -1.34881, 0.72 ) }
    dend_13 { pt3dadd( 8.38336, 274.215, -0.785198, 0.72 ) }
    dend_13 { pt3dadd( 8.5177, 274.914, -0.487242, 0.72 ) }
    dend_13 { pt3dadd( 8.66446, 275.698, -0.1952, 0.72 ) }
    dend_13 { pt3dadd( 9.52701, 280.668, 1.42677, 1.32 ) }
    dend_13 { pt3dadd( 9.72837, 282.018, 1.81547, 0.84 ) }
    dend_13 { pt3dadd( 10.5324, 288.31, 3.33349, 0.84 ) }
    dend_13 { pt3dadd( 11.0962, 293.323, 4.33974, 0.84 ) }
    dend_13 { pt3dadd( 11.7291, 299.565, 5.39791, 1.2 ) }
    dend_13 { pt3dadd( 11.9447, 302.025, 5.71523, 1.2 ) }
    dend_13 { pt3dadd( 12.0568, 303.685, 5.85048, 1.2 ) }
    dend_13 { pt3dadd( 12.2776, 306.394, 6.07657, 1.2 ) }
    dend_13 { pt3dadd( 12.5778, 309.372, 6.29692, 1.2 ) }
    dend_13 { pt3dadd( 12.7256, 310.752, 6.39886, 1.2 ) }
    dend_13 { pt3dadd( 13.0091, 313.514, 6.57884, 1.2 ) }
    dend_13 { pt3dadd( 13.2976, 316.212, 6.74398, 1.2 ) }
    dend_13 { pt3dadd( 14.1366, 325.312, 7.3745, 1.2 ) }
    dend_13 { pt3dadd( 14.5441, 330.426, 7.74486, 1.68 ) }
    dend_13 { pt3dadd( 15.0589, 337.703, 8.26384, 1.08 ) }
    dend_13 { pt3dadd( 15.5511, 345.477, 8.79304, 1.56 ) }
    dend_13 { pt3dadd( 15.749, 348.987, 9.0163, 1.56 ) }
    dend_13 { pt3dadd( 16.0671, 354.737, 9.37922, 1.44 ) }
    dend_13 { pt3dadd( 16.3721, 360.276, 9.70466, 1.44 ) }
    dend_13 { pt3dadd( 16.634, 365.172, 10.049, 1.44 ) }
    dend_13 { pt3dadd( 16.9027, 369.569, 10.442, 1.44 ) }
    dend_13 { pt3dadd( 17.0755, 372.341, 10.6727, 1.44 ) }
    dend_13 { pt3dadd( 17.3905, 377.743, 11.1899, 1.44 ) }
    dend_13 { pt3dadd( 17.5365, 379.961, 11.4145, 1.44 ) }
    dend_13 { pt3dadd( 17.6759, 382.504, 11.7452, 1.44 ) }
    dend_13 { pt3dadd( 17.8027, 385.538, 12.21, 1.44 ) }
    dend_13 { pt3dadd( 17.7146, 390.805, 12.7931, 0.84 ) }
    dend_13 { pt3dadd( 17.5735, 395.116, 13.2393, 0.84 ) }
    dend_13 { pt3dadd( 17.4064, 397.772, 13.461, 0.84 ) }
    dend_13 { pt3dadd( 17.1987, 400.286, 13.6443, 0.84 ) }
    dend_13 { pt3dadd( 16.9519, 402.429, 13.7608, 0.84 ) }
    dend_13 { pt3dadd( 15.6723, 410.229, 13.9088, 1.2 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 25.2911, 66.1758, 5.43289, 0.96 ) }
    dend_11 { pt3dadd( 28.8831, 67.5931, 6.15005, 0.96 ) }
    dend_11 { pt3dadd( 31.3324, 69.1763, 6.54963, 0.96 ) }
    dend_11 { pt3dadd( 33.065, 70.6411, 6.78867, 0.96 ) }
    dend_11 { pt3dadd( 35.2387, 72.8875, 7.04195, 0.96 ) }
    dend_11 { pt3dadd( 38.323, 76.6136, 7.3378, 0.96 ) }
    dend_11 { pt3dadd( 39.7843, 78.6317, 7.4564, 0.96 ) }
    dend_11 { pt3dadd( 42.4079, 83.7169, 7.49154, 1.2 ) }
    dend_11 { pt3dadd( 43.0709, 85.4859, 7.44484, 1.2 ) }
    dend_11 { pt3dadd( 43.6239, 87.5156, 7.34684, 0.6 ) }
    dend_11 { pt3dadd( 44.0011, 89.2859, 7.24275, 0.6 ) }
    dend_11 { pt3dadd( 44.4998, 92.7404, 7.15177, 1.08 ) }
    dend_11 { pt3dadd( 44.8193, 95.1367, 7.12099, 0.36 ) }
    dend_11 { pt3dadd( 45.0118, 96.5891, 7.1243, 0.36 ) }
    dend_11 { pt3dadd( 45.4495, 100.033, 7.1527, 0.84 ) }
    dend_11 { pt3dadd( 45.7775, 103.143, 7.18627, 0.84 ) }
    dend_11 { pt3dadd( 46.2015, 108.249, 7.23663, 1.44 ) }
    dend_11 { pt3dadd( 46.3146, 110.269, 7.28393, 1.44 ) }
    dend_11 { pt3dadd( 46.4231, 112.463, 7.36408, 0.84 ) }
    dend_11 { pt3dadd( 46.5408, 115.204, 7.39756, 0.84 ) }
    dend_11 { pt3dadd( 46.6562, 118.679, 7.35514, 1.32 ) }
    dend_11 { pt3dadd( 46.6906, 120.622, 7.30147, 1.32 ) }
    dend_11 { pt3dadd( 46.8157, 123.555, 7.15942, 1.08 ) }
    dend_11 { pt3dadd( 46.8623, 124.755, 7.09318, 1.08 ) }
    dend_11 { pt3dadd( 47.117, 129.213, 6.82521, 1.56 ) }
    dend_11 { pt3dadd( 47.2028, 130.435, 6.72448, 1.56 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 73/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 25.2911, 66.1758, 5.43289, 1.08 ) }
    dend_10 { pt3dadd( 25.8814, 69.7368, 5.1405, 1.08 ) }
    dend_10 { pt3dadd( 26.3278, 72.2067, 4.88158, 1.08 ) }
    dend_10 { pt3dadd( 26.8454, 75.4497, 4.61775, 1.08 ) }
    dend_10 { pt3dadd( 27.3869, 79.3155, 4.35288, 0.84 ) }
    dend_10 { pt3dadd( 28.3719, 86.8135, 3.88299, 1.56 ) }
    dend_10 { pt3dadd( 29.3176, 93.9249, 3.54839, 1.2 ) }
    dend_10 { pt3dadd( 30.0587, 99.6775, 3.282, 1.08 ) }
    dend_10 { pt3dadd( 30.7682, 105.358, 2.97397, 1.32 ) }
    dend_10 { pt3dadd( 31.1978, 109.013, 2.66013, 0.96 ) }
    dend_10 { pt3dadd( 31.5029, 112.288, 2.33269, 1.32 ) }
    dend_10 { pt3dadd( 31.8072, 116.479, 1.84226, 1.08 ) }
    dend_10 { pt3dadd( 32.2467, 123.764, 0.9269, 0.84 ) }
    dend_10 { pt3dadd( 32.3819, 126.664, 0.544513, 0.84 ) }
    dend_10 { pt3dadd( 32.8769, 136.394, -0.990561, 1.08 ) }
    dend_10 { pt3dadd( 33.1327, 142.399, -1.98981, 1.08 ) }
    dend_10 { pt3dadd( 33.2057, 145.951, -2.60503, 0.96 ) }
    dend_10 { pt3dadd( 33.1179, 153.554, -3.98563, 1.2 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 31.1486, -50.504, -7.21973, 0.84 ) }
    dend_26 { pt3dadd( 31.5505, -53.8338, -8.44034, 0.84 ) }
    dend_26 { pt3dadd( 31.8344, -56.0483, -9.2496, 0.84 ) }
    dend_26 { pt3dadd( 32.1491, -58.8015, -10.2496, 1.44 ) }
    dend_26 { pt3dadd( 32.4382, -61.4406, -11.1961, 1.08 ) }
    dend_26 { pt3dadd( 32.7024, -64.1013, -12.1527, 0.48 ) }
    dend_26 { pt3dadd( 33.2466, -69.5816, -14.123, 1.2 ) }
    dend_26 { pt3dadd( 33.4559, -71.5209, -14.7949, 1.2 ) }
    dend_26 { pt3dadd( 33.7634, -74.3192, -15.7662, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_26 { pt3dadd( 33.9897, -76.4417, -16.5098, 1.2 ) }
    dend_26 { pt3dadd( 34.2025, -78.8432, -17.3738, 1.8 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 31.1486, -50.504, -7.21973, 0.96 ) }
    dend_25 { pt3dadd( 33.3531, -54.8458, -7.06473, 0.96 ) }
    dend_25 { pt3dadd( 34.3103, -56.9769, -7.13271, 0.96 ) }
    dend_25 { pt3dadd( 36.2756, -61.5865, -7.09734, 1.56 ) }
    dend_25 { pt3dadd( 37.5455, -64.6608, -7.1807, 0.84 ) }
    dend_25 { pt3dadd( 39.0692, -68.581, -7.1846, 1.32 ) }
    dend_25 { pt3dadd( 40.885, -73.3777, -7.13388, 0.72 ) }
    dend_25 { pt3dadd( 42.5932, -78.2996, -6.95076, 1.2 ) }
    dend_25 { pt3dadd( 44.4444, -83.9557, -6.72832, 0.72 ) }
    dend_25 { pt3dadd( 46.0565, -89.3556, -6.52343, 1.44 ) }
    dend_25 { pt3dadd( 48.0187, -96.2519, -6.20693, 0.72 ) }
    dend_25 { pt3dadd( 48.3456, -97.4473, -6.12183, 0.72 ) }
    dend_25 { pt3dadd( 49.2354, -100.782, -5.78295, 1.32 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 15/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 34.2025, -78.8432, -17.3738, 1.2 ) }
    dend_32 { pt3dadd( 34.6279, -81.5652, -18.454, 1.2 ) }
    dend_32 { pt3dadd( 34.1119, -84.8117, -18.9493, 0.72 ) }
    dend_32 { pt3dadd( 32.5988, -90.9304, -19.5338, 1.92 ) }
    dend_32 { pt3dadd( 31.6047, -94.4247, -19.7883, 1.92 ) }
    dend_32 { pt3dadd( 30.7882, -97.4096, -20.0616, 1.2 ) }
    dend_32 { pt3dadd( 29.6518, -101.834, -20.5441, 1.68 ) }
    dend_32 { pt3dadd( 25.4665, -117.732, -22.3711, 1.68 ) }
    dend_32 { pt3dadd( 24.183, -122.979, -23.1096, 2.28 ) }
    dend_32 { pt3dadd( 23.2239, -127.232, -23.839, 1.2 ) }
    dend_32 { pt3dadd( 22.4571, -131.62, -24.8005, 1.2 ) }
    dend_32 { pt3dadd( 22.1135, -134.771, -25.6841, 1.2 ) }
    dend_32 { pt3dadd( 21.9803, -140.804, -27.8412, 1.8 ) }
    dend_32 { pt3dadd( 22.632, -147.268, -30.9106, 1.08 ) }
    dend_32 { pt3dadd( 22.9055, -149.724, -32.1139, 1.08 ) }
    dend_32 { pt3dadd( 23.5534, -155.196, -34.8571, 0.6 ) }
    dend_32 { pt3dadd( 23.9361, -159.207, -36.8573, 1.2 ) }
    dend_32 { pt3dadd( 24.2354, -162.993, -38.8336, 1.2 ) }
    dend_32 { pt3dadd( 24.3836, -166.939, -40.9135, 1.8 ) }
    dend_32 { pt3dadd( 24.2541, -171.334, -43.1782, 0.72 ) }
    dend_32 { pt3dadd( 24.04, -173.928, -44.4807, 0.72 ) }
    dend_32 { pt3dadd( 23.5877, -177.27, -46.1315, 0.72 ) }
    dend_32 { pt3dadd( 23.0632, -180.372, -47.6337, 0.72 ) }
    dend_32 { pt3dadd( 22.0803, -185.511, -50.0608, 1.8 ) }
    dend_32 { pt3dadd( 21.0638, -190.862, -52.4713, 0.84 ) }
    dend_32 { pt3dadd( 20.4917, -194.19, -54.0024, 0.84 ) }
    dend_32 { pt3dadd( 20.1952, -196.269, -54.9682, 0.84 ) }
    dend_32 { pt3dadd( 19.4918, -201.938, -57.6321, 1.44 ) }
    dend_32 { pt3dadd( 19.1136, -205.517, -59.3578, 0.72 ) }
    dend_32 { pt3dadd( 18.8115, -209.18, -61.2195, 0.72 ) }
    dend_32 { pt3dadd( 18.6855, -211.926, -62.7286, 0.72 ) }
    dend_32 { pt3dadd( 18.5034, -215.511, -64.7176, 1.2 ) }
    dend_32 { pt3dadd( 18.1589, -221.627, -68.172, 0.6 ) }
    dend_32 { pt3dadd( 18.0287, -224.05, -69.5493, 0.6 ) }
    dend_32 { pt3dadd( 17.9478, -225.696, -70.492, 0.6 ) }
    dend_32 { pt3dadd( 17.8793, -234.021, -75.7471, 1.8 ) }
    dend_32 { pt3dadd( 18.006, -238.022, -78.4629, 0.96 ) }
    dend_32 { pt3dadd( 18.2217, -240.955, -80.578, 0.96 ) }
    dend_32 { pt3dadd( 18.658, -244.706, -83.4205, 0.96 ) }
    dend_32 { pt3dadd( 19.1454, -248.656, -86.4984, 1.68 ) }
    dend_32 { pt3dadd( 19.7647, -254.547, -91.2021, 0.84 ) }
    dend_32 { pt3dadd( 19.8521, -256.305, -92.6795, 0.84 ) }
    dend_32 { pt3dadd( 19.9098, -257.042, -93.3485, 0.84 ) }
    dend_32 { pt3dadd( 20.0525, -259.615, -95.7899, 0.84 ) }
    dend_32 { pt3dadd( 20.0237, -261.485, -97.6409, 0.84 ) }
    dend_32 { pt3dadd( 19.5668, -264.842, -100.626, 1.44 ) }
    dend_32 { pt3dadd( 18.6325, -267.602, -102.433, 0.72 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 62/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 34.2025, -78.8432, -17.3738, 0.96 ) }
    dend_27 { pt3dadd( 35.0984, -81.0692, -17.18, 0.96 ) }
    dend_27 { pt3dadd( 36.4813, -83.2591, -17.3308, 1.44 ) }
    dend_27 { pt3dadd( 38.5231, -86.0468, -17.6861, 0.96 ) }
    dend_27 { pt3dadd( 40.2536, -88.2037, -17.8961, 0.96 ) }
    dend_27 { pt3dadd( 42.2285, -90.6018, -18.0609, 0.96 ) }
    dend_27 { pt3dadd( 45.3173, -94.2621, -18.2731, 0.6 ) }
    dend_27 { pt3dadd( 50.3459, -100.541, -18.5853, 1.2 ) }
    dend_27 { pt3dadd( 51.8742, -102.51, -18.6482, 1.2 ) }
    dend_27 { pt3dadd( 55.369, -106.859, -18.7845, 1.44 ) }
    dend_27 { pt3dadd( 57.3815, -109.604, -18.741, 0.6 ) }
    dend_27 { pt3dadd( 58.828, -112.096, -18.5051, 1.08 ) }
    dend_27 { pt3dadd( 60.3484, -116.174, -17.7927, 0.6 ) }
    dend_27 { pt3dadd( 60.6295, -118.357, -17.3787, 0.6 ) }
    dend_27 { pt3dadd( 60.6636, -122.697, -16.8043, 1.08 ) }
    dend_27 { pt3dadd( 60.1126, -128.094, -16.6364, 0.6 ) }
    dend_27 { pt3dadd( 59.4533, -132.972, -16.8022, 0.6 ) }
    dend_27 { pt3dadd( 59.0292, -135.54, -16.9504, 0.6 ) }
    dend_27 { pt3dadd( 58.4006, -139.527, -17.3835, 1.08 ) }
    dend_27 { pt3dadd( 57.9983, -141.694, -17.6434, 1.08 ) }
    dend_27 { pt3dadd( 57.122, -146.177, -18.2686, 0.48 ) }
    dend_27 { pt3dadd( 57.0368, -148.087, -18.8725, 0.48 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 84/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 57.0368, -148.087, -18.8725, 0.84 ) }
    dend_31 { pt3dadd( 57.1035, -149.436, -19.2636, 0.84 ) }
    dend_31 { pt3dadd( 57.1911, -151.352, -19.7248, 0.84 ) }
    dend_31 { pt3dadd( 57.3084, -153.434, -20.3235, 1.44 ) }
    dend_31 { pt3dadd( 57.4749, -156.805, -21.3964, 0.6 ) }
    dend_31 { pt3dadd( 57.5016, -158.472, -21.9764, 0.6 ) }
    dend_31 { pt3dadd( 57.4235, -160.034, -22.4762, 0.6 ) }
    dend_31 { pt3dadd( 57.2537, -162.8, -23.5897, 0.6 ) }
    dend_31 { pt3dadd( 57.0458, -165.237, -24.919, 1.08 ) }
    dend_31 { pt3dadd( 56.8219, -166.675, -26.0288, 0.6 ) }
    dend_31 { pt3dadd( 56.406, -167.815, -27.6725, 0.6 ) }
    dend_31 { pt3dadd( 55.5356, -169.322, -31.0227, 1.44 ) }
    dend_31 { pt3dadd( 54.0396, -170.537, -37.058, 1.44 ) }
    dend_31 { pt3dadd( 53.6241, -170.42, -39.1143, 1.44 ) }
    dend_31 { pt3dadd( 53.4028, -170.018, -40.5279, 0.96 ) }
    dend_31 { pt3dadd( 53.2394, -168.989, -42.8614, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 0/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 57.0368, -148.087, -18.8725, 0.48 ) }
    dend_28 { pt3dadd( 59.1, -148.322, -17.5333, 0.48 ) }
    dend_28 { pt3dadd( 61.3564, -148.514, -16.0372, 0.48 ) }
    dend_28 { pt3dadd( 62.4617, -148.607, -15.3044, 0.48 ) }
    dend_28 { pt3dadd( 63.5339, -148.698, -14.5935, 0.48 ) }
    dend_28 { pt3dadd( 66.6122, -148.959, -12.5525, 0.84 ) }
    dend_28 { pt3dadd( 70.1373, -149.257, -10.2152, 1.32 ) }
    dend_28 { pt3dadd( 70.9957, -149.355, -9.6879, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 8/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 70.9957, -149.355, -9.6879, 0.6 ) }
    dend_30 { pt3dadd( 73.6185, -149.953, -8.21088, 0.6 ) }
    dend_30 { pt3dadd( 77.6433, -151.235, -6.07023, 0.6 ) }
    dend_30 { pt3dadd( 79.1844, -151.842, -5.28594, 0.6 ) }
    dend_30 { pt3dadd( 80.8564, -152.539, -4.57687, 0.6 ) }
    dend_30 { pt3dadd( 83.2409, -153.682, -3.71382, 1.08 ) }
    dend_30 { pt3dadd( 88.1949, -156.359, -2.13526, 0.6 ) }
    dend_30 { pt3dadd( 90.6971, -158.058, -1.44153, 0.6 ) }
    dend_30 { pt3dadd( 92.1092, -159.19, -1.19667, 0.6 ) }
    dend_30 { pt3dadd( 95.2559, -161.932, -0.961101, 0.6 ) }
    dend_30 { pt3dadd( 98.0061, -164.443, -0.967338, 1.2 ) }
    dend_30 { pt3dadd( 99.8213, -166.224, -1.11431, 1.2 ) }
    dend_30 { pt3dadd( 101.838, -168.334, -1.48626, 0.6 ) }
    dend_30 { pt3dadd( 105.191, -171.771, -2.19242, 0.6 ) }
    dend_30 { pt3dadd( 107.222, -173.823, -2.60938, 0.6 ) }
    dend_30 { pt3dadd( 108.664, -175.396, -2.86678, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 70.9957, -149.355, -9.6879, 1.2 ) }
    dend_29 { pt3dadd( 71.1064, -148.889, -9.27154, 1.2 ) }
    dend_29 { pt3dadd( 71.422, -147.561, -8.08324, 0.84 ) }
    dend_29 { pt3dadd( 71.8373, -145.814, -6.51983, 0.36 ) }
    dend_29 { pt3dadd( 72.002, -145.121, -5.90015, 0.36 ) }
    dend_29 { pt3dadd( 72.4265, -143.335, -4.30214, 0.84 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, axon_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, axon_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_5 = new SectionList()
    dend_33 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_16 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_4 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_35 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_34 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_5 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_36 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_19 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_39 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_38 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_23 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_11 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_10 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_25 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_27 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_7 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_3 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_20 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_22 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_17 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_9 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_24 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_26 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_28 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_29 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_31 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_40 OneSecGrp_SectionRef_28.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_16 nseg = 3
    dend_4 nseg = 9
    dend_35 nseg = 5
    dend_34 nseg = 3
    dend_15 nseg = 3
    dend_5 nseg = 3
    dend_37 nseg = 5
    dend_36 nseg = 3
    dend_21 nseg = 3
    dend_19 nseg = 9
    dend_39 nseg = 3
    dend_38 nseg = 3
    dend_23 nseg = 3
    dend_14 nseg = 13
    dend_13 nseg = 17
    dend_11 nseg = 3
    dend_10 nseg = 5
    dend_25 nseg = 3
    dend_32 nseg = 11
    dend_27 nseg = 3
    dend_30 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_DBC_b81a484394_0_0


