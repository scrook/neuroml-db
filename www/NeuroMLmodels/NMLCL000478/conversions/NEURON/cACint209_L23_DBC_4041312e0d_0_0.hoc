// Cell: cACint209_L23_DBC_4041312e0d_0_0
/*
{
  "id" : "cACint209_L23_DBC_4041312e0d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.900775, -9.8088, 0.590543, 2.2315", "-0.795054, -8.89395, 0.538155, 2.59468", "-0.689333, -7.97909, 0.485767, 3.40562", "-0.583612, -7.06424, 0.433379, 4.21656", "-0.477891, -6.14939, 0.380991, 4.76863", "-0.37217, -5.23453, 0.328603, 5.07118", "-0.26645, -4.31968, 0.276215, 5.37449", "-0.160729, -3.40482, 0.223827, 5.6778", "-0.0550076, -2.48997, 0.171439, 5.91116", "0.0507134, -1.57512, 0.119051, 6.0829", "0.156434, -0.660263, 0.0666633, 6.26003", "0.262155, 0.254591, 0.0142753, 6.44407", "0.367876, 1.16944, -0.0381126, 6.62807", "0.473597, 2.0843, -0.0905006, 6.73886", "0.579318, 2.99915, -0.142889, 6.60317", "0.685039, 3.91401, -0.195276, 6.29711", "0.79076, 4.82886, -0.247664, 5.46861", "0.896481, 5.74371, -0.300052, 4.56209", "1.0022, 6.65857, -0.35244, 3.66181", "1.10792, 7.57342, -0.404828, 2.68112", "1.21364, 8.48827, -0.457216, 1.67793" ]
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.69856, 3.75037, 6.2591, 0.83", "4.76959, 4.59577, 6.30349, 0.83", "8.0093, 7.15299, 6.43775, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "0.488563, 7.05562, 4.0991, 2.22", "0.657959, 11.1652, -0.345023, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.91144, -9.74363, 2.0591, 2.22", "-2.82032, -13.0202, 2.34293, 1.94", "-3.79719, -16.5418, 2.64798, 2.22", "-4.9084, -20.5477, 2.99499, 1.38", "-5.54693, -22.8495, 3.19439, 1.38", "-6.21461, -25.2565, 3.40289, 1.66", "-6.98283, -28.0259, 3.64279, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.21364, 8.48827, -0.457216, 0.55", "2.93559, 23.3891, -0.457216, 0.55", "4.65753, 38.2899, -0.457216, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "8.0093, 7.15299, 6.43775, 0.28", "9.52497, 7.00462, 7.40258, 0.28", "10.4886, 6.98621, 7.94942, 0.55", "12.1646, 7.04775, 8.70925, 0.28", "12.8006, 7.09808, 8.94798, 0.55", "15.5439, 7.25511, 9.55066, 0.28", "17.305, 7.329, 9.74772, 0.55", "19.3328, 7.44782, 9.73341, 0.55", "21.6852, 7.56118, 9.49035, 0.28", "22.8035, 7.62015, 9.32503, 0.55", "26.3522, 7.73409, 8.59933, 0.28", "27.7631, 7.72705, 8.27008, 0.83", "29.9582, 7.59356, 7.84112, 0.28", "31.1003, 7.49691, 7.65438, 0.83", "33.3413, 7.25435, 7.41517, 0.28", "34.8083, 7.02615, 7.28676, 0.55", "37.2883, 6.586, 7.16897, 0.28", "39.1984, 6.19452, 7.13848, 0.83", "41.8851, 5.61554, 7.00532, 0.28", "42.6253, 5.4481, 6.9445, 0.55", "46.6421, 4.44352, 6.49763, 0.28", "49.7449, 3.64823, 6.09926, 0.28", "51.3779, 3.24001, 5.8062, 0.55", "55.4979, 2.13481, 4.96086, 0.28", "56.6557, 1.80995, 4.69152, 0.55", "58.6168, 1.32089, 4.15982, 0.28", "59.4167, 1.14359, 3.94446, 0.55", "64.1166, 0.0839789, 2.5324, 0.28", "65.3758, -0.182118, 2.21949, 0.83", "68.1634, -0.748983, 1.76933, 0.28", "69.7478, -1.06066, 1.60274, 0.55", "71.5069, -1.42406, 1.49316, 0.28", "72.1436, -1.57999, 1.4399, 0.55", "75.3334, -2.43087, 1.12493, 0.28", "76.4252, -2.72036, 1.01866, 0.83", "79.1382, -3.4088, 0.753753, 0.28", "80.9303, -3.81353, 0.589461, 0.55", "84.718, -4.40674, -0.0913014, 0.28", "86.6814, -4.64357, -0.515834, 0.28", "88.5391, -4.78358, -0.996867, 0.55", "91.4047, -4.87561, -1.72495, 0.28", "93.2568, -4.94415, -2.20789, 0.55", "98.95, -5.23004, -3.77266, 0.28", "100.339, -5.35389, -4.13036, 0.83", "102.282, -5.61299, -4.71115, 0.28", "104.24, -5.94794, -5.28803, 0.55", "108.862, -6.98144, -6.66283, 0.28", "110.539, -7.44044, -7.18121, 0.83", "116.651, -9.40644, -8.84549, 0.28", "118.229, -9.93444, -9.26348, 0.55", "121.27, -10.9473, -9.99437, 0.28", "124.626, -11.9793, -10.7371, 0.55", "126.688, -12.4974, -11.1436, 0.28", "128.812, -12.9279, -11.5173, 0.28", "130.526, -13.1125, -11.8463, 0.55", "133.493, -13.0447, -12.3348, 0.28", "134.325, -12.8644, -12.5536, 0.55", "136.201, -12.0939, -13.1098, 0.28", "137.251, -11.48, -13.4756, 0.55", "138.475, -10.5642, -13.967, 0.28", "139.942, -9.26971, -14.6313, 0.55", "143.034, -6.13897, -16.0315, 0.28", "143.707, -5.41186, -16.3243, 0.28", "145.227, -3.64891, -17.0004, 0.55", "147.383, -1.06973, -17.8998, 0.28", "147.954, -0.391729, -18.09, 0.55", "149.385, 1.18771, -18.4293, 0.28", "149.714, 1.51612, -18.4829, 0.55", "151.098, 2.78529, -18.8425, 0.28", "151.705, 3.29084, -19.0454, 0.55", "152.603, 3.98158, -19.4131, 0.28", "153.437, 4.57107, -19.7636, 0.55", "155.552, 5.94479, -20.7933, 0.28", "156.898, 6.79705, -21.4298, 0.28", "157.674, 7.2659, -21.7848, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "8.0093, 7.15299, 6.43775, 0.28", "9.93692, 10.5158, 5.58881, 0.28", "10.9092, 12.212, 5.16062, 0.83", "12.1969, 14.4584, 4.59351, 0.28", "12.5563, 15.0854, 4.43524, 1.38" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.657959, 11.1652, -0.345023, 0.83", "1.0564, 14.0535, -0.811222, 0.83", "1.34383, 17.0631, -1.00152, 0.83", "1.44454, 18.4471, -1.02148, 0.83", "1.75845, 23.4791, -0.86061, 1.66", "1.95087, 27.3862, -0.656928, 0.83", "2.12016, 30.7734, -0.329142, 0.83", "2.14738, 33.11, 0.0918186, 0.83", "2.10883, 35.5455, 0.724435, 1.38", "2.07451, 38.2168, 1.55025, 0.83", "2.06495, 40.0041, 2.25328, 1.11", "2.15271, 42.8511, 3.30965, 0.83", "2.17222, 45.5464, 4.41149, 0.83", "2.2132, 47.4537, 5.2324, 1.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.657959, 11.1652, -0.345023, 1.11", "-0.644713, 13.7089, -0.760742, 1.11", "-2.06826, 16.5721, -1.49673, 1.11", "-3.15223, 19.0168, -2.18882, 0.55", "-3.61029, 20.1307, -2.50093, 1.11", "-4.33784, 21.9669, -3.00029, 0.55", "-5.35984, 24.4966, -3.64254, 0.55", "-6.14419, 26.486, -4.16781, 0.55", "-6.9912, 28.6099, -4.74563, 1.11", "-7.36126, 29.4975, -4.90327, 0.55", "-7.88966, 30.8495, -5.05714, 0.83", "-8.75473, 33.0847, -5.05522, 1.11", "-9.28304, 34.3715, -4.87846, 0.55", "-9.92748, 35.9225, -4.53762, 1.11", "-10.7239, 37.7697, -4.07264, 0.55", "-11.7826, 40.2926, -3.43841, 1.11", "-12.6097, 42.5255, -2.82626, 0.55", "-12.8144, 43.1217, -2.65946, 0.55", "-13.1388, 44.0624, -2.3878, 0.55", "-13.5196, 45.1308, -2.11251, 0.55", "-14.3308, 47.3518, -1.653, 1.38", "-14.9577, 48.9614, -1.36413, 0.55", "-15.5446, 50.516, -1.08544, 0.55", "-15.8147, 51.2678, -0.919766, 0.28", "-16.2729, 52.5682, -0.616819, 0.55", "-16.4965, 53.3563, -0.450039, 0.28", "-16.891, 54.9214, -0.184235, 1.11", "-17.4158, 57.1154, 0.0952811, 0.28", "-17.7025, 58.4948, 0.237304, 0.83", "-18.2766, 61.2292, 0.449125, 0.83", "-19.0046, 64.6573, 0.55706, 0.55", "-19.6837, 67.9524, 0.512679, 0.55", "-19.9366, 69.319, 0.464065, 0.28", "-20.2621, 70.9147, 0.356534, 0.83", "-20.5405, 72.2367, 0.283155, 0.83", "-21.1276, 74.6886, 0.176387, 0.55", "-21.9875, 77.8044, 0.116689, 0.55", "-22.6376, 80.2274, 0.092773, 0.55", "-23.2672, 82.5175, 0.101031, 0.55", "-24.1301, 85.5846, 0.180146, 0.55", "-24.6094, 87.3312, 0.292015, 0.55", "-25.2323, 89.4163, 0.584403, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.98283, -28.0259, 3.64279, 1.38", "-7.07951, -30.3827, 3.55994, 1.38", "-7.1649, -32.4644, 3.48677, 0.83", "-7.22106, -33.8335, 3.43864, 1.66", "-7.31413, -36.1022, 3.35889, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.98283, -28.0259, 3.64279, 1.38", "-12.6192, -33.3421, 5.99365, 1.38", "-15.1698, -35.747, 7.04408, 0.83", "-17.4336, -37.8456, 8.01673, 0.83", "-21.9831, -41.8652, 10.2251, 0.83", "-24.8018, -44.3556, 11.5933, 0.83", "-27.9918, -47.174, 13.1418, 0.83", "-29.4588, -48.4813, 13.7131, 1.11", "-32.169, -50.7906, 14.8446, 0.83", "-35.6838, -53.5991, 16.7169, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.65753, 38.2899, -0.457216, 0.55", "6.37948, 53.1908, -0.457216, 0.55", "8.10142, 68.0916, -0.457216, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "12.5563, 15.0854, 4.43524, 0.55", "13.7669, 14.8866, 6.06189, 0.55", "14.9355, 14.6357, 7.60678, 0.55", "17.4038, 14.1315, 11.1901, 0.83", "18.7302, 13.906, 13.1705, 0.28", "19.2331, 13.8109, 13.9496, 0.83", "20.4713, 13.5459, 15.9634, 0.28", "21.2155, 13.4082, 17.1927, 0.55", "23.0105, 13.1565, 20.1986, 0.28", "24.0137, 12.9302, 21.8493, 0.83", "25.4062, 12.5655, 24.2403, 0.28", "26.6234, 12.2362, 26.3479, 0.55", "27.9341, 11.894, 28.5522, 0.28", "29.0161, 11.5877, 30.4292, 0.55", "30.1096, 11.1505, 32.1835, 0.28", "31.1158, 10.6306, 33.9062, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "12.5563, 15.0854, 4.43524, 0.28", "13.0214, 16.6146, 4.97036, 0.28", "13.4241, 17.7082, 5.25532, 0.83", "14.4388, 20.2145, 5.76267, 0.28", "14.4388, 20.2145, 5.76267, 0.55", "15.1122, 21.8477, 5.94037, 0.55", "16.0127, 24.002, 6.14042, 1.11", "17.457, 27.5092, 6.2581, 0.55", "18.1404, 29.3058, 6.19619, 0.28", "18.7383, 30.9472, 5.98473, 0.83", "19.3506, 32.6936, 5.67781, 0.55", "19.8636, 34.2758, 5.33296, 0.83", "20.6789, 37.4326, 4.63958, 0.28", "21.1066, 39.3035, 4.13738, 0.83", "21.6282, 41.8294, 3.40293, 0.28", "21.7156, 42.2639, 3.27559, 0.55", "21.949, 43.4392, 2.91623, 0.28", "22.3878, 45.5574, 2.36995, 0.55", "23.1303, 48.4514, 1.77889, 0.28", "23.8609, 50.9634, 1.26349, 0.83", "24.478, 52.9896, 0.897024, 0.28", "24.9173, 54.2649, 0.670424, 0.83", "26.1095, 57.2232, 0.0795814, 0.28", "26.9899, 59.1713, -0.32151, 0.55", "28.0673, 61.2548, -0.819775, 0.28", "29.1284, 62.9436, -1.41059, 0.55", "31.0888, 65.7041, -2.63042, 0.55", "32.7693, 67.8573, -3.69373, 0.28", "34.5343, 69.9694, -4.82959, 0.55", "37.2159, 73.0692, -6.32321, 0.28", "39.3583, 75.3529, -7.39659, 0.83", "41.1658, 77.1393, -8.26399, 0.55", "43.1511, 79.0168, -9.01849, 0.28", "44.5521, 80.3345, -9.35185, 0.55", "46.8595, 82.5873, -9.47973, 0.55", "49.6496, 85.5739, -9.06424, 0.28", "50.1266, 86.1225, -8.91978, 0.55", "52.0883, 88.429, -8.19816, 0.28", "54.0046, 90.7359, -7.45282, 0.55", "55.5986, 92.7165, -6.79142, 0.28", "56.8644, 94.3603, -6.34078, 0.55", "58.4349, 96.5339, -5.70874, 0.28", "59.1785, 97.4676, -5.56101, 0.55", "60.6248, 99.0475, -5.57832, 0.28", "61.8536, 100.253, -5.70525, 0.83", "63.6722, 101.839, -6.02711, 0.28", "64.2357, 102.293, -6.14669, 0.55", "67.6004, 104.935, -6.76621, 0.28", "68.7401, 105.887, -6.87103, 0.83", "70.9723, 107.836, -7.00709, 0.28", "71.7241, 108.514, -7.02624, 0.55", "73.3948, 110.098, -7.03926, 0.28", "75.3741, 112.061, -7.05423, 0.55", "77.4246, 114.276, -7.02167, 0.28", "78.9236, 115.959, -7.06253, 0.83", "80.3687, 117.495, -7.36956, 0.83", "82.5844, 119.818, -8.04075, 0.28", "83.3448, 120.602, -8.33827, 0.83", "84.6595, 121.889, -9.01971, 0.28", "86.16, 123.24, -9.94393, 0.55", "89.6082, 126.249, -12.0895, 0.28", "90.9812, 127.36, -13.0192, 0.55", "91.6814, 127.901, -13.4926, 0.28", "94.2494, 129.852, -15.1517, 0.55", "96.5378, 131.542, -16.5218, 0.28", "98.1389, 132.726, -17.327, 0.83", "99.881, 134.121, -17.9581, 0.28", "101.512, 135.364, -18.584, 0.83", "103.505, 136.885, -19.3369, 0.28", "104.208, 137.474, -19.5873, 0.55", "105.306, 138.468, -19.9426, 0.28", "106.965, 140.047, -20.491, 0.55", "109.311, 142.351, -21.3757, 0.55", "111.214, 144.246, -22.3161, 0.28", "112.19, 145.186, -22.8632, 1.11", "113.46, 146.42, -23.6599, 1.11", "114.847, 147.899, -24.4433, 0.83", "116.896, 150.242, -25.4403, 0.28", "118.195, 151.89, -25.9061, 0.55", "119.477, 153.515, -26.2354, 0.28", "121.956, 156.544, -26.7828, 0.55", "125.007, 160.227, -27.4458, 0.28", "125.915, 161.317, -27.5976, 0.83", "127.009, 162.592, -27.7634, 0.28", "129.256, 165.034, -28.1257, 0.55", "131.765, 167.568, -28.7141, 0.55", "134.996, 170.577, -29.6878, 0.55", "136.697, 172.017, -30.3149, 0.28", "138.999, 174.011, -31.2294, 0.55", "140.848, 175.616, -31.9552, 0.28", "142.818, 177.417, -32.6881, 0.55", "144.016, 178.48, -33.1667, 0.55", "147.133, 181.336, -34.7112, 0.55", "148.774, 182.762, -35.8827, 0.28", "150.262, 184.048, -37.1652, 0.28", "151.292, 184.89, -38.1871, 0.55", "155.284, 187.991, -42.7856, 0.55", "157.151, 189.406, -45.1481, 0.55", "160.113, 191.8, -49.3892, 0.28", "160.592, 192.182, -50.1321, 0.28", "161.303, 192.783, -51.3366, 0.55", "163.215, 194.509, -54.5193, 0.55", "164.42, 195.642, -56.2189, 0.83", "165.565, 196.587, -57.6258, 0.83", "168.55, 198.841, -61.2092, 0.55", "169.285, 199.273, -62.069, 0.55", "171.339, 200.276, -64.3368, 0.83", "174.194, 201.444, -67.308, 0.55", "177.008, 202.451, -70.3533, 0.55", "179.874, 203.414, -73.3676, 0.55", "182.216, 204.253, -75.6543, 1.11", "183.535, 204.749, -76.9418, 0.28", "184.483, 205.176, -77.8902, 0.55", "186.624, 206.376, -79.9928, 0.55", "187.917, 207.243, -81.1767, 1.11", "189.421, 208.368, -82.7458, 0.55", "191.087, 209.655, -84.6422, 0.55", "193.3, 211.168, -87.2106, 1.11", "196.696, 213.352, -91.1146, 0.55", "197.324, 213.775, -91.8599, 0.55", "200.651, 216.238, -96.1773, 0.83", "201.618, 216.961, -97.5133, 0.83", "204.616, 219.216, -101.797, 0.55", "205.189, 219.621, -102.589, 0.55", "206.329, 220.479, -104.152, 0.28", "207.389, 221.239, -105.468, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "2.2132, 47.4537, 5.2324, 0.55", "1.66845, 48.2935, 6.65099, 0.55", "0.854532, 49.6951, 8.99323, 0.83", "0.244608, 50.8881, 10.8573, 0.55", "-0.673652, 52.7746, 13.602, 1.11", "-2.17196, 56.1659, 18.3364, 0.55", "-2.42102, 56.789, 19.1331, 0.55", "-3.20424, 58.9892, 21.652, 0.83", "-3.65856, 60.5482, 23.2137, 0.55", "-3.91455, 61.6093, 24.1283, 0.55", "-4.11063, 63.4755, 25.4107, 0.28", "-4.16325, 65.3941, 26.553, 0.55", "-4.26301, 67.8746, 28.0406, 0.55", "-4.37199, 70.8026, 29.7385, 0.28", "-4.43092, 72.7557, 30.9128, 0.55", "-4.46473, 74.2353, 31.8655, 0.55", "-4.49818, 76.7071, 33.5095, 0.55", "-4.53799, 77.8923, 34.4452, 0.28", "-4.56304, 78.3149, 34.8064, 0.55", "-4.65234, 79.6399, 35.994, 0.28", "-4.80202, 81.3569, 37.6249, 0.55", "-4.95041, 82.716, 39.0199, 0.55", "-5.05412, 84.9459, 41.3421, 0.28", "-5.074, 85.483, 41.9132, 0.55", "-5.15211, 86.8574, 43.3349, 0.28", "-5.16975, 87.6502, 44.1114, 0.55", "-5.111, 90.0789, 46.2033, 0.28", "-4.99396, 91.5984, 47.3283, 0.55", "-4.66109, 94.0119, 48.6899, 0.28", "-4.50477, 94.8965, 49.1171, 0.55", "-4.21052, 96.7581, 49.9192, 0.28", "-4.00601, 97.9978, 50.3544, 0.55", "-3.44702, 100.318, 50.9475, 0.28", "-2.99219, 101.936, 51.3205, 0.28", "-2.50423, 103.385, 51.6177, 0.55", "-1.59859, 106.053, 52.2009, 0.55", "-0.602821, 109.129, 52.9025, 0.28", "0.0881946, 111.103, 53.3548, 0.28", "0.77499, 112.727, 53.6153, 0.55", "1.63023, 114.439, 53.8442, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.2132, 47.4537, 5.2324, 0.83", "1.75655, 50.2874, 5.2546, 0.83", "1.50619, 52.0919, 5.22202, 0.83", "1.14649, 55.0645, 5.13958, 0.83", "0.877005, 57.7917, 5.06049, 0.28", "0.715995, 59.9146, 5.00497, 0.83", "0.541926, 63.5014, 4.94135, 0.83", "0.582058, 65.2268, 4.9237, 0.28", "0.629383, 66.177, 4.93666, 0.83", "0.745226, 67.7748, 4.99132, 0.55", "0.864856, 69.3781, 5.0993, 0.83", "0.990634, 70.8758, 5.1758, 0.55", "1.21672, 72.8521, 5.37255, 0.83", "1.4265, 74.8632, 5.59864, 0.83", "1.73178, 77.2337, 5.89875, 0.83", "2.10088, 79.8735, 6.24014, 0.55", "2.35365, 81.7299, 6.46158, 0.83", "2.89851, 85.4263, 6.88196, 0.55", "3.21333, 87.4858, 7.11656, 0.55", "3.65896, 90.1803, 7.41976, 0.55", "3.99092, 92.2456, 7.64818, 0.55", "4.53272, 95.495, 7.96805, 0.55", "5.02734, 98.9297, 8.21176, 1.11", "5.24264, 101.098, 8.29141, 0.55", "5.49213, 103.637, 8.26414, 0.83", "5.7062, 106.308, 8.09444, 1.11", "5.82927, 108.051, 7.90555, 0.55", "5.99526, 110.431, 7.56851, 0.83", "6.12784, 112.972, 7.08079, 0.83", "6.31452, 116.159, 6.33359, 0.55", "6.38413, 117.589, 5.93915, 1.11", "6.52521, 120.459, 5.06417, 1.11" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-25.2323, 89.4163, 0.584403, 0.28", "-24.7211, 91.3559, 0.664324, 0.28", "-24.5847, 92.1913, 0.521992, 0.55", "-24.4577, 93.1856, 0.324555, 0.28", "-24.4305, 93.8266, 0.261344, 0.55", "-24.4322, 94.9917, 0.211501, 0.28", "-24.4448, 95.6287, 0.155769, 0.55", "-24.6305, 97.7188, -0.112582, 0.28", "-24.6988, 98.4654, -0.240933, 0.55", "-24.8865, 100.617, -0.775567, 0.28", "-24.9702, 101.622, -1.05817, 0.83", "-25.0645, 103.677, -1.63925, 0.28", "-25.1194, 105.091, -1.91882, 0.28", "-25.1666, 106.043, -2.02658, 0.55", "-25.2598, 107.771, -2.20627, 0.28", "-25.3029, 108.512, -2.27038, 0.55", "-25.5069, 110.704, -2.29053, 0.55", "-25.845, 113.561, -2.06999, 0.28", "-26.0939, 115.216, -1.86249, 0.55", "-26.3985, 116.876, -1.57588, 0.28", "-26.5215, 117.5, -1.44431, 0.55", "-26.7634, 118.544, -1.2505, 0.28", "-26.9138, 118.97, -1.19653, 0.55", "-27.2545, 119.889, -1.15252, 0.28", "-27.4668, 120.498, -1.10631, 0.55", "-27.6683, 121.106, -1.04839, 0.28", "-28.0028, 122.147, -0.952523, 0.55", "-28.3942, 123.397, -0.848952, 0.55", "-29.2074, 126.046, -0.635196, 0.28", "-29.7023, 127.825, -0.500069, 0.28", "-29.8171, 128.265, -0.461907, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-25.2323, 89.4163, 0.584403, 0.28", "-25.0809, 91.9387, 0.324357, 0.28", "-25.0696, 92.8608, 0.309891, 0.55", "-25.1111, 93.5477, 0.322606, 0.28", "-25.2355, 94.2413, 0.382765, 0.55", "-25.7184, 95.9243, 0.641575, 0.28", "-26.0479, 96.972, 0.830412, 0.55", "-26.2779, 97.613, 0.955341, 0.28", "-26.5897, 98.5628, 1.09295, 0.55", "-27.1146, 100.381, 1.313, 0.55", "-27.3502, 101.463, 1.44445, 0.28", "-27.715, 103.481, 1.64447, 0.83", "-27.9449, 105.695, 1.87562, 0.28", "-27.9797, 106.845, 1.96488, 0.28", "-27.9727, 107.551, 2.03383, 0.83", "-27.8707, 109.449, 2.31134, 0.28", "-27.8229, 110.834, 2.61322, 0.28", "-27.8518, 111.683, 2.88632, 0.28", "-27.9508, 112.567, 3.23468, 0.83", "-28.3988, 114.67, 4.18501, 0.28", "-28.7383, 115.939, 4.77115, 0.55", "-29.078, 117.009, 5.2822, 0.28", "-29.3713, 118.012, 5.75529, 0.55", "-29.5375, 118.582, 5.9908, 0.55", "-30.082, 120.665, 6.71211, 0.55", "-30.4912, 122.552, 7.27478, 0.55", "-30.6073, 123.068, 7.41907, 0.55", "-31.0163, 124.87, 7.91197, 0.55", "-31.4304, 126.627, 8.31106, 0.55", "-31.8417, 128.251, 8.66469, 0.55", "-32.2402, 129.899, 8.97786, 0.83", "-32.5914, 131.242, 9.27744, 0.55", "-32.9079, 132.376, 9.55356, 0.83", "-33.4665, 134.102, 10.0051, 0.28", "-34.0028, 135.701, 10.4368, 0.55", "-34.6069, 137.312, 10.8001, 0.55", "-35.0072, 138.513, 10.955, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-7.31413, -36.1022, 3.35889, 0.83", "-6.29079, -36.88, 2.3756, 0.83", "-5.08849, -37.5657, 1.62431, 0.83", "-3.12848, -38.5271, 0.581694, 0.83", "-1.02767, -39.552, -0.340841, 0.83", "1.43724, -40.7436, -1.36992, 0.83", "3.54316, -41.7614, -2.18909, 0.83", "7.73645, -43.6984, -3.6021, 0.55", "9.94539, -44.6898, -4.25516, 0.55", "13.6427, -46.2685, -5.20231, 0.55", "16.0084, -47.3223, -5.68695, 0.55", "17.2567, -47.932, -5.90244, 0.83", "18.595, -48.596, -6.12104, 0.55", "19.6252, -49.2143, -6.37539, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.31413, -36.1022, 3.35889, 1.11", "-6.96519, -40.6191, 5.28163, 1.11", "-6.87274, -41.8159, 5.79107, 1.11", "-6.57735, -45.6397, 7.41881, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-35.6838, -53.5991, 16.7169, 0.83", "-36.7508, -55.3703, 17.3317, 0.83", "-38.0107, -57.4617, 18.0576, 1.11", "-39.2117, -59.4554, 18.7497, 0.83", "-40.72, -61.9592, 19.6188, 0.83", "-42.3495, -64.6641, 20.5577, 1.11", "-42.5981, -65.0767, 20.7009, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-35.6838, -53.5991, 16.7169, 0.55", "-37.2333, -53.6463, 16.5518, 0.55", "-40.7471, -53.7535, 16.1775, 0.55", "-43.173, -53.8275, 15.9191, 0.55", "-44.5797, -53.8704, 15.7692, 0.83", "-47.3859, -53.956, 15.4703, 0.55", "-48.9974, -54.0051, 15.2986, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "6.52521, 120.459, 5.06417, 0.55", "6.39039, 122.491, 4.51832, 0.55", "6.17689, 124.105, 4.26446, 0.55", "5.80455, 126.076, 4.04595, 0.55", "5.42125, 127.687, 4.00934, 0.55", "4.97, 129.604, 4.07616, 0.55", "4.43393, 131.693, 4.2564, 0.55", "3.37827, 134.951, 4.89112, 0.55", "2.93244, 136.193, 5.27127, 0.55", "2.15465, 138.254, 6.11265, 0.55", "1.73788, 139.492, 6.74826, 0.55", "1.29294, 141.108, 7.69276, 0.55", "0.956782, 142.624, 8.57587, 0.55", "0.850027, 143.355, 8.9199, 0.28", "0.705378, 144.628, 9.43055, 0.55", "0.532969, 146.569, 10.0533, 0.28", "0.423402, 147.58, 10.3682, 0.55", "0.267327, 149.162, 10.7944, 0.28", "0.161054, 149.937, 10.9922, 0.55", "-0.0553782, 151.355, 11.3769, 0.55", "-0.484533, 153.842, 12.1173, 0.55", "-0.776328, 155.529, 12.6465, 0.55", "-1.06077, 157.46, 13.2421, 0.55", "-1.21525, 160.026, 13.8806, 0.28", "-1.181, 161.481, 14.1079, 0.55", "-0.993605, 162.934, 14.1784, 0.28", "-0.869466, 163.506, 14.1361, 0.55", "-0.392691, 165.431, 13.8385, 0.55", "0.506079, 168.805, 13.0662, 0.55", "0.926626, 170.374, 12.5846, 0.55", "1.38103, 172.33, 11.9123, 0.55", "1.73559, 174.119, 11.2573, 0.55", "1.99861, 176.169, 10.5185, 0.55", "2.12453, 178.307, 9.81416, 0.55", "2.12526, 179.495, 9.42986, 0.55", "2.09808, 181.106, 8.85212, 0.28", "2.06252, 181.705, 8.59961, 0.28", "1.97675, 183.035, 7.97094, 0.55", "1.89822, 184.699, 7.12852, 0.55", "1.77731, 186.885, 5.92485, 0.28", "1.70468, 188.177, 5.19169, 0.55", "1.66909, 188.943, 4.72441, 0.55", "1.64819, 190.253, 3.87669, 0.28", "1.66887, 191.134, 3.25156, 0.55", "1.61868, 192.946, 1.71841, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "6.52521, 120.459, 5.06417, 0.55", "6.33584, 122.394, 3.97015, 0.55", "6.11136, 124.687, 2.6733, 0.55", "6.00173, 125.808, 2.0399, 0.28", "5.87627, 127.09, 1.3151, 0.83", "5.60848, 129.826, -0.231929, 0.55", "5.51997, 130.73, -0.743266, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-35.0072, 138.513, 10.955, 0.28", "-35.4592, 140.146, 11.1973, 0.28", "-35.9458, 141.791, 11.3175, 0.28", "-36.5438, 143.707, 11.4574, 0.55", "-37.0717, 145.354, 11.7362, 0.83", "-37.7993, 147.567, 12.2518, 0.28", "-38.261, 149.051, 12.6396, 0.55", "-38.7372, 150.49, 13.0966, 0.28", "-39.2398, 151.938, 13.5982, 0.83", "-40.1824, 154.598, 14.6695, 0.83", "-40.9561, 156.664, 15.5229, 0.28", "-41.5562, 157.788, 16.3999, 0.55", "-42.4256, 158.988, 17.7235, 0.28", "-43.0941, 159.784, 18.7457, 0.55", "-44.2273, 160.94, 20.4125, 0.28", "-44.897, 161.48, 21.3599, 0.55", "-49.4999, 164.251, 28.1406, 0.28", "-50.4052, 164.65, 29.505, 0.83", "-51.6902, 165.025, 31.5796, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-35.0072, 138.513, 10.955, 0.28", "-37.4385, 140.141, 12.5325, 0.28", "-39.3079, 141.496, 13.7437, 0.55", "-42.1937, 143.715, 15.5847, 0.28", "-42.6925, 144.098, 15.9029, 0.55", "-43.9926, 145.098, 16.7322, 0.28", "-45.296, 146.1, 17.5637, 0.55", "-47.3408, 147.878, 18.8992, 0.28", "-48.8777, 149.479, 19.8211, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "19.6252, -49.2143, -6.37539, 0.55", "19.4829, -49.3096, -8.11944, 0.55", "19.3111, -49.2695, -9.26793, 0.55", "18.3811, -48.9086, -14.1642, 0.55", "18.1118, -48.7852, -15.4451, 0.55", "17.5078, -48.5604, -18.587, 0.83", "17.2364, -48.4833, -20.2075, 0.55", "16.8255, -48.3313, -22.9929, 0.55", "16.523, -48.2562, -25.4064, 0.83", "16.4126, -48.2653, -27.2363, 0.55", "16.3113, -48.4273, -29.5764, 0.55", "16.3341, -48.7694, -31.677, 0.55", "16.4498, -49.1363, -33.0961, 0.83", "16.6963, -49.6674, -34.6891, 0.55", "16.8862, -50.0438, -35.7053, 0.55", "17.3049, -50.8977, -37.8547, 0.55", "17.618, -51.6516, -39.8248, 0.55", "17.8446, -52.3149, -41.3467, 2.49", "17.8473, -52.3249, -41.3676, 2.49" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "19.6252, -49.2143, -6.37539, 0.83", "20.1463, -50.1874, -6.67907, 0.83", "20.6162, -51.655, -6.99043, 0.83", "21.0103, -53.44, -7.29362, 0.28", "21.1976, -54.3208, -7.46548, 0.83", "21.4845, -55.5727, -7.68302, 0.83", "21.7979, -56.8366, -7.91222, 0.28", "22.1974, -58.7155, -8.20184, 0.55", "22.4776, -59.9414, -8.43817, 0.55", "23.1063, -61.224, -8.67606, 0.55", "24.1047, -62.4586, -8.91145, 0.28", "25.3372, -63.6604, -9.10502, 0.55", "26.1661, -64.2899, -9.16993, 0.55", "28.0308, -65.5154, -9.23079, 0.55", "33.2472, -68.6187, -9.26846, 0.55", "34.8939, -69.5151, -9.22618, 0.55", "36.1562, -70.1297, -9.1745, 0.55", "38.7279, -71.2602, -8.95218, 0.55", "41.1173, -72.2739, -8.66082, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-6.57735, -45.6397, 7.41881, 0.55", "-6.07215, -46.5952, 7.79532, 0.55", "-5.51744, -47.8763, 8.32335, 0.83", "-5.07615, -48.9454, 8.75345, 0.28", "-4.7964, -49.734, 9.09892, 0.83", "-4.29905, -51.5475, 10.0387, 0.28", "-4.11091, -52.2796, 10.4306, 0.83", "-3.75011, -53.5873, 11.1613, 0.55", "-3.59286, -54.2381, 11.5515, 0.55", "-3.3384, -55.6702, 12.4182, 0.55", "-3.09774, -57.6163, 13.612, 0.28", "-3.02399, -58.5392, 14.1459, 0.83", "-2.92388, -59.5842, 14.8125, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-6.57735, -45.6397, 7.41881, 0.83", "-5.72095, -46.8001, 6.87699, 0.83", "-4.73819, -48.1317, 6.25523, 1.11", "-3.46879, -49.8517, 5.45212, 0.55", "-1.69204, -52.2591, 4.32803, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-42.5981, -65.0767, 20.7009, 0.28", "-43.3938, -66.7028, 20.8667, 0.28", "-43.6386, -67.1542, 20.9246, 0.83", "-44.9182, -69.0648, 21.2181, 0.83", "-45.865, -70.2116, 21.425, 0.55", "-47.2951, -71.7081, 21.7232, 0.83", "-48.2927, -72.6566, 21.9213, 0.83", "-48.9751, -73.1737, 22.0721, 0.83", "-50.3545, -73.9209, 22.3793, 0.28", "-51.4429, -74.2976, 22.612, 0.55", "-52.0124, -74.3955, 22.7174, 0.28", "-52.7438, -74.4424, 22.8435, 0.55", "-54.2142, -74.5566, 22.8913, 0.28", "-55.4989, -74.7478, 22.8051, 0.55", "-56.0795, -74.8691, 22.723, 0.28", "-57.9071, -75.3426, 22.3676, 0.55", "-60.1404, -76.1004, 22.1519, 0.55", "-63.3289, -77.5798, 22.1378, 0.55", "-64.7054, -78.5345, 22.3084, 0.55", "-65.4912, -79.3211, 22.5319, 0.28", "-65.829, -79.7681, 22.6782, 0.83", "-68.6203, -84.3478, 24.2624, 0.55", "-69.2127, -85.4441, 24.7021, 0.83", "-70.5611, -88.0122, 25.8307, 0.83", "-71.7348, -90.1396, 26.7154, 0.28", "-72.5046, -91.4343, 27.1954, 0.28", "-73.4913, -92.9341, 27.7202, 0.55", "-75.4328, -95.6321, 28.4788, 0.28", "-76.4275, -96.8911, 28.8882, 0.55", "-77.1132, -97.6666, 29.1772, 0.55", "-78.4103, -98.9167, 29.7132, 0.83", "-80.4896, -100.593, 30.4779, 0.55", "-81.8239, -101.512, 30.8913, 0.55", "-83.3403, -102.278, 31.1817, 0.28", "-84.8273, -102.814, 31.3682, 0.55", "-85.806, -103.061, 31.4128, 0.55", "-87.6874, -103.404, 31.3682, 0.28", "-88.856, -103.598, 31.3328, 0.55", "-90.7801, -103.927, 31.3616, 0.28", "-92.3282, -104.232, 31.4269, 0.83", "-94.6972, -104.75, 31.5687, 0.28", "-96.7459, -105.308, 31.7155, 0.83", "-99.0752, -106.055, 31.9564, 0.28", "-100.312, -106.511, 32.079, 0.55", "-101.374, -107.012, 32.1801, 0.28", "-102.994, -107.911, 32.3538, 0.55", "-104.415, -108.803, 32.5151, 0.28", "-105.896, -109.896, 32.7233, 0.55", "-106.853, -110.701, 32.8662, 0.28", "-108.599, -112.303, 33.1863, 0.83", "-110.398, -114.114, 33.6054, 0.55", "-110.876, -114.645, 33.7408, 0.55", "-112.853, -116.892, 34.4385, 0.28", "-114.006, -118.3, 34.9408, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-42.5981, -65.0767, 20.7009, 0.55", "-44.8589, -67.1403, 20.643, 0.55", "-45.7412, -67.9574, 20.7329, 0.55", "-47.4117, -69.2634, 20.8121, 0.83", "-49.0138, -70.4531, 20.8458, 0.55", "-49.6891, -70.9733, 20.7985, 0.83", "-51.8361, -72.704, 20.5374, 0.55", "-53.18, -73.7746, 20.3704, 1.11", "-55.3454, -75.4928, 19.919, 0.55", "-56.3842, -76.31, 19.6579, 1.11", "-58.4306, -77.9449, 19.0266, 0.55", "-59.0705, -78.4785, 18.7927, 1.11", "-60.9363, -80.1621, 18.0389, 0.28", "-61.3851, -80.5294, 17.8916, 0.55", "-62.7923, -81.6053, 17.5204, 0.28", "-63.5187, -82.0852, 17.3572, 0.55", "-64.5598, -82.7011, 17.1415, 0.55", "-67.0598, -84.1412, 16.5753, 0.55", "-69.0314, -85.3453, 15.9903, 1.11", "-71.1596, -86.681, 15.2496, 0.55", "-72.0805, -87.2821, 14.8993, 1.11", "-73.9132, -88.4727, 14.1899, 0.28", "-74.5387, -88.854, 13.9614, 0.83", "-76.9053, -90.2684, 13.0881, 0.28", "-77.8019, -90.8244, 12.7905, 0.83", "-79.2521, -91.6598, 12.3342, 0.83", "-81.8181, -92.9345, 11.633, 0.28", "-83.5064, -93.7208, 11.2162, 0.83", "-86.7431, -95.1254, 10.4701, 0.28", "-88.1569, -95.6793, 10.1941, 0.83", "-90.0953, -96.4247, 9.77976, 0.28", "-92.1885, -97.1514, 9.32578, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "5.51997, 130.73, -0.743266, 0.55", "4.93631, 132.531, -1.46428, 0.55", "4.52075, 133.889, -1.95647, 0.55", "4.10165, 135.526, -2.45716, 0.83", "3.69695, 137.285, -2.93447, 0.28", "3.2943, 139.019, -3.37875, 0.55", "3.0383, 140.137, -3.62798, 0.83", "2.6041, 142.186, -4.00992, 0.28", "2.3011, 144.331, -4.33148, 0.55", "2.1929, 145.538, -4.46794, 0.55", "2.13453, 146.609, -4.5518, 0.55", "2.08102, 148.521, -4.67478, 0.28", "2.07142, 149.862, -4.7387, 0.55", "2.12995, 152.008, -4.87846, 0.28", "2.16535, 152.678, -4.93164, 0.55", "2.38894, 154.737, -5.10785, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "5.51997, 130.73, -0.743266, 0.28", "4.18113, 130.466, -0.538272, 0.28", "3.60774, 130.352, -0.450477, 0.28", "2.88321, 130.209, -0.339543, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "17.8473, -52.3249, -41.3676, 0.28", "17.544, -53.9653, -43.4319, 0.28", "17.4397, -54.3053, -43.9047, 0.55", "17.1203, -55.4258, -45.5483, 0.28", "16.8658, -56.2894, -46.9228, 0.55", "16.6253, -57.0599, -48.2974, 0.55", "16.2737, -58.3983, -50.8473, 0.28", "16.1292, -58.896, -52.0, 0.55", "15.9498, -59.5434, -53.5675, 0.28", "15.9251, -59.8998, -54.4392, 0.55", "16.0449, -61.2777, -57.7187, 0.28", "16.104, -61.9125, -59.1295, 0.83", "16.2646, -63.2559, -61.8325, 0.28", "16.301, -63.6516, -62.5864, 1.38", "16.3123, -65.4381, -65.9136, 0.28", "16.3138, -65.7293, -66.4366, 0.55", "16.3241, -67.2774, -69.1493, 0.28", "16.3202, -67.8, -70.0547, 1.66", "16.3235, -69.4154, -72.8034, 0.28", "16.2825, -70.0539, -73.8784, 0.55", "16.155, -70.8418, -75.2113, 0.28", "16.0956, -71.1941, -75.8581, 0.55", "16.0061, -71.7579, -77.0986, 0.28", "15.8558, -71.9414, -77.5674, 0.83", "14.6004, -72.836, -79.9304, 0.28", "14.1546, -73.0925, -80.6026, 0.55", "12.646, -73.8157, -82.6986, 0.28", "11.6562, -74.2761, -84.0185, 1.11", "7.84781, -76.1307, -89.3466, 0.28", "7.07492, -76.5443, -90.5214, 0.55", "5.90529, -77.2117, -92.4077, 0.28", "4.5652, -78.1024, -94.7152, 0.83", "3.27261, -79.1443, -97.1729, 0.28", "2.3214, -80.0196, -99.1645, 0.83", "0.00965525, -82.6666, -105.402, 0.28", "-0.237087, -82.9783, -106.137, 0.55", "-1.19866, -84.2499, -109.12, 0.28", "-1.37492, -84.4885, -109.65, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "17.8473, -52.3249, -41.3676, 0.28", "18.945, -51.3638, -43.0473, 0.28", "19.1447, -50.966, -44.1668, 0.55", "19.1901, -50.6473, -45.2309, 0.28", "19.2121, -50.473, -45.8937, 0.55", "19.285, -49.8601, -48.5267, 0.28", "19.3917, -49.4794, -50.5351, 0.83", "19.2847, -48.8321, -55.1085, 0.28", "19.2424, -48.7767, -55.6413, 0.55", "19.0667, -48.7071, -56.9971, 0.28", "18.9367, -48.7085, -57.6624, 0.83", "18.3866, -48.824, -59.3003, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "41.1173, -72.2739, -8.66082, 0.55", "41.9448, -73.632, -9.61259, 0.55", "42.3684, -74.3176, -10.0827, 0.55", "43.5403, -75.9563, -11.1581, 0.28", "44.7572, -77.5247, -12.1967, 0.83", "45.925, -79.0298, -13.1933, 0.28", "46.7283, -80.0651, -13.8788, 0.28", "47.0118, -80.4523, -14.1169, 0.55", "48.2517, -81.8841, -15.0055, 0.28", "48.5769, -82.1803, -15.1645, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "41.1173, -72.2739, -8.66082, 0.28", "41.4457, -73.95, -8.46505, 0.28", "41.657, -75.0288, -8.33904, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.69204, -52.2591, 4.32803, 0.55", "-1.48597, -52.9374, 4.35355, 0.55", "-1.20196, -53.5948, 4.39273, 0.55", "-1.07737, -53.8165, 4.43239, 0.55", "-0.803843, -54.3059, 4.53865, 0.28", "-0.632782, -54.5927, 4.61235, 0.83", "-0.110204, -55.4425, 4.83207, 0.28", "0.300295, -56.0575, 5.03748, 0.83", "1.08039, -57.2714, 5.45599, 0.28", "1.27981, -57.6028, 5.58178, 0.83", "1.77572, -58.4776, 5.92032, 0.28", "1.99579, -58.9078, 6.08017, 0.83", "2.37101, -59.7389, 6.37878, 0.28", "2.81659, -60.8625, 6.77829, 0.83", "3.12894, -61.7779, 7.07008, 0.55", "3.26699, -62.2007, 7.20399, 0.55", "3.392, -62.6237, 7.33089, 1.11", "3.71233, -63.6703, 7.64284, 0.55", "3.90643, -64.2276, 7.77964, 0.28", "3.95385, -64.3236, 7.80041, 0.55", "4.31035, -65.0308, 7.88559, 0.28", "4.49304, -65.339, 7.91504, 0.83", "4.8705, -65.8907, 7.94051, 0.28", "5.17665, -66.2636, 7.94154, 0.55", "5.79849, -66.9737, 7.94471, 0.55", "6.57545, -67.8468, 7.93044, 0.55", "7.14937, -68.4815, 7.89483, 0.55", "7.42748, -68.7893, 7.87844, 0.55", "8.44963, -69.8495, 7.79449, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.69204, -52.2591, 4.32803, 0.55", "-2.49474, -53.306, 4.09502, 0.55", "-2.71692, -53.769, 3.98112, 0.83", "-2.93629, -54.4098, 3.84815, 0.55", "-3.08946, -54.9839, 3.74573, 0.83", "-3.36742, -56.0258, 3.55987, 0.28", "-3.51539, -56.5805, 3.46093, 0.83", "-3.804, -58.1961, 3.18087, 0.83", "-3.95929, -59.416, 2.9548, 0.28", "-4.01905, -60.4304, 2.7695, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "2.38894, 154.737, -5.10785, 0.55", "1.36443, 157.299, -5.86019, 0.55", "0.50778, 159.136, -6.51849, 0.55", "-0.163514, 160.454, -7.118, 0.55", "-1.02962, 162.089, -8.01653, 0.28", "-2.13777, 164.381, -9.30948, 0.55", "-2.78861, 165.722, -10.1222, 0.55", "-3.79791, 167.934, -11.5605, 0.28", "-4.50874, 169.505, -12.5996, 1.11", "-5.05386, 170.975, -13.5978, 0.55", "-5.63683, 173.038, -15.1115, 0.55", "-6.21965, 175.256, -16.858, 0.55", "-6.42271, 176.526, -17.8189, 0.28", "-6.44738, 177.335, -18.4883, 0.55", "-6.54674, 180.222, -21.1455, 0.28", "-6.6176, 181.051, -21.9412, 0.83", "-6.83509, 182.892, -23.7124, 0.55", "-7.08113, 184.507, -25.2638, 0.55", "-7.69992, 187.75, -28.2542, 0.55", "-8.18147, 189.839, -30.0771, 0.28", "-8.74755, 191.949, -31.7906, 0.28", "-9.18332, 193.649, -33.1154, 0.55", "-9.94418, 196.987, -35.6435, 0.28", "-10.4385, 198.913, -37.08, 0.55", "-10.9901, 201.123, -38.536, 0.55", "-11.3191, 202.616, -39.4767, 0.28", "-11.6003, 203.815, -40.2733, 0.55", "-12.1559, 205.925, -41.6511, 0.28", "-12.584, 207.685, -42.6293, 0.55", "-12.9023, 209.163, -43.4228, 0.28", "-13.0465, 210.093, -43.9271, 0.55", "-13.2407, 211.792, -44.916, 0.28", "-13.3105, 212.507, -45.3385, 0.55", "-13.3493, 213.948, -46.2378, 0.55", "-13.1999, 215.76, -47.5777, 0.55", "-12.8133, 218.09, -49.6138, 0.28", "-12.6801, 218.636, -50.1266, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "2.38894, 154.737, -5.10785, 0.55", "2.39124, 155.386, -5.36233, 0.55", "2.40181, 158.359, -6.52865, 0.55", "2.40704, 159.831, -7.10597, 0.28", "2.41354, 161.659, -7.8227, 0.83", "2.42533, 164.976, -9.12407, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.01905, -60.4304, 2.7695, 0.83", "-4.07598, -61.6833, 2.74979, 0.83", "-4.10179, -62.2394, 2.7467, 1.11", "-4.14604, -63.334, 2.682, 0.55", "-4.20448, -64.892, 2.5482, 1.11", "-4.27727, -65.8331, 2.46719, 0.55", "-4.40455, -66.9336, 2.3211, 0.55", "-4.48861, -67.714, 2.16527, 0.83", "-4.62033, -68.8021, 1.8676, 0.28", "-4.62033, -68.8021, 1.8676, 0.83", "-4.93079, -69.9656, 1.2842, 0.83", "-5.33186, -71.3637, 0.481547, 0.28", "-5.52, -72.0119, 0.0862298, 0.83", "-5.84178, -72.9043, -0.403727, 0.83", "-6.30866, -74.0688, -1.0112, 0.28", "-6.43166, -74.3584, -1.16138, 0.83", "-6.66472, -74.8757, -1.43042, 0.83", "-6.93488, -75.4072, -1.66245, 0.83", "-7.48306, -76.4517, -2.09083, 0.83", "-8.30646, -78.1805, -2.74639, 0.28", "-8.42598, -78.488, -2.8532, 0.55", "-8.71351, -79.34, -3.18441, 0.28", "-8.95744, -80.0854, -3.49197, 0.83", "-9.23425, -81.028, -3.9121, 0.28", "-9.37881, -81.6024, -4.16185, 0.83", "-9.54216, -82.4803, -4.44674, 0.83", "-9.63847, -83.723, -4.64399, 0.28", "-9.63664, -84.2114, -4.64279, 0.55", "-9.56713, -85.0014, -4.53351, 0.28", "-9.42339, -86.0823, -4.25005, 0.83", "-9.1968, -87.4542, -3.64955, 0.28", "-8.65436, -90.0643, -2.2109, 0.83", "-8.47419, -90.9875, -1.65067, 0.28", "-8.3812, -91.8362, -1.15383, 0.83", "-8.30853, -92.5499, -0.705497, 0.83", "-8.20109, -94.2254, 0.340017, 0.28", "-8.23928, -94.663, 0.579098, 0.83", "-8.47391, -95.7855, 1.0153, 0.83", "-8.77469, -97.2348, 1.75213, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.01905, -60.4304, 2.7695, 0.28", "-2.45424, -62.5396, 1.44248, 0.28", "-1.31101, -64.0805, 0.472979, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "2.42533, 164.976, -9.12407, 0.55", "2.21243, 166.913, -9.75639, 0.55", "1.99121, 168.685, -10.3189, 0.55", "1.84263, 170.636, -11.0388, 0.28", "1.68903, 171.915, -11.5044, 0.28", "1.56611, 172.626, -11.7842, 0.55", "1.28683, 174.223, -12.4136, 0.28", "1.06327, 175.515, -13.0811, 0.55", "0.58089, 177.554, -14.3639, 0.28", "0.154407, 179.045, -15.3858, 0.55", "-0.362056, 180.722, -16.6094, 0.55", "-0.967018, 182.501, -18.0166, 0.83", "-1.99897, 185.171, -20.2511, 0.55", "-2.34268, 186.058, -21.0657, 0.28", "-2.57956, 186.661, -21.6188, 0.28", "-2.71762, 187.076, -22.033, 0.55", "-3.20534, 188.531, -23.4719, 0.28", "-3.41099, 189.09, -24.0226, 0.55", "-3.89563, 190.426, -25.1509, 0.28", "-4.33153, 191.465, -25.9191, 0.55", "-5.54242, 193.779, -27.4317, 0.28", "-6.10181, 194.627, -27.9026, 0.55", "-7.10916, 195.966, -28.6648, 0.28", "-8.20137, 197.203, -29.4249, 0.55", "-9.97351, 198.944, -30.313, 0.28", "-11.2242, 200.06, -30.8219, 0.83", "-12.8209, 201.431, -31.4303, 0.55", "-15.7669, 203.938, -32.6668, 0.28", "-16.7482, 204.758, -33.0894, 0.55", "-19.3688, 206.974, -34.4126, 0.28", "-20.6287, 208.108, -35.2017, 0.55", "-22.3161, 209.729, -36.2784, 0.28", "-22.8742, 210.298, -36.5953, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.42533, 164.976, -9.12407, 0.55", "2.46158, 166.018, -9.28303, 0.55", "2.50945, 168.053, -9.59007, 0.28", "2.53005, 169.309, -9.85977, 0.55", "2.5505, 171.005, -10.2515, 0.28", "2.59254, 172.256, -10.5811, 0.55", "2.64705, 173.763, -10.9886, 0.28", "2.71487, 175.991, -11.7216, 0.55", "2.73113, 178.198, -12.5121, 0.28", "2.70789, 179.662, -13.0259, 0.55", "2.63973, 181.722, -13.6978, 0.28", "2.55749, 183.411, -14.2347, 0.55", "2.34631, 186.431, -15.1025, 0.28", "2.20959, 188.203, -15.5424, 0.55", "2.04559, 190.191, -15.9985, 0.28", "1.94271, 191.689, -16.3429, 0.28", "1.88745, 192.614, -16.538, 0.28", "1.82708, 195.099, -17.1259, 0.55", "1.84009, 196.884, -17.5347, 0.55", "1.91998, 198.983, -18.0363, 0.28", "1.91441, 199.984, -18.317, 0.28", "1.90105, 201.2, -18.688, 0.28", "1.87311, 202.628, -19.1506, 0.28", "1.79497, 204.137, -19.6742, 0.83", "1.5144, 206.102, -20.2917, 0.28", "1.07369, 208.263, -20.7455, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.77469, -97.2348, 1.75213, 0.55", "-8.87119, -99.19, 1.78352, 0.55", "-8.93224, -99.9524, 1.79969, 0.55", "-8.98914, -100.898, 1.86315, 0.83", "-8.98322, -102.176, 1.91901, 0.83", "-8.98526, -103.043, 1.95972, 0.55", "-8.95186, -104.33, 2.0654, 0.83", "-8.86033, -105.845, 2.2182, 0.83", "-8.73033, -107.406, 2.3872, 0.55", "-8.554, -109.22, 2.56243, 0.55", "-8.31872, -111.486, 2.8072, 0.83", "-8.08884, -113.526, 3.0406, 0.83", "-7.9104, -115.035, 3.2231, 0.83", "-7.63494, -117.025, 3.43997, 0.83", "-7.48049, -118.417, 3.57349, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-8.77469, -97.2348, 1.75213, 0.55", "-11.6116, -97.5833, 1.41916, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.48049, -118.417, 3.57349, 0.83", "-6.77049, -120.522, 3.84061, 0.83", "-6.14517, -122.154, 4.13711, 0.83", "-5.15423, -124.686, 4.72699, 0.83", "-4.53652, -126.399, 5.12492, 0.28", "-3.73838, -128.599, 5.621, 0.83", "-2.85868, -131.17, 6.13042, 0.83", "-2.26891, -132.908, 6.47062, 0.28", "-1.77896, -134.57, 6.83067, 0.83", "-1.44458, -136.13, 7.13394, 0.55", "-1.19513, -137.992, 7.34798, 0.83", "-1.03892, -140.476, 7.48407, 0.83", "-1.01438, -142.38, 7.50698, 0.55", "-1.04716, -144.348, 7.51142, 0.83", "-1.16338, -147.102, 7.51377, 0.83", "-1.24846, -149.724, 7.6449, 0.55", "-1.30158, -150.969, 7.74727, 0.55", "-1.37675, -153.324, 8.03245, 0.83", "-1.47679, -155.611, 8.37243, 0.83", "-1.4791, -157.473, 8.7419, 0.83", "-1.3897, -160.353, 9.53381, 0.55", "-1.35451, -161.109, 9.78806, 0.55", "-1.21703, -162.474, 10.2974, 0.55", "-1.01173, -163.895, 10.9107, 0.83", "-0.455013, -166.944, 12.2321, 0.55", "-0.298631, -168.429, 12.8048, 0.83", "-0.293133, -169.818, 13.2492, 0.83", "-0.390822, -171.728, 13.7988, 0.28", "-0.473022, -172.584, 14.0263, 0.28", "-0.747304, -175.179, 14.7139, 0.83", "-1.31259, -178.401, 15.522, 0.55", "-1.50723, -179.694, 15.8269, 0.55", "-1.69844, -180.78, 16.0757, 0.28", "-1.84836, -181.455, 16.2503, 0.55", "-2.45774, -183.691, 17.0494, 0.28", "-2.81504, -184.794, 17.5927, 0.83", "-3.0045, -185.688, 18.1009, 0.83", "-3.465, -187.319, 19.1103, 0.28", "-3.94537, -188.481, 19.8706, 0.83", "-4.91806, -189.991, 20.8866, 0.28", "-5.08655, -190.139, 21.0056, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.48049, -118.417, 3.57349, 0.55", "-2.35153, -119.514, 4.44149, 0.55", "0.33946, -119.991, 4.61963, 0.28", "1.0307, -120.096, 4.60701, 0.83", "5.43576, -120.561, 4.20838, 0.55", "5.76223, -120.569, 4.1671, 0.83", "7.61109, -120.609, 3.93333, 0.28", "9.73637, -120.559, 3.47341, 0.55", "10.7063, -120.45, 3.3048, 0.55", "12.0189, -120.192, 2.93531, 0.28", "13.9497, -119.471, 1.77421, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_25", "dend_0", "dend_46", "dend_43", "dend_31", "dend_26", "dend_6", "dend_1", "dend_45", "dend_44", "dend_41", "dend_32", "dend_30", "dend_27", "dend_18", "dend_7", "dend_3", "dend_2", "dend_40", "dend_33", "dend_29", "dend_28", "dend_22", "dend_19", "dend_17", "dend_8", "dend_5", "dend_4", "dend_35", "dend_34", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_9", "dend_39", "dend_36", "dend_11", "dend_10", "dend_38", "dend_37", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_42", "dend_25", "dend_0", "dend_46", "dend_43", "dend_31", "dend_26", "dend_6", "dend_1", "dend_45", "dend_44", "dend_41", "dend_32", "dend_30", "dend_27", "dend_18", "dend_7", "dend_3", "dend_2", "dend_40", "dend_33", "dend_29", "dend_28", "dend_22", "dend_19", "dend_17", "dend_8", "dend_5", "dend_4", "dend_35", "dend_34", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_9", "dend_39", "dend_36", "dend_11", "dend_10", "dend_38", "dend_37", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_25", "dend_0", "axon_0", "dend_46", "dend_43", "dend_31", "dend_26", "dend_6", "dend_1", "axon_1", "dend_45", "dend_44", "dend_41", "dend_32", "dend_30", "dend_27", "dend_18", "dend_7", "dend_3", "dend_2", "dend_40", "dend_33", "dend_29", "dend_28", "dend_22", "dend_19", "dend_17", "dend_8", "dend_5", "dend_4", "dend_35", "dend_34", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_9", "dend_39", "dend_36", "dend_11", "dend_10", "dend_38", "dend_37", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_42", "dend_42", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_DBC_4041312e0d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_31
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_6
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_7
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_42, dend_25, dend_0, axon_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, axon_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_42(0), soma_0(0.4499999309967165)
    connect dend_25(0), soma_0(0.4499999309967165)
    connect dend_0(0), soma_0(0.4499999309967165)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_18(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.900775, -9.8088, 0.590543, 2.2315 ) }
    soma_0 { pt3dadd( -0.795054, -8.89395, 0.538155, 2.59468 ) }
    soma_0 { pt3dadd( -0.689333, -7.97909, 0.485767, 3.40562 ) }
    soma_0 { pt3dadd( -0.583612, -7.06424, 0.433379, 4.21656 ) }
    soma_0 { pt3dadd( -0.477891, -6.14939, 0.380991, 4.76863 ) }
    soma_0 { pt3dadd( -0.37217, -5.23453, 0.328603, 5.07118 ) }
    soma_0 { pt3dadd( -0.26645, -4.31968, 0.276215, 5.37449 ) }
    soma_0 { pt3dadd( -0.160729, -3.40482, 0.223827, 5.6778 ) }
    soma_0 { pt3dadd( -0.0550076, -2.48997, 0.171439, 5.91116 ) }
    soma_0 { pt3dadd( 0.0507134, -1.57512, 0.119051, 6.0829 ) }
    soma_0 { pt3dadd( 0.156434, -0.660263, 0.0666633, 6.26003 ) }
    soma_0 { pt3dadd( 0.262155, 0.254591, 0.0142753, 6.44407 ) }
    soma_0 { pt3dadd( 0.367876, 1.16944, -0.0381126, 6.62807 ) }
    soma_0 { pt3dadd( 0.473597, 2.0843, -0.0905006, 6.73886 ) }
    soma_0 { pt3dadd( 0.579318, 2.99915, -0.142889, 6.60317 ) }
    soma_0 { pt3dadd( 0.685039, 3.91401, -0.195276, 6.29711 ) }
    soma_0 { pt3dadd( 0.79076, 4.82886, -0.247664, 5.46861 ) }
    soma_0 { pt3dadd( 0.896481, 5.74371, -0.300052, 4.56209 ) }
    soma_0 { pt3dadd( 1.0022, 6.65857, -0.35244, 3.66181 ) }
    soma_0 { pt3dadd( 1.10792, 7.57342, -0.404828, 2.68112 ) }
    soma_0 { pt3dadd( 1.21364, 8.48827, -0.457216, 1.67793 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 21/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.69856, 3.75037, 6.2591, 0.83 ) }
    dend_42 { pt3dadd( 4.76959, 4.59577, 6.30349, 0.83 ) }
    dend_42 { pt3dadd( 8.0093, 7.15299, 6.43775, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 24/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 0.488563, 7.05562, 4.0991, 2.22 ) }
    dend_25 { pt3dadd( 0.657959, 11.1652, -0.345023, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 26/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.91144, -9.74363, 2.0591, 2.22 ) }
    dend_0 { pt3dadd( -2.82032, -13.0202, 2.34293, 1.94 ) }
    dend_0 { pt3dadd( -3.79719, -16.5418, 2.64798, 2.22 ) }
    dend_0 { pt3dadd( -4.9084, -20.5477, 2.99499, 1.38 ) }
    dend_0 { pt3dadd( -5.54693, -22.8495, 3.19439, 1.38 ) }
    dend_0 { pt3dadd( -6.21461, -25.2565, 3.40289, 1.66 ) }
    dend_0 { pt3dadd( -6.98283, -28.0259, 3.64279, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 33/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.21364, 8.48827, -0.457216, 0.55 ) }
    axon_0 { pt3dadd( 2.93559, 23.3891, -0.457216, 0.55 ) }
    axon_0 { pt3dadd( 4.65753, 38.2899, -0.457216, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 36/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 8.0093, 7.15299, 6.43775, 0.28 ) }
    dend_46 { pt3dadd( 9.52497, 7.00462, 7.40258, 0.28 ) }
    dend_46 { pt3dadd( 10.4886, 6.98621, 7.94942, 0.55 ) }
    dend_46 { pt3dadd( 12.1646, 7.04775, 8.70925, 0.28 ) }
    dend_46 { pt3dadd( 12.8006, 7.09808, 8.94798, 0.55 ) }
    dend_46 { pt3dadd( 15.5439, 7.25511, 9.55066, 0.28 ) }
    dend_46 { pt3dadd( 17.305, 7.329, 9.74772, 0.55 ) }
    dend_46 { pt3dadd( 19.3328, 7.44782, 9.73341, 0.55 ) }
    dend_46 { pt3dadd( 21.6852, 7.56118, 9.49035, 0.28 ) }
    dend_46 { pt3dadd( 22.8035, 7.62015, 9.32503, 0.55 ) }
    dend_46 { pt3dadd( 26.3522, 7.73409, 8.59933, 0.28 ) }
    dend_46 { pt3dadd( 27.7631, 7.72705, 8.27008, 0.83 ) }
    dend_46 { pt3dadd( 29.9582, 7.59356, 7.84112, 0.28 ) }
    dend_46 { pt3dadd( 31.1003, 7.49691, 7.65438, 0.83 ) }
    dend_46 { pt3dadd( 33.3413, 7.25435, 7.41517, 0.28 ) }
    dend_46 { pt3dadd( 34.8083, 7.02615, 7.28676, 0.55 ) }
    dend_46 { pt3dadd( 37.2883, 6.586, 7.16897, 0.28 ) }
    dend_46 { pt3dadd( 39.1984, 6.19452, 7.13848, 0.83 ) }
    dend_46 { pt3dadd( 41.8851, 5.61554, 7.00532, 0.28 ) }
    dend_46 { pt3dadd( 42.6253, 5.4481, 6.9445, 0.55 ) }
    dend_46 { pt3dadd( 46.6421, 4.44352, 6.49763, 0.28 ) }
    dend_46 { pt3dadd( 49.7449, 3.64823, 6.09926, 0.28 ) }
    dend_46 { pt3dadd( 51.3779, 3.24001, 5.8062, 0.55 ) }
    dend_46 { pt3dadd( 55.4979, 2.13481, 4.96086, 0.28 ) }
    dend_46 { pt3dadd( 56.6557, 1.80995, 4.69152, 0.55 ) }
    dend_46 { pt3dadd( 58.6168, 1.32089, 4.15982, 0.28 ) }
    dend_46 { pt3dadd( 59.4167, 1.14359, 3.94446, 0.55 ) }
    dend_46 { pt3dadd( 64.1166, 0.0839789, 2.5324, 0.28 ) }
    dend_46 { pt3dadd( 65.3758, -0.182118, 2.21949, 0.83 ) }
    dend_46 { pt3dadd( 68.1634, -0.748983, 1.76933, 0.28 ) }
    dend_46 { pt3dadd( 69.7478, -1.06066, 1.60274, 0.55 ) }
    dend_46 { pt3dadd( 71.5069, -1.42406, 1.49316, 0.28 ) }
    dend_46 { pt3dadd( 72.1436, -1.57999, 1.4399, 0.55 ) }
    dend_46 { pt3dadd( 75.3334, -2.43087, 1.12493, 0.28 ) }
    dend_46 { pt3dadd( 76.4252, -2.72036, 1.01866, 0.83 ) }
    dend_46 { pt3dadd( 79.1382, -3.4088, 0.753753, 0.28 ) }
    dend_46 { pt3dadd( 80.9303, -3.81353, 0.589461, 0.55 ) }
    dend_46 { pt3dadd( 84.718, -4.40674, -0.0913014, 0.28 ) }
    dend_46 { pt3dadd( 86.6814, -4.64357, -0.515834, 0.28 ) }
    dend_46 { pt3dadd( 88.5391, -4.78358, -0.996867, 0.55 ) }
    dend_46 { pt3dadd( 91.4047, -4.87561, -1.72495, 0.28 ) }
    dend_46 { pt3dadd( 93.2568, -4.94415, -2.20789, 0.55 ) }
    dend_46 { pt3dadd( 98.95, -5.23004, -3.77266, 0.28 ) }
    dend_46 { pt3dadd( 100.339, -5.35389, -4.13036, 0.83 ) }
    dend_46 { pt3dadd( 102.282, -5.61299, -4.71115, 0.28 ) }
    dend_46 { pt3dadd( 104.24, -5.94794, -5.28803, 0.55 ) }
    dend_46 { pt3dadd( 108.862, -6.98144, -6.66283, 0.28 ) }
    dend_46 { pt3dadd( 110.539, -7.44044, -7.18121, 0.83 ) }
    dend_46 { pt3dadd( 116.651, -9.40644, -8.84549, 0.28 ) }
    dend_46 { pt3dadd( 118.229, -9.93444, -9.26348, 0.55 ) }
    dend_46 { pt3dadd( 121.27, -10.9473, -9.99437, 0.28 ) }
    dend_46 { pt3dadd( 124.626, -11.9793, -10.7371, 0.55 ) }
    dend_46 { pt3dadd( 126.688, -12.4974, -11.1436, 0.28 ) }
    dend_46 { pt3dadd( 128.812, -12.9279, -11.5173, 0.28 ) }
    dend_46 { pt3dadd( 130.526, -13.1125, -11.8463, 0.55 ) }
    dend_46 { pt3dadd( 133.493, -13.0447, -12.3348, 0.28 ) }
    dend_46 { pt3dadd( 134.325, -12.8644, -12.5536, 0.55 ) }
    dend_46 { pt3dadd( 136.201, -12.0939, -13.1098, 0.28 ) }
    dend_46 { pt3dadd( 137.251, -11.48, -13.4756, 0.55 ) }
    dend_46 { pt3dadd( 138.475, -10.5642, -13.967, 0.28 ) }
    dend_46 { pt3dadd( 139.942, -9.26971, -14.6313, 0.55 ) }
    dend_46 { pt3dadd( 143.034, -6.13897, -16.0315, 0.28 ) }
    dend_46 { pt3dadd( 143.707, -5.41186, -16.3243, 0.28 ) }
    dend_46 { pt3dadd( 145.227, -3.64891, -17.0004, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_46 { pt3dadd( 147.383, -1.06973, -17.8998, 0.28 ) }
    dend_46 { pt3dadd( 147.954, -0.391729, -18.09, 0.55 ) }
    dend_46 { pt3dadd( 149.385, 1.18771, -18.4293, 0.28 ) }
    dend_46 { pt3dadd( 149.714, 1.51612, -18.4829, 0.55 ) }
    dend_46 { pt3dadd( 151.098, 2.78529, -18.8425, 0.28 ) }
    dend_46 { pt3dadd( 151.705, 3.29084, -19.0454, 0.55 ) }
    dend_46 { pt3dadd( 152.603, 3.98158, -19.4131, 0.28 ) }
    dend_46 { pt3dadd( 153.437, 4.57107, -19.7636, 0.55 ) }
    dend_46 { pt3dadd( 155.552, 5.94479, -20.7933, 0.28 ) }
    dend_46 { pt3dadd( 156.898, 6.79705, -21.4298, 0.28 ) }
    dend_46 { pt3dadd( 157.674, 7.2659, -21.7848, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 8.0093, 7.15299, 6.43775, 0.28 ) }
    dend_43 { pt3dadd( 9.93692, 10.5158, 5.58881, 0.28 ) }
    dend_43 { pt3dadd( 10.9092, 12.212, 5.16062, 0.83 ) }
    dend_43 { pt3dadd( 12.1969, 14.4584, 4.59351, 0.28 ) }
    dend_43 { pt3dadd( 12.5563, 15.0854, 4.43524, 1.38 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 16/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.657959, 11.1652, -0.345023, 0.83 ) }
    dend_31 { pt3dadd( 1.0564, 14.0535, -0.811222, 0.83 ) }
    dend_31 { pt3dadd( 1.34383, 17.0631, -1.00152, 0.83 ) }
    dend_31 { pt3dadd( 1.44454, 18.4471, -1.02148, 0.83 ) }
    dend_31 { pt3dadd( 1.75845, 23.4791, -0.86061, 1.66 ) }
    dend_31 { pt3dadd( 1.95087, 27.3862, -0.656928, 0.83 ) }
    dend_31 { pt3dadd( 2.12016, 30.7734, -0.329142, 0.83 ) }
    dend_31 { pt3dadd( 2.14738, 33.11, 0.0918186, 0.83 ) }
    dend_31 { pt3dadd( 2.10883, 35.5455, 0.724435, 1.38 ) }
    dend_31 { pt3dadd( 2.07451, 38.2168, 1.55025, 0.83 ) }
    dend_31 { pt3dadd( 2.06495, 40.0041, 2.25328, 1.11 ) }
    dend_31 { pt3dadd( 2.15271, 42.8511, 3.30965, 0.83 ) }
    dend_31 { pt3dadd( 2.17222, 45.5464, 4.41149, 0.83 ) }
    dend_31 { pt3dadd( 2.2132, 47.4537, 5.2324, 1.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.657959, 11.1652, -0.345023, 1.11 ) }
    dend_26 { pt3dadd( -0.644713, 13.7089, -0.760742, 1.11 ) }
    dend_26 { pt3dadd( -2.06826, 16.5721, -1.49673, 1.11 ) }
    dend_26 { pt3dadd( -3.15223, 19.0168, -2.18882, 0.55 ) }
    dend_26 { pt3dadd( -3.61029, 20.1307, -2.50093, 1.11 ) }
    dend_26 { pt3dadd( -4.33784, 21.9669, -3.00029, 0.55 ) }
    dend_26 { pt3dadd( -5.35984, 24.4966, -3.64254, 0.55 ) }
    dend_26 { pt3dadd( -6.14419, 26.486, -4.16781, 0.55 ) }
    dend_26 { pt3dadd( -6.9912, 28.6099, -4.74563, 1.11 ) }
    dend_26 { pt3dadd( -7.36126, 29.4975, -4.90327, 0.55 ) }
    dend_26 { pt3dadd( -7.88966, 30.8495, -5.05714, 0.83 ) }
    dend_26 { pt3dadd( -8.75473, 33.0847, -5.05522, 1.11 ) }
    dend_26 { pt3dadd( -9.28304, 34.3715, -4.87846, 0.55 ) }
    dend_26 { pt3dadd( -9.92748, 35.9225, -4.53762, 1.11 ) }
    dend_26 { pt3dadd( -10.7239, 37.7697, -4.07264, 0.55 ) }
    dend_26 { pt3dadd( -11.7826, 40.2926, -3.43841, 1.11 ) }
    dend_26 { pt3dadd( -12.6097, 42.5255, -2.82626, 0.55 ) }
    dend_26 { pt3dadd( -12.8144, 43.1217, -2.65946, 0.55 ) }
    dend_26 { pt3dadd( -13.1388, 44.0624, -2.3878, 0.55 ) }
    dend_26 { pt3dadd( -13.5196, 45.1308, -2.11251, 0.55 ) }
    dend_26 { pt3dadd( -14.3308, 47.3518, -1.653, 1.38 ) }
    dend_26 { pt3dadd( -14.9577, 48.9614, -1.36413, 0.55 ) }
    dend_26 { pt3dadd( -15.5446, 50.516, -1.08544, 0.55 ) }
    dend_26 { pt3dadd( -15.8147, 51.2678, -0.919766, 0.28 ) }
    dend_26 { pt3dadd( -16.2729, 52.5682, -0.616819, 0.55 ) }
    dend_26 { pt3dadd( -16.4965, 53.3563, -0.450039, 0.28 ) }
    dend_26 { pt3dadd( -16.891, 54.9214, -0.184235, 1.11 ) }
    dend_26 { pt3dadd( -17.4158, 57.1154, 0.0952811, 0.28 ) }
    dend_26 { pt3dadd( -17.7025, 58.4948, 0.237304, 0.83 ) }
    dend_26 { pt3dadd( -18.2766, 61.2292, 0.449125, 0.83 ) }
    dend_26 { pt3dadd( -19.0046, 64.6573, 0.55706, 0.55 ) }
    dend_26 { pt3dadd( -19.6837, 67.9524, 0.512679, 0.55 ) }
    dend_26 { pt3dadd( -19.9366, 69.319, 0.464065, 0.28 ) }
    dend_26 { pt3dadd( -20.2621, 70.9147, 0.356534, 0.83 ) }
    dend_26 { pt3dadd( -20.5405, 72.2367, 0.283155, 0.83 ) }
    dend_26 { pt3dadd( -21.1276, 74.6886, 0.176387, 0.55 ) }
    dend_26 { pt3dadd( -21.9875, 77.8044, 0.116689, 0.55 ) }
    dend_26 { pt3dadd( -22.6376, 80.2274, 0.092773, 0.55 ) }
    dend_26 { pt3dadd( -23.2672, 82.5175, 0.101031, 0.55 ) }
    dend_26 { pt3dadd( -24.1301, 85.5846, 0.180146, 0.55 ) }
    dend_26 { pt3dadd( -24.6094, 87.3312, 0.292015, 0.55 ) }
    dend_26 { pt3dadd( -25.2323, 89.4163, 0.584403, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.98283, -28.0259, 3.64279, 1.38 ) }
    dend_6 { pt3dadd( -7.07951, -30.3827, 3.55994, 1.38 ) }
    dend_6 { pt3dadd( -7.1649, -32.4644, 3.48677, 0.83 ) }
    dend_6 { pt3dadd( -7.22106, -33.8335, 3.43864, 1.66 ) }
    dend_6 { pt3dadd( -7.31413, -36.1022, 3.35889, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 77/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.98283, -28.0259, 3.64279, 1.38 ) }
    dend_1 { pt3dadd( -12.6192, -33.3421, 5.99365, 1.38 ) }
    dend_1 { pt3dadd( -15.1698, -35.747, 7.04408, 0.83 ) }
    dend_1 { pt3dadd( -17.4336, -37.8456, 8.01673, 0.83 ) }
    dend_1 { pt3dadd( -21.9831, -41.8652, 10.2251, 0.83 ) }
    dend_1 { pt3dadd( -24.8018, -44.3556, 11.5933, 0.83 ) }
    dend_1 { pt3dadd( -27.9918, -47.174, 13.1418, 0.83 ) }
    dend_1 { pt3dadd( -29.4588, -48.4813, 13.7131, 1.11 ) }
    dend_1 { pt3dadd( -32.169, -50.7906, 14.8446, 0.83 ) }
    dend_1 { pt3dadd( -35.6838, -53.5991, 16.7169, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 87/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.65753, 38.2899, -0.457216, 0.55 ) }
    axon_1 { pt3dadd( 6.37948, 53.1908, -0.457216, 0.55 ) }
    axon_1 { pt3dadd( 8.10142, 68.0916, -0.457216, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 12.5563, 15.0854, 4.43524, 0.55 ) }
    dend_45 { pt3dadd( 13.7669, 14.8866, 6.06189, 0.55 ) }
    dend_45 { pt3dadd( 14.9355, 14.6357, 7.60678, 0.55 ) }
    dend_45 { pt3dadd( 17.4038, 14.1315, 11.1901, 0.83 ) }
    dend_45 { pt3dadd( 18.7302, 13.906, 13.1705, 0.28 ) }
    dend_45 { pt3dadd( 19.2331, 13.8109, 13.9496, 0.83 ) }
    dend_45 { pt3dadd( 20.4713, 13.5459, 15.9634, 0.28 ) }
    dend_45 { pt3dadd( 21.2155, 13.4082, 17.1927, 0.55 ) }
    dend_45 { pt3dadd( 23.0105, 13.1565, 20.1986, 0.28 ) }
    dend_45 { pt3dadd( 24.0137, 12.9302, 21.8493, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( 25.4062, 12.5655, 24.2403, 0.28 ) }
    dend_45 { pt3dadd( 26.6234, 12.2362, 26.3479, 0.55 ) }
    dend_45 { pt3dadd( 27.9341, 11.894, 28.5522, 0.28 ) }
    dend_45 { pt3dadd( 29.0161, 11.5877, 30.4292, 0.55 ) }
    dend_45 { pt3dadd( 30.1096, 11.1505, 32.1835, 0.28 ) }
    dend_45 { pt3dadd( 31.1158, 10.6306, 33.9062, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 6/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 12.5563, 15.0854, 4.43524, 0.28 ) }
    dend_44 { pt3dadd( 13.0214, 16.6146, 4.97036, 0.28 ) }
    dend_44 { pt3dadd( 13.4241, 17.7082, 5.25532, 0.83 ) }
    dend_44 { pt3dadd( 14.4388, 20.2145, 5.76267, 0.28 ) }
    dend_44 { pt3dadd( 14.4388, 20.2145, 5.76267, 0.55 ) }
    dend_44 { pt3dadd( 15.1122, 21.8477, 5.94037, 0.55 ) }
    dend_44 { pt3dadd( 16.0127, 24.002, 6.14042, 1.11 ) }
    dend_44 { pt3dadd( 17.457, 27.5092, 6.2581, 0.55 ) }
    dend_44 { pt3dadd( 18.1404, 29.3058, 6.19619, 0.28 ) }
    dend_44 { pt3dadd( 18.7383, 30.9472, 5.98473, 0.83 ) }
    dend_44 { pt3dadd( 19.3506, 32.6936, 5.67781, 0.55 ) }
    dend_44 { pt3dadd( 19.8636, 34.2758, 5.33296, 0.83 ) }
    dend_44 { pt3dadd( 20.6789, 37.4326, 4.63958, 0.28 ) }
    dend_44 { pt3dadd( 21.1066, 39.3035, 4.13738, 0.83 ) }
    dend_44 { pt3dadd( 21.6282, 41.8294, 3.40293, 0.28 ) }
    dend_44 { pt3dadd( 21.7156, 42.2639, 3.27559, 0.55 ) }
    dend_44 { pt3dadd( 21.949, 43.4392, 2.91623, 0.28 ) }
    dend_44 { pt3dadd( 22.3878, 45.5574, 2.36995, 0.55 ) }
    dend_44 { pt3dadd( 23.1303, 48.4514, 1.77889, 0.28 ) }
    dend_44 { pt3dadd( 23.8609, 50.9634, 1.26349, 0.83 ) }
    dend_44 { pt3dadd( 24.478, 52.9896, 0.897024, 0.28 ) }
    dend_44 { pt3dadd( 24.9173, 54.2649, 0.670424, 0.83 ) }
    dend_44 { pt3dadd( 26.1095, 57.2232, 0.0795814, 0.28 ) }
    dend_44 { pt3dadd( 26.9899, 59.1713, -0.32151, 0.55 ) }
    dend_44 { pt3dadd( 28.0673, 61.2548, -0.819775, 0.28 ) }
    dend_44 { pt3dadd( 29.1284, 62.9436, -1.41059, 0.55 ) }
    dend_44 { pt3dadd( 31.0888, 65.7041, -2.63042, 0.55 ) }
    dend_44 { pt3dadd( 32.7693, 67.8573, -3.69373, 0.28 ) }
    dend_44 { pt3dadd( 34.5343, 69.9694, -4.82959, 0.55 ) }
    dend_44 { pt3dadd( 37.2159, 73.0692, -6.32321, 0.28 ) }
    dend_44 { pt3dadd( 39.3583, 75.3529, -7.39659, 0.83 ) }
    dend_44 { pt3dadd( 41.1658, 77.1393, -8.26399, 0.55 ) }
    dend_44 { pt3dadd( 43.1511, 79.0168, -9.01849, 0.28 ) }
    dend_44 { pt3dadd( 44.5521, 80.3345, -9.35185, 0.55 ) }
    dend_44 { pt3dadd( 46.8595, 82.5873, -9.47973, 0.55 ) }
    dend_44 { pt3dadd( 49.6496, 85.5739, -9.06424, 0.28 ) }
    dend_44 { pt3dadd( 50.1266, 86.1225, -8.91978, 0.55 ) }
    dend_44 { pt3dadd( 52.0883, 88.429, -8.19816, 0.28 ) }
    dend_44 { pt3dadd( 54.0046, 90.7359, -7.45282, 0.55 ) }
    dend_44 { pt3dadd( 55.5986, 92.7165, -6.79142, 0.28 ) }
    dend_44 { pt3dadd( 56.8644, 94.3603, -6.34078, 0.55 ) }
    dend_44 { pt3dadd( 58.4349, 96.5339, -5.70874, 0.28 ) }
    dend_44 { pt3dadd( 59.1785, 97.4676, -5.56101, 0.55 ) }
    dend_44 { pt3dadd( 60.6248, 99.0475, -5.57832, 0.28 ) }
    dend_44 { pt3dadd( 61.8536, 100.253, -5.70525, 0.83 ) }
    dend_44 { pt3dadd( 63.6722, 101.839, -6.02711, 0.28 ) }
    dend_44 { pt3dadd( 64.2357, 102.293, -6.14669, 0.55 ) }
    dend_44 { pt3dadd( 67.6004, 104.935, -6.76621, 0.28 ) }
    dend_44 { pt3dadd( 68.7401, 105.887, -6.87103, 0.83 ) }
    dend_44 { pt3dadd( 70.9723, 107.836, -7.00709, 0.28 ) }
    dend_44 { pt3dadd( 71.7241, 108.514, -7.02624, 0.55 ) }
    dend_44 { pt3dadd( 73.3948, 110.098, -7.03926, 0.28 ) }
    dend_44 { pt3dadd( 75.3741, 112.061, -7.05423, 0.55 ) }
    dend_44 { pt3dadd( 77.4246, 114.276, -7.02167, 0.28 ) }
    dend_44 { pt3dadd( 78.9236, 115.959, -7.06253, 0.83 ) }
    dend_44 { pt3dadd( 80.3687, 117.495, -7.36956, 0.83 ) }
    dend_44 { pt3dadd( 82.5844, 119.818, -8.04075, 0.28 ) }
    dend_44 { pt3dadd( 83.3448, 120.602, -8.33827, 0.83 ) }
    dend_44 { pt3dadd( 84.6595, 121.889, -9.01971, 0.28 ) }
    dend_44 { pt3dadd( 86.16, 123.24, -9.94393, 0.55 ) }
    dend_44 { pt3dadd( 89.6082, 126.249, -12.0895, 0.28 ) }
    dend_44 { pt3dadd( 90.9812, 127.36, -13.0192, 0.55 ) }
    dend_44 { pt3dadd( 91.6814, 127.901, -13.4926, 0.28 ) }
    dend_44 { pt3dadd( 94.2494, 129.852, -15.1517, 0.55 ) }
    dend_44 { pt3dadd( 96.5378, 131.542, -16.5218, 0.28 ) }
    dend_44 { pt3dadd( 98.1389, 132.726, -17.327, 0.83 ) }
    dend_44 { pt3dadd( 99.881, 134.121, -17.9581, 0.28 ) }
    dend_44 { pt3dadd( 101.512, 135.364, -18.584, 0.83 ) }
    dend_44 { pt3dadd( 103.505, 136.885, -19.3369, 0.28 ) }
    dend_44 { pt3dadd( 104.208, 137.474, -19.5873, 0.55 ) }
    dend_44 { pt3dadd( 105.306, 138.468, -19.9426, 0.28 ) }
    dend_44 { pt3dadd( 106.965, 140.047, -20.491, 0.55 ) }
    dend_44 { pt3dadd( 109.311, 142.351, -21.3757, 0.55 ) }
    dend_44 { pt3dadd( 111.214, 144.246, -22.3161, 0.28 ) }
    dend_44 { pt3dadd( 112.19, 145.186, -22.8632, 1.11 ) }
    dend_44 { pt3dadd( 113.46, 146.42, -23.6599, 1.11 ) }
    dend_44 { pt3dadd( 114.847, 147.899, -24.4433, 0.83 ) }
    dend_44 { pt3dadd( 116.896, 150.242, -25.4403, 0.28 ) }
    dend_44 { pt3dadd( 118.195, 151.89, -25.9061, 0.55 ) }
    dend_44 { pt3dadd( 119.477, 153.515, -26.2354, 0.28 ) }
    dend_44 { pt3dadd( 121.956, 156.544, -26.7828, 0.55 ) }
    dend_44 { pt3dadd( 125.007, 160.227, -27.4458, 0.28 ) }
    dend_44 { pt3dadd( 125.915, 161.317, -27.5976, 0.83 ) }
    dend_44 { pt3dadd( 127.009, 162.592, -27.7634, 0.28 ) }
    dend_44 { pt3dadd( 129.256, 165.034, -28.1257, 0.55 ) }
    dend_44 { pt3dadd( 131.765, 167.568, -28.7141, 0.55 ) }
    dend_44 { pt3dadd( 134.996, 170.577, -29.6878, 0.55 ) }
    dend_44 { pt3dadd( 136.697, 172.017, -30.3149, 0.28 ) }
    dend_44 { pt3dadd( 138.999, 174.011, -31.2294, 0.55 ) }
    dend_44 { pt3dadd( 140.848, 175.616, -31.9552, 0.28 ) }
    dend_44 { pt3dadd( 142.818, 177.417, -32.6881, 0.55 ) }
    dend_44 { pt3dadd( 144.016, 178.48, -33.1667, 0.55 ) }
    dend_44 { pt3dadd( 147.133, 181.336, -34.7112, 0.55 ) }
    dend_44 { pt3dadd( 148.774, 182.762, -35.8827, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( 150.262, 184.048, -37.1652, 0.28 ) }
    dend_44 { pt3dadd( 151.292, 184.89, -38.1871, 0.55 ) }
    dend_44 { pt3dadd( 155.284, 187.991, -42.7856, 0.55 ) }
    dend_44 { pt3dadd( 157.151, 189.406, -45.1481, 0.55 ) }
    dend_44 { pt3dadd( 160.113, 191.8, -49.3892, 0.28 ) }
    dend_44 { pt3dadd( 160.592, 192.182, -50.1321, 0.28 ) }
    dend_44 { pt3dadd( 161.303, 192.783, -51.3366, 0.55 ) }
    dend_44 { pt3dadd( 163.215, 194.509, -54.5193, 0.55 ) }
    dend_44 { pt3dadd( 164.42, 195.642, -56.2189, 0.83 ) }
    dend_44 { pt3dadd( 165.565, 196.587, -57.6258, 0.83 ) }
    dend_44 { pt3dadd( 168.55, 198.841, -61.2092, 0.55 ) }
    dend_44 { pt3dadd( 169.285, 199.273, -62.069, 0.55 ) }
    dend_44 { pt3dadd( 171.339, 200.276, -64.3368, 0.83 ) }
    dend_44 { pt3dadd( 174.194, 201.444, -67.308, 0.55 ) }
    dend_44 { pt3dadd( 177.008, 202.451, -70.3533, 0.55 ) }
    dend_44 { pt3dadd( 179.874, 203.414, -73.3676, 0.55 ) }
    dend_44 { pt3dadd( 182.216, 204.253, -75.6543, 1.11 ) }
    dend_44 { pt3dadd( 183.535, 204.749, -76.9418, 0.28 ) }
    dend_44 { pt3dadd( 184.483, 205.176, -77.8902, 0.55 ) }
    dend_44 { pt3dadd( 186.624, 206.376, -79.9928, 0.55 ) }
    dend_44 { pt3dadd( 187.917, 207.243, -81.1767, 1.11 ) }
    dend_44 { pt3dadd( 189.421, 208.368, -82.7458, 0.55 ) }
    dend_44 { pt3dadd( 191.087, 209.655, -84.6422, 0.55 ) }
    dend_44 { pt3dadd( 193.3, 211.168, -87.2106, 1.11 ) }
    dend_44 { pt3dadd( 196.696, 213.352, -91.1146, 0.55 ) }
    dend_44 { pt3dadd( 197.324, 213.775, -91.8599, 0.55 ) }
    dend_44 { pt3dadd( 200.651, 216.238, -96.1773, 0.83 ) }
    dend_44 { pt3dadd( 201.618, 216.961, -97.5133, 0.83 ) }
    dend_44 { pt3dadd( 204.616, 219.216, -101.797, 0.55 ) }
    dend_44 { pt3dadd( 205.189, 219.621, -102.589, 0.55 ) }
    dend_44 { pt3dadd( 206.329, 220.479, -104.152, 0.28 ) }
    dend_44 { pt3dadd( 207.389, 221.239, -105.468, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_31 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 2.2132, 47.4537, 5.2324, 0.55 ) }
    dend_41 { pt3dadd( 1.66845, 48.2935, 6.65099, 0.55 ) }
    dend_41 { pt3dadd( 0.854532, 49.6951, 8.99323, 0.83 ) }
    dend_41 { pt3dadd( 0.244608, 50.8881, 10.8573, 0.55 ) }
    dend_41 { pt3dadd( -0.673652, 52.7746, 13.602, 1.11 ) }
    dend_41 { pt3dadd( -2.17196, 56.1659, 18.3364, 0.55 ) }
    dend_41 { pt3dadd( -2.42102, 56.789, 19.1331, 0.55 ) }
    dend_41 { pt3dadd( -3.20424, 58.9892, 21.652, 0.83 ) }
    dend_41 { pt3dadd( -3.65856, 60.5482, 23.2137, 0.55 ) }
    dend_41 { pt3dadd( -3.91455, 61.6093, 24.1283, 0.55 ) }
    dend_41 { pt3dadd( -4.11063, 63.4755, 25.4107, 0.28 ) }
    dend_41 { pt3dadd( -4.16325, 65.3941, 26.553, 0.55 ) }
    dend_41 { pt3dadd( -4.26301, 67.8746, 28.0406, 0.55 ) }
    dend_41 { pt3dadd( -4.37199, 70.8026, 29.7385, 0.28 ) }
    dend_41 { pt3dadd( -4.43092, 72.7557, 30.9128, 0.55 ) }
    dend_41 { pt3dadd( -4.46473, 74.2353, 31.8655, 0.55 ) }
    dend_41 { pt3dadd( -4.49818, 76.7071, 33.5095, 0.55 ) }
    dend_41 { pt3dadd( -4.53799, 77.8923, 34.4452, 0.28 ) }
    dend_41 { pt3dadd( -4.56304, 78.3149, 34.8064, 0.55 ) }
    dend_41 { pt3dadd( -4.65234, 79.6399, 35.994, 0.28 ) }
    dend_41 { pt3dadd( -4.80202, 81.3569, 37.6249, 0.55 ) }
    dend_41 { pt3dadd( -4.95041, 82.716, 39.0199, 0.55 ) }
    dend_41 { pt3dadd( -5.05412, 84.9459, 41.3421, 0.28 ) }
    dend_41 { pt3dadd( -5.074, 85.483, 41.9132, 0.55 ) }
    dend_41 { pt3dadd( -5.15211, 86.8574, 43.3349, 0.28 ) }
    dend_41 { pt3dadd( -5.16975, 87.6502, 44.1114, 0.55 ) }
    dend_41 { pt3dadd( -5.111, 90.0789, 46.2033, 0.28 ) }
    dend_41 { pt3dadd( -4.99396, 91.5984, 47.3283, 0.55 ) }
    dend_41 { pt3dadd( -4.66109, 94.0119, 48.6899, 0.28 ) }
    dend_41 { pt3dadd( -4.50477, 94.8965, 49.1171, 0.55 ) }
    dend_41 { pt3dadd( -4.21052, 96.7581, 49.9192, 0.28 ) }
    dend_41 { pt3dadd( -4.00601, 97.9978, 50.3544, 0.55 ) }
    dend_41 { pt3dadd( -3.44702, 100.318, 50.9475, 0.28 ) }
    dend_41 { pt3dadd( -2.99219, 101.936, 51.3205, 0.28 ) }
    dend_41 { pt3dadd( -2.50423, 103.385, 51.6177, 0.55 ) }
    dend_41 { pt3dadd( -1.59859, 106.053, 52.2009, 0.55 ) }
    dend_41 { pt3dadd( -0.602821, 109.129, 52.9025, 0.28 ) }
    dend_41 { pt3dadd( 0.0881946, 111.103, 53.3548, 0.28 ) }
    dend_41 { pt3dadd( 0.77499, 112.727, 53.6153, 0.55 ) }
    dend_41 { pt3dadd( 1.63023, 114.439, 53.8442, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 72/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.2132, 47.4537, 5.2324, 0.83 ) }
    dend_32 { pt3dadd( 1.75655, 50.2874, 5.2546, 0.83 ) }
    dend_32 { pt3dadd( 1.50619, 52.0919, 5.22202, 0.83 ) }
    dend_32 { pt3dadd( 1.14649, 55.0645, 5.13958, 0.83 ) }
    dend_32 { pt3dadd( 0.877005, 57.7917, 5.06049, 0.28 ) }
    dend_32 { pt3dadd( 0.715995, 59.9146, 5.00497, 0.83 ) }
    dend_32 { pt3dadd( 0.541926, 63.5014, 4.94135, 0.83 ) }
    dend_32 { pt3dadd( 0.582058, 65.2268, 4.9237, 0.28 ) }
    dend_32 { pt3dadd( 0.629383, 66.177, 4.93666, 0.83 ) }
    dend_32 { pt3dadd( 0.745226, 67.7748, 4.99132, 0.55 ) }
    dend_32 { pt3dadd( 0.864856, 69.3781, 5.0993, 0.83 ) }
    dend_32 { pt3dadd( 0.990634, 70.8758, 5.1758, 0.55 ) }
    dend_32 { pt3dadd( 1.21672, 72.8521, 5.37255, 0.83 ) }
    dend_32 { pt3dadd( 1.4265, 74.8632, 5.59864, 0.83 ) }
    dend_32 { pt3dadd( 1.73178, 77.2337, 5.89875, 0.83 ) }
    dend_32 { pt3dadd( 2.10088, 79.8735, 6.24014, 0.55 ) }
    dend_32 { pt3dadd( 2.35365, 81.7299, 6.46158, 0.83 ) }
    dend_32 { pt3dadd( 2.89851, 85.4263, 6.88196, 0.55 ) }
    dend_32 { pt3dadd( 3.21333, 87.4858, 7.11656, 0.55 ) }
    dend_32 { pt3dadd( 3.65896, 90.1803, 7.41976, 0.55 ) }
    dend_32 { pt3dadd( 3.99092, 92.2456, 7.64818, 0.55 ) }
    dend_32 { pt3dadd( 4.53272, 95.495, 7.96805, 0.55 ) }
    dend_32 { pt3dadd( 5.02734, 98.9297, 8.21176, 1.11 ) }
    dend_32 { pt3dadd( 5.24264, 101.098, 8.29141, 0.55 ) }
    dend_32 { pt3dadd( 5.49213, 103.637, 8.26414, 0.83 ) }
    dend_32 { pt3dadd( 5.7062, 106.308, 8.09444, 1.11 ) }
    dend_32 { pt3dadd( 5.82927, 108.051, 7.90555, 0.55 ) }
    dend_32 { pt3dadd( 5.99526, 110.431, 7.56851, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( 6.12784, 112.972, 7.08079, 0.83 ) }
    dend_32 { pt3dadd( 6.31452, 116.159, 6.33359, 0.55 ) }
    dend_32 { pt3dadd( 6.38413, 117.589, 5.93915, 1.11 ) }
    dend_32 { pt3dadd( 6.52521, 120.459, 5.06417, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 4/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -25.2323, 89.4163, 0.584403, 0.28 ) }
    dend_30 { pt3dadd( -24.7211, 91.3559, 0.664324, 0.28 ) }
    dend_30 { pt3dadd( -24.5847, 92.1913, 0.521992, 0.55 ) }
    dend_30 { pt3dadd( -24.4577, 93.1856, 0.324555, 0.28 ) }
    dend_30 { pt3dadd( -24.4305, 93.8266, 0.261344, 0.55 ) }
    dend_30 { pt3dadd( -24.4322, 94.9917, 0.211501, 0.28 ) }
    dend_30 { pt3dadd( -24.4448, 95.6287, 0.155769, 0.55 ) }
    dend_30 { pt3dadd( -24.6305, 97.7188, -0.112582, 0.28 ) }
    dend_30 { pt3dadd( -24.6988, 98.4654, -0.240933, 0.55 ) }
    dend_30 { pt3dadd( -24.8865, 100.617, -0.775567, 0.28 ) }
    dend_30 { pt3dadd( -24.9702, 101.622, -1.05817, 0.83 ) }
    dend_30 { pt3dadd( -25.0645, 103.677, -1.63925, 0.28 ) }
    dend_30 { pt3dadd( -25.1194, 105.091, -1.91882, 0.28 ) }
    dend_30 { pt3dadd( -25.1666, 106.043, -2.02658, 0.55 ) }
    dend_30 { pt3dadd( -25.2598, 107.771, -2.20627, 0.28 ) }
    dend_30 { pt3dadd( -25.3029, 108.512, -2.27038, 0.55 ) }
    dend_30 { pt3dadd( -25.5069, 110.704, -2.29053, 0.55 ) }
    dend_30 { pt3dadd( -25.845, 113.561, -2.06999, 0.28 ) }
    dend_30 { pt3dadd( -26.0939, 115.216, -1.86249, 0.55 ) }
    dend_30 { pt3dadd( -26.3985, 116.876, -1.57588, 0.28 ) }
    dend_30 { pt3dadd( -26.5215, 117.5, -1.44431, 0.55 ) }
    dend_30 { pt3dadd( -26.7634, 118.544, -1.2505, 0.28 ) }
    dend_30 { pt3dadd( -26.9138, 118.97, -1.19653, 0.55 ) }
    dend_30 { pt3dadd( -27.2545, 119.889, -1.15252, 0.28 ) }
    dend_30 { pt3dadd( -27.4668, 120.498, -1.10631, 0.55 ) }
    dend_30 { pt3dadd( -27.6683, 121.106, -1.04839, 0.28 ) }
    dend_30 { pt3dadd( -28.0028, 122.147, -0.952523, 0.55 ) }
    dend_30 { pt3dadd( -28.3942, 123.397, -0.848952, 0.55 ) }
    dend_30 { pt3dadd( -29.2074, 126.046, -0.635196, 0.28 ) }
    dend_30 { pt3dadd( -29.7023, 127.825, -0.500069, 0.28 ) }
    dend_30 { pt3dadd( -29.8171, 128.265, -0.461907, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 35/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -25.2323, 89.4163, 0.584403, 0.28 ) }
    dend_27 { pt3dadd( -25.0809, 91.9387, 0.324357, 0.28 ) }
    dend_27 { pt3dadd( -25.0696, 92.8608, 0.309891, 0.55 ) }
    dend_27 { pt3dadd( -25.1111, 93.5477, 0.322606, 0.28 ) }
    dend_27 { pt3dadd( -25.2355, 94.2413, 0.382765, 0.55 ) }
    dend_27 { pt3dadd( -25.7184, 95.9243, 0.641575, 0.28 ) }
    dend_27 { pt3dadd( -26.0479, 96.972, 0.830412, 0.55 ) }
    dend_27 { pt3dadd( -26.2779, 97.613, 0.955341, 0.28 ) }
    dend_27 { pt3dadd( -26.5897, 98.5628, 1.09295, 0.55 ) }
    dend_27 { pt3dadd( -27.1146, 100.381, 1.313, 0.55 ) }
    dend_27 { pt3dadd( -27.3502, 101.463, 1.44445, 0.28 ) }
    dend_27 { pt3dadd( -27.715, 103.481, 1.64447, 0.83 ) }
    dend_27 { pt3dadd( -27.9449, 105.695, 1.87562, 0.28 ) }
    dend_27 { pt3dadd( -27.9797, 106.845, 1.96488, 0.28 ) }
    dend_27 { pt3dadd( -27.9727, 107.551, 2.03383, 0.83 ) }
    dend_27 { pt3dadd( -27.8707, 109.449, 2.31134, 0.28 ) }
    dend_27 { pt3dadd( -27.8229, 110.834, 2.61322, 0.28 ) }
    dend_27 { pt3dadd( -27.8518, 111.683, 2.88632, 0.28 ) }
    dend_27 { pt3dadd( -27.9508, 112.567, 3.23468, 0.83 ) }
    dend_27 { pt3dadd( -28.3988, 114.67, 4.18501, 0.28 ) }
    dend_27 { pt3dadd( -28.7383, 115.939, 4.77115, 0.55 ) }
    dend_27 { pt3dadd( -29.078, 117.009, 5.2822, 0.28 ) }
    dend_27 { pt3dadd( -29.3713, 118.012, 5.75529, 0.55 ) }
    dend_27 { pt3dadd( -29.5375, 118.582, 5.9908, 0.55 ) }
    dend_27 { pt3dadd( -30.082, 120.665, 6.71211, 0.55 ) }
    dend_27 { pt3dadd( -30.4912, 122.552, 7.27478, 0.55 ) }
    dend_27 { pt3dadd( -30.6073, 123.068, 7.41907, 0.55 ) }
    dend_27 { pt3dadd( -31.0163, 124.87, 7.91197, 0.55 ) }
    dend_27 { pt3dadd( -31.4304, 126.627, 8.31106, 0.55 ) }
    dend_27 { pt3dadd( -31.8417, 128.251, 8.66469, 0.55 ) }
    dend_27 { pt3dadd( -32.2402, 129.899, 8.97786, 0.83 ) }
    dend_27 { pt3dadd( -32.5914, 131.242, 9.27744, 0.55 ) }
    dend_27 { pt3dadd( -32.9079, 132.376, 9.55356, 0.83 ) }
    dend_27 { pt3dadd( -33.4665, 134.102, 10.0051, 0.28 ) }
    dend_27 { pt3dadd( -34.0028, 135.701, 10.4368, 0.55 ) }
    dend_27 { pt3dadd( -34.6069, 137.312, 10.8001, 0.55 ) }
    dend_27 { pt3dadd( -35.0072, 138.513, 10.955, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_6 (entry count 72/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -7.31413, -36.1022, 3.35889, 0.83 ) }
    dend_18 { pt3dadd( -6.29079, -36.88, 2.3756, 0.83 ) }
    dend_18 { pt3dadd( -5.08849, -37.5657, 1.62431, 0.83 ) }
    dend_18 { pt3dadd( -3.12848, -38.5271, 0.581694, 0.83 ) }
    dend_18 { pt3dadd( -1.02767, -39.552, -0.340841, 0.83 ) }
    dend_18 { pt3dadd( 1.43724, -40.7436, -1.36992, 0.83 ) }
    dend_18 { pt3dadd( 3.54316, -41.7614, -2.18909, 0.83 ) }
    dend_18 { pt3dadd( 7.73645, -43.6984, -3.6021, 0.55 ) }
    dend_18 { pt3dadd( 9.94539, -44.6898, -4.25516, 0.55 ) }
    dend_18 { pt3dadd( 13.6427, -46.2685, -5.20231, 0.55 ) }
    dend_18 { pt3dadd( 16.0084, -47.3223, -5.68695, 0.55 ) }
    dend_18 { pt3dadd( 17.2567, -47.932, -5.90244, 0.83 ) }
    dend_18 { pt3dadd( 18.595, -48.596, -6.12104, 0.55 ) }
    dend_18 { pt3dadd( 19.6252, -49.2143, -6.37539, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 86/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.31413, -36.1022, 3.35889, 1.11 ) }
    dend_7 { pt3dadd( -6.96519, -40.6191, 5.28163, 1.11 ) }
    dend_7 { pt3dadd( -6.87274, -41.8159, 5.79107, 1.11 ) }
    dend_7 { pt3dadd( -6.57735, -45.6397, 7.41881, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 90/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -35.6838, -53.5991, 16.7169, 0.83 ) }
    dend_3 { pt3dadd( -36.7508, -55.3703, 17.3317, 0.83 ) }
    dend_3 { pt3dadd( -38.0107, -57.4617, 18.0576, 1.11 ) }
    dend_3 { pt3dadd( -39.2117, -59.4554, 18.7497, 0.83 ) }
    dend_3 { pt3dadd( -40.72, -61.9592, 19.6188, 0.83 ) }
    dend_3 { pt3dadd( -42.3495, -64.6641, 20.5577, 1.11 ) }
    dend_3 { pt3dadd( -42.5981, -65.0767, 20.7009, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 97/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -35.6838, -53.5991, 16.7169, 0.55 ) }
    dend_2 { pt3dadd( -37.2333, -53.6463, 16.5518, 0.55 ) }
    dend_2 { pt3dadd( -40.7471, -53.7535, 16.1775, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( -43.173, -53.8275, 15.9191, 0.55 ) }
    dend_2 { pt3dadd( -44.5797, -53.8704, 15.7692, 0.83 ) }
    dend_2 { pt3dadd( -47.3859, -53.956, 15.4703, 0.55 ) }
    dend_2 { pt3dadd( -48.9974, -54.0051, 15.2986, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 4/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 6.52521, 120.459, 5.06417, 0.55 ) }
    dend_40 { pt3dadd( 6.39039, 122.491, 4.51832, 0.55 ) }
    dend_40 { pt3dadd( 6.17689, 124.105, 4.26446, 0.55 ) }
    dend_40 { pt3dadd( 5.80455, 126.076, 4.04595, 0.55 ) }
    dend_40 { pt3dadd( 5.42125, 127.687, 4.00934, 0.55 ) }
    dend_40 { pt3dadd( 4.97, 129.604, 4.07616, 0.55 ) }
    dend_40 { pt3dadd( 4.43393, 131.693, 4.2564, 0.55 ) }
    dend_40 { pt3dadd( 3.37827, 134.951, 4.89112, 0.55 ) }
    dend_40 { pt3dadd( 2.93244, 136.193, 5.27127, 0.55 ) }
    dend_40 { pt3dadd( 2.15465, 138.254, 6.11265, 0.55 ) }
    dend_40 { pt3dadd( 1.73788, 139.492, 6.74826, 0.55 ) }
    dend_40 { pt3dadd( 1.29294, 141.108, 7.69276, 0.55 ) }
    dend_40 { pt3dadd( 0.956782, 142.624, 8.57587, 0.55 ) }
    dend_40 { pt3dadd( 0.850027, 143.355, 8.9199, 0.28 ) }
    dend_40 { pt3dadd( 0.705378, 144.628, 9.43055, 0.55 ) }
    dend_40 { pt3dadd( 0.532969, 146.569, 10.0533, 0.28 ) }
    dend_40 { pt3dadd( 0.423402, 147.58, 10.3682, 0.55 ) }
    dend_40 { pt3dadd( 0.267327, 149.162, 10.7944, 0.28 ) }
    dend_40 { pt3dadd( 0.161054, 149.937, 10.9922, 0.55 ) }
    dend_40 { pt3dadd( -0.0553782, 151.355, 11.3769, 0.55 ) }
    dend_40 { pt3dadd( -0.484533, 153.842, 12.1173, 0.55 ) }
    dend_40 { pt3dadd( -0.776328, 155.529, 12.6465, 0.55 ) }
    dend_40 { pt3dadd( -1.06077, 157.46, 13.2421, 0.55 ) }
    dend_40 { pt3dadd( -1.21525, 160.026, 13.8806, 0.28 ) }
    dend_40 { pt3dadd( -1.181, 161.481, 14.1079, 0.55 ) }
    dend_40 { pt3dadd( -0.993605, 162.934, 14.1784, 0.28 ) }
    dend_40 { pt3dadd( -0.869466, 163.506, 14.1361, 0.55 ) }
    dend_40 { pt3dadd( -0.392691, 165.431, 13.8385, 0.55 ) }
    dend_40 { pt3dadd( 0.506079, 168.805, 13.0662, 0.55 ) }
    dend_40 { pt3dadd( 0.926626, 170.374, 12.5846, 0.55 ) }
    dend_40 { pt3dadd( 1.38103, 172.33, 11.9123, 0.55 ) }
    dend_40 { pt3dadd( 1.73559, 174.119, 11.2573, 0.55 ) }
    dend_40 { pt3dadd( 1.99861, 176.169, 10.5185, 0.55 ) }
    dend_40 { pt3dadd( 2.12453, 178.307, 9.81416, 0.55 ) }
    dend_40 { pt3dadd( 2.12526, 179.495, 9.42986, 0.55 ) }
    dend_40 { pt3dadd( 2.09808, 181.106, 8.85212, 0.28 ) }
    dend_40 { pt3dadd( 2.06252, 181.705, 8.59961, 0.28 ) }
    dend_40 { pt3dadd( 1.97675, 183.035, 7.97094, 0.55 ) }
    dend_40 { pt3dadd( 1.89822, 184.699, 7.12852, 0.55 ) }
    dend_40 { pt3dadd( 1.77731, 186.885, 5.92485, 0.28 ) }
    dend_40 { pt3dadd( 1.70468, 188.177, 5.19169, 0.55 ) }
    dend_40 { pt3dadd( 1.66909, 188.943, 4.72441, 0.55 ) }
    dend_40 { pt3dadd( 1.64819, 190.253, 3.87669, 0.28 ) }
    dend_40 { pt3dadd( 1.66887, 191.134, 3.25156, 0.55 ) }
    dend_40 { pt3dadd( 1.61868, 192.946, 1.71841, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 49/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 6.52521, 120.459, 5.06417, 0.55 ) }
    dend_33 { pt3dadd( 6.33584, 122.394, 3.97015, 0.55 ) }
    dend_33 { pt3dadd( 6.11136, 124.687, 2.6733, 0.55 ) }
    dend_33 { pt3dadd( 6.00173, 125.808, 2.0399, 0.28 ) }
    dend_33 { pt3dadd( 5.87627, 127.09, 1.3151, 0.83 ) }
    dend_33 { pt3dadd( 5.60848, 129.826, -0.231929, 0.55 ) }
    dend_33 { pt3dadd( 5.51997, 130.73, -0.743266, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -35.0072, 138.513, 10.955, 0.28 ) }
    dend_29 { pt3dadd( -35.4592, 140.146, 11.1973, 0.28 ) }
    dend_29 { pt3dadd( -35.9458, 141.791, 11.3175, 0.28 ) }
    dend_29 { pt3dadd( -36.5438, 143.707, 11.4574, 0.55 ) }
    dend_29 { pt3dadd( -37.0717, 145.354, 11.7362, 0.83 ) }
    dend_29 { pt3dadd( -37.7993, 147.567, 12.2518, 0.28 ) }
    dend_29 { pt3dadd( -38.261, 149.051, 12.6396, 0.55 ) }
    dend_29 { pt3dadd( -38.7372, 150.49, 13.0966, 0.28 ) }
    dend_29 { pt3dadd( -39.2398, 151.938, 13.5982, 0.83 ) }
    dend_29 { pt3dadd( -40.1824, 154.598, 14.6695, 0.83 ) }
    dend_29 { pt3dadd( -40.9561, 156.664, 15.5229, 0.28 ) }
    dend_29 { pt3dadd( -41.5562, 157.788, 16.3999, 0.55 ) }
    dend_29 { pt3dadd( -42.4256, 158.988, 17.7235, 0.28 ) }
    dend_29 { pt3dadd( -43.0941, 159.784, 18.7457, 0.55 ) }
    dend_29 { pt3dadd( -44.2273, 160.94, 20.4125, 0.28 ) }
    dend_29 { pt3dadd( -44.897, 161.48, 21.3599, 0.55 ) }
    dend_29 { pt3dadd( -49.4999, 164.251, 28.1406, 0.28 ) }
    dend_29 { pt3dadd( -50.4052, 164.65, 29.505, 0.83 ) }
    dend_29 { pt3dadd( -51.6902, 165.025, 31.5796, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -35.0072, 138.513, 10.955, 0.28 ) }
    dend_28 { pt3dadd( -37.4385, 140.141, 12.5325, 0.28 ) }
    dend_28 { pt3dadd( -39.3079, 141.496, 13.7437, 0.55 ) }
    dend_28 { pt3dadd( -42.1937, 143.715, 15.5847, 0.28 ) }
    dend_28 { pt3dadd( -42.6925, 144.098, 15.9029, 0.55 ) }
    dend_28 { pt3dadd( -43.9926, 145.098, 16.7322, 0.28 ) }
    dend_28 { pt3dadd( -45.296, 146.1, 17.5637, 0.55 ) }
    dend_28 { pt3dadd( -47.3408, 147.878, 18.8992, 0.28 ) }
    dend_28 { pt3dadd( -48.8777, 149.479, 19.8211, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 19.6252, -49.2143, -6.37539, 0.55 ) }
    dend_22 { pt3dadd( 19.4829, -49.3096, -8.11944, 0.55 ) }
    dend_22 { pt3dadd( 19.3111, -49.2695, -9.26793, 0.55 ) }
    dend_22 { pt3dadd( 18.3811, -48.9086, -14.1642, 0.55 ) }
    dend_22 { pt3dadd( 18.1118, -48.7852, -15.4451, 0.55 ) }
    dend_22 { pt3dadd( 17.5078, -48.5604, -18.587, 0.83 ) }
    dend_22 { pt3dadd( 17.2364, -48.4833, -20.2075, 0.55 ) }
    dend_22 { pt3dadd( 16.8255, -48.3313, -22.9929, 0.55 ) }
    dend_22 { pt3dadd( 16.523, -48.2562, -25.4064, 0.83 ) }
    dend_22 { pt3dadd( 16.4126, -48.2653, -27.2363, 0.55 ) }
    dend_22 { pt3dadd( 16.3113, -48.4273, -29.5764, 0.55 ) }
    dend_22 { pt3dadd( 16.3341, -48.7694, -31.677, 0.55 ) }
    dend_22 { pt3dadd( 16.4498, -49.1363, -33.0961, 0.83 ) }
    dend_22 { pt3dadd( 16.6963, -49.6674, -34.6891, 0.55 ) }
    dend_22 { pt3dadd( 16.8862, -50.0438, -35.7053, 0.55 ) }
    dend_22 { pt3dadd( 17.3049, -50.8977, -37.8547, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( 17.618, -51.6516, -39.8248, 0.55 ) }
    dend_22 { pt3dadd( 17.8446, -52.3149, -41.3467, 2.49 ) }
    dend_22 { pt3dadd( 17.8473, -52.3249, -41.3676, 2.49 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 3/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 19.6252, -49.2143, -6.37539, 0.83 ) }
    dend_19 { pt3dadd( 20.1463, -50.1874, -6.67907, 0.83 ) }
    dend_19 { pt3dadd( 20.6162, -51.655, -6.99043, 0.83 ) }
    dend_19 { pt3dadd( 21.0103, -53.44, -7.29362, 0.28 ) }
    dend_19 { pt3dadd( 21.1976, -54.3208, -7.46548, 0.83 ) }
    dend_19 { pt3dadd( 21.4845, -55.5727, -7.68302, 0.83 ) }
    dend_19 { pt3dadd( 21.7979, -56.8366, -7.91222, 0.28 ) }
    dend_19 { pt3dadd( 22.1974, -58.7155, -8.20184, 0.55 ) }
    dend_19 { pt3dadd( 22.4776, -59.9414, -8.43817, 0.55 ) }
    dend_19 { pt3dadd( 23.1063, -61.224, -8.67606, 0.55 ) }
    dend_19 { pt3dadd( 24.1047, -62.4586, -8.91145, 0.28 ) }
    dend_19 { pt3dadd( 25.3372, -63.6604, -9.10502, 0.55 ) }
    dend_19 { pt3dadd( 26.1661, -64.2899, -9.16993, 0.55 ) }
    dend_19 { pt3dadd( 28.0308, -65.5154, -9.23079, 0.55 ) }
    dend_19 { pt3dadd( 33.2472, -68.6187, -9.26846, 0.55 ) }
    dend_19 { pt3dadd( 34.8939, -69.5151, -9.22618, 0.55 ) }
    dend_19 { pt3dadd( 36.1562, -70.1297, -9.1745, 0.55 ) }
    dend_19 { pt3dadd( 38.7279, -71.2602, -8.95218, 0.55 ) }
    dend_19 { pt3dadd( 41.1173, -72.2739, -8.66082, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_7 (entry count 22/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -6.57735, -45.6397, 7.41881, 0.55 ) }
    dend_17 { pt3dadd( -6.07215, -46.5952, 7.79532, 0.55 ) }
    dend_17 { pt3dadd( -5.51744, -47.8763, 8.32335, 0.83 ) }
    dend_17 { pt3dadd( -5.07615, -48.9454, 8.75345, 0.28 ) }
    dend_17 { pt3dadd( -4.7964, -49.734, 9.09892, 0.83 ) }
    dend_17 { pt3dadd( -4.29905, -51.5475, 10.0387, 0.28 ) }
    dend_17 { pt3dadd( -4.11091, -52.2796, 10.4306, 0.83 ) }
    dend_17 { pt3dadd( -3.75011, -53.5873, 11.1613, 0.55 ) }
    dend_17 { pt3dadd( -3.59286, -54.2381, 11.5515, 0.55 ) }
    dend_17 { pt3dadd( -3.3384, -55.6702, 12.4182, 0.55 ) }
    dend_17 { pt3dadd( -3.09774, -57.6163, 13.612, 0.28 ) }
    dend_17 { pt3dadd( -3.02399, -58.5392, 14.1459, 0.83 ) }
    dend_17 { pt3dadd( -2.92388, -59.5842, 14.8125, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -6.57735, -45.6397, 7.41881, 0.83 ) }
    dend_8 { pt3dadd( -5.72095, -46.8001, 6.87699, 0.83 ) }
    dend_8 { pt3dadd( -4.73819, -48.1317, 6.25523, 1.11 ) }
    dend_8 { pt3dadd( -3.46879, -49.8517, 5.45212, 0.55 ) }
    dend_8 { pt3dadd( -1.69204, -52.2591, 4.32803, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 40/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -42.5981, -65.0767, 20.7009, 0.28 ) }
    dend_5 { pt3dadd( -43.3938, -66.7028, 20.8667, 0.28 ) }
    dend_5 { pt3dadd( -43.6386, -67.1542, 20.9246, 0.83 ) }
    dend_5 { pt3dadd( -44.9182, -69.0648, 21.2181, 0.83 ) }
    dend_5 { pt3dadd( -45.865, -70.2116, 21.425, 0.55 ) }
    dend_5 { pt3dadd( -47.2951, -71.7081, 21.7232, 0.83 ) }
    dend_5 { pt3dadd( -48.2927, -72.6566, 21.9213, 0.83 ) }
    dend_5 { pt3dadd( -48.9751, -73.1737, 22.0721, 0.83 ) }
    dend_5 { pt3dadd( -50.3545, -73.9209, 22.3793, 0.28 ) }
    dend_5 { pt3dadd( -51.4429, -74.2976, 22.612, 0.55 ) }
    dend_5 { pt3dadd( -52.0124, -74.3955, 22.7174, 0.28 ) }
    dend_5 { pt3dadd( -52.7438, -74.4424, 22.8435, 0.55 ) }
    dend_5 { pt3dadd( -54.2142, -74.5566, 22.8913, 0.28 ) }
    dend_5 { pt3dadd( -55.4989, -74.7478, 22.8051, 0.55 ) }
    dend_5 { pt3dadd( -56.0795, -74.8691, 22.723, 0.28 ) }
    dend_5 { pt3dadd( -57.9071, -75.3426, 22.3676, 0.55 ) }
    dend_5 { pt3dadd( -60.1404, -76.1004, 22.1519, 0.55 ) }
    dend_5 { pt3dadd( -63.3289, -77.5798, 22.1378, 0.55 ) }
    dend_5 { pt3dadd( -64.7054, -78.5345, 22.3084, 0.55 ) }
    dend_5 { pt3dadd( -65.4912, -79.3211, 22.5319, 0.28 ) }
    dend_5 { pt3dadd( -65.829, -79.7681, 22.6782, 0.83 ) }
    dend_5 { pt3dadd( -68.6203, -84.3478, 24.2624, 0.55 ) }
    dend_5 { pt3dadd( -69.2127, -85.4441, 24.7021, 0.83 ) }
    dend_5 { pt3dadd( -70.5611, -88.0122, 25.8307, 0.83 ) }
    dend_5 { pt3dadd( -71.7348, -90.1396, 26.7154, 0.28 ) }
    dend_5 { pt3dadd( -72.5046, -91.4343, 27.1954, 0.28 ) }
    dend_5 { pt3dadd( -73.4913, -92.9341, 27.7202, 0.55 ) }
    dend_5 { pt3dadd( -75.4328, -95.6321, 28.4788, 0.28 ) }
    dend_5 { pt3dadd( -76.4275, -96.8911, 28.8882, 0.55 ) }
    dend_5 { pt3dadd( -77.1132, -97.6666, 29.1772, 0.55 ) }
    dend_5 { pt3dadd( -78.4103, -98.9167, 29.7132, 0.83 ) }
    dend_5 { pt3dadd( -80.4896, -100.593, 30.4779, 0.55 ) }
    dend_5 { pt3dadd( -81.8239, -101.512, 30.8913, 0.55 ) }
    dend_5 { pt3dadd( -83.3403, -102.278, 31.1817, 0.28 ) }
    dend_5 { pt3dadd( -84.8273, -102.814, 31.3682, 0.55 ) }
    dend_5 { pt3dadd( -85.806, -103.061, 31.4128, 0.55 ) }
    dend_5 { pt3dadd( -87.6874, -103.404, 31.3682, 0.28 ) }
    dend_5 { pt3dadd( -88.856, -103.598, 31.3328, 0.55 ) }
    dend_5 { pt3dadd( -90.7801, -103.927, 31.3616, 0.28 ) }
    dend_5 { pt3dadd( -92.3282, -104.232, 31.4269, 0.83 ) }
    dend_5 { pt3dadd( -94.6972, -104.75, 31.5687, 0.28 ) }
    dend_5 { pt3dadd( -96.7459, -105.308, 31.7155, 0.83 ) }
    dend_5 { pt3dadd( -99.0752, -106.055, 31.9564, 0.28 ) }
    dend_5 { pt3dadd( -100.312, -106.511, 32.079, 0.55 ) }
    dend_5 { pt3dadd( -101.374, -107.012, 32.1801, 0.28 ) }
    dend_5 { pt3dadd( -102.994, -107.911, 32.3538, 0.55 ) }
    dend_5 { pt3dadd( -104.415, -108.803, 32.5151, 0.28 ) }
    dend_5 { pt3dadd( -105.896, -109.896, 32.7233, 0.55 ) }
    dend_5 { pt3dadd( -106.853, -110.701, 32.8662, 0.28 ) }
    dend_5 { pt3dadd( -108.599, -112.303, 33.1863, 0.83 ) }
    dend_5 { pt3dadd( -110.398, -114.114, 33.6054, 0.55 ) }
    dend_5 { pt3dadd( -110.876, -114.645, 33.7408, 0.55 ) }
    dend_5 { pt3dadd( -112.853, -116.892, 34.4385, 0.28 ) }
    dend_5 { pt3dadd( -114.006, -118.3, 34.9408, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 94/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -42.5981, -65.0767, 20.7009, 0.55 ) }
    dend_4 { pt3dadd( -44.8589, -67.1403, 20.643, 0.55 ) }
    dend_4 { pt3dadd( -45.7412, -67.9574, 20.7329, 0.55 ) }
    dend_4 { pt3dadd( -47.4117, -69.2634, 20.8121, 0.83 ) }
    dend_4 { pt3dadd( -49.0138, -70.4531, 20.8458, 0.55 ) }
    dend_4 { pt3dadd( -49.6891, -70.9733, 20.7985, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -51.8361, -72.704, 20.5374, 0.55 ) }
    dend_4 { pt3dadd( -53.18, -73.7746, 20.3704, 1.11 ) }
    dend_4 { pt3dadd( -55.3454, -75.4928, 19.919, 0.55 ) }
    dend_4 { pt3dadd( -56.3842, -76.31, 19.6579, 1.11 ) }
    dend_4 { pt3dadd( -58.4306, -77.9449, 19.0266, 0.55 ) }
    dend_4 { pt3dadd( -59.0705, -78.4785, 18.7927, 1.11 ) }
    dend_4 { pt3dadd( -60.9363, -80.1621, 18.0389, 0.28 ) }
    dend_4 { pt3dadd( -61.3851, -80.5294, 17.8916, 0.55 ) }
    dend_4 { pt3dadd( -62.7923, -81.6053, 17.5204, 0.28 ) }
    dend_4 { pt3dadd( -63.5187, -82.0852, 17.3572, 0.55 ) }
    dend_4 { pt3dadd( -64.5598, -82.7011, 17.1415, 0.55 ) }
    dend_4 { pt3dadd( -67.0598, -84.1412, 16.5753, 0.55 ) }
    dend_4 { pt3dadd( -69.0314, -85.3453, 15.9903, 1.11 ) }
    dend_4 { pt3dadd( -71.1596, -86.681, 15.2496, 0.55 ) }
    dend_4 { pt3dadd( -72.0805, -87.2821, 14.8993, 1.11 ) }
    dend_4 { pt3dadd( -73.9132, -88.4727, 14.1899, 0.28 ) }
    dend_4 { pt3dadd( -74.5387, -88.854, 13.9614, 0.83 ) }
    dend_4 { pt3dadd( -76.9053, -90.2684, 13.0881, 0.28 ) }
    dend_4 { pt3dadd( -77.8019, -90.8244, 12.7905, 0.83 ) }
    dend_4 { pt3dadd( -79.2521, -91.6598, 12.3342, 0.83 ) }
    dend_4 { pt3dadd( -81.8181, -92.9345, 11.633, 0.28 ) }
    dend_4 { pt3dadd( -83.5064, -93.7208, 11.2162, 0.83 ) }
    dend_4 { pt3dadd( -86.7431, -95.1254, 10.4701, 0.28 ) }
    dend_4 { pt3dadd( -88.1569, -95.6793, 10.1941, 0.83 ) }
    dend_4 { pt3dadd( -90.0953, -96.4247, 9.77976, 0.28 ) }
    dend_4 { pt3dadd( -92.1885, -97.1514, 9.32578, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 26/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 5.51997, 130.73, -0.743266, 0.55 ) }
    dend_35 { pt3dadd( 4.93631, 132.531, -1.46428, 0.55 ) }
    dend_35 { pt3dadd( 4.52075, 133.889, -1.95647, 0.55 ) }
    dend_35 { pt3dadd( 4.10165, 135.526, -2.45716, 0.83 ) }
    dend_35 { pt3dadd( 3.69695, 137.285, -2.93447, 0.28 ) }
    dend_35 { pt3dadd( 3.2943, 139.019, -3.37875, 0.55 ) }
    dend_35 { pt3dadd( 3.0383, 140.137, -3.62798, 0.83 ) }
    dend_35 { pt3dadd( 2.6041, 142.186, -4.00992, 0.28 ) }
    dend_35 { pt3dadd( 2.3011, 144.331, -4.33148, 0.55 ) }
    dend_35 { pt3dadd( 2.1929, 145.538, -4.46794, 0.55 ) }
    dend_35 { pt3dadd( 2.13453, 146.609, -4.5518, 0.55 ) }
    dend_35 { pt3dadd( 2.08102, 148.521, -4.67478, 0.28 ) }
    dend_35 { pt3dadd( 2.07142, 149.862, -4.7387, 0.55 ) }
    dend_35 { pt3dadd( 2.12995, 152.008, -4.87846, 0.28 ) }
    dend_35 { pt3dadd( 2.16535, 152.678, -4.93164, 0.55 ) }
    dend_35 { pt3dadd( 2.38894, 154.737, -5.10785, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 42/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 5.51997, 130.73, -0.743266, 0.28 ) }
    dend_34 { pt3dadd( 4.18113, 130.466, -0.538272, 0.28 ) }
    dend_34 { pt3dadd( 3.60774, 130.352, -0.450477, 0.28 ) }
    dend_34 { pt3dadd( 2.88321, 130.209, -0.339543, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 17.8473, -52.3249, -41.3676, 0.28 ) }
    dend_24 { pt3dadd( 17.544, -53.9653, -43.4319, 0.28 ) }
    dend_24 { pt3dadd( 17.4397, -54.3053, -43.9047, 0.55 ) }
    dend_24 { pt3dadd( 17.1203, -55.4258, -45.5483, 0.28 ) }
    dend_24 { pt3dadd( 16.8658, -56.2894, -46.9228, 0.55 ) }
    dend_24 { pt3dadd( 16.6253, -57.0599, -48.2974, 0.55 ) }
    dend_24 { pt3dadd( 16.2737, -58.3983, -50.8473, 0.28 ) }
    dend_24 { pt3dadd( 16.1292, -58.896, -52.0, 0.55 ) }
    dend_24 { pt3dadd( 15.9498, -59.5434, -53.5675, 0.28 ) }
    dend_24 { pt3dadd( 15.9251, -59.8998, -54.4392, 0.55 ) }
    dend_24 { pt3dadd( 16.0449, -61.2777, -57.7187, 0.28 ) }
    dend_24 { pt3dadd( 16.104, -61.9125, -59.1295, 0.83 ) }
    dend_24 { pt3dadd( 16.2646, -63.2559, -61.8325, 0.28 ) }
    dend_24 { pt3dadd( 16.301, -63.6516, -62.5864, 1.38 ) }
    dend_24 { pt3dadd( 16.3123, -65.4381, -65.9136, 0.28 ) }
    dend_24 { pt3dadd( 16.3138, -65.7293, -66.4366, 0.55 ) }
    dend_24 { pt3dadd( 16.3241, -67.2774, -69.1493, 0.28 ) }
    dend_24 { pt3dadd( 16.3202, -67.8, -70.0547, 1.66 ) }
    dend_24 { pt3dadd( 16.3235, -69.4154, -72.8034, 0.28 ) }
    dend_24 { pt3dadd( 16.2825, -70.0539, -73.8784, 0.55 ) }
    dend_24 { pt3dadd( 16.155, -70.8418, -75.2113, 0.28 ) }
    dend_24 { pt3dadd( 16.0956, -71.1941, -75.8581, 0.55 ) }
    dend_24 { pt3dadd( 16.0061, -71.7579, -77.0986, 0.28 ) }
    dend_24 { pt3dadd( 15.8558, -71.9414, -77.5674, 0.83 ) }
    dend_24 { pt3dadd( 14.6004, -72.836, -79.9304, 0.28 ) }
    dend_24 { pt3dadd( 14.1546, -73.0925, -80.6026, 0.55 ) }
    dend_24 { pt3dadd( 12.646, -73.8157, -82.6986, 0.28 ) }
    dend_24 { pt3dadd( 11.6562, -74.2761, -84.0185, 1.11 ) }
    dend_24 { pt3dadd( 7.84781, -76.1307, -89.3466, 0.28 ) }
    dend_24 { pt3dadd( 7.07492, -76.5443, -90.5214, 0.55 ) }
    dend_24 { pt3dadd( 5.90529, -77.2117, -92.4077, 0.28 ) }
    dend_24 { pt3dadd( 4.5652, -78.1024, -94.7152, 0.83 ) }
    dend_24 { pt3dadd( 3.27261, -79.1443, -97.1729, 0.28 ) }
    dend_24 { pt3dadd( 2.3214, -80.0196, -99.1645, 0.83 ) }
    dend_24 { pt3dadd( 0.00965525, -82.6666, -105.402, 0.28 ) }
    dend_24 { pt3dadd( -0.237087, -82.9783, -106.137, 0.55 ) }
    dend_24 { pt3dadd( -1.19866, -84.2499, -109.12, 0.28 ) }
    dend_24 { pt3dadd( -1.37492, -84.4885, -109.65, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 17.8473, -52.3249, -41.3676, 0.28 ) }
    dend_23 { pt3dadd( 18.945, -51.3638, -43.0473, 0.28 ) }
    dend_23 { pt3dadd( 19.1447, -50.966, -44.1668, 0.55 ) }
    dend_23 { pt3dadd( 19.1901, -50.6473, -45.2309, 0.28 ) }
    dend_23 { pt3dadd( 19.2121, -50.473, -45.8937, 0.55 ) }
    dend_23 { pt3dadd( 19.285, -49.8601, -48.5267, 0.28 ) }
    dend_23 { pt3dadd( 19.3917, -49.4794, -50.5351, 0.83 ) }
    dend_23 { pt3dadd( 19.2847, -48.8321, -55.1085, 0.28 ) }
    dend_23 { pt3dadd( 19.2424, -48.7767, -55.6413, 0.55 ) }
    dend_23 { pt3dadd( 19.0667, -48.7071, -56.9971, 0.28 ) }
    dend_23 { pt3dadd( 18.9367, -48.7085, -57.6624, 0.83 ) }
    dend_23 { pt3dadd( 18.3866, -48.824, -59.3003, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 41.1173, -72.2739, -8.66082, 0.55 ) }
    dend_21 { pt3dadd( 41.9448, -73.632, -9.61259, 0.55 ) }
    dend_21 { pt3dadd( 42.3684, -74.3176, -10.0827, 0.55 ) }
    dend_21 { pt3dadd( 43.5403, -75.9563, -11.1581, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_21 { pt3dadd( 44.7572, -77.5247, -12.1967, 0.83 ) }
    dend_21 { pt3dadd( 45.925, -79.0298, -13.1933, 0.28 ) }
    dend_21 { pt3dadd( 46.7283, -80.0651, -13.8788, 0.28 ) }
    dend_21 { pt3dadd( 47.0118, -80.4523, -14.1169, 0.55 ) }
    dend_21 { pt3dadd( 48.2517, -81.8841, -15.0055, 0.28 ) }
    dend_21 { pt3dadd( 48.5769, -82.1803, -15.1645, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 6/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 41.1173, -72.2739, -8.66082, 0.28 ) }
    dend_20 { pt3dadd( 41.4457, -73.95, -8.46505, 0.28 ) }
    dend_20 { pt3dadd( 41.657, -75.0288, -8.33904, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.69204, -52.2591, 4.32803, 0.55 ) }
    dend_16 { pt3dadd( -1.48597, -52.9374, 4.35355, 0.55 ) }
    dend_16 { pt3dadd( -1.20196, -53.5948, 4.39273, 0.55 ) }
    dend_16 { pt3dadd( -1.07737, -53.8165, 4.43239, 0.55 ) }
    dend_16 { pt3dadd( -0.803843, -54.3059, 4.53865, 0.28 ) }
    dend_16 { pt3dadd( -0.632782, -54.5927, 4.61235, 0.83 ) }
    dend_16 { pt3dadd( -0.110204, -55.4425, 4.83207, 0.28 ) }
    dend_16 { pt3dadd( 0.300295, -56.0575, 5.03748, 0.83 ) }
    dend_16 { pt3dadd( 1.08039, -57.2714, 5.45599, 0.28 ) }
    dend_16 { pt3dadd( 1.27981, -57.6028, 5.58178, 0.83 ) }
    dend_16 { pt3dadd( 1.77572, -58.4776, 5.92032, 0.28 ) }
    dend_16 { pt3dadd( 1.99579, -58.9078, 6.08017, 0.83 ) }
    dend_16 { pt3dadd( 2.37101, -59.7389, 6.37878, 0.28 ) }
    dend_16 { pt3dadd( 2.81659, -60.8625, 6.77829, 0.83 ) }
    dend_16 { pt3dadd( 3.12894, -61.7779, 7.07008, 0.55 ) }
    dend_16 { pt3dadd( 3.26699, -62.2007, 7.20399, 0.55 ) }
    dend_16 { pt3dadd( 3.392, -62.6237, 7.33089, 1.11 ) }
    dend_16 { pt3dadd( 3.71233, -63.6703, 7.64284, 0.55 ) }
    dend_16 { pt3dadd( 3.90643, -64.2276, 7.77964, 0.28 ) }
    dend_16 { pt3dadd( 3.95385, -64.3236, 7.80041, 0.55 ) }
    dend_16 { pt3dadd( 4.31035, -65.0308, 7.88559, 0.28 ) }
    dend_16 { pt3dadd( 4.49304, -65.339, 7.91504, 0.83 ) }
    dend_16 { pt3dadd( 4.8705, -65.8907, 7.94051, 0.28 ) }
    dend_16 { pt3dadd( 5.17665, -66.2636, 7.94154, 0.55 ) }
    dend_16 { pt3dadd( 5.79849, -66.9737, 7.94471, 0.55 ) }
    dend_16 { pt3dadd( 6.57545, -67.8468, 7.93044, 0.55 ) }
    dend_16 { pt3dadd( 7.14937, -68.4815, 7.89483, 0.55 ) }
    dend_16 { pt3dadd( 7.42748, -68.7893, 7.87844, 0.55 ) }
    dend_16 { pt3dadd( 8.44963, -69.8495, 7.79449, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 38/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.69204, -52.2591, 4.32803, 0.55 ) }
    dend_9 { pt3dadd( -2.49474, -53.306, 4.09502, 0.55 ) }
    dend_9 { pt3dadd( -2.71692, -53.769, 3.98112, 0.83 ) }
    dend_9 { pt3dadd( -2.93629, -54.4098, 3.84815, 0.55 ) }
    dend_9 { pt3dadd( -3.08946, -54.9839, 3.74573, 0.83 ) }
    dend_9 { pt3dadd( -3.36742, -56.0258, 3.55987, 0.28 ) }
    dend_9 { pt3dadd( -3.51539, -56.5805, 3.46093, 0.83 ) }
    dend_9 { pt3dadd( -3.804, -58.1961, 3.18087, 0.83 ) }
    dend_9 { pt3dadd( -3.95929, -59.416, 2.9548, 0.28 ) }
    dend_9 { pt3dadd( -4.01905, -60.4304, 2.7695, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 48/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 2.38894, 154.737, -5.10785, 0.55 ) }
    dend_39 { pt3dadd( 1.36443, 157.299, -5.86019, 0.55 ) }
    dend_39 { pt3dadd( 0.50778, 159.136, -6.51849, 0.55 ) }
    dend_39 { pt3dadd( -0.163514, 160.454, -7.118, 0.55 ) }
    dend_39 { pt3dadd( -1.02962, 162.089, -8.01653, 0.28 ) }
    dend_39 { pt3dadd( -2.13777, 164.381, -9.30948, 0.55 ) }
    dend_39 { pt3dadd( -2.78861, 165.722, -10.1222, 0.55 ) }
    dend_39 { pt3dadd( -3.79791, 167.934, -11.5605, 0.28 ) }
    dend_39 { pt3dadd( -4.50874, 169.505, -12.5996, 1.11 ) }
    dend_39 { pt3dadd( -5.05386, 170.975, -13.5978, 0.55 ) }
    dend_39 { pt3dadd( -5.63683, 173.038, -15.1115, 0.55 ) }
    dend_39 { pt3dadd( -6.21965, 175.256, -16.858, 0.55 ) }
    dend_39 { pt3dadd( -6.42271, 176.526, -17.8189, 0.28 ) }
    dend_39 { pt3dadd( -6.44738, 177.335, -18.4883, 0.55 ) }
    dend_39 { pt3dadd( -6.54674, 180.222, -21.1455, 0.28 ) }
    dend_39 { pt3dadd( -6.6176, 181.051, -21.9412, 0.83 ) }
    dend_39 { pt3dadd( -6.83509, 182.892, -23.7124, 0.55 ) }
    dend_39 { pt3dadd( -7.08113, 184.507, -25.2638, 0.55 ) }
    dend_39 { pt3dadd( -7.69992, 187.75, -28.2542, 0.55 ) }
    dend_39 { pt3dadd( -8.18147, 189.839, -30.0771, 0.28 ) }
    dend_39 { pt3dadd( -8.74755, 191.949, -31.7906, 0.28 ) }
    dend_39 { pt3dadd( -9.18332, 193.649, -33.1154, 0.55 ) }
    dend_39 { pt3dadd( -9.94418, 196.987, -35.6435, 0.28 ) }
    dend_39 { pt3dadd( -10.4385, 198.913, -37.08, 0.55 ) }
    dend_39 { pt3dadd( -10.9901, 201.123, -38.536, 0.55 ) }
    dend_39 { pt3dadd( -11.3191, 202.616, -39.4767, 0.28 ) }
    dend_39 { pt3dadd( -11.6003, 203.815, -40.2733, 0.55 ) }
    dend_39 { pt3dadd( -12.1559, 205.925, -41.6511, 0.28 ) }
    dend_39 { pt3dadd( -12.584, 207.685, -42.6293, 0.55 ) }
    dend_39 { pt3dadd( -12.9023, 209.163, -43.4228, 0.28 ) }
    dend_39 { pt3dadd( -13.0465, 210.093, -43.9271, 0.55 ) }
    dend_39 { pt3dadd( -13.2407, 211.792, -44.916, 0.28 ) }
    dend_39 { pt3dadd( -13.3105, 212.507, -45.3385, 0.55 ) }
    dend_39 { pt3dadd( -13.3493, 213.948, -46.2378, 0.55 ) }
    dend_39 { pt3dadd( -13.1999, 215.76, -47.5777, 0.55 ) }
    dend_39 { pt3dadd( -12.8133, 218.09, -49.6138, 0.28 ) }
    dend_39 { pt3dadd( -12.6801, 218.636, -50.1266, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 85/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 2.38894, 154.737, -5.10785, 0.55 ) }
    dend_36 { pt3dadd( 2.39124, 155.386, -5.36233, 0.55 ) }
    dend_36 { pt3dadd( 2.40181, 158.359, -6.52865, 0.55 ) }
    dend_36 { pt3dadd( 2.40704, 159.831, -7.10597, 0.28 ) }
    dend_36 { pt3dadd( 2.41354, 161.659, -7.8227, 0.83 ) }
    dend_36 { pt3dadd( 2.42533, 164.976, -9.12407, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 91/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.01905, -60.4304, 2.7695, 0.83 ) }
    dend_11 { pt3dadd( -4.07598, -61.6833, 2.74979, 0.83 ) }
    dend_11 { pt3dadd( -4.10179, -62.2394, 2.7467, 1.11 ) }
    dend_11 { pt3dadd( -4.14604, -63.334, 2.682, 0.55 ) }
    dend_11 { pt3dadd( -4.20448, -64.892, 2.5482, 1.11 ) }
    dend_11 { pt3dadd( -4.27727, -65.8331, 2.46719, 0.55 ) }
    dend_11 { pt3dadd( -4.40455, -66.9336, 2.3211, 0.55 ) }
    dend_11 { pt3dadd( -4.48861, -67.714, 2.16527, 0.83 ) }
    dend_11 { pt3dadd( -4.62033, -68.8021, 1.8676, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( -4.62033, -68.8021, 1.8676, 0.83 ) }
    dend_11 { pt3dadd( -4.93079, -69.9656, 1.2842, 0.83 ) }
    dend_11 { pt3dadd( -5.33186, -71.3637, 0.481547, 0.28 ) }
    dend_11 { pt3dadd( -5.52, -72.0119, 0.0862298, 0.83 ) }
    dend_11 { pt3dadd( -5.84178, -72.9043, -0.403727, 0.83 ) }
    dend_11 { pt3dadd( -6.30866, -74.0688, -1.0112, 0.28 ) }
    dend_11 { pt3dadd( -6.43166, -74.3584, -1.16138, 0.83 ) }
    dend_11 { pt3dadd( -6.66472, -74.8757, -1.43042, 0.83 ) }
    dend_11 { pt3dadd( -6.93488, -75.4072, -1.66245, 0.83 ) }
    dend_11 { pt3dadd( -7.48306, -76.4517, -2.09083, 0.83 ) }
    dend_11 { pt3dadd( -8.30646, -78.1805, -2.74639, 0.28 ) }
    dend_11 { pt3dadd( -8.42598, -78.488, -2.8532, 0.55 ) }
    dend_11 { pt3dadd( -8.71351, -79.34, -3.18441, 0.28 ) }
    dend_11 { pt3dadd( -8.95744, -80.0854, -3.49197, 0.83 ) }
    dend_11 { pt3dadd( -9.23425, -81.028, -3.9121, 0.28 ) }
    dend_11 { pt3dadd( -9.37881, -81.6024, -4.16185, 0.83 ) }
    dend_11 { pt3dadd( -9.54216, -82.4803, -4.44674, 0.83 ) }
    dend_11 { pt3dadd( -9.63847, -83.723, -4.64399, 0.28 ) }
    dend_11 { pt3dadd( -9.63664, -84.2114, -4.64279, 0.55 ) }
    dend_11 { pt3dadd( -9.56713, -85.0014, -4.53351, 0.28 ) }
    dend_11 { pt3dadd( -9.42339, -86.0823, -4.25005, 0.83 ) }
    dend_11 { pt3dadd( -9.1968, -87.4542, -3.64955, 0.28 ) }
    dend_11 { pt3dadd( -8.65436, -90.0643, -2.2109, 0.83 ) }
    dend_11 { pt3dadd( -8.47419, -90.9875, -1.65067, 0.28 ) }
    dend_11 { pt3dadd( -8.3812, -91.8362, -1.15383, 0.83 ) }
    dend_11 { pt3dadd( -8.30853, -92.5499, -0.705497, 0.83 ) }
    dend_11 { pt3dadd( -8.20109, -94.2254, 0.340017, 0.28 ) }
    dend_11 { pt3dadd( -8.23928, -94.663, 0.579098, 0.83 ) }
    dend_11 { pt3dadd( -8.47391, -95.7855, 1.0153, 0.83 ) }
    dend_11 { pt3dadd( -8.77469, -97.2348, 1.75213, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.01905, -60.4304, 2.7695, 0.28 ) }
    dend_10 { pt3dadd( -2.45424, -62.5396, 1.44248, 0.28 ) }
    dend_10 { pt3dadd( -1.31101, -64.0805, 0.472979, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 33/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 2.42533, 164.976, -9.12407, 0.55 ) }
    dend_38 { pt3dadd( 2.21243, 166.913, -9.75639, 0.55 ) }
    dend_38 { pt3dadd( 1.99121, 168.685, -10.3189, 0.55 ) }
    dend_38 { pt3dadd( 1.84263, 170.636, -11.0388, 0.28 ) }
    dend_38 { pt3dadd( 1.68903, 171.915, -11.5044, 0.28 ) }
    dend_38 { pt3dadd( 1.56611, 172.626, -11.7842, 0.55 ) }
    dend_38 { pt3dadd( 1.28683, 174.223, -12.4136, 0.28 ) }
    dend_38 { pt3dadd( 1.06327, 175.515, -13.0811, 0.55 ) }
    dend_38 { pt3dadd( 0.58089, 177.554, -14.3639, 0.28 ) }
    dend_38 { pt3dadd( 0.154407, 179.045, -15.3858, 0.55 ) }
    dend_38 { pt3dadd( -0.362056, 180.722, -16.6094, 0.55 ) }
    dend_38 { pt3dadd( -0.967018, 182.501, -18.0166, 0.83 ) }
    dend_38 { pt3dadd( -1.99897, 185.171, -20.2511, 0.55 ) }
    dend_38 { pt3dadd( -2.34268, 186.058, -21.0657, 0.28 ) }
    dend_38 { pt3dadd( -2.57956, 186.661, -21.6188, 0.28 ) }
    dend_38 { pt3dadd( -2.71762, 187.076, -22.033, 0.55 ) }
    dend_38 { pt3dadd( -3.20534, 188.531, -23.4719, 0.28 ) }
    dend_38 { pt3dadd( -3.41099, 189.09, -24.0226, 0.55 ) }
    dend_38 { pt3dadd( -3.89563, 190.426, -25.1509, 0.28 ) }
    dend_38 { pt3dadd( -4.33153, 191.465, -25.9191, 0.55 ) }
    dend_38 { pt3dadd( -5.54242, 193.779, -27.4317, 0.28 ) }
    dend_38 { pt3dadd( -6.10181, 194.627, -27.9026, 0.55 ) }
    dend_38 { pt3dadd( -7.10916, 195.966, -28.6648, 0.28 ) }
    dend_38 { pt3dadd( -8.20137, 197.203, -29.4249, 0.55 ) }
    dend_38 { pt3dadd( -9.97351, 198.944, -30.313, 0.28 ) }
    dend_38 { pt3dadd( -11.2242, 200.06, -30.8219, 0.83 ) }
    dend_38 { pt3dadd( -12.8209, 201.431, -31.4303, 0.55 ) }
    dend_38 { pt3dadd( -15.7669, 203.938, -32.6668, 0.28 ) }
    dend_38 { pt3dadd( -16.7482, 204.758, -33.0894, 0.55 ) }
    dend_38 { pt3dadd( -19.3688, 206.974, -34.4126, 0.28 ) }
    dend_38 { pt3dadd( -20.6287, 208.108, -35.2017, 0.55 ) }
    dend_38 { pt3dadd( -22.3161, 209.729, -36.2784, 0.28 ) }
    dend_38 { pt3dadd( -22.8742, 210.298, -36.5953, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.42533, 164.976, -9.12407, 0.55 ) }
    dend_37 { pt3dadd( 2.46158, 166.018, -9.28303, 0.55 ) }
    dend_37 { pt3dadd( 2.50945, 168.053, -9.59007, 0.28 ) }
    dend_37 { pt3dadd( 2.53005, 169.309, -9.85977, 0.55 ) }
    dend_37 { pt3dadd( 2.5505, 171.005, -10.2515, 0.28 ) }
    dend_37 { pt3dadd( 2.59254, 172.256, -10.5811, 0.55 ) }
    dend_37 { pt3dadd( 2.64705, 173.763, -10.9886, 0.28 ) }
    dend_37 { pt3dadd( 2.71487, 175.991, -11.7216, 0.55 ) }
    dend_37 { pt3dadd( 2.73113, 178.198, -12.5121, 0.28 ) }
    dend_37 { pt3dadd( 2.70789, 179.662, -13.0259, 0.55 ) }
    dend_37 { pt3dadd( 2.63973, 181.722, -13.6978, 0.28 ) }
    dend_37 { pt3dadd( 2.55749, 183.411, -14.2347, 0.55 ) }
    dend_37 { pt3dadd( 2.34631, 186.431, -15.1025, 0.28 ) }
    dend_37 { pt3dadd( 2.20959, 188.203, -15.5424, 0.55 ) }
    dend_37 { pt3dadd( 2.04559, 190.191, -15.9985, 0.28 ) }
    dend_37 { pt3dadd( 1.94271, 191.689, -16.3429, 0.28 ) }
    dend_37 { pt3dadd( 1.88745, 192.614, -16.538, 0.28 ) }
    dend_37 { pt3dadd( 1.82708, 195.099, -17.1259, 0.55 ) }
    dend_37 { pt3dadd( 1.84009, 196.884, -17.5347, 0.55 ) }
    dend_37 { pt3dadd( 1.91998, 198.983, -18.0363, 0.28 ) }
    dend_37 { pt3dadd( 1.91441, 199.984, -18.317, 0.28 ) }
    dend_37 { pt3dadd( 1.90105, 201.2, -18.688, 0.28 ) }
    dend_37 { pt3dadd( 1.87311, 202.628, -19.1506, 0.28 ) }
    dend_37 { pt3dadd( 1.79497, 204.137, -19.6742, 0.83 ) }
    dend_37 { pt3dadd( 1.5144, 206.102, -20.2917, 0.28 ) }
    dend_37 { pt3dadd( 1.07369, 208.263, -20.7455, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 92/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.77469, -97.2348, 1.75213, 0.55 ) }
    dend_13 { pt3dadd( -8.87119, -99.19, 1.78352, 0.55 ) }
    dend_13 { pt3dadd( -8.93224, -99.9524, 1.79969, 0.55 ) }
    dend_13 { pt3dadd( -8.98914, -100.898, 1.86315, 0.83 ) }
    dend_13 { pt3dadd( -8.98322, -102.176, 1.91901, 0.83 ) }
    dend_13 { pt3dadd( -8.98526, -103.043, 1.95972, 0.55 ) }
    dend_13 { pt3dadd( -8.95186, -104.33, 2.0654, 0.83 ) }
    dend_13 { pt3dadd( -8.86033, -105.845, 2.2182, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( -8.73033, -107.406, 2.3872, 0.55 ) }
    dend_13 { pt3dadd( -8.554, -109.22, 2.56243, 0.55 ) }
    dend_13 { pt3dadd( -8.31872, -111.486, 2.8072, 0.83 ) }
    dend_13 { pt3dadd( -8.08884, -113.526, 3.0406, 0.83 ) }
    dend_13 { pt3dadd( -7.9104, -115.035, 3.2231, 0.83 ) }
    dend_13 { pt3dadd( -7.63494, -117.025, 3.43997, 0.83 ) }
    dend_13 { pt3dadd( -7.48049, -118.417, 3.57349, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 7/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -8.77469, -97.2348, 1.75213, 0.55 ) }
    dend_12 { pt3dadd( -11.6116, -97.5833, 1.41916, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.48049, -118.417, 3.57349, 0.83 ) }
    dend_15 { pt3dadd( -6.77049, -120.522, 3.84061, 0.83 ) }
    dend_15 { pt3dadd( -6.14517, -122.154, 4.13711, 0.83 ) }
    dend_15 { pt3dadd( -5.15423, -124.686, 4.72699, 0.83 ) }
    dend_15 { pt3dadd( -4.53652, -126.399, 5.12492, 0.28 ) }
    dend_15 { pt3dadd( -3.73838, -128.599, 5.621, 0.83 ) }
    dend_15 { pt3dadd( -2.85868, -131.17, 6.13042, 0.83 ) }
    dend_15 { pt3dadd( -2.26891, -132.908, 6.47062, 0.28 ) }
    dend_15 { pt3dadd( -1.77896, -134.57, 6.83067, 0.83 ) }
    dend_15 { pt3dadd( -1.44458, -136.13, 7.13394, 0.55 ) }
    dend_15 { pt3dadd( -1.19513, -137.992, 7.34798, 0.83 ) }
    dend_15 { pt3dadd( -1.03892, -140.476, 7.48407, 0.83 ) }
    dend_15 { pt3dadd( -1.01438, -142.38, 7.50698, 0.55 ) }
    dend_15 { pt3dadd( -1.04716, -144.348, 7.51142, 0.83 ) }
    dend_15 { pt3dadd( -1.16338, -147.102, 7.51377, 0.83 ) }
    dend_15 { pt3dadd( -1.24846, -149.724, 7.6449, 0.55 ) }
    dend_15 { pt3dadd( -1.30158, -150.969, 7.74727, 0.55 ) }
    dend_15 { pt3dadd( -1.37675, -153.324, 8.03245, 0.83 ) }
    dend_15 { pt3dadd( -1.47679, -155.611, 8.37243, 0.83 ) }
    dend_15 { pt3dadd( -1.4791, -157.473, 8.7419, 0.83 ) }
    dend_15 { pt3dadd( -1.3897, -160.353, 9.53381, 0.55 ) }
    dend_15 { pt3dadd( -1.35451, -161.109, 9.78806, 0.55 ) }
    dend_15 { pt3dadd( -1.21703, -162.474, 10.2974, 0.55 ) }
    dend_15 { pt3dadd( -1.01173, -163.895, 10.9107, 0.83 ) }
    dend_15 { pt3dadd( -0.455013, -166.944, 12.2321, 0.55 ) }
    dend_15 { pt3dadd( -0.298631, -168.429, 12.8048, 0.83 ) }
    dend_15 { pt3dadd( -0.293133, -169.818, 13.2492, 0.83 ) }
    dend_15 { pt3dadd( -0.390822, -171.728, 13.7988, 0.28 ) }
    dend_15 { pt3dadd( -0.473022, -172.584, 14.0263, 0.28 ) }
    dend_15 { pt3dadd( -0.747304, -175.179, 14.7139, 0.83 ) }
    dend_15 { pt3dadd( -1.31259, -178.401, 15.522, 0.55 ) }
    dend_15 { pt3dadd( -1.50723, -179.694, 15.8269, 0.55 ) }
    dend_15 { pt3dadd( -1.69844, -180.78, 16.0757, 0.28 ) }
    dend_15 { pt3dadd( -1.84836, -181.455, 16.2503, 0.55 ) }
    dend_15 { pt3dadd( -2.45774, -183.691, 17.0494, 0.28 ) }
    dend_15 { pt3dadd( -2.81504, -184.794, 17.5927, 0.83 ) }
    dend_15 { pt3dadd( -3.0045, -185.688, 18.1009, 0.83 ) }
    dend_15 { pt3dadd( -3.465, -187.319, 19.1103, 0.28 ) }
    dend_15 { pt3dadd( -3.94537, -188.481, 19.8706, 0.83 ) }
    dend_15 { pt3dadd( -4.91806, -189.991, 20.8866, 0.28 ) }
    dend_15 { pt3dadd( -5.08655, -190.139, 21.0056, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.48049, -118.417, 3.57349, 0.55 ) }
    dend_14 { pt3dadd( -2.35153, -119.514, 4.44149, 0.55 ) }
    dend_14 { pt3dadd( 0.33946, -119.991, 4.61963, 0.28 ) }
    dend_14 { pt3dadd( 1.0307, -120.096, 4.60701, 0.83 ) }
    dend_14 { pt3dadd( 5.43576, -120.561, 4.20838, 0.55 ) }
    dend_14 { pt3dadd( 5.76223, -120.569, 4.1671, 0.83 ) }
    dend_14 { pt3dadd( 7.61109, -120.609, 3.93333, 0.28 ) }
    dend_14 { pt3dadd( 9.73637, -120.559, 3.47341, 0.55 ) }
    dend_14 { pt3dadd( 10.7063, -120.45, 3.3048, 0.55 ) }
    dend_14 { pt3dadd( 12.0189, -120.192, 2.93531, 0.28 ) }
    dend_14 { pt3dadd( 13.9497, -119.471, 1.77421, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_42 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_42, dend_25, dend_0, axon_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, axon_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
    ModelViewParmSubset_5 = new SectionList()
    dend_42 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_46 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_44 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_32 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_27 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_40 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_39 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_37 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_15 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_42 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_43 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_31 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_45 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_17 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_10 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_12 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_21 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_13 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_28 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_46 nseg = 9
    dend_26 nseg = 5
    dend_1 nseg = 3
    dend_44 nseg = 17
    dend_41 nseg = 5
    dend_32 nseg = 3
    dend_27 nseg = 3
    dend_40 nseg = 3
    dend_29 nseg = 3
    dend_5 nseg = 5
    dend_4 nseg = 3
    dend_24 nseg = 5
    dend_39 nseg = 5
    dend_11 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 3
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_DBC_4041312e0d_0_0


