// Cell: bIR215_L4_DBC_01d21bd888_0_0
/*
{
  "id" : "bIR215_L4_DBC_01d21bd888_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.72142, 10.9655, 0.761584, 2.84462", "1.58182, 9.77504, 0.687603, 4.62864", "1.44222, 8.58452, 0.613623, 7.50202", "1.30262, 7.39401, 0.539642, 9.47415", "1.16302, 6.2035, 0.465661, 11.0555", "1.02343, 5.01299, 0.391681, 12.4342", "0.883829, 3.82247, 0.3177, 13.5523", "0.744231, 2.63196, 0.243719, 14.3411", "0.604633, 1.44145, 0.169739, 14.9091", "0.465035, 0.250937, 0.0957582, 15.2878", "0.325437, -0.939575, 0.0217776, 15.5461", "0.185839, -2.13009, -0.0522031, 15.5537", "0.0462405, -3.3206, -0.126184, 15.1598", "-0.0933575, -4.51111, -0.200164, 14.7587", "-0.232956, -5.70162, -0.274145, 14.0408", "-0.372554, -6.89214, -0.348126, 13.1988", "-0.512152, -8.08265, -0.422106, 12.1253", "-0.65175, -9.27316, -0.496087, 10.5491", "-0.791348, -10.4637, -0.570068, 8.74654", "-0.930946, -11.6542, -0.644048, 6.27284", "-1.07054, -12.8447, -0.718029, 3.68979" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.07622, -6.60907, -17.6726, 3.85", "4.07062, -5.94121, -16.7794, 3.85", "5.10348, -5.24753, -15.8517, 3.85" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.643782, -13.0871, -2.03262, 2.64", "-0.451647, -15.032, -0.63699, 1.92", "-0.291147, -16.4937, 0.286143, 1.8", "-0.135399, -17.6607, 0.891339, 1.92", "0.342505, -20.772, 2.20006, 1.32", "0.60072, -22.1806, 2.67956, 1.56", "0.901482, -23.5752, 3.05628, 1.8", "1.19077, -24.6975, 3.17352, 2.04", "1.70645, -26.4373, 3.14109, 2.16", "2.06403, -27.564, 2.97312, 1.32", "2.46256, -28.841, 2.70097, 1.44", "2.91611, -30.5093, 2.41791, 1.44", "3.19626, -31.8189, 2.26531, 1.8", "3.32186, -32.7321, 2.19579, 2.04", "3.36734, -34.0308, 2.15503, 1.68", "3.24857, -35.9744, 2.12177, 1.44", "3.09384, -36.9426, 2.11623, 1.8", "2.90101, -37.7371, 2.12499, 2.04", "2.58491, -38.8221, 2.16058, 1.92", "2.24496, -39.8225, 2.18985, 1.56", "1.79736, -41.0476, 2.16781, 1.56", "1.49612, -41.8658, 2.04887, 0.72", "1.28479, -42.4797, 1.94526, 0.48", "1.12355, -42.9653, 1.88013, 0.48", "0.751352, -44.1153, 1.7727, 1.32", "0.443713, -45.0805, 1.68749, 1.68", "-0.125736, -46.8764, 1.47527, 1.56", "-0.4465, -47.8862, 1.358, 1.92", "-0.911097, -49.3873, 1.19311, 2.64", "-1.23306, -50.503, 1.105, 2.76", "-1.47263, -51.4947, 1.07359, 2.76", "-1.73317, -52.9, 1.11548, 1.68", "-1.83759, -53.8032, 1.17816, 0.96", "-1.89152, -54.9939, 1.24922, 0.96", "-1.85987, -56.5295, 1.32737, 1.32", "-1.72368, -58.7379, 1.46575, 1.8", "-1.64425, -59.7018, 1.5392, 2.16", "-1.54492, -60.8081, 1.61584, 2.28", "-1.42448, -62.1654, 1.67848, 0.84", "-1.36839, -63.0551, 1.6942, 0.84", "-1.3357, -64.3715, 1.66316, 1.08", "-1.42484, -65.7514, 1.58823, 1.68", "-1.61909, -66.8228, 1.52188, 2.52", "-1.74989, -67.2622, 1.47046, 3.0", "-1.93509, -67.7366, 1.392, 2.88", "-2.05551, -67.9976, 1.34608, 2.88", "-2.56077, -68.987, 1.15998, 2.16", "-3.38736, -70.517, 1.00628, 0.96", "-4.02107, -71.6804, 0.922493, 0.48", "-4.24309, -72.0821, 0.894951, 0.48", "-5.02181, -73.4757, 0.809835, 1.92", "-5.77849, -74.7972, 0.748891, 3.12", "-6.63085, -76.3041, 0.738405, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.64622, 11.2669, 0.167383, 2.16", "3.13782, 13.2448, 0.866107, 1.44", "3.63807, 15.1422, 1.50196, 2.16", "4.19952, 17.2126, 2.14935, 3.25", "4.59463, 18.6136, 2.57132, 3.49", "5.05228, 20.196, 3.12245, 3.25", "5.37336, 21.3062, 3.50912, 2.88", "5.62059, 22.1488, 3.84244, 2.88", "5.88768, 23.0172, 4.15295, 2.52", "6.39485, 24.55, 4.72388, 2.16", "7.12681, 26.633, 5.52168, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.07054, -12.8447, -0.718029, 0.781102", "-2.81746, -27.7426, -0.718029, 0.781102", "-4.56437, -42.6406, -0.718029, 0.781102" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "5.10348, -5.24753, -15.8517, 1.56", "4.22195, -3.08445, -16.6683, 1.56", "3.89412, -2.1646, -17.0148, 1.2", "3.69718, -1.50778, -17.2671, 0.96", "3.50534, -0.71856, -17.5379, 0.96", "3.22834, 0.682922, -18.0083, 1.32", "2.97684, 2.29355, -18.4467, 1.32", "2.85211, 3.62168, -18.6695, 1.44", "2.82081, 4.7706, -18.8152, 1.44", "2.86339, 6.00236, -18.9105, 1.44", "2.93033, 6.97925, -18.9269, 1.68", "3.05874, 8.76297, -18.8453, 2.88", "3.09539, 9.52366, -18.763, 3.73", "3.08608, 10.7254, -18.6081, 3.73", "2.96243, 12.287, -18.4105, 2.88", "2.70432, 14.0413, -18.2348, 1.68", "2.53089, 14.854, -18.1674, 1.2", "2.33813, 15.5942, -18.1455, 0.96", "2.04551, 16.5453, -18.1162, 1.68", "1.65557, 17.5928, -18.0843, 2.88", "1.44111, 18.0478, -18.074, 3.49", "1.145, 18.5595, -18.0791, 3.61" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.10348, -5.24753, -15.8517, 1.32", "7.59411, -6.67926, -15.7055, 1.32", "8.60626, -7.23179, -15.7977, 0.84", "10.08, -8.0677, -16.0688, 1.2", "11.6901, -9.08877, -16.5266, 1.44", "13.2942, -10.3703, -17.2047, 1.32", "14.5468, -11.679, -17.8944, 1.56", "15.7106, -13.5384, -18.9968, 1.2", "16.0268, -14.2235, -19.436, 1.2", "16.3397, -15.3989, -20.2298, 1.2", "16.5113, -17.4051, -21.5651, 2.64", "16.4248, -19.0844, -22.5483, 4.45", "16.2877, -20.4178, -23.0928, 4.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-6.63085, -76.3041, 0.738405, 3.0", "-7.56138, -77.2697, 0.997657, 3.0", "-8.08975, -77.9041, 1.15304, 2.76", "-8.90296, -79.0301, 1.46365, 1.92", "-9.16092, -79.4621, 1.59154, 1.92", "-9.65157, -80.4707, 1.88678, 0.6", "-9.93017, -81.1756, 2.07181, 0.48", "-9.98558, -81.4541, 2.12904, 0.48", "-10.052, -82.1849, 2.25348, 0.48", "-10.0438, -83.0732, 2.36238, 0.84", "-9.94468, -84.081, 2.45753, 1.08", "-9.76, -85.073, 2.56449, 1.32", "-9.50531, -86.0491, 2.64863, 0.96", "-9.27837, -86.7343, 2.70002, 0.72", "-9.00081, -87.4444, 2.7389, 0.6", "-8.47636, -88.5573, 2.83478, 0.48", "-7.89933, -89.5873, 2.89807, 0.48", "-7.27763, -90.5596, 2.94177, 1.44", "-6.58453, -91.5615, 2.96571, 1.92", "-6.05253, -92.2988, 2.99842, 2.04", "-5.35915, -93.2996, 3.05792, 1.44", "-4.53495, -94.5516, 3.11538, 0.84", "-4.30416, -94.9407, 3.17037, 0.12", "-4.03049, -95.4977, 3.32581, 0.12", "-3.70559, -96.4241, 3.75556, 1.32", "-3.46789, -97.4179, 4.33814, 1.68", "-3.38566, -97.8895, 4.6363, 1.8", "-3.0606, -99.8366, 5.91384, 1.2", "-2.94657, -100.672, 6.44423, 1.68", "-2.73594, -102.052, 7.32052, 1.2", "-2.61355, -102.929, 7.88854, 0.24", "-2.54804, -103.518, 8.28899, 0.24", "-2.46957, -104.564, 8.97608, 1.92", "-2.47772, -105.276, 9.38608, 1.8", "-2.83694, -107.479, 10.6595, 0.72", "-3.18419, -108.595, 11.29, 0.72", "-3.53666, -109.333, 11.7137, 0.48", "-3.87046, -109.844, 12.0337, 0.36", "-4.48033, -110.612, 12.506, 0.36", "-4.83419, -111.095, 12.7488, 0.36", "-5.51639, -112.288, 13.3815, 0.6", "-5.65642, -112.732, 13.6391, 0.6", "-5.78649, -113.294, 14.0736, 0.36", "-5.88489, -113.71, 14.4556, 0.36", "-5.98262, -114.222, 14.9514, 0.36", "-6.30634, -115.691, 16.4506, 0.36", "-6.40486, -115.977, 16.7555, 0.36", "-6.74273, -116.898, 17.8478, 1.44", "-6.87305, -117.251, 18.3057, 1.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.63085, -76.3041, 0.738405, 0.12", "-6.98419, -78.5245, 0.418218, 0.12", "-7.14871, -79.3229, 0.197006, 0.12", "-7.3125, -80.0617, -0.0470402, 0.96", "-7.47742, -80.9134, -0.340485, 1.32", "-7.57931, -81.5654, -0.572233, 1.32", "-7.7441, -82.9887, -1.08066, 0.6", "-7.84926, -84.0533, -1.59128, 0.36", "-7.85609, -84.3327, -1.74164, 0.36", "-7.79497, -85.0164, -2.11725, 0.36", "-7.72202, -85.4535, -2.32153, 0.36", "-7.65183, -85.9069, -2.48969, 0.36", "-7.59237, -86.753, -2.71487, 0.36", "-7.61376, -87.3183, -2.81685, 0.36", "-7.68946, -88.1287, -3.045, 0.36", "-7.82896, -89.0525, -3.31887, 1.08", "-8.07144, -90.2934, -3.68524, 1.68", "-8.27691, -91.1972, -3.94837, 1.8", "-8.57398, -92.3703, -4.2591, 1.56", "-8.97759, -94.1103, -4.77382, 1.2", "-9.12906, -94.911, -5.01804, 0.36", "-9.18461, -95.3455, -5.12308, 0.36", "-9.22621, -95.8467, -5.16267, 0.36", "-9.27425, -97.0483, -5.13133, 1.56", "-9.28026, -97.9708, -5.04876, 1.92", "-9.26573, -99.1175, -4.86719, 1.92", "-9.18971, -100.687, -4.62222, 1.08", "-9.08218, -102.021, -4.36809, 0.36", "-8.97964, -103.104, -4.13135, 0.36", "-8.91215, -103.856, -3.87148, 0.36", "-8.893, -104.15, -3.75144, 0.36", "-8.856, -104.886, -3.44652, 0.96", "-8.82933, -105.672, -3.09998, 1.8", "-8.80925, -106.563, -2.75649, 2.16", "-8.80547, -109.15, -1.81347, 1.92", "-8.83564, -110.419, -1.42436, 1.8", "-8.88679, -111.509, -1.19934, 1.8", "-8.97613, -112.814, -1.19282, 1.2", "-9.11533, -114.692, -1.71223, 0.12", "-9.13437, -114.979, -1.84692, 0.12", "-9.18285, -115.765, -2.31707, 0.12", "-9.23885, -116.712, -2.88905, 0.84", "-9.30612, -118.284, -3.86351, 1.08", "-9.34335, -119.696, -4.71019, 1.92", "-9.35884, -120.819, -5.27446, 2.88", "-9.37166, -121.53, -5.59827, 2.88", "-9.39061, -122.44, -5.9944, 1.92", "-9.44221, -123.739, -6.50878, 0.36", "-9.48619, -124.351, -6.70036, 0.36", "-9.55522, -125.125, -6.87664, 1.08", "-9.66, -126.093, -7.08189, 1.2", "-9.82979, -127.544, -7.33595, 0.48", "-9.97458, -128.793, -7.52376, 0.48", "-10.1141, -129.888, -7.65613, 0.48", "-10.3414, -131.472, -7.85059, 1.92", "-10.5247, -132.554, -7.97864, 2.4", "-10.698, -133.476, -8.07395, 2.64", "-10.9574, -134.732, -8.17031, 2.64", "-11.1643, -135.629, -8.26123, 2.04", "-11.4798, -136.791, -8.40879, 0.72", "-11.6535, -137.336, -8.47198, 0.72", "-11.9, -138.109, -8.50952, 0.72", "-12.1181, -138.86, -8.53254, 0.72", "-12.3643, -139.845, -8.53466, 0.24", "-12.5497, -140.721, -8.43477, 0.12", "-12.6194, -141.208, -8.32679, 0.12", "-12.6826, -142.123, -8.05665, 0.12", "-12.6447, -143.034, -7.73811, 1.2", "-12.5408, -143.833, -7.44753, 2.28", "-12.1029, -146.139, -6.62748, 1.8", "-11.8176, -147.39, -6.21851, 0.36", "-11.6711, -148.032, -6.06946, 0.36", "-11.4419, -149.345, -5.90446, 0.36", "-11.3149, -150.602, -5.88426, 0.36", "-11.2704, -151.406, -5.99588, 0.36", "-11.2888, -152.651, -6.36851, 0.36", "-11.4699, -154.192, -6.90676, 1.56", "-11.6859, -155.372, -7.33352, 2.4", "-11.8352, -156.025, -7.56968, 2.4", "-12.079, -157.15, -7.9463, 2.4", "-12.3768, -158.877, -8.43409, 0.48", "-12.4665, -159.568, -8.58188, 0.48", "-12.531, -160.661, -8.71721, 0.6", "-12.5185, -161.602, -8.79659, 0.36", "-12.4588, -162.713, -8.8698, 0.36", "-12.3803, -163.779, -8.91267, 0.48", "-12.2981, -164.558, -8.96416, 0.36", "-12.1873, -165.501, -9.07578, 0.36", "-12.1022, -166.427, -9.23811, 0.36", "-12.086, -167.02, -9.39407, 0.48", "-12.1213, -167.904, -9.71548, 0.48", "-12.2405, -168.969, -10.1309, 0.36", "-12.3495, -169.724, -10.4284, 0.84", "-12.5562, -170.946, -10.857, 1.32", "-12.8579, -172.543, -11.344, 2.16", "-13.1204, -173.757, -11.6817, 2.64", "-13.416, -175.008, -11.9931, 2.28", "-13.7787, -176.407, -12.2455, 1.8", "-14.1435, -177.851, -12.4454, 1.2", "-14.3388, -178.68, -12.4392, 0.48", "-14.6127, -180.056, -12.2757, 0.36", "-14.7744, -180.993, -12.09, 0.36", "-14.9036, -181.949, -11.8475, 1.08", "-14.9827, -182.908, -11.5352, 1.08", "-15.0176, -185.638, -10.5744, 1.44", "-14.9499, -187.177, -10.03, 1.44", "-14.8677, -188.244, -9.61044, 1.32", "-14.7818, -189.282, -9.24303, 0.48", "-14.7105, -190.141, -9.01424, 0.48", "-14.6813, -190.666, -8.90258, 1.08", "-14.647, -191.654, -8.77138, 1.68", "-14.6604, -193.27, -8.50564, 2.28", "-14.7305, -194.375, -8.36059, 2.4", "-14.8933, -195.794, -8.26095, 1.32", "-15.0621, -196.753, -8.23165, 0.6", "-15.2025, -197.379, -8.28888, 0.48", "-15.4921, -198.367, -8.56688, 0.48", "-15.7859, -199.247, -8.95412, 0.48", "-16.0965, -200.226, -9.57551, 1.08", "-16.31, -201.068, -10.1643, 1.92", "-16.6612, -202.862, -11.543, 1.92", "-16.8774, -204.335, -12.715, 2.28", "-16.9783, -205.31, -13.4924, 2.76", "-17.1571, -207.678, -15.2954, 2.76", "-17.2639, -209.505, -16.5515, 0.72", "-17.3184, -210.912, -17.3913, 0.72", "-17.3545, -212.006, -17.903, 0.96", "-17.4048, -212.916, -18.2415, 1.56", "-17.5222, -214.011, -18.5582, 1.8", "-17.6687, -214.985, -18.7107, 1.44", "-17.8078, -216.116, -18.8483, 0.48", "-17.8237, -216.566, -18.8817, 0.6", "-17.7844, -217.766, -18.9556, 0.6", "-17.7464, -218.328, -18.9746, 0.48", "-17.6521, -219.626, -18.9952, 0.48", "-17.6003, -220.638, -18.9994, 0.48", "-17.5844, -221.887, -18.9548, 0.48", "-17.6199, -223.126, -18.9176, 0.84", "-17.7463, -224.731, -18.8743, 1.68", "-17.9675, -226.474, -18.8304, 2.4", "-18.1399, -227.609, -18.8002, 2.4", "-18.373, -229.192, -18.7728, 0.6", "-18.4905, -230.291, -18.7551, 0.6", "-18.5227, -231.722, -18.773, 0.6", "-18.4206, -232.991, -18.8101, 0.6", "-18.2319, -234.035, -18.8229, 1.08", "-17.9735, -235.06, -18.8149, 1.44", "-17.7029, -235.967, -18.7933, 0.84", "-17.399, -236.976, -18.7233, 0.96", "-17.0928, -238.133, -18.6237, 0.96", "-16.9253, -238.992, -18.548, 0.72", "-16.8472, -239.636, -18.4951, 0.48", "-16.8129, -240.216, -18.448, 0.48", "-16.826, -241.018, -18.3733, 1.32", "-16.9438, -242.338, -18.2371, 1.8", "-17.0731, -243.301, -18.1941, 2.04", "-17.287, -244.599, -18.2079, 1.92", "-17.4602, -245.566, -18.2547, 1.44", "-17.681, -246.77, -18.3744, 0.48", "-17.8719, -247.794, -18.5507, 0.48", "-18.1633, -249.444, -18.9279, 1.44", "-18.4048, -250.879, -19.2835, 2.52", "-18.5962, -252.125, -19.602, 3.25", "-18.8169, -253.907, -20.0674, 2.28", "-18.9112, -255.145, -20.3723, 1.8", "-18.9385, -256.542, -20.6718, 0.96", "-18.9032, -258.42, -20.9995, 0.96", "-18.8321, -259.829, -21.2374, 0.96", "-18.7128, -261.639, -21.5178, 2.52", "-18.6127, -262.978, -21.6597, 2.52", "-18.4325, -265.215, -21.802, 1.44", "-18.3376, -266.316, -21.8448, 0.96", "-18.2176, -267.601, -21.8922, 0.72", "-18.1641, -268.256, -21.9104, 0.72", "-18.0973, -269.524, -21.9881, 0.72", "-18.0972, -270.474, -22.1012, 0.72", "-18.1158, -271.544, -22.3632, 1.08", "-18.0812, -272.596, -22.8373, 1.44", "-18.0458, -272.981, -23.0631, 1.44", "-17.8489, -274.578, -24.1772, 0.36", "-17.6435, -275.931, -25.2266, 0.36", "-17.3609, -277.527, -26.4726, 1.32", "-16.988, -279.363, -27.8408, 0.48", "-16.82, -280.119, -28.3554, 0.48", "-16.4484, -281.684, -29.3233, 1.92", "-16.3338, -282.169, -29.5799, 2.76", "-16.0953, -283.312, -30.0787, 2.4", "-15.9567, -284.395, -30.3535, 1.32", "-15.9318, -285.02, -30.5319, 0.12", "-15.9593, -285.627, -30.778, 0.12", "-16.0068, -285.93, -30.9325, 0.12", "-16.1987, -286.852, -31.513, 1.08", "-16.3268, -287.481, -31.9742, 1.08", "-16.7401, -290.144, -34.2236, 0.24", "-16.7519, -290.52, -34.5515, 0.24", "-16.6725, -291.229, -35.1339, 0.24", "-16.4197, -292.079, -35.7064, 0.24", "-15.9696, -293.002, -36.1739, 0.24", "-15.2898, -294.174, -36.6993, 1.08", "-14.6618, -295.199, -37.0391, 2.04", "-14.1151, -296.15, -37.3719, 2.04", "-13.4849, -297.332, -37.7968, 1.44", "-13.241, -297.928, -37.9925, 0.96", "-12.5962, -300.162, -38.611, 0.72", "-12.4155, -301.081, -38.7999, 0.36", "-12.3262, -302.173, -39.0088, 0.36", "-12.3337, -302.661, -39.0695, 0.36", "-12.4413, -303.854, -39.0978, 1.32", "-12.5574, -304.854, -39.0306, 2.04", "-12.6167, -305.337, -38.9593, 2.4", "-12.7119, -306.035, -38.8515, 2.4", "-12.9609, -307.866, -38.5684, 0.48", "-13.0871, -308.804, -38.4317, 0.36", "-13.2955, -310.509, -38.2389, 0.36", "-13.4054, -311.467, -38.1405, 0.36", "-13.5243, -312.521, -38.0479, 1.68", "-13.5872, -313.306, -37.9923, 2.16", "-13.6034, -313.81, -37.9713, 2.16", "-13.5882, -315.135, -37.906, 0.96", "-13.5404, -315.923, -37.8978, 0.36", "-13.494, -316.398, -37.9429, 0.36", "-13.3414, -317.567, -38.1895, 0.36", "-13.1851, -318.712, -38.5151, 0.36", "-13.0741, -319.513, -38.7529, 0.36", "-12.9177, -320.782, -39.1279, 1.44", "-12.7759, -322.526, -39.6069, 2.4", "-12.7394, -323.436, -39.8161, 2.52", "-12.7475, -323.87, -39.8953, 2.52", "-12.8567, -325.433, -40.0826, 0.48", "-12.9392, -326.404, -40.1491, 0.36", "-13.124, -328.128, -40.0801, 0.36", "-13.2165, -328.904, -39.9683, 1.32", "-13.3455, -329.875, -39.7919, 1.92", "-13.4509, -330.702, -39.6511, 1.92" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.12681, 26.633, 5.52168, 1.92", "7.1708, 30.2584, 5.48415, 1.92", "7.15716, 32.0092, 5.48958, 2.28", "7.13502, 33.6158, 5.55175, 1.8", "7.11745, 35.4975, 5.65519, 1.8", "7.11513, 38.055, 5.81629, 1.68", "7.14305, 41.0356, 6.01559, 2.4", "7.18438, 43.3057, 6.31822, 2.88", "7.22027, 44.5069, 6.45974, 2.76", "7.27981, 45.6042, 6.60899, 2.76", "7.35791, 46.4334, 6.76734, 2.76", "7.50115, 47.3735, 6.98968, 2.52", "7.93715, 49.371, 7.51424, 1.68", "8.22113, 50.533, 7.83356, 1.44", "8.55339, 51.8507, 8.18498, 1.68", "9.16674, 54.2497, 8.87497, 2.64", "9.54781, 55.711, 9.32022, 2.88", "9.77622, 56.5386, 9.58362, 3.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.12681, 26.633, 5.52168, 0.84", "6.57825, 26.3935, 5.77942, 0.84", "5.69477, 26.2199, 6.1932, 0.84", "5.09937, 26.2707, 6.56858, 0.84", "4.93178, 26.3372, 6.7206, 0.84", "4.5543, 26.66, 7.16923, 0.72", "4.33507, 27.0563, 7.71844, 0.72", "4.29011, 27.3346, 8.11827, 0.72", "4.40629, 27.8675, 8.83701, 0.96", "4.63293, 28.2725, 9.39051, 1.44", "4.97596, 28.702, 9.95232, 1.56", "5.75643, 29.4472, 10.9344, 1.32", "6.32902, 29.8964, 11.5426, 0.48", "6.83362, 30.2417, 11.9833, 0.6", "7.83983, 30.8256, 12.688, 0.6", "8.4511, 31.1235, 12.9953, 1.68", "9.51738, 31.5209, 13.2252, 1.92", "10.2706, 31.7435, 12.9852, 1.56", "12.2063, 32.0015, 10.8448, 0.48", "12.5328, 31.9996, 10.193, 0.48", "12.7698, 31.9817, 9.60607, 0.84", "12.8766, 31.9477, 9.19706, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.56437, -42.6406, -0.718029, 0.461379", "-6.31129, -57.5385, -0.718029, 0.461379", "-8.0582, -72.4364, -0.718029, 0.461379" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "1.145, 18.5595, -18.0791, 0.96", "2.37027, 21.093, -18.8601, 0.96", "2.97847, 22.5728, -19.2084, 0.6", "3.47123, 24.0231, -19.4944, 0.6", "3.68902, 24.8183, -19.6324, 1.32", "3.83783, 25.5388, -19.7191, 1.56", "4.02663, 26.9433, -19.8235, 0.96", "4.02008, 28.6688, -19.7358, 0.6", "3.9463, 29.4849, -19.662, 0.48", "3.85063, 30.1951, -19.5944, 0.48", "3.65009, 31.6421, -19.4682, 0.72", "3.43258, 33.3831, -19.3684, 1.8", "3.29025, 34.9739, -19.3288, 2.04", "3.24633, 36.2666, -19.3338, 2.64", "3.27808, 37.7133, -19.425, 3.25", "3.36367, 39.0195, -19.5745, 3.25", "3.50377, 40.3377, -19.7937, 2.88", "3.74806, 42.0803, -20.1118, 0.84", "3.85594, 42.79, -20.2393, 0.6", "4.10858, 44.6086, -20.5429, 2.4", "4.25883, 45.8901, -20.7333, 3.25", "4.3785, 47.1068, -20.8773, 2.88", "4.55639, 49.1236, -21.059, 0.96", "4.74638, 51.2678, -21.2613, 0.84", "4.86558, 52.5882, -21.3948, 0.48", "4.95167, 53.4882, -21.4815, 0.48", "5.11472, 55.2271, -21.6739, 0.48", "5.23818, 56.59, -21.8511, 1.92", "5.4106, 58.2143, -22.1136, 3.37", "5.56417, 59.2776, -22.3266, 3.49", "5.81597, 60.5468, -22.6194, 3.0" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "1.145, 18.5595, -18.0791, 0.84", "-0.896454, 19.6383, -18.4406, 0.84", "-1.38444, 20.0532, -18.6389, 0.72", "-1.70035, 20.4417, -18.8363, 0.72", "-1.97121, 20.9693, -19.1572, 0.72", "-2.35733, 21.9471, -19.9487, 0.84", "-2.80389, 23.1344, -21.0198, 0.72", "-3.00316, 23.9886, -21.846, 0.48", "-3.16772, 24.7935, -22.6452, 0.48", "-3.45427, 26.1975, -24.0537, 0.72", "-3.81519, 27.6541, -25.5288, 0.48", "-3.94167, 28.0132, -25.9304, 0.48", "-4.09102, 28.3168, -26.263, 0.48", "-4.42453, 28.8561, -26.8423, 1.32", "-4.80619, 29.3765, -27.4058, 2.04", "-5.37846, 30.0839, -28.1154, 1.56", "-6.57444, 31.6347, -29.5758, 0.36", "-6.84916, 32.0036, -29.9451, 0.36", "-7.87896, 33.3968, -31.4624, 2.4", "-8.30172, 33.9792, -32.1644, 3.25", "-8.56258, 34.3484, -32.6489, 3.73" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "16.2877, -20.4178, -23.0928, 0.24", "15.8081, -21.2746, -23.5142, 0.24", "15.6592, -21.5823, -23.6742, 0.24", "15.4142, -22.174, -23.9631, 1.92", "15.2141, -22.6444, -24.1823, 2.52", "15.0408, -23.0227, -24.3536, 2.4", "14.8538, -23.4107, -24.5264, 1.8", "14.6196, -23.9211, -24.7448, 0.24", "14.3246, -24.5236, -24.9793, 0.24", "14.0134, -25.1248, -25.1837, 0.24", "13.7866, -25.5389, -25.3088, 0.24", "13.5694, -25.9167, -25.4294, 1.68", "13.209, -26.5107, -25.6213, 1.92", "12.7937, -27.1638, -25.8433, 2.28", "12.4597, -27.6672, -26.029, 3.12", "12.111, -28.178, -26.227, 3.12", "11.4607, -29.0807, -26.5728, 0.24", "11.1945, -29.4216, -26.7003, 0.24", "11.1313, -29.4946, -26.7276, 0.48", "10.8595, -29.7723, -26.8262, 0.48", "10.463, -30.1356, -26.9373, 0.48", "10.1926, -30.386, -26.9853, 0.48", "10.0623, -30.5219, -26.9851, 0.12", "9.84348, -30.8289, -26.9824, 0.12", "9.74181, -31.0025, -26.9812, 0.12", "9.61909, -31.2628, -26.9837, 0.72", "9.408, -31.7903, -27.0052, 0.96", "9.2835, -32.1224, -27.0402, 0.24", "9.04208, -32.7737, -27.1345, 0.24", "8.93601, -33.0581, -27.1683, 0.96", "8.81028, -33.386, -27.203, 1.44", "8.64659, -33.7852, -27.2449, 1.56", "8.40481, -34.3243, -27.3061, 0.48", "8.24175, -34.6728, -27.3495, 0.24", "7.93866, -35.3137, -27.4262, 1.68", "7.7408, -35.7675, -27.4877, 2.88", "7.47078, -36.4315, -27.565, 2.88", "7.145, -37.315, -27.6567, 0.24", "6.90097, -38.0599, -27.7206, 0.24", "6.81937, -38.3412, -27.7451, 0.24", "6.59837, -39.2159, -27.8398, 0.24", "6.47637, -39.7766, -27.8973, 1.8", "6.36455, -40.398, -27.9516, 2.76", "6.23656, -41.2544, -28.017, 0.48", "6.16212, -41.7403, -28.0532, 0.48", "6.09113, -42.1179, -28.0842, 0.6", "5.99297, -42.5355, -28.1106, 0.6", "5.90533, -42.855, -28.1408, 0.36", "5.7993, -43.1937, -28.1743, 0.36", "5.59627, -43.7304, -28.2718, 0.48", "5.30326, -44.4303, -28.4339, 0.48", "5.09101, -44.8946, -28.5592, 1.44", "4.82124, -45.4764, -28.7588, 2.76", "4.61058, -45.9619, -28.9526, 3.0", "4.21706, -46.9696, -29.4463, 0.12", "4.11062, -47.265, -29.613, 0.12", "3.96669, -47.6809, -29.8737, 0.12", "3.81052, -48.1578, -30.1882, 1.32", "3.66386, -48.6188, -30.4849, 2.4", "3.35117, -49.5339, -31.0468, 0.12", "3.18557, -49.9811, -31.2917, 0.12", "3.07162, -50.2442, -31.4295, 0.84", "2.92916, -50.5311, -31.5696, 0.96", "2.56345, -51.2045, -31.8513, 0.12", "2.28008, -51.7071, -32.0406, 0.12", "2.06212, -52.1075, -32.1635, 1.32", "1.86675, -52.4909, -32.2759, 1.8", "1.61586, -53.0129, -32.4168, 0.12", "1.28941, -53.7016, -32.587, 0.12", "1.11885, -54.0782, -32.6695, 1.56", "0.936093, -54.5325, -32.7608, 2.52", "0.788494, -54.9334, -32.8348, 2.64", "0.49382, -55.8, -32.9811, 1.32", "0.361008, -56.1921, -33.042, 0.12", "0.335706, -56.2641, -33.0533, 0.24", "0.153355, -56.7675, -33.1436, 0.24", "-0.0600841, -57.3549, -33.2595, 0.24", "-0.198639, -57.7443, -33.3695, 0.24", "-0.290689, -58.0114, -33.4644, 0.24", "-0.379649, -58.2715, -33.5677, 1.56", "-0.526437, -58.6752, -33.7388, 2.28", "-0.666456, -59.0422, -33.9114, 2.28", "-0.977764, -59.8659, -34.3216, 0.48", "-1.16052, -60.3417, -34.5614, 0.48", "-1.18402, -60.402, -34.5908, 0.72", "-1.35821, -60.8237, -34.7887, 0.96", "-1.51505, -61.1778, -34.9381, 0.48", "-1.60632, -61.3606, -35.0181, 0.48", "-1.76812, -61.6586, -35.1259, 0.48", "-1.98842, -62.0529, -35.2632, 0.6", "-2.06197, -62.1872, -35.3067, 0.24", "-2.28181, -62.6145, -35.4358, 0.24", "-2.57624, -63.2475, -35.605, 1.56", "-2.79707, -63.7618, -35.7382, 2.4", "-2.98314, -64.2257, -35.8542, 2.52", "-3.08263, -64.4856, -35.9162, 2.52", "-3.40492, -65.336, -36.0947, 0.24", "-3.77617, -66.3883, -36.2793, 0.24", "-3.86675, -66.668, -36.3201, 0.96", "-3.98677, -67.0742, -36.381, 1.44", "-4.05894, -67.3508, -36.4171, 1.68", "-4.19593, -67.9539, -36.498, 0.24", "-4.38568, -69.007, -36.6358, 0.24", "-4.4628, -69.5666, -36.7135, 1.56", "-4.50338, -69.9176, -36.7685, 2.16", "-4.54145, -70.2955, -36.8372, 1.8", "-4.62177, -70.9367, -36.9802, 0.12", "-4.68258, -71.2959, -37.0822, 0.12", "-4.70165, -71.3611, -37.1034, 0.6", "-4.80902, -71.6262, -37.1931, 0.12", "-4.90554, -71.8191, -37.2576, 0.12", "-5.16752, -72.2832, -37.402, 0.12", "-5.29174, -72.5008, -37.4572, 0.6", "-5.49549, -72.8755, -37.5058, 0.6", "-5.62562, -73.132, -37.5149, 0.12", "-5.77882, -73.4466, -37.5066, 0.12", "-5.91012, -73.7086, -37.494, 0.6", "-6.09372, -74.0932, -37.4682, 0.6", "-6.4322, -74.8281, -37.4167, 0.12", "-6.64928, -75.3178, -37.3852, 0.12", "-6.85954, -75.8111, -37.3625, 1.44", "-7.06798, -76.3218, -37.3541, 2.4", "-7.16075, -76.5613, -37.3598, 2.52", "-7.30094, -76.9459, -37.3915, 2.16", "-7.43006, -77.4235, -37.4638, 0.12", "-7.51529, -77.8411, -37.4996, 0.36", "-7.55963, -78.1165, -37.509, 0.12", "-7.58972, -78.3281, -37.5075, 0.12", "-7.63071, -78.6386, -37.5039, 0.12", "-7.69665, -79.1908, -37.4953, 0.12", "-7.7606, -79.8295, -37.4895, 0.12", "-7.77886, -79.9707, -37.4937, 0.12", "-7.85933, -80.3916, -37.527, 0.12", "-7.97633, -80.8694, -37.6065, 1.8", "-8.03163, -81.0704, -37.6545, 2.28", "-8.16433, -81.4677, -37.7412, 1.92", "-8.3892, -82.1234, -37.8501, 0.36", "-8.56971, -82.6259, -37.9113, 0.36", "-8.7361, -83.0923, -37.9504, 1.2", "-8.87926, -83.5132, -37.9368, 0.72", "-9.11524, -84.387, -37.9074, 0.12", "-9.302, -85.1816, -37.8819, 0.12", "-9.40961, -85.7052, -37.8678, 1.68", "-9.49452, -86.1117, -37.858, 1.8", "-9.73618, -87.1895, -37.822, 1.44", "-9.98748, -88.2676, -37.8342, 0.24", "-10.2169, -89.3036, -37.8619, 0.12", "-10.3243, -89.7846, -37.8626, 0.12", "-10.5252, -90.6114, -37.8411, 0.12", "-10.6286, -91.0113, -37.8367, 1.2", "-10.7656, -91.5593, -37.8465, 2.52", "-10.9813, -92.4269, -37.769, 0.48", "-11.0209, -92.6295, -37.747, 0.48", "-11.1011, -93.1339, -37.6896, 0.48", "-11.1677, -93.6863, -37.6368, 0.72", "-11.2485, -94.4018, -37.5794, 0.24", "-11.3487, -95.1601, -37.4754, 0.12", "-11.4071, -95.7328, -37.3991, 0.12", "-11.4211, -96.0484, -37.3629, 1.08", "-11.4213, -96.401, -37.3115, 1.32", "-11.408, -96.6908, -37.2719, 1.08", "-11.3576, -97.4471, -37.1855, 0.36", "-11.2582, -98.5759, -37.1213, 0.36", "-11.1872, -99.3371, -37.073, 1.56", "-11.1264, -100.001, -37.0353, 2.16", "-11.0552, -100.535, -37.0113, 1.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "16.2877, -20.4178, -23.0928, 0.36", "17.7236, -21.6911, -23.4716, 0.36", "18.2185, -21.8951, -23.7336, 0.36", "18.4934, -21.9275, -23.9321, 0.36", "18.7442, -21.9395, -24.118, 0.36", "19.3521, -21.9707, -24.5553, 0.72", "20.2827, -22.052, -25.2137, 0.96", "20.8748, -22.041, -25.6777, 0.96", "21.7075, -22.0464, -26.3355, 0.48", "22.4756, -22.1162, -26.9298, 0.36", "22.8642, -22.2399, -27.2166, 0.36", "23.1677, -22.5229, -27.3909, 0.36", "23.2594, -22.7163, -27.4159, 0.36", "23.4903, -23.3746, -27.4376, 0.36", "23.7086, -23.9943, -27.4245, 1.56", "24.014, -24.7446, -27.3963, 2.52", "24.3481, -25.411, -27.4077, 2.4", "25.1077, -26.594, -27.4867, 0.36", "25.4024, -26.9624, -27.5365, 0.36", "26.0287, -27.624, -27.6662, 0.36", "26.6417, -28.1906, -27.8183, 0.36", "27.5011, -28.9161, -28.0397, 1.44", "28.424, -29.6373, -28.2899, 3.25", "29.4638, -30.3969, -28.5892, 4.69", "29.6558, -30.5426, -28.6496, 4.93", "30.7819, -31.4947, -29.0494, 3.61" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-13.4509, -330.702, -39.6511, 0.12", "-13.6407, -331.694, -40.62, 0.12", "-13.7064, -332.144, -41.0553, 0.12", "-13.7205, -332.274, -41.2187, 0.12", "-13.7549, -332.419, -41.4084, 0.36", "-14.0066, -333.216, -42.4241, 0.12", "-14.0823, -333.45, -42.7612, 0.12", "-14.0823, -333.45, -42.7612, 0.36", "-14.3385, -334.302, -44.0496, 0.36", "-14.4876, -334.857, -44.8499, 2.52", "-14.538, -335.076, -45.1429, 2.88", "-15.0007, -337.051, -47.5419, 0.24", "-15.0636, -337.329, -47.8546, 0.12", "-15.1124, -337.597, -48.1162, 0.12", "-15.1524, -337.954, -48.3817, 0.48", "-15.1651, -338.348, -48.6251, 0.48", "-15.1746, -338.755, -48.8254, 0.12", "-15.1971, -339.48, -48.9905, 0.12", "-15.1968, -339.908, -49.1274, 0.12", "-15.1891, -340.398, -49.3033, 0.84", "-15.1975, -340.715, -49.4106, 0.84", "-15.2316, -341.912, -49.784, 0.12", "-15.2423, -342.434, -49.9242, 0.12", "-15.3179, -343.784, -50.2584, 2.64", "-15.3668, -344.207, -50.356, 2.28", "-15.6027, -345.375, -50.509, 0.12", "-15.728, -345.785, -50.5104, 0.12", "-16.0792, -346.544, -50.3948, 0.12", "-16.4364, -347.06, -50.2672, 1.2", "-16.5053, -347.134, -50.2385, 1.44", "-17.58, -348.098, -49.7814, 0.12", "-17.938, -348.348, -49.6157, 0.12", "-18.2847, -348.537, -49.4473, 0.12", "-18.7695, -348.732, -49.178, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-13.4509, -330.702, -39.6511, 0.6", "-12.8553, -331.74, -40.9894, 0.6", "-12.7913, -331.869, -41.1765, 0.6", "-12.5364, -332.423, -41.9776, 1.32", "-12.2802, -333.028, -42.8114, 2.28", "-11.9922, -333.709, -43.7488, 2.04", "-11.0456, -335.945, -46.8302, 0.96", "-10.8276, -336.475, -47.6515, 0.48", "-10.7168, -336.751, -48.105, 0.48", "-10.6099, -337.045, -48.6345, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "9.77622, 56.5386, 9.58362, 1.2", "9.8051, 58.3474, 9.29313, 1.2", "9.84642, 60.0397, 9.18171, 1.32", "9.87718, 61.0448, 9.15654, 1.44", "9.93405, 62.3334, 9.16812, 0.96", "10.0569, 64.0677, 9.20495, 1.08", "10.2952, 66.3999, 9.26361, 1.56", "10.6586, 68.4086, 9.38238, 0.96", "10.9469, 69.527, 9.47137, 0.6", "11.3007, 70.5926, 9.56289, 1.2", "11.7003, 71.592, 9.65304, 2.04", "12.0494, 72.3688, 9.72166, 2.16", "12.776, 73.9353, 9.87635, 1.2", "13.2611, 75.0667, 9.98485, 0.84", "13.6715, 76.2668, 10.0544, 0.48", "13.8823, 77.1118, 10.0766, 0.48", "14.1569, 79.0194, 10.0673, 0.48", "14.2456, 80.4253, 10.0225, 0.84", "14.2538, 82.0134, 9.92464, 1.92", "14.2337, 84.0095, 9.73438, 2.52", "14.2311, 85.0295, 9.60754, 2.28", "14.2855, 86.7094, 9.4025, 0.6", "14.3341, 87.2857, 9.34363, 0.6", "14.4292, 88.1158, 9.29208, 0.48", "14.6184, 89.5236, 9.28569, 0.48", "14.7867, 90.585, 9.35449, 0.96", "14.9511, 91.5311, 9.43795, 1.8", "15.2125, 92.8701, 9.60402, 2.04", "15.4715, 94.2824, 9.78981, 2.04", "15.7725, 96.3176, 10.0776, 2.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "9.77622, 56.5386, 9.58362, 1.32", "11.0934, 58.3989, 9.80226, 1.32", "11.6558, 59.2029, 9.78595, 0.96", "12.6401, 60.5149, 9.63487, 1.32", "13.2566, 61.2254, 9.46436, 1.68", "14.0617, 62.0263, 9.19945, 1.2", "15.0556, 62.9176, 8.84255, 0.84", "16.1326, 63.7746, 8.35809, 0.72", "16.754, 64.233, 8.08932, 0.84", "17.8396, 64.8751, 7.58872, 0.6", "18.5483, 65.208, 7.26395, 0.6", "19.1411, 65.402, 7.01107, 1.32", "20.6945, 65.7925, 6.62652, 1.8", "21.6655, 66.1955, 6.66043, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "5.81597, 60.5468, -22.6194, 0.48", "5.92579, 62.6309, -22.4423, 0.48", "5.94021, 63.8653, -22.3158, 0.48", "5.9261, 64.6992, -22.2121, 0.48", "5.88338, 66.1826, -22.0358, 0.72", "5.84894, 67.0728, -21.9384, 0.48", "5.79886, 68.1401, -21.8306, 0.48", "5.6239, 69.6676, -21.7095, 0.48", "5.44496, 71.0402, -21.6027, 1.8", "5.3662, 71.7468, -21.5526, 2.64", "5.30396, 72.5556, -21.5066, 2.88", "5.25721, 73.4945, -21.4423, 2.88", "5.2214, 74.5653, -21.3668, 2.04", "5.19678, 75.9239, -21.2785, 0.48", "5.1931, 76.4667, -21.2399, 0.36", "5.19544, 78.474, -21.0977, 0.36", "5.2095, 79.7633, -21.0141, 1.44", "5.27632, 80.9602, -20.9531, 2.52", "5.3958, 82.1426, -20.9106, 2.64", "5.51355, 82.9855, -20.8952, 2.52", "5.82196, 84.8462, -20.8976, 0.48", "5.96266, 85.6296, -20.9167, 0.36", "6.2234, 87.1426, -20.9754, 0.36", "6.33941, 87.8577, -20.994, 0.36", "6.51132, 89.045, -21.0272, 0.36", "6.6774, 90.3758, -21.062, 1.44", "6.74154, 91.1808, -21.0828, 1.56", "6.76721, 92.2218, -21.1181, 0.24", "6.71337, 93.4274, -21.1653, 0.24", "6.63854, 94.4676, -21.1917, 0.72", "6.59915, 94.9933, -21.1972, 0.72", "6.55679, 95.6037, -21.1944, 0.48", "6.54117, 96.0072, -21.1866, 0.36", "6.54638, 96.6676, -21.1437, 0.36", "6.59511, 97.4654, -21.0368, 0.84", "6.7527, 98.7684, -20.817, 2.4", "6.82679, 99.295, -20.7352, 3.0", "6.98599, 100.337, -20.5822, 3.0", "7.17603, 101.643, -20.4164, 1.68", "7.35357, 102.949, -20.2749, 0.36", "7.47859, 104.017, -20.1887, 0.36", "7.57579, 105.393, -20.1119, 0.36", "7.59609, 106.472, -20.087, 1.68", "7.57676, 107.192, -20.0963, 2.52", "7.53932, 107.752, -20.125, 2.64", "7.47521, 108.467, -20.1723, 2.28", "7.37728, 109.624, -20.2449, 0.48", "7.32475, 111.227, -20.3763, 0.48", "7.33929, 112.428, -20.4993, 0.48", "7.37198, 112.968, -20.5567, 0.96", "7.45744, 113.902, -20.6525, 1.56", "7.54261, 114.58, -20.7142, 1.56", "7.74432, 115.912, -20.8148, 0.48", "7.81037, 116.32, -20.8497, 0.12", "7.99223, 117.501, -20.9554, 0.12", "8.17841, 118.824, -21.0719, 2.16", "8.2607, 119.492, -21.1264, 2.88", "8.31271, 120.027, -21.1583, 3.0" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "5.81597, 60.5468, -22.6194, 0.48", "5.73467, 64.0364, -25.5519, 0.48", "5.70141, 64.5397, -25.9745, 0.48", "5.62668, 65.6088, -26.9468, 0.72", "5.59944, 66.3417, -27.6636, 0.72", "5.57823, 67.7267, -29.007, 0.24", "5.57688, 68.3489, -29.6148, 0.12", "5.57, 69.2314, -30.4369, 0.84", "5.62542, 70.3853, -31.5758, 0.12", "5.73608, 71.6418, -32.8252, 0.12", "5.80825, 72.367, -33.4888, 1.68", "5.88425, 73.256, -34.1842, 2.4", "6.00977, 74.8024, -35.3565, 1.8", "6.12461, 76.2864, -36.4629, 0.12", "6.13966, 76.9564, -36.9469, 0.12", "6.08651, 78.2685, -37.9321, 1.92", "6.03639, 79.1405, -38.6615, 2.4", "5.90419, 81.4109, -40.6951, 0.6", "5.81782, 82.4498, -41.674, 0.48", "5.73664, 83.2824, -42.4659, 0.48", "5.63652, 84.5003, -43.6358, 1.2", "5.55916, 85.8781, -45.0295, 0.48", "5.54523, 86.4055, -45.5383, 0.12", "5.53696, 87.512, -46.3863, 0.12", "5.55508, 88.2172, -46.8442, 0.72", "5.62845, 88.9307, -47.3443, 0.72", "5.77294, 90.6021, -48.5575, 0.12", "5.80018, 90.9785, -48.8541, 0.12", "5.91218, 92.1066, -49.7983, 2.28", "6.0116, 92.7046, -50.3752, 2.52", "6.56919, 95.3233, -53.1471, 0.12", "6.8519, 96.4039, -54.2844, 0.12", "7.18326, 97.5148, -55.4248, 1.44", "7.38157, 98.1364, -56.0696, 1.8", "7.83424, 99.4725, -57.4959, 1.32", "8.05969, 100.242, -58.3068, 0.12", "8.35409, 101.446, -59.437, 0.12", "8.71296, 103.107, -60.9406, 1.56", "8.79799, 103.659, -61.4183, 1.92", "8.95941, 105.441, -62.9454, 0.12", "9.01275, 106.527, -63.8475, 0.12", "9.03538, 107.193, -64.4106, 0.96", "9.04404, 107.44, -64.628, 0.96", "9.14132, 108.494, -65.6328, 0.12", "9.24484, 109.313, -66.4725, 0.12", "9.39102, 110.502, -67.7594, 1.32", "9.45691, 111.053, -68.3656, 1.8", "9.51812, 111.77, -69.1399, 1.32", "9.65795, 113.804, -71.2368, 0.12", "9.68499, 114.039, -71.5159, 0.12", "9.81439, 114.883, -72.5634, 0.36", "9.88976, 115.59, -73.4442, 0.36", "10.0349, 116.558, -74.6762, 1.92", "10.2059, 117.382, -75.685, 2.76", "11.0931, 121.149, -79.9555, 0.36", "11.178, 121.466, -80.3207, 0.36", "11.5321, 122.663, -81.7062, 0.36", "11.8918, 123.853, -83.0829, 0.36", "12.1074, 124.527, -83.8447, 0.36", "12.5212, 125.7, -85.1054, 0.72", "13.115, 127.125, -86.5132, 0.12", "13.2712, 127.466, -86.8701, 0.12", "13.59, 128.089, -87.5649, 1.92", "14.1245, 129.323, -89.0106, 2.52", "14.758, 130.625, -90.7221, 1.44", "15.3074, 131.41, -91.8818, 0.12" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-8.56258, 34.3484, -32.6489, 0.12", "-9.39224, 37.0867, -33.6265, 0.12", "-9.76011, 38.2766, -34.0808, 0.6", "-10.0198, 39.193, -34.4289, 0.12", "-10.1347, 39.6113, -34.5789, 0.12", "-10.2931, 40.1773, -34.7636, 0.12", "-10.483, 40.8571, -34.9638, 0.24", "-10.6483, 41.4932, -35.1631, 0.12", "-10.7586, 42.0461, -35.4091, 0.12", "-10.9105, 42.9672, -35.8734, 0.12", "-11.0319, 43.8761, -36.3684, 1.32", "-11.0787, 44.5013, -36.7046, 1.8", "-11.1385, 46.2877, -37.617, 0.84", "-11.094, 47.3999, -38.3174, 0.12", "-11.0488, 47.7564, -38.5582, 0.12", "-10.8372, 48.8963, -39.3046, 1.8", "-10.6923, 49.5862, -39.7262, 2.16", "-10.5359, 50.2326, -40.1054, 1.8", "-9.63074, 53.276, -42.0055, 0.24", "-9.20453, 54.5145, -42.8283, 0.24", "-8.75928, 55.762, -43.6722, 0.24", "-8.55664, 56.3158, -44.0625, 0.24", "-7.89276, 58.1306, -45.4196, 2.28", "-6.974, 60.6369, -47.3516, 0.24", "-6.83223, 61.0394, -47.6461, 0.24", "-6.40895, 62.2323, -48.5838, 0.24", "-5.93386, 63.5191, -49.6091, 1.44", "-5.57576, 64.5821, -50.399, 1.8", "-5.2255, 65.9321, -51.2284, 0.12", "-5.02841, 66.9782, -51.7441, 0.12", "-4.92997, 67.5275, -52.018, 0.96", "-4.84316, 67.9917, -52.2383, 1.2", "-4.65081, 69.1797, -52.7225, 0.12", "-4.50183, 70.1144, -53.0798, 0.12", "-4.40269, 70.6625, -53.3052, 0.36", "-4.17377, 71.8192, -53.9101, 0.12", "-4.08403, 72.379, -54.2194, 0.12", "-3.95832, 73.3471, -54.7691, 0.48", "-3.81082, 74.6169, -55.5307, 0.48", "-3.68281, 75.946, -56.3399, 2.28", "-3.51633, 78.1209, -57.623, 0.12", "-3.47076, 79.2379, -58.2508, 0.12", "-3.46009, 79.8519, -58.6081, 0.12", "-3.48396, 81.0051, -59.2727, 1.08", "-3.52895, 81.6067, -59.6478, 1.2", "-3.65696, 82.6073, -60.4995, 0.12", "-3.80327, 83.3473, -61.2762, 0.12", "-4.0181, 84.4597, -62.5781, 1.44", "-4.0964, 84.8441, -63.0432, 2.04", "-4.26697, 85.5373, -63.8964, 1.68", "-4.84008, 87.6198, -66.5653, 0.24", "-5.0503, 88.293, -67.467, 0.24", "-5.28261, 89.0035, -68.4346, 0.12", "-5.53547, 89.6736, -69.2962, 0.72", "-5.65577, 89.9999, -69.6794, 0.72", "-5.78714, 90.3011, -69.9953, 0.12", "-6.2875, 91.3057, -70.9003, 0.12", "-6.54138, 91.7328, -71.3706, 0.12", "-7.11565, 92.4591, -72.3025, 1.68", "-7.24335, 92.6125, -72.508, 1.68", "-8.23834, 93.9837, -74.2977, 0.12", "-8.56642, 94.4971, -74.9058, 0.12", "-8.8172, 95.0146, -75.4718, 0.24", "-9.04898, 95.6063, -76.0755, 0.24", "-9.37811, 96.6206, -77.0324, 0.24", "-9.71159, 97.689, -77.8948, 1.56", "-9.89487, 98.382, -78.36, 2.04", "-10.392, 100.352, -79.5407, 0.36", "-10.529, 100.963, -79.8672, 0.48", "-10.709, 101.911, -80.3773, 0.48", "-10.9426, 102.938, -80.9148, 0.48", "-11.083, 103.456, -81.1949, 0.24", "-11.2493, 104.032, -81.5754, 0.24", "-11.4959, 104.84, -82.1893, 0.24", "-11.8328, 105.935, -83.2167, 1.08", "-11.9973, 106.396, -83.7498, 1.08", "-12.2713, 106.948, -84.6853, 0.36", "-12.6607, 107.47, -85.8499, 0.36", "-12.8053, 107.599, -86.231, 0.36", "-12.9827, 107.705, -86.6307, 0.36", "-13.2328, 107.826, -87.1475, 0.36", "-14.3332, 108.335, -89.3476, 1.68", "-14.5474, 108.426, -89.7327, 2.4", "-14.7086, 108.495, -89.9983, 2.64", "-16.4498, 109.229, -92.7191, 0.6", "-16.6744, 109.309, -93.0435, 0.12", "-16.9892, 109.4, -93.4298, 0.12", "-17.3909, 109.48, -93.8419, 0.6", "-17.8055, 109.551, -94.267, 0.12", "-18.2821, 109.608, -94.6841, 0.12", "-19.091, 109.611, -95.1889, 1.44", "-19.7642, 109.614, -95.6009, 1.08", "-21.4882, 109.682, -96.5909, 0.12", "-22.2203, 109.762, -96.9501, 0.12", "-23.1304, 109.915, -97.3113, 0.84", "-23.497, 110.0, -97.4557, 0.84", "-23.7573, 110.068, -97.5501, 0.12", "-24.3545, 110.194, -97.7331, 0.12", "-25.2218, 110.344, -97.9249, 1.44", "-25.522, 110.386, -98.0036, 1.56", "-26.7246, 110.565, -98.3759, 0.12", "-27.6366, 110.713, -98.6574, 0.12", "-28.1946, 110.798, -98.8289, 1.08", "-28.8587, 110.881, -99.0708, 1.92", "-29.3928, 110.939, -99.3064, 1.56", "-30.376, 111.054, -99.8022, 0.12", "-30.7674, 111.1, -100.019, 0.12", "-31.0053, 111.132, -100.172, 0.48", "-31.9978, 111.291, -100.895, 0.48", "-32.4305, 111.375, -101.222, 0.12", "-33.1344, 111.549, -101.583, 0.12", "-33.4269, 111.719, -101.859, 0.84", "-33.6916, 111.902, -102.176, 1.2", "-34.1487, 112.2, -102.627, 0.12", "-34.904, 112.478, -102.858, 0.12", "-37.0233, 112.443, -102.015, 2.88", "-41.4342, 111.611, -98.8069, 0.96", "-42.2099, 111.34, -97.9875, 0.96", "-46.1721, 109.381, -92.6637, 0.12", "-46.6289, 109.102, -91.9456, 0.12", "-46.9589, 108.855, -91.3486, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-8.56258, 34.3484, -32.6489, 0.48", "-10.7338, 34.3507, -33.8037, 0.48", "-11.6501, 34.4649, -34.6978, 0.48", "-12.773, 34.8417, -36.3553, 0.48", "-13.3333, 35.0973, -37.2439, 2.16", "-13.6063, 35.246, -37.6971, 2.52", "-13.9815, 35.4763, -38.338, 2.52", "-15.4164, 36.6237, -41.4503, 1.44", "-16.3128, 37.3446, -43.5123, 0.36", "-16.6412, 37.5777, -44.2697, 0.48", "-17.2605, 37.9413, -45.6892, 0.6", "-17.8797, 38.2101, -47.4294, 0.6", "-18.6106, 38.4601, -49.8217, 0.6", "-18.9242, 38.5374, -50.8629, 1.92", "-19.1933, 38.576, -51.7575, 2.64", "-19.4588, 38.6004, -52.6458, 2.64", "-21.8881, 38.7137, -60.6245, 1.68", "-22.9865, 38.7572, -64.0875, 0.72", "-23.2064, 38.7749, -64.731, 1.56", "-23.6808, 38.8313, -66.0495, 1.92", "-23.906, 38.8629, -66.6139, 2.28", "-24.1099, 38.8946, -67.0485, 2.28", "-26.4667, 39.2045, -70.0638, 0.24", "-26.8657, 39.2434, -70.5463, 0.12", "-27.137, 39.2604, -70.9432, 0.12", "-27.6052, 39.277, -71.7016, 0.12", "-28.4516, 39.2699, -73.118, 1.32", "-28.8427, 39.2444, -73.7969, 2.16", "-29.4739, 39.1556, -74.8798, 2.4", "-31.2705, 38.7771, -77.9949, 0.72", "-31.7648, 38.6362, -78.855, 0.84", "-32.0701, 38.5202, -79.3981, 1.08", "-33.0041, 38.0884, -80.9721, 0.48", "-33.2395, 37.9698, -81.3453, 0.12", "-33.711, 37.7104, -82.0186, 0.48", "-33.8905, 37.6009, -82.2216, 0.48", "-34.6799, 37.0705, -83.1144, 0.12", "-34.97, 36.8598, -83.4377, 0.12", "-35.3409, 36.5681, -83.8818, 0.12", "-35.5496, 36.4057, -84.2551, 0.12", "-35.7658, 36.2452, -84.734, 0.12", "-35.9733, 36.1006, -85.1585, 0.48", "-36.0649, 36.0293, -85.3401, 0.48", "-36.7347, 35.3868, -86.6933, 0.48", "-37.1333, 34.9165, -87.4872, 0.12", "-37.2844, 34.7527, -87.7463, 0.12", "-37.6683, 34.3137, -88.3288, 0.12", "-38.3311, 33.5176, -89.3482, 1.8", "-38.8016, 33.0051, -89.9685, 2.76", "-39.1016, 32.6762, -90.3077, 2.76", "-39.6489, 32.0433, -90.9061, 1.92", "-40.2072, 31.3393, -91.5491, 1.92", "-41.4229, 29.5813, -93.1951, 0.12", "-41.8879, 28.8285, -93.8741, 0.12", "-42.1099, 28.4146, -94.2805, 0.12", "-42.321, 27.9793, -94.6901, 0.48", "-42.5023, 27.5558, -95.0787, 0.6", "-42.8916, 26.7012, -95.8705, 0.12", "-43.0236, 26.3404, -96.1504, 0.12", "-43.5686, 24.5917, -97.5639, 2.4", "-43.8943, 23.7345, -98.3413, 3.25" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-11.0552, -100.535, -37.0113, 0.12", "-11.486, -101.682, -37.5331, 0.12", "-11.697, -102.035, -37.6799, 0.12", "-12.0046, -102.422, -37.7968, 0.36", "-12.5298, -103.014, -37.9358, 0.48", "-12.7929, -103.3, -37.9945, 0.12", "-13.1752, -103.741, -38.0752, 0.12", "-13.8063, -104.413, -38.1265, 0.36", "-14.2811, -104.846, -38.0171, 0.12", "-14.725, -105.163, -37.8598, 0.12", "-15.0929, -105.357, -37.7347, 0.12", "-15.6742, -105.653, -37.513, 0.12", "-16.5729, -106.082, -37.1372, 0.36", "-17.9826, -106.687, -36.5335, 0.12", "-18.9468, -107.038, -36.1271, 0.12", "-20.415, -107.417, -35.4756, 0.12" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-11.0552, -100.535, -37.0113, 0.12", "-10.2362, -101.151, -37.4382, 0.12", "-9.57087, -101.617, -37.8256, 0.12", "-8.84393, -102.129, -38.2542, 0.48", "-8.29752, -102.517, -38.5777, 0.12", "-7.22253, -103.279, -39.2141, 0.12", "-6.10341, -104.073, -39.8765, 0.12", "-4.82138, -104.907, -40.7154, 2.52", "-4.52844, -105.09, -40.918, 2.28", "-4.49213, -105.114, -40.9429, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "30.7819, -31.4947, -29.0494, 0.48", "30.2588, -34.0772, -31.0367, 0.48", "30.1935, -34.4865, -31.3009, 0.36", "30.1362, -34.9252, -31.5527, 0.36", "30.0789, -35.4244, -31.8115, 0.84", "30.001, -36.2156, -32.1917, 1.32", "29.9522, -37.2705, -32.6549, 0.48", "30.0088, -38.1096, -32.8661, 0.36", "30.0534, -38.4901, -32.9551, 0.36", "30.1365, -38.9785, -33.0755, 0.48", "30.2444, -39.4882, -33.2009, 0.36", "30.4814, -40.4556, -33.4489, 0.36", "30.6179, -40.9974, -33.5943, 0.36", "30.6919, -41.4821, -33.7338, 0.48", "30.7485, -42.082, -33.9147, 0.36", "30.7705, -42.6917, -34.1012, 0.36", "30.7675, -42.936, -34.175, 0.36", "30.6523, -45.082, -34.8142, 3.49", "30.5041, -47.1246, -35.3831, 0.12", "30.4746, -47.4837, -35.4775, 0.12", "30.4247, -48.0377, -35.6079, 0.36", "30.4056, -48.2275, -35.6503, 0.12", "30.3213, -48.892, -35.7801, 0.12", "30.1906, -49.5296, -35.862, 0.6", "30.1068, -49.9136, -35.8905, 0.6", "29.9384, -50.5409, -35.9416, 0.36", "29.8638, -50.7842, -35.9693, 0.24", "29.728, -51.168, -36.0226, 0.24", "29.552, -51.588, -36.0882, 1.08", "29.1463, -52.5343, -36.2471, 1.8", "28.837, -53.2629, -36.3405, 1.56", "28.5742, -53.9225, -36.3755, 0.96", "28.414, -54.424, -36.386, 0.24", "28.1502, -55.4101, -36.3934, 0.24", "28.0358, -55.9138, -36.3908, 0.24", "27.8469, -56.8732, -36.376, 0.24", "27.5074, -58.8163, -36.3317, 3.25", "27.2412, -60.6189, -36.2914, 0.24", "27.1943, -61.0066, -36.2867, 0.24", "27.0731, -62.2768, -36.2961, 0.24", "27.0242, -62.9029, -36.3183, 0.48", "27.013, -63.1572, -36.3404, 0.12", "27.0204, -64.931, -36.5459, 0.12", "27.0258, -65.1104, -36.5663, 0.84", "27.0568, -65.7506, -36.6406, 1.08", "27.098, -66.4887, -36.7299, 0.12", "27.1669, -67.7801, -36.8859, 0.12", "27.2342, -69.2141, -37.0582, 2.4", "27.2895, -70.7473, -37.2413, 0.24", "27.3001, -71.3696, -37.3252, 0.24", "27.291, -72.128, -37.4368, 0.36", "27.271, -72.526, -37.5032, 0.24", "27.2503, -72.7764, -37.5499, 0.24", "27.2071, -73.1351, -37.6409, 0.24", "27.1075, -73.8208, -37.8656, 0.24", "27.0642, -74.2546, -38.0131, 0.84", "27.0435, -74.6818, -38.1568, 0.84", "27.0365, -75.07, -38.2676, 0.84", "27.0413, -75.6388, -38.3916, 0.12", "27.041, -75.9297, -38.4417, 0.12", "27.0522, -76.7732, -38.5509, 0.12", "27.0606, -77.181, -38.5996, 1.32", "27.0642, -78.0667, -38.7341, 1.68", "27.0553, -79.1968, -38.9253, 1.2", "27.0497, -79.8632, -39.1094, 0.12", "27.0427, -80.114, -39.1977, 0.12", "27.0026, -80.8227, -39.4835, 0.12", "26.9193, -81.8423, -39.9231, 1.32", "26.8507, -82.5255, -40.2349, 2.04", "26.6807, -84.3675, -41.0693, 0.36", "26.5975, -85.4189, -41.5123, 0.36", "26.5211, -86.2476, -41.8062, 0.36", "26.4836, -86.689, -41.9319, 0.36", "26.4408, -87.1785, -42.0269, 0.36", "26.3482, -88.2007, -42.1518, 1.92", "26.2835, -88.9645, -42.1758, 2.52", "26.1911, -90.3852, -42.2125, 0.24", "26.1549, -91.0713, -42.177, 0.24", "26.1228, -91.7493, -42.112, 0.84", "26.0876, -92.508, -42.0131, 1.08", "26.0461, -93.2878, -41.8555, 0.36", "26.0224, -94.2735, -41.6064, 0.36", "26.0429, -95.9764, -41.1178, 1.44", "26.0678, -96.7257, -40.8838, 1.92", "26.102, -97.2679, -40.7141, 1.56", "26.1935, -98.5064, -40.2697, 0.12", "26.2415, -99.1016, -40.0517, 0.12", "26.2947, -99.7026, -39.8433, 0.12", "26.3106, -99.8746, -39.7939, 0.48", "26.4017, -100.845, -39.5086, 0.84", "26.5534, -102.72, -39.006, 0.12", "26.6137, -103.495, -38.8323, 0.12", "26.6367, -103.855, -38.7462, 0.24", "26.6706, -104.365, -38.6234, 0.24", "26.6956, -104.757, -38.5362, 0.24", "26.7228, -105.247, -38.4422, 0.48", "26.733, -105.531, -38.4143, 0.6", "26.7422, -106.006, -38.3624, 0.12", "26.749, -106.396, -38.315, 0.12", "26.7524, -106.776, -38.2646, 0.12", "26.754, -108.111, -38.0795, 2.4", "26.7522, -108.869, -37.9746, 2.88", "26.7387, -109.63, -37.8818, 2.4" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "30.7819, -31.4947, -29.0494, 0.12", "31.5547, -32.0582, -27.7041, 0.12", "31.8843, -32.2336, -27.1799, 0.12", "32.4087, -32.4357, -26.4438, 0.72", "33.5484, -32.7386, -25.0224, 0.72", "34.0688, -32.8204, -24.4802, 0.12", "34.4965, -32.8662, -24.1089, 0.12", "35.2222, -32.8557, -23.5228, 1.68", "35.7271, -32.8235, -23.1843, 2.28", "36.6227, -32.7443, -22.7304, 1.92", "37.6871, -32.7022, -22.1867, 0.36", "38.5713, -32.7458, -21.6619, 0.36", "39.2347, -32.8882, -21.1096, 0.6", "39.5066, -33.0035, -20.7454, 0.36", "39.7382, -33.1374, -20.36, 0.36", "40.8868, -33.9247, -18.2088, 0.36", "41.0848, -34.0773, -17.8115, 1.2", "41.7154, -34.6066, -16.429, 1.92", "42.6618, -35.4326, -14.3221, 0.24", "43.1436, -35.8467, -13.2406, 2.16", "43.3303, -35.9939, -12.8522, 3.0", "43.6072, -36.1396, -12.4403, 3.0" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-10.6099, -337.045, -48.6345, 0.12", "-9.69406, -336.992, -48.9619, 0.12", "-9.27792, -336.995, -49.081, 0.12", "-9.0504, -337.009, -49.1371, 0.12", "-8.3324, -337.063, -49.2935, 0.6", "-8.02123, -337.086, -49.3613, 0.6", "-7.45363, -337.129, -49.4849, 0.12", "-6.59431, -337.234, -49.6076, 0.12", "-6.31062, -337.281, -49.6522, 0.84", "-6.08262, -337.326, -49.6862, 0.84" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-10.6099, -337.045, -48.6345, 1.56", "-10.5068, -337.621, -48.6084, 1.56", "-10.364, -338.421, -48.5723, 2.28", "-10.2797, -338.892, -48.551, 2.64" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "15.7725, 96.3176, 10.0776, 0.48", "16.4947, 98.6576, 10.6577, 0.48", "16.7008, 99.4863, 10.8154, 0.36", "16.8647, 100.338, 10.9455, 0.36", "16.9805, 101.22, 11.0585, 0.36", "17.0383, 101.972, 11.1509, 0.36", "17.0489, 102.403, 11.201, 0.72", "16.9922, 102.852, 11.1906, 0.72", "16.9035, 103.396, 11.1866, 0.36", "16.7749, 104.07, 11.1947, 0.36", "16.6744, 104.669, 11.21, 1.2", "16.5843, 105.352, 11.2364, 1.8", "16.4873, 106.301, 11.3019, 1.8", "16.3898, 107.612, 11.4279, 0.36", "16.3643, 108.041, 11.4472, 0.36", "16.3366, 108.938, 11.474, 0.72", "16.3362, 109.378, 11.4814, 0.84", "16.3507, 110.339, 11.503, 0.36", "16.3652, 111.107, 11.5298, 1.08", "16.3758, 112.729, 11.5397, 2.64", "16.3732, 113.784, 11.519, 3.61", "16.3607, 114.274, 11.4834, 3.61" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "15.7725, 96.3176, 10.0776, 0.6", "15.312, 98.2725, 10.1294, 0.6", "15.1089, 99.6055, 10.0449, 0.6", "14.8913, 101.459, 9.73636, 0.6", "14.7766, 102.28, 9.46679, 0.6", "14.5731, 103.472, 9.03024, 1.68", "14.3372, 104.647, 8.58701, 2.04", "14.1984, 105.404, 8.20582, 1.8", "13.9285, 106.327, 7.63698, 2.04", "13.1017, 107.848, 6.60702, 0.48", "12.5428, 108.545, 6.20293, 0.48", "12.2813, 108.792, 6.10398, 0.72", "11.6564, 109.34, 5.95704, 0.96", "10.8214, 110.072, 5.79372, 0.72", "10.15, 110.709, 5.69058, 1.32", "9.5841, 111.344, 5.60144, 1.8", "8.81393, 112.374, 5.42504, 1.8", "8.25912, 113.255, 5.2874, 0.96", "7.70764, 114.25, 5.1062, 0.72", "7.31339, 114.997, 4.94841, 0.84", "6.55115, 116.374, 4.56875, 1.56", "6.13403, 117.091, 4.32437, 2.52", "5.75903, 117.703, 4.09427, 2.52", "4.67527, 119.325, 3.47211, 2.4", "3.71724, 120.663, 2.93657, 1.56", "2.96547, 121.66, 2.49665, 0.84", "2.40445, 122.378, 2.16604, 0.48", "2.18225, 122.667, 2.02275, 0.24", "1.57669, 123.459, 1.64227, 0.24", "1.07471, 124.105, 1.18483, 0.48", "0.7681, 124.51, 0.800995, 0.12", "0.505255, 124.895, 0.402237, 0.12", "-0.154431, 125.885, -0.663813, 1.2", "-0.509805, 126.436, -1.2528, 1.56", "-2.20637, 129.126, -4.07911, 0.36", "-2.72104, 129.994, -4.90073, 0.12", "-3.56408, 131.515, -6.11032, 2.64", "-3.80077, 131.989, -6.40187, 3.0", "-4.13487, 132.782, -6.57477, 2.76", "-5.09852, 135.269, -6.22246, 0.48", "-6.84283, 139.958, -4.49191, 0.48", "-7.22141, 140.97, -4.26797, 0.48", "-7.44482, 141.646, -4.4571, 0.48", "-7.63067, 142.415, -4.99811, 0.36", "-7.87294, 143.799, -6.34755, 0.36", "-7.99341, 145.17, -7.92153, 0.36", "-8.03042, 147.059, -10.0837, 2.16", "-7.97508, 147.759, -10.8984, 3.0", "-7.9242, 148.072, -11.247, 3.12", "-7.5766, 149.441, -12.7002, 3.0", "-6.94241, 151.478, -14.7165, 0.12", "-6.63061, 152.441, -15.5814, 0.12", "-6.53845, 152.731, -15.8127, 0.12", "-6.12053, 153.994, -16.8683, 2.52", "-5.94079, 154.508, -17.2791, 2.52" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "21.6655, 66.1955, 6.66043, 0.6", "20.7722, 66.7075, 8.02304, 0.6", "20.4251, 66.9065, 8.5524, 0.6", "19.9343, 67.1878, 9.30098, 0.24", "19.5993, 67.3798, 9.81196, 0.24", "19.2457, 67.5825, 10.3514, 0.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "21.6655, 66.1955, 6.66043, 0.6", "22.0579, 66.866, 6.92614, 0.6", "22.5064, 67.6968, 7.25257, 0.72", "22.806, 68.2978, 7.46717, 1.08", "22.9678, 68.6448, 7.56712, 1.44", "23.1589, 69.0689, 7.69193, 1.56", "23.4602, 69.7486, 7.88081, 1.44", "23.8568, 70.7059, 8.12918, 1.56", "24.0942, 71.3376, 8.28274, 1.68", "24.2864, 71.8855, 8.45077, 1.68", "24.48, 72.4598, 8.65554, 1.68", "24.76, 73.3369, 8.99688, 0.6", "24.9554, 74.0052, 9.26829, 0.36", "25.1114, 74.5251, 9.43845, 0.36", "25.3264, 75.2135, 9.63331, 1.44", "25.4486, 75.573, 9.71669, 1.56", "25.6514, 76.1444, 9.78829, 1.56", "25.7554, 76.4222, 9.79576, 1.44", "26.1441, 77.3913, 9.79125, 0.72", "26.3079, 77.7522, 9.7907, 0.6", "26.5984, 78.332, 9.798, 1.2", "26.7436, 78.5979, 9.81564, 1.32", "27.103, 79.189, 9.87778, 0.84", "27.7288, 80.0985, 10.0538, 1.08", "28.1725, 80.6767, 10.214, 0.96", "28.5574, 81.1255, 10.3302, 0.48", "28.8748, 81.4767, 10.4107, 0.48", "29.248, 81.8658, 10.4858, 0.6", "29.8205, 82.4409, 10.5644, 0.96", "30.0095, 82.6339, 10.5819, 0.96", "30.6934, 83.3903, 10.6515, 1.68", "31.3299, 84.1591, 10.712, 2.28", "31.8514, 84.8617, 10.7654, 2.16", "32.1759, 85.386, 10.8023, 1.92", "32.5422, 86.1388, 10.8216, 0.6", "32.8468, 86.9869, 10.8183, 0.6", "33.0003, 87.5201, 10.8154, 0.6", "33.1178, 88.0864, 10.7963, 0.48", "33.2248, 89.0553, 10.7422, 0.48", "33.2506, 89.9778, 10.6516, 0.48", "33.1936, 90.7963, 10.4891, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "8.31271, 120.027, -21.1583, 0.48", "8.41083, 121.216, -20.9145, 0.48", "8.46472, 121.599, -20.8178, 0.12", "8.58137, 122.365, -20.6144, 0.36", "8.67496, 122.939, -20.4634, 0.48", "8.75264, 123.354, -20.3589, 0.48", "8.858, 123.872, -20.238, 0.48", "9.08461, 124.745, -20.073, 1.68", "9.16185, 125.0, -20.0444, 2.16", "9.27347, 125.34, -20.039, 2.4", "9.41382, 125.744, -20.0519, 2.4", "9.59249, 126.233, -20.0626, 1.92", "9.86478, 126.967, -20.0808, 0.12", "9.97823, 127.256, -20.0935, 0.24", "10.0829, 127.517, -20.095, 0.24", "10.3082, 128.082, -20.076, 0.48", "10.5945, 128.795, -20.0226, 0.48", "10.6894, 129.028, -19.996, 1.32", "10.858, 129.423, -19.9421, 1.68", "11.0249, 129.814, -19.9135, 1.8", "11.1761, 130.172, -19.9114, 1.92", "11.2674, 130.393, -19.9296, 1.92", "11.4828, 130.953, -20.0152, 0.48", "11.7331, 131.641, -20.1595, 0.48", "11.9374, 132.247, -20.2969, 0.72", "12.1511, 132.908, -20.4359, 0.72", "12.3367, 133.55, -20.6452, 0.36", "12.4546, 134.019, -20.8401, 0.36", "12.575, 134.617, -21.1221, 0.72", "12.6755, 135.217, -21.3763, 1.08", "12.7681, 135.802, -21.588, 1.32", "13.0329, 137.678, -22.1237, 0.48", "13.0984, 138.188, -22.2197, 0.36", "13.2131, 139.122, -22.3133, 0.36", "13.3549, 140.395, -22.3873, 0.36", "13.4049, 140.828, -22.41, 1.92", "13.5017, 141.435, -22.4259, 3.0", "13.594, 141.852, -22.4149, 3.25", "13.7698, 142.522, -22.4496, 3.25", "14.1423, 143.811, -22.617, 0.36", "14.2799, 144.289, -22.7106, 0.48", "14.5618, 145.279, -22.9045, 0.48", "14.7714, 146.051, -23.0498, 0.48", "14.9383, 146.782, -23.174, 0.48", "14.9973, 147.121, -23.2209, 0.96", "15.0444, 147.468, -23.2529, 1.2", "15.1079, 148.096, -23.3002, 0.84", "15.1732, 148.874, -23.3475, 0.48", "15.2575, 149.663, -23.3852, 0.36", "15.3597, 150.263, -23.4089, 0.36", "15.5594, 151.05, -23.4518, 0.36", "15.7175, 151.534, -23.493, 1.32", "15.9773, 152.222, -23.5659, 2.28", "16.1498, 152.646, -23.6168, 2.76", "16.3849, 153.222, -23.6903, 2.4", "16.8061, 154.369, -23.8381, 1.08", "17.0641, 155.195, -23.9385, 0.36", "17.2331, 155.858, -24.0087, 0.36", "17.3765, 156.55, -24.0873, 1.68", "17.4486, 156.978, -24.1372, 2.28", "17.542, 157.663, -24.1953, 2.4", "17.6589, 158.723, -24.2515, 1.68", "17.7925, 160.006, -24.28, 1.08", "17.8545, 160.631, -24.2894, 0.6", "17.8979, 161.151, -24.2948, 0.6", "17.9731, 162.018, -24.3037, 1.44", "18.0114, 162.444, -24.3124, 1.8", "18.0585, 162.963, -24.3324, 1.8", "18.139, 163.668, -24.3697, 0.48", "18.2805, 164.695, -24.4271, 0.48", "18.4096, 165.609, -24.53, 1.2", "18.5708, 166.651, -24.6962, 1.68", "18.7014, 167.369, -24.8213, 2.28", "18.8991, 168.396, -24.9949, 2.52", "19.1625, 169.761, -25.1858, 1.2", "19.3291, 170.671, -25.2611, 0.6", "19.4141, 171.241, -25.2687, 0.48", "19.5032, 172.084, -25.2043, 0.48", "19.5527, 172.765, -25.0755, 0.48", "19.5888, 173.448, -24.8698, 0.48", "19.6356, 174.242, -24.5534, 0.48", "19.6775, 174.717, -24.3454, 0.48", "19.734, 175.212, -24.193, 0.48", "19.8448, 175.908, -24.1062, 1.08", "19.9882, 176.551, -24.1514, 1.68", "20.1172, 177.066, -24.2609, 2.04", "20.2478, 177.549, -24.4045, 2.04", "20.623, 178.889, -24.8424, 0.96", "20.7576, 179.388, -25.0152, 0.48", "20.8803, 179.864, -25.1858, 0.48", "21.0605, 180.586, -25.4193, 1.56", "21.122, 180.863, -25.4907, 2.16", "21.2365, 181.432, -25.6646, 2.64", "21.3123, 181.834, -25.7858, 2.64", "21.4099, 182.349, -25.9678, 3.12", "21.5026, 182.816, -26.1595, 3.12", "21.6916, 183.693, -26.5436, 0.6", "22.0527, 185.201, -27.1959, 0.48", "22.2058, 185.766, -27.4296, 0.36", "22.3076, 186.11, -27.5566, 0.36", "22.4914, 186.718, -27.7132, 0.96", "22.7387, 187.488, -27.8279, 0.96", "22.9759, 188.223, -27.8516, 0.72", "23.1405, 188.826, -27.8171, 0.48", "23.3102, 189.602, -27.7953, 0.48", "23.5149, 190.79, -27.7909, 1.2", "23.596, 191.392, -27.8036, 1.68", "23.6775, 192.162, -27.8373, 2.04", "23.7572, 193.002, -27.8929, 1.8", "23.8599, 194.05, -27.9881, 0.6", "23.9348, 194.742, -28.0701, 0.48", "24.0411, 195.599, -28.1998, 0.48", "24.1702, 196.446, -28.3293, 0.48", "24.2662, 196.932, -28.3982, 0.48", "24.3746, 197.36, -28.4436, 1.08", "24.5403, 197.943, -28.476, 1.32", "24.6426, 198.274, -28.4943, 1.32", "24.8466, 198.869, -28.5163, 0.72", "24.981, 199.238, -28.5344, 0.48", "25.1694, 199.764, -28.563, 0.72", "25.3748, 200.342, -28.6093, 1.08", "25.588, 200.964, -28.6818, 1.32", "25.829, 201.714, -28.7955, 0.48", "26.0161, 202.371, -28.94, 0.48", "26.193, 203.016, -29.1189, 0.48", "26.3859, 203.728, -29.3389, 1.44", "26.5533, 204.356, -29.5336, 2.28", "26.753, 205.117, -29.7615, 1.92", "27.0383, 206.205, -30.0666, 0.48", "27.2661, 207.04, -30.2602, 0.48", "27.4335, 207.642, -30.3593, 0.72", "27.5527, 208.091, -30.3928, 0.48", "27.6565, 208.547, -30.3796, 0.36", "27.7538, 209.251, -30.3729, 0.36", "27.7791, 209.943, -30.4065, 0.36", "27.7372, 210.709, -30.514, 1.8", "27.6514, 211.468, -30.676, 3.0", "27.5311, 212.214, -30.8757, 3.25", "27.1295, 214.044, -31.4903, 1.8", "26.9314, 214.808, -31.7898, 0.48", "26.8079, 215.263, -31.9885, 0.48", "26.7307, 215.58, -32.1326, 0.72", "26.6562, 216.001, -32.3023, 0.48", "26.6137, 216.825, -32.5367, 0.36", "26.6825, 217.507, -32.5997, 0.36", "26.7642, 217.943, -32.6162, 0.72", "26.9481, 218.717, -32.6117, 1.08", "27.1136, 219.347, -32.5856, 1.2", "27.3874, 220.316, -32.4941, 0.72", "27.6545, 221.229, -32.3651, 0.36", "27.826, 221.83, -32.2729, 0.36", "28.0391, 222.638, -32.1284, 0.36", "28.2179, 223.382, -31.9825, 0.36", "28.3907, 224.232, -31.8406, 1.92", "28.4732, 224.749, -31.7636, 2.76", "28.4939, 224.913, -31.7434, 3.12", "28.5891, 225.734, -31.663, 2.76", "28.6199, 226.006, -31.6479, 2.76", "28.7384, 227.031, -31.6139, 0.48", "28.8211, 227.802, -31.6113, 0.48", "28.8629, 228.23, -31.6106, 0.96", "28.8995, 228.632, -31.6116, 0.6", "28.9416, 229.144, -31.6169, 0.48", "28.9795, 229.582, -31.6102, 0.36", "29.0942, 230.613, -31.5326, 0.36", "29.1502, 231.044, -31.4961, 0.48", "29.2145, 231.473, -31.4662, 0.36", "29.3049, 231.978, -31.4293, 0.36", "29.3775, 232.352, -31.3967, 0.36", "29.5104, 233.022, -31.3672, 1.2", "29.5845, 233.443, -31.3689, 2.04", "29.6619, 233.938, -31.3652, 2.16", "29.7411, 234.562, -31.3567, 1.68", "29.8081, 235.252, -31.3464, 0.48", "29.8758, 236.046, -31.3385, 0.36", "29.9968, 237.595, -31.3202, 0.36", "30.0551, 238.301, -31.3038, 1.2", "30.0882, 238.658, -31.2987, 0.84", "30.1431, 239.17, -31.3021, 0.48", "30.2696, 240.091, -31.3387, 0.36", "30.3313, 240.483, -31.3847, 0.36", "30.412, 240.93, -31.4986, 1.44", "30.524, 241.567, -31.7059, 1.92", "30.5945, 241.966, -31.8411, 2.04", "30.7141, 242.635, -32.0672, 2.04", "30.8839, 243.608, -32.3367, 0.48", "31.0649, 244.699, -32.5616, 0.48", "31.1346, 245.117, -32.6161, 0.6", "31.1789, 245.394, -32.6316, 0.48", "31.3048, 246.203, -32.6409, 0.48", "31.4657, 247.328, -32.5806, 2.64", "31.5583, 248.028, -32.4993, 3.49", "31.5928, 248.33, -32.459, 3.49", "31.64, 248.767, -32.4012, 3.49", "31.7624, 249.986, -32.2511, 0.48", "31.8403, 250.785, -32.1559, 0.72", "31.9016, 251.354, -32.0996, 0.48", "31.9598, 251.786, -32.0569, 0.48", "32.0458, 252.345, -32.0042, 1.32", "32.117, 252.688, -31.9768, 1.56", "32.258, 253.189, -31.9444, 1.56", "32.4263, 253.682, -31.938, 0.48", "32.6416, 254.268, -31.9519, 0.48", "32.8009, 254.7, -31.9589, 0.6", "33.0291, 255.355, -31.9617, 0.6", "33.2056, 255.897, -31.9588, 0.36", "33.3369, 256.339, -31.9604, 0.36", "33.4776, 256.93, -31.9664, 0.36", "33.5513, 257.404, -31.9829, 1.32", "33.5884, 257.839, -31.9973, 1.56", "33.5931, 258.187, -32.0034, 1.32", "33.585, 258.616, -32.007, 0.36", "33.591, 259.242, -32.0081, 0.36", "33.6215, 259.745, -32.0122, 1.2", "33.6865, 260.273, -32.0296, 1.2", "33.7874, 260.89, -32.0612, 0.36", "33.9052, 261.485, -32.0981, 0.36", "34.0468, 262.094, -32.1383, 0.48", "34.1621, 262.548, -32.1867, 0.48", "34.3224, 263.182, -32.2748, 0.48", "34.3633, 263.349, -32.3067, 0.48", "34.4664, 263.763, -32.3936, 0.72", "34.6117, 264.348, -32.5105, 0.72", "34.6873, 264.662, -32.5603, 0.48", "34.816, 265.171, -32.619, 0.48", "34.9755, 265.775, -32.6626, 1.08", "35.1251, 266.296, -32.6784, 1.68", "35.2698, 266.775, -32.6836, 1.68", "35.4253, 267.302, -32.689, 0.84", "35.5244, 267.639, -32.7037, 0.72", "35.7072, 268.3, -32.8006, 0.72", "35.8956, 269.022, -32.9644, 1.32", "36.0002, 269.445, -33.0847, 2.4", "36.1434, 270.06, -33.2865, 2.76", "36.2759, 270.673, -33.499, 2.04", "36.494, 271.744, -33.8669, 0.48", "36.5921, 272.249, -34.0363, 0.48", "36.6688, 272.665, -34.1656, 0.6", "36.716, 272.906, -34.2257, 0.48", "36.9254, 273.906, -34.3949, 0.48", "37.015, 274.331, -34.4309, 0.72", "37.1214, 274.761, -34.4336, 1.08", "37.2128, 275.1, -34.4315, 0.72", "37.3456, 275.548, -34.4143, 0.48", "37.4684, 275.967, -34.405, 0.24", "37.6004, 276.408, -34.402, 0.24", "37.9095, 277.517, -34.4287, 3.12", "37.999, 277.845, -34.4443, 3.37", "38.1573, 278.44, -34.4835, 3.0", "38.4111, 279.558, -34.5675, 0.48", "38.5578, 280.36, -34.6334, 0.48", "38.6703, 281.094, -34.687, 0.84", "38.7398, 281.595, -34.7178, 0.48", "38.8686, 282.372, -34.7249, 0.48", "39.0482, 283.283, -34.6836, 0.48", "39.1344, 283.644, -34.6376, 0.48", "39.303, 284.301, -34.5247, 0.48", "39.4193, 284.696, -34.4428, 0.96", "39.6612, 285.452, -34.3107, 1.56", "39.7723, 285.741, -34.2627, 1.56", "40.0031, 286.273, -34.2309, 0.48", "40.0661, 286.435, -34.243, 0.36", "40.2097, 286.95, -34.3301, 0.36", "40.3838, 287.734, -34.4935, 1.8", "40.4866, 288.272, -34.6177, 2.64", "40.6705, 289.287, -34.8357, 1.56", "40.8058, 290.021, -34.9729, 0.36", "40.9627, 290.845, -35.1134, 0.48", "41.1604, 291.863, -35.2306, 0.48", "41.2248, 292.206, -35.2678, 0.48", "41.334, 292.721, -35.3223, 1.32", "41.4089, 292.992, -35.3376, 1.68", "41.5372, 293.351, -35.3339, 1.92", "41.8844, 294.268, -35.3082, 0.84", "42.184, 295.188, -35.2614, 0.48", "42.3986, 295.953, -35.197, 0.48", "42.495, 296.37, -35.1532, 0.48", "42.6606, 297.286, -35.049, 0.48", "42.7817, 298.18, -34.9083, 0.72", "42.8416, 298.775, -34.7976, 1.32", "42.8868, 299.362, -34.667, 0.84", "42.9087, 299.785, -34.5651, 0.36", "42.9422, 300.292, -34.4465, 0.36", "43.0187, 300.949, -34.3037, 0.84", "43.0924, 301.297, -34.2201, 0.36", "43.296, 302.026, -34.0281, 0.36", "43.5743, 302.863, -33.8104, 0.84", "43.7064, 303.215, -33.7162, 0.84", "43.8659, 303.615, -33.6247, 0.36", "44.2077, 304.457, -33.4804, 0.36", "44.3987, 304.964, -33.414, 1.2", "44.5953, 305.555, -33.3683, 2.16", "44.6456, 305.743, -33.3675, 2.28", "44.8825, 306.724, -33.3903, 0.6", "44.9836, 307.169, -33.403, 0.36", "45.1092, 307.696, -33.4175, 0.36", "45.1946, 307.998, -33.4278, 0.36", "45.3004, 308.321, -33.4297, 0.36", "45.6227, 309.196, -33.4124, 0.36", "45.8627, 309.801, -33.3901, 1.08", "46.1281, 310.448, -33.3705, 1.56", "46.4435, 311.196, -33.3599, 0.72", "46.5465, 311.46, -33.3615, 0.48", "46.7458, 312.053, -33.375, 0.48", "46.9259, 312.733, -33.4019, 1.68", "47.0453, 313.246, -33.4455, 2.52", "47.1759, 313.852, -33.5332, 1.92", "47.3591, 314.684, -33.692, 0.72", "47.4796, 315.169, -33.8097, 0.6", "47.68, 315.889, -34.0266, 0.6", "47.9759, 316.816, -34.3391, 0.6", "48.2674, 317.682, -34.6446, 1.44", "48.4015, 318.064, -34.7811, 1.92", "48.668, 318.809, -35.0279, 0.96", "48.8557, 319.347, -35.1817, 0.36", "49.0542, 319.971, -35.3003, 0.36", "49.2026, 320.492, -35.3411, 0.36", "49.3443, 320.994, -35.3353, 0.72", "49.5135, 321.612, -35.3691, 0.36", "49.6624, 322.138, -35.4248, 0.24", "49.923, 322.982, -35.5653, 2.04", "49.9761, 323.142, -35.6056, 2.04", "50.2193, 323.816, -35.8112, 1.92", "50.768, 325.242, -36.3104, 0.48", "50.9973, 325.813, -36.5261, 0.48", "51.2276, 326.383, -36.7455, 0.72", "51.5449, 327.191, -37.0469, 0.84", "51.896, 328.164, -37.3814, 0.36", "52.0211, 328.545, -37.4937, 0.24", "52.1891, 329.135, -37.6126, 1.2", "52.231, 329.321, -37.6482, 1.68", "52.3423, 329.99, -37.765, 1.56", "52.4226, 330.68, -37.8672, 0.36", "52.4574, 331.19, -37.9276, 0.36", "52.5052, 332.15, -38.0106, 0.36", "52.5237, 332.58, -38.0398, 1.32", "52.5435, 333.017, -38.061, 1.8", "52.5636, 333.367, -38.0708, 1.68", "52.6163, 334.141, -38.0718, 0.48", "52.7021, 335.178, -38.0762, 0.48", "52.76, 335.777, -38.0804, 1.8", "52.8003, 336.29, -38.0828, 2.4", "52.8203, 336.648, -38.0681, 1.92", "52.8526, 337.498, -37.9779, 0.6", "52.8599, 337.732, -37.9331, 0.6", "52.8738, 338.483, -37.7425, 0.6", "52.8912, 339.188, -37.5361, 0.6", "52.9113, 340.156, -37.2561, 0.6", "52.927, 341.17, -36.9878, 0.6", "52.9412, 342.013, -36.7977, 1.56", "52.9505, 342.529, -36.7199, 2.04", "52.9601, 343.08, -36.6876, 1.68", "52.9763, 343.845, -36.7126, 0.84", "52.9778, 344.495, -36.7985, 0.48", "52.9382, 345.513, -36.9797, 0.48", "52.8795, 346.506, -37.1701, 0.6", "52.8258, 347.251, -37.2987, 1.32", "52.7756, 347.845, -37.386, 1.44", "52.7093, 348.575, -37.4677, 0.48", "52.5939, 349.926, -37.5899, 0.48", "52.5648, 350.36, -37.6222, 1.32", "52.5367, 351.052, -37.6553, 2.04", "52.5311, 351.574, -37.6799, 1.68", "52.5434, 352.3, -37.7224, 0.6", "52.5774, 353.034, -37.7767, 0.48", "52.6378, 353.822, -37.8548, 0.48", "52.6763, 354.332, -37.91, 0.48", "52.7342, 355.059, -37.9926, 0.72", "52.7756, 355.569, -38.0484, 0.72", "52.816, 355.981, -38.0873, 0.36", "52.8681, 356.584, -38.1378, 0.36", "52.931, 357.093, -38.1754, 1.8", "53.0329, 357.597, -38.2073, 2.4", "53.2041, 358.268, -38.2358, 2.4", "53.4252, 359.056, -38.2795, 0.48", "53.4786, 359.242, -38.2905, 0.48", "53.6698, 359.944, -38.3705, 0.48", "53.8368, 360.592, -38.4801, 0.48", "53.975, 361.268, -38.6417, 0.48", "54.0227, 361.66, -38.7562, 1.08", "54.021, 362.03, -38.8709, 1.92", "53.9609, 362.667, -39.0513, 2.16", "53.9076, 363.014, -39.133, 2.16", "53.7798, 363.826, -39.2905, 0.72", "53.7405, 364.202, -39.3406, 0.48", "53.7012, 364.942, -39.3919, 0.48", "53.7002, 365.635, -39.4158, 0.48", "53.7525, 366.685, -39.3918, 0.48", "53.7996, 367.118, -39.3726, 0.48", "53.9015, 367.737, -39.3278, 1.32", "54.0226, 368.331, -39.2824, 1.92", "54.1883, 369.032, -39.1971, 1.56", "54.3307, 369.629, -39.1006, 0.36", "54.5164, 370.407, -38.9354, 0.36", "54.6596, 371.0, -38.7943, 0.6", "54.803, 371.562, -38.6409, 0.6", "55.0167, 372.341, -38.4082, 0.24", "55.1641, 372.819, -38.2648, 0.24", "55.3974, 373.506, -38.0875, 1.92", "55.5291, 373.86, -37.997, 2.4", "55.8346, 374.628, -37.8255, 1.92", "56.1183, 375.361, -37.694, 0.48", "56.3668, 376.052, -37.6033, 0.48", "56.6368, 376.897, -37.5041, 0.48", "56.8441, 377.667, -37.431, 1.44", "57.0433, 378.513, -37.3602, 2.04", "57.2183, 379.357, -37.3051, 1.08", "57.3401, 379.956, -37.2683, 0.6", "57.4812, 380.63, -37.2379, 0.48", "57.6674, 381.382, -37.2258, 0.48", "57.7949, 381.825, -37.2362, 0.48", "57.9336, 382.265, -37.2488, 0.96", "58.1424, 382.91, -37.2691, 1.44", "58.3707, 383.645, -37.2948, 0.84", "58.5257, 384.178, -37.3135, 0.48", "58.7634, 385.1, -37.3411, 0.48", "58.9041, 385.779, -37.3453, 0.6", "59.0227, 386.55, -37.3334, 0.72", "59.0645, 386.984, -37.3178, 0.12", "59.0754, 387.156, -37.2943, 0.12", "59.101, 387.75, -37.1699, 1.56", "59.127, 388.384, -37.008, 2.28", "59.1472, 388.879, -36.8715, 2.52", "59.1613, 389.296, -36.7523, 2.52", "59.1919, 390.76, -36.3544, 0.72", "59.2061, 392.033, -36.0959, 0.72", "59.2178, 392.715, -35.9685, 0.96", "59.2306, 393.144, -35.8886, 0.6", "59.2493, 393.573, -35.8009, 0.48", "59.2922, 394.507, -35.6203, 0.48", "59.3695, 395.833, -35.4178, 0.48", "59.4585, 396.801, -35.2643, 0.48", "59.5647, 397.616, -35.1441, 1.92", "59.7345, 398.656, -35.0344, 0.96", "59.9107, 399.529, -34.9763, 0.48", "60.2847, 401.125, -34.9502, 0.48", "60.5599, 402.184, -34.9746, 0.48", "60.8286, 403.18, -35.0712, 0.48", "61.0975, 404.103, -35.2073, 1.2", "61.282, 404.677, -35.3099, 1.92", "61.5843, 405.539, -35.4757, 1.44", "61.7744, 406.099, -35.5839, 1.08", "61.8977, 406.511, -35.6527, 0.48", "62.0495, 407.101, -35.7274, 0.96", "62.1894, 407.709, -35.7735, 0.96", "62.2834, 408.161, -35.802, 0.48", "62.5751, 409.517, -35.8492, 0.48", "62.6883, 410.033, -35.8639, 0.6", "62.7642, 410.365, -35.8676, 0.48", "62.944, 411.138, -35.8504, 0.48", "63.1887, 412.239, -35.7892, 0.48", "63.3167, 412.883, -35.7389, 0.96", "63.4072, 413.394, -35.6847, 1.2", "63.495, 413.99, -35.6128, 0.6", "63.5404, 414.461, -35.5624, 0.36", "63.5769, 415.571, -35.4583, 0.36", "63.5491, 416.297, -35.4089, 0.72", "63.4935, 416.861, -35.3964, 1.44", "63.417, 417.471, -35.3918, 2.4", "63.2915, 418.427, -35.3988, 1.56", "63.2218, 418.972, -35.4034, 0.48", "63.0628, 420.364, -35.4018, 0.48", "63.0191, 421.043, -35.3681, 0.6", "63.0171, 421.418, -35.3273, 0.48", "63.0748, 422.191, -35.1745, 0.48", "63.1662, 422.666, -35.0452, 0.48", "63.3308, 423.194, -34.8651, 0.84", "63.7648, 424.232, -34.4467, 0.96", "64.0913, 424.907, -34.1644, 0.48", "64.3659, 425.428, -33.9425, 0.36", "64.8467, 426.291, -33.5804, 0.36", "65.2671, 427.047, -33.2961, 0.96", "65.3526, 427.202, -33.236, 1.08", "65.63, 427.722, -33.035, 0.48", "65.9731, 428.384, -32.7251, 0.48", "66.2823, 429.006, -32.3944, 0.48", "66.5424, 429.553, -32.0792, 0.48", "66.9014, 430.352, -31.6606, 0.48", "67.2977, 431.286, -31.2161, 0.48", "67.7322, 432.437, -30.7352, 1.68", "67.8759, 432.848, -30.5893, 2.4", "67.9927, 433.202, -30.4832, 2.64", "68.3121, 434.312, -30.2833, 0.24", "68.4662, 435.16, -30.2639, 0.24", "68.5172, 435.951, -30.3242, 0.24", "68.5179, 436.037, -30.336, 0.72", "68.5048, 436.639, -30.4206, 0.84", "68.4618, 437.426, -30.5327, 0.24", "68.3391, 438.692, -30.7138, 0.24", "68.2202, 439.732, -30.8846, 0.24", "68.1895, 439.987, -30.9294, 0.48" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "8.31271, 120.027, -21.1583, 0.12", "7.7771, 120.394, -22.4431, 0.12", "7.67635, 120.462, -22.6762, 0.12", "7.342, 120.687, -23.3817, 1.2", "7.02332, 120.882, -24.0189, 1.44", "5.19489, 121.946, -27.4285, 0.36", "4.7929, 122.196, -28.1408, 0.36", "4.57391, 122.35, -28.5457, 1.8", "4.2582, 122.595, -29.104, 2.16", "2.99273, 123.707, -31.2126, 0.36", "2.56565, 124.127, -31.9197, 0.36", "2.10053, 124.637, -32.5937, 1.32", "1.68364, 125.152, -33.3202, 0.24", "1.45747, 125.476, -33.775, 0.24", "0.898199, 126.358, -34.9456, 0.6", "0.190728, 127.562, -36.3528, 1.68", "-0.0304826, 127.923, -36.7559, 2.04", "-1.06735, 129.464, -38.4847, 0.36", "-1.46561, 130.032, -39.062, 0.36", "-1.94046, 130.712, -39.6475, 1.56", "-2.38405, 131.377, -40.1081, 0.36", "-2.89022, 132.144, -40.5283, 0.6", "-3.19536, 132.602, -40.7619, 0.12", "-3.67191, 133.32, -41.0451, 0.12", "-3.90358, 133.706, -41.2173, 0.48", "-4.50794, 134.948, -41.8725, 0.12", "-4.68159, 135.365, -42.1018, 0.12", "-4.81334, 135.728, -42.2933, 0.12", "-4.98862, 136.244, -42.5421, 1.68", "-5.17836, 136.896, -42.8142, 2.04", "-5.51191, 138.281, -43.2894, 0.24", "-5.64001, 138.885, -43.4464, 0.24", "-5.73181, 139.353, -43.5784, 0.48", "-5.82804, 139.875, -43.7569, 0.12", "-6.09162, 141.305, -44.2745, 0.12", "-6.32904, 142.606, -44.7426, 0.12", "-6.48244, 143.45, -45.0279, 0.12", "-6.7035, 144.679, -45.4255, 1.68", "-6.99229, 146.173, -45.8708, 0.12", "-7.23311, 147.352, -46.1871, 0.12", "-7.35735, 147.934, -46.328, 1.32", "-7.49748, 148.661, -46.4521, 1.68", "-7.65979, 149.664, -46.5512, 0.12", "-7.77733, 150.618, -46.5524, 0.12", "-7.79788, 150.978, -46.5337, 0.36", "-7.80156, 151.465, -46.514, 0.12", "-7.77314, 152.663, -46.479, 0.12", "-7.73569, 153.385, -46.4682, 1.56", "-7.66037, 154.462, -46.4683, 0.12", "-7.49979, 156.395, -46.47, 0.12", "-7.46944, 156.774, -46.4711, 0.48", "-7.44384, 157.124, -46.4727, 0.12", "-7.3481, 158.435, -46.4923, 0.12", "-7.28597, 159.265, -46.5126, 1.2", "-7.24073, 159.864, -46.535, 1.2", "-7.19531, 160.469, -46.563, 0.12", "-7.0932, 161.415, -46.6101, 0.12", "-7.00893, 162.048, -46.6432, 1.32", "-6.91436, 162.641, -46.6751, 1.68", "-6.67372, 164.065, -46.7479, 0.12", "-6.48994, 165.12, -46.8017, 0.12", "-6.31235, 166.171, -46.8501, 0.12", "-6.25198, 166.546, -46.8655, 0.12", "-6.15146, 167.261, -46.8862, 0.12", "-6.09292, 167.754, -46.8983, 1.2", "-6.00843, 168.602, -46.9144, 0.12", "-5.91347, 169.671, -46.9447, 0.12", "-5.88613, 170.04, -46.9572, 0.36", "-5.85317, 170.424, -46.9714, 0.12", "-5.72728, 171.616, -47.0176, 0.12", "-5.65746, 172.14, -47.0379, 0.96", "-5.57258, 172.672, -47.055, 0.12", "-5.34529, 173.849, -47.0202, 0.12", "-5.22494, 174.439, -46.9923, 0.84", "-5.10036, 175.029, -46.9554, 0.36", "-5.01937, 175.399, -46.9259, 0.12", "-4.48153, 177.743, -46.7416, 0.12", "-4.1684, 179.009, -46.6441, 0.24", "-4.03408, 179.524, -46.6117, 0.48", "-3.93884, 179.892, -46.5956, 0.12", "-3.67844, 180.992, -46.587, 0.12", "-3.54644, 181.724, -46.6145, 0.84", "-3.50427, 182.108, -46.6568, 0.12", "-3.38644, 183.29, -46.8396, 0.12", "-3.37526, 183.47, -46.8632, 0.6", "-3.40585, 184.045, -46.9761, 0.12", "-3.53483, 184.773, -47.1566, 0.12", "-3.70374, 185.459, -47.3409, 1.08", "-3.93289, 186.241, -47.6089, 1.32", "-4.16935, 186.88, -47.8664, 1.68", "-4.6394, 188.055, -48.3478, 0.12", "-4.94978, 188.755, -48.6807, 0.12", "-5.10089, 189.043, -48.8304, 0.48", "-5.41884, 189.566, -49.0944, 0.12", "-5.89004, 190.289, -49.4256, 0.12", "-6.17144, 190.714, -49.5929, 0.48", "-6.70665, 191.453, -49.8315, 0.12", "-7.28407, 192.152, -50.0338, 0.12", "-7.85505, 192.828, -50.1842, 0.12", "-8.12833, 193.155, -50.231, 0.84", "-8.51163, 193.612, -50.2838, 0.84", "-8.75244, 193.881, -50.3002, 0.12", "-9.39037, 194.545, -50.2865, 0.12", "-9.82174, 194.956, -50.2822, 0.12", "-9.91121, 195.033, -50.2787, 0.48", "-10.2668, 195.324, -50.2534, 0.12", "-10.6884, 195.643, -50.2164, 0.12", "-11.2577, 196.011, -50.1271, 1.32", "-11.49, 196.126, -50.0784, 1.56", "-12.2996, 196.455, -49.8819, 0.12", "-12.8484, 196.663, -49.7455, 0.12", "-13.226, 196.791, -49.6007, 0.48", "-13.7444, 196.948, -49.3495, 0.12", "-14.0457, 197.049, -49.1956, 0.12", "-14.4014, 197.184, -49.0206, 0.12", "-14.7471, 197.34, -48.827, 0.72", "-15.814, 197.925, -48.212, 0.12", "-16.2725, 198.221, -47.9581, 0.12", "-16.9782, 198.724, -47.5544, 1.8", "-17.4405, 199.077, -47.2651, 2.04", "-18.5207, 199.931, -46.5692, 0.24", "-18.9278, 200.268, -46.3085, 0.24", "-19.448, 200.729, -46.006, 0.24", "-20.2031, 201.45, -45.5602, 0.24", "-20.6754, 201.919, -45.2754, 0.96", "-20.9495, 202.202, -45.124, 1.32", "-21.397, 202.68, -44.9127, 0.12", "-21.8876, 203.205, -44.6878, 0.12", "-22.607, 203.982, -44.4076, 0.12", "-22.8751, 204.303, -44.3342, 0.96", "-23.0926, 204.607, -44.2849, 0.96", "-23.35, 205.012, -44.2311, 0.24", "-23.6504, 205.53, -44.1889, 0.24", "-23.8351, 205.882, -44.1751, 0.12", "-24.3052, 206.87, -44.1773, 0.12", "-24.6483, 207.633, -44.2058, 0.12", "-24.8486, 208.1, -44.2309, 0.96", "-25.0301, 208.5, -44.3048, 0.12", "-25.3062, 209.049, -44.4638, 0.12", "-25.4319, 209.27, -44.5438, 0.12", "-25.5554, 209.474, -44.6428, 1.2", "-25.7541, 209.809, -44.8235, 1.2", "-26.4588, 211.104, -45.5095, 0.12", "-26.7274, 211.62, -45.8367, 0.12", "-26.9719, 212.153, -46.1926, 0.12", "-27.1934, 212.685, -46.5469, 0.12", "-27.3338, 213.065, -46.8086, 0.72", "-27.4847, 213.498, -47.0807, 0.84", "-27.9178, 214.866, -47.816, 0.12", "-28.1942, 215.751, -48.3379, 0.12", "-28.2412, 215.885, -48.4159, 0.24", "-28.4699, 216.439, -48.7367, 0.12", "-28.9804, 217.591, -49.4483, 0.12", "-29.0723, 217.778, -49.5634, 1.2", "-29.5434, 218.627, -50.08, 0.12", "-30.0107, 219.355, -50.6149, 0.12", "-30.3577, 219.891, -51.0346, 0.72", "-30.7231, 220.395, -51.5009, 0.12", "-30.9905, 220.698, -51.8495, 0.12", "-31.4696, 221.148, -52.4167, 0.12", "-31.8505, 221.461, -52.8443, 1.08", "-32.1332, 221.666, -53.1763, 1.08", "-32.8409, 222.127, -53.9584, 0.12", "-33.3834, 222.432, -54.5115, 0.12", "-33.5365, 222.509, -54.6731, 0.36" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "15.3074, 131.41, -91.8818, 0.12", "15.9275, 132.691, -92.3456, 0.12", "16.6195, 134.164, -92.9003, 2.64", "16.8824, 134.76, -93.1363, 2.16", "17.3825, 136.052, -93.6551, 0.24", "17.7902, 137.206, -94.0918, 0.24", "18.0757, 138.078, -94.4046, 0.24", "18.446, 139.41, -94.8, 0.96", "18.6584, 140.321, -95.0479, 0.12", "18.8855, 141.457, -95.2667, 0.12", "19.0449, 142.354, -95.3526, 0.24", "19.1322, 142.892, -95.3618, 0.24", "19.3169, 144.016, -95.2946, 1.68", "19.4584, 144.872, -95.2232, 2.52", "19.7275, 146.296, -95.1511, 1.56", "19.8426, 146.898, -95.1504, 0.48", "20.161, 148.816, -95.2653, 0.48", "20.3222, 149.91, -95.3811, 1.32", "20.4824, 151.167, -95.6102, 0.96", "20.5943, 152.125, -95.8444, 0.12", "20.6986, 153.077, -96.1374, 0.12", "20.8223, 154.25, -96.5223, 1.8", "20.9071, 155.051, -96.7929, 1.92", "21.0308, 156.268, -97.1515, 0.12", "21.1274, 157.249, -97.3376, 0.12", "21.1507, 157.539, -97.3737, 0.48", "21.2023, 158.186, -97.4288, 0.12", "21.2514, 158.881, -97.453, 0.12", "21.2851, 159.984, -97.4219, 0.72", "21.2852, 160.912, -97.333, 0.12", "21.2493, 161.914, -97.241, 0.12", "21.2307, 162.331, -97.2064, 0.48", "21.2091, 162.732, -97.1821, 0.12", "21.1498, 163.738, -97.1745, 0.12", "21.1234, 164.167, -97.1972, 1.2", "21.0799, 164.956, -97.265, 1.32", "21.073, 165.791, -97.3109, 0.84", "21.0808, 166.162, -97.3207, 0.12", "21.1154, 166.998, -97.3128, 0.12", "21.1402, 167.275, -97.2992, 0.6", "21.217, 167.858, -97.2593, 0.12", "21.4481, 169.146, -97.1438, 0.12", "21.5675, 169.694, -97.0946, 0.6", "21.6797, 170.132, -97.124, 0.12", "21.8779, 170.791, -97.239, 0.12", "22.2079, 171.902, -97.5077, 1.56", "22.3228, 172.309, -97.6277, 2.04", "22.5481, 173.159, -97.9035, 1.68", "23.2148, 175.548, -98.7738, 0.12", "23.536, 176.685, -99.2461, 0.12", "23.7313, 177.415, -99.5945, 0.12", "23.8789, 178.014, -99.9099, 1.08", "23.9873, 178.482, -100.163, 1.56", "24.2444, 179.6, -100.836, 0.12", "24.5939, 180.965, -101.671, 0.12", "24.8654, 181.813, -102.295, 0.48", "25.1809, 182.623, -102.985, 0.48", "25.3664, 183.022, -103.355, 0.48", "25.9049, 184.03, -104.439, 1.44", "26.1554, 184.456, -104.916, 1.92", "26.5908, 185.085, -105.629, 1.44", "27.1839, 185.836, -106.543, 0.48", "27.9254, 186.71, -107.637, 0.36", "28.8923, 187.796, -108.992, 0.12", "29.4548, 188.411, -109.718, 1.56", "29.8994, 188.893, -110.291, 1.2", "31.0798, 190.157, -111.691, 0.12", "31.4629, 190.535, -112.101, 0.12", "31.7145, 190.759, -112.346, 0.6", "32.0355, 191.035, -112.602, 0.6", "32.6786, 191.575, -113.127, 0.36", "33.1296, 191.957, -113.456, 0.36", "33.9106, 192.636, -113.888, 0.12", "34.3905, 193.073, -114.113, 0.12", "35.1481, 193.805, -114.426, 0.12", "36.1098, 194.785, -114.825, 1.56", "36.723, 195.434, -115.06, 2.16", "37.6057, 196.438, -115.401, 0.24", "38.7724, 197.903, -115.95, 0.24", "39.2361, 198.576, -116.228, 0.12", "39.9927, 199.809, -116.768, 1.68", "40.205, 200.214, -116.967, 2.28", "40.4079, 200.68, -117.226, 2.28", "41.022, 202.389, -118.349, 0.12", "41.3282, 203.493, -119.151, 0.12", "41.4004, 203.828, -119.403, 0.6", "41.5754, 204.984, -120.349, 0.24", "41.6312, 205.594, -120.907, 0.24", "41.685, 206.362, -121.636, 0.24", "41.6959, 206.889, -122.143, 0.96", "41.6767, 207.595, -122.872, 1.44", "41.5877, 208.877, -124.189, 0.12", "41.4613, 210.092, -125.312, 0.12", "41.401, 210.604, -125.756, 0.12", "41.3764, 210.773, -125.881, 0.48", "41.3273, 211.136, -126.121, 0.48", "41.3049, 211.306, -126.215, 0.48", "41.1587, 212.347, -126.645, 0.48", "40.9971, 213.486, -127.058, 1.32", "40.9154, 214.073, -127.269, 1.8", "40.8337, 214.961, -127.562, 0.96", "40.7813, 215.778, -127.797, 0.12", "40.7302, 216.98, -128.133, 0.12", "40.7065, 217.657, -128.305, 1.2", "40.7189, 218.197, -128.441, 1.56", "40.7896, 218.94, -128.692, 0.12", "40.9536, 220.117, -129.141, 0.12", "41.1596, 221.183, -129.587, 0.12", "41.4417, 222.232, -130.189, 0.12", "41.9639, 223.936, -131.317, 0.12", "42.4424, 225.34, -132.4, 0.12", "42.6411, 225.884, -132.849, 0.84", "42.7828, 226.252, -133.161, 0.96", "43.4748, 228.111, -134.732, 0.12", "43.741, 228.921, -135.414, 0.12", "43.8834, 229.747, -136.007, 0.12", "43.9507, 230.614, -136.529, 0.12", "43.962, 231.366, -136.98, 0.36", "43.9512, 231.491, -137.04, 0.12", "43.7701, 232.091, -137.073, 0.12", "43.4561, 232.71, -137.052, 0.48" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "15.3074, 131.41, -91.8818, 0.12", "13.7421, 132.903, -97.3096, 0.12", "13.3947, 133.238, -98.3087, 0.12", "12.8453, 133.725, -99.498, 0.12", "12.4463, 134.069, -100.221, 0.84", "11.5276, 134.843, -101.687, 1.8", "11.1899, 135.124, -102.168, 1.92", "10.2979, 135.872, -102.947, 0.12", "9.20866, 136.889, -103.815, 0.12", "8.47345, 137.611, -104.304, 0.96", "8.11537, 137.984, -104.513, 1.2", "7.26608, 138.915, -104.913, 0.12", "6.7202, 139.575, -105.201, 0.12", "5.71119, 141.03, -105.781, 0.12", "5.37598, 141.598, -106.001, 1.2", "5.17328, 141.965, -106.133, 1.44", "4.75811, 142.771, -106.468, 0.6", "4.24605, 143.774, -106.932, 0.12", "3.7637, 144.619, -107.386, 0.12", "3.38826, 145.172, -107.777, 0.96", "3.11003, 145.54, -108.071, 1.32", "2.29067, 146.468, -108.876, 0.12", "1.82231, 146.906, -109.291, 0.12", "1.23473, 147.36, -109.794, 0.12", "0.142354, 148.075, -110.738, 0.12", "-0.518536, 148.483, -111.309, 1.08", "-1.00502, 148.763, -111.704, 1.8", "-1.64737, 149.098, -112.248, 1.2", "-2.64329, 149.606, -113.15, 0.12", "-3.11475, 149.844, -113.579, 0.12", "-3.50753, 150.031, -113.92, 0.12", "-3.96579, 150.238, -114.385, 0.12", "-5.62077, 150.943, -116.166, 0.12", "-5.98398, 151.09, -116.555, 1.44", "-6.40055, 151.252, -117.073, 2.04", "-7.05242, 151.471, -117.945, 1.32", "-8.50806, 151.87, -119.829, 0.12", "-8.99292, 151.977, -120.427, 0.12", "-9.4556, 152.04, -120.926, 0.96", "-11.5068, 152.169, -123.016, 0.12", "-12.307, 152.166, -123.743, 0.12", "-13.207, 152.116, -124.479, 1.56", "-13.6078, 152.074, -124.746, 1.8", "-14.7112, 151.95, -125.475, 0.12", "-15.0155, 151.919, -125.658, 0.12", "-15.6975, 151.857, -126.012, 0.48", "-17.0858, 151.753, -126.855, 0.12", "-17.9935, 151.698, -127.461, 0.12", "-18.7498, 151.659, -127.936, 1.32", "-19.2992, 151.616, -128.241, 1.56", "-20.4977, 151.432, -128.76, 0.12", "-21.0824, 151.27, -128.933, 0.12", "-21.3664, 151.164, -128.977, 0.48", "-22.2575, 150.751, -129.079, 0.12", "-23.1313, 150.306, -129.143, 0.12", "-24.2818, 149.685, -129.177, 0.12", "-25.329, 149.1, -129.161, 0.12", "-25.749, 148.863, -129.159, 0.72", "-26.1327, 148.66, -129.121, 0.12", "-27.1434, 148.182, -128.962, 0.12", "-27.8055, 147.924, -128.821, 0.12", "-28.5143, 147.696, -128.644, 1.44", "-29.2804, 147.487, -128.442, 1.8", "-31.5551, 146.912, -127.848, 0.12", "-32.2744, 146.748, -127.647, 0.12", "-34.1752, 146.367, -127.111, 0.12", "-34.5904, 146.301, -127.01, 0.24", "-34.9181, 146.265, -126.92, 0.12", "-35.3804, 146.223, -126.785, 0.12", "-36.6536, 146.169, -126.462, 1.32", "-36.7992, 146.171, -126.416, 1.56", "-37.8093, 146.25, -126.039, 1.56", "-39.2758, 146.429, -125.53, 0.24", "-39.5725, 146.482, -125.437, 0.12", "-40.5036, 146.702, -125.225, 0.12", "-41.2951, 146.917, -125.14, 0.12", "-41.6186, 147.008, -125.116, 0.48", "-42.1453, 147.175, -125.112, 0.48", "-42.433, 147.275, -125.146, 0.12", "-43.6177, 147.69, -125.296, 0.12", "-44.508, 147.94, -125.407, 0.72" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-43.8943, 23.7345, -98.3413, 0.12", "-44.3565, 22.4057, -99.5742, 0.12", "-44.6279, 21.6769, -100.385, 0.12", "-44.9769, 20.7691, -101.396, 0.12", "-45.0593, 20.5588, -101.626, 1.56", "-45.2477, 20.0837, -102.123, 1.56", "-45.4474, 19.602, -102.598, 0.96", "-45.8541, 18.7494, -103.432, 0.12", "-46.1085, 18.2391, -103.976, 0.12", "-46.1911, 18.0787, -104.125, 0.12", "-46.3623, 17.7359, -104.395, 0.12", "-46.5629, 17.2914, -104.722, 0.6", "-46.687, 16.9927, -104.919, 0.72", "-47.1822, 15.6969, -105.641, 0.12", "-47.3723, 15.1143, -106.084, 0.12", "-47.6072, 14.2606, -106.768, 2.04", "-47.9466, 12.7915, -108.031, 0.12", "-48.0837, 12.134, -108.612, 0.12", "-48.2319, 11.4268, -109.283, 2.28", "-48.7288, 9.14914, -111.455, 0.12", "-48.897, 8.44462, -112.194, 0.12", "-49.0384, 7.95624, -112.886, 0.12", "-49.1067, 7.76547, -113.202, 0.12", "-49.3977, 7.11323, -114.374, 0.12", "-49.6198, 6.73483, -115.104, 1.92", "-49.7903, 6.49917, -115.535, 2.28", "-51.2852, 4.5668, -119.217, 0.12", "-51.4498, 4.35793, -119.589, 0.12", "-51.8621, 3.81376, -120.501, 1.8", "-52.0359, 3.57537, -120.862, 1.8", "-52.3071, 3.18345, -121.403, 1.2", "-52.7915, 2.34522, -122.26, 0.12", "-53.0496, 1.8387, -122.478, 0.12", "-53.1319, 1.65637, -122.567, 0.6", "-53.3038, 1.15767, -122.809, 0.12", "-53.5125, 0.404407, -123.17, 0.12", "-53.5604, 0.225613, -123.251, 0.36", "-53.6555, -0.177998, -123.475, 0.36", "-53.7107, -0.456492, -123.662, 0.12", "-53.8809, -1.31239, -124.228, 0.12", "-54.0047, -2.05551, -124.874, 0.12", "-54.0441, -2.33134, -125.13, 0.96", "-54.1923, -3.57438, -126.273, 0.12", "-54.231, -4.06355, -126.818, 0.12", "-54.2728, -4.83409, -127.741, 2.76", "-54.3221, -6.72758, -130.302, 0.12", "-54.3254, -7.33773, -131.145, 0.12", "-54.3161, -7.58284, -131.488, 0.96", "-54.1214, -9.37551, -134.077, 0.12", "-54.0376, -9.75551, -134.696, 0.12", "-53.7727, -10.4815, -135.97, 0.12", "-53.6662, -10.6829, -136.31, 1.2", "-53.4558, -11.0032, -136.851, 2.28", "-52.8549, -11.8041, -138.054, 1.68", "-52.2715, -12.4699, -138.783, 0.12", "-51.9348, -12.7862, -139.167, 0.12", "-51.7379, -12.9582, -139.368, 0.12", "-51.4733, -13.1805, -139.68, 0.12", "-51.2033, -13.4238, -140.002, 0.6", "-51.0154, -13.6044, -140.2, 0.6", "-50.4071, -14.2803, -141.109, 0.24", "-50.2955, -14.4337, -141.357, 0.24", "-49.9833, -14.9456, -142.264, 0.12", "-49.6878, -15.545, -143.254, 2.4", "-49.6398, -15.657, -143.424, 2.4", "-49.1279, -17.1217, -145.744, 0.12", "-48.8281, -18.1529, -147.339, 0.12", "-48.6623, -18.7897, -148.324, 0.12", "-48.5259, -19.3964, -149.279, 3.12", "-48.4787, -19.6677, -149.713, 3.12", "-48.1613, -22.1192, -153.371, 0.12", "-48.1296, -22.488, -153.876, 0.12", "-48.1193, -22.6776, -154.125, 0.48", "-48.1019, -23.103, -154.665, 0.12", "-48.0998, -23.44, -155.109, 0.12", "-48.1272, -23.6784, -155.456, 0.48", "-48.2251, -24.1098, -156.056, 0.12", "-48.3234, -24.4767, -156.585, 0.12", "-48.5817, -25.4952, -157.963, 2.76", "-48.6295, -25.6997, -158.218, 2.76", "-49.1329, -28.0074, -160.973, 0.12", "-49.1985, -28.3576, -161.356, 0.12", "-49.272, -28.8118, -161.821, 0.12", "-49.3688, -29.4899, -162.49, 0.12", "-49.4687, -30.2877, -163.232, 1.8", "-49.5042, -30.8369, -163.717, 2.16", "-49.5219, -31.3997, -164.142, 1.92", "-49.6029, -32.7929, -165.366, 0.12", "-49.6394, -33.0969, -165.658, 0.72", "-49.7834, -33.6574, -166.252, 0.72", "-49.8934, -33.9669, -166.558, 0.12", "-50.1419, -34.5465, -167.079, 0.12", "-50.4321, -35.1476, -167.559, 0.12", "-50.7363, -35.7692, -167.951, 2.4", "-51.4342, -37.2304, -168.767, 0.12", "-51.8601, -38.162, -169.231, 0.12", "-52.021, -38.5605, -169.404, 0.6", "-52.1225, -38.8512, -169.532, 0.12", "-52.3119, -39.4349, -169.771, 0.12", "-52.3682, -39.6231, -169.848, 0.48", "-52.5063, -40.1759, -170.123, 0.12", "-52.7996, -41.4489, -170.892, 0.12", "-53.0144, -42.4178, -171.52, 1.68", "-53.0963, -42.7948, -171.775, 2.16", "-53.1567, -43.1066, -171.982, 2.16", "-53.445, -44.8416, -173.131, 0.12", "-53.5277, -45.3732, -173.468, 0.12", "-53.5695, -45.6411, -173.646, 0.48", "-53.5859, -45.7309, -173.699, 0.12", "-53.7657, -46.5493, -174.137, 0.12", "-53.9925, -47.3076, -174.468, 0.12", "-54.1956, -47.8116, -174.697, 1.68", "-54.357, -48.1479, -174.89, 1.92", "-54.7296, -48.8148, -175.319, 0.12", "-54.9961, -49.2239, -175.601, 0.12", "-55.3577, -49.6858, -175.933, 1.32", "-56.3378, -50.8689, -176.821, 0.12", "-56.7002, -51.2997, -177.17, 0.12", "-56.9464, -51.5867, -177.444, 0.48", "-57.1219, -51.775, -177.65, 0.12", "-57.5459, -52.1945, -178.194, 0.12", "-58.1201, -52.7165, -178.911, 0.12", "-58.2616, -52.8238, -179.073, 0.96", "-58.9763, -53.2683, -179.829, 0.12", "-59.2644, -53.4275, -180.113, 0.12", "-59.9378, -53.7581, -180.719, 1.44", "-60.5236, -54.0186, -181.181, 1.8", "-61.4575, -54.4048, -181.768, 0.12", "-62.6408, -54.8804, -182.388, 0.12", "-62.9317, -54.9928, -182.507, 0.48", "-63.1236, -55.0644, -182.575, 0.12", "-63.6532, -55.2679, -182.725, 0.12", "-64.0406, -55.4198, -182.825, 1.08", "-64.5204, -55.6195, -182.916, 1.68", "-65.4226, -55.9978, -183.052, 0.12", "-65.8134, -56.1642, -183.105, 0.12", "-66.0765, -56.2907, -183.138, 0.48", "-66.2665, -56.3927, -183.159, 0.12", "-67.0083, -56.8577, -183.298, 0.12", "-67.8034, -57.4744, -183.502, 1.68", "-68.3405, -58.0191, -183.72, 0.12", "-68.8058, -58.5901, -184.004, 0.12", "-69.1091, -59.0293, -184.248, 0.6", "-69.6933, -60.0271, -184.838, 0.12", "-70.0267, -60.7331, -185.264, 0.12", "-70.4347, -61.7222, -185.922, 0.12", "-70.575, -62.0736, -186.153, 0.12", "-70.7266, -62.4387, -186.392, 1.68", "-70.8829, -62.7981, -186.605, 2.28", "-71.2092, -63.448, -186.921, 1.56", "-71.7097, -64.3086, -187.296, 0.12", "-71.9785, -64.744, -187.417, 0.12", "-72.2163, -65.128, -187.516, 0.12", "-72.4865, -65.5651, -187.628, 1.32", "-72.7096, -65.927, -187.713, 1.56", "-73.0479, -66.4724, -187.837, 0.12", "-73.935, -67.9262, -188.115, 0.12", "-74.4719, -68.814, -188.296, 1.8", "-74.6514, -69.1336, -188.361, 2.52", "-74.7986, -69.394, -188.416, 2.52", "-75.2678, -70.2317, -188.608, 0.12", "-75.873, -71.3252, -188.875, 0.12", "-76.1619, -71.8533, -188.996, 1.56", "-76.5089, -72.5161, -189.121, 2.04", "-76.8826, -73.2592, -189.259, 2.04", "-77.392, -74.3163, -189.449, 0.12", "-77.6924, -74.9816, -189.552, 0.12", "-77.8607, -75.4101, -189.614, 0.72", "-77.9355, -75.6338, -189.63, 0.12", "-78.0935, -76.1727, -189.633, 0.12", "-78.145, -76.4034, -189.618, 0.48", "-78.2055, -76.7231, -189.605, 0.12", "-78.3776, -77.8774, -189.643, 0.12", "-78.4669, -78.6519, -189.707, 1.56", "-78.5007, -79.0274, -189.754, 1.8", "-78.5245, -79.4706, -189.827, 1.8", "-78.5738, -80.8944, -190.111, 0.12", "-78.5903, -81.8179, -190.336, 0.12", "-78.5903, -81.8179, -190.336, 0.48", "-78.583, -82.0145, -190.414, 0.12", "-78.5271, -82.5885, -190.677, 0.12", "-78.4929, -82.7955, -190.785, 0.48", "-78.4587, -82.9884, -190.885, 0.12", "-78.303, -83.8533, -191.471, 0.12", "-78.12, -84.9574, -192.259, 0.48", "-78.0762, -85.2803, -192.468, 0.12", "-77.987, -85.9823, -192.896, 1.56", "-77.912, -86.6222, -193.254, 1.92", "-77.8068, -87.5953, -193.741, 1.56", "-77.7557, -88.0702, -193.979, 0.12", "-77.5912, -90.2446, -194.921, 0.12", "-77.5711, -90.545, -195.046, 0.84", "-77.552, -90.8615, -195.173, 0.12", "-77.5157, -91.3523, -195.371, 0.12", "-77.3893, -92.8519, -195.918, 0.12", "-77.2532, -94.2065, -196.52, 2.4" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-43.8943, 23.7345, -98.3413, 0.12", "-44.4998, 24.4233, -99.4401, 0.12", "-44.9234, 24.9295, -100.216, 0.12", "-45.6376, 25.8192, -101.407, 2.4", "-46.8039, 27.3324, -103.372, 0.24", "-47.0423, 27.6445, -103.76, 0.24", "-47.2878, 27.9722, -104.143, 1.44", "-47.7855, 28.656, -104.906, 0.12", "-48.3285, 29.4779, -105.752, 0.12", "-48.7972, 30.2189, -106.38, 0.12", "-49.2601, 30.9407, -106.949, 2.28", "-49.8201, 31.8241, -107.687, 0.12", "-50.2826, 32.5314, -108.282, 0.12", "-50.903, 33.4648, -109.046, 0.12", "-51.5978, 34.4891, -109.88, 2.76", "-52.4533, 35.7266, -110.882, 0.24", "-52.4533, 35.7266, -110.882, 0.12", "-52.9472, 36.4496, -111.442, 0.12", "-53.1814, 36.7939, -111.709, 0.96", "-53.4874, 37.2308, -112.005, 0.96", "-54.1541, 38.2053, -112.622, 0.12", "-54.7522, 39.2007, -113.225, 0.12", "-54.9484, 39.5677, -113.449, 0.72", "-55.2508, 40.194, -113.874, 0.12", "-55.5596, 40.8529, -114.327, 0.12", "-55.8973, 41.5705, -114.783, 2.16", "-56.5159, 42.8994, -115.695, 0.12", "-56.6944, 43.2893, -115.994, 0.12", "-57.0875, 44.1518, -116.688, 0.12", "-57.3453, 44.7143, -117.131, 0.12", "-57.6526, 45.4069, -117.738, 1.44", "-58.3425, 47.0487, -119.188, 0.12", "-58.5807, 47.5956, -119.647, 0.12", "-58.755, 48.0148, -119.991, 1.56", "-58.9466, 48.5083, -120.374, 1.56", "-59.364, 49.6014, -121.231, 0.12", "-59.5421, 50.0854, -121.604, 0.12", "-59.7081, 50.5027, -121.86, 0.12", "-59.807, 50.7283, -122.025, 0.12", "-60.2243, 51.5505, -122.654, 0.12", "-60.4149, 51.8761, -122.93, 0.12", "-60.7653, 52.3753, -123.363, 1.92", "-61.0122, 52.6995, -123.687, 2.16", "-61.888, 53.7371, -124.801, 0.12", "-62.2452, 54.1108, -125.213, 0.12", "-62.5419, 54.3931, -125.539, 1.08", "-62.9008, 54.6887, -125.927, 1.32", "-63.5384, 55.1286, -126.585, 0.12", "-63.9942, 55.3891, -127.04, 0.12", "-64.3448, 55.546, -127.379, 0.48", "-64.6953, 55.668, -127.732, 0.12", "-65.4861, 55.9212, -128.527, 0.12", "-65.9776, 56.0815, -129.028, 1.44", "-66.2569, 56.1862, -129.314, 1.68", "-67.1027, 56.5962, -130.223, 0.12", "-67.726, 56.9504, -130.867, 0.12", "-68.2326, 57.2871, -131.352, 1.8", "-68.7222, 57.6744, -131.78, 2.16", "-69.4878, 58.3098, -132.377, 0.12", "-69.9566, 58.704, -132.769, 0.12", "-70.3238, 58.9899, -133.054, 0.48", "-70.3904, 59.0368, -133.104, 0.12", "-70.7914, 59.2675, -133.417, 0.12", "-71.4339, 59.5828, -133.975, 1.68", "-72.7415, 60.1496, -135.187, 0.12", "-73.2602, 60.3636, -135.689, 0.12", "-73.5746, 60.513, -136.004, 0.48", "-74.1436, 60.8177, -136.551, 0.12", "-74.521, 61.0469, -136.914, 0.12", "-74.961, 61.3557, -137.337, 1.56", "-75.3321, 61.6254, -137.657, 2.28", "-76.2034, 62.2843, -138.351, 0.12", "-76.6118, 62.5796, -138.654, 0.12", "-76.9017, 62.7686, -138.826, 0.48", "-77.4165, 63.0743, -139.09, 0.12", "-77.79, 63.2773, -139.277, 0.12", "-78.7125, 63.7077, -139.703, 2.16", "-79.9869, 64.1704, -140.192, 0.12", "-80.8804, 64.4384, -140.498, 0.12", "-81.3869, 64.5718, -140.678, 0.6", "-81.7219, 64.648, -140.803, 0.12", "-82.3887, 64.78, -141.05, 0.12", "-83.1866, 64.9207, -141.339, 2.4", "-83.5774, 64.9907, -141.453, 2.4", "-84.9997, 65.2563, -141.849, 0.12", "-86.1774, 65.4893, -142.127, 0.12", "-86.9425, 65.649, -142.276, 1.68", "-87.5256, 65.7698, -142.369, 2.16", "-88.7274, 66.0063, -142.488, 0.12", "-89.4538, 66.142, -142.511, 0.12", "-90.037, 66.2384, -142.477, 0.6", "-90.2408, 66.2701, -142.464, 0.12", "-91.3682, 66.4425, -142.43, 0.12", "-91.8406, 66.509, -142.386, 0.84", "-92.2928, 66.5705, -142.315, 1.08", "-92.518, 66.6087, -142.28, 1.08", "-92.8558, 66.6817, -142.235, 0.12", "-93.4819, 66.851, -142.148, 0.12", "-94.2414, 67.0883, -142.038, 1.44", "-94.8382, 67.2719, -141.967, 1.68", "-95.4849, 67.4688, -141.889, 0.12", "-96.4281, 67.7556, -141.792, 0.12", "-96.6571, 67.8224, -141.775, 1.32", "-97.1798, 67.9626, -141.764, 0.12", "-97.5813, 68.0624, -141.768, 0.12", "-97.8085, 68.1049, -141.764, 0.36", "-98.1801, 68.1348, -141.751, 0.12", "-98.6956, 68.1403, -141.734, 0.12", "-99.1079, 68.1328, -141.72, 0.48", "-99.7225, 68.108, -141.715, 0.12", "-100.546, 68.0585, -141.725, 0.12", "-101.171, 68.0096, -141.742, 1.8", "-101.607, 67.9673, -141.761, 2.64", "-101.914, 67.9341, -141.784, 2.64", "-102.948, 67.8022, -141.893, 0.12", "-103.857, 67.6674, -142.028, 0.12", "-104.26, 67.6101, -142.089, 0.12", "-104.585, 67.5668, -142.139, 0.48", "-104.788, 67.5394, -142.165, 0.12", "-105.209, 67.493, -142.204, 0.12", "-105.62, 67.4693, -142.22, 0.6", "-105.992, 67.4829, -142.225, 0.12", "-106.506, 67.5364, -142.227, 0.12", "-106.939, 67.5981, -142.199, 0.72", "-107.396, 67.6767, -142.152, 0.96", "-107.936, 67.8061, -142.11, 0.12", "-108.572, 67.9907, -142.085, 0.12", "-108.977, 68.1174, -142.075, 1.2", "-109.723, 68.3823, -142.07, 1.56", "-110.239, 68.5943, -142.093, 1.68", "-111.166, 69.0504, -142.17, 0.12", "-111.977, 69.4953, -142.258, 0.12", "-112.382, 69.7451, -142.388, 1.56", "-112.847, 70.0504, -142.561, 1.56", "-113.388, 70.429, -142.803, 0.12", "-115.106, 71.6891, -143.639, 0.12", "-115.321, 71.8537, -143.754, 0.48", "-117.215, 73.4378, -145.046, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-20.415, -107.417, -35.4756, 3.37", "-21.1104, -107.911, -34.0819, 3.37", "-22.9334, -109.217, -30.1321, 0.12", "-23.0312, -109.3, -29.8547, 0.12", "-23.2537, -109.522, -29.0735, 0.12", "-23.3571, -109.655, -28.5781, 0.72", "-23.4352, -109.806, -27.9916, 0.72", "-23.4022, -109.874, -27.6958, 0.12", "-22.7145, -110.191, -26.0287, 0.12", "-22.6744, -110.239, -25.8294, 0.96", "-22.7173, -110.464, -25.1306, 0.96", "-23.1116, -110.827, -24.102, 0.12", "-23.2552, -110.906, -23.8829, 0.12", "-23.5775, -111.024, -23.5287, 0.84", "-25.6063, -111.64, -21.7517, 0.24", "-26.779, -111.998, -20.8091, 1.92", "-28.5693, -112.565, -19.5121, 0.24", "-29.343, -112.823, -19.0072, 1.68", "-31.4234, -113.577, -17.7449, 1.68", "-31.9838, -113.805, -17.4451, 0.12", "-32.5585, -114.109, -17.2187, 0.12", "-32.987, -114.417, -17.0966, 0.6", "-33.4626, -114.918, -17.0182, 1.08", "-33.9787, -115.585, -16.9797, 1.08", "-34.6282, -116.587, -17.0767, 0.12", "-35.0049, -117.172, -17.1348, 0.12", "-35.3639, -117.771, -17.1952, 0.12", "-35.6939, -118.384, -17.2583, 0.12", "-35.9747, -119.008, -17.3196, 0.12", "-36.1677, -119.548, -17.3843, 0.96", "-36.371, -120.219, -17.4736, 0.12", "-36.6284, -121.046, -17.589, 0.12", "-36.8015, -121.516, -17.6546, 1.32", "-36.9288, -121.798, -17.7005, 1.32", "-37.3447, -122.615, -17.8397, 0.12", "-37.7579, -123.332, -17.9775, 0.12", "-37.8581, -123.499, -18.01, 0.48", "-38.188, -124.046, -18.1053, 0.12", "-38.3325, -124.321, -18.1373, 0.12", "-38.4968, -124.694, -18.1592, 0.12", "-38.6102, -124.971, -18.0747, 0.48", "-38.8638, -125.478, -17.8209, 0.36", "-39.0326, -125.849, -17.6875, 0.36", "-39.1732, -126.207, -17.6031, 1.2", "-39.3141, -126.595, -17.5345, 1.2", "-40.1267, -128.575, -17.106, 0.12", "-40.4236, -129.31, -16.9349, 0.12", "-41.1063, -130.895, -16.5882, 0.12", "-41.4538, -131.68, -16.4392, 0.12", "-41.6848, -132.202, -16.3695, 0.12", "-42.1634, -133.394, -16.3235, 1.32", "-42.3904, -134.358, -16.4543, 1.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-20.415, -107.417, -35.4756, 0.12", "-21.3374, -107.754, -36.5027, 0.12", "-21.9494, -107.978, -37.1843, 0.12", "-22.1431, -108.049, -37.4, 0.96", "-22.3713, -108.132, -37.6541, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-4.49213, -105.114, -40.9429, 0.12", "-4.32682, -105.901, -40.828, 0.12", "-4.23856, -106.548, -40.7521, 0.12", "-4.15607, -107.155, -40.686, 0.72", "-4.0423, -107.94, -40.6171, 0.84", "-3.97903, -108.37, -40.5658, 0.48", "-3.93392, -108.665, -40.5262, 0.12", "-3.83474, -109.303, -40.43, 0.12", "-3.77569, -109.716, -40.356, 0.12", "-3.70983, -110.095, -40.2858, 0.84", "-3.56766, -110.834, -40.2273, 0.36", "-3.49755, -111.192, -40.2146, 0.12", "-3.31953, -112.048, -40.2112, 0.12", "-3.1581, -112.788, -40.2321, 1.8", "-3.04359, -113.433, -40.2792, 1.56", "-2.86943, -114.557, -40.4124, 0.12", "-2.8418, -114.759, -40.4511, 0.12", "-2.8297, -114.859, -40.4726, 0.36", "-2.79785, -115.214, -40.5573, 0.12", "-2.78871, -115.832, -40.7024, 0.12", "-2.7981, -116.036, -40.7393, 0.12", "-2.81806, -116.359, -40.7763, 0.72", "-2.85873, -116.872, -40.8383, 0.96", "-2.89626, -117.274, -40.8871, 0.12", "-3.02842, -118.499, -41.038, 0.12", "-3.07698, -118.899, -41.0883, 0.84", "-3.13343, -119.319, -41.1499, 0.12", "-3.21667, -119.816, -41.2312, 0.12", "-3.27715, -120.139, -41.2875, 0.96", "-3.35231, -120.546, -41.3613, 0.12", "-3.48261, -121.238, -41.4992, 0.12", "-3.61098, -121.904, -41.6419, 1.68", "-3.67013, -122.184, -41.7092, 1.68" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.49213, -105.114, -40.9429, 0.6", "-4.34871, -104.969, -37.1334, 0.6", "-4.18583, -105.272, -37.6633, 0.6", "-3.6615, -106.192, -38.8805, 0.12", "-3.446, -106.57, -39.3154, 0.12", "-3.17666, -107.043, -39.859, 0.96", "-2.90629, -107.517, -40.4047, 0.96", "-2.29942, -108.596, -41.8663, 0.12", "-2.05992, -109.056, -42.5008, 0.12", "-1.93238, -109.298, -42.8054, 0.48" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "26.7387, -109.63, -37.8818, 0.12", "27.7792, -110.797, -35.6302, 0.12", "28.0195, -111.056, -35.1431, 0.12", "28.1342, -111.178, -34.9276, 0.6", "28.4679, -111.509, -34.3431, 0.12", "29.0936, -112.091, -33.3251, 0.12", "29.2692, -112.249, -33.0456, 0.12", "29.4106, -112.356, -32.8784, 0.12", "29.6096, -112.508, -32.6517, 0.12", "30.0878, -112.881, -32.1094, 0.12", "30.2423, -113.006, -31.9506, 0.6", "30.5732, -113.315, -31.6778, 0.12", "30.9029, -113.636, -31.3828, 0.12", "31.3384, -114.037, -30.9951, 0.6" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "26.7387, -109.63, -37.8818, 0.24", "26.788, -110.473, -38.1887, 0.24", "26.7894, -111.231, -38.4826, 0.24", "26.7778, -111.581, -38.6182, 0.96", "26.746, -112.19, -38.8516, 1.8", "26.7287, -112.786, -39.1142, 0.84", "26.7189, -113.168, -39.3054, 0.12", "26.7092, -113.749, -39.66, 0.12", "26.6966, -114.05, -39.8593, 0.72", "26.6917, -114.121, -39.9016, 0.72", "26.6596, -114.856, -40.2931, 0.24", "26.6625, -115.171, -40.4168, 0.24", "26.6899, -115.695, -40.5606, 0.24", "26.7273, -116.238, -40.6483, 0.24", "26.7478, -116.741, -40.6848, 0.24", "26.7479, -117.316, -40.6924, 0.24", "26.7228, -117.887, -40.6439, 1.44", "26.6859, -118.508, -40.5634, 1.92", "26.6298, -119.118, -40.4705, 1.92", "26.5603, -119.735, -40.3797, 1.2", "26.4805, -120.369, -40.3023, 0.48", "26.3907, -120.987, -40.2374, 0.12", "26.3256, -121.433, -40.1811, 0.12", "26.2888, -121.708, -40.1484, 0.6", "26.2498, -122.054, -40.1195, 0.12", "26.1903, -122.773, -40.0544, 0.12", "26.1767, -123.135, -40.0271, 0.12", "26.1718, -124.417, -40.0145, 2.4" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "43.6072, -36.1396, -12.4403, 0.96", "43.1465, -32.3278, -3.39555, 0.96", "43.0762, -31.8379, -2.44461, 0.72", "43.0239, -31.5046, -1.93074, 0.24", "42.9745, -31.0963, -1.44628, 0.24", "42.932, -30.4428, -0.872433, 0.24", "42.9203, -29.563, -0.233533, 0.84", "43.0038, -28.3437, 0.0171742, 1.2", "43.1306, -27.2344, 0.300982, 0.48", "43.3456, -25.8101, 0.801087, 0.24", "43.6466, -24.3527, 1.39548, 0.24", "44.1272, -22.5345, 2.2568, 1.68", "44.4007, -21.622, 2.71098, 2.28", "44.6148, -20.9558, 3.05613, 2.4", "45.3115, -18.7887, 4.19905, 0.36", "45.5672, -17.938, 4.64495, 0.36", "45.8916, -16.7671, 5.219, 0.84", "46.3068, -15.1012, 5.95813, 0.84", "46.6804, -13.41, 6.67304, 0.6", "47.0085, -11.8347, 7.30078, 0.6", "47.2087, -10.8335, 7.64997, 0.96", "47.335, -10.0429, 7.92087, 0.96", "47.5078, -8.5629, 8.39181, 0.12", "47.5546, -7.82971, 8.61461, 0.12", "47.5758, -7.20486, 8.77015, 0.12", "47.5878, -6.52503, 8.90638, 0.12", "47.6031, -5.83993, 9.04501, 0.6", "47.6288, -5.29336, 9.12653, 0.96", "47.6416, -4.40841, 9.09654, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "43.6072, -36.1396, -12.4403, 0.12", "45.0865, -36.4884, -11.9825, 0.12", "45.5226, -36.5798, -11.8457, 0.12", "46.0688, -36.6834, -11.6719, 0.6", "46.7388, -36.7866, -11.4657, 0.6", "47.7063, -36.911, -11.1892, 0.12", "48.6053, -36.9883, -10.9569, 0.12", "48.719, -36.9862, -10.9321, 0.36", "49.0865, -36.9573, -10.8629, 0.12", "49.5907, -36.8875, -10.75, 0.12", "50.0379, -36.7777, -10.6476, 0.48", "50.69, -36.5968, -10.5172, 0.6", "51.1415, -36.473, -10.4151, 0.48", "51.5437, -36.3861, -10.3278, 0.48", "52.4964, -36.2081, -9.9709, 0.12", "53.4606, -36.0975, -9.51984, 2.04", "54.0145, -36.0788, -9.23374, 3.25", "54.5295, -36.1235, -8.96561, 3.37", "55.1819, -36.2507, -8.64038, 2.88", "57.2411, -36.8564, -7.66409, 0.24", "58.1113, -37.1988, -7.28676, 0.24", "58.6644, -37.4728, -7.05051, 0.72", "59.6397, -37.9883, -6.68171, 0.96", "60.2658, -38.3422, -6.49559, 0.24", "60.4685, -38.4566, -6.4724, 0.24", "60.7624, -38.6032, -6.50958, 0.24", "61.431, -38.8108, -6.62284, 0.24", "62.0061, -38.8851, -6.72146, 1.2", "62.4719, -38.8831, -6.73187, 1.92", "63.4303, -38.8118, -6.65603, 1.92", "64.3964, -38.7023, -6.51471, 0.36", "65.0022, -38.6143, -6.3523, 0.36", "66.2, -38.4105, -5.94164, 0.36", "68.0846, -38.0831, -5.20582, 1.68", "68.6632, -37.9897, -4.98068, 2.52", "69.5529, -37.8689, -4.6312, 2.64", "71.5108, -37.6863, -3.96428, 0.24", "72.3656, -37.6438, -3.73064, 0.24", "72.9495, -37.6309, -3.63283, 0.36", "73.9582, -37.636, -3.62454, 1.08", "74.4791, -37.6421, -3.62343, 1.08", "75.4024, -37.6407, -3.65258, 0.48", "75.8658, -37.6247, -3.699, 0.24", "76.5138, -37.548, -3.6937, 0.24", "77.0776, -37.4187, -3.61653, 0.6", "78.1936, -37.0696, -3.31988, 0.36", "78.7278, -36.9177, -3.15982, 0.36", "79.1662, -36.8354, -2.98051, 0.36", "79.4819, -36.8186, -2.83162, 0.48", "79.7188, -36.836, -2.72489, 0.24", "80.1536, -36.8966, -2.53015, 0.24", "80.9385, -37.0338, -2.25544, 0.24", "82.0654, -37.2341, -1.91494, 0.24", "82.5347, -37.317, -1.79261, 1.2", "83.3444, -37.4256, -1.62127, 2.16", "84.5163, -37.5171, -1.37729, 1.8", "85.4418, -37.5374, -1.20232, 0.36", "86.788, -37.4577, -0.833327, 0.36", "87.383, -37.3903, -0.645616, 0.36", "88.3582, -37.2404, -0.282336, 0.36", "89.2956, -37.0623, 0.194107, 1.56", "90.0095, -36.9081, 0.626813, 2.04", "91.9753, -36.4614, 2.02962, 0.24", "92.5419, -36.3386, 2.48521, 0.24", "92.8254, -36.2878, 2.71514, 0.24", "94.1206, -36.1523, 3.75755, 1.68", "94.5087, -36.136, 4.03992, 2.04", "94.8021, -36.1342, 4.26267, 2.04", "96.0905, -36.1244, 5.16326, 0.24", "96.6483, -36.0838, 5.58247, 0.24", "97.1092, -36.0071, 5.94039, 1.2", "97.4758, -35.8815, 6.22567, 1.2", "98.8402, -35.1377, 7.39164, 0.12", "99.3338, -34.7293, 7.8335, 0.12", "99.6082, -34.3985, 8.0605, 0.24", "99.795, -34.1322, 8.24332, 0.24", "100.159, -33.6305, 8.56504, 0.24", "100.365, -33.3755, 8.72336, 0.24", "100.762, -32.9872, 8.92007, 0.24", "101.415, -32.5079, 9.19496, 0.24", "102.627, -31.738, 9.70977, 0.12", "103.447, -31.2886, 10.0558, 0.12", "103.677, -31.1823, 10.152, 1.44", "104.552, -30.809, 10.5094, 2.52", "105.504, -30.3986, 10.8775, 2.04" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.2797, -338.892, -48.551, 0.12", "-9.62308, -340.364, -48.4896, 0.12", "-9.28541, -341.11, -48.4542, 0.12", "-9.12951, -341.454, -48.4389, 0.48", "-8.86111, -342.049, -48.3926, 0.48", "-8.5733, -342.671, -48.3312, 0.48", "-8.40105, -342.994, -48.3253, 0.48", "-8.22371, -343.261, -48.3448, 0.48", "-7.79333, -343.789, -48.4317, 1.68", "-7.32455, -344.277, -48.5482, 2.28", "-6.8692, -344.7, -48.6723, 2.4", "-5.54523, -345.805, -49.0702, 0.48", "-4.6277, -346.531, -49.3751, 0.36", "-4.06213, -346.943, -49.5843, 0.12", "-3.74976, -347.144, -49.7122, 0.12", "-3.51026, -347.281, -49.8247, 0.12", "-3.13646, -347.468, -50.0018, 0.72" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-10.2797, -338.892, -48.551, 0.12", "-10.4132, -340.208, -48.5623, 0.12", "-10.4286, -340.541, -48.5823, 0.12", "-10.425, -340.882, -48.6107, 0.12", "-10.4083, -341.449, -48.7069, 0.12", "-10.4046, -341.73, -48.766, 0.48", "-10.4132, -342.249, -48.8849, 0.48", "-10.4139, -342.443, -48.9468, 0.12", "-10.5118, -343.026, -49.2298, 0.12", "-10.6752, -343.58, -49.5535, 0.12", "-10.7856, -343.899, -49.7427, 1.68", "-10.8725, -344.142, -49.9023, 1.8", "-11.0246, -344.556, -50.1953, 1.8", "-11.4855, -345.842, -51.0783, 0.12", "-11.6022, -346.187, -51.3135, 0.12", "-11.7927, -346.903, -51.7448, 0.12", "-11.887, -347.45, -52.0743, 0.48", "-11.9044, -347.637, -52.1803, 0.48", "-11.9032, -348.095, -52.3873, 0.48", "-11.8993, -348.238, -52.4417, 0.12", "-11.9107, -348.632, -52.6162, 0.12", "-11.9549, -349.19, -52.8694, 0.12", "-11.9853, -349.463, -52.9852, 0.96", "-12.0706, -350.051, -53.2411, 1.44", "-12.2669, -351.144, -53.7936, 0.12", "-12.4058, -351.797, -54.1237, 0.12", "-12.4699, -352.08, -54.2654, 0.12", "-12.5206, -352.287, -54.3603, 0.6", "-12.6132, -352.621, -54.5346, 0.6", "-12.8029, -353.184, -54.9289, 0.12", "-12.9967, -353.686, -55.3274, 0.12", "-13.0266, -353.763, -55.3951, 0.48", "-13.1081, -354.0, -55.5765, 0.48", "-13.299, -354.701, -56.0013, 0.48", "-13.474, -355.485, -56.3743, 0.24", "-13.5141, -355.748, -56.5406, 0.12", "-13.5805, -356.546, -57.0507, 0.12", "-13.611, -357.067, -57.406, 1.44", "-13.6211, -357.503, -57.7038, 2.16", "-13.6187, -358.086, -58.0827, 2.28", "-13.5893, -360.231, -59.4286, 0.12", "-13.5487, -361.399, -60.186, 0.12", "-13.5118, -362.043, -60.6177, 0.84", "-13.4796, -362.495, -60.9186, 1.44", "-13.4484, -362.87, -61.1623, 0.96", "-13.4137, -363.267, -61.3513, 0.12", "-13.3938, -363.645, -61.443, 0.12", "-13.3922, -364.058, -61.5386, 0.12", "-13.4004, -364.295, -61.5837, 0.36", "-13.4923, -364.902, -61.0157, 0.12", "-13.6812, -365.865, -59.7746, 0.12", "-13.7341, -366.085, -59.3958, 1.08", "-13.8005, -366.322, -58.8888, 1.8", "-13.8374, -366.441, -58.5777, 2.04", "-14.4812, -368.377, -52.638, 0.12" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "16.3607, 114.274, 11.4834, 0.48", "16.8764, 116.392, 11.8051, 0.48", "17.0778, 117.307, 11.9146, 0.48", "17.1881, 117.816, 11.9647, 0.48", "17.3198, 118.456, 11.9982, 0.48", "17.5731, 119.843, 12.0165, 0.48", "17.7826, 121.242, 12.0017, 0.48", "17.8108, 121.536, 11.975, 0.72", "17.8645, 122.104, 11.9551, 0.96", "17.9618, 123.046, 11.9661, 0.96", "18.0717, 123.854, 12.0793, 0.36", "18.2989, 125.078, 12.3737, 0.36", "18.4598, 125.845, 12.6073, 0.36", "18.8082, 127.482, 13.1564, 1.56", "18.9662, 128.227, 13.4237, 2.16", "19.3848, 130.191, 14.1746, 0.48", "19.674, 131.668, 14.6598, 0.48", "19.8201, 132.532, 14.9053, 0.48", "19.8745, 133.033, 15.0105, 0.48", "19.8805, 133.926, 15.0972, 1.68", "19.8399, 134.459, 15.1148, 1.92", "19.6458, 136.173, 15.0207, 1.08", "19.5499, 137.09, 14.9732, 0.48", "19.5106, 137.75, 14.941, 0.36", "19.5347, 138.963, 14.8922, 0.36", "19.6359, 139.77, 14.904, 0.36", "19.9663, 141.23, 14.9509, 0.72", "20.1479, 141.785, 14.9792, 0.36", "20.3798, 142.431, 14.9877, 0.36", "20.7573, 143.366, 14.9971, 0.36", "21.2692, 144.554, 15.0074, 0.84", "21.8417, 145.809, 15.2177, 1.92", "22.1652, 146.672, 15.2666, 2.28", "22.3542, 147.303, 15.2376, 2.64", "22.4755, 147.818, 15.1626, 2.76", "22.6033, 148.551, 14.9838, 2.76", "23.0879, 151.538, 13.9699, 1.56", "23.8044, 155.491, 12.3876, 0.12", "23.8803, 155.86, 12.2307, 0.12", "23.9511, 156.187, 12.106, 0.12", "24.0457, 156.725, 11.9172, 0.72", "24.1519, 157.501, 11.6769, 0.96", "24.2335, 158.427, 11.3908, 0.48", "24.3405, 159.22, 11.3618, 0.36", "24.5423, 161.006, 11.3083, 0.36", "24.5947, 161.582, 11.3402, 0.36", "24.6227, 162.03, 11.3848, 0.12", "24.6726, 163.184, 11.5855, 0.96", "24.7089, 163.99, 11.7737, 1.32", "24.7498, 164.5, 11.8583, 1.2", "24.9511, 166.078, 12.2965, 0.48", "25.1285, 167.207, 12.6473, 0.24", "25.2765, 168.045, 12.9129, 1.2", "25.4195, 168.762, 13.1395, 1.68", "25.7478, 170.241, 13.6139, 1.68", "26.3371, 172.719, 14.3974, 1.8", "26.5814, 173.671, 14.6607, 0.96", "26.8746, 174.658, 15.0278, 1.08", "27.1233, 175.428, 15.3205, 0.36", "27.6597, 177.051, 15.8689, 0.36", "27.9625, 178.025, 16.1406, 0.36", "28.1738, 178.711, 16.2387, 1.08", "28.7124, 180.514, 16.473, 1.2", "29.1387, 182.019, 16.6149, 0.96", "29.5425, 183.577, 16.6791, 0.36", "29.8663, 184.954, 16.5694, 0.24", "30.0493, 185.829, 16.4294, 0.6", "30.1634, 186.409, 16.3282, 0.12", "30.2725, 186.906, 16.2305, 0.24", "30.6402, 188.393, 15.9798, 0.24", "30.9569, 189.633, 15.779, 0.24", "31.1946, 190.63, 15.5293, 1.68", "31.5102, 192.108, 15.1219, 2.52", "31.7252, 193.356, 14.7861, 0.48", "31.9018, 194.562, 14.4691, 0.48", "32.0256, 195.737, 14.1923, 0.72", "32.0909, 197.034, 13.9555, 1.08", "32.0829, 197.912, 13.8288, 1.68", "31.9916, 199.061, 13.6858, 1.2", "31.8637, 200.028, 13.6395, 0.36", "31.6749, 201.292, 13.651, 0.36", "31.5446, 202.148, 13.7275, 0.36", "31.3891, 203.12, 13.8578, 0.36", "31.2009, 204.315, 14.0124, 2.04", "31.1291, 204.839, 14.088, 2.4", "31.0132, 206.08, 14.2137, 2.4", "30.9761, 207.961, 14.2516, 0.36", "31.0449, 209.115, 14.1877, 0.36", "31.1708, 210.14, 14.1261, 1.44", "31.3244, 210.933, 14.0776, 2.16", "31.7309, 212.764, 13.9787, 0.48", "31.9788, 213.814, 13.9377, 0.12", "32.1559, 214.537, 13.8941, 0.6", "32.5616, 216.227, 13.9043, 0.36", "32.734, 217.051, 13.9766, 0.24", "32.877, 218.006, 14.1454, 0.24", "32.9176, 218.539, 14.2632, 0.24", "32.9508, 219.523, 14.4238, 0.36", "32.9848, 220.62, 14.5022, 0.36", "33.0567, 221.424, 14.5114, 0.36", "33.1611, 222.066, 14.5309, 0.36", "33.427, 223.165, 14.5453, 1.68", "33.6504, 223.95, 14.482, 2.4", "33.8158, 224.491, 14.3901, 2.4", "34.3154, 225.944, 14.1436, 0.24", "34.5672, 226.635, 14.0358, 0.24", "34.7226, 227.071, 13.9779, 0.48", "35.2098, 228.573, 13.8568, 0.24", "35.4201, 229.48, 13.8091, 0.24", "35.5508, 230.452, 13.7457, 0.24", "35.5836, 231.24, 13.7307, 0.72", "35.5969, 231.927, 13.7692, 0.84", "35.6044, 232.401, 13.8148, 0.36", "35.6249, 233.307, 13.8875, 0.36", "35.6538, 234.282, 13.8561, 0.48", "35.7175, 235.702, 13.65, 0.36", "35.7967, 236.487, 13.4727, 0.36", "35.8791, 237.025, 13.3556, 0.96", "36.1358, 238.286, 13.0104, 0.96", "36.3, 238.867, 12.8816, 0.36", "36.4498, 239.354, 12.8146, 0.36", "36.8481, 240.705, 12.6946, 2.4", "37.2429, 242.148, 12.6842, 3.25", "37.5637, 243.487, 12.7797, 2.16", "37.9529, 245.38, 12.9886, 0.24", "38.1998, 246.771, 13.1361, 0.12", "38.3735, 247.938, 13.2338, 0.24", "38.4093, 248.336, 13.2556, 0.36", "38.4477, 249.369, 13.222, 0.36", "38.4465, 250.668, 13.1222, 1.32", "38.4385, 251.469, 13.0043, 0.48", "38.4605, 251.932, 12.9398, 0.12", "38.5438, 252.733, 12.8303, 0.12", "38.6687, 253.655, 12.7278, 0.12", "38.7695, 254.224, 12.6815, 0.84", "39.0781, 255.807, 12.619, 1.56", "39.2133, 256.443, 12.6039, 1.68", "39.5009, 257.594, 12.5967, 0.12", "39.8133, 258.578, 12.5846, 0.12", "40.047, 259.055, 12.7138, 0.24", "40.1949, 259.239, 12.833, 0.12", "40.6395, 259.539, 13.2423, 0.12", "40.9428, 259.684, 13.5524, 0.12", "42.0178, 260.023, 14.7541, 3.25", "45.1031, 260.589, 18.4151, 0.12", "45.3856, 260.616, 18.7725, 0.12", "45.6261, 260.616, 19.0924, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "16.3607, 114.274, 11.4834, 0.12", "14.4711, 114.932, 11.1883, 0.12", "14.0134, 115.091, 11.132, 0.12", "13.6781, 115.212, 11.0607, 0.96", "12.848, 115.497, 10.8403, 0.12", "12.2938, 115.679, 10.6334, 0.12", "11.9729, 115.786, 10.501, 0.12", "11.5147, 115.947, 10.2856, 1.08", "10.5511, 116.261, 9.89298, 0.36", "9.61493, 116.553, 9.52085, 0.36", "8.42782, 116.948, 9.18988, 0.36", "7.89086, 117.115, 9.05367, 0.36", "6.85253, 117.382, 9.03876, 0.36", "6.2604, 117.49, 9.16351, 0.36", "5.60516, 117.55, 9.44663, 0.36", "4.16765, 117.626, 10.2772, 1.92", "3.36945, 117.628, 10.8506, 1.92", "0.944078, 117.483, 12.7839, 0.12", "0.404893, 117.417, 13.2647, 0.12", "0.0962663, 117.36, 13.5808, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.94079, 154.508, -17.2791, 0.12", "-6.42624, 155.561, -18.194, 0.12", "-6.50007, 155.761, -18.3313, 0.12", "-6.60587, 156.138, -18.5291, 0.24", "-6.83757, 157.406, -19.1676, 0.24", "-6.89331, 157.88, -19.3867, 0.24", "-6.92007, 158.214, -19.5315, 0.24", "-6.89424, 158.926, -19.7776, 1.68", "-6.85282, 159.421, -19.9705, 1.68", "-6.64938, 160.899, -20.5695, 0.12", "-6.54883, 161.486, -20.7984, 0.12", "-6.51063, 161.683, -20.8904, 0.6", "-6.42842, 162.063, -21.0962, 0.48", "-6.20745, 162.986, -21.6598, 0.12", "-6.08085, 163.462, -21.9761, 0.12", "-6.04466, 163.581, -22.0435, 0.12", "-5.96508, 163.851, -22.1917, 0.96", "-5.88143, 164.131, -22.3302, 0.96", "-5.79183, 164.444, -22.4788, 0.48", "-5.57785, 165.19, -22.7751, 0.12", "-5.28728, 166.212, -23.1821, 0.12", "-5.10746, 166.853, -23.4443, 1.8", "-5.01472, 167.19, -23.5824, 2.16", "-4.72084, 168.229, -23.9873, 0.12", "-4.49458, 168.984, -24.264, 0.12", "-4.40409, 169.276, -24.3562, 0.96", "-4.26076, 169.734, -24.4965, 0.24", "-4.12397, 170.168, -24.6244, 0.24", "-3.90505, 170.82, -24.8193, 1.68", "-3.72205, 171.304, -24.9571, 0.12", "-3.5496, 171.697, -25.0719, 0.12", "-3.30567, 172.192, -25.2876, 0.6", "-3.10457, 172.559, -25.4776, 0.12", "-2.66132, 173.328, -25.9331, 0.12", "-2.57236, 173.477, -26.0283, 0.12", "-2.21482, 174.08, -26.423, 1.92", "-1.35426, 175.531, -27.3424, 0.12", "-0.931744, 176.261, -27.772, 0.12", "-0.807193, 176.487, -27.8787, 0.84", "-0.676092, 176.754, -27.9744, 0.12", "-0.378358, 177.464, -28.1496, 0.12", "-0.178604, 178.021, -28.1633, 1.68", "-0.056335, 178.381, -28.0761, 1.2", "0.159505, 179.005, -27.8709, 0.12", "0.364199, 179.551, -27.6397, 0.12", "0.518097, 179.921, -27.4497, 0.6", "0.962485, 180.874, -26.8882, 0.48", "1.18448, 181.341, -26.6129, 0.48", "1.3569, 181.688, -26.409, 0.48", "1.55124, 182.087, -26.2066, 0.12", "1.67905, 182.357, -26.0954, 0.12", "1.89301, 182.89, -25.9656, 1.44", "1.99441, 183.229, -25.9317, 1.68", "2.15887, 183.906, -25.8888, 0.12", "2.33542, 184.788, -25.8594, 0.12", "2.46928, 185.57, -25.8583, 1.92", "2.60812, 186.485, -25.865, 0.12", "2.74644, 187.451, -25.8844, 0.12", "2.79806, 187.807, -25.8967, 0.6", "2.82197, 187.983, -25.906, 0.12", "2.92165, 188.79, -25.9462, 0.12", "2.9738, 189.34, -26.0116, 1.08", "2.99739, 189.616, -26.0581, 0.72", "3.01011, 189.807, -26.1048, 0.12", "3.0485, 190.486, -26.3059, 0.12", "3.07951, 191.125, -26.5173, 1.44", "3.10985, 192.248, -27.0001, 0.12", "3.12294, 192.567, -27.1459, 0.12", "3.12825, 192.648, -27.1827, 0.48", "3.14568, 192.83, -27.26, 0.12", "3.23168, 193.407, -27.4689, 0.48", "3.38359, 194.114, -27.64, 0.12", "3.6106, 195.015, -27.8377, 0.12", "3.65372, 195.183, -27.8803, 0.72", "3.79964, 195.767, -28.0312, 1.44", "3.91222, 196.214, -28.1444, 1.8", "4.06521, 196.767, -28.2798, 1.68", "4.38524, 197.928, -28.5342, 0.12", "4.48998, 198.351, -28.6572, 0.12", "4.58464, 198.764, -28.7939, 0.12", "4.67251, 199.237, -28.9824, 1.32", "4.72681, 199.574, -29.1263, 1.32", "4.75721, 199.817, -29.2313, 1.32", "4.81867, 200.499, -29.4847, 0.12", "4.84744, 201.102, -29.7711, 0.12", "4.83239, 201.705, -30.1321, 0.72" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.94079, 154.508, -17.2791, 0.12", "1.48149, 154.063, -1.09448, 0.12", "1.77085, 154.047, -0.47552, 0.12", "1.95325, 154.038, -0.09305, 0.12", "2.58155, 154.006, 1.197, 0.84", "2.79293, 153.995, 1.63144, 0.84", "3.23995, 153.959, 2.63422, 0.36", "3.38819, 154.065, 2.18635, 0.36", "3.49172, 154.186, 1.72969, 0.36", "3.59289, 154.332, 1.18889, 0.36", "3.81832, 154.676, -0.0670161, 0.36", "4.27058, 155.434, -2.72067, 0.36", "4.52673, 155.858, -4.10797, 2.04", "4.94449, 156.516, -6.20377, 1.56", "5.15793, 156.814, -7.08931, 0.12", "5.27647, 156.957, -7.47912, 0.12", "5.70697, 157.327, -8.43934, 1.2", "6.13649, 157.558, -9.05115, 0.48", "6.39848, 157.663, -9.34567, 0.12", "7.17592, 157.942, -10.0469, 0.12", "7.95472, 158.242, -10.8393, 1.32", "8.29811, 158.383, -11.2268, 1.68", "9.27292, 158.852, -12.4808, 0.12", "9.5455, 159.018, -12.9296, 0.12", "9.91016, 159.287, -13.7016, 0.6", "10.5352, 159.782, -15.2825, 0.12", "10.7437, 159.937, -15.8345, 0.12", "11.3079, 160.341, -17.4179, 1.8", "11.9001, 160.735, -19.05, 1.8", "12.4839, 161.075, -20.796, 0.48", "12.6982, 161.167, -21.4017, 0.48", "12.9377, 161.229, -21.9532, 0.48", "13.4407, 161.321, -23.0229, 1.44", "13.7559, 161.357, -23.6282, 1.68", "14.9401, 161.538, -25.755, 0.36", "15.4619, 161.698, -26.7007, 0.36", "15.867, 161.943, -27.6727, 1.68", "16.2017, 162.245, -28.6391, 1.2", "16.6112, 162.768, -30.0677, 0.36", "16.8555, 163.186, -31.0654, 0.36", "17.1258, 163.861, -32.4462, 1.68", "17.5118, 165.255, -35.1006, 0.24", "17.5878, 165.583, -35.6834, 0.24", "17.6966, 165.974, -36.34, 0.84", "17.8031, 166.264, -36.8208, 0.96", "18.14, 166.849, -37.8874, 0.24", "18.396, 167.111, -38.4427, 0.24", "18.975, 167.457, -39.3892, 1.44", "19.2176, 167.551, -39.8768, 1.68", "19.5693, 167.614, -40.9351, 0.36", "19.7161, 167.601, -41.5111, 0.36", "19.8088, 167.559, -41.9776, 0.36", "20.1441, 167.318, -43.9856, 0.96", "20.4974, 166.984, -46.2982, 1.68", "20.9138, 166.546, -49.072, 0.6", "20.9953, 166.448, -49.5994, 0.48", "21.315, 166.021, -51.5232, 2.04", "21.4374, 165.841, -52.159, 2.52", "21.8829, 165.205, -53.8602, 0.36", "22.043, 165.014, -54.277, 0.36", "22.3619, 164.729, -54.8504, 0.48", "23.0822, 164.14, -56.0066, 0.36", "23.3573, 163.91, -56.3944, 0.36", "23.5147, 163.771, -56.6108, 0.36", "24.341, 163.057, -57.5933, 0.36", "25.0465, 162.471, -58.3489, 1.08", "25.5545, 162.089, -58.8022, 1.8", "26.2447, 161.625, -59.2835, 1.2", "26.8449, 161.275, -59.6687, 0.36", "27.7044, 160.843, -60.0952, 0.36", "28.6113, 160.454, -60.4368, 0.36", "29.335, 160.203, -60.652, 1.2", "30.2343, 159.97, -60.9095, 1.8", "31.4193, 159.749, -61.2612, 0.12", "33.0862, 159.519, -61.7992, 0.12", "33.9915, 159.41, -62.1238, 1.44", "34.5033, 159.331, -62.329, 2.16", "35.4113, 159.124, -62.7145, 2.4", "36.5959, 158.752, -63.2175, 0.24", "37.0687, 158.54, -63.4162, 0.24", "37.5046, 158.266, -63.6283, 0.24", "38.2779, 157.674, -63.9477, 0.48", "38.7893, 157.232, -64.1345, 0.12", "39.4074, 156.716, -64.3017, 0.12", "39.8564, 156.392, -64.3658, 0.12", "40.3277, 156.122, -64.4196, 0.12", "40.9479, 155.861, -64.4131, 0.36", "41.363, 155.737, -64.3833, 0.12", "42.6608, 155.402, -64.269, 0.12", "43.7964, 155.141, -64.1473, 1.44", "44.0882, 155.079, -64.1143, 1.56", "45.7727, 154.712, -63.9005, 0.36", "46.3341, 154.561, -63.7502, 0.36", "46.68, 154.443, -63.6122, 0.36", "47.108, 154.234, -63.3833, 0.36", "47.42, 154.041, -63.242, 0.36", "47.6474, 153.882, -63.1235, 0.36", "49.176, 152.685, -62.344, 0.12", "49.4724, 152.454, -62.1931, 0.12", "49.8096, 152.201, -62.01, 0.12", "50.9513, 151.398, -61.4123, 2.4", "52.8734, 150.124, -60.5329, 0.12", "53.406, 149.779, -60.3329, 0.12", "54.077, 149.355, -60.1017, 0.36", "54.7381, 148.945, -59.8414, 0.12", "55.2888, 148.606, -59.6072, 0.12", "55.8153, 148.274, -59.3667, 1.08", "56.2667, 147.987, -59.1628, 1.08", "57.8311, 146.955, -58.3661, 0.36", "58.2365, 146.652, -58.1614, 0.36", "58.5504, 146.395, -58.0356, 0.12", "58.745, 146.235, -57.9375, 0.12", "59.8321, 145.348, -57.3492, 0.12", "60.3197, 144.964, -57.1056, 1.32", "61.0532, 144.412, -56.7786, 2.04", "61.9092, 143.829, -56.3992, 1.32", "63.8329, 142.638, -55.5405, 0.12", "64.0907, 142.5, -55.4335, 0.12", "64.5528, 142.326, -55.1704, 0.24", "65.2578, 142.11, -54.7198, 0.24", "65.8086, 141.987, -54.3235, 0.24", "66.5823, 141.868, -53.7054, 0.24", "66.9695, 141.837, -53.4101, 0.84", "69.7792, 141.696, -50.9993, 0.6" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "33.1936, 90.7963, 10.4891, 0.72", "32.7298, 90.2866, 9.49514, 0.72", "32.0205, 89.6835, 8.20912, 0.6", "31.5591, 89.2912, 7.37266, 0.36", "31.3876, 89.1454, 7.06167, 0.48", "30.9593, 88.7813, 6.2853, 0.36", "30.4364, 88.3367, 5.3372, 0.12", "30.2331, 88.2173, 5.01802, 0.12" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "33.1936, 90.7963, 10.4891, 0.48", "33.1706, 91.4154, 10.576, 0.48", "33.1523, 91.9461, 10.6831, 0.48", "33.1005, 92.5073, 10.8147, 0.6", "33.0409, 92.9565, 10.9381, 0.48", "32.9442, 93.6305, 11.132, 0.48", "32.836, 94.3923, 11.3527, 2.04", "32.7701, 95.0201, 11.5303, 1.92", "32.6871, 95.7534, 11.6994, 1.44", "32.6139, 96.3357, 11.8082, 1.08", "32.5554, 96.8541, 11.8871, 0.96", "32.5331, 97.1201, 11.9022, 0.72", "32.5054, 97.7485, 11.8572, 1.08", "32.5309, 98.7869, 11.7357, 0.48", "32.5683, 99.223, 11.6795, 0.48", "32.6535, 99.9445, 11.5933, 1.32", "32.7231, 100.582, 11.5194, 1.92", "32.8216, 101.424, 11.4705, 1.08", "32.9083, 102.013, 11.4764, 0.72", "32.9697, 102.322, 11.5121, 0.24", "33.1536, 103.027, 11.5888, 0.24", "33.2854, 103.548, 11.6491, 0.72", "33.4224, 104.148, 11.7589, 0.12", "33.5573, 104.67, 11.8622, 0.12", "33.7421, 105.405, 11.9929, 1.8", "33.9667, 106.338, 12.1654, 2.76", "34.1095, 106.94, 12.2959, 2.64", "34.3477, 107.943, 12.5299, 1.08" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "26.1718, -124.417, -40.0145, 0.12", "26.7183, -124.981, -39.931, 0.12", "27.1718, -125.45, -39.8617, 0.12", "27.6304, -125.924, -39.7916, 0.6", "27.8711, -126.173, -39.7548, 0.12", "28.4481, -126.769, -39.6667, 0.12", "28.7504, -127.081, -39.6205, 0.72" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "26.1718, -124.417, -40.0145, 0.12", "26.1038, -125.31, -39.9244, 0.12", "26.0563, -125.859, -39.7829, 0.12", "26.0368, -126.261, -39.6544, 0.96", "26.0279, -126.656, -39.5272, 1.56", "26.031, -127.278, -39.3359, 0.12", "26.0434, -127.604, -39.2421, 0.12", "26.1414, -128.612, -38.8896, 1.08", "26.202, -129.045, -38.7327, 0.72", "26.2601, -129.383, -38.6179, 0.12", "26.3319, -129.784, -38.449, 0.12", "26.3909, -130.148, -38.2836, 0.12", "26.4684, -130.726, -38.0405, 1.44", "26.5039, -131.036, -37.9284, 1.68", "26.5202, -131.279, -37.837, 1.68", "26.5605, -132.3, -37.4721, 0.12", "26.5545, -132.767, -37.3155, 0.12", "26.519, -133.267, -37.1747, 0.12", "26.4992, -133.441, -37.139, 0.96", "26.4403, -133.843, -37.0719, 0.96", "26.385, -134.212, -37.0294, 0.12", "26.2174, -135.206, -36.9994, 0.12", "26.1246, -135.713, -36.9856, 0.96", "26.0328, -136.173, -36.9835, 1.68", "25.9705, -136.497, -36.9871, 1.92", "25.9076, -136.836, -37.0059, 1.92", "25.7567, -137.675, -37.0893, 0.12", "25.6942, -137.993, -37.1466, 0.12", "25.5358, -138.702, -37.3024, 0.12", "25.4509, -139.017, -37.4059, 0.6", "25.311, -139.433, -37.5732, 0.12", "25.1408, -139.854, -37.7654, 0.12", "24.9533, -140.289, -37.9816, 1.2", "24.678, -140.892, -38.2908, 1.68", "24.2599, -141.76, -38.7244, 0.12", "24.0588, -142.195, -38.9391, 0.12", "23.9359, -142.506, -39.0767, 0.12", "23.8213, -142.874, -39.2415, 0.12", "23.7726, -143.095, -39.335, 1.2", "23.7025, -143.577, -39.5248, 1.56", "23.6331, -144.43, -39.8305, 0.24", "23.6084, -145.058, -40.0676, 0.24", "23.583, -145.687, -40.3148, 0.72", "23.5639, -145.996, -40.4366, 0.84", "23.5391, -146.326, -40.5626, 0.12", "23.5158, -146.556, -40.6502, 0.12", "23.4551, -146.935, -40.8029, 0.12", "23.4046, -147.206, -40.9236, 0.12", "23.352, -147.54, -40.9339, 0.12", "23.3302, -147.701, -40.9073, 0.12", "23.2504, -148.273, -40.7404, 1.32", "23.1419, -148.898, -40.5121, 0.12", "23.0641, -149.452, -40.2482, 0.12", "22.8095, -151.872, -38.7861, 0.6", "22.7302, -152.763, -38.0738, 1.32", "22.7109, -152.999, -37.8231, 2.04", "22.6945, -153.242, -37.464, 2.4" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "105.504, -30.3986, 10.8775, 0.24", "106.325, -30.3836, 11.2504, 0.24", "106.686, -30.3701, 11.4143, 0.24", "108.006, -30.3157, 12.0027, 0.24", "108.394, -30.2924, 12.1623, 0.96", "109.126, -30.2375, 12.4066, 1.56", "109.767, -30.1808, 12.629, 0.36", "111.007, -30.0511, 13.0362, 0.12", "111.288, -30.0163, 13.1239, 1.2", "112.165, -29.8823, 13.3489, 2.16", "113.254, -29.6595, 13.6484, 0.12", "114.377, -29.3577, 13.9577, 0.12", "114.574, -29.2857, 14.0095, 0.84", "114.956, -29.0989, 14.094, 0.96", "115.465, -28.8102, 14.2166, 0.12", "115.929, -28.4672, 14.3532, 0.12", "116.079, -28.3059, 14.4039, 0.6", "116.417, -27.835, 14.419, 0.12", "116.638, -27.4512, 14.4387, 0.12" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "105.504, -30.3986, 10.8775, 0.6", "105.413, -29.0252, 10.9337, 0.6", "105.396, -28.6453, 10.9495, 0.6", "105.4, -27.8376, 10.9552, 0.84", "105.481, -26.7413, 10.9342, 0.12", "105.571, -25.4948, 10.8916, 0.12", "105.604, -25.0707, 10.872, 0.96", "105.725, -24.1487, 10.8213, 1.2", "105.908, -23.1054, 10.7368, 0.12", "106.158, -21.9446, 10.6113, 0.12", "106.386, -21.0409, 10.4643, 0.12", "106.692, -20.0347, 10.2516, 0.12", "106.846, -19.5857, 10.1532, 0.12", "107.233, -18.5796, 9.92806, 1.68", "107.384, -18.2614, 9.78794, 1.92", "108.017, -17.1914, 9.08108, 0.12", "108.598, -16.3605, 8.34435, 0.12", "108.845, -15.9968, 7.959, 1.32", "109.037, -15.6742, 7.53881, 1.68", "110.111, -13.7895, 4.39607, 0.36", "110.241, -13.5863, 3.98463, 0.36", "110.415, -13.3309, 3.36375, 0.12", "110.661, -12.97, 2.3414, 0.12", "111.11, -12.2597, 0.201096, 0.48", "111.349, -11.7932, -1.1943, 1.44", "111.483, -11.3225, -2.31237, 2.16" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-3.13646, -347.468, -50.0018, 0.24", "-2.85189, -347.115, -50.1721, 0.24", "-2.49077, -346.667, -50.3882, 0.24", "-2.05401, -346.126, -50.6497, 0.6", "-1.61273, -345.578, -50.9138, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.13646, -347.468, -50.0018, 0.12", "-2.62634, -347.969, -49.2918, 0.12", "-2.29545, -348.244, -48.8287, 0.12", "-1.98695, -348.432, -48.4795, 0.12", "-1.56059, -348.616, -48.1025, 0.12", "-1.31622, -348.694, -47.9193, 0.12", "0.72245, -349.166, -46.5861, 0.12", "1.62521, -349.236, -46.114, 2.04", "2.59932, -349.227, -45.6319, 1.56", "3.64118, -349.15, -45.1604, 0.36", "4.20256, -349.071, -44.8868, 0.36", "4.8414, -348.956, -44.5804, 0.36", "6.14006, -348.688, -44.0293, 0.36", "6.64041, -348.574, -43.7341, 0.6", "6.97122, -348.498, -43.4827, 0.6", "8.37334, -348.138, -42.255, 0.36", "8.68157, -348.059, -41.9771, 0.6", "9.12683, -347.957, -41.6191, 0.6", "9.96361, -347.798, -41.0667, 0.12", "10.3286, -347.764, -40.9117, 0.12", "11.024, -347.766, -40.755, 0.12", "11.7219, -347.851, -40.7849, 1.08", "13.0685, -348.17, -40.9782, 0.12", "13.3562, -348.283, -41.042, 0.12", "14.136, -348.673, -41.2466, 0.12", "14.623, -348.966, -41.3788, 0.48", "15.4016, -349.505, -41.5971, 0.12", "15.8571, -349.851, -41.7173, 0.12", "16.625, -350.471, -41.8507, 0.12", "17.1717, -350.91, -41.9585, 0.12", "17.634, -351.268, -42.0614, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "22.6945, -153.242, -37.464, 0.48", "22.044, -154.516, -39.7217, 0.48", "21.9357, -154.724, -40.0704, 0.48", "21.7013, -155.209, -40.8003, 0.12", "21.598, -155.449, -41.1355, 0.12", "21.455, -155.782, -41.5999, 1.2", "21.2748, -156.201, -42.1847, 0.12", "21.2322, -156.31, -42.2944, 0.12", "21.0963, -156.65, -42.647, 0.72", "21.022, -156.851, -42.8038, 0.72" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "22.6945, -153.242, -37.464, 0.12", "21.3824, -155.21, -39.4583, 0.12", "20.857, -156.082, -40.0046, 0.12", "20.704, -156.336, -40.1362, 0.6", "20.2604, -157.043, -40.456, 0.24", "20.0871, -157.307, -40.5289, 0.24", "19.6115, -157.996, -40.6534, 0.24", "19.2309, -158.502, -40.5858, 0.6", "18.6336, -159.152, -40.4795, 0.12", "18.1126, -159.633, -40.4086, 0.12", "17.0102, -160.466, -40.3172, 0.84", "16.745, -160.645, -40.2875, 0.84", "16.2397, -160.942, -40.2021, 0.12", "15.959, -161.082, -40.1375, 0.12", "15.2237, -161.387, -39.9099, 0.84", "14.9252, -161.481, -39.8457, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L4_DBC_01d21bd888_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_26
create dend_48
public dend_48
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_15
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_27
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.499998982464247)
    connect dend_15(0), soma_0(0.499998982464247)
    connect dend_0(0), soma_0(0.499998982464247)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.72142, 10.9655, 0.761584, 2.84462 ) }
    soma_0 { pt3dadd( 1.58182, 9.77504, 0.687603, 4.62864 ) }
    soma_0 { pt3dadd( 1.44222, 8.58452, 0.613623, 7.50202 ) }
    soma_0 { pt3dadd( 1.30262, 7.39401, 0.539642, 9.47415 ) }
    soma_0 { pt3dadd( 1.16302, 6.2035, 0.465661, 11.0555 ) }
    soma_0 { pt3dadd( 1.02343, 5.01299, 0.391681, 12.4342 ) }
    soma_0 { pt3dadd( 0.883829, 3.82247, 0.3177, 13.5523 ) }
    soma_0 { pt3dadd( 0.744231, 2.63196, 0.243719, 14.3411 ) }
    soma_0 { pt3dadd( 0.604633, 1.44145, 0.169739, 14.9091 ) }
    soma_0 { pt3dadd( 0.465035, 0.250937, 0.0957582, 15.2878 ) }
    soma_0 { pt3dadd( 0.325437, -0.939575, 0.0217776, 15.5461 ) }
    soma_0 { pt3dadd( 0.185839, -2.13009, -0.0522031, 15.5537 ) }
    soma_0 { pt3dadd( 0.0462405, -3.3206, -0.126184, 15.1598 ) }
    soma_0 { pt3dadd( -0.0933575, -4.51111, -0.200164, 14.7587 ) }
    soma_0 { pt3dadd( -0.232956, -5.70162, -0.274145, 14.0408 ) }
    soma_0 { pt3dadd( -0.372554, -6.89214, -0.348126, 13.1988 ) }
    soma_0 { pt3dadd( -0.512152, -8.08265, -0.422106, 12.1253 ) }
    soma_0 { pt3dadd( -0.65175, -9.27316, -0.496087, 10.5491 ) }
    soma_0 { pt3dadd( -0.791348, -10.4637, -0.570068, 8.74654 ) }
    soma_0 { pt3dadd( -0.930946, -11.6542, -0.644048, 6.27284 ) }
    soma_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 3.68979 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.07622, -6.60907, -17.6726, 3.85 ) }
    dend_26 { pt3dadd( 4.07062, -5.94121, -16.7794, 3.85 ) }
    dend_26 { pt3dadd( 5.10348, -5.24753, -15.8517, 3.85 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 24/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.643782, -13.0871, -2.03262, 2.64 ) }
    dend_15 { pt3dadd( -0.451647, -15.032, -0.63699, 1.92 ) }
    dend_15 { pt3dadd( -0.291147, -16.4937, 0.286143, 1.8 ) }
    dend_15 { pt3dadd( -0.135399, -17.6607, 0.891339, 1.92 ) }
    dend_15 { pt3dadd( 0.342505, -20.772, 2.20006, 1.32 ) }
    dend_15 { pt3dadd( 0.60072, -22.1806, 2.67956, 1.56 ) }
    dend_15 { pt3dadd( 0.901482, -23.5752, 3.05628, 1.8 ) }
    dend_15 { pt3dadd( 1.19077, -24.6975, 3.17352, 2.04 ) }
    dend_15 { pt3dadd( 1.70645, -26.4373, 3.14109, 2.16 ) }
    dend_15 { pt3dadd( 2.06403, -27.564, 2.97312, 1.32 ) }
    dend_15 { pt3dadd( 2.46256, -28.841, 2.70097, 1.44 ) }
    dend_15 { pt3dadd( 2.91611, -30.5093, 2.41791, 1.44 ) }
    dend_15 { pt3dadd( 3.19626, -31.8189, 2.26531, 1.8 ) }
    dend_15 { pt3dadd( 3.32186, -32.7321, 2.19579, 2.04 ) }
    dend_15 { pt3dadd( 3.36734, -34.0308, 2.15503, 1.68 ) }
    dend_15 { pt3dadd( 3.24857, -35.9744, 2.12177, 1.44 ) }
    dend_15 { pt3dadd( 3.09384, -36.9426, 2.11623, 1.8 ) }
    dend_15 { pt3dadd( 2.90101, -37.7371, 2.12499, 2.04 ) }
    dend_15 { pt3dadd( 2.58491, -38.8221, 2.16058, 1.92 ) }
    dend_15 { pt3dadd( 2.24496, -39.8225, 2.18985, 1.56 ) }
    dend_15 { pt3dadd( 1.79736, -41.0476, 2.16781, 1.56 ) }
    dend_15 { pt3dadd( 1.49612, -41.8658, 2.04887, 0.72 ) }
    dend_15 { pt3dadd( 1.28479, -42.4797, 1.94526, 0.48 ) }
    dend_15 { pt3dadd( 1.12355, -42.9653, 1.88013, 0.48 ) }
    dend_15 { pt3dadd( 0.751352, -44.1153, 1.7727, 1.32 ) }
    dend_15 { pt3dadd( 0.443713, -45.0805, 1.68749, 1.68 ) }
    dend_15 { pt3dadd( -0.125736, -46.8764, 1.47527, 1.56 ) }
    dend_15 { pt3dadd( -0.4465, -47.8862, 1.358, 1.92 ) }
    dend_15 { pt3dadd( -0.911097, -49.3873, 1.19311, 2.64 ) }
    dend_15 { pt3dadd( -1.23306, -50.503, 1.105, 2.76 ) }
    dend_15 { pt3dadd( -1.47263, -51.4947, 1.07359, 2.76 ) }
    dend_15 { pt3dadd( -1.73317, -52.9, 1.11548, 1.68 ) }
    dend_15 { pt3dadd( -1.83759, -53.8032, 1.17816, 0.96 ) }
    dend_15 { pt3dadd( -1.89152, -54.9939, 1.24922, 0.96 ) }
    dend_15 { pt3dadd( -1.85987, -56.5295, 1.32737, 1.32 ) }
    dend_15 { pt3dadd( -1.72368, -58.7379, 1.46575, 1.8 ) }
    dend_15 { pt3dadd( -1.64425, -59.7018, 1.5392, 2.16 ) }
    dend_15 { pt3dadd( -1.54492, -60.8081, 1.61584, 2.28 ) }
    dend_15 { pt3dadd( -1.42448, -62.1654, 1.67848, 0.84 ) }
    dend_15 { pt3dadd( -1.36839, -63.0551, 1.6942, 0.84 ) }
    dend_15 { pt3dadd( -1.3357, -64.3715, 1.66316, 1.08 ) }
    dend_15 { pt3dadd( -1.42484, -65.7514, 1.58823, 1.68 ) }
    dend_15 { pt3dadd( -1.61909, -66.8228, 1.52188, 2.52 ) }
    dend_15 { pt3dadd( -1.74989, -67.2622, 1.47046, 3.0 ) }
    dend_15 { pt3dadd( -1.93509, -67.7366, 1.392, 2.88 ) }
    dend_15 { pt3dadd( -2.05551, -67.9976, 1.34608, 2.88 ) }
    dend_15 { pt3dadd( -2.56077, -68.987, 1.15998, 2.16 ) }
    dend_15 { pt3dadd( -3.38736, -70.517, 1.00628, 0.96 ) }
    dend_15 { pt3dadd( -4.02107, -71.6804, 0.922493, 0.48 ) }
    dend_15 { pt3dadd( -4.24309, -72.0821, 0.894951, 0.48 ) }
    dend_15 { pt3dadd( -5.02181, -73.4757, 0.809835, 1.92 ) }
    dend_15 { pt3dadd( -5.77849, -74.7972, 0.748891, 3.12 ) }
    dend_15 { pt3dadd( -6.63085, -76.3041, 0.738405, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.64622, 11.2669, 0.167383, 2.16 ) }
    dend_0 { pt3dadd( 3.13782, 13.2448, 0.866107, 1.44 ) }
    dend_0 { pt3dadd( 3.63807, 15.1422, 1.50196, 2.16 ) }
    dend_0 { pt3dadd( 4.19952, 17.2126, 2.14935, 3.25 ) }
    dend_0 { pt3dadd( 4.59463, 18.6136, 2.57132, 3.49 ) }
    dend_0 { pt3dadd( 5.05228, 20.196, 3.12245, 3.25 ) }
    dend_0 { pt3dadd( 5.37336, 21.3062, 3.50912, 2.88 ) }
    dend_0 { pt3dadd( 5.62059, 22.1488, 3.84244, 2.88 ) }
    dend_0 { pt3dadd( 5.88768, 23.0172, 4.15295, 2.52 ) }
    dend_0 { pt3dadd( 6.39485, 24.55, 4.72388, 2.16 ) }
    dend_0 { pt3dadd( 7.12681, 26.633, 5.52168, 1.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 0.781102 ) }
    axon_0 { pt3dadd( -2.81746, -27.7426, -0.718029, 0.781102 ) }
    axon_0 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.781102 ) }
    // Section: dend_48, id: dend_48, parent: dend_26 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 5.10348, -5.24753, -15.8517, 1.56 ) }
    dend_48 { pt3dadd( 4.22195, -3.08445, -16.6683, 1.56 ) }
    dend_48 { pt3dadd( 3.89412, -2.1646, -17.0148, 1.2 ) }
    dend_48 { pt3dadd( 3.69718, -1.50778, -17.2671, 0.96 ) }
    dend_48 { pt3dadd( 3.50534, -0.71856, -17.5379, 0.96 ) }
    dend_48 { pt3dadd( 3.22834, 0.682922, -18.0083, 1.32 ) }
    dend_48 { pt3dadd( 2.97684, 2.29355, -18.4467, 1.32 ) }
    dend_48 { pt3dadd( 2.85211, 3.62168, -18.6695, 1.44 ) }
    dend_48 { pt3dadd( 2.82081, 4.7706, -18.8152, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 2.86339, 6.00236, -18.9105, 1.44 ) }
    dend_48 { pt3dadd( 2.93033, 6.97925, -18.9269, 1.68 ) }
    dend_48 { pt3dadd( 3.05874, 8.76297, -18.8453, 2.88 ) }
    dend_48 { pt3dadd( 3.09539, 9.52366, -18.763, 3.73 ) }
    dend_48 { pt3dadd( 3.08608, 10.7254, -18.6081, 3.73 ) }
    dend_48 { pt3dadd( 2.96243, 12.287, -18.4105, 2.88 ) }
    dend_48 { pt3dadd( 2.70432, 14.0413, -18.2348, 1.68 ) }
    dend_48 { pt3dadd( 2.53089, 14.854, -18.1674, 1.2 ) }
    dend_48 { pt3dadd( 2.33813, 15.5942, -18.1455, 0.96 ) }
    dend_48 { pt3dadd( 2.04551, 16.5453, -18.1162, 1.68 ) }
    dend_48 { pt3dadd( 1.65557, 17.5928, -18.0843, 2.88 ) }
    dend_48 { pt3dadd( 1.44111, 18.0478, -18.074, 3.49 ) }
    dend_48 { pt3dadd( 1.145, 18.5595, -18.0791, 3.61 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.10348, -5.24753, -15.8517, 1.32 ) }
    dend_27 { pt3dadd( 7.59411, -6.67926, -15.7055, 1.32 ) }
    dend_27 { pt3dadd( 8.60626, -7.23179, -15.7977, 0.84 ) }
    dend_27 { pt3dadd( 10.08, -8.0677, -16.0688, 1.2 ) }
    dend_27 { pt3dadd( 11.6901, -9.08877, -16.5266, 1.44 ) }
    dend_27 { pt3dadd( 13.2942, -10.3703, -17.2047, 1.32 ) }
    dend_27 { pt3dadd( 14.5468, -11.679, -17.8944, 1.56 ) }
    dend_27 { pt3dadd( 15.7106, -13.5384, -18.9968, 1.2 ) }
    dend_27 { pt3dadd( 16.0268, -14.2235, -19.436, 1.2 ) }
    dend_27 { pt3dadd( 16.3397, -15.3989, -20.2298, 1.2 ) }
    dend_27 { pt3dadd( 16.5113, -17.4051, -21.5651, 2.64 ) }
    dend_27 { pt3dadd( 16.4248, -19.0844, -22.5483, 4.45 ) }
    dend_27 { pt3dadd( 16.2877, -20.4178, -23.0928, 4.33 ) }
    // Section: dend_25, id: dend_25, parent: dend_15 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -6.63085, -76.3041, 0.738405, 3.0 ) }
    dend_25 { pt3dadd( -7.56138, -77.2697, 0.997657, 3.0 ) }
    dend_25 { pt3dadd( -8.08975, -77.9041, 1.15304, 2.76 ) }
    dend_25 { pt3dadd( -8.90296, -79.0301, 1.46365, 1.92 ) }
    dend_25 { pt3dadd( -9.16092, -79.4621, 1.59154, 1.92 ) }
    dend_25 { pt3dadd( -9.65157, -80.4707, 1.88678, 0.6 ) }
    dend_25 { pt3dadd( -9.93017, -81.1756, 2.07181, 0.48 ) }
    dend_25 { pt3dadd( -9.98558, -81.4541, 2.12904, 0.48 ) }
    dend_25 { pt3dadd( -10.052, -82.1849, 2.25348, 0.48 ) }
    dend_25 { pt3dadd( -10.0438, -83.0732, 2.36238, 0.84 ) }
    dend_25 { pt3dadd( -9.94468, -84.081, 2.45753, 1.08 ) }
    dend_25 { pt3dadd( -9.76, -85.073, 2.56449, 1.32 ) }
    dend_25 { pt3dadd( -9.50531, -86.0491, 2.64863, 0.96 ) }
    dend_25 { pt3dadd( -9.27837, -86.7343, 2.70002, 0.72 ) }
    dend_25 { pt3dadd( -9.00081, -87.4444, 2.7389, 0.6 ) }
    dend_25 { pt3dadd( -8.47636, -88.5573, 2.83478, 0.48 ) }
    dend_25 { pt3dadd( -7.89933, -89.5873, 2.89807, 0.48 ) }
    dend_25 { pt3dadd( -7.27763, -90.5596, 2.94177, 1.44 ) }
    dend_25 { pt3dadd( -6.58453, -91.5615, 2.96571, 1.92 ) }
    dend_25 { pt3dadd( -6.05253, -92.2988, 2.99842, 2.04 ) }
    dend_25 { pt3dadd( -5.35915, -93.2996, 3.05792, 1.44 ) }
    dend_25 { pt3dadd( -4.53495, -94.5516, 3.11538, 0.84 ) }
    dend_25 { pt3dadd( -4.30416, -94.9407, 3.17037, 0.12 ) }
    dend_25 { pt3dadd( -4.03049, -95.4977, 3.32581, 0.12 ) }
    dend_25 { pt3dadd( -3.70559, -96.4241, 3.75556, 1.32 ) }
    dend_25 { pt3dadd( -3.46789, -97.4179, 4.33814, 1.68 ) }
    dend_25 { pt3dadd( -3.38566, -97.8895, 4.6363, 1.8 ) }
    dend_25 { pt3dadd( -3.0606, -99.8366, 5.91384, 1.2 ) }
    dend_25 { pt3dadd( -2.94657, -100.672, 6.44423, 1.68 ) }
    dend_25 { pt3dadd( -2.73594, -102.052, 7.32052, 1.2 ) }
    dend_25 { pt3dadd( -2.61355, -102.929, 7.88854, 0.24 ) }
    dend_25 { pt3dadd( -2.54804, -103.518, 8.28899, 0.24 ) }
    dend_25 { pt3dadd( -2.46957, -104.564, 8.97608, 1.92 ) }
    dend_25 { pt3dadd( -2.47772, -105.276, 9.38608, 1.8 ) }
    dend_25 { pt3dadd( -2.83694, -107.479, 10.6595, 0.72 ) }
    dend_25 { pt3dadd( -3.18419, -108.595, 11.29, 0.72 ) }
    dend_25 { pt3dadd( -3.53666, -109.333, 11.7137, 0.48 ) }
    dend_25 { pt3dadd( -3.87046, -109.844, 12.0337, 0.36 ) }
    dend_25 { pt3dadd( -4.48033, -110.612, 12.506, 0.36 ) }
    dend_25 { pt3dadd( -4.83419, -111.095, 12.7488, 0.36 ) }
    dend_25 { pt3dadd( -5.51639, -112.288, 13.3815, 0.6 ) }
    dend_25 { pt3dadd( -5.65642, -112.732, 13.6391, 0.6 ) }
    dend_25 { pt3dadd( -5.78649, -113.294, 14.0736, 0.36 ) }
    dend_25 { pt3dadd( -5.88489, -113.71, 14.4556, 0.36 ) }
    dend_25 { pt3dadd( -5.98262, -114.222, 14.9514, 0.36 ) }
    dend_25 { pt3dadd( -6.30634, -115.691, 16.4506, 0.36 ) }
    dend_25 { pt3dadd( -6.40486, -115.977, 16.7555, 0.36 ) }
    dend_25 { pt3dadd( -6.74273, -116.898, 17.8478, 1.44 ) }
    dend_25 { pt3dadd( -6.87305, -117.251, 18.3057, 1.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 75/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.63085, -76.3041, 0.738405, 0.12 ) }
    dend_16 { pt3dadd( -6.98419, -78.5245, 0.418218, 0.12 ) }
    dend_16 { pt3dadd( -7.14871, -79.3229, 0.197006, 0.12 ) }
    dend_16 { pt3dadd( -7.3125, -80.0617, -0.0470402, 0.96 ) }
    dend_16 { pt3dadd( -7.47742, -80.9134, -0.340485, 1.32 ) }
    dend_16 { pt3dadd( -7.57931, -81.5654, -0.572233, 1.32 ) }
    dend_16 { pt3dadd( -7.7441, -82.9887, -1.08066, 0.6 ) }
    dend_16 { pt3dadd( -7.84926, -84.0533, -1.59128, 0.36 ) }
    dend_16 { pt3dadd( -7.85609, -84.3327, -1.74164, 0.36 ) }
    dend_16 { pt3dadd( -7.79497, -85.0164, -2.11725, 0.36 ) }
    dend_16 { pt3dadd( -7.72202, -85.4535, -2.32153, 0.36 ) }
    dend_16 { pt3dadd( -7.65183, -85.9069, -2.48969, 0.36 ) }
    dend_16 { pt3dadd( -7.59237, -86.753, -2.71487, 0.36 ) }
    dend_16 { pt3dadd( -7.61376, -87.3183, -2.81685, 0.36 ) }
    dend_16 { pt3dadd( -7.68946, -88.1287, -3.045, 0.36 ) }
    dend_16 { pt3dadd( -7.82896, -89.0525, -3.31887, 1.08 ) }
    dend_16 { pt3dadd( -8.07144, -90.2934, -3.68524, 1.68 ) }
    dend_16 { pt3dadd( -8.27691, -91.1972, -3.94837, 1.8 ) }
    dend_16 { pt3dadd( -8.57398, -92.3703, -4.2591, 1.56 ) }
    dend_16 { pt3dadd( -8.97759, -94.1103, -4.77382, 1.2 ) }
    dend_16 { pt3dadd( -9.12906, -94.911, -5.01804, 0.36 ) }
    dend_16 { pt3dadd( -9.18461, -95.3455, -5.12308, 0.36 ) }
    dend_16 { pt3dadd( -9.22621, -95.8467, -5.16267, 0.36 ) }
    dend_16 { pt3dadd( -9.27425, -97.0483, -5.13133, 1.56 ) }
    dend_16 { pt3dadd( -9.28026, -97.9708, -5.04876, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_16 { pt3dadd( -9.26573, -99.1175, -4.86719, 1.92 ) }
    dend_16 { pt3dadd( -9.18971, -100.687, -4.62222, 1.08 ) }
    dend_16 { pt3dadd( -9.08218, -102.021, -4.36809, 0.36 ) }
    dend_16 { pt3dadd( -8.97964, -103.104, -4.13135, 0.36 ) }
    dend_16 { pt3dadd( -8.91215, -103.856, -3.87148, 0.36 ) }
    dend_16 { pt3dadd( -8.893, -104.15, -3.75144, 0.36 ) }
    dend_16 { pt3dadd( -8.856, -104.886, -3.44652, 0.96 ) }
    dend_16 { pt3dadd( -8.82933, -105.672, -3.09998, 1.8 ) }
    dend_16 { pt3dadd( -8.80925, -106.563, -2.75649, 2.16 ) }
    dend_16 { pt3dadd( -8.80547, -109.15, -1.81347, 1.92 ) }
    dend_16 { pt3dadd( -8.83564, -110.419, -1.42436, 1.8 ) }
    dend_16 { pt3dadd( -8.88679, -111.509, -1.19934, 1.8 ) }
    dend_16 { pt3dadd( -8.97613, -112.814, -1.19282, 1.2 ) }
    dend_16 { pt3dadd( -9.11533, -114.692, -1.71223, 0.12 ) }
    dend_16 { pt3dadd( -9.13437, -114.979, -1.84692, 0.12 ) }
    dend_16 { pt3dadd( -9.18285, -115.765, -2.31707, 0.12 ) }
    dend_16 { pt3dadd( -9.23885, -116.712, -2.88905, 0.84 ) }
    dend_16 { pt3dadd( -9.30612, -118.284, -3.86351, 1.08 ) }
    dend_16 { pt3dadd( -9.34335, -119.696, -4.71019, 1.92 ) }
    dend_16 { pt3dadd( -9.35884, -120.819, -5.27446, 2.88 ) }
    dend_16 { pt3dadd( -9.37166, -121.53, -5.59827, 2.88 ) }
    dend_16 { pt3dadd( -9.39061, -122.44, -5.9944, 1.92 ) }
    dend_16 { pt3dadd( -9.44221, -123.739, -6.50878, 0.36 ) }
    dend_16 { pt3dadd( -9.48619, -124.351, -6.70036, 0.36 ) }
    dend_16 { pt3dadd( -9.55522, -125.125, -6.87664, 1.08 ) }
    dend_16 { pt3dadd( -9.66, -126.093, -7.08189, 1.2 ) }
    dend_16 { pt3dadd( -9.82979, -127.544, -7.33595, 0.48 ) }
    dend_16 { pt3dadd( -9.97458, -128.793, -7.52376, 0.48 ) }
    dend_16 { pt3dadd( -10.1141, -129.888, -7.65613, 0.48 ) }
    dend_16 { pt3dadd( -10.3414, -131.472, -7.85059, 1.92 ) }
    dend_16 { pt3dadd( -10.5247, -132.554, -7.97864, 2.4 ) }
    dend_16 { pt3dadd( -10.698, -133.476, -8.07395, 2.64 ) }
    dend_16 { pt3dadd( -10.9574, -134.732, -8.17031, 2.64 ) }
    dend_16 { pt3dadd( -11.1643, -135.629, -8.26123, 2.04 ) }
    dend_16 { pt3dadd( -11.4798, -136.791, -8.40879, 0.72 ) }
    dend_16 { pt3dadd( -11.6535, -137.336, -8.47198, 0.72 ) }
    dend_16 { pt3dadd( -11.9, -138.109, -8.50952, 0.72 ) }
    dend_16 { pt3dadd( -12.1181, -138.86, -8.53254, 0.72 ) }
    dend_16 { pt3dadd( -12.3643, -139.845, -8.53466, 0.24 ) }
    dend_16 { pt3dadd( -12.5497, -140.721, -8.43477, 0.12 ) }
    dend_16 { pt3dadd( -12.6194, -141.208, -8.32679, 0.12 ) }
    dend_16 { pt3dadd( -12.6826, -142.123, -8.05665, 0.12 ) }
    dend_16 { pt3dadd( -12.6447, -143.034, -7.73811, 1.2 ) }
    dend_16 { pt3dadd( -12.5408, -143.833, -7.44753, 2.28 ) }
    dend_16 { pt3dadd( -12.1029, -146.139, -6.62748, 1.8 ) }
    dend_16 { pt3dadd( -11.8176, -147.39, -6.21851, 0.36 ) }
    dend_16 { pt3dadd( -11.6711, -148.032, -6.06946, 0.36 ) }
    dend_16 { pt3dadd( -11.4419, -149.345, -5.90446, 0.36 ) }
    dend_16 { pt3dadd( -11.3149, -150.602, -5.88426, 0.36 ) }
    dend_16 { pt3dadd( -11.2704, -151.406, -5.99588, 0.36 ) }
    dend_16 { pt3dadd( -11.2888, -152.651, -6.36851, 0.36 ) }
    dend_16 { pt3dadd( -11.4699, -154.192, -6.90676, 1.56 ) }
    dend_16 { pt3dadd( -11.6859, -155.372, -7.33352, 2.4 ) }
    dend_16 { pt3dadd( -11.8352, -156.025, -7.56968, 2.4 ) }
    dend_16 { pt3dadd( -12.079, -157.15, -7.9463, 2.4 ) }
    dend_16 { pt3dadd( -12.3768, -158.877, -8.43409, 0.48 ) }
    dend_16 { pt3dadd( -12.4665, -159.568, -8.58188, 0.48 ) }
    dend_16 { pt3dadd( -12.531, -160.661, -8.71721, 0.6 ) }
    dend_16 { pt3dadd( -12.5185, -161.602, -8.79659, 0.36 ) }
    dend_16 { pt3dadd( -12.4588, -162.713, -8.8698, 0.36 ) }
    dend_16 { pt3dadd( -12.3803, -163.779, -8.91267, 0.48 ) }
    dend_16 { pt3dadd( -12.2981, -164.558, -8.96416, 0.36 ) }
    dend_16 { pt3dadd( -12.1873, -165.501, -9.07578, 0.36 ) }
    dend_16 { pt3dadd( -12.1022, -166.427, -9.23811, 0.36 ) }
    dend_16 { pt3dadd( -12.086, -167.02, -9.39407, 0.48 ) }
    dend_16 { pt3dadd( -12.1213, -167.904, -9.71548, 0.48 ) }
    dend_16 { pt3dadd( -12.2405, -168.969, -10.1309, 0.36 ) }
    dend_16 { pt3dadd( -12.3495, -169.724, -10.4284, 0.84 ) }
    dend_16 { pt3dadd( -12.5562, -170.946, -10.857, 1.32 ) }
    dend_16 { pt3dadd( -12.8579, -172.543, -11.344, 2.16 ) }
    dend_16 { pt3dadd( -13.1204, -173.757, -11.6817, 2.64 ) }
    dend_16 { pt3dadd( -13.416, -175.008, -11.9931, 2.28 ) }
    dend_16 { pt3dadd( -13.7787, -176.407, -12.2455, 1.8 ) }
    dend_16 { pt3dadd( -14.1435, -177.851, -12.4454, 1.2 ) }
    dend_16 { pt3dadd( -14.3388, -178.68, -12.4392, 0.48 ) }
    dend_16 { pt3dadd( -14.6127, -180.056, -12.2757, 0.36 ) }
    dend_16 { pt3dadd( -14.7744, -180.993, -12.09, 0.36 ) }
    dend_16 { pt3dadd( -14.9036, -181.949, -11.8475, 1.08 ) }
    dend_16 { pt3dadd( -14.9827, -182.908, -11.5352, 1.08 ) }
    dend_16 { pt3dadd( -15.0176, -185.638, -10.5744, 1.44 ) }
    dend_16 { pt3dadd( -14.9499, -187.177, -10.03, 1.44 ) }
    dend_16 { pt3dadd( -14.8677, -188.244, -9.61044, 1.32 ) }
    dend_16 { pt3dadd( -14.7818, -189.282, -9.24303, 0.48 ) }
    dend_16 { pt3dadd( -14.7105, -190.141, -9.01424, 0.48 ) }
    dend_16 { pt3dadd( -14.6813, -190.666, -8.90258, 1.08 ) }
    dend_16 { pt3dadd( -14.647, -191.654, -8.77138, 1.68 ) }
    dend_16 { pt3dadd( -14.6604, -193.27, -8.50564, 2.28 ) }
    dend_16 { pt3dadd( -14.7305, -194.375, -8.36059, 2.4 ) }
    dend_16 { pt3dadd( -14.8933, -195.794, -8.26095, 1.32 ) }
    dend_16 { pt3dadd( -15.0621, -196.753, -8.23165, 0.6 ) }
    dend_16 { pt3dadd( -15.2025, -197.379, -8.28888, 0.48 ) }
    dend_16 { pt3dadd( -15.4921, -198.367, -8.56688, 0.48 ) }
    dend_16 { pt3dadd( -15.7859, -199.247, -8.95412, 0.48 ) }
    dend_16 { pt3dadd( -16.0965, -200.226, -9.57551, 1.08 ) }
    dend_16 { pt3dadd( -16.31, -201.068, -10.1643, 1.92 ) }
    dend_16 { pt3dadd( -16.6612, -202.862, -11.543, 1.92 ) }
    dend_16 { pt3dadd( -16.8774, -204.335, -12.715, 2.28 ) }
    dend_16 { pt3dadd( -16.9783, -205.31, -13.4924, 2.76 ) }
    dend_16 { pt3dadd( -17.1571, -207.678, -15.2954, 2.76 ) }
    dend_16 { pt3dadd( -17.2639, -209.505, -16.5515, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( -17.3184, -210.912, -17.3913, 0.72 ) }
    dend_16 { pt3dadd( -17.3545, -212.006, -17.903, 0.96 ) }
    dend_16 { pt3dadd( -17.4048, -212.916, -18.2415, 1.56 ) }
    dend_16 { pt3dadd( -17.5222, -214.011, -18.5582, 1.8 ) }
    dend_16 { pt3dadd( -17.6687, -214.985, -18.7107, 1.44 ) }
    dend_16 { pt3dadd( -17.8078, -216.116, -18.8483, 0.48 ) }
    dend_16 { pt3dadd( -17.8237, -216.566, -18.8817, 0.6 ) }
    dend_16 { pt3dadd( -17.7844, -217.766, -18.9556, 0.6 ) }
    dend_16 { pt3dadd( -17.7464, -218.328, -18.9746, 0.48 ) }
    dend_16 { pt3dadd( -17.6521, -219.626, -18.9952, 0.48 ) }
    dend_16 { pt3dadd( -17.6003, -220.638, -18.9994, 0.48 ) }
    dend_16 { pt3dadd( -17.5844, -221.887, -18.9548, 0.48 ) }
    dend_16 { pt3dadd( -17.6199, -223.126, -18.9176, 0.84 ) }
    dend_16 { pt3dadd( -17.7463, -224.731, -18.8743, 1.68 ) }
    dend_16 { pt3dadd( -17.9675, -226.474, -18.8304, 2.4 ) }
    dend_16 { pt3dadd( -18.1399, -227.609, -18.8002, 2.4 ) }
    dend_16 { pt3dadd( -18.373, -229.192, -18.7728, 0.6 ) }
    dend_16 { pt3dadd( -18.4905, -230.291, -18.7551, 0.6 ) }
    dend_16 { pt3dadd( -18.5227, -231.722, -18.773, 0.6 ) }
    dend_16 { pt3dadd( -18.4206, -232.991, -18.8101, 0.6 ) }
    dend_16 { pt3dadd( -18.2319, -234.035, -18.8229, 1.08 ) }
    dend_16 { pt3dadd( -17.9735, -235.06, -18.8149, 1.44 ) }
    dend_16 { pt3dadd( -17.7029, -235.967, -18.7933, 0.84 ) }
    dend_16 { pt3dadd( -17.399, -236.976, -18.7233, 0.96 ) }
    dend_16 { pt3dadd( -17.0928, -238.133, -18.6237, 0.96 ) }
    dend_16 { pt3dadd( -16.9253, -238.992, -18.548, 0.72 ) }
    dend_16 { pt3dadd( -16.8472, -239.636, -18.4951, 0.48 ) }
    dend_16 { pt3dadd( -16.8129, -240.216, -18.448, 0.48 ) }
    dend_16 { pt3dadd( -16.826, -241.018, -18.3733, 1.32 ) }
    dend_16 { pt3dadd( -16.9438, -242.338, -18.2371, 1.8 ) }
    dend_16 { pt3dadd( -17.0731, -243.301, -18.1941, 2.04 ) }
    dend_16 { pt3dadd( -17.287, -244.599, -18.2079, 1.92 ) }
    dend_16 { pt3dadd( -17.4602, -245.566, -18.2547, 1.44 ) }
    dend_16 { pt3dadd( -17.681, -246.77, -18.3744, 0.48 ) }
    dend_16 { pt3dadd( -17.8719, -247.794, -18.5507, 0.48 ) }
    dend_16 { pt3dadd( -18.1633, -249.444, -18.9279, 1.44 ) }
    dend_16 { pt3dadd( -18.4048, -250.879, -19.2835, 2.52 ) }
    dend_16 { pt3dadd( -18.5962, -252.125, -19.602, 3.25 ) }
    dend_16 { pt3dadd( -18.8169, -253.907, -20.0674, 2.28 ) }
    dend_16 { pt3dadd( -18.9112, -255.145, -20.3723, 1.8 ) }
    dend_16 { pt3dadd( -18.9385, -256.542, -20.6718, 0.96 ) }
    dend_16 { pt3dadd( -18.9032, -258.42, -20.9995, 0.96 ) }
    dend_16 { pt3dadd( -18.8321, -259.829, -21.2374, 0.96 ) }
    dend_16 { pt3dadd( -18.7128, -261.639, -21.5178, 2.52 ) }
    dend_16 { pt3dadd( -18.6127, -262.978, -21.6597, 2.52 ) }
    dend_16 { pt3dadd( -18.4325, -265.215, -21.802, 1.44 ) }
    dend_16 { pt3dadd( -18.3376, -266.316, -21.8448, 0.96 ) }
    dend_16 { pt3dadd( -18.2176, -267.601, -21.8922, 0.72 ) }
    dend_16 { pt3dadd( -18.1641, -268.256, -21.9104, 0.72 ) }
    dend_16 { pt3dadd( -18.0973, -269.524, -21.9881, 0.72 ) }
    dend_16 { pt3dadd( -18.0972, -270.474, -22.1012, 0.72 ) }
    dend_16 { pt3dadd( -18.1158, -271.544, -22.3632, 1.08 ) }
    dend_16 { pt3dadd( -18.0812, -272.596, -22.8373, 1.44 ) }
    dend_16 { pt3dadd( -18.0458, -272.981, -23.0631, 1.44 ) }
    dend_16 { pt3dadd( -17.8489, -274.578, -24.1772, 0.36 ) }
    dend_16 { pt3dadd( -17.6435, -275.931, -25.2266, 0.36 ) }
    dend_16 { pt3dadd( -17.3609, -277.527, -26.4726, 1.32 ) }
    dend_16 { pt3dadd( -16.988, -279.363, -27.8408, 0.48 ) }
    dend_16 { pt3dadd( -16.82, -280.119, -28.3554, 0.48 ) }
    dend_16 { pt3dadd( -16.4484, -281.684, -29.3233, 1.92 ) }
    dend_16 { pt3dadd( -16.3338, -282.169, -29.5799, 2.76 ) }
    dend_16 { pt3dadd( -16.0953, -283.312, -30.0787, 2.4 ) }
    dend_16 { pt3dadd( -15.9567, -284.395, -30.3535, 1.32 ) }
    dend_16 { pt3dadd( -15.9318, -285.02, -30.5319, 0.12 ) }
    dend_16 { pt3dadd( -15.9593, -285.627, -30.778, 0.12 ) }
    dend_16 { pt3dadd( -16.0068, -285.93, -30.9325, 0.12 ) }
    dend_16 { pt3dadd( -16.1987, -286.852, -31.513, 1.08 ) }
    dend_16 { pt3dadd( -16.3268, -287.481, -31.9742, 1.08 ) }
    dend_16 { pt3dadd( -16.7401, -290.144, -34.2236, 0.24 ) }
    dend_16 { pt3dadd( -16.7519, -290.52, -34.5515, 0.24 ) }
    dend_16 { pt3dadd( -16.6725, -291.229, -35.1339, 0.24 ) }
    dend_16 { pt3dadd( -16.4197, -292.079, -35.7064, 0.24 ) }
    dend_16 { pt3dadd( -15.9696, -293.002, -36.1739, 0.24 ) }
    dend_16 { pt3dadd( -15.2898, -294.174, -36.6993, 1.08 ) }
    dend_16 { pt3dadd( -14.6618, -295.199, -37.0391, 2.04 ) }
    dend_16 { pt3dadd( -14.1151, -296.15, -37.3719, 2.04 ) }
    dend_16 { pt3dadd( -13.4849, -297.332, -37.7968, 1.44 ) }
    dend_16 { pt3dadd( -13.241, -297.928, -37.9925, 0.96 ) }
    dend_16 { pt3dadd( -12.5962, -300.162, -38.611, 0.72 ) }
    dend_16 { pt3dadd( -12.4155, -301.081, -38.7999, 0.36 ) }
    dend_16 { pt3dadd( -12.3262, -302.173, -39.0088, 0.36 ) }
    dend_16 { pt3dadd( -12.3337, -302.661, -39.0695, 0.36 ) }
    dend_16 { pt3dadd( -12.4413, -303.854, -39.0978, 1.32 ) }
    dend_16 { pt3dadd( -12.5574, -304.854, -39.0306, 2.04 ) }
    dend_16 { pt3dadd( -12.6167, -305.337, -38.9593, 2.4 ) }
    dend_16 { pt3dadd( -12.7119, -306.035, -38.8515, 2.4 ) }
    dend_16 { pt3dadd( -12.9609, -307.866, -38.5684, 0.48 ) }
    dend_16 { pt3dadd( -13.0871, -308.804, -38.4317, 0.36 ) }
    dend_16 { pt3dadd( -13.2955, -310.509, -38.2389, 0.36 ) }
    dend_16 { pt3dadd( -13.4054, -311.467, -38.1405, 0.36 ) }
    dend_16 { pt3dadd( -13.5243, -312.521, -38.0479, 1.68 ) }
    dend_16 { pt3dadd( -13.5872, -313.306, -37.9923, 2.16 ) }
    dend_16 { pt3dadd( -13.6034, -313.81, -37.9713, 2.16 ) }
    dend_16 { pt3dadd( -13.5882, -315.135, -37.906, 0.96 ) }
    dend_16 { pt3dadd( -13.5404, -315.923, -37.8978, 0.36 ) }
    dend_16 { pt3dadd( -13.494, -316.398, -37.9429, 0.36 ) }
    dend_16 { pt3dadd( -13.3414, -317.567, -38.1895, 0.36 ) }
    dend_16 { pt3dadd( -13.1851, -318.712, -38.5151, 0.36 ) }
    dend_16 { pt3dadd( -13.0741, -319.513, -38.7529, 0.36 ) }
    dend_16 { pt3dadd( -12.9177, -320.782, -39.1279, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( -12.7759, -322.526, -39.6069, 2.4 ) }
    dend_16 { pt3dadd( -12.7394, -323.436, -39.8161, 2.52 ) }
    dend_16 { pt3dadd( -12.7475, -323.87, -39.8953, 2.52 ) }
    dend_16 { pt3dadd( -12.8567, -325.433, -40.0826, 0.48 ) }
    dend_16 { pt3dadd( -12.9392, -326.404, -40.1491, 0.36 ) }
    dend_16 { pt3dadd( -13.124, -328.128, -40.0801, 0.36 ) }
    dend_16 { pt3dadd( -13.2165, -328.904, -39.9683, 1.32 ) }
    dend_16 { pt3dadd( -13.3455, -329.875, -39.7919, 1.92 ) }
    dend_16 { pt3dadd( -13.4509, -330.702, -39.6511, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.12681, 26.633, 5.52168, 1.92 ) }
    dend_2 { pt3dadd( 7.1708, 30.2584, 5.48415, 1.92 ) }
    dend_2 { pt3dadd( 7.15716, 32.0092, 5.48958, 2.28 ) }
    dend_2 { pt3dadd( 7.13502, 33.6158, 5.55175, 1.8 ) }
    dend_2 { pt3dadd( 7.11745, 35.4975, 5.65519, 1.8 ) }
    dend_2 { pt3dadd( 7.11513, 38.055, 5.81629, 1.68 ) }
    dend_2 { pt3dadd( 7.14305, 41.0356, 6.01559, 2.4 ) }
    dend_2 { pt3dadd( 7.18438, 43.3057, 6.31822, 2.88 ) }
    dend_2 { pt3dadd( 7.22027, 44.5069, 6.45974, 2.76 ) }
    dend_2 { pt3dadd( 7.27981, 45.6042, 6.60899, 2.76 ) }
    dend_2 { pt3dadd( 7.35791, 46.4334, 6.76734, 2.76 ) }
    dend_2 { pt3dadd( 7.50115, 47.3735, 6.98968, 2.52 ) }
    dend_2 { pt3dadd( 7.93715, 49.371, 7.51424, 1.68 ) }
    dend_2 { pt3dadd( 8.22113, 50.533, 7.83356, 1.44 ) }
    dend_2 { pt3dadd( 8.55339, 51.8507, 8.18498, 1.68 ) }
    dend_2 { pt3dadd( 9.16674, 54.2497, 8.87497, 2.64 ) }
    dend_2 { pt3dadd( 9.54781, 55.711, 9.32022, 2.88 ) }
    dend_2 { pt3dadd( 9.77622, 56.5386, 9.58362, 3.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 27/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.12681, 26.633, 5.52168, 0.84 ) }
    dend_1 { pt3dadd( 6.57825, 26.3935, 5.77942, 0.84 ) }
    dend_1 { pt3dadd( 5.69477, 26.2199, 6.1932, 0.84 ) }
    dend_1 { pt3dadd( 5.09937, 26.2707, 6.56858, 0.84 ) }
    dend_1 { pt3dadd( 4.93178, 26.3372, 6.7206, 0.84 ) }
    dend_1 { pt3dadd( 4.5543, 26.66, 7.16923, 0.72 ) }
    dend_1 { pt3dadd( 4.33507, 27.0563, 7.71844, 0.72 ) }
    dend_1 { pt3dadd( 4.29011, 27.3346, 8.11827, 0.72 ) }
    dend_1 { pt3dadd( 4.40629, 27.8675, 8.83701, 0.96 ) }
    dend_1 { pt3dadd( 4.63293, 28.2725, 9.39051, 1.44 ) }
    dend_1 { pt3dadd( 4.97596, 28.702, 9.95232, 1.56 ) }
    dend_1 { pt3dadd( 5.75643, 29.4472, 10.9344, 1.32 ) }
    dend_1 { pt3dadd( 6.32902, 29.8964, 11.5426, 0.48 ) }
    dend_1 { pt3dadd( 6.83362, 30.2417, 11.9833, 0.6 ) }
    dend_1 { pt3dadd( 7.83983, 30.8256, 12.688, 0.6 ) }
    dend_1 { pt3dadd( 8.4511, 31.1235, 12.9953, 1.68 ) }
    dend_1 { pt3dadd( 9.51738, 31.5209, 13.2252, 1.92 ) }
    dend_1 { pt3dadd( 10.2706, 31.7435, 12.9852, 1.56 ) }
    dend_1 { pt3dadd( 12.2063, 32.0015, 10.8448, 0.48 ) }
    dend_1 { pt3dadd( 12.5328, 31.9996, 10.193, 0.48 ) }
    dend_1 { pt3dadd( 12.7698, 31.9817, 9.60607, 0.84 ) }
    dend_1 { pt3dadd( 12.8766, 31.9477, 9.19706, 0.72 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.461379 ) }
    axon_1 { pt3dadd( -6.31129, -57.5385, -0.718029, 0.461379 ) }
    axon_1 { pt3dadd( -8.0582, -72.4364, -0.718029, 0.461379 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 1.145, 18.5595, -18.0791, 0.96 ) }
    dend_54 { pt3dadd( 2.37027, 21.093, -18.8601, 0.96 ) }
    dend_54 { pt3dadd( 2.97847, 22.5728, -19.2084, 0.6 ) }
    dend_54 { pt3dadd( 3.47123, 24.0231, -19.4944, 0.6 ) }
    dend_54 { pt3dadd( 3.68902, 24.8183, -19.6324, 1.32 ) }
    dend_54 { pt3dadd( 3.83783, 25.5388, -19.7191, 1.56 ) }
    dend_54 { pt3dadd( 4.02663, 26.9433, -19.8235, 0.96 ) }
    dend_54 { pt3dadd( 4.02008, 28.6688, -19.7358, 0.6 ) }
    dend_54 { pt3dadd( 3.9463, 29.4849, -19.662, 0.48 ) }
    dend_54 { pt3dadd( 3.85063, 30.1951, -19.5944, 0.48 ) }
    dend_54 { pt3dadd( 3.65009, 31.6421, -19.4682, 0.72 ) }
    dend_54 { pt3dadd( 3.43258, 33.3831, -19.3684, 1.8 ) }
    dend_54 { pt3dadd( 3.29025, 34.9739, -19.3288, 2.04 ) }
    dend_54 { pt3dadd( 3.24633, 36.2666, -19.3338, 2.64 ) }
    dend_54 { pt3dadd( 3.27808, 37.7133, -19.425, 3.25 ) }
    dend_54 { pt3dadd( 3.36367, 39.0195, -19.5745, 3.25 ) }
    dend_54 { pt3dadd( 3.50377, 40.3377, -19.7937, 2.88 ) }
    dend_54 { pt3dadd( 3.74806, 42.0803, -20.1118, 0.84 ) }
    dend_54 { pt3dadd( 3.85594, 42.79, -20.2393, 0.6 ) }
    dend_54 { pt3dadd( 4.10858, 44.6086, -20.5429, 2.4 ) }
    dend_54 { pt3dadd( 4.25883, 45.8901, -20.7333, 3.25 ) }
    dend_54 { pt3dadd( 4.3785, 47.1068, -20.8773, 2.88 ) }
    dend_54 { pt3dadd( 4.55639, 49.1236, -21.059, 0.96 ) }
    dend_54 { pt3dadd( 4.74638, 51.2678, -21.2613, 0.84 ) }
    dend_54 { pt3dadd( 4.86558, 52.5882, -21.3948, 0.48 ) }
    dend_54 { pt3dadd( 4.95167, 53.4882, -21.4815, 0.48 ) }
    dend_54 { pt3dadd( 5.11472, 55.2271, -21.6739, 0.48 ) }
    dend_54 { pt3dadd( 5.23818, 56.59, -21.8511, 1.92 ) }
    dend_54 { pt3dadd( 5.4106, 58.2143, -22.1136, 3.37 ) }
    dend_54 { pt3dadd( 5.56417, 59.2776, -22.3266, 3.49 ) }
    dend_54 { pt3dadd( 5.81597, 60.5468, -22.6194, 3.0 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 83/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 1.145, 18.5595, -18.0791, 0.84 ) }
    dend_49 { pt3dadd( -0.896454, 19.6383, -18.4406, 0.84 ) }
    dend_49 { pt3dadd( -1.38444, 20.0532, -18.6389, 0.72 ) }
    dend_49 { pt3dadd( -1.70035, 20.4417, -18.8363, 0.72 ) }
    dend_49 { pt3dadd( -1.97121, 20.9693, -19.1572, 0.72 ) }
    dend_49 { pt3dadd( -2.35733, 21.9471, -19.9487, 0.84 ) }
    dend_49 { pt3dadd( -2.80389, 23.1344, -21.0198, 0.72 ) }
    dend_49 { pt3dadd( -3.00316, 23.9886, -21.846, 0.48 ) }
    dend_49 { pt3dadd( -3.16772, 24.7935, -22.6452, 0.48 ) }
    dend_49 { pt3dadd( -3.45427, 26.1975, -24.0537, 0.72 ) }
    dend_49 { pt3dadd( -3.81519, 27.6541, -25.5288, 0.48 ) }
    dend_49 { pt3dadd( -3.94167, 28.0132, -25.9304, 0.48 ) }
    dend_49 { pt3dadd( -4.09102, 28.3168, -26.263, 0.48 ) }
    dend_49 { pt3dadd( -4.42453, 28.8561, -26.8423, 1.32 ) }
    dend_49 { pt3dadd( -4.80619, 29.3765, -27.4058, 2.04 ) }
    dend_49 { pt3dadd( -5.37846, 30.0839, -28.1154, 1.56 ) }
    dend_49 { pt3dadd( -6.57444, 31.6347, -29.5758, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -6.84916, 32.0036, -29.9451, 0.36 ) }
    dend_49 { pt3dadd( -7.87896, 33.3968, -31.4624, 2.4 ) }
    dend_49 { pt3dadd( -8.30172, 33.9792, -32.1644, 3.25 ) }
    dend_49 { pt3dadd( -8.56258, 34.3484, -32.6489, 3.73 ) }
    // Section: dend_41, id: dend_41, parent: dend_27 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 16.2877, -20.4178, -23.0928, 0.24 ) }
    dend_41 { pt3dadd( 15.8081, -21.2746, -23.5142, 0.24 ) }
    dend_41 { pt3dadd( 15.6592, -21.5823, -23.6742, 0.24 ) }
    dend_41 { pt3dadd( 15.4142, -22.174, -23.9631, 1.92 ) }
    dend_41 { pt3dadd( 15.2141, -22.6444, -24.1823, 2.52 ) }
    dend_41 { pt3dadd( 15.0408, -23.0227, -24.3536, 2.4 ) }
    dend_41 { pt3dadd( 14.8538, -23.4107, -24.5264, 1.8 ) }
    dend_41 { pt3dadd( 14.6196, -23.9211, -24.7448, 0.24 ) }
    dend_41 { pt3dadd( 14.3246, -24.5236, -24.9793, 0.24 ) }
    dend_41 { pt3dadd( 14.0134, -25.1248, -25.1837, 0.24 ) }
    dend_41 { pt3dadd( 13.7866, -25.5389, -25.3088, 0.24 ) }
    dend_41 { pt3dadd( 13.5694, -25.9167, -25.4294, 1.68 ) }
    dend_41 { pt3dadd( 13.209, -26.5107, -25.6213, 1.92 ) }
    dend_41 { pt3dadd( 12.7937, -27.1638, -25.8433, 2.28 ) }
    dend_41 { pt3dadd( 12.4597, -27.6672, -26.029, 3.12 ) }
    dend_41 { pt3dadd( 12.111, -28.178, -26.227, 3.12 ) }
    dend_41 { pt3dadd( 11.4607, -29.0807, -26.5728, 0.24 ) }
    dend_41 { pt3dadd( 11.1945, -29.4216, -26.7003, 0.24 ) }
    dend_41 { pt3dadd( 11.1313, -29.4946, -26.7276, 0.48 ) }
    dend_41 { pt3dadd( 10.8595, -29.7723, -26.8262, 0.48 ) }
    dend_41 { pt3dadd( 10.463, -30.1356, -26.9373, 0.48 ) }
    dend_41 { pt3dadd( 10.1926, -30.386, -26.9853, 0.48 ) }
    dend_41 { pt3dadd( 10.0623, -30.5219, -26.9851, 0.12 ) }
    dend_41 { pt3dadd( 9.84348, -30.8289, -26.9824, 0.12 ) }
    dend_41 { pt3dadd( 9.74181, -31.0025, -26.9812, 0.12 ) }
    dend_41 { pt3dadd( 9.61909, -31.2628, -26.9837, 0.72 ) }
    dend_41 { pt3dadd( 9.408, -31.7903, -27.0052, 0.96 ) }
    dend_41 { pt3dadd( 9.2835, -32.1224, -27.0402, 0.24 ) }
    dend_41 { pt3dadd( 9.04208, -32.7737, -27.1345, 0.24 ) }
    dend_41 { pt3dadd( 8.93601, -33.0581, -27.1683, 0.96 ) }
    dend_41 { pt3dadd( 8.81028, -33.386, -27.203, 1.44 ) }
    dend_41 { pt3dadd( 8.64659, -33.7852, -27.2449, 1.56 ) }
    dend_41 { pt3dadd( 8.40481, -34.3243, -27.3061, 0.48 ) }
    dend_41 { pt3dadd( 8.24175, -34.6728, -27.3495, 0.24 ) }
    dend_41 { pt3dadd( 7.93866, -35.3137, -27.4262, 1.68 ) }
    dend_41 { pt3dadd( 7.7408, -35.7675, -27.4877, 2.88 ) }
    dend_41 { pt3dadd( 7.47078, -36.4315, -27.565, 2.88 ) }
    dend_41 { pt3dadd( 7.145, -37.315, -27.6567, 0.24 ) }
    dend_41 { pt3dadd( 6.90097, -38.0599, -27.7206, 0.24 ) }
    dend_41 { pt3dadd( 6.81937, -38.3412, -27.7451, 0.24 ) }
    dend_41 { pt3dadd( 6.59837, -39.2159, -27.8398, 0.24 ) }
    dend_41 { pt3dadd( 6.47637, -39.7766, -27.8973, 1.8 ) }
    dend_41 { pt3dadd( 6.36455, -40.398, -27.9516, 2.76 ) }
    dend_41 { pt3dadd( 6.23656, -41.2544, -28.017, 0.48 ) }
    dend_41 { pt3dadd( 6.16212, -41.7403, -28.0532, 0.48 ) }
    dend_41 { pt3dadd( 6.09113, -42.1179, -28.0842, 0.6 ) }
    dend_41 { pt3dadd( 5.99297, -42.5355, -28.1106, 0.6 ) }
    dend_41 { pt3dadd( 5.90533, -42.855, -28.1408, 0.36 ) }
    dend_41 { pt3dadd( 5.7993, -43.1937, -28.1743, 0.36 ) }
    dend_41 { pt3dadd( 5.59627, -43.7304, -28.2718, 0.48 ) }
    dend_41 { pt3dadd( 5.30326, -44.4303, -28.4339, 0.48 ) }
    dend_41 { pt3dadd( 5.09101, -44.8946, -28.5592, 1.44 ) }
    dend_41 { pt3dadd( 4.82124, -45.4764, -28.7588, 2.76 ) }
    dend_41 { pt3dadd( 4.61058, -45.9619, -28.9526, 3.0 ) }
    dend_41 { pt3dadd( 4.21706, -46.9696, -29.4463, 0.12 ) }
    dend_41 { pt3dadd( 4.11062, -47.265, -29.613, 0.12 ) }
    dend_41 { pt3dadd( 3.96669, -47.6809, -29.8737, 0.12 ) }
    dend_41 { pt3dadd( 3.81052, -48.1578, -30.1882, 1.32 ) }
    dend_41 { pt3dadd( 3.66386, -48.6188, -30.4849, 2.4 ) }
    dend_41 { pt3dadd( 3.35117, -49.5339, -31.0468, 0.12 ) }
    dend_41 { pt3dadd( 3.18557, -49.9811, -31.2917, 0.12 ) }
    dend_41 { pt3dadd( 3.07162, -50.2442, -31.4295, 0.84 ) }
    dend_41 { pt3dadd( 2.92916, -50.5311, -31.5696, 0.96 ) }
    dend_41 { pt3dadd( 2.56345, -51.2045, -31.8513, 0.12 ) }
    dend_41 { pt3dadd( 2.28008, -51.7071, -32.0406, 0.12 ) }
    dend_41 { pt3dadd( 2.06212, -52.1075, -32.1635, 1.32 ) }
    dend_41 { pt3dadd( 1.86675, -52.4909, -32.2759, 1.8 ) }
    dend_41 { pt3dadd( 1.61586, -53.0129, -32.4168, 0.12 ) }
    dend_41 { pt3dadd( 1.28941, -53.7016, -32.587, 0.12 ) }
    dend_41 { pt3dadd( 1.11885, -54.0782, -32.6695, 1.56 ) }
    dend_41 { pt3dadd( 0.936093, -54.5325, -32.7608, 2.52 ) }
    dend_41 { pt3dadd( 0.788494, -54.9334, -32.8348, 2.64 ) }
    dend_41 { pt3dadd( 0.49382, -55.8, -32.9811, 1.32 ) }
    dend_41 { pt3dadd( 0.361008, -56.1921, -33.042, 0.12 ) }
    dend_41 { pt3dadd( 0.335706, -56.2641, -33.0533, 0.24 ) }
    dend_41 { pt3dadd( 0.153355, -56.7675, -33.1436, 0.24 ) }
    dend_41 { pt3dadd( -0.0600841, -57.3549, -33.2595, 0.24 ) }
    dend_41 { pt3dadd( -0.198639, -57.7443, -33.3695, 0.24 ) }
    dend_41 { pt3dadd( -0.290689, -58.0114, -33.4644, 0.24 ) }
    dend_41 { pt3dadd( -0.379649, -58.2715, -33.5677, 1.56 ) }
    dend_41 { pt3dadd( -0.526437, -58.6752, -33.7388, 2.28 ) }
    dend_41 { pt3dadd( -0.666456, -59.0422, -33.9114, 2.28 ) }
    dend_41 { pt3dadd( -0.977764, -59.8659, -34.3216, 0.48 ) }
    dend_41 { pt3dadd( -1.16052, -60.3417, -34.5614, 0.48 ) }
    dend_41 { pt3dadd( -1.18402, -60.402, -34.5908, 0.72 ) }
    dend_41 { pt3dadd( -1.35821, -60.8237, -34.7887, 0.96 ) }
    dend_41 { pt3dadd( -1.51505, -61.1778, -34.9381, 0.48 ) }
    dend_41 { pt3dadd( -1.60632, -61.3606, -35.0181, 0.48 ) }
    dend_41 { pt3dadd( -1.76812, -61.6586, -35.1259, 0.48 ) }
    dend_41 { pt3dadd( -1.98842, -62.0529, -35.2632, 0.6 ) }
    dend_41 { pt3dadd( -2.06197, -62.1872, -35.3067, 0.24 ) }
    dend_41 { pt3dadd( -2.28181, -62.6145, -35.4358, 0.24 ) }
    dend_41 { pt3dadd( -2.57624, -63.2475, -35.605, 1.56 ) }
    dend_41 { pt3dadd( -2.79707, -63.7618, -35.7382, 2.4 ) }
    dend_41 { pt3dadd( -2.98314, -64.2257, -35.8542, 2.52 ) }
    dend_41 { pt3dadd( -3.08263, -64.4856, -35.9162, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( -3.40492, -65.336, -36.0947, 0.24 ) }
    dend_41 { pt3dadd( -3.77617, -66.3883, -36.2793, 0.24 ) }
    dend_41 { pt3dadd( -3.86675, -66.668, -36.3201, 0.96 ) }
    dend_41 { pt3dadd( -3.98677, -67.0742, -36.381, 1.44 ) }
    dend_41 { pt3dadd( -4.05894, -67.3508, -36.4171, 1.68 ) }
    dend_41 { pt3dadd( -4.19593, -67.9539, -36.498, 0.24 ) }
    dend_41 { pt3dadd( -4.38568, -69.007, -36.6358, 0.24 ) }
    dend_41 { pt3dadd( -4.4628, -69.5666, -36.7135, 1.56 ) }
    dend_41 { pt3dadd( -4.50338, -69.9176, -36.7685, 2.16 ) }
    dend_41 { pt3dadd( -4.54145, -70.2955, -36.8372, 1.8 ) }
    dend_41 { pt3dadd( -4.62177, -70.9367, -36.9802, 0.12 ) }
    dend_41 { pt3dadd( -4.68258, -71.2959, -37.0822, 0.12 ) }
    dend_41 { pt3dadd( -4.70165, -71.3611, -37.1034, 0.6 ) }
    dend_41 { pt3dadd( -4.80902, -71.6262, -37.1931, 0.12 ) }
    dend_41 { pt3dadd( -4.90554, -71.8191, -37.2576, 0.12 ) }
    dend_41 { pt3dadd( -5.16752, -72.2832, -37.402, 0.12 ) }
    dend_41 { pt3dadd( -5.29174, -72.5008, -37.4572, 0.6 ) }
    dend_41 { pt3dadd( -5.49549, -72.8755, -37.5058, 0.6 ) }
    dend_41 { pt3dadd( -5.62562, -73.132, -37.5149, 0.12 ) }
    dend_41 { pt3dadd( -5.77882, -73.4466, -37.5066, 0.12 ) }
    dend_41 { pt3dadd( -5.91012, -73.7086, -37.494, 0.6 ) }
    dend_41 { pt3dadd( -6.09372, -74.0932, -37.4682, 0.6 ) }
    dend_41 { pt3dadd( -6.4322, -74.8281, -37.4167, 0.12 ) }
    dend_41 { pt3dadd( -6.64928, -75.3178, -37.3852, 0.12 ) }
    dend_41 { pt3dadd( -6.85954, -75.8111, -37.3625, 1.44 ) }
    dend_41 { pt3dadd( -7.06798, -76.3218, -37.3541, 2.4 ) }
    dend_41 { pt3dadd( -7.16075, -76.5613, -37.3598, 2.52 ) }
    dend_41 { pt3dadd( -7.30094, -76.9459, -37.3915, 2.16 ) }
    dend_41 { pt3dadd( -7.43006, -77.4235, -37.4638, 0.12 ) }
    dend_41 { pt3dadd( -7.51529, -77.8411, -37.4996, 0.36 ) }
    dend_41 { pt3dadd( -7.55963, -78.1165, -37.509, 0.12 ) }
    dend_41 { pt3dadd( -7.58972, -78.3281, -37.5075, 0.12 ) }
    dend_41 { pt3dadd( -7.63071, -78.6386, -37.5039, 0.12 ) }
    dend_41 { pt3dadd( -7.69665, -79.1908, -37.4953, 0.12 ) }
    dend_41 { pt3dadd( -7.7606, -79.8295, -37.4895, 0.12 ) }
    dend_41 { pt3dadd( -7.77886, -79.9707, -37.4937, 0.12 ) }
    dend_41 { pt3dadd( -7.85933, -80.3916, -37.527, 0.12 ) }
    dend_41 { pt3dadd( -7.97633, -80.8694, -37.6065, 1.8 ) }
    dend_41 { pt3dadd( -8.03163, -81.0704, -37.6545, 2.28 ) }
    dend_41 { pt3dadd( -8.16433, -81.4677, -37.7412, 1.92 ) }
    dend_41 { pt3dadd( -8.3892, -82.1234, -37.8501, 0.36 ) }
    dend_41 { pt3dadd( -8.56971, -82.6259, -37.9113, 0.36 ) }
    dend_41 { pt3dadd( -8.7361, -83.0923, -37.9504, 1.2 ) }
    dend_41 { pt3dadd( -8.87926, -83.5132, -37.9368, 0.72 ) }
    dend_41 { pt3dadd( -9.11524, -84.387, -37.9074, 0.12 ) }
    dend_41 { pt3dadd( -9.302, -85.1816, -37.8819, 0.12 ) }
    dend_41 { pt3dadd( -9.40961, -85.7052, -37.8678, 1.68 ) }
    dend_41 { pt3dadd( -9.49452, -86.1117, -37.858, 1.8 ) }
    dend_41 { pt3dadd( -9.73618, -87.1895, -37.822, 1.44 ) }
    dend_41 { pt3dadd( -9.98748, -88.2676, -37.8342, 0.24 ) }
    dend_41 { pt3dadd( -10.2169, -89.3036, -37.8619, 0.12 ) }
    dend_41 { pt3dadd( -10.3243, -89.7846, -37.8626, 0.12 ) }
    dend_41 { pt3dadd( -10.5252, -90.6114, -37.8411, 0.12 ) }
    dend_41 { pt3dadd( -10.6286, -91.0113, -37.8367, 1.2 ) }
    dend_41 { pt3dadd( -10.7656, -91.5593, -37.8465, 2.52 ) }
    dend_41 { pt3dadd( -10.9813, -92.4269, -37.769, 0.48 ) }
    dend_41 { pt3dadd( -11.0209, -92.6295, -37.747, 0.48 ) }
    dend_41 { pt3dadd( -11.1011, -93.1339, -37.6896, 0.48 ) }
    dend_41 { pt3dadd( -11.1677, -93.6863, -37.6368, 0.72 ) }
    dend_41 { pt3dadd( -11.2485, -94.4018, -37.5794, 0.24 ) }
    dend_41 { pt3dadd( -11.3487, -95.1601, -37.4754, 0.12 ) }
    dend_41 { pt3dadd( -11.4071, -95.7328, -37.3991, 0.12 ) }
    dend_41 { pt3dadd( -11.4211, -96.0484, -37.3629, 1.08 ) }
    dend_41 { pt3dadd( -11.4213, -96.401, -37.3115, 1.32 ) }
    dend_41 { pt3dadd( -11.408, -96.6908, -37.2719, 1.08 ) }
    dend_41 { pt3dadd( -11.3576, -97.4471, -37.1855, 0.36 ) }
    dend_41 { pt3dadd( -11.2582, -98.5759, -37.1213, 0.36 ) }
    dend_41 { pt3dadd( -11.1872, -99.3371, -37.073, 1.56 ) }
    dend_41 { pt3dadd( -11.1264, -100.001, -37.0353, 2.16 ) }
    dend_41 { pt3dadd( -11.0552, -100.535, -37.0113, 1.68 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 16.2877, -20.4178, -23.0928, 0.36 ) }
    dend_28 { pt3dadd( 17.7236, -21.6911, -23.4716, 0.36 ) }
    dend_28 { pt3dadd( 18.2185, -21.8951, -23.7336, 0.36 ) }
    dend_28 { pt3dadd( 18.4934, -21.9275, -23.9321, 0.36 ) }
    dend_28 { pt3dadd( 18.7442, -21.9395, -24.118, 0.36 ) }
    dend_28 { pt3dadd( 19.3521, -21.9707, -24.5553, 0.72 ) }
    dend_28 { pt3dadd( 20.2827, -22.052, -25.2137, 0.96 ) }
    dend_28 { pt3dadd( 20.8748, -22.041, -25.6777, 0.96 ) }
    dend_28 { pt3dadd( 21.7075, -22.0464, -26.3355, 0.48 ) }
    dend_28 { pt3dadd( 22.4756, -22.1162, -26.9298, 0.36 ) }
    dend_28 { pt3dadd( 22.8642, -22.2399, -27.2166, 0.36 ) }
    dend_28 { pt3dadd( 23.1677, -22.5229, -27.3909, 0.36 ) }
    dend_28 { pt3dadd( 23.2594, -22.7163, -27.4159, 0.36 ) }
    dend_28 { pt3dadd( 23.4903, -23.3746, -27.4376, 0.36 ) }
    dend_28 { pt3dadd( 23.7086, -23.9943, -27.4245, 1.56 ) }
    dend_28 { pt3dadd( 24.014, -24.7446, -27.3963, 2.52 ) }
    dend_28 { pt3dadd( 24.3481, -25.411, -27.4077, 2.4 ) }
    dend_28 { pt3dadd( 25.1077, -26.594, -27.4867, 0.36 ) }
    dend_28 { pt3dadd( 25.4024, -26.9624, -27.5365, 0.36 ) }
    dend_28 { pt3dadd( 26.0287, -27.624, -27.6662, 0.36 ) }
    dend_28 { pt3dadd( 26.6417, -28.1906, -27.8183, 0.36 ) }
    dend_28 { pt3dadd( 27.5011, -28.9161, -28.0397, 1.44 ) }
    dend_28 { pt3dadd( 28.424, -29.6373, -28.2899, 3.25 ) }
    dend_28 { pt3dadd( 29.4638, -30.3969, -28.5892, 4.69 ) }
    dend_28 { pt3dadd( 29.6558, -30.5426, -28.6496, 4.93 ) }
    dend_28 { pt3dadd( 30.7819, -31.4947, -29.0494, 3.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 96/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -13.4509, -330.702, -39.6511, 0.12 ) }
    dend_24 { pt3dadd( -13.6407, -331.694, -40.62, 0.12 ) }
    dend_24 { pt3dadd( -13.7064, -332.144, -41.0553, 0.12 ) }
    dend_24 { pt3dadd( -13.7205, -332.274, -41.2187, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -13.7549, -332.419, -41.4084, 0.36 ) }
    dend_24 { pt3dadd( -14.0066, -333.216, -42.4241, 0.12 ) }
    dend_24 { pt3dadd( -14.0823, -333.45, -42.7612, 0.12 ) }
    dend_24 { pt3dadd( -14.0823, -333.45, -42.7612, 0.36 ) }
    dend_24 { pt3dadd( -14.3385, -334.302, -44.0496, 0.36 ) }
    dend_24 { pt3dadd( -14.4876, -334.857, -44.8499, 2.52 ) }
    dend_24 { pt3dadd( -14.538, -335.076, -45.1429, 2.88 ) }
    dend_24 { pt3dadd( -15.0007, -337.051, -47.5419, 0.24 ) }
    dend_24 { pt3dadd( -15.0636, -337.329, -47.8546, 0.12 ) }
    dend_24 { pt3dadd( -15.1124, -337.597, -48.1162, 0.12 ) }
    dend_24 { pt3dadd( -15.1524, -337.954, -48.3817, 0.48 ) }
    dend_24 { pt3dadd( -15.1651, -338.348, -48.6251, 0.48 ) }
    dend_24 { pt3dadd( -15.1746, -338.755, -48.8254, 0.12 ) }
    dend_24 { pt3dadd( -15.1971, -339.48, -48.9905, 0.12 ) }
    dend_24 { pt3dadd( -15.1968, -339.908, -49.1274, 0.12 ) }
    dend_24 { pt3dadd( -15.1891, -340.398, -49.3033, 0.84 ) }
    dend_24 { pt3dadd( -15.1975, -340.715, -49.4106, 0.84 ) }
    dend_24 { pt3dadd( -15.2316, -341.912, -49.784, 0.12 ) }
    dend_24 { pt3dadd( -15.2423, -342.434, -49.9242, 0.12 ) }
    dend_24 { pt3dadd( -15.3179, -343.784, -50.2584, 2.64 ) }
    dend_24 { pt3dadd( -15.3668, -344.207, -50.356, 2.28 ) }
    dend_24 { pt3dadd( -15.6027, -345.375, -50.509, 0.12 ) }
    dend_24 { pt3dadd( -15.728, -345.785, -50.5104, 0.12 ) }
    dend_24 { pt3dadd( -16.0792, -346.544, -50.3948, 0.12 ) }
    dend_24 { pt3dadd( -16.4364, -347.06, -50.2672, 1.2 ) }
    dend_24 { pt3dadd( -16.5053, -347.134, -50.2385, 1.44 ) }
    dend_24 { pt3dadd( -17.58, -348.098, -49.7814, 0.12 ) }
    dend_24 { pt3dadd( -17.938, -348.348, -49.6157, 0.12 ) }
    dend_24 { pt3dadd( -18.2847, -348.537, -49.4473, 0.12 ) }
    dend_24 { pt3dadd( -18.7695, -348.732, -49.178, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -13.4509, -330.702, -39.6511, 0.6 ) }
    dend_17 { pt3dadd( -12.8553, -331.74, -40.9894, 0.6 ) }
    dend_17 { pt3dadd( -12.7913, -331.869, -41.1765, 0.6 ) }
    dend_17 { pt3dadd( -12.5364, -332.423, -41.9776, 1.32 ) }
    dend_17 { pt3dadd( -12.2802, -333.028, -42.8114, 2.28 ) }
    dend_17 { pt3dadd( -11.9922, -333.709, -43.7488, 2.04 ) }
    dend_17 { pt3dadd( -11.0456, -335.945, -46.8302, 0.96 ) }
    dend_17 { pt3dadd( -10.8276, -336.475, -47.6515, 0.48 ) }
    dend_17 { pt3dadd( -10.7168, -336.751, -48.105, 0.48 ) }
    dend_17 { pt3dadd( -10.6099, -337.045, -48.6345, 0.48 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 9.77622, 56.5386, 9.58362, 1.2 ) }
    dend_8 { pt3dadd( 9.8051, 58.3474, 9.29313, 1.2 ) }
    dend_8 { pt3dadd( 9.84642, 60.0397, 9.18171, 1.32 ) }
    dend_8 { pt3dadd( 9.87718, 61.0448, 9.15654, 1.44 ) }
    dend_8 { pt3dadd( 9.93405, 62.3334, 9.16812, 0.96 ) }
    dend_8 { pt3dadd( 10.0569, 64.0677, 9.20495, 1.08 ) }
    dend_8 { pt3dadd( 10.2952, 66.3999, 9.26361, 1.56 ) }
    dend_8 { pt3dadd( 10.6586, 68.4086, 9.38238, 0.96 ) }
    dend_8 { pt3dadd( 10.9469, 69.527, 9.47137, 0.6 ) }
    dend_8 { pt3dadd( 11.3007, 70.5926, 9.56289, 1.2 ) }
    dend_8 { pt3dadd( 11.7003, 71.592, 9.65304, 2.04 ) }
    dend_8 { pt3dadd( 12.0494, 72.3688, 9.72166, 2.16 ) }
    dend_8 { pt3dadd( 12.776, 73.9353, 9.87635, 1.2 ) }
    dend_8 { pt3dadd( 13.2611, 75.0667, 9.98485, 0.84 ) }
    dend_8 { pt3dadd( 13.6715, 76.2668, 10.0544, 0.48 ) }
    dend_8 { pt3dadd( 13.8823, 77.1118, 10.0766, 0.48 ) }
    dend_8 { pt3dadd( 14.1569, 79.0194, 10.0673, 0.48 ) }
    dend_8 { pt3dadd( 14.2456, 80.4253, 10.0225, 0.84 ) }
    dend_8 { pt3dadd( 14.2538, 82.0134, 9.92464, 1.92 ) }
    dend_8 { pt3dadd( 14.2337, 84.0095, 9.73438, 2.52 ) }
    dend_8 { pt3dadd( 14.2311, 85.0295, 9.60754, 2.28 ) }
    dend_8 { pt3dadd( 14.2855, 86.7094, 9.4025, 0.6 ) }
    dend_8 { pt3dadd( 14.3341, 87.2857, 9.34363, 0.6 ) }
    dend_8 { pt3dadd( 14.4292, 88.1158, 9.29208, 0.48 ) }
    dend_8 { pt3dadd( 14.6184, 89.5236, 9.28569, 0.48 ) }
    dend_8 { pt3dadd( 14.7867, 90.585, 9.35449, 0.96 ) }
    dend_8 { pt3dadd( 14.9511, 91.5311, 9.43795, 1.8 ) }
    dend_8 { pt3dadd( 15.2125, 92.8701, 9.60402, 2.04 ) }
    dend_8 { pt3dadd( 15.4715, 94.2824, 9.78981, 2.04 ) }
    dend_8 { pt3dadd( 15.7725, 96.3176, 10.0776, 2.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 9.77622, 56.5386, 9.58362, 1.32 ) }
    dend_3 { pt3dadd( 11.0934, 58.3989, 9.80226, 1.32 ) }
    dend_3 { pt3dadd( 11.6558, 59.2029, 9.78595, 0.96 ) }
    dend_3 { pt3dadd( 12.6401, 60.5149, 9.63487, 1.32 ) }
    dend_3 { pt3dadd( 13.2566, 61.2254, 9.46436, 1.68 ) }
    dend_3 { pt3dadd( 14.0617, 62.0263, 9.19945, 1.2 ) }
    dend_3 { pt3dadd( 15.0556, 62.9176, 8.84255, 0.84 ) }
    dend_3 { pt3dadd( 16.1326, 63.7746, 8.35809, 0.72 ) }
    dend_3 { pt3dadd( 16.754, 64.233, 8.08932, 0.84 ) }
    dend_3 { pt3dadd( 17.8396, 64.8751, 7.58872, 0.6 ) }
    dend_3 { pt3dadd( 18.5483, 65.208, 7.26395, 0.6 ) }
    dend_3 { pt3dadd( 19.1411, 65.402, 7.01107, 1.32 ) }
    dend_3 { pt3dadd( 20.6945, 65.7925, 6.62652, 1.8 ) }
    dend_3 { pt3dadd( 21.6655, 66.1955, 6.66043, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 84/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 5.81597, 60.5468, -22.6194, 0.48 ) }
    dend_58 { pt3dadd( 5.92579, 62.6309, -22.4423, 0.48 ) }
    dend_58 { pt3dadd( 5.94021, 63.8653, -22.3158, 0.48 ) }
    dend_58 { pt3dadd( 5.9261, 64.6992, -22.2121, 0.48 ) }
    dend_58 { pt3dadd( 5.88338, 66.1826, -22.0358, 0.72 ) }
    dend_58 { pt3dadd( 5.84894, 67.0728, -21.9384, 0.48 ) }
    dend_58 { pt3dadd( 5.79886, 68.1401, -21.8306, 0.48 ) }
    dend_58 { pt3dadd( 5.6239, 69.6676, -21.7095, 0.48 ) }
    dend_58 { pt3dadd( 5.44496, 71.0402, -21.6027, 1.8 ) }
    dend_58 { pt3dadd( 5.3662, 71.7468, -21.5526, 2.64 ) }
    dend_58 { pt3dadd( 5.30396, 72.5556, -21.5066, 2.88 ) }
    dend_58 { pt3dadd( 5.25721, 73.4945, -21.4423, 2.88 ) }
    dend_58 { pt3dadd( 5.2214, 74.5653, -21.3668, 2.04 ) }
    dend_58 { pt3dadd( 5.19678, 75.9239, -21.2785, 0.48 ) }
    dend_58 { pt3dadd( 5.1931, 76.4667, -21.2399, 0.36 ) }
    dend_58 { pt3dadd( 5.19544, 78.474, -21.0977, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_58 { pt3dadd( 5.2095, 79.7633, -21.0141, 1.44 ) }
    dend_58 { pt3dadd( 5.27632, 80.9602, -20.9531, 2.52 ) }
    dend_58 { pt3dadd( 5.3958, 82.1426, -20.9106, 2.64 ) }
    dend_58 { pt3dadd( 5.51355, 82.9855, -20.8952, 2.52 ) }
    dend_58 { pt3dadd( 5.82196, 84.8462, -20.8976, 0.48 ) }
    dend_58 { pt3dadd( 5.96266, 85.6296, -20.9167, 0.36 ) }
    dend_58 { pt3dadd( 6.2234, 87.1426, -20.9754, 0.36 ) }
    dend_58 { pt3dadd( 6.33941, 87.8577, -20.994, 0.36 ) }
    dend_58 { pt3dadd( 6.51132, 89.045, -21.0272, 0.36 ) }
    dend_58 { pt3dadd( 6.6774, 90.3758, -21.062, 1.44 ) }
    dend_58 { pt3dadd( 6.74154, 91.1808, -21.0828, 1.56 ) }
    dend_58 { pt3dadd( 6.76721, 92.2218, -21.1181, 0.24 ) }
    dend_58 { pt3dadd( 6.71337, 93.4274, -21.1653, 0.24 ) }
    dend_58 { pt3dadd( 6.63854, 94.4676, -21.1917, 0.72 ) }
    dend_58 { pt3dadd( 6.59915, 94.9933, -21.1972, 0.72 ) }
    dend_58 { pt3dadd( 6.55679, 95.6037, -21.1944, 0.48 ) }
    dend_58 { pt3dadd( 6.54117, 96.0072, -21.1866, 0.36 ) }
    dend_58 { pt3dadd( 6.54638, 96.6676, -21.1437, 0.36 ) }
    dend_58 { pt3dadd( 6.59511, 97.4654, -21.0368, 0.84 ) }
    dend_58 { pt3dadd( 6.7527, 98.7684, -20.817, 2.4 ) }
    dend_58 { pt3dadd( 6.82679, 99.295, -20.7352, 3.0 ) }
    dend_58 { pt3dadd( 6.98599, 100.337, -20.5822, 3.0 ) }
    dend_58 { pt3dadd( 7.17603, 101.643, -20.4164, 1.68 ) }
    dend_58 { pt3dadd( 7.35357, 102.949, -20.2749, 0.36 ) }
    dend_58 { pt3dadd( 7.47859, 104.017, -20.1887, 0.36 ) }
    dend_58 { pt3dadd( 7.57579, 105.393, -20.1119, 0.36 ) }
    dend_58 { pt3dadd( 7.59609, 106.472, -20.087, 1.68 ) }
    dend_58 { pt3dadd( 7.57676, 107.192, -20.0963, 2.52 ) }
    dend_58 { pt3dadd( 7.53932, 107.752, -20.125, 2.64 ) }
    dend_58 { pt3dadd( 7.47521, 108.467, -20.1723, 2.28 ) }
    dend_58 { pt3dadd( 7.37728, 109.624, -20.2449, 0.48 ) }
    dend_58 { pt3dadd( 7.32475, 111.227, -20.3763, 0.48 ) }
    dend_58 { pt3dadd( 7.33929, 112.428, -20.4993, 0.48 ) }
    dend_58 { pt3dadd( 7.37198, 112.968, -20.5567, 0.96 ) }
    dend_58 { pt3dadd( 7.45744, 113.902, -20.6525, 1.56 ) }
    dend_58 { pt3dadd( 7.54261, 114.58, -20.7142, 1.56 ) }
    dend_58 { pt3dadd( 7.74432, 115.912, -20.8148, 0.48 ) }
    dend_58 { pt3dadd( 7.81037, 116.32, -20.8497, 0.12 ) }
    dend_58 { pt3dadd( 7.99223, 117.501, -20.9554, 0.12 ) }
    dend_58 { pt3dadd( 8.17841, 118.824, -21.0719, 2.16 ) }
    dend_58 { pt3dadd( 8.2607, 119.492, -21.1264, 2.88 ) }
    dend_58 { pt3dadd( 8.31271, 120.027, -21.1583, 3.0 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 42/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 5.81597, 60.5468, -22.6194, 0.48 ) }
    dend_55 { pt3dadd( 5.73467, 64.0364, -25.5519, 0.48 ) }
    dend_55 { pt3dadd( 5.70141, 64.5397, -25.9745, 0.48 ) }
    dend_55 { pt3dadd( 5.62668, 65.6088, -26.9468, 0.72 ) }
    dend_55 { pt3dadd( 5.59944, 66.3417, -27.6636, 0.72 ) }
    dend_55 { pt3dadd( 5.57823, 67.7267, -29.007, 0.24 ) }
    dend_55 { pt3dadd( 5.57688, 68.3489, -29.6148, 0.12 ) }
    dend_55 { pt3dadd( 5.57, 69.2314, -30.4369, 0.84 ) }
    dend_55 { pt3dadd( 5.62542, 70.3853, -31.5758, 0.12 ) }
    dend_55 { pt3dadd( 5.73608, 71.6418, -32.8252, 0.12 ) }
    dend_55 { pt3dadd( 5.80825, 72.367, -33.4888, 1.68 ) }
    dend_55 { pt3dadd( 5.88425, 73.256, -34.1842, 2.4 ) }
    dend_55 { pt3dadd( 6.00977, 74.8024, -35.3565, 1.8 ) }
    dend_55 { pt3dadd( 6.12461, 76.2864, -36.4629, 0.12 ) }
    dend_55 { pt3dadd( 6.13966, 76.9564, -36.9469, 0.12 ) }
    dend_55 { pt3dadd( 6.08651, 78.2685, -37.9321, 1.92 ) }
    dend_55 { pt3dadd( 6.03639, 79.1405, -38.6615, 2.4 ) }
    dend_55 { pt3dadd( 5.90419, 81.4109, -40.6951, 0.6 ) }
    dend_55 { pt3dadd( 5.81782, 82.4498, -41.674, 0.48 ) }
    dend_55 { pt3dadd( 5.73664, 83.2824, -42.4659, 0.48 ) }
    dend_55 { pt3dadd( 5.63652, 84.5003, -43.6358, 1.2 ) }
    dend_55 { pt3dadd( 5.55916, 85.8781, -45.0295, 0.48 ) }
    dend_55 { pt3dadd( 5.54523, 86.4055, -45.5383, 0.12 ) }
    dend_55 { pt3dadd( 5.53696, 87.512, -46.3863, 0.12 ) }
    dend_55 { pt3dadd( 5.55508, 88.2172, -46.8442, 0.72 ) }
    dend_55 { pt3dadd( 5.62845, 88.9307, -47.3443, 0.72 ) }
    dend_55 { pt3dadd( 5.77294, 90.6021, -48.5575, 0.12 ) }
    dend_55 { pt3dadd( 5.80018, 90.9785, -48.8541, 0.12 ) }
    dend_55 { pt3dadd( 5.91218, 92.1066, -49.7983, 2.28 ) }
    dend_55 { pt3dadd( 6.0116, 92.7046, -50.3752, 2.52 ) }
    dend_55 { pt3dadd( 6.56919, 95.3233, -53.1471, 0.12 ) }
    dend_55 { pt3dadd( 6.8519, 96.4039, -54.2844, 0.12 ) }
    dend_55 { pt3dadd( 7.18326, 97.5148, -55.4248, 1.44 ) }
    dend_55 { pt3dadd( 7.38157, 98.1364, -56.0696, 1.8 ) }
    dend_55 { pt3dadd( 7.83424, 99.4725, -57.4959, 1.32 ) }
    dend_55 { pt3dadd( 8.05969, 100.242, -58.3068, 0.12 ) }
    dend_55 { pt3dadd( 8.35409, 101.446, -59.437, 0.12 ) }
    dend_55 { pt3dadd( 8.71296, 103.107, -60.9406, 1.56 ) }
    dend_55 { pt3dadd( 8.79799, 103.659, -61.4183, 1.92 ) }
    dend_55 { pt3dadd( 8.95941, 105.441, -62.9454, 0.12 ) }
    dend_55 { pt3dadd( 9.01275, 106.527, -63.8475, 0.12 ) }
    dend_55 { pt3dadd( 9.03538, 107.193, -64.4106, 0.96 ) }
    dend_55 { pt3dadd( 9.04404, 107.44, -64.628, 0.96 ) }
    dend_55 { pt3dadd( 9.14132, 108.494, -65.6328, 0.12 ) }
    dend_55 { pt3dadd( 9.24484, 109.313, -66.4725, 0.12 ) }
    dend_55 { pt3dadd( 9.39102, 110.502, -67.7594, 1.32 ) }
    dend_55 { pt3dadd( 9.45691, 111.053, -68.3656, 1.8 ) }
    dend_55 { pt3dadd( 9.51812, 111.77, -69.1399, 1.32 ) }
    dend_55 { pt3dadd( 9.65795, 113.804, -71.2368, 0.12 ) }
    dend_55 { pt3dadd( 9.68499, 114.039, -71.5159, 0.12 ) }
    dend_55 { pt3dadd( 9.81439, 114.883, -72.5634, 0.36 ) }
    dend_55 { pt3dadd( 9.88976, 115.59, -73.4442, 0.36 ) }
    dend_55 { pt3dadd( 10.0349, 116.558, -74.6762, 1.92 ) }
    dend_55 { pt3dadd( 10.2059, 117.382, -75.685, 2.76 ) }
    dend_55 { pt3dadd( 11.0931, 121.149, -79.9555, 0.36 ) }
    dend_55 { pt3dadd( 11.178, 121.466, -80.3207, 0.36 ) }
    dend_55 { pt3dadd( 11.5321, 122.663, -81.7062, 0.36 ) }
    dend_55 { pt3dadd( 11.8918, 123.853, -83.0829, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( 12.1074, 124.527, -83.8447, 0.36 ) }
    dend_55 { pt3dadd( 12.5212, 125.7, -85.1054, 0.72 ) }
    dend_55 { pt3dadd( 13.115, 127.125, -86.5132, 0.12 ) }
    dend_55 { pt3dadd( 13.2712, 127.466, -86.8701, 0.12 ) }
    dend_55 { pt3dadd( 13.59, 128.089, -87.5649, 1.92 ) }
    dend_55 { pt3dadd( 14.1245, 129.323, -89.0106, 2.52 ) }
    dend_55 { pt3dadd( 14.758, 130.625, -90.7221, 1.44 ) }
    dend_55 { pt3dadd( 15.3074, 131.41, -91.8818, 0.12 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 8/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -8.56258, 34.3484, -32.6489, 0.12 ) }
    dend_53 { pt3dadd( -9.39224, 37.0867, -33.6265, 0.12 ) }
    dend_53 { pt3dadd( -9.76011, 38.2766, -34.0808, 0.6 ) }
    dend_53 { pt3dadd( -10.0198, 39.193, -34.4289, 0.12 ) }
    dend_53 { pt3dadd( -10.1347, 39.6113, -34.5789, 0.12 ) }
    dend_53 { pt3dadd( -10.2931, 40.1773, -34.7636, 0.12 ) }
    dend_53 { pt3dadd( -10.483, 40.8571, -34.9638, 0.24 ) }
    dend_53 { pt3dadd( -10.6483, 41.4932, -35.1631, 0.12 ) }
    dend_53 { pt3dadd( -10.7586, 42.0461, -35.4091, 0.12 ) }
    dend_53 { pt3dadd( -10.9105, 42.9672, -35.8734, 0.12 ) }
    dend_53 { pt3dadd( -11.0319, 43.8761, -36.3684, 1.32 ) }
    dend_53 { pt3dadd( -11.0787, 44.5013, -36.7046, 1.8 ) }
    dend_53 { pt3dadd( -11.1385, 46.2877, -37.617, 0.84 ) }
    dend_53 { pt3dadd( -11.094, 47.3999, -38.3174, 0.12 ) }
    dend_53 { pt3dadd( -11.0488, 47.7564, -38.5582, 0.12 ) }
    dend_53 { pt3dadd( -10.8372, 48.8963, -39.3046, 1.8 ) }
    dend_53 { pt3dadd( -10.6923, 49.5862, -39.7262, 2.16 ) }
    dend_53 { pt3dadd( -10.5359, 50.2326, -40.1054, 1.8 ) }
    dend_53 { pt3dadd( -9.63074, 53.276, -42.0055, 0.24 ) }
    dend_53 { pt3dadd( -9.20453, 54.5145, -42.8283, 0.24 ) }
    dend_53 { pt3dadd( -8.75928, 55.762, -43.6722, 0.24 ) }
    dend_53 { pt3dadd( -8.55664, 56.3158, -44.0625, 0.24 ) }
    dend_53 { pt3dadd( -7.89276, 58.1306, -45.4196, 2.28 ) }
    dend_53 { pt3dadd( -6.974, 60.6369, -47.3516, 0.24 ) }
    dend_53 { pt3dadd( -6.83223, 61.0394, -47.6461, 0.24 ) }
    dend_53 { pt3dadd( -6.40895, 62.2323, -48.5838, 0.24 ) }
    dend_53 { pt3dadd( -5.93386, 63.5191, -49.6091, 1.44 ) }
    dend_53 { pt3dadd( -5.57576, 64.5821, -50.399, 1.8 ) }
    dend_53 { pt3dadd( -5.2255, 65.9321, -51.2284, 0.12 ) }
    dend_53 { pt3dadd( -5.02841, 66.9782, -51.7441, 0.12 ) }
    dend_53 { pt3dadd( -4.92997, 67.5275, -52.018, 0.96 ) }
    dend_53 { pt3dadd( -4.84316, 67.9917, -52.2383, 1.2 ) }
    dend_53 { pt3dadd( -4.65081, 69.1797, -52.7225, 0.12 ) }
    dend_53 { pt3dadd( -4.50183, 70.1144, -53.0798, 0.12 ) }
    dend_53 { pt3dadd( -4.40269, 70.6625, -53.3052, 0.36 ) }
    dend_53 { pt3dadd( -4.17377, 71.8192, -53.9101, 0.12 ) }
    dend_53 { pt3dadd( -4.08403, 72.379, -54.2194, 0.12 ) }
    dend_53 { pt3dadd( -3.95832, 73.3471, -54.7691, 0.48 ) }
    dend_53 { pt3dadd( -3.81082, 74.6169, -55.5307, 0.48 ) }
    dend_53 { pt3dadd( -3.68281, 75.946, -56.3399, 2.28 ) }
    dend_53 { pt3dadd( -3.51633, 78.1209, -57.623, 0.12 ) }
    dend_53 { pt3dadd( -3.47076, 79.2379, -58.2508, 0.12 ) }
    dend_53 { pt3dadd( -3.46009, 79.8519, -58.6081, 0.12 ) }
    dend_53 { pt3dadd( -3.48396, 81.0051, -59.2727, 1.08 ) }
    dend_53 { pt3dadd( -3.52895, 81.6067, -59.6478, 1.2 ) }
    dend_53 { pt3dadd( -3.65696, 82.6073, -60.4995, 0.12 ) }
    dend_53 { pt3dadd( -3.80327, 83.3473, -61.2762, 0.12 ) }
    dend_53 { pt3dadd( -4.0181, 84.4597, -62.5781, 1.44 ) }
    dend_53 { pt3dadd( -4.0964, 84.8441, -63.0432, 2.04 ) }
    dend_53 { pt3dadd( -4.26697, 85.5373, -63.8964, 1.68 ) }
    dend_53 { pt3dadd( -4.84008, 87.6198, -66.5653, 0.24 ) }
    dend_53 { pt3dadd( -5.0503, 88.293, -67.467, 0.24 ) }
    dend_53 { pt3dadd( -5.28261, 89.0035, -68.4346, 0.12 ) }
    dend_53 { pt3dadd( -5.53547, 89.6736, -69.2962, 0.72 ) }
    dend_53 { pt3dadd( -5.65577, 89.9999, -69.6794, 0.72 ) }
    dend_53 { pt3dadd( -5.78714, 90.3011, -69.9953, 0.12 ) }
    dend_53 { pt3dadd( -6.2875, 91.3057, -70.9003, 0.12 ) }
    dend_53 { pt3dadd( -6.54138, 91.7328, -71.3706, 0.12 ) }
    dend_53 { pt3dadd( -7.11565, 92.4591, -72.3025, 1.68 ) }
    dend_53 { pt3dadd( -7.24335, 92.6125, -72.508, 1.68 ) }
    dend_53 { pt3dadd( -8.23834, 93.9837, -74.2977, 0.12 ) }
    dend_53 { pt3dadd( -8.56642, 94.4971, -74.9058, 0.12 ) }
    dend_53 { pt3dadd( -8.8172, 95.0146, -75.4718, 0.24 ) }
    dend_53 { pt3dadd( -9.04898, 95.6063, -76.0755, 0.24 ) }
    dend_53 { pt3dadd( -9.37811, 96.6206, -77.0324, 0.24 ) }
    dend_53 { pt3dadd( -9.71159, 97.689, -77.8948, 1.56 ) }
    dend_53 { pt3dadd( -9.89487, 98.382, -78.36, 2.04 ) }
    dend_53 { pt3dadd( -10.392, 100.352, -79.5407, 0.36 ) }
    dend_53 { pt3dadd( -10.529, 100.963, -79.8672, 0.48 ) }
    dend_53 { pt3dadd( -10.709, 101.911, -80.3773, 0.48 ) }
    dend_53 { pt3dadd( -10.9426, 102.938, -80.9148, 0.48 ) }
    dend_53 { pt3dadd( -11.083, 103.456, -81.1949, 0.24 ) }
    dend_53 { pt3dadd( -11.2493, 104.032, -81.5754, 0.24 ) }
    dend_53 { pt3dadd( -11.4959, 104.84, -82.1893, 0.24 ) }
    dend_53 { pt3dadd( -11.8328, 105.935, -83.2167, 1.08 ) }
    dend_53 { pt3dadd( -11.9973, 106.396, -83.7498, 1.08 ) }
    dend_53 { pt3dadd( -12.2713, 106.948, -84.6853, 0.36 ) }
    dend_53 { pt3dadd( -12.6607, 107.47, -85.8499, 0.36 ) }
    dend_53 { pt3dadd( -12.8053, 107.599, -86.231, 0.36 ) }
    dend_53 { pt3dadd( -12.9827, 107.705, -86.6307, 0.36 ) }
    dend_53 { pt3dadd( -13.2328, 107.826, -87.1475, 0.36 ) }
    dend_53 { pt3dadd( -14.3332, 108.335, -89.3476, 1.68 ) }
    dend_53 { pt3dadd( -14.5474, 108.426, -89.7327, 2.4 ) }
    dend_53 { pt3dadd( -14.7086, 108.495, -89.9983, 2.64 ) }
    dend_53 { pt3dadd( -16.4498, 109.229, -92.7191, 0.6 ) }
    dend_53 { pt3dadd( -16.6744, 109.309, -93.0435, 0.12 ) }
    dend_53 { pt3dadd( -16.9892, 109.4, -93.4298, 0.12 ) }
    dend_53 { pt3dadd( -17.3909, 109.48, -93.8419, 0.6 ) }
    dend_53 { pt3dadd( -17.8055, 109.551, -94.267, 0.12 ) }
    dend_53 { pt3dadd( -18.2821, 109.608, -94.6841, 0.12 ) }
    dend_53 { pt3dadd( -19.091, 109.611, -95.1889, 1.44 ) }
    dend_53 { pt3dadd( -19.7642, 109.614, -95.6009, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( -21.4882, 109.682, -96.5909, 0.12 ) }
    dend_53 { pt3dadd( -22.2203, 109.762, -96.9501, 0.12 ) }
    dend_53 { pt3dadd( -23.1304, 109.915, -97.3113, 0.84 ) }
    dend_53 { pt3dadd( -23.497, 110.0, -97.4557, 0.84 ) }
    dend_53 { pt3dadd( -23.7573, 110.068, -97.5501, 0.12 ) }
    dend_53 { pt3dadd( -24.3545, 110.194, -97.7331, 0.12 ) }
    dend_53 { pt3dadd( -25.2218, 110.344, -97.9249, 1.44 ) }
    dend_53 { pt3dadd( -25.522, 110.386, -98.0036, 1.56 ) }
    dend_53 { pt3dadd( -26.7246, 110.565, -98.3759, 0.12 ) }
    dend_53 { pt3dadd( -27.6366, 110.713, -98.6574, 0.12 ) }
    dend_53 { pt3dadd( -28.1946, 110.798, -98.8289, 1.08 ) }
    dend_53 { pt3dadd( -28.8587, 110.881, -99.0708, 1.92 ) }
    dend_53 { pt3dadd( -29.3928, 110.939, -99.3064, 1.56 ) }
    dend_53 { pt3dadd( -30.376, 111.054, -99.8022, 0.12 ) }
    dend_53 { pt3dadd( -30.7674, 111.1, -100.019, 0.12 ) }
    dend_53 { pt3dadd( -31.0053, 111.132, -100.172, 0.48 ) }
    dend_53 { pt3dadd( -31.9978, 111.291, -100.895, 0.48 ) }
    dend_53 { pt3dadd( -32.4305, 111.375, -101.222, 0.12 ) }
    dend_53 { pt3dadd( -33.1344, 111.549, -101.583, 0.12 ) }
    dend_53 { pt3dadd( -33.4269, 111.719, -101.859, 0.84 ) }
    dend_53 { pt3dadd( -33.6916, 111.902, -102.176, 1.2 ) }
    dend_53 { pt3dadd( -34.1487, 112.2, -102.627, 0.12 ) }
    dend_53 { pt3dadd( -34.904, 112.478, -102.858, 0.12 ) }
    dend_53 { pt3dadd( -37.0233, 112.443, -102.015, 2.88 ) }
    dend_53 { pt3dadd( -41.4342, 111.611, -98.8069, 0.96 ) }
    dend_53 { pt3dadd( -42.2099, 111.34, -97.9875, 0.96 ) }
    dend_53 { pt3dadd( -46.1721, 109.381, -92.6637, 0.12 ) }
    dend_53 { pt3dadd( -46.6289, 109.102, -91.9456, 0.12 ) }
    dend_53 { pt3dadd( -46.9589, 108.855, -91.3486, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 29/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -8.56258, 34.3484, -32.6489, 0.48 ) }
    dend_50 { pt3dadd( -10.7338, 34.3507, -33.8037, 0.48 ) }
    dend_50 { pt3dadd( -11.6501, 34.4649, -34.6978, 0.48 ) }
    dend_50 { pt3dadd( -12.773, 34.8417, -36.3553, 0.48 ) }
    dend_50 { pt3dadd( -13.3333, 35.0973, -37.2439, 2.16 ) }
    dend_50 { pt3dadd( -13.6063, 35.246, -37.6971, 2.52 ) }
    dend_50 { pt3dadd( -13.9815, 35.4763, -38.338, 2.52 ) }
    dend_50 { pt3dadd( -15.4164, 36.6237, -41.4503, 1.44 ) }
    dend_50 { pt3dadd( -16.3128, 37.3446, -43.5123, 0.36 ) }
    dend_50 { pt3dadd( -16.6412, 37.5777, -44.2697, 0.48 ) }
    dend_50 { pt3dadd( -17.2605, 37.9413, -45.6892, 0.6 ) }
    dend_50 { pt3dadd( -17.8797, 38.2101, -47.4294, 0.6 ) }
    dend_50 { pt3dadd( -18.6106, 38.4601, -49.8217, 0.6 ) }
    dend_50 { pt3dadd( -18.9242, 38.5374, -50.8629, 1.92 ) }
    dend_50 { pt3dadd( -19.1933, 38.576, -51.7575, 2.64 ) }
    dend_50 { pt3dadd( -19.4588, 38.6004, -52.6458, 2.64 ) }
    dend_50 { pt3dadd( -21.8881, 38.7137, -60.6245, 1.68 ) }
    dend_50 { pt3dadd( -22.9865, 38.7572, -64.0875, 0.72 ) }
    dend_50 { pt3dadd( -23.2064, 38.7749, -64.731, 1.56 ) }
    dend_50 { pt3dadd( -23.6808, 38.8313, -66.0495, 1.92 ) }
    dend_50 { pt3dadd( -23.906, 38.8629, -66.6139, 2.28 ) }
    dend_50 { pt3dadd( -24.1099, 38.8946, -67.0485, 2.28 ) }
    dend_50 { pt3dadd( -26.4667, 39.2045, -70.0638, 0.24 ) }
    dend_50 { pt3dadd( -26.8657, 39.2434, -70.5463, 0.12 ) }
    dend_50 { pt3dadd( -27.137, 39.2604, -70.9432, 0.12 ) }
    dend_50 { pt3dadd( -27.6052, 39.277, -71.7016, 0.12 ) }
    dend_50 { pt3dadd( -28.4516, 39.2699, -73.118, 1.32 ) }
    dend_50 { pt3dadd( -28.8427, 39.2444, -73.7969, 2.16 ) }
    dend_50 { pt3dadd( -29.4739, 39.1556, -74.8798, 2.4 ) }
    dend_50 { pt3dadd( -31.2705, 38.7771, -77.9949, 0.72 ) }
    dend_50 { pt3dadd( -31.7648, 38.6362, -78.855, 0.84 ) }
    dend_50 { pt3dadd( -32.0701, 38.5202, -79.3981, 1.08 ) }
    dend_50 { pt3dadd( -33.0041, 38.0884, -80.9721, 0.48 ) }
    dend_50 { pt3dadd( -33.2395, 37.9698, -81.3453, 0.12 ) }
    dend_50 { pt3dadd( -33.711, 37.7104, -82.0186, 0.48 ) }
    dend_50 { pt3dadd( -33.8905, 37.6009, -82.2216, 0.48 ) }
    dend_50 { pt3dadd( -34.6799, 37.0705, -83.1144, 0.12 ) }
    dend_50 { pt3dadd( -34.97, 36.8598, -83.4377, 0.12 ) }
    dend_50 { pt3dadd( -35.3409, 36.5681, -83.8818, 0.12 ) }
    dend_50 { pt3dadd( -35.5496, 36.4057, -84.2551, 0.12 ) }
    dend_50 { pt3dadd( -35.7658, 36.2452, -84.734, 0.12 ) }
    dend_50 { pt3dadd( -35.9733, 36.1006, -85.1585, 0.48 ) }
    dend_50 { pt3dadd( -36.0649, 36.0293, -85.3401, 0.48 ) }
    dend_50 { pt3dadd( -36.7347, 35.3868, -86.6933, 0.48 ) }
    dend_50 { pt3dadd( -37.1333, 34.9165, -87.4872, 0.12 ) }
    dend_50 { pt3dadd( -37.2844, 34.7527, -87.7463, 0.12 ) }
    dend_50 { pt3dadd( -37.6683, 34.3137, -88.3288, 0.12 ) }
    dend_50 { pt3dadd( -38.3311, 33.5176, -89.3482, 1.8 ) }
    dend_50 { pt3dadd( -38.8016, 33.0051, -89.9685, 2.76 ) }
    dend_50 { pt3dadd( -39.1016, 32.6762, -90.3077, 2.76 ) }
    dend_50 { pt3dadd( -39.6489, 32.0433, -90.9061, 1.92 ) }
    dend_50 { pt3dadd( -40.2072, 31.3393, -91.5491, 1.92 ) }
    dend_50 { pt3dadd( -41.4229, 29.5813, -93.1951, 0.12 ) }
    dend_50 { pt3dadd( -41.8879, 28.8285, -93.8741, 0.12 ) }
    dend_50 { pt3dadd( -42.1099, 28.4146, -94.2805, 0.12 ) }
    dend_50 { pt3dadd( -42.321, 27.9793, -94.6901, 0.48 ) }
    dend_50 { pt3dadd( -42.5023, 27.5558, -95.0787, 0.6 ) }
    dend_50 { pt3dadd( -42.8916, 26.7012, -95.8705, 0.12 ) }
    dend_50 { pt3dadd( -43.0236, 26.3404, -96.1504, 0.12 ) }
    dend_50 { pt3dadd( -43.5686, 24.5917, -97.5639, 2.4 ) }
    dend_50 { pt3dadd( -43.8943, 23.7345, -98.3413, 3.25 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -11.0552, -100.535, -37.0113, 0.12 ) }
    dend_45 { pt3dadd( -11.486, -101.682, -37.5331, 0.12 ) }
    dend_45 { pt3dadd( -11.697, -102.035, -37.6799, 0.12 ) }
    dend_45 { pt3dadd( -12.0046, -102.422, -37.7968, 0.36 ) }
    dend_45 { pt3dadd( -12.5298, -103.014, -37.9358, 0.48 ) }
    dend_45 { pt3dadd( -12.7929, -103.3, -37.9945, 0.12 ) }
    dend_45 { pt3dadd( -13.1752, -103.741, -38.0752, 0.12 ) }
    dend_45 { pt3dadd( -13.8063, -104.413, -38.1265, 0.36 ) }
    dend_45 { pt3dadd( -14.2811, -104.846, -38.0171, 0.12 ) }
    dend_45 { pt3dadd( -14.725, -105.163, -37.8598, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( -15.0929, -105.357, -37.7347, 0.12 ) }
    dend_45 { pt3dadd( -15.6742, -105.653, -37.513, 0.12 ) }
    dend_45 { pt3dadd( -16.5729, -106.082, -37.1372, 0.36 ) }
    dend_45 { pt3dadd( -17.9826, -106.687, -36.5335, 0.12 ) }
    dend_45 { pt3dadd( -18.9468, -107.038, -36.1271, 0.12 ) }
    dend_45 { pt3dadd( -20.415, -107.417, -35.4756, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 6/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -11.0552, -100.535, -37.0113, 0.12 ) }
    dend_42 { pt3dadd( -10.2362, -101.151, -37.4382, 0.12 ) }
    dend_42 { pt3dadd( -9.57087, -101.617, -37.8256, 0.12 ) }
    dend_42 { pt3dadd( -8.84393, -102.129, -38.2542, 0.48 ) }
    dend_42 { pt3dadd( -8.29752, -102.517, -38.5777, 0.12 ) }
    dend_42 { pt3dadd( -7.22253, -103.279, -39.2141, 0.12 ) }
    dend_42 { pt3dadd( -6.10341, -104.073, -39.8765, 0.12 ) }
    dend_42 { pt3dadd( -4.82138, -104.907, -40.7154, 2.52 ) }
    dend_42 { pt3dadd( -4.52844, -105.09, -40.918, 2.28 ) }
    dend_42 { pt3dadd( -4.49213, -105.114, -40.9429, 2.28 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 16/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 30.7819, -31.4947, -29.0494, 0.48 ) }
    dend_34 { pt3dadd( 30.2588, -34.0772, -31.0367, 0.48 ) }
    dend_34 { pt3dadd( 30.1935, -34.4865, -31.3009, 0.36 ) }
    dend_34 { pt3dadd( 30.1362, -34.9252, -31.5527, 0.36 ) }
    dend_34 { pt3dadd( 30.0789, -35.4244, -31.8115, 0.84 ) }
    dend_34 { pt3dadd( 30.001, -36.2156, -32.1917, 1.32 ) }
    dend_34 { pt3dadd( 29.9522, -37.2705, -32.6549, 0.48 ) }
    dend_34 { pt3dadd( 30.0088, -38.1096, -32.8661, 0.36 ) }
    dend_34 { pt3dadd( 30.0534, -38.4901, -32.9551, 0.36 ) }
    dend_34 { pt3dadd( 30.1365, -38.9785, -33.0755, 0.48 ) }
    dend_34 { pt3dadd( 30.2444, -39.4882, -33.2009, 0.36 ) }
    dend_34 { pt3dadd( 30.4814, -40.4556, -33.4489, 0.36 ) }
    dend_34 { pt3dadd( 30.6179, -40.9974, -33.5943, 0.36 ) }
    dend_34 { pt3dadd( 30.6919, -41.4821, -33.7338, 0.48 ) }
    dend_34 { pt3dadd( 30.7485, -42.082, -33.9147, 0.36 ) }
    dend_34 { pt3dadd( 30.7705, -42.6917, -34.1012, 0.36 ) }
    dend_34 { pt3dadd( 30.7675, -42.936, -34.175, 0.36 ) }
    dend_34 { pt3dadd( 30.6523, -45.082, -34.8142, 3.49 ) }
    dend_34 { pt3dadd( 30.5041, -47.1246, -35.3831, 0.12 ) }
    dend_34 { pt3dadd( 30.4746, -47.4837, -35.4775, 0.12 ) }
    dend_34 { pt3dadd( 30.4247, -48.0377, -35.6079, 0.36 ) }
    dend_34 { pt3dadd( 30.4056, -48.2275, -35.6503, 0.12 ) }
    dend_34 { pt3dadd( 30.3213, -48.892, -35.7801, 0.12 ) }
    dend_34 { pt3dadd( 30.1906, -49.5296, -35.862, 0.6 ) }
    dend_34 { pt3dadd( 30.1068, -49.9136, -35.8905, 0.6 ) }
    dend_34 { pt3dadd( 29.9384, -50.5409, -35.9416, 0.36 ) }
    dend_34 { pt3dadd( 29.8638, -50.7842, -35.9693, 0.24 ) }
    dend_34 { pt3dadd( 29.728, -51.168, -36.0226, 0.24 ) }
    dend_34 { pt3dadd( 29.552, -51.588, -36.0882, 1.08 ) }
    dend_34 { pt3dadd( 29.1463, -52.5343, -36.2471, 1.8 ) }
    dend_34 { pt3dadd( 28.837, -53.2629, -36.3405, 1.56 ) }
    dend_34 { pt3dadd( 28.5742, -53.9225, -36.3755, 0.96 ) }
    dend_34 { pt3dadd( 28.414, -54.424, -36.386, 0.24 ) }
    dend_34 { pt3dadd( 28.1502, -55.4101, -36.3934, 0.24 ) }
    dend_34 { pt3dadd( 28.0358, -55.9138, -36.3908, 0.24 ) }
    dend_34 { pt3dadd( 27.8469, -56.8732, -36.376, 0.24 ) }
    dend_34 { pt3dadd( 27.5074, -58.8163, -36.3317, 3.25 ) }
    dend_34 { pt3dadd( 27.2412, -60.6189, -36.2914, 0.24 ) }
    dend_34 { pt3dadd( 27.1943, -61.0066, -36.2867, 0.24 ) }
    dend_34 { pt3dadd( 27.0731, -62.2768, -36.2961, 0.24 ) }
    dend_34 { pt3dadd( 27.0242, -62.9029, -36.3183, 0.48 ) }
    dend_34 { pt3dadd( 27.013, -63.1572, -36.3404, 0.12 ) }
    dend_34 { pt3dadd( 27.0204, -64.931, -36.5459, 0.12 ) }
    dend_34 { pt3dadd( 27.0258, -65.1104, -36.5663, 0.84 ) }
    dend_34 { pt3dadd( 27.0568, -65.7506, -36.6406, 1.08 ) }
    dend_34 { pt3dadd( 27.098, -66.4887, -36.7299, 0.12 ) }
    dend_34 { pt3dadd( 27.1669, -67.7801, -36.8859, 0.12 ) }
    dend_34 { pt3dadd( 27.2342, -69.2141, -37.0582, 2.4 ) }
    dend_34 { pt3dadd( 27.2895, -70.7473, -37.2413, 0.24 ) }
    dend_34 { pt3dadd( 27.3001, -71.3696, -37.3252, 0.24 ) }
    dend_34 { pt3dadd( 27.291, -72.128, -37.4368, 0.36 ) }
    dend_34 { pt3dadd( 27.271, -72.526, -37.5032, 0.24 ) }
    dend_34 { pt3dadd( 27.2503, -72.7764, -37.5499, 0.24 ) }
    dend_34 { pt3dadd( 27.2071, -73.1351, -37.6409, 0.24 ) }
    dend_34 { pt3dadd( 27.1075, -73.8208, -37.8656, 0.24 ) }
    dend_34 { pt3dadd( 27.0642, -74.2546, -38.0131, 0.84 ) }
    dend_34 { pt3dadd( 27.0435, -74.6818, -38.1568, 0.84 ) }
    dend_34 { pt3dadd( 27.0365, -75.07, -38.2676, 0.84 ) }
    dend_34 { pt3dadd( 27.0413, -75.6388, -38.3916, 0.12 ) }
    dend_34 { pt3dadd( 27.041, -75.9297, -38.4417, 0.12 ) }
    dend_34 { pt3dadd( 27.0522, -76.7732, -38.5509, 0.12 ) }
    dend_34 { pt3dadd( 27.0606, -77.181, -38.5996, 1.32 ) }
    dend_34 { pt3dadd( 27.0642, -78.0667, -38.7341, 1.68 ) }
    dend_34 { pt3dadd( 27.0553, -79.1968, -38.9253, 1.2 ) }
    dend_34 { pt3dadd( 27.0497, -79.8632, -39.1094, 0.12 ) }
    dend_34 { pt3dadd( 27.0427, -80.114, -39.1977, 0.12 ) }
    dend_34 { pt3dadd( 27.0026, -80.8227, -39.4835, 0.12 ) }
    dend_34 { pt3dadd( 26.9193, -81.8423, -39.9231, 1.32 ) }
    dend_34 { pt3dadd( 26.8507, -82.5255, -40.2349, 2.04 ) }
    dend_34 { pt3dadd( 26.6807, -84.3675, -41.0693, 0.36 ) }
    dend_34 { pt3dadd( 26.5975, -85.4189, -41.5123, 0.36 ) }
    dend_34 { pt3dadd( 26.5211, -86.2476, -41.8062, 0.36 ) }
    dend_34 { pt3dadd( 26.4836, -86.689, -41.9319, 0.36 ) }
    dend_34 { pt3dadd( 26.4408, -87.1785, -42.0269, 0.36 ) }
    dend_34 { pt3dadd( 26.3482, -88.2007, -42.1518, 1.92 ) }
    dend_34 { pt3dadd( 26.2835, -88.9645, -42.1758, 2.52 ) }
    dend_34 { pt3dadd( 26.1911, -90.3852, -42.2125, 0.24 ) }
    dend_34 { pt3dadd( 26.1549, -91.0713, -42.177, 0.24 ) }
    dend_34 { pt3dadd( 26.1228, -91.7493, -42.112, 0.84 ) }
    dend_34 { pt3dadd( 26.0876, -92.508, -42.0131, 1.08 ) }
    dend_34 { pt3dadd( 26.0461, -93.2878, -41.8555, 0.36 ) }
    dend_34 { pt3dadd( 26.0224, -94.2735, -41.6064, 0.36 ) }
    dend_34 { pt3dadd( 26.0429, -95.9764, -41.1178, 1.44 ) }
    dend_34 { pt3dadd( 26.0678, -96.7257, -40.8838, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( 26.102, -97.2679, -40.7141, 1.56 ) }
    dend_34 { pt3dadd( 26.1935, -98.5064, -40.2697, 0.12 ) }
    dend_34 { pt3dadd( 26.2415, -99.1016, -40.0517, 0.12 ) }
    dend_34 { pt3dadd( 26.2947, -99.7026, -39.8433, 0.12 ) }
    dend_34 { pt3dadd( 26.3106, -99.8746, -39.7939, 0.48 ) }
    dend_34 { pt3dadd( 26.4017, -100.845, -39.5086, 0.84 ) }
    dend_34 { pt3dadd( 26.5534, -102.72, -39.006, 0.12 ) }
    dend_34 { pt3dadd( 26.6137, -103.495, -38.8323, 0.12 ) }
    dend_34 { pt3dadd( 26.6367, -103.855, -38.7462, 0.24 ) }
    dend_34 { pt3dadd( 26.6706, -104.365, -38.6234, 0.24 ) }
    dend_34 { pt3dadd( 26.6956, -104.757, -38.5362, 0.24 ) }
    dend_34 { pt3dadd( 26.7228, -105.247, -38.4422, 0.48 ) }
    dend_34 { pt3dadd( 26.733, -105.531, -38.4143, 0.6 ) }
    dend_34 { pt3dadd( 26.7422, -106.006, -38.3624, 0.12 ) }
    dend_34 { pt3dadd( 26.749, -106.396, -38.315, 0.12 ) }
    dend_34 { pt3dadd( 26.7524, -106.776, -38.2646, 0.12 ) }
    dend_34 { pt3dadd( 26.754, -108.111, -38.0795, 2.4 ) }
    dend_34 { pt3dadd( 26.7522, -108.869, -37.9746, 2.88 ) }
    dend_34 { pt3dadd( 26.7387, -109.63, -37.8818, 2.4 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 19/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 30.7819, -31.4947, -29.0494, 0.12 ) }
    dend_29 { pt3dadd( 31.5547, -32.0582, -27.7041, 0.12 ) }
    dend_29 { pt3dadd( 31.8843, -32.2336, -27.1799, 0.12 ) }
    dend_29 { pt3dadd( 32.4087, -32.4357, -26.4438, 0.72 ) }
    dend_29 { pt3dadd( 33.5484, -32.7386, -25.0224, 0.72 ) }
    dend_29 { pt3dadd( 34.0688, -32.8204, -24.4802, 0.12 ) }
    dend_29 { pt3dadd( 34.4965, -32.8662, -24.1089, 0.12 ) }
    dend_29 { pt3dadd( 35.2222, -32.8557, -23.5228, 1.68 ) }
    dend_29 { pt3dadd( 35.7271, -32.8235, -23.1843, 2.28 ) }
    dend_29 { pt3dadd( 36.6227, -32.7443, -22.7304, 1.92 ) }
    dend_29 { pt3dadd( 37.6871, -32.7022, -22.1867, 0.36 ) }
    dend_29 { pt3dadd( 38.5713, -32.7458, -21.6619, 0.36 ) }
    dend_29 { pt3dadd( 39.2347, -32.8882, -21.1096, 0.6 ) }
    dend_29 { pt3dadd( 39.5066, -33.0035, -20.7454, 0.36 ) }
    dend_29 { pt3dadd( 39.7382, -33.1374, -20.36, 0.36 ) }
    dend_29 { pt3dadd( 40.8868, -33.9247, -18.2088, 0.36 ) }
    dend_29 { pt3dadd( 41.0848, -34.0773, -17.8115, 1.2 ) }
    dend_29 { pt3dadd( 41.7154, -34.6066, -16.429, 1.92 ) }
    dend_29 { pt3dadd( 42.6618, -35.4326, -14.3221, 0.24 ) }
    dend_29 { pt3dadd( 43.1436, -35.8467, -13.2406, 2.16 ) }
    dend_29 { pt3dadd( 43.3303, -35.9939, -12.8522, 3.0 ) }
    dend_29 { pt3dadd( 43.6072, -36.1396, -12.4403, 3.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -10.6099, -337.045, -48.6345, 0.12 ) }
    dend_23 { pt3dadd( -9.69406, -336.992, -48.9619, 0.12 ) }
    dend_23 { pt3dadd( -9.27792, -336.995, -49.081, 0.12 ) }
    dend_23 { pt3dadd( -9.0504, -337.009, -49.1371, 0.12 ) }
    dend_23 { pt3dadd( -8.3324, -337.063, -49.2935, 0.6 ) }
    dend_23 { pt3dadd( -8.02123, -337.086, -49.3613, 0.6 ) }
    dend_23 { pt3dadd( -7.45363, -337.129, -49.4849, 0.12 ) }
    dend_23 { pt3dadd( -6.59431, -337.234, -49.6076, 0.12 ) }
    dend_23 { pt3dadd( -6.31062, -337.281, -49.6522, 0.84 ) }
    dend_23 { pt3dadd( -6.08262, -337.326, -49.6862, 0.84 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -10.6099, -337.045, -48.6345, 1.56 ) }
    dend_18 { pt3dadd( -10.5068, -337.621, -48.6084, 1.56 ) }
    dend_18 { pt3dadd( -10.364, -338.421, -48.5723, 2.28 ) }
    dend_18 { pt3dadd( -10.2797, -338.892, -48.551, 2.64 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 15.7725, 96.3176, 10.0776, 0.48 ) }
    dend_12 { pt3dadd( 16.4947, 98.6576, 10.6577, 0.48 ) }
    dend_12 { pt3dadd( 16.7008, 99.4863, 10.8154, 0.36 ) }
    dend_12 { pt3dadd( 16.8647, 100.338, 10.9455, 0.36 ) }
    dend_12 { pt3dadd( 16.9805, 101.22, 11.0585, 0.36 ) }
    dend_12 { pt3dadd( 17.0383, 101.972, 11.1509, 0.36 ) }
    dend_12 { pt3dadd( 17.0489, 102.403, 11.201, 0.72 ) }
    dend_12 { pt3dadd( 16.9922, 102.852, 11.1906, 0.72 ) }
    dend_12 { pt3dadd( 16.9035, 103.396, 11.1866, 0.36 ) }
    dend_12 { pt3dadd( 16.7749, 104.07, 11.1947, 0.36 ) }
    dend_12 { pt3dadd( 16.6744, 104.669, 11.21, 1.2 ) }
    dend_12 { pt3dadd( 16.5843, 105.352, 11.2364, 1.8 ) }
    dend_12 { pt3dadd( 16.4873, 106.301, 11.3019, 1.8 ) }
    dend_12 { pt3dadd( 16.3898, 107.612, 11.4279, 0.36 ) }
    dend_12 { pt3dadd( 16.3643, 108.041, 11.4472, 0.36 ) }
    dend_12 { pt3dadd( 16.3366, 108.938, 11.474, 0.72 ) }
    dend_12 { pt3dadd( 16.3362, 109.378, 11.4814, 0.84 ) }
    dend_12 { pt3dadd( 16.3507, 110.339, 11.503, 0.36 ) }
    dend_12 { pt3dadd( 16.3652, 111.107, 11.5298, 1.08 ) }
    dend_12 { pt3dadd( 16.3758, 112.729, 11.5397, 2.64 ) }
    dend_12 { pt3dadd( 16.3732, 113.784, 11.519, 3.61 ) }
    dend_12 { pt3dadd( 16.3607, 114.274, 11.4834, 3.61 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 77/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 15.7725, 96.3176, 10.0776, 0.6 ) }
    dend_9 { pt3dadd( 15.312, 98.2725, 10.1294, 0.6 ) }
    dend_9 { pt3dadd( 15.1089, 99.6055, 10.0449, 0.6 ) }
    dend_9 { pt3dadd( 14.8913, 101.459, 9.73636, 0.6 ) }
    dend_9 { pt3dadd( 14.7766, 102.28, 9.46679, 0.6 ) }
    dend_9 { pt3dadd( 14.5731, 103.472, 9.03024, 1.68 ) }
    dend_9 { pt3dadd( 14.3372, 104.647, 8.58701, 2.04 ) }
    dend_9 { pt3dadd( 14.1984, 105.404, 8.20582, 1.8 ) }
    dend_9 { pt3dadd( 13.9285, 106.327, 7.63698, 2.04 ) }
    dend_9 { pt3dadd( 13.1017, 107.848, 6.60702, 0.48 ) }
    dend_9 { pt3dadd( 12.5428, 108.545, 6.20293, 0.48 ) }
    dend_9 { pt3dadd( 12.2813, 108.792, 6.10398, 0.72 ) }
    dend_9 { pt3dadd( 11.6564, 109.34, 5.95704, 0.96 ) }
    dend_9 { pt3dadd( 10.8214, 110.072, 5.79372, 0.72 ) }
    dend_9 { pt3dadd( 10.15, 110.709, 5.69058, 1.32 ) }
    dend_9 { pt3dadd( 9.5841, 111.344, 5.60144, 1.8 ) }
    dend_9 { pt3dadd( 8.81393, 112.374, 5.42504, 1.8 ) }
    dend_9 { pt3dadd( 8.25912, 113.255, 5.2874, 0.96 ) }
    dend_9 { pt3dadd( 7.70764, 114.25, 5.1062, 0.72 ) }
    dend_9 { pt3dadd( 7.31339, 114.997, 4.94841, 0.84 ) }
    dend_9 { pt3dadd( 6.55115, 116.374, 4.56875, 1.56 ) }
    dend_9 { pt3dadd( 6.13403, 117.091, 4.32437, 2.52 ) }
    dend_9 { pt3dadd( 5.75903, 117.703, 4.09427, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( 4.67527, 119.325, 3.47211, 2.4 ) }
    dend_9 { pt3dadd( 3.71724, 120.663, 2.93657, 1.56 ) }
    dend_9 { pt3dadd( 2.96547, 121.66, 2.49665, 0.84 ) }
    dend_9 { pt3dadd( 2.40445, 122.378, 2.16604, 0.48 ) }
    dend_9 { pt3dadd( 2.18225, 122.667, 2.02275, 0.24 ) }
    dend_9 { pt3dadd( 1.57669, 123.459, 1.64227, 0.24 ) }
    dend_9 { pt3dadd( 1.07471, 124.105, 1.18483, 0.48 ) }
    dend_9 { pt3dadd( 0.7681, 124.51, 0.800995, 0.12 ) }
    dend_9 { pt3dadd( 0.505255, 124.895, 0.402237, 0.12 ) }
    dend_9 { pt3dadd( -0.154431, 125.885, -0.663813, 1.2 ) }
    dend_9 { pt3dadd( -0.509805, 126.436, -1.2528, 1.56 ) }
    dend_9 { pt3dadd( -2.20637, 129.126, -4.07911, 0.36 ) }
    dend_9 { pt3dadd( -2.72104, 129.994, -4.90073, 0.12 ) }
    dend_9 { pt3dadd( -3.56408, 131.515, -6.11032, 2.64 ) }
    dend_9 { pt3dadd( -3.80077, 131.989, -6.40187, 3.0 ) }
    dend_9 { pt3dadd( -4.13487, 132.782, -6.57477, 2.76 ) }
    dend_9 { pt3dadd( -5.09852, 135.269, -6.22246, 0.48 ) }
    dend_9 { pt3dadd( -6.84283, 139.958, -4.49191, 0.48 ) }
    dend_9 { pt3dadd( -7.22141, 140.97, -4.26797, 0.48 ) }
    dend_9 { pt3dadd( -7.44482, 141.646, -4.4571, 0.48 ) }
    dend_9 { pt3dadd( -7.63067, 142.415, -4.99811, 0.36 ) }
    dend_9 { pt3dadd( -7.87294, 143.799, -6.34755, 0.36 ) }
    dend_9 { pt3dadd( -7.99341, 145.17, -7.92153, 0.36 ) }
    dend_9 { pt3dadd( -8.03042, 147.059, -10.0837, 2.16 ) }
    dend_9 { pt3dadd( -7.97508, 147.759, -10.8984, 3.0 ) }
    dend_9 { pt3dadd( -7.9242, 148.072, -11.247, 3.12 ) }
    dend_9 { pt3dadd( -7.5766, 149.441, -12.7002, 3.0 ) }
    dend_9 { pt3dadd( -6.94241, 151.478, -14.7165, 0.12 ) }
    dend_9 { pt3dadd( -6.63061, 152.441, -15.5814, 0.12 ) }
    dend_9 { pt3dadd( -6.53845, 152.731, -15.8127, 0.12 ) }
    dend_9 { pt3dadd( -6.12053, 153.994, -16.8683, 2.52 ) }
    dend_9 { pt3dadd( -5.94079, 154.508, -17.2791, 2.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 32/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 21.6655, 66.1955, 6.66043, 0.6 ) }
    dend_7 { pt3dadd( 20.7722, 66.7075, 8.02304, 0.6 ) }
    dend_7 { pt3dadd( 20.4251, 66.9065, 8.5524, 0.6 ) }
    dend_7 { pt3dadd( 19.9343, 67.1878, 9.30098, 0.24 ) }
    dend_7 { pt3dadd( 19.5993, 67.3798, 9.81196, 0.24 ) }
    dend_7 { pt3dadd( 19.2457, 67.5825, 10.3514, 0.36 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 21.6655, 66.1955, 6.66043, 0.6 ) }
    dend_4 { pt3dadd( 22.0579, 66.866, 6.92614, 0.6 ) }
    dend_4 { pt3dadd( 22.5064, 67.6968, 7.25257, 0.72 ) }
    dend_4 { pt3dadd( 22.806, 68.2978, 7.46717, 1.08 ) }
    dend_4 { pt3dadd( 22.9678, 68.6448, 7.56712, 1.44 ) }
    dend_4 { pt3dadd( 23.1589, 69.0689, 7.69193, 1.56 ) }
    dend_4 { pt3dadd( 23.4602, 69.7486, 7.88081, 1.44 ) }
    dend_4 { pt3dadd( 23.8568, 70.7059, 8.12918, 1.56 ) }
    dend_4 { pt3dadd( 24.0942, 71.3376, 8.28274, 1.68 ) }
    dend_4 { pt3dadd( 24.2864, 71.8855, 8.45077, 1.68 ) }
    dend_4 { pt3dadd( 24.48, 72.4598, 8.65554, 1.68 ) }
    dend_4 { pt3dadd( 24.76, 73.3369, 8.99688, 0.6 ) }
    dend_4 { pt3dadd( 24.9554, 74.0052, 9.26829, 0.36 ) }
    dend_4 { pt3dadd( 25.1114, 74.5251, 9.43845, 0.36 ) }
    dend_4 { pt3dadd( 25.3264, 75.2135, 9.63331, 1.44 ) }
    dend_4 { pt3dadd( 25.4486, 75.573, 9.71669, 1.56 ) }
    dend_4 { pt3dadd( 25.6514, 76.1444, 9.78829, 1.56 ) }
    dend_4 { pt3dadd( 25.7554, 76.4222, 9.79576, 1.44 ) }
    dend_4 { pt3dadd( 26.1441, 77.3913, 9.79125, 0.72 ) }
    dend_4 { pt3dadd( 26.3079, 77.7522, 9.7907, 0.6 ) }
    dend_4 { pt3dadd( 26.5984, 78.332, 9.798, 1.2 ) }
    dend_4 { pt3dadd( 26.7436, 78.5979, 9.81564, 1.32 ) }
    dend_4 { pt3dadd( 27.103, 79.189, 9.87778, 0.84 ) }
    dend_4 { pt3dadd( 27.7288, 80.0985, 10.0538, 1.08 ) }
    dend_4 { pt3dadd( 28.1725, 80.6767, 10.214, 0.96 ) }
    dend_4 { pt3dadd( 28.5574, 81.1255, 10.3302, 0.48 ) }
    dend_4 { pt3dadd( 28.8748, 81.4767, 10.4107, 0.48 ) }
    dend_4 { pt3dadd( 29.248, 81.8658, 10.4858, 0.6 ) }
    dend_4 { pt3dadd( 29.8205, 82.4409, 10.5644, 0.96 ) }
    dend_4 { pt3dadd( 30.0095, 82.6339, 10.5819, 0.96 ) }
    dend_4 { pt3dadd( 30.6934, 83.3903, 10.6515, 1.68 ) }
    dend_4 { pt3dadd( 31.3299, 84.1591, 10.712, 2.28 ) }
    dend_4 { pt3dadd( 31.8514, 84.8617, 10.7654, 2.16 ) }
    dend_4 { pt3dadd( 32.1759, 85.386, 10.8023, 1.92 ) }
    dend_4 { pt3dadd( 32.5422, 86.1388, 10.8216, 0.6 ) }
    dend_4 { pt3dadd( 32.8468, 86.9869, 10.8183, 0.6 ) }
    dend_4 { pt3dadd( 33.0003, 87.5201, 10.8154, 0.6 ) }
    dend_4 { pt3dadd( 33.1178, 88.0864, 10.7963, 0.48 ) }
    dend_4 { pt3dadd( 33.2248, 89.0553, 10.7422, 0.48 ) }
    dend_4 { pt3dadd( 33.2506, 89.9778, 10.6516, 0.48 ) }
    dend_4 { pt3dadd( 33.1936, 90.7963, 10.4891, 1.2 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 79/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 8.31271, 120.027, -21.1583, 0.48 ) }
    dend_60 { pt3dadd( 8.41083, 121.216, -20.9145, 0.48 ) }
    dend_60 { pt3dadd( 8.46472, 121.599, -20.8178, 0.12 ) }
    dend_60 { pt3dadd( 8.58137, 122.365, -20.6144, 0.36 ) }
    dend_60 { pt3dadd( 8.67496, 122.939, -20.4634, 0.48 ) }
    dend_60 { pt3dadd( 8.75264, 123.354, -20.3589, 0.48 ) }
    dend_60 { pt3dadd( 8.858, 123.872, -20.238, 0.48 ) }
    dend_60 { pt3dadd( 9.08461, 124.745, -20.073, 1.68 ) }
    dend_60 { pt3dadd( 9.16185, 125.0, -20.0444, 2.16 ) }
    dend_60 { pt3dadd( 9.27347, 125.34, -20.039, 2.4 ) }
    dend_60 { pt3dadd( 9.41382, 125.744, -20.0519, 2.4 ) }
    dend_60 { pt3dadd( 9.59249, 126.233, -20.0626, 1.92 ) }
    dend_60 { pt3dadd( 9.86478, 126.967, -20.0808, 0.12 ) }
    dend_60 { pt3dadd( 9.97823, 127.256, -20.0935, 0.24 ) }
    dend_60 { pt3dadd( 10.0829, 127.517, -20.095, 0.24 ) }
    dend_60 { pt3dadd( 10.3082, 128.082, -20.076, 0.48 ) }
    dend_60 { pt3dadd( 10.5945, 128.795, -20.0226, 0.48 ) }
    dend_60 { pt3dadd( 10.6894, 129.028, -19.996, 1.32 ) }
    dend_60 { pt3dadd( 10.858, 129.423, -19.9421, 1.68 ) }
    dend_60 { pt3dadd( 11.0249, 129.814, -19.9135, 1.8 ) }
    dend_60 { pt3dadd( 11.1761, 130.172, -19.9114, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_60 { pt3dadd( 11.2674, 130.393, -19.9296, 1.92 ) }
    dend_60 { pt3dadd( 11.4828, 130.953, -20.0152, 0.48 ) }
    dend_60 { pt3dadd( 11.7331, 131.641, -20.1595, 0.48 ) }
    dend_60 { pt3dadd( 11.9374, 132.247, -20.2969, 0.72 ) }
    dend_60 { pt3dadd( 12.1511, 132.908, -20.4359, 0.72 ) }
    dend_60 { pt3dadd( 12.3367, 133.55, -20.6452, 0.36 ) }
    dend_60 { pt3dadd( 12.4546, 134.019, -20.8401, 0.36 ) }
    dend_60 { pt3dadd( 12.575, 134.617, -21.1221, 0.72 ) }
    dend_60 { pt3dadd( 12.6755, 135.217, -21.3763, 1.08 ) }
    dend_60 { pt3dadd( 12.7681, 135.802, -21.588, 1.32 ) }
    dend_60 { pt3dadd( 13.0329, 137.678, -22.1237, 0.48 ) }
    dend_60 { pt3dadd( 13.0984, 138.188, -22.2197, 0.36 ) }
    dend_60 { pt3dadd( 13.2131, 139.122, -22.3133, 0.36 ) }
    dend_60 { pt3dadd( 13.3549, 140.395, -22.3873, 0.36 ) }
    dend_60 { pt3dadd( 13.4049, 140.828, -22.41, 1.92 ) }
    dend_60 { pt3dadd( 13.5017, 141.435, -22.4259, 3.0 ) }
    dend_60 { pt3dadd( 13.594, 141.852, -22.4149, 3.25 ) }
    dend_60 { pt3dadd( 13.7698, 142.522, -22.4496, 3.25 ) }
    dend_60 { pt3dadd( 14.1423, 143.811, -22.617, 0.36 ) }
    dend_60 { pt3dadd( 14.2799, 144.289, -22.7106, 0.48 ) }
    dend_60 { pt3dadd( 14.5618, 145.279, -22.9045, 0.48 ) }
    dend_60 { pt3dadd( 14.7714, 146.051, -23.0498, 0.48 ) }
    dend_60 { pt3dadd( 14.9383, 146.782, -23.174, 0.48 ) }
    dend_60 { pt3dadd( 14.9973, 147.121, -23.2209, 0.96 ) }
    dend_60 { pt3dadd( 15.0444, 147.468, -23.2529, 1.2 ) }
    dend_60 { pt3dadd( 15.1079, 148.096, -23.3002, 0.84 ) }
    dend_60 { pt3dadd( 15.1732, 148.874, -23.3475, 0.48 ) }
    dend_60 { pt3dadd( 15.2575, 149.663, -23.3852, 0.36 ) }
    dend_60 { pt3dadd( 15.3597, 150.263, -23.4089, 0.36 ) }
    dend_60 { pt3dadd( 15.5594, 151.05, -23.4518, 0.36 ) }
    dend_60 { pt3dadd( 15.7175, 151.534, -23.493, 1.32 ) }
    dend_60 { pt3dadd( 15.9773, 152.222, -23.5659, 2.28 ) }
    dend_60 { pt3dadd( 16.1498, 152.646, -23.6168, 2.76 ) }
    dend_60 { pt3dadd( 16.3849, 153.222, -23.6903, 2.4 ) }
    dend_60 { pt3dadd( 16.8061, 154.369, -23.8381, 1.08 ) }
    dend_60 { pt3dadd( 17.0641, 155.195, -23.9385, 0.36 ) }
    dend_60 { pt3dadd( 17.2331, 155.858, -24.0087, 0.36 ) }
    dend_60 { pt3dadd( 17.3765, 156.55, -24.0873, 1.68 ) }
    dend_60 { pt3dadd( 17.4486, 156.978, -24.1372, 2.28 ) }
    dend_60 { pt3dadd( 17.542, 157.663, -24.1953, 2.4 ) }
    dend_60 { pt3dadd( 17.6589, 158.723, -24.2515, 1.68 ) }
    dend_60 { pt3dadd( 17.7925, 160.006, -24.28, 1.08 ) }
    dend_60 { pt3dadd( 17.8545, 160.631, -24.2894, 0.6 ) }
    dend_60 { pt3dadd( 17.8979, 161.151, -24.2948, 0.6 ) }
    dend_60 { pt3dadd( 17.9731, 162.018, -24.3037, 1.44 ) }
    dend_60 { pt3dadd( 18.0114, 162.444, -24.3124, 1.8 ) }
    dend_60 { pt3dadd( 18.0585, 162.963, -24.3324, 1.8 ) }
    dend_60 { pt3dadd( 18.139, 163.668, -24.3697, 0.48 ) }
    dend_60 { pt3dadd( 18.2805, 164.695, -24.4271, 0.48 ) }
    dend_60 { pt3dadd( 18.4096, 165.609, -24.53, 1.2 ) }
    dend_60 { pt3dadd( 18.5708, 166.651, -24.6962, 1.68 ) }
    dend_60 { pt3dadd( 18.7014, 167.369, -24.8213, 2.28 ) }
    dend_60 { pt3dadd( 18.8991, 168.396, -24.9949, 2.52 ) }
    dend_60 { pt3dadd( 19.1625, 169.761, -25.1858, 1.2 ) }
    dend_60 { pt3dadd( 19.3291, 170.671, -25.2611, 0.6 ) }
    dend_60 { pt3dadd( 19.4141, 171.241, -25.2687, 0.48 ) }
    dend_60 { pt3dadd( 19.5032, 172.084, -25.2043, 0.48 ) }
    dend_60 { pt3dadd( 19.5527, 172.765, -25.0755, 0.48 ) }
    dend_60 { pt3dadd( 19.5888, 173.448, -24.8698, 0.48 ) }
    dend_60 { pt3dadd( 19.6356, 174.242, -24.5534, 0.48 ) }
    dend_60 { pt3dadd( 19.6775, 174.717, -24.3454, 0.48 ) }
    dend_60 { pt3dadd( 19.734, 175.212, -24.193, 0.48 ) }
    dend_60 { pt3dadd( 19.8448, 175.908, -24.1062, 1.08 ) }
    dend_60 { pt3dadd( 19.9882, 176.551, -24.1514, 1.68 ) }
    dend_60 { pt3dadd( 20.1172, 177.066, -24.2609, 2.04 ) }
    dend_60 { pt3dadd( 20.2478, 177.549, -24.4045, 2.04 ) }
    dend_60 { pt3dadd( 20.623, 178.889, -24.8424, 0.96 ) }
    dend_60 { pt3dadd( 20.7576, 179.388, -25.0152, 0.48 ) }
    dend_60 { pt3dadd( 20.8803, 179.864, -25.1858, 0.48 ) }
    dend_60 { pt3dadd( 21.0605, 180.586, -25.4193, 1.56 ) }
    dend_60 { pt3dadd( 21.122, 180.863, -25.4907, 2.16 ) }
    dend_60 { pt3dadd( 21.2365, 181.432, -25.6646, 2.64 ) }
    dend_60 { pt3dadd( 21.3123, 181.834, -25.7858, 2.64 ) }
    dend_60 { pt3dadd( 21.4099, 182.349, -25.9678, 3.12 ) }
    dend_60 { pt3dadd( 21.5026, 182.816, -26.1595, 3.12 ) }
    dend_60 { pt3dadd( 21.6916, 183.693, -26.5436, 0.6 ) }
    dend_60 { pt3dadd( 22.0527, 185.201, -27.1959, 0.48 ) }
    dend_60 { pt3dadd( 22.2058, 185.766, -27.4296, 0.36 ) }
    dend_60 { pt3dadd( 22.3076, 186.11, -27.5566, 0.36 ) }
    dend_60 { pt3dadd( 22.4914, 186.718, -27.7132, 0.96 ) }
    dend_60 { pt3dadd( 22.7387, 187.488, -27.8279, 0.96 ) }
    dend_60 { pt3dadd( 22.9759, 188.223, -27.8516, 0.72 ) }
    dend_60 { pt3dadd( 23.1405, 188.826, -27.8171, 0.48 ) }
    dend_60 { pt3dadd( 23.3102, 189.602, -27.7953, 0.48 ) }
    dend_60 { pt3dadd( 23.5149, 190.79, -27.7909, 1.2 ) }
    dend_60 { pt3dadd( 23.596, 191.392, -27.8036, 1.68 ) }
    dend_60 { pt3dadd( 23.6775, 192.162, -27.8373, 2.04 ) }
    dend_60 { pt3dadd( 23.7572, 193.002, -27.8929, 1.8 ) }
    dend_60 { pt3dadd( 23.8599, 194.05, -27.9881, 0.6 ) }
    dend_60 { pt3dadd( 23.9348, 194.742, -28.0701, 0.48 ) }
    dend_60 { pt3dadd( 24.0411, 195.599, -28.1998, 0.48 ) }
    dend_60 { pt3dadd( 24.1702, 196.446, -28.3293, 0.48 ) }
    dend_60 { pt3dadd( 24.2662, 196.932, -28.3982, 0.48 ) }
    dend_60 { pt3dadd( 24.3746, 197.36, -28.4436, 1.08 ) }
    dend_60 { pt3dadd( 24.5403, 197.943, -28.476, 1.32 ) }
    dend_60 { pt3dadd( 24.6426, 198.274, -28.4943, 1.32 ) }
    dend_60 { pt3dadd( 24.8466, 198.869, -28.5163, 0.72 ) }
    dend_60 { pt3dadd( 24.981, 199.238, -28.5344, 0.48 ) }
    dend_60 { pt3dadd( 25.1694, 199.764, -28.563, 0.72 ) }
    dend_60 { pt3dadd( 25.3748, 200.342, -28.6093, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_60 { pt3dadd( 25.588, 200.964, -28.6818, 1.32 ) }
    dend_60 { pt3dadd( 25.829, 201.714, -28.7955, 0.48 ) }
    dend_60 { pt3dadd( 26.0161, 202.371, -28.94, 0.48 ) }
    dend_60 { pt3dadd( 26.193, 203.016, -29.1189, 0.48 ) }
    dend_60 { pt3dadd( 26.3859, 203.728, -29.3389, 1.44 ) }
    dend_60 { pt3dadd( 26.5533, 204.356, -29.5336, 2.28 ) }
    dend_60 { pt3dadd( 26.753, 205.117, -29.7615, 1.92 ) }
    dend_60 { pt3dadd( 27.0383, 206.205, -30.0666, 0.48 ) }
    dend_60 { pt3dadd( 27.2661, 207.04, -30.2602, 0.48 ) }
    dend_60 { pt3dadd( 27.4335, 207.642, -30.3593, 0.72 ) }
    dend_60 { pt3dadd( 27.5527, 208.091, -30.3928, 0.48 ) }
    dend_60 { pt3dadd( 27.6565, 208.547, -30.3796, 0.36 ) }
    dend_60 { pt3dadd( 27.7538, 209.251, -30.3729, 0.36 ) }
    dend_60 { pt3dadd( 27.7791, 209.943, -30.4065, 0.36 ) }
    dend_60 { pt3dadd( 27.7372, 210.709, -30.514, 1.8 ) }
    dend_60 { pt3dadd( 27.6514, 211.468, -30.676, 3.0 ) }
    dend_60 { pt3dadd( 27.5311, 212.214, -30.8757, 3.25 ) }
    dend_60 { pt3dadd( 27.1295, 214.044, -31.4903, 1.8 ) }
    dend_60 { pt3dadd( 26.9314, 214.808, -31.7898, 0.48 ) }
    dend_60 { pt3dadd( 26.8079, 215.263, -31.9885, 0.48 ) }
    dend_60 { pt3dadd( 26.7307, 215.58, -32.1326, 0.72 ) }
    dend_60 { pt3dadd( 26.6562, 216.001, -32.3023, 0.48 ) }
    dend_60 { pt3dadd( 26.6137, 216.825, -32.5367, 0.36 ) }
    dend_60 { pt3dadd( 26.6825, 217.507, -32.5997, 0.36 ) }
    dend_60 { pt3dadd( 26.7642, 217.943, -32.6162, 0.72 ) }
    dend_60 { pt3dadd( 26.9481, 218.717, -32.6117, 1.08 ) }
    dend_60 { pt3dadd( 27.1136, 219.347, -32.5856, 1.2 ) }
    dend_60 { pt3dadd( 27.3874, 220.316, -32.4941, 0.72 ) }
    dend_60 { pt3dadd( 27.6545, 221.229, -32.3651, 0.36 ) }
    dend_60 { pt3dadd( 27.826, 221.83, -32.2729, 0.36 ) }
    dend_60 { pt3dadd( 28.0391, 222.638, -32.1284, 0.36 ) }
    dend_60 { pt3dadd( 28.2179, 223.382, -31.9825, 0.36 ) }
    dend_60 { pt3dadd( 28.3907, 224.232, -31.8406, 1.92 ) }
    dend_60 { pt3dadd( 28.4732, 224.749, -31.7636, 2.76 ) }
    dend_60 { pt3dadd( 28.4939, 224.913, -31.7434, 3.12 ) }
    dend_60 { pt3dadd( 28.5891, 225.734, -31.663, 2.76 ) }
    dend_60 { pt3dadd( 28.6199, 226.006, -31.6479, 2.76 ) }
    dend_60 { pt3dadd( 28.7384, 227.031, -31.6139, 0.48 ) }
    dend_60 { pt3dadd( 28.8211, 227.802, -31.6113, 0.48 ) }
    dend_60 { pt3dadd( 28.8629, 228.23, -31.6106, 0.96 ) }
    dend_60 { pt3dadd( 28.8995, 228.632, -31.6116, 0.6 ) }
    dend_60 { pt3dadd( 28.9416, 229.144, -31.6169, 0.48 ) }
    dend_60 { pt3dadd( 28.9795, 229.582, -31.6102, 0.36 ) }
    dend_60 { pt3dadd( 29.0942, 230.613, -31.5326, 0.36 ) }
    dend_60 { pt3dadd( 29.1502, 231.044, -31.4961, 0.48 ) }
    dend_60 { pt3dadd( 29.2145, 231.473, -31.4662, 0.36 ) }
    dend_60 { pt3dadd( 29.3049, 231.978, -31.4293, 0.36 ) }
    dend_60 { pt3dadd( 29.3775, 232.352, -31.3967, 0.36 ) }
    dend_60 { pt3dadd( 29.5104, 233.022, -31.3672, 1.2 ) }
    dend_60 { pt3dadd( 29.5845, 233.443, -31.3689, 2.04 ) }
    dend_60 { pt3dadd( 29.6619, 233.938, -31.3652, 2.16 ) }
    dend_60 { pt3dadd( 29.7411, 234.562, -31.3567, 1.68 ) }
    dend_60 { pt3dadd( 29.8081, 235.252, -31.3464, 0.48 ) }
    dend_60 { pt3dadd( 29.8758, 236.046, -31.3385, 0.36 ) }
    dend_60 { pt3dadd( 29.9968, 237.595, -31.3202, 0.36 ) }
    dend_60 { pt3dadd( 30.0551, 238.301, -31.3038, 1.2 ) }
    dend_60 { pt3dadd( 30.0882, 238.658, -31.2987, 0.84 ) }
    dend_60 { pt3dadd( 30.1431, 239.17, -31.3021, 0.48 ) }
    dend_60 { pt3dadd( 30.2696, 240.091, -31.3387, 0.36 ) }
    dend_60 { pt3dadd( 30.3313, 240.483, -31.3847, 0.36 ) }
    dend_60 { pt3dadd( 30.412, 240.93, -31.4986, 1.44 ) }
    dend_60 { pt3dadd( 30.524, 241.567, -31.7059, 1.92 ) }
    dend_60 { pt3dadd( 30.5945, 241.966, -31.8411, 2.04 ) }
    dend_60 { pt3dadd( 30.7141, 242.635, -32.0672, 2.04 ) }
    dend_60 { pt3dadd( 30.8839, 243.608, -32.3367, 0.48 ) }
    dend_60 { pt3dadd( 31.0649, 244.699, -32.5616, 0.48 ) }
    dend_60 { pt3dadd( 31.1346, 245.117, -32.6161, 0.6 ) }
    dend_60 { pt3dadd( 31.1789, 245.394, -32.6316, 0.48 ) }
    dend_60 { pt3dadd( 31.3048, 246.203, -32.6409, 0.48 ) }
    dend_60 { pt3dadd( 31.4657, 247.328, -32.5806, 2.64 ) }
    dend_60 { pt3dadd( 31.5583, 248.028, -32.4993, 3.49 ) }
    dend_60 { pt3dadd( 31.5928, 248.33, -32.459, 3.49 ) }
    dend_60 { pt3dadd( 31.64, 248.767, -32.4012, 3.49 ) }
    dend_60 { pt3dadd( 31.7624, 249.986, -32.2511, 0.48 ) }
    dend_60 { pt3dadd( 31.8403, 250.785, -32.1559, 0.72 ) }
    dend_60 { pt3dadd( 31.9016, 251.354, -32.0996, 0.48 ) }
    dend_60 { pt3dadd( 31.9598, 251.786, -32.0569, 0.48 ) }
    dend_60 { pt3dadd( 32.0458, 252.345, -32.0042, 1.32 ) }
    dend_60 { pt3dadd( 32.117, 252.688, -31.9768, 1.56 ) }
    dend_60 { pt3dadd( 32.258, 253.189, -31.9444, 1.56 ) }
    dend_60 { pt3dadd( 32.4263, 253.682, -31.938, 0.48 ) }
    dend_60 { pt3dadd( 32.6416, 254.268, -31.9519, 0.48 ) }
    dend_60 { pt3dadd( 32.8009, 254.7, -31.9589, 0.6 ) }
    dend_60 { pt3dadd( 33.0291, 255.355, -31.9617, 0.6 ) }
    dend_60 { pt3dadd( 33.2056, 255.897, -31.9588, 0.36 ) }
    dend_60 { pt3dadd( 33.3369, 256.339, -31.9604, 0.36 ) }
    dend_60 { pt3dadd( 33.4776, 256.93, -31.9664, 0.36 ) }
    dend_60 { pt3dadd( 33.5513, 257.404, -31.9829, 1.32 ) }
    dend_60 { pt3dadd( 33.5884, 257.839, -31.9973, 1.56 ) }
    dend_60 { pt3dadd( 33.5931, 258.187, -32.0034, 1.32 ) }
    dend_60 { pt3dadd( 33.585, 258.616, -32.007, 0.36 ) }
    dend_60 { pt3dadd( 33.591, 259.242, -32.0081, 0.36 ) }
    dend_60 { pt3dadd( 33.6215, 259.745, -32.0122, 1.2 ) }
    dend_60 { pt3dadd( 33.6865, 260.273, -32.0296, 1.2 ) }
    dend_60 { pt3dadd( 33.7874, 260.89, -32.0612, 0.36 ) }
    dend_60 { pt3dadd( 33.9052, 261.485, -32.0981, 0.36 ) }
    dend_60 { pt3dadd( 34.0468, 262.094, -32.1383, 0.48 ) }
    dend_60 { pt3dadd( 34.1621, 262.548, -32.1867, 0.48 ) }
    dend_60 { pt3dadd( 34.3224, 263.182, -32.2748, 0.48 ) }
    dend_60 { pt3dadd( 34.3633, 263.349, -32.3067, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( 34.4664, 263.763, -32.3936, 0.72 ) }
    dend_60 { pt3dadd( 34.6117, 264.348, -32.5105, 0.72 ) }
    dend_60 { pt3dadd( 34.6873, 264.662, -32.5603, 0.48 ) }
    dend_60 { pt3dadd( 34.816, 265.171, -32.619, 0.48 ) }
    dend_60 { pt3dadd( 34.9755, 265.775, -32.6626, 1.08 ) }
    dend_60 { pt3dadd( 35.1251, 266.296, -32.6784, 1.68 ) }
    dend_60 { pt3dadd( 35.2698, 266.775, -32.6836, 1.68 ) }
    dend_60 { pt3dadd( 35.4253, 267.302, -32.689, 0.84 ) }
    dend_60 { pt3dadd( 35.5244, 267.639, -32.7037, 0.72 ) }
    dend_60 { pt3dadd( 35.7072, 268.3, -32.8006, 0.72 ) }
    dend_60 { pt3dadd( 35.8956, 269.022, -32.9644, 1.32 ) }
    dend_60 { pt3dadd( 36.0002, 269.445, -33.0847, 2.4 ) }
    dend_60 { pt3dadd( 36.1434, 270.06, -33.2865, 2.76 ) }
    dend_60 { pt3dadd( 36.2759, 270.673, -33.499, 2.04 ) }
    dend_60 { pt3dadd( 36.494, 271.744, -33.8669, 0.48 ) }
    dend_60 { pt3dadd( 36.5921, 272.249, -34.0363, 0.48 ) }
    dend_60 { pt3dadd( 36.6688, 272.665, -34.1656, 0.6 ) }
    dend_60 { pt3dadd( 36.716, 272.906, -34.2257, 0.48 ) }
    dend_60 { pt3dadd( 36.9254, 273.906, -34.3949, 0.48 ) }
    dend_60 { pt3dadd( 37.015, 274.331, -34.4309, 0.72 ) }
    dend_60 { pt3dadd( 37.1214, 274.761, -34.4336, 1.08 ) }
    dend_60 { pt3dadd( 37.2128, 275.1, -34.4315, 0.72 ) }
    dend_60 { pt3dadd( 37.3456, 275.548, -34.4143, 0.48 ) }
    dend_60 { pt3dadd( 37.4684, 275.967, -34.405, 0.24 ) }
    dend_60 { pt3dadd( 37.6004, 276.408, -34.402, 0.24 ) }
    dend_60 { pt3dadd( 37.9095, 277.517, -34.4287, 3.12 ) }
    dend_60 { pt3dadd( 37.999, 277.845, -34.4443, 3.37 ) }
    dend_60 { pt3dadd( 38.1573, 278.44, -34.4835, 3.0 ) }
    dend_60 { pt3dadd( 38.4111, 279.558, -34.5675, 0.48 ) }
    dend_60 { pt3dadd( 38.5578, 280.36, -34.6334, 0.48 ) }
    dend_60 { pt3dadd( 38.6703, 281.094, -34.687, 0.84 ) }
    dend_60 { pt3dadd( 38.7398, 281.595, -34.7178, 0.48 ) }
    dend_60 { pt3dadd( 38.8686, 282.372, -34.7249, 0.48 ) }
    dend_60 { pt3dadd( 39.0482, 283.283, -34.6836, 0.48 ) }
    dend_60 { pt3dadd( 39.1344, 283.644, -34.6376, 0.48 ) }
    dend_60 { pt3dadd( 39.303, 284.301, -34.5247, 0.48 ) }
    dend_60 { pt3dadd( 39.4193, 284.696, -34.4428, 0.96 ) }
    dend_60 { pt3dadd( 39.6612, 285.452, -34.3107, 1.56 ) }
    dend_60 { pt3dadd( 39.7723, 285.741, -34.2627, 1.56 ) }
    dend_60 { pt3dadd( 40.0031, 286.273, -34.2309, 0.48 ) }
    dend_60 { pt3dadd( 40.0661, 286.435, -34.243, 0.36 ) }
    dend_60 { pt3dadd( 40.2097, 286.95, -34.3301, 0.36 ) }
    dend_60 { pt3dadd( 40.3838, 287.734, -34.4935, 1.8 ) }
    dend_60 { pt3dadd( 40.4866, 288.272, -34.6177, 2.64 ) }
    dend_60 { pt3dadd( 40.6705, 289.287, -34.8357, 1.56 ) }
    dend_60 { pt3dadd( 40.8058, 290.021, -34.9729, 0.36 ) }
    dend_60 { pt3dadd( 40.9627, 290.845, -35.1134, 0.48 ) }
    dend_60 { pt3dadd( 41.1604, 291.863, -35.2306, 0.48 ) }
    dend_60 { pt3dadd( 41.2248, 292.206, -35.2678, 0.48 ) }
    dend_60 { pt3dadd( 41.334, 292.721, -35.3223, 1.32 ) }
    dend_60 { pt3dadd( 41.4089, 292.992, -35.3376, 1.68 ) }
    dend_60 { pt3dadd( 41.5372, 293.351, -35.3339, 1.92 ) }
    dend_60 { pt3dadd( 41.8844, 294.268, -35.3082, 0.84 ) }
    dend_60 { pt3dadd( 42.184, 295.188, -35.2614, 0.48 ) }
    dend_60 { pt3dadd( 42.3986, 295.953, -35.197, 0.48 ) }
    dend_60 { pt3dadd( 42.495, 296.37, -35.1532, 0.48 ) }
    dend_60 { pt3dadd( 42.6606, 297.286, -35.049, 0.48 ) }
    dend_60 { pt3dadd( 42.7817, 298.18, -34.9083, 0.72 ) }
    dend_60 { pt3dadd( 42.8416, 298.775, -34.7976, 1.32 ) }
    dend_60 { pt3dadd( 42.8868, 299.362, -34.667, 0.84 ) }
    dend_60 { pt3dadd( 42.9087, 299.785, -34.5651, 0.36 ) }
    dend_60 { pt3dadd( 42.9422, 300.292, -34.4465, 0.36 ) }
    dend_60 { pt3dadd( 43.0187, 300.949, -34.3037, 0.84 ) }
    dend_60 { pt3dadd( 43.0924, 301.297, -34.2201, 0.36 ) }
    dend_60 { pt3dadd( 43.296, 302.026, -34.0281, 0.36 ) }
    dend_60 { pt3dadd( 43.5743, 302.863, -33.8104, 0.84 ) }
    dend_60 { pt3dadd( 43.7064, 303.215, -33.7162, 0.84 ) }
    dend_60 { pt3dadd( 43.8659, 303.615, -33.6247, 0.36 ) }
    dend_60 { pt3dadd( 44.2077, 304.457, -33.4804, 0.36 ) }
    dend_60 { pt3dadd( 44.3987, 304.964, -33.414, 1.2 ) }
    dend_60 { pt3dadd( 44.5953, 305.555, -33.3683, 2.16 ) }
    dend_60 { pt3dadd( 44.6456, 305.743, -33.3675, 2.28 ) }
    dend_60 { pt3dadd( 44.8825, 306.724, -33.3903, 0.6 ) }
    dend_60 { pt3dadd( 44.9836, 307.169, -33.403, 0.36 ) }
    dend_60 { pt3dadd( 45.1092, 307.696, -33.4175, 0.36 ) }
    dend_60 { pt3dadd( 45.1946, 307.998, -33.4278, 0.36 ) }
    dend_60 { pt3dadd( 45.3004, 308.321, -33.4297, 0.36 ) }
    dend_60 { pt3dadd( 45.6227, 309.196, -33.4124, 0.36 ) }
    dend_60 { pt3dadd( 45.8627, 309.801, -33.3901, 1.08 ) }
    dend_60 { pt3dadd( 46.1281, 310.448, -33.3705, 1.56 ) }
    dend_60 { pt3dadd( 46.4435, 311.196, -33.3599, 0.72 ) }
    dend_60 { pt3dadd( 46.5465, 311.46, -33.3615, 0.48 ) }
    dend_60 { pt3dadd( 46.7458, 312.053, -33.375, 0.48 ) }
    dend_60 { pt3dadd( 46.9259, 312.733, -33.4019, 1.68 ) }
    dend_60 { pt3dadd( 47.0453, 313.246, -33.4455, 2.52 ) }
    dend_60 { pt3dadd( 47.1759, 313.852, -33.5332, 1.92 ) }
    dend_60 { pt3dadd( 47.3591, 314.684, -33.692, 0.72 ) }
    dend_60 { pt3dadd( 47.4796, 315.169, -33.8097, 0.6 ) }
    dend_60 { pt3dadd( 47.68, 315.889, -34.0266, 0.6 ) }
    dend_60 { pt3dadd( 47.9759, 316.816, -34.3391, 0.6 ) }
    dend_60 { pt3dadd( 48.2674, 317.682, -34.6446, 1.44 ) }
    dend_60 { pt3dadd( 48.4015, 318.064, -34.7811, 1.92 ) }
    dend_60 { pt3dadd( 48.668, 318.809, -35.0279, 0.96 ) }
    dend_60 { pt3dadd( 48.8557, 319.347, -35.1817, 0.36 ) }
    dend_60 { pt3dadd( 49.0542, 319.971, -35.3003, 0.36 ) }
    dend_60 { pt3dadd( 49.2026, 320.492, -35.3411, 0.36 ) }
    dend_60 { pt3dadd( 49.3443, 320.994, -35.3353, 0.72 ) }
    dend_60 { pt3dadd( 49.5135, 321.612, -35.3691, 0.36 ) }
    dend_60 { pt3dadd( 49.6624, 322.138, -35.4248, 0.24 ) }
    dend_60 { pt3dadd( 49.923, 322.982, -35.5653, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_60 { pt3dadd( 49.9761, 323.142, -35.6056, 2.04 ) }
    dend_60 { pt3dadd( 50.2193, 323.816, -35.8112, 1.92 ) }
    dend_60 { pt3dadd( 50.768, 325.242, -36.3104, 0.48 ) }
    dend_60 { pt3dadd( 50.9973, 325.813, -36.5261, 0.48 ) }
    dend_60 { pt3dadd( 51.2276, 326.383, -36.7455, 0.72 ) }
    dend_60 { pt3dadd( 51.5449, 327.191, -37.0469, 0.84 ) }
    dend_60 { pt3dadd( 51.896, 328.164, -37.3814, 0.36 ) }
    dend_60 { pt3dadd( 52.0211, 328.545, -37.4937, 0.24 ) }
    dend_60 { pt3dadd( 52.1891, 329.135, -37.6126, 1.2 ) }
    dend_60 { pt3dadd( 52.231, 329.321, -37.6482, 1.68 ) }
    dend_60 { pt3dadd( 52.3423, 329.99, -37.765, 1.56 ) }
    dend_60 { pt3dadd( 52.4226, 330.68, -37.8672, 0.36 ) }
    dend_60 { pt3dadd( 52.4574, 331.19, -37.9276, 0.36 ) }
    dend_60 { pt3dadd( 52.5052, 332.15, -38.0106, 0.36 ) }
    dend_60 { pt3dadd( 52.5237, 332.58, -38.0398, 1.32 ) }
    dend_60 { pt3dadd( 52.5435, 333.017, -38.061, 1.8 ) }
    dend_60 { pt3dadd( 52.5636, 333.367, -38.0708, 1.68 ) }
    dend_60 { pt3dadd( 52.6163, 334.141, -38.0718, 0.48 ) }
    dend_60 { pt3dadd( 52.7021, 335.178, -38.0762, 0.48 ) }
    dend_60 { pt3dadd( 52.76, 335.777, -38.0804, 1.8 ) }
    dend_60 { pt3dadd( 52.8003, 336.29, -38.0828, 2.4 ) }
    dend_60 { pt3dadd( 52.8203, 336.648, -38.0681, 1.92 ) }
    dend_60 { pt3dadd( 52.8526, 337.498, -37.9779, 0.6 ) }
    dend_60 { pt3dadd( 52.8599, 337.732, -37.9331, 0.6 ) }
    dend_60 { pt3dadd( 52.8738, 338.483, -37.7425, 0.6 ) }
    dend_60 { pt3dadd( 52.8912, 339.188, -37.5361, 0.6 ) }
    dend_60 { pt3dadd( 52.9113, 340.156, -37.2561, 0.6 ) }
    dend_60 { pt3dadd( 52.927, 341.17, -36.9878, 0.6 ) }
    dend_60 { pt3dadd( 52.9412, 342.013, -36.7977, 1.56 ) }
    dend_60 { pt3dadd( 52.9505, 342.529, -36.7199, 2.04 ) }
    dend_60 { pt3dadd( 52.9601, 343.08, -36.6876, 1.68 ) }
    dend_60 { pt3dadd( 52.9763, 343.845, -36.7126, 0.84 ) }
    dend_60 { pt3dadd( 52.9778, 344.495, -36.7985, 0.48 ) }
    dend_60 { pt3dadd( 52.9382, 345.513, -36.9797, 0.48 ) }
    dend_60 { pt3dadd( 52.8795, 346.506, -37.1701, 0.6 ) }
    dend_60 { pt3dadd( 52.8258, 347.251, -37.2987, 1.32 ) }
    dend_60 { pt3dadd( 52.7756, 347.845, -37.386, 1.44 ) }
    dend_60 { pt3dadd( 52.7093, 348.575, -37.4677, 0.48 ) }
    dend_60 { pt3dadd( 52.5939, 349.926, -37.5899, 0.48 ) }
    dend_60 { pt3dadd( 52.5648, 350.36, -37.6222, 1.32 ) }
    dend_60 { pt3dadd( 52.5367, 351.052, -37.6553, 2.04 ) }
    dend_60 { pt3dadd( 52.5311, 351.574, -37.6799, 1.68 ) }
    dend_60 { pt3dadd( 52.5434, 352.3, -37.7224, 0.6 ) }
    dend_60 { pt3dadd( 52.5774, 353.034, -37.7767, 0.48 ) }
    dend_60 { pt3dadd( 52.6378, 353.822, -37.8548, 0.48 ) }
    dend_60 { pt3dadd( 52.6763, 354.332, -37.91, 0.48 ) }
    dend_60 { pt3dadd( 52.7342, 355.059, -37.9926, 0.72 ) }
    dend_60 { pt3dadd( 52.7756, 355.569, -38.0484, 0.72 ) }
    dend_60 { pt3dadd( 52.816, 355.981, -38.0873, 0.36 ) }
    dend_60 { pt3dadd( 52.8681, 356.584, -38.1378, 0.36 ) }
    dend_60 { pt3dadd( 52.931, 357.093, -38.1754, 1.8 ) }
    dend_60 { pt3dadd( 53.0329, 357.597, -38.2073, 2.4 ) }
    dend_60 { pt3dadd( 53.2041, 358.268, -38.2358, 2.4 ) }
    dend_60 { pt3dadd( 53.4252, 359.056, -38.2795, 0.48 ) }
    dend_60 { pt3dadd( 53.4786, 359.242, -38.2905, 0.48 ) }
    dend_60 { pt3dadd( 53.6698, 359.944, -38.3705, 0.48 ) }
    dend_60 { pt3dadd( 53.8368, 360.592, -38.4801, 0.48 ) }
    dend_60 { pt3dadd( 53.975, 361.268, -38.6417, 0.48 ) }
    dend_60 { pt3dadd( 54.0227, 361.66, -38.7562, 1.08 ) }
    dend_60 { pt3dadd( 54.021, 362.03, -38.8709, 1.92 ) }
    dend_60 { pt3dadd( 53.9609, 362.667, -39.0513, 2.16 ) }
    dend_60 { pt3dadd( 53.9076, 363.014, -39.133, 2.16 ) }
    dend_60 { pt3dadd( 53.7798, 363.826, -39.2905, 0.72 ) }
    dend_60 { pt3dadd( 53.7405, 364.202, -39.3406, 0.48 ) }
    dend_60 { pt3dadd( 53.7012, 364.942, -39.3919, 0.48 ) }
    dend_60 { pt3dadd( 53.7002, 365.635, -39.4158, 0.48 ) }
    dend_60 { pt3dadd( 53.7525, 366.685, -39.3918, 0.48 ) }
    dend_60 { pt3dadd( 53.7996, 367.118, -39.3726, 0.48 ) }
    dend_60 { pt3dadd( 53.9015, 367.737, -39.3278, 1.32 ) }
    dend_60 { pt3dadd( 54.0226, 368.331, -39.2824, 1.92 ) }
    dend_60 { pt3dadd( 54.1883, 369.032, -39.1971, 1.56 ) }
    dend_60 { pt3dadd( 54.3307, 369.629, -39.1006, 0.36 ) }
    dend_60 { pt3dadd( 54.5164, 370.407, -38.9354, 0.36 ) }
    dend_60 { pt3dadd( 54.6596, 371.0, -38.7943, 0.6 ) }
    dend_60 { pt3dadd( 54.803, 371.562, -38.6409, 0.6 ) }
    dend_60 { pt3dadd( 55.0167, 372.341, -38.4082, 0.24 ) }
    dend_60 { pt3dadd( 55.1641, 372.819, -38.2648, 0.24 ) }
    dend_60 { pt3dadd( 55.3974, 373.506, -38.0875, 1.92 ) }
    dend_60 { pt3dadd( 55.5291, 373.86, -37.997, 2.4 ) }
    dend_60 { pt3dadd( 55.8346, 374.628, -37.8255, 1.92 ) }
    dend_60 { pt3dadd( 56.1183, 375.361, -37.694, 0.48 ) }
    dend_60 { pt3dadd( 56.3668, 376.052, -37.6033, 0.48 ) }
    dend_60 { pt3dadd( 56.6368, 376.897, -37.5041, 0.48 ) }
    dend_60 { pt3dadd( 56.8441, 377.667, -37.431, 1.44 ) }
    dend_60 { pt3dadd( 57.0433, 378.513, -37.3602, 2.04 ) }
    dend_60 { pt3dadd( 57.2183, 379.357, -37.3051, 1.08 ) }
    dend_60 { pt3dadd( 57.3401, 379.956, -37.2683, 0.6 ) }
    dend_60 { pt3dadd( 57.4812, 380.63, -37.2379, 0.48 ) }
    dend_60 { pt3dadd( 57.6674, 381.382, -37.2258, 0.48 ) }
    dend_60 { pt3dadd( 57.7949, 381.825, -37.2362, 0.48 ) }
    dend_60 { pt3dadd( 57.9336, 382.265, -37.2488, 0.96 ) }
    dend_60 { pt3dadd( 58.1424, 382.91, -37.2691, 1.44 ) }
    dend_60 { pt3dadd( 58.3707, 383.645, -37.2948, 0.84 ) }
    dend_60 { pt3dadd( 58.5257, 384.178, -37.3135, 0.48 ) }
    dend_60 { pt3dadd( 58.7634, 385.1, -37.3411, 0.48 ) }
    dend_60 { pt3dadd( 58.9041, 385.779, -37.3453, 0.6 ) }
    dend_60 { pt3dadd( 59.0227, 386.55, -37.3334, 0.72 ) }
    dend_60 { pt3dadd( 59.0645, 386.984, -37.3178, 0.12 ) }
    dend_60 { pt3dadd( 59.0754, 387.156, -37.2943, 0.12 ) }
    dend_60 { pt3dadd( 59.101, 387.75, -37.1699, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_60 { pt3dadd( 59.127, 388.384, -37.008, 2.28 ) }
    dend_60 { pt3dadd( 59.1472, 388.879, -36.8715, 2.52 ) }
    dend_60 { pt3dadd( 59.1613, 389.296, -36.7523, 2.52 ) }
    dend_60 { pt3dadd( 59.1919, 390.76, -36.3544, 0.72 ) }
    dend_60 { pt3dadd( 59.2061, 392.033, -36.0959, 0.72 ) }
    dend_60 { pt3dadd( 59.2178, 392.715, -35.9685, 0.96 ) }
    dend_60 { pt3dadd( 59.2306, 393.144, -35.8886, 0.6 ) }
    dend_60 { pt3dadd( 59.2493, 393.573, -35.8009, 0.48 ) }
    dend_60 { pt3dadd( 59.2922, 394.507, -35.6203, 0.48 ) }
    dend_60 { pt3dadd( 59.3695, 395.833, -35.4178, 0.48 ) }
    dend_60 { pt3dadd( 59.4585, 396.801, -35.2643, 0.48 ) }
    dend_60 { pt3dadd( 59.5647, 397.616, -35.1441, 1.92 ) }
    dend_60 { pt3dadd( 59.7345, 398.656, -35.0344, 0.96 ) }
    dend_60 { pt3dadd( 59.9107, 399.529, -34.9763, 0.48 ) }
    dend_60 { pt3dadd( 60.2847, 401.125, -34.9502, 0.48 ) }
    dend_60 { pt3dadd( 60.5599, 402.184, -34.9746, 0.48 ) }
    dend_60 { pt3dadd( 60.8286, 403.18, -35.0712, 0.48 ) }
    dend_60 { pt3dadd( 61.0975, 404.103, -35.2073, 1.2 ) }
    dend_60 { pt3dadd( 61.282, 404.677, -35.3099, 1.92 ) }
    dend_60 { pt3dadd( 61.5843, 405.539, -35.4757, 1.44 ) }
    dend_60 { pt3dadd( 61.7744, 406.099, -35.5839, 1.08 ) }
    dend_60 { pt3dadd( 61.8977, 406.511, -35.6527, 0.48 ) }
    dend_60 { pt3dadd( 62.0495, 407.101, -35.7274, 0.96 ) }
    dend_60 { pt3dadd( 62.1894, 407.709, -35.7735, 0.96 ) }
    dend_60 { pt3dadd( 62.2834, 408.161, -35.802, 0.48 ) }
    dend_60 { pt3dadd( 62.5751, 409.517, -35.8492, 0.48 ) }
    dend_60 { pt3dadd( 62.6883, 410.033, -35.8639, 0.6 ) }
    dend_60 { pt3dadd( 62.7642, 410.365, -35.8676, 0.48 ) }
    dend_60 { pt3dadd( 62.944, 411.138, -35.8504, 0.48 ) }
    dend_60 { pt3dadd( 63.1887, 412.239, -35.7892, 0.48 ) }
    dend_60 { pt3dadd( 63.3167, 412.883, -35.7389, 0.96 ) }
    dend_60 { pt3dadd( 63.4072, 413.394, -35.6847, 1.2 ) }
    dend_60 { pt3dadd( 63.495, 413.99, -35.6128, 0.6 ) }
    dend_60 { pt3dadd( 63.5404, 414.461, -35.5624, 0.36 ) }
    dend_60 { pt3dadd( 63.5769, 415.571, -35.4583, 0.36 ) }
    dend_60 { pt3dadd( 63.5491, 416.297, -35.4089, 0.72 ) }
    dend_60 { pt3dadd( 63.4935, 416.861, -35.3964, 1.44 ) }
    dend_60 { pt3dadd( 63.417, 417.471, -35.3918, 2.4 ) }
    dend_60 { pt3dadd( 63.2915, 418.427, -35.3988, 1.56 ) }
    dend_60 { pt3dadd( 63.2218, 418.972, -35.4034, 0.48 ) }
    dend_60 { pt3dadd( 63.0628, 420.364, -35.4018, 0.48 ) }
    dend_60 { pt3dadd( 63.0191, 421.043, -35.3681, 0.6 ) }
    dend_60 { pt3dadd( 63.0171, 421.418, -35.3273, 0.48 ) }
    dend_60 { pt3dadd( 63.0748, 422.191, -35.1745, 0.48 ) }
    dend_60 { pt3dadd( 63.1662, 422.666, -35.0452, 0.48 ) }
    dend_60 { pt3dadd( 63.3308, 423.194, -34.8651, 0.84 ) }
    dend_60 { pt3dadd( 63.7648, 424.232, -34.4467, 0.96 ) }
    dend_60 { pt3dadd( 64.0913, 424.907, -34.1644, 0.48 ) }
    dend_60 { pt3dadd( 64.3659, 425.428, -33.9425, 0.36 ) }
    dend_60 { pt3dadd( 64.8467, 426.291, -33.5804, 0.36 ) }
    dend_60 { pt3dadd( 65.2671, 427.047, -33.2961, 0.96 ) }
    dend_60 { pt3dadd( 65.3526, 427.202, -33.236, 1.08 ) }
    dend_60 { pt3dadd( 65.63, 427.722, -33.035, 0.48 ) }
    dend_60 { pt3dadd( 65.9731, 428.384, -32.7251, 0.48 ) }
    dend_60 { pt3dadd( 66.2823, 429.006, -32.3944, 0.48 ) }
    dend_60 { pt3dadd( 66.5424, 429.553, -32.0792, 0.48 ) }
    dend_60 { pt3dadd( 66.9014, 430.352, -31.6606, 0.48 ) }
    dend_60 { pt3dadd( 67.2977, 431.286, -31.2161, 0.48 ) }
    dend_60 { pt3dadd( 67.7322, 432.437, -30.7352, 1.68 ) }
    dend_60 { pt3dadd( 67.8759, 432.848, -30.5893, 2.4 ) }
    dend_60 { pt3dadd( 67.9927, 433.202, -30.4832, 2.64 ) }
    dend_60 { pt3dadd( 68.3121, 434.312, -30.2833, 0.24 ) }
    dend_60 { pt3dadd( 68.4662, 435.16, -30.2639, 0.24 ) }
    dend_60 { pt3dadd( 68.5172, 435.951, -30.3242, 0.24 ) }
    dend_60 { pt3dadd( 68.5179, 436.037, -30.336, 0.72 ) }
    dend_60 { pt3dadd( 68.5048, 436.639, -30.4206, 0.84 ) }
    dend_60 { pt3dadd( 68.4618, 437.426, -30.5327, 0.24 ) }
    dend_60 { pt3dadd( 68.3391, 438.692, -30.7138, 0.24 ) }
    dend_60 { pt3dadd( 68.2202, 439.732, -30.8846, 0.24 ) }
    dend_60 { pt3dadd( 68.1895, 439.987, -30.9294, 0.48 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 70/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 8.31271, 120.027, -21.1583, 0.12 ) }
    dend_59 { pt3dadd( 7.7771, 120.394, -22.4431, 0.12 ) }
    dend_59 { pt3dadd( 7.67635, 120.462, -22.6762, 0.12 ) }
    dend_59 { pt3dadd( 7.342, 120.687, -23.3817, 1.2 ) }
    dend_59 { pt3dadd( 7.02332, 120.882, -24.0189, 1.44 ) }
    dend_59 { pt3dadd( 5.19489, 121.946, -27.4285, 0.36 ) }
    dend_59 { pt3dadd( 4.7929, 122.196, -28.1408, 0.36 ) }
    dend_59 { pt3dadd( 4.57391, 122.35, -28.5457, 1.8 ) }
    dend_59 { pt3dadd( 4.2582, 122.595, -29.104, 2.16 ) }
    dend_59 { pt3dadd( 2.99273, 123.707, -31.2126, 0.36 ) }
    dend_59 { pt3dadd( 2.56565, 124.127, -31.9197, 0.36 ) }
    dend_59 { pt3dadd( 2.10053, 124.637, -32.5937, 1.32 ) }
    dend_59 { pt3dadd( 1.68364, 125.152, -33.3202, 0.24 ) }
    dend_59 { pt3dadd( 1.45747, 125.476, -33.775, 0.24 ) }
    dend_59 { pt3dadd( 0.898199, 126.358, -34.9456, 0.6 ) }
    dend_59 { pt3dadd( 0.190728, 127.562, -36.3528, 1.68 ) }
    dend_59 { pt3dadd( -0.0304826, 127.923, -36.7559, 2.04 ) }
    dend_59 { pt3dadd( -1.06735, 129.464, -38.4847, 0.36 ) }
    dend_59 { pt3dadd( -1.46561, 130.032, -39.062, 0.36 ) }
    dend_59 { pt3dadd( -1.94046, 130.712, -39.6475, 1.56 ) }
    dend_59 { pt3dadd( -2.38405, 131.377, -40.1081, 0.36 ) }
    dend_59 { pt3dadd( -2.89022, 132.144, -40.5283, 0.6 ) }
    dend_59 { pt3dadd( -3.19536, 132.602, -40.7619, 0.12 ) }
    dend_59 { pt3dadd( -3.67191, 133.32, -41.0451, 0.12 ) }
    dend_59 { pt3dadd( -3.90358, 133.706, -41.2173, 0.48 ) }
    dend_59 { pt3dadd( -4.50794, 134.948, -41.8725, 0.12 ) }
    dend_59 { pt3dadd( -4.68159, 135.365, -42.1018, 0.12 ) }
    dend_59 { pt3dadd( -4.81334, 135.728, -42.2933, 0.12 ) }
    dend_59 { pt3dadd( -4.98862, 136.244, -42.5421, 1.68 ) }
    dend_59 { pt3dadd( -5.17836, 136.896, -42.8142, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_59 { pt3dadd( -5.51191, 138.281, -43.2894, 0.24 ) }
    dend_59 { pt3dadd( -5.64001, 138.885, -43.4464, 0.24 ) }
    dend_59 { pt3dadd( -5.73181, 139.353, -43.5784, 0.48 ) }
    dend_59 { pt3dadd( -5.82804, 139.875, -43.7569, 0.12 ) }
    dend_59 { pt3dadd( -6.09162, 141.305, -44.2745, 0.12 ) }
    dend_59 { pt3dadd( -6.32904, 142.606, -44.7426, 0.12 ) }
    dend_59 { pt3dadd( -6.48244, 143.45, -45.0279, 0.12 ) }
    dend_59 { pt3dadd( -6.7035, 144.679, -45.4255, 1.68 ) }
    dend_59 { pt3dadd( -6.99229, 146.173, -45.8708, 0.12 ) }
    dend_59 { pt3dadd( -7.23311, 147.352, -46.1871, 0.12 ) }
    dend_59 { pt3dadd( -7.35735, 147.934, -46.328, 1.32 ) }
    dend_59 { pt3dadd( -7.49748, 148.661, -46.4521, 1.68 ) }
    dend_59 { pt3dadd( -7.65979, 149.664, -46.5512, 0.12 ) }
    dend_59 { pt3dadd( -7.77733, 150.618, -46.5524, 0.12 ) }
    dend_59 { pt3dadd( -7.79788, 150.978, -46.5337, 0.36 ) }
    dend_59 { pt3dadd( -7.80156, 151.465, -46.514, 0.12 ) }
    dend_59 { pt3dadd( -7.77314, 152.663, -46.479, 0.12 ) }
    dend_59 { pt3dadd( -7.73569, 153.385, -46.4682, 1.56 ) }
    dend_59 { pt3dadd( -7.66037, 154.462, -46.4683, 0.12 ) }
    dend_59 { pt3dadd( -7.49979, 156.395, -46.47, 0.12 ) }
    dend_59 { pt3dadd( -7.46944, 156.774, -46.4711, 0.48 ) }
    dend_59 { pt3dadd( -7.44384, 157.124, -46.4727, 0.12 ) }
    dend_59 { pt3dadd( -7.3481, 158.435, -46.4923, 0.12 ) }
    dend_59 { pt3dadd( -7.28597, 159.265, -46.5126, 1.2 ) }
    dend_59 { pt3dadd( -7.24073, 159.864, -46.535, 1.2 ) }
    dend_59 { pt3dadd( -7.19531, 160.469, -46.563, 0.12 ) }
    dend_59 { pt3dadd( -7.0932, 161.415, -46.6101, 0.12 ) }
    dend_59 { pt3dadd( -7.00893, 162.048, -46.6432, 1.32 ) }
    dend_59 { pt3dadd( -6.91436, 162.641, -46.6751, 1.68 ) }
    dend_59 { pt3dadd( -6.67372, 164.065, -46.7479, 0.12 ) }
    dend_59 { pt3dadd( -6.48994, 165.12, -46.8017, 0.12 ) }
    dend_59 { pt3dadd( -6.31235, 166.171, -46.8501, 0.12 ) }
    dend_59 { pt3dadd( -6.25198, 166.546, -46.8655, 0.12 ) }
    dend_59 { pt3dadd( -6.15146, 167.261, -46.8862, 0.12 ) }
    dend_59 { pt3dadd( -6.09292, 167.754, -46.8983, 1.2 ) }
    dend_59 { pt3dadd( -6.00843, 168.602, -46.9144, 0.12 ) }
    dend_59 { pt3dadd( -5.91347, 169.671, -46.9447, 0.12 ) }
    dend_59 { pt3dadd( -5.88613, 170.04, -46.9572, 0.36 ) }
    dend_59 { pt3dadd( -5.85317, 170.424, -46.9714, 0.12 ) }
    dend_59 { pt3dadd( -5.72728, 171.616, -47.0176, 0.12 ) }
    dend_59 { pt3dadd( -5.65746, 172.14, -47.0379, 0.96 ) }
    dend_59 { pt3dadd( -5.57258, 172.672, -47.055, 0.12 ) }
    dend_59 { pt3dadd( -5.34529, 173.849, -47.0202, 0.12 ) }
    dend_59 { pt3dadd( -5.22494, 174.439, -46.9923, 0.84 ) }
    dend_59 { pt3dadd( -5.10036, 175.029, -46.9554, 0.36 ) }
    dend_59 { pt3dadd( -5.01937, 175.399, -46.9259, 0.12 ) }
    dend_59 { pt3dadd( -4.48153, 177.743, -46.7416, 0.12 ) }
    dend_59 { pt3dadd( -4.1684, 179.009, -46.6441, 0.24 ) }
    dend_59 { pt3dadd( -4.03408, 179.524, -46.6117, 0.48 ) }
    dend_59 { pt3dadd( -3.93884, 179.892, -46.5956, 0.12 ) }
    dend_59 { pt3dadd( -3.67844, 180.992, -46.587, 0.12 ) }
    dend_59 { pt3dadd( -3.54644, 181.724, -46.6145, 0.84 ) }
    dend_59 { pt3dadd( -3.50427, 182.108, -46.6568, 0.12 ) }
    dend_59 { pt3dadd( -3.38644, 183.29, -46.8396, 0.12 ) }
    dend_59 { pt3dadd( -3.37526, 183.47, -46.8632, 0.6 ) }
    dend_59 { pt3dadd( -3.40585, 184.045, -46.9761, 0.12 ) }
    dend_59 { pt3dadd( -3.53483, 184.773, -47.1566, 0.12 ) }
    dend_59 { pt3dadd( -3.70374, 185.459, -47.3409, 1.08 ) }
    dend_59 { pt3dadd( -3.93289, 186.241, -47.6089, 1.32 ) }
    dend_59 { pt3dadd( -4.16935, 186.88, -47.8664, 1.68 ) }
    dend_59 { pt3dadd( -4.6394, 188.055, -48.3478, 0.12 ) }
    dend_59 { pt3dadd( -4.94978, 188.755, -48.6807, 0.12 ) }
    dend_59 { pt3dadd( -5.10089, 189.043, -48.8304, 0.48 ) }
    dend_59 { pt3dadd( -5.41884, 189.566, -49.0944, 0.12 ) }
    dend_59 { pt3dadd( -5.89004, 190.289, -49.4256, 0.12 ) }
    dend_59 { pt3dadd( -6.17144, 190.714, -49.5929, 0.48 ) }
    dend_59 { pt3dadd( -6.70665, 191.453, -49.8315, 0.12 ) }
    dend_59 { pt3dadd( -7.28407, 192.152, -50.0338, 0.12 ) }
    dend_59 { pt3dadd( -7.85505, 192.828, -50.1842, 0.12 ) }
    dend_59 { pt3dadd( -8.12833, 193.155, -50.231, 0.84 ) }
    dend_59 { pt3dadd( -8.51163, 193.612, -50.2838, 0.84 ) }
    dend_59 { pt3dadd( -8.75244, 193.881, -50.3002, 0.12 ) }
    dend_59 { pt3dadd( -9.39037, 194.545, -50.2865, 0.12 ) }
    dend_59 { pt3dadd( -9.82174, 194.956, -50.2822, 0.12 ) }
    dend_59 { pt3dadd( -9.91121, 195.033, -50.2787, 0.48 ) }
    dend_59 { pt3dadd( -10.2668, 195.324, -50.2534, 0.12 ) }
    dend_59 { pt3dadd( -10.6884, 195.643, -50.2164, 0.12 ) }
    dend_59 { pt3dadd( -11.2577, 196.011, -50.1271, 1.32 ) }
    dend_59 { pt3dadd( -11.49, 196.126, -50.0784, 1.56 ) }
    dend_59 { pt3dadd( -12.2996, 196.455, -49.8819, 0.12 ) }
    dend_59 { pt3dadd( -12.8484, 196.663, -49.7455, 0.12 ) }
    dend_59 { pt3dadd( -13.226, 196.791, -49.6007, 0.48 ) }
    dend_59 { pt3dadd( -13.7444, 196.948, -49.3495, 0.12 ) }
    dend_59 { pt3dadd( -14.0457, 197.049, -49.1956, 0.12 ) }
    dend_59 { pt3dadd( -14.4014, 197.184, -49.0206, 0.12 ) }
    dend_59 { pt3dadd( -14.7471, 197.34, -48.827, 0.72 ) }
    dend_59 { pt3dadd( -15.814, 197.925, -48.212, 0.12 ) }
    dend_59 { pt3dadd( -16.2725, 198.221, -47.9581, 0.12 ) }
    dend_59 { pt3dadd( -16.9782, 198.724, -47.5544, 1.8 ) }
    dend_59 { pt3dadd( -17.4405, 199.077, -47.2651, 2.04 ) }
    dend_59 { pt3dadd( -18.5207, 199.931, -46.5692, 0.24 ) }
    dend_59 { pt3dadd( -18.9278, 200.268, -46.3085, 0.24 ) }
    dend_59 { pt3dadd( -19.448, 200.729, -46.006, 0.24 ) }
    dend_59 { pt3dadd( -20.2031, 201.45, -45.5602, 0.24 ) }
    dend_59 { pt3dadd( -20.6754, 201.919, -45.2754, 0.96 ) }
    dend_59 { pt3dadd( -20.9495, 202.202, -45.124, 1.32 ) }
    dend_59 { pt3dadd( -21.397, 202.68, -44.9127, 0.12 ) }
    dend_59 { pt3dadd( -21.8876, 203.205, -44.6878, 0.12 ) }
    dend_59 { pt3dadd( -22.607, 203.982, -44.4076, 0.12 ) }
    dend_59 { pt3dadd( -22.8751, 204.303, -44.3342, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_59 { pt3dadd( -23.0926, 204.607, -44.2849, 0.96 ) }
    dend_59 { pt3dadd( -23.35, 205.012, -44.2311, 0.24 ) }
    dend_59 { pt3dadd( -23.6504, 205.53, -44.1889, 0.24 ) }
    dend_59 { pt3dadd( -23.8351, 205.882, -44.1751, 0.12 ) }
    dend_59 { pt3dadd( -24.3052, 206.87, -44.1773, 0.12 ) }
    dend_59 { pt3dadd( -24.6483, 207.633, -44.2058, 0.12 ) }
    dend_59 { pt3dadd( -24.8486, 208.1, -44.2309, 0.96 ) }
    dend_59 { pt3dadd( -25.0301, 208.5, -44.3048, 0.12 ) }
    dend_59 { pt3dadd( -25.3062, 209.049, -44.4638, 0.12 ) }
    dend_59 { pt3dadd( -25.4319, 209.27, -44.5438, 0.12 ) }
    dend_59 { pt3dadd( -25.5554, 209.474, -44.6428, 1.2 ) }
    dend_59 { pt3dadd( -25.7541, 209.809, -44.8235, 1.2 ) }
    dend_59 { pt3dadd( -26.4588, 211.104, -45.5095, 0.12 ) }
    dend_59 { pt3dadd( -26.7274, 211.62, -45.8367, 0.12 ) }
    dend_59 { pt3dadd( -26.9719, 212.153, -46.1926, 0.12 ) }
    dend_59 { pt3dadd( -27.1934, 212.685, -46.5469, 0.12 ) }
    dend_59 { pt3dadd( -27.3338, 213.065, -46.8086, 0.72 ) }
    dend_59 { pt3dadd( -27.4847, 213.498, -47.0807, 0.84 ) }
    dend_59 { pt3dadd( -27.9178, 214.866, -47.816, 0.12 ) }
    dend_59 { pt3dadd( -28.1942, 215.751, -48.3379, 0.12 ) }
    dend_59 { pt3dadd( -28.2412, 215.885, -48.4159, 0.24 ) }
    dend_59 { pt3dadd( -28.4699, 216.439, -48.7367, 0.12 ) }
    dend_59 { pt3dadd( -28.9804, 217.591, -49.4483, 0.12 ) }
    dend_59 { pt3dadd( -29.0723, 217.778, -49.5634, 1.2 ) }
    dend_59 { pt3dadd( -29.5434, 218.627, -50.08, 0.12 ) }
    dend_59 { pt3dadd( -30.0107, 219.355, -50.6149, 0.12 ) }
    dend_59 { pt3dadd( -30.3577, 219.891, -51.0346, 0.72 ) }
    dend_59 { pt3dadd( -30.7231, 220.395, -51.5009, 0.12 ) }
    dend_59 { pt3dadd( -30.9905, 220.698, -51.8495, 0.12 ) }
    dend_59 { pt3dadd( -31.4696, 221.148, -52.4167, 0.12 ) }
    dend_59 { pt3dadd( -31.8505, 221.461, -52.8443, 1.08 ) }
    dend_59 { pt3dadd( -32.1332, 221.666, -53.1763, 1.08 ) }
    dend_59 { pt3dadd( -32.8409, 222.127, -53.9584, 0.12 ) }
    dend_59 { pt3dadd( -33.3834, 222.432, -54.5115, 0.12 ) }
    dend_59 { pt3dadd( -33.5365, 222.509, -54.6731, 0.36 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 15.3074, 131.41, -91.8818, 0.12 ) }
    dend_57 { pt3dadd( 15.9275, 132.691, -92.3456, 0.12 ) }
    dend_57 { pt3dadd( 16.6195, 134.164, -92.9003, 2.64 ) }
    dend_57 { pt3dadd( 16.8824, 134.76, -93.1363, 2.16 ) }
    dend_57 { pt3dadd( 17.3825, 136.052, -93.6551, 0.24 ) }
    dend_57 { pt3dadd( 17.7902, 137.206, -94.0918, 0.24 ) }
    dend_57 { pt3dadd( 18.0757, 138.078, -94.4046, 0.24 ) }
    dend_57 { pt3dadd( 18.446, 139.41, -94.8, 0.96 ) }
    dend_57 { pt3dadd( 18.6584, 140.321, -95.0479, 0.12 ) }
    dend_57 { pt3dadd( 18.8855, 141.457, -95.2667, 0.12 ) }
    dend_57 { pt3dadd( 19.0449, 142.354, -95.3526, 0.24 ) }
    dend_57 { pt3dadd( 19.1322, 142.892, -95.3618, 0.24 ) }
    dend_57 { pt3dadd( 19.3169, 144.016, -95.2946, 1.68 ) }
    dend_57 { pt3dadd( 19.4584, 144.872, -95.2232, 2.52 ) }
    dend_57 { pt3dadd( 19.7275, 146.296, -95.1511, 1.56 ) }
    dend_57 { pt3dadd( 19.8426, 146.898, -95.1504, 0.48 ) }
    dend_57 { pt3dadd( 20.161, 148.816, -95.2653, 0.48 ) }
    dend_57 { pt3dadd( 20.3222, 149.91, -95.3811, 1.32 ) }
    dend_57 { pt3dadd( 20.4824, 151.167, -95.6102, 0.96 ) }
    dend_57 { pt3dadd( 20.5943, 152.125, -95.8444, 0.12 ) }
    dend_57 { pt3dadd( 20.6986, 153.077, -96.1374, 0.12 ) }
    dend_57 { pt3dadd( 20.8223, 154.25, -96.5223, 1.8 ) }
    dend_57 { pt3dadd( 20.9071, 155.051, -96.7929, 1.92 ) }
    dend_57 { pt3dadd( 21.0308, 156.268, -97.1515, 0.12 ) }
    dend_57 { pt3dadd( 21.1274, 157.249, -97.3376, 0.12 ) }
    dend_57 { pt3dadd( 21.1507, 157.539, -97.3737, 0.48 ) }
    dend_57 { pt3dadd( 21.2023, 158.186, -97.4288, 0.12 ) }
    dend_57 { pt3dadd( 21.2514, 158.881, -97.453, 0.12 ) }
    dend_57 { pt3dadd( 21.2851, 159.984, -97.4219, 0.72 ) }
    dend_57 { pt3dadd( 21.2852, 160.912, -97.333, 0.12 ) }
    dend_57 { pt3dadd( 21.2493, 161.914, -97.241, 0.12 ) }
    dend_57 { pt3dadd( 21.2307, 162.331, -97.2064, 0.48 ) }
    dend_57 { pt3dadd( 21.2091, 162.732, -97.1821, 0.12 ) }
    dend_57 { pt3dadd( 21.1498, 163.738, -97.1745, 0.12 ) }
    dend_57 { pt3dadd( 21.1234, 164.167, -97.1972, 1.2 ) }
    dend_57 { pt3dadd( 21.0799, 164.956, -97.265, 1.32 ) }
    dend_57 { pt3dadd( 21.073, 165.791, -97.3109, 0.84 ) }
    dend_57 { pt3dadd( 21.0808, 166.162, -97.3207, 0.12 ) }
    dend_57 { pt3dadd( 21.1154, 166.998, -97.3128, 0.12 ) }
    dend_57 { pt3dadd( 21.1402, 167.275, -97.2992, 0.6 ) }
    dend_57 { pt3dadd( 21.217, 167.858, -97.2593, 0.12 ) }
    dend_57 { pt3dadd( 21.4481, 169.146, -97.1438, 0.12 ) }
    dend_57 { pt3dadd( 21.5675, 169.694, -97.0946, 0.6 ) }
    dend_57 { pt3dadd( 21.6797, 170.132, -97.124, 0.12 ) }
    dend_57 { pt3dadd( 21.8779, 170.791, -97.239, 0.12 ) }
    dend_57 { pt3dadd( 22.2079, 171.902, -97.5077, 1.56 ) }
    dend_57 { pt3dadd( 22.3228, 172.309, -97.6277, 2.04 ) }
    dend_57 { pt3dadd( 22.5481, 173.159, -97.9035, 1.68 ) }
    dend_57 { pt3dadd( 23.2148, 175.548, -98.7738, 0.12 ) }
    dend_57 { pt3dadd( 23.536, 176.685, -99.2461, 0.12 ) }
    dend_57 { pt3dadd( 23.7313, 177.415, -99.5945, 0.12 ) }
    dend_57 { pt3dadd( 23.8789, 178.014, -99.9099, 1.08 ) }
    dend_57 { pt3dadd( 23.9873, 178.482, -100.163, 1.56 ) }
    dend_57 { pt3dadd( 24.2444, 179.6, -100.836, 0.12 ) }
    dend_57 { pt3dadd( 24.5939, 180.965, -101.671, 0.12 ) }
    dend_57 { pt3dadd( 24.8654, 181.813, -102.295, 0.48 ) }
    dend_57 { pt3dadd( 25.1809, 182.623, -102.985, 0.48 ) }
    dend_57 { pt3dadd( 25.3664, 183.022, -103.355, 0.48 ) }
    dend_57 { pt3dadd( 25.9049, 184.03, -104.439, 1.44 ) }
    dend_57 { pt3dadd( 26.1554, 184.456, -104.916, 1.92 ) }
    dend_57 { pt3dadd( 26.5908, 185.085, -105.629, 1.44 ) }
    dend_57 { pt3dadd( 27.1839, 185.836, -106.543, 0.48 ) }
    dend_57 { pt3dadd( 27.9254, 186.71, -107.637, 0.36 ) }
    dend_57 { pt3dadd( 28.8923, 187.796, -108.992, 0.12 ) }
    dend_57 { pt3dadd( 29.4548, 188.411, -109.718, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_57 { pt3dadd( 29.8994, 188.893, -110.291, 1.2 ) }
    dend_57 { pt3dadd( 31.0798, 190.157, -111.691, 0.12 ) }
    dend_57 { pt3dadd( 31.4629, 190.535, -112.101, 0.12 ) }
    dend_57 { pt3dadd( 31.7145, 190.759, -112.346, 0.6 ) }
    dend_57 { pt3dadd( 32.0355, 191.035, -112.602, 0.6 ) }
    dend_57 { pt3dadd( 32.6786, 191.575, -113.127, 0.36 ) }
    dend_57 { pt3dadd( 33.1296, 191.957, -113.456, 0.36 ) }
    dend_57 { pt3dadd( 33.9106, 192.636, -113.888, 0.12 ) }
    dend_57 { pt3dadd( 34.3905, 193.073, -114.113, 0.12 ) }
    dend_57 { pt3dadd( 35.1481, 193.805, -114.426, 0.12 ) }
    dend_57 { pt3dadd( 36.1098, 194.785, -114.825, 1.56 ) }
    dend_57 { pt3dadd( 36.723, 195.434, -115.06, 2.16 ) }
    dend_57 { pt3dadd( 37.6057, 196.438, -115.401, 0.24 ) }
    dend_57 { pt3dadd( 38.7724, 197.903, -115.95, 0.24 ) }
    dend_57 { pt3dadd( 39.2361, 198.576, -116.228, 0.12 ) }
    dend_57 { pt3dadd( 39.9927, 199.809, -116.768, 1.68 ) }
    dend_57 { pt3dadd( 40.205, 200.214, -116.967, 2.28 ) }
    dend_57 { pt3dadd( 40.4079, 200.68, -117.226, 2.28 ) }
    dend_57 { pt3dadd( 41.022, 202.389, -118.349, 0.12 ) }
    dend_57 { pt3dadd( 41.3282, 203.493, -119.151, 0.12 ) }
    dend_57 { pt3dadd( 41.4004, 203.828, -119.403, 0.6 ) }
    dend_57 { pt3dadd( 41.5754, 204.984, -120.349, 0.24 ) }
    dend_57 { pt3dadd( 41.6312, 205.594, -120.907, 0.24 ) }
    dend_57 { pt3dadd( 41.685, 206.362, -121.636, 0.24 ) }
    dend_57 { pt3dadd( 41.6959, 206.889, -122.143, 0.96 ) }
    dend_57 { pt3dadd( 41.6767, 207.595, -122.872, 1.44 ) }
    dend_57 { pt3dadd( 41.5877, 208.877, -124.189, 0.12 ) }
    dend_57 { pt3dadd( 41.4613, 210.092, -125.312, 0.12 ) }
    dend_57 { pt3dadd( 41.401, 210.604, -125.756, 0.12 ) }
    dend_57 { pt3dadd( 41.3764, 210.773, -125.881, 0.48 ) }
    dend_57 { pt3dadd( 41.3273, 211.136, -126.121, 0.48 ) }
    dend_57 { pt3dadd( 41.3049, 211.306, -126.215, 0.48 ) }
    dend_57 { pt3dadd( 41.1587, 212.347, -126.645, 0.48 ) }
    dend_57 { pt3dadd( 40.9971, 213.486, -127.058, 1.32 ) }
    dend_57 { pt3dadd( 40.9154, 214.073, -127.269, 1.8 ) }
    dend_57 { pt3dadd( 40.8337, 214.961, -127.562, 0.96 ) }
    dend_57 { pt3dadd( 40.7813, 215.778, -127.797, 0.12 ) }
    dend_57 { pt3dadd( 40.7302, 216.98, -128.133, 0.12 ) }
    dend_57 { pt3dadd( 40.7065, 217.657, -128.305, 1.2 ) }
    dend_57 { pt3dadd( 40.7189, 218.197, -128.441, 1.56 ) }
    dend_57 { pt3dadd( 40.7896, 218.94, -128.692, 0.12 ) }
    dend_57 { pt3dadd( 40.9536, 220.117, -129.141, 0.12 ) }
    dend_57 { pt3dadd( 41.1596, 221.183, -129.587, 0.12 ) }
    dend_57 { pt3dadd( 41.4417, 222.232, -130.189, 0.12 ) }
    dend_57 { pt3dadd( 41.9639, 223.936, -131.317, 0.12 ) }
    dend_57 { pt3dadd( 42.4424, 225.34, -132.4, 0.12 ) }
    dend_57 { pt3dadd( 42.6411, 225.884, -132.849, 0.84 ) }
    dend_57 { pt3dadd( 42.7828, 226.252, -133.161, 0.96 ) }
    dend_57 { pt3dadd( 43.4748, 228.111, -134.732, 0.12 ) }
    dend_57 { pt3dadd( 43.741, 228.921, -135.414, 0.12 ) }
    dend_57 { pt3dadd( 43.8834, 229.747, -136.007, 0.12 ) }
    dend_57 { pt3dadd( 43.9507, 230.614, -136.529, 0.12 ) }
    dend_57 { pt3dadd( 43.962, 231.366, -136.98, 0.36 ) }
    dend_57 { pt3dadd( 43.9512, 231.491, -137.04, 0.12 ) }
    dend_57 { pt3dadd( 43.7701, 232.091, -137.073, 0.12 ) }
    dend_57 { pt3dadd( 43.4561, 232.71, -137.052, 0.48 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 56/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 15.3074, 131.41, -91.8818, 0.12 ) }
    dend_56 { pt3dadd( 13.7421, 132.903, -97.3096, 0.12 ) }
    dend_56 { pt3dadd( 13.3947, 133.238, -98.3087, 0.12 ) }
    dend_56 { pt3dadd( 12.8453, 133.725, -99.498, 0.12 ) }
    dend_56 { pt3dadd( 12.4463, 134.069, -100.221, 0.84 ) }
    dend_56 { pt3dadd( 11.5276, 134.843, -101.687, 1.8 ) }
    dend_56 { pt3dadd( 11.1899, 135.124, -102.168, 1.92 ) }
    dend_56 { pt3dadd( 10.2979, 135.872, -102.947, 0.12 ) }
    dend_56 { pt3dadd( 9.20866, 136.889, -103.815, 0.12 ) }
    dend_56 { pt3dadd( 8.47345, 137.611, -104.304, 0.96 ) }
    dend_56 { pt3dadd( 8.11537, 137.984, -104.513, 1.2 ) }
    dend_56 { pt3dadd( 7.26608, 138.915, -104.913, 0.12 ) }
    dend_56 { pt3dadd( 6.7202, 139.575, -105.201, 0.12 ) }
    dend_56 { pt3dadd( 5.71119, 141.03, -105.781, 0.12 ) }
    dend_56 { pt3dadd( 5.37598, 141.598, -106.001, 1.2 ) }
    dend_56 { pt3dadd( 5.17328, 141.965, -106.133, 1.44 ) }
    dend_56 { pt3dadd( 4.75811, 142.771, -106.468, 0.6 ) }
    dend_56 { pt3dadd( 4.24605, 143.774, -106.932, 0.12 ) }
    dend_56 { pt3dadd( 3.7637, 144.619, -107.386, 0.12 ) }
    dend_56 { pt3dadd( 3.38826, 145.172, -107.777, 0.96 ) }
    dend_56 { pt3dadd( 3.11003, 145.54, -108.071, 1.32 ) }
    dend_56 { pt3dadd( 2.29067, 146.468, -108.876, 0.12 ) }
    dend_56 { pt3dadd( 1.82231, 146.906, -109.291, 0.12 ) }
    dend_56 { pt3dadd( 1.23473, 147.36, -109.794, 0.12 ) }
    dend_56 { pt3dadd( 0.142354, 148.075, -110.738, 0.12 ) }
    dend_56 { pt3dadd( -0.518536, 148.483, -111.309, 1.08 ) }
    dend_56 { pt3dadd( -1.00502, 148.763, -111.704, 1.8 ) }
    dend_56 { pt3dadd( -1.64737, 149.098, -112.248, 1.2 ) }
    dend_56 { pt3dadd( -2.64329, 149.606, -113.15, 0.12 ) }
    dend_56 { pt3dadd( -3.11475, 149.844, -113.579, 0.12 ) }
    dend_56 { pt3dadd( -3.50753, 150.031, -113.92, 0.12 ) }
    dend_56 { pt3dadd( -3.96579, 150.238, -114.385, 0.12 ) }
    dend_56 { pt3dadd( -5.62077, 150.943, -116.166, 0.12 ) }
    dend_56 { pt3dadd( -5.98398, 151.09, -116.555, 1.44 ) }
    dend_56 { pt3dadd( -6.40055, 151.252, -117.073, 2.04 ) }
    dend_56 { pt3dadd( -7.05242, 151.471, -117.945, 1.32 ) }
    dend_56 { pt3dadd( -8.50806, 151.87, -119.829, 0.12 ) }
    dend_56 { pt3dadd( -8.99292, 151.977, -120.427, 0.12 ) }
    dend_56 { pt3dadd( -9.4556, 152.04, -120.926, 0.96 ) }
    dend_56 { pt3dadd( -11.5068, 152.169, -123.016, 0.12 ) }
    dend_56 { pt3dadd( -12.307, 152.166, -123.743, 0.12 ) }
    dend_56 { pt3dadd( -13.207, 152.116, -124.479, 1.56 ) }
    dend_56 { pt3dadd( -13.6078, 152.074, -124.746, 1.8 ) }
    dend_56 { pt3dadd( -14.7112, 151.95, -125.475, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_56 { pt3dadd( -15.0155, 151.919, -125.658, 0.12 ) }
    dend_56 { pt3dadd( -15.6975, 151.857, -126.012, 0.48 ) }
    dend_56 { pt3dadd( -17.0858, 151.753, -126.855, 0.12 ) }
    dend_56 { pt3dadd( -17.9935, 151.698, -127.461, 0.12 ) }
    dend_56 { pt3dadd( -18.7498, 151.659, -127.936, 1.32 ) }
    dend_56 { pt3dadd( -19.2992, 151.616, -128.241, 1.56 ) }
    dend_56 { pt3dadd( -20.4977, 151.432, -128.76, 0.12 ) }
    dend_56 { pt3dadd( -21.0824, 151.27, -128.933, 0.12 ) }
    dend_56 { pt3dadd( -21.3664, 151.164, -128.977, 0.48 ) }
    dend_56 { pt3dadd( -22.2575, 150.751, -129.079, 0.12 ) }
    dend_56 { pt3dadd( -23.1313, 150.306, -129.143, 0.12 ) }
    dend_56 { pt3dadd( -24.2818, 149.685, -129.177, 0.12 ) }
    dend_56 { pt3dadd( -25.329, 149.1, -129.161, 0.12 ) }
    dend_56 { pt3dadd( -25.749, 148.863, -129.159, 0.72 ) }
    dend_56 { pt3dadd( -26.1327, 148.66, -129.121, 0.12 ) }
    dend_56 { pt3dadd( -27.1434, 148.182, -128.962, 0.12 ) }
    dend_56 { pt3dadd( -27.8055, 147.924, -128.821, 0.12 ) }
    dend_56 { pt3dadd( -28.5143, 147.696, -128.644, 1.44 ) }
    dend_56 { pt3dadd( -29.2804, 147.487, -128.442, 1.8 ) }
    dend_56 { pt3dadd( -31.5551, 146.912, -127.848, 0.12 ) }
    dend_56 { pt3dadd( -32.2744, 146.748, -127.647, 0.12 ) }
    dend_56 { pt3dadd( -34.1752, 146.367, -127.111, 0.12 ) }
    dend_56 { pt3dadd( -34.5904, 146.301, -127.01, 0.24 ) }
    dend_56 { pt3dadd( -34.9181, 146.265, -126.92, 0.12 ) }
    dend_56 { pt3dadd( -35.3804, 146.223, -126.785, 0.12 ) }
    dend_56 { pt3dadd( -36.6536, 146.169, -126.462, 1.32 ) }
    dend_56 { pt3dadd( -36.7992, 146.171, -126.416, 1.56 ) }
    dend_56 { pt3dadd( -37.8093, 146.25, -126.039, 1.56 ) }
    dend_56 { pt3dadd( -39.2758, 146.429, -125.53, 0.24 ) }
    dend_56 { pt3dadd( -39.5725, 146.482, -125.437, 0.12 ) }
    dend_56 { pt3dadd( -40.5036, 146.702, -125.225, 0.12 ) }
    dend_56 { pt3dadd( -41.2951, 146.917, -125.14, 0.12 ) }
    dend_56 { pt3dadd( -41.6186, 147.008, -125.116, 0.48 ) }
    dend_56 { pt3dadd( -42.1453, 147.175, -125.112, 0.48 ) }
    dend_56 { pt3dadd( -42.433, 147.275, -125.146, 0.12 ) }
    dend_56 { pt3dadd( -43.6177, 147.69, -125.296, 0.12 ) }
    dend_56 { pt3dadd( -44.508, 147.94, -125.407, 0.72 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 37/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -43.8943, 23.7345, -98.3413, 0.12 ) }
    dend_52 { pt3dadd( -44.3565, 22.4057, -99.5742, 0.12 ) }
    dend_52 { pt3dadd( -44.6279, 21.6769, -100.385, 0.12 ) }
    dend_52 { pt3dadd( -44.9769, 20.7691, -101.396, 0.12 ) }
    dend_52 { pt3dadd( -45.0593, 20.5588, -101.626, 1.56 ) }
    dend_52 { pt3dadd( -45.2477, 20.0837, -102.123, 1.56 ) }
    dend_52 { pt3dadd( -45.4474, 19.602, -102.598, 0.96 ) }
    dend_52 { pt3dadd( -45.8541, 18.7494, -103.432, 0.12 ) }
    dend_52 { pt3dadd( -46.1085, 18.2391, -103.976, 0.12 ) }
    dend_52 { pt3dadd( -46.1911, 18.0787, -104.125, 0.12 ) }
    dend_52 { pt3dadd( -46.3623, 17.7359, -104.395, 0.12 ) }
    dend_52 { pt3dadd( -46.5629, 17.2914, -104.722, 0.6 ) }
    dend_52 { pt3dadd( -46.687, 16.9927, -104.919, 0.72 ) }
    dend_52 { pt3dadd( -47.1822, 15.6969, -105.641, 0.12 ) }
    dend_52 { pt3dadd( -47.3723, 15.1143, -106.084, 0.12 ) }
    dend_52 { pt3dadd( -47.6072, 14.2606, -106.768, 2.04 ) }
    dend_52 { pt3dadd( -47.9466, 12.7915, -108.031, 0.12 ) }
    dend_52 { pt3dadd( -48.0837, 12.134, -108.612, 0.12 ) }
    dend_52 { pt3dadd( -48.2319, 11.4268, -109.283, 2.28 ) }
    dend_52 { pt3dadd( -48.7288, 9.14914, -111.455, 0.12 ) }
    dend_52 { pt3dadd( -48.897, 8.44462, -112.194, 0.12 ) }
    dend_52 { pt3dadd( -49.0384, 7.95624, -112.886, 0.12 ) }
    dend_52 { pt3dadd( -49.1067, 7.76547, -113.202, 0.12 ) }
    dend_52 { pt3dadd( -49.3977, 7.11323, -114.374, 0.12 ) }
    dend_52 { pt3dadd( -49.6198, 6.73483, -115.104, 1.92 ) }
    dend_52 { pt3dadd( -49.7903, 6.49917, -115.535, 2.28 ) }
    dend_52 { pt3dadd( -51.2852, 4.5668, -119.217, 0.12 ) }
    dend_52 { pt3dadd( -51.4498, 4.35793, -119.589, 0.12 ) }
    dend_52 { pt3dadd( -51.8621, 3.81376, -120.501, 1.8 ) }
    dend_52 { pt3dadd( -52.0359, 3.57537, -120.862, 1.8 ) }
    dend_52 { pt3dadd( -52.3071, 3.18345, -121.403, 1.2 ) }
    dend_52 { pt3dadd( -52.7915, 2.34522, -122.26, 0.12 ) }
    dend_52 { pt3dadd( -53.0496, 1.8387, -122.478, 0.12 ) }
    dend_52 { pt3dadd( -53.1319, 1.65637, -122.567, 0.6 ) }
    dend_52 { pt3dadd( -53.3038, 1.15767, -122.809, 0.12 ) }
    dend_52 { pt3dadd( -53.5125, 0.404407, -123.17, 0.12 ) }
    dend_52 { pt3dadd( -53.5604, 0.225613, -123.251, 0.36 ) }
    dend_52 { pt3dadd( -53.6555, -0.177998, -123.475, 0.36 ) }
    dend_52 { pt3dadd( -53.7107, -0.456492, -123.662, 0.12 ) }
    dend_52 { pt3dadd( -53.8809, -1.31239, -124.228, 0.12 ) }
    dend_52 { pt3dadd( -54.0047, -2.05551, -124.874, 0.12 ) }
    dend_52 { pt3dadd( -54.0441, -2.33134, -125.13, 0.96 ) }
    dend_52 { pt3dadd( -54.1923, -3.57438, -126.273, 0.12 ) }
    dend_52 { pt3dadd( -54.231, -4.06355, -126.818, 0.12 ) }
    dend_52 { pt3dadd( -54.2728, -4.83409, -127.741, 2.76 ) }
    dend_52 { pt3dadd( -54.3221, -6.72758, -130.302, 0.12 ) }
    dend_52 { pt3dadd( -54.3254, -7.33773, -131.145, 0.12 ) }
    dend_52 { pt3dadd( -54.3161, -7.58284, -131.488, 0.96 ) }
    dend_52 { pt3dadd( -54.1214, -9.37551, -134.077, 0.12 ) }
    dend_52 { pt3dadd( -54.0376, -9.75551, -134.696, 0.12 ) }
    dend_52 { pt3dadd( -53.7727, -10.4815, -135.97, 0.12 ) }
    dend_52 { pt3dadd( -53.6662, -10.6829, -136.31, 1.2 ) }
    dend_52 { pt3dadd( -53.4558, -11.0032, -136.851, 2.28 ) }
    dend_52 { pt3dadd( -52.8549, -11.8041, -138.054, 1.68 ) }
    dend_52 { pt3dadd( -52.2715, -12.4699, -138.783, 0.12 ) }
    dend_52 { pt3dadd( -51.9348, -12.7862, -139.167, 0.12 ) }
    dend_52 { pt3dadd( -51.7379, -12.9582, -139.368, 0.12 ) }
    dend_52 { pt3dadd( -51.4733, -13.1805, -139.68, 0.12 ) }
    dend_52 { pt3dadd( -51.2033, -13.4238, -140.002, 0.6 ) }
    dend_52 { pt3dadd( -51.0154, -13.6044, -140.2, 0.6 ) }
    dend_52 { pt3dadd( -50.4071, -14.2803, -141.109, 0.24 ) }
    dend_52 { pt3dadd( -50.2955, -14.4337, -141.357, 0.24 ) }
    dend_52 { pt3dadd( -49.9833, -14.9456, -142.264, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_52 { pt3dadd( -49.6878, -15.545, -143.254, 2.4 ) }
    dend_52 { pt3dadd( -49.6398, -15.657, -143.424, 2.4 ) }
    dend_52 { pt3dadd( -49.1279, -17.1217, -145.744, 0.12 ) }
    dend_52 { pt3dadd( -48.8281, -18.1529, -147.339, 0.12 ) }
    dend_52 { pt3dadd( -48.6623, -18.7897, -148.324, 0.12 ) }
    dend_52 { pt3dadd( -48.5259, -19.3964, -149.279, 3.12 ) }
    dend_52 { pt3dadd( -48.4787, -19.6677, -149.713, 3.12 ) }
    dend_52 { pt3dadd( -48.1613, -22.1192, -153.371, 0.12 ) }
    dend_52 { pt3dadd( -48.1296, -22.488, -153.876, 0.12 ) }
    dend_52 { pt3dadd( -48.1193, -22.6776, -154.125, 0.48 ) }
    dend_52 { pt3dadd( -48.1019, -23.103, -154.665, 0.12 ) }
    dend_52 { pt3dadd( -48.0998, -23.44, -155.109, 0.12 ) }
    dend_52 { pt3dadd( -48.1272, -23.6784, -155.456, 0.48 ) }
    dend_52 { pt3dadd( -48.2251, -24.1098, -156.056, 0.12 ) }
    dend_52 { pt3dadd( -48.3234, -24.4767, -156.585, 0.12 ) }
    dend_52 { pt3dadd( -48.5817, -25.4952, -157.963, 2.76 ) }
    dend_52 { pt3dadd( -48.6295, -25.6997, -158.218, 2.76 ) }
    dend_52 { pt3dadd( -49.1329, -28.0074, -160.973, 0.12 ) }
    dend_52 { pt3dadd( -49.1985, -28.3576, -161.356, 0.12 ) }
    dend_52 { pt3dadd( -49.272, -28.8118, -161.821, 0.12 ) }
    dend_52 { pt3dadd( -49.3688, -29.4899, -162.49, 0.12 ) }
    dend_52 { pt3dadd( -49.4687, -30.2877, -163.232, 1.8 ) }
    dend_52 { pt3dadd( -49.5042, -30.8369, -163.717, 2.16 ) }
    dend_52 { pt3dadd( -49.5219, -31.3997, -164.142, 1.92 ) }
    dend_52 { pt3dadd( -49.6029, -32.7929, -165.366, 0.12 ) }
    dend_52 { pt3dadd( -49.6394, -33.0969, -165.658, 0.72 ) }
    dend_52 { pt3dadd( -49.7834, -33.6574, -166.252, 0.72 ) }
    dend_52 { pt3dadd( -49.8934, -33.9669, -166.558, 0.12 ) }
    dend_52 { pt3dadd( -50.1419, -34.5465, -167.079, 0.12 ) }
    dend_52 { pt3dadd( -50.4321, -35.1476, -167.559, 0.12 ) }
    dend_52 { pt3dadd( -50.7363, -35.7692, -167.951, 2.4 ) }
    dend_52 { pt3dadd( -51.4342, -37.2304, -168.767, 0.12 ) }
    dend_52 { pt3dadd( -51.8601, -38.162, -169.231, 0.12 ) }
    dend_52 { pt3dadd( -52.021, -38.5605, -169.404, 0.6 ) }
    dend_52 { pt3dadd( -52.1225, -38.8512, -169.532, 0.12 ) }
    dend_52 { pt3dadd( -52.3119, -39.4349, -169.771, 0.12 ) }
    dend_52 { pt3dadd( -52.3682, -39.6231, -169.848, 0.48 ) }
    dend_52 { pt3dadd( -52.5063, -40.1759, -170.123, 0.12 ) }
    dend_52 { pt3dadd( -52.7996, -41.4489, -170.892, 0.12 ) }
    dend_52 { pt3dadd( -53.0144, -42.4178, -171.52, 1.68 ) }
    dend_52 { pt3dadd( -53.0963, -42.7948, -171.775, 2.16 ) }
    dend_52 { pt3dadd( -53.1567, -43.1066, -171.982, 2.16 ) }
    dend_52 { pt3dadd( -53.445, -44.8416, -173.131, 0.12 ) }
    dend_52 { pt3dadd( -53.5277, -45.3732, -173.468, 0.12 ) }
    dend_52 { pt3dadd( -53.5695, -45.6411, -173.646, 0.48 ) }
    dend_52 { pt3dadd( -53.5859, -45.7309, -173.699, 0.12 ) }
    dend_52 { pt3dadd( -53.7657, -46.5493, -174.137, 0.12 ) }
    dend_52 { pt3dadd( -53.9925, -47.3076, -174.468, 0.12 ) }
    dend_52 { pt3dadd( -54.1956, -47.8116, -174.697, 1.68 ) }
    dend_52 { pt3dadd( -54.357, -48.1479, -174.89, 1.92 ) }
    dend_52 { pt3dadd( -54.7296, -48.8148, -175.319, 0.12 ) }
    dend_52 { pt3dadd( -54.9961, -49.2239, -175.601, 0.12 ) }
    dend_52 { pt3dadd( -55.3577, -49.6858, -175.933, 1.32 ) }
    dend_52 { pt3dadd( -56.3378, -50.8689, -176.821, 0.12 ) }
    dend_52 { pt3dadd( -56.7002, -51.2997, -177.17, 0.12 ) }
    dend_52 { pt3dadd( -56.9464, -51.5867, -177.444, 0.48 ) }
    dend_52 { pt3dadd( -57.1219, -51.775, -177.65, 0.12 ) }
    dend_52 { pt3dadd( -57.5459, -52.1945, -178.194, 0.12 ) }
    dend_52 { pt3dadd( -58.1201, -52.7165, -178.911, 0.12 ) }
    dend_52 { pt3dadd( -58.2616, -52.8238, -179.073, 0.96 ) }
    dend_52 { pt3dadd( -58.9763, -53.2683, -179.829, 0.12 ) }
    dend_52 { pt3dadd( -59.2644, -53.4275, -180.113, 0.12 ) }
    dend_52 { pt3dadd( -59.9378, -53.7581, -180.719, 1.44 ) }
    dend_52 { pt3dadd( -60.5236, -54.0186, -181.181, 1.8 ) }
    dend_52 { pt3dadd( -61.4575, -54.4048, -181.768, 0.12 ) }
    dend_52 { pt3dadd( -62.6408, -54.8804, -182.388, 0.12 ) }
    dend_52 { pt3dadd( -62.9317, -54.9928, -182.507, 0.48 ) }
    dend_52 { pt3dadd( -63.1236, -55.0644, -182.575, 0.12 ) }
    dend_52 { pt3dadd( -63.6532, -55.2679, -182.725, 0.12 ) }
    dend_52 { pt3dadd( -64.0406, -55.4198, -182.825, 1.08 ) }
    dend_52 { pt3dadd( -64.5204, -55.6195, -182.916, 1.68 ) }
    dend_52 { pt3dadd( -65.4226, -55.9978, -183.052, 0.12 ) }
    dend_52 { pt3dadd( -65.8134, -56.1642, -183.105, 0.12 ) }
    dend_52 { pt3dadd( -66.0765, -56.2907, -183.138, 0.48 ) }
    dend_52 { pt3dadd( -66.2665, -56.3927, -183.159, 0.12 ) }
    dend_52 { pt3dadd( -67.0083, -56.8577, -183.298, 0.12 ) }
    dend_52 { pt3dadd( -67.8034, -57.4744, -183.502, 1.68 ) }
    dend_52 { pt3dadd( -68.3405, -58.0191, -183.72, 0.12 ) }
    dend_52 { pt3dadd( -68.8058, -58.5901, -184.004, 0.12 ) }
    dend_52 { pt3dadd( -69.1091, -59.0293, -184.248, 0.6 ) }
    dend_52 { pt3dadd( -69.6933, -60.0271, -184.838, 0.12 ) }
    dend_52 { pt3dadd( -70.0267, -60.7331, -185.264, 0.12 ) }
    dend_52 { pt3dadd( -70.4347, -61.7222, -185.922, 0.12 ) }
    dend_52 { pt3dadd( -70.575, -62.0736, -186.153, 0.12 ) }
    dend_52 { pt3dadd( -70.7266, -62.4387, -186.392, 1.68 ) }
    dend_52 { pt3dadd( -70.8829, -62.7981, -186.605, 2.28 ) }
    dend_52 { pt3dadd( -71.2092, -63.448, -186.921, 1.56 ) }
    dend_52 { pt3dadd( -71.7097, -64.3086, -187.296, 0.12 ) }
    dend_52 { pt3dadd( -71.9785, -64.744, -187.417, 0.12 ) }
    dend_52 { pt3dadd( -72.2163, -65.128, -187.516, 0.12 ) }
    dend_52 { pt3dadd( -72.4865, -65.5651, -187.628, 1.32 ) }
    dend_52 { pt3dadd( -72.7096, -65.927, -187.713, 1.56 ) }
    dend_52 { pt3dadd( -73.0479, -66.4724, -187.837, 0.12 ) }
    dend_52 { pt3dadd( -73.935, -67.9262, -188.115, 0.12 ) }
    dend_52 { pt3dadd( -74.4719, -68.814, -188.296, 1.8 ) }
    dend_52 { pt3dadd( -74.6514, -69.1336, -188.361, 2.52 ) }
    dend_52 { pt3dadd( -74.7986, -69.394, -188.416, 2.52 ) }
    dend_52 { pt3dadd( -75.2678, -70.2317, -188.608, 0.12 ) }
    dend_52 { pt3dadd( -75.873, -71.3252, -188.875, 0.12 ) }
    dend_52 { pt3dadd( -76.1619, -71.8533, -188.996, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_52 { pt3dadd( -76.5089, -72.5161, -189.121, 2.04 ) }
    dend_52 { pt3dadd( -76.8826, -73.2592, -189.259, 2.04 ) }
    dend_52 { pt3dadd( -77.392, -74.3163, -189.449, 0.12 ) }
    dend_52 { pt3dadd( -77.6924, -74.9816, -189.552, 0.12 ) }
    dend_52 { pt3dadd( -77.8607, -75.4101, -189.614, 0.72 ) }
    dend_52 { pt3dadd( -77.9355, -75.6338, -189.63, 0.12 ) }
    dend_52 { pt3dadd( -78.0935, -76.1727, -189.633, 0.12 ) }
    dend_52 { pt3dadd( -78.145, -76.4034, -189.618, 0.48 ) }
    dend_52 { pt3dadd( -78.2055, -76.7231, -189.605, 0.12 ) }
    dend_52 { pt3dadd( -78.3776, -77.8774, -189.643, 0.12 ) }
    dend_52 { pt3dadd( -78.4669, -78.6519, -189.707, 1.56 ) }
    dend_52 { pt3dadd( -78.5007, -79.0274, -189.754, 1.8 ) }
    dend_52 { pt3dadd( -78.5245, -79.4706, -189.827, 1.8 ) }
    dend_52 { pt3dadd( -78.5738, -80.8944, -190.111, 0.12 ) }
    dend_52 { pt3dadd( -78.5903, -81.8179, -190.336, 0.12 ) }
    dend_52 { pt3dadd( -78.5903, -81.8179, -190.336, 0.48 ) }
    dend_52 { pt3dadd( -78.583, -82.0145, -190.414, 0.12 ) }
    dend_52 { pt3dadd( -78.5271, -82.5885, -190.677, 0.12 ) }
    dend_52 { pt3dadd( -78.4929, -82.7955, -190.785, 0.48 ) }
    dend_52 { pt3dadd( -78.4587, -82.9884, -190.885, 0.12 ) }
    dend_52 { pt3dadd( -78.303, -83.8533, -191.471, 0.12 ) }
    dend_52 { pt3dadd( -78.12, -84.9574, -192.259, 0.48 ) }
    dend_52 { pt3dadd( -78.0762, -85.2803, -192.468, 0.12 ) }
    dend_52 { pt3dadd( -77.987, -85.9823, -192.896, 1.56 ) }
    dend_52 { pt3dadd( -77.912, -86.6222, -193.254, 1.92 ) }
    dend_52 { pt3dadd( -77.8068, -87.5953, -193.741, 1.56 ) }
    dend_52 { pt3dadd( -77.7557, -88.0702, -193.979, 0.12 ) }
    dend_52 { pt3dadd( -77.5912, -90.2446, -194.921, 0.12 ) }
    dend_52 { pt3dadd( -77.5711, -90.545, -195.046, 0.84 ) }
    dend_52 { pt3dadd( -77.552, -90.8615, -195.173, 0.12 ) }
    dend_52 { pt3dadd( -77.5157, -91.3523, -195.371, 0.12 ) }
    dend_52 { pt3dadd( -77.3893, -92.8519, -195.918, 0.12 ) }
    dend_52 { pt3dadd( -77.2532, -94.2065, -196.52, 2.4 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 33/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -43.8943, 23.7345, -98.3413, 0.12 ) }
    dend_51 { pt3dadd( -44.4998, 24.4233, -99.4401, 0.12 ) }
    dend_51 { pt3dadd( -44.9234, 24.9295, -100.216, 0.12 ) }
    dend_51 { pt3dadd( -45.6376, 25.8192, -101.407, 2.4 ) }
    dend_51 { pt3dadd( -46.8039, 27.3324, -103.372, 0.24 ) }
    dend_51 { pt3dadd( -47.0423, 27.6445, -103.76, 0.24 ) }
    dend_51 { pt3dadd( -47.2878, 27.9722, -104.143, 1.44 ) }
    dend_51 { pt3dadd( -47.7855, 28.656, -104.906, 0.12 ) }
    dend_51 { pt3dadd( -48.3285, 29.4779, -105.752, 0.12 ) }
    dend_51 { pt3dadd( -48.7972, 30.2189, -106.38, 0.12 ) }
    dend_51 { pt3dadd( -49.2601, 30.9407, -106.949, 2.28 ) }
    dend_51 { pt3dadd( -49.8201, 31.8241, -107.687, 0.12 ) }
    dend_51 { pt3dadd( -50.2826, 32.5314, -108.282, 0.12 ) }
    dend_51 { pt3dadd( -50.903, 33.4648, -109.046, 0.12 ) }
    dend_51 { pt3dadd( -51.5978, 34.4891, -109.88, 2.76 ) }
    dend_51 { pt3dadd( -52.4533, 35.7266, -110.882, 0.24 ) }
    dend_51 { pt3dadd( -52.4533, 35.7266, -110.882, 0.12 ) }
    dend_51 { pt3dadd( -52.9472, 36.4496, -111.442, 0.12 ) }
    dend_51 { pt3dadd( -53.1814, 36.7939, -111.709, 0.96 ) }
    dend_51 { pt3dadd( -53.4874, 37.2308, -112.005, 0.96 ) }
    dend_51 { pt3dadd( -54.1541, 38.2053, -112.622, 0.12 ) }
    dend_51 { pt3dadd( -54.7522, 39.2007, -113.225, 0.12 ) }
    dend_51 { pt3dadd( -54.9484, 39.5677, -113.449, 0.72 ) }
    dend_51 { pt3dadd( -55.2508, 40.194, -113.874, 0.12 ) }
    dend_51 { pt3dadd( -55.5596, 40.8529, -114.327, 0.12 ) }
    dend_51 { pt3dadd( -55.8973, 41.5705, -114.783, 2.16 ) }
    dend_51 { pt3dadd( -56.5159, 42.8994, -115.695, 0.12 ) }
    dend_51 { pt3dadd( -56.6944, 43.2893, -115.994, 0.12 ) }
    dend_51 { pt3dadd( -57.0875, 44.1518, -116.688, 0.12 ) }
    dend_51 { pt3dadd( -57.3453, 44.7143, -117.131, 0.12 ) }
    dend_51 { pt3dadd( -57.6526, 45.4069, -117.738, 1.44 ) }
    dend_51 { pt3dadd( -58.3425, 47.0487, -119.188, 0.12 ) }
    dend_51 { pt3dadd( -58.5807, 47.5956, -119.647, 0.12 ) }
    dend_51 { pt3dadd( -58.755, 48.0148, -119.991, 1.56 ) }
    dend_51 { pt3dadd( -58.9466, 48.5083, -120.374, 1.56 ) }
    dend_51 { pt3dadd( -59.364, 49.6014, -121.231, 0.12 ) }
    dend_51 { pt3dadd( -59.5421, 50.0854, -121.604, 0.12 ) }
    dend_51 { pt3dadd( -59.7081, 50.5027, -121.86, 0.12 ) }
    dend_51 { pt3dadd( -59.807, 50.7283, -122.025, 0.12 ) }
    dend_51 { pt3dadd( -60.2243, 51.5505, -122.654, 0.12 ) }
    dend_51 { pt3dadd( -60.4149, 51.8761, -122.93, 0.12 ) }
    dend_51 { pt3dadd( -60.7653, 52.3753, -123.363, 1.92 ) }
    dend_51 { pt3dadd( -61.0122, 52.6995, -123.687, 2.16 ) }
    dend_51 { pt3dadd( -61.888, 53.7371, -124.801, 0.12 ) }
    dend_51 { pt3dadd( -62.2452, 54.1108, -125.213, 0.12 ) }
    dend_51 { pt3dadd( -62.5419, 54.3931, -125.539, 1.08 ) }
    dend_51 { pt3dadd( -62.9008, 54.6887, -125.927, 1.32 ) }
    dend_51 { pt3dadd( -63.5384, 55.1286, -126.585, 0.12 ) }
    dend_51 { pt3dadd( -63.9942, 55.3891, -127.04, 0.12 ) }
    dend_51 { pt3dadd( -64.3448, 55.546, -127.379, 0.48 ) }
    dend_51 { pt3dadd( -64.6953, 55.668, -127.732, 0.12 ) }
    dend_51 { pt3dadd( -65.4861, 55.9212, -128.527, 0.12 ) }
    dend_51 { pt3dadd( -65.9776, 56.0815, -129.028, 1.44 ) }
    dend_51 { pt3dadd( -66.2569, 56.1862, -129.314, 1.68 ) }
    dend_51 { pt3dadd( -67.1027, 56.5962, -130.223, 0.12 ) }
    dend_51 { pt3dadd( -67.726, 56.9504, -130.867, 0.12 ) }
    dend_51 { pt3dadd( -68.2326, 57.2871, -131.352, 1.8 ) }
    dend_51 { pt3dadd( -68.7222, 57.6744, -131.78, 2.16 ) }
    dend_51 { pt3dadd( -69.4878, 58.3098, -132.377, 0.12 ) }
    dend_51 { pt3dadd( -69.9566, 58.704, -132.769, 0.12 ) }
    dend_51 { pt3dadd( -70.3238, 58.9899, -133.054, 0.48 ) }
    dend_51 { pt3dadd( -70.3904, 59.0368, -133.104, 0.12 ) }
    dend_51 { pt3dadd( -70.7914, 59.2675, -133.417, 0.12 ) }
    dend_51 { pt3dadd( -71.4339, 59.5828, -133.975, 1.68 ) }
    dend_51 { pt3dadd( -72.7415, 60.1496, -135.187, 0.12 ) }
    dend_51 { pt3dadd( -73.2602, 60.3636, -135.689, 0.12 ) }
    dend_51 { pt3dadd( -73.5746, 60.513, -136.004, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_51 { pt3dadd( -74.1436, 60.8177, -136.551, 0.12 ) }
    dend_51 { pt3dadd( -74.521, 61.0469, -136.914, 0.12 ) }
    dend_51 { pt3dadd( -74.961, 61.3557, -137.337, 1.56 ) }
    dend_51 { pt3dadd( -75.3321, 61.6254, -137.657, 2.28 ) }
    dend_51 { pt3dadd( -76.2034, 62.2843, -138.351, 0.12 ) }
    dend_51 { pt3dadd( -76.6118, 62.5796, -138.654, 0.12 ) }
    dend_51 { pt3dadd( -76.9017, 62.7686, -138.826, 0.48 ) }
    dend_51 { pt3dadd( -77.4165, 63.0743, -139.09, 0.12 ) }
    dend_51 { pt3dadd( -77.79, 63.2773, -139.277, 0.12 ) }
    dend_51 { pt3dadd( -78.7125, 63.7077, -139.703, 2.16 ) }
    dend_51 { pt3dadd( -79.9869, 64.1704, -140.192, 0.12 ) }
    dend_51 { pt3dadd( -80.8804, 64.4384, -140.498, 0.12 ) }
    dend_51 { pt3dadd( -81.3869, 64.5718, -140.678, 0.6 ) }
    dend_51 { pt3dadd( -81.7219, 64.648, -140.803, 0.12 ) }
    dend_51 { pt3dadd( -82.3887, 64.78, -141.05, 0.12 ) }
    dend_51 { pt3dadd( -83.1866, 64.9207, -141.339, 2.4 ) }
    dend_51 { pt3dadd( -83.5774, 64.9907, -141.453, 2.4 ) }
    dend_51 { pt3dadd( -84.9997, 65.2563, -141.849, 0.12 ) }
    dend_51 { pt3dadd( -86.1774, 65.4893, -142.127, 0.12 ) }
    dend_51 { pt3dadd( -86.9425, 65.649, -142.276, 1.68 ) }
    dend_51 { pt3dadd( -87.5256, 65.7698, -142.369, 2.16 ) }
    dend_51 { pt3dadd( -88.7274, 66.0063, -142.488, 0.12 ) }
    dend_51 { pt3dadd( -89.4538, 66.142, -142.511, 0.12 ) }
    dend_51 { pt3dadd( -90.037, 66.2384, -142.477, 0.6 ) }
    dend_51 { pt3dadd( -90.2408, 66.2701, -142.464, 0.12 ) }
    dend_51 { pt3dadd( -91.3682, 66.4425, -142.43, 0.12 ) }
    dend_51 { pt3dadd( -91.8406, 66.509, -142.386, 0.84 ) }
    dend_51 { pt3dadd( -92.2928, 66.5705, -142.315, 1.08 ) }
    dend_51 { pt3dadd( -92.518, 66.6087, -142.28, 1.08 ) }
    dend_51 { pt3dadd( -92.8558, 66.6817, -142.235, 0.12 ) }
    dend_51 { pt3dadd( -93.4819, 66.851, -142.148, 0.12 ) }
    dend_51 { pt3dadd( -94.2414, 67.0883, -142.038, 1.44 ) }
    dend_51 { pt3dadd( -94.8382, 67.2719, -141.967, 1.68 ) }
    dend_51 { pt3dadd( -95.4849, 67.4688, -141.889, 0.12 ) }
    dend_51 { pt3dadd( -96.4281, 67.7556, -141.792, 0.12 ) }
    dend_51 { pt3dadd( -96.6571, 67.8224, -141.775, 1.32 ) }
    dend_51 { pt3dadd( -97.1798, 67.9626, -141.764, 0.12 ) }
    dend_51 { pt3dadd( -97.5813, 68.0624, -141.768, 0.12 ) }
    dend_51 { pt3dadd( -97.8085, 68.1049, -141.764, 0.36 ) }
    dend_51 { pt3dadd( -98.1801, 68.1348, -141.751, 0.12 ) }
    dend_51 { pt3dadd( -98.6956, 68.1403, -141.734, 0.12 ) }
    dend_51 { pt3dadd( -99.1079, 68.1328, -141.72, 0.48 ) }
    dend_51 { pt3dadd( -99.7225, 68.108, -141.715, 0.12 ) }
    dend_51 { pt3dadd( -100.546, 68.0585, -141.725, 0.12 ) }
    dend_51 { pt3dadd( -101.171, 68.0096, -141.742, 1.8 ) }
    dend_51 { pt3dadd( -101.607, 67.9673, -141.761, 2.64 ) }
    dend_51 { pt3dadd( -101.914, 67.9341, -141.784, 2.64 ) }
    dend_51 { pt3dadd( -102.948, 67.8022, -141.893, 0.12 ) }
    dend_51 { pt3dadd( -103.857, 67.6674, -142.028, 0.12 ) }
    dend_51 { pt3dadd( -104.26, 67.6101, -142.089, 0.12 ) }
    dend_51 { pt3dadd( -104.585, 67.5668, -142.139, 0.48 ) }
    dend_51 { pt3dadd( -104.788, 67.5394, -142.165, 0.12 ) }
    dend_51 { pt3dadd( -105.209, 67.493, -142.204, 0.12 ) }
    dend_51 { pt3dadd( -105.62, 67.4693, -142.22, 0.6 ) }
    dend_51 { pt3dadd( -105.992, 67.4829, -142.225, 0.12 ) }
    dend_51 { pt3dadd( -106.506, 67.5364, -142.227, 0.12 ) }
    dend_51 { pt3dadd( -106.939, 67.5981, -142.199, 0.72 ) }
    dend_51 { pt3dadd( -107.396, 67.6767, -142.152, 0.96 ) }
    dend_51 { pt3dadd( -107.936, 67.8061, -142.11, 0.12 ) }
    dend_51 { pt3dadd( -108.572, 67.9907, -142.085, 0.12 ) }
    dend_51 { pt3dadd( -108.977, 68.1174, -142.075, 1.2 ) }
    dend_51 { pt3dadd( -109.723, 68.3823, -142.07, 1.56 ) }
    dend_51 { pt3dadd( -110.239, 68.5943, -142.093, 1.68 ) }
    dend_51 { pt3dadd( -111.166, 69.0504, -142.17, 0.12 ) }
    dend_51 { pt3dadd( -111.977, 69.4953, -142.258, 0.12 ) }
    dend_51 { pt3dadd( -112.382, 69.7451, -142.388, 1.56 ) }
    dend_51 { pt3dadd( -112.847, 70.0504, -142.561, 1.56 ) }
    dend_51 { pt3dadd( -113.388, 70.429, -142.803, 0.12 ) }
    dend_51 { pt3dadd( -115.106, 71.6891, -143.639, 0.12 ) }
    dend_51 { pt3dadd( -115.321, 71.8537, -143.754, 0.48 ) }
    dend_51 { pt3dadd( -117.215, 73.4378, -145.046, 0.12 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 71/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -20.415, -107.417, -35.4756, 3.37 ) }
    dend_47 { pt3dadd( -21.1104, -107.911, -34.0819, 3.37 ) }
    dend_47 { pt3dadd( -22.9334, -109.217, -30.1321, 0.12 ) }
    dend_47 { pt3dadd( -23.0312, -109.3, -29.8547, 0.12 ) }
    dend_47 { pt3dadd( -23.2537, -109.522, -29.0735, 0.12 ) }
    dend_47 { pt3dadd( -23.3571, -109.655, -28.5781, 0.72 ) }
    dend_47 { pt3dadd( -23.4352, -109.806, -27.9916, 0.72 ) }
    dend_47 { pt3dadd( -23.4022, -109.874, -27.6958, 0.12 ) }
    dend_47 { pt3dadd( -22.7145, -110.191, -26.0287, 0.12 ) }
    dend_47 { pt3dadd( -22.6744, -110.239, -25.8294, 0.96 ) }
    dend_47 { pt3dadd( -22.7173, -110.464, -25.1306, 0.96 ) }
    dend_47 { pt3dadd( -23.1116, -110.827, -24.102, 0.12 ) }
    dend_47 { pt3dadd( -23.2552, -110.906, -23.8829, 0.12 ) }
    dend_47 { pt3dadd( -23.5775, -111.024, -23.5287, 0.84 ) }
    dend_47 { pt3dadd( -25.6063, -111.64, -21.7517, 0.24 ) }
    dend_47 { pt3dadd( -26.779, -111.998, -20.8091, 1.92 ) }
    dend_47 { pt3dadd( -28.5693, -112.565, -19.5121, 0.24 ) }
    dend_47 { pt3dadd( -29.343, -112.823, -19.0072, 1.68 ) }
    dend_47 { pt3dadd( -31.4234, -113.577, -17.7449, 1.68 ) }
    dend_47 { pt3dadd( -31.9838, -113.805, -17.4451, 0.12 ) }
    dend_47 { pt3dadd( -32.5585, -114.109, -17.2187, 0.12 ) }
    dend_47 { pt3dadd( -32.987, -114.417, -17.0966, 0.6 ) }
    dend_47 { pt3dadd( -33.4626, -114.918, -17.0182, 1.08 ) }
    dend_47 { pt3dadd( -33.9787, -115.585, -16.9797, 1.08 ) }
    dend_47 { pt3dadd( -34.6282, -116.587, -17.0767, 0.12 ) }
    dend_47 { pt3dadd( -35.0049, -117.172, -17.1348, 0.12 ) }
    dend_47 { pt3dadd( -35.3639, -117.771, -17.1952, 0.12 ) }
    dend_47 { pt3dadd( -35.6939, -118.384, -17.2583, 0.12 ) }
    dend_47 { pt3dadd( -35.9747, -119.008, -17.3196, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_47 { pt3dadd( -36.1677, -119.548, -17.3843, 0.96 ) }
    dend_47 { pt3dadd( -36.371, -120.219, -17.4736, 0.12 ) }
    dend_47 { pt3dadd( -36.6284, -121.046, -17.589, 0.12 ) }
    dend_47 { pt3dadd( -36.8015, -121.516, -17.6546, 1.32 ) }
    dend_47 { pt3dadd( -36.9288, -121.798, -17.7005, 1.32 ) }
    dend_47 { pt3dadd( -37.3447, -122.615, -17.8397, 0.12 ) }
    dend_47 { pt3dadd( -37.7579, -123.332, -17.9775, 0.12 ) }
    dend_47 { pt3dadd( -37.8581, -123.499, -18.01, 0.48 ) }
    dend_47 { pt3dadd( -38.188, -124.046, -18.1053, 0.12 ) }
    dend_47 { pt3dadd( -38.3325, -124.321, -18.1373, 0.12 ) }
    dend_47 { pt3dadd( -38.4968, -124.694, -18.1592, 0.12 ) }
    dend_47 { pt3dadd( -38.6102, -124.971, -18.0747, 0.48 ) }
    dend_47 { pt3dadd( -38.8638, -125.478, -17.8209, 0.36 ) }
    dend_47 { pt3dadd( -39.0326, -125.849, -17.6875, 0.36 ) }
    dend_47 { pt3dadd( -39.1732, -126.207, -17.6031, 1.2 ) }
    dend_47 { pt3dadd( -39.3141, -126.595, -17.5345, 1.2 ) }
    dend_47 { pt3dadd( -40.1267, -128.575, -17.106, 0.12 ) }
    dend_47 { pt3dadd( -40.4236, -129.31, -16.9349, 0.12 ) }
    dend_47 { pt3dadd( -41.1063, -130.895, -16.5882, 0.12 ) }
    dend_47 { pt3dadd( -41.4538, -131.68, -16.4392, 0.12 ) }
    dend_47 { pt3dadd( -41.6848, -132.202, -16.3695, 0.12 ) }
    dend_47 { pt3dadd( -42.1634, -133.394, -16.3235, 1.32 ) }
    dend_47 { pt3dadd( -42.3904, -134.358, -16.4543, 1.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 23/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -20.415, -107.417, -35.4756, 0.12 ) }
    dend_46 { pt3dadd( -21.3374, -107.754, -36.5027, 0.12 ) }
    dend_46 { pt3dadd( -21.9494, -107.978, -37.1843, 0.12 ) }
    dend_46 { pt3dadd( -22.1431, -108.049, -37.4, 0.96 ) }
    dend_46 { pt3dadd( -22.3713, -108.132, -37.6541, 1.08 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 28/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -4.49213, -105.114, -40.9429, 0.12 ) }
    dend_44 { pt3dadd( -4.32682, -105.901, -40.828, 0.12 ) }
    dend_44 { pt3dadd( -4.23856, -106.548, -40.7521, 0.12 ) }
    dend_44 { pt3dadd( -4.15607, -107.155, -40.686, 0.72 ) }
    dend_44 { pt3dadd( -4.0423, -107.94, -40.6171, 0.84 ) }
    dend_44 { pt3dadd( -3.97903, -108.37, -40.5658, 0.48 ) }
    dend_44 { pt3dadd( -3.93392, -108.665, -40.5262, 0.12 ) }
    dend_44 { pt3dadd( -3.83474, -109.303, -40.43, 0.12 ) }
    dend_44 { pt3dadd( -3.77569, -109.716, -40.356, 0.12 ) }
    dend_44 { pt3dadd( -3.70983, -110.095, -40.2858, 0.84 ) }
    dend_44 { pt3dadd( -3.56766, -110.834, -40.2273, 0.36 ) }
    dend_44 { pt3dadd( -3.49755, -111.192, -40.2146, 0.12 ) }
    dend_44 { pt3dadd( -3.31953, -112.048, -40.2112, 0.12 ) }
    dend_44 { pt3dadd( -3.1581, -112.788, -40.2321, 1.8 ) }
    dend_44 { pt3dadd( -3.04359, -113.433, -40.2792, 1.56 ) }
    dend_44 { pt3dadd( -2.86943, -114.557, -40.4124, 0.12 ) }
    dend_44 { pt3dadd( -2.8418, -114.759, -40.4511, 0.12 ) }
    dend_44 { pt3dadd( -2.8297, -114.859, -40.4726, 0.36 ) }
    dend_44 { pt3dadd( -2.79785, -115.214, -40.5573, 0.12 ) }
    dend_44 { pt3dadd( -2.78871, -115.832, -40.7024, 0.12 ) }
    dend_44 { pt3dadd( -2.7981, -116.036, -40.7393, 0.12 ) }
    dend_44 { pt3dadd( -2.81806, -116.359, -40.7763, 0.72 ) }
    dend_44 { pt3dadd( -2.85873, -116.872, -40.8383, 0.96 ) }
    dend_44 { pt3dadd( -2.89626, -117.274, -40.8871, 0.12 ) }
    dend_44 { pt3dadd( -3.02842, -118.499, -41.038, 0.12 ) }
    dend_44 { pt3dadd( -3.07698, -118.899, -41.0883, 0.84 ) }
    dend_44 { pt3dadd( -3.13343, -119.319, -41.1499, 0.12 ) }
    dend_44 { pt3dadd( -3.21667, -119.816, -41.2312, 0.12 ) }
    dend_44 { pt3dadd( -3.27715, -120.139, -41.2875, 0.96 ) }
    dend_44 { pt3dadd( -3.35231, -120.546, -41.3613, 0.12 ) }
    dend_44 { pt3dadd( -3.48261, -121.238, -41.4992, 0.12 ) }
    dend_44 { pt3dadd( -3.61098, -121.904, -41.6419, 1.68 ) }
    dend_44 { pt3dadd( -3.67013, -122.184, -41.7092, 1.68 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.49213, -105.114, -40.9429, 0.6 ) }
    dend_43 { pt3dadd( -4.34871, -104.969, -37.1334, 0.6 ) }
    dend_43 { pt3dadd( -4.18583, -105.272, -37.6633, 0.6 ) }
    dend_43 { pt3dadd( -3.6615, -106.192, -38.8805, 0.12 ) }
    dend_43 { pt3dadd( -3.446, -106.57, -39.3154, 0.12 ) }
    dend_43 { pt3dadd( -3.17666, -107.043, -39.859, 0.96 ) }
    dend_43 { pt3dadd( -2.90629, -107.517, -40.4047, 0.96 ) }
    dend_43 { pt3dadd( -2.29942, -108.596, -41.8663, 0.12 ) }
    dend_43 { pt3dadd( -2.05992, -109.056, -42.5008, 0.12 ) }
    dend_43 { pt3dadd( -1.93238, -109.298, -42.8054, 0.48 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 26.7387, -109.63, -37.8818, 0.12 ) }
    dend_40 { pt3dadd( 27.7792, -110.797, -35.6302, 0.12 ) }
    dend_40 { pt3dadd( 28.0195, -111.056, -35.1431, 0.12 ) }
    dend_40 { pt3dadd( 28.1342, -111.178, -34.9276, 0.6 ) }
    dend_40 { pt3dadd( 28.4679, -111.509, -34.3431, 0.12 ) }
    dend_40 { pt3dadd( 29.0936, -112.091, -33.3251, 0.12 ) }
    dend_40 { pt3dadd( 29.2692, -112.249, -33.0456, 0.12 ) }
    dend_40 { pt3dadd( 29.4106, -112.356, -32.8784, 0.12 ) }
    dend_40 { pt3dadd( 29.6096, -112.508, -32.6517, 0.12 ) }
    dend_40 { pt3dadd( 30.0878, -112.881, -32.1094, 0.12 ) }
    dend_40 { pt3dadd( 30.2423, -113.006, -31.9506, 0.6 ) }
    dend_40 { pt3dadd( 30.5732, -113.315, -31.6778, 0.12 ) }
    dend_40 { pt3dadd( 30.9029, -113.636, -31.3828, 0.12 ) }
    dend_40 { pt3dadd( 31.3384, -114.037, -30.9951, 0.6 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 85/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 26.7387, -109.63, -37.8818, 0.24 ) }
    dend_35 { pt3dadd( 26.788, -110.473, -38.1887, 0.24 ) }
    dend_35 { pt3dadd( 26.7894, -111.231, -38.4826, 0.24 ) }
    dend_35 { pt3dadd( 26.7778, -111.581, -38.6182, 0.96 ) }
    dend_35 { pt3dadd( 26.746, -112.19, -38.8516, 1.8 ) }
    dend_35 { pt3dadd( 26.7287, -112.786, -39.1142, 0.84 ) }
    dend_35 { pt3dadd( 26.7189, -113.168, -39.3054, 0.12 ) }
    dend_35 { pt3dadd( 26.7092, -113.749, -39.66, 0.12 ) }
    dend_35 { pt3dadd( 26.6966, -114.05, -39.8593, 0.72 ) }
    dend_35 { pt3dadd( 26.6917, -114.121, -39.9016, 0.72 ) }
    dend_35 { pt3dadd( 26.6596, -114.856, -40.2931, 0.24 ) }
    dend_35 { pt3dadd( 26.6625, -115.171, -40.4168, 0.24 ) }
    dend_35 { pt3dadd( 26.6899, -115.695, -40.5606, 0.24 ) }
    dend_35 { pt3dadd( 26.7273, -116.238, -40.6483, 0.24 ) }
    dend_35 { pt3dadd( 26.7478, -116.741, -40.6848, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_35 { pt3dadd( 26.7479, -117.316, -40.6924, 0.24 ) }
    dend_35 { pt3dadd( 26.7228, -117.887, -40.6439, 1.44 ) }
    dend_35 { pt3dadd( 26.6859, -118.508, -40.5634, 1.92 ) }
    dend_35 { pt3dadd( 26.6298, -119.118, -40.4705, 1.92 ) }
    dend_35 { pt3dadd( 26.5603, -119.735, -40.3797, 1.2 ) }
    dend_35 { pt3dadd( 26.4805, -120.369, -40.3023, 0.48 ) }
    dend_35 { pt3dadd( 26.3907, -120.987, -40.2374, 0.12 ) }
    dend_35 { pt3dadd( 26.3256, -121.433, -40.1811, 0.12 ) }
    dend_35 { pt3dadd( 26.2888, -121.708, -40.1484, 0.6 ) }
    dend_35 { pt3dadd( 26.2498, -122.054, -40.1195, 0.12 ) }
    dend_35 { pt3dadd( 26.1903, -122.773, -40.0544, 0.12 ) }
    dend_35 { pt3dadd( 26.1767, -123.135, -40.0271, 0.12 ) }
    dend_35 { pt3dadd( 26.1718, -124.417, -40.0145, 2.4 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 43.6072, -36.1396, -12.4403, 0.96 ) }
    dend_33 { pt3dadd( 43.1465, -32.3278, -3.39555, 0.96 ) }
    dend_33 { pt3dadd( 43.0762, -31.8379, -2.44461, 0.72 ) }
    dend_33 { pt3dadd( 43.0239, -31.5046, -1.93074, 0.24 ) }
    dend_33 { pt3dadd( 42.9745, -31.0963, -1.44628, 0.24 ) }
    dend_33 { pt3dadd( 42.932, -30.4428, -0.872433, 0.24 ) }
    dend_33 { pt3dadd( 42.9203, -29.563, -0.233533, 0.84 ) }
    dend_33 { pt3dadd( 43.0038, -28.3437, 0.0171742, 1.2 ) }
    dend_33 { pt3dadd( 43.1306, -27.2344, 0.300982, 0.48 ) }
    dend_33 { pt3dadd( 43.3456, -25.8101, 0.801087, 0.24 ) }
    dend_33 { pt3dadd( 43.6466, -24.3527, 1.39548, 0.24 ) }
    dend_33 { pt3dadd( 44.1272, -22.5345, 2.2568, 1.68 ) }
    dend_33 { pt3dadd( 44.4007, -21.622, 2.71098, 2.28 ) }
    dend_33 { pt3dadd( 44.6148, -20.9558, 3.05613, 2.4 ) }
    dend_33 { pt3dadd( 45.3115, -18.7887, 4.19905, 0.36 ) }
    dend_33 { pt3dadd( 45.5672, -17.938, 4.64495, 0.36 ) }
    dend_33 { pt3dadd( 45.8916, -16.7671, 5.219, 0.84 ) }
    dend_33 { pt3dadd( 46.3068, -15.1012, 5.95813, 0.84 ) }
    dend_33 { pt3dadd( 46.6804, -13.41, 6.67304, 0.6 ) }
    dend_33 { pt3dadd( 47.0085, -11.8347, 7.30078, 0.6 ) }
    dend_33 { pt3dadd( 47.2087, -10.8335, 7.64997, 0.96 ) }
    dend_33 { pt3dadd( 47.335, -10.0429, 7.92087, 0.96 ) }
    dend_33 { pt3dadd( 47.5078, -8.5629, 8.39181, 0.12 ) }
    dend_33 { pt3dadd( 47.5546, -7.82971, 8.61461, 0.12 ) }
    dend_33 { pt3dadd( 47.5758, -7.20486, 8.77015, 0.12 ) }
    dend_33 { pt3dadd( 47.5878, -6.52503, 8.90638, 0.12 ) }
    dend_33 { pt3dadd( 47.6031, -5.83993, 9.04501, 0.6 ) }
    dend_33 { pt3dadd( 47.6288, -5.29336, 9.12653, 0.96 ) }
    dend_33 { pt3dadd( 47.6416, -4.40841, 9.09654, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 42/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 43.6072, -36.1396, -12.4403, 0.12 ) }
    dend_30 { pt3dadd( 45.0865, -36.4884, -11.9825, 0.12 ) }
    dend_30 { pt3dadd( 45.5226, -36.5798, -11.8457, 0.12 ) }
    dend_30 { pt3dadd( 46.0688, -36.6834, -11.6719, 0.6 ) }
    dend_30 { pt3dadd( 46.7388, -36.7866, -11.4657, 0.6 ) }
    dend_30 { pt3dadd( 47.7063, -36.911, -11.1892, 0.12 ) }
    dend_30 { pt3dadd( 48.6053, -36.9883, -10.9569, 0.12 ) }
    dend_30 { pt3dadd( 48.719, -36.9862, -10.9321, 0.36 ) }
    dend_30 { pt3dadd( 49.0865, -36.9573, -10.8629, 0.12 ) }
    dend_30 { pt3dadd( 49.5907, -36.8875, -10.75, 0.12 ) }
    dend_30 { pt3dadd( 50.0379, -36.7777, -10.6476, 0.48 ) }
    dend_30 { pt3dadd( 50.69, -36.5968, -10.5172, 0.6 ) }
    dend_30 { pt3dadd( 51.1415, -36.473, -10.4151, 0.48 ) }
    dend_30 { pt3dadd( 51.5437, -36.3861, -10.3278, 0.48 ) }
    dend_30 { pt3dadd( 52.4964, -36.2081, -9.9709, 0.12 ) }
    dend_30 { pt3dadd( 53.4606, -36.0975, -9.51984, 2.04 ) }
    dend_30 { pt3dadd( 54.0145, -36.0788, -9.23374, 3.25 ) }
    dend_30 { pt3dadd( 54.5295, -36.1235, -8.96561, 3.37 ) }
    dend_30 { pt3dadd( 55.1819, -36.2507, -8.64038, 2.88 ) }
    dend_30 { pt3dadd( 57.2411, -36.8564, -7.66409, 0.24 ) }
    dend_30 { pt3dadd( 58.1113, -37.1988, -7.28676, 0.24 ) }
    dend_30 { pt3dadd( 58.6644, -37.4728, -7.05051, 0.72 ) }
    dend_30 { pt3dadd( 59.6397, -37.9883, -6.68171, 0.96 ) }
    dend_30 { pt3dadd( 60.2658, -38.3422, -6.49559, 0.24 ) }
    dend_30 { pt3dadd( 60.4685, -38.4566, -6.4724, 0.24 ) }
    dend_30 { pt3dadd( 60.7624, -38.6032, -6.50958, 0.24 ) }
    dend_30 { pt3dadd( 61.431, -38.8108, -6.62284, 0.24 ) }
    dend_30 { pt3dadd( 62.0061, -38.8851, -6.72146, 1.2 ) }
    dend_30 { pt3dadd( 62.4719, -38.8831, -6.73187, 1.92 ) }
    dend_30 { pt3dadd( 63.4303, -38.8118, -6.65603, 1.92 ) }
    dend_30 { pt3dadd( 64.3964, -38.7023, -6.51471, 0.36 ) }
    dend_30 { pt3dadd( 65.0022, -38.6143, -6.3523, 0.36 ) }
    dend_30 { pt3dadd( 66.2, -38.4105, -5.94164, 0.36 ) }
    dend_30 { pt3dadd( 68.0846, -38.0831, -5.20582, 1.68 ) }
    dend_30 { pt3dadd( 68.6632, -37.9897, -4.98068, 2.52 ) }
    dend_30 { pt3dadd( 69.5529, -37.8689, -4.6312, 2.64 ) }
    dend_30 { pt3dadd( 71.5108, -37.6863, -3.96428, 0.24 ) }
    dend_30 { pt3dadd( 72.3656, -37.6438, -3.73064, 0.24 ) }
    dend_30 { pt3dadd( 72.9495, -37.6309, -3.63283, 0.36 ) }
    dend_30 { pt3dadd( 73.9582, -37.636, -3.62454, 1.08 ) }
    dend_30 { pt3dadd( 74.4791, -37.6421, -3.62343, 1.08 ) }
    dend_30 { pt3dadd( 75.4024, -37.6407, -3.65258, 0.48 ) }
    dend_30 { pt3dadd( 75.8658, -37.6247, -3.699, 0.24 ) }
    dend_30 { pt3dadd( 76.5138, -37.548, -3.6937, 0.24 ) }
    dend_30 { pt3dadd( 77.0776, -37.4187, -3.61653, 0.6 ) }
    dend_30 { pt3dadd( 78.1936, -37.0696, -3.31988, 0.36 ) }
    dend_30 { pt3dadd( 78.7278, -36.9177, -3.15982, 0.36 ) }
    dend_30 { pt3dadd( 79.1662, -36.8354, -2.98051, 0.36 ) }
    dend_30 { pt3dadd( 79.4819, -36.8186, -2.83162, 0.48 ) }
    dend_30 { pt3dadd( 79.7188, -36.836, -2.72489, 0.24 ) }
    dend_30 { pt3dadd( 80.1536, -36.8966, -2.53015, 0.24 ) }
    dend_30 { pt3dadd( 80.9385, -37.0338, -2.25544, 0.24 ) }
    dend_30 { pt3dadd( 82.0654, -37.2341, -1.91494, 0.24 ) }
    dend_30 { pt3dadd( 82.5347, -37.317, -1.79261, 1.2 ) }
    dend_30 { pt3dadd( 83.3444, -37.4256, -1.62127, 2.16 ) }
    dend_30 { pt3dadd( 84.5163, -37.5171, -1.37729, 1.8 ) }
    dend_30 { pt3dadd( 85.4418, -37.5374, -1.20232, 0.36 ) }
    dend_30 { pt3dadd( 86.788, -37.4577, -0.833327, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_30 { pt3dadd( 87.383, -37.3903, -0.645616, 0.36 ) }
    dend_30 { pt3dadd( 88.3582, -37.2404, -0.282336, 0.36 ) }
    dend_30 { pt3dadd( 89.2956, -37.0623, 0.194107, 1.56 ) }
    dend_30 { pt3dadd( 90.0095, -36.9081, 0.626813, 2.04 ) }
    dend_30 { pt3dadd( 91.9753, -36.4614, 2.02962, 0.24 ) }
    dend_30 { pt3dadd( 92.5419, -36.3386, 2.48521, 0.24 ) }
    dend_30 { pt3dadd( 92.8254, -36.2878, 2.71514, 0.24 ) }
    dend_30 { pt3dadd( 94.1206, -36.1523, 3.75755, 1.68 ) }
    dend_30 { pt3dadd( 94.5087, -36.136, 4.03992, 2.04 ) }
    dend_30 { pt3dadd( 94.8021, -36.1342, 4.26267, 2.04 ) }
    dend_30 { pt3dadd( 96.0905, -36.1244, 5.16326, 0.24 ) }
    dend_30 { pt3dadd( 96.6483, -36.0838, 5.58247, 0.24 ) }
    dend_30 { pt3dadd( 97.1092, -36.0071, 5.94039, 1.2 ) }
    dend_30 { pt3dadd( 97.4758, -35.8815, 6.22567, 1.2 ) }
    dend_30 { pt3dadd( 98.8402, -35.1377, 7.39164, 0.12 ) }
    dend_30 { pt3dadd( 99.3338, -34.7293, 7.8335, 0.12 ) }
    dend_30 { pt3dadd( 99.6082, -34.3985, 8.0605, 0.24 ) }
    dend_30 { pt3dadd( 99.795, -34.1322, 8.24332, 0.24 ) }
    dend_30 { pt3dadd( 100.159, -33.6305, 8.56504, 0.24 ) }
    dend_30 { pt3dadd( 100.365, -33.3755, 8.72336, 0.24 ) }
    dend_30 { pt3dadd( 100.762, -32.9872, 8.92007, 0.24 ) }
    dend_30 { pt3dadd( 101.415, -32.5079, 9.19496, 0.24 ) }
    dend_30 { pt3dadd( 102.627, -31.738, 9.70977, 0.12 ) }
    dend_30 { pt3dadd( 103.447, -31.2886, 10.0558, 0.12 ) }
    dend_30 { pt3dadd( 103.677, -31.1823, 10.152, 1.44 ) }
    dend_30 { pt3dadd( 104.552, -30.809, 10.5094, 2.52 ) }
    dend_30 { pt3dadd( 105.504, -30.3986, 10.8775, 2.04 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.2797, -338.892, -48.551, 0.12 ) }
    dend_20 { pt3dadd( -9.62308, -340.364, -48.4896, 0.12 ) }
    dend_20 { pt3dadd( -9.28541, -341.11, -48.4542, 0.12 ) }
    dend_20 { pt3dadd( -9.12951, -341.454, -48.4389, 0.48 ) }
    dend_20 { pt3dadd( -8.86111, -342.049, -48.3926, 0.48 ) }
    dend_20 { pt3dadd( -8.5733, -342.671, -48.3312, 0.48 ) }
    dend_20 { pt3dadd( -8.40105, -342.994, -48.3253, 0.48 ) }
    dend_20 { pt3dadd( -8.22371, -343.261, -48.3448, 0.48 ) }
    dend_20 { pt3dadd( -7.79333, -343.789, -48.4317, 1.68 ) }
    dend_20 { pt3dadd( -7.32455, -344.277, -48.5482, 2.28 ) }
    dend_20 { pt3dadd( -6.8692, -344.7, -48.6723, 2.4 ) }
    dend_20 { pt3dadd( -5.54523, -345.805, -49.0702, 0.48 ) }
    dend_20 { pt3dadd( -4.6277, -346.531, -49.3751, 0.36 ) }
    dend_20 { pt3dadd( -4.06213, -346.943, -49.5843, 0.12 ) }
    dend_20 { pt3dadd( -3.74976, -347.144, -49.7122, 0.12 ) }
    dend_20 { pt3dadd( -3.51026, -347.281, -49.8247, 0.12 ) }
    dend_20 { pt3dadd( -3.13646, -347.468, -50.0018, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 44/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -10.2797, -338.892, -48.551, 0.12 ) }
    dend_19 { pt3dadd( -10.4132, -340.208, -48.5623, 0.12 ) }
    dend_19 { pt3dadd( -10.4286, -340.541, -48.5823, 0.12 ) }
    dend_19 { pt3dadd( -10.425, -340.882, -48.6107, 0.12 ) }
    dend_19 { pt3dadd( -10.4083, -341.449, -48.7069, 0.12 ) }
    dend_19 { pt3dadd( -10.4046, -341.73, -48.766, 0.48 ) }
    dend_19 { pt3dadd( -10.4132, -342.249, -48.8849, 0.48 ) }
    dend_19 { pt3dadd( -10.4139, -342.443, -48.9468, 0.12 ) }
    dend_19 { pt3dadd( -10.5118, -343.026, -49.2298, 0.12 ) }
    dend_19 { pt3dadd( -10.6752, -343.58, -49.5535, 0.12 ) }
    dend_19 { pt3dadd( -10.7856, -343.899, -49.7427, 1.68 ) }
    dend_19 { pt3dadd( -10.8725, -344.142, -49.9023, 1.8 ) }
    dend_19 { pt3dadd( -11.0246, -344.556, -50.1953, 1.8 ) }
    dend_19 { pt3dadd( -11.4855, -345.842, -51.0783, 0.12 ) }
    dend_19 { pt3dadd( -11.6022, -346.187, -51.3135, 0.12 ) }
    dend_19 { pt3dadd( -11.7927, -346.903, -51.7448, 0.12 ) }
    dend_19 { pt3dadd( -11.887, -347.45, -52.0743, 0.48 ) }
    dend_19 { pt3dadd( -11.9044, -347.637, -52.1803, 0.48 ) }
    dend_19 { pt3dadd( -11.9032, -348.095, -52.3873, 0.48 ) }
    dend_19 { pt3dadd( -11.8993, -348.238, -52.4417, 0.12 ) }
    dend_19 { pt3dadd( -11.9107, -348.632, -52.6162, 0.12 ) }
    dend_19 { pt3dadd( -11.9549, -349.19, -52.8694, 0.12 ) }
    dend_19 { pt3dadd( -11.9853, -349.463, -52.9852, 0.96 ) }
    dend_19 { pt3dadd( -12.0706, -350.051, -53.2411, 1.44 ) }
    dend_19 { pt3dadd( -12.2669, -351.144, -53.7936, 0.12 ) }
    dend_19 { pt3dadd( -12.4058, -351.797, -54.1237, 0.12 ) }
    dend_19 { pt3dadd( -12.4699, -352.08, -54.2654, 0.12 ) }
    dend_19 { pt3dadd( -12.5206, -352.287, -54.3603, 0.6 ) }
    dend_19 { pt3dadd( -12.6132, -352.621, -54.5346, 0.6 ) }
    dend_19 { pt3dadd( -12.8029, -353.184, -54.9289, 0.12 ) }
    dend_19 { pt3dadd( -12.9967, -353.686, -55.3274, 0.12 ) }
    dend_19 { pt3dadd( -13.0266, -353.763, -55.3951, 0.48 ) }
    dend_19 { pt3dadd( -13.1081, -354.0, -55.5765, 0.48 ) }
    dend_19 { pt3dadd( -13.299, -354.701, -56.0013, 0.48 ) }
    dend_19 { pt3dadd( -13.474, -355.485, -56.3743, 0.24 ) }
    dend_19 { pt3dadd( -13.5141, -355.748, -56.5406, 0.12 ) }
    dend_19 { pt3dadd( -13.5805, -356.546, -57.0507, 0.12 ) }
    dend_19 { pt3dadd( -13.611, -357.067, -57.406, 1.44 ) }
    dend_19 { pt3dadd( -13.6211, -357.503, -57.7038, 2.16 ) }
    dend_19 { pt3dadd( -13.6187, -358.086, -58.0827, 2.28 ) }
    dend_19 { pt3dadd( -13.5893, -360.231, -59.4286, 0.12 ) }
    dend_19 { pt3dadd( -13.5487, -361.399, -60.186, 0.12 ) }
    dend_19 { pt3dadd( -13.5118, -362.043, -60.6177, 0.84 ) }
    dend_19 { pt3dadd( -13.4796, -362.495, -60.9186, 1.44 ) }
    dend_19 { pt3dadd( -13.4484, -362.87, -61.1623, 0.96 ) }
    dend_19 { pt3dadd( -13.4137, -363.267, -61.3513, 0.12 ) }
    dend_19 { pt3dadd( -13.3938, -363.645, -61.443, 0.12 ) }
    dend_19 { pt3dadd( -13.3922, -364.058, -61.5386, 0.12 ) }
    dend_19 { pt3dadd( -13.4004, -364.295, -61.5837, 0.36 ) }
    dend_19 { pt3dadd( -13.4923, -364.902, -61.0157, 0.12 ) }
    dend_19 { pt3dadd( -13.6812, -365.865, -59.7746, 0.12 ) }
    dend_19 { pt3dadd( -13.7341, -366.085, -59.3958, 1.08 ) }
    dend_19 { pt3dadd( -13.8005, -366.322, -58.8888, 1.8 ) }
    dend_19 { pt3dadd( -13.8374, -366.441, -58.5777, 2.04 ) }
    dend_19 { pt3dadd( -14.4812, -368.377, -52.638, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 99/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 16.3607, 114.274, 11.4834, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_14 { pt3dadd( 16.8764, 116.392, 11.8051, 0.48 ) }
    dend_14 { pt3dadd( 17.0778, 117.307, 11.9146, 0.48 ) }
    dend_14 { pt3dadd( 17.1881, 117.816, 11.9647, 0.48 ) }
    dend_14 { pt3dadd( 17.3198, 118.456, 11.9982, 0.48 ) }
    dend_14 { pt3dadd( 17.5731, 119.843, 12.0165, 0.48 ) }
    dend_14 { pt3dadd( 17.7826, 121.242, 12.0017, 0.48 ) }
    dend_14 { pt3dadd( 17.8108, 121.536, 11.975, 0.72 ) }
    dend_14 { pt3dadd( 17.8645, 122.104, 11.9551, 0.96 ) }
    dend_14 { pt3dadd( 17.9618, 123.046, 11.9661, 0.96 ) }
    dend_14 { pt3dadd( 18.0717, 123.854, 12.0793, 0.36 ) }
    dend_14 { pt3dadd( 18.2989, 125.078, 12.3737, 0.36 ) }
    dend_14 { pt3dadd( 18.4598, 125.845, 12.6073, 0.36 ) }
    dend_14 { pt3dadd( 18.8082, 127.482, 13.1564, 1.56 ) }
    dend_14 { pt3dadd( 18.9662, 128.227, 13.4237, 2.16 ) }
    dend_14 { pt3dadd( 19.3848, 130.191, 14.1746, 0.48 ) }
    dend_14 { pt3dadd( 19.674, 131.668, 14.6598, 0.48 ) }
    dend_14 { pt3dadd( 19.8201, 132.532, 14.9053, 0.48 ) }
    dend_14 { pt3dadd( 19.8745, 133.033, 15.0105, 0.48 ) }
    dend_14 { pt3dadd( 19.8805, 133.926, 15.0972, 1.68 ) }
    dend_14 { pt3dadd( 19.8399, 134.459, 15.1148, 1.92 ) }
    dend_14 { pt3dadd( 19.6458, 136.173, 15.0207, 1.08 ) }
    dend_14 { pt3dadd( 19.5499, 137.09, 14.9732, 0.48 ) }
    dend_14 { pt3dadd( 19.5106, 137.75, 14.941, 0.36 ) }
    dend_14 { pt3dadd( 19.5347, 138.963, 14.8922, 0.36 ) }
    dend_14 { pt3dadd( 19.6359, 139.77, 14.904, 0.36 ) }
    dend_14 { pt3dadd( 19.9663, 141.23, 14.9509, 0.72 ) }
    dend_14 { pt3dadd( 20.1479, 141.785, 14.9792, 0.36 ) }
    dend_14 { pt3dadd( 20.3798, 142.431, 14.9877, 0.36 ) }
    dend_14 { pt3dadd( 20.7573, 143.366, 14.9971, 0.36 ) }
    dend_14 { pt3dadd( 21.2692, 144.554, 15.0074, 0.84 ) }
    dend_14 { pt3dadd( 21.8417, 145.809, 15.2177, 1.92 ) }
    dend_14 { pt3dadd( 22.1652, 146.672, 15.2666, 2.28 ) }
    dend_14 { pt3dadd( 22.3542, 147.303, 15.2376, 2.64 ) }
    dend_14 { pt3dadd( 22.4755, 147.818, 15.1626, 2.76 ) }
    dend_14 { pt3dadd( 22.6033, 148.551, 14.9838, 2.76 ) }
    dend_14 { pt3dadd( 23.0879, 151.538, 13.9699, 1.56 ) }
    dend_14 { pt3dadd( 23.8044, 155.491, 12.3876, 0.12 ) }
    dend_14 { pt3dadd( 23.8803, 155.86, 12.2307, 0.12 ) }
    dend_14 { pt3dadd( 23.9511, 156.187, 12.106, 0.12 ) }
    dend_14 { pt3dadd( 24.0457, 156.725, 11.9172, 0.72 ) }
    dend_14 { pt3dadd( 24.1519, 157.501, 11.6769, 0.96 ) }
    dend_14 { pt3dadd( 24.2335, 158.427, 11.3908, 0.48 ) }
    dend_14 { pt3dadd( 24.3405, 159.22, 11.3618, 0.36 ) }
    dend_14 { pt3dadd( 24.5423, 161.006, 11.3083, 0.36 ) }
    dend_14 { pt3dadd( 24.5947, 161.582, 11.3402, 0.36 ) }
    dend_14 { pt3dadd( 24.6227, 162.03, 11.3848, 0.12 ) }
    dend_14 { pt3dadd( 24.6726, 163.184, 11.5855, 0.96 ) }
    dend_14 { pt3dadd( 24.7089, 163.99, 11.7737, 1.32 ) }
    dend_14 { pt3dadd( 24.7498, 164.5, 11.8583, 1.2 ) }
    dend_14 { pt3dadd( 24.9511, 166.078, 12.2965, 0.48 ) }
    dend_14 { pt3dadd( 25.1285, 167.207, 12.6473, 0.24 ) }
    dend_14 { pt3dadd( 25.2765, 168.045, 12.9129, 1.2 ) }
    dend_14 { pt3dadd( 25.4195, 168.762, 13.1395, 1.68 ) }
    dend_14 { pt3dadd( 25.7478, 170.241, 13.6139, 1.68 ) }
    dend_14 { pt3dadd( 26.3371, 172.719, 14.3974, 1.8 ) }
    dend_14 { pt3dadd( 26.5814, 173.671, 14.6607, 0.96 ) }
    dend_14 { pt3dadd( 26.8746, 174.658, 15.0278, 1.08 ) }
    dend_14 { pt3dadd( 27.1233, 175.428, 15.3205, 0.36 ) }
    dend_14 { pt3dadd( 27.6597, 177.051, 15.8689, 0.36 ) }
    dend_14 { pt3dadd( 27.9625, 178.025, 16.1406, 0.36 ) }
    dend_14 { pt3dadd( 28.1738, 178.711, 16.2387, 1.08 ) }
    dend_14 { pt3dadd( 28.7124, 180.514, 16.473, 1.2 ) }
    dend_14 { pt3dadd( 29.1387, 182.019, 16.6149, 0.96 ) }
    dend_14 { pt3dadd( 29.5425, 183.577, 16.6791, 0.36 ) }
    dend_14 { pt3dadd( 29.8663, 184.954, 16.5694, 0.24 ) }
    dend_14 { pt3dadd( 30.0493, 185.829, 16.4294, 0.6 ) }
    dend_14 { pt3dadd( 30.1634, 186.409, 16.3282, 0.12 ) }
    dend_14 { pt3dadd( 30.2725, 186.906, 16.2305, 0.24 ) }
    dend_14 { pt3dadd( 30.6402, 188.393, 15.9798, 0.24 ) }
    dend_14 { pt3dadd( 30.9569, 189.633, 15.779, 0.24 ) }
    dend_14 { pt3dadd( 31.1946, 190.63, 15.5293, 1.68 ) }
    dend_14 { pt3dadd( 31.5102, 192.108, 15.1219, 2.52 ) }
    dend_14 { pt3dadd( 31.7252, 193.356, 14.7861, 0.48 ) }
    dend_14 { pt3dadd( 31.9018, 194.562, 14.4691, 0.48 ) }
    dend_14 { pt3dadd( 32.0256, 195.737, 14.1923, 0.72 ) }
    dend_14 { pt3dadd( 32.0909, 197.034, 13.9555, 1.08 ) }
    dend_14 { pt3dadd( 32.0829, 197.912, 13.8288, 1.68 ) }
    dend_14 { pt3dadd( 31.9916, 199.061, 13.6858, 1.2 ) }
    dend_14 { pt3dadd( 31.8637, 200.028, 13.6395, 0.36 ) }
    dend_14 { pt3dadd( 31.6749, 201.292, 13.651, 0.36 ) }
    dend_14 { pt3dadd( 31.5446, 202.148, 13.7275, 0.36 ) }
    dend_14 { pt3dadd( 31.3891, 203.12, 13.8578, 0.36 ) }
    dend_14 { pt3dadd( 31.2009, 204.315, 14.0124, 2.04 ) }
    dend_14 { pt3dadd( 31.1291, 204.839, 14.088, 2.4 ) }
    dend_14 { pt3dadd( 31.0132, 206.08, 14.2137, 2.4 ) }
    dend_14 { pt3dadd( 30.9761, 207.961, 14.2516, 0.36 ) }
    dend_14 { pt3dadd( 31.0449, 209.115, 14.1877, 0.36 ) }
    dend_14 { pt3dadd( 31.1708, 210.14, 14.1261, 1.44 ) }
    dend_14 { pt3dadd( 31.3244, 210.933, 14.0776, 2.16 ) }
    dend_14 { pt3dadd( 31.7309, 212.764, 13.9787, 0.48 ) }
    dend_14 { pt3dadd( 31.9788, 213.814, 13.9377, 0.12 ) }
    dend_14 { pt3dadd( 32.1559, 214.537, 13.8941, 0.6 ) }
    dend_14 { pt3dadd( 32.5616, 216.227, 13.9043, 0.36 ) }
    dend_14 { pt3dadd( 32.734, 217.051, 13.9766, 0.24 ) }
    dend_14 { pt3dadd( 32.877, 218.006, 14.1454, 0.24 ) }
    dend_14 { pt3dadd( 32.9176, 218.539, 14.2632, 0.24 ) }
    dend_14 { pt3dadd( 32.9508, 219.523, 14.4238, 0.36 ) }
    dend_14 { pt3dadd( 32.9848, 220.62, 14.5022, 0.36 ) }
    dend_14 { pt3dadd( 33.0567, 221.424, 14.5114, 0.36 ) }
    dend_14 { pt3dadd( 33.1611, 222.066, 14.5309, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( 33.427, 223.165, 14.5453, 1.68 ) }
    dend_14 { pt3dadd( 33.6504, 223.95, 14.482, 2.4 ) }
    dend_14 { pt3dadd( 33.8158, 224.491, 14.3901, 2.4 ) }
    dend_14 { pt3dadd( 34.3154, 225.944, 14.1436, 0.24 ) }
    dend_14 { pt3dadd( 34.5672, 226.635, 14.0358, 0.24 ) }
    dend_14 { pt3dadd( 34.7226, 227.071, 13.9779, 0.48 ) }
    dend_14 { pt3dadd( 35.2098, 228.573, 13.8568, 0.24 ) }
    dend_14 { pt3dadd( 35.4201, 229.48, 13.8091, 0.24 ) }
    dend_14 { pt3dadd( 35.5508, 230.452, 13.7457, 0.24 ) }
    dend_14 { pt3dadd( 35.5836, 231.24, 13.7307, 0.72 ) }
    dend_14 { pt3dadd( 35.5969, 231.927, 13.7692, 0.84 ) }
    dend_14 { pt3dadd( 35.6044, 232.401, 13.8148, 0.36 ) }
    dend_14 { pt3dadd( 35.6249, 233.307, 13.8875, 0.36 ) }
    dend_14 { pt3dadd( 35.6538, 234.282, 13.8561, 0.48 ) }
    dend_14 { pt3dadd( 35.7175, 235.702, 13.65, 0.36 ) }
    dend_14 { pt3dadd( 35.7967, 236.487, 13.4727, 0.36 ) }
    dend_14 { pt3dadd( 35.8791, 237.025, 13.3556, 0.96 ) }
    dend_14 { pt3dadd( 36.1358, 238.286, 13.0104, 0.96 ) }
    dend_14 { pt3dadd( 36.3, 238.867, 12.8816, 0.36 ) }
    dend_14 { pt3dadd( 36.4498, 239.354, 12.8146, 0.36 ) }
    dend_14 { pt3dadd( 36.8481, 240.705, 12.6946, 2.4 ) }
    dend_14 { pt3dadd( 37.2429, 242.148, 12.6842, 3.25 ) }
    dend_14 { pt3dadd( 37.5637, 243.487, 12.7797, 2.16 ) }
    dend_14 { pt3dadd( 37.9529, 245.38, 12.9886, 0.24 ) }
    dend_14 { pt3dadd( 38.1998, 246.771, 13.1361, 0.12 ) }
    dend_14 { pt3dadd( 38.3735, 247.938, 13.2338, 0.24 ) }
    dend_14 { pt3dadd( 38.4093, 248.336, 13.2556, 0.36 ) }
    dend_14 { pt3dadd( 38.4477, 249.369, 13.222, 0.36 ) }
    dend_14 { pt3dadd( 38.4465, 250.668, 13.1222, 1.32 ) }
    dend_14 { pt3dadd( 38.4385, 251.469, 13.0043, 0.48 ) }
    dend_14 { pt3dadd( 38.4605, 251.932, 12.9398, 0.12 ) }
    dend_14 { pt3dadd( 38.5438, 252.733, 12.8303, 0.12 ) }
    dend_14 { pt3dadd( 38.6687, 253.655, 12.7278, 0.12 ) }
    dend_14 { pt3dadd( 38.7695, 254.224, 12.6815, 0.84 ) }
    dend_14 { pt3dadd( 39.0781, 255.807, 12.619, 1.56 ) }
    dend_14 { pt3dadd( 39.2133, 256.443, 12.6039, 1.68 ) }
    dend_14 { pt3dadd( 39.5009, 257.594, 12.5967, 0.12 ) }
    dend_14 { pt3dadd( 39.8133, 258.578, 12.5846, 0.12 ) }
    dend_14 { pt3dadd( 40.047, 259.055, 12.7138, 0.24 ) }
    dend_14 { pt3dadd( 40.1949, 259.239, 12.833, 0.12 ) }
    dend_14 { pt3dadd( 40.6395, 259.539, 13.2423, 0.12 ) }
    dend_14 { pt3dadd( 40.9428, 259.684, 13.5524, 0.12 ) }
    dend_14 { pt3dadd( 42.0178, 260.023, 14.7541, 3.25 ) }
    dend_14 { pt3dadd( 45.1031, 260.589, 18.4151, 0.12 ) }
    dend_14 { pt3dadd( 45.3856, 260.616, 18.7725, 0.12 ) }
    dend_14 { pt3dadd( 45.6261, 260.616, 19.0924, 0.72 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 16.3607, 114.274, 11.4834, 0.12 ) }
    dend_13 { pt3dadd( 14.4711, 114.932, 11.1883, 0.12 ) }
    dend_13 { pt3dadd( 14.0134, 115.091, 11.132, 0.12 ) }
    dend_13 { pt3dadd( 13.6781, 115.212, 11.0607, 0.96 ) }
    dend_13 { pt3dadd( 12.848, 115.497, 10.8403, 0.12 ) }
    dend_13 { pt3dadd( 12.2938, 115.679, 10.6334, 0.12 ) }
    dend_13 { pt3dadd( 11.9729, 115.786, 10.501, 0.12 ) }
    dend_13 { pt3dadd( 11.5147, 115.947, 10.2856, 1.08 ) }
    dend_13 { pt3dadd( 10.5511, 116.261, 9.89298, 0.36 ) }
    dend_13 { pt3dadd( 9.61493, 116.553, 9.52085, 0.36 ) }
    dend_13 { pt3dadd( 8.42782, 116.948, 9.18988, 0.36 ) }
    dend_13 { pt3dadd( 7.89086, 117.115, 9.05367, 0.36 ) }
    dend_13 { pt3dadd( 6.85253, 117.382, 9.03876, 0.36 ) }
    dend_13 { pt3dadd( 6.2604, 117.49, 9.16351, 0.36 ) }
    dend_13 { pt3dadd( 5.60516, 117.55, 9.44663, 0.36 ) }
    dend_13 { pt3dadd( 4.16765, 117.626, 10.2772, 1.92 ) }
    dend_13 { pt3dadd( 3.36945, 117.628, 10.8506, 1.92 ) }
    dend_13 { pt3dadd( 0.944078, 117.483, 12.7839, 0.12 ) }
    dend_13 { pt3dadd( 0.404893, 117.417, 13.2647, 0.12 ) }
    dend_13 { pt3dadd( 0.0962663, 117.36, 13.5808, 0.72 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.94079, 154.508, -17.2791, 0.12 ) }
    dend_11 { pt3dadd( -6.42624, 155.561, -18.194, 0.12 ) }
    dend_11 { pt3dadd( -6.50007, 155.761, -18.3313, 0.12 ) }
    dend_11 { pt3dadd( -6.60587, 156.138, -18.5291, 0.24 ) }
    dend_11 { pt3dadd( -6.83757, 157.406, -19.1676, 0.24 ) }
    dend_11 { pt3dadd( -6.89331, 157.88, -19.3867, 0.24 ) }
    dend_11 { pt3dadd( -6.92007, 158.214, -19.5315, 0.24 ) }
    dend_11 { pt3dadd( -6.89424, 158.926, -19.7776, 1.68 ) }
    dend_11 { pt3dadd( -6.85282, 159.421, -19.9705, 1.68 ) }
    dend_11 { pt3dadd( -6.64938, 160.899, -20.5695, 0.12 ) }
    dend_11 { pt3dadd( -6.54883, 161.486, -20.7984, 0.12 ) }
    dend_11 { pt3dadd( -6.51063, 161.683, -20.8904, 0.6 ) }
    dend_11 { pt3dadd( -6.42842, 162.063, -21.0962, 0.48 ) }
    dend_11 { pt3dadd( -6.20745, 162.986, -21.6598, 0.12 ) }
    dend_11 { pt3dadd( -6.08085, 163.462, -21.9761, 0.12 ) }
    dend_11 { pt3dadd( -6.04466, 163.581, -22.0435, 0.12 ) }
    dend_11 { pt3dadd( -5.96508, 163.851, -22.1917, 0.96 ) }
    dend_11 { pt3dadd( -5.88143, 164.131, -22.3302, 0.96 ) }
    dend_11 { pt3dadd( -5.79183, 164.444, -22.4788, 0.48 ) }
    dend_11 { pt3dadd( -5.57785, 165.19, -22.7751, 0.12 ) }
    dend_11 { pt3dadd( -5.28728, 166.212, -23.1821, 0.12 ) }
    dend_11 { pt3dadd( -5.10746, 166.853, -23.4443, 1.8 ) }
    dend_11 { pt3dadd( -5.01472, 167.19, -23.5824, 2.16 ) }
    dend_11 { pt3dadd( -4.72084, 168.229, -23.9873, 0.12 ) }
    dend_11 { pt3dadd( -4.49458, 168.984, -24.264, 0.12 ) }
    dend_11 { pt3dadd( -4.40409, 169.276, -24.3562, 0.96 ) }
    dend_11 { pt3dadd( -4.26076, 169.734, -24.4965, 0.24 ) }
    dend_11 { pt3dadd( -4.12397, 170.168, -24.6244, 0.24 ) }
    dend_11 { pt3dadd( -3.90505, 170.82, -24.8193, 1.68 ) }
    dend_11 { pt3dadd( -3.72205, 171.304, -24.9571, 0.12 ) }
    dend_11 { pt3dadd( -3.5496, 171.697, -25.0719, 0.12 ) }
    dend_11 { pt3dadd( -3.30567, 172.192, -25.2876, 0.6 ) }
    dend_11 { pt3dadd( -3.10457, 172.559, -25.4776, 0.12 ) }
    dend_11 { pt3dadd( -2.66132, 173.328, -25.9331, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_11 { pt3dadd( -2.57236, 173.477, -26.0283, 0.12 ) }
    dend_11 { pt3dadd( -2.21482, 174.08, -26.423, 1.92 ) }
    dend_11 { pt3dadd( -1.35426, 175.531, -27.3424, 0.12 ) }
    dend_11 { pt3dadd( -0.931744, 176.261, -27.772, 0.12 ) }
    dend_11 { pt3dadd( -0.807193, 176.487, -27.8787, 0.84 ) }
    dend_11 { pt3dadd( -0.676092, 176.754, -27.9744, 0.12 ) }
    dend_11 { pt3dadd( -0.378358, 177.464, -28.1496, 0.12 ) }
    dend_11 { pt3dadd( -0.178604, 178.021, -28.1633, 1.68 ) }
    dend_11 { pt3dadd( -0.056335, 178.381, -28.0761, 1.2 ) }
    dend_11 { pt3dadd( 0.159505, 179.005, -27.8709, 0.12 ) }
    dend_11 { pt3dadd( 0.364199, 179.551, -27.6397, 0.12 ) }
    dend_11 { pt3dadd( 0.518097, 179.921, -27.4497, 0.6 ) }
    dend_11 { pt3dadd( 0.962485, 180.874, -26.8882, 0.48 ) }
    dend_11 { pt3dadd( 1.18448, 181.341, -26.6129, 0.48 ) }
    dend_11 { pt3dadd( 1.3569, 181.688, -26.409, 0.48 ) }
    dend_11 { pt3dadd( 1.55124, 182.087, -26.2066, 0.12 ) }
    dend_11 { pt3dadd( 1.67905, 182.357, -26.0954, 0.12 ) }
    dend_11 { pt3dadd( 1.89301, 182.89, -25.9656, 1.44 ) }
    dend_11 { pt3dadd( 1.99441, 183.229, -25.9317, 1.68 ) }
    dend_11 { pt3dadd( 2.15887, 183.906, -25.8888, 0.12 ) }
    dend_11 { pt3dadd( 2.33542, 184.788, -25.8594, 0.12 ) }
    dend_11 { pt3dadd( 2.46928, 185.57, -25.8583, 1.92 ) }
    dend_11 { pt3dadd( 2.60812, 186.485, -25.865, 0.12 ) }
    dend_11 { pt3dadd( 2.74644, 187.451, -25.8844, 0.12 ) }
    dend_11 { pt3dadd( 2.79806, 187.807, -25.8967, 0.6 ) }
    dend_11 { pt3dadd( 2.82197, 187.983, -25.906, 0.12 ) }
    dend_11 { pt3dadd( 2.92165, 188.79, -25.9462, 0.12 ) }
    dend_11 { pt3dadd( 2.9738, 189.34, -26.0116, 1.08 ) }
    dend_11 { pt3dadd( 2.99739, 189.616, -26.0581, 0.72 ) }
    dend_11 { pt3dadd( 3.01011, 189.807, -26.1048, 0.12 ) }
    dend_11 { pt3dadd( 3.0485, 190.486, -26.3059, 0.12 ) }
    dend_11 { pt3dadd( 3.07951, 191.125, -26.5173, 1.44 ) }
    dend_11 { pt3dadd( 3.10985, 192.248, -27.0001, 0.12 ) }
    dend_11 { pt3dadd( 3.12294, 192.567, -27.1459, 0.12 ) }
    dend_11 { pt3dadd( 3.12825, 192.648, -27.1827, 0.48 ) }
    dend_11 { pt3dadd( 3.14568, 192.83, -27.26, 0.12 ) }
    dend_11 { pt3dadd( 3.23168, 193.407, -27.4689, 0.48 ) }
    dend_11 { pt3dadd( 3.38359, 194.114, -27.64, 0.12 ) }
    dend_11 { pt3dadd( 3.6106, 195.015, -27.8377, 0.12 ) }
    dend_11 { pt3dadd( 3.65372, 195.183, -27.8803, 0.72 ) }
    dend_11 { pt3dadd( 3.79964, 195.767, -28.0312, 1.44 ) }
    dend_11 { pt3dadd( 3.91222, 196.214, -28.1444, 1.8 ) }
    dend_11 { pt3dadd( 4.06521, 196.767, -28.2798, 1.68 ) }
    dend_11 { pt3dadd( 4.38524, 197.928, -28.5342, 0.12 ) }
    dend_11 { pt3dadd( 4.48998, 198.351, -28.6572, 0.12 ) }
    dend_11 { pt3dadd( 4.58464, 198.764, -28.7939, 0.12 ) }
    dend_11 { pt3dadd( 4.67251, 199.237, -28.9824, 1.32 ) }
    dend_11 { pt3dadd( 4.72681, 199.574, -29.1263, 1.32 ) }
    dend_11 { pt3dadd( 4.75721, 199.817, -29.2313, 1.32 ) }
    dend_11 { pt3dadd( 4.81867, 200.499, -29.4847, 0.12 ) }
    dend_11 { pt3dadd( 4.84744, 201.102, -29.7711, 0.12 ) }
    dend_11 { pt3dadd( 4.83239, 201.705, -30.1321, 0.72 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.94079, 154.508, -17.2791, 0.12 ) }
    dend_10 { pt3dadd( 1.48149, 154.063, -1.09448, 0.12 ) }
    dend_10 { pt3dadd( 1.77085, 154.047, -0.47552, 0.12 ) }
    dend_10 { pt3dadd( 1.95325, 154.038, -0.09305, 0.12 ) }
    dend_10 { pt3dadd( 2.58155, 154.006, 1.197, 0.84 ) }
    dend_10 { pt3dadd( 2.79293, 153.995, 1.63144, 0.84 ) }
    dend_10 { pt3dadd( 3.23995, 153.959, 2.63422, 0.36 ) }
    dend_10 { pt3dadd( 3.38819, 154.065, 2.18635, 0.36 ) }
    dend_10 { pt3dadd( 3.49172, 154.186, 1.72969, 0.36 ) }
    dend_10 { pt3dadd( 3.59289, 154.332, 1.18889, 0.36 ) }
    dend_10 { pt3dadd( 3.81832, 154.676, -0.0670161, 0.36 ) }
    dend_10 { pt3dadd( 4.27058, 155.434, -2.72067, 0.36 ) }
    dend_10 { pt3dadd( 4.52673, 155.858, -4.10797, 2.04 ) }
    dend_10 { pt3dadd( 4.94449, 156.516, -6.20377, 1.56 ) }
    dend_10 { pt3dadd( 5.15793, 156.814, -7.08931, 0.12 ) }
    dend_10 { pt3dadd( 5.27647, 156.957, -7.47912, 0.12 ) }
    dend_10 { pt3dadd( 5.70697, 157.327, -8.43934, 1.2 ) }
    dend_10 { pt3dadd( 6.13649, 157.558, -9.05115, 0.48 ) }
    dend_10 { pt3dadd( 6.39848, 157.663, -9.34567, 0.12 ) }
    dend_10 { pt3dadd( 7.17592, 157.942, -10.0469, 0.12 ) }
    dend_10 { pt3dadd( 7.95472, 158.242, -10.8393, 1.32 ) }
    dend_10 { pt3dadd( 8.29811, 158.383, -11.2268, 1.68 ) }
    dend_10 { pt3dadd( 9.27292, 158.852, -12.4808, 0.12 ) }
    dend_10 { pt3dadd( 9.5455, 159.018, -12.9296, 0.12 ) }
    dend_10 { pt3dadd( 9.91016, 159.287, -13.7016, 0.6 ) }
    dend_10 { pt3dadd( 10.5352, 159.782, -15.2825, 0.12 ) }
    dend_10 { pt3dadd( 10.7437, 159.937, -15.8345, 0.12 ) }
    dend_10 { pt3dadd( 11.3079, 160.341, -17.4179, 1.8 ) }
    dend_10 { pt3dadd( 11.9001, 160.735, -19.05, 1.8 ) }
    dend_10 { pt3dadd( 12.4839, 161.075, -20.796, 0.48 ) }
    dend_10 { pt3dadd( 12.6982, 161.167, -21.4017, 0.48 ) }
    dend_10 { pt3dadd( 12.9377, 161.229, -21.9532, 0.48 ) }
    dend_10 { pt3dadd( 13.4407, 161.321, -23.0229, 1.44 ) }
    dend_10 { pt3dadd( 13.7559, 161.357, -23.6282, 1.68 ) }
    dend_10 { pt3dadd( 14.9401, 161.538, -25.755, 0.36 ) }
    dend_10 { pt3dadd( 15.4619, 161.698, -26.7007, 0.36 ) }
    dend_10 { pt3dadd( 15.867, 161.943, -27.6727, 1.68 ) }
    dend_10 { pt3dadd( 16.2017, 162.245, -28.6391, 1.2 ) }
    dend_10 { pt3dadd( 16.6112, 162.768, -30.0677, 0.36 ) }
    dend_10 { pt3dadd( 16.8555, 163.186, -31.0654, 0.36 ) }
    dend_10 { pt3dadd( 17.1258, 163.861, -32.4462, 1.68 ) }
    dend_10 { pt3dadd( 17.5118, 165.255, -35.1006, 0.24 ) }
    dend_10 { pt3dadd( 17.5878, 165.583, -35.6834, 0.24 ) }
    dend_10 { pt3dadd( 17.6966, 165.974, -36.34, 0.84 ) }
    dend_10 { pt3dadd( 17.8031, 166.264, -36.8208, 0.96 ) }
    dend_10 { pt3dadd( 18.14, 166.849, -37.8874, 0.24 ) }
    dend_10 { pt3dadd( 18.396, 167.111, -38.4427, 0.24 ) }
    dend_10 { pt3dadd( 18.975, 167.457, -39.3892, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( 19.2176, 167.551, -39.8768, 1.68 ) }
    dend_10 { pt3dadd( 19.5693, 167.614, -40.9351, 0.36 ) }
    dend_10 { pt3dadd( 19.7161, 167.601, -41.5111, 0.36 ) }
    dend_10 { pt3dadd( 19.8088, 167.559, -41.9776, 0.36 ) }
    dend_10 { pt3dadd( 20.1441, 167.318, -43.9856, 0.96 ) }
    dend_10 { pt3dadd( 20.4974, 166.984, -46.2982, 1.68 ) }
    dend_10 { pt3dadd( 20.9138, 166.546, -49.072, 0.6 ) }
    dend_10 { pt3dadd( 20.9953, 166.448, -49.5994, 0.48 ) }
    dend_10 { pt3dadd( 21.315, 166.021, -51.5232, 2.04 ) }
    dend_10 { pt3dadd( 21.4374, 165.841, -52.159, 2.52 ) }
    dend_10 { pt3dadd( 21.8829, 165.205, -53.8602, 0.36 ) }
    dend_10 { pt3dadd( 22.043, 165.014, -54.277, 0.36 ) }
    dend_10 { pt3dadd( 22.3619, 164.729, -54.8504, 0.48 ) }
    dend_10 { pt3dadd( 23.0822, 164.14, -56.0066, 0.36 ) }
    dend_10 { pt3dadd( 23.3573, 163.91, -56.3944, 0.36 ) }
    dend_10 { pt3dadd( 23.5147, 163.771, -56.6108, 0.36 ) }
    dend_10 { pt3dadd( 24.341, 163.057, -57.5933, 0.36 ) }
    dend_10 { pt3dadd( 25.0465, 162.471, -58.3489, 1.08 ) }
    dend_10 { pt3dadd( 25.5545, 162.089, -58.8022, 1.8 ) }
    dend_10 { pt3dadd( 26.2447, 161.625, -59.2835, 1.2 ) }
    dend_10 { pt3dadd( 26.8449, 161.275, -59.6687, 0.36 ) }
    dend_10 { pt3dadd( 27.7044, 160.843, -60.0952, 0.36 ) }
    dend_10 { pt3dadd( 28.6113, 160.454, -60.4368, 0.36 ) }
    dend_10 { pt3dadd( 29.335, 160.203, -60.652, 1.2 ) }
    dend_10 { pt3dadd( 30.2343, 159.97, -60.9095, 1.8 ) }
    dend_10 { pt3dadd( 31.4193, 159.749, -61.2612, 0.12 ) }
    dend_10 { pt3dadd( 33.0862, 159.519, -61.7992, 0.12 ) }
    dend_10 { pt3dadd( 33.9915, 159.41, -62.1238, 1.44 ) }
    dend_10 { pt3dadd( 34.5033, 159.331, -62.329, 2.16 ) }
    dend_10 { pt3dadd( 35.4113, 159.124, -62.7145, 2.4 ) }
    dend_10 { pt3dadd( 36.5959, 158.752, -63.2175, 0.24 ) }
    dend_10 { pt3dadd( 37.0687, 158.54, -63.4162, 0.24 ) }
    dend_10 { pt3dadd( 37.5046, 158.266, -63.6283, 0.24 ) }
    dend_10 { pt3dadd( 38.2779, 157.674, -63.9477, 0.48 ) }
    dend_10 { pt3dadd( 38.7893, 157.232, -64.1345, 0.12 ) }
    dend_10 { pt3dadd( 39.4074, 156.716, -64.3017, 0.12 ) }
    dend_10 { pt3dadd( 39.8564, 156.392, -64.3658, 0.12 ) }
    dend_10 { pt3dadd( 40.3277, 156.122, -64.4196, 0.12 ) }
    dend_10 { pt3dadd( 40.9479, 155.861, -64.4131, 0.36 ) }
    dend_10 { pt3dadd( 41.363, 155.737, -64.3833, 0.12 ) }
    dend_10 { pt3dadd( 42.6608, 155.402, -64.269, 0.12 ) }
    dend_10 { pt3dadd( 43.7964, 155.141, -64.1473, 1.44 ) }
    dend_10 { pt3dadd( 44.0882, 155.079, -64.1143, 1.56 ) }
    dend_10 { pt3dadd( 45.7727, 154.712, -63.9005, 0.36 ) }
    dend_10 { pt3dadd( 46.3341, 154.561, -63.7502, 0.36 ) }
    dend_10 { pt3dadd( 46.68, 154.443, -63.6122, 0.36 ) }
    dend_10 { pt3dadd( 47.108, 154.234, -63.3833, 0.36 ) }
    dend_10 { pt3dadd( 47.42, 154.041, -63.242, 0.36 ) }
    dend_10 { pt3dadd( 47.6474, 153.882, -63.1235, 0.36 ) }
    dend_10 { pt3dadd( 49.176, 152.685, -62.344, 0.12 ) }
    dend_10 { pt3dadd( 49.4724, 152.454, -62.1931, 0.12 ) }
    dend_10 { pt3dadd( 49.8096, 152.201, -62.01, 0.12 ) }
    dend_10 { pt3dadd( 50.9513, 151.398, -61.4123, 2.4 ) }
    dend_10 { pt3dadd( 52.8734, 150.124, -60.5329, 0.12 ) }
    dend_10 { pt3dadd( 53.406, 149.779, -60.3329, 0.12 ) }
    dend_10 { pt3dadd( 54.077, 149.355, -60.1017, 0.36 ) }
    dend_10 { pt3dadd( 54.7381, 148.945, -59.8414, 0.12 ) }
    dend_10 { pt3dadd( 55.2888, 148.606, -59.6072, 0.12 ) }
    dend_10 { pt3dadd( 55.8153, 148.274, -59.3667, 1.08 ) }
    dend_10 { pt3dadd( 56.2667, 147.987, -59.1628, 1.08 ) }
    dend_10 { pt3dadd( 57.8311, 146.955, -58.3661, 0.36 ) }
    dend_10 { pt3dadd( 58.2365, 146.652, -58.1614, 0.36 ) }
    dend_10 { pt3dadd( 58.5504, 146.395, -58.0356, 0.12 ) }
    dend_10 { pt3dadd( 58.745, 146.235, -57.9375, 0.12 ) }
    dend_10 { pt3dadd( 59.8321, 145.348, -57.3492, 0.12 ) }
    dend_10 { pt3dadd( 60.3197, 144.964, -57.1056, 1.32 ) }
    dend_10 { pt3dadd( 61.0532, 144.412, -56.7786, 2.04 ) }
    dend_10 { pt3dadd( 61.9092, 143.829, -56.3992, 1.32 ) }
    dend_10 { pt3dadd( 63.8329, 142.638, -55.5405, 0.12 ) }
    dend_10 { pt3dadd( 64.0907, 142.5, -55.4335, 0.12 ) }
    dend_10 { pt3dadd( 64.5528, 142.326, -55.1704, 0.24 ) }
    dend_10 { pt3dadd( 65.2578, 142.11, -54.7198, 0.24 ) }
    dend_10 { pt3dadd( 65.8086, 141.987, -54.3235, 0.24 ) }
    dend_10 { pt3dadd( 66.5823, 141.868, -53.7054, 0.24 ) }
    dend_10 { pt3dadd( 66.9695, 141.837, -53.4101, 0.84 ) }
    dend_10 { pt3dadd( 69.7792, 141.696, -50.9993, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 33.1936, 90.7963, 10.4891, 0.72 ) }
    dend_6 { pt3dadd( 32.7298, 90.2866, 9.49514, 0.72 ) }
    dend_6 { pt3dadd( 32.0205, 89.6835, 8.20912, 0.6 ) }
    dend_6 { pt3dadd( 31.5591, 89.2912, 7.37266, 0.36 ) }
    dend_6 { pt3dadd( 31.3876, 89.1454, 7.06167, 0.48 ) }
    dend_6 { pt3dadd( 30.9593, 88.7813, 6.2853, 0.36 ) }
    dend_6 { pt3dadd( 30.4364, 88.3367, 5.3372, 0.12 ) }
    dend_6 { pt3dadd( 30.2331, 88.2173, 5.01802, 0.12 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 33.1936, 90.7963, 10.4891, 0.48 ) }
    dend_5 { pt3dadd( 33.1706, 91.4154, 10.576, 0.48 ) }
    dend_5 { pt3dadd( 33.1523, 91.9461, 10.6831, 0.48 ) }
    dend_5 { pt3dadd( 33.1005, 92.5073, 10.8147, 0.6 ) }
    dend_5 { pt3dadd( 33.0409, 92.9565, 10.9381, 0.48 ) }
    dend_5 { pt3dadd( 32.9442, 93.6305, 11.132, 0.48 ) }
    dend_5 { pt3dadd( 32.836, 94.3923, 11.3527, 2.04 ) }
    dend_5 { pt3dadd( 32.7701, 95.0201, 11.5303, 1.92 ) }
    dend_5 { pt3dadd( 32.6871, 95.7534, 11.6994, 1.44 ) }
    dend_5 { pt3dadd( 32.6139, 96.3357, 11.8082, 1.08 ) }
    dend_5 { pt3dadd( 32.5554, 96.8541, 11.8871, 0.96 ) }
    dend_5 { pt3dadd( 32.5331, 97.1201, 11.9022, 0.72 ) }
    dend_5 { pt3dadd( 32.5054, 97.7485, 11.8572, 1.08 ) }
    dend_5 { pt3dadd( 32.5309, 98.7869, 11.7357, 0.48 ) }
    dend_5 { pt3dadd( 32.5683, 99.223, 11.6795, 0.48 ) }
    dend_5 { pt3dadd( 32.6535, 99.9445, 11.5933, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 32.7231, 100.582, 11.5194, 1.92 ) }
    dend_5 { pt3dadd( 32.8216, 101.424, 11.4705, 1.08 ) }
    dend_5 { pt3dadd( 32.9083, 102.013, 11.4764, 0.72 ) }
    dend_5 { pt3dadd( 32.9697, 102.322, 11.5121, 0.24 ) }
    dend_5 { pt3dadd( 33.1536, 103.027, 11.5888, 0.24 ) }
    dend_5 { pt3dadd( 33.2854, 103.548, 11.6491, 0.72 ) }
    dend_5 { pt3dadd( 33.4224, 104.148, 11.7589, 0.12 ) }
    dend_5 { pt3dadd( 33.5573, 104.67, 11.8622, 0.12 ) }
    dend_5 { pt3dadd( 33.7421, 105.405, 11.9929, 1.8 ) }
    dend_5 { pt3dadd( 33.9667, 106.338, 12.1654, 2.76 ) }
    dend_5 { pt3dadd( 34.1095, 106.94, 12.2959, 2.64 ) }
    dend_5 { pt3dadd( 34.3477, 107.943, 12.5299, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 26.1718, -124.417, -40.0145, 0.12 ) }
    dend_39 { pt3dadd( 26.7183, -124.981, -39.931, 0.12 ) }
    dend_39 { pt3dadd( 27.1718, -125.45, -39.8617, 0.12 ) }
    dend_39 { pt3dadd( 27.6304, -125.924, -39.7916, 0.6 ) }
    dend_39 { pt3dadd( 27.8711, -126.173, -39.7548, 0.12 ) }
    dend_39 { pt3dadd( 28.4481, -126.769, -39.6667, 0.12 ) }
    dend_39 { pt3dadd( 28.7504, -127.081, -39.6205, 0.72 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 26.1718, -124.417, -40.0145, 0.12 ) }
    dend_36 { pt3dadd( 26.1038, -125.31, -39.9244, 0.12 ) }
    dend_36 { pt3dadd( 26.0563, -125.859, -39.7829, 0.12 ) }
    dend_36 { pt3dadd( 26.0368, -126.261, -39.6544, 0.96 ) }
    dend_36 { pt3dadd( 26.0279, -126.656, -39.5272, 1.56 ) }
    dend_36 { pt3dadd( 26.031, -127.278, -39.3359, 0.12 ) }
    dend_36 { pt3dadd( 26.0434, -127.604, -39.2421, 0.12 ) }
    dend_36 { pt3dadd( 26.1414, -128.612, -38.8896, 1.08 ) }
    dend_36 { pt3dadd( 26.202, -129.045, -38.7327, 0.72 ) }
    dend_36 { pt3dadd( 26.2601, -129.383, -38.6179, 0.12 ) }
    dend_36 { pt3dadd( 26.3319, -129.784, -38.449, 0.12 ) }
    dend_36 { pt3dadd( 26.3909, -130.148, -38.2836, 0.12 ) }
    dend_36 { pt3dadd( 26.4684, -130.726, -38.0405, 1.44 ) }
    dend_36 { pt3dadd( 26.5039, -131.036, -37.9284, 1.68 ) }
    dend_36 { pt3dadd( 26.5202, -131.279, -37.837, 1.68 ) }
    dend_36 { pt3dadd( 26.5605, -132.3, -37.4721, 0.12 ) }
    dend_36 { pt3dadd( 26.5545, -132.767, -37.3155, 0.12 ) }
    dend_36 { pt3dadd( 26.519, -133.267, -37.1747, 0.12 ) }
    dend_36 { pt3dadd( 26.4992, -133.441, -37.139, 0.96 ) }
    dend_36 { pt3dadd( 26.4403, -133.843, -37.0719, 0.96 ) }
    dend_36 { pt3dadd( 26.385, -134.212, -37.0294, 0.12 ) }
    dend_36 { pt3dadd( 26.2174, -135.206, -36.9994, 0.12 ) }
    dend_36 { pt3dadd( 26.1246, -135.713, -36.9856, 0.96 ) }
    dend_36 { pt3dadd( 26.0328, -136.173, -36.9835, 1.68 ) }
    dend_36 { pt3dadd( 25.9705, -136.497, -36.9871, 1.92 ) }
    dend_36 { pt3dadd( 25.9076, -136.836, -37.0059, 1.92 ) }
    dend_36 { pt3dadd( 25.7567, -137.675, -37.0893, 0.12 ) }
    dend_36 { pt3dadd( 25.6942, -137.993, -37.1466, 0.12 ) }
    dend_36 { pt3dadd( 25.5358, -138.702, -37.3024, 0.12 ) }
    dend_36 { pt3dadd( 25.4509, -139.017, -37.4059, 0.6 ) }
    dend_36 { pt3dadd( 25.311, -139.433, -37.5732, 0.12 ) }
    dend_36 { pt3dadd( 25.1408, -139.854, -37.7654, 0.12 ) }
    dend_36 { pt3dadd( 24.9533, -140.289, -37.9816, 1.2 ) }
    dend_36 { pt3dadd( 24.678, -140.892, -38.2908, 1.68 ) }
    dend_36 { pt3dadd( 24.2599, -141.76, -38.7244, 0.12 ) }
    dend_36 { pt3dadd( 24.0588, -142.195, -38.9391, 0.12 ) }
    dend_36 { pt3dadd( 23.9359, -142.506, -39.0767, 0.12 ) }
    dend_36 { pt3dadd( 23.8213, -142.874, -39.2415, 0.12 ) }
    dend_36 { pt3dadd( 23.7726, -143.095, -39.335, 1.2 ) }
    dend_36 { pt3dadd( 23.7025, -143.577, -39.5248, 1.56 ) }
    dend_36 { pt3dadd( 23.6331, -144.43, -39.8305, 0.24 ) }
    dend_36 { pt3dadd( 23.6084, -145.058, -40.0676, 0.24 ) }
    dend_36 { pt3dadd( 23.583, -145.687, -40.3148, 0.72 ) }
    dend_36 { pt3dadd( 23.5639, -145.996, -40.4366, 0.84 ) }
    dend_36 { pt3dadd( 23.5391, -146.326, -40.5626, 0.12 ) }
    dend_36 { pt3dadd( 23.5158, -146.556, -40.6502, 0.12 ) }
    dend_36 { pt3dadd( 23.4551, -146.935, -40.8029, 0.12 ) }
    dend_36 { pt3dadd( 23.4046, -147.206, -40.9236, 0.12 ) }
    dend_36 { pt3dadd( 23.352, -147.54, -40.9339, 0.12 ) }
    dend_36 { pt3dadd( 23.3302, -147.701, -40.9073, 0.12 ) }
    dend_36 { pt3dadd( 23.2504, -148.273, -40.7404, 1.32 ) }
    dend_36 { pt3dadd( 23.1419, -148.898, -40.5121, 0.12 ) }
    dend_36 { pt3dadd( 23.0641, -149.452, -40.2482, 0.12 ) }
    dend_36 { pt3dadd( 22.8095, -151.872, -38.7861, 0.6 ) }
    dend_36 { pt3dadd( 22.7302, -152.763, -38.0738, 1.32 ) }
    dend_36 { pt3dadd( 22.7109, -152.999, -37.8231, 2.04 ) }
    dend_36 { pt3dadd( 22.6945, -153.242, -37.464, 2.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 105.504, -30.3986, 10.8775, 0.24 ) }
    dend_32 { pt3dadd( 106.325, -30.3836, 11.2504, 0.24 ) }
    dend_32 { pt3dadd( 106.686, -30.3701, 11.4143, 0.24 ) }
    dend_32 { pt3dadd( 108.006, -30.3157, 12.0027, 0.24 ) }
    dend_32 { pt3dadd( 108.394, -30.2924, 12.1623, 0.96 ) }
    dend_32 { pt3dadd( 109.126, -30.2375, 12.4066, 1.56 ) }
    dend_32 { pt3dadd( 109.767, -30.1808, 12.629, 0.36 ) }
    dend_32 { pt3dadd( 111.007, -30.0511, 13.0362, 0.12 ) }
    dend_32 { pt3dadd( 111.288, -30.0163, 13.1239, 1.2 ) }
    dend_32 { pt3dadd( 112.165, -29.8823, 13.3489, 2.16 ) }
    dend_32 { pt3dadd( 113.254, -29.6595, 13.6484, 0.12 ) }
    dend_32 { pt3dadd( 114.377, -29.3577, 13.9577, 0.12 ) }
    dend_32 { pt3dadd( 114.574, -29.2857, 14.0095, 0.84 ) }
    dend_32 { pt3dadd( 114.956, -29.0989, 14.094, 0.96 ) }
    dend_32 { pt3dadd( 115.465, -28.8102, 14.2166, 0.12 ) }
    dend_32 { pt3dadd( 115.929, -28.4672, 14.3532, 0.12 ) }
    dend_32 { pt3dadd( 116.079, -28.3059, 14.4039, 0.6 ) }
    dend_32 { pt3dadd( 116.417, -27.835, 14.419, 0.12 ) }
    dend_32 { pt3dadd( 116.638, -27.4512, 14.4387, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 95/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 105.504, -30.3986, 10.8775, 0.6 ) }
    dend_31 { pt3dadd( 105.413, -29.0252, 10.9337, 0.6 ) }
    dend_31 { pt3dadd( 105.396, -28.6453, 10.9495, 0.6 ) }
    dend_31 { pt3dadd( 105.4, -27.8376, 10.9552, 0.84 ) }
    dend_31 { pt3dadd( 105.481, -26.7413, 10.9342, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_31 { pt3dadd( 105.571, -25.4948, 10.8916, 0.12 ) }
    dend_31 { pt3dadd( 105.604, -25.0707, 10.872, 0.96 ) }
    dend_31 { pt3dadd( 105.725, -24.1487, 10.8213, 1.2 ) }
    dend_31 { pt3dadd( 105.908, -23.1054, 10.7368, 0.12 ) }
    dend_31 { pt3dadd( 106.158, -21.9446, 10.6113, 0.12 ) }
    dend_31 { pt3dadd( 106.386, -21.0409, 10.4643, 0.12 ) }
    dend_31 { pt3dadd( 106.692, -20.0347, 10.2516, 0.12 ) }
    dend_31 { pt3dadd( 106.846, -19.5857, 10.1532, 0.12 ) }
    dend_31 { pt3dadd( 107.233, -18.5796, 9.92806, 1.68 ) }
    dend_31 { pt3dadd( 107.384, -18.2614, 9.78794, 1.92 ) }
    dend_31 { pt3dadd( 108.017, -17.1914, 9.08108, 0.12 ) }
    dend_31 { pt3dadd( 108.598, -16.3605, 8.34435, 0.12 ) }
    dend_31 { pt3dadd( 108.845, -15.9968, 7.959, 1.32 ) }
    dend_31 { pt3dadd( 109.037, -15.6742, 7.53881, 1.68 ) }
    dend_31 { pt3dadd( 110.111, -13.7895, 4.39607, 0.36 ) }
    dend_31 { pt3dadd( 110.241, -13.5863, 3.98463, 0.36 ) }
    dend_31 { pt3dadd( 110.415, -13.3309, 3.36375, 0.12 ) }
    dend_31 { pt3dadd( 110.661, -12.97, 2.3414, 0.12 ) }
    dend_31 { pt3dadd( 111.11, -12.2597, 0.201096, 0.48 ) }
    dend_31 { pt3dadd( 111.349, -11.7932, -1.1943, 1.44 ) }
    dend_31 { pt3dadd( 111.483, -11.3225, -2.31237, 2.16 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -3.13646, -347.468, -50.0018, 0.24 ) }
    dend_22 { pt3dadd( -2.85189, -347.115, -50.1721, 0.24 ) }
    dend_22 { pt3dadd( -2.49077, -346.667, -50.3882, 0.24 ) }
    dend_22 { pt3dadd( -2.05401, -346.126, -50.6497, 0.6 ) }
    dend_22 { pt3dadd( -1.61273, -345.578, -50.9138, 1.08 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 26/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.13646, -347.468, -50.0018, 0.12 ) }
    dend_21 { pt3dadd( -2.62634, -347.969, -49.2918, 0.12 ) }
    dend_21 { pt3dadd( -2.29545, -348.244, -48.8287, 0.12 ) }
    dend_21 { pt3dadd( -1.98695, -348.432, -48.4795, 0.12 ) }
    dend_21 { pt3dadd( -1.56059, -348.616, -48.1025, 0.12 ) }
    dend_21 { pt3dadd( -1.31622, -348.694, -47.9193, 0.12 ) }
    dend_21 { pt3dadd( 0.72245, -349.166, -46.5861, 0.12 ) }
    dend_21 { pt3dadd( 1.62521, -349.236, -46.114, 2.04 ) }
    dend_21 { pt3dadd( 2.59932, -349.227, -45.6319, 1.56 ) }
    dend_21 { pt3dadd( 3.64118, -349.15, -45.1604, 0.36 ) }
    dend_21 { pt3dadd( 4.20256, -349.071, -44.8868, 0.36 ) }
    dend_21 { pt3dadd( 4.8414, -348.956, -44.5804, 0.36 ) }
    dend_21 { pt3dadd( 6.14006, -348.688, -44.0293, 0.36 ) }
    dend_21 { pt3dadd( 6.64041, -348.574, -43.7341, 0.6 ) }
    dend_21 { pt3dadd( 6.97122, -348.498, -43.4827, 0.6 ) }
    dend_21 { pt3dadd( 8.37334, -348.138, -42.255, 0.36 ) }
    dend_21 { pt3dadd( 8.68157, -348.059, -41.9771, 0.6 ) }
    dend_21 { pt3dadd( 9.12683, -347.957, -41.6191, 0.6 ) }
    dend_21 { pt3dadd( 9.96361, -347.798, -41.0667, 0.12 ) }
    dend_21 { pt3dadd( 10.3286, -347.764, -40.9117, 0.12 ) }
    dend_21 { pt3dadd( 11.024, -347.766, -40.755, 0.12 ) }
    dend_21 { pt3dadd( 11.7219, -347.851, -40.7849, 1.08 ) }
    dend_21 { pt3dadd( 13.0685, -348.17, -40.9782, 0.12 ) }
    dend_21 { pt3dadd( 13.3562, -348.283, -41.042, 0.12 ) }
    dend_21 { pt3dadd( 14.136, -348.673, -41.2466, 0.12 ) }
    dend_21 { pt3dadd( 14.623, -348.966, -41.3788, 0.48 ) }
    dend_21 { pt3dadd( 15.4016, -349.505, -41.5971, 0.12 ) }
    dend_21 { pt3dadd( 15.8571, -349.851, -41.7173, 0.12 ) }
    dend_21 { pt3dadd( 16.625, -350.471, -41.8507, 0.12 ) }
    dend_21 { pt3dadd( 17.1717, -350.91, -41.9585, 0.12 ) }
    dend_21 { pt3dadd( 17.634, -351.268, -42.0614, 1.08 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 22.6945, -153.242, -37.464, 0.48 ) }
    dend_38 { pt3dadd( 22.044, -154.516, -39.7217, 0.48 ) }
    dend_38 { pt3dadd( 21.9357, -154.724, -40.0704, 0.48 ) }
    dend_38 { pt3dadd( 21.7013, -155.209, -40.8003, 0.12 ) }
    dend_38 { pt3dadd( 21.598, -155.449, -41.1355, 0.12 ) }
    dend_38 { pt3dadd( 21.455, -155.782, -41.5999, 1.2 ) }
    dend_38 { pt3dadd( 21.2748, -156.201, -42.1847, 0.12 ) }
    dend_38 { pt3dadd( 21.2322, -156.31, -42.2944, 0.12 ) }
    dend_38 { pt3dadd( 21.0963, -156.65, -42.647, 0.72 ) }
    dend_38 { pt3dadd( 21.022, -156.851, -42.8038, 0.72 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 22.6945, -153.242, -37.464, 0.12 ) }
    dend_37 { pt3dadd( 21.3824, -155.21, -39.4583, 0.12 ) }
    dend_37 { pt3dadd( 20.857, -156.082, -40.0046, 0.12 ) }
    dend_37 { pt3dadd( 20.704, -156.336, -40.1362, 0.6 ) }
    dend_37 { pt3dadd( 20.2604, -157.043, -40.456, 0.24 ) }
    dend_37 { pt3dadd( 20.0871, -157.307, -40.5289, 0.24 ) }
    dend_37 { pt3dadd( 19.6115, -157.996, -40.6534, 0.24 ) }
    dend_37 { pt3dadd( 19.2309, -158.502, -40.5858, 0.6 ) }
    dend_37 { pt3dadd( 18.6336, -159.152, -40.4795, 0.12 ) }
    dend_37 { pt3dadd( 18.1126, -159.633, -40.4086, 0.12 ) }
    dend_37 { pt3dadd( 17.0102, -160.466, -40.3172, 0.84 ) }
    dend_37 { pt3dadd( 16.745, -160.645, -40.2875, 0.84 ) }
    dend_37 { pt3dadd( 16.2397, -160.942, -40.2021, 0.12 ) }
    dend_37 { pt3dadd( 15.959, -161.082, -40.1375, 0.12 ) }
    dend_37 { pt3dadd( 15.2237, -161.387, -39.9099, 0.84 ) }
    dend_37 { pt3dadd( 14.9252, -161.481, -39.8457, 0.96 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_15 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_25 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_16 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_54 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_53 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_50 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_9 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_60 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_59 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_57 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_51 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_30 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_14 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_11 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_10 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_12 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_42 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_13 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_45 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_39 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_32 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_31 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_36 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_38 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_37 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_22 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_21 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_15 nseg = 3
    dend_25 nseg = 3
    dend_16 nseg = 13
    dend_54 nseg = 3
    dend_41 nseg = 5
    dend_8 nseg = 3
    dend_58 nseg = 3
    dend_55 nseg = 5
    dend_53 nseg = 7
    dend_50 nseg = 5
    dend_34 nseg = 5
    dend_9 nseg = 3
    dend_60 nseg = 17
    dend_59 nseg = 7
    dend_57 nseg = 7
    dend_56 nseg = 5
    dend_52 nseg = 9
    dend_51 nseg = 5
    dend_47 nseg = 3
    dend_33 nseg = 3
    dend_30 nseg = 3
    dend_14 nseg = 7
    dend_11 nseg = 3
    dend_10 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L4_DBC_01d21bd888_0_0


