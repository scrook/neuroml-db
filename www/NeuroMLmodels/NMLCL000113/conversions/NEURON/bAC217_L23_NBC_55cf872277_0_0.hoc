// Cell: bAC217_L23_NBC_55cf872277_0_0
/*
{
  "id" : "bAC217_L23_NBC_55cf872277_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.89093, 6.3846, -1.48625, 2.82016", "-2.66386, 5.61657, -1.27833, 4.98681", "-2.43678, 4.84853, -1.07041, 7.51044", "-2.20971, 4.0805, -0.862483, 8.92538", "-1.98264, 3.31246, -0.65456, 10.0669", "-1.75557, 2.54443, -0.446636, 10.3676", "-1.52849, 1.7764, -0.238713, 10.6171", "-1.30142, 1.00836, -0.0307891, 10.1846", "-1.07435, 0.240325, 0.177134, 9.79445", "-0.847273, -0.52771, 0.385058, 9.58423", "-0.6202, -1.29574, 0.592981, 9.374", "-0.393128, -2.06378, 0.800905, 9.16378", "-0.166055, -2.83181, 1.00883, 8.95369", "0.0610184, -3.59985, 1.21675, 8.74371", "0.288091, -4.36788, 1.42468, 8.44292", "0.515164, -5.13592, 1.6326, 7.88171", "0.742237, -5.90395, 1.84052, 7.32051", "0.96931, -6.67199, 2.04845, 6.7381", "1.19638, -7.44002, 2.25637, 5.93312", "1.42346, -8.20806, 2.46429, 5.04519", "1.65053, -8.97609, 2.67222, 2.76105" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-2.9567, 3.93994, 8.71987, 1.11", "-4.13844, 7.26869, 8.6722, 0.83", "-4.63514, 9.20465, 8.86038, 0.83", "-5.86685, 14.8278, 9.70229, 0.83", "-6.29436, 18.0444, 10.4832, 0.83", "-6.58166, 20.7728, 11.2743, 1.11", "-6.63847, 24.372, 12.6225, 0.83", "-6.26526, 28.7934, 14.7814, 0.83", "-6.06993, 30.3115, 15.6501, 0.83", "-5.35147, 34.644, 18.4907, 0.55", "-4.45028, 40.0625, 22.5276, 0.55", "-3.6451, 45.4666, 26.7711, 0.55", "-3.14596, 49.4826, 30.0186, 0.55", "-2.81253, 51.9184, 31.9347, 0.28", "-2.53592, 53.9718, 33.6142, 0.55", "-2.35631, 56.7555, 35.9209, 0.55", "-3.90654, 69.1172, 38.75, 0.55", "-7.21217, 81.1213, 41.5381, 0.55", "-11.9502, 91.9745, 46.1523, 0.55", "-17.119, 102.545, 50.9272, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-5.4967, 3.68369, -7.38013, 1.66", "-8.29886, 4.60944, -9.52014, 1.66", "-12.281, 5.92503, -12.5613, 1.66", "-15.0803, 6.84983, -14.6992, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-4.2067, -0.723808, -10.0602, 1.11", "-5.84381, -0.755894, -9.97062, 1.11", "-7.99837, -0.696052, -9.81771, 1.11", "-10.286, -0.529567, -9.64645, 1.11", "-12.2438, -0.366611, -9.55021, 1.11", "-15.2976, -0.121343, -9.45914, 0.83", "-17.5083, 0.0220474, -9.44174, 0.83", "-19.1144, 0.118568, -9.46692, 1.39", "-20.8978, 0.235819, -9.53714, 1.11", "-22.5219, 0.372801, -9.65268, 1.11", "-25.237, 0.548681, -9.91785, 1.11", "-27.8126, 0.56109, -10.2228, 1.11", "-29.6933, 0.532495, -10.5291, 0.83", "-30.7745, 0.5238, -10.7178, 0.83", "-34.3942, 0.346586, -11.7117, 0.83", "-35.3229, 0.219473, -12.1037, 0.83", "-37.5056, -0.23349, -13.4487, 0.83", "-39.7005, -0.729623, -15.0586, 0.83", "-41.9599, -1.21707, -16.9879, 0.83", "-46.1932, -2.08175, -20.742, 0.83", "-49.9073, -2.81591, -24.3029, 0.83", "-52.7133, -3.29674, -27.1224, 0.83", "-56.2998, -3.8199, -30.9324, 0.55", "-58.695, -4.14509, -33.5466, 0.28", "-61.1312, -4.40364, -36.2783, 0.55", "-63.5085, -4.37771, -38.6568, 0.55", "-64.0679, -4.30315, -39.1899, 0.55", "-64.9659, -4.17719, -40.0189, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.5167, -3.26581, 11.1598, 1.66", "-5.53348, -4.35875, 12.29, 1.39", "-7.74673, -6.73775, 14.75, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.0967, -6.4228, 15.1098, 1.39", "-2.88301, -8.93812, 14.7077, 1.39", "-3.70634, -11.5719, 14.2866, 1.39", "-4.27487, -13.3905, 13.9959, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.8933, -9.06731, 6.44987, 4.16", "3.31986, -9.54543, 5.451, 4.16", "4.8805, -11.2947, 1.79643, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "0.0933001, -4.41381, 3.93987, 1.11", "1.08338, -4.17041, 4.31195, 1.11", "1.94126, -3.58358, 5.27665, 1.11", "3.2988, -2.65496, 6.80321, 1.11", "4.40357, -1.89924, 8.04553, 0.83", "6.16407, -0.69495, 10.0252, 0.83", "7.82206, 0.4392, 11.8896, 1.11", "9.25004, 1.80878, 14.3642, 1.11", "13.6472, 5.38559, 19.5039, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.8933, 4.98545, 1.41987, 1.39", "4.36581, 7.95275, 1.41987, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.65053, -8.97609, 2.67222, 0.81432", "5.90337, -23.3606, 2.67222, 0.81432", "10.1562, -37.7451, 2.67222, 0.81432" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-17.119, 102.545, 50.9272, 0.55", "-19.8849, 113.099, 55.2381, 0.55", "-22.1311, 124.488, 57.1773, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-17.119, 102.545, 50.9272, 0.55", "-17.2636, 108.178, 53.6531, 0.55", "-16.8086, 113.147, 57.3893, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-15.0803, 6.84983, -14.6992, 0.83", "-16.8025, 9.4567, -16.2386, 0.83", "-19.223, 13.1204, -18.4021, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-15.0803, 6.84983, -14.6992, 1.11", "-21.8394, 10.3834, -16.3285, 1.11", "-26.8015, 12.9775, -17.5247, 1.11", "-29.4529, 14.3636, -18.1638, 1.11", "-35.8992, 17.7336, -19.7177, 0.83", "-39.8254, 19.7862, -20.6642, 0.83", "-43.5289, 21.7223, -21.5569, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-64.9659, -4.17719, -40.0189, 0.28", "-64.8068, -6.08027, -43.2233, 0.28", "-64.7722, -6.49383, -43.9197, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-64.9659, -4.17719, -40.0189, 0.28", "-67.1898, -7.00276, -44.4559, 0.28", "-68.4265, -8.47846, -46.6661, 1.11", "-69.7161, -9.87973, -48.6916, 1.11", "-70.6985, -10.8567, -50.0815, 0.28", "-71.4797, -11.44, -51.0521, 1.39", "-75.1043, -13.7221, -55.4595, 0.28", "-76.883, -14.5837, -57.3251, 1.11", "-78.1064, -15.0582, -58.4738, 0.55", "-79.8258, -15.6344, -60.0384, 0.28", "-87.7758, -17.9045, -67.1992, 0.28", "-90.5842, -18.5894, -69.6452, 0.83", "-93.3493, -19.0942, -71.957, 0.28", "-94.8386, -19.3093, -73.218, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-7.74673, -6.73775, 14.75, 0.83", "-8.23263, -8.05592, 17.2817, 0.83", "-8.48312, -8.84249, 18.4715, 0.55", "-9.01585, -9.88996, 20.147, 0.55", "-9.74205, -10.8125, 21.8128, 0.55", "-10.9759, -11.9301, 24.0615, 0.55", "-11.8454, -12.7176, 25.646, 0.55", "-12.8874, -13.4676, 27.0678, 0.55", "-14.7219, -14.3158, 29.1971, 0.55", "-15.8504, -14.5671, 30.0729, 0.55", "-17.1858, -14.6383, 30.8671, 0.55", "-21.3833, -17.6483, 37.1396, 0.55", "-25.5466, -22.4881, 42.2059, 0.55", "-29.1692, -26.6192, 48.2213, 0.55", "-34.6753, -30.1443, 53.0348, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-7.74673, -6.73775, 14.75, 0.83", "-8.24174, -8.26043, 13.4866, 0.83", "-8.88829, -10.2492, 11.8365, 0.83", "-10.1676, -14.1845, 8.57132, 0.83", "-10.4248, -14.9756, 7.91492, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-4.27487, -13.3905, 13.9959, 0.83", "-5.97337, -16.6223, 13.9388, 0.83", "-7.08727, -18.3017, 13.8938, 0.83", "-9.0162, -21.0872, 13.7856, 0.83", "-11.3215, -24.4163, 13.6562, 0.83", "-12.133, -25.5882, 13.6107, 0.83", "-14.2768, -28.684, 13.4904, 1.11", "-17.3752, -32.7868, 13.3022, 0.83", "-18.6659, -34.3415, 13.218, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-4.27487, -13.3905, 13.9959, 0.83", "-4.1702, -15.7471, 14.8356, 0.83", "-4.18562, -17.3963, 15.3264, 0.83", "-4.16507, -18.6193, 15.6001, 0.83", "-4.10466, -22.1862, 16.2673, 0.83", "-4.03155, -23.9037, 16.5366, 0.83", "-3.87996, -25.8763, 16.7963, 0.83", "-3.59207, -29.2669, 17.1603, 0.83", "-3.30526, -32.5282, 17.4684, 0.83", "-3.30571, -33.7435, 17.6038, 0.83", "-3.43184, -35.8183, 17.885, 0.83", "-3.58241, -37.3309, 18.1455, 0.83", "-3.81756, -39.0543, 18.4805, 0.83", "-4.46087, -43.0174, 19.3127, 0.83", "-5.65237, -49.0187, 20.5771, 0.55", "-6.11898, -51.5978, 21.0552, 0.55", "-6.52977, -53.8701, 21.4106, 0.55", "-6.96704, -56.4512, 21.6892, 0.55", "-7.32276, -59.2099, 21.8141, 0.55", "-7.44509, -61.413, 21.7066, 0.55", "-7.33988, -64.5232, 21.3831, 0.55", "-7.24834, -67.419, 20.9908, 0.55", "-7.17629, -69.2008, 20.7523, 0.28", "-7.1207, -70.2849, 20.6004, 0.83", "-7.03699, -71.3478, 20.444, 0.55", "-6.69275, -74.4168, 20.0006, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.8805, -11.2947, 1.79643, 2.49", "5.89965, -13.0355, 1.11322, 2.49" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.8805, -11.2947, 1.79643, 1.39", "6.49814, -11.0653, -0.371004, 1.39", "7.28883, -10.9531, -1.43043, 1.11", "8.18398, -10.8262, -2.62982, 1.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "13.6472, 5.38559, 19.5039, 0.55", "19.5028, 10.6653, 27.4815, 0.55", "25.5609, 14.9564, 35.8623, 0.55", "32.9189, 20.5906, 42.1967, 0.55", "39.9476, 24.9684, 49.7351, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "13.6472, 5.38559, 19.5039, 0.55", "20.479, 7.90361, 24.2755, 0.55", "27.9801, 10.4859, 27.8604, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.36581, 7.95275, 1.41987, 1.11", "5.84704, 11.1969, 2.30004, 1.11", "7.23422, 13.9314, 2.66348, 1.11", "9.50034, 17.9326, 2.45819, 1.11", "11.093, 20.7259, 2.13466, 1.11", "12.7256, 23.5047, 1.65021, 0.83", "15.0248, 27.0124, 0.828563, 0.83", "18.9846, 32.0982, -1.08573, 0.83", "22.5162, 35.9854, -3.30826, 0.83", "23.9268, 37.3709, -4.3423, 0.83", "26.4565, 39.6702, -6.44527, 0.55", "29.2056, 41.9908, -8.90258, 0.83", "32.3, 44.5111, -11.7633, 0.55", "34.6297, 46.4045, -14.0403, 0.55", "35.8991, 47.4522, -15.3673, 0.55", "38.4357, 49.5192, -18.2075, 0.28", "39.0305, 50.0494, -18.9514, 0.83", "39.8231, 50.9311, -20.1065, 0.83", "43.3276, 55.3064, -25.7449, 0.55", "44.133, 56.2649, -27.1838, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.36581, 7.95275, 1.41987, 0.55", "7.9894, 10.5386, -1.19108, 0.55", "9.30467, 11.4714, -2.44527, 0.55", "11.6885, 13.1685, -4.96124, 0.83", "13.201, 14.3613, -6.88335, 0.83", "16.8391, 17.6495, -11.9362, 0.83", "17.577, 18.3748, -13.0314, 0.83", "20.1007, 21.0887, -17.4416, 0.83", "23.2506, 24.7917, -23.5889, 0.83", "25.8383, 28.4395, -29.4322, 0.83", "27.6423, 31.3981, -33.8676, 0.83", "28.3462, 32.7173, -35.6738, 0.83", "29.566, 35.2957, -38.7995, 0.83", "29.8568, 36.0452, -39.5333, 0.83", "30.3519, 37.5388, -40.7617, 0.28", "30.9396, 39.1937, -41.8814, 0.83", "32.542, 43.3672, -44.4128, 0.83", "34.0492, 46.2647, -45.9016, 0.83", "36.5176, 50.0809, -47.8583, 0.55", "37.2596, 51.0722, -48.4071, 0.83", "39.3435, 53.6211, -50.1182, 0.55", "40.2471, 54.6736, -50.9039, 0.83", "44.371, 59.4581, -54.9283, 0.28", "46.4879, 62.0292, -57.3299, 0.83", "46.9329, 62.6673, -58.0851, 0.83", "49.5512, 66.7699, -63.715, 0.28", "49.8644, 67.3274, -64.5816, 0.55", "50.8203, 69.4184, -68.0373, 0.28", "51.0883, 70.2577, -69.517, 1.11", "52.6617, 75.6514, -78.5671, 0.55", "53.1278, 77.2088, -81.0919, 0.28", "53.4579, 78.2495, -82.7967, 0.55", "53.7733, 79.2146, -84.4028, 0.28", "54.3125, 80.7249, -86.8356, 0.55", "55.0056, 82.6457, -89.7743, 0.28", "55.6574, 84.4375, -91.246, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.1562, -37.7451, 2.67222, 0.55", "14.409, -52.1295, 2.67222, 0.55", "18.6619, -66.514, 2.67222, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-19.223, 13.1204, -18.4021, 0.55", "-23.6801, 16.1936, -23.2648, 0.55", "-26.7137, 18.5266, -25.7444, 1.11", "-30.5636, 21.6344, -28.8046, 0.83", "-32.9828, 23.5767, -30.6238, 0.83", "-36.1843, 26.1399, -33.0638, 0.83", "-40.2082, 29.5304, -36.1547, 0.83", "-42.8223, 31.7161, -37.956, 0.55", "-45.7848, 34.5118, -39.8861, 0.28", "-46.8716, 35.6663, -40.5838, 0.83", "-49.011, 38.1362, -42.2803, 0.83", "-50.6383, 40.1681, -43.903, 0.55", "-52.448, 42.4965, -46.2772, 0.83", "-54.2454, 44.8708, -48.7619, 0.28", "-55.3135, 46.3667, -50.3396, 0.28", "-56.2681, 47.7597, -51.9091, 0.55", "-56.8332, 48.5928, -52.9052, 0.83", "-58.9349, 51.5578, -56.9494, 0.28", "-59.6634, 52.6084, -58.4133, 0.83", "-61.3269, 55.1151, -61.8932, 0.55", "-61.8816, 55.9663, -63.0759, 0.28", "-62.9285, 57.7573, -65.4485, 1.11", "-64.1804, 59.9332, -68.1429, 0.28", "-65.2518, 61.6246, -70.0606, 0.55", "-66.0183, 62.6448, -71.2619, 0.28", "-66.7205, 63.5279, -72.2343, 0.83", "-67.8372, 64.7526, -73.8615, 0.28", "-69.0456, 65.91, -75.5709, 0.55", "-70.7053, 67.379, -77.7795, 0.83", "-74.6374, 70.9504, -83.2957, 0.28", "-75.5659, 71.823, -84.6171, 0.83", "-79.3046, 75.702, -89.9958, 0.28", "-79.7865, 76.2636, -90.713, 0.55", "-80.6728, 77.6201, -92.1908, 1.11", "-82.5723, 81.4771, -95.7875, 0.28", "-82.869, 82.3114, -96.432, 0.55", "-83.5217, 84.48, -97.9056, 0.28", "-83.6788, 85.1298, -98.3089, 0.55", "-84.653, 89.1151, -101.013, 0.28", "-85.3684, 91.4688, -102.956, 0.83", "-85.9355, 92.9127, -104.257, 0.28", "-86.1758, 93.4243, -104.773, 0.83", "-88.5512, 97.9534, -109.53, 0.28", "-88.894, 98.5665, -110.202, 0.83", "-90.8987, 101.703, -113.863, 0.28", "-91.5119, 102.616, -114.903, 0.55", "-93.7325, 105.682, -118.593, 0.28", "-94.9178, 107.208, -120.437, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-19.223, 13.1204, -18.4021, 0.83", "-22.0991, 15.0422, -17.2032, 0.83", "-23.9459, 16.3848, -16.5251, 0.55", "-29.5098, 20.4526, -14.9332, 0.55", "-35.6649, 25.0611, -13.634, 0.55", "-39.1029, 27.5669, -13.1737, 0.55", "-41.4351, 29.2182, -13.0365, 0.55", "-45.8037, 32.1597, -13.1683, 0.55", "-48.3731, 33.7264, -13.6105, 0.55", "-50.7175, 34.9912, -14.2808, 0.55", "-53.1846, 36.1152, -15.4136, 0.55", "-57.1237, 37.5684, -17.4188, 0.55", "-61.2119, 38.7857, -19.6015, 0.55", "-62.6463, 39.0932, -20.3572, 0.28", "-64.946, 39.5539, -21.4932, 1.39", "-70.0864, 40.4296, -23.8063, 0.28", "-71.3993, 40.7062, -24.3717, 0.83", "-73.0444, 41.069, -25.0714, 0.28", "-74.877, 41.6375, -25.7819, 0.55", "-75.441, 41.8519, -25.9806, 0.28", "-77.9605, 42.9874, -26.8197, 0.83", "-82.1551, 45.0498, -27.8547, 0.28", "-83.388, 45.6851, -28.1879, 0.55", "-85.4535, 46.7899, -28.7712, 0.28", "-86.9565, 47.5368, -29.1912, 0.55", "-89.7808, 48.8098, -29.9352, 0.28", "-90.5853, 49.0641, -30.0844, 0.83", "-94.6034, 49.8109, -30.5299, 0.28", "-95.378, 49.9241, -30.6099, 0.55", "-97.786, 50.1284, -30.8215, 0.28", "-99.6775, 50.2024, -30.9393, 0.55", "-107.146, 50.0309, -31.0521, 0.28", "-108.308, 49.9505, -31.0357, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-43.5289, 21.7223, -21.5569, 0.55", "-45.7093, 23.5597, -24.4319, 0.55", "-47.7783, 25.1747, -26.8924, 0.55", "-49.5938, 26.4225, -28.7432, 0.83", "-51.0139, 27.2963, -29.8505, 0.83", "-52.9321, 28.391, -31.1615, 0.28", "-53.6047, 28.7431, -31.5975, 0.28", "-55.6207, 29.6213, -32.6817, 0.83", "-57.5143, 30.3147, -33.6037, 0.55", "-61.4558, 31.4835, -35.4782, 0.55", "-64.1207, 32.1573, -36.8346, 0.83", "-66.2071, 32.6909, -38.1256, 0.28", "-66.6859, 32.8175, -38.4775, 0.55", "-69.3274, 33.4225, -40.4944, 0.28", "-70.4803, 33.6686, -41.4638, 0.55", "-72.4107, 34.1329, -43.1186, 0.55", "-75.0289, 34.8558, -45.1328, 0.28", "-75.8131, 35.1003, -45.677, 0.28", "-79.4086, 36.3115, -47.9397, 0.55", "-82.9144, 37.4898, -49.7661, 0.83", "-87.5465, 38.9603, -51.7598, 0.28", "-88.567, 39.258, -52.1214, 0.55", "-91.0137, 39.9228, -52.8361, 0.55", "-92.146, 40.2404, -53.1501, 0.55", "-95.4502, 41.1757, -54.0784, 0.83", "-98.1194, 41.8451, -54.5816, 0.28", "-98.8606, 42.0066, -54.6822, 0.55", "-101.515, 42.6172, -55.0151, 0.28", "-102.831, 42.9313, -55.2395, 0.55", "-104.292, 43.2739, -55.5666, 0.28", "-105.222, 43.5154, -55.8171, 0.83", "-106.799, 43.9833, -56.2374, 0.28", "-108.322, 44.5044, -56.6269, 0.83", "-112.312, 46.2853, -57.5042, 0.28", "-113.73, 47.12, -57.8222, 0.28", "-114.663, 47.7894, -58.0704, 0.28", "-116.339, 49.2337, -58.6936, 0.83", "-117.83, 50.7129, -59.3596, 0.28", "-120.031, 53.199, -60.5227, 0.55", "-123.072, 57.0162, -62.3039, 0.28", "-124.459, 58.8309, -63.1344, 0.83", "-126.658, 61.7118, -64.4725, 0.28", "-127.383, 62.6233, -64.8841, 0.55", "-128.999, 64.5764, -65.6797, 0.28", "-129.378, 65.0155, -65.852, 0.83", "-132.694, 68.5074, -66.8219, 0.28", "-133.406, 69.2017, -66.9214, 0.55", "-135.874, 71.4919, -66.9013, 0.55", "-136.332, 71.911, -66.8749, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-43.5289, 21.7223, -21.5569, 0.55", "-47.0145, 19.6282, -22.0346, 0.55", "-53.7205, 16.1372, -23.8405, 0.83", "-60.1525, 13.0965, -26.0036, 0.83", "-63.7181, 11.5852, -27.4876, 0.55", "-65.6215, 10.833, -28.3679, 0.55", "-71.2378, 8.72686, -31.3681, 0.55", "-78.3653, 6.64128, -35.8343, 0.28", "-79.5441, 6.3957, -36.846, 0.55", "-82.468, 5.95003, -39.9293, 0.28", "-83.6103, 5.78355, -41.1836, 0.83", "-86.6101, 5.19664, -44.5958, 0.55", "-87.8826, 4.75259, -45.9679, 0.55", "-92.1902, 2.63652, -49.3816, 0.28", "-93.9146, 1.57952, -50.5418, 0.83", "-96.7548, -0.560806, -52.0154, 0.28", "-97.7948, -1.43209, -52.3783, 0.83", "-102.582, -5.84106, -53.1077, 0.28", "-103.71, -7.02791, -53.2691, 0.83", "-104.818, -8.31436, -53.3495, 0.28", "-105.297, -8.91905, -53.3845, 0.83", "-107.62, -11.9781, -53.6012, 0.28", "-108.803, -13.5046, -53.8914, 0.55", "-111.912, -17.0371, -56.0825, 0.28", "-112.149, -17.2943, -56.2749, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-10.4248, -14.9756, 7.91492, 0.83", "-11.5512, -15.7351, 8.5166, 0.83", "-14.5032, -18.191, 9.95204, 0.55", "-18.5854, -21.1386, 11.6577, 0.55", "-20.8084, -22.5983, 12.527, 0.55", "-22.0075, -23.2892, 13.0006, 0.55", "-23.8033, -24.1849, 13.6921, 0.83", "-30.1469, -26.967, 16.0433, 0.55", "-35.6976, -29.2689, 17.9576, 0.55", "-40.3386, -31.143, 19.2704, 0.55", "-43.3738, -32.2376, 20.0778, 0.55", "-47.7691, -33.6911, 21.1338, 0.55", "-50.4586, -34.5143, 21.6642, 0.55", "-53.8812, -35.7373, 22.2033, 0.55", "-56.8005, -37.2591, 22.5783, 0.55", "-58.4011, -38.3504, 22.6639, 0.28", "-59.3183, -39.1014, 22.6856, 0.55", "-61.2543, -40.7727, 22.6271, 0.55", "-66.1189, -44.9391, 22.5485, 0.55", "-68.8106, -47.1576, 22.6354, 0.55", "-71.5738, -49.6176, 22.7301, 0.28", "-72.8775, -50.85, 22.7448, 0.55", "-75.6208, -53.375, 22.7016, 0.55", "-84.7784, -59.6168, 26.6946, 0.55", "-94.2793, -63.9926, 32.0657, 0.55", "-102.999, -68.2827, 38.6974, 0.55", "-111.377, -73.4653, 45.1522, 0.55", "-121.204, -78.4816, 49.2225, 0.55", "-131.931, -83.0929, 50.5191, 0.55", "-142.605, -87.9366, 49.7836, 0.55", "-153.722, -91.7156, 49.6609, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-10.4248, -14.9756, 7.91492, 0.83", "-10.5132, -18.4021, 6.39577, 0.83", "-10.7945, -21.1311, 4.96711, 0.83", "-11.206, -24.2346, 3.14335, 0.83", "-11.9632, -28.3525, 0.53818, 0.83", "-12.4259, -31.5982, -1.61124, 0.83", "-12.6575, -33.6048, -2.93376, 0.83", "-12.9278, -37.1754, -5.33247, 0.83", "-13.2122, -40.2878, -7.48736, 0.83", "-13.8605, -45.406, -10.9518, 0.83", "-14.9342, -51.2782, -14.7686, 0.28", "-15.2235, -52.692, -15.5912, 0.83", "-15.4818, -54.0037, -16.276, 0.83", "-15.7928, -55.5641, -16.988, 0.55", "-16.1924, -56.8768, -17.52, 0.28", "-16.7803, -58.114, -17.9565, 0.55", "-17.2505, -58.7576, -18.1805, 0.28", "-18.1032, -59.9079, -18.6373, 0.83", "-20.6025, -63.4339, -20.1761, 0.28", "-21.1221, -64.2407, -20.6217, 0.55", "-21.6638, -65.1391, -21.168, 0.28", "-21.8933, -65.5871, -21.4728, 0.55", "-22.4265, -66.7552, -22.3294, 0.28", "-22.5691, -67.1685, -22.6637, 0.83", "-23.0666, -69.4828, -24.6363, 0.55", "-23.2197, -70.5474, -25.5795, 0.83", "-23.3882, -72.5762, -27.4901, 0.28", "-23.4032, -72.991, -27.9025, 0.55", "-23.3701, -74.873, -29.9094, 0.28", "-23.3034, -75.891, -30.9469, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-18.6659, -34.3415, 13.218, 0.55", "-22.1082, -37.3991, 11.2133, 0.55", "-27.7786, -42.3409, 8.17626, 0.55", "-29.4903, -43.7981, 7.31588, 0.55", "-33.6726, -47.4135, 5.38322, 0.28", "-36.1534, -49.5662, 4.30516, 0.55", "-38.0684, -51.2578, 3.48741, 0.28", "-39.9828, -52.9257, 2.77002, 0.28", "-40.7847, -53.6265, 2.55321, 0.55", "-43.7476, -56.171, 1.96529, 0.28", "-44.2908, -56.6892, 1.92736, 0.83", "-46.5437, -59.1355, 1.87861, 0.28", "-47.7673, -60.5589, 1.89626, 0.55", "-49.388, -62.5532, 1.95677, 0.28", "-50.9402, -64.5326, 2.05669, 0.55", "-53.0843, -67.2966, 2.29954, 0.55", "-53.2893, -67.574, 2.33274, 0.83", "-54.6382, -69.495, 2.68074, 0.28", "-54.8183, -69.7759, 2.70795, 0.83", "-64.1378, -77.6876, 2.20085, 0.83", "-74.7361, -83.5269, 0.790811, 0.83", "-85.0586, -89.9811, 0.0563558, 0.83", "-94.776, -97.2592, 1.43811, 0.83", "-104.126, -104.269, 4.99286, 0.83", "-114.359, -108.532, 9.98964, 0.83", "-124.256, -112.684, 15.702, 0.83", "-135.167, -115.405, 20.276, 0.83", "-146.179, -119.574, 23.2991, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-18.6659, -34.3415, 13.218, 0.83", "-18.8203, -36.8719, 14.6009, 0.83", "-19.2291, -40.448, 16.609, 0.83", "-19.3491, -42.2462, 17.6783, 0.83", "-19.5909, -46.5792, 20.1958, 0.83", "-19.6119, -47.1752, 20.5325, 0.83", "-19.6645, -49.7445, 21.8757, 0.83", "-19.7598, -52.5427, 23.2528, 0.83", "-19.9813, -56.6547, 25.2748, 0.83", "-20.098, -60.3029, 27.0155, 0.83", "-20.0853, -61.9196, 27.7124, 0.83", "-20.006, -66.0322, 29.4309, 0.83", "-19.8934, -70.1827, 31.1388, 0.83", "-18.9228, -77.3281, 37.15, 0.83", "-18.4743, -84.1977, 43.5162, 0.83", "-17.7465, -91.7163, 49.1102, 0.83", "-15.1843, -98.8044, 54.7119, 0.83", "-11.5644, -105.531, 60.1553, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-6.69275, -74.4168, 20.0006, 0.28", "-9.21989, -77.4873, 20.3645, 0.28", "-9.70187, -78.0729, 20.4339, 0.83", "-12.2657, -81.188, 20.803, 0.28", "-20.4382, -93.1481, 22.4723, 0.28", "-25.7368, -106.654, 24.2462, 0.28", "-28.6923, -120.656, 27.1932, 0.28", "-31.131, -133.879, 32.8013, 0.28", "-32.4543, -148.203, 35.3324, 0.28", "-32.7693, -162.698, 37.0695, 0.28", "-36.6877, -176.767, 37.8616, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-6.69275, -74.4168, 20.0006, 0.55", "-7.28878, -76.7439, 19.5694, 0.55", "-7.65267, -78.1647, 19.3061, 0.55", "-7.98144, -79.4484, 19.0683, 0.28", "-10.9, -87.7807, 16.1509, 0.28", "-13.4714, -96.6566, 14.9044, 0.28", "-17.408, -104.997, 13.5397, 0.28", "-20.4075, -113.484, 11.1704, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.89965, -13.0355, 1.11322, 1.94", "9.88029, -17.0467, 0.550063, 1.94" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.89965, -13.0355, 1.11322, 1.11", "7.65476, -17.7855, -11.3571, 1.11", "7.83089, -18.2035, -12.7541, 1.11", "8.96381, -20.356, -20.0372, 1.11", "9.53896, -21.1599, -22.9151, 1.11", "10.5613, -22.4634, -27.8256, 1.11", "11.7871, -24.0093, -33.7331, 1.11", "13.0921, -25.7385, -40.8234, 1.11", "13.6522, -26.3769, -44.2992, 0.83", "14.4564, -27.1492, -50.2248, 0.83", "14.733, -27.4972, -52.5567, 0.55", "14.8175, -27.6591, -53.5663, 0.83", "15.0107, -28.5272, -58.5002, 1.39", "14.8251, -29.6268, -64.8086, 1.11", "14.6701, -30.2688, -68.7169, 0.55", "14.5756, -30.6391, -70.8191, 0.83", "14.5065, -32.0488, -78.4844, 0.55", "14.578, -32.6468, -81.475, 0.28", "14.6933, -32.9139, -82.7798, 0.55", "15.5738, -34.9294, -92.4027, 0.28", "15.7014, -35.1587, -93.532, 0.55", "16.0758, -35.6737, -96.0909, 0.28", "16.6502, -36.4214, -99.1523, 1.39", "18.7951, -38.6889, -109.816, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.18398, -10.8262, -2.62982, 1.11", "7.27337, -10.7227, -4.93105, 1.11", "6.62086, -10.5712, -6.59127, 0.83", "6.02239, -10.3398, -8.55498, 0.83", "4.49371, -9.69256, -14.1547, 0.83", "3.49326, -9.27634, -18.6478, 0.83", "3.2301, -9.14873, -20.0168, 0.83", "2.91286, -9.00606, -21.8333, 0.83", "1.29248, -8.00154, -31.0382, 0.83", "0.522344, -7.3347, -35.5867, 0.83", "-0.117335, -6.61101, -39.1083, 0.83", "-0.703937, -6.04508, -41.6409, 0.28", "-1.1728, -5.65672, -43.2923, 1.39", "-2.50576, -4.59799, -47.2632, 0.55", "-4.56119, -3.00918, -52.4294, 0.55", "-6.03482, -1.90308, -55.7738, 1.11", "-9.93039, 0.813102, -63.763, 0.55", "-10.9647, 1.45278, -65.833, 0.55", "-12.4605, 2.26261, -68.8971, 1.11" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "8.18398, -10.8262, -2.62982, 1.11", "9.85801, -11.4733, -4.1303, 1.11", "13.2076, -12.3027, -6.6852, 1.11", "15.2128, -12.8263, -8.26903, 0.83", "16.3323, -13.1628, -9.26892, 0.83", "17.75, -13.6092, -10.903, 1.11", "19.3634, -14.1064, -13.0743, 1.11", "21.2797, -14.6062, -15.8417, 1.11", "22.9167, -14.9722, -18.341, 0.83", "24.8343, -15.4519, -21.5999, 1.39", "27.5606, -16.3302, -26.8892, 0.83", "29.3775, -17.1494, -31.002, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "27.9801, 10.4859, 27.8604, 0.55", "36.9265, 13.8284, 33.0379, 0.55", "46.7075, 16.4889, 36.9214, 0.55", "56.1154, 19.4832, 41.4427, 0.55", "65.2425, 20.8732, 47.1288, 0.55", "74.5364, 21.1112, 52.7007, 0.55", "83.0437, 22.9698, 59.1668, 0.55", "90.6692, 24.4718, 66.7281, 0.55", "98.098, 24.9494, 74.6064, 0.55", "104.132, 24.2362, 83.5837, 0.55", "111.676, 22.6484, 91.2107, 0.55", "119.602, 23.0883, 98.5911, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "27.9801, 10.4859, 27.8604, 0.55", "35.0978, 11.2158, 32.6774, 0.55", "42.4471, 12.4861, 37.0215, 0.55", "50.1561, 12.8103, 40.8757, 0.55", "58.0079, 13.8061, 44.3201, 0.55", "66.0369, 16.1309, 46.5658, 0.55", "74.2759, 16.8579, 49.0355, 0.55", "82.7192, 16.9291, 50.8077, 0.55", "90.9997, 15.2157, 52.4866, 0.55", "98.9325, 12.777, 54.8315, 0.55", "106.45, 9.92112, 57.9595, 0.55", "113.391, 5.67788, 60.895, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "9.88029, -17.0467, 0.550063, 0.83", "11.615, -16.294, 1.03186, 0.83", "16.3399, -13.7009, 2.22407, 0.83", "17.7537, -12.7509, 2.72293, 0.83", "19.6877, -11.3172, 3.55767, 0.83", "24.479, -7.422, 6.11758, 0.83", "26.7917, -5.52561, 7.4566, 0.83", "28.4796, -4.05557, 8.53022, 0.83", "31.7523, -1.02879, 10.809, 0.83", "34.6868, 1.51594, 12.7578, 0.55", "38.3803, 4.28318, 15.0489, 0.55", "40.3529, 5.44021, 16.1604, 0.55", "42.6597, 6.46106, 17.2922, 0.55", "45.1101, 7.25342, 18.2208, 0.55", "48.4284, 8.12181, 19.148, 0.55", "51.614, 8.75568, 19.9246, 0.55", "53.7587, 9.06332, 20.3772, 0.55", "56.9728, 9.42281, 21.0878, 0.55", "60.1917, 9.80338, 21.8706, 0.55", "62.6261, 10.0842, 22.5426, 0.55", "65.3165, 10.5085, 23.4432, 0.55", "66.8784, 10.7966, 23.9519, 0.55", "68.8256, 11.2274, 24.5757, 0.55", "72.2847, 12.226, 25.6268, 0.55", "77.2511, 13.9984, 27.1082, 0.55", "79.2695, 14.7691, 27.632, 0.55", "82.985, 16.3658, 28.5053, 0.55", "85.013, 17.3308, 28.8996, 0.55", "88.8166, 19.2511, 29.4851, 0.55", "91.0279, 20.3686, 29.756, 0.55", "94.4127, 22.2079, 30.1006, 0.55", "95.819, 22.9765, 30.2213, 0.55", "97.8741, 24.2424, 30.438, 0.55", "100.404, 25.6485, 30.6638, 0.55", "101.598, 26.306, 30.7629, 0.55", "102.915, 26.9938, 30.8711, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "9.88029, -17.0467, 0.550063, 1.39", "14.1462, -22.6321, -1.46072, 1.39", "17.5211, -27.0508, -3.05153, 1.39", "20.1821, -30.535, -4.30586, 1.11", "24.2309, -35.836, -6.21428, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "29.3775, -17.1494, -31.002, 0.55", "28.1677, -15.7218, -36.3748, 0.55", "27.7989, -15.222, -37.9531, 0.28", "27.7473, -15.1416, -38.176, 0.83", "27.3679, -14.501, -39.7847, 0.28", "27.2292, -14.285, -40.3429, 0.55", "26.8995, -13.7822, -41.6424, 0.28", "26.7624, -13.5669, -42.1299, 0.55", "26.2597, -12.8773, -43.8909, 0.28", "26.1625, -12.7474, -44.2364, 0.55", "25.1895, -11.5082, -47.6636, 0.28", "25.1456, -11.4495, -47.8216, 0.55", "24.5744, -10.6772, -49.8106, 0.28", "24.4725, -10.5321, -50.152, 0.83", "23.9264, -9.68621, -51.9013, 0.28", "23.8121, -9.48344, -52.2741, 0.55", "22.5998, -7.02062, -56.0402, 0.28", "22.5364, -6.88721, -56.2342, 0.55", "22.2717, -6.35868, -57.0811, 0.28", "22.1836, -6.18242, -57.371, 0.55", "21.6986, -5.25452, -58.9447, 0.28", "21.5598, -4.99953, -59.4027, 0.55", "21.1902, -4.44612, -60.6201, 0.28", "20.0219, -2.81891, -64.7988, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "29.3775, -17.1494, -31.002, 0.55", "32.6953, -17.1596, -36.2826, 0.55", "36.4997, -17.4005, -41.8815, 1.39", "37.034, -17.4357, -42.5851, 1.39", "38.2687, -17.5147, -44.0964, 0.55", "42.1102, -17.755, -48.3938, 0.55", "44.5216, -17.9087, -50.9248, 0.55", "47.7708, -18.219, -53.7656, 0.55", "49.9811, -18.4944, -55.4475, 0.28", "50.6917, -18.5889, -55.9685, 0.55", "53.9758, -19.0247, -58.2294, 0.28", "54.6885, -19.1142, -58.6924, 0.55", "58.6473, -19.5668, -61.4701, 0.28", "60.1802, -19.6866, -62.7555, 0.28", "61.0683, -19.7318, -63.6584, 0.28", "61.4975, -19.7327, -64.1267, 0.55", "63.8338, -19.5759, -66.9703, 0.55", "66.5566, -19.1448, -70.4422, 0.28", "67.5339, -18.8758, -71.7314, 0.55", "69.1815, -18.3227, -74.0261, 0.28", "70.0503, -17.9907, -75.2281, 0.55", "71.1341, -17.5282, -76.6373, 0.55", "71.8827, -17.1082, -77.4415, 0.28", "72.2926, -16.8373, -77.8424, 0.55", "73.4446, -15.9923, -79.0295, 0.28", "73.8186, -15.6996, -79.4572, 0.55", "75.1736, -14.6498, -81.0274, 0.28", "76.3099, -13.7799, -82.32, 0.55", "78.4002, -12.2213, -84.7733, 0.28", "78.5689, -12.0938, -84.9753, 0.55", "80.5744, -10.5885, -87.349, 0.28", "81.4014, -9.97258, -88.3498, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "102.915, 26.9938, 30.8711, 0.55", "108.297, 21.6915, 40.4773, 0.55", "110.975, 19.0538, 45.2561, 0.55", "115.777, 14.3239, 53.8254, 0.28", "122.465, 8.09977, 65.3022, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "102.915, 26.9938, 30.8711, 0.28", "102.04, 28.8249, 34.4884, 0.28", "101.317, 30.3405, 37.4821, 0.55", "100.974, 33.5995, 46.3966, 0.55", "99.8329, 37.1237, 55.1471, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "24.2309, -35.836, -6.21428, 0.83", "27.7919, -38.3882, -7.40704, 0.83", "29.6739, -40.2595, -7.73342, 0.83", "30.8915, -41.9736, -7.78846, 0.83", "33.1756, -46.3754, -7.54802, 0.83", "35.8128, -52.3654, -6.99378, 0.83", "38.4391, -59.1246, -6.18064, 0.83", "40.8281, -67.0217, -4.93283, 0.83", "42.2312, -72.4974, -3.87229, 1.11", "43.2037, -77.2975, -2.78246, 0.83", "43.4244, -79.0875, -2.28496, 0.83", "43.527, -82.9129, -1.16461, 0.83", "43.2695, -87.8507, 0.00793019, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "24.2309, -35.836, -6.21428, 0.83", "26.4328, -36.008, -11.2469, 0.83", "26.797, -36.0364, -12.0792, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "43.2695, -87.8507, 0.00793019, 0.83", "43.2367, -89.8101, 0.18205, 0.83", "43.247, -91.1957, 0.209193, 0.83", "43.2857, -96.4207, 0.311518, 0.83", "43.3211, -101.205, 0.405222, 0.83", "43.3684, -107.596, 0.530394, 0.83", "43.4099, -113.196, 0.64007, 0.55", "43.4468, -119.061, 0.785103, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "43.2695, -87.8507, 0.00793019, 0.55", "46.4364, -88.887, -0.236273, 0.55", "51.5648, -90.7882, -0.849228, 0.55", "54.1368, -92.0707, -1.4669, 0.55", "55.7276, -93.0281, -1.87668, 0.55", "58.0074, -94.5724, -2.34613, 0.55", "59.8307, -95.9094, -2.66564, 0.55", "63.4966, -99.3927, -3.29894, 0.55", "67.5636, -104.424, -3.77813, 0.55", "70.1274, -108.309, -4.07504, 0.55", "73.3808, -114.047, -4.44057, 0.55", "74.5813, -116.44, -4.59114, 0.55", "78.4176, -125.102, -4.99005, 0.55", "80.1612, -129.744, -5.13333, 0.55", "81.1336, -132.7, -5.21917, 0.55", "81.8305, -135.298, -5.45934, 0.55", "82.4724, -137.942, -5.94766, 0.28", "82.6928, -138.655, -6.13293, 0.55", "83.931, -141.116, -7.0832, 0.28", "84.6436, -142.06, -7.57637, 0.55", "85.5078, -143.043, -8.11392, 0.55", "87.8301, -145.687, -9.42972, 0.55", "88.96, -146.836, -9.99892, 0.55", "90.8161, -148.544, -10.8925, 0.55", "93.9027, -151.242, -12.1823, 0.28", "94.4897, -151.711, -12.4092, 0.55", "97.916, -154.286, -13.612, 0.55", "102.206, -157.278, -14.954, 0.55", "107.066, -160.371, -16.3268, 0.28", "109.194, -161.523, -16.8135, 0.55", "112.108, -162.932, -17.2419, 0.28", "112.818, -163.221, -17.2775, 0.55", "115.067, -163.888, -17.0864, 0.28", "115.781, -164.061, -16.8684, 0.55", "118.871, -164.783, -15.4702, 0.28", "120.782, -165.227, -14.5686, 0.55", "123.768, -165.979, -12.8939, 0.28", "125.03, -166.331, -12.1465, 0.28", "126.932, -166.995, -10.906, 0.55", "131.044, -168.629, -8.03613, 0.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "26.797, -36.0364, -12.0792, 0.83", "26.6798, -38.2298, -18.699, 0.83", "26.6678, -38.9191, -20.7201, 0.83", "26.8299, -40.0117, -24.2544, 0.55", "26.9245, -40.4963, -25.6776, 0.55", "27.1128, -41.1605, -27.5668, 0.55", "27.5151, -42.4088, -30.9107, 0.55", "27.9568, -43.9318, -34.0233, 0.55", "28.7484, -46.2349, -38.1106, 0.28", "29.2943, -47.593, -40.1632, 0.83", "30.0044, -49.3428, -42.5268, 0.28", "30.334, -50.1104, -43.5008, 1.11", "32.0087, -54.1829, -48.3027, 0.28", "32.5847, -55.665, -49.9413, 1.39", "34.8104, -61.7669, -56.3282, 0.28", "35.151, -62.6743, -57.309, 1.11", "35.9853, -64.9876, -59.7892, 0.28", "36.1657, -65.4414, -60.318, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "26.797, -36.0364, -12.0792, 0.83", "31.4444, -36.7645, -17.3554, 0.83", "34.3353, -37.2174, -20.6374, 0.83", "36.3413, -37.5317, -22.9149, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "43.4468, -119.061, 0.785103, 0.55", "44.6771, -119.963, -3.28502, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "43.4468, -119.061, 0.785103, 0.55", "44.8971, -122.07, 0.190226, 0.55", "46.0051, -124.207, -0.181236, 0.55", "47.2988, -126.724, -0.670378, 0.55", "48.3627, -128.809, -1.09425, 0.55", "50.4871, -132.775, -1.99244, 0.28", "51.1312, -133.964, -2.28562, 0.55", "52.4322, -136.14, -2.94508, 0.28", "53.3469, -137.646, -3.39455, 0.28", "53.7408, -138.253, -3.58443, 0.55", "55.8437, -141.438, -4.60744, 0.28", "56.2244, -142.055, -4.8278, 0.55", "57.5633, -144.156, -5.6384, 0.28", "58.0813, -144.897, -5.95776, 0.55", "60.2411, -147.803, -7.16977, 0.28", "60.6917, -148.352, -7.41314, 0.55", "61.5211, -149.334, -7.80402, 0.28", "61.979, -149.911, -7.98576, 0.55", "64.0304, -152.845, -8.48154, 0.28", "64.6002, -153.741, -8.52031, 0.55", "65.7704, -156.111, -8.25837, 0.28", "67.4225, -160.096, -7.55583, 0.55", "68.217, -162.766, -6.89271, 0.55", "69.0922, -167.265, -5.63162, 0.28", "69.2268, -168.678, -5.17358, 0.55", "69.406, -173.149, -3.68089, 0.28", "69.3813, -173.857, -3.43422, 0.55", "69.0973, -177.822, -2.13344, 0.28", "69.0085, -178.988, -1.8205, 0.28", "68.9595, -179.448, -1.72972, 0.55", "68.807, -181.673, -1.42415, 0.28", "68.8106, -181.721, -1.42203, 0.55", "69.2237, -185.203, -1.25806, 0.28", "69.5526, -186.672, -1.28234, 0.55", "71.8511, -198.565, -1.21563, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "36.3413, -37.5317, -22.9149, 0.55", "35.5491, -39.4124, -25.5475, 0.55", "35.2209, -40.4689, -27.1635, 0.55", "34.9852, -41.482, -28.6497, 0.28", "34.7822, -42.4266, -29.9985, 0.28", "34.7728, -42.8529, -30.6999, 0.83", "34.8418, -44.1152, -32.7537, 0.28", "34.9525, -44.6756, -33.6569, 0.83", "35.2149, -45.9769, -35.6506, 0.83", "35.3242, -46.5344, -36.4141, 0.83", "35.916, -49.7766, -40.4623, 0.28", "36.2375, -51.6263, -42.7052, 0.28", "36.365, -52.4812, -43.6859, 0.55", "36.4781, -53.2559, -44.5532, 0.55", "37.2193, -58.2147, -49.9831, 0.28", "37.2853, -58.7983, -50.5689, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "36.3413, -37.5317, -22.9149, 0.83", "39.9839, -39.3239, -26.7081, 0.83", "41.3298, -40.3833, -28.0907, 0.28", "41.9697, -41.1021, -28.7363, 0.83", "44.5573, -44.7398, -31.2526, 0.55", "45.27, -45.8458, -31.9111, 0.55", "46.6301, -47.9465, -33.2158, 0.28", "47.999, -50.2991, -34.5378, 0.55", "49.4332, -52.6859, -35.8958, 0.55", "51.8419, -56.5792, -38.1382, 0.28", "52.7129, -58.03, -38.9331, 1.11", "56.7035, -64.4351, -42.5095, 0.28", "57.6959, -65.9602, -43.3968, 1.11", "60.2455, -69.8753, -45.7072, 0.28", "60.795, -70.8013, -46.2011, 1.11", "63.3537, -75.8136, -48.5112, 0.28", "63.618, -76.4491, -48.7555, 0.83", "63.9827, -77.6411, -49.1169, 0.28", "64.2786, -79.0625, -49.5565, 0.55", "65.0869, -85.5878, -51.7668, 0.28", "65.1514, -86.4837, -52.1202, 0.55", "65.1771, -88.1507, -52.9888, 0.28", "65.247, -90.8528, -54.5862, 1.11", "65.3348, -93.866, -56.6163, 0.28", "65.4093, -94.9192, -57.4733, 0.83", "65.5271, -96.0634, -58.7035, 0.28", "66.0446, -98.2343, -61.121, 0.55", "66.7911, -99.753, -62.9534, 0.28", "66.8916, -99.8904, -63.1156, 0.83", "67.6416, -100.486, -63.9122, 0.28", "67.8603, -100.641, -64.0975, 0.55", "69.4603, -101.603, -65.1795, 0.28", "70.819, -102.6, -65.8534, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "44.6771, -119.963, -3.28502, 0.55", "43.8103, -122.71, -7.7035, 0.55", "43.2705, -125.334, -12.0215, 0.55", "43.1892, -126.69, -14.3767, 0.55", "43.4022, -128.95, -18.0974, 0.55", "43.7985, -131.282, -21.7747, 0.28", "44.0575, -132.216, -23.2269, 0.55", "44.6444, -133.667, -25.3806, 0.28", "45.5643, -135.317, -27.7733, 1.39", "47.0027, -138.007, -31.3399, 0.28", "47.3176, -138.752, -32.2361, 0.83", "48.2363, -141.722, -35.5372, 0.28", "48.4407, -142.761, -36.6131, 0.55", "48.5144, -143.901, -37.6626, 0.55", "48.303, -148.286, -41.2319, 0.28", "48.0525, -150.283, -42.8331, 0.28", "47.747, -152.058, -44.1959, 0.55", "47.1301, -154.61, -45.9884, 0.28", "46.8803, -155.77, -46.8105, 0.55", "46.2876, -158.909, -48.8035, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "44.6771, -119.963, -3.28502, 0.55", "42.4463, -118.684, -4.32962, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_48", "dend_45", "dend_40", "dend_33", "dend_8", "dend_3", "dend_0", "dend_57", "dend_56", "dend_52", "dend_49", "dend_47", "dend_46", "dend_44", "dend_41", "dend_37", "dend_34", "dend_14", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "dend_54", "dend_53", "dend_51", "dend_50", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_35", "dend_16", "dend_15", "dend_13", "dend_10", "dend_6", "dend_5", "dend_30", "dend_17", "dend_12", "dend_11", "dend_32", "dend_31", "dend_23", "dend_18", "dend_25", "dend_24", "dend_22", "dend_19", "dend_27", "dend_26", "dend_21", "dend_20", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_48", "dend_45", "dend_40", "dend_33", "dend_8", "dend_3", "dend_0", "dend_57", "dend_56", "dend_52", "dend_49", "dend_47", "dend_46", "dend_44", "dend_41", "dend_37", "dend_34", "dend_14", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "dend_54", "dend_53", "dend_51", "dend_50", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_35", "dend_16", "dend_15", "dend_13", "dend_10", "dend_6", "dend_5", "dend_30", "dend_17", "dend_12", "dend_11", "dend_32", "dend_31", "dend_23", "dend_18", "dend_25", "dend_24", "dend_22", "dend_19", "dend_27", "dend_26", "dend_21", "dend_20", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_56", "dend_56", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_14", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_NBC_55cf872277_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_16
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_33, dend_33, dend_33, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, axon_0, axon_0, dend_57, dend_57, dend_56, dend_56, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.49999965882319475)
    connect dend_48(0), soma_0(0.49999965882319475)
    connect dend_45(0), soma_0(0.49999965882319475)
    connect dend_40(0), soma_0(0.49999965882319475)
    connect dend_33(0), soma_0(0.49999965882319475)
    connect dend_8(0), soma_0(0.49999965882319475)
    connect dend_3(0), soma_0(0.49999965882319475)
    connect dend_0(0), soma_0(0.49999965882319475)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.89093, 6.3846, -1.48625, 2.82016 ) }
    soma_0 { pt3dadd( -2.66386, 5.61657, -1.27833, 4.98681 ) }
    soma_0 { pt3dadd( -2.43678, 4.84853, -1.07041, 7.51044 ) }
    soma_0 { pt3dadd( -2.20971, 4.0805, -0.862483, 8.92538 ) }
    soma_0 { pt3dadd( -1.98264, 3.31246, -0.65456, 10.0669 ) }
    soma_0 { pt3dadd( -1.75557, 2.54443, -0.446636, 10.3676 ) }
    soma_0 { pt3dadd( -1.52849, 1.7764, -0.238713, 10.6171 ) }
    soma_0 { pt3dadd( -1.30142, 1.00836, -0.0307891, 10.1846 ) }
    soma_0 { pt3dadd( -1.07435, 0.240325, 0.177134, 9.79445 ) }
    soma_0 { pt3dadd( -0.847273, -0.52771, 0.385058, 9.58423 ) }
    soma_0 { pt3dadd( -0.6202, -1.29574, 0.592981, 9.374 ) }
    soma_0 { pt3dadd( -0.393128, -2.06378, 0.800905, 9.16378 ) }
    soma_0 { pt3dadd( -0.166055, -2.83181, 1.00883, 8.95369 ) }
    soma_0 { pt3dadd( 0.0610184, -3.59985, 1.21675, 8.74371 ) }
    soma_0 { pt3dadd( 0.288091, -4.36788, 1.42468, 8.44292 ) }
    soma_0 { pt3dadd( 0.515164, -5.13592, 1.6326, 7.88171 ) }
    soma_0 { pt3dadd( 0.742237, -5.90395, 1.84052, 7.32051 ) }
    soma_0 { pt3dadd( 0.96931, -6.67199, 2.04845, 6.7381 ) }
    soma_0 { pt3dadd( 1.19638, -7.44002, 2.25637, 5.93312 ) }
    soma_0 { pt3dadd( 1.42346, -8.20806, 2.46429, 5.04519 ) }
    soma_0 { pt3dadd( 1.65053, -8.97609, 2.67222, 2.76105 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -2.9567, 3.93994, 8.71987, 1.11 ) }
    dend_55 { pt3dadd( -4.13844, 7.26869, 8.6722, 0.83 ) }
    dend_55 { pt3dadd( -4.63514, 9.20465, 8.86038, 0.83 ) }
    dend_55 { pt3dadd( -5.86685, 14.8278, 9.70229, 0.83 ) }
    dend_55 { pt3dadd( -6.29436, 18.0444, 10.4832, 0.83 ) }
    dend_55 { pt3dadd( -6.58166, 20.7728, 11.2743, 1.11 ) }
    dend_55 { pt3dadd( -6.63847, 24.372, 12.6225, 0.83 ) }
    dend_55 { pt3dadd( -6.26526, 28.7934, 14.7814, 0.83 ) }
    dend_55 { pt3dadd( -6.06993, 30.3115, 15.6501, 0.83 ) }
    dend_55 { pt3dadd( -5.35147, 34.644, 18.4907, 0.55 ) }
    dend_55 { pt3dadd( -4.45028, 40.0625, 22.5276, 0.55 ) }
    dend_55 { pt3dadd( -3.6451, 45.4666, 26.7711, 0.55 ) }
    dend_55 { pt3dadd( -3.14596, 49.4826, 30.0186, 0.55 ) }
    dend_55 { pt3dadd( -2.81253, 51.9184, 31.9347, 0.28 ) }
    dend_55 { pt3dadd( -2.53592, 53.9718, 33.6142, 0.55 ) }
    dend_55 { pt3dadd( -2.35631, 56.7555, 35.9209, 0.55 ) }
    dend_55 { pt3dadd( -3.90654, 69.1172, 38.75, 0.55 ) }
    dend_55 { pt3dadd( -7.21217, 81.1213, 41.5381, 0.55 ) }
    dend_55 { pt3dadd( -11.9502, 91.9745, 46.1523, 0.55 ) }
    dend_55 { pt3dadd( -17.119, 102.545, 50.9272, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 41/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -5.4967, 3.68369, -7.38013, 1.66 ) }
    dend_48 { pt3dadd( -8.29886, 4.60944, -9.52014, 1.66 ) }
    dend_48 { pt3dadd( -12.281, 5.92503, -12.5613, 1.66 ) }
    dend_48 { pt3dadd( -15.0803, 6.84983, -14.6992, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 45/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -4.2067, -0.723808, -10.0602, 1.11 ) }
    dend_45 { pt3dadd( -5.84381, -0.755894, -9.97062, 1.11 ) }
    dend_45 { pt3dadd( -7.99837, -0.696052, -9.81771, 1.11 ) }
    dend_45 { pt3dadd( -10.286, -0.529567, -9.64645, 1.11 ) }
    dend_45 { pt3dadd( -12.2438, -0.366611, -9.55021, 1.11 ) }
    dend_45 { pt3dadd( -15.2976, -0.121343, -9.45914, 0.83 ) }
    dend_45 { pt3dadd( -17.5083, 0.0220474, -9.44174, 0.83 ) }
    dend_45 { pt3dadd( -19.1144, 0.118568, -9.46692, 1.39 ) }
    dend_45 { pt3dadd( -20.8978, 0.235819, -9.53714, 1.11 ) }
    dend_45 { pt3dadd( -22.5219, 0.372801, -9.65268, 1.11 ) }
    dend_45 { pt3dadd( -25.237, 0.548681, -9.91785, 1.11 ) }
    dend_45 { pt3dadd( -27.8126, 0.56109, -10.2228, 1.11 ) }
    dend_45 { pt3dadd( -29.6933, 0.532495, -10.5291, 0.83 ) }
    dend_45 { pt3dadd( -30.7745, 0.5238, -10.7178, 0.83 ) }
    dend_45 { pt3dadd( -34.3942, 0.346586, -11.7117, 0.83 ) }
    dend_45 { pt3dadd( -35.3229, 0.219473, -12.1037, 0.83 ) }
    dend_45 { pt3dadd( -37.5056, -0.23349, -13.4487, 0.83 ) }
    dend_45 { pt3dadd( -39.7005, -0.729623, -15.0586, 0.83 ) }
    dend_45 { pt3dadd( -41.9599, -1.21707, -16.9879, 0.83 ) }
    dend_45 { pt3dadd( -46.1932, -2.08175, -20.742, 0.83 ) }
    dend_45 { pt3dadd( -49.9073, -2.81591, -24.3029, 0.83 ) }
    dend_45 { pt3dadd( -52.7133, -3.29674, -27.1224, 0.83 ) }
    dend_45 { pt3dadd( -56.2998, -3.8199, -30.9324, 0.55 ) }
    dend_45 { pt3dadd( -58.695, -4.14509, -33.5466, 0.28 ) }
    dend_45 { pt3dadd( -61.1312, -4.40364, -36.2783, 0.55 ) }
    dend_45 { pt3dadd( -63.5085, -4.37771, -38.6568, 0.55 ) }
    dend_45 { pt3dadd( -64.0679, -4.30315, -39.1899, 0.55 ) }
    dend_45 { pt3dadd( -64.9659, -4.17719, -40.0189, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 73/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.5167, -3.26581, 11.1598, 1.66 ) }
    dend_40 { pt3dadd( -5.53348, -4.35875, 12.29, 1.39 ) }
    dend_40 { pt3dadd( -7.74673, -6.73775, 14.75, 1.66 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 76/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.0967, -6.4228, 15.1098, 1.39 ) }
    dend_33 { pt3dadd( -2.88301, -8.93812, 14.7077, 1.39 ) }
    dend_33 { pt3dadd( -3.70634, -11.5719, 14.2866, 1.39 ) }
    dend_33 { pt3dadd( -4.27487, -13.3905, 13.9959, 1.39 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 80/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.8933, -9.06731, 6.44987, 4.16 ) }
    dend_8 { pt3dadd( 3.31986, -9.54543, 5.451, 4.16 ) }
    dend_8 { pt3dadd( 4.8805, -11.2947, 1.79643, 3.05 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 83/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 0.0933001, -4.41381, 3.93987, 1.11 ) }
    dend_3 { pt3dadd( 1.08338, -4.17041, 4.31195, 1.11 ) }
    dend_3 { pt3dadd( 1.94126, -3.58358, 5.27665, 1.11 ) }
    dend_3 { pt3dadd( 3.2988, -2.65496, 6.80321, 1.11 ) }
    dend_3 { pt3dadd( 4.40357, -1.89924, 8.04553, 0.83 ) }
    dend_3 { pt3dadd( 6.16407, -0.69495, 10.0252, 0.83 ) }
    dend_3 { pt3dadd( 7.82206, 0.4392, 11.8896, 1.11 ) }
    dend_3 { pt3dadd( 9.25004, 1.80878, 14.3642, 1.11 ) }
    dend_3 { pt3dadd( 13.6472, 5.38559, 19.5039, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.8933, 4.98545, 1.41987, 1.39 ) }
    dend_0 { pt3dadd( 4.36581, 7.95275, 1.41987, 1.39 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 94/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.65053, -8.97609, 2.67222, 0.81432 ) }
    axon_0 { pt3dadd( 5.90337, -23.3606, 2.67222, 0.81432 ) }
    axon_0 { pt3dadd( 10.1562, -37.7451, 2.67222, 0.81432 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 97/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -17.119, 102.545, 50.9272, 0.55 ) }
    dend_57 { pt3dadd( -19.8849, 113.099, 55.2381, 0.55 ) }
    dend_57 { pt3dadd( -22.1311, 124.488, 57.1773, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -17.119, 102.545, 50.9272, 0.55 ) }
    dend_56 { pt3dadd( -17.2636, 108.178, 53.6531, 0.55 ) }
    dend_56 { pt3dadd( -16.8086, 113.147, 57.3893, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -15.0803, 6.84983, -14.6992, 0.83 ) }
    dend_52 { pt3dadd( -16.8025, 9.4567, -16.2386, 0.83 ) }
    dend_52 { pt3dadd( -19.223, 13.1204, -18.4021, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -15.0803, 6.84983, -14.6992, 1.11 ) }
    dend_49 { pt3dadd( -21.8394, 10.3834, -16.3285, 1.11 ) }
    dend_49 { pt3dadd( -26.8015, 12.9775, -17.5247, 1.11 ) }
    dend_49 { pt3dadd( -29.4529, 14.3636, -18.1638, 1.11 ) }
    dend_49 { pt3dadd( -35.8992, 17.7336, -19.7177, 0.83 ) }
    dend_49 { pt3dadd( -39.8254, 19.7862, -20.6642, 0.83 ) }
    dend_49 { pt3dadd( -43.5289, 21.7223, -21.5569, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 13/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -64.9659, -4.17719, -40.0189, 0.28 ) }
    dend_47 { pt3dadd( -64.8068, -6.08027, -43.2233, 0.28 ) }
    dend_47 { pt3dadd( -64.7722, -6.49383, -43.9197, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -64.9659, -4.17719, -40.0189, 0.28 ) }
    dend_46 { pt3dadd( -67.1898, -7.00276, -44.4559, 0.28 ) }
    dend_46 { pt3dadd( -68.4265, -8.47846, -46.6661, 1.11 ) }
    dend_46 { pt3dadd( -69.7161, -9.87973, -48.6916, 1.11 ) }
    dend_46 { pt3dadd( -70.6985, -10.8567, -50.0815, 0.28 ) }
    dend_46 { pt3dadd( -71.4797, -11.44, -51.0521, 1.39 ) }
    dend_46 { pt3dadd( -75.1043, -13.7221, -55.4595, 0.28 ) }
    dend_46 { pt3dadd( -76.883, -14.5837, -57.3251, 1.11 ) }
    dend_46 { pt3dadd( -78.1064, -15.0582, -58.4738, 0.55 ) }
    dend_46 { pt3dadd( -79.8258, -15.6344, -60.0384, 0.28 ) }
    dend_46 { pt3dadd( -87.7758, -17.9045, -67.1992, 0.28 ) }
    dend_46 { pt3dadd( -90.5842, -18.5894, -69.6452, 0.83 ) }
    dend_46 { pt3dadd( -93.3493, -19.0942, -71.957, 0.28 ) }
    dend_46 { pt3dadd( -94.8386, -19.3093, -73.218, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 30/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -7.74673, -6.73775, 14.75, 0.83 ) }
    dend_44 { pt3dadd( -8.23263, -8.05592, 17.2817, 0.83 ) }
    dend_44 { pt3dadd( -8.48312, -8.84249, 18.4715, 0.55 ) }
    dend_44 { pt3dadd( -9.01585, -9.88996, 20.147, 0.55 ) }
    dend_44 { pt3dadd( -9.74205, -10.8125, 21.8128, 0.55 ) }
    dend_44 { pt3dadd( -10.9759, -11.9301, 24.0615, 0.55 ) }
    dend_44 { pt3dadd( -11.8454, -12.7176, 25.646, 0.55 ) }
    dend_44 { pt3dadd( -12.8874, -13.4676, 27.0678, 0.55 ) }
    dend_44 { pt3dadd( -14.7219, -14.3158, 29.1971, 0.55 ) }
    dend_44 { pt3dadd( -15.8504, -14.5671, 30.0729, 0.55 ) }
    dend_44 { pt3dadd( -17.1858, -14.6383, 30.8671, 0.55 ) }
    dend_44 { pt3dadd( -21.3833, -17.6483, 37.1396, 0.55 ) }
    dend_44 { pt3dadd( -25.5466, -22.4881, 42.2059, 0.55 ) }
    dend_44 { pt3dadd( -29.1692, -26.6192, 48.2213, 0.55 ) }
    dend_44 { pt3dadd( -34.6753, -30.1443, 53.0348, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 45/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -7.74673, -6.73775, 14.75, 0.83 ) }
    dend_41 { pt3dadd( -8.24174, -8.26043, 13.4866, 0.83 ) }
    dend_41 { pt3dadd( -8.88829, -10.2492, 11.8365, 0.83 ) }
    dend_41 { pt3dadd( -10.1676, -14.1845, 8.57132, 0.83 ) }
    dend_41 { pt3dadd( -10.4248, -14.9756, 7.91492, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -4.27487, -13.3905, 13.9959, 0.83 ) }
    dend_37 { pt3dadd( -5.97337, -16.6223, 13.9388, 0.83 ) }
    dend_37 { pt3dadd( -7.08727, -18.3017, 13.8938, 0.83 ) }
    dend_37 { pt3dadd( -9.0162, -21.0872, 13.7856, 0.83 ) }
    dend_37 { pt3dadd( -11.3215, -24.4163, 13.6562, 0.83 ) }
    dend_37 { pt3dadd( -12.133, -25.5882, 13.6107, 0.83 ) }
    dend_37 { pt3dadd( -14.2768, -28.684, 13.4904, 1.11 ) }
    dend_37 { pt3dadd( -17.3752, -32.7868, 13.3022, 0.83 ) }
    dend_37 { pt3dadd( -18.6659, -34.3415, 13.218, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -4.27487, -13.3905, 13.9959, 0.83 ) }
    dend_34 { pt3dadd( -4.1702, -15.7471, 14.8356, 0.83 ) }
    dend_34 { pt3dadd( -4.18562, -17.3963, 15.3264, 0.83 ) }
    dend_34 { pt3dadd( -4.16507, -18.6193, 15.6001, 0.83 ) }
    dend_34 { pt3dadd( -4.10466, -22.1862, 16.2673, 0.83 ) }
    dend_34 { pt3dadd( -4.03155, -23.9037, 16.5366, 0.83 ) }
    dend_34 { pt3dadd( -3.87996, -25.8763, 16.7963, 0.83 ) }
    dend_34 { pt3dadd( -3.59207, -29.2669, 17.1603, 0.83 ) }
    dend_34 { pt3dadd( -3.30526, -32.5282, 17.4684, 0.83 ) }
    dend_34 { pt3dadd( -3.30571, -33.7435, 17.6038, 0.83 ) }
    dend_34 { pt3dadd( -3.43184, -35.8183, 17.885, 0.83 ) }
    dend_34 { pt3dadd( -3.58241, -37.3309, 18.1455, 0.83 ) }
    dend_34 { pt3dadd( -3.81756, -39.0543, 18.4805, 0.83 ) }
    dend_34 { pt3dadd( -4.46087, -43.0174, 19.3127, 0.83 ) }
    dend_34 { pt3dadd( -5.65237, -49.0187, 20.5771, 0.55 ) }
    dend_34 { pt3dadd( -6.11898, -51.5978, 21.0552, 0.55 ) }
    dend_34 { pt3dadd( -6.52977, -53.8701, 21.4106, 0.55 ) }
    dend_34 { pt3dadd( -6.96704, -56.4512, 21.6892, 0.55 ) }
    dend_34 { pt3dadd( -7.32276, -59.2099, 21.8141, 0.55 ) }
    dend_34 { pt3dadd( -7.44509, -61.413, 21.7066, 0.55 ) }
    dend_34 { pt3dadd( -7.33988, -64.5232, 21.3831, 0.55 ) }
    dend_34 { pt3dadd( -7.24834, -67.419, 20.9908, 0.55 ) }
    dend_34 { pt3dadd( -7.17629, -69.2008, 20.7523, 0.28 ) }
    dend_34 { pt3dadd( -7.1207, -70.2849, 20.6004, 0.83 ) }
    dend_34 { pt3dadd( -7.03699, -71.3478, 20.444, 0.55 ) }
    dend_34 { pt3dadd( -6.69275, -74.4168, 20.0006, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.8805, -11.2947, 1.79643, 2.49 ) }
    dend_14 { pt3dadd( 5.89965, -13.0355, 1.11322, 2.49 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.8805, -11.2947, 1.79643, 1.39 ) }
    dend_9 { pt3dadd( 6.49814, -11.0653, -0.371004, 1.39 ) }
    dend_9 { pt3dadd( 7.28883, -10.9531, -1.43043, 1.11 ) }
    dend_9 { pt3dadd( 8.18398, -10.8262, -2.62982, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 91/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 13.6472, 5.38559, 19.5039, 0.55 ) }
    dend_7 { pt3dadd( 19.5028, 10.6653, 27.4815, 0.55 ) }
    dend_7 { pt3dadd( 25.5609, 14.9564, 35.8623, 0.55 ) }
    dend_7 { pt3dadd( 32.9189, 20.5906, 42.1967, 0.55 ) }
    dend_7 { pt3dadd( 39.9476, 24.9684, 49.7351, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 96/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 13.6472, 5.38559, 19.5039, 0.55 ) }
    dend_4 { pt3dadd( 20.479, 7.90361, 24.2755, 0.55 ) }
    dend_4 { pt3dadd( 27.9801, 10.4859, 27.8604, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 99/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.36581, 7.95275, 1.41987, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 5.84704, 11.1969, 2.30004, 1.11 ) }
    dend_2 { pt3dadd( 7.23422, 13.9314, 2.66348, 1.11 ) }
    dend_2 { pt3dadd( 9.50034, 17.9326, 2.45819, 1.11 ) }
    dend_2 { pt3dadd( 11.093, 20.7259, 2.13466, 1.11 ) }
    dend_2 { pt3dadd( 12.7256, 23.5047, 1.65021, 0.83 ) }
    dend_2 { pt3dadd( 15.0248, 27.0124, 0.828563, 0.83 ) }
    dend_2 { pt3dadd( 18.9846, 32.0982, -1.08573, 0.83 ) }
    dend_2 { pt3dadd( 22.5162, 35.9854, -3.30826, 0.83 ) }
    dend_2 { pt3dadd( 23.9268, 37.3709, -4.3423, 0.83 ) }
    dend_2 { pt3dadd( 26.4565, 39.6702, -6.44527, 0.55 ) }
    dend_2 { pt3dadd( 29.2056, 41.9908, -8.90258, 0.83 ) }
    dend_2 { pt3dadd( 32.3, 44.5111, -11.7633, 0.55 ) }
    dend_2 { pt3dadd( 34.6297, 46.4045, -14.0403, 0.55 ) }
    dend_2 { pt3dadd( 35.8991, 47.4522, -15.3673, 0.55 ) }
    dend_2 { pt3dadd( 38.4357, 49.5192, -18.2075, 0.28 ) }
    dend_2 { pt3dadd( 39.0305, 50.0494, -18.9514, 0.83 ) }
    dend_2 { pt3dadd( 39.8231, 50.9311, -20.1065, 0.83 ) }
    dend_2 { pt3dadd( 43.3276, 55.3064, -25.7449, 0.55 ) }
    dend_2 { pt3dadd( 44.133, 56.2649, -27.1838, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.36581, 7.95275, 1.41987, 0.55 ) }
    dend_1 { pt3dadd( 7.9894, 10.5386, -1.19108, 0.55 ) }
    dend_1 { pt3dadd( 9.30467, 11.4714, -2.44527, 0.55 ) }
    dend_1 { pt3dadd( 11.6885, 13.1685, -4.96124, 0.83 ) }
    dend_1 { pt3dadd( 13.201, 14.3613, -6.88335, 0.83 ) }
    dend_1 { pt3dadd( 16.8391, 17.6495, -11.9362, 0.83 ) }
    dend_1 { pt3dadd( 17.577, 18.3748, -13.0314, 0.83 ) }
    dend_1 { pt3dadd( 20.1007, 21.0887, -17.4416, 0.83 ) }
    dend_1 { pt3dadd( 23.2506, 24.7917, -23.5889, 0.83 ) }
    dend_1 { pt3dadd( 25.8383, 28.4395, -29.4322, 0.83 ) }
    dend_1 { pt3dadd( 27.6423, 31.3981, -33.8676, 0.83 ) }
    dend_1 { pt3dadd( 28.3462, 32.7173, -35.6738, 0.83 ) }
    dend_1 { pt3dadd( 29.566, 35.2957, -38.7995, 0.83 ) }
    dend_1 { pt3dadd( 29.8568, 36.0452, -39.5333, 0.83 ) }
    dend_1 { pt3dadd( 30.3519, 37.5388, -40.7617, 0.28 ) }
    dend_1 { pt3dadd( 30.9396, 39.1937, -41.8814, 0.83 ) }
    dend_1 { pt3dadd( 32.542, 43.3672, -44.4128, 0.83 ) }
    dend_1 { pt3dadd( 34.0492, 46.2647, -45.9016, 0.83 ) }
    dend_1 { pt3dadd( 36.5176, 50.0809, -47.8583, 0.55 ) }
    dend_1 { pt3dadd( 37.2596, 51.0722, -48.4071, 0.83 ) }
    dend_1 { pt3dadd( 39.3435, 53.6211, -50.1182, 0.55 ) }
    dend_1 { pt3dadd( 40.2471, 54.6736, -50.9039, 0.83 ) }
    dend_1 { pt3dadd( 44.371, 59.4581, -54.9283, 0.28 ) }
    dend_1 { pt3dadd( 46.4879, 62.0292, -57.3299, 0.83 ) }
    dend_1 { pt3dadd( 46.9329, 62.6673, -58.0851, 0.83 ) }
    dend_1 { pt3dadd( 49.5512, 66.7699, -63.715, 0.28 ) }
    dend_1 { pt3dadd( 49.8644, 67.3274, -64.5816, 0.55 ) }
    dend_1 { pt3dadd( 50.8203, 69.4184, -68.0373, 0.28 ) }
    dend_1 { pt3dadd( 51.0883, 70.2577, -69.517, 1.11 ) }
    dend_1 { pt3dadd( 52.6617, 75.6514, -78.5671, 0.55 ) }
    dend_1 { pt3dadd( 53.1278, 77.2088, -81.0919, 0.28 ) }
    dend_1 { pt3dadd( 53.4579, 78.2495, -82.7967, 0.55 ) }
    dend_1 { pt3dadd( 53.7733, 79.2146, -84.4028, 0.28 ) }
    dend_1 { pt3dadd( 54.3125, 80.7249, -86.8356, 0.55 ) }
    dend_1 { pt3dadd( 55.0056, 82.6457, -89.7743, 0.28 ) }
    dend_1 { pt3dadd( 55.6574, 84.4375, -91.246, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.1562, -37.7451, 2.67222, 0.55 ) }
    axon_1 { pt3dadd( 14.409, -52.1295, 2.67222, 0.55 ) }
    axon_1 { pt3dadd( 18.6619, -66.514, 2.67222, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 58/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -19.223, 13.1204, -18.4021, 0.55 ) }
    dend_54 { pt3dadd( -23.6801, 16.1936, -23.2648, 0.55 ) }
    dend_54 { pt3dadd( -26.7137, 18.5266, -25.7444, 1.11 ) }
    dend_54 { pt3dadd( -30.5636, 21.6344, -28.8046, 0.83 ) }
    dend_54 { pt3dadd( -32.9828, 23.5767, -30.6238, 0.83 ) }
    dend_54 { pt3dadd( -36.1843, 26.1399, -33.0638, 0.83 ) }
    dend_54 { pt3dadd( -40.2082, 29.5304, -36.1547, 0.83 ) }
    dend_54 { pt3dadd( -42.8223, 31.7161, -37.956, 0.55 ) }
    dend_54 { pt3dadd( -45.7848, 34.5118, -39.8861, 0.28 ) }
    dend_54 { pt3dadd( -46.8716, 35.6663, -40.5838, 0.83 ) }
    dend_54 { pt3dadd( -49.011, 38.1362, -42.2803, 0.83 ) }
    dend_54 { pt3dadd( -50.6383, 40.1681, -43.903, 0.55 ) }
    dend_54 { pt3dadd( -52.448, 42.4965, -46.2772, 0.83 ) }
    dend_54 { pt3dadd( -54.2454, 44.8708, -48.7619, 0.28 ) }
    dend_54 { pt3dadd( -55.3135, 46.3667, -50.3396, 0.28 ) }
    dend_54 { pt3dadd( -56.2681, 47.7597, -51.9091, 0.55 ) }
    dend_54 { pt3dadd( -56.8332, 48.5928, -52.9052, 0.83 ) }
    dend_54 { pt3dadd( -58.9349, 51.5578, -56.9494, 0.28 ) }
    dend_54 { pt3dadd( -59.6634, 52.6084, -58.4133, 0.83 ) }
    dend_54 { pt3dadd( -61.3269, 55.1151, -61.8932, 0.55 ) }
    dend_54 { pt3dadd( -61.8816, 55.9663, -63.0759, 0.28 ) }
    dend_54 { pt3dadd( -62.9285, 57.7573, -65.4485, 1.11 ) }
    dend_54 { pt3dadd( -64.1804, 59.9332, -68.1429, 0.28 ) }
    dend_54 { pt3dadd( -65.2518, 61.6246, -70.0606, 0.55 ) }
    dend_54 { pt3dadd( -66.0183, 62.6448, -71.2619, 0.28 ) }
    dend_54 { pt3dadd( -66.7205, 63.5279, -72.2343, 0.83 ) }
    dend_54 { pt3dadd( -67.8372, 64.7526, -73.8615, 0.28 ) }
    dend_54 { pt3dadd( -69.0456, 65.91, -75.5709, 0.55 ) }
    dend_54 { pt3dadd( -70.7053, 67.379, -77.7795, 0.83 ) }
    dend_54 { pt3dadd( -74.6374, 70.9504, -83.2957, 0.28 ) }
    dend_54 { pt3dadd( -75.5659, 71.823, -84.6171, 0.83 ) }
    dend_54 { pt3dadd( -79.3046, 75.702, -89.9958, 0.28 ) }
    dend_54 { pt3dadd( -79.7865, 76.2636, -90.713, 0.55 ) }
    dend_54 { pt3dadd( -80.6728, 77.6201, -92.1908, 1.11 ) }
    dend_54 { pt3dadd( -82.5723, 81.4771, -95.7875, 0.28 ) }
    dend_54 { pt3dadd( -82.869, 82.3114, -96.432, 0.55 ) }
    dend_54 { pt3dadd( -83.5217, 84.48, -97.9056, 0.28 ) }
    dend_54 { pt3dadd( -83.6788, 85.1298, -98.3089, 0.55 ) }
    dend_54 { pt3dadd( -84.653, 89.1151, -101.013, 0.28 ) }
    dend_54 { pt3dadd( -85.3684, 91.4688, -102.956, 0.83 ) }
    dend_54 { pt3dadd( -85.9355, 92.9127, -104.257, 0.28 ) }
    dend_54 { pt3dadd( -86.1758, 93.4243, -104.773, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_54 { pt3dadd( -88.5512, 97.9534, -109.53, 0.28 ) }
    dend_54 { pt3dadd( -88.894, 98.5665, -110.202, 0.83 ) }
    dend_54 { pt3dadd( -90.8987, 101.703, -113.863, 0.28 ) }
    dend_54 { pt3dadd( -91.5119, 102.616, -114.903, 0.55 ) }
    dend_54 { pt3dadd( -93.7325, 105.682, -118.593, 0.28 ) }
    dend_54 { pt3dadd( -94.9178, 107.208, -120.437, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 6/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -19.223, 13.1204, -18.4021, 0.83 ) }
    dend_53 { pt3dadd( -22.0991, 15.0422, -17.2032, 0.83 ) }
    dend_53 { pt3dadd( -23.9459, 16.3848, -16.5251, 0.55 ) }
    dend_53 { pt3dadd( -29.5098, 20.4526, -14.9332, 0.55 ) }
    dend_53 { pt3dadd( -35.6649, 25.0611, -13.634, 0.55 ) }
    dend_53 { pt3dadd( -39.1029, 27.5669, -13.1737, 0.55 ) }
    dend_53 { pt3dadd( -41.4351, 29.2182, -13.0365, 0.55 ) }
    dend_53 { pt3dadd( -45.8037, 32.1597, -13.1683, 0.55 ) }
    dend_53 { pt3dadd( -48.3731, 33.7264, -13.6105, 0.55 ) }
    dend_53 { pt3dadd( -50.7175, 34.9912, -14.2808, 0.55 ) }
    dend_53 { pt3dadd( -53.1846, 36.1152, -15.4136, 0.55 ) }
    dend_53 { pt3dadd( -57.1237, 37.5684, -17.4188, 0.55 ) }
    dend_53 { pt3dadd( -61.2119, 38.7857, -19.6015, 0.55 ) }
    dend_53 { pt3dadd( -62.6463, 39.0932, -20.3572, 0.28 ) }
    dend_53 { pt3dadd( -64.946, 39.5539, -21.4932, 1.39 ) }
    dend_53 { pt3dadd( -70.0864, 40.4296, -23.8063, 0.28 ) }
    dend_53 { pt3dadd( -71.3993, 40.7062, -24.3717, 0.83 ) }
    dend_53 { pt3dadd( -73.0444, 41.069, -25.0714, 0.28 ) }
    dend_53 { pt3dadd( -74.877, 41.6375, -25.7819, 0.55 ) }
    dend_53 { pt3dadd( -75.441, 41.8519, -25.9806, 0.28 ) }
    dend_53 { pt3dadd( -77.9605, 42.9874, -26.8197, 0.83 ) }
    dend_53 { pt3dadd( -82.1551, 45.0498, -27.8547, 0.28 ) }
    dend_53 { pt3dadd( -83.388, 45.6851, -28.1879, 0.55 ) }
    dend_53 { pt3dadd( -85.4535, 46.7899, -28.7712, 0.28 ) }
    dend_53 { pt3dadd( -86.9565, 47.5368, -29.1912, 0.55 ) }
    dend_53 { pt3dadd( -89.7808, 48.8098, -29.9352, 0.28 ) }
    dend_53 { pt3dadd( -90.5853, 49.0641, -30.0844, 0.83 ) }
    dend_53 { pt3dadd( -94.6034, 49.8109, -30.5299, 0.28 ) }
    dend_53 { pt3dadd( -95.378, 49.9241, -30.6099, 0.55 ) }
    dend_53 { pt3dadd( -97.786, 50.1284, -30.8215, 0.28 ) }
    dend_53 { pt3dadd( -99.6775, 50.2024, -30.9393, 0.55 ) }
    dend_53 { pt3dadd( -107.146, 50.0309, -31.0521, 0.28 ) }
    dend_53 { pt3dadd( -108.308, 49.9505, -31.0357, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 39/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -43.5289, 21.7223, -21.5569, 0.55 ) }
    dend_51 { pt3dadd( -45.7093, 23.5597, -24.4319, 0.55 ) }
    dend_51 { pt3dadd( -47.7783, 25.1747, -26.8924, 0.55 ) }
    dend_51 { pt3dadd( -49.5938, 26.4225, -28.7432, 0.83 ) }
    dend_51 { pt3dadd( -51.0139, 27.2963, -29.8505, 0.83 ) }
    dend_51 { pt3dadd( -52.9321, 28.391, -31.1615, 0.28 ) }
    dend_51 { pt3dadd( -53.6047, 28.7431, -31.5975, 0.28 ) }
    dend_51 { pt3dadd( -55.6207, 29.6213, -32.6817, 0.83 ) }
    dend_51 { pt3dadd( -57.5143, 30.3147, -33.6037, 0.55 ) }
    dend_51 { pt3dadd( -61.4558, 31.4835, -35.4782, 0.55 ) }
    dend_51 { pt3dadd( -64.1207, 32.1573, -36.8346, 0.83 ) }
    dend_51 { pt3dadd( -66.2071, 32.6909, -38.1256, 0.28 ) }
    dend_51 { pt3dadd( -66.6859, 32.8175, -38.4775, 0.55 ) }
    dend_51 { pt3dadd( -69.3274, 33.4225, -40.4944, 0.28 ) }
    dend_51 { pt3dadd( -70.4803, 33.6686, -41.4638, 0.55 ) }
    dend_51 { pt3dadd( -72.4107, 34.1329, -43.1186, 0.55 ) }
    dend_51 { pt3dadd( -75.0289, 34.8558, -45.1328, 0.28 ) }
    dend_51 { pt3dadd( -75.8131, 35.1003, -45.677, 0.28 ) }
    dend_51 { pt3dadd( -79.4086, 36.3115, -47.9397, 0.55 ) }
    dend_51 { pt3dadd( -82.9144, 37.4898, -49.7661, 0.83 ) }
    dend_51 { pt3dadd( -87.5465, 38.9603, -51.7598, 0.28 ) }
    dend_51 { pt3dadd( -88.567, 39.258, -52.1214, 0.55 ) }
    dend_51 { pt3dadd( -91.0137, 39.9228, -52.8361, 0.55 ) }
    dend_51 { pt3dadd( -92.146, 40.2404, -53.1501, 0.55 ) }
    dend_51 { pt3dadd( -95.4502, 41.1757, -54.0784, 0.83 ) }
    dend_51 { pt3dadd( -98.1194, 41.8451, -54.5816, 0.28 ) }
    dend_51 { pt3dadd( -98.8606, 42.0066, -54.6822, 0.55 ) }
    dend_51 { pt3dadd( -101.515, 42.6172, -55.0151, 0.28 ) }
    dend_51 { pt3dadd( -102.831, 42.9313, -55.2395, 0.55 ) }
    dend_51 { pt3dadd( -104.292, 43.2739, -55.5666, 0.28 ) }
    dend_51 { pt3dadd( -105.222, 43.5154, -55.8171, 0.83 ) }
    dend_51 { pt3dadd( -106.799, 43.9833, -56.2374, 0.28 ) }
    dend_51 { pt3dadd( -108.322, 44.5044, -56.6269, 0.83 ) }
    dend_51 { pt3dadd( -112.312, 46.2853, -57.5042, 0.28 ) }
    dend_51 { pt3dadd( -113.73, 47.12, -57.8222, 0.28 ) }
    dend_51 { pt3dadd( -114.663, 47.7894, -58.0704, 0.28 ) }
    dend_51 { pt3dadd( -116.339, 49.2337, -58.6936, 0.83 ) }
    dend_51 { pt3dadd( -117.83, 50.7129, -59.3596, 0.28 ) }
    dend_51 { pt3dadd( -120.031, 53.199, -60.5227, 0.55 ) }
    dend_51 { pt3dadd( -123.072, 57.0162, -62.3039, 0.28 ) }
    dend_51 { pt3dadd( -124.459, 58.8309, -63.1344, 0.83 ) }
    dend_51 { pt3dadd( -126.658, 61.7118, -64.4725, 0.28 ) }
    dend_51 { pt3dadd( -127.383, 62.6233, -64.8841, 0.55 ) }
    dend_51 { pt3dadd( -128.999, 64.5764, -65.6797, 0.28 ) }
    dend_51 { pt3dadd( -129.378, 65.0155, -65.852, 0.83 ) }
    dend_51 { pt3dadd( -132.694, 68.5074, -66.8219, 0.28 ) }
    dend_51 { pt3dadd( -133.406, 69.2017, -66.9214, 0.55 ) }
    dend_51 { pt3dadd( -135.874, 71.4919, -66.9013, 0.55 ) }
    dend_51 { pt3dadd( -136.332, 71.911, -66.8749, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 88/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -43.5289, 21.7223, -21.5569, 0.55 ) }
    dend_50 { pt3dadd( -47.0145, 19.6282, -22.0346, 0.55 ) }
    dend_50 { pt3dadd( -53.7205, 16.1372, -23.8405, 0.83 ) }
    dend_50 { pt3dadd( -60.1525, 13.0965, -26.0036, 0.83 ) }
    dend_50 { pt3dadd( -63.7181, 11.5852, -27.4876, 0.55 ) }
    dend_50 { pt3dadd( -65.6215, 10.833, -28.3679, 0.55 ) }
    dend_50 { pt3dadd( -71.2378, 8.72686, -31.3681, 0.55 ) }
    dend_50 { pt3dadd( -78.3653, 6.64128, -35.8343, 0.28 ) }
    dend_50 { pt3dadd( -79.5441, 6.3957, -36.846, 0.55 ) }
    dend_50 { pt3dadd( -82.468, 5.95003, -39.9293, 0.28 ) }
    dend_50 { pt3dadd( -83.6103, 5.78355, -41.1836, 0.83 ) }
    dend_50 { pt3dadd( -86.6101, 5.19664, -44.5958, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( -87.8826, 4.75259, -45.9679, 0.55 ) }
    dend_50 { pt3dadd( -92.1902, 2.63652, -49.3816, 0.28 ) }
    dend_50 { pt3dadd( -93.9146, 1.57952, -50.5418, 0.83 ) }
    dend_50 { pt3dadd( -96.7548, -0.560806, -52.0154, 0.28 ) }
    dend_50 { pt3dadd( -97.7948, -1.43209, -52.3783, 0.83 ) }
    dend_50 { pt3dadd( -102.582, -5.84106, -53.1077, 0.28 ) }
    dend_50 { pt3dadd( -103.71, -7.02791, -53.2691, 0.83 ) }
    dend_50 { pt3dadd( -104.818, -8.31436, -53.3495, 0.28 ) }
    dend_50 { pt3dadd( -105.297, -8.91905, -53.3845, 0.83 ) }
    dend_50 { pt3dadd( -107.62, -11.9781, -53.6012, 0.28 ) }
    dend_50 { pt3dadd( -108.803, -13.5046, -53.8914, 0.55 ) }
    dend_50 { pt3dadd( -111.912, -17.0371, -56.0825, 0.28 ) }
    dend_50 { pt3dadd( -112.149, -17.2943, -56.2749, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 13/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -10.4248, -14.9756, 7.91492, 0.83 ) }
    dend_43 { pt3dadd( -11.5512, -15.7351, 8.5166, 0.83 ) }
    dend_43 { pt3dadd( -14.5032, -18.191, 9.95204, 0.55 ) }
    dend_43 { pt3dadd( -18.5854, -21.1386, 11.6577, 0.55 ) }
    dend_43 { pt3dadd( -20.8084, -22.5983, 12.527, 0.55 ) }
    dend_43 { pt3dadd( -22.0075, -23.2892, 13.0006, 0.55 ) }
    dend_43 { pt3dadd( -23.8033, -24.1849, 13.6921, 0.83 ) }
    dend_43 { pt3dadd( -30.1469, -26.967, 16.0433, 0.55 ) }
    dend_43 { pt3dadd( -35.6976, -29.2689, 17.9576, 0.55 ) }
    dend_43 { pt3dadd( -40.3386, -31.143, 19.2704, 0.55 ) }
    dend_43 { pt3dadd( -43.3738, -32.2376, 20.0778, 0.55 ) }
    dend_43 { pt3dadd( -47.7691, -33.6911, 21.1338, 0.55 ) }
    dend_43 { pt3dadd( -50.4586, -34.5143, 21.6642, 0.55 ) }
    dend_43 { pt3dadd( -53.8812, -35.7373, 22.2033, 0.55 ) }
    dend_43 { pt3dadd( -56.8005, -37.2591, 22.5783, 0.55 ) }
    dend_43 { pt3dadd( -58.4011, -38.3504, 22.6639, 0.28 ) }
    dend_43 { pt3dadd( -59.3183, -39.1014, 22.6856, 0.55 ) }
    dend_43 { pt3dadd( -61.2543, -40.7727, 22.6271, 0.55 ) }
    dend_43 { pt3dadd( -66.1189, -44.9391, 22.5485, 0.55 ) }
    dend_43 { pt3dadd( -68.8106, -47.1576, 22.6354, 0.55 ) }
    dend_43 { pt3dadd( -71.5738, -49.6176, 22.7301, 0.28 ) }
    dend_43 { pt3dadd( -72.8775, -50.85, 22.7448, 0.55 ) }
    dend_43 { pt3dadd( -75.6208, -53.375, 22.7016, 0.55 ) }
    dend_43 { pt3dadd( -84.7784, -59.6168, 26.6946, 0.55 ) }
    dend_43 { pt3dadd( -94.2793, -63.9926, 32.0657, 0.55 ) }
    dend_43 { pt3dadd( -102.999, -68.2827, 38.6974, 0.55 ) }
    dend_43 { pt3dadd( -111.377, -73.4653, 45.1522, 0.55 ) }
    dend_43 { pt3dadd( -121.204, -78.4816, 49.2225, 0.55 ) }
    dend_43 { pt3dadd( -131.931, -83.0929, 50.5191, 0.55 ) }
    dend_43 { pt3dadd( -142.605, -87.9366, 49.7836, 0.55 ) }
    dend_43 { pt3dadd( -153.722, -91.7156, 49.6609, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 44/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -10.4248, -14.9756, 7.91492, 0.83 ) }
    dend_42 { pt3dadd( -10.5132, -18.4021, 6.39577, 0.83 ) }
    dend_42 { pt3dadd( -10.7945, -21.1311, 4.96711, 0.83 ) }
    dend_42 { pt3dadd( -11.206, -24.2346, 3.14335, 0.83 ) }
    dend_42 { pt3dadd( -11.9632, -28.3525, 0.53818, 0.83 ) }
    dend_42 { pt3dadd( -12.4259, -31.5982, -1.61124, 0.83 ) }
    dend_42 { pt3dadd( -12.6575, -33.6048, -2.93376, 0.83 ) }
    dend_42 { pt3dadd( -12.9278, -37.1754, -5.33247, 0.83 ) }
    dend_42 { pt3dadd( -13.2122, -40.2878, -7.48736, 0.83 ) }
    dend_42 { pt3dadd( -13.8605, -45.406, -10.9518, 0.83 ) }
    dend_42 { pt3dadd( -14.9342, -51.2782, -14.7686, 0.28 ) }
    dend_42 { pt3dadd( -15.2235, -52.692, -15.5912, 0.83 ) }
    dend_42 { pt3dadd( -15.4818, -54.0037, -16.276, 0.83 ) }
    dend_42 { pt3dadd( -15.7928, -55.5641, -16.988, 0.55 ) }
    dend_42 { pt3dadd( -16.1924, -56.8768, -17.52, 0.28 ) }
    dend_42 { pt3dadd( -16.7803, -58.114, -17.9565, 0.55 ) }
    dend_42 { pt3dadd( -17.2505, -58.7576, -18.1805, 0.28 ) }
    dend_42 { pt3dadd( -18.1032, -59.9079, -18.6373, 0.83 ) }
    dend_42 { pt3dadd( -20.6025, -63.4339, -20.1761, 0.28 ) }
    dend_42 { pt3dadd( -21.1221, -64.2407, -20.6217, 0.55 ) }
    dend_42 { pt3dadd( -21.6638, -65.1391, -21.168, 0.28 ) }
    dend_42 { pt3dadd( -21.8933, -65.5871, -21.4728, 0.55 ) }
    dend_42 { pt3dadd( -22.4265, -66.7552, -22.3294, 0.28 ) }
    dend_42 { pt3dadd( -22.5691, -67.1685, -22.6637, 0.83 ) }
    dend_42 { pt3dadd( -23.0666, -69.4828, -24.6363, 0.55 ) }
    dend_42 { pt3dadd( -23.2197, -70.5474, -25.5795, 0.83 ) }
    dend_42 { pt3dadd( -23.3882, -72.5762, -27.4901, 0.28 ) }
    dend_42 { pt3dadd( -23.4032, -72.991, -27.9025, 0.55 ) }
    dend_42 { pt3dadd( -23.3701, -74.873, -29.9094, 0.28 ) }
    dend_42 { pt3dadd( -23.3034, -75.891, -30.9469, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 74/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -18.6659, -34.3415, 13.218, 0.55 ) }
    dend_39 { pt3dadd( -22.1082, -37.3991, 11.2133, 0.55 ) }
    dend_39 { pt3dadd( -27.7786, -42.3409, 8.17626, 0.55 ) }
    dend_39 { pt3dadd( -29.4903, -43.7981, 7.31588, 0.55 ) }
    dend_39 { pt3dadd( -33.6726, -47.4135, 5.38322, 0.28 ) }
    dend_39 { pt3dadd( -36.1534, -49.5662, 4.30516, 0.55 ) }
    dend_39 { pt3dadd( -38.0684, -51.2578, 3.48741, 0.28 ) }
    dend_39 { pt3dadd( -39.9828, -52.9257, 2.77002, 0.28 ) }
    dend_39 { pt3dadd( -40.7847, -53.6265, 2.55321, 0.55 ) }
    dend_39 { pt3dadd( -43.7476, -56.171, 1.96529, 0.28 ) }
    dend_39 { pt3dadd( -44.2908, -56.6892, 1.92736, 0.83 ) }
    dend_39 { pt3dadd( -46.5437, -59.1355, 1.87861, 0.28 ) }
    dend_39 { pt3dadd( -47.7673, -60.5589, 1.89626, 0.55 ) }
    dend_39 { pt3dadd( -49.388, -62.5532, 1.95677, 0.28 ) }
    dend_39 { pt3dadd( -50.9402, -64.5326, 2.05669, 0.55 ) }
    dend_39 { pt3dadd( -53.0843, -67.2966, 2.29954, 0.55 ) }
    dend_39 { pt3dadd( -53.2893, -67.574, 2.33274, 0.83 ) }
    dend_39 { pt3dadd( -54.6382, -69.495, 2.68074, 0.28 ) }
    dend_39 { pt3dadd( -54.8183, -69.7759, 2.70795, 0.83 ) }
    dend_39 { pt3dadd( -64.1378, -77.6876, 2.20085, 0.83 ) }
    dend_39 { pt3dadd( -74.7361, -83.5269, 0.790811, 0.83 ) }
    dend_39 { pt3dadd( -85.0586, -89.9811, 0.0563558, 0.83 ) }
    dend_39 { pt3dadd( -94.776, -97.2592, 1.43811, 0.83 ) }
    dend_39 { pt3dadd( -104.126, -104.269, 4.99286, 0.83 ) }
    dend_39 { pt3dadd( -114.359, -108.532, 9.98964, 0.83 ) }
    dend_39 { pt3dadd( -124.256, -112.684, 15.702, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( -135.167, -115.405, 20.276, 0.83 ) }
    dend_39 { pt3dadd( -146.179, -119.574, 23.2991, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 2/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -18.6659, -34.3415, 13.218, 0.83 ) }
    dend_38 { pt3dadd( -18.8203, -36.8719, 14.6009, 0.83 ) }
    dend_38 { pt3dadd( -19.2291, -40.448, 16.609, 0.83 ) }
    dend_38 { pt3dadd( -19.3491, -42.2462, 17.6783, 0.83 ) }
    dend_38 { pt3dadd( -19.5909, -46.5792, 20.1958, 0.83 ) }
    dend_38 { pt3dadd( -19.6119, -47.1752, 20.5325, 0.83 ) }
    dend_38 { pt3dadd( -19.6645, -49.7445, 21.8757, 0.83 ) }
    dend_38 { pt3dadd( -19.7598, -52.5427, 23.2528, 0.83 ) }
    dend_38 { pt3dadd( -19.9813, -56.6547, 25.2748, 0.83 ) }
    dend_38 { pt3dadd( -20.098, -60.3029, 27.0155, 0.83 ) }
    dend_38 { pt3dadd( -20.0853, -61.9196, 27.7124, 0.83 ) }
    dend_38 { pt3dadd( -20.006, -66.0322, 29.4309, 0.83 ) }
    dend_38 { pt3dadd( -19.8934, -70.1827, 31.1388, 0.83 ) }
    dend_38 { pt3dadd( -18.9228, -77.3281, 37.15, 0.83 ) }
    dend_38 { pt3dadd( -18.4743, -84.1977, 43.5162, 0.83 ) }
    dend_38 { pt3dadd( -17.7465, -91.7163, 49.1102, 0.83 ) }
    dend_38 { pt3dadd( -15.1843, -98.8044, 54.7119, 0.83 ) }
    dend_38 { pt3dadd( -11.5644, -105.531, 60.1553, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -6.69275, -74.4168, 20.0006, 0.28 ) }
    dend_36 { pt3dadd( -9.21989, -77.4873, 20.3645, 0.28 ) }
    dend_36 { pt3dadd( -9.70187, -78.0729, 20.4339, 0.83 ) }
    dend_36 { pt3dadd( -12.2657, -81.188, 20.803, 0.28 ) }
    dend_36 { pt3dadd( -20.4382, -93.1481, 22.4723, 0.28 ) }
    dend_36 { pt3dadd( -25.7368, -106.654, 24.2462, 0.28 ) }
    dend_36 { pt3dadd( -28.6923, -120.656, 27.1932, 0.28 ) }
    dend_36 { pt3dadd( -31.131, -133.879, 32.8013, 0.28 ) }
    dend_36 { pt3dadd( -32.4543, -148.203, 35.3324, 0.28 ) }
    dend_36 { pt3dadd( -32.7693, -162.698, 37.0695, 0.28 ) }
    dend_36 { pt3dadd( -36.6877, -176.767, 37.8616, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 31/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -6.69275, -74.4168, 20.0006, 0.55 ) }
    dend_35 { pt3dadd( -7.28878, -76.7439, 19.5694, 0.55 ) }
    dend_35 { pt3dadd( -7.65267, -78.1647, 19.3061, 0.55 ) }
    dend_35 { pt3dadd( -7.98144, -79.4484, 19.0683, 0.28 ) }
    dend_35 { pt3dadd( -10.9, -87.7807, 16.1509, 0.28 ) }
    dend_35 { pt3dadd( -13.4714, -96.6566, 14.9044, 0.28 ) }
    dend_35 { pt3dadd( -17.408, -104.997, 13.5397, 0.28 ) }
    dend_35 { pt3dadd( -20.4075, -113.484, 11.1704, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 39/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.89965, -13.0355, 1.11322, 1.94 ) }
    dend_16 { pt3dadd( 9.88029, -17.0467, 0.550063, 1.94 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 41/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.89965, -13.0355, 1.11322, 1.11 ) }
    dend_15 { pt3dadd( 7.65476, -17.7855, -11.3571, 1.11 ) }
    dend_15 { pt3dadd( 7.83089, -18.2035, -12.7541, 1.11 ) }
    dend_15 { pt3dadd( 8.96381, -20.356, -20.0372, 1.11 ) }
    dend_15 { pt3dadd( 9.53896, -21.1599, -22.9151, 1.11 ) }
    dend_15 { pt3dadd( 10.5613, -22.4634, -27.8256, 1.11 ) }
    dend_15 { pt3dadd( 11.7871, -24.0093, -33.7331, 1.11 ) }
    dend_15 { pt3dadd( 13.0921, -25.7385, -40.8234, 1.11 ) }
    dend_15 { pt3dadd( 13.6522, -26.3769, -44.2992, 0.83 ) }
    dend_15 { pt3dadd( 14.4564, -27.1492, -50.2248, 0.83 ) }
    dend_15 { pt3dadd( 14.733, -27.4972, -52.5567, 0.55 ) }
    dend_15 { pt3dadd( 14.8175, -27.6591, -53.5663, 0.83 ) }
    dend_15 { pt3dadd( 15.0107, -28.5272, -58.5002, 1.39 ) }
    dend_15 { pt3dadd( 14.8251, -29.6268, -64.8086, 1.11 ) }
    dend_15 { pt3dadd( 14.6701, -30.2688, -68.7169, 0.55 ) }
    dend_15 { pt3dadd( 14.5756, -30.6391, -70.8191, 0.83 ) }
    dend_15 { pt3dadd( 14.5065, -32.0488, -78.4844, 0.55 ) }
    dend_15 { pt3dadd( 14.578, -32.6468, -81.475, 0.28 ) }
    dend_15 { pt3dadd( 14.6933, -32.9139, -82.7798, 0.55 ) }
    dend_15 { pt3dadd( 15.5738, -34.9294, -92.4027, 0.28 ) }
    dend_15 { pt3dadd( 15.7014, -35.1587, -93.532, 0.55 ) }
    dend_15 { pt3dadd( 16.0758, -35.6737, -96.0909, 0.28 ) }
    dend_15 { pt3dadd( 16.6502, -36.4214, -99.1523, 1.39 ) }
    dend_15 { pt3dadd( 18.7951, -38.6889, -109.816, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 65/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.18398, -10.8262, -2.62982, 1.11 ) }
    dend_13 { pt3dadd( 7.27337, -10.7227, -4.93105, 1.11 ) }
    dend_13 { pt3dadd( 6.62086, -10.5712, -6.59127, 0.83 ) }
    dend_13 { pt3dadd( 6.02239, -10.3398, -8.55498, 0.83 ) }
    dend_13 { pt3dadd( 4.49371, -9.69256, -14.1547, 0.83 ) }
    dend_13 { pt3dadd( 3.49326, -9.27634, -18.6478, 0.83 ) }
    dend_13 { pt3dadd( 3.2301, -9.14873, -20.0168, 0.83 ) }
    dend_13 { pt3dadd( 2.91286, -9.00606, -21.8333, 0.83 ) }
    dend_13 { pt3dadd( 1.29248, -8.00154, -31.0382, 0.83 ) }
    dend_13 { pt3dadd( 0.522344, -7.3347, -35.5867, 0.83 ) }
    dend_13 { pt3dadd( -0.117335, -6.61101, -39.1083, 0.83 ) }
    dend_13 { pt3dadd( -0.703937, -6.04508, -41.6409, 0.28 ) }
    dend_13 { pt3dadd( -1.1728, -5.65672, -43.2923, 1.39 ) }
    dend_13 { pt3dadd( -2.50576, -4.59799, -47.2632, 0.55 ) }
    dend_13 { pt3dadd( -4.56119, -3.00918, -52.4294, 0.55 ) }
    dend_13 { pt3dadd( -6.03482, -1.90308, -55.7738, 1.11 ) }
    dend_13 { pt3dadd( -9.93039, 0.813102, -63.763, 0.55 ) }
    dend_13 { pt3dadd( -10.9647, 1.45278, -65.833, 0.55 ) }
    dend_13 { pt3dadd( -12.4605, 2.26261, -68.8971, 1.11 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 8.18398, -10.8262, -2.62982, 1.11 ) }
    dend_10 { pt3dadd( 9.85801, -11.4733, -4.1303, 1.11 ) }
    dend_10 { pt3dadd( 13.2076, -12.3027, -6.6852, 1.11 ) }
    dend_10 { pt3dadd( 15.2128, -12.8263, -8.26903, 0.83 ) }
    dend_10 { pt3dadd( 16.3323, -13.1628, -9.26892, 0.83 ) }
    dend_10 { pt3dadd( 17.75, -13.6092, -10.903, 1.11 ) }
    dend_10 { pt3dadd( 19.3634, -14.1064, -13.0743, 1.11 ) }
    dend_10 { pt3dadd( 21.2797, -14.6062, -15.8417, 1.11 ) }
    dend_10 { pt3dadd( 22.9167, -14.9722, -18.341, 0.83 ) }
    dend_10 { pt3dadd( 24.8343, -15.4519, -21.5999, 1.39 ) }
    dend_10 { pt3dadd( 27.5606, -16.3302, -26.8892, 0.83 ) }
    dend_10 { pt3dadd( 29.3775, -17.1494, -31.002, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 27.9801, 10.4859, 27.8604, 0.55 ) }
    dend_6 { pt3dadd( 36.9265, 13.8284, 33.0379, 0.55 ) }
    dend_6 { pt3dadd( 46.7075, 16.4889, 36.9214, 0.55 ) }
    dend_6 { pt3dadd( 56.1154, 19.4832, 41.4427, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_6 { pt3dadd( 65.2425, 20.8732, 47.1288, 0.55 ) }
    dend_6 { pt3dadd( 74.5364, 21.1112, 52.7007, 0.55 ) }
    dend_6 { pt3dadd( 83.0437, 22.9698, 59.1668, 0.55 ) }
    dend_6 { pt3dadd( 90.6692, 24.4718, 66.7281, 0.55 ) }
    dend_6 { pt3dadd( 98.098, 24.9494, 74.6064, 0.55 ) }
    dend_6 { pt3dadd( 104.132, 24.2362, 83.5837, 0.55 ) }
    dend_6 { pt3dadd( 111.676, 22.6484, 91.2107, 0.55 ) }
    dend_6 { pt3dadd( 119.602, 23.0883, 98.5911, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 27.9801, 10.4859, 27.8604, 0.55 ) }
    dend_5 { pt3dadd( 35.0978, 11.2158, 32.6774, 0.55 ) }
    dend_5 { pt3dadd( 42.4471, 12.4861, 37.0215, 0.55 ) }
    dend_5 { pt3dadd( 50.1561, 12.8103, 40.8757, 0.55 ) }
    dend_5 { pt3dadd( 58.0079, 13.8061, 44.3201, 0.55 ) }
    dend_5 { pt3dadd( 66.0369, 16.1309, 46.5658, 0.55 ) }
    dend_5 { pt3dadd( 74.2759, 16.8579, 49.0355, 0.55 ) }
    dend_5 { pt3dadd( 82.7192, 16.9291, 50.8077, 0.55 ) }
    dend_5 { pt3dadd( 90.9997, 15.2157, 52.4866, 0.55 ) }
    dend_5 { pt3dadd( 98.9325, 12.777, 54.8315, 0.55 ) }
    dend_5 { pt3dadd( 106.45, 9.92112, 57.9595, 0.55 ) }
    dend_5 { pt3dadd( 113.391, 5.67788, 60.895, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_16 (entry count 20/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 9.88029, -17.0467, 0.550063, 0.83 ) }
    dend_30 { pt3dadd( 11.615, -16.294, 1.03186, 0.83 ) }
    dend_30 { pt3dadd( 16.3399, -13.7009, 2.22407, 0.83 ) }
    dend_30 { pt3dadd( 17.7537, -12.7509, 2.72293, 0.83 ) }
    dend_30 { pt3dadd( 19.6877, -11.3172, 3.55767, 0.83 ) }
    dend_30 { pt3dadd( 24.479, -7.422, 6.11758, 0.83 ) }
    dend_30 { pt3dadd( 26.7917, -5.52561, 7.4566, 0.83 ) }
    dend_30 { pt3dadd( 28.4796, -4.05557, 8.53022, 0.83 ) }
    dend_30 { pt3dadd( 31.7523, -1.02879, 10.809, 0.83 ) }
    dend_30 { pt3dadd( 34.6868, 1.51594, 12.7578, 0.55 ) }
    dend_30 { pt3dadd( 38.3803, 4.28318, 15.0489, 0.55 ) }
    dend_30 { pt3dadd( 40.3529, 5.44021, 16.1604, 0.55 ) }
    dend_30 { pt3dadd( 42.6597, 6.46106, 17.2922, 0.55 ) }
    dend_30 { pt3dadd( 45.1101, 7.25342, 18.2208, 0.55 ) }
    dend_30 { pt3dadd( 48.4284, 8.12181, 19.148, 0.55 ) }
    dend_30 { pt3dadd( 51.614, 8.75568, 19.9246, 0.55 ) }
    dend_30 { pt3dadd( 53.7587, 9.06332, 20.3772, 0.55 ) }
    dend_30 { pt3dadd( 56.9728, 9.42281, 21.0878, 0.55 ) }
    dend_30 { pt3dadd( 60.1917, 9.80338, 21.8706, 0.55 ) }
    dend_30 { pt3dadd( 62.6261, 10.0842, 22.5426, 0.55 ) }
    dend_30 { pt3dadd( 65.3165, 10.5085, 23.4432, 0.55 ) }
    dend_30 { pt3dadd( 66.8784, 10.7966, 23.9519, 0.55 ) }
    dend_30 { pt3dadd( 68.8256, 11.2274, 24.5757, 0.55 ) }
    dend_30 { pt3dadd( 72.2847, 12.226, 25.6268, 0.55 ) }
    dend_30 { pt3dadd( 77.2511, 13.9984, 27.1082, 0.55 ) }
    dend_30 { pt3dadd( 79.2695, 14.7691, 27.632, 0.55 ) }
    dend_30 { pt3dadd( 82.985, 16.3658, 28.5053, 0.55 ) }
    dend_30 { pt3dadd( 85.013, 17.3308, 28.8996, 0.55 ) }
    dend_30 { pt3dadd( 88.8166, 19.2511, 29.4851, 0.55 ) }
    dend_30 { pt3dadd( 91.0279, 20.3686, 29.756, 0.55 ) }
    dend_30 { pt3dadd( 94.4127, 22.2079, 30.1006, 0.55 ) }
    dend_30 { pt3dadd( 95.819, 22.9765, 30.2213, 0.55 ) }
    dend_30 { pt3dadd( 97.8741, 24.2424, 30.438, 0.55 ) }
    dend_30 { pt3dadd( 100.404, 25.6485, 30.6638, 0.55 ) }
    dend_30 { pt3dadd( 101.598, 26.306, 30.7629, 0.55 ) }
    dend_30 { pt3dadd( 102.915, 26.9938, 30.8711, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 56/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 9.88029, -17.0467, 0.550063, 1.39 ) }
    dend_17 { pt3dadd( 14.1462, -22.6321, -1.46072, 1.39 ) }
    dend_17 { pt3dadd( 17.5211, -27.0508, -3.05153, 1.39 ) }
    dend_17 { pt3dadd( 20.1821, -30.535, -4.30586, 1.11 ) }
    dend_17 { pt3dadd( 24.2309, -35.836, -6.21428, 1.11 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 29.3775, -17.1494, -31.002, 0.55 ) }
    dend_12 { pt3dadd( 28.1677, -15.7218, -36.3748, 0.55 ) }
    dend_12 { pt3dadd( 27.7989, -15.222, -37.9531, 0.28 ) }
    dend_12 { pt3dadd( 27.7473, -15.1416, -38.176, 0.83 ) }
    dend_12 { pt3dadd( 27.3679, -14.501, -39.7847, 0.28 ) }
    dend_12 { pt3dadd( 27.2292, -14.285, -40.3429, 0.55 ) }
    dend_12 { pt3dadd( 26.8995, -13.7822, -41.6424, 0.28 ) }
    dend_12 { pt3dadd( 26.7624, -13.5669, -42.1299, 0.55 ) }
    dend_12 { pt3dadd( 26.2597, -12.8773, -43.8909, 0.28 ) }
    dend_12 { pt3dadd( 26.1625, -12.7474, -44.2364, 0.55 ) }
    dend_12 { pt3dadd( 25.1895, -11.5082, -47.6636, 0.28 ) }
    dend_12 { pt3dadd( 25.1456, -11.4495, -47.8216, 0.55 ) }
    dend_12 { pt3dadd( 24.5744, -10.6772, -49.8106, 0.28 ) }
    dend_12 { pt3dadd( 24.4725, -10.5321, -50.152, 0.83 ) }
    dend_12 { pt3dadd( 23.9264, -9.68621, -51.9013, 0.28 ) }
    dend_12 { pt3dadd( 23.8121, -9.48344, -52.2741, 0.55 ) }
    dend_12 { pt3dadd( 22.5998, -7.02062, -56.0402, 0.28 ) }
    dend_12 { pt3dadd( 22.5364, -6.88721, -56.2342, 0.55 ) }
    dend_12 { pt3dadd( 22.2717, -6.35868, -57.0811, 0.28 ) }
    dend_12 { pt3dadd( 22.1836, -6.18242, -57.371, 0.55 ) }
    dend_12 { pt3dadd( 21.6986, -5.25452, -58.9447, 0.28 ) }
    dend_12 { pt3dadd( 21.5598, -4.99953, -59.4027, 0.55 ) }
    dend_12 { pt3dadd( 21.1902, -4.44612, -60.6201, 0.28 ) }
    dend_12 { pt3dadd( 20.0219, -2.81891, -64.7988, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 85/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 29.3775, -17.1494, -31.002, 0.55 ) }
    dend_11 { pt3dadd( 32.6953, -17.1596, -36.2826, 0.55 ) }
    dend_11 { pt3dadd( 36.4997, -17.4005, -41.8815, 1.39 ) }
    dend_11 { pt3dadd( 37.034, -17.4357, -42.5851, 1.39 ) }
    dend_11 { pt3dadd( 38.2687, -17.5147, -44.0964, 0.55 ) }
    dend_11 { pt3dadd( 42.1102, -17.755, -48.3938, 0.55 ) }
    dend_11 { pt3dadd( 44.5216, -17.9087, -50.9248, 0.55 ) }
    dend_11 { pt3dadd( 47.7708, -18.219, -53.7656, 0.55 ) }
    dend_11 { pt3dadd( 49.9811, -18.4944, -55.4475, 0.28 ) }
    dend_11 { pt3dadd( 50.6917, -18.5889, -55.9685, 0.55 ) }
    dend_11 { pt3dadd( 53.9758, -19.0247, -58.2294, 0.28 ) }
    dend_11 { pt3dadd( 54.6885, -19.1142, -58.6924, 0.55 ) }
    dend_11 { pt3dadd( 58.6473, -19.5668, -61.4701, 0.28 ) }
    dend_11 { pt3dadd( 60.1802, -19.6866, -62.7555, 0.28 ) }
    dend_11 { pt3dadd( 61.0683, -19.7318, -63.6584, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 61.4975, -19.7327, -64.1267, 0.55 ) }
    dend_11 { pt3dadd( 63.8338, -19.5759, -66.9703, 0.55 ) }
    dend_11 { pt3dadd( 66.5566, -19.1448, -70.4422, 0.28 ) }
    dend_11 { pt3dadd( 67.5339, -18.8758, -71.7314, 0.55 ) }
    dend_11 { pt3dadd( 69.1815, -18.3227, -74.0261, 0.28 ) }
    dend_11 { pt3dadd( 70.0503, -17.9907, -75.2281, 0.55 ) }
    dend_11 { pt3dadd( 71.1341, -17.5282, -76.6373, 0.55 ) }
    dend_11 { pt3dadd( 71.8827, -17.1082, -77.4415, 0.28 ) }
    dend_11 { pt3dadd( 72.2926, -16.8373, -77.8424, 0.55 ) }
    dend_11 { pt3dadd( 73.4446, -15.9923, -79.0295, 0.28 ) }
    dend_11 { pt3dadd( 73.8186, -15.6996, -79.4572, 0.55 ) }
    dend_11 { pt3dadd( 75.1736, -14.6498, -81.0274, 0.28 ) }
    dend_11 { pt3dadd( 76.3099, -13.7799, -82.32, 0.55 ) }
    dend_11 { pt3dadd( 78.4002, -12.2213, -84.7733, 0.28 ) }
    dend_11 { pt3dadd( 78.5689, -12.0938, -84.9753, 0.55 ) }
    dend_11 { pt3dadd( 80.5744, -10.5885, -87.349, 0.28 ) }
    dend_11 { pt3dadd( 81.4014, -9.97258, -88.3498, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 17/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 102.915, 26.9938, 30.8711, 0.55 ) }
    dend_32 { pt3dadd( 108.297, 21.6915, 40.4773, 0.55 ) }
    dend_32 { pt3dadd( 110.975, 19.0538, 45.2561, 0.55 ) }
    dend_32 { pt3dadd( 115.777, 14.3239, 53.8254, 0.28 ) }
    dend_32 { pt3dadd( 122.465, 8.09977, 65.3022, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 22/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 102.915, 26.9938, 30.8711, 0.28 ) }
    dend_31 { pt3dadd( 102.04, 28.8249, 34.4884, 0.28 ) }
    dend_31 { pt3dadd( 101.317, 30.3405, 37.4821, 0.55 ) }
    dend_31 { pt3dadd( 100.974, 33.5995, 46.3966, 0.55 ) }
    dend_31 { pt3dadd( 99.8329, 37.1237, 55.1471, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 24.2309, -35.836, -6.21428, 0.83 ) }
    dend_23 { pt3dadd( 27.7919, -38.3882, -7.40704, 0.83 ) }
    dend_23 { pt3dadd( 29.6739, -40.2595, -7.73342, 0.83 ) }
    dend_23 { pt3dadd( 30.8915, -41.9736, -7.78846, 0.83 ) }
    dend_23 { pt3dadd( 33.1756, -46.3754, -7.54802, 0.83 ) }
    dend_23 { pt3dadd( 35.8128, -52.3654, -6.99378, 0.83 ) }
    dend_23 { pt3dadd( 38.4391, -59.1246, -6.18064, 0.83 ) }
    dend_23 { pt3dadd( 40.8281, -67.0217, -4.93283, 0.83 ) }
    dend_23 { pt3dadd( 42.2312, -72.4974, -3.87229, 1.11 ) }
    dend_23 { pt3dadd( 43.2037, -77.2975, -2.78246, 0.83 ) }
    dend_23 { pt3dadd( 43.4244, -79.0875, -2.28496, 0.83 ) }
    dend_23 { pt3dadd( 43.527, -82.9129, -1.16461, 0.83 ) }
    dend_23 { pt3dadd( 43.2695, -87.8507, 0.00793019, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 40/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 24.2309, -35.836, -6.21428, 0.83 ) }
    dend_18 { pt3dadd( 26.4328, -36.008, -11.2469, 0.83 ) }
    dend_18 { pt3dadd( 26.797, -36.0364, -12.0792, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 43/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 43.2695, -87.8507, 0.00793019, 0.83 ) }
    dend_25 { pt3dadd( 43.2367, -89.8101, 0.18205, 0.83 ) }
    dend_25 { pt3dadd( 43.247, -91.1957, 0.209193, 0.83 ) }
    dend_25 { pt3dadd( 43.2857, -96.4207, 0.311518, 0.83 ) }
    dend_25 { pt3dadd( 43.3211, -101.205, 0.405222, 0.83 ) }
    dend_25 { pt3dadd( 43.3684, -107.596, 0.530394, 0.83 ) }
    dend_25 { pt3dadd( 43.4099, -113.196, 0.64007, 0.55 ) }
    dend_25 { pt3dadd( 43.4468, -119.061, 0.785103, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 43.2695, -87.8507, 0.00793019, 0.55 ) }
    dend_24 { pt3dadd( 46.4364, -88.887, -0.236273, 0.55 ) }
    dend_24 { pt3dadd( 51.5648, -90.7882, -0.849228, 0.55 ) }
    dend_24 { pt3dadd( 54.1368, -92.0707, -1.4669, 0.55 ) }
    dend_24 { pt3dadd( 55.7276, -93.0281, -1.87668, 0.55 ) }
    dend_24 { pt3dadd( 58.0074, -94.5724, -2.34613, 0.55 ) }
    dend_24 { pt3dadd( 59.8307, -95.9094, -2.66564, 0.55 ) }
    dend_24 { pt3dadd( 63.4966, -99.3927, -3.29894, 0.55 ) }
    dend_24 { pt3dadd( 67.5636, -104.424, -3.77813, 0.55 ) }
    dend_24 { pt3dadd( 70.1274, -108.309, -4.07504, 0.55 ) }
    dend_24 { pt3dadd( 73.3808, -114.047, -4.44057, 0.55 ) }
    dend_24 { pt3dadd( 74.5813, -116.44, -4.59114, 0.55 ) }
    dend_24 { pt3dadd( 78.4176, -125.102, -4.99005, 0.55 ) }
    dend_24 { pt3dadd( 80.1612, -129.744, -5.13333, 0.55 ) }
    dend_24 { pt3dadd( 81.1336, -132.7, -5.21917, 0.55 ) }
    dend_24 { pt3dadd( 81.8305, -135.298, -5.45934, 0.55 ) }
    dend_24 { pt3dadd( 82.4724, -137.942, -5.94766, 0.28 ) }
    dend_24 { pt3dadd( 82.6928, -138.655, -6.13293, 0.55 ) }
    dend_24 { pt3dadd( 83.931, -141.116, -7.0832, 0.28 ) }
    dend_24 { pt3dadd( 84.6436, -142.06, -7.57637, 0.55 ) }
    dend_24 { pt3dadd( 85.5078, -143.043, -8.11392, 0.55 ) }
    dend_24 { pt3dadd( 87.8301, -145.687, -9.42972, 0.55 ) }
    dend_24 { pt3dadd( 88.96, -146.836, -9.99892, 0.55 ) }
    dend_24 { pt3dadd( 90.8161, -148.544, -10.8925, 0.55 ) }
    dend_24 { pt3dadd( 93.9027, -151.242, -12.1823, 0.28 ) }
    dend_24 { pt3dadd( 94.4897, -151.711, -12.4092, 0.55 ) }
    dend_24 { pt3dadd( 97.916, -154.286, -13.612, 0.55 ) }
    dend_24 { pt3dadd( 102.206, -157.278, -14.954, 0.55 ) }
    dend_24 { pt3dadd( 107.066, -160.371, -16.3268, 0.28 ) }
    dend_24 { pt3dadd( 109.194, -161.523, -16.8135, 0.55 ) }
    dend_24 { pt3dadd( 112.108, -162.932, -17.2419, 0.28 ) }
    dend_24 { pt3dadd( 112.818, -163.221, -17.2775, 0.55 ) }
    dend_24 { pt3dadd( 115.067, -163.888, -17.0864, 0.28 ) }
    dend_24 { pt3dadd( 115.781, -164.061, -16.8684, 0.55 ) }
    dend_24 { pt3dadd( 118.871, -164.783, -15.4702, 0.28 ) }
    dend_24 { pt3dadd( 120.782, -165.227, -14.5686, 0.55 ) }
    dend_24 { pt3dadd( 123.768, -165.979, -12.8939, 0.28 ) }
    dend_24 { pt3dadd( 125.03, -166.331, -12.1465, 0.28 ) }
    dend_24 { pt3dadd( 126.932, -166.995, -10.906, 0.55 ) }
    dend_24 { pt3dadd( 131.044, -168.629, -8.03613, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 91/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 26.797, -36.0364, -12.0792, 0.83 ) }
    dend_22 { pt3dadd( 26.6798, -38.2298, -18.699, 0.83 ) }
    dend_22 { pt3dadd( 26.6678, -38.9191, -20.7201, 0.83 ) }
    dend_22 { pt3dadd( 26.8299, -40.0117, -24.2544, 0.55 ) }
    dend_22 { pt3dadd( 26.9245, -40.4963, -25.6776, 0.55 ) }
    dend_22 { pt3dadd( 27.1128, -41.1605, -27.5668, 0.55 ) }
    dend_22 { pt3dadd( 27.5151, -42.4088, -30.9107, 0.55 ) }
    dend_22 { pt3dadd( 27.9568, -43.9318, -34.0233, 0.55 ) }
    dend_22 { pt3dadd( 28.7484, -46.2349, -38.1106, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 29.2943, -47.593, -40.1632, 0.83 ) }
    dend_22 { pt3dadd( 30.0044, -49.3428, -42.5268, 0.28 ) }
    dend_22 { pt3dadd( 30.334, -50.1104, -43.5008, 1.11 ) }
    dend_22 { pt3dadd( 32.0087, -54.1829, -48.3027, 0.28 ) }
    dend_22 { pt3dadd( 32.5847, -55.665, -49.9413, 1.39 ) }
    dend_22 { pt3dadd( 34.8104, -61.7669, -56.3282, 0.28 ) }
    dend_22 { pt3dadd( 35.151, -62.6743, -57.309, 1.11 ) }
    dend_22 { pt3dadd( 35.9853, -64.9876, -59.7892, 0.28 ) }
    dend_22 { pt3dadd( 36.1657, -65.4414, -60.318, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 26.797, -36.0364, -12.0792, 0.83 ) }
    dend_19 { pt3dadd( 31.4444, -36.7645, -17.3554, 0.83 ) }
    dend_19 { pt3dadd( 34.3353, -37.2174, -20.6374, 0.83 ) }
    dend_19 { pt3dadd( 36.3413, -37.5317, -22.9149, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 43.4468, -119.061, 0.785103, 0.55 ) }
    dend_27 { pt3dadd( 44.6771, -119.963, -3.28502, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 15/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 43.4468, -119.061, 0.785103, 0.55 ) }
    dend_26 { pt3dadd( 44.8971, -122.07, 0.190226, 0.55 ) }
    dend_26 { pt3dadd( 46.0051, -124.207, -0.181236, 0.55 ) }
    dend_26 { pt3dadd( 47.2988, -126.724, -0.670378, 0.55 ) }
    dend_26 { pt3dadd( 48.3627, -128.809, -1.09425, 0.55 ) }
    dend_26 { pt3dadd( 50.4871, -132.775, -1.99244, 0.28 ) }
    dend_26 { pt3dadd( 51.1312, -133.964, -2.28562, 0.55 ) }
    dend_26 { pt3dadd( 52.4322, -136.14, -2.94508, 0.28 ) }
    dend_26 { pt3dadd( 53.3469, -137.646, -3.39455, 0.28 ) }
    dend_26 { pt3dadd( 53.7408, -138.253, -3.58443, 0.55 ) }
    dend_26 { pt3dadd( 55.8437, -141.438, -4.60744, 0.28 ) }
    dend_26 { pt3dadd( 56.2244, -142.055, -4.8278, 0.55 ) }
    dend_26 { pt3dadd( 57.5633, -144.156, -5.6384, 0.28 ) }
    dend_26 { pt3dadd( 58.0813, -144.897, -5.95776, 0.55 ) }
    dend_26 { pt3dadd( 60.2411, -147.803, -7.16977, 0.28 ) }
    dend_26 { pt3dadd( 60.6917, -148.352, -7.41314, 0.55 ) }
    dend_26 { pt3dadd( 61.5211, -149.334, -7.80402, 0.28 ) }
    dend_26 { pt3dadd( 61.979, -149.911, -7.98576, 0.55 ) }
    dend_26 { pt3dadd( 64.0304, -152.845, -8.48154, 0.28 ) }
    dend_26 { pt3dadd( 64.6002, -153.741, -8.52031, 0.55 ) }
    dend_26 { pt3dadd( 65.7704, -156.111, -8.25837, 0.28 ) }
    dend_26 { pt3dadd( 67.4225, -160.096, -7.55583, 0.55 ) }
    dend_26 { pt3dadd( 68.217, -162.766, -6.89271, 0.55 ) }
    dend_26 { pt3dadd( 69.0922, -167.265, -5.63162, 0.28 ) }
    dend_26 { pt3dadd( 69.2268, -168.678, -5.17358, 0.55 ) }
    dend_26 { pt3dadd( 69.406, -173.149, -3.68089, 0.28 ) }
    dend_26 { pt3dadd( 69.3813, -173.857, -3.43422, 0.55 ) }
    dend_26 { pt3dadd( 69.0973, -177.822, -2.13344, 0.28 ) }
    dend_26 { pt3dadd( 69.0085, -178.988, -1.8205, 0.28 ) }
    dend_26 { pt3dadd( 68.9595, -179.448, -1.72972, 0.55 ) }
    dend_26 { pt3dadd( 68.807, -181.673, -1.42415, 0.28 ) }
    dend_26 { pt3dadd( 68.8106, -181.721, -1.42203, 0.55 ) }
    dend_26 { pt3dadd( 69.2237, -185.203, -1.25806, 0.28 ) }
    dend_26 { pt3dadd( 69.5526, -186.672, -1.28234, 0.55 ) }
    dend_26 { pt3dadd( 71.8511, -198.565, -1.21563, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 50/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 36.3413, -37.5317, -22.9149, 0.55 ) }
    dend_21 { pt3dadd( 35.5491, -39.4124, -25.5475, 0.55 ) }
    dend_21 { pt3dadd( 35.2209, -40.4689, -27.1635, 0.55 ) }
    dend_21 { pt3dadd( 34.9852, -41.482, -28.6497, 0.28 ) }
    dend_21 { pt3dadd( 34.7822, -42.4266, -29.9985, 0.28 ) }
    dend_21 { pt3dadd( 34.7728, -42.8529, -30.6999, 0.83 ) }
    dend_21 { pt3dadd( 34.8418, -44.1152, -32.7537, 0.28 ) }
    dend_21 { pt3dadd( 34.9525, -44.6756, -33.6569, 0.83 ) }
    dend_21 { pt3dadd( 35.2149, -45.9769, -35.6506, 0.83 ) }
    dend_21 { pt3dadd( 35.3242, -46.5344, -36.4141, 0.83 ) }
    dend_21 { pt3dadd( 35.916, -49.7766, -40.4623, 0.28 ) }
    dend_21 { pt3dadd( 36.2375, -51.6263, -42.7052, 0.28 ) }
    dend_21 { pt3dadd( 36.365, -52.4812, -43.6859, 0.55 ) }
    dend_21 { pt3dadd( 36.4781, -53.2559, -44.5532, 0.55 ) }
    dend_21 { pt3dadd( 37.2193, -58.2147, -49.9831, 0.28 ) }
    dend_21 { pt3dadd( 37.2853, -58.7983, -50.5689, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 66/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 36.3413, -37.5317, -22.9149, 0.83 ) }
    dend_20 { pt3dadd( 39.9839, -39.3239, -26.7081, 0.83 ) }
    dend_20 { pt3dadd( 41.3298, -40.3833, -28.0907, 0.28 ) }
    dend_20 { pt3dadd( 41.9697, -41.1021, -28.7363, 0.83 ) }
    dend_20 { pt3dadd( 44.5573, -44.7398, -31.2526, 0.55 ) }
    dend_20 { pt3dadd( 45.27, -45.8458, -31.9111, 0.55 ) }
    dend_20 { pt3dadd( 46.6301, -47.9465, -33.2158, 0.28 ) }
    dend_20 { pt3dadd( 47.999, -50.2991, -34.5378, 0.55 ) }
    dend_20 { pt3dadd( 49.4332, -52.6859, -35.8958, 0.55 ) }
    dend_20 { pt3dadd( 51.8419, -56.5792, -38.1382, 0.28 ) }
    dend_20 { pt3dadd( 52.7129, -58.03, -38.9331, 1.11 ) }
    dend_20 { pt3dadd( 56.7035, -64.4351, -42.5095, 0.28 ) }
    dend_20 { pt3dadd( 57.6959, -65.9602, -43.3968, 1.11 ) }
    dend_20 { pt3dadd( 60.2455, -69.8753, -45.7072, 0.28 ) }
    dend_20 { pt3dadd( 60.795, -70.8013, -46.2011, 1.11 ) }
    dend_20 { pt3dadd( 63.3537, -75.8136, -48.5112, 0.28 ) }
    dend_20 { pt3dadd( 63.618, -76.4491, -48.7555, 0.83 ) }
    dend_20 { pt3dadd( 63.9827, -77.6411, -49.1169, 0.28 ) }
    dend_20 { pt3dadd( 64.2786, -79.0625, -49.5565, 0.55 ) }
    dend_20 { pt3dadd( 65.0869, -85.5878, -51.7668, 0.28 ) }
    dend_20 { pt3dadd( 65.1514, -86.4837, -52.1202, 0.55 ) }
    dend_20 { pt3dadd( 65.1771, -88.1507, -52.9888, 0.28 ) }
    dend_20 { pt3dadd( 65.247, -90.8528, -54.5862, 1.11 ) }
    dend_20 { pt3dadd( 65.3348, -93.866, -56.6163, 0.28 ) }
    dend_20 { pt3dadd( 65.4093, -94.9192, -57.4733, 0.83 ) }
    dend_20 { pt3dadd( 65.5271, -96.0634, -58.7035, 0.28 ) }
    dend_20 { pt3dadd( 66.0446, -98.2343, -61.121, 0.55 ) }
    dend_20 { pt3dadd( 66.7911, -99.753, -62.9534, 0.28 ) }
    dend_20 { pt3dadd( 66.8916, -99.8904, -63.1156, 0.83 ) }
    dend_20 { pt3dadd( 67.6416, -100.486, -63.9122, 0.28 ) }
    dend_20 { pt3dadd( 67.8603, -100.641, -64.0975, 0.55 ) }
    dend_20 { pt3dadd( 69.4603, -101.603, -65.1795, 0.28 ) }
    dend_20 { pt3dadd( 70.819, -102.6, -65.8534, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 44.6771, -119.963, -3.28502, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_29 { pt3dadd( 43.8103, -122.71, -7.7035, 0.55 ) }
    dend_29 { pt3dadd( 43.2705, -125.334, -12.0215, 0.55 ) }
    dend_29 { pt3dadd( 43.1892, -126.69, -14.3767, 0.55 ) }
    dend_29 { pt3dadd( 43.4022, -128.95, -18.0974, 0.55 ) }
    dend_29 { pt3dadd( 43.7985, -131.282, -21.7747, 0.28 ) }
    dend_29 { pt3dadd( 44.0575, -132.216, -23.2269, 0.55 ) }
    dend_29 { pt3dadd( 44.6444, -133.667, -25.3806, 0.28 ) }
    dend_29 { pt3dadd( 45.5643, -135.317, -27.7733, 1.39 ) }
    dend_29 { pt3dadd( 47.0027, -138.007, -31.3399, 0.28 ) }
    dend_29 { pt3dadd( 47.3176, -138.752, -32.2361, 0.83 ) }
    dend_29 { pt3dadd( 48.2363, -141.722, -35.5372, 0.28 ) }
    dend_29 { pt3dadd( 48.4407, -142.761, -36.6131, 0.55 ) }
    dend_29 { pt3dadd( 48.5144, -143.901, -37.6626, 0.55 ) }
    dend_29 { pt3dadd( 48.303, -148.286, -41.2319, 0.28 ) }
    dend_29 { pt3dadd( 48.0525, -150.283, -42.8331, 0.28 ) }
    dend_29 { pt3dadd( 47.747, -152.058, -44.1959, 0.55 ) }
    dend_29 { pt3dadd( 47.1301, -154.61, -45.9884, 0.28 ) }
    dend_29 { pt3dadd( 46.8803, -155.77, -46.8105, 0.55 ) }
    dend_29 { pt3dadd( 46.2876, -158.909, -48.8035, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 44.6771, -119.963, -3.28502, 0.55 ) }
    dend_28 { pt3dadd( 42.4463, -118.684, -4.32962, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_45 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_44 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_1 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_54 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_53 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_51 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_43 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_39 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_38 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_36 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_6 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_5 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_30 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_11 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_26 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_20 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_29 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_8 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_40 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_33 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_9 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_48 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_41 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_52 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_37 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_17 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_4 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_47 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_56 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_25 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_27 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_28 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_57 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_33, dend_33, dend_33, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, axon_0, axon_0, dend_57, dend_57, dend_56, dend_56, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_55 nseg = 5
    dend_45 nseg = 3
    dend_46 nseg = 3
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_7 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 7
    dend_54 nseg = 9
    dend_53 nseg = 5
    dend_51 nseg = 7
    dend_50 nseg = 5
    dend_43 nseg = 9
    dend_42 nseg = 3
    dend_39 nseg = 9
    dend_38 nseg = 5
    dend_36 nseg = 5
    dend_35 nseg = 3
    dend_15 nseg = 5
    dend_13 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 5
    dend_30 nseg = 5
    dend_11 nseg = 5
    dend_32 nseg = 3
    dend_23 nseg = 3
    dend_24 nseg = 7
    dend_22 nseg = 3
    dend_26 nseg = 5
    dend_20 nseg = 5
    dend_29 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_NBC_55cf872277_0_0


